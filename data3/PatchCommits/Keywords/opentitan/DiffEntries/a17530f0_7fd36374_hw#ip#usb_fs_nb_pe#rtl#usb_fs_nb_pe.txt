a17530f0a51524486c59b0c8d5295d6ded247ec2
[usbdev] USB device update from ETH repo
diff --git a/hw/ip/usb_fs_nb_pe/rtl/usb_fs_nb_pe.sv b/hw/ip/usb_fs_nb_pe/rtl/usb_fs_nb_pe.sv
index 801fa9098..09588c958 100644
--- a/hw/ip/usb_fs_nb_pe/rtl/usb_fs_nb_pe.sv
+++ b/hw/ip/usb_fs_nb_pe/rtl/usb_fs_nb_pe.sv
@@ -25,6 +25,10 @@ module usb_fs_nb_pe #(
   input                          link_reset_i,  // USB reset, sync to 48 MHz, active high
   input [6:0]                    dev_addr_i,
 
+  input  logic                   cfg_eop_single_bit_i, // 1: detect a single SE0 bit as EOP
+  input  logic                   tx_osc_test_mode_i, // Oscillator test mode (constantly output JK)
+  input  logic [NumOutEps-1:0]   data_toggle_clear_i, // Clear the data toggles for an EP
+
   ////////////////////////////
   // USB Endpoint Interface //
   ////////////////////////////
@@ -43,6 +47,7 @@ module usb_fs_nb_pe #(
   output logic [NumOutEps-1:0]   out_ep_setup_o,
   input [NumOutEps-1:0]          out_ep_full_i, // Cannot accept data
   input [NumOutEps-1:0]          out_ep_stall_i, // Stalled
+  input logic  [NumOutEps-1:0]   out_ep_iso_i, // Configure endpoint in isochronous mode
 
   // in endpoint interfaces
   output logic [3:0]             in_ep_current_o, // Other signals addressed to this ep
@@ -55,21 +60,26 @@ module usb_fs_nb_pe #(
   input [NumInEps-1:0]           in_ep_has_data_i, // Endpoint has data to supply
   input [7:0]                    in_ep_data_i, // Data for current get_addr
   input [NumInEps-1:0]           in_ep_data_done_i, // Set when out of data
+  input logic  [NumInEps-1:0]    in_ep_iso_i, // Configure endpoint in isochronous mode
 
   // sof interface
   output                         sof_valid_o,
   output [10:0]                  frame_index_o,
 
-  /////////////////////////
-  // USB TX/RX Interface //
-  /////////////////////////
-  output                         usb_p_tx_o,
-  output                         usb_n_tx_o,
+  // RX errors
+  output logic                   rx_crc_err_o,
+  output logic                   rx_pid_err_o,
+  output logic                   rx_bitstuff_err_o,
 
-  input                          usb_p_rx_i,
-  input                          usb_n_rx_i,
+  ///////////////////////////////////////
+  // USB TX/RX Interface (synchronous) //
+  ///////////////////////////////////////
+  input  logic                   usb_d_i,
+  input  logic                   usb_se0_i,
 
-  output                         usb_tx_en_o
+  output logic                   usb_d_o,
+  output logic                   usb_se0_o,
+  output logic                   usb_oe_o
 );
 
   import usb_consts_pkg::*;
@@ -100,101 +110,115 @@ module usb_fs_nb_pe #(
   logic tx_data_get;
   logic [7:0] tx_data;
 
+  logic usb_oe;
+
   // sof interface
   assign sof_valid_o = rx_pkt_end && rx_pkt_valid && (usb_pid_e'(rx_pid) == UsbPidSof);
   assign frame_index_o = rx_frame_num;
+  assign usb_oe_o = usb_oe;
 
   usb_fs_nb_in_pe #(
     .NumInEps           (NumInEps),
     .MaxInPktSizeByte   (MaxPktSizeByte)
   ) u_usb_fs_nb_in_pe (
-    .clk_48mhz_i        (clk_48mhz_i),
-    .rst_ni             (rst_ni),
-    .link_reset_i       (link_reset_i),
-    .dev_addr_i         (dev_addr_i),
+    .clk_48mhz_i           (clk_48mhz_i),
+    .rst_ni                (rst_ni),
+    .link_reset_i          (link_reset_i),
+    .dev_addr_i            (dev_addr_i),
 
     // endpoint interface
-    .in_ep_current_o    (in_ep_current_o),
-    .in_ep_rollback_o   (in_ep_rollback_o),
-    .in_ep_acked_o      (in_ep_acked_o),
-    .in_ep_get_addr_o   (in_ep_get_addr_o),
-    .in_ep_data_get_o   (in_ep_data_get_o),
-    .in_ep_newpkt_o     (in_ep_newpkt_o),
-    .in_ep_stall_i      (in_ep_stall_i),
-    .in_ep_has_data_i   (in_ep_has_data_i),
-    .in_ep_data_i       (in_ep_data_i),
-    .in_ep_data_done_i  (in_ep_data_done_i),
+    .in_ep_current_o       (in_ep_current_o),
+    .in_ep_rollback_o      (in_ep_rollback_o),
+    .in_ep_acked_o         (in_ep_acked_o),
+    .in_ep_get_addr_o      (in_ep_get_addr_o),
+    .in_ep_data_get_o      (in_ep_data_get_o),
+    .in_ep_newpkt_o        (in_ep_newpkt_o),
+    .in_ep_stall_i         (in_ep_stall_i),
+    .in_ep_has_data_i      (in_ep_has_data_i),
+    .in_ep_data_i          (in_ep_data_i),
+    .in_ep_data_done_i     (in_ep_data_done_i),
+    .in_ep_iso_i           (in_ep_iso_i),
+
+    .data_toggle_clear_i   (data_toggle_clear_i),
 
     // rx path
-    .rx_pkt_start_i     (rx_pkt_start),
-    .rx_pkt_end_i       (rx_pkt_end),
-    .rx_pkt_valid_i     (rx_pkt_valid),
-    .rx_pid_i           (rx_pid),
-    .rx_addr_i          (rx_addr),
-    .rx_endp_i          (rx_endp),
+    .rx_pkt_start_i        (rx_pkt_start),
+    .rx_pkt_end_i          (rx_pkt_end),
+    .rx_pkt_valid_i        (rx_pkt_valid),
+    .rx_pid_i              (rx_pid),
+    .rx_addr_i             (rx_addr),
+    .rx_endp_i             (rx_endp),
 
     // tx path
-    .tx_pkt_start_o     (in_tx_pkt_start),
-    .tx_pkt_end_i       (tx_pkt_end),
-    .tx_pid_o           (in_tx_pid),
-    .tx_data_avail_o    (tx_data_avail),
-    .tx_data_get_i      (tx_data_get),
-    .tx_data_o          (tx_data)
+    .tx_pkt_start_o        (in_tx_pkt_start),
+    .tx_pkt_end_i          (tx_pkt_end),
+    .tx_pid_o              (in_tx_pid),
+    .tx_data_avail_o       (tx_data_avail),
+    .tx_data_get_i         (tx_data_get),
+    .tx_data_o             (tx_data)
   );
 
   usb_fs_nb_out_pe #(
     .NumOutEps           (NumOutEps),
     .MaxOutPktSizeByte   (MaxPktSizeByte)
   ) u_usb_fs_nb_out_pe (
-    .clk_48mhz_i         (clk_48mhz_i),
-    .rst_ni              (rst_ni),
-    .link_reset_i        (link_reset_i),
-    .dev_addr_i          (dev_addr_i),
+    .clk_48mhz_i            (clk_48mhz_i),
+    .rst_ni                 (rst_ni),
+    .link_reset_i           (link_reset_i),
+    .dev_addr_i             (dev_addr_i),
 
     // endpoint interface
-    .out_ep_current_o    (out_ep_current_o),
-    .out_ep_data_put_o   (out_ep_data_put_o),
-    .out_ep_put_addr_o   (out_ep_put_addr_o),
-    .out_ep_data_o       (out_ep_data_o),
-    .out_ep_newpkt_o     (out_ep_newpkt_o),
-    .out_ep_acked_o      (out_ep_acked_o),
-    .out_ep_rollback_o   (out_ep_rollback_o),
-    .out_ep_setup_o      (out_ep_setup_o),
-    .out_ep_full_i       (out_ep_full_i),
-    .out_ep_stall_i      (out_ep_stall_i),
+    .out_ep_current_o       (out_ep_current_o),
+    .out_ep_data_put_o      (out_ep_data_put_o),
+    .out_ep_put_addr_o      (out_ep_put_addr_o),
+    .out_ep_data_o          (out_ep_data_o),
+    .out_ep_newpkt_o        (out_ep_newpkt_o),
+    .out_ep_acked_o         (out_ep_acked_o),
+    .out_ep_rollback_o      (out_ep_rollback_o),
+    .out_ep_setup_o         (out_ep_setup_o),
+    .out_ep_full_i          (out_ep_full_i),
+    .out_ep_stall_i         (out_ep_stall_i),
+    .out_ep_iso_i           (out_ep_iso_i),
+
+    .data_toggle_clear_i    (data_toggle_clear_i),
 
     // rx path
-    .rx_pkt_start_i      (rx_pkt_start),
-    .rx_pkt_end_i        (rx_pkt_end),
-    .rx_pkt_valid_i      (rx_pkt_valid),
-    .rx_pid_i            (rx_pid),
-    .rx_addr_i           (rx_addr),
-    .rx_endp_i           (rx_endp),
-    .rx_data_put_i       (rx_data_put),
-    .rx_data_i           (rx_data),
+    .rx_pkt_start_i         (rx_pkt_start),
+    .rx_pkt_end_i           (rx_pkt_end),
+    .rx_pkt_valid_i         (rx_pkt_valid),
+    .rx_pid_i               (rx_pid),
+    .rx_addr_i              (rx_addr),
+    .rx_endp_i              (rx_endp),
+    .rx_data_put_i          (rx_data_put),
+    .rx_data_i              (rx_data),
 
     // tx path
-    .tx_pkt_start_o      (out_tx_pkt_start),
-    .tx_pkt_end_i        (tx_pkt_end),
-    .tx_pid_o            (out_tx_pid)
+    .tx_pkt_start_o         (out_tx_pkt_start),
+    .tx_pkt_end_i           (tx_pkt_end),
+    .tx_pid_o               (out_tx_pid)
   );
 
   usb_fs_rx u_usb_fs_rx (
-    .clk_i           (clk_48mhz_i),
-    .rst_ni          (rst_ni),
-    .link_reset_i    (link_reset_i),
-    .dp_i            (usb_p_rx_i),
-    .dn_i            (usb_n_rx_i),
-    .bit_strobe_o    (bit_strobe),
-    .pkt_start_o     (rx_pkt_start),
-    .pkt_end_o       (rx_pkt_end),
-    .pid_o           (rx_pid),
-    .addr_o          (rx_addr),
-    .endp_o          (rx_endp),
-    .frame_num_o     (rx_frame_num),
-    .rx_data_put_o   (rx_data_put),
-    .rx_data_o       (rx_data),
-    .valid_packet_o  (rx_pkt_valid)
+    .clk_i                  (clk_48mhz_i),
+    .rst_ni                 (rst_ni),
+    .link_reset_i           (link_reset_i),
+    .cfg_eop_single_bit_i   (cfg_eop_single_bit_i),
+    .usb_d_i                (usb_d_i),
+    .usb_se0_i              (usb_se0_i),
+    .tx_en_i                (usb_oe),
+    .bit_strobe_o           (bit_strobe),
+    .pkt_start_o            (rx_pkt_start),
+    .pkt_end_o              (rx_pkt_end),
+    .pid_o                  (rx_pid),
+    .addr_o                 (rx_addr),
+    .endp_o                 (rx_endp),
+    .frame_num_o            (rx_frame_num),
+    .rx_data_put_o          (rx_data_put),
+    .rx_data_o              (rx_data),
+    .valid_packet_o         (rx_pkt_valid),
+    .crc_error_o            (rx_crc_err_o),
+    .pid_error_o            (rx_pid_err_o),
+    .bitstuff_error_o       (rx_bitstuff_err_o)
   );
 
   usb_fs_tx_mux u_usb_fs_tx_mux (
@@ -212,18 +236,19 @@ module usb_fs_nb_pe #(
   );
 
   usb_fs_tx u_usb_fs_tx (
-    .clk_i           (clk_48mhz_i),
-    .rst_ni          (rst_ni),
-    .link_reset_i    (link_reset_i),
-    .bit_strobe_i    (bit_strobe),
-    .oe_o            (usb_tx_en_o),
-    .dp_o            (usb_p_tx_o),
-    .dn_o            (usb_n_tx_o),
-    .pkt_start_i     (tx_pkt_start),
-    .pkt_end_o       (tx_pkt_end),
-    .pid_i           (tx_pid),
-    .tx_data_avail_i (tx_data_avail),
-    .tx_data_get_o   (tx_data_get),
-    .tx_data_i       (tx_data)
+    .clk_i                  (clk_48mhz_i),
+    .rst_ni                 (rst_ni),
+    .link_reset_i           (link_reset_i),
+    .tx_osc_test_mode_i     (tx_osc_test_mode_i),
+    .bit_strobe_i           (bit_strobe),
+    .usb_d_o                (usb_d_o),
+    .usb_se0_o              (usb_se0_o),
+    .usb_oe_o               (usb_oe),
+    .pkt_start_i            (tx_pkt_start),
+    .pkt_end_o              (tx_pkt_end),
+    .pid_i                  (tx_pid),
+    .tx_data_avail_i        (tx_data_avail),
+    .tx_data_get_o          (tx_data_get),
+    .tx_data_i              (tx_data)
   );  
 endmodule