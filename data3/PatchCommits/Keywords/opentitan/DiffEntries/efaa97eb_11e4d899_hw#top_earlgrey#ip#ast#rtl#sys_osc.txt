efaa97eb056324fec332981139a3370db290679a
[ast] AscenLint fixes and new analog typedef
diff --git a/hw/top_earlgrey/ip/ast/rtl/sys_osc.sv b/hw/top_earlgrey/ip/ast/rtl/sys_osc.sv
index aba1a02c0..c11a967d8 100644
--- a/hw/top_earlgrey/ip/ast/rtl/sys_osc.sv
+++ b/hw/top_earlgrey/ip/ast/rtl/sys_osc.sv
@@ -5,25 +5,26 @@
 // *Name: sys_osc
 // *Module Description: System Clock Oscilator
 //############################################################################
+`ifndef SYNTHESIS
 `timescale 1ns / 1ps
-
-module sys_osc #(
-`ifndef VERILATOR
-// synopsys translate_off
-  parameter time SYS_EN_RDLY = 5us
-// synopsys translate_on
+`else
+`ifndef PRIM_DEFAULT_IMPL
+`define PRIM_DEFAULT_IMPL prim_pkg::ImplGeneric
+`endif
 `endif
-) (
+
+module sys_osc (
   input vcore_pok_h_i,    // VCORE POK @3.3V
   input sys_en_i,         // System Source Clock Enable
   input sys_jen_i,        // System Source Clock Jitter Enable
   output logic sys_clk_o  // System Clock Output
 );
 
-// Behavioral Model
+`ifndef SYNTHESIS
+import ast_bhv_pkg::* ;
 
-`ifndef VERILATOR
-// synopsys translate_off
+// Behavioral Model
+////////////////////////////////////////
 localparam real SysClkPeriod = 10000; // 10000ps (100Mhz)
 
 logic clk, en_dly, en_osc, en_osc_re, en_osc_fe;
@@ -33,7 +34,7 @@ initial begin
   clk  = 1'b0;
   $display("\nSYS Clock Period: %0dps", SysClkPeriod);
   en_dly = 1'b0;  // to block init X
-  #(SYS_EN_RDLY+1) en_dly = 1'b1;
+  #(SYS_EN_RDLY + VCAON_POK_RDLY + 1) en_dly = 1'b1;
 end
 
 // Enable 5us RC Delay
@@ -43,8 +44,11 @@ assign en_osc_re = vcore_pok_h_i && sys_en_i && (sys_en_dly && en_dly);
 
 // Syncronize en_osc to clk FE for glitch free disable
 always_ff @( negedge clk or negedge vcore_pok_h_i ) begin
-  if ( !vcore_pok_h_i ) en_osc_fe <= 1'b0;
-  else                  en_osc_fe <= en_osc_re;
+  if ( !vcore_pok_h_i ) begin
+    en_osc_fe <= 1'b0;
+  end else begin
+    en_osc_fe <= en_osc_re;
+  end
 end
 
 assign en_osc = en_osc_re || en_osc_fe;  // EN -> 1 || EN -> 0
@@ -56,8 +60,36 @@ always begin
 end
 
 assign sys_clk_o = clk;
-// synopsys translate_on
-`endif
+`else  // of SYNTHESIS
+localparam prim_pkg::impl_e Impl = `PRIM_DEFAULT_IMPL;
+
+// SYNTHESUS/VERILATOR/LINTER/FPGA
+///////////////////////////////////////
+logic clk, en_osc, en_osc_re, en_osc_fe;
+// TODO: add sys_jen_i
+
+assign en_osc_re = vcore_pok_h_i && sys_en_i;
 
+// Syncronize en_osc to clk FE for glitch free disable
+always_ff @( negedge clk or negedge vcore_pok_h_i ) begin
+  if ( !vcore_pok_h_i ) begin
+    en_osc_fe <= 1'b0;
+  end else begin
+    en_osc_fe <= en_osc_re;
+  end
+end
+
+assign en_osc = en_osc_re || en_osc_fe;  // EN -> 1 || EN -> 0
+
+if (Impl == prim_pkg::ImplXilinx) begin : gen_xilinx
+  // FPGA Specific (place holder)
+  ///////////////////////////////////////
+  assign clk = (/*TODO*/ 1'b1) && en_osc;
+  assign sys_clk_o = clk;
+end else begin : gen_generic
+  assign clk = (/*TODO*/ 1'b1) && en_osc;
+  assign sys_clk_o = clk;
+end
+`endif
 
-endmodule  // of sys_osc
+endmodule : sys_osc