92e9ebb031c9c90db52a3f3985afa352285c8497
[aes] Use fresh, random intermediate masks in "noreuse" Canright S-Box
diff --git a/hw/ip/aes/pre_dv/aes_sbox_lec/aes_sbox_masked_wrapper.sv b/hw/ip/aes/pre_dv/aes_sbox_lec/aes_sbox_masked_wrapper.sv
index ab77472be..e544b7fa9 100644
--- a/hw/ip/aes/pre_dv/aes_sbox_lec/aes_sbox_masked_wrapper.sv
+++ b/hw/ip/aes/pre_dv/aes_sbox_lec/aes_sbox_masked_wrapper.sv
@@ -12,20 +12,23 @@ module aes_sbox_masked_wrapper (
 
   logic [7:0] in_data_m, out_data_m;
   logic [7:0] in_mask, out_mask;
+  logic [9:0] prd_masking;
 
   // The mask inputs are tied to constant values.
-  assign in_mask  = 8'hAA;
-  assign out_mask = 8'h55;
+  assign in_mask     = 8'hAA;
+  assign out_mask    = 8'h55;
+  assign prd_masking = 10'h2AA;
 
   // Mask input data
   assign in_data_m = data_i ^ in_mask;
 
   aes_sbox_masked aes_sbox_masked (
-    .op_i       ( op_i       ),
-    .data_i     ( in_data_m  ),
-    .in_mask_i  ( in_mask    ),
-    .out_mask_i ( out_mask   ),
-    .data_o     ( out_data_m )
+    .op_i          ( op_i        ),
+    .data_i        ( in_data_m   ),
+    .in_mask_i     ( in_mask     ),
+    .out_mask_i    ( out_mask    ),
+    .prd_masking_i ( prd_masking ),
+    .data_o        ( out_data_m  )
   );
 
   // Unmask output data