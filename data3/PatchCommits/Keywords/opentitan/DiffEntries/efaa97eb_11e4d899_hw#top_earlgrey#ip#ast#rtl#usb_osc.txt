efaa97eb056324fec332981139a3370db290679a
[ast] AscenLint fixes and new analog typedef
diff --git a/hw/top_earlgrey/ip/ast/rtl/usb_osc.sv b/hw/top_earlgrey/ip/ast/rtl/usb_osc.sv
index 2335f21d0..a7e7f1425 100644
--- a/hw/top_earlgrey/ip/ast/rtl/usb_osc.sv
+++ b/hw/top_earlgrey/ip/ast/rtl/usb_osc.sv
@@ -5,27 +5,26 @@
 // *Name: usb_osc
 // *Module Description: USB Clock Oscilator
 //############################################################################
+`ifndef SYNTHESIS
 `timescale 1ns / 1ps
-
-module usb_osc #(
-`ifndef VERILATOR
-// synopsys translate_off
-  parameter time USB_EN_RDLY = 5us,
-  parameter time USB_VAL_RDLY = 80ns,
-  parameter time USB_VAL_FDLY = 80ns
-// synopsys translate_on
+`else
+`ifndef PRIM_DEFAULT_IMPL
+`define PRIM_DEFAULT_IMPL prim_pkg::ImplGeneric
+`endif
 `endif
-) (
+
+module usb_osc (
   input vcore_pok_h_i,     // VCORE POK @3.3V
   input usb_en_i,          // USB Source Clock Enable
   input usb_ref_val_i,     // USB Reference Valid
   output logic usb_clk_o   // USB Clock Output
 );
 
-// Behavioral Model
+`ifndef SYNTHESIS
+import ast_bhv_pkg::* ;
 
-`ifndef VERILATOR
-// synopsys translate_off
+// Behavioral Model
+////////////////////////////////////////
 localparam real UsbClkPeriod = 1000000/48;  // ~20833.33333ps (48Mhz)
 logic clk, en_dly, en_osc, en_osc_re, en_osc_fe;
 shortreal drift;
@@ -37,7 +36,7 @@ initial begin
   rand32 = $urandom_range((9'd416), -(9'd416));  // +/-416ps (+/-2% max)
   $display("USB Clock Drift: %0dps", rand32);
   en_dly = 1'b0;  // to block init X
-  #(USB_EN_RDLY+1) en_dly = 1'b1;
+  #(USB_EN_RDLY + VCAON_POK_RDLY + 1) en_dly = 1'b1;
 end
 
 // Enable 5us RC Delay
@@ -47,8 +46,11 @@ assign en_osc_re = vcore_pok_h_i && usb_en_i && (usb_en_dly && en_dly);
 
 // Syncronize en_osc to clk FE for glitch free disable
 always_ff @( negedge clk or negedge vcore_pok_h_i ) begin
-  if ( !vcore_pok_h_i ) en_osc_fe <= 1'b0;
-  else                  en_osc_fe <= en_osc_re;
+  if ( !vcore_pok_h_i ) begin
+    en_osc_fe <= 1'b0;
+  end else begin
+    en_osc_fe <= en_osc_re;
+  end
 end
 
 assign en_osc = en_osc_re || en_osc_fe;  // EN -> 1 || EN -> 0
@@ -63,8 +65,35 @@ always begin
 end
 
 assign usb_clk_o = clk;
-// synopsys translate_on
-`endif
+`else  // of SYNTHESIS
+localparam prim_pkg::impl_e Impl = `PRIM_DEFAULT_IMPL;
+
+// SYNTHESUS/VERILATOR/LINTER/FPGA
+///////////////////////////////////////
+logic clk, en_osc, en_osc_re, en_osc_fe;
+
+assign en_osc_re = vcore_pok_h_i && usb_en_i;
 
+// Syncronize en_osc to clk FE for glitch free disable
+always_ff @( negedge clk or negedge vcore_pok_h_i ) begin
+  if ( !vcore_pok_h_i ) begin
+    en_osc_fe <= 1'b0;
+  end else begin
+    en_osc_fe <= en_osc_re;
+  end
+end
+
+assign en_osc = en_osc_re || en_osc_fe;  // EN -> 1 || EN -> 0
+
+if (Impl == prim_pkg::ImplXilinx) begin : gen_xilinx
+  // FPGA Specific (place holder)
+  ///////////////////////////////////////
+  assign clk = (/*TODO*/ 1'b1) && en_osc;
+  assign usb_clk_o = clk;
+end else begin : gen_generic
+  assign clk = (/*TODO*/ 1'b1) && en_osc;
+  assign usb_clk_o = clk;
+end
+`endif
 
-endmodule  // of usb_osc
+endmodule : usb_osc