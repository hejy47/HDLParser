efaa97eb056324fec332981139a3370db290679a
[ast] AscenLint fixes and new analog typedef
diff --git a/hw/top_earlgrey/ip/ast/rtl/io_osc.sv b/hw/top_earlgrey/ip/ast/rtl/io_osc.sv
index f234c092e..f770fe68b 100644
--- a/hw/top_earlgrey/ip/ast/rtl/io_osc.sv
+++ b/hw/top_earlgrey/ip/ast/rtl/io_osc.sv
@@ -5,24 +5,25 @@
 // *Name: io_osc
 // *Module Description: IO Clock Oscilator
 //############################################################################
-`timescale 1ns / 10ps
-
-module io_osc #(
-`ifndef VERILATOR
-// synopsys translate_off
-  parameter time IO_EN_RDLY = 5us
-// synopsys translate_on
+`ifndef SYNTHESIS
+`timescale 1ns / 1ps
+`else
+`ifndef PRIM_DEFAULT_IMPL
+`define PRIM_DEFAULT_IMPL prim_pkg::ImplGeneric
+`endif
 `endif
-) (
+
+module io_osc (
   input vcore_pok_h_i,   // VCORE POK @3.3V
   input io_en_i,         // IO Source Clock Enable
   output logic io_clk_o  // IO Clock Output
 );
 
-// Behavioral Model
+`ifndef SYNTHESIS
+import ast_bhv_pkg::* ;
 
-`ifndef VERILATOR
-// synopsys translate_off
+// Behavioral Model
+////////////////////////////////////////
 localparam real IoClkPeriod = 1000000/96;  // ~10416.666667ps (96Mhz)
 logic clk, en_dly, en_osc, en_osc_re, en_osc_fe;
 
@@ -30,7 +31,7 @@ initial begin
   clk = 1'b0;
   $display("\nIO Clock Period: %0dps", IoClkPeriod);
   en_dly = 1'b0;  // to block init X
-  #(IO_EN_RDLY+1) en_dly = 1'b1;
+  #(IO_EN_RDLY + VCAON_POK_RDLY + 1) en_dly = 1'b1;
 end
 
 // Enable 5us RC Delay
@@ -40,8 +41,11 @@ assign en_osc_re = vcore_pok_h_i && io_en_i && (io_en_dly && en_dly);
 
 // Syncronize en_osc to clk FE for glitch free disable
 always_ff @( negedge clk or negedge vcore_pok_h_i ) begin
-  if ( !vcore_pok_h_i ) en_osc_fe <= 1'b0;
-  else                  en_osc_fe <= en_osc_re;
+  if ( !vcore_pok_h_i ) begin
+    en_osc_fe <= 1'b0;
+  end else begin
+    en_osc_fe <= en_osc_re;
+  end
 end
 
 assign en_osc = en_osc_re || en_osc_fe;  // EN -> 1 || EN -> 0
@@ -51,8 +55,35 @@ always begin
 end
 
 assign io_clk_o = clk;
-// synopsys translate_on
-`endif
+`else  // of SYNTHESIS
+localparam prim_pkg::impl_e Impl = `PRIM_DEFAULT_IMPL;
+
+// SYNTHESUS/VERILATOR/LINTER/FPGA
+///////////////////////////////////////
+logic clk, en_osc, en_osc_re, en_osc_fe;
+
+assign en_osc_re = vcore_pok_h_i && io_en_i;
 
+// Syncronize en_osc to clk FE for glitch free disable
+always_ff @( negedge clk or negedge vcore_pok_h_i ) begin
+  if ( !vcore_pok_h_i ) begin
+    en_osc_fe <= 1'b0;
+  end else begin
+    en_osc_fe <= en_osc_re;
+  end
+end
+
+assign en_osc = en_osc_re || en_osc_fe;  // EN -> 1 || EN -> 0
+
+if (Impl == prim_pkg::ImplXilinx) begin : gen_xilinx
+  // FPGA Specific (place holder)
+  ///////////////////////////////////////
+  assign clk = (/*TODO*/ 1'b1) && en_osc;
+  assign io_clk_o = clk;
+end else begin : gen_generic
+  assign clk = (/*TODO*/ 1'b1) && en_osc;
+  assign io_clk_o = clk;
+end
+`endif
 
-endmodule  // of io_osc
+endmodule : io_osc