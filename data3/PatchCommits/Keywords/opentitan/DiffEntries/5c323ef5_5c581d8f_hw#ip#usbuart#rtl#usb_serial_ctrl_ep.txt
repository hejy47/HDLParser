5c323ef52ef42785286da49a3a2919a35dce75d9
[usb] Fix lint errors
diff --git a/hw/ip/usbuart/rtl/usb_serial_ctrl_ep.sv b/hw/ip/usbuart/rtl/usb_serial_ctrl_ep.sv
index 4e769fb8e..c1e70100a 100644
--- a/hw/ip/usbuart/rtl/usb_serial_ctrl_ep.sv
+++ b/hw/ip/usbuart/rtl/usb_serial_ctrl_ep.sv
@@ -4,8 +4,9 @@
 
 module usb_serial_ctrl_ep  #(
   parameter int unsigned MaxPktSizeByte = 32,
-  // localparam below here
-  parameter int unsigned PktW = $clog2(MaxPktSizeByte)
+
+  // Derived parameters
+  localparam int unsigned PktW = $clog2(MaxPktSizeByte)
 ) (
   input              clk_i,
   input              rst_ni,
@@ -122,7 +123,7 @@ module usb_serial_ctrl_ep  #(
     status_stage_end = 1'b0;
     send_zero_length_data_pkt = 1'b0;
 
-    case (ctrl_xfr_state)
+    unique case (ctrl_xfr_state)
       StIdle: begin
         if (setup_pkt_start) begin
           ctrl_xfr_state_next = StSetup;
@@ -225,6 +226,8 @@ module usb_serial_ctrl_ep  #(
 
   // Send setup data (which will be empty in case of a SET operation and
   // come from the ROM in the case of a GET)
+  usb_dscr_type_e dscr_type;
+  assign dcsr_type = usb_dscr_type_e'(wValue[15:8]);
   always_ff @(posedge clk_i or negedge rst_ni) begin
     if (!rst_ni) begin
       dev_addr_int <= '0;
@@ -234,39 +237,39 @@ module usb_serial_ctrl_ep  #(
       if (setup_stage_end) begin
         bytes_sent <= '0;
         // Command (bRequest) and sub-command (wValue) come from USB spec
-        case (bRequest)
+        unique case (bRequest)
           SetupGetDescriptor: begin
-            case (usb_dscr_type_e'(wValue[15:8]))
+            unique case (dcsr_type)
               DscrTypeDevice: begin
                 in_ep_stall_o <= 1'b0;
-                rom_addr    <= 'h00;
-                rom_length  <= 'h12;
+                rom_addr      <= 7'h00;
+                rom_length    <= 7'h12;
               end
 
               DscrTypeConfiguration: begin
                 in_ep_stall_o <= 1'b0;
-                rom_addr    <= 'h12;
-                rom_length  <= (9+9+7+7);
+                rom_addr      <= 7'h12;
+                rom_length    <= 7'h20; // 9+9+7+7
               end
 
               DscrTypeDevQual: begin
                 in_ep_stall_o <= 1'b1;
-                rom_addr   <= 'h00;
-                rom_length <= 'h00;
+                rom_addr      <= 7'h00;
+                rom_length    <= 7'h00;
               end
 
               default begin
                 in_ep_stall_o <= 1'b0;
-                rom_addr   <= 'h00;
-                rom_length <= 'h00;
+                rom_addr      <= 7'h00;
+                rom_length    <= 7'h00;
               end
             endcase
           end
 
           SetupSetAddress: begin
             in_ep_stall_o <= 1'b0;
-            rom_addr   <= 'h00;
-            rom_length <= 'h00;
+            rom_addr      <= 7'h00;
+            rom_length    <= 7'h00;
 
             // we need to save the address after the status stage ends
             // this is because the status stage token will still be using
@@ -277,19 +280,19 @@ module usb_serial_ctrl_ep  #(
 
           SetupSetConfiguration: begin
             in_ep_stall_o <= 1'b0;
-            rom_addr   <= 'h00;
-            rom_length <= 'h00;
+            rom_addr      <= 7'h00;
+            rom_length    <= 7'h00;
           end
 
           default begin
             in_ep_stall_o <= 1'b0;
-            rom_addr   <= 'h00;
-            rom_length <= 'h00;
+            rom_addr      <= 7'h00;
+            rom_length    <= 7'h00;
           end
         endcase
       end else if ((ctrl_xfr_state == StDataIn) && more_data_to_send && in_ep_data_get_i) begin
-        rom_addr <= rom_addr + 1'b1;
-        bytes_sent <= bytes_sent + 1'b1;
+        rom_addr   <= rom_addr + 7'b1;
+        bytes_sent <= bytes_sent + 8'b1;
       end else if (status_stage_end) begin
         bytes_sent <= '0;
         rom_addr <= '0;