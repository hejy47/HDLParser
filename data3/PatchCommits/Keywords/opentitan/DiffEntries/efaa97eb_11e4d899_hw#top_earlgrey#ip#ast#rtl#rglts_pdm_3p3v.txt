efaa97eb056324fec332981139a3370db290679a
[ast] AscenLint fixes and new analog typedef
diff --git a/hw/top_earlgrey/ip/ast/rtl/rglts_pdm_3p3v.sv b/hw/top_earlgrey/ip/ast/rtl/rglts_pdm_3p3v.sv
index 12906eb32..8cd7e91b8 100644
--- a/hw/top_earlgrey/ip/ast/rtl/rglts_pdm_3p3v.sv
+++ b/hw/top_earlgrey/ip/ast/rtl/rglts_pdm_3p3v.sv
@@ -5,21 +5,16 @@
 // *Name: rglts_pdm_3p3v
 // *Module Description: Regulators (MAIN & AON) & PDM Logic @3.3V
 //############################################################################
-`timescale 1ns / 10ps
-
-module rglts_pdm_3p3v
-#(
-`ifndef VERILATOR
-// synopsys translate_off
-  parameter time MRVCC_RDLY = 5us,
-  parameter time MRVCC_FDLY = 100ns,
-  parameter time MRPD_RDLY = 50us,
-  parameter time MRPD_FDLY = 1us
-// synopsys translate_on
+`ifdef SYNTHESIS
+`ifndef PRIM_DEFAULT_IMPL
+`define PRIM_DEFAULT_IMPL prim_pkg::ImplGeneric
 `endif
-) (
+`endif
+
+module rglts_pdm_3p3v (
   input vcc_pok_h_i,                     // VCC (3.3V) Exist @3.3v
   input vcmain_pok_h_i,                  // VCMAIN (1.1v) Exist @3.3v
+  input vcmain_pok_o_h_i,                // vcmain_pok_o signal (1.1v) @3.3v
   input clk_src_aon_h_i,                 // AON Clock @3.3v
   input main_pd_h_ni,                    // VCMAIN/Regulator Power Down @3.3v
   input [1:0] otp_power_seq_h_i,         // MMR0,24 in @3.3v
@@ -30,12 +25,16 @@ module rglts_pdm_3p3v
   output logic [1:0] otp_power_seq_h_o   // MMR0,24 masked by PDM, out (VCC)
 );
 
-import ast_pkg::*;
+`ifndef SYNTHESIS
+import ast_bhv_pkg::* ;
 
 // Behavioral Model
+///////////////////////////////////////
+// localparam time MPVCC_RDLY = 5us,
+//                 MPVCC_FDLY = 100ns,
+//                 MPPD_RDLY  = 50us,
+//                 MPPD_FDLY  = 1us;
 
-`ifndef VERILATOR
-// synopsys translate_off
 logic mr_vcc_dly, mr_pd_dly;
 
 // The initial is needed to clear the X of the delays at the start
@@ -47,51 +46,65 @@ initial begin
 end
 
 always_ff @( init_start, posedge vcc_pok_h_i, negedge vcc_pok_h_i ) begin
-  if ( init_start )
+  if ( init_start ) begin
     mr_vcc_dly <= 1'b0;
-  else if ( !init_start && vcc_pok_h_i )
-    mr_vcc_dly <= #(MRVCC_RDLY) vcc_pok_h_i;
-  else if ( !init_start && !vcc_pok_h_i )
-    mr_vcc_dly <= #(MRVCC_FDLY) vcc_pok_h_i;
+  end else if ( !init_start && vcc_pok_h_i ) begin
+    mr_vcc_dly <= #(MPVCC_RDLY) vcc_pok_h_i;
+  end else if ( !init_start && !vcc_pok_h_i ) begin
+    mr_vcc_dly <= #(MPVCC_FDLY) vcc_pok_h_i;
+  end
 end
 
 always_ff @( init_start, posedge main_pd_h_ni, negedge main_pd_h_ni ) begin
-  if ( init_start )
+  if ( init_start ) begin
     mr_pd_dly <= 1'b1;
-  else if ( !init_start && main_pd_h_ni && vcc_pok_h_i )
-    mr_pd_dly <= #(MRPD_RDLY) main_pd_h_ni && vcc_pok_h_i;
-  else if ( !init_start && !main_pd_h_ni && vcc_pok_h_i )
-    mr_pd_dly <= #(MRPD_FDLY) main_pd_h_ni && vcc_pok_h_i;
+  end else if ( !init_start && main_pd_h_ni && vcc_pok_h_i ) begin
+    mr_pd_dly <= #(MPPD_RDLY) main_pd_h_ni && vcc_pok_h_i;
+  end else if ( !init_start && !main_pd_h_ni && vcc_pok_h_i ) begin
+    mr_pd_dly <= #(MPPD_FDLY) main_pd_h_ni && vcc_pok_h_i;
+  end
 end
 
 assign main_pwr_dly_o = mr_vcc_dly && mr_pd_dly;
-// synopsys translate_on
-`endif
 
-gen_pok #(
-`ifndef VERILATOR
-// synopsys translate_off
-/*P*/ .POK_RDLY ( VCMAIN_POK_RDLY ),
-/*P*/ .POK_FDLY ( VCMAIN_POK_FDLY )
-// synopsys translate_on
-`endif
-) u_vcaon_pok (
-/*O*/ .gen_pok_o ( vcaon_pok_h_o )
+vcaon_pok u_vcaon_pok (
+  .vcaon_pok_o ( vcaon_pok_h_o )
 );
 
+`else  // of SYNTHESIS
+localparam prim_pkg::impl_e Impl = `PRIM_DEFAULT_IMPL;
+
+// SYNTHESUS/VERILATOR/LINTER/FPGA
+///////////////////////////////////////
+logic dummy0, dummy1;
+
+assign dummy0 = vcmain_pok_h_i && vcmain_pok_o_h_i && clk_src_aon_h_i && 1'b0;
+assign dummy1 = vcmain_pok_h_i || vcmain_pok_o_h_i || clk_src_aon_h_i || 1'b1;
+
+assign vcaon_pok_h_o  = dummy0 || !dummy0;  // 1'b1
+assign main_pwr_dly_o = dummy1 || !dummy1;  // 1'b1
+
+if (Impl == prim_pkg::ImplXilinx) begin : gen_xilinx
+  // FPGA Specifi (place holder)
+  ///////////////////////////////////////
+  // TODO
+end else begin : gen_generic
+  // TODO
+end
+`endif  // of SYNTHESIS
+
 
 ///////////////////////////////////////
 // Flash
 ///////////////////////////////////////
-assign flash_power_down_h_o  = ~(main_pd_h_ni && vcmain_pok_h_i);
+assign flash_power_down_h_o  = ~(main_pd_h_ni && vcmain_pok_o_h_i);
 assign flash_power_ready_h_o = vcc_pok_h_i;
 
 
 ///////////////////////////////////////
 // OTP
 ///////////////////////////////////////
-assign otp_power_seq_h_o[0] = flash_power_down_h_o && otp_power_seq_h_i[0];
-assign otp_power_seq_h_o[1] = flash_power_down_h_o || otp_power_seq_h_i[1];
-
+assign otp_power_seq_h_o[0] = !flash_power_down_h_o && otp_power_seq_h_i[0];
+assign otp_power_seq_h_o[1] =  flash_power_down_h_o || otp_power_seq_h_i[1];
 
-endmodule  // of rglts_pdm_3p3v
+endmodule : rglts_pdm_3p3v