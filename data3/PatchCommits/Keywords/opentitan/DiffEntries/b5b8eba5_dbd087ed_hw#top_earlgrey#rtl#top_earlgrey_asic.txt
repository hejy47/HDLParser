b5b8eba529a37cec202cd5ec5e2fd05a1e81a75c
[padring/top] Carry over pinout from bronze and align sim and FPGA tops
diff --git a/hw/top_earlgrey/rtl/top_earlgrey_asic.sv b/hw/top_earlgrey/rtl/top_earlgrey_asic.sv
index 7a4918b3c..bb4a17021 100644
--- a/hw/top_earlgrey/rtl/top_earlgrey_asic.sv
+++ b/hw/top_earlgrey/rtl/top_earlgrey_asic.sv
@@ -4,53 +4,93 @@
 
 module top_earlgrey_asic (
   // Clock and Reset
+  // TODO: remove the IO_CLK port once AST contains an oscillator model. a calibration clock
+  // will then be muxed in via another port.
   inout               IO_CLK,
   inout               IO_RST_N,
-  inout               IO_CLK_USB_48MHZ,
-  // JTAG interface
-  inout               IO_DPS0, // IO_JTCK,    IO_SDCK
-  inout               IO_DPS3, // IO_JTMS,    IO_SDCSB
-  inout               IO_DPS1, // IO_JTDI,    IO_SDSDI
-  inout               IO_DPS4, // IO_JTRST_N,
-  inout               IO_DPS5, // IO_JSRST_N,
-  inout               IO_DPS2, // IO_JTDO,    IO_SDO
-  inout               IO_DPS6, // JTAG=1,     SPI=0
-  inout               IO_DPS7, // BOOTSTRAP=1
-  // UART interface
-  inout               IO_URX,
-  inout               IO_UTX,
-  // USB interface
-  inout               IO_USB_DP0,
-  inout               IO_USB_DN0,
-  inout               IO_USB_SENSE0,
-  inout               IO_USB_DNPULLUP0,
-  inout               IO_USB_DPPULLUP0,
-  // GPIO x 16 interface
-  inout               IO_GP0,
-  inout               IO_GP1,
-  inout               IO_GP2,
-  inout               IO_GP3,
-  inout               IO_GP4,
-  inout               IO_GP5,
-  inout               IO_GP6,
-  inout               IO_GP7,
-  inout               IO_GP8,
-  inout               IO_GP9,
-  inout               IO_GP10,
-  inout               IO_GP11,
-  inout               IO_GP12,
-  inout               IO_GP13,
-  inout               IO_GP14,
-  inout               IO_GP15
+  // Bank A (VIOA domain)
+  inout               SPI_HOST_D0,
+  inout               SPI_HOST_D1,
+  inout               SPI_HOST_D2,
+  inout               SPI_HOST_D3,
+  inout               SPI_HOST_CLK,
+  inout               SPI_HOST_CS_L,
+  inout               SPI_DEV_D0,
+  inout               SPI_DEV_D1,
+  inout               SPI_DEV_D2,
+  inout               SPI_DEV_D3,
+  inout               SPI_DEV_CLK,
+  inout               SPI_DEV_CS_L,
+  inout               IOA0,  // MIO 0
+  inout               IOA1,  // MIO 1
+  inout               IOA2,  // MIO 2
+  inout               IOA3,  // MIO 3
+  inout               IOA4,  // MIO 4
+  inout               IOA5,  // MIO 5
+  // Bank B (VIOB domain)
+  inout               IOB0,  // MIO 6
+  inout               IOB1,  // MIO 7
+  inout               IOB2,  // MIO 8
+  inout               IOB3,  // MIO 9
+  inout               IOB4,  // MIO 10
+  inout               IOB5,  // MIO 11
+  inout               IOB6,  // MIO 12
+  inout               IOB7,  // MIO 13
+  inout               IOB8,  // MIO 14
+  inout               IOB9,  // MIO 15
+  inout               IOB10, // MIO 16
+  inout               IOB11, // MIO 17
+  // Bank C (VCC domain)
+  inout               IOC0,  // MIO 18
+  inout               IOC1,  // MIO 19
+  inout               IOC2,  // MIO 20
+  inout               IOC3,  // MIO 21
+  inout               IOC4,  // MIO 22
+  inout               IOC5,  // MIO 23
+  inout               IOC6,  // MIO 24
+  inout               IOC7,  // MIO 25
+  inout               IOC8,  // MIO 26
+  inout               IOC9,  // MIO 27
+  inout               IOC10, // MIO 28
+  inout               IOC11, // MIO 29
+  // Bank R (VCC domain)
+  inout               IOR0,  // MIO 30
+  inout               IOR1,  // MIO 31
+  inout               IOR2,  // MIO 32
+  inout               IOR3,  // MIO 33
+  inout               IOR4,  // MIO 34
+  inout               IOR5,  // MIO 35
+  inout               IOR6,  // MIO 36
+  inout               IOR7,  // MIO 37
+  inout               IOR8,  // MIO 38
+  inout               IOR9,  // MIO 39
+  inout               IOR10, // MIO 40
+  inout               IOR11, // MIO 41
+  inout               IOR12, // MIO 42
+  inout               IOR13, // MIO 43
+  // DCD (VCC domain)
+  inout               CC1,
+  inout               CC2,
+  // USB (VCC domain)
+  inout               USB_P,
+  inout               USB_N,
+  // FLASH
+  inout [3:0]         FLASH_TEST_MODE,
+  inout               FLASH_TEST_VOLT
+
 );
 
   import top_earlgrey_pkg::*;
 
+  ////////////////////////
+  // Signal definitions //
+  ////////////////////////
+
   //////////////////////
   // Padring Instance //
   //////////////////////
 
-  logic clk, clk_usb_48mhz, rst_n;
+  logic clk, rst_n;
   logic [pinmux_reg_pkg::NMioPads-1:0][pinmux_reg_pkg::AttrDw-1:0] mio_attr;
   logic [pinmux_reg_pkg::NDioPads-1:0][pinmux_reg_pkg::AttrDw-1:0] dio_attr;
   logic [pinmux_reg_pkg::NMioPads-1:0] mio_out_core, mio_out_padring;
@@ -62,70 +102,174 @@ module top_earlgrey_asic (
 
   // unused pad signals. need to hook these wires up since lint does not like module ports that are
   // tied to 1'bz.
-  wire unused_usbdev_se0, unused_usbdev_tx_mode, unused_usbdev_suspend, unused_usbdev_d;
-  wire [11:0] unused_mio;
+  wire unused_usbdev_se0, unused_usbdev_tx_mode, unused_usbdev_suspend;
+  wire unused_usbdev_d, unused_usbdev_aon_sense;
+  wire unused_usbdev_dp_pullup_en, unused_usbdev_dn_pullup_en;
+  wire unused_spi_device_s2, unused_spi_device_s3;
 
   padring #(
-    // MIOs 31:20 are currently not
-    // connected to pads and hence tied off
-    .ConnectMioIn  ( 32'h000FFFFF ),
-    .ConnectMioOut ( 32'h000FFFFF ),
+    // All MIOs are connected
+    .ConnectMioIn  ( 44'hFFF_FFFF_FFFF ),
+    .ConnectMioOut ( 44'hFFF_FFFF_FFFF ),
     // Tied off DIOs:
-    // 2: usbdev_d
-    // 3: usbdev_suspend
-    // 4: usbdev_tx_mode
-    // 7: usbdev_se
-    .ConnectDioIn  ( 15'h7F63 ),
-    .ConnectDioOut ( 15'h7F63 ),
-    // Pad types
-    .MioPadVariant ( '0 ),
-    .DioPadVariant ( '0 )
-  ) padring (
+    // 2-8 (USB)
+    .ConnectDioIn  ( 21'h1FFE03 ),
+    .ConnectDioOut ( 21'h1FFE03 ),
+    // MIO pad types
+    .MioPadVariant ( { // RBox
+                       2'd3, // IOR13   -- open drain
+                       2'd3, // IOR12   -- open drain
+                       2'd3, // IOR11   -- open drain
+                       2'd3, // IOR10   -- open drain
+                       2'd3, // IOR9    -- open drain
+                       2'd3, // IOR8    -- open drain
+                       2'd0, // IOR7    -- bidir
+                       2'd0, // IOR6    -- bidir
+                       2'd0, // IOR5    -- bidir
+                       2'd0, // IOR4    -- bidir
+                       2'd0, // IOR3    -- bidir
+                       2'd0, // IOR2    -- bidir
+                       2'd0, // IOR1    -- bidir
+                       2'd0, // IOR0    -- bidir
+                       // Bank C
+                       2'd3, // IOC11   -- open drain
+                       2'd3, // IOC10   -- open drain
+                       2'd3, // IOC9    -- open drain
+                       2'd3, // IOC8    -- open drain
+                       2'd0, // IOC7    -- bidir
+                       2'd0, // IOC6    -- bidir
+                       2'd0, // IOC5    -- bidir
+                       2'd0, // IOC4    -- bidir
+                       2'd0, // IOC3    -- bidir
+                       2'd0, // IOC2    -- bidir
+                       2'd0, // IOC1    -- bidir
+                       2'd0, // IOC0    -- bidir
+                       // Bank B
+                       2'd3, // IOB11   -- open drain
+                       2'd3, // IOB10   -- open drain
+                       2'd3, // IOB9    -- open drain
+                       2'd3, // IOB8    -- open drain
+                       2'd0, // IOB7    -- birid
+                       2'd0, // IOB6    -- birid
+                       2'd0, // IOB5    -- birid
+                       2'd0, // IOB4    -- birid
+                       2'd0, // IOB3    -- bidir
+                       2'd0, // IOB2    -- bidir
+                       2'd0, // IOB1    -- bidir
+                       2'd0, // IOB0    -- bidir
+                       // Bank A
+                       2'd3, // IOA5    -- open drain
+                       2'd3, // IOA4    -- open drain
+                       2'd0, // IOA3    -- bidir
+                       2'd0, // IOA2    -- bidir
+                       2'd0, // IOA1    -- bidir
+                       2'd0  // IOA0    -- bidir
+                      } ),
+    // DIO pad types
+    .DioPadVariant (  { 2'd1, // SPI_DEV_CLK    -- input only
+                        2'd1, // SPI_DEV_CS_L   -- input only
+                        2'd0, // SPI_DEV_D3     -- bidir
+                        2'd0, // SPI_DEV_D2     -- bidir
+                        2'd0, // SPI_DEV_D1     -- bidir
+                        2'd0, // SPI_DEV_D0     -- bidir
+                        2'd0, // SPI_HOST_CLK   -- bidir
+                        2'd0, // SPI_HOST_CS_L  -- bidir
+                        2'd0, // SPI_HOST_D3    -- bidir
+                        2'd0, // SPI_HOST_D2    -- bidir
+                        2'd0, // SPI_HOST_D1    -- bidir
+                        2'd0, // SPI_HOST_D0    -- bidir
+                        2'd0, // unused
+                        2'd0, // unused
+                        2'd0, // unused
+                        2'd0, // unused
+                        2'd0, // unused
+                        2'd0, // unused
+                        2'd0, // unused
+                        2'd2, // USB_P          -- tolerant
+                        2'd2  // USB_N          -- tolerant
+                      } )
+  ) u_padring (
     // Clk / Rst
     .clk_pad_i           ( IO_CLK           ),
-    .clk_usb_48mhz_pad_i ( IO_CLK_USB_48MHZ ),
     .rst_pad_ni          ( IO_RST_N         ),
     .clk_o               ( clk              ),
-    .clk_usb_48mhz_o     ( clk_usb_48mhz    ),
     .rst_no              ( rst_n            ),
+    .cc1_i               ( CC1              ),
+    .cc2_i               ( CC2              ),
+    // "special"
     // MIO Pads
-    .mio_pad_io          ( { unused_mio, // Note that 31:20 are currently not mapped
-                             IO_DPS5,    // Use GPIO19 to pass JTAG_SRST
-                             IO_DPS4,    // Use GPIO18 to pass JTAG_TRST
-                             IO_DPS7,    // Use GPIO17 to pass rom boot_strap indication
-                             IO_DPS6,    // Use GPIO16 to pass SPI/JTAG control flag
-                             IO_GP15,
-                             IO_GP14,
-                             IO_GP13,
-                             IO_GP12,
-                             IO_GP11,
-                             IO_GP10,
-                             IO_GP9,
-                             IO_GP8,
-                             IO_GP7,
-                             IO_GP6,
-                             IO_GP5,
-                             IO_GP4,
-                             IO_GP3,
-                             IO_GP2,
-                             IO_GP1,
-                             IO_GP0 } ),
+    .mio_pad_io          ( { // RBox
+                             IOR13, // MIO 43
+                             IOR12, // MIO 42
+                             IOR11, // MIO 41
+                             IOR10, // MIO 40
+                             IOR9,  // MIO 39
+                             IOR8,  // MIO 38
+                             IOR7,  // MIO 37
+                             IOR6,  // MIO 36
+                             IOR5,  // MIO 35
+                             IOR4,  // MIO 34
+                             IOR3,  // MIO 33
+                             IOR2,  // MIO 32
+                             IOR1,  // MIO 31
+                             IOR0,  // MIO 30
+                             // Bank C
+                             IOC11, // MIO 29
+                             IOC10, // MIO 28
+                             IOC9,  // MIO 27
+                             IOC8,  // MIO 26
+                             IOC7,  // MIO 25
+                             IOC6,  // MIO 24
+                             IOC5,  // MIO 23
+                             IOC4,  // MIO 22
+                             IOC3,  // MIO 21
+                             IOC2,  // MIO 20
+                             IOC1,  // MIO 19
+                             IOC0,  // MIO 18
+                             // Bank B
+                             IOB11, // MIO 17
+                             IOB10, // MIO 16
+                             IOB9,  // MIO 15
+                             IOB8,  // MIO 14
+                             IOB7,  // MIO 13
+                             IOB6,  // MIO 12
+                             IOB5,  // MIO 11
+                             IOB4,  // MIO 10
+                             IOB3,  // MIO 9
+                             IOB2,  // MIO 8
+                             IOB1,  // MIO 7
+                             IOB0,  // MIO 6
+                             // Bank A
+                             IOA5,  // MIO 5
+                             IOA4,  // MIO 4
+                             IOA3,  // MIO 3
+                             IOA2,  // MIO 2
+                             IOA1,  // MIO 1
+                             IOA0   // MIO 0
+                            } ),
     // DIO Pads
-    .dio_pad_io          ( { IO_DPS0, // SCK, JTAG_TCK
-                             IO_DPS3, // CSB, JTAG_TMS
-                             IO_DPS1, // SDI, JTAG_TDI
-                             IO_DPS2, // SDO, JTAG_TDO
-                             IO_URX,
-                             IO_UTX,
-                             IO_USB_SENSE0,
-                             unused_usbdev_se0, // usbdev_se0
-                             IO_USB_DPPULLUP0,
-                             IO_USB_DNPULLUP0,
-                             unused_usbdev_tx_mode, // usbdev_tx_mode
-                             unused_usbdev_suspend, // usbdev_suspend
-                             unused_usbdev_d,       // usbdev_d
-                             IO_USB_DP0,
-                             IO_USB_DN0 } ),
+    .dio_pad_io          ( { SPI_DEV_CLK,                 // cio_spi_device_sck_p2d
+                             SPI_DEV_CS_L,                // cio_spi_device_csb_p2d
+                             SPI_DEV_D3,                  // cio_spi_device_s_p2d[3]
+                             SPI_DEV_D2,                  // cio_spi_device_s_p2d[2]
+                             SPI_DEV_D1,                  // cio_spi_device_s_p2d[1]
+                             SPI_DEV_D0,                  // cio_spi_device_s_p2d[0]
+                             SPI_HOST_CLK,                // cio_spi_host0_sck_p2d
+                             SPI_HOST_CS_L,               // cio_spi_host0_csb_p2d
+                             SPI_HOST_D3,                 // cio_spi_host0_s_p2d[3]
+                             SPI_HOST_D2,                 // cio_spi_host0_s_p2d[2]
+                             SPI_HOST_D1,                 // cio_spi_host0_s_p2d[1]
+                             SPI_HOST_D0,                 // cio_spi_host0_s_p2d[0]
+                             unused_usbdev_aon_sense,     // cio_usbdev_aon_sense_p2d
+                             unused_usbdev_se0,           // cio_usbdev_aon_se0
+                             unused_usbdev_dp_pullup_en,  // cio_usbdev_aon_dp_pullup
+                             unused_usbdev_dn_pullup_en,  // cio_usbdev_aon_dn_pullup
+                             unused_usbdev_tx_mode,       // cio_usbdev_aon_tx_mode_se
+                             unused_usbdev_suspend,       // cio_usbdev_aon_suspend
+                             unused_usbdev_d,             // cio_usbdev_aon_d_p2d
+                             USB_P,                       // cio_usbdev_aon_dp_p2d
+                             USB_N                        // cio_usbdev_aon_dn_p2d
+                           } ),
     // Muxed IOs
     .mio_in_o            ( mio_in_padring   ),
     .mio_out_i           ( mio_out_padring  ),
@@ -139,6 +283,35 @@ module top_earlgrey_asic (
     .dio_attr_i          ( dio_attr         )
   );
 
+  ///////////////////////////////
+  // Differential USB Receiver //
+  ///////////////////////////////
+
+  logic usbdev_aon_usb_rx_enable;
+  logic usb_pullup_p_en;
+  logic usb_pullup_n_en;
+  logic usb_diff_input;
+
+  logic ast_usb_core_pok;
+  logic [31:0] ast_usb_calibration;
+  logic [ast_pkg::UsbCalibWidth-1:0] usb_io_pu_cal;
+
+  // TODO: overhaul these USB connections
+  assign usbdev_aon_usb_rx_enable = 1'b0;
+
+  prim_usb_diff_rx #(
+    .CalibW(ast_pkg::UsbCalibWidth)
+  ) u_prim_usb_diff_rx (
+    .input_pi      ( USB_P                    ),
+    .input_ni      ( USB_N                    ),
+    .input_en_i    ( usbdev_aon_usb_rx_enable ),
+    .core_pok_i    ( ast_usb_core_pok         ),
+    .pullup_p_en_i ( usb_pullup_p_en          ),
+    .pullup_n_en_i ( usb_pullup_n_en          ),
+    .calibration_i ( usb_io_pu_cal            ),
+    .input_o       ( usb_diff_input           )
+  );
+
   //////////////////////
   // JTAG Overlay Mux //
   //////////////////////
@@ -170,9 +343,16 @@ module top_earlgrey_asic (
     .TrstIdx        (                             18 ), // MIO 18
     .SrstIdx        (                             19 ), // MIO 19
     .TdiIdx         ( pinmux_reg_pkg::NMioPads +
-                      top_earlgrey_pkg::TopEarlgreyDioPinSpiDeviceSdi ),
+                      top_earlgrey_pkg::TopEarlgreyDioPinSpiDeviceSd0 ),
     .TdoIdx         ( pinmux_reg_pkg::NMioPads +
-                      top_earlgrey_pkg::TopEarlgreyDioPinSpiDeviceSdo )
+                      top_earlgrey_pkg::TopEarlgreyDioPinSpiDeviceSd1 ),
+    .UsbDpPuIdx     ( pinmux_reg_pkg::NMioPads +
+                      top_earlgrey_pkg::TopEarlgreyDioPinUsbdevDpPullup ),
+    .UsbDnPuIdx     ( pinmux_reg_pkg::NMioPads +
+                      top_earlgrey_pkg::TopEarlgreyDioPinUsbdevDnPullup ),
+    .UsbDIdx        ( pinmux_reg_pkg::NMioPads +
+                      top_earlgrey_pkg::TopEarlgreyDioPinUsbdevD ),
+    .ConnectUSB     (1)
   ) jtag_mux (
     // To JTAG inside core
     .jtag_tck_o   ( jtag_tck        ),
@@ -188,10 +368,13 @@ module top_earlgrey_asic (
     // To padring side
     .out_padring_o ( {dio_out_padring, mio_out_padring} ),
     .oe_padring_o  ( {dio_oe_padring , mio_oe_padring } ),
-    .in_padring_i  ( {dio_in_padring , mio_in_padring } )
+    .in_padring_i  ( {dio_in_padring , mio_in_padring } ),
+    // USB breakouts
+    .usb_pullup_p_en_o ( usb_pullup_p_en ),
+    .usb_pullup_n_en_o ( usb_pullup_n_en ),
+    .usb_diff_input_i  ( usb_diff_input  )
   );
 
-
   //////////////////////
   // AST              //
   //////////////////////
@@ -335,7 +518,7 @@ module top_earlgrey_asic (
     .clk_src_usb_o         ( ast_base_clks.clk_usb ),
     .clk_src_usb_val_o     ( ast_base_pwr.usb_clk_val ),
     // USB IO Pull-up Calibration Setting
-    .usb_io_pu_cal_o       ( ),
+    .usb_io_pu_cal_o       ( usb_io_pu_cal ),
     // adc
     // TODO: Connect to do adc_ctrl when instantiated
     .adc_pd_i              ( '0 ),
@@ -374,7 +557,7 @@ module top_earlgrey_asic (
     .ot_alert_ack_i        ( ast_alert_rsp.alerts_ack[OtSel]     ),
     .ot_alert_o            ( ast_alert_req.alerts[OtSel]         ),
     // dft
-    .dft_strap_test_i      ( '{valid: 1'b0, straps: 2'b00} ),
+    .dft_strap_test_i      ( '0               ),
     .lc_dft_en_i           ( lc_ctrl_pkg::Off ),
     // pad mux related
     //TODO: Connect to pinmux