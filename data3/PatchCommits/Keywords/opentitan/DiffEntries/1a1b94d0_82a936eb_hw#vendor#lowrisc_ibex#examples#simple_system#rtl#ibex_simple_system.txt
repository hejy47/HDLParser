1a1b94d01fd7022438e2bd651e48ad2d99e3abca
Update lowrisc_ibex to lowRISC/ibex@6b9165f
diff --git a/hw/vendor/lowrisc_ibex/examples/simple_system/rtl/ibex_simple_system.sv b/hw/vendor/lowrisc_ibex/examples/simple_system/rtl/ibex_simple_system.sv
index a37bd993c..06291ab78 100644
--- a/hw/vendor/lowrisc_ibex/examples/simple_system/rtl/ibex_simple_system.sv
+++ b/hw/vendor/lowrisc_ibex/examples/simple_system/rtl/ibex_simple_system.sv
@@ -2,6 +2,10 @@
 // Licensed under the Apache License, Version 2.0, see LICENSE for details.
 // SPDX-License-Identifier: Apache-2.0
 
+`ifndef RV32B
+  `define RV32B ibex_pkg::RV32BNone
+`endif
+
 /**
  * Ibex simple system
  *
@@ -19,15 +23,16 @@ module ibex_simple_system (
   input IO_RST_N
 );
 
-  parameter bit          PMPEnable       = 1'b0;
-  parameter int unsigned PMPGranularity  = 0;
-  parameter int unsigned PMPNumRegions   = 4;
-  parameter bit RV32E                    = 1'b0;
-  parameter bit RV32M                    = 1'b1;
-  parameter bit RV32B                    = 1'b0;
-  parameter bit BranchTargetALU          = 1'b0;
-  parameter bit WritebackStage           = 1'b0;
-  parameter     MultiplierImplementation = "fast";
+  parameter bit               PMPEnable                = 1'b0;
+  parameter int unsigned      PMPGranularity           = 0;
+  parameter int unsigned      PMPNumRegions            = 4;
+  parameter bit               RV32E                    = 1'b0;
+  parameter bit               RV32M                    = 1'b1;
+  parameter ibex_pkg::rv32b_e RV32B                    = `RV32B;
+  parameter bit               BranchTargetALU          = 1'b0;
+  parameter bit               WritebackStage           = 1'b0;
+  parameter                   MultiplierImplementation = "fast";
+  parameter                   SRAMInitFile             = "";
 
   logic clk_sys = 1'b0, rst_sys_n;
 
@@ -41,8 +46,8 @@ module ibex_simple_system (
     Timer
   } bus_device_e;
 
-  localparam NrDevices = 3;
-  localparam NrHosts = 1;
+  localparam int NrDevices = 3;
+  localparam int NrHosts = 1;
 
   // interrupts
   logic timer_irq;
@@ -194,7 +199,8 @@ module ibex_simple_system (
 
   // SRAM block for instruction and data storage
   ram_2p #(
-      .Depth(1024*1024/4)
+      .Depth(1024*1024/4),
+      .MemInitFile(SRAMInitFile)
     ) u_ram (
       .clk_i       (clk_sys),
       .rst_ni      (rst_sys_n),