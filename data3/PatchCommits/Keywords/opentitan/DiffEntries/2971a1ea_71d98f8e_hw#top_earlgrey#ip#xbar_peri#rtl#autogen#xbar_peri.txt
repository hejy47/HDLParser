2971a1ea44cb941c4fb58376e312c30617644192
[top] Top level updates
diff --git a/hw/top_earlgrey/ip/xbar_peri/rtl/autogen/xbar_peri.sv b/hw/top_earlgrey/ip/xbar_peri/rtl/autogen/xbar_peri.sv
index 64fff8214..379fc8415 100644
--- a/hw/top_earlgrey/ip/xbar_peri/rtl/autogen/xbar_peri.sv
+++ b/hw/top_earlgrey/ip/xbar_peri/rtl/autogen/xbar_peri.sv
@@ -7,8 +7,11 @@
 //
 // Interconnect
 // main
-//   -> s1n_17
-//     -> uart
+//   -> s1n_20
+//     -> uart0
+//     -> uart1
+//     -> uart2
+//     -> uart3
 //     -> gpio
 //     -> spi_device
 //     -> rv_timer
@@ -34,8 +37,14 @@ module xbar_peri (
   output tlul_pkg::tl_d2h_t tl_main_o,
 
   // Device interfaces
-  output tlul_pkg::tl_h2d_t tl_uart_o,
-  input  tlul_pkg::tl_d2h_t tl_uart_i,
+  output tlul_pkg::tl_h2d_t tl_uart0_o,
+  input  tlul_pkg::tl_d2h_t tl_uart0_i,
+  output tlul_pkg::tl_h2d_t tl_uart1_o,
+  input  tlul_pkg::tl_d2h_t tl_uart1_i,
+  output tlul_pkg::tl_h2d_t tl_uart2_o,
+  input  tlul_pkg::tl_d2h_t tl_uart2_i,
+  output tlul_pkg::tl_h2d_t tl_uart3_o,
+  input  tlul_pkg::tl_d2h_t tl_uart3_i,
   output tlul_pkg::tl_h2d_t tl_gpio_o,
   input  tlul_pkg::tl_d2h_t tl_gpio_i,
   output tlul_pkg::tl_h2d_t tl_spi_device_o,
@@ -78,119 +87,137 @@ module xbar_peri (
   logic unused_scanmode;
   assign unused_scanmode = scanmode_i;
 
-  tl_h2d_t tl_s1n_17_us_h2d ;
-  tl_d2h_t tl_s1n_17_us_d2h ;
+  tl_h2d_t tl_s1n_20_us_h2d ;
+  tl_d2h_t tl_s1n_20_us_d2h ;
 
 
-  tl_h2d_t tl_s1n_17_ds_h2d [16];
-  tl_d2h_t tl_s1n_17_ds_d2h [16];
+  tl_h2d_t tl_s1n_20_ds_h2d [19];
+  tl_d2h_t tl_s1n_20_ds_d2h [19];
 
   // Create steering signal
-  logic [4:0] dev_sel_s1n_17;
+  logic [4:0] dev_sel_s1n_20;
 
 
 
-  assign tl_uart_o = tl_s1n_17_ds_h2d[0];
-  assign tl_s1n_17_ds_d2h[0] = tl_uart_i;
+  assign tl_uart0_o = tl_s1n_20_ds_h2d[0];
+  assign tl_s1n_20_ds_d2h[0] = tl_uart0_i;
 
-  assign tl_gpio_o = tl_s1n_17_ds_h2d[1];
-  assign tl_s1n_17_ds_d2h[1] = tl_gpio_i;
+  assign tl_uart1_o = tl_s1n_20_ds_h2d[1];
+  assign tl_s1n_20_ds_d2h[1] = tl_uart1_i;
 
-  assign tl_spi_device_o = tl_s1n_17_ds_h2d[2];
-  assign tl_s1n_17_ds_d2h[2] = tl_spi_device_i;
+  assign tl_uart2_o = tl_s1n_20_ds_h2d[2];
+  assign tl_s1n_20_ds_d2h[2] = tl_uart2_i;
 
-  assign tl_rv_timer_o = tl_s1n_17_ds_h2d[3];
-  assign tl_s1n_17_ds_d2h[3] = tl_rv_timer_i;
+  assign tl_uart3_o = tl_s1n_20_ds_h2d[3];
+  assign tl_s1n_20_ds_d2h[3] = tl_uart3_i;
 
-  assign tl_usbdev_o = tl_s1n_17_ds_h2d[4];
-  assign tl_s1n_17_ds_d2h[4] = tl_usbdev_i;
+  assign tl_gpio_o = tl_s1n_20_ds_h2d[4];
+  assign tl_s1n_20_ds_d2h[4] = tl_gpio_i;
 
-  assign tl_pwrmgr_o = tl_s1n_17_ds_h2d[5];
-  assign tl_s1n_17_ds_d2h[5] = tl_pwrmgr_i;
+  assign tl_spi_device_o = tl_s1n_20_ds_h2d[5];
+  assign tl_s1n_20_ds_d2h[5] = tl_spi_device_i;
 
-  assign tl_rstmgr_o = tl_s1n_17_ds_h2d[6];
-  assign tl_s1n_17_ds_d2h[6] = tl_rstmgr_i;
+  assign tl_rv_timer_o = tl_s1n_20_ds_h2d[6];
+  assign tl_s1n_20_ds_d2h[6] = tl_rv_timer_i;
 
-  assign tl_clkmgr_o = tl_s1n_17_ds_h2d[7];
-  assign tl_s1n_17_ds_d2h[7] = tl_clkmgr_i;
+  assign tl_usbdev_o = tl_s1n_20_ds_h2d[7];
+  assign tl_s1n_20_ds_d2h[7] = tl_usbdev_i;
 
-  assign tl_ram_ret_o = tl_s1n_17_ds_h2d[8];
-  assign tl_s1n_17_ds_d2h[8] = tl_ram_ret_i;
+  assign tl_pwrmgr_o = tl_s1n_20_ds_h2d[8];
+  assign tl_s1n_20_ds_d2h[8] = tl_pwrmgr_i;
 
-  assign tl_otp_ctrl_o = tl_s1n_17_ds_h2d[9];
-  assign tl_s1n_17_ds_d2h[9] = tl_otp_ctrl_i;
+  assign tl_rstmgr_o = tl_s1n_20_ds_h2d[9];
+  assign tl_s1n_20_ds_d2h[9] = tl_rstmgr_i;
 
-  assign tl_lc_ctrl_o = tl_s1n_17_ds_h2d[10];
-  assign tl_s1n_17_ds_d2h[10] = tl_lc_ctrl_i;
+  assign tl_clkmgr_o = tl_s1n_20_ds_h2d[10];
+  assign tl_s1n_20_ds_d2h[10] = tl_clkmgr_i;
 
-  assign tl_sensor_ctrl_o = tl_s1n_17_ds_h2d[11];
-  assign tl_s1n_17_ds_d2h[11] = tl_sensor_ctrl_i;
+  assign tl_ram_ret_o = tl_s1n_20_ds_h2d[11];
+  assign tl_s1n_20_ds_d2h[11] = tl_ram_ret_i;
 
-  assign tl_alert_handler_o = tl_s1n_17_ds_h2d[12];
-  assign tl_s1n_17_ds_d2h[12] = tl_alert_handler_i;
+  assign tl_otp_ctrl_o = tl_s1n_20_ds_h2d[12];
+  assign tl_s1n_20_ds_d2h[12] = tl_otp_ctrl_i;
 
-  assign tl_nmi_gen_o = tl_s1n_17_ds_h2d[13];
-  assign tl_s1n_17_ds_d2h[13] = tl_nmi_gen_i;
+  assign tl_lc_ctrl_o = tl_s1n_20_ds_h2d[13];
+  assign tl_s1n_20_ds_d2h[13] = tl_lc_ctrl_i;
 
-  assign tl_ast_wrapper_o = tl_s1n_17_ds_h2d[14];
-  assign tl_s1n_17_ds_d2h[14] = tl_ast_wrapper_i;
+  assign tl_sensor_ctrl_o = tl_s1n_20_ds_h2d[14];
+  assign tl_s1n_20_ds_d2h[14] = tl_sensor_ctrl_i;
 
-  assign tl_sram_ctrl_ret_o = tl_s1n_17_ds_h2d[15];
-  assign tl_s1n_17_ds_d2h[15] = tl_sram_ctrl_ret_i;
+  assign tl_alert_handler_o = tl_s1n_20_ds_h2d[15];
+  assign tl_s1n_20_ds_d2h[15] = tl_alert_handler_i;
 
-  assign tl_s1n_17_us_h2d = tl_main_i;
-  assign tl_main_o = tl_s1n_17_us_d2h;
+  assign tl_nmi_gen_o = tl_s1n_20_ds_h2d[16];
+  assign tl_s1n_20_ds_d2h[16] = tl_nmi_gen_i;
+
+  assign tl_ast_wrapper_o = tl_s1n_20_ds_h2d[17];
+  assign tl_s1n_20_ds_d2h[17] = tl_ast_wrapper_i;
+
+  assign tl_sram_ctrl_ret_o = tl_s1n_20_ds_h2d[18];
+  assign tl_s1n_20_ds_d2h[18] = tl_sram_ctrl_ret_i;
+
+  assign tl_s1n_20_us_h2d = tl_main_i;
+  assign tl_main_o = tl_s1n_20_us_d2h;
 
   always_comb begin
     // default steering to generate error response if address is not within the range
-    dev_sel_s1n_17 = 5'd16;
-    if ((tl_s1n_17_us_h2d.a_address & ~(ADDR_MASK_UART)) == ADDR_SPACE_UART) begin
-      dev_sel_s1n_17 = 5'd0;
+    dev_sel_s1n_20 = 5'd19;
+    if ((tl_s1n_20_us_h2d.a_address & ~(ADDR_MASK_UART0)) == ADDR_SPACE_UART0) begin
+      dev_sel_s1n_20 = 5'd0;
+
+    end else if ((tl_s1n_20_us_h2d.a_address & ~(ADDR_MASK_UART1)) == ADDR_SPACE_UART1) begin
+      dev_sel_s1n_20 = 5'd1;
+
+    end else if ((tl_s1n_20_us_h2d.a_address & ~(ADDR_MASK_UART2)) == ADDR_SPACE_UART2) begin
+      dev_sel_s1n_20 = 5'd2;
+
+    end else if ((tl_s1n_20_us_h2d.a_address & ~(ADDR_MASK_UART3)) == ADDR_SPACE_UART3) begin
+      dev_sel_s1n_20 = 5'd3;
 
-    end else if ((tl_s1n_17_us_h2d.a_address & ~(ADDR_MASK_GPIO)) == ADDR_SPACE_GPIO) begin
-      dev_sel_s1n_17 = 5'd1;
+    end else if ((tl_s1n_20_us_h2d.a_address & ~(ADDR_MASK_GPIO)) == ADDR_SPACE_GPIO) begin
+      dev_sel_s1n_20 = 5'd4;
 
-    end else if ((tl_s1n_17_us_h2d.a_address & ~(ADDR_MASK_SPI_DEVICE)) == ADDR_SPACE_SPI_DEVICE) begin
-      dev_sel_s1n_17 = 5'd2;
+    end else if ((tl_s1n_20_us_h2d.a_address & ~(ADDR_MASK_SPI_DEVICE)) == ADDR_SPACE_SPI_DEVICE) begin
+      dev_sel_s1n_20 = 5'd5;
 
-    end else if ((tl_s1n_17_us_h2d.a_address & ~(ADDR_MASK_RV_TIMER)) == ADDR_SPACE_RV_TIMER) begin
-      dev_sel_s1n_17 = 5'd3;
+    end else if ((tl_s1n_20_us_h2d.a_address & ~(ADDR_MASK_RV_TIMER)) == ADDR_SPACE_RV_TIMER) begin
+      dev_sel_s1n_20 = 5'd6;
 
-    end else if ((tl_s1n_17_us_h2d.a_address & ~(ADDR_MASK_USBDEV)) == ADDR_SPACE_USBDEV) begin
-      dev_sel_s1n_17 = 5'd4;
+    end else if ((tl_s1n_20_us_h2d.a_address & ~(ADDR_MASK_USBDEV)) == ADDR_SPACE_USBDEV) begin
+      dev_sel_s1n_20 = 5'd7;
 
-    end else if ((tl_s1n_17_us_h2d.a_address & ~(ADDR_MASK_PWRMGR)) == ADDR_SPACE_PWRMGR) begin
-      dev_sel_s1n_17 = 5'd5;
+    end else if ((tl_s1n_20_us_h2d.a_address & ~(ADDR_MASK_PWRMGR)) == ADDR_SPACE_PWRMGR) begin
+      dev_sel_s1n_20 = 5'd8;
 
-    end else if ((tl_s1n_17_us_h2d.a_address & ~(ADDR_MASK_RSTMGR)) == ADDR_SPACE_RSTMGR) begin
-      dev_sel_s1n_17 = 5'd6;
+    end else if ((tl_s1n_20_us_h2d.a_address & ~(ADDR_MASK_RSTMGR)) == ADDR_SPACE_RSTMGR) begin
+      dev_sel_s1n_20 = 5'd9;
 
-    end else if ((tl_s1n_17_us_h2d.a_address & ~(ADDR_MASK_CLKMGR)) == ADDR_SPACE_CLKMGR) begin
-      dev_sel_s1n_17 = 5'd7;
+    end else if ((tl_s1n_20_us_h2d.a_address & ~(ADDR_MASK_CLKMGR)) == ADDR_SPACE_CLKMGR) begin
+      dev_sel_s1n_20 = 5'd10;
 
-    end else if ((tl_s1n_17_us_h2d.a_address & ~(ADDR_MASK_RAM_RET)) == ADDR_SPACE_RAM_RET) begin
-      dev_sel_s1n_17 = 5'd8;
+    end else if ((tl_s1n_20_us_h2d.a_address & ~(ADDR_MASK_RAM_RET)) == ADDR_SPACE_RAM_RET) begin
+      dev_sel_s1n_20 = 5'd11;
 
-    end else if ((tl_s1n_17_us_h2d.a_address & ~(ADDR_MASK_OTP_CTRL)) == ADDR_SPACE_OTP_CTRL) begin
-      dev_sel_s1n_17 = 5'd9;
+    end else if ((tl_s1n_20_us_h2d.a_address & ~(ADDR_MASK_OTP_CTRL)) == ADDR_SPACE_OTP_CTRL) begin
+      dev_sel_s1n_20 = 5'd12;
 
-    end else if ((tl_s1n_17_us_h2d.a_address & ~(ADDR_MASK_LC_CTRL)) == ADDR_SPACE_LC_CTRL) begin
-      dev_sel_s1n_17 = 5'd10;
+    end else if ((tl_s1n_20_us_h2d.a_address & ~(ADDR_MASK_LC_CTRL)) == ADDR_SPACE_LC_CTRL) begin
+      dev_sel_s1n_20 = 5'd13;
 
-    end else if ((tl_s1n_17_us_h2d.a_address & ~(ADDR_MASK_SENSOR_CTRL)) == ADDR_SPACE_SENSOR_CTRL) begin
-      dev_sel_s1n_17 = 5'd11;
+    end else if ((tl_s1n_20_us_h2d.a_address & ~(ADDR_MASK_SENSOR_CTRL)) == ADDR_SPACE_SENSOR_CTRL) begin
+      dev_sel_s1n_20 = 5'd14;
 
-    end else if ((tl_s1n_17_us_h2d.a_address & ~(ADDR_MASK_ALERT_HANDLER)) == ADDR_SPACE_ALERT_HANDLER) begin
-      dev_sel_s1n_17 = 5'd12;
+    end else if ((tl_s1n_20_us_h2d.a_address & ~(ADDR_MASK_ALERT_HANDLER)) == ADDR_SPACE_ALERT_HANDLER) begin
+      dev_sel_s1n_20 = 5'd15;
 
-    end else if ((tl_s1n_17_us_h2d.a_address & ~(ADDR_MASK_NMI_GEN)) == ADDR_SPACE_NMI_GEN) begin
-      dev_sel_s1n_17 = 5'd13;
+    end else if ((tl_s1n_20_us_h2d.a_address & ~(ADDR_MASK_NMI_GEN)) == ADDR_SPACE_NMI_GEN) begin
+      dev_sel_s1n_20 = 5'd16;
 
-    end else if ((tl_s1n_17_us_h2d.a_address & ~(ADDR_MASK_AST_WRAPPER)) == ADDR_SPACE_AST_WRAPPER) begin
-      dev_sel_s1n_17 = 5'd14;
+    end else if ((tl_s1n_20_us_h2d.a_address & ~(ADDR_MASK_AST_WRAPPER)) == ADDR_SPACE_AST_WRAPPER) begin
+      dev_sel_s1n_20 = 5'd17;
 
-    end else if ((tl_s1n_17_us_h2d.a_address & ~(ADDR_MASK_SRAM_CTRL_RET)) == ADDR_SPACE_SRAM_CTRL_RET) begin
-      dev_sel_s1n_17 = 5'd15;
+    end else if ((tl_s1n_20_us_h2d.a_address & ~(ADDR_MASK_SRAM_CTRL_RET)) == ADDR_SPACE_SRAM_CTRL_RET) begin
+      dev_sel_s1n_20 = 5'd18;
 end
   end
 
@@ -199,17 +226,17 @@ end
   tlul_socket_1n #(
     .HReqDepth (4'h0),
     .HRspDepth (4'h0),
-    .DReqDepth (64'h0),
-    .DRspDepth (64'h0),
-    .N         (16)
-  ) u_s1n_17 (
+    .DReqDepth (76'h0),
+    .DRspDepth (76'h0),
+    .N         (19)
+  ) u_s1n_20 (
     .clk_i        (clk_peri_i),
     .rst_ni       (rst_peri_ni),
-    .tl_h_i       (tl_s1n_17_us_h2d),
-    .tl_h_o       (tl_s1n_17_us_d2h),
-    .tl_d_o       (tl_s1n_17_ds_h2d),
-    .tl_d_i       (tl_s1n_17_ds_d2h),
-    .dev_select_i (dev_sel_s1n_17)
+    .tl_h_i       (tl_s1n_20_us_h2d),
+    .tl_h_o       (tl_s1n_20_us_d2h),
+    .tl_d_o       (tl_s1n_20_ds_h2d),
+    .tl_d_i       (tl_s1n_20_ds_d2h),
+    .dev_select_i (dev_sel_s1n_20)
   );
 
 endmodule