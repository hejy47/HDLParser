3519dd2a391a001bb2dae2ed2bc37789b59b97ad
[csrng/rtl] instantiate and generate bug fixes
diff --git a/hw/ip/csrng/rtl/csrng_ctr_drbg_gen.sv b/hw/ip/csrng/rtl/csrng_ctr_drbg_gen.sv
index 9068f64f0..e68483ce6 100644
--- a/hw/ip/csrng/rtl/csrng_ctr_drbg_gen.sv
+++ b/hw/ip/csrng/rtl/csrng_ctr_drbg_gen.sv
@@ -25,6 +25,7 @@ module csrng_ctr_drbg_gen import csrng_pkg::*; #(
   output logic               ctr_drbg_gen_rdy_o, // ready to process the req above
   input logic [Cmd-1:0]      ctr_drbg_gen_ccmd_i,    // current command
   input logic [StateId-1:0]  ctr_drbg_gen_inst_id_i, // instantance id
+  input logic                ctr_drbg_gen_glast_i,   // gen cmd last beat
   input logic                ctr_drbg_gen_fips_i,    // fips
   input logic [SeedLen-1:0]  ctr_drbg_gen_adata_i,   // additional data
   input logic [KeyLen-1:0]   ctr_drbg_gen_key_i,
@@ -83,19 +84,20 @@ module csrng_ctr_drbg_gen import csrng_pkg::*; #(
 );
 
   localparam int GenreqFifoDepth = 1;
-  localparam int GenreqFifoWidth = KeyLen+BlkLen+CtrLen+1+SeedLen+StateId+Cmd;
+  localparam int GenreqFifoWidth = KeyLen+BlkLen+CtrLen+1+SeedLen+1+StateId+Cmd;
   localparam int BlkEncAckFifoDepth = 1;
   localparam int BlkEncAckFifoWidth = BlkLen+StateId+Cmd;
   localparam int AdstageFifoDepth = 1;
-  localparam int AdstageFifoWidth = KeyLen+BlkLen+CtrLen+1+SeedLen;
+  localparam int AdstageFifoWidth = KeyLen+BlkLen+CtrLen+1+SeedLen+1;
   localparam int RCStageFifoDepth = 1;
-  localparam int RCStageFifoWidth = BlkLen+CtrLen+1;
+  localparam int RCStageFifoWidth = KeyLen+BlkLen+BlkLen+CtrLen+1+1+StateId+Cmd;
   localparam int GenbitsFifoDepth = 1;
   localparam int GenbitsFifoWidth = 1+BlkLen+KeyLen+BlkLen+CtrLen+StateId+Cmd;
 
   // signals
   logic [Cmd-1:0]     genreq_ccmd;
   logic [StateId-1:0] genreq_id;
+  logic               genreq_glast;
   logic [SeedLen-1:0] genreq_adata;
   logic               genreq_fips;
   logic [KeyLen-1:0]  genreq_key;
@@ -106,12 +108,18 @@ module csrng_ctr_drbg_gen import csrng_pkg::*; #(
   logic [BlkLen-1:0]  adstage_v;
   logic [CtrLen-1:0]  adstage_rc;
   logic               adstage_fips;
+  logic               adstage_glast;
   logic [SeedLen-1:0] adstage_adata;
 
+  logic [KeyLen-1:0]  rcstage_key;
+  logic [BlkLen-1:0]  rcstage_v;
   logic [BlkLen-1:0]  rcstage_bits;
   logic [CtrLen-1:0]  rcstage_rc;
+  logic               rcstage_glast;
   logic               rcstage_fips;
   logic [CtrLen-1:0]  rcstage_rc_plus1;
+  logic [Cmd-1:0]     rcstage_ccmd;
+  logic [StateId-1:0] rcstage_inst_id;
 
   logic [Cmd-1:0]     genreq_ccmd_modified;
   logic [Cmd-1:0]     bencack_ccmd_modified;
@@ -254,13 +262,13 @@ module csrng_ctr_drbg_gen import csrng_pkg::*; #(
   assign genreq_ccmd_modified = (ctr_drbg_gen_ccmd_i == GEN) ? GENB : INV;
 
   assign sfifo_genreq_wdata = {ctr_drbg_gen_key_i,ctr_drbg_gen_v_i,ctr_drbg_gen_rc_i,
-                               ctr_drbg_gen_fips_i,ctr_drbg_gen_adata_i,
+                               ctr_drbg_gen_fips_i,ctr_drbg_gen_adata_i,ctr_drbg_gen_glast_i,
                                ctr_drbg_gen_inst_id_i,genreq_ccmd_modified};
 
   assign sfifo_genreq_push = ctr_drbg_gen_enable_i && ctr_drbg_gen_req_i;
 
   assign {genreq_key,genreq_v,genreq_rc,
-          genreq_fips,genreq_adata,
+          genreq_fips,genreq_adata,genreq_glast,
           genreq_id,genreq_ccmd} = sfifo_genreq_rdata;
 
   assign ctr_drbg_gen_rdy_o = !sfifo_genreq_full;
@@ -381,9 +389,10 @@ module csrng_ctr_drbg_gen import csrng_pkg::*; #(
     .depth_o        ()
   );
 
-  assign sfifo_adstage_wdata = {genreq_key,v_sized,genreq_rc,genreq_fips,genreq_adata};
+  assign sfifo_adstage_wdata = {genreq_key,v_sized,genreq_rc,genreq_fips,genreq_adata,genreq_glast};
   assign sfifo_adstage_pop = sfifo_adstage_not_empty && sfifo_bencack_pop;
-  assign {adstage_key,adstage_v,adstage_rc,adstage_fips,adstage_adata} = sfifo_adstage_rdata;
+  assign {adstage_key,adstage_v,adstage_rc,adstage_fips,
+          adstage_adata,adstage_glast} = sfifo_adstage_rdata;
 
   assign ctr_drbg_gen_sfifo_gadstage_err_o =
          {(sfifo_adstage_push && sfifo_adstage_full),
@@ -421,7 +430,8 @@ module csrng_ctr_drbg_gen import csrng_pkg::*; #(
   assign sfifo_bencack_wdata = {block_encrypt_v_i,block_encrypt_inst_id_i,bencack_ccmd_modified};
   assign block_encrypt_rdy_o = !sfifo_bencack_full;
 
-  assign sfifo_bencack_pop = !sfifo_rcstage_full && sfifo_bencack_not_empty && upd_gen_rdy_i;
+  assign sfifo_bencack_pop = !sfifo_rcstage_full && sfifo_bencack_not_empty &&
+                             (upd_gen_rdy_i || !adstage_glast);
 
   assign {sfifo_bencack_bits,sfifo_bencack_inst_id,sfifo_bencack_ccmd} = sfifo_bencack_rdata;
 
@@ -436,7 +446,7 @@ module csrng_ctr_drbg_gen import csrng_pkg::*; #(
   //--------------------------------------------
 
   // send to the update block
-  assign gen_upd_req_o = sfifo_bencack_not_empty;
+  assign gen_upd_req_o = sfifo_bencack_not_empty && adstage_glast;
   assign gen_upd_ccmd_o = sfifo_bencack_ccmd;
   assign gen_upd_inst_id_o = sfifo_bencack_inst_id;
   assign gen_upd_pdata_o = adstage_adata;
@@ -469,9 +479,14 @@ module csrng_ctr_drbg_gen import csrng_pkg::*; #(
   );
 
   assign sfifo_rcstage_push = sfifo_adstage_pop;
-  assign sfifo_rcstage_wdata = {sfifo_bencack_bits,adstage_rc,adstage_fips};
-  assign sfifo_rcstage_pop = sfifo_rcstage_not_empty && upd_gen_ack_i;
-  assign {rcstage_bits,rcstage_rc,rcstage_fips} = sfifo_rcstage_rdata;
+  assign sfifo_rcstage_wdata = {adstage_key,adstage_v,sfifo_bencack_bits,
+                                adstage_rc,adstage_fips,adstage_glast,
+                                sfifo_bencack_inst_id,sfifo_bencack_ccmd};
+
+  assign sfifo_rcstage_pop = sfifo_rcstage_not_empty && (upd_gen_ack_i || !rcstage_glast);
+
+  assign {rcstage_key,rcstage_v,rcstage_bits,rcstage_rc,rcstage_fips,rcstage_glast,
+          rcstage_inst_id,rcstage_ccmd} = sfifo_rcstage_rdata;
 
 
   assign ctr_drbg_gen_sfifo_grcstage_err_o =
@@ -509,9 +524,11 @@ module csrng_ctr_drbg_gen import csrng_pkg::*; #(
 
   assign rcstage_rc_plus1 = (rcstage_rc+1);
 
-  assign sfifo_genbits_wdata =
-         {rcstage_fips,rcstage_bits,upd_gen_key_i,upd_gen_v_i,
-          rcstage_rc_plus1,upd_gen_inst_id_i,upd_gen_ccmd_i};
+  assign sfifo_genbits_wdata = rcstage_glast ?
+                               {rcstage_fips,rcstage_bits,upd_gen_key_i,upd_gen_v_i,
+                                rcstage_rc_plus1,upd_gen_inst_id_i,upd_gen_ccmd_i} :
+                               {rcstage_fips,rcstage_bits,rcstage_key,rcstage_v,
+                                rcstage_rc,rcstage_inst_id,rcstage_ccmd};
 
   assign sfifo_genbits_pop = ctr_drbg_gen_rdy_i && sfifo_genbits_not_empty;
   assign {ctr_drbg_gen_fips_o,ctr_drbg_gen_bits_o,