a17530f0a51524486c59b0c8d5295d6ded247ec2
[usbdev] USB device update from ETH repo
diff --git a/hw/ip/usbdev/rtl/usbdev_usbif.sv b/hw/ip/usbdev/rtl/usbdev_usbif.sv
index 1b029cd1d..e157437b3 100644
--- a/hw/ip/usbdev/rtl/usbdev_usbif.sv
+++ b/hw/ip/usbdev/rtl/usbdev_usbif.sv
@@ -8,32 +8,33 @@
 
 // This module runs on the 48MHz USB clock
 module usbdev_usbif  #(
-  parameter  int AVFifoWidth = 4,
-  parameter  int RXFifoWidth = 4,
-  parameter  int MaxPktSizeByte = 64,
-  parameter  int NBuf = 4,
-  parameter  int SramAw = 4,
+  parameter int NEndpoints = 12,
+  parameter int AVFifoWidth = 4,
+  parameter int RXFifoWidth = 4,
+  parameter int MaxPktSizeByte = 64,
+  parameter int NBuf = 4,
+  parameter int SramAw = 4,
   localparam int NBufWidth = $clog2(NBuf), // derived parameter
   localparam int PktW = $clog2(MaxPktSizeByte) // derived parameter
 ) (
   input                            clk_48mhz_i, // 48MHz USB clock
   input                            rst_ni,
 
-  // Pins
-  input                            usb_dp_i,
-  output logic                     usb_dp_o,
-  output logic                     usb_dp_en_o,
-  input                            usb_dn_i,
-  output logic                     usb_dn_o,
-  output logic                     usb_dn_en_o,
-  input                            usb_sense_i,
-  output logic                     usb_pullup_o,
+  // Pins (synchronous)
+  input  logic                     usb_d_i,
+  input  logic                     usb_se0_i,
+
+  output logic                     usb_d_o,
+  output logic                     usb_se0_o,
+  output logic                     usb_oe_o,
+
   output logic                     usb_pullup_en_o,
+  input                            usb_sense_i,
 
   // receive (OUT or SETUP) side
-  input [11:0]                     rx_setup_i,
-  input [11:0]                     rx_out_i,
-  input [11:0]                     rx_stall_i,
+  input [NEndpoints-1:0]           rx_setup_i,
+  input [NEndpoints-1:0]           rx_out_i,
+  input [NEndpoints-1:0]           rx_stall_i,
   input                            av_rvalid_i,
   output logic                     av_rready_o,
   input [AVFifoWidth - 1: 0]       av_rdata_i,
@@ -43,14 +44,14 @@ module usbdev_usbif  #(
   input                            rx_wready_i,
   output logic [RXFifoWidth - 1:0] rx_wdata_o,
   output logic                     event_rx_full_o,
-  output logic                     out_clear_rdy_o,
+  output logic                     setup_received_o,
   output [3:0]                     out_endpoint_o,
 
   // transmit (IN) side
   input [NBufWidth - 1:0]          in_buf_i,
   input [PktW:0]                   in_size_i,
-  input [11:0]                     in_stall_i,
-  input [11:0]                     in_rdy_i,
+  input [NEndpoints-1:0]           in_stall_i,
+  input [NEndpoints-1:0]           in_rdy_i,
   output logic                     set_sent_o,
   output [3:0]                     in_endpoint_o,
 
@@ -65,27 +66,28 @@ module usbdev_usbif  #(
   input                            enable_i,
   input [6:0]                      devaddr_i,
   output                           clr_devaddr_o,
+  input  logic [NEndpoints-1:0]    ep_iso_i,
+  input  logic                     cfg_eop_single_bit_i, // 1: detect a single SE0 bit as EOP
+  input  logic                     tx_osc_test_mode_i, // Oscillator test mode (constantly output JK)
+  input  logic [NEndpoints-1:0]    data_toggle_clear_i, // Clear the data toggles for an EP
 
   // status
+  output logic                     frame_start_o,
   output logic [10:0]              frame_o,
-  output logic [1:0]               link_state_o,
+  output logic [2:0]               link_state_o,
   output logic                     link_disconnect_o,
   output logic                     link_reset_o,
   output logic                     link_suspend_o,
   output logic                     link_resume_o,
-  output logic                     host_lost_o
+  output logic                     link_in_err_o,
+  output logic                     host_lost_o,
+  output logic                     rx_crc_err_o,
+  output logic                     rx_pid_err_o,
+  output logic                     rx_bitstuff_err_o
 );
 
-  logic                              usb_tx_en;
-
-  // Enable -- This is working but should these be swapped so there is no active pull down?
-  assign usb_pullup_o = enable_i;
-  assign usb_pullup_en_o = 1'b1;
-
-  assign usb_dp_en_o = usb_tx_en;
-  assign usb_dn_en_o = usb_tx_en;
+  assign usb_pullup_en_o = enable_i;
 
-  assign clr_devaddr_o = ~enable_i | link_reset_o;
 
   // OUT or SETUP direction
   logic [PktW:0]                     out_max_used_next, out_max_used;
@@ -95,13 +97,18 @@ module usbdev_usbif  #(
   logic [3:0]                        out_ep_current;
   logic                              out_ep_data_put, out_ep_acked, out_ep_rollback;
   logic                              current_setup, all_out_blocked, out_ep_newpkt;
-  logic [11:0]                       out_ep_setup, out_ep_full, out_ep_stall;
-  logic [11:0]                       setup_blocked, out_blocked;
+  logic [NEndpoints-1:0]             out_ep_setup, out_ep_full, out_ep_stall;
+  logic [NEndpoints-1:0]             setup_blocked, out_blocked;
   logic [31:0]                       wdata;
   logic                              std_write, mem_read;
   logic [SramAw-1:0]                 mem_waddr, mem_raddr;
+  logic                              link_reset;
+  logic                              sof_valid;
 
   assign out_endpoint_o = out_ep_current;
+  assign link_reset_o   = link_reset;
+  assign clr_devaddr_o  = ~enable_i | link_reset;
+  assign frame_start_o  = sof_valid;
 
   always_comb begin
     if (out_ep_acked || out_ep_rollback) begin
@@ -110,8 +117,11 @@ module usbdev_usbif  #(
       // In the normal case <MaxPktSizeByte this is out_max_used <= out_ep_put_addr
       // Following all ones out_max_used will get 1,00..00 and 1,00..01 to cover
       // one and two bytes of the CRC overflowing, then stick at 1,00..01
+
+      // TODO: This code should be re-written to be more human-readable, in the
+      // current state is hard to understand or verify
       out_max_used_next[0] = (out_max_used[PktW] & out_max_used[0]) ? 1'b1 : out_ep_put_addr[0];
-      out_max_used_next[PktW - 1: 1] = out_max_used[PktW] ? '0 : out_ep_put_addr[PktW - 1:1];
+      out_max_used_next[PktW - 1: 1] = out_max_used[PktW] ? {PktW{1'b0}} : out_ep_put_addr[PktW - 1:1];
       out_max_used_next[PktW] = (&out_max_used[PktW - 1:0]) | out_max_used[PktW];
     end else begin
       out_max_used_next = out_max_used;
@@ -120,8 +130,8 @@ module usbdev_usbif  #(
 
   always_ff @(posedge clk_48mhz_i or negedge rst_ni) begin
     if (!rst_ni) begin
-      out_max_used <= '0;
-      wdata        <= '0;
+      out_max_used <= {PktW+1{1'b0}};
+      wdata        <= {32{1'b0}};
       std_write    <= 1'b0;
     end else begin
       out_max_used <= out_max_used_next;
@@ -190,15 +200,17 @@ module usbdev_usbif  #(
   assign event_av_empty_o = out_ep_newpkt & (~av_rvalid_i);
   assign event_rx_full_o = out_ep_newpkt & (~rx_wready_i);
 
-  assign out_ep_full = {12{all_out_blocked}} | setup_blocked | out_blocked;
+  assign out_ep_full = {NEndpoints{all_out_blocked}} | setup_blocked | out_blocked;
   assign out_ep_stall = rx_stall_i;
 
   // Need to clear IN read if a SETUP is received because it may use the IN channel
-  assign out_clear_rdy_o = current_setup & rx_wvalid_o;
+  // This will not trigger, if the AV Buffer is empty, in that case we have replied
+  // with a NAK, which is illegal anyway
+  assign setup_received_o = current_setup & rx_wvalid_o;
 
   // IN (device to host) transfers
   logic in_ep_acked, in_ep_data_get, in_data_done, in_ep_newpkt, pkt_start_rd;
-  logic [11:0] in_ep_data_done;
+  logic [NEndpoints-1:0] in_ep_data_done;
   logic [PktW-1:0] in_ep_get_addr;
   logic [7:0]      in_ep_data;
 
@@ -206,7 +218,7 @@ module usbdev_usbif  #(
   // Note: this does the correct thing for sending zero length packets
   assign in_data_done = {1'b0, in_ep_get_addr} == in_size_i;
   always_comb begin
-    in_ep_data_done = '0;
+    in_ep_data_done = {NEndpoints{1'b0}};
     in_ep_data_done[in_endpoint_o] = in_data_done;  // lint: in_endpoint_o range was checked
   end
 
@@ -228,53 +240,63 @@ module usbdev_usbif  #(
                       (in_ep_get_addr[0] ? mem_rdata_i[15:8]  : mem_rdata_i[7:0]);
   assign set_sent_o = in_ep_acked;
 
-  logic            sof_valid;
   logic [10:0]     frame_index_raw;
 
   usb_fs_nb_pe #(
-    .NumOutEps(12),
-    .NumInEps(12),
-    .MaxPktSizeByte(MaxPktSizeByte)
+    .NumOutEps      (NEndpoints),
+    .NumInEps       (NEndpoints),
+    .MaxPktSizeByte (MaxPktSizeByte)
   ) u_usb_fs_nb_pe (
-    .clk_48mhz_i(clk_48mhz_i),
-    .rst_ni(rst_ni),
-    .link_reset_i(link_reset_o),
+    .clk_48mhz_i           (clk_48mhz_i),
+    .rst_ni                (rst_ni),
+    .link_reset_i          (link_reset),
+
+    .cfg_eop_single_bit_i  (cfg_eop_single_bit_i),
+    .tx_osc_test_mode_i    (tx_osc_test_mode_i),
+    .data_toggle_clear_i   (data_toggle_clear_i),
 
-    .usb_p_tx_o(usb_dp_o),
-    .usb_n_tx_o(usb_dn_o),
-    .usb_p_rx_i(usb_dp_i),
-    .usb_n_rx_i(usb_dn_i),
-    .usb_tx_en_o(usb_tx_en),
+    .usb_d_i               (usb_d_i),
+    .usb_se0_i             (usb_se0_i),
+    .usb_d_o               (usb_d_o),
+    .usb_se0_o             (usb_se0_o),
+    .usb_oe_o              (usb_oe_o),
 
-    .dev_addr_i(devaddr_i),
+    .dev_addr_i            (devaddr_i),
 
     // out endpoint interfaces
-    .out_ep_current_o(out_ep_current),
-    .out_ep_newpkt_o(out_ep_newpkt),
-    .out_ep_data_put_o(out_ep_data_put),
-    .out_ep_put_addr_o(out_ep_put_addr),
-    .out_ep_data_o(out_ep_data),
-    .out_ep_acked_o(out_ep_acked),
-    .out_ep_rollback_o(out_ep_rollback),
-    .out_ep_setup_o(out_ep_setup),
-    .out_ep_full_i(out_ep_full),
-    .out_ep_stall_i(out_ep_stall),
+    .out_ep_current_o      (out_ep_current),
+    .out_ep_newpkt_o       (out_ep_newpkt),
+    .out_ep_data_put_o     (out_ep_data_put),
+    .out_ep_put_addr_o     (out_ep_put_addr),
+    .out_ep_data_o         (out_ep_data),
+    .out_ep_acked_o        (out_ep_acked),
+    .out_ep_rollback_o     (out_ep_rollback),
+    .out_ep_setup_o        (out_ep_setup),
+    .out_ep_full_i         (out_ep_full),
+    .out_ep_stall_i        (out_ep_stall),
+    .out_ep_iso_i          (ep_iso_i),
 
     // in endpoint interfaces
-    .in_ep_current_o(in_endpoint_o),
-    .in_ep_rollback_o(),
-    .in_ep_acked_o(in_ep_acked),
-    .in_ep_get_addr_o(in_ep_get_addr),
-    .in_ep_data_get_o(in_ep_data_get),
-    .in_ep_newpkt_o(in_ep_newpkt),
-    .in_ep_stall_i(in_stall_i),
-    .in_ep_has_data_i(in_rdy_i),
-    .in_ep_data_i(in_ep_data),
-    .in_ep_data_done_i(in_ep_data_done),
+    .in_ep_current_o       (in_endpoint_o),
+    .in_ep_rollback_o      (link_in_err_o),
+    .in_ep_acked_o         (in_ep_acked),
+    .in_ep_get_addr_o      (in_ep_get_addr),
+    .in_ep_data_get_o      (in_ep_data_get),
+    .in_ep_newpkt_o        (in_ep_newpkt),
+    .in_ep_stall_i         (in_stall_i),
+    .in_ep_has_data_i      (in_rdy_i),
+    .in_ep_data_i          (in_ep_data),
+    .in_ep_data_done_i     (in_ep_data_done),
+    .in_ep_iso_i           (ep_iso_i),
+
+    // error signals
+    .rx_crc_err_o          (rx_crc_err_o),
+    .rx_pid_err_o          (rx_pid_err_o),
+    .rx_bitstuff_err_o     (rx_bitstuff_err_o),
 
     // sof interface
-    .sof_valid_o(sof_valid),
-    .frame_index_o(frame_index_raw)
+    .sof_valid_o           (sof_valid),
+    .frame_index_o         (frame_index_raw)
   );
 
   // us_tick ticks for one cycle every us
@@ -284,12 +306,12 @@ module usbdev_usbif  #(
   assign us_tick = (ns_cnt == 6'd48);
   always_ff @(posedge clk_48mhz_i or negedge rst_ni) begin
     if (!rst_ni) begin
-      ns_cnt <= '0;
+      ns_cnt <= 0;
     end else begin
       if (us_tick) begin
-        ns_cnt <= '0;
+        ns_cnt <= 0;
       end else begin
-        ns_cnt <= ns_cnt + 1'b1;
+        ns_cnt <= ns_cnt + 1;
       end
     end
   end
@@ -297,7 +319,7 @@ module usbdev_usbif  #(
   // Capture frame number (host sends evert 1ms)
   always_ff @(posedge clk_48mhz_i or negedge rst_ni) begin
     if (!rst_ni) begin
-      frame_o <= '0;
+      frame_o <= 0;
     end else begin
       if (sof_valid) begin
         frame_o <= frame_index_raw;
@@ -310,14 +332,20 @@ module usbdev_usbif  #(
     .rst_ni            (rst_ni),
     .us_tick_i         (us_tick),
     .usb_sense_i       (usb_sense_i),
-    .usb_rx_dp_i       (usb_dp_i),
-    .usb_rx_dn_i       (usb_dn_i),
+    .usb_rx_d_i        (usb_d_i),
+    .usb_rx_se0_i      (usb_se0_i),
     .sof_valid_i       (sof_valid),
     .link_disconnect_o (link_disconnect_o),
-    .link_reset_o      (link_reset_o),
+    .link_reset_o      (link_reset),
     .link_suspend_o    (link_suspend_o),
     .link_resume_o     (link_resume_o),
     .link_state_o      (link_state_o),
     .host_lost_o       (host_lost_o)
   );
+
+  //----------------------------------------------------------------------------
+  // Assertions
+  //----------------------------------------------------------------------------
+
+
 endmodule