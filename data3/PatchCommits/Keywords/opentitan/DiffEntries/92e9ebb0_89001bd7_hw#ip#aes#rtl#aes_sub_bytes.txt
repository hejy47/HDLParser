92e9ebb031c9c90db52a3f3985afa352285c8497
[aes] Use fresh, random intermediate masks in "noreuse" Canright S-Box
diff --git a/hw/ip/aes/rtl/aes_sub_bytes.sv b/hw/ip/aes/rtl/aes_sub_bytes.sv
index fa588bfc3..64438554e 100644
--- a/hw/ip/aes/rtl/aes_sub_bytes.sv
+++ b/hw/ip/aes/rtl/aes_sub_bytes.sv
@@ -8,11 +8,12 @@ module aes_sub_bytes import aes_pkg::*;
 #(
   parameter sbox_impl_e SBoxImpl = SBoxImplLut
 ) (
-  input  ciph_op_e             op_i,
-  input  logic [3:0][3:0][7:0] data_i,
-  input  logic [3:0][3:0][7:0] in_mask_i,
-  input  logic [3:0][3:0][7:0] out_mask_i,
-  output logic [3:0][3:0][7:0] data_o
+  input  ciph_op_e                          op_i,
+  input  logic              [3:0][3:0][7:0] data_i,
+  input  logic              [3:0][3:0][7:0] in_mask_i,
+  input  logic              [3:0][3:0][7:0] out_mask_i,
+  input  logic [3:0][3:0][WidthPRDSBox-1:0] prd_masking_i,
+  output logic              [3:0][3:0][7:0] data_o
 );
 
   // Individually substitute bytes
@@ -21,11 +22,12 @@ module aes_sub_bytes import aes_pkg::*;
       aes_sbox #(
         .SBoxImpl ( SBoxImpl )
       ) u_aes_sbox_ij (
-        .op_i       ( op_i             ),
-        .data_i     ( data_i[i][j]     ),
-        .in_mask_i  ( in_mask_i[i][j]  ),
-        .out_mask_i ( out_mask_i[i][j] ),
-        .data_o     ( data_o[i][j]     )
+        .op_i          ( op_i                ),
+        .data_i        ( data_i[i][j]        ),
+        .in_mask_i     ( in_mask_i[i][j]     ),
+        .out_mask_i    ( out_mask_i[i][j]    ),
+        .prd_masking_i ( prd_masking_i[i][j] ),
+        .data_o        ( data_o[i][j]        )
       );
     end
   end