efaa97eb056324fec332981139a3370db290679a
[ast] AscenLint fixes and new analog typedef
diff --git a/hw/top_earlgrey/ip/ast/rtl/usb_clk.sv b/hw/top_earlgrey/ip/ast/rtl/usb_clk.sv
index 8ebb2e278..741203890 100644
--- a/hw/top_earlgrey/ip/ast/rtl/usb_clk.sv
+++ b/hw/top_earlgrey/ip/ast/rtl/usb_clk.sv
@@ -5,71 +5,52 @@
 // *Name: usb_clk
 // *Module Description: USB Clock
 //############################################################################
-`timescale 1ns / 10ps
 
-module usb_clk #(
-`ifndef VERILATOR
-// synopsys translate_off
-  parameter time USB_EN_RDLY = 5us,
-  parameter time USB_VAL_RDLY = 50ms,
-  parameter time USB_VAL_FDLY = 80ns
-// synopsys translate_on
-`endif
-) (
-  input clk_src_usb_en_i,          // USB Source Clock Enable
-  input usb_ref_pulse_i,           // USB Reference Pulse
-  input usb_ref_val_i,             // USB Reference (Pulse) Valid
-  input clk_usb_pd_ni,             // USB Clock Power-down
-  input rst_usb_clk_ni,            // USB Clock Logic reset
-  input vcore_pok_h_i,             // VCORE POK @3.3V (for OSC)
+module usb_clk (
+  input vcore_pok_h_i,                     // VCORE POK @3.3V (for OSC)
+  input clk_usb_pd_ni,                     // USB Clock Power-down
+  input rst_usb_clk_ni,                    // USB Clock Logic reset
+  input clk_src_usb_en_i,                  // USB Source Clock Enable
+  input usb_ref_val_i,                     // USB Reference (Pulse) Valid
+  input usb_ref_pulse_i,                   // USB Reference Pulse
   //
-  output logic clk_src_usb_o,      // USB Source Clock
-  output logic clk_src_usb_val_o   // USB Source Clock Valid
+  output logic clk_src_usb_o,              // USB Source Clock
+  output logic clk_src_usb_val_o           // USB Source Clock Valid
 );
 
-logic clk, usb_clk_en, usb_clk_val, rst_n;
+logic clk, usb_clk_en, rst_n;
 
-assign rst_n = rst_usb_clk_ni;
-
-assign usb_clk_en = clk_src_usb_en_i && clk_usb_pd_ni;
-
-// Behavioral Model
+assign rst_n = rst_usb_clk_ni;  // Scan enabled
+assign usb_clk_en = clk_src_usb_en_i && clk_usb_pd_ni && rst_usb_clk_ni;
 
 // Clock Oscilator
-usb_osc #(
-`ifndef VERILATOR
-// synopsys translate_off
-/*P*/ .USB_EN_RDLY ( USB_EN_RDLY ),
-/*P*/ .USB_VAL_RDLY ( USB_VAL_RDLY ),
-/*P*/ .USB_VAL_FDLY ( USB_VAL_FDLY )
-// synopsys translate_on
-`endif
-) u_usb_osc (
-/*I*/ .vcore_pok_h_i ( vcore_pok_h_i ),
-/*I*/ .usb_en_i (usb_clk_en ),
-/*I*/ .usb_ref_val_i ( usb_ref_val_i ),
-/*O*/ .usb_clk_o ( clk )
-);
-
+///////////////////////////////////////
+usb_osc u_usb_osc (
+  .vcore_pok_h_i ( vcore_pok_h_i ),
+  .usb_en_i (usb_clk_en ),
+  .usb_ref_val_i ( usb_ref_val_i ),
+  .usb_clk_o ( clk )
+);  // u_usb_osc
 
 // Clock & Valid
-assign clk_src_usb_o = clk;
+///////////////////////////////////////
+prim_clock_buf u_clk_usb_buf(
+  .clk_i ( clk ),
+  .clk_o ( clk_src_usb_o )
+);
 
-// 2-stage assertion
+// 2-stage de-assertion
 logic rst_val_n;
-
 assign rst_val_n = rst_n && usb_clk_en;
 
-always_ff @( posedge clk, negedge rst_val_n ) begin
-  if ( !rst_val_n )  begin
-    usb_clk_val       <= 1'b0;
-    clk_src_usb_val_o <= 1'b0;
-  end
-  else begin
-    usb_clk_val       <= 1'b1;
-    clk_src_usb_val_o <= usb_clk_val;
-  end
-end
-
+prim_flop_2sync #(
+  .Width ( 1 ),
+  .ResetValue ( 1'b0 )
+) u_val_sync (
+  .clk_i ( clk ),
+  .rst_ni ( rst_val_n ),
+  .d_i ( 1'b1 ),
+  .q_o ( clk_src_usb_val_o )
+);
 
-endmodule  // of usb_clk
+endmodule : usb_clk