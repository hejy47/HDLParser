d710dc821b9e7beef0725052c99d152817934514
Merge remote-tracking branch 'origin/fix_loadstall' into dbg_dev
diff --git a/verilator-model/top.sv b/verilator-model/top.sv
index f49fee8..1ad5beb 100644
--- a/verilator-model/top.sv
+++ b/verilator-model/top.sv
@@ -16,54 +16,48 @@
 module top
 #(
   parameter INSTR_RDATA_WIDTH = 128,
-  parameter ADDR_WIDTH = 22,
-  parameter BOOT_ADDR  = 'h80		// Consistent with Pulpino
-  )
+  parameter ADDR_WIDTH        =  22,
+  parameter BOOT_ADDR         = 'h80
+ )
 (
  // Clock and Reset
- input logic 			 clk_i,
- input logic 			 rstn_i,
+ input logic           clk_i,
+ input logic           rstn_i,
 
  // Interrupt inputs
- input logic 			 irq_i, // level sensitive IR lines
- input logic [4:0] 		 irq_id_i,
- output logic 			 irq_ack_o,
- output logic [4:0] 		 irq_id_o,
- input logic 			 irq_sec_i,
+ input logic            irq_i, // level sensitive IR lines
+ input logic [4:0]      irq_id_i,
+ output logic           irq_ack_o,
+ output logic [4:0]     irq_id_o,
+ input logic            irq_sec_i,
 
- output logic 			 sec_lvl_o,
+ output logic           sec_lvl_o,
 
  // Debug Interface
- input logic 			 debug_req_i,
- output logic 			 debug_gnt_o,
- output logic 			 debug_rvalid_o,
- input logic [14:0] 		 debug_addr_i,
- input logic 			 debug_we_i,
- input logic [31:0] 		 debug_wdata_i,
- output logic [31:0] 		 debug_rdata_o,
- output logic 			 debug_halted_o,
+ input logic            debug_req_i,
 
  // CPU Control Signals
- input logic 			 fetch_enable_i,
- output logic 			 core_busy_o
+ input logic            fetch_enable_i,
+ output logic           core_busy_o
  );
 
    // signals connecting core to memory
 
-   logic 	          instr_req;
-   logic 	          instr_gnt;
-   logic 	          instr_rvalid;
+   logic 	                instr_req;
+   logic 	                instr_gnt;
+   logic 	                instr_rvalid;
    logic [ADDR_WIDTH-1:0] instr_addr;
-   logic [127:0] 	  instr_rdata;
+   logic [127:0] 	        instr_rdata;
 
-   logic 		  data_req;
-   logic 		  data_gnt;
-   logic 		  data_rvalid;
+   logic                  data_req;
+   logic                  data_gnt;
+   logic                  data_rvalid;
    logic [ADDR_WIDTH-1:0] data_addr;
-   logic 		  data_we;
-   logic [3:0] 		  data_be;
-   logic [31:0] 	  data_rdata;
-   logic [31:0] 	  data_wdata;
+   logic                  data_we;
+   logic [3:0]            data_be;
+   logic [31:0]           data_rdata;
+   logic [31:0]           data_wdata;
+
 
    // Instantiate the core
 
@@ -120,15 +114,6 @@ module top
       .sec_lvl_o              ( sec_lvl_o             ),
 
       .debug_req_i            ( debug_req_i           ),
-      .debug_gnt_o            ( debug_gnt_o           ),
-      .debug_rvalid_o         ( debug_rvalid_o        ),
-      .debug_addr_i           ( debug_addr_i          ),
-      .debug_we_i             ( debug_we_i            ),
-      .debug_wdata_i          ( debug_wdata_i         ),
-      .debug_rdata_o          ( debug_rdata_o         ),
-      .debug_halted_o         ( debug_halted_o        ),
-      .debug_halt_i           ( 1'b0                  ),     // Not used in
-      .debug_resume_i         ( 1'b0                  ),     // single core
 
       .fetch_enable_i         ( fetch_enable_i        ),
       .core_busy_o            ( core_busy_o           ),
@@ -162,4 +147,29 @@ module top
       .data_gnt_o     ( data_gnt     )
       );
 
+
+
+
+  function [31:0] readADDtestPC_IF;
+    /* verilator public */
+    readADDtestPC_IF = riscv_core_i.pc_if;
+  endfunction
+
+  function [31:0] readADDtestPC_ID;
+    /* verilator public */
+    readADDtestPC_ID = riscv_core_i.pc_id;
+  endfunction
+
+  function [31:0] readADDtestPC_EX;
+    /* verilator public */
+    readADDtestPC_EX = riscv_core_i.pc_ex;
+  endfunction
+
+    function [31:0] readREGfile;
+    /* verilator public */
+    input integer n_reg;
+    //readREGfile = riscv_core_i.id_stage_i.registers_i.riscv_register_file_i.mem[(32*n_reg)+:32];
+    readREGfile = riscv_core_i.id_stage_i.registers_i.riscv_register_file_i.mem[n_reg];
+  endfunction
+
 endmodule	// top