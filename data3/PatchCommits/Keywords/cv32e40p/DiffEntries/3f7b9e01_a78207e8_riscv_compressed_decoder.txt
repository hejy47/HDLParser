3f7b9e018484636b9d4c7513e725523fcbb46b3a
fixed bug in compressed insn decoder with fp load/stores
diff --git a/riscv_compressed_decoder.sv b/riscv_compressed_decoder.sv
index eded6d1..5a058e7 100644
--- a/riscv_compressed_decoder.sv
+++ b/riscv_compressed_decoder.sv
@@ -66,8 +66,8 @@ module riscv_compressed_decoder
 
           3'b001: begin
             // c.fld -> fld rd', imm(rs1')
-          if (FPU==1)
-            instr_o = {5'b0, instr_i[5], instr_i[12:10], instr_i[6], 2'b00, 2'b01, instr_i[9:7], 3'b011, 2'b01, instr_i[4:2], OPCODE_LOAD_FP};
+          if (FPU==1) // 12:10-> [5:3]  6:5->[7:6] .. 11:0
+            instr_o = {4'b0, instr_i[6:5], instr_i[12:10], 3'b000, 2'b01, instr_i[9:7], 3'b011, 2'b01, instr_i[4:2], OPCODE_LOAD_FP};
           else
             illegal_instr_o = 1'b1;
           end
@@ -87,8 +87,8 @@ module riscv_compressed_decoder
 
           3'b101: begin
             // c.fsd -> fsd rs2', imm(rs1')
-            if (FPU==1) 
-              instr_o = {5'b0, instr_i[5], instr_i[12], 2'b01, instr_i[4:2], 2'b01, instr_i[9:7], 3'b011, instr_i[11:10], instr_i[6], 2'b00, OPCODE_STORE_FP};
+            if (FPU==1) // 12:10 -> 5:3 6:5 -> 7:6  11:5  4:0
+              instr_o = {4'b0, instr_i[6:5], instr_i[12], 2'b01, instr_i[4:2], 2'b01, instr_i[9:7], 3'b011, instr_i[11:10], 3'b000, OPCODE_STORE_FP};
             else
               illegal_instr_o = 1'b1;
           end
@@ -224,8 +224,8 @@ module riscv_compressed_decoder
 
           3'b001: begin
             // c.fldsp -> fld rd, imm(x2)
-             if (FPU==1)
-               instr_o = {4'b0, instr_i[3:2], instr_i[12], instr_i[6:4], 2'b00, 5'h02, 3'b011, instr_i[11:7], OPCODE_LOAD_FP};
+             if (FPU==1) // 11:0 6:2 -> [4:3][8:6]
+               instr_o = {3'b0, instr_i[4:2], instr_i[12], instr_i[6:5], 3'b000, 5'h02, 3'b011, instr_i[11:7], OPCODE_LOAD_FP};
              else
                illegal_instr_o = 1'b1;
           end
@@ -271,8 +271,8 @@ module riscv_compressed_decoder
 
           3'b101: begin
             // c.fsdsp -> fsd rs2, imm(x2)
-             if (FPU==1)
-               instr_o = {4'b0, instr_i[8:7], instr_i[12], instr_i[6:2], 5'h02, 3'b011, instr_i[11:9], 2'b00, OPCODE_STORE_FP};
+             if (FPU==1)// 11:5  hine 4:0
+               instr_o = {3'b0, instr_i[9:7], instr_i[12], instr_i[6:2], 5'h02, 3'b011, instr_i[11:10], 3'b000, OPCODE_STORE_FP};
              else
                illegal_instr_o = 1'b1;
           end