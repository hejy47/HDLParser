bc7464302a8d62ca4a634b6faadf08b1ba7c883a
Using default case instead of default 0 assignments
diff --git a/rtl/riscv_if_stage.sv b/rtl/riscv_if_stage.sv
index 086ddc9..6b03d6c 100644
--- a/rtl/riscv_if_stage.sv
+++ b/rtl/riscv_if_stage.sv
@@ -130,21 +130,18 @@ module riscv_if_stage
   // exception PC selection mux
   always_comb
   begin : EXC_PC_MUX
-    exc_pc = '0;
-    trap_base_addr = '0;
-
     unique case (trap_addr_mux_i)
       TRAP_MACHINE:  trap_base_addr = m_trap_base_addr_i;
       TRAP_USER:     trap_base_addr = u_trap_base_addr_i;
       TRAP_MACHINEX: trap_base_addr = m_trap_base_addrx_i;
-      default:;
+      default:       trap_base_addr = m_trap_base_addr_i;
     endcase
 
     unique case (exc_pc_mux_i)
       EXC_PC_EXCEPTION:                        exc_pc = { trap_base_addr, 8'h0 }; //1.10 all the exceptions go to base address
       EXC_PC_IRQ:                              exc_pc = { trap_base_addr, 1'b0, exc_vec_pc_mux_i[4:0], 2'b0 }; // interrupts are vectored
       EXC_PC_DBD:                              exc_pc = { DM_HALTADDRESS       };
-      default:;
+      default:                                 exc_pc = { trap_base_addr, 8'h0 };
     endcase
   end
 