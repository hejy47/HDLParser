66e8c238dc2f4b8cfeecf98553842498f8656096
Merge pull request #361 from davideschiavone/fix325
diff --git a/rtl/riscv_tracer.sv b/rtl/riscv_tracer.sv
index a8be766..1e8c0ce 100644
--- a/rtl/riscv_tracer.sv
+++ b/rtl/riscv_tracer.sv
@@ -49,13 +49,7 @@ module riscv_tracer (
   input  logic        compressed,
   input  logic        id_valid,
   input  logic        is_decoding,
-  input  logic        pipe_flush,
-  input  logic        mret,
-  input  logic        uret,
-  input  logic        dret,
-  input  logic        ecall,
-  input  logic        ebreak,
-  input  logic        fence,
+  input  logic        is_illegal,
 
   input  logic [31:0] rs1_value,
   input  logic [31:0] rs2_value,
@@ -107,6 +101,7 @@ module riscv_tracer (
   integer      cycles;
   logic [ 5:0] rd, rs1, rs2, rs3, rs4;
 
+
   event        retire;
 
   typedef struct {
@@ -908,7 +903,7 @@ module riscv_tracer (
     instr_trace_t trace;
 
     // special case for WFI because we don't wait for unstalling there
-    if ( (id_valid || pipe_flush || mret || uret || ecall || ebreak || dret || fence) && is_decoding)
+    if ( id_valid && is_decoding )
     begin
       trace = new ();
 
@@ -916,7 +911,6 @@ module riscv_tracer (
       trace.cycles     = cycles;
       trace.pc         = pc;
       trace.instr      = instr;
-
       // use casex instead of case inside due to ModelSim bug
       casex (instr)
         // Aliases
@@ -1108,10 +1102,10 @@ module riscv_tracer (
         {25'b?, OPCODE_STORE_POST}: trace.printStoreInstr();
         {25'b?, OPCODE_HWLOOP}:     trace.printHwloopInstr();
         {25'b?, OPCODE_VECOP}:      trace.printVecInstr();
-        default:           trace.printMnemonic("INVALID");
+        default: trace.printMnemonic("INVALID");
       endcase // unique case (instr)
-
-      instr_ex.put(trace);
+      if(!is_illegal)
+        instr_ex.put(trace);
     end
   end // always @ (posedge clk)
 