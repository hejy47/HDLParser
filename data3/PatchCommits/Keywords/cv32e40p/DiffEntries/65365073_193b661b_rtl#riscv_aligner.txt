653650733dc8ecfba07588ce14725fbb440fda43
:bug: fix wrong update of instruction when flushing
diff --git a/rtl/riscv_aligner.sv b/rtl/riscv_aligner.sv
index c6ce17a..2ca9a72 100644
--- a/rtl/riscv_aligner.sv
+++ b/rtl/riscv_aligner.sv
@@ -101,7 +101,7 @@ module riscv_aligner
                 pc_n             = pc_plus4;
                 instr_o          = mem_content_i;
                 instr_compress_o = 1'b0;
-                update_state     = fetch_valid_i & (id_valid_i | flush_instr_i);
+                update_state     = (fetch_valid_i & id_valid_i) | flush_instr_i;
                 if(hwloop_branch_i)
                   pc_n = hwloop_addr_i;
             end else begin
@@ -113,7 +113,7 @@ module riscv_aligner
                 pc_n             = pc_plus2;
                 instr_o          = {16'b0,mem_content_i[15:0]};
                 instr_compress_o = 1'b1;
-                update_state     = fetch_valid_i & (id_valid_i | flush_instr_i);
+                update_state     = (fetch_valid_i & id_valid_i) | flush_instr_i;
             end
       end
 
@@ -129,7 +129,7 @@ module riscv_aligner
                 pc_n             = pc_plus4;
                 instr_o          = {mem_content_i[15:0],r_instr[15:0]};
                 instr_compress_o = 1'b0;
-                update_state     = fetch_valid_i & (id_valid_i | flush_instr_i);
+                update_state     = (fetch_valid_i & id_valid_i) | flush_instr_i;
             end else begin
                 /*
                   Before we fetched a 16bit aligned instruction
@@ -143,7 +143,7 @@ module riscv_aligner
                 //we cannot overwrite the 32bit instruction just fetched
                 //so tell the IF stage to stall, the coming instruction goes to the FIFO
                 raw_instr_hold_o = fetch_valid_i;
-                update_state     = fetch_valid_i & (id_valid_i | flush_instr_i);
+                update_state     = (fetch_valid_i & id_valid_i) | flush_instr_i;
             end
       end
 
@@ -159,7 +159,7 @@ module riscv_aligner
                 pc_n             = pc_plus4;
                 instr_o          = {mem_content_i[15:0],r_instr[15:0]};
                 instr_compress_o = 1'b0;
-                update_state     = fetch_valid_i & (id_valid_i | flush_instr_i);
+                update_state     = (fetch_valid_i & id_valid_i) | flush_instr_i;
             end else begin
                 /*
                   Before we fetched a 32bit misaligned instruction
@@ -268,7 +268,7 @@ module riscv_aligner
                 pc_n             = pc_plus2;
                 instr_o          = {16'b0,mem_content_i[31:16]};
                 instr_compress_o = 1'b1;
-                update_state     = fetch_valid_i & (id_valid_i | flush_instr_i);
+                update_state     = (fetch_valid_i & id_valid_i) | flush_instr_i;
             end
       end
     endcase // CS