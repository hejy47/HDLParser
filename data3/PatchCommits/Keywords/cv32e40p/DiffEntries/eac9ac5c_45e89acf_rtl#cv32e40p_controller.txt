eac9ac5c0a0da16e3af45ee68e91a8369ed1eabe
:bug: fix next pc during wfi in debug mode
diff --git a/rtl/cv32e40p_controller.sv b/rtl/cv32e40p_controller.sv
index a4db112..9bf66ef 100644
--- a/rtl/cv32e40p_controller.sv
+++ b/rtl/cv32e40p_controller.sv
@@ -423,8 +423,11 @@ module cv32e40p_controller import cv32e40p_pkg::*;
         if ((debug_req_pending || trigger_match_i) & (~debug_mode_q))
         begin
           ctrl_fsm_ns = DBG_TAKEN_IF;
-          halt_if_o   = 1'b1;
-          halt_id_o   = 1'b1;
+          //save here as in the next state the aligner updates the pc_next signal
+          debug_csr_save_o  = 1'b1;
+          csr_save_if_o     = 1'b1;
+          halt_if_o         = 1'b1;
+          halt_id_o         = 1'b1;
         end
 
       end
@@ -1249,7 +1252,6 @@ module cv32e40p_controller import cv32e40p_pkg::*;
         pc_mux_o          = PC_EXCEPTION;
         exc_pc_mux_o      = EXC_PC_DBD;
         csr_save_cause_o  = 1'b1;
-        debug_csr_save_o  = 1'b1;
         if (debug_single_step_i)
             debug_cause_o = DBG_CAUSE_STEP;
         if (debug_req_pending)
@@ -1258,7 +1260,6 @@ module cv32e40p_controller import cv32e40p_pkg::*;
             debug_cause_o = DBG_CAUSE_EBREAK;
         if (trigger_match_i)
           debug_cause_o   = DBG_CAUSE_TRIGGER;
-        csr_save_if_o   = 1'b1;
         ctrl_fsm_ns     = DECODE;
         debug_mode_n    = 1'b1;
       end