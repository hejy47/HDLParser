863d5221852ad62f7fb11a450521619ef65f7ec7
fixed debug
diff --git a/riscv_int_controller.sv b/riscv_int_controller.sv
index 105e690..2b82ab1 100644
--- a/riscv_int_controller.sv
+++ b/riscv_int_controller.sv
@@ -42,8 +42,6 @@ module riscv_int_controller
   input  logic        ctrl_ack_i,
   input  logic        ctrl_kill_i,
 
-  output logic        trap_o,
-
   // external interrupt lines
   input  logic        irq_i,          // level-triggered interrupt inputs
   input  logic        irq_sec_i,      // interrupt secure bit from EU
@@ -51,37 +49,20 @@ module riscv_int_controller
 
   input  logic        m_IE_i,         // interrupt enable bit from CSR (M mode)
   input  logic        u_IE_i,         // interrupt enable bit from CSR (U mode)
-  input  PrivLvl_t    current_priv_lvl_i,
+  input  PrivLvl_t    current_priv_lvl_i
 
-  // from debug unit
-  input  logic [DBG_SETS_W-1:0] dbg_settings_i
 );
 
-
   enum logic [1:0] { IDLE, IRQ_PENDING, IRQ_DONE} exc_ctrl_cs, exc_ctrl_ns;
 
   logic irq_enable_ext;
   logic [4:0] irq_id_q;
   logic irq_sec_q;
 
-  // a trap towards the debug unit is generated when one of the
-  // following conditions are true:
-  // - ebreak instruction encountered
-  // - single-stepping mode enabled
-  // - illegal instruction exception and IIE bit is set
-  // - IRQ and INTE bit is set and no exception is currently running
-  // - Debuger requests halt
-/*
-  assign trap_int =    (dbg_settings_i[DBG_SETS_SSTE])
-                      | (ecall_insn_i            & dbg_settings_i[DBG_SETS_ECALL])
-                      | (ebrk_insn_i             & dbg_settings_i[DBG_SETS_EBRK])
-                      | (illegal_insn_i          & dbg_settings_i[DBG_SETS_EILL])
-                      | (irq_enable_int & irq_i  & dbg_settings_i[DBG_SETS_IRQ]);
-*/
-  assign trap_o = 1'b0;
-
-  //assign irq_enable_int =  ((u_IE_i | irq_sec_q) & current_priv_lvl_i == PRIV_LVL_U) | (m_IE_i & current_priv_lvl_i == PRIV_LVL_M);
+if(PULP_SECURE)
   assign irq_enable_ext =  ((u_IE_i | irq_sec_i) & current_priv_lvl_i == PRIV_LVL_U) | (m_IE_i & current_priv_lvl_i == PRIV_LVL_M);
+else
+  assign irq_enable_ext =  m_IE_i;
 
   assign irq_req_ctrl_o = exc_ctrl_cs == IRQ_PENDING;
   assign irq_sec_ctrl_o = irq_sec_q;