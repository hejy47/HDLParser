c2f9ff51240bd07b33b9e1f58c11b107db1bba87
Merge pull request #419 from silabs-PaulZ/irq_debug_fsm_fix
diff --git a/rtl/cv32e40p_core.sv b/rtl/cv32e40p_core.sv
index dfa6b82..806e3a5 100644
--- a/rtl/cv32e40p_core.sv
+++ b/rtl/cv32e40p_core.sv
@@ -132,8 +132,6 @@ module cv32e40p_core import cv32e40p_apu_core_pkg::*;
 
 
   // IF/ID signals
-  logic              is_hwlp_id;
-  logic [N_HWLP-1:0] hwlp_dec_cnt_id;
   logic              instr_valid_id;
   logic [31:0]       instr_rdata_id;    // Instruction sampled inside IF stage
   logic              is_compressed_id;
@@ -253,7 +251,6 @@ module cv32e40p_core import cv32e40p_apu_core_pkg::*;
   logic [1:0]  mtvec_mode;
   logic [1:0]  utvec_mode;
 
-  logic        csr_access;
   logic [1:0]  csr_op;
   csr_num_e    csr_addr;
   csr_num_e    csr_addr_int;
@@ -362,9 +359,7 @@ module cv32e40p_core import cv32e40p_apu_core_pkg::*;
   logic        irq_pending;
   logic [4:0]  irq_id;
 
-  //Simchecker signal
-  logic is_interrupt;
-  assign is_interrupt = (pc_mux_id == PC_EXCEPTION) && (exc_pc_mux_id == EXC_PC_IRQ);
+  // Mux selector for vectored IRQ PC
   assign m_exc_vec_pc_mux_id = (mtvec_mode == 2'b0) ? 5'h0 : exc_cause;
   assign u_exc_vec_pc_mux_id = (utvec_mode == 2'b0) ? 5'h0 : exc_cause;
 
@@ -445,6 +440,7 @@ module cv32e40p_core import cv32e40p_apu_core_pkg::*;
   #(
     .PULP_XPULP          ( PULP_XPULP        ),
     .PULP_OBI            ( PULP_OBI          ),
+    .PULP_SECURE         ( PULP_SECURE       ),
     .FPU                 ( FPU               )
   )
   if_stage_i
@@ -951,6 +947,7 @@ module cv32e40p_core import cv32e40p_apu_core_pkg::*;
     .busy_o                ( lsu_busy           )
   );
 
+  // Tracer signal
   assign wb_valid = lsu_ready_wb & apu_ready_wb;
 
 
@@ -992,7 +989,6 @@ module cv32e40p_core import cv32e40p_apu_core_pkg::*;
     .mtvec_addr_i            ( mtvec_addr_i[31:0] ),
     .csr_mtvec_init_i        ( csr_mtvec_init     ),
     // Interface to CSRs (SRAM like)
-    .csr_access_i            ( csr_access         ),
     .csr_addr_i              ( csr_addr           ),
     .csr_wdata_i             ( csr_wdata          ),
     .csr_op_i                ( csr_op             ),
@@ -1058,7 +1054,7 @@ module cv32e40p_core import cv32e40p_apu_core_pkg::*;
 
     // performance counter related signals
     .id_valid_i              ( id_valid           ),
-    .is_compressed_i         ( is_compressed      ),
+    .is_compressed_i         ( is_compressed_id   ),
     .is_decoding_i           ( is_decoding        ),
 
     .imiss_i                 ( perf_imiss         ),
@@ -1080,7 +1076,6 @@ module cv32e40p_core import cv32e40p_apu_core_pkg::*;
   );
 
   //  CSR access
-  assign csr_access   =  csr_access_ex;
   assign csr_addr     =  csr_addr_int;
   assign csr_wdata    =  alu_operand_a_ex;
   assign csr_op       =  csr_op_ex;