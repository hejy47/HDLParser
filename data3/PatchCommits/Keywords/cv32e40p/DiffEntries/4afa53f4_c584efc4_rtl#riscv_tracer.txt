4afa53f436da083cb4b477d5cdc87e18b3de8776
:bug: Retire signal not correct for misaligned accesses
diff --git a/rtl/riscv_tracer.sv b/rtl/riscv_tracer.sv
index 05de222..ad90b25 100644
--- a/rtl/riscv_tracer.sv
+++ b/rtl/riscv_tracer.sv
@@ -76,6 +76,7 @@ module riscv_tracer (
   input  logic        ex_data_we,
   input  logic [31:0] ex_data_addr,
   input  logic [31:0] ex_data_wdata,
+  input  logic        data_misaligned,
 
   input  logic        wb_bypass,
 
@@ -745,6 +746,8 @@ module riscv_tracer (
 
   mailbox #(instr_trace_t) instr_ex = new ();
   mailbox #(instr_trace_t) instr_wb = new ();
+  mailbox #(instr_trace_t) instr_ex_misaligned = new ();
+
 
   // cycle counter
   always_ff @(posedge clk, negedge rst_n)
@@ -809,10 +812,37 @@ module riscv_tracer (
         end
       end while (!ex_valid && !wb_bypass); // ex branches bypass the WB stage
 
+      if(ex_data_req && data_misaligned)
+        instr_ex_misaligned.put(trace);
+      else
+        instr_wb.put(trace);
+
+    end
+  end
+
+
+  // misaligned pipeline
+  initial
+  begin
+    instr_trace_t trace;
+    mem_acc_t     mem_acc;
+
+    while(1) begin
+      instr_ex_misaligned.get(trace);
+
+      // wait until we are going to the next stage
+      do begin
+        @(negedge clk);
+
+      end while (!ex_valid && !wb_bypass);
+
       instr_wb.put(trace);
+
     end
   end
 
+
+
   // these signals are for simulator visibility. Don't try to do the nicer way
   // of making instr_trace_t visible to inspect it with your simulator. Some
   // choke for some unknown performance reasons.