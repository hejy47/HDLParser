8ccbcdcb505386f1df49fbd113a9e07672c04263
Merge pull request #507 from dawidzim/duplicate_fp_compilation
diff --git a/rtl/cv32e40p_core.sv b/rtl/cv32e40p_core.sv
index 8de7e3d..30f0486 100644
--- a/rtl/cv32e40p_core.sv
+++ b/rtl/cv32e40p_core.sv
@@ -30,7 +30,7 @@
 
 module cv32e40p_core import cv32e40p_apu_core_pkg::*;
 #(
-  parameter PULP_XPULP          =  1,                   // PULP ISA Extension (incl. custom CSRs and hardware loop, excl. p.elw) !!! HARDWARE LOOP IS NOT OPERATIONAL YET !!!
+  parameter PULP_XPULP          =  0,                   // PULP ISA Extension (incl. custom CSRs and hardware loop, excl. p.elw)
   parameter PULP_CLUSTER        =  0,                   // PULP Cluster interface (incl. p.elw)
   parameter FPU                 =  0,                   // Floating Point Unit (interfaced via APU interface)
   parameter PULP_ZFINX          =  0,                   // Float-in-General Purpose registers
@@ -1175,6 +1175,23 @@ module cv32e40p_core import cv32e40p_apu_core_pkg::*;
   // Assertions
   //----------------------------------------------------------------------------
 
+  // PULP_XPULP, PULP_CLUSTER, FPU, PULP_ZFINX
+  always_ff @(posedge rst_ni)
+  begin
+    if (PULP_XPULP) begin
+      $warning("PULP_XPULP == 1 has not been verified yet and non-backward compatible RTL fixes are expected (see https://github.com/openhwgroup/cv32e40p/issues/452)");
+    end
+    if (PULP_CLUSTER) begin
+      $warning("PULP_CLUSTER == 1 has not been verified yet");
+    end
+    if (FPU) begin
+      $warning("FPU == 1 has not been verified yet");
+    end
+    if (PULP_ZFINX) begin
+      $warning("PULP_ZFINX == 1 has not been verified yet");
+    end
+  end
+
   generate
   if (!PULP_XPULP) begin
 