c2116672fde37329d5aaa2df60cced6b546b5acd
Add `tinfo` debug CSR
diff --git a/rtl/cv32e40p_cs_registers.sv b/rtl/cv32e40p_cs_registers.sv
index 5b4e305..b6f1965 100644
--- a/rtl/cv32e40p_cs_registers.sv
+++ b/rtl/cv32e40p_cs_registers.sv
@@ -254,6 +254,7 @@ module cv32e40p_cs_registers
   logic [31:0] mepc_q, mepc_n;
   logic [31:0] uepc_q, uepc_n;
   // Trigger
+  logic [ 3:0] tmatch_control_type;
   logic [31:0] tmatch_control_rdata;
   logic [31:0] tmatch_value_rdata;
   // Debug
@@ -419,6 +420,8 @@ if(PULP_SECURE==1) begin
                csr_rdata_int = tmatch_control_rdata;
       CSR_TDATA2:
                csr_rdata_int = tmatch_value_rdata;
+      CSR_TINFO:
+               csr_rdata_int = 1'b1 << tmatch_control_type;
 
       CSR_DCSR:
                csr_rdata_int = dcsr_q;//
@@ -583,6 +586,8 @@ end else begin //PULP_SECURE == 0
                csr_rdata_int = tmatch_control_rdata;
       CSR_TDATA2:
                csr_rdata_int = tmatch_value_rdata;
+      CSR_TINFO:
+               csr_rdata_int = 1'b1 << tmatch_control_type;
 
       CSR_DCSR:
                csr_rdata_int = dcsr_q;//
@@ -1384,9 +1389,10 @@ end //PULP_SECURE
 
     // Assign read data
     // TDATA0 - only support simple address matching
+    assign tmatch_control_type = 4'h2; // type    : address/data match
     assign tmatch_control_rdata =
                {
-                4'h2,                  // type    : address/data match
+                tmatch_control_type,
                 1'b1,                  // dmode   : access from D mode only
                 6'h00,                 // maskmax : exact match only
                 1'b0,                  // hit     : not supported
@@ -1413,6 +1419,7 @@ end //PULP_SECURE
                               (pc_id_i[31:0] == tmatch_value_q[31:0]);
 
   end else begin : gen_no_trigger_regs
+    assign tmatch_control_type  = 'b0;
     assign tmatch_control_rdata = 'b0;
     assign tmatch_value_rdata   = 'b0;
     assign trigger_match_o      = 'b0;