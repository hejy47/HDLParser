fe130e238d151827dec64f5e88522c4060945b99
added xtvec and changed debug controller for boot
diff --git a/if_stage.sv b/if_stage.sv
index 6431f70..90a20ee 100644
--- a/if_stage.sv
+++ b/if_stage.sv
@@ -38,8 +38,8 @@ module riscv_if_stage
     input  logic        clk,
     input  logic        rst_n,
 
-    // the boot address is used to calculate the exception offsets
-    input  logic [31:0] boot_addr_i,
+    // Used to calculate the exception offsets
+    input  logic [23:0] trap_base_addr_i,
 
     // instruction request control
     input  logic        req_i,
@@ -123,10 +123,10 @@ module riscv_if_stage
     exc_pc = 'x;
 
     unique case (exc_pc_mux_i)
-      EXC_PC_ILLINSN: exc_pc = { boot_addr_i[31:8], EXC_OFF_ILLINSN };
-      EXC_PC_ECALL:   exc_pc = { boot_addr_i[31:8], EXC_OFF_ECALL   };
-      EXC_PC_LOAD:    exc_pc = { boot_addr_i[31:8], EXC_OFF_LSUERR  };
-      EXC_PC_IRQ:     exc_pc = { boot_addr_i[31:8], 1'b0, exc_vec_pc_mux_i[4:0], 2'b0 };
+      EXC_PC_ILLINSN: exc_pc = { trap_base_addr_i, EXC_OFF_ILLINSN };
+      EXC_PC_ECALL:   exc_pc = { trap_base_addr_i, EXC_OFF_ECALL   };
+      EXC_PC_LOAD:    exc_pc = { trap_base_addr_i, EXC_OFF_LSUERR  };
+      EXC_PC_IRQ:     exc_pc = { trap_base_addr_i, 1'b0, exc_vec_pc_mux_i[4:0], 2'b0 };
       // TODO: Add case for EXC_PC_STORE as soon as it differs from load
 
       default:;
@@ -139,7 +139,7 @@ module riscv_if_stage
     fetch_addr_n = 'x;
 
     unique case (pc_mux_i)
-      PC_BOOT:      fetch_addr_n = {boot_addr_i[31:8], EXC_OFF_RST};
+      PC_BOOT:      fetch_addr_n = {trap_base_addr_i, EXC_OFF_RST};
       PC_JUMP:      fetch_addr_n = jump_target_id_i;
       PC_BRANCH:    fetch_addr_n = jump_target_ex_i;
       PC_EXCEPTION: fetch_addr_n = exc_pc;             // set PC to exception handler