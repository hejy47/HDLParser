e9bef11ff391a593dd32012bb5e6fe7795ac9d0e
Merge pull request #475 from davideschiavone/fix_debug_ss
diff --git a/rtl/cv32e40p_controller.sv b/rtl/cv32e40p_controller.sv
index 74bf8b4..bce7a88 100644
--- a/rtl/cv32e40p_controller.sv
+++ b/rtl/cv32e40p_controller.sv
@@ -761,15 +761,6 @@ module cv32e40p_controller import cv32e40p_pkg::*;
                       hwlp_dec_cnt_o[0] = hwlp_end0_eq_pc;
                       hwlp_dec_cnt_o[1] = hwlp_end1_eq_pc;
 
-                      // Todo: check this. The message does not seem coherent with the condition and why is this condition an error?
-                      if ( (hwlp_end_addr_i[1] == pc_id_i + 4 && hwlp_counter_i[1] > 1) &&  (hwlp_end_addr_i[0] == pc_id_i + 4 && hwlp_counter_i[0] > 1))
-                      begin
-`ifndef SYNTHESIS
-                          $display("Jumping to same location in HWLoop at time %t",$time);
-                          $stop;
-`endif
-                      end
-
                     end
                   endcase // unique case (1'b1)
                 end // else: !if(illegal_insn_i)
@@ -1498,6 +1489,14 @@ endgenerate
 
   a_pulp_cluster_excluded_states : assert property(p_pulp_cluster_excluded_states);
 
+
+  // HWLoop 0 and 1 having target address constraints
+  property p_hwlp_same_target_address;
+     @(posedge clk) (hwlp_counter_i[1] > 1 && hwlp_counter_i[0] > 1) |-> ( hwlp_end_addr_i[1] >= hwlp_end_addr_i[0] + 8 );
+  endproperty
+
+  a_hwlp_same_target_address : assert property(p_hwlp_same_target_address) else $warning("%t, HWLoops target address do not respect constraints", $time);
+
   generate
   if (!PULP_XPULP) begin
     property p_no_hwlp;