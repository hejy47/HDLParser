d6f8fe2e78f724a600543d9818eecfca6811b85d
merge xret_fix
diff --git a/rtl/riscv_id_stage.sv b/rtl/riscv_id_stage.sv
index c58ead2..dbd9860 100644
--- a/rtl/riscv_id_stage.sv
+++ b/rtl/riscv_id_stage.sv
@@ -124,6 +124,9 @@ module riscv_id_stage
     // ALU
     output logic        alu_en_ex_o,
     output logic [ALU_OP_WIDTH-1:0] alu_operator_ex_o,
+    output logic        alu_is_clpx_ex_o,
+    output logic        alu_is_subrot_ex_o,
+    output logic [ 1:0] alu_clpx_shift_ex_o,
 
 
     // MUL
@@ -140,6 +143,9 @@ module riscv_id_stage
     output logic [31:0] mult_dot_op_b_ex_o,
     output logic [31:0] mult_dot_op_c_ex_o,
     output logic [ 1:0] mult_dot_signed_ex_o,
+    output logic        mult_is_clpx_ex_o,
+    output logic [ 1:0] mult_clpx_shift_ex_o,
+    output logic        mult_clpx_img_ex_o,
 
     // APU
     output logic                        apu_en_ex_o,
@@ -344,9 +350,9 @@ module riscv_id_stage
   logic [1:0]  mult_dot_signed;  // Signed mode dot products (can be mixed types)
 
   // FPU signals
-  logic [C_FPNEW_FMTBITS-1:0]  fpu_fmt;
-  logic [C_FPNEW_FMTBITS-1:0]  fpu_fmt2;
-  logic [C_FPNEW_IFMTBITS-1:0] fpu_ifmt;
+  logic [C_FPNEW_FMTBITS-1:0]  fpu_src_fmt;
+  logic [C_FPNEW_FMTBITS-1:0]  fpu_dst_fmt;
+  logic [C_FPNEW_IFMTBITS-1:0] fpu_int_fmt;
 
   // APU signals
   logic                        apu_en;
@@ -443,6 +449,8 @@ module riscv_id_stage
   logic        reg_d_alu_is_reg_b_id;
   logic        reg_d_alu_is_reg_c_id;
 
+  logic        is_clpx, is_subrot;
+
   logic        mret_dec;
   logic        uret_dec;
   logic        dret_dec;
@@ -832,7 +840,7 @@ module riscv_id_stage
               apu_flags = '0;
           APU_FLAGS_FPNEW:
             if (FPU == 1)
-              apu_flags = {fpu_ifmt, fpu_fmt2, fpu_fmt, fp_rnd_mode};
+              apu_flags = {fpu_int_fmt, fpu_src_fmt, fpu_dst_fmt, fp_rnd_mode};
             else
               apu_flags = '0;
           default:
@@ -1066,6 +1074,8 @@ module riscv_id_stage
     .imm_a_mux_sel_o                 ( imm_a_mux_sel             ),
     .imm_b_mux_sel_o                 ( imm_b_mux_sel             ),
     .regc_mux_o                      ( regc_mux                  ),
+    .is_clpx_o                       ( is_clpx                   ),
+    .is_subrot_o                     ( is_subrot                 ),
 
     // MUL signals
     .mult_operator_o                 ( mult_operator             ),
@@ -1078,9 +1088,9 @@ module riscv_id_stage
 
     // FPU / APU signals
     .frm_i                           ( frm_i                     ),
-    .fpu_fmt_o                       ( fpu_fmt                   ),
-    .fpu_fmt2_o                      ( fpu_fmt2                  ),
-    .fpu_ifmt_o                      ( fpu_ifmt                  ),
+    .fpu_src_fmt_o                   ( fpu_src_fmt               ),
+    .fpu_dst_fmt_o                   ( fpu_dst_fmt               ),
+    .fpu_int_fmt_o                   ( fpu_int_fmt               ),
     .apu_en_o                        ( apu_en                    ),
     .apu_type_o                      ( apu_type                  ),
     .apu_op_o                        ( apu_op                    ),
@@ -1391,6 +1401,9 @@ module riscv_id_stage
       bmask_b_ex_o                <= '0;
       imm_vec_ext_ex_o            <= '0;
       alu_vec_mode_ex_o           <= '0;
+      alu_clpx_shift_ex_o         <= 2'b0;
+      alu_is_clpx_ex_o            <= 1'b0;
+      alu_is_subrot_ex_o          <= 1'b0;
 
       mult_operator_ex_o          <= '0;
       mult_operand_a_ex_o         <= '0;
@@ -1405,6 +1418,9 @@ module riscv_id_stage
       mult_dot_op_b_ex_o          <= '0;
       mult_dot_op_c_ex_o          <= '0;
       mult_dot_signed_ex_o        <= '0;
+      mult_is_clpx_ex_o           <= 1'b0;
+      mult_clpx_shift_ex_o        <= 2'b0;
+      mult_clpx_img_ex_o          <= 1'b0;
 
       apu_en_ex_o                 <= '0;
       apu_type_ex_o               <= '0;
@@ -1482,6 +1498,9 @@ module riscv_id_stage
             bmask_b_ex_o              <= bmask_b_id;
             imm_vec_ext_ex_o          <= imm_vec_ext_id;
             alu_vec_mode_ex_o         <= alu_vec_mode;
+            alu_is_clpx_ex_o          <= is_clpx;
+            alu_clpx_shift_ex_o       <= instr[14:13];
+            alu_is_subrot_ex_o        <= is_subrot;
           end
         end
 
@@ -1501,6 +1520,9 @@ module riscv_id_stage
           mult_dot_op_a_ex_o        <= alu_operand_a;
           mult_dot_op_b_ex_o        <= alu_operand_b;
           mult_dot_op_c_ex_o        <= alu_operand_c;
+          mult_is_clpx_ex_o         <= is_clpx;
+          mult_clpx_shift_ex_o      <= instr[14:13];
+          mult_clpx_img_ex_o        <= instr[25];
         end
 
         // APU pipeline