f2fc5fc7ffdf390053d19bc06dfbd18066503df7
integrated back fix for 256
diff --git a/rtl/riscv_tracer.sv b/rtl/riscv_tracer.sv
index ad90b25..ba46dee 100644
--- a/rtl/riscv_tracer.sv
+++ b/rtl/riscv_tracer.sv
@@ -45,6 +45,8 @@ module riscv_tracer (
 
   input  logic [31:0] pc,
   input  logic [31:0] instr,
+  input  ctrl_state_e controller_state_i,
+
   input  logic        compressed,
   input  logic        id_valid,
   input  logic        is_decoding,
@@ -129,6 +131,7 @@ module riscv_tracer (
     reg_t        regs_read[$];
     reg_t        regs_write[$];
     mem_acc_t    mem_access[$];
+    logic        retired;
 
     function new ();
       str        = "";
@@ -747,6 +750,7 @@ module riscv_tracer (
   mailbox #(instr_trace_t) instr_ex = new ();
   mailbox #(instr_trace_t) instr_wb = new ();
   mailbox #(instr_trace_t) instr_ex_misaligned = new ();
+  mailbox #(instr_trace_t) instr_wb_delay = new ();
 
 
   // cycle counter
@@ -873,11 +877,30 @@ module riscv_tracer (
       insn_disas = trace.str;
       insn_pc    = trace.pc;
       insn_val   = trace.instr;
+      if(~(trace.str == "mret" || trace.str == "uret")) begin
+        -> retire;
+        insn_regs_write = trace.regs_write;
+      end else begin
+        instr_wb_delay.put(trace);
+      end
+
+    end
+  end
+
+  initial
+  begin
+    instr_trace_t trace;
+    //this process delays by 1 cycle he retire event for xret instrucions
+    while(1) begin
+      instr_wb_delay.get(trace);
+      // wait until we are going to the next stage
+      @(negedge clk);
       insn_regs_write = trace.regs_write;
-      -> retire;
+       -> retire;
     end
   end
 
+
   // log execution
   always @(negedge clk)
   begin