d7cb64eb066ad271db77cfe90d9a5e4e6a075e75
Fix for wrong dcsr.cause in case of aborted sleep
diff --git a/rtl/cv32e40p_controller.sv b/rtl/cv32e40p_controller.sv
index acee669..63b6aa2 100644
--- a/rtl/cv32e40p_controller.sv
+++ b/rtl/cv32e40p_controller.sv
@@ -230,6 +230,9 @@ module cv32e40p_controller import cv32e40p_pkg::*;
   logic debug_req_q;
   logic debug_req_pending;
 
+  // qualify wfi vs nosleep locally 
+  logic wfi_active;
+
 
   ////////////////////////////////////////////////////////////////////////////////////////////
   //   ____ ___  ____  _____    ____ ___  _   _ _____ ____   ___  _     _     _____ ____    //
@@ -523,7 +526,7 @@ module cv32e40p_controller import cv32e40p_pkg::*;
             else
               begin
 
-                is_hwlp_illegal  = is_hwlp_body & (jump_in_dec || branch_in_id_dec || mret_insn_i || uret_insn_i || dret_insn_i || is_compressed_i || fencei_insn_i || wfi_i);
+                is_hwlp_illegal  = is_hwlp_body & (jump_in_dec || branch_in_id_dec || mret_insn_i || uret_insn_i || dret_insn_i || is_compressed_i || fencei_insn_i || wfi_active);
 
                 if(illegal_insn_i || is_hwlp_illegal) begin
 
@@ -568,7 +571,7 @@ module cv32e40p_controller import cv32e40p_pkg::*;
 
                     end
 
-                    wfi_i: begin
+                    wfi_active: begin
                       halt_if_o     = 1'b1;
                       halt_id_o     = 1'b0;
                       ctrl_fsm_ns           = id_ready_i ? FLUSH_EX : DECODE;
@@ -740,7 +743,7 @@ module cv32e40p_controller import cv32e40p_pkg::*;
             else
               begin
 
-                is_hwlp_illegal  = (jump_in_dec || branch_in_id_dec || mret_insn_i || uret_insn_i || dret_insn_i || is_compressed_i || fencei_insn_i || wfi_i);
+                is_hwlp_illegal  = (jump_in_dec || branch_in_id_dec || mret_insn_i || uret_insn_i || dret_insn_i || is_compressed_i || fencei_insn_i || wfi_active);
 
                 if(illegal_insn_i || is_hwlp_illegal) begin
 
@@ -1075,7 +1078,15 @@ module cv32e40p_controller import cv32e40p_pkg::*;
               end
 
               wfi_i: begin
-                  ctrl_fsm_ns = WAIT_SLEEP;
+                  if ( debug_req_pending) begin
+                      ctrl_fsm_ns = DBG_TAKEN_IF;
+                      debug_force_wakeup_n = 1'b1;
+                  end else begin
+                      if ( wfi_active )
+                          ctrl_fsm_ns = WAIT_SLEEP;
+                      else
+                          ctrl_fsm_ns = DECODE;
+                  end
               end
               fencei_insn_i: begin
                   // we just jump to instruction after the fence.i since that
@@ -1443,6 +1454,9 @@ endgenerate
 
   assign debug_wfi_no_sleep_o = debug_mode_q || debug_req_pending || debug_single_step_i || trigger_match_i || PULP_CLUSTER;
 
+  // Gate off wfi 
+  assign wfi_active = wfi_i & ~debug_wfi_no_sleep_o;
+
   // sticky version of debug_req (must be on clk_ungated_i such that incoming pulse before core is enabled is not missed)
   always_ff @(posedge clk_ungated_i, negedge rst_n)
     if ( !rst_n )