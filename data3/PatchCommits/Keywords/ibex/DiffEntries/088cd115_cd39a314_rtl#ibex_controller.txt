088cd11593c9c3e623ec445c43dd19efcd7178a8
[dbg] Add minimal hardware breakpoint support
diff --git a/rtl/ibex_controller.sv b/rtl/ibex_controller.sv
index f0330054..9fd07171 100644
--- a/rtl/ibex_controller.sv
+++ b/rtl/ibex_controller.sv
@@ -68,6 +68,7 @@ module ibex_controller (
     input  logic                  debug_single_step_i,
     input  logic                  debug_ebreakm_i,
     input  logic                  debug_ebreaku_i,
+    input  logic                  trigger_match_i,
 
     output logic                  csr_save_if_o,
     output logic                  csr_save_id_o,
@@ -197,7 +198,9 @@ module ibex_controller (
   // instruction valid otherwise the core will immediately enter debug mode
   // due to a recently flushed IF (or a delay in an instruction returning from
   // memory) before it has had anything to single step.
-  assign enter_debug_mode = (debug_req_i | (debug_single_step_i & instr_valid_i)) & ~debug_mode_q;
+  // Also enter debug mode on a trigger match (hardware breakpoint)
+  assign enter_debug_mode = (debug_req_i | (debug_single_step_i & instr_valid_i) |
+                             trigger_match_i) & ~debug_mode_q;
 
   // Set when an ebreak should enter debug mode rather than jump to exception
   // handler
@@ -420,7 +423,7 @@ module ibex_controller (
       DBG_TAKEN_IF: begin
         // enter debug mode and save PC in IF to dpc
         // jump to debug exception handler in debug memory
-        if (debug_single_step_i || debug_req_i) begin
+        if (debug_single_step_i || debug_req_i || trigger_match_i) begin
           flush_id         = 1'b1;
           pc_mux_o         = PC_EXC;
           pc_set_o         = 1'b1;
@@ -430,7 +433,9 @@ module ibex_controller (
           debug_csr_save_o = 1'b1;
 
           csr_save_cause_o = 1'b1;
-          if (debug_single_step_i) begin
+          if (trigger_match_i) begin
+            debug_cause_o = DBG_CAUSE_TRIGGER;
+          end else if (debug_single_step_i) begin
             debug_cause_o = DBG_CAUSE_STEP;
           end else begin
             debug_cause_o = DBG_CAUSE_HALTREQ;