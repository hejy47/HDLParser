2c75c2b2ec90bebb756386e1360810474323c1ad
Update lowrisc_ip to lowRISC/opentitan@1ae03937f
diff --git a/vendor/lowrisc_ip/ip/prim/rtl/prim_secded_22_16_dec.sv b/vendor/lowrisc_ip/ip/prim/rtl/prim_secded_22_16_dec.sv
index 5710cb64..901ca4aa 100644
--- a/vendor/lowrisc_ip/ip/prim/rtl/prim_secded_22_16_dec.sv
+++ b/vendor/lowrisc_ip/ip/prim/rtl/prim_secded_22_16_dec.sv
@@ -3,7 +3,7 @@
 // SPDX-License-Identifier: Apache-2.0
 //
 // SECDED Decoder generated by
-// util/design/secded_gen.py -m 6 -k 16 -s 3741324996 -c hsiao
+// util/design/secded_gen.py -m 6 -k 16 -s 1592631616 -c hsiao
 
 module prim_secded_22_16_dec (
   input        [21:0] in,
@@ -15,30 +15,30 @@ module prim_secded_22_16_dec (
   logic single_error;
 
   // Syndrome calculation
-  assign syndrome_o[0] = ^(in & 22'h01C5C6);
-  assign syndrome_o[1] = ^(in & 22'h023317);
-  assign syndrome_o[2] = ^(in & 22'h049E2C);
-  assign syndrome_o[3] = ^(in & 22'h0831E9);
-  assign syndrome_o[4] = ^(in & 22'h10CA71);
-  assign syndrome_o[5] = ^(in & 22'h206C9A);
+  assign syndrome_o[0] = ^(in & 22'h019F41);
+  assign syndrome_o[1] = ^(in & 22'h027A34);
+  assign syndrome_o[2] = ^(in & 22'h0429CD);
+  assign syndrome_o[3] = ^(in & 22'h08C0AF);
+  assign syndrome_o[4] = ^(in & 22'h1074D2);
+  assign syndrome_o[5] = ^(in & 22'h20873A);
 
   // Corrected output calculation
-  assign d_o[0] = (syndrome_o == 6'h1a) ^ in[0];
-  assign d_o[1] = (syndrome_o == 6'h23) ^ in[1];
-  assign d_o[2] = (syndrome_o == 6'h7) ^ in[2];
+  assign d_o[0] = (syndrome_o == 6'hd) ^ in[0];
+  assign d_o[1] = (syndrome_o == 6'h38) ^ in[1];
+  assign d_o[2] = (syndrome_o == 6'he) ^ in[2];
   assign d_o[3] = (syndrome_o == 6'h2c) ^ in[3];
   assign d_o[4] = (syndrome_o == 6'h32) ^ in[4];
-  assign d_o[5] = (syndrome_o == 6'h1c) ^ in[5];
-  assign d_o[6] = (syndrome_o == 6'h19) ^ in[6];
-  assign d_o[7] = (syndrome_o == 6'h29) ^ in[7];
-  assign d_o[8] = (syndrome_o == 6'hb) ^ in[8];
-  assign d_o[9] = (syndrome_o == 6'h16) ^ in[9];
-  assign d_o[10] = (syndrome_o == 6'h25) ^ in[10];
-  assign d_o[11] = (syndrome_o == 6'h34) ^ in[11];
-  assign d_o[12] = (syndrome_o == 6'he) ^ in[12];
-  assign d_o[13] = (syndrome_o == 6'h2a) ^ in[13];
-  assign d_o[14] = (syndrome_o == 6'h31) ^ in[14];
-  assign d_o[15] = (syndrome_o == 6'h15) ^ in[15];
+  assign d_o[5] = (syndrome_o == 6'h2a) ^ in[5];
+  assign d_o[6] = (syndrome_o == 6'h15) ^ in[6];
+  assign d_o[7] = (syndrome_o == 6'h1c) ^ in[7];
+  assign d_o[8] = (syndrome_o == 6'h25) ^ in[8];
+  assign d_o[9] = (syndrome_o == 6'h23) ^ in[9];
+  assign d_o[10] = (syndrome_o == 6'h31) ^ in[10];
+  assign d_o[11] = (syndrome_o == 6'h7) ^ in[11];
+  assign d_o[12] = (syndrome_o == 6'h13) ^ in[12];
+  assign d_o[13] = (syndrome_o == 6'h16) ^ in[13];
+  assign d_o[14] = (syndrome_o == 6'h1a) ^ in[14];
+  assign d_o[15] = (syndrome_o == 6'h29) ^ in[15];
 
   // err_o calc. bit0: single error, bit1: double error
   assign single_error = ^syndrome_o;