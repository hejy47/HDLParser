======Commit: 8fafdc2a======
======Short Message======
[chip,dv,sw] Add SW timeout functionality
======Full Message======
[chip,dv,sw] Add SW timeout functionality

This commit adds 2 inlined functions in `ibex.h` to support a timeout
detection capability. The timeout is set in microseconds.

In addition, it adds a convenience macro that spins on an external
expression, throwing an error and aborting immediately if the timeout
occurred waiting for that expression to be true.

Signed-off-by: Srikrishna Iyer <sriyer@google.com>



======Commit: ae48437a======
======Short Message======
[dif/usbdev] Integrate autogen'd DIF artifacts into src tree.
======Full Message======
[dif/usbdev] Integrate autogen'd DIF artifacts into src tree.

This commit partially addresses #8142. Specifically it:
1. deprecates existing (manually implemented) **USB Device**
   specific DIF return codes and toggle types,
2. integrates the auto-generated **USB Device** DIFs into meson build
   targets, and.
3. refactors all existing source code to make use of the new shared DIF
   types and error codes.

Signed-off-by: Timothy Trippel <ttrippel@google.com>



======Commit: 0242a8b9======
======Short Message======
[dif/usbdev] Decouple HW config from DIF handle init.
======Full Message======
[dif/usbdev] Decouple HW config from DIF handle init.

DIF libraries across most IPs have two DIFs for initializing and
configuring an IP (respectively):
1. `dif_<ip>_init(...)` initializes an IP DIF handle, and
2. `dif_<ip>_configure(...)` configures an IP with runtime parameters.

The usbdev DIF library did not conform to this pattern, rather it
combined the intended functionality of both DIFs above into the first
DIF listed above, the `dif_<ip>_init(...)` DIF.

This commit fixes this and enables the usbdev DIF library to conform to
the pattern used by most other DIF libraries, therefore making
auto-generation of IRQ integration-tests feasible.

Signed-off-by: Timothy Trippel <ttrippel@google.com>



======Commit: 9abebb87======
======Short Message======
[clkmgr] Update measurement errors to request alerts only once
======Full Message======
[clkmgr] Update measurement errors to request alerts only once

- previously alerts were requested until software explicitly cleared, but
  this was deemed unacceptable behavior.

- Fixes #8556

Signed-off-by: Timothy Chen <timothytim@google.com>



======Commit: d292c0ea======
======Short Message======
[dif/spi_device] Integrate autogen'd DIF artifacts into src tree.
======Full Message======
[dif/spi_device] Integrate autogen'd DIF artifacts into src tree.

This commit partially addresses #8142. Specifically it:
1. deprecates existing (manually implemented) **SPI Device**
   specific DIF return codes and toggle types,
2. integrates the auto-generated **SPI Device** DIFs into meson build
   targets,
3. refactors all existing source code to make use of the new shared DIF
   types and error codes, and
4. embeds the MMIO base address for the IP directly into the IP's DIF
   context handle struct (i.e., `dif_spi_device_t`).

Signed-off-by: Timothy Trippel <ttrippel@google.com>



======Commit: 9c9742a8======
======Short Message======
[dv/clkmgr] Fix frequency measurement test
======Full Message======
[dv/clkmgr] Fix frequency measurement test

Compute the correct expectation.
Improve randomization for thresholds.
On each test round set at most one clock measurement to fail so the
shared alert expectation functionality can handle the test.

Signed-off-by: Guillermo Maturana <maturana@google.com>



======Commit: e31b671b======
======Short Message======
[prim_lfsr/lint] Add temporary waiver for LOOP_VAR_OP lint error
======Full Message======
[prim_lfsr/lint] Add temporary waiver for LOOP_VAR_OP lint error

Signed-off-by: Michael Schaffner <msf@google.com>



======Commit: 49bbe18f======
======Short Message======
[dif/kmac] Integrate autogen'd DIF artifacts into src tree.
======Full Message======
[dif/kmac] Integrate autogen'd DIF artifacts into src tree.

This commit partially addresses #8142. Specifically it:
1. deprecates existing (manually implemented) **KMAC**
   specific DIF return codes and toggle types,
2. integrates the auto-generated **KMAC** DIFs into meson build
   targets,
3. refactors all existing source code to make use of the new shared DIF
   types and error codes, and
4. embeds the MMIO base address for the IP directly into the IP's DIF
   context handle struct (i.e., `dif_kmac_t`).

Signed-off-by: Timothy Trippel <ttrippel@google.com>



======Commit: b106151c======
======Short Message======
[otbn] Update comment to describe generic functionality
======Full Message======
[otbn] Update comment to describe generic functionality

This fixes the wording of a comment to show that the function it
documents works for any OTBN application, not just RSA.

Signed-off-by: Jade Philipoom <jadep@google.com>



======Commit: 9e18b46e======
======Short Message======
Use pycryptodome from upstream
======Full Message======
Use pycryptodome from upstream

A new versin of pycryptodome has been released which includes support
for cSHAKE.

Release notes: https://www.pycryptodome.org/en/latest/src/changelog.html#october-2021

Fixes #6694

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: 2372bf58======
======Short Message======
[otbn] Remove unneeded assertion
======Full Message======
[otbn] Remove unneeded assertion

The assertion checked that the rnd_req_i signal remained asserted until
the request received data. However the logic doesn't require this
constraint to work and it is violated when a fatal error during a stall
waiting for a RND read occurs.

Fixes #8528

Signed-off-by: Greg Chadwick <gac@lowrisc.org>



======Commit: fc115292======
======Short Message======
[ast] Ast lint fixes and waiver file update
======Full Message======
[ast] Ast lint fixes and waiver file update

Signed-off-by: Michael Schaffner <msf@google.com>



======Commit: 29e1062c======
======Short Message======
Revert "[otbn,dv] Sort out timing for done/status signals in ISS"
======Full Message======
Revert "[otbn,dv] Sort out timing for done/status signals in ISS"

This reverts commit aee499c3e167096c6baecf8f9e989d75e94125ff.

This commit breaks private CI:

```
2021-10-07T15:41:49.9790201Z ### Test Results
2021-10-07T15:41:49.9790752Z |  Milestone  |          Name           | Tests             |  Passing  |  Total  |  Pass Rate  |
2021-10-07T15:41:49.9792463Z |:-----------:|:-----------------------:|:------------------|:---------:|:-------:|:-----------:|
2021-10-07T15:41:49.9793370Z |     V1      |          smoke          | otbn_smoke        |     0     |    1    |   0.00 %    |
2021-10-07T15:41:49.9794048Z |     V1      |      csr_hw_reset       | otbn_csr_hw_reset |     1     |    1    |  100.00 %   |
2021-10-07T15:41:49.9794785Z |     V1      |         csr_rw          | otbn_csr_rw       |     1     |    1    |  100.00 %   |
2021-10-07T15:41:49.9795479Z |     V1      |                         | **TOTAL**         |     2     |    3    |   66.67 %   |
2021-10-07T15:41:49.9796165Z |     V2      | tl_d_outstanding_access | otbn_csr_hw_reset |     1     |    1    |  100.00 %   |
2021-10-07T15:41:49.9796889Z |             |                         | otbn_csr_rw       |     1     |    1    |  100.00 %   |
2021-10-07T15:41:49.9797568Z |     V2      |   tl_d_partial_access   | otbn_csr_hw_reset |     1     |    1    |  100.00 %   |
2021-10-07T15:41:49.9798330Z |             |                         | otbn_csr_rw       |     1     |    1    |  100.00 %   |
2021-10-07T15:41:49.9799006Z |             |                         | **TOTAL**         |     2     |    3    |   66.67 %   |
2021-10-07T15:41:49.9799366Z
2021-10-07T15:41:49.9799751Z ## Failure Buckets
2021-10-07T15:41:49.9799998Z
2021-10-07T15:41:49.9800721Z * `UVM_ERROR (otbn_scoreboard.sv:240) [scoreboard] Check failed item.d_data == exp_read_data.val (* [*] vs * [*]) value for register otbn_reg_block.status` has 1 failures:
2021-10-07T15:41:49.9801604Z     * Test otbn_smoke has 1 failures.
2021-10-07T15:41:49.9802534Z         * 0.otbn_smoke.1\
2021-10-07T15:41:49.9803525Z           Line 42, in log /azp/agent/_work/1/s/scratch/HEAD/otbn-sim-vcs/0.otbn_smoke/out/run.log
2021-10-07T15:41:49.9804259Z
2021-10-07T15:41:49.9805026Z                 UVM_ERROR @ 184377673 ps: (otbn_scoreboard.sv:240) [uvm_test_top.env.scoreboard] Check failed item.d_data == exp_read_data.val (0 [0x0] vs 1 [0x1]) value for register otbn_reg_block.status
2021-10-07T15:41:49.9806203Z                 UVM_INFO @ 184377673 ps: (uvm_report_server.svh:901) [UVM/REPORT/SERVER]
2021-10-07T15:41:49.9807126Z                 --- UVM Report Summary ---
2021-10-07T15:41:49.9807650Z
2021-10-07T15:41:49.9808110Z                 Quit count reached!
```

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: 6b7a435c======
======Short Message======
[dvsim] Correctly set self_dir for included Hjson files
======Full Message======
[dvsim] Correctly set self_dir for included Hjson files

The `self_dir` variable (used as `{self_dir}`) in dvsim-processed Hjson
files is intended to contain the absolute path to the Hjson file it
appears in. This was the case for top-level Hjson files (i.e. a Hjson
config file which was directly passed to dvsim.py), but not for included
files. Fix that.

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: aee499c3======
======Short Message======
[otbn,dv] Sort out timing for done/status signals in ISS
======Full Message======
[otbn,dv] Sort out timing for done/status signals in ISS

Now that otbn_core_model exposes a STATUS register, we can use it to
derive the "done" signal. Using the status register directly, rather
than reconstructing it from the done signal, models the OTBN block
more closely and actually simplifies a load of tracking DV
code (mainly because the two things that we're comparing Just Match,
so we don't need to convert between the two views of the world).

Unfortunately, we can't get rid of the "done" signal entirely, because
otbn.sv can choose to instantiate the model instead of the RTL to
represent the core. The timing isn't *quite* right here, because the
core flops STATUS but not its done_o output. But this shouldn't matter
for the chip-level sims where we use the model like this.

We *do* check that the RTL's done signal is as predicted in the UVM
and verilator testbenches.

This patch also sorts out the timing of the start of execution in the
UVM testbench: the ISS was probing the wrong start signal, so started
a cycle late. This didn't matter too much, because it and the design
were both waiting on the EDN, which took more than one cycle.

Finally, we fix the assertion that checks the model and RTL have
matching STATUS. This was broken before (using "rst_n", rather than
"!rst_n"), which is why we didn't notice the off-by-one at the start.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 7dbc8899======
======Short Message======
[dif/pinmux] Integrate autogen'd DIF artifacts into src tree.
======Full Message======
[dif/pinmux] Integrate autogen'd DIF artifacts into src tree.

This commit partially addresses #8142. Specifically it:
1. deprecates existing (manually implemented) **Pin Multiplexer**
   specific DIF return codes and toggle type,
2. integrates the auto-generated **Pin Multiplexer** DIFs into meson build
   targets, and
3. refactors all existing source code to make use of the new shared DIF
   types and error codes.

This continues the long-term goal of auto-generating several DIF
components across all IPs, as described in #8142.

Signed-off-by: Timothy Trippel <ttrippel@google.com>



======Commit: eb29bdb3======
======Short Message======
[otbn] Prevent RF integrity error when there is a call stack error
======Full Message======
[otbn] Prevent RF integrity error when there is a call stack error

When a call stack pop causes an underflow both integrity and data bits
are invalid so the integrity error has no meaning.

Fixes #8354

Signed-off-by: Greg Chadwick <gac@lowrisc.org>



======Commit: d6f85fc7======
======Short Message======
Update edalize requirement to 0.2.4
======Full Message======
Update edalize requirement to 0.2.4

Edalize 0.2.3 has a bug which prevents more than one script to run,
which is fixed in later versions.

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: 6e8a9149======
======Short Message======
[sw/dif/otbn] Fix missing dependency
======Full Message======
[sw/dif/otbn] Fix missing dependency

Signed-off-by: Srikrishna Iyer <sriyer@google.com>



======Commit: 316da611======
======Short Message======
[prim_mubi_pkg] Switch to True/False terminology
======Full Message======
[prim_mubi_pkg] Switch to True/False terminology

Fix #8511

Signed-off-by: Michael Schaffner <msf@google.com>



======Commit: 81f262b7======
======Short Message======
[flash_ctrl/dv] Make bank erase to be selectable by default
======Full Message======
[flash_ctrl/dv] Make bank erase to be selectable by default

Signed-off-by: Eitan Shapira <eitanshapira89@gmail.com>



======Commit: 442777a2======
======Short Message======
Require a newer (still modified) version of FuseSoC
======Full Message======
Require a newer (still modified) version of FuseSoC

We have relied for a long time on a patched/customized version of
FuseSoC. This version has now been updated to use FuseSoC 1.12 as
baseline, with our patches on top of that.

Update the (reasonably meaningless) version number in our
python-requirements.txt to reflect that. Users still need to install
whatever the relevant Git branch has to offer.

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: 45cb5d38======
======Short Message======
[otbn] Disable writing to CTRL.software_errs_fatal in CSR tests
======Full Message======
[otbn] Disable writing to CTRL.software_errs_fatal in CSR tests

Writes don't work currently as the field is unimplemented.

Fixes #8525

Signed-off-by: Greg Chadwick <gac@lowrisc.org>



======Commit: 48ecce63======
======Short Message======
[prim] Minor work-around for xcelium
======Full Message======
[prim] Minor work-around for xcelium

- As @matute noted, xcelium incorrectly does not allow empty parameters.
- Workaround for now by assigning a default value

Signed-off-by: Timothy Chen <timothytim@google.com>



======Commit: 90b438ac======
======Short Message======
[ipgen] Fix overly long line
======Full Message======
[ipgen] Fix overly long line

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: d71d1fde======
======Short Message======
[dif/pwrmgr] Integrate autogen'd IRQ DIFs into source tree.
======Full Message======
[dif/pwrmgr] Integrate autogen'd IRQ DIFs into source tree.

This commit partially addresses #8142. Specifically it:
1. deprecates existing (manually implemented) **Power Manager** IRQ DIFs,
2. integrates the auto-generated **Power Manager** IRQ DIFs into meson build
   targets, and
3. refactors all existing source code to make use of the new auto-genenerated
   **Power Manager** IRQ DIFs, and supporting shared DIF typedefs and
   error codes.

This continues the long-term goal of auto-generating all IRQ DIFs across
all IPs, as described in #8142.

Signed-off-by: Timothy Trippel <ttrippel@google.com>



======Commit: a8776e97======
======Short Message======
[top/dv] Fix chip_sw_smoketest
======Full Message======
[top/dv] Fix chip_sw_smoketest

alert agent connects with another rst_n, it was ok before, but now we need to
do alert init sequence after rst, so we need to use the right rst

Signed-off-by: Weicai Yang <weicai@google.com>



======Commit: 61e0e055======
======Short Message======
[prim_lfsr] Minor lint fix
======Full Message======
[prim_lfsr] Minor lint fix

Signed-off-by: Michael Schaffner <msf@google.com>



======Commit: d02ba00a======
======Short Message======
[dif/otp_ctrl] Integrate autogen'd IRQ DIFs into source tree.
======Full Message======
[dif/otp_ctrl] Integrate autogen'd IRQ DIFs into source tree.

This commit partially addresses #8142. Specifically it:
1. deprecates existing (manually implemented) **OTP Controller** IRQ DIFs,
2. integrates the auto-generated **OTP Controller** IRQ DIFs into meson build
   targets, and
3. refactors all existing source code to make use of the new auto-genenerated
   **OTP Controller** IRQ DIFs, and supporting shared DIF typedefs and
   error codes.

This continues the long-term goal of auto-generating all IRQ DIFs across
all IPs, as described in #8142.

Signed-off-by: Timothy Trippel <ttrippel@google.com>



======Commit: 1d398e70======
======Short Message======
[dv/alert_init] Fix regression error
======Full Message======
[dv/alert_init] Fix regression error

This PR fixes regression error on alert_test and tl_int_error regarding
alert init sequence.
The main issue is that dut_init needs to wait for alert_init sequence to
finish before starting the sequence.

Signed-off-by: Cindy Chen <chencindy@opentitan.org>



======Commit: af0b1bfe======
======Short Message======
[dif/clkmgr] Integrate autogen'd DIF artifacts into src tree.
======Full Message======
[dif/clkmgr] Integrate autogen'd DIF artifacts into src tree.

This commit partially addresses #8142. Specifically it:
1. deprecates existing (manually implemented) **Clock Manager**
   specific DIF return codes and toggle types,
2. integrates the auto-generated **Clock Manager** DIFs into meson build
   targets,
3. refactors all existing source code to make use of the new shared DIF
   types and error codes, and
4. separates the MMIO base address for the IP from the
   `dif_clkmgr_params_t` struct and updates DIF prototypes to take in
   and extra params struct arg to stay consistent with the Alert Handler
   DIFs, as described in #8409.

This continues the long-term goal of auto-generating several DIF
components across all IPs, as described in #8142.

Signed-off-by: Timothy Trippel <ttrippel@google.com>



======Commit: d202c7d4======
======Short Message======
[alert_handler] Lint fixes and waiver updates
======Full Message======
[alert_handler] Lint fixes and waiver updates

Signed-off-by: Michael Schaffner <msf@google.com>



======Commit: 7e0cdfae======
======Short Message======
[clkmgr/rstmgr] Remove clk_/rst_ prefixes from LPG indication signals
======Full Message======
[clkmgr/rstmgr] Remove clk_/rst_ prefixes from LPG indication signals

This is done to avoid confusion with real clock / reset signals.

Signed-off-by: Michael Schaffner <msf@google.com>



======Commit: aa5c6de5======
======Short Message======
[alert_handler] Fix DV Verible lint errors
======Full Message======
[alert_handler] Fix DV Verible lint errors

Fix the following errors detected by Verible lint:

```
../src/lowrisc_opentitan_top_earlgrey_alert_handler_esc_timer_fpv_0/vip/alert_handler_esc_timer_assert_fpv.sv:41:23: Non-type localparam names must be styled with CamelCase or ALL_CAPS [Style: constants] [parameter-name-style]

../src/lowrisc_opentitan_top_earlgrey_alert_handler_esc_timer_fpv_0/vip/alert_handler_esc_timer_assert_fpv.sv:84:60: Non-type parameter names must be styled with CamelCase or ALL_CAPS [Style: constants] [parameter-name-style]

../src/lowrisc_opentitan_top_earlgrey_alert_handler_esc_timer_fpv_0/vip/alert_handler_esc_timer_assert_fpv.sv:84:77: When an unpacked dimension range is zero-based ([0:N-1]), declare size as [N] instead. [Style: unpacked-ordering] [unpacked-dimensions-range-ordering]
```

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: b654aa88======
======Short Message======
[dif/rstmgr] Integrate autogen'd DIF artifacts into src tree.
======Full Message======
[dif/rstmgr] Integrate autogen'd DIF artifacts into src tree.

This commit partially addresses #8142. Specifically it:
1. deprecates existing (manually implemented) **Reset Manager**
   specific DIF return codes and toggle types,
2. integrates the auto-generated **Reset Manager** DIFs into meson build
   targets, and
3. refactors all existing source code to make use of the new shared DIF
   types and error codes.

This continues the long-term goal of auto-generating several DIF
components across all IPs, as described in #8142.

Signed-off-by: Timothy Trippel <ttrippel@google.com>



======Commit: a77d8e53======
======Short Message======
[spi_host/lint] Minor lint fix
======Full Message======
[spi_host/lint] Minor lint fix

Signed-off-by: Michael Schaffner <msf@google.com>



======Commit: 5a8da962======
======Short Message======
[pwm, rtl] PWM RTL update to fix a lint error
======Full Message======
[pwm, rtl] PWM RTL update to fix a lint error

  - Update the pwm_core.sv file to fix a lint error

Signed-off-by: Muqing Liu <muqing.liu@wdc.com>



======Commit: f1043e18======
======Short Message======
[rv_dm/lint] Minor lint fix
======Full Message======
[rv_dm/lint] Minor lint fix

Signed-off-by: Michael Schaffner <msf@google.com>



======Commit: d5837ab0======
======Short Message======
[ci] Run Verible lint on FPV code
======Full Message======
[ci] Run Verible lint on FPV code

We already had a dvsim configuration for the FPV lint, but didn't run it
in CI. Fix that.

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: 7b1a0d80======
======Short Message======
[fpv] Fix Verible lint errors
======Full Message======
[fpv] Fix Verible lint errors

Fix all problems FuseSoC and Verible lint detect when running it.

* Shorten lines to 100 characters max.
* Ensure all generate blocks start with `gen_`.
* Ensure all parameters are CamelCase.
* FuseSoC: Do not include files above the current file.

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: c95fd6df======
======Short Message======
[dif] Update DIF autogen templates to fix minor bugs.
======Full Message======
[dif] Update DIF autogen templates to fix minor bugs.

This updates the DIF autogen templates and regenerates all
auto-generated DIFs to address review comments made in #8435.
Specifically:
  1. a comment block for the `dif_keymgr_irq_get_state(...)` was fixed,
  2. static_casts were used throughout auto-gen'd DIF unit tests, and
  3. redundant unit tests are removed for IP's that only have raise a
     single IRQ.

Signed-off-by: Timothy Trippel <ttrippel@google.com>



======Commit: 06fe080b======
======Short Message======
[otbn,dv] Report IMEM fetch errors more helpfully in OTBN tracer
======Full Message======
[otbn,dv] Report IMEM fetch errors more helpfully in OTBN tracer

If we've seen an IMEM fetch error, this changes the trace from
something like

    E PC: 0x00000b10, insn: 0x84d72c7b

to something like

    E PC: 0x00000b10, insn: ??

Since the IMEM rdata is known to be bogus at this point, we don't
really want to display it. This also makes things easier on the ISS
side, where we don't need to model changes to the bits themselves
that are caused by 1- or 2-bit injected errors.

This patch also makes sure that we always print out an 'E' line.
Before, it was either 'E' or 'S', depending on whether the current
instruction was stalled or not. (Which would be very finicky to model
in the ISS and not really do anything useful).

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 226b06e9======
======Short Message======
[sw/rom] Fix sec_mmio_read32 expectations bug
======Full Message======
[sw/rom] Fix sec_mmio_read32 expectations bug

sec_mmio write functions store masked values in the expectations table.
The reads, on the other hand, were storing unmasked values. This
consistency issue was making the sec_mmio_check_values function fail.

The fix is to stored masked values for the sec_mmio_read32() function.

Signed-off-by: Miguel Osorio <miguelosorio@google.com>



======Commit: 869dffa9======
======Short Message======
[prim_lfsr] Minor lint fixes
======Full Message======
[prim_lfsr] Minor lint fixes

Since j equal to or less than LfsrDw and the variable it
assigns into is $clog2(LfsrDw), the variable should always
be large enough to accommodate j.  Remove the padding bits
as the lint tool thinks its a negative number and spits out a
pile of warnings.

Signed-off-by: Timothy Chen <timothytim@google.com>

[prim_lfsr] Minor lint fix

tie-off sbox output when lfsr width is greater.  In these
situations, not all lfsr bits will be used in the permutation.

Signed-off-by: Timothy Chen <timothytim@google.com>



======Commit: 8ced7f20======
======Short Message======
[rstmgr] Add reset consistency checks
======Full Message======
[rstmgr] Add reset consistency checks

- If a reset asserts, either its parent or software controls
  must have asserted.

- The checking here is a gigantic mesh of CDC and must be carefully
  reviewed.

Signed-off-by: Timothy Chen <timothytim@google.com>

[rstmgr] Re-organize leaf logic for readability

- The leaf logic generation logic was creating so many modules
  it was getting difficult to manage.

- This PR wraps up some of the generated logic so it is a little
  easier to read.

Signed-off-by: Timothy Chen <timothytim@google.com>

[rstmgr] Fixes and address comments

Signed-off-by: Timothy Chen <timothytim@google.com>

[top] Auto generate

Signed-off-by: Timothy Chen <timothytim@google.com>



======Commit: 9b9fe7fd======
======Short Message======
[dv] Minor DV fix
======Full Message======
[dv] Minor DV fix

Signed-off-by: Timothy Chen <timothytim@google.com>



======Commit: 6153a62a======
======Short Message======
[clkmgr] Fix measurement control CDC
======Full Message======
[clkmgr] Fix measurement control CDC

- Fixes #8405

Signed-off-by: Timothy Chen <timothytim@google.com>



======Commit: 993bb2da======
======Short Message======
[dif/edn] Integrate autogen'd IRQ DIFs into source tree.
======Full Message======
[dif/edn] Integrate autogen'd IRQ DIFs into source tree.

This commit partially addresses #8142. Specifically it:
1. deprecates existing (manually implemented) Entropy Distribution Network
   IRQ DIFs,
2. integrates the auto-generated Entropy Distribution Network IRQ DIFs
   into meson build targets, and
3. refactors all existing source code to make use of the new auto-genenerated
   Entropy Distribution Network IRQ DIFs, and supporting shared DIF typedefs
   and error codes.

This continues the long-term goal of auto-generating all IRQ DIFs across
all IPs, as described in #8142.

Signed-off-by: Timothy Trippel <ttrippel@google.com>



======Commit: 867555b7======
======Short Message======
[dv] Fix wait_alert_trigger
======Full Message======
[dv] Fix wait_alert_trigger

A few update on waiting for an alert
1. `DV_SPINWAIT_EXIT doesn't report uvm_error. It creates 2 threads and any
of them finish, it kills the other. Added uvm_error if alert doesn't
occur.
2. the alert may be triggered earlier than we call this task, change to
wait for either alert_p or ack_p.
3. increase default max_wait_time to 7 cycles

Signed-off-by: Weicai Yang <weicai@google.com>



======Commit: b7ed5027======
======Short Message======
[dif/otbn] Integrate autogen'd IRQ DIFs into source tree.
======Full Message======
[dif/otbn] Integrate autogen'd IRQ DIFs into source tree.

This commit partially addresses #8142. Specifically it:
1. deprecates existing (manually implemented) **OTBN** IRQ DIFs,
2. integrates the auto-generated **OTBN** IRQ DIFs into meson build
   targets, and
3. refactors all existing source code to make use of the new auto-genenerated
   **OTBN** IRQ DIFs, and supporting shared DIF typedefs and error codes.

This continues the long-term goal of auto-generating all IRQ DIFs across
all IPs, as described in #8142.

Signed-off-by: Timothy Trippel <ttrippel@google.com>



======Commit: d772758e======
======Short Message======
[fpv] Fix issue lowRISC#8371
======Full Message======
[fpv] Fix issue lowRISC#8371

Signed-off-by: Zeeshan Rafique <zeeshanrafique23@gmail.com>



======Commit: 1f0923b8======
======Short Message======
[ipgen] Log when using default value
======Full Message======
[ipgen] Log when using default value

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: 22880085======
======Short Message======
[ipgen] Provide template parameters in TemplateRenderError
======Full Message======
[ipgen] Provide template parameters in TemplateRenderError

In case a template rendering fails the user often wants to know which
parameters got passed to the template. Add this information to the
TemplateRenderError class to enable calling code to retrieve it.

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: 5813a941======
======Short Message======
[ipgen] Fix f-string
======Full Message======
[ipgen] Fix f-string

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: 84290e5c======
======Short Message======
[pwrmgr, rv_core_ibex, top] Same clks/rsts for escalate pairs
======Full Message======
[pwrmgr, rv_core_ibex, top] Same clks/rsts for escalate pairs

- Fixes #8037
- Ensures that pwrmgr / rv_core_ibex escalator clocks/resets can
  be assigned to the same clock group / power domain as the alert
  handler.  This guarantees we do not have any out of sync issues,
  and only need to handle the isolation values.

Signed-off-by: Timothy Chen <timothytim@google.com>



======Commit: 79981ee3======
======Short Message======
[dif/keymgr] Integrate autogen'd IRQ DIFs into source tree.
======Full Message======
[dif/keymgr] Integrate autogen'd IRQ DIFs into source tree.

This commit partially addresses #8142. Specifically it:
1. deprecates existing (manually implemented) Key Manager IRQ DIFs,
2. integrates the auto-generated Key Manager IRQ DIFs into meson build
   targets, and
3. refactors all existing source code to make use of the new auto-genenerated
   Key Manager IRQ DIFs, and supporting shared DIF typedefs and error codes.

This continues the long-term goal of auto-generating all IRQ DIFs across
all IPs, as described in #8142.

Signed-off-by: Timothy Trippel <ttrippel@google.com>



======Commit: 9f716461======
======Short Message======
[spi_device] Fix incorrect xfer_size compare
======Full Message======
[spi_device] Fix incorrect xfer_size compare

`xfer_size` in command byte is the actual bytes to be transferred minus
1. For example, to transfer 32B, xfer_size should be 6'h 1F ('d 31).

The comparison to check if xfer_size has been transferred was wrong.

Signed-off-by: Eunchan Kim <eunchan@opentitan.org>



======Commit: 85b9a881======
======Short Message======
[dif/csrng] Integrate autogen'd IRQ DIFs into source tree.
======Full Message======
[dif/csrng] Integrate autogen'd IRQ DIFs into source tree.

This commit partially addresses #8142. Specifically it:
1. deprecates existing (manually implemented) CSRNG IRQ DIFs,
2. integrates the auto-generated CSRNG IRQ DIFs into meson build
   targets, and
3. refactors all existing source code to make use of the new auto-genenerated
   CSRNG IRQ DIFs, and supporting shared DIF typedefs and error codes.

This continues the long-term goal of auto-generating all IRQ DIFs across
all IPs, as described in #8142.

Signed-off-by: Timothy Trippel <ttrippel@google.com>



======Commit: 3c4314dd======
======Short Message======
[dv] Fix CI error
======Full Message======
[dv] Fix CI error

Signed-off-by: Cindy Chen <chencindy@opentitan.org>



======Commit: 53977b05======
======Short Message======
[prim_alert_rxtx_fpv] Update FPV environment and fix SVAs
======Full Message======
[prim_alert_rxtx_fpv] Update FPV environment and fix SVAs

Signed-off-by: Michael Schaffner <msf@google.com>



======Commit: 3e20f8fe======
======Short Message======
[prim_alert_sender] Simplify sender and clear ping req upon sigint
======Full Message======
[prim_alert_sender] Simplify sender and clear ping req upon sigint

This simplifies the sender state machine and removes the explicit SigInt
state. It also simplifies the response behavior which so far toggled the
alert lines during a signal integrity error. The new behavior is that
the alert diff pair is just pulled to zero in case of a signal integrity
alert, thereby simplifying the protocol.

Further, for the in-band alert channel reset feature, we intend to leverage
sigint errors on the ping/ack lines to re-initialize the sender FSM and
clear any pending ping requests on the sender side.

This change makes sure that upon deassertion of a sigint condition, we
actually clear the ping request set-reg.

Signed-off-by: Michael Schaffner <msf@google.com>



======Commit: 6fdbd6bf======
======Short Message======
[otbn] Add LOCKED to constants in simulator
======Full Message======
[otbn] Add LOCKED to constants in simulator

This value was missed when adding the LOCKED status bit. Fix that.

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: 2f5fa968======
======Short Message======
[otbn] Raise a fatal alert for incoming LC escalations
======Full Message======
[otbn] Raise a fatal alert for incoming LC escalations

We specify that an incoming lifecycle escalation is handled in the
same way as any other fatal error, which raises a fatal alert. We didn't
do that in RTL yet so far.

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: 3a68161c======
======Short Message======
[otbn,dv] Misaligned load/store snippet
======Full Message======
[otbn,dv] Misaligned load/store snippet

Misaligned load-store generates valid but misaligned address which
results with an error.

Signed-off-by: Canberk Topal <ctopal@lowrisc.org>
Co-authored-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 9d7604df======
======Short Message======
[dv:kmac] Update error injection to reflect #7716
======Full Message======
[dv:kmac] Update error injection to reflect #7716

According to discussion with Eunchan in #7716, the only command that can
trigger ErrSwIssuedCmdInAppActive error is a CmdStart.

This PR updates the error injection logic to reflect this, and
accordingly updates the error checks in the scoreboard.

Signed-off-by: Udi Jonnalagadda <udij@google.com>



======Commit: ffcfcfff======
======Short Message======
[chip, testplan] Indicate SW tests better
======Full Message======
[chip, testplan] Indicate SW tests better

This is a simple search and replace of `chip_` in the test names with
`chip_sw_` in our chip level testplan as a way to indicated which tests
are SW based. Other alternative is to introduce additional tags / fields
into the testplan, which requires additional tooling enhancements. We
will address that later. For now, it should be ok to track SW tests with
`chip_sw` prefix.

Signed-off-by: Srikrishna Iyer <sriyer@google.com>



======Commit: e49d49f2======
======Short Message======
[top*.hjson] Fix minor typo
======Full Message======
[top*.hjson] Fix minor typo

Signed-off-by: Michael Schaffner <msf@google.com>



======Commit: ef60f5f9======
======Short Message======
[dv/rstmgr] Add alert and cpu_info_attr assertions
======Full Message======
[dv/rstmgr] Add alert and cpu_info_attr assertions

Also do make minor fixes to docs.
Remove common CSR test exclusion from sw_rst_regwen.

Signed-off-by: Guillermo Maturana <maturana@google.com>



======Commit: 2c117720======
======Short Message======
[otbn,dv] Add missing newlines to fix flake8 errors
======Full Message======
[otbn,dv] Add missing newlines to fix flake8 errors

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 48fe27a9======
======Short Message======
Revert "[ci] Avoid installing/building/testing Rust in CI"
======Full Message======
Revert "[ci] Avoid installing/building/testing Rust in CI"

This reverts commit 7a66d31f1e22ca80b83eb79778b43dc26f738d48.

The CDN issues have been resolved by the Rust infra team.

Fixes #8425

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: d151e08f======
======Short Message======
[otbn, doc] Specify new software errors fatal mode
======Full Message======
[otbn, doc] Specify new software errors fatal mode

A new `CTRL` register is introduced. When the `software_errs_fatal` bit
is set here then any software error OTBN sees is promoted to a fatal
error. This bit can only be changed when OTBN is idle.

Fixes #8044

Signed-off-by: Greg Chadwick <gac@lowrisc.org>



======Commit: 7a66d31f======
======Short Message======
[ci] Avoid installing/building/testing Rust in CI
======Full Message======
[ci] Avoid installing/building/testing Rust in CI

rustup, our way to installing Rust, is currently broken, breaking all CI
jobs.

Avoid installing Rust until the issue is fixed. Software builds should
continue, but skip the Rust parts.

https://github.com/rust-lang/rustup/issues/2855

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: f0730aff======
======Short Message======
[doc] Add Ibex register table and fix register links
======Full Message======
[doc] Add Ibex register table and fix register links

Signed-off-by: Greg Chadwick <gac@lowrisc.org>



======Commit: 99cd11be======
======Short Message======
[otbn,dv] Explicitly check STATUS register in tl_intg test
======Full Message======
[otbn,dv] Explicitly check STATUS register in tl_intg test

This makes sure that we read the STATUS register after injecting the
error and that we see the value we expected. (In practice, we seem to
do that anyway with very high probability, but it can't hurt to make
absolutely sure).

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 9b644de8======
======Short Message======
[otbn,dv] Add a simple predictor for the STATUS register
======Full Message======
[otbn,dv] Add a simple predictor for the STATUS register

This register jumps to "LOCKED" when we see a write with an integrity
error. Ideally, we'd track this sort of thing with the predictor in
the scoreboard but the automated CSR tests disable the scoreboard and
its predictor (but still check for expected values of CSRs!).

Hack in the update logic that we need.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 9d73c0a2======
======Short Message======
[cip,dv] Expose "abort" and "error" separately in tl_access_w_abort
======Full Message======
[cip,dv] Expose "abort" and "error" separately in tl_access_w_abort

The status signal that was there before was UVM_OK if the access
completed and didn't signal an error. This is perfect for answering
questions like "should I update the RAL for this access?".

Unfortunately, it doesn't allow you to spot "an access ran to
completion and caused an error" because you can't distinguish it from
"the access was aborted".

Split the two signals and teach run_mem_partial_access_vseq_sub (the
one callsite that used them) how to use them properly.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 56eba41d======
======Short Message======
[spi_device] Fix TPM output timing
======Full Message======
[spi_device] Fix TPM output timing

Previously, in the Address state, TPM sent 9 beats of the WAIT byte.
It causes unwanted data shift and StartByte bypassed.

Now, TPM sends 8 beat exactly at the last byte of the address.

Signed-off-by: Eunchan Kim <eunchan@opentitan.org>



======Commit: 843e8bca======
======Short Message======
[bazel] fix dif unittests for autogen
======Full Message======
[bazel] fix dif unittests for autogen

updated bazel rules for new dependencies on dif_base.h and autogen
files.

Added hmac autogened unit test.

TESTED='bazel test //...'

Signed-off-by: Drew Macrae <drewmacrae@google.com>



======Commit: 20c9d975======
======Short Message======
[keymgr/dv] Add sync_async_fault_cross_vseq
======Full Message======
[keymgr/dv] Add sync_async_fault_cross_vseq

This is requested from V2 review
Signed-off-by: Weicai Yang <weicai@google.com>



======Commit: 04aee0d6======
======Short Message======
[dv] Extract sedning tl intg error to a task for reuse
======Full Message======
[dv] Extract sedning tl intg error to a task for reuse

Signed-off-by: Weicai Yang <weicai@google.com>



======Commit: 366021d6======
======Short Message======
[otbn,dv] Remove verilator workaround
======Full Message======
[otbn,dv] Remove verilator workaround

The mis-firing WIDTH check that this was working around was fixed in
Verilator 2.104. Since we require 4.210, there's no need to keep it
in.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 0413ebc9======
======Short Message======
[sw/testing] add CHECK_DIF_OK macro
======Full Message======
[sw/testing] add CHECK_DIF_OK macro

As DIFs are refactored to use a global error space this macro becomes
useful for checking DIF return results.

Signed-off-by: Timothy Trippel <ttrippel@google.com>



======Commit: 5a172e8d======
======Short Message======
[ast/syn] Fix buffer labels causing issues applying the SDC file
======Full Message======
[ast/syn] Fix buffer labels causing issues applying the SDC file

Signed-off-by: Michael Schaffner <msf@google.com>



======Commit: 0fcbd6b8======
======Short Message======
[dv/shadow_reg] Add dv_base_reg_pkg to IPs
======Full Message======
[dv/shadow_reg] Add dv_base_reg_pkg to IPs

Add dv_base_reg_pkg to IPs to avoid compile error regarding changing
`get_field_val` function.

Signed-off-by: Cindy Chen <chencindy@opentitan.org>



======Commit: 15a0784e======
======Short Message======
[sw/ottf] implemented default ISRs
======Full Message======
[sw/ottf] implemented default ISRs

This commit adds the following to the OTTF:

- defualt (weak) ISRs
- FreeRTOS context saving (asm) subroutines to be called on ISR
  entry/exit

Signed-off-by: Timothy Trippel <ttrippel@google.com>



======Commit: 505776ba======
======Short Message======
[prim] Fix the edge type
======Full Message======
[prim] Fix the edge type

The posedge and negedge condition was swapped.

Signed-off-by: Eunchan Kim <eunchan@opentitan.org>



======Commit: 75450656======
======Short Message======
[keymgr/dv] Fix coverage null object
======Full Message======
[keymgr/dv] Fix coverage null object

Design changed sideload_clear to be gated by cfg_regwen
Updated env for this change to fix regression failures

Signed-off-by: Weicai Yang <weicai@google.com>



======Commit: 5ebe3080======
======Short Message======
[keymgr] Fix reseed_ctrl edn requests
======Full Message======
[keymgr] Fix reseed_ctrl edn requests

- Fixes #8260
- Ensure edn protocol is always followed no matter how software
  changes the reseed_interval

Signed-off-by: Timothy Chen <timothytim@google.com>



======Commit: 2a705a9c======
======Short Message======
[top] Slightly tweak peripheral grouping
======Full Message======
[top] Slightly tweak peripheral grouping

Fixes #8220

Group all crypto modules together so they can be easily moved in one pmp region

Signed-off-by: Timothy Chen <timothytim@google.com>



======Commit: f359cd0f======
======Short Message======
[dv/clkmgr] Fix tl_intg_err test
======Full Message======
[dv/clkmgr] Fix tl_intg_err test

Set tl_intg_alert_fields array for the common test to work.

Signed-off-by: Guillermo Maturana <maturana@google.com>



======Commit: 67137491======
======Short Message======
[dif/gpio] added autogen'd GPIO IRQ DIFs
======Full Message======
[dif/gpio] added autogen'd GPIO IRQ DIFs

This partially addresses #8142.

Note, the GPIO IP can raise 32 different IRQs (one for each GPIO pin),
however, the HJSON lists this as a single interrupt with a width of 32.
As a result, the autogen DIF templates and script had to be updated  to
accomodate this subtle difference.

Additionally, in the process of accomplishing the above, a very minor
bug was found in the unit test template that was fixed, resulting in the
regeneration of the UART IRQ DIFs.

Signed-off-by: Timothy Trippel <ttrippel@google.com>



======Commit: 2280cadd======
======Short Message======
[formal/conn] Fix clkmgr peri clock
======Full Message======
[formal/conn] Fix clkmgr peri clock

Remove units that are not connected to peripheral clocks.
Add missing peripheral clock connections.

Signed-off-by: Guillermo Maturana <maturana@google.com>



======Commit: 520a2d45======
======Short Message======
[prim] Minor fix and clarification to prim_count
======Full Message======
[prim] Minor fix and clarification to prim_count

- clarify set_cnt_i usasge
- add step_i input
- Added assertions for downcount becoming negative and up count overflowing
- Update usage of prim_count to match

Signed-off-by: Timothy Chen <timothytim@google.com>



======Commit: d3029c77======
======Short Message======
[bazel] Added buildifier to lint Starlark
======Full Message======
[bazel] Added buildifier to lint Starlark

Tested="bazel run //:buildifier -- -r"
to have buildifier run linting checks on the whole directory

Buildifier excludes the directories named "//**/vendor/*"

This also has all the fixes buildifier applies to the directory so that
it can be run at root without changing unmodified files anymore.

Signed-off-by: Drew Macrae <drewmacrae@google.com>



======Commit: 8d6b983e======
======Short Message======
[opentitantool] Support multiple uart/spi instances.
======Full Message======
[opentitantool] Support multiple uart/spi instances.

1. Give an instance number to the factory function in Transport.
2. Report errors on existing transport if an unsupported instance
   is requested.
3. Add a context arg to the CommandDispatch trait.
4. Support multiple instances in the `console` and `spi` commands.
4a. For `console`, simply add a `--uart <n>` option.
4b. For `spi`, we add a `--bus <n>` option into the interior
    `spi` command node and pass that node as context.

Signed-off-by: Chris Frantz <cfrantz@google.com>



======Commit: dcbb54da======
======Short Message======
[prim_lc_combine] Fix parameterization error
======Full Message======
[prim_lc_combine] Fix parameterization error

Signed-off-by: Michael Schaffner <msf@google.com>



======Commit: a0558462======
======Short Message======
[dv] Add testing CTRL_FSM_INTG and CTRL_FSM_CNT
======Full Message======
[dv] Add testing CTRL_FSM_INTG and CTRL_FSM_CNT

Also fix a corner case that operation didn't occur to trigger the state
to transition to StInvalid

Signed-off-by: Weicai Yang <weicai@google.com>



======Commit: 62f3ca11======
======Short Message======
[fpv/prim_count] Small update on prim_count assertions
======Full Message======
[fpv/prim_count] Small update on prim_count assertions

1. Add assertions to check error case, these can be used in assertion
coverage for DV.
2. Update an assertion to cover both set_i and clr_i case.

Signed-off-by: Cindy Chen <chencindy@opentitan.org>



======Commit: c5b383b5======
======Short Message======
[keymgr] Minor fix to external regwen
======Full Message======
[keymgr] Minor fix to external regwen

- Fixes #8316

Signed-off-by: Timothy Chen <timothytim@google.com>



======Commit: 72056eed======
======Short Message======
[otbn,sw] Ensure entry points are at address zero
======Full Message======
[otbn,sw] Ensure entry points are at address zero

In order to remove the START_ADDR functionality, we need to make sure
that the software we want to run really does start at address zero!
This patch adds a new input section to the linker script called
".text.start". The idea is that you should put the entry point there,
which will force it to appear at address zero.

The patch also ports each software code snippet that we load from Ibex
so that it uses the .text.start section.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 3a860179======
======Short Message======
[otbn] Plan and track coverage for external CSRs
======Full Message======
[otbn] Plan and track coverage for external CSRs

By testing the external CSRs, we test both the interface of OTBN to
Ibex, as well as ensuring that OTBN is behaving as expected depending on
the operational state it is in. For example, if OTBN is locked or busy,
writes to CMD should be ignored. The functional coverage ensures that we
see a write to CMD in every operational state.

The coverage for the error registers isn't exhaustive, as it doesn't
explicitly require multi-error cases to be covered. There is already
coverage for such errors as part of the per-instruction coverage;
replicating it seems unnecessary.

Fixes #8024

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: 9ee67410======
======Short Message======
[otbn,dv] Add test sequence to run "multi-error" cases
======Full Message======
[otbn,dv] Add test sequence to run "multi-error" cases

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 5c6aa3d1======
======Short Message======
[otbn,dv] Add functional coverage for multiple errors
======Full Message======
[otbn,dv] Add functional coverage for multiple errors

This patch defines coverpoints and crosses to track the multiple error
cases documented in the previous one.

It also does some refactoring for computed values in the covergroups.
For example, SW and LW need to compute an address from and some
immediate bits plus an operand value and all the "$signed(operand_a) +
$signed(offset)" stuff was getting rather hard to read. Factor it out
into the callsite for the covergroup's sample method. The nicest thing
would be to have a local variable in the sample method itself, but it
doesn't seem that the SV spec allows that.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 511a92ab======
======Short Message======
[dv] Add ip_name in reg_block
======Full Message======
[dv] Add ip_name in reg_block

Some IP may contains more than one reg_block, but all the reg_block
share the same alert (called ip_name_alert_name).
Need to get this info from reggen

Also fix alert name for top-level

Signed-off-by: Weicai Yang <weicai@google.com>



======Commit: eb8677b1======
======Short Message======
[keymgr] Finalize keymgr hardening
======Full Message======
[keymgr] Finalize keymgr hardening

- Fixes #7749
- Fixes #8301

Two more faults are added
- sideload control FSM faults
- reseed counter faults

Two more regwen are added
- reseed interval controls
- sideload clear placed under transactional regwen

Signed-off-by: Timothy Chen <timothytim@google.com>



======Commit: 02979d5d======
======Short Message======
[bazel] fixup WORKSPACE to run at the top level
======Full Message======
[bazel] fixup WORKSPACE to run at the top level

I wanted to be able to test at the top level and had to mark vendored
workspaces as independent so we don't build and run their tests.

* marked vendored WORKSPACES as local_repositories
* added entry to .bazelignore for
hw/ip/prim/util/vendor/google_verible_verilog_syntax_py
sw/vendor/google_googletest

Tested=`bazel test //...`

Signed-off-by: Drew Macrae <drewmacrae@google.com>



======Commit: 5094fd35======
======Short Message======
[rstmgr] Fix dump capture conditions
======Full Message======
[rstmgr] Fix dump capture conditions

- Fixes #7918
- Remove unnecessary dump capture

Signed-off-by: Timothy Chen <timothytim@google.com>



======Commit: 76605b0a======
======Short Message======
[otbn,doc] Fix wording around use of LOCKED state
======Full Message======
[otbn,doc] Fix wording around use of LOCKED state

An fatal error occurring (moving to the LOCKED state) still counts as an
operation completing.

Signed-off-by: Greg Chadwick <gac@lowrisc.org>



======Commit: f8f10727======
======Short Message======
[clkmgr] Allow software to control clock stepdown
======Full Message======
[clkmgr] Allow software to control clock stepdown

- Fixes #8027

Signed-off-by: Timothy Chen <timothytim@google.com>

[dv/clkmgr] Change DV for extclk_ctrl creation

To be used with the RTL and hjson changes.

Signed-off-by: Guillermo Maturana <maturana@google.com>



======Commit: 92f83f50======
======Short Message======
[keymgr/dv] Add testing HW valid=0
======Full Message======
[keymgr/dv] Add testing HW valid=0

1. Add testing HW valid=0
2. Add covergroup for hw invalid inputs
3. Fix InvalidIn error condition

Signed-off-by: Weicai Yang <weicai@google.com>



======Commit: ae659246======
======Short Message======
[keymgr] Minor fixes
======Full Message======
[keymgr] Minor fixes

- Fixes #8256
- Random population should populate all slots
- If root key is not valid, downstream operations should fail

Signed-off-by: Timothy Chen <timothytim@google.com>



======Commit: 9cc0ff99======
======Short Message======
[kmac/doc] Fix legacy register references
======Full Message======
[kmac/doc] Fix legacy register references

Signed-off-by: Michael Schaffner <msf@google.com>



======Commit: b0bc0f9a======
======Short Message======
[otbn] Align error naming in call stack section of docs
======Full Message======
[otbn] Align error naming in call stack section of docs

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: a409d106======
======Short Message======
[opentitantool] Minor refactors for transport interfaces
======Full Message======
[opentitantool] Minor refactors for transport interfaces

1. Define SPI Errors next to the SPI trait definition.
2. Define GPIO Erros next to the GPIO trait definition.
3. Express GPIO pins as strings.  Add the backend's default naming scheme
   for its pins.  A future PR will allow change this a bit more to permit
   user-defined pin-mappings.
4. Add some convenience methods to the GPIO trait to support bootstrap in
   a generic way.
5. Change the `gpio` command to use positional arguments where appropriate.

Signed-off-by: Chris Frantz <cfrantz@google.com>



======Commit: 79738068======
======Short Message======
[otbn, rtl] Implemented LOCKED state
======Full Message======
[otbn, rtl] Implemented LOCKED state

Fixes #8023

Signed-off-by: Greg Chadwick <gac@lowrisc.org>



======Commit: a0a610c8======
======Short Message======
[otbn] Use correct bus_intg_violation signal in ERR_BITS
======Full Message======
[otbn] Use correct bus_intg_violation signal in ERR_BITS

The `bus_intg_violation` signal is driven at the toplevel, and then
wired through to the controller to be assigned to the `err_bits` struct.
We then wire the whole struct back up to the toplevel to assign it to
the `ERR_BITS` external CSR.

Previously, we used the signal that happens to be around in the
toplevel, where we should have used the one coming from the controller
instead. Fix that.

(The FATAL_ALERT_CAUSE external CSR is using the signal directly from
the toplevel.)

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: 86f89ba6======
======Short Message======
[otbn,dv] Document insns that can cause multiple errors in DV doc
======Full Message======
[otbn,dv] Document insns that can cause multiple errors in DV doc

We are going to add a coverage point for each. The first step is to
carefully write down what we're trying to cover.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 50f04dc0======
======Short Message======
Revert "[clkmgr] Allow software to control clock stepdown"
======Full Message======
Revert "[clkmgr] Allow software to control clock stepdown"

This reverts commit 4bee429d0160d74d3d2166193b1e8dbbae62d892 for causing
private CI failures.

```
Error-[MFNF] Member not found
../src/lowrisc_dv_clkmgr_env_0.1/clkmgr_scoreboard.sv, 444
"this.ral."
  Could not find member 'extclk_sel_regwen' in class 'clkmgr_reg_block', at
  "../src/lowrisc_dv_clkmgr_ral_pkg_0/clkmgr_ral_pkg.sv", 965.
```

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: 7a2ee441======
======Short Message======
[otbn,util] Fix run-some.py when destdir doesn't lie in project
======Full Message======
[otbn,util] Fix run-some.py when destdir doesn't lie in project

The "run the testbench" command runs inside destdir. It needs to know
where to find the ISS, which it would normally do by searching up for
a .git from the current directory. Setting the REPO_TOP environment
variable overrides this behaviour and tells it where to look.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 37eec2cb======
======Short Message======
[flash_ctrl] Various clean-up and updates
======Full Message======
[flash_ctrl] Various clean-up and updates

- use prim_intr_hw, (#8035 for flash)
- clean-up error mechanisms and related usage
- clean-up error and data signaling when multi-bit errors are seen

Signed-off-by: Timothy Chen <timothytim@google.com>



======Commit: c427394a======
======Short Message======
[rust] Upgrade to rust 1.55.0
======Full Message======
[rust] Upgrade to rust 1.55.0

1. Rust-1.53.0 has [`IntoIterator` for arrays](https://blog.rust-lang.org/2021/06/17/Rust-1.53.0.html#intoiterator-for-arrays)
   which is needed for the `collection!` macro.
2. Rust-1.54.0 re-enabled incremental compilation, which was disabled in
   1.52.1.
3. Rust-1.55.0 updates `std::io::ErrorKind` variants and supports open ranges
   in patterns.

Signed-off-by: Chris Frantz <cfrantz@google.com>



======Commit: 4bee429d======
======Short Message======
[clkmgr] Allow software to control clock stepdown
======Full Message======
[clkmgr] Allow software to control clock stepdown

- Fixes #8027

Signed-off-by: Timothy Chen <timothytim@google.com>



======Commit: f404d159======
======Short Message======
[top] typo fix in chip_earlgrey_asic core file
======Full Message======
[top] typo fix in chip_earlgrey_asic core file

Signed-off-by: Arnon Sharlin <arnon.sharlin@opentitan.org>



======Commit: 116fd728======
======Short Message======
[util] Build error fix for later versions of GCC than in CI
======Full Message======
[util] Build error fix for later versions of GCC than in CI

Build error with gcc version of:
`gcc version 11.1.0 (GCC)`

Although not a huge issue, as the reference platfrom of OT is Ubuntu
18.04, which has an older version of GCC, it is still relevant to fix
it for future versions.

This is also helpful for the people using rolling distros as
archlinux, etc...

Signed-off-by: Silvestrs Timofejevs <silvestrst@lowrisc.org>



======Commit: 8e9332b1======
======Short Message======
[otbn] Fix list of interfaces in testplan
======Full Message======
[otbn] Fix list of interfaces in testplan

The list of interfaces changed since this list was initially written;
update it.

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: b158933d======
======Short Message======
[otbn] Align ERR_BITS and FATAL_ALERT_CAUSE
======Full Message======
[otbn] Align ERR_BITS and FATAL_ALERT_CAUSE

* Have all fatal error bits present in both ERR_BITS and
  FATAL_ALERT_CAUSE, in the same order.
* Shift fatal errors to bit position 16+ in ERR_BITS to give room for
  expansion of software errors below that without having to redo the
  stuct layout.
Fixes #8259

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: 77cc4b32======
======Short Message======
[otbn,doc] Add a note about errors at top of ISA documentation
======Full Message======
[otbn,doc] Add a note about errors at top of ISA documentation

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 9a842e0a======
======Short Message======
[otbn,doc] Annotate instructions with the errors they can cause
======Full Message======
[otbn,doc] Annotate instructions with the errors they can cause

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: a8012137======
======Short Message======
[otbn,doc] Add an "errs" field to instruction YAML
======Full Message======
[otbn,doc] Add an "errs" field to instruction YAML

The idea is that this is used to document which errors the instruction
might cause when run. In theory, you can figure this out yourself from
the operation pseudo-code (mostly), but it seems like a good idea to
write it down explicitly.

This commit adds a list to ADD (the first instruction) and
ECALL (which happens to have none) as a demo.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: a3a2e094======
======Short Message======
[otbn,doc] Fix capitalised Sim.py in diagram
======Full Message======
[otbn,doc] Fix capitalised Sim.py in diagram

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 26828067======
======Short Message======
[keymgr/dv] Fix sw_binding gated by LC
======Full Message======
[keymgr/dv] Fix sw_binding gated by LC

A small fix to gate sw_binding if keymgr_en is off

Signed-off-by: Weicai Yang <weicai@google.com>



======Commit: 75f76901======
======Short Message======
[otbn] Better specify and describe errors
======Full Message======
[otbn] Better specify and describe errors

* Introduce a list of all errors that OTBN detects.
* Rename recoverable errors to software errors. In the future, software
  errors can be made recoverable, or fatal, depending on a config flag.
  (For now, all software errors are always recoverable.)
* Improve their description to better describe what caused the
  error. Do not give detailed reasons for the errors, as these reasons
  are about to be listed in the ISA documentation in much more detail.
* Reference this list as "authorative source" in other places, e.g. in
  the register table.
* Rename some errors to be more internally consistent.

Fixes #8238

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: 0acbcc10======
======Short Message======
[sw dv] Multi-site support for Verilator
======Full Message======
[sw dv] Multi-site support for Verilator

- Support non-standard library & include paths via environment variables
  CFLAGS_FOR_BUILD and LDFLAGS_FOR_BUILD
- Removing C99 macro "UINT64_C", in prince cipher dv code, as is not
  found by g++ by default.

Co-authored-by: Philipp Wagner <mail@philipp-wagner.com>

Signed-off-by: Martin Lueker-Boden <martin.lueker-boden@wdc.com>



======Commit: 619af013======
======Short Message======
[dv/alert_handler] fix entropy regression failure
======Full Message======
[dv/alert_handler] fix entropy regression failure

This PR fixes regression failure in entropy sequence.
The failure is due to ping reponses unexpectedly timeout. The reason is
due to async alert_sender could have a max of 10 time longer clock
period, thus the original timeout cycle is not configured correctly.

Signed-off-by: Cindy Chen <chencindy@opentitan.org>



======Commit: aa2ed890======
======Short Message======
[dv/top] Fix top toggle exclusion
======Full Message======
[dv/top] Fix top toggle exclusion

Signed-off-by: Weicai Yang <weicai@google.com>



======Commit: 30f170d4======
======Short Message======
[dv/csr] Update write exclusion wdata value
======Full Message======
[dv/csr] Update write exclusion wdata value

This PR fixes issue #8234. In current code, if a field is excluded from
CSR write, we mask out the excluded fields to 0. This is under the
assumption that all fields' reset value is 0, which is not always the
case.
So this PR adds a function to find the mirrored value of the excluded
field from write, and update the wdata value accordingly.

Signed-off-by: Cindy Chen <chencindy@opentitan.org>



======Commit: 882f9d24======
======Short Message======
[dv/dv_base_reg] remove debug display
======Full Message======
[dv/dv_base_reg] remove debug display

In one of the previous PR, I accidentally committed some display
message. This PR removes them.

Signed-off-by: Cindy Chen <chencindy@opentitan.org>



======Commit: b27f72d4======
======Short Message======
Require Verilator 4.210
======Full Message======
Require Verilator 4.210

Pull request #7964 exposed a problem in Verilator that led to a segfault
of the verilated simulation during startup. We weren't able to fully
debug it, but know that the problem does not surface with Verilator 4.210
any more.

PR #7964 was updated to include a workaround that also works with
earlier Verilator versions. The update here is only a safety measure in
case we find another problem that we cannot work around easily.

Furthermore, newer Verilator versions have a fair amount of changes to
improve compile time and run time performance specificially for
OpenTitan. However, the changes don't yet make a significant impact on
Verilator runs in CI.

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: 561563f2======
======Short Message======
[otbn,dv] Fix logic when picking operands for BN.SID
======Full Message======
[otbn,dv] Fix logic when picking operands for BN.SID

Model.regs_with_known_vals returns a list of pairs "(idx, value)".
Searching in known_wdrs[0] meant we were only able to pick reg_idx if
either reg_val was a known WDR that matched the first "idx" OR the
first known WDR happened to have a value that matched reg_val.

This caused a weird bug with the otbn_reset test where our behaviour
depended on the (architecturally unspecified) value of w0, accessed
through x0 when we happened to have another WDR (the first in
known_wdrs) that had a known value of zero.

While we're fixing things, weaken the check so we only require the
register to have an architecturally specified value: we don't actually
need the RIG to know what it is.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: ddfe3416======
======Short Message======
[otbn] P256 test: Read nonce and blinding constant from RND/URND
======Full Message======
[otbn] P256 test: Read nonce and blinding constant from RND/URND

Modify the ECDSA P256 to read the nonce (k) and the blinding constant
(rnd) from RND and URND, respectively, instead of supplying it from host
software.

This commit does not change the API of p256.s, but instead loads the
random numbers in the wrapper to keep the change minimal. This isn't
optimal from a performance perspective, e.g. as we cannot overlap
getting RND from the EDN with other operations. However, it makes
testing much easier until.

We also have to remove the checks for the expected values of the sign
operation, since they depend on the nonce, which is now random. We
consider the operation successful of a sequence of sign and verify
passes.

Fixes #6993

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: c88c5a14======
======Short Message======
[otbn] Fix expected result in p256_ecdsa_verify_test.s
======Full Message======
[otbn] Fix expected result in p256_ecdsa_verify_test.s

Only w0 contains the result, w1 contains something else. w0 should match
R, which is also listed in the file, but not present in a register after
the algorithm has finished.

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: 0c5e5cf1======
======Short Message======
[otbn] Fix spelling mistakes in P256 software
======Full Message======
[otbn] Fix spelling mistakes in P256 software

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: a8b39e87======
======Short Message======
[otbn] P256: Read blinding randomness from DMEM
======Full Message======
[otbn] P256: Read blinding randomness from DMEM

The ECDSA P256 routines didn't read the blinding randomness from DMEM
before calling the `scalar_mult_int` routine. Fix that by explicitly
loading the variable into w1, using not the most efficient, but most
explicit syntax.

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: 4ca50c36======
======Short Message======
[sw/silicon_creator] Allocate .static_critical section in memory
======Full Message======
[sw/silicon_creator] Allocate .static_critical section in memory

The .static_critical section is located at a fixed address
(currently the base address of main RAM). It will be used to
communicate critical information from one boot stage to the next.

Currently the only variable the section contains is sec_mmio_ctx.

Signed-off-by: Michael Munday <mike.munday@lowrisc.org>



======Commit: 77c5b92f======
======Short Message======
[dv/shadow_reg] Fix alert shadow_reg regression error
======Full Message======
[dv/shadow_reg] Fix alert shadow_reg regression error

1. Fix regression error because we randomize `err_data` before
randomizing `wdata`.
2. Add testplan for shadow_reg errors in alert_handler
3. Add a small uvm debug message for shadow reg

Signed-off-by: Cindy Chen <chencindy@opentitan.org>



======Commit: 031b8eed======
======Short Message======
[dv/alert_handler] Fix tl_intg_err regression failure
======Full Message======
[dv/alert_handler] Fix tl_intg_err regression failure

This PR fixes the regression failure for tl_intg_err where this sequence
triggers local alerts and escalation. Then the csr_rw sequence has
mismatch due to the escalation.

Signed-off-by: Cindy Chen <chencindy@opentitan.org>



======Commit: 469bf7f4======
======Short Message======
[prim_lfsr] Improve statistics of non-linear output
======Full Message======
[prim_lfsr] Improve statistics of non-linear output

The non-linear output option makes use of an Sbox-4 layer to transform
the data. In order to ensure no statistical defects this patch
introduces a permutation layer before the Sbox-4 layer that is taken
from a block cipher. This permutation is constructed such that no
adjacent bits feed into the same Sbox, as together with the linear
shifting pattern of the LFSR this could create statistical defects.

Note that this change restricts the LFSR widths to 32bit and 64bit when
the output non-linearity is turned on.

Also, the optional StatePerm permutation that can be defined at
instantiation time is moved after the Sbox-4 layer to not interfere with
the block cipher permutation.

Signed-off-by: Michael Schaffner <msf@google.com>



======Commit: 1565d5d7======
======Short Message======
[sysrst_ctrl] Spell out all implicit 0 reset values in multifield CSRs
======Full Message======
[sysrst_ctrl] Spell out all implicit 0 reset values in multifield CSRs

Some fields of multifield CSRs have a 0x1 reset value. In those cases,
all other fields are assigned X in the documentation if no explicit
reset value is specified.

This patch therefore spells out these reset values explicitly.

Signed-off-by: Michael Schaffner <msf@google.com>



======Commit: d62912f5======
======Short Message======
[dv/top] add ast_base prefix to ast reg block
======Full Message======
[dv/top] add ast_base prefix to ast reg block

Signed-off-by: Sharon Topaz <sharon.topaz@nuvoton.com>

[dv/top] add a note for the use of ast_base_reg

Signed-off-by: Sharon Topaz <sharon.topaz@nuvoton.com>

fix lint issue

Signed-off-by: Sharon Topaz <sharon.topaz@nuvoton.com>

fix lint issue

Signed-off-by: Sharon Topaz <sharon.topaz@nuvoton.com>



======Commit: da257f30======
======Short Message======
[prim_esc_receiver] Fix response toggling corner case
======Full Message======
[prim_esc_receiver] Fix response toggling corner case

This should prevent spurious integrity alerts when a ping request is
interrupted by an escalation request.

In particular, instead of hardcoding the value of the response diff pair
in the FSM, we just keep on toggling the previous values whenever we are
in a response state (no matter whether we are responding to a ping or
escalation response).

The only time we reset the diff-pair state to an initial value is in the
idle state when no request is detected.

Fix #8139

Signed-off-by: Michael Schaffner <msf@google.com>



======Commit: a8527ca6======
======Short Message======
[keymgr] Latch async faults such that they are permanent
======Full Message======
[keymgr] Latch async faults such that they are permanent

- Fixes #8187

Signed-off-by: Timothy Chen <timothytim@google.com>



======Commit: 597dea82======
======Short Message======
[ast] Fix ast.core file
======Full Message======
[ast] Fix ast.core file

Signed-off-by: Jacob Levy <jacob.levy@opentitan.org>



======Commit: 38c2f734======
======Short Message======
[dv] Fix coverage report error
======Full Message======
[dv] Fix coverage report error

It's due to the update in #8137 and now not all the IP has elfile
This fix is to avoid using `-elfile` when no elfile is in the list

Signed-off-by: Weicai Yang <weicai@google.com>



======Commit: a00b3dbc======
======Short Message======
[keymgr/dv] Fix shadow reg timeout
======Full Message======
[keymgr/dv] Fix shadow reg timeout

Change csr_vseq_done flag default value to 1

Signed-off-by: Weicai Yang <weicai@google.com>



======Commit: 39adf6cd======
======Short Message======
[otbn,dv] Alter ISS to match RTL for SW double errors
======Full Message======
[otbn,dv] Alter ISS to match RTL for SW double errors

This is the situation modelled in sw-0.s, where we underflow the call
stack to get a value to store, but also try to store it to an invalid
address:

    sw x1, -1(x0)

The RTL quite reasonably reports both errors (CALL_STACK and
BAD_DATA_ADDR). Change the ISS to match.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: aa9bd1da======
======Short Message======
[otbn,dv] Alter ISS to match RTL for BN.MOVR double errors
======Full Message======
[otbn,dv] Alter ISS to match RTL for BN.MOVR double errors

This is the same logic as the previous commit: we can underflow the
call stack with one operand but still have a valid (but illegal) value
in the other operand. Handle this more symmetrically, which also
matches the behaviour of the RTL.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: d75f19fb======
======Short Message======
[otbn,dv] Alter ISS to match RTL for BN.LID/BN.SID double errors
======Full Message======
[otbn,dv] Alter ISS to match RTL for BN.LID/BN.SID double errors

There are a couple of changes here. Firstly, we change the behaviour
on double increments. An instruction like

    bn.lid x3++, 0(x2++)

is illegal but possible to encode. The RTL catches such things as part
of the decode stage, so this sort of error masks any others. Seems
reasonable! Let's do the same in the spec.

Secondly, we change things to handle cases like this:

  addi   x2, x0, 1
  bn.lid x1, 0(x2)

where we underflow the call stack when reading x1 for grd, but manage
to read an address from x2. Unfortunately, the address is bogus! Now,
we signal both errors (CALL_STACK for the underflow and BAD_DATA_ADDR
for the bad address). This works similarly the other way around (when
grd points at an invalid WDR and grs1 underflows the call stack:
checked in the bnlid-1.s test). This matches the RTL's behaviour and
probably makes more sense than what the ISS was doing before.

Also, mirror these changes for BN.SID (which has basically the same
error behaviour).

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 1a1c0115======
======Short Message======
[otbn,rtl] Prevent illegal instructions causing call stack errors
======Full Message======
[otbn,rtl] Prevent illegal instructions causing call stack errors

The read and write enables going to the base register file now factor in
whether or not an illegal instruction encoding was used, or if the
instruction performs an illegal CSR/WSR access. This prevents a call
stack error occurring when such an illegal instruction is seen.

Errors caused by indirect register accesses also cause illegal
instruction errors but cannot be factored into the register enables to
avoid a combinational loop.

Signed-off-by: Greg Chadwick <gac@lowrisc.org>



======Commit: b9a9ab7c======
======Short Message======
[alert_handler] delay crashdump sampling event by 1 cycle
======Full Message======
[alert_handler] delay crashdump sampling event by 1 cycle

This makes sure that the crashdump status reflects the most recent
escalation state change as well.

Fixes #8169

Signed-off-by: Michael Schaffner <msf@google.com>



======Commit: 5b029b26======
======Short Message======
[doc] Minor fix on alert_handler doc
======Full Message======
[doc] Minor fix on alert_handler doc

This is a minor fix to update number of local alert in alert_handler.

Signed-off-by: Cindy Chen <chencindy@opentitan.org>



======Commit: 22acff55======
======Short Message======
[otbn] Improve driver spec section
======Full Message======
[otbn] Improve driver spec section

* Fix the link to the generated API documentation for the driver.
* Mention the second driver for OTBN in the silicon creator code.

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: d6251078======
======Short Message======
[otbn] Editorial spec change
======Full Message======
[otbn] Editorial spec change

Use the term "locked" for when OTBN has seen a fatal error for
consistency.

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: dd58ae8c======
======Short Message======
[util] Make regwen_multi / compact consistent
======Full Message======
[util] Make regwen_multi / compact consistent

- Do not require the user to have to set both
- Also add an error check if regwen_multi and compact are both true

Signed-off-by: Timothy Chen <timothytim@google.com>



======Commit: 796b4b40======
======Short Message======
[otbn,dv] Write unit tests to exercise each "multiple error" case
======Full Message======
[otbn,dv] Write unit tests to exercise each "multiple error" case

This addresses each of the situations where an instruction could
theoretically generate more than one synchronous error. The "expected"
files are set up so that the (ISS) test passes. But they probably
don't match the RTL at the moment: we'll follow up, amending the
ISS+test or RTL (or both) to make things a bit more sensible and get
everything matching.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 6d7d3827======
======Short Message======
[otbn,dv] Strengthen ISS testing to check INSN_CNT, ERR_BITS
======Full Message======
[otbn,dv] Strengthen ISS testing to check INSN_CNT, ERR_BITS

This is probably nice anyway, but it also makes it easy to write tests
that hammer out the exact error behaviour when we trigger (possibly)
multiple errors in a single instruction.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: a86c96f5======
======Short Message======
[dv/clkmgr] Fix clk_status SVA
======Full Message======
[dv/clkmgr] Fix clk_status SVA

The SVAs related to clk_status were assuming a wait for idle_i to be
all 1's.

Signed-off-by: Guillermo Maturana <maturana@google.com>



======Commit: a8850d9d======
======Short Message======
[dv/prim_esc] Improve FSM coverage
======Full Message======
[dv/prim_esc] Improve FSM coverage

This PR adds a sequence: ping_req interrupted by esc_req to improve FSM
coverage.
It also adds a small delay to create different timings to inject signal
integrity error.

Signed-off-by: Cindy Chen <chencindy@opentitan.org>



======Commit: 6cda511b======
======Short Message======
[prim_subreg_shadow] Fix for W1S/W0C corner case
======Full Message======
[prim_subreg_shadow] Fix for W1S/W0C corner case

Fix #8055

Signed-off-by: Michael Schaffner <msf@opentitan.org>



======Commit: 1855295f======
======Short Message======
[prim_subreg_shadow] Disallow phase updates when storage err is present
======Full Message======
[prim_subreg_shadow] Disallow phase updates when storage err is present

Fix #8053

Signed-off-by: Michael Schaffner <msf@opentitan.org>



======Commit: fe5d032c======
======Short Message======
[clkmgr] Harden clock manager through frequency measurements
======Full Message======
[clkmgr] Harden clock manager through frequency measurements

- Fixes #7167 and updates documentation
- Also addresses #7813 as part of documentation update

Signed-off-by: Timothy Chen <timothytim@google.com>



======Commit: 83ade925======
======Short Message======
[otbn,dv] Fix segfault when otbn_top_sim exited with failure
======Full Message======
[otbn,dv] Fix segfault when otbn_top_sim exited with failure

The verilator_top.reset() line was only being run when we exited
successfully. If not, we ended up destructing the std::unique_ptr and
thus its contents somewhere inside the CRT's run_exit_handlers.

It turns out that there's a race where a singleton in the Verilator
library *must* exist when you run the constructor or destructor and
you get a segfault if verilator_top happens to have a longer lifetime
than the singleton.

Fix things by being stupider: use a raw pointer to pass the object to
OtbnTopApplyLoopWarp (the DPI function that needs it). This will be
dangling after we exit main() and have destroyed the object, but we
don't really care.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 620dee7c======
======Short Message======
[fpga] Enable ROM splicing for scrambled boot ROMs
======Full Message======
[fpga] Enable ROM splicing for scrambled boot ROMs

It turns out slices declared in the MMI need to be divisble by 8.
Otherwise the updatemem tool doing the splicing segfaults.

Signed-off-by: Pirmin Vogel <vogelpi@lowrisc.org>



======Commit: 48731249======
======Short Message======
[otbn] Make termination on underflowing x1 more explicit in ISS
======Full Message======
[otbn] Make termination on underflowing x1 more explicit in ISS

This will cause slight changes to instruction behaviour in cases where
we might have seen multiple errors. Until now, we haven't been testing
this against the RTL, so we can probably assume we're switching one
set of mismatches for another(!).

But now we are more explicit about what's going on, which is probably
helpful in the documentation. What's more, we can now model things
like "if I do an LW that loads from x1 and underflows, I shouldn't see
an error caused by an invalid address"

Note that, while we handle CALL_STACK errors on underflow in insn.py,
we still need the GPRs.err_bits() method in order to handle overflow
properly.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: cb8a47e5======
======Short Message======
[doc] document styling rules for chip-level tests
======Full Message======
[doc] document styling rules for chip-level tests

This completes the final tasks that fix #7976.

Specifically, this completes the task that states:
"Documentation will be added to the website to describe
[sw/device/tests] subfoldering rule and naming conventions.

Signed-off-by: Timothy Trippel <ttrippel@google.com>



======Commit: c4d5d896======
======Short Message======
[otbn,dv] Fix a follow-up bug in the bad_load_store generator
======Full Message======
[otbn,dv] Fix a follow-up bug in the bad_load_store generator

Commit af368fc eliminated some sources of unrepresentable values, but
I missed one here. If val is (when interpreted as a 32-bit signed
integer) more negative than -max_offset-4 then -4 won't actually be
representable.

This commit fixes things by clamping to val + max_offset.

In practice, this problem didn't happen all that often because, while
we generate things like 0xffffffff very easily, getting things like
0xcb6b5000 (the value that triggered the bug) is rather less likely.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 714816b1======
======Short Message======
[otbn,dv] Fix ISS assertion for loop warp handling
======Full Message======
[otbn,dv] Fix ISS assertion for loop warp handling

I added this in commit 5d027c9 as a handy way to trigger errors
quickly if the new count specified in the loop warp was bogus (causing
top.restarts_left to go negative). Unfortunately, I included an
off-by-one error. :-(

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: aa98deec======
======Short Message======
[otbn,dv] Exit on mismatch in otbn_top_sim
======Full Message======
[otbn,dv] Exit on mismatch in otbn_top_sim

Now we'll print out the error message from one of the mismatches first
and then will stop a couple of cycles later (to allow things like
multiple errors in a cycle or wave dumping to proceed properly).

Example output:

    Simulation running, end by pressing CTRL-c.
    ERROR: At time 164, otbn_done_q != otbn_model_done (0 != 1).
    ERROR: At time 164, insn_cnt != otbn_model_insn_cnt (0x27 != 0x26).
    [171] %Error: otbn_top_sim.sv:347: Assertion failed in TOP.otbn_top_sim: Mismatch or model error (see message above)
    %Error: ../src/lowrisc_ip_otbn_top_sim_0.1/otbn_top_sim.sv:347: Verilog $stop

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 482cd5cd======
======Short Message======
[otbn,dv] Add "0x" prefixes to values in error messages
======Full Message======
[otbn,dv] Add "0x" prefixes to values in error messages

I just got myself *really* confused trying to work out how the ISS was
giving an ERR_BITS of 10, until I realised it was actually 16...

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: c9e10cbc======
======Short Message======
[otbn] Alter ISS behaviour for invalid BN.SID/BN.LID instructions
======Full Message======
[otbn] Alter ISS behaviour for invalid BN.SID/BN.LID instructions

For a sequence like the following:

    li      x10, 100
    bn.sid  x10, 10720(x0)

there are two reasons that the BN.SID instruction should raise an
error. Firstly, x10 is 100, which isn't a valid WDR index. Secondly,
the store address is 10720, which is above the top of memory. The
error bits for these two errors are ILLEGAL_INSN and BAD_DATA_ADDR,
respectively.

The RTL signals both errors, which seems reasonable but doesn't match
what the ISS was doing. Change the ISS to match.

The same argument applies to BN.LID.

Note that there are lots of examples of "multiple errors" in a cycle
that need checking. This is just urgent because we've suddenly started
generating streams with the RIG that happen to trigger this case quite
frequently.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 3962c0ce======
======Short Message======
[keymgr/dv] Fix keymgr_cmd_invalid
======Full Message======
[keymgr/dv] Fix keymgr_cmd_invalid

Disable some assertions for keymgr_cmd_invalid as we force internal FSM
to illegal values
Minor fix for advance with errors

Signed-off-by: Weicai Yang <weicai@google.com>



======Commit: e33c9dff======
======Short Message======
[dw/rstmgr[ Add POR stretching test and covergroup
======Full Message======
[dw/rstmgr[ Add POR stretching test and covergroup

Also fix cascading reset assertions defects revealed by this test.

Signed-off-by: Guillermo Maturana <maturana@google.com>



======Commit: ab23a91d======
======Short Message======
[sw] Dif and unittest updates to match
======Full Message======
[sw] Dif and unittest updates to match

- Note, it seems like the dif implementation is incomplete
  and will need to be further updated. This commit just does
  enough such that we can move on from software build errors
  and self tests for now.

- It may be good to disable entropy tests in CI until everything
  is ready.

Signed-off-by: Timothy Chen <timothytim@google.com>

[sw] further updates to dif

Signed-off-by: Timothy Chen <timothytim@google.com>



======Commit: 8a21cc36======
======Short Message======
[dv] Fix shadow reg
======Full Message======
[dv] Fix shadow reg

In CSR tests, TLUL access may be aborted and dropped
Only clear shadow_wr_staged when read is done successfully

Signed-off-by: Weicai Yang <weicai@google.com>



======Commit: 74cc2212======
======Short Message======
[kmac, fpga] Add command delay + accept message while idle for SCA
======Full Message======
[kmac, fpga] Add command delay + accept message while idle for SCA

This commit adds two optional changes to KMAC to simplify SCA
measurements on FPGA:
1. Writes to the command register are presented to the hardware 40 clock
   cycles later to allow Ibex to go to sleep before the operation
   starts. This reduces the noise during SCA measurements. In addition,
   software can write two commands in sequence. The second command is
   buffered internally and will be presented to the hardware 40 cycles
   after the first one. This allows for more efficient SCA measurements
   as Ibex doesn't need to be woken up after the absorb stage to trigger
   the squeeze.
2. KMAC accepts writes to the message FIFO while idle. This allows Ibex
   to provide the message before writing the start command, which
   simplifies SCA measurements.

Both these options are configured via separate parameters with a `Sec`
prefix. They are only enabled on the FPGA platform used for SCA
measurements. On all other platforms, safe default values are used
(both options disabled). Choosing any non-default values will generate
lint errors to reduce the risk of accidentally using these options.

Signed-off-by: Pirmin Vogel <vogelpi@lowrisc.org>



======Commit: bd97340b======
======Short Message======
[keymgr/dv] Fix keymgr_tl_intg_err
======Full Message======
[keymgr/dv] Fix keymgr_tl_intg_err

1. don't check sw_share in CSR tests as it's hw-update
2. add checking working_state after regfile_intg and shadow storage error

Signed-off-by: Weicai Yang <weicai@google.com>



======Commit: 9eda125d======
======Short Message======
[dv] Fix ral-gen multi-field index
======Full Message======
[dv] Fix ral-gen multi-field index

In 2nd field of the multi-field, if it only contains one field,
we define it as an array like `rand dv_base_reg_field access[4:4];`, but
we didn't add index when we used it.
Fixed this to address #8030

Signed-off-by: Weicai Yang <weicai@google.com>



======Commit: af368fc2======
======Short Message======
[otbn,dv] Sort out address selection in bad_load_store.py
======Full Message======
[otbn,dv] Sort out address selection in bad_load_store.py

There was a bug before, where the second branch could pick a tgt_addr
that was much smaller than val + min_offset (if val was very big
compared with model.dmem_size).

Also, force correct alignment most of the time.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: ecc3b074======
======Short Message======
[otbn,dv] Fix loop warp count selection in RIG
======Full Message======
[otbn,dv] Fix loop warp count selection in RIG

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: d86f385b======
======Short Message======
[keymgr] Distinguish disabled / invalid for fault purposes
======Full Message======
[keymgr] Distinguish disabled / invalid for fault purposes

- Fixes #8116

Signed-off-by: Timothy Chen <timothytim@google.com>



======Commit: d391e88b======
======Short Message======
[keymgr] Align spec and implementation
======Full Message======
[keymgr] Align spec and implementation

Fixes #8112

Signed-off-by: Timothy Chen <timothytim@google.com>



======Commit: db70c37a======
======Short Message======
[top] Minor lint fixes
======Full Message======
[top] Minor lint fixes

Signed-off-by: Timothy Chen <timothytim@google.com>



======Commit: be139be8======
======Short Message======
[pwrmgr] Harden pwrmgr FSM / main_pok handling
======Full Message======
[pwrmgr] Harden pwrmgr FSM / main_pok handling

- Fixes #7928
- Fixes #7986
- Bypass low power entry handshaking when internal reset is observed
- Sparsely encode both fast / slow FSMs
- Check for unstable power and treat it as an internal reset source
- If the FSM gets out of sync, make a best case effort to kill the system

Signed-off-by: Timothy Chen <timothytim@google.com>

[top] Auto generate

Signed-off-by: Timothy Chen <timothytim@google.com>



======Commit: 15405ead======
======Short Message======
[keymgr/dv] Fix keymgr_kmac_rsp_err and keymgr_hwsw_invalid_input
======Full Message======
[keymgr/dv] Fix keymgr_kmac_rsp_err and keymgr_hwsw_invalid_input

Fix a few issues and these 2 tests are passing now
1. loose 2 cycle key check when we start to wipe key
2. Fix hw input valid check
3. Fix to unlock sw_binding_regwen only when advance is done
successfully

Signed-off-by: Weicai Yang <weicai@google.com>



======Commit: 9c49ba89======
======Short Message======
[clkmgr, doc] Update hardware assumptions in docs.
======Full Message======
[clkmgr, doc] Update hardware assumptions in docs.

- Fixes #8014

Signed-off-by: Timothy Chen <timothytim@google.com>



======Commit: d02fba73======
======Short Message======
[keymgr] Fix for lc disable during init.
======Full Message======
[keymgr] Fix for lc disable during init.

- Fixes #8042
- Make the behavior of lc disable during init consistent with others.
- When an lc disable is encountered during init, do not complete
  the init transaction and instead go to wipe key and report
  invalid operation.

Signed-off-by: Timothy Chen <timothytim@google.com>



======Commit: 07804c00======
======Short Message======
[ast] Fixes for various ast issues
======Full Message======
[ast] Fixes for various ast issues

- Fixes #7925
- Fixes #7924

Since AST now requires nested domain functionality, this
PR is dependent on #7980

Signed-off-by: Timothy Chen <timothytim@google.com>



======Commit: c2af874c======
======Short Message======
[prim_esc_receiver] Assert escalation in case of sigint error
======Full Message======
[prim_esc_receiver] Assert escalation in case of sigint error

Fix #7489

Signed-off-by: Cindy Chen <chencindy@opentitan.org>
Signed-off-by: Michael Schaffner <msf@opentitan.org>



======Commit: 1ed9b0b2======
======Short Message======
[alert_handler] Minor description fix in Hjson
======Full Message======
[alert_handler] Minor description fix in Hjson

Signed-off-by: Michael Schaffner <msf@google.com>



======Commit: 818a2e9b======
======Short Message======
[dv/alert_handler] Clean up alert_handler tb
======Full Message======
[dv/alert_handler] Clean up alert_handler tb

1). Remove all shadow_wr_en because it is default to On in csr_wr
2). Remove the fork join to simplify the sequence logic

Signed-off-by: Cindy Chen <chencindy@opentitan.org>



======Commit: c56dfb99======
======Short Message======
[dv/cip_base_vseq] minor space fix
======Full Message======
[dv/cip_base_vseq] minor space fix

This PR fixes DV coding style to add a space between repeat()

Signed-off-by: Cindy Chen <chencindy@opentitan.org>



======Commit: 1cb64733======
======Short Message======
[doc] Fix hugo ignoreFiles
======Full Message======
[doc] Fix hugo ignoreFiles

Entries are regex, not glob. Switch some uses of '*' to '.*' so they
work as intended.

Signed-off-by: Greg Chadwick <gac@lowrisc.org>



======Commit: 46bc1943======
======Short Message======
[dv/kmac] update error_cg
======Full Message======
[dv/kmac] update error_cg

this PR updates the `error_cg`to collect coverage on newly added IP
errors, and makes the corresponding documentation more clear as to what
coverage is being collected on for each type of error.

Signed-off-by: Udi Jonnalagadda <udij@google.com>



======Commit: 628b577f======
======Short Message======
[csrng/rtl] gen cmd additional data for multiple channels
======Full Message======
[csrng/rtl] gen cmd additional data for multiple channels

This fix handle the case where multiple csrng application channels are running, and the gen command has additional data.

Signed-off-by: Mark Branstad <mark.branstad@wdc.com>



======Commit: b0f89e63======
======Short Message======
[rv_plic] Synchronize all interrupt requests
======Full Message======
[rv_plic] Synchronize all interrupt requests

Fix #7435

Signed-off-by: Michael Schaffner <msf@opentitan.org>



======Commit: 77f3b0db======
======Short Message======
[fpv] Fix compile error in pwrmgr
======Full Message======
[fpv] Fix compile error in pwrmgr

This PR fixes pwrmgr compile error by selecting top design level.
Also apply the same fix for rv_plic top-level model.

Signed-off-by: Cindy Chen <chencindy@opentitan.org>



======Commit: 2efd35b6======
======Short Message======
[dv/tl_agent] fixed bus2reg rw.kind conversion
======Full Message======
[dv/tl_agent] fixed bus2reg rw.kind conversion

Signed-off-by: Dror Kabely <dror.kabely@opentitan.org>



======Commit: 33daad00======
======Short Message======
[otbn,doc] Fix link in DV documentation to MaximalLoop_C
======Full Message======
[otbn,doc] Fix link in DV documentation to MaximalLoop_C

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: b199cdc2======
======Short Message======
[otbn,dv] Fix regex for parsing loop warps
======Full Message======
[otbn,dv] Fix regex for parsing loop warps

The plus should be inside the capture groups (but it still works for
single digit numbers, which is why I didn't realise the bug at
first!).

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 17484e02======
======Short Message======
[otbn,dv] Destroy verilator_top before end in otbn_top_sim.cc
======Full Message======
[otbn,dv] Destroy verilator_top before end in otbn_top_sim.cc

There seems to be a strange race condition with file-scope verilated
objects. Defining verilator_top as a pointer and constructing the
object inside main() instead of in some pre-main initialisation fixed
a segfault when constructing things.

It seems that there's a corresponding segfault that can be triggered
in the destructor unless we also destruct the object in advance. We
should probably root-cause this properly but, for now, this gets rid
of the segfault.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 7cd4c40a======
======Short Message======
[verilator] Use FileSz rather than MemSz when flattening ELF files
======Full Message======
[verilator] Use FileSz rather than MemSz when flattening ELF files

This ensures that NOBITS sections, which may have a LMA in RAM, are
not included in the final binary image.

Fixes #8075.

Signed-off-by: Michael Munday <mike.munday@lowrisc.org>



======Commit: 2444ac02======
======Short Message======
[util] Tidy up how we call finst_gen in reg_top.sv.tpl
======Full Message======
[util] Tidy up how we call finst_gen in reg_top.sv.tpl

Now, we iterate over elements of rb.all_regs, then any subregisters (if
the element happened to be a MultiRegister) and then any fields.
Hopefully, the result is a little easier to follow. The various
special cases in how we generate signal names mean that this code is
still a little complicated, but the idea is that a reader should be
able to scan to the right place a bit quicker.

The end results are equivalent, but with slightly better controlled
whitespace. To see what's going on, run:

    git diff -w --ignore-blank-lines

which will show no differences except that we fix the subregister
indices in comments in spi_device_reg_top.sv.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: f291b3cc======
======Short Message======
[otbn,dv] Fix overflow in small value generator
======Full Message======
[otbn,dv] Fix overflow in small value generator

This was causing bugs where we tried to express 2048 (= 64 << 5) as a
12-bit signed value. Refactor things a bit to make it more obvious how
everything works, and also squash down the unshifted range a bit again
to make it more likely we'll see values like -1 or -2.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: e221e1c3======
======Short Message======
[otbn,dv] Bad load/store snippet
======Full Message======
[otbn,dv] Bad load/store snippet

Bad load-store generates out of bounds addresses and generates
an error.

Signed-off-by: Canberk Topal <ctopal@lowrisc.org>
Co-authored-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 0703f96c======
======Short Message======
[sw/testing] move smoke tests and condense their names
======Full Message======
[sw/testing] move smoke tests and condense their names

This partially addresses #7976, specifically the tasks that states:
  1. "The smoke tests subfolder will be deprecated, and all smoke tests
       will move to sw/device/tests."
  2. "The prefix "dif_", will be removed from smoke test file names."

Additionally, all build and test configuration files were updated to
match the above the changes.

Signed-off-by: Timothy Trippel <ttrippel@google.com>



======Commit: 8ad10e7d======
======Short Message======
[lc_ctrl] Add assertions for lc_clk_byp_req_o
======Full Message======
[lc_ctrl] Add assertions for lc_clk_byp_req_o

Fix #7663

Signed-off-by: Michael Schaffner <msf@opentitan.org>



======Commit: 7838ef2d======
======Short Message======
[lc_ctrl] Address minor issues found in security review
======Full Message======
[lc_ctrl] Address minor issues found in security review

This updates the lc_ctrl_fsm state diagram, and a few minor RTL issues
that have been uncovered during the RTL security review.

Fixes #7540

Signed-off-by: Michael Schaffner <msf@opentitan.org>



======Commit: 33d1b0fc======
======Short Message======
[opentitantool] Add a proper int parser.
======Full Message======
[opentitantool] Add a proper int parser.

The default integer parsers in Rust are deficient: there is no equivalent
of `strtol` or `strtoul` with a base of 0 (ie: which autodetects the integer
base using classic C-language prefixes).

1. Add a ParseInt trait which implements proper integer parsing for use in
developer and low-level tooling.
2. Replace the prior use of `parse_u16` with the ParseInt trait.

Signed-off-by: Chris Frantz <cfrantz@google.com>



======Commit: ee459baf======
======Short Message======
[sw/vendor] patched FreeRTOS for porting to OT
======Full Message======
[sw/vendor] patched FreeRTOS for porting to OT

- Removed stdlib.h includes since kernel does not actually use it.
- Replaced string.h includes with sw/device/lib/base/memory.h since that
  where we implement the function FreeRTOS requires.
- Removed CLINT macros since we will implement a custom OT port and
  these will just introduce compiler errors.

Signed-off-by: Timothy Trippel <ttrippel@google.com>



======Commit: 72f20cbb======
======Short Message======
[tlul] Minor lint fix for tlul_adapter_host usage
======Full Message======
[tlul] Minor lint fix for tlul_adapter_host usage

Signed-off-by: Timothy Chen <timothytim@google.com>



======Commit: 28bbd323======
======Short Message======
[keymgr] Fix for error capture
======Full Message======
[keymgr] Fix for error capture

- Fixes #7998
- Break keymgr errors into 4 explicit categories
  - sync errors
  - async errors
  - sync faults
  - async faults

Signed-off-by: Timothy Chen <timothytim@google.com>

[keymgr, dv] Accompanying DV updates

Signed-off-by: Timothy Chen <timothytim@google.com>

[keymgr, sw] Accompanying software updates

Signed-off-by: Timothy Chen <timothytim@google.com>

[keymgr] Accompanying documentation update

Signed-off-by: Timothy Chen <timothytim@google.com>



======Commit: 4298d842======
======Short Message======
[keymgr/dv] Scb update for LC disable
======Full Message======
[keymgr/dv] Scb update for LC disable

Clean all regression failures in keymgr_lc_disable, except
that LC disable occurs at StReset, as design will fix it

Signed-off-by: Weicai Yang <weicai@google.com>



======Commit: 1e5d0768======
======Short Message======
[dv/clkmgr] Fix clk_status testpoint
======Full Message======
[dv/clkmgr] Fix clk_status testpoint

Fix problems in clk_status sequence.
Add SVA to cross check the clk_status output against ip_clk_en and
usb_clk_en_active.
Control the clocks as pwrmgr would do in response to changes in ip_clk_en.
Disable randomization of usb_clk_en_active to avoid failures due to issue

Signed-off-by: Guillermo Maturana <maturana@google.com>



======Commit: 78b60414======
======Short Message======
[dv/alert_handler] Fix tl_integ_err_vseq
======Full Message======
[dv/alert_handler] Fix tl_integ_err_vseq

This PR fixes the failure in tl_integ_err auto generated sequence
because alert_handler does not have any alert coming out.

Signed-off-by: Cindy Chen <chencindy@opentitan.org>



======Commit: 681d96af======
======Short Message======
[pwm, rtl] PWM RTL change for issue #7425 lightweight check for parameter updates
======Full Message======
[pwm, rtl] PWM RTL change for issue #7425 lightweight check for parameter updates

  - Update pwm.hjson file to add write enable signal for registers through hwqe parameter
  - Remove the redundant registers created for checking parameter updates
  - Fixes #7425

Signed-off-by: Muqing Liu <muqing.liu@wdc.com>



======Commit: 511c6e48======
======Short Message======
[keymgr/fpv] Fix formal compilation error
======Full Message======
[keymgr/fpv] Fix formal compilation error

We found the `ASSERT_INIT` throws a compilation error saying the
`kmac_en_masking_i` is not a constant. We were thinking we can change it
to an assumption, but that might not be ideal for top-level.
I consulted with Weicai, if there is any issue related to this,
top-level tests could easily find the error. So we think it is safe to
just remove this assertion.

Please let uw know if you prefer a better solution.

Signed-off-by: Cindy Chen <chencindy@opentitan.org>



======Commit: 2fcfa70a======
======Short Message======
[opentitantool] Add ultradebug and SPI flash support
======Full Message======
[opentitantool] Add ultradebug and SPI flash support

1. Integrate the ultradebug backend into opentitantool.
2. Create commands for manipulating GPIOs.
3. Create commands for manipulating SPI flash parts.

Signed-off-by: Chris Frantz <cfrantz@google.com>



======Commit: 6d5fe6c1======
======Short Message======
[otbn,dv] Fix lint errors in known_wdr.py
======Full Message======
[otbn,dv] Fix lint errors in known_wdr.py

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: a9241dbb======
======Short Message======
[otbn,dv] Remove debug prints from BadCallStackRW; give it a weight
======Full Message======
[otbn,dv] Remove debug prints from BadCallStackRW; give it a weight

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 7e60eca1======
======Short Message======
[csrng/rtl] bug fix for gen cmd with additional data
======Full Message======
[csrng/rtl] bug fix for gen cmd with additional data

Case where a gen command was used with additional data input.
The additional data was not being retained until the final ctr_drbg update.

Signed-off-by: Mark Branstad <mark.branstad@wdc.com>



======Commit: 8d3b76c0======
======Short Message======
[sw] update english_breakfast specific patch to match
======Full Message======
[sw] update english_breakfast specific patch to match

Signed-off-by: Timothy Chen <timothytim@google.com>



======Commit: 62bdf5b0======
======Short Message======
[otbn,dv] Add loop warping support to otbn_top_sim
======Full Message======
[otbn,dv] Add loop warping support to otbn_top_sim

This is the testbench that we use for Verilator simulations. Since
Verilator doesn't support the SystemVerilog "force" statement, we call
back to C++ and update the signals manually there. To do this, we
install a DPI hook on each negedge: this would probably be very
inefficient in some simulators, but the "context switch" shouldn't be
a big deal in Verilator.

One slight difficulty is that the RTL doesn't count "loop K of N".
Instead, it counts down from N. That's (obviously) more efficient, but
doesn't really match the intuitive way to count loop iterations, so we
want to convert between it and the "K of N" scheme. To do so, you need
"N", but the RTL doesn't store that value (since it doesn't need it),
so we have some extra tracking code that tracks the stack of initial
loop counts.

Obviously, adding this sort of invasive test code might be worrying:
what happens if it goes wrong?! But the result of something coming
unstuck here will be spuriously failing tests, not that we miss a bug
in the design, so I'm not too worried about it.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: e28ef300======
======Short Message======
[otbn,dv] Add loop warping support to ISS
======Full Message======
[otbn,dv] Add loop warping support to ISS

This is the first commit for "loop warping". The idea is that you
might want to see the loop counter in the design incrementing at some
really big values (it goes up to 2^32), but don't want to simulate 4
billion cycles to get there.

Instead, you want to simulate the first few iterations around the loop
and then "jump" to the last few. This patch teaches the ISS to do this
when special symbols are added to the ELF file. Specifically, such a
symbol should have a name of the form:

    _loop_warp_123_456

and value that match an IMEM address. This means "if I execute the
given address and the innermost loop count is 123, alter the loop
count to 345".

We put the counts in the symbol name and address in the value so that
you can easily specify these in assembly code, without needing to know
the exact layout of the generated binary.

Of course, there's a duplication problem: what if you had two
different loops where you wanted to do the same warping? To get around
this, we allow any string after the second count:

    _loop_warp_123_456ANYOLDRUBBISH

and ignore it.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: ff1f5170======
======Short Message======
[ci] Fix check-generated script with untracked files
======Full Message======
[ci] Fix check-generated script with untracked files

git diff doesn't report untracked files, so isn't really the right
thing to use here. Instead, use "git status" with the --porcelain
flag, which prints something iff the tree has untracked/uncommitted
changes.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: a664feb8======
======Short Message======
[rtl] Generate reg-tops for "mem" interface on flash_ctrl
======Full Message======
[rtl] Generate reg-tops for "mem" interface on flash_ctrl

These are auto-generated files that weren't checked in with c74ba0a
and (because of a bug in a CI script) we didn't spot them.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 81784603======
======Short Message======
[otbn] Add state transition diagram for operational states
======Full Message======
[otbn] Add state transition diagram for operational states

Fixes #7900

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: cd2d11ef======
======Short Message======
[otbn] A fatal error always transitions into locked state
======Full Message======
[otbn] A fatal error always transitions into locked state

When OTBN detect a fatal error, it unconditionally transitions into
locked state, not only if OTBN was busy before.

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: 0e571aae======
======Short Message======
[dv/shadow_reg] Fix same_csr_outstanding shadow reg issue
======Full Message======
[dv/shadow_reg] Fix same_csr_outstanding shadow reg issue

This PR fixes regression error on same_csr_outstanding. This sequence
uses tl_access instead of csr_wr thus did not perform two writes for
shadow regs.

Signed-off-by: Cindy Chen <chencindy@opentitan.org>



======Commit: f63b735d======
======Short Message======
[dif/rv_timer] add function to write to counter
======Full Message======
[dif/rv_timer] add function to write to counter

This adds an additional function, dif_rv_timer_counter_write(),
to fix #7921.

Signed-off-by: Timothy Trippel <ttrippel@google.com>



======Commit: 8c92109e======
======Short Message======
[doc] Add pre_dv area to directory structure doc
======Full Message======
[doc] Add pre_dv area to directory structure doc

Fix #1306

Signed-off-by: Michael Schaffner <msf@google.com>



======Commit: da8885ea======
======Short Message======
[sva/keymgr] Fix csr assertion error
======Full Message======
[sva/keymgr] Fix csr assertion error

This PR fixes the auto-generated assertion error:
The issue is that some shadow registers are hro and sw rw. When
generating CSR assertion checks, we did not exclude this scenario.

Signed-off-by: Cindy Chen <chencindy@opentitan.org>



======Commit: c45e9833======
======Short Message======
[dv/otp_ctrl] Fix null object in otp_cov
======Full Message======
[dv/otp_ctrl] Fix null object in otp_cov

This PR changes a hard-coded number to use a parameter, and fix a null
object issue.

Signed-off-by: Cindy Chen <chencindy@opentitan.org>



======Commit: 11f0f9a9======
======Short Message======
 [otp_ctrl] Add option to disable alerts for ECC uncorrectable errors
======Full Message======
 [otp_ctrl] Add option to disable alerts for ECC uncorrectable errors

 This option is used to ensure that ECC errors inside the VENDOR_TEST
 partition do not lead to fatal alerts leading to escalation.

Signed-off-by: Michael Schaffner <msf@google.com>



======Commit: 5a3bcddd======
======Short Message======
[dv/shadow_reg] Check status after shadow_reg write
======Full Message======
[dv/shadow_reg] Check status after shadow_reg write

This PR adds status check in shadow_reg test.
This PR also update shadow_reg testplan - right now we can randomly
choose which error sequence to trigger.

Signed-off-by: Cindy Chen <chencindy@opentitan.org>



======Commit: 8bb0d4c8======
======Short Message======
[dv/shadwo_reg] Shadow reg common sequence update
======Full Message======
[dv/shadwo_reg] Shadow reg common sequence update

This PR updates shadow_reg common sequence with the following updates:
1). Fix a previous error that does not create storage error.
2). Move shadow reg related test to a separate file for the ease of
reading.
3). Remove random CSR writes before creating shadow reg errors. If the
shadow registers have some special logic with other registers,
individual IP owners can test them separately.

Signed-off-by: Cindy Chen <chencindy@opentitan.org>



======Commit: 4f7ec2d5======
======Short Message======
[dv/cip_lib] Avoid circular random constraints
======Full Message======
[dv/cip_lib] Avoid circular random constraints

Provide a simple work-around for circular constraints caused by a
user function that causes dsim to flag an error. Other simulators
support this, but it is easy to avoid and it is at the edge of the
LRM.

Signed-off-by: Guillermo Maturana <maturana@google.com>



======Commit: 2f70ed90======
======Short Message======
[top/dv] Fix bootstrap connection
======Full Message======
[top/dv] Fix bootstrap connection

The sw_strap we connected in tb doesn't match with bootstrap.c

Signed-off-by: Weicai Yang <weicai@google.com>



======Commit: 8e37434e======
======Short Message======
[keymgr] Clean-up and bug fix for keymgr
======Full Message======
[keymgr] Clean-up and bug fix for keymgr

This PR started off as an attmempt to fix #7902,
however in the process of doing so, it was discovered there
are more issues with how keymgr handled dummy transactions
in the disabled state.

This PR attempts to fix those issues.

Signed-off-by: Timothy Chen <timothytim@google.com>



======Commit: 43f9a4ba======
======Short Message======
[keymgr/dv] Fix a few issues in scb for LC disable
======Full Message======
[keymgr/dv] Fix a few issues in scb for LC disable

Signed-off-by: Weicai Yang <weicai@google.com>



======Commit: 1049fb88======
======Short Message======
[dv] Fix type error in clock frequency selection
======Full Message======
[dv] Fix type error in clock frequency selection

This didn't actually matter at runtime (since both HostReqNone and
ClkFreqDiffNone happen to be encoded as zero), but it did cause VCS to
spit out a warning.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 95e2b8c7======
======Short Message======
[chip dv] Fix failing SVA in pwrmgr_ast_sva_if
======Full Message======
[chip dv] Fix failing SVA in pwrmgr_ast_sva_if

This is a possible fix for #7942. Instead of tracking levels, this
change tracks edges instead, and reduces the lower clock cycle bound to
0.

Signed-off-by: Srikrishna Iyer <sriyer@google.com>



======Commit: 9bfdaabb======
======Short Message======
[util] Fix topgen verbosity
======Full Message======
[util] Fix topgen verbosity

The log_level logic added in e42c8f6 wasn't quite right: the value
that the Python logging library gets with no argument is None, not
log.NOTSET. Before the fix, we had debug-level output on every
run.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 1db46eb1======
======Short Message======
[sw/silicon_creator] Read usage constraints from hardware during ROM_EXT verification
======Full Message======
[sw/silicon_creator] Read usage constraints from hardware during ROM_EXT verification

Fixes #5956.

Signed-off-by: Alphan Ulusoy <alphan@google.com>



======Commit: 74aea08c======
======Short Message======
[sw/silicon_creator] Use sec_mmio in lifecycle driver
======Full Message======
[sw/silicon_creator] Use sec_mmio in lifecycle driver

Fixes #7026.

Signed-off-by: Alphan Ulusoy <alphan@google.com>



======Commit: c7f04c70======
======Short Message======
[otbn] Introduce locked state
======Full Message======
[otbn] Introduce locked state

Introduce a new locked state, represented as LOCKED in the STATUS
register to indicate if OTBN has detected a fatal error and is now
"dead" until a reset.

With this new state, OTBN guarantees a certain value of the STATUS
register after a fatal error was detected, simplifying the documentation
and the verification.

Furthermore, operation handling from Ibex got easier even if fatal
alerts don't reach Ibex for whatever reason: an operation always returns
with a done interrupt, and reading the STATUS register clearly indicates
what happened to OTBN. (Before, software would have to read
FATAL_ALERT_CAUSE as well if STATUS was non-zero to check if an
operation can be restarted [in case of a recoverable error], or if
OTBN is locked.)

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: 37ff22ac======
======Short Message======
[doc] Document recommendation to install latest pip and setuptools
======Full Message======
[doc] Document recommendation to install latest pip and setuptools

In CI (and recently the Docker image builds - see #7960) we install the
latest version of pip and setuptools as older distro-provided versions
may not parse our version specifiers correctly, or lack support for
features like skipping yanked packages.

This patch makes the same recommendation to end users, which hopefully
avoids one source of hard to diagnose issues.

Signed-off-by: Alex Bradbury <asb@lowrisc.org>



======Commit: 3e19bde3======
======Short Message======
[otbn] Operational states and commands
======Full Message======
[otbn] Operational states and commands

Specify the operational states OTBN can be in.

- Consolidate all user (host-software) initiated actions into the CMD
  register. To keep things simple, I resorted to allowing only a single
  command being executed at any time, and in consequence encoding the
  command as number, not as bitfield. This also means that performing a
  secure wipe of IMEM and DMEM now requires two host-initiated actions.
  (Nobody ever asked explicitly for them being a single operation.)

  The CMD register is 8 bit wide to make multi-bit encodings and
  extensions of the commands easier going forward.

- Expand the STATUS register to show what's currently going on within
  OTBN: mirror all CMDs in the status register.

  The STATUS register is 8 bit wide to make it easier to extend going
  forward. We already plan to have a LOCKED status.

Update all users of the registers:

- Update all software to make use of the new CMD and STATUS registers.

- Update otbnsim to make use of the new registers. Refactor the err_bits
  module to hold other constants as well.

- Update DV to make use of the new registers.

Fixes #7434

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: bef0c8c3======
======Short Message======
[docker] Install python deps in same way as CI and users
======Full Message======
[docker] Install python deps in same way as CI and users

Currently, the dockerfiles install Python dependencies system-wide and
doesn't explicitly update pip and setuptools. CI and instructions for
users will install Python packages with --user and force an update of
setuptools and pip. While installing with --user may seem unnecessary in
the context of a Docker container, it avoids interactions with the
system package manager (`python3 -m pip install -U pip setuptools` will
fail due to the system install PyYAML).

As background, CI is currently failing for Docker builds:
* <https://github.com/lowRISC/opentitan/issues/7952>

While a follow-up fix to pin more dependencies is likely desirable,
minimising the differences between the dependency installation in our
Dockerfiles vs dependency installation elsewhere should reduce our
exposure to future such issues.

Signed-off-by: Alex Bradbury <asb@lowrisc.org>



======Commit: f7925e7e======
======Short Message======
[otbn] Create an UNIMP instruction
======Full Message======
[otbn] Create an UNIMP instruction

Add a new instruction alias to OTBN's ISA which is guaranteed to
generate an invalid instruction error. The UNIMP instruction is meant
typically used in an unreachable code path, like an `assert(1)`
statement.

An invalid instruction is a recoverable error in OTBN, which terminates
the execution immediately, returns control to the host CPU, and
additionally raises a recoverable alert.

In line with other instructions in the base instruction set of OTBN,
UNIMP is also borrowed from RISC-V, where it is defined in the same way
as de-facto instruction alias. See also
https://groups.google.com/a/groups.riscv.org/g/sw-dev/c/Xu6UmcIAKIk/m/piJEHdBlAAAJ
and https://github.com/riscv/riscv-asm-manual/blob/master/riscv-asm.md
for more information on the choice of encoding.

Due to us piggy-backing on RISC-V, GNU Binutils already supports the
alias out of the box, which means we don't need to do anything in our
OTBN toolchain to gain support for it, and can use `unimp` in assembly
without further changes.

Fixes #6147

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: fcb70d64======
======Short Message======
[aon_timer/rtl] Remove some dead code
======Full Message======
[aon_timer/rtl] Remove some dead code

These flops were replaced with a pulse_sync but the code never got
removed (fixes a synth warning).

Signed-off-by: Tom Roberts <tomroberts@lowrisc.org>



======Commit: f851c9ae======
======Short Message======
[rstmgr, dv] Hotfix for CI breakge
======Full Message======
[rstmgr, dv] Hotfix for CI breakge

A couple of PRs seem to have somehow crossed and resulted in a CI
failure.

Signed-off-by: Timothy Chen <timothytim@google.com>



======Commit: fd6bd2a3======
======Short Message======
[chip, dv] minor random fixups
======Full Message======
[chip, dv] minor random fixups

- Updated usbdev pwrmgr test name in the testplan and test
- Reduced UART seeds to 5

Signed-off-by: Srikrishna Iyer <sriyer@google.com>



======Commit: 2ece2426======
======Short Message======
[chip, dv] Fix assertion error in CSR RW tests
======Full Message======
[chip, dv] Fix assertion error in CSR RW tests

Removes exclusion on `pinmux.wkup_cause` CSR and adds write exclusion to
`pinmux.wkup_detect_en` instead, which fixes 2 different types of error
signatures as opposed to the former only solving one of the error
patterns. See in-line comments for details.

Signed-off-by: Srikrishna Iyer <sriyer@google.com>



======Commit: b92f2e02======
======Short Message======
[prim_diff_decode] Fix asynchronous assertions
======Full Message======
[prim_diff_decode] Fix asynchronous assertions

Fix #7910

Signed-off-by: Michael Schaffner <msf@google.com>



======Commit: c41bfe10======
======Short Message======
[top] Review and update of clock / reset settings for all modules
======Full Message======
[top] Review and update of clock / reset settings for all modules

- Added software controllable resets for spi
- Corrected reset clock domains for spi_host and others
- Assigned clock groups where appropriate
- Minor tweak of unused clock / reset connections to ast

Signed-off-by: Timothy Chen <timothytim@google.com>

[top] Modifications for verilator to match new definition

- Due to the clock / reset correction, the behavior of pwrmgr
  changes out of reset.  Since verilator doesn't support async
  reset, this causes issues on when other modules see a reset
  and when the second reset needs to be pulsed.

- This should be fixed better in the long term by observing
  specific signals inside instead of a blind wait.

Signed-off-by: Timothy Chen <timothytim@google.com>



======Commit: 971693bb======
======Short Message======
[keymgr] Unknown data on keymgr sideload key
======Full Message======
[keymgr] Unknown data on keymgr sideload key

Fixes #7909

Signed-off-by: Timothy Chen <timothytim@google.com>



======Commit: 5523a667======
======Short Message======
[dv/rstmgr] Update testplan, checklist, and dv doc
======Full Message======
[dv/rstmgr] Update testplan, checklist, and dv doc

Also adds rstmgr to nightly regression.
Fixes for multireg and xcelium.

Signed-off-by: Guillermo Maturana <maturana@google.com>



======Commit: 3dfbfea9======
======Short Message======
[pwm, rtl] RTL update for issue #6044 pare down PWM CDC
======Full Message======
[pwm, rtl] RTL update for issue #6044 pare down PWM CDC

  - Removed PWM CDC module, use the standardized regfile CDC scheme
  - Update pwm.hjson file to implement the standardized CDC
  - Delete file pwm_cdc.sv and update pwm.core file
  - Fixes #6044

Signed-off-by: Muqing Liu <muqing.liu@wdc.com>



======Commit: c4c7a0fb======
======Short Message======
[util] Temporary fix to auto-generate flash_ctrl
======Full Message======
[util] Temporary fix to auto-generate flash_ctrl

- This script generates the flash_ctrl design from its template
  before registers are generated.  It assumes a certain name for
  the generation script.

- This is a temporary solution that should long term be replaced by
  the ipgen proposal

Signed-off-by: Timothy Chen <timothytim@google.com>



======Commit: e11d6383======
======Short Message======
[dv/rstmgr] Fix smoke test
======Full Message======
[dv/rstmgr] Fix smoke test

Move many actions in the smoke test to the base vseq to share them
with other tests planned.
Set alert dump input and compare its capture on resets (was a TODO).
Disable CSR read check for cpu and alert_info_ctrl since hardware
updates .en field on resets.
Minor fix to enable xcelium.

Signed-off-by: Guillermo Maturana <maturana@google.com>



======Commit: c74ba0a6======
======Short Message======
[otbn] Make the life cycle escalation a fatal alert
======Full Message======
[otbn] Make the life cycle escalation a fatal alert

Before, the incoming life cycle escalation handling was specified as
"like a fatal alert, except for XZY." This commit simplifies the
specification to handle an incoming life cycle escalation in the same
way as a fatal error that was detected within OTBN.

Fixes #7625

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: bcf4ec66======
======Short Message======
[otbn] Add missing asserts for illegal bus access error
======Full Message======
[otbn] Add missing asserts for illegal bus access error

In #7626 we added a new fatal error, but I didn't update the static
asserts in the two software libraries. Rectify that.

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: cea5b53e======
======Short Message======
[csrng/rtl] bug fix for cmds with additional data
======Full Message======
[csrng/rtl] bug fix for cmds with additional data

Changing the main csrng state machine to treat all app interface commands as if they provided additional data.

Signed-off-by: Mark Branstad <mark.branstad@wdc.com>



======Commit: 0be0dbae======
======Short Message======
[otbn] Fix multiple increment signals from decoder
======Full Message======
[otbn] Fix multiple increment signals from decoder

When an instruction attempted to do multiple increments with indirect
register addressing (which produces an illegal instruction error),
multiple increment signals got set violating a unique constrait for the
case statement used to mux the possible increments.

Fixes #7884

Signed-off-by: Greg Chadwick <gac@lowrisc.org>



======Commit: 94b47186======
======Short Message======
[dv, chip] Fix for CSR RW test
======Full Message======
[dv, chip] Fix for CSR RW test

This commit excludes the pinmux register `wkup_cause` from write-checks.
The justfication for this exclusion is as follows:
- In CSR tests, we do not touch the IOs, so they appear as internally
pull-downs (0).
- Random writes to pinmux wakeup detection registers may result in the
detection of a randomly chosen pin with value 0 for a programmed amount
of time.
- This CSR will thus, read back a non-zero value which the CSR tests
cannot predict.
- It is better to exclude this one register from write-checks than
excluding N `wkup_detect_en` registers from writes.

Signed-off-by: Srikrishna Iyer <sriyer@google.com>



======Commit: baf037e5======
======Short Message======
[csrng/hjson] Change hw_exc_sts swaccess to rw0c
======Full Message======
[csrng/hjson] Change hw_exc_sts swaccess to rw0c

To fix CSR test fails, changing swaccess keyword to proper setting.

Signed-off-by: Mark Branstad <mark.branstad@wdc.com>



======Commit: 45eb9e2c======
======Short Message======
[opentitantool] Add support for Ultradebug
======Full Message======
[opentitantool] Add support for Ultradebug

1. Create an interface for the UART (ultradebug ftdi interface C).
2. Create an interface for GPIOs (ultradebug ftdi interface B).
3. Create an interface for SPI (ultradebug ftdi interface B).
4. Create an MPSSE command executor to drive SPI transactions.

Signed-off-by: Chris Frantz <cfrantz@google.com>



======Commit: 4e63091b======
======Short Message======
[otbn,dv] Incr in BN.XID/BN.MOVR Error Changed
======Full Message======
[otbn,dv] Incr in BN.XID/BN.MOVR Error Changed

Previously two incremets in single instruction caused a decoder
error. That makes coverage for that faulty case impossible. In
order to fix it, error check moved to execute stage and generates
an `Illegal Insn` error now.

Signed-off-by: Canberk Topal <ctopal@lowrisc.org>



======Commit: a6aaa2d4======
======Short Message======
[otbn,dv] Fix callstack flags in coverage
======Full Message======
[otbn,dv] Fix callstack flags in coverage

pop_stack_a (resp. pop_stack_b) is signalled if the instruction in
question tries to read from x1 with operand a (resp b). pop_stack is
only true if, furthermore, rd_commit_i holds. This guarantees that the
instruction isn't stalled, but also implies that the instruction
didn't cause a fault.

We don't need to check for stalling instructions when calculating
these flags: they'll only be read in otbn_trace_monitor.sv if the
instruction isn't stalled. But we *do* need to make sure we get the
raw values for a faulting instruction. Without this fix, it would be
impossible to see e.g. how we caused an underflow with an instruction
like "add x0, x1, x1".

Similarly, the push_stack signal requires that the instruction didn't
cause a fault: we actually want the raw signal in push_stack_reqd.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 6e5fc989======
======Short Message======
[dv, xcelium] Properly pass excl files to IMC
======Full Message======
[dv, xcelium] Properly pass excl files to IMC

To the report and analysis stages, the exclusion files were not being
properly passed. This PR fixes that.

Now, the generated report and the IMC GUI (analysis) should show the
exact same coverage numbers.

The following changes are made:
- A standardized variable 'xcelium_cov_excl_script' is added to HJSon to
add exclusions as TCL scripts. I suggest making this the recommended and
the only way of setting exclusions.
- This is passed to IMC invocation during both, report and analysis
stages.
- The AES vRefine file is removed because it is not needed (those
exclusions are already captured in the common TCL file).
- Some minor fixups.

Signed-off-by: Srikrishna Iyer <sriyer@google.com>



======Commit: 00563495======
======Short Message======
[dv/rstmgr] Fix clkmgr_smoke
======Full Message======
[dv/rstmgr] Fix clkmgr_smoke

Add new por_n_i input.
Fix setting of rst_lc_req and rst_sys_req to flip all bits.

Signed-off-by: Guillermo Maturana <maturana@google.com>



======Commit: f0a3019d======
======Short Message======
[otbn] Implement illegal bus access error & alert
======Full Message======
[otbn] Implement illegal bus access error & alert

Any time the bus tries to access the OTBN memories whilst OTBN is active
a fatal alert is triggered and OTBN halts immediately indicating an
error.

Fixes #7470
Fixes #2696

Signed-off-by: Greg Chadwick <gac@lowrisc.org>



======Commit: 1e502c50======
======Short Message======
[otbn,dv] Allow weighting register operand values in RIG
======Full Message======
[otbn,dv] Allow weighting register operand values in RIG

This patch shouldn't alter behaviour at all, but makes it possible for
e.g. giving a higher weight to x1 for certain instructions.

Also, tidy up the pick_operand_value() code a bit: splitting out the
different operand types explicitly should make things a bit easier to understand.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 1ea50f11======
======Short Message======
[otbn] Specify reaction to memory accesses while OTBN is busy
======Full Message======
[otbn] Specify reaction to memory accesses while OTBN is busy

OTBN has a data and an instruction memory, both of which are meant to be
"inaccessible" as long as OTBN is executing a command. The question is:
what happens if host software still tries to access the memory?

Currently, we vaguely specify that we'll "block" the access, i.e. hang
the bus.

In further discussions we agreed to instead issue a fatal error, which
follows the normal fatal error machinery: terminate the current
operation (if any), indicate the problem in the FATAL_ALERT_CAUSE
register, and sometimes in the ERR_BITS register.

Fixes #2696

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: 5f158274======
======Short Message======
[mask_rom] Use pre-CRT safe exception handler after reset
======Full Message======
[mask_rom] Use pre-CRT safe exception handler after reset

Switch to the C interrupt/exception handlers only once the C runtime
has been initialized.

The test is based on the watchdog driver test which performs a
similar operation.

Fixes #7189.

Signed-off-by: Michael Munday <mike.munday@lowrisc.org>



======Commit: abcabb0f======
======Short Message======
[reg] Fix shadow reg update during storage error
======Full Message======
[reg] Fix shadow reg update during storage error

- Fixes #7764
- Do not allow register upates once storage errors occur.
  This effectively makes the storage error persistent.

Signed-off-by: Timothy Chen <timothytim@google.com>



======Commit: 7137b47f======
======Short Message======
[doc] Hotfix for broken link
======Full Message======
[doc] Hotfix for broken link

Signed-off-by: Timothy Chen <timothytim@google.com>



======Commit: a919f550======
======Short Message======
[fpv/batch] add more IPs to FPV regression
======Full Message======
[fpv/batch] add more IPs to FPV regression

This PR adds more IPs to the FPV regression.
This PR also fixes a small alphabetical order issue.

Signed-off-by: Cindy Chen <chencindy@opentitan.org>



======Commit: 200181f6======
======Short Message======
[doc] Add detailed contribution guide
======Full Message======
[doc] Add detailed contribution guide

This document gives detailed guidance on contributing to the OpenTitan
project. It has gone through many rounds of review in GDoc form (and
this PR simply converts that to Markdown, with the odd grammatical fix
along the way).

The contribution guide effort was kicked off by Pirmin and has since
seen suggestions, edits, and commits from a wide number of people across
the project. Thank you to everyone for your input.

Signed-off-by: Alex Bradbury <asb@lowrisc.org>



======Commit: 4fb25fc2======
======Short Message======
[keymgr] Correct error classication
======Full Message======
[keymgr] Correct error classication

Fix #7852

Correctly classify invalid kmac output error.
Previously it was somehow both a fatal error and an operational error.

Signed-off-by: Timothy Chen <timothytim@google.com>



======Commit: a0387908======
======Short Message======
regtool: add support to generate reg const as Rust (.rs)
======Full Message======
regtool: add support to generate reg const as Rust (.rs)

Add -R and --rust option in regtool.py to generate Rust file.

Add regs-rust target in hw/Makefile to generate reg constant Rust
file for ALL ips. If a TOCK_ROOT variable is specified, e.g.
"TOCK_ROOT=~/ti50/third_party/tock/tock make -C hw regs-rust",
the Rust files will also be copied to
$(TOCK_ROOT)/chips/lowrisc/src/reg_constants folder.

BUG=none
TEST=regtool.py -R -o uart_regs.rs uart.hjson
     make -C hw regs-rust
     TOCK_ROOT=~/ti50/third_party/tock/tock make -C hw regs-rust

Signed-off-by: Chia-Chi Teng <ccteng@google.com>

Change-Id: I5f668d51e1f42e6541a41f3e565848230d6c07b6



======Commit: dadeddaf======
======Short Message======
[otbn,dv] Add a generator for badly nested loops
======Full Message======
[otbn,dv] Add a generator for badly nested loops

This generates two loops that share an end address, like the
following:

    loop   x2, 2
     loop  x2, 1
      nop

We'll execute the nop x2 times and then execution will continue, but
we won't pop the other loop off the stack.

This is an explicit functional coverage point (duplicate_loop_end_cp
in the insn_loop_cg and insn_loopi_cg coverage groups).

Getting this right in the generator was a little tricky because a
surrounding "Loop" generator no longer knows exactly what the state of
the loop stack is when its body finishes. I'm reasonably confident
that we track loop depths here properly because if it goes wrong, the
combination of the BadDeepLoop generator and end address tracking
soon flag up an error.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: d3a1d26f======
======Short Message======
[dif/lc_ctrl] add support for new test states
======Full Message======
[dif/lc_ctrl] add support for new test states

This fixes #7488.

Signed-off-by: Timothy Trippel <ttrippel@google.com>



======Commit: bd714c6e======
======Short Message======
[rstmgr/sysrst_ctrl] This fixes an autogenerated constant name
======Full Message======
[rstmgr/sysrst_ctrl] This fixes an autogenerated constant name

Signed-off-by: Michael Schaffner <msf@opentitan.org>



======Commit: f7532986======
======Short Message======
[dv/clkmgr] Add jitter and clk_status tests
======Full Message======
[dv/clkmgr] Add jitter and clk_status tests

Check that jitter CSR triggers an update of the jitter output port.
Add a test for the clk_status output to the pwrmgr: special attention
to what happens when the usb clock is off when the fast fsm is active.
Alsp fixes a verible formatting issue.

Signed-off-by: Guillermo Maturana <maturana@google.com>



======Commit: 695b0289======
======Short Message======
[usb/top] Remove AND gates on non-AON domain and rename 3.3V signal
======Full Message======
[usb/top] Remove AND gates on non-AON domain and rename 3.3V signal

Fix #7802

Signed-off-by: Michael Schaffner <msf@opentitan.org>



======Commit: cd90fe8a======
======Short Message======
[dif/rv_plic] fix incorrect DIF naming convention
======Full Message======
[dif/rv_plic] fix incorrect DIF naming convention

This fixes #7824 by renaming all rv_plic DIFs with the correct
prefix of "dif_rv_plic_" instead of "dif_plic_", to match the IP
block's name of "rv_plic".

Signed-off-by: Timothy Trippel <ttrippel@google.com>



======Commit: e9c06245======
======Short Message======
[dif/entropy_src] fix incorrect DIF naming convention
======Full Message======
[dif/entropy_src] fix incorrect DIF naming convention

This fixes #7823 by renaming all entropy_src DIFs with the correct
prefix of "dif_entropy_src_" instead of "dif_entropy_", to match the IP
block's name of "entropy_src".

Signed-off-by: Timothy Trippel <ttrippel@google.com>



======Commit: 5f0e1647======
======Short Message======
[otbn,dv] Double the number of otbn_single runs
======Full Message======
[otbn,dv] Double the number of otbn_single runs

Since lots of the interesting corner cases cause (architecturally
defined) errors, we have to do lots of OTBN runs to see them all. It
turns out that the setup/teardown costs of a simulation aren't too
significant compared to the time spent running instructions, so
there's no real benefit to packing multiple runs into a single
simulation. And, obviously, debugging is easier with just a single
binary.

So bump up the number of otbn_single runs, to see more of the weird
error cases :-)

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: fcbdd827======
======Short Message======
[sw, rstmgr] Fix broken reference
======Full Message======
[sw, rstmgr] Fix broken reference

This reference got missed in 80b2ce5f6e3d1e39540f3b46b885991d7382c47b.

Signed-off-by: Pirmin Vogel <vogelpi@lowrisc.org>



======Commit: 7cf50b4a======
======Short Message======
[sw/silicon_creator] Fix constants in sigverify_keys_unittest.cc
======Full Message======
[sw/silicon_creator] Fix constants in sigverify_keys_unittest.cc

Signed-off-by: Alphan Ulusoy <alphan@google.com>



======Commit: 6333c28d======
======Short Message======
[xbar/dv] Fix exclusion
======Full Message======
[xbar/dv] Fix exclusion

Fixed excluding one more bit.

Signed-off-by: Weicai Yang <weicai@google.com>



======Commit: 3f721f2a======
======Short Message======
[dv] Add checking status CSRs after intg error is triggered
======Full Message======
[dv] Add checking status CSRs after intg error is triggered

Signed-off-by: Weicai Yang <weicai@google.com>



======Commit: e2f26cfe======
======Short Message======
[prim] FIFO SRAM Adapter fix
======Full Message======
[prim] FIFO SRAM Adapter fix

This commit fixes unknown output when the FIFO is empty. Now it sends
all 0 if the FIFO is empty.

Signed-off-by: Eunchan Kim <eunchan@opentitan.org>



======Commit: 7b34808f======
======Short Message======
[dv] Fix timescale issue with Xcelium
======Full Message======
[dv] Fix timescale issue with Xcelium

relate to #7178

Signed-off-by: Weicai Yang <weicai@google.com>



======Commit: 6e287c33======
======Short Message======
[otbn] Make stalling more explicit in instruction definitions
======Full Message======
[otbn] Make stalling more explicit in instruction definitions

This is prompted by the fact that we couldn't properly model things
like faulting calls to BN.LID. We need to do some of the instruction
body on the first cycle (to spot that an address is bogus). However,
we can't run everything on the first cycle. For example accesses of
the RND WSR/CSR can't do their work until the data is available, and
this data isn't supplied by the Python simulator.

Solve the problem by splitting the execution over multiple calls to
the execute() method, using Python's "yield" statement to cause the
stall.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: fdeb0d50======
======Short Message======
[otbn,dv] Make load/store error handling explicit in ISS
======Full Message======
[otbn,dv] Make load/store error handling explicit in ISS

This should be nicer in the generated documentation (and also make
multiple-error behaviour clearer). Also, it's a required staging
commit for sorting out our stalling behaviour on errors.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 99889dfb======
======Short Message======
[otbn,dv] Fix BadAtEnd generator when generating jumps
======Full Message======
[otbn,dv] Fix BadAtEnd generator when generating jumps

This crashed into several assertions (running out of fuel, generating
things with the wrong PC, and then leaving the model at the wrong PC).
Most of the confusion is because Jump.gen_tgt() behaves differently
from Loop._pick_head and Branch.gen_head.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 726718a6======
======Short Message======
[dv/pwrmgr] Fix assertion for usb_clk_en_active
======Full Message======
[dv/pwrmgr] Fix assertion for usb_clk_en_active

Compare usb_clk_en against the captured value of usb_clk_en_active_i
since the latter value can change anytime.

Signed-off-by: Guillermo Maturana <maturana@google.com>



======Commit: 93f74d66======
======Short Message======
[otbn,dv] Model Bug Fix for Insns with Increment
======Full Message======
[otbn,dv] Model Bug Fix for Insns with Increment

This commit includes a bug fix for implementing increments in the
model. The mask argument is removed and now is hard-coded in the
function body for 32 bits.

Fixes: #7805

Signed-off-by: Canberk Topal <ctopal@lowrisc.org>



======Commit: 8b1fbfeb======
======Short Message======
[otbn,dv] Fix logic in "deep loop" generator
======Full Message======
[otbn,dv] Fix logic in "deep loop" generator

This generator tries to generate a deep stack of nested loops, until
it blows the HW stack. Since we don't actually want to complete any of
these loops, it's supposed to pick bodysizes so that the loops end on
addresses that are out of range or have already got instructions. The
trick is that, because we never go back to code that we've visited
before, this ensures the loops will never complete.

Unfortunately, I got the check backwards! Interestingly, it doesn't
matter most of the time, but it *does* cause explosions if guess == 1.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: d7149064======
======Short Message======
[otbn,dv] Make loop trace slightly more helpful
======Full Message======
[otbn,dv] Make loop trace slightly more helpful

This makes debugging nested loops a bit easier because you can
eyeball *which* loop is being started / stopped.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 17d2866a======
======Short Message======
[csrng/dv] Fix for multiple commands in parallel
======Full Message======
[csrng/dv] Fix for multiple commands in parallel

Signed-off-by: Steve Nelson <steve.nelson@wdc.com>



======Commit: 417e264c======
======Short Message======
[dv/prim_esc] Fix prim_esc regression error
======Full Message======
[dv/prim_esc] Fix prim_esc regression error

Due to testbench clock and dricing issue, waiting one clock cycle is not
enough to finish the escalation request and start ping request. So we
wait at least two clock cycles.

Signed-off-by: Cindy Chen <chencindy@opentitan.org>



======Commit: ec32b0bd======
======Short Message======
[dv/alert_handler] Fix sig_int_err regression err
======Full Message======
[dv/alert_handler] Fix sig_int_err regression err

This PR fixes regression error about sig_int_error. The issue is we
indexed twice in scb when trying to locate the correct local alert.

Signed-off-by: Cindy Chen <chencindy@opentitan.org>



======Commit: 633cd337======
======Short Message======
[spi_host,design] Properly handle TX "stall" and "flush" conditions
======Full Message======
[spi_host,design] Properly handle TX "stall" and "flush" conditions

This commit handles three bugs in the SPI_HOST FSM.

1. This commit adds a separate "prestall" copy of the FSM state to
prevent commands being dropped when no data is avaiable in the TX queue.
Since a stall prevents the FSM from updating command_valid signals were
previously being ignored during stall conditions, as the state machine
would not transition at this time.   This is solved by queuing an update
of the FSM in the "prestall" state variable, and performing the state
transition once the stall has been resolved.
NOTE: the simpler solution of deasserting command_ready during stalls does
not work, because the stall condition depends on the state, which in turn
depends on command_ready.  Making the FSM state directly dependent on
stall creates an unresolvable logical cycle.

2. Previous to this commit, the FSM cmd_end signal was being sent at the very
beginning of each segment (when byte_cntr_q was zero).  This was causing
the byte select to imcorrectly flush any additional words from the first
data word. This is fixed here by triggering cmd_end_o when byte_cntr_q == 1,
just as we are loading the segment's last byte into the shift register.

3. Other FSM Bugfixes: The polarity of the CSAAT (chip select active after
transaction) bit was previously misinterpreted. This is  now corrected with
this commit

Signed-off-by: Martin Lueker-Boden <martin.lueker-boden@wdc.com>



======Commit: 12a27bc5======
======Short Message======
[csrng/rtl] bug fix for uninstantiate cmd with adata
======Full Message======
[csrng/rtl] bug fix for uninstantiate cmd with adata

When an uninstantiate command is issued that has additional data, the internal adata packer needs to be reset or residual data will cause a failure.
Normally the uninstantiate command will not have adata, but per spec it is currently not restricted as such.

Signed-off-by: Mark Branstad <mark.branstad@wdc.com>



======Commit: 7adff31d======
======Short Message======
[otp_ctrl] Fix partition default value vector size in template
======Full Message======
[otp_ctrl] Fix partition default value vector size in template

The OTP memory map can now have a total size that is smaller than what
is physically available. Some of the templating logic hence needs to be
updated to work correctly.

Signed-off-by: Michael Schaffner <msf@google.com>



======Commit: 49965bf6======
======Short Message======
[otbn,dv] BXX Misaligned Offset Coverage Fix
======Full Message======
[otbn,dv] BXX Misaligned Offset Coverage Fix

This commit includes changes to the coverage script to include the
1-bit shift that comes from the specification and a fix to the
misalignment cover point to just check for the possible
misalignment case.

Signed-off-by: Canberk Topal <ctopal@lowrisc.org>



======Commit: a5cc03be======
======Short Message======
[otbn,dv] Fix Non-Spec Coverage Point in BN.XID
======Full Message======
[otbn,dv] Fix Non-Spec Coverage Point in BN.XID

This commit removes coverage points for misaligned offsets since
it is specified in the ISA that the first 5-bits of the offset
operand would always be 0 for BN.LID and BN.SID instructions.

Signed-off-by: Canberk Topal <ctopal@lowrisc.org>



======Commit: c473f70f======
======Short Message======
[aes] Use separate subreg prims for fields of shadowed control reg
======Full Message======
[aes] Use separate subreg prims for fields of shadowed control reg

An update error in a particular field should only prevent the update
of that field. Updates to other fields should still be applied.

This fixes lowRISC/OpenTitan#7417.

Signed-off-by: Pirmin Vogel <vogelpi@lowrisc.org>

[dv/shadow_reg] support shadow reg by field

This PR updates the script to support adding shadow reg external path by
field.
Previously there is only one hdl path per register, but as discussion
 #7417, each shadow reg field will have its own hdl path.

Signed-off-by: Cindy Chen <chencindy@opentitan.org>



======Commit: cc52bc2e======
======Short Message======
[dv/cip_base_scb] fix mem tl access prediction
======Full Message======
[dv/cip_base_scb] fix mem tl access prediction

Currently in `cip_base_scoreboard::is_tl_mem_access_allowed()`, we
incorrectly detect read-only and write-only errors, as we set the
corresponding bits to 0 upon error case detection.

This PR fixes this by setting the error detection bits to 1 if error
cases are detected, this should fix `tl_error` tests for several IPs in
the nightly regression.

Signed-off-by: Udi Jonnalagadda <udij@google.com>



======Commit: 62681b47======
======Short Message======
[spi_device] Fix Datapath Mux
======Full Message======
[spi_device] Fix Datapath Mux

This commit fix the typo for JEDEC and Read Command submodule.

Signed-off-by: Eunchan Kim <eunchan@opentitan.org>



======Commit: 05298bd2======
======Short Message======
[tools/uvmdvgen] Fix path in testplan inclusion
======Full Message======
[tools/uvmdvgen] Fix path in testplan inclusion

Avoid parent paths "..".

Signed-off-by: Guillermo Maturana <maturana@google.com>



======Commit: 38955fc3======
======Short Message======
[csrng/doc] usage note update for internal state access
======Full Message======
[csrng/doc] usage note update for internal state access

Due to worst case tile link timings, a timing window exists that will return the wrong internal state data.
The best resolution is to read the INT_STATE_NUM back after writing it.
A note has been added to the hjson register description.
Fixes #7703.

Signed-off-by: Mark Branstad <mark.branstad@wdc.com>



======Commit: 6d04e0a8======
======Short Message======
[keymgr] Fix sideload key clear
======Full Message======
[keymgr] Fix sideload key clear

- Fixes #7745
- Make sure clearing of one key does not block another key from being used

Signed-off-by: Timothy Chen <timothytim@google.com>



======Commit: 67143227======
======Short Message======
[dv/kmac] assorted regression fixes
======Full Message======
[dv/kmac] assorted regression fixes

this PR contains 2 fixes for nightlies:

- first patch is to fix a small bug in `kmac_smoke_vseq` that would
  cause App operations with errors disabled to sometimes behave like
  errors were enabled

- second patch is to fix a small bug in the scb that would cause us to
  inadvertently miss an update to `fifo_rd_ptr` if the `fifo_wr_ptr` got
  updated on the same timestep that the scb started to wait for the
  msgfifo to flush

Signed-off-by: Udi Jonnalagadda <udij@google.com>



======Commit: cec26d4a======
======Short Message======
[csrng/dv] Fix for issue #7703
======Full Message======
[csrng/dv] Fix for issue #7703

Signed-off-by: Steve Nelson <steve.nelson@wdc.com>



======Commit: 8cf799ba======
======Short Message======
[fpv/rv_plic] Fix assertion irq_id_o width
======Full Message======
[fpv/rv_plic] Fix assertion irq_id_o width

This PR fixes the irq_id_o width within FPV testbench.
And fix an unclear parantheses.

Signed-off-by: Cindy Chen <chencindy@opentitan.org>



======Commit: 69430d4e======
======Short Message======
[dv] Add checks for Aes, Otbn sideload
======Full Message======
[dv] Add checks for Aes, Otbn sideload

Also add shadow error test in hjson

Signed-off-by: Weicai Yang <weicai@google.com>



======Commit: 45373b7a======
======Short Message======
[dv] fix tl error coverage
======Full Message======
[dv] fix tl error coverage

1. use `get_normalized_addr` function for the address, to fix most of
error cases flagged as unmapped, as it's not normalized address
2. remove CSR unaligned error, which is defined in spec, but CSR size
error already include that
3. add more iteration for tl_intg_err since we only send 1 integrity
error per interation. Will test 200 integrity errors in nightly
regression, instead of just 20-40 of these transactions.

Signed-off-by: Weicai Yang <weicai@google.com>



======Commit: 84b7d1be======
======Short Message======
[keymgr] Handle keymgr disable during reset -> init transition
======Full Message======
[keymgr] Handle keymgr disable during reset -> init transition

Also handle keymgr disable during the initial arc.
Note however, it is possible for the operation to complete at the
same time keymgr_en dropping low.  To the keymgr, this does not seem
like an error because the operation is "done".

Fixes #5922

Signed-off-by: Timothy Chen <timothytim@google.com>



======Commit: 81a08830======
======Short Message======
[dv/kmac] Fix constraints on invalid mode/strength
======Full Message======
[dv/kmac] Fix constraints on invalid mode/strength

This PR fixes how the TB constrains invalid mode/strength combinations
for error cases, currently if such an error case is selected, the TB can
  still generate a valid combination - this is now changed such that the
  TB can only generate invalid combinations.

Signed-off-by: Udi Jonnalagadda <udij@google.com>



======Commit: 5d06aaca======
======Short Message======
[top, keymgr, kmac] Ensure masking consistency between keymgr/kmac
======Full Message======
[top, keymgr, kmac] Ensure masking consistency between keymgr/kmac

- Fixes #7149
- Previously, if kmac disabled masking, keymgr would error out during
  operation because one of the return slots from kmac is always '0'.
- This PR teaches keymgr that kmac may not be masked and to behave
  accordingly.
- In order to ensure the two sides do not get out of sync, the kmac
  mask parameter is sent over via regular IOs to keymgr for a consistency
  check.  However this IO is not used directly by the logic anywhere.
  This is because if boundary optimization or constant propagation were
  ever disabled, the IO port would effectively become the single point
  where keymgr masking could also be disabled.  This would not be a good
  thing and the IO is used for consistency checking only.

Signed-off-by: Timothy Chen <timothytim@google.com>



======Commit: b3d08450======
======Short Message======
[wkup] Add assertion to ensure latching of wakeup signals
======Full Message======
[wkup] Add assertion to ensure latching of wakeup signals

Fix #7613

Signed-off-by: Michael Schaffner <msf@google.com>



======Commit: 79385d1a======
======Short Message======
[dif/alert_handler] fixed CauseTest.Ack and corresponding DIF match RTL
======Full Message======
[dif/alert_handler] fixed CauseTest.Ack and corresponding DIF match RTL

RTL now uses a multireg for all alert cause bits.

Signed-off-by: Timothy Trippel <ttrippel@google.com>



======Commit: 3d578e5a======
======Short Message======
[dif/alert_handler] restored several error generating unit tests
======Full Message======
[dif/alert_handler] restored several error generating unit tests

Unit tests restored include:
-ConfigTest.BadAlert
-ConfigTest.BadSignalPhase
-ConfigTest.BadDurationPhase
-ConfigTest.BadPointers
-ConfigTest.BadClass

Signed-off-by: Timothy Trippel <ttrippel@google.com>



======Commit: 9a6fc468======
======Short Message======
[otbn] Fix bug with indirect register read timing
======Full Message======
[otbn] Fix bug with indirect register read timing

For a load read the indirect register index for the destination the
first cycle of the instruction. Otherwise if it is incremented in the
first cycle the wrong register index is used.

Fixes #7639

Signed-off-by: Greg Chadwick <gac@lowrisc.org>



======Commit: 21721e32======
======Short Message======
[dv, xcelium] Fix statement coverage extraction
======Full Message======
[dv, xcelium] Fix statement coverage extraction

This PR fixes the statement coverage extraction by enabling it in the
coverage config file.

In addition, assignment and branch coverage collection is enabled.

Two minor fixes are made:
- In cov_report.tcl, the -kind switch is incompatible with -summary and
is hence, removed
- In sim_utils.py, the uniquified list of coverage metrics is returned,
as opposed to `metrics`, which can have duplicate entries.

Signed-off-by: Srikrishna Iyer <sriyer@google.com>



======Commit: 36a5e1e9======
======Short Message======
[keymgr] Fix redeclaration of constant
======Full Message======
[keymgr] Fix redeclaration of constant

Signed-off-by: Michael Schaffner <msf@google.com>



======Commit: b636f2de======
======Short Message======
[dv] Change tl_intg_alert_field to associative array
======Full Message======
[dv] Change tl_intg_alert_field to associative array

Format is tl_intg_alert_fields[reg_name] = field_name;

TL intg error may trigger more than CSR changes. For example,
It triggers Keymgr to update these 2 fields
    tl_intg_alert_fields["err_code"] = "invalid_states";
    tl_intg_alert_fields["fault_status"] = "regfile_intg";

Signed-off-by: Weicai Yang <weicai@google.com>



======Commit: 9b42d43f======
======Short Message======
[flash_ctrl/dv] Warnings fix in flash_ctrl_rand_ops_base_vseq.
======Full Message======
[flash_ctrl/dv] Warnings fix in flash_ctrl_rand_ops_base_vseq.

Signed-off-by: Eitan Shapira <eitanshapira89@gmail.com>



======Commit: bcca3300======
======Short Message======
[dif/alert_handler] DIFs updated to work with local alert RTL changes
======Full Message======
[dif/alert_handler] DIFs updated to work with local alert RTL changes

This commit fixes #7596 by changing the DIF in the following ways:

-"bus integrity failure" local alert type is added across DIFs
-config of local alert enable/class regs has changed (now shadowed multiregs)
-reading/acking local alert cause regs has changed (now multiregs)
-CauseTest.AckLocal has changed to align with above

Signed-off-by: Timothy Trippel <ttrippel@google.com>



======Commit: c79bef3f======
======Short Message======
[dv/otp] Fix lc max count
======Full Message======
[dv/otp] Fix lc max count

This PR fixes the max count for lc transition. It used to be 16 now
design updated to 24.
Thanks Dror for catching this.

Signed-off-by: Cindy Chen <chencindy@opentitan.org>



======Commit: 9b381418======
======Short Message======
[dvsim] Minor fixes to coverage extraction
======Full Message======
[dvsim] Minor fixes to coverage extraction

The issue was reported by @rasmus-madsen - if the cleanup tasks in
Deploy::post_finish() fails, it attempts append the error message to a
Launcher class member called `fail_msg` which has not been created,
causing the dvsim invocation to bomb improperly.

The primary goal of this change is to allow the failure of the cleanup
tasks to also be factored into whether the job failed or not. This is
achieved by making the job `status` a member of the `Launcher` class
which is finally returned to the Scheduler. Cleanup tasks are run
regardless of the job's outcome, but now that invocation is updated to
catch any exceptions thrown, so that the `status` can be updated if the
cleanup tasks fail for whatever reason, within the
`Launcher::_post_finish()` invocation.

In addition, a minor change in the Xcelium coverage extraction code
fixes the issue of some coverage metrics not showing up correctly.

Signed-off-by: Srikrishna Iyer <sriyer@google.com>



======Commit: 92ec83e9======
======Short Message======
[dv/kmac] update scb to match key sideload changes
======Full Message======
[dv/kmac] update scb to match key sideload changes

This PR updates KMAC scb to not XOR sideloaded keys by default,
they are now treated the same as SW-provided keys and XORed only when
masking is enabled.

Signed-off-by: Udi Jonnalagadda <udij@google.com>



======Commit: b65d5f94======
======Short Message======
[dv] Constrain TLUL to 24Mhz or higher
======Full Message======
[dv] Constrain TLUL to 24Mhz or higher

relate to #7647
Temporarily fix many regression failures due to using 6Mhz

Signed-off-by: Weicai Yang <weicai@google.com>



======Commit: 37649554======
======Short Message======
[entropy_src/dv] Fix #2 for issue #7660
======Full Message======
[entropy_src/dv] Fix #2 for issue #7660

Signed-off-by: Steve Nelson <steve.nelson@wdc.com>



======Commit: a40545fe======
======Short Message======
[primgen] Actually find the Verible Python wrapper
======Full Message======
[primgen] Actually find the Verible Python wrapper

The include path to a Python module we depend on was dependent on the
working directory, leading to errors like

No module named 'google_verible_verilog_syntax_py'

when running primgen, and prevented the Verible parser from actually
being used.

Fixes #7440

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: 813df399======
======Short Message======
[sram_ctrl_ret_aon] Remove en_ifetch chicken bit from retention RAM
======Full Message======
[sram_ctrl_ret_aon] Remove en_ifetch chicken bit from retention RAM

The retention RAM ifetch feature had already been disabled via the
parameter. This commit removes the physical connection of the OTP
chicken bits as well.

Fix #7107

Signed-off-by: Michael Schaffner <msf@google.com>



======Commit: 0a0de1ff======
======Short Message======
[dv/prim_esc] fix regression error
======Full Message======
[dv/prim_esc] fix regression error

This PR fxe a corner case where ping_req is issued at the same cycle as
esc_req goes low with signal integrity error.
The prim_esc_receiver ignored the ping request because the esc_req was
set low at the same cycle.

Also add a few more iterations to reach higher coverage.

Signed-off-by: Cindy Chen <chencindy@opentitan.org>



======Commit: 5757ffcb======
======Short Message======
[dv/gpio] fix intr_test regression failure
======Full Message======
[dv/gpio] fix intr_test regression failure

This PR fixes intr_test failure in gpio.
The root cause is the recent change in intr_test procedure.
We used to:
1). write all interrupt related registers.
2). read all interrupt related registers, and compare the value with
mirrored vale from scb prediction.

The recent changes step 2).
Now 2). Get mirrored value from RAL, then read all interrupt registers
and compare the read value with stored mirrored value.

This change makes sense but does not work for GPIO, because GPIO
scoreboard has a cycle accurate model and it won't update intr_state
values until next TL read's address phase.

To solve this issue, we ignore the cycle accurate model and just call
csr predict right after csr write operation.

Thanks Weicai for helping out with this issue.

Signed-off-by: Cindy Chen <chencindy@opentitan.org>



======Commit: 90226aa8======
======Short Message======
[dv] Fix shadow reg predict
======Full Message======
[dv] Fix shadow reg predict

1. we need to update some internal variable after each write for shadow
reg or regwen, which was done at post_write. In the scb, predict may be
invoked before this post_write, which causes the issue.
Change post_write to pre_do_predict and call it at the begining of do_predict
2. move the 2nd shadow write to csr_utils_pkg and call predict after
each write
3. remove one semaphore for shadow reg and couple other variables as not needed now
4. use csr_wr in csr_update to avoid many replicated codes

Signed-off-by: Weicai Yang <weicai@google.com>



======Commit: 57dc8dcc======
======Short Message======
[dv] enhance multi-field in RAL model
======Full Message======
[dv] enhance multi-field in RAL model

related to #5852
Use an array for multi-field in RAL model
refer to this slide

also fix compile errors due to multifield update

Signed-off-by: Weicai Yang <weicai@google.com>



======Commit: 491929b7======
======Short Message======
[dv/pwrmgr] Add feedback from testplan review
======Full Message======
[dv/pwrmgr] Add feedback from testplan review

Also fix minor glitches in the documentation.

Signed-off-by: Guillermo Maturana <maturana@google.com>



======Commit: bb7ceec2======
======Short Message======
[keymgr/dv] Truncate kmac digest for key/SW output
======Full Message======
[keymgr/dv] Truncate kmac digest for key/SW output

Digest is 384 bits wide while SW output is only 256.

This will fix CI falures in #7646

Signed-off-by: Weicai Yang <weicai@google.com>



======Commit: 2c338947======
======Short Message======
[entropy_src/dv] Fix for issue #7660
======Full Message======
[entropy_src/dv] Fix for issue #7660

Signed-off-by: Steve Nelson <steve.nelson@wdc.com>



======Commit: 8d1feca5======
======Short Message======
[topgen] Improve matching of prefix when renaming parameters
======Full Message======
[topgen] Improve matching of prefix when renaming parameters

Topgen moves parameter prefixes like `Sec`, `RndCnst` and `MemSize` to
the beginning when generating the top-level parameter names. This messed
up the parameter `SecureIbex` which became `SecRvCoreIbexureIbex` in the
top level. With this commit, prefixes are only moved if they are
followed by an upper case letter. The parameter in the top level thus
becomes `RvCoreIbexSecureIbex`.

Signed-off-by: Pirmin Vogel <vogelpi@lowrisc.org>



======Commit: 2a180ac1======
======Short Message======
[alert_handler] Define default for dangling alert_dump connections
======Full Message======
[alert_handler] Define default for dangling alert_dump connections

Signed-off-by: Pirmin Vogel <vogelpi@lowrisc.org>



======Commit: 016a9385======
======Short Message======
[otp, sram] Define default for dangling sram_otp_key_rsp connections
======Full Message======
[otp, sram] Define default for dangling sram_otp_key_rsp connections

Signed-off-by: Pirmin Vogel <vogelpi@lowrisc.org>



======Commit: ef5bc5e2======
======Short Message======
[dif/pwrmgr] add alert test functionality
======Full Message======
[dif/pwrmgr] add alert test functionality

This fixes #7641.

Signed-off-by: Timothy Trippel <ttrippel@google.com>



======Commit: eb7bf611======
======Short Message======
[keymgr] Continued security hardening
======Full Message======
[keymgr] Continued security hardening

- Add redundancy to kmac interface counter
- Add sparse encoding to kmac transfer fsm
- Make the fault / error behavior more consistent. Faults will always cause keymgr to transition into "Disabled" state if an operation is ongoing. When transitioning because of a fault, the key state is always "wiped" with entropy. Once transitioned into disable state, the behavior will always be consistent, ie, random data will be used for operations, and the resulting garbage data is also used to update the state.

Signed-off-by: Timothy Chen <timothytim@google.com>



======Commit: 3cda18c4======
======Short Message======
[otbn] Use integrity error in spec
======Full Message======
[otbn] Use integrity error in spec

We used "ECC error" in the past, but switched to "integrity error".
Consistently use this terminology in register description.

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: 641d3465======
======Short Message======
[otbn,dv] Fix calculation of loop end address in coverage
======Full Message======
[otbn,dv] Fix calculation of loop end address in coverage

There was an off-by-one error because of the "+1" in the encoding of
bodysize. And also a factor of 4 because I'd forgotten to convert from
"number of instructions" to "bytes". Oops...

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 5c8579cd======
======Short Message======
[otbn] Fix timing of base RF writes for BN.LID
======Full Message======
[otbn] Fix timing of base RF writes for BN.LID

When using an increment along with the call stack (x1) reads and writes
need to to occur at the appropriate point so the call stack push and pop
occur together.

Fixes #7579

Signed-off-by: Greg Chadwick <gac@lowrisc.org>



======Commit: 4e7114e8======
======Short Message======
[sram_ctrl] Absorb prim_ram_1p_scr
======Full Message======
[sram_ctrl] Absorb prim_ram_1p_scr

This commit contains a couple of changes that were squashed together to
make them atomic.

1) This moves the prim_ram_1p_scr and tlul_adapter_sram
   primitives into the sram_ctrl, and updates the interface signals and
   hjson description accordingly.

2) Since the sram_ctrl does not make use of byte parity anymore (thanks to
   the bus integrity scheme), the associated error bits and logic can be
   removed.

  This also replaces the parity error indication CSR with a bus integrity
  error indication CSR.

3) This removes the initialization LFSR from the scrambling primitive and
   moves it into the sram_ctrl IP such that we can generate the proper
  integrity meta data before writing to the scrambled memory. Fixes #7225.

4) This removes the error latching mechanism from the prim_ram_1p_scr such
   that the instantiating module can decide whether this should be latched
   or not.

   For sram_ctrl, the integrity error latching is implemented at the
   sram_ctrl level.

5) This removes the testbench wrapper since the sram_ctrl block is now
   monolitic and includes the TL and scrambling primitives.

  In addition to that, it also extends the DV environment to be able
  to handle 39bit wide, scrambled memory words with bus integrity.

  As a result of a recent ralgen change, some names of TL interfaces going
  to memories within comportable IPs can get very long now.

6) This patch breaks the affected lines in the template such that they
   stay below 100 chars.

Signed-off-by: Michael Schaffner <msf@google.com>
Signed-off-by: Michael Schaffner <msf@opentitan.org>



======Commit: 8551f3fd======
======Short Message======
[otbn,lint] Waive unused sec_wipe signals
======Full Message======
[otbn,lint] Waive unused sec_wipe signals

These cause lint errors. Since it's going to be a bit of time until we
connect them up properly, waive them for now.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: b48b6c6a======
======Short Message======
[dv/gpio] Fix filter_stress test timeout
======Full Message======
[dv/gpio] Fix filter_stress test timeout

This PR fixes gpio_filter_stress test timeout issue.
The reason is due to a `wait_fork` did not have an isolation fork to
wrap around it.

Signed-off-by: Cindy Chen <chencindy@opentitan.org>



======Commit: ab829414======
======Short Message======
[dv/prim_esc] Direct test for prim_rx/tx
======Full Message======
[dv/prim_esc] Direct test for prim_rx/tx

This PR writes a direct test for prim_rx/tx pairs to cover the following
checkpoints:
1). Escalation request hanshake.
2). Escalation esc_tx integrity error.
3). Escalation reverse ping timeout.
4). Escalation counter fail.

Signed-off-by: Cindy Chen <chencindy@opentitan.org>



======Commit: 80fb8f4f======
======Short Message======
[keymgr] keymgr hardening part 1
======Full Message======
[keymgr] keymgr hardening part 1

- Add individual sideload key clear.
- Route regfile faults into key manager operation handling.
- Add sparse fsm encoding.
- Clarify some language regarding errors. Also add a `FAULT_STATUS` register
  to capture which fault reasons fired exactly.

Signed-off-by: Timothy Chen <timothytim@google.com>



======Commit: 4d87074e======
======Short Message======
[dv/ips] Fix a few small items in gpio and hmac
======Full Message======
[dv/ips] Fix a few small items in gpio and hmac

1. Hmac remove a comment as it is implemented already.
2. GPIO fix two small typos

Signed-off-by: Cindy Chen <chencindy@opentitan.org>



======Commit: 273c484a======
======Short Message======
[otbn,dv] Don't write to const registers with BN.LID in RIG
======Full Message======
[otbn,dv] Don't write to const registers with BN.LID in RIG

This hasn't come up until now because we didn't have any way to get
known register values (and, hence, const registers). However, Canberk
is working on a snippet generator that makes some and turning up quite
a few of these bugs.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: b2b784de======
======Short Message======
[otbn] Fix logic for detecting branch/jumps at end of loop
======Full Message======
[otbn] Fix logic for detecting branch/jumps at end of loop

The previous code wouldn't trigger if there was a branch that wasn't
taken.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 1c9a564d======
======Short Message======
[otbn,dv] Fix the ISS for LOOPI instructions with a count of zero
======Full Message======
[otbn,dv] Fix the ISS for LOOPI instructions with a count of zero

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: b2474702======
======Short Message======
[otbn,dv] Fix calculation of k_min when picking LSU targets in RIG
======Full Message======
[otbn,dv] Fix calculation of k_min when picking LSU targets in RIG

Before, we were missing some allowed values of k because k_min wasn't
being rounded properly. In particular, for WSR operations we were
computing

   (0 + (-1 - 1)) // (-1) = (-2) / (-1) = 2

when we really wanted

   ceil(0 / (-1)) = 0

This gave a k_min of 2, so we would only write to WSRs >= 2. Since we
don't currently support URND (on WSR 2), the result was that every
operation was to WSR 3. Oops!

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 40efdceb======
======Short Message======
[dv/hmac] fix regression error
======Full Message======
[dv/hmac] fix regression error

This PR fixes a regression error that hardcoded the key input instead of
using the loop index i.

Signed-off-by: Cindy Chen <chencindy@opentitan.org>



======Commit: c58548c5======
======Short Message======
[reggen] Minor fix to handle internal shadow registers
======Full Message======
[reggen] Minor fix to handle internal shadow registers

Signed-off-by: Timothy Chen <timothytim@google.com>



======Commit: 733baf85======
======Short Message======
[adc_ctrl] Style updates and bug fix
======Full Message======
[adc_ctrl] Style updates and bug fix

- adjust adc style to be more compliant
- adjust certain registers to multi-reg to reduce manual typing
- adjust other registers to just a multi-bit field to reduce typing
- rename blocks and modules according to style
- add clock domain prefix for cdc
- fix wakeup generation requiring the fast clock
- Make use of regfile cdc handling to remove most cdc logic in the design.

Signed-off-by: Timothy Chen <timothytim@google.com>



======Commit: 7cf8edbe======
======Short Message======
[dv/pwrmgr] Allow 0-wait clk en to valid changes
======Full Message======
[dv/pwrmgr] Allow 0-wait clk en to valid changes

Clock disable to invalid transitions can take 0 delay cycles in the AST.
Change the ast responder to allow 0 cycles on both enable and disable
transitions.
Undo the macros in the pwrmgr ast SVAs, since verdi seems to disable
some features unless the assertion is explicitly named.
Fixes verible format issues.

Signed-off-by: Guillermo Maturana <maturana@google.com>



======Commit: 73e2c1b0======
======Short Message======
[dv/rstmgr] Fix code for verible format
======Full Message======
[dv/rstmgr] Fix code for verible format

Signed-off-by: Guillermo Maturana <maturana@google.com>



======Commit: 6672f065======
======Short Message======
Fix the testplan link in dvsim code
======Full Message======
Fix the testplan link in dvsim code

- Changes were made to where the dv doc was placed. This is a
corresponding fix in the dvsim codebase to get the link to the testplan
from the regression results page working correctly.

Signed-off-by: Srikrishna Iyer <sriyer@google.com>



======Commit: 2f778584======
======Short Message======
[dv/dsim] Add dsim workaround for issue 242
======Full Message======
[dv/dsim] Add dsim workaround for issue 242

Remove buggy optimization until dsim fixes a bug:
  https://gitlab.metrics.ca/google/google/-/issues/242.

Signed-off-by: Guillermo Maturana <maturana@google.com>



======Commit: fe42eac5======
======Short Message======
[vcformal/script] Downgrade Error to Warning
======Full Message======
[vcformal/script] Downgrade Error to Warning

For result parsing script, if we could not find coverage data, it used
to report an error and exit the dvsim. But now we want to downgrade to
warning, so dvsim can still execute.

Signed-off-by: Cindy Chen <chencindy@opentitan.org>



======Commit: 47bb433a======
======Short Message======
[rtl] Bug Fix related to SRLI/SLLI Decoding
======Full Message======
[rtl] Bug Fix related to SRLI/SLLI Decoding

This commit fixes a bug where the SRLI or SLLI instruction passes as valid when they
have 25/26 bitfields as 1. In ISA they would not have 1 at their 25/26th bitfields.

Signed-off-by: Canberk Topal <ctopal@lowrisc.org>



======Commit: 5bf97341======
======Short Message======
[fpga, sw] Enable SCA on ChipWhisperer CW310 FPGA board
======Full Message======
[fpga, sw] Enable SCA on ChipWhisperer CW310 FPGA board

This involves the following main changes:
- Two new outputs are defined on the CW310 chip-level to provide the
  target clock and capture trigger to the capture board.
- The capture trigger can now be selected at run time through software
  and GPIO. This allows for taking SCA measurements for different IP
  cores (KMAC, OTBN) without having to re-generate a different
  bitstream.
- The capture trigger is synchronized to the target clock (100 MHz).
  This is needed to prevent metastability issues in the scope depending
  on place and route on the target FPGA.
- UART1 is enabled and muxed to pins IOC9/IOC8 using the pinmux. This
  is needed for the simple serial communication between target and
  capture board, while UART0 remains available for debug prints and
  logging.
- The simple serial library is adjusted to use dif_uart_* only instead
  of a mix of dif_uart_* and base_printf() (this required the UART used
  for simple serial and stdout to be the same device previously).

Signed-off-by: Pirmin Vogel <vogelpi@lowrisc.org>



======Commit: 502a20f1======
======Short Message======
[chip_earlgrey_asic/lint] Fix/waive remaining AST-related lint messages
======Full Message======
[chip_earlgrey_asic/lint] Fix/waive remaining AST-related lint messages

Signed-off-by: Michael Schaffner <msf@google.com>



======Commit: baca4579======
======Short Message======
[tlul_adapter_sram] Fix minor bugs in byte write logic
======Full Message======
[tlul_adapter_sram] Fix minor bugs in byte write logic

This fixes a few bugs in the byte write logic and adds a workaround for
potential RAW hazards that can occur when the byte write logic is
employed together with prim_ram_1p_scr.

This workaround should be removed once the DV environment of sram_ctrl
is able to handle these corner cases (#7461).

Signed-off-by: Michael Schaffner <msf@google.com>



======Commit: 630526cb======
======Short Message======
[otbn/doc] Remove internal state trigger from host
======Full Message======
[otbn/doc] Remove internal state trigger from host

Removed user-initiated secure wipe of internal state from the
specifications.
The secure wipe of the internal state is performed automatically at the
end of the OTBN operation and after an error, so there is no need for
the host software to request it afterwards.

This closes #7468

Signed-off-by: Vladimir Rozic <vrozic@lowrisc.org>



======Commit: 458e4a8f======
======Short Message======
[dv/shadow_reg] Align shadow_reg field update behavior
======Full Message======
[dv/shadow_reg] Align shadow_reg field update behavior

This PR alignes issue #7417 with two fixes:
1). Allow shadow register to be updated by field rather than the entire
register.
2). In `csr_rw`, wait until no non-blocking access then read shadow
register.

Signed-off-by: Cindy Chen <chencindy@opentitan.org>



======Commit: 773d0732======
======Short Message======
[ast/lint] Waive remaining lint errors
======Full Message======
[ast/lint] Waive remaining lint errors

Signed-off-by: Michael Schaffner <msf@google.com>



======Commit: 8cb3e909======
======Short Message======
[formal/conn] Fix top_earlgrey reset
======Full Message======
[formal/conn] Fix top_earlgrey reset

The top_earlgrey rst_ni was replaced by por_n_i.
Added a comment in the csv file describing how to run it.

Signed-off-by: Guillermo Maturana <maturana@google.com>



======Commit: 84aa0b06======
======Short Message======
[ast] AscentLint error fixes (more)
======Full Message======
[ast] AscentLint error fixes (more)

Signed-off-by: Jacob Levy <jacob.levy@opentitan.org>



======Commit: 15199116======
======Short Message======
[ast] Add Fix AscentLint Errors
======Full Message======
[ast] Add Fix AscentLint Errors

Signed-off-by: Jacob Levy <jacob.levy@opentitan.org>



======Commit: 352872d5======
======Short Message======
[mask_rom] Integrate sec_mmio with shutdown
======Full Message======
[mask_rom] Integrate sec_mmio with shutdown

1. Change the signature of the `sec_mmio_shutdown_handler` to accept a
single parameter of `rom_error_t`.
2. Define error module codes with ASCII code-points.  Correct wrong
error numbers in `shutdown_unittest.cc`.
3. Create error codes for the various sec_mmio error states.
4. Invoke the shutdown callback with the appropriate error codes.
5. Initialize sec_mmio at the start of the mask_rom.

Signed-off-by: Chris Frantz <cfrantz@google.com>



======Commit: a11f7919======
======Short Message======
[dv/clkmgr] Fix formatting for verible
======Full Message======
[dv/clkmgr] Fix formatting for verible

Signed-off-by: Guillermo Maturana <maturana@google.com>



======Commit: cdd0d782======
======Short Message======
[dv/clkmgr] Fix some test failures
======Full Message======
[dv/clkmgr] Fix some test failures

Fix clkmgr_trans, adding extra cycles before checking the hints_status
CSR to account for the added clk_io_div4 transactional unit.
Fix clkmgr_csr_mem_rw_with_rand_reset to handle divided clock checks
when io_rst_n becomes active.

Signed-off-by: Guillermo Maturana <maturana@google.com>



======Commit: 1eb1c988======
======Short Message======
[otbn,dv] Generate RIG json with -o, not stdout
======Full Message======
[otbn,dv] Generate RIG json with -o, not stdout

No real change, but it means you can add debug prints to the RIG
without breaking the build. (Before, they'd get mixed in with the
json, causing havoc with the next step)

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 27f4743e======
======Short Message======
[opentitantool] Correct an error in the verilator transport
======Full Message======
[opentitantool] Correct an error in the verilator transport

1. Write tests to check the regex passed to the `find` method.

Signed-off-by: Chris Frantz <cfrantz@google.com>



======Commit: 393a762c======
======Short Message======
[rstmgr / top] Adjust rstmgr / top level connections
======Full Message======
[rstmgr / top] Adjust rstmgr / top level connections

Fixes #7459

Removes the confusion of rstmgr `rst_ni` not REALLY being
the module reset signal.

Signed-off-by: Timothy Chen <timothytim@google.com>



======Commit: 465fb62e======
======Short Message======
[dvsim] Fix publish report summary typo
======Full Message======
[dvsim] Fix publish report summary typo

This PR fixes a publish report error that causes the nightly regression
summary report to be empty.

Signed-off-by: Cindy Chen <chencindy@opentitan.org>



======Commit: f597fcb1======
======Short Message======
[otbn,dv] Fix logic in LOOPI iteration calculation
======Full Message======
[otbn,dv] Fix logic in LOOPI iteration calculation

This wasn't quite right in the 5% branch: if max_iters was greater
than iters_hi, we could end up selecting something impossible to
encode.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 53c279a3======
======Short Message======
[otbn] Rewrite case in bignum ALU to make all branches reachable
======Full Message======
[otbn] Rewrite case in bignum ALU to make all branches reachable

operation_i.sel_flag has type flag_e, which has 4 possible values (the
four different flags: C, M, L and Z). The default case is only
reachable in simulation if the operation_i.sel_flag is 'x, which
doesn't happen and gives a coverage hole.

In other situations, there might be non-X situations where the case
statement might have picked the default. For example, the enum might
have had 5 items, so there would be 3 invalid bit patterns. In this
case, we'd have to be careful about changing the behaviour of the
default case. That doesn't apply here.

Also, reorder the case items to match the ordering of the
enum (originally, there was disagreement in the code about whether M
or L came first: apparently, this file supported the losing side!)

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 7638d97f======
======Short Message======
[hw/otp] Add EN_ENTROPY_SRC_FW_OVER default val
======Full Message======
[hw/otp] Add EN_ENTROPY_SRC_FW_OVER default val

Add default EN_ENTROPY_SRC_FW_OVER value for RMA OTP configuration.

Signed-off-by: Miguel Osorio <miguelosorio@google.com>



======Commit: b9f2d245======
======Short Message======
[rtl/prim_alert_sender] Allow ping_req to stay high without error
======Full Message======
[rtl/prim_alert_sender] Allow ping_req to stay high without error

This PR fixes issue #7483 where Michael proposed a fix to eliminate a
ping_req corner case.

Signed-off-by: Cindy Chen <chencindy@opentitan.org>



======Commit: 7efbbbd0======
======Short Message======
[dvsim] Separate publish report from dvsim flow [PART3]
======Full Message======
[dvsim] Separate publish report from dvsim flow [PART3]

Small fixes:
1). Add a missing symlink for publish.html.
2). Skip `clean_odirs` if the directory already exists.

Signed-off-by: Cindy Chen <chencindy@opentitan.org>



======Commit: c96238fa======
======Short Message======
[sw/silicon_creator] Add flash_ctrl driver
======Full Message======
[sw/silicon_creator] Add flash_ctrl driver

Add a flash_ctrl driver implementation.
This driver supports:
  - flash_ctrl initialization.
  - Read transactions via flash_ctrl read FIFO.
  - Status queries (read FIFO full/empty, init status, transaction
    status, error status.)

Signed-off-by: Jon Flatley <jflat@google.com>



======Commit: 3733747a======
======Short Message======
[dv/prim_alert] Add a testbench for prim_alert
======Full Message======
[dv/prim_alert] Add a testbench for prim_alert

This PR adds a DV testbench with a direct sequence to walk through four
basic alert sequence:
1). Trigger alert_req
2). Trigger ping_req
3). Force alert_rx.ping signal integrity error
4). Force alert_rx.ack signal integrity error

Signed-off-by: Cindy Chen <chencindy@opentitan.org>



======Commit: 26183521======
======Short Message======
[sw/testing] Fix result assignment in CHECK_BUFFER
======Full Message======
[sw/testing] Fix result assignment in CHECK_BUFFER

Signed-off-by: Miguel Osorio <miguelosorio@google.com>



======Commit: ce08c5f9======
======Short Message======
[otbn,dv] Fix comments in RIG's loop generator
======Full Message======
[otbn,dv] Fix comments in RIG's loop generator

These were stale: program.get_insn_space_left() was deleted in ca3e68
but I missed the renaming here.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 1d6ca47c======
======Short Message======
[otbn] Clarify error behavior in specification
======Full Message======
[otbn] Clarify error behavior in specification

- Use consistent terminology: an error is when OTBN detects something
  went wrong. An alert is one of multiple actions as result of an error.
- Explicitly spell out what happens as result of a recoverable or fatal
  error.
- Give a bit more general context on errors, including a "over the
  thumb" guidance on when an error is recoverable, and when it is fatal.
- To avoid error nesting, specify that a secure wipe operation does not
  trigger any errors on its own.
- Specify that secure wipe operations triggered as part of the error
  handling scheme, or as part of a normal program termination, do not
  raise the done interrupt. Otherwise, we get two done interrupts for a
  normal program termination (one from the program, and one from the
  internal wipe), or a spurious done interrupt if a fatal alert was
  detected, but host software never started an operation (e.g. if a
  integrity violation is detected when reading the DMEM).
- Remove the big TODO note in the specification. Most of it is already
  covered implicitly in the text (e.g. program termination is following
  ECALL semantics, and we do an internal wipe, which clears the reg
  files). For the bus blocking topic we have an issue on file.
- Use "signaled" instead of "signalled" consistently, following American
  spelling.

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: c9dda1c8======
======Short Message======
[doc] Fix link to Ibex PMP
======Full Message======
[doc] Fix link to Ibex PMP

Signed-off-by: Michael Tempelmeier <michael.tempelmeier@gi-de.com>



======Commit: 710e3c99======
======Short Message======
[clkmgr] Allow multiple hint clocks in a block
======Full Message======
[clkmgr] Allow multiple hint clocks in a block

There are several parts to this patch, which all have to be done at
once (because the design is broken if you just do some of them).

  1. Rename the hints in hint_names_e to include the clock name as
     well as the endpoint. This is needed because the "otbn" endpoint
     has two different clocks with hints, which need different enum
     entries.

  2. Also, move the code that chooses these hint names to a method on
     the TypedClocks class, so that other code can use it too and be
     guaranteed to get the same results.

  3. Use this code to determine the iteration order when connecting up
     idle signals in merge.py. This (finally!) lets us remove the hack
     that we were using to ensure each block only contributed one idle
     signal.

  4. Add a new "idle_otp_o" signal to OTBN. Wire it up properly and
     add placeholder documentation stubs.

  5. Teach the clkmgr DV code about the new clock. This is slightly
     more work than "just add another entry to the list" because the
     new output clock has io_div4 as a source clock, rather than main,
     which was used for all the others. (Guillermo helped with the
     changes here).

Co-authored-by: Guillermo Maturana <maturana@google.com>
Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 5aa249f1======
======Short Message======
[topgen] Be explicit about where hint clocks get connected
======Full Message======
[topgen] Be explicit about where hint clocks get connected

Despite the big patch(!), there's no functional change here. The trick
is that we split amend_clocks() so that some of the function runs
after we've loaded up the blocks' hjson descriptions. Doing that means
that we can point to "idle" signals explicitly in clocking items and
use the names to wire everything up together.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: d4c9272f======
======Short Message======
[clkmgr] Minor coverage fix in scoreboard
======Full Message======
[clkmgr] Minor coverage fix in scoreboard

We should probably make sure that the values we pass to coverage match
the values that the scoreboard based its decisions on. Before this
patch, there was the possibility that the signals would change values
if the process was suspended by the #0.

Also, since we know which trans coverage group we're interested in,
update it explicitly, rather than calling update_trans_cgs. Now that
update_peri_cgs and update_trans_cgs are dead code, delete them.

(This is actually Guillermo's code, but I'm writing the patch as part
of getting the multi-hint work ready for merge)

Co-authored-by: Guillermo Maturana <maturana@google.com>
Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: bfeaa708======
======Short Message======
[otbn] Remove two extra cases from the InsnOpcodeBaseOp decoder
======Full Message======
[otbn] Remove two extra cases from the InsnOpcodeBaseOp decoder

These correspond to the SLT and SLTU instructions (Set Less Than and
Set Less Than Unsigned), which we don't support.

Also, add comments to the remaining cases to show which instructions
they correspond to (which seems to be rather helpful when trying to
debug weird decoder issues).

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 685572dd======
======Short Message======
[dv/otp_ctrl] Fix wake_up test
======Full Message======
[dv/otp_ctrl] Fix wake_up test

This PR fixes wake up test when clearing the interrupts at the end of
the sequence - it should write `1` to the OperationDone bit instead of
`0`.
This PR also adds a final intr_state read to ensure all interrupts are
cleared.

Thanks Dror for finding this issue.

Signed-off-by: Cindy Chen <chencindy@opentitan.org>



======Commit: 67cdacd7======
======Short Message======
[dv/cip_base_vseq] fixed extract_common_csrs for multi-RAL
======Full Message======
[dv/cip_base_vseq] fixed extract_common_csrs for multi-RAL

Signed-off-by: Dror Kabely <dror.kabely@opentitan.org>



======Commit: 67ff7723======
======Short Message======
[doc/rstmgr] Improve functional spec
======Full Message======
[doc/rstmgr] Improve functional spec

Fix some "regref" instances.
Update description of reset state.

Signed-off-by: Guillermo Maturana <maturana@google.com>



======Commit: b387ad50======
======Short Message======
[lc_ctrl] Fix minor bug in CSR connections
======Full Message======
[lc_ctrl] Fix minor bug in CSR connections

Signed-off-by: Michael Schaffner <msf@google.com>



======Commit: 5dd38bf5======
======Short Message======
[lc_ctrl] Disable NVM debug in the last test unlocked state
======Full Message======
[lc_ctrl] Disable NVM debug in the last test unlocked state

This ensures that the isolated flash partition can be provisioned
in the last test unlocked state without the risk of exposure
via the backdoor interface.

Signed-off-by: Michael Schaffner <msf@google.com>



======Commit: 0d6e82b4======
======Short Message======
[otbn] Specify life cycle escalation reaction
======Full Message======
[otbn] Specify life cycle escalation reaction

Fixes #4227

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: e0076996======
======Short Message======
[dv,tl] Add code to allow synchronisation between A and D channels
======Full Message======
[dv,tl] Add code to allow synchronisation between A and D channels

This is disabled by default and not enabled for any configuration in
this commit, so there should be no change to behaviour.

The main change in this patch is to the monitor. Rather than running
two processes to sample the A and D channels in parallel, we now have
a single process that samples both. This makes it possible to control
which of two simultaneous transactions is seen first.

If cfg.device_can_rsp_on_same_cycle is false, the ad_channels_thread()
task samples D then A on each clock edge. If it is true, the task
samples A just after a clock edge, writing a_chan_same_cycle_rsp_port,
then samples D and repeats any A item on the following edge. The end
result should be equivalent but (I hope) a bit easier to understand.

If cfg.synchronise_ports is true, the monitor writes to a new analysis
port called channel_dir_port just after it pushes to a_chan_port or
d_chan_port. The idea is that a client can then block on
channel_dir_port and then do a non-blocking read from the channel port
indicated. That way, the client can guarantee to get "D then A" if
both happen simultaneously.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 3dc4883a======
======Short Message======
[tl,dv] Add missing configuration in tl_agent_env_cfg
======Full Message======
[tl,dv] Add missing configuration in tl_agent_env_cfg

Both the host agent and the device agent have attached monitors, which
need to know when to sample the interface to get the right
transactions. In the tl_agent_smoke test, this fact that this was
missing meant that, depending on scheduling, we might sample D before
A on a clock-edge where both channels were for the same transaction.

The result is an error where the monitor says "hey, I'm seeing a reply
on the D channel for a transaction with source FOO but I haven't seen
the corresponding request yet".

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 61a5bbf3======
======Short Message======
[otbn,dv] Refactor how the RIG ends programs
======Full Message======
[otbn,dv] Refactor how the RIG ends programs

We want to add some generators that end programs with something other
than an ECALL (by generating errors).

Generalise things so that a generator class can say it does so (with
the new ends_program class variable) and change some variable names to
reflect this.

Also, change how we generate the top-level program. We now decide how
long the "head" and "tail" should be, respectively, and then generate
them separately. This makes some of the logic rather simpler,
especially when we start adding snippet generators that cause errors.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 2541d131======
======Short Message======
[otbn] Spec: CSR or WSR permission errors are ignored
======Full Message======
[otbn] Spec: CSR or WSR permission errors are ignored

Writes to read-only CSRs or WSRs are ignored (currently). Update another
place in the documentation to match.

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: a7f79654======
======Short Message======
[dv/pwrmgr] Add SVA assertions
======Full Message======
[dv/pwrmgr] Add SVA assertions

Use SVA assertions to check input/output to ast and rstmgr.
Use SVA assertions to check clk enables outputs against control CSR.
Fix check for fast fsm active.
Add local objections to responders to avoid killing them while busy.
Drop incoming resets when dropping the outgoing peripheral resets.
Expand and improve DV doc.

Signed-off-by: Guillermo Maturana <maturana@google.com>



======Commit: 8484ee48======
======Short Message======
[csrng/rtl] fix for app command arbiter
======Full Message======
[csrng/rtl] fix for app command arbiter

Application commands use a common arbiter which only supports one cycle of transfer natively.
Added support logic to allow a stream of data per arbitration resolution.

Signed-off-by: Mark Branstad <mark.branstad@wdc.com>



======Commit: c920c935======
======Short Message======
[pwm] Minor fixes
======Full Message======
[pwm] Minor fixes

- Address #7375
- Address a few lint errors

Signed-off-by: Timothy Chen <timothytim@google.com>



======Commit: ffe8c99b======
======Short Message======
[rtl/otp_ctrl] Small fix on lc_escalate_en assignment
======Full Message======
[rtl/otp_ctrl] Small fix on lc_escalate_en assignment

This PR fixes a small issue when internal fatal errors causes
lc_escalate_en.
Details please refer to ISSUE #7409

Signed-off-by: Cindy Chen <chencindy@opentitan.org>



======Commit: bb28c9f1======
======Short Message======
[kmac] Adjust app interface output length
======Full Message======
[kmac] Adjust app interface output length

The app interface digest is increased to 384-bits to better support
keymgr requirements.

Fixes #7278

Signed-off-by: Timothy Chen <timothytim@google.com>



======Commit: 908c9c0c======
======Short Message======
[flash_ctrl] Update partitions wiped during RMA entry
======Full Message======
[flash_ctrl] Update partitions wiped during RMA entry

Fixes #7194

Signed-off-by: Timothy Chen <timothytim@google.com>



======Commit: f433eeae======
======Short Message======
[keymgr] Fix the cdi selection for keys
======Full Message======
[keymgr] Fix the cdi selection for keys

- Address #7393

Signed-off-by: Timothy Chen <timothytim@google.com>



======Commit: 5d45379e======
======Short Message======
[prim_lfsr] Fix assertion issue occuring right after reset
======Full Message======
[prim_lfsr] Fix assertion issue occuring right after reset

There are cases where the LFSR enable signal remains asserted
by the instantiating design while in reset. In such a case,
the NextStateCheck_A may erroneously fire in the first
cycle after reset release due to a SystemVerilog scheduler
peculiarity when the reset is synchronized with a reset synchronizer
flop that releases the reset right on the active clock edge with 0
simulation delay.

If this happens, the assertion body may be out of sync with the design,
since the assertion disable_iff statement is NOT evaluated with a value
sampled in the PREPONED region. In other words: when the assertion is
evaluated in the OBSERVED region (after active and NBA), rst_ni may
already read as 1 due to reset deassertion - however the flops in the
design may not have seen that change yet, leading to an assertion
failure because the flops have not yet changed state, whereas the
assertion expects them to have changed state.

There are a couple of possible solutions:
1) ignore the first clock tick after reset release by shifting the
assertion by one clock tick to the right
2) use a sampled reset value for disable_iff (#sampled(!rst_ni))
3) make sure the surrounding logic never asserts the LFSR enable
signal while in reset.
4) make sure that there is an artificial propagation delay on
all reset synchronizer outputs to shift reset deassertion away from
the active clock edge.

This patch implements solution 1) since this should ensure that the
issue does not occur anymore (also in future designs that instantiate
this prim).

Signed-off-by: Michael Schaffner <msf@google.com>



======Commit: d7d267f6======
======Short Message======
[top] Remove setting of Sec parameters from Aes
======Full Message======
[top] Remove setting of Sec parameters from Aes

- For ASIC flow, the Sec parameters should use the module default.
- Sec parameters should only ever be changed non-ASIC variants (verilator / FPGA etc)

Signed-off-by: Timothy Chen <timothytim@google.com>



======Commit: efea5e0a======
======Short Message======
[dv/shadow_reg] Handle CSR automated sequence write abort
======Full Message======
[dv/shadow_reg] Handle CSR automated sequence write abort

In csr automated sequence, driver will randomly choose to abort certain
transactions. Shadow registers need two writes to update their data.
In current code, if the second write is aborted, the status will not be
UVM_IS_OK and we won't predict its value.
This PR fixes it by return `UVM_IS_OK` as long as there is one
successful write.

Signed-off-by: Cindy Chen <chencindy@opentitan.org>



======Commit: 1d54a7b9======
======Short Message======
[otbn] Describe WSR error conditions in docs and ISS
======Full Message======
[otbn] Describe WSR error conditions in docs and ISS

This actually got added to the RTL back in September with commit
d3154ec2 but we didn't update the docs or the ISS to match. :-(

The slightly odd looking "check, then look up again" structure in the
two execute() functions is to get a nice documentation rendering. We
have to check before we start reading GPRs (to avoid side effects with
x1), but don't have a nice way to render "xxx = state.get_wsr(idx)" in
the documentation. Checking the index and then using it again avoids
both problems.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: b55cb888======
======Short Message======
[otbn,doc] Fix backwards columns for URND in doc table
======Full Message======
[otbn,doc] Fix backwards columns for URND in doc table

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 52ed2518======
======Short Message======
[otbn,dv] Properly report an error if the ISS process dies
======Full Message======
[otbn,dv] Properly report an error if the ISS process dies

Before, run_command was returning a bool... which every call site
ignored! Threading the return value through is a bit messy, and it's
hard to work out what went wrong. Raise a runtime_error instead (we
already catch them, and it lets us give some context about what went
wrong).

Without this change, you get a very mysterious error if the ISS
dies (the first thing that goes wrong is a mismatch on the instruction
count register!)

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: ab5baa4d======
======Short Message======
[otbn,dv] Fix index of ACC WSR
======Full Message======
[otbn,dv] Fix index of ACC WSR

This index changed in commit 19afa99 and we missed it here.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 22aefb37======
======Short Message======
[dv] Add function coverage plan for tl_errors, tl_intg_err
======Full Message======
[dv] Add function coverage plan for tl_errors, tl_intg_err

This cover plan will automatically shown in the blocks that include this
testplan.

Signed-off-by: Weicai Yang <weicai@google.com>



======Commit: c5e55060======
======Short Message======
[dv] Add coverage for tl intg error with mem byte write
======Full Message======
[dv] Add coverage for tl intg error with mem byte write

Signed-off-by: Weicai Yang <weicai@google.com>



======Commit: a97a64c0======
======Short Message======
[dv/shadow_reg] Fix alert shadow reg regression error
======Full Message======
[dv/shadow_reg] Fix alert shadow reg regression error

This PR fixes a regression error where shadow register read did not
clear the phase tracker in DV environment.
The reason is because the sequence uses a field read instead of
register read.
So this PR extends the helper function to clear the phase tracker in CSR
field read as well.

Signed-off-by: Cindy Chen <chencindy@opentitan.org>



======Commit: 00fccb14======
======Short Message======
[otbn] Add Hugo shortcode to link to instruction description
======Full Message======
[otbn] Add Hugo shortcode to link to instruction description

And use it in the OTBN documentation.

The new shortcode also changes the formatting slightly from what we had
before (most of the time): Instructions are not displayed in a monospace
font any more. This aligns with how we render register references, which
also don't use a monospace font.

Fixes #4869

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: 6d4436f7======
======Short Message======
[csrng/sec] remove AES bypass, clean register debug
======Full Message======
[csrng/sec] remove AES bypass, clean register debug

Removed the AES bypass option, as this has been debugged, and now may pose a security exposure.
Other debug registers have been cleaned up as well.

Signed-off-by: Mark Branstad <mark.branstad@wdc.com>



======Commit: 37b4126e======
======Short Message======
[otbn] Spec cleanup: Replace "ECC" with "integrity error"
======Full Message======
[otbn] Spec cleanup: Replace "ECC" with "integrity error"

The ECC is an implementation detail of our integrity protection scheme.
We have used "integrity protection" in all parts of the spec but one,
fix that.

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: ac9ba9ea======
======Short Message======
[prim_prince] Fix comment
======Full Message======
[prim_prince] Fix comment

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: 8fe5b7e7======
======Short Message======
[clkmgr] Fix comment
======Full Message======
[clkmgr] Fix comment

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: e453727d======
======Short Message======
[memutil] Fix width mismatch
======Full Message======
[memutil] Fix width mismatch

The nonce isn't an int variable, assign a arbitrary-width zero instead
of an "int zero".

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: 840e73e5======
======Short Message======
[prim] Add a missing ROM_CFG_DEFAULT to prim_rom_pkg.sv
======Full Message======
[prim] Add a missing ROM_CFG_DEFAULT to prim_rom_pkg.sv

This is needed if you want to wire up a module containing a ROM but
with the default config. (It mirrors e.g. RAM_1P_CFG_DEFAULT)

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 2e68bd14======
======Short Message======
[dvsim] Do not assume the build failed if "ERROR" is printed
======Full Message======
[dvsim] Do not assume the build failed if "ERROR" is printed

During a hardware build with FuseSoC, other tools are called and their
output is sometimes printed to stdout/stderr. What these tools output
isn't something FuseSoC can control (other than silencing it all).
Dvsim tries to parse the output of FuseSoC and extract errors out of it
to aggregate them at the end. It also assumes that the build failed if
error messages are found, even if FuseSoC returned a 0 exit code. This
behavior isn't matched with how FuseSoC operates.

FuseSoC does return a non-zero exit code if a build failed and assumes
the stdout/stderr contents to be human readable and not meant for parsing
(like most tools, actually).

This patch stops dvsim from treating lines starting with "ERROR:" in the
FuseSoC output as failure condition.

The change is triggered by a scenario reported by Sharon Topasz:

* FuseSoC calls a generator called primgen.py to produce target-specific
  primitives.
* primgen.py tries to call Verible for some of its work.
* The Verible call fails, and Verible prints the string "ERROR: Unknown
  command line flag -export_json". This string is displayed as-is during
  the FuseSoC run.
* primgen.py knows how to deal with this problem and uses a fallback
  path. The build succeeds, FuseSoC returns a zero exit code.
* dvsim picks up the "ERROR" line from FuseSoC's stdout/stderr and
  assumes the build failed.

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: 9387752f======
======Short Message======
[otbn] Change URND and RND_PREFETCH CSR indices
======Full Message======
[otbn] Change URND and RND_PREFETCH CSR indices

The CSR indexes in OTBN are meant to be following the address map
specified in the RISC-V Privileged Specification, which gives ranges for
custom read-only, and read-writable CSRs (in M mode). The recent
addition of RND_PREFIX didn't follow these rules. This commit assigns
new addresses to URND (a read-only CSR) and RND_PREFETCH (a read-write
CSR):

Read/write CSRs:
  RND_PREFETCH is now at 0x7D8 (before: 0xFC1)

Read-only CSRs:
  RND          is now at 0xFC0 (unchanged)
  URND         is now at 0xFC1 (before: 0xFC2)

RTL, DV and ISS have been updated. No software has been using these CSRs
yet.

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: 26b07a42======
======Short Message======
[otbn] Add missing extern function declarations
======Full Message======
[otbn] Add missing extern function declarations

GCC in CI doesn't complain, but GCC11 locally does.

```
../src/lowrisc_ip_otbn_top_sim_0.1/otbn_top_sim.cc: In function ‘int main(int, char**)’:
../src/lowrisc_ip_otbn_top_sim_0.1/otbn_top_sim.cc:121:21: error: ‘otbn_err_get’ was not declared in this scope
  121 |   svBit model_err = otbn_err_get();
      |                     ^~~~~~~~~~~~
../src/lowrisc_ip_otbn_top_sim_0.1/otbn_top_sim.cc:186:23: error: ‘otbn_core_get_stop_pc’ was not declared in this scope
  186 |     int act_stop_pc = otbn_core_get_stop_pc();
      |                       ^~~~~~~~~~~~~~~~~~~~~
```

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: 127b109e======
======Short Message======
[topgen] Pull the 'clocks' code into a separate class in topgen
======Full Message======
[topgen] Pull the 'clocks' code into a separate class in topgen

This slightly replicates the changes we made in reggen earlier in the
year. The reason to do this here is that we have several different
places in the code where we figure out the list of aon clocks, hint
clocks etc. and they all have to stay in sync.

Rather than rely on this, let's move all the cleverness into a single
class whose code can be run multiple times (to give the same answer
each time!).

This patch doesn't really do much of this consolidating, but it does
all the infrastructure work, converting top['clocks'] from a load of
nested dictionaries into a class and teaching everything that reads
top['clocks'] to understand the new format.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 46e11ba6======
======Short Message======
[otbn] Fix BN.LID when the destination WDR is read from x1
======Full Message======
[otbn] Fix BN.LID when the destination WDR is read from x1

The problem comes up with an instruction like:

      bn.lid x1, 0(x0)

The previous code read both input GPRs to BN.LID (x1 and x0) on the
first cycle. This is good for the base address, but is the wrong thing
for the destination address, which is needed on the following cycle.

Note that the behaviour was technically wrong for something like

      bn.lid x2, 0(x0)

as well, but didn't cause a bug because the base register file doesn't
factor the read-enable in unless we're reading from the call stack.

To see the bug, run the following example code:

      addi x1, x0, 1
      bn.lid x1, 0(x0)
      ecall

    .section .data
    .word 0x00000000
    .word 0x00000001
    .word 0x00000002
    .word 0x00000003
    .word 0x00000004
    .word 0x00000005
    .word 0x00000006
    .word 0x00000007

If that is saved as bug.s, assemble and link it with

    hw/ip/otbn/util/otbn-as -o bug.o bug.s
    hw/ip/otbn/util/otbn-ld -o bug bug.o

Next, build a Verilator-based simulation with:

    fusesoc --cores-root=. run --target=sim --setup --build lowrisc:ip:otbn_top_sim

and then run it with:

    build/lowrisc_ip_otbn_top_sim_0.1/sim-verilator/Votbn_top_sim -t --load-elf=bug

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 9d4ed87b======
======Short Message======
[top] Correct parameter defaults in top_earlgrey
======Full Message======
[top] Correct parameter defaults in top_earlgrey

Address #6366

Signed-off-by: Timothy Chen <timothytim@google.com>



======Commit: 80d95dde======
======Short Message======
[dv/alert_handler] Small fix on alert parameter names
======Full Message======
[dv/alert_handler] Small fix on alert parameter names

This PR is a small fix to unify alert-handler parameter names.

Signed-off-by: Cindy Chen <chencindy@opentitan.org>



======Commit: fa199ffb======
======Short Message======
[prim_arb_tree/rv_plic_target] Remove TODOs due to a Vivado tool bug
======Full Message======
[prim_arb_tree/rv_plic_target] Remove TODOs due to a Vivado tool bug

This tool bug has been fixed in Vivado 2020.2.

Fix #1408

Signed-off-by: Michael Schaffner <msf@google.com>



======Commit: fce6d7fb======
======Short Message======
[dv/kmac] Update scb to match RTL updates in #7242
======Full Message======
[dv/kmac] Update scb to match RTL updates in #7242

This PR updates the cycle accurate model to match RTL updates made in
PR#7242.

The scb model can now support fully dropping an App transaction and
returning to Idle state in 2 different scenarios:
- SW clears error immediately, before the App hash is completed.
  In this case, immediately return to Idle state waiting for the next
  transaction and force the `kmac_app_monitor` to signal that it is
  idling as well.
- SW clears error after waiting for the hash to be completed.
  In this case, there is no guarantee of output digest correctness, so
  we do not check this in the scb, and then return to Idle as usual
  afterwards.

In addition, the app_fsm model in the scb is updated with the new
`StError` state that we transition into one cycle after seeing an error
on the App interface to allow forward progression without entering a
terminal state.

Signed-off-by: Udi Jonnalagadda <udij@google.com>



======Commit: 8a19191b======
======Short Message======
[otbn] Document randomness properties
======Full Message======
[otbn] Document randomness properties

Add two pieces of documentation:

* Document what kind of randomness software developers can expect when
  reading from RND or URND.
* Document what requirements OTBN has on the EDN to provide appropriate
  randomness.

For high-quality random numbers made available through RND we went for
PTG.3 for now in line with current thinking, but might need to update
that if our plans change.

The goal is still to specify what software developers get when using
RND. If we don't do that, software written for OTBN has an additional
dependency on the configuration of the EDN, which is has no insight to.

Also note that we don't give any guarantees at the moment for the URND
randomness drawn from a local LFSR. There are plans to remove the shift
register with another construction that provides stronger guarantees,
but that's for another day.

The HTML indentation is ugly, but required to make Hugo happy.

Written up with valuable input from Felix and Vladimir.

Fixes #6953

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: 198a6409======
======Short Message======
[dv] Fix all IP env to use RAL with new multireg support
======Full Message======
[dv] Fix all IP env to use RAL with new multireg support

Signed-off-by: Weicai Yang <weicai@google.com>



======Commit: 09884b32======
======Short Message======
[sw/silicon_creator] Fix return value of sigverify_rsa_key_get
======Full Message======
[sw/silicon_creator] Fix return value of sigverify_rsa_key_get

Signed-off-by: Alphan Ulusoy <alphan@google.com>



======Commit: 77bf97b3======
======Short Message======
[aes/dv] Fix tl_intg_err
======Full Message======
[aes/dv] Fix tl_intg_err

same rational as #7142
intg_err will trigger design to update a CSR

Signed-off-by: Weicai Yang <weicai@google.com>



======Commit: 7283f745======
======Short Message======
[primgen] Add shebang
======Full Message======
[primgen] Add shebang

The primgen.py file was executable, but didn't have a shebang. Fix that.

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: 2716986d======
======Short Message======
[primgen] Make primgen "portable" again
======Full Message======
[primgen] Make primgen "portable" again

Primgen is vendored into Ibex and there we don't have the full directory
structure of OpenTitan, but only the primgen folder. To go back into a
state where we can vendor primgen into Ibex, this commit does two
things:

* Move the vendored-in Verible Python code into a subdirectory of
  primgen. No functional change.
* Remove the dependency on check_tool_requirements. We only use that
  dependency to show the version number of Verible in human-readable
  output for eventual debugging. I don't think we've ever used this
  information, so I'm just removing it for now to keep things simple,
  instead of reimplementing parts of the logic inside primgen.

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: 4c02377a======
======Short Message======
[ spi_host ] Fix Lint Errors
======Full Message======
[ spi_host ] Fix Lint Errors

In addition to various bit-width and signed/unsigned corrections, this
commit also removes the obsolete PASSTHRU register.

Signed-off-by: Martin Lueker-Boden <martin.lueker-boden@wdc.com>



======Commit: 04a39167======
======Short Message======
[dv/otp] Fix otp_init_fail regression error
======Full Message======
[dv/otp] Fix otp_init_fail regression error

This PR fixes the regression error on otp_ctrl_init_fail when it turns
of the scoreboard.
The scoreboard did not check again if the `scb_en` is set to 0 in the
middle of the simulation.

Signed-off-by: Cindy Chen <chencindy@opentitan.org>



======Commit: 289d2659======
======Short Message======
[csrng/rtl] fix for dif test
======Full Message======
[csrng/rtl] fix for dif test

Fix will clear out any residual seed info when doing KAT.
Discovered at full chip where ES does a normal boot sequence first.

Signed-off-by: Mark Branstad <mark.branstad@wdc.com>



======Commit: 4e8dbb72======
======Short Message======
Add additional checks to ROM_EXT signer
======Full Message======
Add additional checks to ROM_EXT signer

This change adds the checks in
`sw/device/silicon_creator/lib/manifest.h` to the signer so that
errors can be caught earlier.

Signed-off-by: Alphan Ulusoy <alphan@google.com>



======Commit: 0c6bac8e======
======Short Message======
[lc_ctrl] Add scrap state for main FSM
======Full Message======
[lc_ctrl] Add scrap state for main FSM

This adds a scrap state to the main FSM in order to break an unintended,
circular logical dependency.

I.e., the life cycle FSM decodes the SCRAP life cycle state as any other
state and keeps on sampling the life cycle vector coming from OTP.

However, since the SCRAP state asserts `lc_escalate_en`, OTP escalates
and resets all partition outputs back to the default, causing the LC
controller to latch an invalid LC vector encoding.

This has a few unintended side effects. For instance, it causes the
`lc_escalate_en` signals to toggle from ON -> OFF -> ON. Also, it leads
to an incorrect life cycle TAP readout, as the life cycle state reads
back as "INVALID" instead of "SCRAP".

This commit introduces the following fixes: 1) the ON -> OFF -> ON
toggle is fixed in the `lc_ctrl_signal_decode` logic, which now asserts
`lc_escalate_en` when the data valid indication from OTP unexpectedly
goes to 0.

2) the FSM is moved into a terminal `ScrapSt` right away when a SCRAP
life cycle state is detected. In that state, the life cycle vector
coming from OTP is not sampled anymore, thereby breaking the logical
loop mentioned above.

Note that 2) has the additional benefit that life cycle transition
operations are now explicitly disallowed when the device is in SCRAP.
Before, this was checked only after initiating a life cycle transition
as part of the transition checking logic.

This fixes #7286

Signed-off-by: Michael Schaffner <msf@opentitan.org>



======Commit: c18d2a50======
======Short Message======
[tools/ascent] updated ascent to use the --job-prefix option
======Full Message======
[tools/ascent] updated ascent to use the --job-prefix option

Signed-off-by: Rasmus Madsen <rasmus.madsen@wdc.com>



======Commit: 06f6ef2a======
======Short Message======
[otp_ctrl] Fix rma valid signal
======Full Message======
[otp_ctrl] Fix rma valid signal

This PR fixes #7294 in both DV and RTL.

Signed-off-by: Cindy Chen <chencindy@opentitan.org>



======Commit: c210d58f======
======Short Message======
[fpv/rv_plic] Fix compile error with alert
======Full Message======
[fpv/rv_plic] Fix compile error with alert

This PR fixes rv_plic FPV compile error due to the `NumAlerts` keyword.

Signed-off-by: Cindy Chen <chencindy@opentitan.org>



======Commit: ad886b70======
======Short Message======
[rtl] Fix a comment
======Full Message======
[rtl] Fix a comment

This PR fixes a small comment in RTL file.

Signed-off-by: Cindy Chen <chencindy@opentitan.org>



======Commit: 5fb7981f======
======Short Message======
[aes/dv] compile clean up - fixed relevant warnings
======Full Message======
[aes/dv] compile clean up - fixed relevant warnings

Signed-off-by: Rasmus Madsen <rasmus.madsen@wdc.com>



======Commit: 7987b545======
======Short Message======
[otbn] Trivial style fix
======Full Message======
[otbn] Trivial style fix

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: 7c9a60c3======
======Short Message======
[otbn] Connect lifecycle escalate signal
======Full Message======
[otbn] Connect lifecycle escalate signal

Put the toplevel connectivity for the lifecycle escalation signal in
place. The signal doesn't yet trigger any functionality within OTBN.

Fixes #4228

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: 28d88e5c======
======Short Message======
[otbn,dv] Fix "start" tracking around resets
======Full Message======
[otbn,dv] Fix "start" tracking around resets

The bug here happens if a reset is asserted just after the write to
the CMD register that starts OTBN. Specifically, there was a problem
if the reset arrived after the negedge of the clock after start_i
signal is asserted but before the following posedge.

In this case, we would have converted "saw_start_tl_trans" into
"waiting_for_model" and then would see the DV_CHECK fail on the
following cycle (by which time, we were in reset) because the reset
would have arrived before the model started.

To fix things, we make the check conditional on not being in reset and
also clear the waiting_for_model flag when in reset (otherwise, we'd
see a failure next time rst_n went high).

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 3a9af352======
======Short Message======
[otbn,dv] Simplify counters that track start handling in scoreboard
======Full Message======
[otbn,dv] Simplify counters that track start handling in scoreboard

The various counters that we were using to track things are a bit
confusing: convert them to single-bit flags and improve the error
messages.

There should be no functional change other than slightly improved
error messages!

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 70151fe5======
======Short Message======
[keymgr] Add otbn sideload and expand to 384-bit sideload key support
======Full Message======
[keymgr] Add otbn sideload and expand to 384-bit sideload key support

Signed-off-by: Timothy Chen <timothytim@google.com>

[kmac] Expand kmac output to support 384-bits

Signed-off-by: Timothy Chen <timothytim@google.com>

[top] Minor adjustment to top level parameters

Signed-off-by: Timothy Chen <timothytim@google.com>

[dv] Various dv fixes to accommodate new format

Signed-off-by: Timothy Chen <timothytim@google.com>

[top] Auto generate

Signed-off-by: Timothy Chen <timothytim@google.com>

[rom_ctrl dv] Various changes to account for different sizes.

- KMAC interface size is no longer necessarily the digest size, adjust
  the scoreboard and tests to reflect this.

Signed-off-by: Timothy Chen <timothytim@google.com>



======Commit: b8b053f3======
======Short Message======
Require Vivado 2020.2
======Full Message======
Require Vivado 2020.2

Switch to Vivado 2020.2 as minimum requirement. This version fixes a
critical synthesis mismatch bug, as discussed in more detail at
https://forums.xilinx.com/t5/Synthesis/Simulation-Synthesis-Mismatch-with-Vivado-2018-3/m-p/1065923#M33849.

We did work around this Vivado bug in the past (see #1355, #1408),
but can avoid these workarounds now, as they collide slightly with
syntax that is works better for Verilator (#6639).

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: 88885400======
======Short Message======
[kmac] Error Checker to send valid cmd only
======Full Message======
[kmac] Error Checker to send valid cmd only

This commit revises kmac_errchk to send only valid commands to the rest
of the modules. So that the following modules does not have complex
sequence checker anymore.

Due to timing concern, this module latches the sw_cmd input signal. It
changes the cycle accurate model in the DV environment.

Co-Authored-by: Udi Jonnalagadda <udij@google.com>
Signed-off-by: Eunchan Kim <eunchan@opentitan.org>



======Commit: 0f6e7818======
======Short Message======
[otbn] fork rsa verify code for 3k version
======Full Message======
[otbn] fork rsa verify code for 3k version

Create a fork of the RSA verify-only implementation
intended for verified boot. This is in preparation
of creating a version that is fixed to a key length
of 3072 bit.

Signed-off-by: Felix Miller <felix.miller@gi-de.com>



======Commit: 99f13037======
======Short Message======
[otbn] rework P-256 lib
======Full Message======
[otbn] rework P-256 lib

This is a major rework of the P-256 lib and associated
tests.

- Use address labels
- Move the curve domain parameters to the data section in
the lib's assembly file.
- Use address labels to reference pointers and buffers
- Inline some routines
- Optimize some code in P-256 lib
- Fix some typos

Signed-off-by: Felix Miller <felix.miller@gi-de.com>



======Commit: a7533901======
======Short Message======
[xbar/dv] Fix name search issue
======Full Message======
[xbar/dv] Fix name search issue

Fix failures in #7257
We set interface and cfg object using wildcard name, like `*name*`
If we have 2 interfaces with names AA and AA1, the drivers will end up
using the same interface.

Signed-off-by: Weicai Yang <weicai@google.com>



======Commit: 16622a3b======
======Short Message======
[kmac] Add a path to return to Idle in KeyInvalid
======Full Message======
[kmac] Add a path to return to Idle in KeyInvalid

This commit revises the App FSM to:

- change the FSM to be resilient to FI : HD3 sparse encoded
- enable SW to move FSM back to Idle state when error occurs
- discard incoming App traffic to not block the selected App

Signed-off-by: Eunchan Kim <eunchan@opentitan.org>



======Commit: d6cca470======
======Short Message======
[entropy_src/rtl] fix for bypass mode
======Full Message======
[entropy_src/rtl] fix for bypass mode

When the ES_TYPE bit is set, entropy_src must stay completely in bypass mode.
A fix was added to coordinate the main state machine to handle this mode.
Updated the main state machine diagram to reflect this change.

Signed-off-by: Mark Branstad <mark.branstad@wdc.com>



======Commit: 138c97d9======
======Short Message======
[sw/silicon_creator] Add OTBN ROM driver
======Full Message======
[sw/silicon_creator] Add OTBN ROM driver

Adds an OTBN driver implementation with unittests. This driver is
heavily based off of sw/device/lib/dif/dif_otbn*, introduced in
commit 1c7cf8f8d24e ("[otbn] Initial DIF") with slimmed down error
checking and irq, init, and restart routines pruned.

Signed-off-by: Jon Flatley <jflat@google.com>



======Commit: 93cf362a======
======Short Message======
[otp_ctrl] Remove invalid command error
======Full Message======
[otp_ctrl] Remove invalid command error

This changes the behavior of the MacroError (code 0x1).

In particular, it is not asserted anymore when an invalid command
is issues to the wrapper.

Such a condition would be a HW bug, and should not exist in the final
design.

Hence, the behavior of that error is changed such that it is only
returned upon macro malfunction.

The open source OTP wrapper does not model this condition, hence the
corresponding test is removed.
I.e., this condition will have to be checked as part of the closed
source wrapper DV.

In order to catch illegal HW behavior, this change adds assertions that
check whether the otp controller issues legal commands to the OTP
wrapper.

Signed-off-by: Michael Schaffner <msf@opentitan.org>



======Commit: cc04f906======
======Short Message======
[dv/jtag] Fix jtag sequence typo
======Full Message======
[dv/jtag] Fix jtag sequence typo

This PR fixes a jtag typo: I should use the jtag output `dout` instead
of `rdata` to get the read/write status.

Signed-off-by: Cindy Chen <chencindy@opentitan.org>



======Commit: 13d7791d======
======Short Message======
[dv/otp_ctrl] conditioned mem_bkdr_util creation on PRIM_DEFAULT_IMPL
======Full Message======
[dv/otp_ctrl] conditioned mem_bkdr_util creation on PRIM_DEFAULT_IMPL

Signed-off-by: Dror Kabely <dror.kabely@opentitan.org>



======Commit: 37baf990======
======Short Message======
[pattgen] Minor lint fix
======Full Message======
[pattgen] Minor lint fix

Signed-off-by: Timothy Chen <timothytim@google.com>



======Commit: 9d75b804======
======Short Message======
[uart] Minor lint fix
======Full Message======
[uart] Minor lint fix

Signed-off-by: Timothy Chen <timothytim@google.com>



======Commit: 1d046cee======
======Short Message======
[pwm] Minor lint fix
======Full Message======
[pwm] Minor lint fix

Signed-off-by: Timothy Chen <timothytim@google.com>



======Commit: 110698fc======
======Short Message======
[lc_ctrl] Correct  counter next state computation logic
======Full Message======
[lc_ctrl] Correct  counter next state computation logic

Fix #7241

Signed-off-by: Michael Schaffner <msf@opentitan.org>



======Commit: 78964d79======
======Short Message======
[lc_ctrl] Fix the cshake byte order in the constants generation script
======Full Message======
[lc_ctrl] Fix the cshake byte order in the constants generation script

Fixes #7229

Signed-off-by: Michael Schaffner <msf@opentitan.org>



======Commit: 292b586e======
======Short Message======
[lc/dif] Fix `claim_transition_if` claim value
======Full Message======
[lc/dif] Fix `claim_transition_if` claim value

This PR fixes the value to claim the mutex. From the design spec, we are
using `A5` to claim instead of `1`.

Signed-off-by: Cindy Chen <chencindy@opentitan.org>



======Commit: 5fd1d669======
======Short Message======
[otbn] Fix RandConst width for the nonce
======Full Message======
[otbn] Fix RandConst width for the nonce

Signed-off-by: Michael Schaffner <msf@opentitan.org>



======Commit: 309e4ad5======
======Short Message======
[tlul] Minor lint fix
======Full Message======
[tlul] Minor lint fix

Signed-off-by: Michael Schaffner <msf@opentitan.org>



======Commit: 34a92f13======
======Short Message======
[dv/top-level] small fix on chip testplan
======Full Message======
[dv/top-level] small fix on chip testplan

Fix a few small nit and wording on chip testplan for otp_lc_transition
test.

Signed-off-by: Cindy Chen <chencindy@opentitan.org>



======Commit: 302df545======
======Short Message======
[kmac] Lint fix
======Full Message======
[kmac] Lint fix

This commit clears out remaining lint errors in KMAC.

Signed-off-by: Eunchan Kim <eunchan@opentitan.org>



======Commit: 690d732a======
======Short Message======
[rv_dm] Make the RV_DM a comportable module
======Full Message======
[rv_dm] Make the RV_DM a comportable module

This makes the RV_DM a comportable IP module.
To this end, an Hjson description is created, leveraging the recently
added topgen feature that allows for multiple TL-UL interfaces per
comportable IP.

This patch also modifies some of the interface signals to be compatible
with the intersignal mechanism in topgen, and it adds the alert
integrity alerts.

Signed-off-by: Michael Schaffner <msf@opentitan.org>



======Commit: 2548d84b======
======Short Message======
[csrng/rtl] fix for app cmd with clen less than 12
======Full Message======
[csrng/rtl] fix for app cmd with clen less than 12

Fix for when an application command is sent to csrng with a clen of less than 12.
The additional data packer must be cleared after each command.

Signed-off-by: Mark Branstad <mark.branstad@wdc.com>



======Commit: c9474a17======
======Short Message======
[pwm, dv] Fix fifo test for i2c host rtl
======Full Message======
[pwm, dv] Fix fifo test for i2c host rtl

  - Use fifo_depth parameters from i2c_reg_pkg.sv instead of hardcoding
  - Fix corner case in which target only stretches host clock within data cycle
  - Reduce reseed values for fifo tests since the fifo depth is increased 32->64
  - Clean up code

Signed-off-by: Tung Hoang <hoang.tung@wdc.com>



======Commit: 1b293477======
======Short Message======
[rom_ext_image_tools] Check that code region is aligned correctly
======Full Message======
[rom_ext_image_tools] Check that code region is aligned correctly

The `code_start` and `code_end` fields in the manifest must be
32-bit aligned as they are used to define a PMP region. It is best
to check this in the signer to catch any alignment issues as early
as possible (though the mask ROM also checks).

Fixes #7192.

Signed-off-by: Michael Munday <mike.munday@lowrisc.org>



======Commit: 34aeb00f======
======Short Message======
[dv/spi_device] Fix a regression failure
======Full Message======
[dv/spi_device] Fix a regression failure

SPI inputs are async. It takes 2 cycles to synchronize them to status CSR
Add 2 cycles delays to let synchronization finish, in order to read
correct default CSR values

Also remove `do_spi_device_init`, as `spi_device_init` is called
directly when it's needed. No need to have this knob

Signed-off-by: Weicai Yang <weicai@google.com>



======Commit: b36cf96a======
======Short Message======
[dv/uart] Fix assertion
======Full Message======
[dv/uart] Fix assertion

Fix misplacing clk and rst, found this by running xcelium

Signed-off-by: Weicai Yang <weicai@google.com>



======Commit: 931f1208======
======Short Message======
[dv] Fix tl_error
======Full Message======
[dv] Fix tl_error

Fix the follow error due to wrong condition of testing mem byte access
error
>UVM_FATAL @    917818 ps: (csr_utils_pkg.sv:68) [csr_utils] Check failed mem != null (0 [0x0] vs 0 [0x0]) Can't find any mem with addr 0x0

Signed-off-by: Weicai Yang <weicai@google.com>



======Commit: 1ce8362d======
======Short Message======
[dv/otp] Update tl integrity alert name
======Full Message======
[dv/otp] Update tl integrity alert name

OTP_CTRL integrity alert name is `fatal_bus_integ_error` instead of the
default name. This PR updates it in otp dv environment.

Signed-off-by: Cindy Chen <chencindy@opentitan.org>



======Commit: 4160c07b======
======Short Message======
[dv/pwrmgr] Drive pwrmgr inputs based on outputs
======Full Message======
[dv/pwrmgr] Drive pwrmgr inputs based on outputs

Drive inputs to the pwrmgr based on output changes.
Fixes interrupt tb connection.

Signed-off-by: Guillermo Maturana <maturana@google.com>



======Commit: fc5fb2da======
======Short Message======
[mask_rom] Add mask ROM ePMP functional test
======Full Message======
[mask_rom] Add mask ROM ePMP functional test

Adds a test ROM that shares the same ePMP configuration as the mask
ROM. It takes about 30-60s to execute in verilator on my laptop.

The test attempts to execute code in RAM, eFlash and the read-only
part of the ROM to check that instruction access faults are
generated correctly. It also tests that the region unlocked by
a call to `mask_rom_epmp_unlock_rom_ext_rx` is correct.

Blocking unwanted execution is the primary purpose of the ePMP module.
For now the test does not check other types of access are allowed
or blocked. It may be desirable to add other tests for these
accesses (e.g. a stack overflow test for the stack guard) later.

The test is unusual in that it executes from ROM and does not
communicate any status information until the test is over (because
the address space used by DV is blocked by the ePMP configuration
that is being tested).

Disabling the ePMP setup code results in the following output:

```
I00000 mask_rom_epmp_test.c:358] Starting MaskROM ePMP functional test.
E00001 mask_rom_epmp_test.c:363] CHECK-fail: epmp_state_check(&epmp) == kErrorOk
E00002 mask_rom_epmp_test.c:251] CHECK-fail: execute(illegal_ins_ro, kExceptionInstructionAccessFault)
E00003 mask_rom_epmp_test.c:263] CHECK-fail: execute(illegal_ins_rw, kExceptionInstructionAccessFault)
E00004 mask_rom_epmp_test.c:275] CHECK-fail: execute(&eflash[0], kExceptionInstructionAccessFault)
E00005 mask_rom_epmp_test.c:276] CHECK-fail: execute(&eflash[eflash_len - 1], kExceptionInstructionAccessFault)
E00006 mask_rom_epmp_test.c:283] eflash execution not blocked @ 0x20000418
E00007 mask_rom_epmp_test.c:331] CHECK-fail: epmp_state_check(epmp) == kErrorOk
E00008 mask_rom_epmp_test.c:342] CHECK-fail: execute(&image[-1], kExceptionInstructionAccessFault)
E00009 mask_rom_epmp_test.c:343] CHECK-fail: execute(&image[image_len], kExceptionInstructionAccessFault)
E00010 mask_rom_epmp_test.c:378] CHECK-fail: epmp_unlock_test_status(&epmp)
I00011 test_status.c:34] FAIL!
```

Signed-off-by: Michael Munday <mike.munday@lowrisc.org>



======Commit: a28c280b======
======Short Message======
[otp_ctrl] Update DIF to account for bus integrity error
======Full Message======
[otp_ctrl] Update DIF to account for bus integrity error

Signed-off-by: Michael Schaffner <msf@google.com>



======Commit: 244a8dd2======
======Short Message======
[sensor_ctrl, ast] Preparation for sensor_ctrl d2
======Full Message======
[sensor_ctrl, ast] Preparation for sensor_ctrl d2

- Add sensor_ctrl doc and prj.hjson
- Update ast title header
- Minor fix for sensor_ctrl alert clearing

Signed-off-by: Timothy Chen <timothytim@google.com>



======Commit: 338350a0======
======Short Message======
[dv/common] Fix xcelium error with coverage enabled
======Full Message======
[dv/common] Fix xcelium error with coverage enabled

This PR fixes a xcelium error that does not allow two covergroups to
assign the same name.
To solve this issue, we added a prefix for the covergroups.

Signed-off-by: Cindy Chen <chencindy@opentitan.org>



======Commit: cdf4bf29======
======Short Message======
Base opentitantool application.
======Full Message======
Base opentitantool application.

1. Establish the basic `opentitantool` framework.
2. Create a procedural macro for deriving `CommandDispatch` for interior
nodes in the command hierarchy.
3. Create some sample `hello` commands in `hello.rs`.

Signed-off-by: Chris Frantz <cfrantz@google.com>



======Commit: 437cafb3======
======Short Message======
[adc_ctrl] Minor formatting fix
======Full Message======
[adc_ctrl] Minor formatting fix

Signed-off-by: Timothy Chen <timothytim@google.com>



======Commit: 9ed6ba94======
======Short Message======
[rv_plic] Fix a bitwidth lint error
======Full Message======
[rv_plic] Fix a bitwidth lint error

This corrects a lint error in the case where the number of sources is
a power of two.

Signed-off-by: Michael Schaffner <msf@opentitan.org>



======Commit: aa9e58a1======
======Short Message======
[otbn/otp_ctrl] Replicate dmem scrambling keystream
======Full Message======
[otbn/otp_ctrl] Replicate dmem scrambling keystream

This replicates the keystream instead of instantiating multiple PRINCE
primitives, as discussed in detail in #7054.
This effectively means that the OTBN nonce is now only 64bit wide, and
this patch changes the widths throughout the otp_ctrl and otbn designs.

This also aligns the OTP control DV environment to only expect 10
instead of 16 EDN fetch requests.

Signed-off-by: Michael Schaffner <msf@opentitan.org>
Signed-off-by: Cindy Chen <chencindy@opentitan.org>



======Commit: 00720622======
======Short Message======
[sw/silicon_creator] Rename error code for bad manifest length
======Full Message======
[sw/silicon_creator] Rename error code for bad manifest length

Signed-off-by: Alphan Ulusoy <alphan@google.com>



======Commit: 39df35f7======
======Short Message======
[dv,cip] Mirror FATAL_ALERT_CAUSE-style registers in scoreboard
======Full Message======
[dv,cip] Mirror FATAL_ALERT_CAUSE-style registers in scoreboard

When running the TL error sequence run by run_tl_intg_err_vseq_sub, we
inject an integrity error into one or more TL accesses, which would
confuse the scoreboard for some blocks. To avoid chaos, we disable the
scoreboard when running this sequence with a runtime plusarg.

Some blocks' environments do prediction of hardware-updated CSRs, and
this is done in the scoreboard. Unfortunately, disabling the
scoreboard means that this won't happen which, in turn, causes
csr_utils::csr_rd_check to spot an "error" when reading a
hardware-updated CSR that changes on an alert (an "ALERT_CAUSE"
register).

This patch allows a block to configure the (single-bit) field that
will be set when there is a TL error. Assuming there's such a field
configured, cip_base_scoreboard.sv notices any error response and
updates the mirrored value of that field accordingly.

This allows us to get rid of the special-case code at the bottom of
cip_base_vseq__tl_errors.svh: rather than avoiding looking at a
particular behaviour, we can just predict it properly.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: b99c5b8d======
======Short Message======
[dv/common] fix xcelium compile error
======Full Message======
[dv/common] fix xcelium compile error

Because xcelium does not support array of covergroups, this PR wrap it
around with a class.

Signed-off-by: Cindy Chen <chencindy@opentitan.org>



======Commit: bbfbe24d======
======Short Message======
[dv] Fix errors in tl_agent DV
======Full Message======
[dv] Fix errors in tl_agent DV

Signed-off-by: Weicai Yang <weicai@google.com>



======Commit: 1f6bec29======
======Short Message======
[sysrst_ctrl] Rename FSM states to fix lint issues
======Full Message======
[sysrst_ctrl] Rename FSM states to fix lint issues

The FSM state encoding had a state named WAIT, which collides with a
reserved SV key word.
This adds the _ST suffix to all states in that FSM in order to fix
associated lint warnings.

Signed-off-by: Michael Schaffner <msf@opentitan.org>



======Commit: 7c33aa4c======
======Short Message======
[dv] Add intg test for mem and add coverage
======Full Message======
[dv] Add intg test for mem and add coverage

1. Add intg test for mem
2. Add functional coverage for tl_errors and intg error
3. Add RO mem write error for tl_errors

Signed-off-by: Weicai Yang <weicai@google.com>



======Commit: 3c2aba8f======
======Short Message======
[dv] Enable tl intg error on data
======Full Message======
[dv] Enable tl intg error on data

Enable it as #6887 is resolved
Add constraint that data intg check only applies to write

Signed-off-by: Weicai Yang <weicai@google.com>



======Commit: 0b53455f======
======Short Message======
[lc_ctrl/alerts] Fix a typo
======Full Message======
[lc_ctrl/alerts] Fix a typo

Signed-off-by: Michael Schaffner <msf@opentitan.org>



======Commit: 8643b74e======
======Short Message======
[entropy_src] Fix width mismatch in entropy_src_core.sv
======Full Message======
[entropy_src] Fix width mismatch in entropy_src_core.sv

Verilator complains that ObserveFifoDepth-1 is a 32-bit integer and
sfifo_observe_depth is 7 bits. Explicitly cast the integer
literal (which is "obviously safe": Clog2ObserveFifoDepth is indeed
$clog2(ObserveFifoDepth), so everything will definitely fit).

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 36ebb51d======
======Short Message======
[csrng/rtl] update for health test phases
======Full Message======
[csrng/rtl] update for health test phases

RTL updates made to support the boot, startup, and continuous test phases.
Fixes #6085.

Signed-off-by: Mark Branstad <mark.branstad@wdc.com>



======Commit: 2f1b8152======
======Short Message======
[otbn] Fix insn_cnt_o reset on start
======Full Message======
[otbn] Fix insn_cnt_o reset on start

The instruction count visibile on insn_cnt_o must reset as soon as OTBN
starts. Previously it would only reset after the initial start state
machine (which reseeds the URND LFSR) had completed.

Fixes #7052

Signed-off-by: Greg Chadwick <gac@lowrisc.org>



======Commit: 527bd430======
======Short Message======
[otbn] Fix lint introduced by scrambling
======Full Message======
[otbn] Fix lint introduced by scrambling

Signed-off-by: Greg Chadwick <gac@lowrisc.org>



======Commit: 89dda74b======
======Short Message======
[rom_ctrl dv] Fix for xcelium
======Full Message======
[rom_ctrl dv] Fix for xcelium

Signed-off-by: Srikrishna Iyer <sriyer@google.com>



======Commit: 049c6b2b======
======Short Message======
[adc_ctrl] Various preparation steps for d2
======Full Message======
[adc_ctrl] Various preparation steps for d2

- minor fix for prim_fifo_async lint warnings
- adjust prim_fifo_async usage to prim_pulse_sync instead
- update documentation
- update checklists

Signed-off-by: Timothy Chen <timothytim@google.com>



======Commit: b5467711======
======Short Message======
[dv] add a function to apply additional exclusion for intg
======Full Message======
[dv] add a function to apply additional exclusion for intg

Tl_intg_err seq calls csr_rw seq.
Some blocks like rom_ctrl have a CSR FATAL_ALERT_CAUSE, which is
affected by sending tl item with intg error, need to exclude checking it
in the csr_rw seq
add the function and apply an exclusion in rom_ctrl to fix the failure

Signed-off-by: Weicai Yang <weicai@google.com>



======Commit: d7f6dfe9======
======Short Message======
[dv/i2c] Fix alert clock/reset
======Full Message======
[dv/i2c] Fix alert clock/reset

Signed-off-by: Weicai Yang <weicai@google.com>



======Commit: 0c4960cb======
======Short Message======
[sysrst_ctrl] Give an explicit size to the EDGE_TYPE param
======Full Message======
[sysrst_ctrl] Give an explicit size to the EDGE_TYPE param

If this module is instantiated with EDGE_TYPE = "H" (the default), the
EDGE_TYPE parameter ends up with inferred type "bit [7:0]", which then
causes a lint warning about width mismatches when compared against LH
or HL.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 7cc3654e======
======Short Message======
[entropy_src/rtl] bug fixes for rng interface FIFO
======Full Message======
[entropy_src/rtl] bug fixes for rng interface FIFO

Changes made to the AST RNG interface controls so that back-to-back valids will be paused one cycle.
Also, the number of valids needed for a certain seed size match.
For example, a boot seed of 384 bits needs precisely 384 input valids signaled.

Signed-off-by: Mark Branstad <mark.branstad@wdc.com>



======Commit: 8a9e1ff4======
======Short Message======
[csrng] Fix width of hex constant
======Full Message======
[csrng] Fix width of hex constant

The LHS of the comparison is 19 bits wide. This actually has a
parameter already (GenBitsCntrWidth), so use that!

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 77358faa======
======Short Message======
[tools/dvsim] Fix some VCS flags
======Full Message======
[tools/dvsim] Fix some VCS flags

Add "-show tests" flag to coverage merge command to enable grading.
Add "-log" flags to coverage merge and report.
Trim debug_access capabilities for vcs_waves mode.
Add TODO to trim debug_access in regular "build_opts" flags.

Signed-off-by: Guillermo Maturana <maturana@google.com>



======Commit: 02f3f9ea======
======Short Message======
[tlul] Correct width for secded encoder in tlul_adapter_reg.sv
======Full Message======
[tlul] Correct width for secded encoder in tlul_adapter_reg.sv

I think this was missed from commit 4a7399f (and causes lint errors).

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 327d4eea======
======Short Message======
[otbn,dv] Teach the RIG about the 'wrd' operand of bn.mulqacc.so
======Full Message======
[otbn,dv] Teach the RIG about the 'wrd' operand of bn.mulqacc.so

This is both a source and a destination (we update just half of the
word). So we need to teach the tooling about updated wide registers (I
used the mnemonic "wrb") and update bignum-insns.yml to say that
bn.mulqacc.so's "wrd" operand is actually updated.

This fixes a failing test (otbn_reset with seed 531773529) caused by
the fact that one of the WDRs comes up with a nonzero initial value.
The RIG is quite careful to avoid reading registers with unknown
values, but didn't realise that a bn.mulqacc.so wasn't safe (because
the destination register didn't have a determined value).

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 8d963422======
======Short Message======
[pwrmgr] Fix fallthrough fsm states
======Full Message======
[pwrmgr] Fix fallthrough fsm states

Address #6819

Also fix some errors on reset condition reporting when the
main power domain is not turned off.

Signed-off-by: Timothy Chen <timothytim@google.com>



======Commit: 5204abb8======
======Short Message======
[dv/clkmgr] Fix and extend coverage collection
======Full Message======
[dv/clkmgr] Fix and extend coverage collection

Add extclk covergroup.
Add crosses to peri and trans covergroups.
Simplify coverage sample calls.
Fix clkmgr_extclk placement in testplan.

Signed-off-by: Guillermo Maturana <maturana@google.com>



======Commit: 633a2039======
======Short Message======
[lint] prim_ram_1p_scr verilator lint fixes
======Full Message======
[lint] prim_ram_1p_scr verilator lint fixes

Waive WIDTH mismatches associated with 'addr_cnt_q'. This is compared to
32-bit parameters in a few places.

Signed-off-by: Greg Chadwick <gac@lowrisc.org>



======Commit: 027fb428======
======Short Message======
[dv/tl_errors_vseq] Add RAL for memories
======Full Message======
[dv/tl_errors_vseq] Add RAL for memories

Memory-related sequences were missing a RAL specifier and therefore
driving all traffic onto the default (register) RAL causing address
mapping errors (and missing stimulus).

Signed-off-by: Tom Roberts <tomroberts@lowrisc.org>



======Commit: 9cf8f4c7======
======Short Message======
[tools/dsim] Fix non-LRM compliant code
======Full Message======
[tools/dsim] Fix non-LRM compliant code

Fix errors dsim flags for non LRM compliant code other tools accept.
- Initializing a struct containing an enum with default:'x is
  non-compliant if the enum doesn't have an explicit member with
  value 'x. Initialize the value with a cast 'x instead.
- Assigning an array of a base class to an array of a derived
  class is non-compliant. Make the assignments in a foreach loop.

Signed-off-by: Guillermo Maturana <maturana@google.com>



======Commit: 7c771d9c======
======Short Message======
[dv/clkmgr] Fix wording in tb.svg
======Full Message======
[dv/clkmgr] Fix wording in tb.svg

Fix incorrect reference to otp_ctrl.

Signed-off-by: Guillermo Maturana <maturana@google.com>



======Commit: 7cb7f206======
======Short Message======
[reggen] Generate a single we/re signal per register in reg_top
======Full Message======
[reggen] Generate a single we/re signal per register in reg_top

Most of this (enormous) diff is auto-generated. The only manual
changes are to reg_top.sv.tpl, access.py and register.py.

The idea behind this patch is that the write-enable and read-enable
signal for a field are both determined at the register level (by
reg_we or reg_re, combined with an address check). Before this patch,
each field that needed a write-enable or read-enable signal defined
one. For example, if we had a writeable register R with fields F0 and
F1, we were defined both R_F0_we and R_F1_we and always set them to
the same values. This patch changes things so that we define "R_we"
instead and use it as the "we" signal for both R.F0 and R.F1.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 750aac37======
======Short Message======
Revert "[tlul] Drop the "quick fail" path from tlul_adapter_sram.sv"
======Full Message======
Revert "[tlul] Drop the "quick fail" path from tlul_adapter_sram.sv"

This reverts commit 9bb11ef5b872146c6cf545a20275ca0a04c327ef. The
problem is that some blocks make gnt_i dependent on req_o so an
erroring access just stalls. This is probably not great behaviour, and
maybe we should fix that in the future, but doing so would mean
renaming the signals (to e.g. rdy/vld, rather than gnt/req).

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: f8d9c7e1======
======Short Message======
[otbn,dv] Configure number of interrupts for DV
======Full Message======
[otbn,dv] Configure number of interrupts for DV

This fixes failing automated "intr_test" tests, which mask the value
read from the intr_if interface with (1 << num_interrupts) - 1.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 0c504e7c======
======Short Message======
[uart/dv] Fix regression failure
======Full Message======
[uart/dv] Fix regression failure

add alert_test in scb to avoid failure

Signed-off-by: Weicai Yang <weicai@google.com>



======Commit: d562377a======
======Short Message======
[dvsim] Fix GUI mode and launcher creation fixes
======Full Message======
[dvsim] Fix GUI mode and launcher creation fixes

There are 2 fixes in this commit.

- GUI mode
  set this as a Deploy class property rather than sim cfg property.
  For the cloud launcher, the `--gui` switch is also used to
  translate to VNC session invocation command which is not required
  for the build step. By making it a Deploy class property, we can
  turn off the VNC invocation just for the CompileSim object.

- Create launcher ONLY if the job is run.
  Previously, the launcher class instance was created in Deploy::init().
  In SimCfg, there is a piece of code that prunes the builds / runs
  based on external switches such as `--build-only` and `--run-only`.
  The runs are pruned further when enabling GUI mode. Hence, rather than
  creating the launcher instance in Deploy::init() we create it in
  `create_launcher()` method which is invoked for all items in Scheduler
  class's init() when the final list of exactly what we want to run is
  known.

Signed-off-by: Srikrishna Iyer <sriyer@google.com>



======Commit: 72fc8733======
======Short Message======
[dv/kmac] change illegal_bins to default bins
======Full Message======
[dv/kmac] change illegal_bins to default bins

this PR changes the `illegal_bins` construct to a standard `default` in
the application interface covergroup, as otherwise it will throw errors
if we encounter some specific error scenarios.

Signed-off-by: Udi Jonnalagadda <udij@google.com>



======Commit: 17b4a6ca======
======Short Message======
[tlul] Add data integrity generation for host
======Full Message======
[tlul] Add data integrity generation for host

Partially addresses #6887.
This is needed for two reasons right now

1. hosts that do not generate data integrity (debug module)
2. hosts that will later generate data integrity but do not currently
   do so (ibex)

Signed-off-by: Timothy Chen <timothytim@google.com>



======Commit: 7252f175======
======Short Message======
[reggen] Remove swaccess and hwaccess from Register objects
======Full Message======
[reggen] Remove swaccess and hwaccess from Register objects

In the hjson format, you can specify swaccess and hwaccess for a
register. This is just a handy shortcut to avoid having to specify it
for all the constituent fields. It's not supposed to mean anything
further. Remove swaccess and hwaccess from the Register class to make
sure no-one is (mis)using them.

Some knock-on effects are:

  - The REGWEN checks in RegBlock.validate() are now a bit stronger,
    checking that there's exactly one field in a REGWEN register,
    covering bit 0. (And then using that field for the access checks
    that existed before)

  - The checks for sensible access types for hwext registers now get
    applied to the fields, rather than the register itself.

  - The list of registers that aren't HW-writable that we collect for
    FPV (hro_regs_list in fpv_csr.sv.tpl) now makes sure not to
    include any registers where some (but not all) fields are HW
    writable.

I've checked, and this patch has no effect on the generated RAL
model (with topgen.py -t).

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: bf0909ad======
======Short Message======
[reggen,dv] Don't specify rights for add_reg when constructing RAL
======Full Message======
[reggen,dv] Don't specify rights for add_reg when constructing RAL

This access control is supposed to be for when you have two different
address maps that have different views on the same registers. Here, we
were calculating a (somewhat bogus) value based on the default access
specified for fields in the hjson.

The fields' specific access rights get reflected separately: no need
to mess around here.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 7f370448======
======Short Message======
[dv/kmac] implement error testing
======Full Message======
[dv/kmac] implement error testing

This PR implements the last manual functional required for V2 status -
error testing.

Signed-off-by: Udi Jonnalagadda <udij@google.com>



======Commit: d1ae520f======
======Short Message======
[dv/clkmgr] Fix doc punctuation
======Full Message======
[dv/clkmgr] Fix doc punctuation

Fix a punctuation issue raised on a prior PR.

Signed-off-by: Guillermo Maturana <maturana@google.com>



======Commit: b72ccf0f======
======Short Message======
[dv/all] update scoreboard `csr_addrs` accesses
======Full Message======
[dv/all] update scoreboard `csr_addrs` accesses

This commit updates all IP scoreboards as well as the scoreboard
template to fix the path of `csr_addrs` as it has been moved into the
`dv_base_reg_block` class.

Signed-off-by: Udi Jonnalagadda <udij@google.com>



======Commit: 32552d3e======
======Short Message======
[dv/csr_utils] update unmapped_addr calculation
======Full Message======
[dv/csr_utils] update unmapped_addr calculation

Addresses #6594 and #6596.

This PR fixes how we calculate whether a RAL model has unmapped
addresses by utilizing a new method inside of `csr_utils_pkg` that
computes a list of address ranges corresponding to unmapped address
ranges in each register block.

This functionality is placed inside of `dv_base_reg_block`, as well as
the `get_csr_addrs` and `get_mem_addr_ranges` functions, as they make
more sense to be internal register block methods.

This approach provides some greater flexibility in
`tl_access_unmapped_addr()` in the `tl_errors_vseq`, as we can randomly
pick an unmapped address range to target, which also helps to simplify
things by a fair amount.

Signed-off-by: Udi Jonnalagadda <udij@google.com>



======Commit: 2d6bfd7c======
======Short Message======
[silicon_creator] Initialize argument when passing it to sigverify_mod_exp_ibex()
======Full Message======
[silicon_creator] Initialize argument when passing it to sigverify_mod_exp_ibex()

In unit tests, the `sig` argument isn't initialized when passed on; fix
fix that.

Triggered by the following GCC 11 warning:

```
In file included from ../sw/vendor/google_googletest/googletest/include/gtest/gtest.h:376,
                 from ../sw/vendor/google_googletest/googlemock/include/gmock/internal/gmock-internal-utils.h:47,
                 from ../sw/vendor/google_googletest/googlemock/include/gmock/gmock-actions.h:144,
                 from ../sw/vendor/google_googletest/googlemock/include/gmock/gmock.h:59,
                 from ../sw/device/silicon_creator/mask_rom/rsa_verify_unittest.cc:9:
../sw/device/silicon_creator/mask_rom/rsa_verify_unittest.cc: In member function ‘virtual void rsa_verify_unittest::{anonymous}::ModExp_BadExp_Test::TestBody()’:
../sw/device/silicon_creator/mask_rom/rsa_verify_unittest.cc:365:35: error: ‘empty’ may be used uninitialized [-Werror=maybe-uninitialized]
  365 |   EXPECT_EQ(sigverify_mod_exp_ibex(&bad_key, &empty, &empty), false);
      |             ~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from ../sw/device/silicon_creator/mask_rom/rsa_verify_unittest.cc:5:
/home/philipp/src/opentitan/sw/device/silicon_creator/mask_rom/rsa_verify.h:62:6: note: by argument 2 of type ‘const sigverify_rsa_buffer_t*’ {aka ‘const sigverify_rsa_buffer*’} to ‘bool sigverify_mod_exp_ibex(const sigverify_rsa_key_t*, const sigverify_rsa_buffer_t*, sigverify_rsa_buffer_t*)’ declared here
   62 | bool sigverify_mod_exp_ibex(const sigverify_rsa_key_t *key,
      |      ^~~~~~~~~~~~~~~~~~~~~~
../sw/device/silicon_creator/mask_rom/rsa_verify_unittest.cc:363:26: note: ‘empty’ declared here
  363 |   sigverify_rsa_buffer_t empty;
      |                          ^~~~~
```

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: 82bf88f0======
======Short Message======
[rv_plic/dif] Pass input data by value
======Full Message======
[rv_plic/dif] Pass input data by value

The argument `complete_data` of the `dif_plic_irq_complete()` function
is used as value, not as out param as it is documented. Adjust the
documentation to reflect that, and pass the argument by value.

This was detected by compiling with GCC11, which a maybe-uninitialized
warning in the PLIC unit test code, which causes the compilation to fail.

```
c++ -Isw/device/lib/dif/5fb29ed@@dif_plic_unittest@exe  -I../sw/device/lib/dif -I/home/philipp/src/opentitan -I/home/philipp/src/opentitan/build-out -fdiagnostics-color=always -pipe -D_FILE_OFFSET_BITS=64 -Wall -Winvalid-pch -Wnon-virtual-dtor -Wextra -Werror -std=c++14 -g -DHOST_BUILD -Wimplicit-fallthrough -Wswitch-default -Wno-error=unused-function -Wno-unused-parameter -Wno-sign-compare -Wno-missing-field-initializers -pthread -isystem../sw/vendor/google_googletest/googlemock -isystem../sw/vendor/google_googletest/googlemock/include -isystem../sw/vendor/google_googletest/googletest -isystem../sw/vendor/google_googletest/googletest/include -DMOCK_MMIO -MD -MQ 'sw/device/lib/dif/5fb29ed@@dif_plic_unittest@exe/dif_plic_unittest.cc.o' -MF 'sw/device/lib/dif/5fb29ed@@dif_plic_unittest@exe/dif_plic_unittest.cc.o.d' -o 'sw/device/lib/dif/5fb29ed@@dif_plic_unittest@exe/dif_plic_unittest.cc.o' -c ../sw/device/lib/dif/dif_plic_unittest.cc
In file included from ../sw/vendor/google_googletest/googletest/include/gtest/gtest.h:376,
                 from ../sw/device/lib/dif/dif_plic_unittest.cc:9:
../sw/device/lib/dif/dif_plic_unittest.cc: In member function ‘virtual void dif_plic_unittest::{anonymous}::IrqCompleteTest_NullArgs_Test::TestBody()’:
../sw/device/lib/dif/dif_plic_unittest.cc:345:34: error: ‘data’ may be used uninitialized [-Werror=maybe-uninitialized]
  345 |   EXPECT_EQ(dif_plic_irq_complete(nullptr, kTarget0, &data), kDifPlicBadArg);
      |             ~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from ../sw/device/lib/dif/dif_plic_unittest.cc:5:
/home/philipp/src/opentitan/sw/device/lib/dif/dif_plic.h:295:19: note: by argument 3 of type ‘const dif_plic_irq_id_t*’ {aka ‘const unsigned int*’} to ‘dif_plic_result_t dif_plic_irq_complete(const dif_plic_t*, dif_plic_target_t, const dif_plic_irq_id_t*)’ declared here
  295 | dif_plic_result_t dif_plic_irq_complete(const dif_plic_t *plic,
      |                   ^~~~~~~~~~~~~~~~~~~~~
../sw/device/lib/dif/dif_plic_unittest.cc:344:21: note: ‘data’ declared here
  344 |   dif_plic_irq_id_t data;
      |                     ^~~~
cc1plus: all warnings being treated as errors
```

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: e1d02b58======
======Short Message======
[flash] Detail flash configuration default in documentation
======Full Message======
[flash] Detail flash configuration default in documentation

- Since flash is a templated module, it can support a large set of configuration
- However, if the documentation is too generic, it becomes difficult for software / DV to follow.
- This document clarifies the default configuration used by the flash controller.

Signed-off-by: Timothy Chen <timothytim@google.com>



======Commit: 558945ca======
======Short Message======
[dv] Update intg alert names
======Full Message======
[dv] Update intg alert names

1. after intg alert is triggered, use `dut_init` instead of
`apply_reset` as `dut_init` also re-enables alert auto-rsp seq
2. changed the intg alert name if the IP doesn't use default alert name

Signed-off-by: Weicai Yang <weicai@google.com>



======Commit: 7bc9c7df======
======Short Message======
[fpv] Fix template
======Full Message======
[fpv] Fix template

Signed-off-by: ayann-snps <ayann@synopsys.com>



======Commit: 9fc66d1d======
======Short Message======
[dv, flash_ctrl] Fix the tl_intg error test
======Full Message======
[dv, flash_ctrl] Fix the tl_intg error test

Just had to fix the name of the alert signal used for tl intg failure.

Signed-off-by: Srikrishna Iyer <sriyer@google.com>



======Commit: 1cc1e2b0======
======Short Message======
[dv, flash_ctrl] Fix testplan with test names
======Full Message======
[dv, flash_ctrl] Fix testplan with test names

This commit fixes the testplan so that there are no unmapped tests when
the nightly is run.

Signed-off-by: Srikrishna Iyer <sriyer@google.com>



======Commit: 5311829c======
======Short Message======
[dv, flash_ctrl] Fix the intr test
======Full Message======
[dv, flash_ctrl] Fix the intr test

This commit fixes the failing interrupt test. The failure was due to a
newly added interrupt pin that was not connected to the
flash_ctrl_wrapper.sv which is maintained by the DV. In addition, there
are some very minor enhancements.

Signed-off-by: Srikrishna Iyer <sriyer@google.com>



======Commit: e0c52950======
======Short Message======
[i2c, rtl] Lint fixes
======Full Message======
[i2c, rtl] Lint fixes

Signed-off-by: Igor Kouznetsov <igor.kouznetsov@wdc.com>



======Commit: b81b7196======
======Short Message======
[pattgen, dv] Fix alert_test register scb error
======Full Message======
[pattgen, dv] Fix alert_test register scb error

Signed-off-by: Tung Hoang <hoang.tung@wdc.com>



======Commit: 1a906e82======
======Short Message======
[alert_handler/fpv] Revive testbenches for esc and ping timers
======Full Message======
[alert_handler/fpv] Revive testbenches for esc and ping timers

This revives the FPV testbenches for the escalationa and ping timers,
and fixes / aligns several assertions with the newest code state.

Signed-off-by: Michael Schaffner <msf@google.com>



======Commit: 6452c29a======
======Short Message======
[alert_handler] Duplicate escalation counter
======Full Message======
[alert_handler] Duplicate escalation counter

These counters are duplicated to harden the design against FI attacks.
In case the counters have an inconsistent state, the escalation FSM
goes into a terminal error state in which all countermeasures are asserted
simultaneously.

Signed-off-by: Michael Schaffner <msf@google.com>



======Commit: 0d13110c======
======Short Message======
[alert_handler] Duplicate accumulation counters
======Full Message======
[alert_handler] Duplicate accumulation counters

These counters are duplicated to harden the design against FI attacks.
In case the counters have an inconsistent state, the escalation timers
go into a terminal error state in which all countermeasures are asserted
simultaneously.

Signed-off-by: Michael Schaffner <msf@opentitan.org>



======Commit: 5d29dda5======
======Short Message======
Require VCS 2020.12-SP2
======Full Message======
Require VCS 2020.12-SP2

VCS 2020.12-SP2 contains fixes for critical issues in our verification
environment.

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: 9bb11ef5======
======Short Message======
[tlul] Drop the "quick fail" path from tlul_adapter_sram.sv
======Full Message======
[tlul] Drop the "quick fail" path from tlul_adapter_sram.sv

Before this change, the adapter responded immediately on the A channel
if the request would cause an internal error (assuming there was space
in the request FIFO). The logic is that there's no need to wait for a
grant from the SRAM side since we're not sending anything to the SRAM
anyway.

This patch removes that logic so now the TL interface is stalled
unconditionally if !gnt_i. This might shorten some timing paths a
bit (since we no longer have the combinatorial path from request to
response, unless there's one on the SRAM side). However, my actual
motivation is to be able to assert things like "if gnt_i is false, the
TL side will stall" without having to add special handling for the
error case.

There will be a small observable slow-down for responses that should
generate an error, but this doesn't seem like a big deal (it's an
error! We probably don't care how quickly it's reported!). Indeed,
making that sort of thing more uniform seems like a more secure
approach anyway since it might eliminate some timing channel.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 9b37c348======
======Short Message======
Upload all Vivado build artifacts on failure
======Full Message======
Upload all Vivado build artifacts on failure

When failing a Vivado build for Nexys Video or CW310 upload all build
output files as artifacts for local debugging.

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: 3f4e7e46======
======Short Message======
[sha3] Reporting SwSequence error consistently
======Full Message======
[sha3] Reporting SwSequence error consistently

In previous design, SHA3 may or may not report the error for double
process commands depending on the current SHA3 state. If SHA3 state sits
in `StAbsorb` state, double `process` commands were accepted and
triggered `keccak_process` twice. (It does not harm the sha3 hashing
operation.)

This commit introduces `processing` status bit to check more than one
`process` commands while the state is in `StAbsorb`. If additional
process command is received, regardless of the state, the SHA3 reports
an error with the error code `ErrSha3SwControl`.

Signed-off-by: Eunchan Kim <eunchan@opentitan.org>



======Commit: 40a76c66======
======Short Message======
[kmac] Fix DV environment
======Full Message======
[kmac] Fix DV environment

Changed the coverpoint bin name to accomodate the error code changes.

Signed-off-by: Eunchan Kim <eunchan@opentitan.org>



======Commit: b06f039c======
======Short Message======
[kmac] Add Error handling section in the spec
======Full Message======
[kmac] Add Error handling section in the spec

Signed-off-by: Eunchan Kim <eunchan@opentitan.org>



======Commit: 6c31b460======
======Short Message======
[kmac] Add Error checking logic
======Full Message======
[kmac] Add Error checking logic

This commit combines scattered error checking logics into a single
module. Still a few errors are checked in the submodules and reported
from there.

This is the follow-up commit for issue #6370 #6635 #6638

Signed-off-by: Eunchan Kim <eunchan@opentitan.org>



======Commit: 7cbebc2e======
======Short Message======
[prim_fifo_async] Fix a width calculation issue in case of Depth = 1
======Full Message======
[prim_fifo_async] Fix a width calculation issue in case of Depth = 1

Signed-off-by: Michael Schaffner <msf@google.com>



======Commit: e7173ccb======
======Short Message======
[pwm] Fix an asynchronous reset issue in pwm_chan
======Full Message======
[pwm] Fix an asynchronous reset issue in pwm_chan

Signed-off-by: Michael Schaffner <msf@google.com>



======Commit: cb201339======
======Short Message======
[dv, flash_ctrl] Fix the smoke test
======Full Message======
[dv, flash_ctrl] Fix the smoke test

- The smoke test writes and reads back a random chunk of memory within
the flash.
- The start address and the randomized number of words is bus-aligned
(i.e. 32 bits) and not flash word aligned (64-bits).
- Between each randomized configuration, the flash mem is invalidated.
This means if we write to a flash mem half word, while leaving the other
half word as Xs, that causes an X problem on reads, because flash ctrl
reads in the whole word, not just the half word.
This commit fixes that problem.

Signed-off-by: Srikrishna Iyer <sriyer@google.com>



======Commit: c56b59d0======
======Short Message======
[csrng/rtl] diversification value for prod mode
======Full Message======
[csrng/rtl] diversification value for prod mode

A new random string constant is being passed to be xor'ed with the input seed.
This will make the production mode look different than debug or other modes.

Signed-off-by: Mark Branstad <mark.branstad@wdc.com>



======Commit: af0f4943======
======Short Message======
[dv/top_level] Fix a dif test typo
======Full Message======
[dv/top_level] Fix a dif test typo

This PR fixes a small typo from chip_dif_tests.hjson file.

Signed-off-by: Cindy Chen <chencindy@opentitan.org>



======Commit: f37746d6======
======Short Message======
[dv/mem_bkdr_util] Separate error injection
======Full Message======
[dv/mem_bkdr_util] Separate error injection

This PR separates error injection method to a separate function.

Signed-off-by: Cindy Chen <chencindy@opentitan.org>



======Commit: dc5b9a9e======
======Short Message======
[otbn] Document data integrity measures
======Full Message======
[otbn] Document data integrity measures

Start the documentation of security features in OTBN with a
documentation of its data integrity measures. This commit adds two new
sections to the documentation:

- A high-level security feature overview, i.e. the "sales pitch."
- A more detailed description of how the features are implemented in the
  Design Details section.

The documentation is a starting point and we will need to add more
features and refine them as we move on with specification and
implementation.

Fixes #4007

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: 53beeee4======
======Short Message======
[dv/otp_ctrl] Minor improvement on OTP_CTRL testbench
======Full Message======
[dv/otp_ctrl] Minor improvement on OTP_CTRL testbench

1. Remove redundant clear_otp_memory: with static queue and associative
array to store used address, we can remove clear_otp_memory in
stress_all_with_rand_reset test.

2. Add a lc_transition req before running dai_error_test to add more
possibility for lc program write-blank-error.

Signed-off-by: Cindy Chen <chencindy@opentitan.org>



======Commit: 57fb5512======
======Short Message======
[otbn] Update block diagram for RND/URND
======Full Message======
[otbn] Update block diagram for RND/URND

Fixes #6458

Signed-off-by: Greg Chadwick <gac@lowrisc.org>



======Commit: d077161e======
======Short Message======
[otbn,dv] Fix early exits in otbn_base_vseq::run_otbn() on reset
======Full Message======
[otbn,dv] Fix early exits in otbn_base_vseq::run_otbn() on reset

If the block gets reset, we want run_otbn() to exit immediately. In
practice, this already happens (because csr_wr and csr_spinwait both
exit immediately). But we make the early exit explicit to avoid
checking the end address: that check will fail if there is a reset in
the middle of the first execution of a binary.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 62cdb5c1======
======Short Message======
[pwm, rtl] Add PWM RTL and some updates
======Full Message======
[pwm, rtl] Add PWM RTL and some updates

  - Fix issue #6526
  - Support standard blink mode and heartbeat mode of PWM IP
  - Updates for PR #6786 (fix some code style issues and update the cio_pwm_en_o signal)
  - Add some rtl updates for heartbeat mode
  - Update some logic operators in ternaries
  - Fix a bit width issue

Signed-off-by: Muqing Liu <muqing.liu@wdc.com>



======Commit: 276b5d6b======
======Short Message======
[dv] check alert after tl intg error occurs
======Full Message======
[dv] check alert after tl intg error occurs

Once we get the tl intg_err, check the cooresponding alert for a few
times as it should be a fatal alert which keeps sending until reset
then, issue a reset and restart the iteration

Signed-off-by: Weicai Yang <weicai@google.com>



======Commit: b915a39c======
======Short Message======
[dv, util] Make poll_for_stop() opt-in
======Full Message======
[dv, util] Make poll_for_stop() opt-in

The `poll_for_stop()` method in `dv_utils_pkg` provides a mechanism to
kill the simulation more gracefully on hangs. It looks for the presence
of a file called `dv.stop` every 1us in the rundir which the user can
'touch' if it needs to be killed.

This mechanism was added because historically, it was not always
reliable to kill a sim by hitting `CTRL-C`, especially with waves which
would get corrupt on `CTRL-C`. The other reason was to be able to kill a
specific sims if they are deemed broken already while allowing others to
continue to run.

In any case, by allowing that logic by default introduces a pretty big
bottleneck - it consumes a whopping 54% of simulation runtime,
especially for UART which has periods of idle due to slowness of the
baud rate. In this commit, the logic by default is turned off. If this
feature is needed, it can be turned on by passing `--run-opts
"+poll_for_stop=1"` on the command line.

The other change is to increase the polling interval to 10us.

Signed-off-by: Srikrishna Iyer <sriyer@google.com>



======Commit: 3d7862d3======
======Short Message======
[spi_device/dv] reduce simtime for smoke test
======Full Message======
[spi_device/dv] reduce simtime for smoke test

Fix iteration number and reduce number of TX/RX transactions
simtime should be < 5s

Signed-off-by: Weicai Yang <weicai@google.com>



======Commit: 987f307e======
======Short Message======
[dv/clkmgr] Update docs and minor refactor
======Full Message======
[dv/clkmgr] Update docs and minor refactor

Add coverpoints in the testplan.
Remove extclk_sel_regwen from clkmgr_if.
Fix the type of extclk_sel in clkmgr_if.
Replace clkmgr_vif.wait_clks by clk_rst_vif.wait_clks.
Simplify the constraint for lc_tx_t variable.
Start monitor_ip_clk_en task in clkmgr_scoreboard.

Signed-off-by: Guillermo Maturana <maturana@google.com>



======Commit: 6fa343ea======
======Short Message======
[i2c, rtl] Lint Fixes
======Full Message======
[i2c, rtl] Lint Fixes

Fixes to Ascent and Verilator errors and warnings

Signed-off-by: Igor Kouznetsov <igor.kouznetsov@wdc.com>



======Commit: 531c7457======
======Short Message======
[sw/silicon_creator] Rename kErrorSigverifyInvalidArgument to kErrorSigverifyBadEncodedMessage
======Full Message======
[sw/silicon_creator] Rename kErrorSigverifyInvalidArgument to kErrorSigverifyBadEncodedMessage

Signed-off-by: Alphan Ulusoy <alphan@google.com>



======Commit: 080f047f======
======Short Message======
[sw/silicon_creator] Change return type of `sigverify_mod_exp_ibex` to rom_error_t
======Full Message======
[sw/silicon_creator] Change return type of `sigverify_mod_exp_ibex` to rom_error_t

Signed-off-by: Alphan Ulusoy <alphan@google.com>



======Commit: b344ed76======
======Short Message======
[sw/silicon_creator] Fix sigverify filenames
======Full Message======
[sw/silicon_creator] Fix sigverify filenames

Signed-off-by: Alphan Ulusoy <alphan@google.com>



======Commit: 80738678======
======Short Message======
[dv/edn_reset] Fix apply_reset to concurrently deassert resets
======Full Message======
[dv/edn_reset] Fix apply_reset to concurrently deassert resets

Previous commit only take care of deassert all resets if we have edn
reset, this PR fix it to deasserts all dut resets if we do not have edn
reset.

Signed-off-by: Cindy Chen <chencindy@opentitan.org>



======Commit: 9a8d9b7c======
======Short Message======
[otbn,dv] Add a check for concurrent run_otbn executions
======Full Message======
[otbn,dv] Add a check for concurrent run_otbn executions

This shouldn't ever happen. The check here will make it much easier to
debug what's going on if it does.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: dc9056de======
======Short Message======
[otbn,dv] Teach ISS wrapper to handle resets
======Full Message======
[otbn,dv] Teach ISS wrapper to handle resets

Without this, you get weird errors where OTBN gets resets half-way
through a stall and a consistency check in the OtbnTraceChecker gets
confused because it sees a stall at one address, followed by an
execution at another.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 1aa8ba75======
======Short Message======
[sw/silicon_creator] Update manifest fields
======Full Message======
[sw/silicon_creator] Update manifest fields

This change:
- Removes `extension_*`, `reserved*`, `usage_constraints`,
`lockdown_info`, `image_version`, and
- Adds `image_major_version`, `image_minor_version`, `binding_value`,
and `max_key_version`.

Fixes #5953 #5954

Signed-off-by: Alphan Ulusoy <alphan@google.com>



======Commit: 1d7ac00b======
======Short Message======
[aes/dv] Fixed some minor bugs after re-enabling back to back transactions
======Full Message======
[aes/dv] Fixed some minor bugs after re-enabling back to back transactions

Signed-off-by: Rasmus Madsen <rasmus.madsen@wdc.com>



======Commit: c6feb6ec======
======Short Message======
[dv, mem_bkdr_util] Address #6850 comments
======Full Message======
[dv, mem_bkdr_util] Address #6850 comments

This commit address 2 comments:
- Add enum that encompasses `prim_secded_e` and adds parity and none to
it, so that we can set the error detection scheme as a single enum var.
- Macrofy the repeated addr and data width checks

Signed-off-by: Srikrishna Iyer <sriyer@google.com>



======Commit: 9208353f======
======Short Message======
[dv/hmac] Fix alert_test register scb error
======Full Message======
[dv/hmac] Fix alert_test register scb error

Design recently added an `alert_test` register. In stress_all_with_rand_reset
test, we are reading all CSRs. This PR adds `alert_test` to the list of
valid registers.

Signed-off-by: Cindy Chen <chencindy@opentitan.org>



======Commit: fd2d4ea5======
======Short Message======
[dv/otp_ctrl] Add more functional coverage to otp_ctrl
======Full Message======
[dv/otp_ctrl] Add more functional coverage to otp_ctrl

This PR adds the following functional coverages to OTP_CTRL:
1. Error code coverage
2. Status coverage
3. CSR read/write after alert happened
4. LC_escalation On during dai busy

Signed-off-by: Cindy Chen <chencindy@opentitan.org>



======Commit: 713fb3e8======
======Short Message======
[rom_ctrl] Remove a bogus TODO comment
======Full Message======
[rom_ctrl] Remove a bogus TODO comment

When I wrote this, I imagined that a bus access when the ROM checker
was running should result in an error response. What we've ended up
with is that the bus access will just stall until the checker is done,
which seems like a perfectly reasonable behaviour. Let's just keep
that!

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: c5adef69======
======Short Message======
[rom_ctrl,lint] Fix AscentLint error about unused bits
======Full Message======
[rom_ctrl,lint] Fix AscentLint error about unused bits

The "&{1'b0, ...}" construct doesn't work with AscentLint because it
checks for unused bits after constant propagation has thrown
everything away.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 0a2740f1======
======Short Message======
[i2c, dv] Fix csr_* and smoke test for I2C
======Full Message======
[i2c, dv] Fix csr_* and smoke test for I2C

Signed-off-by: Tung Hoang <hoang.tung@wdc.com>



======Commit: 7baa598c======
======Short Message======
[dv, chip] Enable UNR flow
======Full Message======
[dv, chip] Enable UNR flow

This sets up the UNR flow for the chip. Though, it does not work due to
errors thrown by the UNR tool. I am working with SNPS to resolve that.

Signed-off-by: Srikrishna Iyer <sriyer@google.com>



======Commit: 9d0b88cb======
======Short Message======
[doc] Fix the functional coverage requirements
======Full Message======
[doc] Fix the functional coverage requirements

Previously, the coverpoints and crosses were computed separately and
averaged to show the final covergroup coverage score. To illustrate with
an example, if a covergroup had a cp with 90% coverage and cr with 50%,
it would compute the total score as 90+50/2 = 70%. This could be
misleading, becuase the cross could have orders of magnitude more bins
to cover than the coverpoint. With `-group ratio` enabled in the
previous commit, the coverge score is computed more realistically as
total bins covered in all coverpoints and crosses / total bins in all
coverpoints and crosses, which gives a more realistic picture of the
remaining work to be done. But the side effect of that is the tool no
longer provides a separate score for coverpoints and crosses. Hence, we
need to update the V2 and V3 functional coverage criteria to look at the
overall score instead.

Signed-off-by: Srikrishna Iyer <sriyer@google.com>



======Commit: 95f91c16======
======Short Message======
[topgen] Fix hex chunking code
======Full Message======
[topgen] Fix hex chunking code

The previous version didn't work correctly if a block happened to
start with a leading zero. The rewrite works with integers internally
instead of hex strings, which makes things rather simpler (and fixes
the bug).

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 0e8de617======
======Short Message======
[dv] Add TL integrity error test for CSR
======Full Message======
[dv] Add TL integrity error test for CSR

Create 2 threads. In one thread, call csr_rw to do normal TL access. In
the other, wait for some delay and issue a TL access with integrity
error

Signed-off-by: Weicai Yang <weicai@google.com>



======Commit: d303e90a======
======Short Message======
[doc/pwrmgr] Fix pwrmgr and rstmgr doc typos
======Full Message======
[doc/pwrmgr] Fix pwrmgr and rstmgr doc typos

The non-typo change is to remove a redundant mention that the
power_down bit in the control register is active low, since the
values clearly show that.

Signed-off-by: Guillermo Maturana <maturana@google.com>



======Commit: e739b3cd======
======Short Message======
[dv/otp_ctrl] Fix two typo
======Full Message======
[dv/otp_ctrl] Fix two typo

Two typos found in regression:
1. A `)` was placed in wrong place, that ceil function does not work.
2. With the new wr_dai, otp_init should collect check if wr_data is
actually executed.

Signed-off-by: Cindy Chen <chencindy@opentitan.org>



======Commit: b434dbcd======
======Short Message======
[topgen/reggen] Regenerate registers and top to fix CI
======Full Message======
[topgen/reggen] Regenerate registers and top to fix CI

Signed-off-by: Michael Schaffner <msf@opentitan.org>



======Commit: 9c741f2e======
======Short Message======
[lc_ctrl/dif] Update error and alert codes
======Full Message======
[lc_ctrl/dif] Update error and alert codes

This adds add missing error codes, alerts and set/get functions for the
vendor-specific OTP test register.

Signed-off-by: Michael Schaffner <msf@opentitan.org>



======Commit: d5977581======
======Short Message======
[script/dvsim] Update output folder
======Full Message======
[script/dvsim] Update output folder

Fix missing assertion coverage from the internal tool.
Should have no effect in the public script.

Signed-off-by: Cindy Chen <chencindy@opentitan.org>



======Commit: e8a7beec======
======Short Message======
[dv/edn_reset] Fix stress_all_with_rand_reset error
======Full Message======
[dv/edn_reset] Fix stress_all_with_rand_reset error

This PR fixes some error when apply_reset() task deasserts edn_reset and
dut_reset at different times.
The issue is: stress_all_with_rand_reset sequence tries to kill child
thread as soon as dut_reset is deasserted. If we deasserts edn_reset
later then dut_reset, then child thread might execute some tl_sequence,
and eventually causes some uvm_error when kill the child sequence.

Signed-off-by: Cindy Chen <chencindy@opentitan.org>



======Commit: da5ed154======
======Short Message======
[reggen] Optionally expose register interface in reg2hw signal
======Full Message======
[reggen] Optionally expose register interface in reg2hw signal

If a block sets expose_reg_if in the hjson, the generated reg2hw
structure will contain an extra field called "reg_if", which has the
register interface signals. This could be useful for things like
checksumming writes over the interface. For example, OTBN is
considering a register that checksums all the writes from Ibex, in
order to beef up data integrity checking between Ibex and OTBN (see
issue #6175). This could also be used for more elaborate things like
port knocking schemes.

This exposes all the signals that come from the TLUL interface:
reg_we, reg_re, reg_addr, reg_wdata and reg_be. It doesn't expose
reg_rdata and reg_error because we don't really have a use for that at
the moment and it causes lint problems (where it looks like a
combinatorial loop between reg2hw and hw2reg).

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: b37566f8======
======Short Message======
[spi_device/dv] fix unmapped tests
======Full Message======
[spi_device/dv] fix unmapped tests

Signed-off-by: Weicai Yang <weicai@google.com>



======Commit: a9710074======
======Short Message======
[dv/kmac] fix CFG.entropy_ready exclusion
======Full Message======
[dv/kmac] fix CFG.entropy_ready exclusion

This CSR field needs to be not written at all in any CSR test, otherwise
it has the potential to cause a whole assortment of strange issues
during simulation due to it kick-starting the entropy FSM.

Signed-off-by: Udi Jonnalagadda <udij@google.com>



======Commit: 1dd05e21======
======Short Message======
[dv/otp_ctrl] Fix new changes in mem_bkdr_utils
======Full Message======
[dv/otp_ctrl] Fix new changes in mem_bkdr_utils

Mem_bkdr_utils only can read up to the memory line width. For example,
OTP memory is 16 bits width, so we can only call read16 but not read32.

This PR separate read32 to two read16.

Signed-off-by: Cindy Chen <chencindy@opentitan.org>



======Commit: a8854901======
======Short Message======
[sw/silicon_creator] Introduce the sec_mmio module
======Full Message======
[sw/silicon_creator] Introduce the sec_mmio module

The sec_mmio module is responsible for tracking critical register
valuesfor an initialized sec_mmio_ctx_t context, and provides
a mechanism to check expected values and trigger shutdown escalation on
fault detection.

Signed-off-by: Miguel Osorio <miguelosorio@google.com>



======Commit: fefddd44======
======Short Message======
[dv/otp_ctrl] OTP write_blank_error support [PART6]
======Full Message======
[dv/otp_ctrl] OTP write_blank_error support [PART6]

This PR cleans up the stress_all and stress_all_with_rand_reset
sequences to support write_blank_error.
To avoid previous sequence dai_wr affects next sequence, this PR wipes
the OTP memory after one sequence finishes running.

Signed-off-by: Cindy Chen <chencindy@opentitan.org>



======Commit: 359c126b======
======Short Message======
[reggen] Make spacing uniform and simplify comments in reg_top
======Full Message======
[reggen] Make spacing uniform and simplify comments in reg_top

This is a minor "tidy-up" commit. The idea is that this commit makes
whitespace a bit more uniform, and simplifies the rules about what
comments get emitted. To review this patch, look at the changes to
reg_top.sv.tpl (which should hopefully be obviously right); the rest
of the diff is autogenerated.

The following commit will refactor the code in reg_top.sv.tpl itself.
This is less obviously correct, but *that* patch won't have any diffs
in the autogenerated code.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: ba0bd32f======
======Short Message======
[reggen] Fix indentation in ip_block.py
======Full Message======
[reggen] Fix indentation in ip_block.py

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 297daa7b======
======Short Message======
[dv/otp_ctrl] Fix regression issues
======Full Message======
[dv/otp_ctrl] Fix regression issues

This PR fixes wirte_blank_errors change related regression issue:
1). Move collect used address in `wr_dai` task.
2). Wipe memories after ECC backdoor injections in otp_init_fail test.
3). Mark DAI access to HW digest as invalid operation in
otp_partition_walk.

Signed-off-by: Cindy Chen <chencindy@opentitan.org>



======Commit: 2379161c======
======Short Message======
[rom_ctrl,doc] Fix up signal names in docs to match RTL
======Full Message======
[rom_ctrl,doc] Fix up signal names in docs to match RTL

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 60645c1e======
======Short Message======
Minor tweaks for bleeding-edge mypy
======Full Message======
Minor tweaks for bleeding-edge mypy

In CI, we track the latest releases of all our Python dependencies.
Mypy just got a new release that gets downloaded by pip3 (version
0.901). Looking at the release log at http://mypy-lang.org/, it looks
like they no longer bundle quite as many type stubs as part of the
package.

In particular, the types for the tabulate package have been split out
into a "types-tabulate" package. Depending on that in
python-requirements should sort that out. Similarly, the dataclasses
module (a transient dependency of libcst for Python < 3.7) needs a
types-dataclasses package to avoid some seriously mysterious error
messages.

There also seems to be a small change to where the magic "ignore" line
needs to live when importing pyyaml. Meh, ok...

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: b14d656a======
======Short Message======
[otbn,dv] Teach otbn_memutil to track expected end address
======Full Message======
[otbn,dv] Teach otbn_memutil to track expected end address

RTL simulations need to get hold of the expected end address (a
symbol) to figure out whether the end address they've seen matches or
not.

This patch adds an OnElfLoaded() hook to DpiMemUtil and implements it
in OtbnMemUtil() to grab the relevant symbol. Nothing uses the result
yet, but it's accessible by calling OtbnMemUtil::GetExpEndAddr() (from
C++) or OtbnMemUtilGetExpEndAddr() (over DPI from SystemVerilog).

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 49e9ecc0======
======Short Message======
[otbn,dv] Dump an "expected end address" symbol from the RIG
======Full Message======
[otbn,dv] Dump an "expected end address" symbol from the RIG

The random instruction generator currently tries hard not to generate
any invalid instructions or trigger any errors on the processor. We're
going to start generating errors soon, but we don't want to do so
"accidentally".

To help us avoid that, we add an "_expected_end_addr" symbol to the
generated ELF file. A followup commit will teach the simulator to spot
that address and generate an "oh no! the world is broken!" error if
simulation stops on the wrong address.

Note that this change won't give us any extra confidence in the RTL,
but it should make it easier to debug if we make a mistake in the RIG
and it's not generating quite the program paths we thought it was.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: a538cf7e======
======Short Message======
[ci] Avoid a spurious warning from grep in the non-ASCII check
======Full Message======
[ci] Avoid a spurious warning from grep in the non-ASCII check

We've got a symlink to a directory checked in to the repository (it's
hw/ip/aes/pre_syn/python). This appears in the "git ls-files" list,
but grep then gets a bit confused about being asked to search through
a directory. Use "-d skip" to tell it to silently ignore the target of
the symlink.

Also, fix the message in quick-lint.sh: apparently, I was too eager
with my copy+paste!

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 2fd90c11======
======Short Message======
[dv, dv_utils_pkg] Fix common int typedefs
======Full Message======
[dv, dv_utils_pkg] Fix common int typedefs

- A very small change to the integer typedefs that have a missing `_t`
suffix mandated by our style guide.

Signed-off-by: Srikrishna Iyer <sriyer@google.com>



======Commit: 56b4bdff======
======Short Message======
[rom_ctrl] Remove an outdated TODO comment
======Full Message======
[rom_ctrl] Remove an outdated TODO comment

When I was bringing this code up, the RTL didn't quite match the
original paper. Michael fixed the RTL in the meantime and I presumably
switched the Python around without removing the todo comment: oops!

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: ed505024======
======Short Message======
[uart/dv] Fix unmapped test
======Full Message======
[uart/dv] Fix unmapped test

Updated testplan to add an item for long_b2b_transfer

Signed-off-by: Weicai Yang <weicai@google.com>



======Commit: 738c0561======
======Short Message======
[dv/otp_ctrl] write_blank_err [PART4]
======Full Message======
[dv/otp_ctrl] write_blank_err [PART4]

This PR fixes the OTP_CTRL_dai_errors. The write-blank error will
trigger OTP ECC errors. So in this PR, we modify the sequence:
1. Will always read out the memory after write.
2. Will not do any background check or otp_init because ECC
uncorrectable error.

On scb side, we will use backdoor read to read out ECC and memory after
a write-blank-error.

Signed-off-by: Cindy Chen <chencindy@opentitan.org>



======Commit: d56fd451======
======Short Message======
[dv/otp_ctrl] support write_blank_error [PART5]
======Full Message======
[dv/otp_ctrl] support write_blank_error [PART5]

This PR fixes a corner case where tb might write sw digests more than
once, which might cause a unwanted write_blank_error in dai_lock_vseq.sv

Signed-off-by: Cindy Chen <chencindy@opentitan.org>



======Commit: 7cab9fc3======
======Short Message======
[keymgr/dv] Fix unmapped tests
======Full Message======
[keymgr/dv] Fix unmapped tests

Signed-off-by: Weicai Yang <weicai@google.com>



======Commit: 5f70428e======
======Short Message======
[prim_lfsr] Fix spyglass lint warnings
======Full Message======
[prim_lfsr] Fix spyglass lint warnings

Signed-off-by: Michael Schaffner <msf@opentitan.org>



======Commit: 0909c4fc======
======Short Message======
[prim_clock_gating] Target 7series Xilinx devices
======Full Message======
[prim_clock_gating] Target 7series Xilinx devices

Vivado warns about the BUFGCE module being instantiated with the wrong
device type. Actually, we don't specify any device and it seems that
SIM_DEVICE is just set to ULTRASCALE by default instead of to the actual
device family we're using.

This warning per se isn't troublesome, but we still want to get rid of
it, as it hides more important warnings.

This PR specifies 7 series devices, which we're using. We could also
suppress the warning, but then we potentially have Xilinx simulation
mismatches (not that anybody ever does netlist simulations for FPGA
builds, AFAIK).

Vivado message:

```
[Netlist 29-345] The value of SIM_DEVICE on instance 'top_earlgrey/u_clkmgr_aon/u_io_cg/i_cg/gen_xilinx.u_impl_xilinx/gen_gate.u_bufgce' of type 'BUFGCE' is 'ULTRASCALE'; it is being changed to match the current FPGA architecture, '7SERIES'. For functional simulation to match hardware behavior, the value of SIM_DEVICE should be changed in the source netlist.
```

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: b1ddd9b3======
======Short Message======
[dv/otp_ctrl] Clean up write-blank-errors in overflowed addresses
======Full Message======
[dv/otp_ctrl] Clean up write-blank-errors in overflowed addresses

This PR cleans up the write-blank-errors in dai_lock_vseq. We want to
use a separate test to check write-blank-errors as previously mentioned
- it will cause fatal alert.

CSR dai address is 32 bits wide but design only take 11 bits. Address
values larger than 11'b1 could cause write-blank-error.
This PR tries to solve this issue.

Signed-off-by: Cindy Chen <chencindy@opentitan.org>



======Commit: 0e0d3397======
======Short Message======
[dv/aon_timer] Temp fix regression error
======Full Message======
[dv/aon_timer] Temp fix regression error

This PR temp fixes assertion error in nightly regression.
Filed issue #6821.

Signed-off-by: Cindy Chen <chencindy@opentitan.org>



======Commit: 9632c45b======
======Short Message======
[dv/otp_ctrl] Fix partition_walk sw digest write blank error
======Full Message======
[dv/otp_ctrl] Fix partition_walk sw digest write blank error

This PR fixes the error from partition walk. We used to write each 32
bits for sw partitions, and no check required. But for the new write
blank error, they check ecc error before writing, so a potential write
blank error could happen.

Signed-off-by: Cindy Chen <chencindy@opentitan.org>



======Commit: 12ef0851======
======Short Message======
[dv/otp_ctrl] align write_blank_error[PART2]
======Full Message======
[dv/otp_ctrl] align write_blank_error[PART2]

This PR moves the base tests for all extended sequence from
`otp_ctrl_dai_errs` to `otp_ctrl_dai_lock`.
This is because the new `otp_ctrl_write_blank_err` can trigger fatal
alert, and entire otp_ctrl will go to terminal state. So we do not use
that for base class anymore.

Signed-off-by: Cindy Chen <chencindy@opentitan.org>



======Commit: 7cd89c64======
======Short Message======
[keymgr/dv] Fix edn req assertion
======Full Message======
[keymgr/dv] Fix edn req assertion

make the checker of 1st edn req more robust
fix the checker of 2nd req to use rising edge

Signed-off-by: Weicai Yang <weicai@google.com>



======Commit: 8ebb832d======
======Short Message======
[dv] fix a typo in tl_device_access_types_testplan
======Full Message======
[dv] fix a typo in tl_device_access_types_testplan

Signed-off-by: Weicai Yang <weicai@google.com>



======Commit: 22bdcfcc======
======Short Message======
[dv/otp_ctrl] align write_blank_err [PART1]
======Full Message======
[dv/otp_ctrl] align write_blank_err [PART1]

The new write_blank_error will write to OTP memory until the
write_blank_error is triggered. This partially written OTP memories can
trigger check failures or init failure.
This PR cleans up otp_dai_lock_vseq and avoid write_blank_err in these
tests.

For lc_program to issue valid values, this PR reuses the function from
lc_ctrl dv environment. To avoid duplicated code, this PR moves the
common pkg functions to a separate file, and packed it with a separate
core file.

Signed-off-by: Cindy Chen <chencindy@opentitan.org>



======Commit: 240fb408======
======Short Message======
[chip, testplan] Update chip testplan
======Full Message======
[chip, testplan] Update chip testplan

- This commit addresses the comments and updates from the testplan
review meeting held on 5/24/2021.
- The meeting notes are below:
https://docs.google.com/document/d/1OhPP-HjciwKpIh0wWt1xqPqPf0Y0powmmww6xekwMeE/

- Updated alert handler, kmac sections to reflect the latest design
- Added chip_data_integrity test
- Other minor fixes

Signed-off-by: Srikrishna Iyer <sriyer@google.com>



======Commit: 23e0f3f0======
======Short Message======
[i2c, rtl] Fixes to Lint Errors and Changes to Clock Stretching by Target
======Full Message======
[i2c, rtl] Fixes to Lint Errors and Changes to Clock Stretching by Target

1. Fixed Lint errors related to FIFO depth
2. Modified clock stretching by target after matching an address:
   - en_addr_tx and stop_tx for transmit (read) transactions
   - en_addr_acq and stop_acq for acquire (write) transactions
3. Disabled clock stretching by target after transmitting or acquiring a data byte

Signed-off-by: Igor Kouznetsov <igor.kouznetsov@wdc.com>



======Commit: 3dcd4a49======
======Short Message======
[sw/silicon_creator] Remove unused OTP entries from error.h.
======Full Message======
[sw/silicon_creator] Remove unused OTP entries from error.h.

Signed-off-by: Alphan Ulusoy <alphan@google.com>



======Commit: 0902d1c0======
======Short Message======
[dv/sram] fix unmapped test names
======Full Message======
[dv/sram] fix unmapped test names

this PR is the equivalent of #6799, it fixes the test names in the
testplan for both SRAM variants such that no tests are unmapped in
nightly regressions.

Signed-off-by: Udi Jonnalagadda <udij@google.com>



======Commit: 308ca993======
======Short Message======
[dv/kmac] fix unmapped test issue
======Full Message======
[dv/kmac] fix unmapped test issue

this PR fixes a bunch of unmapped test issues in the nightly regression.
this is done by using the base IP name `kmac` for all of the automated
tests, but using the KMAC variant name for all manually added tests.

Signed-off-by: Udi Jonnalagadda <udij@google.com>



======Commit: c6055260======
======Short Message======
[dv/sram] fix UNR .el file pathname
======Full Message======
[dv/sram] fix UNR .el file pathname

Signed-off-by: Udi Jonnalagadda <udij@google.com>



======Commit: 0a322446======
======Short Message======
Revert "python-requirements.txt: Bump the supported version of meson"
======Full Message======
Revert "python-requirements.txt: Bump the supported version of meson"

This reverts commit 54da889ea56ce4e23182e4c42561bbeb6b0cd26a because it
causes all SW unit tests to be skipped in CI and freshly built
containers.

Fixes #6794

Signed-off-by: Alphan Ulusoy <alphan@google.com>



======Commit: cd10ba60======
======Short Message======
[otbn,dv] Improve error message on unknown encoding
======Full Message======
[otbn,dv] Improve error message on unknown encoding

This shouldn't ever happen, but a more helpful error message made
debugging things rather easier.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 7b74d1d5======
======Short Message======
[otbn,dv] Rename "fixed" covergroup to "ecall"
======Full Message======
[otbn,dv] Rename "fixed" covergroup to "ecall"

Since ECALL is the only instruction that uses this (pseudo-)encoding,
let's name it more descriptively.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 9a25d335======
======Short Message======
[otbn,doc] Fix doc for flag group update in bignum boolean ops
======Full Message======
[otbn,doc] Fix doc for flag group update in bignum boolean ops

We changed the encoding and semantics to allow the user to specify the
flag group that would be updated back in 2398dc1, but it seems that I
missed the corresponding documentation update. Oops!

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 63134b29======
======Short Message======
[otbn] Fix path to simulation results
======Full Message======
[otbn] Fix path to simulation results

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: 266de857======
======Short Message======
[prim_otp] Rework generic model to match new error behavior
======Full Message======
[prim_otp] Rework generic model to match new error behavior

Signed-off-by: Michael Schaffner <msf@opentitan.org>



======Commit: c95652a1======
======Short Message======
[otp_ctrl] Change behavior of write blank check error
======Full Message======
[otp_ctrl] Change behavior of write blank check error

Signed-off-by: Michael Schaffner <msf@opentitan.org>



======Commit: 04ed12f9======
======Short Message======
[doc] Fix version of go and cmake dependencies
======Full Message======
[doc] Fix version of go and cmake dependencies

The mundane library requires go 1.11, even though they document 1.10 as
minimum requirement (https://github.com/google/mundane/issues/31).

The same is true for their Cmake dependency, which is documented as
2.8.11, but 3.3 is required.

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: f9e43d46======
======Short Message======
[chiplevel/padring] Correct mio_in_raw connection width for FPGA targets
======Full Message======
[chiplevel/padring] Correct mio_in_raw connection width for FPGA targets

Fix #6774

This did not affect the ASIC target as the MIO array has no stubbed pads
in that case.

Signed-off-by: Michael Schaffner <msf@opentitan.org>



======Commit: c1747e3d======
======Short Message======
[dv/kmac] cycle accurate model bugfixes - pt 5
======Full Message======
[dv/kmac] cycle accurate model bugfixes - pt 5

this PR makes more fixes to the cycle accurate model, this time relating
to the EDN entropy interface - specifically, overhauling how we time the
first round of a keccak hash.

Some related fixes have also been made to the base sequence, with how we
calculate a "static" entropy mode that is then applied to each hash
iteration.

Signed-off-by: Udi Jonnalagadda <udij@google.com>



======Commit: 32170bac======
======Short Message======
[chip, cov] Update / fix the chip cov model
======Full Message======
[chip, cov] Update / fix the chip cov model

- Remove clkmgr, pwrmgr and rstmgr from full coverage collection (these
are now verified at the IP level)
- Collect coverage on AST IOs
- Collect full coverage on sensor_ctrl IP since it is not verified at
the IP level

Signed-off-by: Srikrishna Iyer <sriyer@google.com>



======Commit: 977b4cc5======
======Short Message======
Avoid premailer 3.9.0 due to API breakage
======Full Message======
Avoid premailer 3.9.0 due to API breakage

https://github.com/peterbe/premailer/pull/255 introduced a new, for our
use case mandatory, argument to the constructor. Since this argument
wasn't part of the constructor in 3.8, we need to runtime-detect if
we're running premailer 3.9+ and then set the option.

Let's avoid this version for now and hope upstream sorts it out in a
more backwards-compat way -- or we wait a bit longer and force our users
to use premailer 3.9+.

Fixes #6768

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: 38aa8340======
======Short Message======
util/meson-purge-includes.sh: Fix meson 0.55+ build
======Full Message======
util/meson-purge-includes.sh: Fix meson 0.55+ build

Since meson 0.55 OpenTitan has failed to build with errors like this:

   ../sw/device/lib/dif/dif_usbdev.c:9:10: fatal error: usbdev_regs.h: No such file or directory
       9 | #include "usbdev_regs.h"  // Generated.

An issue was raised with meson: https://github.com/mesonbuild/meson/issues/7800

It turns out it's an issue with how the OpenTitan file
util/meson-purge-includes.sh is editing the include paths.

We are currently removing paths like this:

   -Isw/device/lib/dif/libdif_rv_timer_ot.a.p

which since meson 0.55 are required for the build.

This commit changes the regex to allow builds with meson greater then
0.55.

Signed-off-by: Alistair Francis <alistair.francis@wdc.com>



======Commit: 02bcd8b0======
======Short Message======
[otbn,dv] Add register type coverage for GPR insn fields
======Full Message======
[otbn,dv] Add register type coverage for GPR insn fields

This code adds coverpoints and crosses to track the generic coverage
targets we have for GPR fields of instructions.

It also fixes the bits for "off_cp" coverpoints that are used to track
immediate offsets for bn.lid, bn.sid, beq and bne.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: ba981fe9======
======Short Message======
[dv/tlul_common_test] Add a testplan for TLUL integrity check
======Full Message======
[dv/tlul_common_test] Add a testplan for TLUL integrity check

This PR:
1. Add a V3 testplan for TLUL integrity check.
2. Fix small bullet related syntax in the file.

Signed-off-by: Cindy Chen <chencindy@opentitan.org>



======Commit: e8713f4b======
======Short Message======
[doc, testplans] Fix non-existent tests
======Full Message======
[doc, testplans] Fix non-existent tests

Several testplans indicate tests that do not exist yet. It would be
better to set the name correctly when the test is actually developed.
Going forward, missing tests in the testplan and written tests that do
not map to a testpoint will be flagged as an error in the pre-submit CI.

In addition, there are some cosmetic fixes such as line length exceeding
100 chars.

Signed-off-by: Srikrishna Iyer <sriyer@google.com>



======Commit: 0f910ed0======
======Short Message======
[dvsim] Allow recursive testplan import
======Full Message======
[dvsim] Allow recursive testplan import

- A small fix to allow testplans to be recursively imported.
- Useful for the foundry repo to import the chip level testplan (which
imports other sub-testplans).

Signed-off-by: Srikrishna Iyer <sriyer@google.com>



======Commit: 19be7e21======
======Short Message======
[i2c, rtl] Loopback test and other changes
======Full Message======
[i2c, rtl] Loopback test and other changes

1. Enabled line loopback test
2. Implemented target waiting for host to pull SCL low before stretching the clock
3. Increased depth from 32 to 64 in all four FIFOs
4. Fixed event_nak implementation
5. Added synchronizers for SCL/SDA inputs
6. Modified clock stretching in the target mode: no stretching for the first address match when both en_addr and stop are set; stop is deasserted after this so stretching occurs for the second address match
7. Other minor changes to the target mode

Signed-off-by: Igor Kouznetsov <igor.kouznetsov@wdc.com>



======Commit: 33236363======
======Short Message======
[entropy_src/rtl] move fw FIFO out of main flow path
======Full Message======
[entropy_src/rtl] move fw FIFO out of main flow path

New modes added to make the fw observe FIFO be passive to main flow.
Fixes #6068.

Signed-off-by: Mark Branstad <mark.branstad@wdc.com>



======Commit: 70926b55======
======Short Message======
[otbn] Fix spelling of separate
======Full Message======
[otbn] Fix spelling of separate

This keeps creeping in: maybe we need a CI job :-)

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 9946a651======
======Short Message======
[mem_bkdr_if] Rework write8 function to allow more memory widths
======Full Message======
[mem_bkdr_if] Rework write8 function to allow more memory widths

This patch changes write8 to dispatch on the integrity type and then
the memory width and then simplifies the "no integrity" and "parity"
paths significantly, generalising them to allow arbitrary memory
widths.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: f1574558======
======Short Message======
[otbn,doc] Fix generated encoding table for instructions like JAL
======Full Message======
[otbn,doc] Fix generated encoding table for instructions like JAL

Here, scheme_field.bits.ranges gives the fields MSB-first for the way
the field is decoded. For example, JAL's J-type encoding (defined in
enc-schemes.yml) has the following imm field:

    imm: 31,19-12,20,30-21

Sorting these ranges threw away the information about the order these
fields appear. Now, the JAL encoding table correctly shows the weird
order in the spec:

    OFF3, OFF_0, OFF_1, OFF_2

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: df63ec89======
======Short Message======
[rv_plic] fix Src width mismatch
======Full Message======
[rv_plic] fix Src width mismatch

In the commit 88a861588795ccd2c43603096cd007600412ec2f it removes the
necessity of adding position 0 of the interrupt source, which is
reserved as 'no interrupt'. The interrupt source [0] is tied outside of
the rv_plic by the topgen tool.

@WonHoYoo reported the DC synthesis error if the number of source is set
to the power of two ( issue #6718 ).

While revising the design in the above commit, `rv_plic_target` was
omiited by mistake. This commit addresses the issue and reduces the
`SrcWidth` to `$clot2(NumSrc)`.

Signed-off-by: Eunchan Kim <eunchan@opentitan.org>



======Commit: 3519dd2a======
======Short Message======
[csrng/rtl] instantiate and generate bug fixes
======Full Message======
[csrng/rtl] instantiate and generate bug fixes

Fixes rtl problems that now enable instantiate and generate to work.

Signed-off-by: Mark Branstad <mark.branstad@wdc.com>



======Commit: 25105dd9======
======Short Message======
[test] Fix lint warnings
======Full Message======
[test] Fix lint warnings

Signed-off-by: Pirmin Vogel <vogelpi@lowrisc.org>



======Commit: edfe9c4e======
======Short Message======
[otbn,dv] Add extremal value coverage for immediate insn fields
======Full Message======
[otbn,dv] Add extremal value coverage for immediate insn fields

This code adds coverpoints and crosses to track the generic coverage
targets we have for immediate fields of instructions.

The basic approach is that we map instruction names to encoding
schemes, then have a big case statement in otbn_env_cov::on_insn that
dispatches to the correct encoding scheme.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: daa32489======
======Short Message======
[spi_device/lint] Fix unused assignments and remove waivers
======Full Message======
[spi_device/lint] Fix unused assignments and remove waivers

Signed-off-by: Michael Schaffner <msf@google.com>



======Commit: 9d48c083======
======Short Message======
[otbn,dv] Monitor the trace interface directly; connect to coverage
======Full Message======
[otbn,dv] Monitor the trace interface directly; connect to coverage

This commit adds otbn_trace_monitor, a UVM monitor that snoops on the
RTL trace interface. This passes transactions to the scoreboard, which
already received the equivalent transactions from the ISS. The
scoreboard then pairs them up again and passes them to otbn_env_cov to
be used for coverage checking.

This patch adds the infrastructure that you need in order to cross
executed instruction mnemonics (from the ISS) with instruction
data (from the RTL). It doesn't add any new coverage points, but it
does add a cross-check to make sure that the instruction addresses
from the ISS and RTL match. Note: This isn't part of the verification
of the block, as such, but is needed to make sure that we are
collecting the coverage that we think we're collecting.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 500b0f09======
======Short Message======
[otbn,dv] Pass mnemonic in trace from ISS
======Full Message======
[otbn,dv] Pass mnemonic in trace from ISS

This is a partial change, in the direction of adding some functional
coverage to OTBN. The problem is that we want to track things like
"did I execute ADDI?" but don't want to write (yet another) decoder in
the coverage model, which might be buggy or get out of sync with the
actual RTL and ISS, yielding bogus coverage data.

To solve this, the plan is to pass mnemonics from the ISS to the trace
comparison and then (over DPI) to the coverage model. We know that the
RTL trace items will be in sync with the ISS sync items (otherwise the
test fails), so we can just build two queues on the SystemVerilog side
to merge together instruction data as seen by the RTL trace interface
and information about decoded instructions as seen by the ISS.

This patch doesn't do any of the later work: it just adds a mnemonic
to the output from the ISS in stepped mode and teaches the C++ code
that receives it to understand what it's seeing.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: def83fdc======
======Short Message======
[prim] Break always_comb block to avoid apparent loop
======Full Message======
[prim] Break always_comb block to avoid apparent loop

When Verilator schedules its simulation, it tracks dependencies in a
big graph containing processes (including always_comb blocks) and
variables. Here, that graph has a loop between e.g. idx_tree and
sel_tree. The result is an UNOPTFLAT warning and poor
scheduling (which will impact simulator performance).

Often these loops can be broken by judicious use of Verilator's
split_var directive. This tells Verilator to split up an array or
struct into multiple nodes in the graph. Here, that's not enough. The
problem is that the graph looks something like this:

    idx_tree[47:44]               --- (is_written_in) -->
    always_comb block on line 143 --- (sensitive_to) --->
    sel_tree[11]                  --- (is_written_in) -->
    always_comb block on line 143 --- (sensitive_to) --->
    idx_tree[47:44]

To fix things, we need to split the always_comb block. The Verilator
documentation describes an isolate_assignments directive that looks
like it should handle this, but I've not had any luck with it.

It turns out that splitting out just the definition of sel into its
own always_comb block is enough to silence the warning. Presumably,
this means that Verilator is doing other clever breaking up of blocks,
otherwise it wouldn't fix the chain above, so this seems a bit
fragile.

It would be nice to sort this out by turning things into continuous
assignments, but a Vivado synthesis bug means we can't do that at the
moment. Add a TODO that explains what's going on.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 0446d96f======
======Short Message======
[chip testplan] Updates based on initial review
======Full Message======
[chip testplan] Updates based on initial review

Review notes are captured here:
https://docs.google.com/document/d/1OhPP-HjciwKpIh0wWt1xqPqPf0Y0powmmww6xekwMeE/

This first round of reviews focused on UART, GPIO, HMAC and the PLIC
blocks.

This PR contains updates based on review feedback in addition to some
minor fixes.

Signed-off-by: Srikrishna Iyer <sriyer@google.com>



======Commit: bc7789d4======
======Short Message======
[dvsim] Fix testplan bugs
======Full Message======
[dvsim] Fix testplan bugs

- Milestone regressions broken - #6686
- Coverage documentation is not properly formatted

Signed-off-by: Srikrishna Iyer <sriyer@google.com>



======Commit: 2f3bba8a======
======Short Message======
[fpv] update secded_gen
======Full Message======
[fpv] update secded_gen

1. This PR updates the fpv files with port naming updates.
2. This PR removes the `write_fpv_files` input suffix. Current version
directly uses `codetype`.

Signed-off-by: Cindy Chen <chencindy@opentitan.org>



======Commit: bfa37b1b======
======Short Message======
[fpv] Fix formal result page link
======Full Message======
[fpv] Fix formal result page link

This PR fixes the FPV result summary page URL link.

Signed-off-by: Cindy Chen <chencindy@opentitan.org>



======Commit: d2ca7cfa======
======Short Message======
[spi_device] Waivers and fixes for SPI_DEVICE
======Full Message======
[spi_device] Waivers and fixes for SPI_DEVICE

While merging fwmode subblocks into a module, lint waivers were not
modified. This commit addresses the issue.
In addition to the modificatio above, this commit fixes some ascentlint
errors and adds some waivers for readability.

Signed-off-by: Eunchan Kim <eunchan@opentitan.org>



======Commit: 82c9e5bb======
======Short Message======
[hmac] Lint fix
======Full Message======
[hmac] Lint fix

Waived a lint warning of verilator and fixed errors of ascentlint.

Signed-off-by: Eunchan Kim <eunchan@opentitan.org>



======Commit: fca43823======
======Short Message======
[pinmux/tap] Rework DFT TAP hooks
======Full Message======
[pinmux/tap] Rework DFT TAP hooks

The current DFT TAP hooks expose the JTAG signals as a struct type,
and the pinmux_jtag_buf module is instantiated not only for the DFT
TAP but also for the other TAPs that are connected in RTL.

While this is all correct from a syntax and design perspective, the
struct type seems to confuse certain automatic DFT insertion tools.
Further having multiple pinmux_jtag_buf modules instantiated exposed a
uniquification bug in Tessent.

To solve this issue, this patch adds a breakout module called
pinmux_jtag_breakout for the DFT tap on the top-level that exposes the
DFT signal hooks as simple logic ports.

Signed-off-by: Michael Schaffner <msf@opentitan.org>



======Commit: 5d2156c7======
======Short Message======
[dv/template] small fixes on index.md format
======Full Message======
[dv/template] small fixes on index.md format

This PR aligns index.md format:
1. Follow TL_agent, add a `_` for Alert_agents
2. Follow one sentence per line in index.md file

Signed-off-by: Cindy Chen <chencindy@opentitan.org>



======Commit: a4952bd2======
======Short Message======
[padring] Bitwidth fix of IoBank parameter
======Full Message======
[padring] Bitwidth fix of IoBank parameter

Signed-off-by: Michael Schaffner <msf@opentitan.org>



======Commit: 75386973======
======Short Message======
[dv/otp_ctrl] Fix a fcov sample issue
======Full Message======
[dv/otp_ctrl] Fix a fcov sample issue

The power_on_cg has `lc_esc_on` that is never sampled in coverage
report, this is because the sample function is placed under the `if no fatal
alert branch`. I moved the sample function out of the if condition.

Signed-off-by: Cindy Chen <chencindy@opentitan.org>



======Commit: 6c897744======
======Short Message======
[simutil_verilator] Improve timeout handling
======Full Message======
[simutil_verilator] Improve timeout handling

Improve argument parsing for the --term-after-cycles argument (now we
spot things like negative numbers or values that are out of range).
Also, add a method to the class to allow specific testbenches to set a
default timeout in cycles.

This is useful if you have a simple block that should only take 10k
cycles: maybe you'd rather time out after 100k cycles than run forever
if something goes wrong.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: e7c4b90e======
======Short Message======
[rom_ctrl/dv] Add checking on rom reads
======Full Message======
[rom_ctrl/dv] Add checking on rom reads

Read data are checked against backdoor memory reads for correctness.
This patch also corrects some naming of the rom_tl_agent.

Signed-off-by: Tom Roberts <tomroberts@lowrisc.org>



======Commit: 6c369c5e======
======Short Message======
[dv/tl_errors] enable tl assertions correctly
======Full Message======
[dv/tl_errors] enable tl assertions correctly

this PR updates how the tl_errors_vseq enables and disable TL assertions
to correctly support multi-RAL IP blocks.

Currently there are race conditions where one thread may disable the
assertions, but another thread may enable them right afterwards, which
causes constant assertion errors.

We also add a call to wait_no_outstanding_access() at the end to prevent
any race conditions there as well (with nonblocking accesses).

Signed-off-by: Udi Jonnalagadda <udij@google.com>



======Commit: ba482318======
======Short Message======
[dvsim/testplan] Fix the rendered testplan
======Full Message======
[dvsim/testplan] Fix the rendered testplan

There were some mistakes made causing the testplan to be rendered
poorly:
- The list of tests are not exhibiting the line breaks correctly
  - Only thing that works is the addition of <br> tags
- The decription is also mis-rendered if converted to HTML after
tabulate step (some formatting items are not getting converted from
markdown text to html)
  - Need to convert to html first and then process the tabulate to do
  this right.

Signed-off-by: Srikrishna Iyer <sriyer@google.com>



======Commit: 1d80d60c======
======Short Message======
[sw] Implement prng for random testing
======Full Message======
[sw] Implement prng for random testing

This adds the ability to generate and test randomized payloads from SW,
rather than test fixed payloads. Stimulus and hence, verification
quality is better when HW is programmed and checked against with
constrained random data. This will be mainly used in DV code where both,
SW image and the HW can be probed to extract the data and perform
checks.

Signed-off-by: Srikrishna Iyer <sriyer@google.com>



======Commit: 849fd737======
======Short Message======
[dvsim] Fix verilator tests on DVSim
======Full Message======
[dvsim] Fix verilator tests on DVSim

- For bootrom, use the `.scr.40.vmem` image.
- Update / add other test entries
- Increase wakeup threshold for pwrmgr test
- Add pwrmgr test to DVSim as well as pytest versions of running
Verilator sims.
  - It does not work on Verilator yet due to #6656, so its commented
  out.

Signed-off-by: Srikrishna Iyer <sriyer@google.com>



======Commit: 10e10f77======
======Short Message======
[aes] Fix alignment and order of ports for aes_control.sv
======Full Message======
[aes] Fix alignment and order of ports for aes_control.sv

Signed-off-by: Pirmin Vogel <vogelpi@lowrisc.org>



======Commit: f32a6afa======
======Short Message======
[format/ci] Correct Verible format CI cmd
======Full Message======
[format/ci] Correct Verible format CI cmd

Fix #6651

Signed-off-by: Michael Schaffner <msf@opentitan.org>



======Commit: 1d79e4aa======
======Short Message======
[pwm, doc] Fix paths of pwm documents
======Full Message======
[pwm, doc] Fix paths of pwm documents

Signed-off-by: Tung Hoang <hoang.tung@wdc.com>



======Commit: 7165ff0e======
======Short Message======
[dv/otp_ctrl] Fix corner case in dai recovery
======Full Message======
[dv/otp_ctrl] Fix corner case in dai recovery

1. This PR fixes a corner case: when dai write with secret partition's
digest address, and this operation is interrupted with fatal error (e.g.
lc_esc_en is On, fatal macro error, or fatal check error). Then scb will
recover this write by backdoor read the address. However, this is not
needed because this DAI write operation is actually invalid - user
cannot directly write to buffer partition's digest address.
So in this PR, we won't set the flag `dai_wr_ip` unless it is a valid
write.

2. Remove hardcoded value with cfg constants.

Signed-off-by: Cindy Chen <chencindy@opentitan.org>



======Commit: 966df622======
======Short Message======
[dv/pwrmgr] Generate dv environment
======Full Message======
[dv/pwrmgr] Generate dv environment

The pwrmgr dv environment and common CSR tests need to work.
This generates the environment with uvmdvgen and fixes a
few inconsistencies related to the autogen files.
Fixes incorrect dependency of pwrmgr_pkg on pwrmgr_reg.

Some of the common tests are working with this.

Signed-off-by: Guillermo Maturana <maturana@google.com>



======Commit: 1c8b6c5a======
======Short Message======
[alert_handler] Fix apparent combinatorial loop with a split_var
======Full Message======
[alert_handler] Fix apparent combinatorial loop with a split_var

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 0299bbe1======
======Short Message======
[dpi] Fix indexing bug in ecc32_mem_area
======Full Message======
[dpi] Fix indexing bug in ecc32_mem_area

This caused a Valgrind error when setting up imem for OTBN. The bug
was that we were trying to read 40 rather than 39 bits of input. The
fix is the std::min() when defining bits_left.

The rest of the patch is just variable name changes and comments to
make it more obvious how everything works (because this took me quite
some time to debug, even though wrote the code in the first place!)

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 570f0f6b======
======Short Message======
[doc,hugo] Make blockquote do something
======Full Message======
[doc,hugo] Make blockquote do something

Without this patch, a block quote is rendered exactly the same as any
other paragraph. Add a couple of em's of padding to the left to indent
it.

Don't put e.g. a vertical bar on the left: for the technical
documentation we're writing, a blockquote is much more useful as a
"here's a side note" than as an actual quote.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 53ea7031======
======Short Message======
[sha3] Recast an always_comb block to avoid a lint warning
======Full Message======
[sha3] Recast an always_comb block to avoid a lint warning

This lint warning from Verilator is about an inferred latch. It seems
that Verilator version v4.108 doesn't spot that the three fields of
error_o are all assigned at the top of the always_comb block.
Recasting the statement as an equivalent assignment to error_o fixes
the problem.

This spurious warning is already fixed in Verilator, by commit 4f36e3e
which appears in release v4.202. So this won't be a problem long-term,
but there's no real reason to depend on newer versions of the tool at
the moment: if anything, the rewritten code looks easier to
understand.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 1f56ad5d======
======Short Message======
[otbn] Fix link to RV32 Unprivileged ISA spec
======Full Message======
[otbn] Fix link to RV32 Unprivileged ISA spec

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: 878fffaf======
======Short Message======
[dv/mem_partial_access] Fix fork join_none inside while loop issue
======Full Message======
[dv/mem_partial_access] Fix fork join_none inside while loop issue

This PR fixes the following issue:
while (var > 0) begin
  fork
    do_something();
    if (read_mem) begin
      var --;
    end
  join_none
  wait_outstanding_access();
end

If var is small, it will cause var underflow. So I reverted the logic
back to use `repeat(var)`. Originally, the code was changed to while
loop with the concern that memory is too small and does not have enough
mem_read. So here I added a `min_accesses`.

Signed-off-by: Cindy Chen <chencindy@opentitan.org>



======Commit: dcd6c681======
======Short Message======
[ doc, build_docs ] Optionally bind to global wan when previewing
======Full Message======
[ doc, build_docs ] Optionally bind to global wan when previewing

This commit adds an additional --bind-wan argument to build_docs.py.
This forces the hugo server to bind the http server to a port on the
global interface (as opposed to just on localhost, which is the default).

This is important when using hugo on build farms with older (or no) browser
support, and no support for ssh tunnelling.

For testing other options, there is also a --hugo-opts flag for passing
arguments into hugo directly.

Signed-off-by: Martin Lueker-Boden <martin.lueker-boden@wdc.com>



======Commit: d295eae6======
======Short Message======
[otp_ctrl] Make sure KDI observes EDN req/ack protocol at all times
======Full Message======
[otp_ctrl] Make sure KDI observes EDN req/ack protocol at all times

Fix #6605

Signed-off-by: Michael Schaffner <msf@opentitan.org>



======Commit: 535275b3======
======Short Message======
[csrng/rtl] generate cmd bug fixes
======Full Message======
[csrng/rtl] generate cmd bug fixes

Problems with getting the correct values for the NIST generate command.
Fixes #6537.

Signed-off-by: Mark Branstad <mark.branstad@wdc.com>



======Commit: 44db6d60======
======Short Message======
[dpi_memutil] Fix bug in RegisterMemoryArea
======Full Message======
[dpi_memutil] Fix bug in RegisterMemoryArea

If !name_to_mem_.emplace().second then we already had a memory area
for the given name and pr.first->second is a valid index into the
vector called mem_areas_. If not, it ain't.

We grab a reference to the already-existing memory area in order to
print out an error message, but were accidentally doing so outside of
the error path. This causes a segfault, but only some of the time. (In
particular, it seems to depend on the Verilator version, which is a
bit bizarre).

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 92e99c5d======
======Short Message======
[otbnsim] Handle external registers like the RTL
======Full Message======
[otbnsim] Handle external registers like the RTL

External registers, i.e. CSRs accessible over the system bus to Ibex,
are modeled in otbnsim, but don't behave like their RTL counterparts in
various ways. This patch is the first stab at fixing some things I
stumbled across:

* The start address is passed to the simulation "out of band" and never
  makes it the START_ADDR register. Fix that by doing things the way we
  would do them in RTL: The user of the simulation has to write the start
  address into START_ADDR first before starting the simulation; the
  simulation then takes the value from there, saving us the additional
  field in OTBNSim.
* When the execution of the OTBN program is done (no matter if
  successful or not) we need to avoid committing the instruction side
  effects (e.g. GPR/WDR writes), but still need to make the changes to
  the external registers visible by committing them.
  This wasn't done before, making it impossible to read e.g. the
  ERR_BITS register after the simulation ended to see if it was
  successful.

This patch also adds a test to check the expected behavior.

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: ffda0b91======
======Short Message======
[otbnsim] Editorial message fix
======Full Message======
[otbnsim] Editorial message fix

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: 7c0f8754======
======Short Message======
[otbnsim] Fully qualify LOOP identifier
======Full Message======
[otbnsim] Fully qualify LOOP identifier

The "LOOP" identifier exists twice in otbnsim: once as class in the isa
module, implementing the LOOP instruction. And once as error bit.

Explicitly qualify the LOOP error bits to avoid clashes (coming in a
follow-up commit).

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: f4f2e539======
======Short Message======
[otbn] Correct data_i width into dmem integrity check
======Full Message======
[otbn] Correct data_i width into dmem integrity check

Previously the full 312-bit dmem read data signal was fed into all
integrity checkers. It should be seperate 39-bit integrity granules.

Fixes #6612

Signed-off-by: Greg Chadwick <gac@lowrisc.org>



======Commit: 7e371f4d======
======Short Message======
[dv/otp_ctrl] Fix regression error
======Full Message======
[dv/otp_ctrl] Fix regression error

This PR fixes a regression corner case where lc_esc signal is issued
during otp_init. Then scb predicted the wrong digest CSR values.
The solution is to ignore checking digest CSRs if this case happened,
because scb cannot accurately predict how many partitions have finished
inialization when lc_esc comes.

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: 7b4e26a2======
======Short Message======
[util] Display Python lint error messages
======Full Message======
[util] Display Python lint error messages

The lintpy utility currently doesn't display the output from the linter
unless the `--fix` option is used, which isn't available for flake8 at
all. Change the script to output the linter stdout/stderr in all cases.

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: ee060bd6======
======Short Message======
[otbn] Add integrity to DMem and IMem
======Full Message======
[otbn] Add integrity to DMem and IMem

Memories were already expanded to included integrity bits. This commit
puts them to use. Integrity bits are carried through from memory to and
from the register file for reads and writes. Integrity is checked at the
memory boundary for all reads.

This includes integrity generation in the `otbn` module for all data
arriving via the TL interconnect. This is a temporary feature until full
end to end integrity has been enabled across the TL interconnect.

Fixes #6421
Fixes #6422

Signed-off-by: Greg Chadwick <gac@lowrisc.org>



======Commit: 7f1111d6======
======Short Message======
[otbn] Fix incorrect handling of negative JAL offset in ISS
======Full Message======
[otbn] Fix incorrect handling of negative JAL offset in ISS

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: aaab04fc======
======Short Message======
[rom_ctrl] Only raise ROM req line when not in reset
======Full Message======
[rom_ctrl] Only raise ROM req line when not in reset

The previous code assumed that the checker always requested ROM
accesses. This is logically correct, but meant that we were raising
the ROM's req line when in reset. Since the ROM doesn't itself have a
reset signal, this would mean spurious activations of the ROM
macrocell.

This patch explicitly registers the req signal in the checker's
address counter and passes it through the rest of the design.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: d16fe76b======
======Short Message======
[otbn] CSR reads/writes should be suppressed for certain x0 uses
======Full Message======
[otbn] CSR reads/writes should be suppressed for certain x0 uses

For CSRRW where the destination register is x0 no read (in particular no
actions such as starting an external RND request) must occur.
For CSRRS where the source register is x0 no write (in particular no
actions such as starting an RND prefetch) must occur.

Fixes #6489

Signed-off-by: Greg Chadwick <gac@lowrisc.org>



======Commit: dd0157d3======
======Short Message======
[rom_ctrl] Fix KMAC back pressure handling
======Full Message======
[rom_ctrl] Fix KMAC back pressure handling

Here, rom_addr_o is the address that rom_ctrl_counter passes to the
ROM (to tell it what to read next). We need to increment it
"immediately" when the ready signal from KMAC goes high, otherwise
there's a extra cycle with data from the first address.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 9ac4e776======
======Short Message======
[dv/otp_ctrl] Add a direct sequence to check otp_macro error
======Full Message======
[dv/otp_ctrl] Add a direct sequence to check otp_macro error

This PR adds a direct sequence to check otp_macro error.
Two reasons to add this direct sequence:

1. Current one fatal error will cause the OTP_ctrl to escalation stage,
then this macro error can easily be ingored by other macro errors such
as: ECC uncorrectable error, fatal check error, etc.

2. This sequence will give all partitions a chance to trigger Macro
error by directly probing the macro cmd_i. And when we do closed-source
verification, this path should be easier to identify and overide with
the real OTP macro path.

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: a60e3728======
======Short Message======
[rtl/prim_async_fifo] Fix async fifo typo when depth <= 2
======Full Message======
[rtl/prim_async_fifo] Fix async fifo typo when depth <= 2

This PR fixes a typo when depth <=2. Looks like the `fifo_wptr_gray_d`
should depends on `fifo_wptr_d` instead of `fifo_rptr_d`.

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: 88b4b132======
======Short Message======
[spi_device] Revise passthrough command parsing logic
======Full Message======
[spi_device] Revise passthrough command parsing logic

This commit re-designs the passthrough logic. The logic used 256 command
info structure, which is the compile-time predefined parameter.

Now, it defines SW configurable command info slots. By default the
register has 16 command info slots. First 10 slots are also used in the
flash mode. Following 6 slots are used in the passthrough logic only.

Signed-off-by: Eunchan Kim <eunchan@opentitan.org>



======Commit: 78d6d3f4======
======Short Message======
[dv/kmac] fix entropy_mode randomization
======Full Message======
[dv/kmac] fix entropy_mode randomization

this PR addresses #6495.

We don't support the timers in the kmac TB yet, so for a given test we
should ensure that the entropy_mode is the same for all hashing
operations.

Signed-off-by: Udi Jonnalagadda <udij@google.com>



======Commit: 762304a7======
======Short Message======
[dv/unr] Fix unr clk rst ports
======Full Message======
[dv/unr] Fix unr clk rst ports

This PR fixes an UNR clk rst ports naming mismatch.
In previous version, this is a warning so it is not idenfitied as
failure. But the latest version flaged it as an error.
Also this affect some of the UNR analysis - in OTP_CTRL's case, it
affects the FSM coverage.
Thanks Will for helping me debugging that.

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: 6713e57b======
======Short Message======
[dv/mem_bkdr] Support memory backdoor write with ECC error injection
======Full Message======
[dv/mem_bkdr] Support memory backdoor write with ECC error injection

This PR support memory backdoor write with ECC errors:
1. Add a input `ecc_corrupt_second_bit`, is set to 1, it will corrupt
two bits and have a ECC uncorrectable error.
2. Adjust OTP testbench to use the new write function with ECC error.

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: b91333ad======
======Short Message======
Build ROM_EXT signer by default
======Full Message======
Build ROM_EXT signer by default

Signed-off-by: Alphan Ulusoy <alphan@google.com>



======Commit: 1650510e======
======Short Message======
[sw, pwrmgr dif smoketest] Fixes to get it working
======Full Message======
[sw, pwrmgr dif smoketest] Fixes to get it working

The test as it exists had a couple of bugs:
- It configures AON timer to issue wakeup after 5 200kHz clocks (25us)
which is too short - the whole pwrmgr config routine takes about 50us,
and the low power entry takes several clock cycles to full enter the low
power mode. Increased it to 20.

- AON timer programming is followed up with `usleep(100)` which seems
unnecessary. Adding that causes the wakeup to occur even before pwrmgr
is programmed.

- Low power configuration disables USB clock in active power - that
results in clkmgr not being able signal back to pwrmgr that it was able
to disable all clocks properly, causing pwrmgr FSM to hang. See #6504.
Updated the config to retain USB clock to be active in active power.

- Re-org'ed the code a bit such that AON programming is not done after
wake up from low power exit.

Signed-off-by: Srikrishna Iyer <sriyer@google.com>



======Commit: c0a566b5======
======Short Message======
[dv, chip] Fix the chip level testplan and tests
======Full Message======
[dv, chip] Fix the chip level testplan and tests

- Fix the testplan such that tests are properly mapped to the testplan
entries.

Signed-off-by: Srikrishna Iyer <sriyer@google.com>



======Commit: da4934f6======
======Short Message======
[rom_ctrl] Fix gnt/rvalid timing just after initial check finishes
======Full Message======
[rom_ctrl] Fix gnt/rvalid timing just after initial check finishes

The rom_ctrl block is supposed to give access just to the checker
until the checker is finished, at which point the bus can start
accessing data.

To control this, there is a mux with a sel_i signal. When sel_i is 1,
the checker is still running. When it drops to zero (a one-time
event), the bus should have access.

Before this patch, there was a bug where the block would seemingly
respond to a request in zero time, raising the bus grant signal and
rvalid at the same time. The problem was just that we were incorrectly
using a registered signal for the grant: the ROM had taken the request
a cycle earlier but we didn't tell the bus.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 6be21b38======
======Short Message======
[tool_requirements] Set Verilator and Ninja checks to as_needed
======Full Message======
[tool_requirements] Set Verilator and Ninja checks to as_needed

Previously, we were always checking the tool version of Verilator and
Ninja in lint runs even when the tools were not used.

While this is typically not a problem (these are standard tools every
developer has to install locally), it can be an issue for Dvsim runs
that are dispatched to cloud runners which only load the required tool
image. E.g. Verilator lint runs were failing due to a missing Ninja
installation.

This change sets Verilator and Ninja to "as_needed", and modifies
the checks in the common checker core such that only the version of the
requested tool is being checked.

Signed-off-by: Michael Schaffner <msf@google.com>



======Commit: 59739037======
======Short Message======
[ast] fixed ifdef typo in ast2pad outputs
======Full Message======
[ast] fixed ifdef typo in ast2pad outputs

Signed-off-by: Arnon Sharlin <arnon.sharlin@opentitan.org>



======Commit: 5b3f265e======
======Short Message======
[mem_bkdr_if] fix the ecc_read() return types
======Full Message======
[mem_bkdr_if] fix the ecc_read() return types

Signed-off-by: Udi Jonnalagadda <udij@google.com>



======Commit: 3cde80a5======
======Short Message======
[otp_ctrl] Correct LCI error latching
======Full Message======
[otp_ctrl] Correct LCI error latching

Fix #6494

Signed-off-by: Michael Schaffner <msf@opentitan.org>



======Commit: 3cf2c907======
======Short Message======
Improve ROM_EXT image signer CLI and some cleanups
======Full Message======
Improve ROM_EXT image signer CLI and some cleanups

This change:
- Removes
  - `config.hjson` along with related code and dependencies,
  - `sw/host/rom_ext_image_tools/signer/dev` folder,
  - Most of the methods from the image struct, essentially making it a
thin wrapper around a `Vec<[u8]>`,
- Exposes input image, private key, and output image paths as command
line arguments (required for signing an image with multiple keys during
build),
- Adds `thiserror` and `anyhow` dependencies to remove `expect`s,
- Modifies the ROM_EXT manifest generator rust template to generate
structs instead of individual constants, which enables some basic checks
in `Image::set_manifest_field`.

CLI is pretty basic because the functions in will eventually be
integrated into the opentitan tool.

Signed-off-by: Alphan Ulusoy <alphan@google.com>



======Commit: 009d9eef======
======Short Message======
[otbn] Add ECC to register files and call stack
======Full Message======
[otbn] Add ECC to register files and call stack

ECC SECDED is applied to both base and bignum register files. For the
base register file a single ECC is applied to whole 32-bit word. For the
bignum register file there is a seperate ECC per 32-bits (8 in all to
cover a 256-bit register).

ECC encode and decode is implemented by the register file. No error
correction is applied, ECCs are only used for error detection.

The register file interfaces are expanded to allow a direct ECC write.
This is used where whatever is supplying the data already has an ECC so
it doesn't need to be recalculated (e.g. during a bignum register move
or select).

Fixes #6186

Signed-off-by: Greg Chadwick <gac@lowrisc.org>



======Commit: 99523638======
======Short Message======
[otbn,dv] Fix debug print line
======Full Message======
[otbn,dv] Fix debug print line

It's probably better to set the variable before trying to print it
out...

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: efb811bd======
======Short Message======
[dv/sram] fix initialization checks
======Full Message======
[dv/sram] fix initialization checks

currently to trigger memory initialization the base sequence calls
`csr_wr` to fetch a new key, then calls `csr_update` to write the next
control bit, however due to the behavior of `csr_update`, a new key
request is also triggered at the same time.

This sometimes messes up the scoreboard timing model, but is also
entirely unnecessary, so this PR removes it and replaces with a single
call to `csr_wr` to write both bits at once to simplify things.

Signed-off-by: Udi Jonnalagadda <udij@google.com>



======Commit: db98fd19======
======Short Message======
[dv/chip] remove shadow_reg error test
======Full Message======
[dv/chip] remove shadow_reg error test

This PR removes the shadow_reg error test in chip-level because:
1. Shadow reg errors: update errors and storage errors are fully
verified in block level testbenchs.
2. The alert connections will be covered by top-level alert test.
3. Maintain this extra alert test and backdoor probe errors requires
additional effort, which I do not think is worth it.

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: 18c5c432======
======Short Message======
[dv/common] add ECC support to mem_bkdr_if
======Full Message======
[dv/common] add ECC support to mem_bkdr_if

This PR adds full ECC support to the memory backdoor interface.

To do this, secded_gen.py was modified to also output an enum of the
different ECC variants, which are used to parameterize the mem_bkdr_if
so that we can pick up the correct data widths internally, etc...

Some ECC-specific wrapper functions for `read()` have also been added to
mem_bkdr_if that return the syndrome and error information as well as
the read data - these can be useful for ECC error tests
(sram/flash/otp).

A followup PR will enable this functionality in the OTP and Flash
testbenches.

Signed-off-by: Udi Jonnalagadda <udij@google.com>



======Commit: 76e98d06======
======Short Message======
Update lowrisc_ibex to lowRISC/ibex@71a87635
======Full Message======
Update lowrisc_ibex to lowRISC/ibex@71a87635

Update code from upstream repository
https://github.com/lowRISC/ibex.git to revision
71a8763553a25b90394de92f3f97e56b1009030b

Remove temporarily added patch to prim_secded as the Ibex instantiations
are now updated to match the definition in OpenTitan.

* [doc] Fix building with sphinxcontrib-wavedrom 3.x (Philipp Wagner)
* [doc] Require Sphinx 3 until wavedrom is compatible (Philipp Wagner)
* Update lowrisc_ip to lowRISC/opentitan@ca950b43a (Philipp Wagner)

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: 00c0df34======
======Short Message======
[spi_device,lint] Waive unused sram_error input for spi_fwm_*xf_ctrl
======Full Message======
[spi_device,lint] Waive unused sram_error input for spi_fwm_*xf_ctrl

This is unused and already waived for AscentLint.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 9f5b6387======
======Short Message======
[otbn] Fix error when using the last x1 value as a base address
======Full Message======
[otbn] Fix error when using the last x1 value as a base address

This refactors the use of `rd_base_rd_commit_o` vs `rd_base_rd_en_a_o`
and `rd_base_en_b_o`. Previously for any instruction that was stalled,
`rd_base_en_a_o` and `rd_base_en_b_o` would remain asserted for the
whole instruction, with `rd_base_rd_commit_o` used to indicate the cycle
the read actually occurred (in particular when to pop the call stack if
`x1` was being a read).

This caused an issue with `call_stack_err_o` as it doesn't factor in
`rd_base_rd_commit_o` to avoid a combinational loop. `call_stack_err_o`
could be asserted the second cycle of a load or store where
`rd_base_commit_o` isn't asserted but `rd_base_en_a_o` or
`rd_base_en_b_o` could be.

Now `rd_base_en_a_o` and `rd_base_en_b_o` will only be asserted the
cycle the read actually occurrs, assuming no errors.
`rd_base_rd_commit_o` prevents the read from occurring if there is an
error.

Signed-off-by: Greg Chadwick <gac@lowrisc.org>



======Commit: 19044edf======
======Short Message======
[prim_secded] Use _i/_o suffix for port names
======Full Message======
[prim_secded] Use _i/_o suffix for port names

The SECDED primitives did use `in` and `out` as port names, which isn't
matching our style guide, which mandates the use of `_i` and `_o`
suffixes. Change the definition and all instantiations to use `data_i`
and `data_o` instead.

The motivation to change this wasn't so much me being
style-guide-pedantic, but more the fact that `in` is a keyword in Python
and I couldn't easily use cocotb to write to the signal for a one-off
testbench.

(We do have a circular dependency between Ibex and the OpenTitan
repository in this regard, making it necessary to temporarily patch the
vendored-in Ibex. I'll remove that once this patch lands.)

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: 9a1f864d======
======Short Message======
[dv/otp_ctrl] Clean up backdoor write to trigger ECC error
======Full Message======
[dv/otp_ctrl] Clean up backdoor write to trigger ECC error

From the Thursday meeting, we found the logic to backdoor write OTP
memory to create ECC error is not very clear.
This PR won't backdoor write if ecc_err_mask is 0.

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: 2fee253b======
======Short Message======
[verilator] Don't build chip_earlgrey_verilator with debug symbols
======Full Message======
[verilator] Don't build chip_earlgrey_verilator with debug symbols

The resulting binary shrinks from 421MiB to 80MiB. The compilation
time on my laptop drops from 873s to 725s real time, and from 5715s to
4771s user time. (Both drops are roughly 17%).

While we might plausibly want to debug DPI code in GDB, it seems like
this won't happen often and (if we do want to) it's not particularly
hard to put the -g back again.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 56a64bd2======
======Short Message======
[otbn] Fix comment in controller
======Full Message======
[otbn] Fix comment in controller

The decoding section doesn't exist in the documentation any more.

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: a0ced90f======
======Short Message======
[push_pull agent] Fix #5713 issue
======Full Message======
[push_pull agent] Fix #5713 issue

Update `wait_clks` to use clocking block delays to avoid race
contitions.

Signed-off-by: Srikrishna Iyer <sriyer@google.com>



======Commit: 55d677dd======
======Short Message======
[push_pull agent] Revert change from #5889
======Full Message======
[push_pull agent] Revert change from #5889

Reverts the workaround added to make Xcelium happy by inserting delay
before applying the transaction to the interface.

This brings the code back to the issue reported in #5713. The next
commit following this fixes it.

There are some cosmetic changes in addition -
- suffix the clocking block macro names with `_CB`
- add TODO to check if the change from #5715 is really needed
- minor code reorg

Signed-off-by: Srikrishna Iyer <sriyer@google.com>



======Commit: 523ccb76======
======Short Message======
[push_pull agent] Cosmetic update to device driver
======Full Message======
[push_pull agent] Cosmetic update to device driver

Suffix the clocking block macro names with `_CB`.

Signed-off-by: Srikrishna Iyer <sriyer@google.com>



======Commit: 6bbd72dd======
======Short Message======
[sw/silicon_creator] Fix type issues on abs_mmio
======Full Message======
[sw/silicon_creator] Fix type issues on abs_mmio

Fix type issues on `abs_mmio_read8()` and `abs_mmio_write8()` functions.

Signed-off-by: Miguel Osorio <miguelosorio@google.com>



======Commit: 54166313======
======Short Message======
[dv/clkmgr] Fix peripheral clock checks
======Full Message======
[dv/clkmgr] Fix peripheral clock checks

The new "io" peripheral clock causes the clk_enables CSR to shuffle
some bits.
Add assertions for new io peripheral clock.
The spi host 0 is clocked by clk_io_peri output of clkmgr.

Signed-off-by: Guillermo Maturana <maturana@google.com>



======Commit: f61d25de======
======Short Message======
[dv/uvmdvgen] Flag error for paths in block name
======Full Message======
[dv/uvmdvgen] Flag error for paths in block name

The positional argument should name an ip, not the path to it.
Flag errors for non-alphanumeric characters in the name.
Also run make the code pass yapf.

Signed-off-by: Guillermo Maturana <maturana@google.com>



======Commit: ec4cee42======
======Short Message======
[prim_fifo_async] Style fixes
======Full Message======
[prim_fifo_async] Style fixes

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: fa5b5b67======
======Short Message======
[dv/lc_ctrl] Fix lc_ctrl regressin error
======Full Message======
[dv/lc_ctrl] Fix lc_ctrl regressin error

This PR fixed the regression assertion failure that caused by lc_ctrl
drives otp_inputs too late after reset.

This PR also fixes an issue with unmapped testnames.

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: c8d2bc15======
======Short Message======
[uart] Fix line continuation in DV code
======Full Message======
[uart] Fix line continuation in DV code

The backslash operator doesn't have the intended effect of line
continuation here and inserts whitespace (all spaces from the start of
the line to the of the second/continued line).

Found by Verible lint:

```
../src/lowrisc_dv_uart_env_0.1/uart_env_pkg.sv:78:18: The lines can't be continued with '\', use concatenation operator with braces [Style: forbid-line-continuations] [forbid-line-continuations]
```

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: e04db852======
======Short Message======
[doc] Add short-form contributors guide
======Full Message======
[doc] Add short-form contributors guide

This document is a short-form companion to the upcoming detailed
contributors guide. It gives an overview of how we work, how to create
bug reports, our Security Issues Process, and the usual process for
contributing code.

The contribution guide effort was kicked off by Pirmin and has since
seen suggestions, edits, and comments from a wide number of people
across the project.

Signed-off-by: Alex Bradbury <asb@lowrisc.org>



======Commit: c2184c68======
======Short Message======
[dv/kmac] cycle accurate model bugfixes - pt 4
======Full Message======
[dv/kmac] cycle accurate model bugfixes - pt 4

this PR fixes a subtle edge case bug with small input message sizes
(less than 8 bytes) in KMAC mode where:

- CmdProcess is seen the cycle after prefix and keys finish processing
- fifo write pointer increments on same cycle

Signed-off-by: Udi Jonnalagadda <udij@google.com>



======Commit: e70c264a======
======Short Message======
[dv/lc_ctrl] Add lc_token mismatch error
======Full Message======
[dv/lc_ctrl] Add lc_token mismatch error

This PR adds the lc token mismatch error sequence.

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: 2bd55702======
======Short Message======
[dv/common] Fix mem_rw_with_rand_reset display issue
======Full Message======
[dv/common] Fix mem_rw_with_rand_reset display issue

This PR fixes the timeout display issue for mem_rw_with_rand_reset. It
used to display a `^P` for the error message.
Also this PR gives a larger timeout value because there could be many
CSR/mem issued in parallel, and this sequence has low priority.

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: 0d6ad61f======
======Short Message======
[dv/otp_ctrl] Fix regression error
======Full Message======
[dv/otp_ctrl] Fix regression error

This PR fixes the regression error related to recentl change: That I
randomized the `lc_check_bypass_en`, and cause the init test failure.

Another change is to increase the lc_ctrl_init_fail test reseeds to
increase coverage.

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: 1671860b======
======Short Message======
[csrng/rtl] bug fix for csrng command stage FIFO
======Full Message======
[csrng/rtl] bug fix for csrng command stage FIFO

The FIFO push control was missing the FIFO full term.
This resulted in setting a fatal alert.
Fixes #6410

Signed-off-by: Mark Branstad <mark.branstad@wdc.com>



======Commit: 143ec57a======
======Short Message======
[dv/kmac] cycle-accurate model bugfixes - pt 3
======Full Message======
[dv/kmac] cycle-accurate model bugfixes - pt 3

this PR fixes some more edge case bugs in the cycle accurate model:

- constrain message size as nonzero when using application interface
- updates `partial_msg` logic when using application interface
- add logic to handle edge case where CmdProcess is seen on the last
  cycle of keccak rounds where it is notifying sha3 logic that it has
  completed
- remove a few TODOs

Signed-off-by: Udi Jonnalagadda <udij@google.com>



======Commit: 43362077======
======Short Message======
[dv/otp_ctrl] Enable ECC errors in lc partitions
======Full Message======
[dv/otp_ctrl] Enable ECC errors in lc partitions

There is an old logic that I forgot to clean up, which only limits to
inject ECC errors in all partitoins except LC.
This PR removes that constraints and fixed a few comment wording.

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: 40c55d04======
======Short Message======
[dv/spi_device] Fix spi_device_csr_wr_with_rand_reset timeout issue
======Full Message======
[dv/spi_device] Fix spi_device_csr_wr_with_rand_reset timeout issue

This PR fixes a timeout issue in spi_device_csr_wr_with_rand_reset. The
issue is because in this test, spi_device has too many concurrent CSRs
(via csr_rw vseq) and memory (via mem_walk vseq) issued together.
The timeout counter starts when the parallel accesses issued but not
when the tl_bus actually sends the request.
So this PR doubles the default timeout value from 1ms to 2ms to avoid
spi_device timeout.

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: 2990452c======
======Short Message======
[fpv/spi_host] Fix undecleared variable issue
======Full Message======
[fpv/spi_host] Fix undecleared variable issue

There is an assertion that used a varaible declared in the "if"
statement, while the assertion is in the "else" branch.
Please feel free to let me know if you prefer some other approaches to
fix that.

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: 68379e61======
======Short Message======
[kmac] Clear the entropy in StRandEdn
======Full Message======
[kmac] Clear the entropy in StRandEdn

This commit addresses the issue #6393 reported by @udinator

As the comment in the code explains, if SW initiates a new hash
operation while the Entropy FSM is refreshing the internal entropy
(waiting for the EDN response), the logic keeps sending same entropy to
the hash logic.

This commit fixed the behavior to clear the entropy valid signal if
following logic consumes the entropy. Then, the logic will wait until
the EDN response comes back.

Signed-off-by: Eunchan Kim <eunchan@opentitan.org>



======Commit: 4dc13b36======
======Short Message======
Update lowrisc_ibex to lowRISC/ibex@8ef06de7
======Full Message======
Update lowrisc_ibex to lowRISC/ibex@8ef06de7

Update code from upstream repository
https://github.com/lowRISC/ibex.git to revision
8ef06de73daa7c22400f0e617088aeea06a2601c

* [rtl] Fix lint issues (Greg Chadwick)

Signed-off-by: Greg Chadwick <gac@lowrisc.org>



======Commit: 4b700f98======
======Short Message======
[spi_device,lint] Explicitly ignore sram_rerror_i input
======Full Message======
[spi_device,lint] Explicitly ignore sram_rerror_i input

The spi_readcmd module doesn't currently handle SRAM integrity errors,
but it does have the signal wired up (causing lint warnings).
Explicitly assign the value to an unused_* signal, silencing the lint
warnings and giving a nice place to put the TODO message.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: cd27b338======
======Short Message======
[kmac_pkg] add app Prefix for ROM/OTP
======Full Message======
[kmac_pkg] add app Prefix for ROM/OTP

this PR adds the Prefix values for ROM/OTP to the application interface
configuration struct.

the values are taken from the output of `encode_string("ROM_CTRL")` and
`encode_string("OTP_CTRL")`, respectively.

Signed-off-by: Udi Jonnalagadda <udij@google.com>



======Commit: c818b764======
======Short Message======
[dv/lc_ctrl] Fix regression error
======Full Message======
[dv/lc_ctrl] Fix regression error

This PR fixes LC_ctrl regression error.
The issue comes when lc_ctrl smoke sequence pushes expected token data
to the push-pull data queue, but in the meantime, the pull request could
be interrupted by other lc_ctrl errors. So we push some data to the
queue that is not being used.
To solve this issue, I add a function to clear push-pull agent's data
when user do not need it.

This PR also has some small fixes in lc_ctrl testbench.

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: 1cdd7b82======
======Short Message======
[dv/otp_ctrl] Fix regression error
======Full Message======
[dv/otp_ctrl] Fix regression error

This PR fixes two regression related issue:
1. The warning of csr predict and read happened at the same time.
This is fixed by adding a `kind(UVM_PREDICT_READ)` when predicting the
direct_access_regwen

2. Add more possibility for otp_ctrl partition 0 and 1's check failure

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: 640acfcf======
======Short Message======
[dv/sram] fix stress tests
======Full Message======
[dv/sram] fix stress tests

this PR updates the stress_all and stress_all_with_rand_reset tests:

- don't run sram_ctrl_init() for each test sequence, as back to back
  initializations can cause the initialization timing logic in the scb
  to become confused and incorrectly predict the CSR value.
  We only need to run sram_ctrl_init() at the beginning of the
  stress_all vseq.

- explicitly prevent access to alert_test CSR from doing anything,
  preventing failures in stress_all_with_rand_reset

- remove stress_all test from sim_cfg.hjson, as we don't particularly
  need the {variant} naming scheme

Signed-off-by: Udi Jonnalagadda <udij@google.com>



======Commit: 556dd65e======
======Short Message======
[dv/kmac] update testplan to account for kmac_app
======Full Message======
[dv/kmac] update testplan to account for kmac_app

this PR updates the testplan to account for the kmac_app test, and
updates the description accoordingly.

the related sw_access test is removed and added as an error case in the
error_test.

Signed-off-by: Udi Jonnalagadda <udij@google.com>



======Commit: 82c66a1a======
======Short Message======
[dv/kmac] cycle-accurate model bugfixes - pt 2
======Full Message======
[dv/kmac] cycle-accurate model bugfixes - pt 2

this PR fixes some issues in the cycle accurate model:

- data overflow during msgfifo flushing

- use a nonblocking forked process to update fifo_empty interrupt
  as if it is blocking we can miss updates to the fifo pointers
  and cause weird errors later in simulation

- fix looping wait if fifo fills up when not using kmac_app interface,
  which would cause premature failures

Signed-off-by: Udi Jonnalagadda <udij@google.com>



======Commit: 32fff89a======
======Short Message======
[doc] Clarify HMAC and KMAC endianness settings
======Full Message======
[doc] Clarify HMAC and KMAC endianness settings

The intent of this change is to make it clearer the effect that the
`kmac.CFG.msg_endianness` and `hmac.CFG.byte_swap` settings have on
values written to the relevant `MSG_FIFO`. In particular how writes
smaller than a word are affected.

This also modifies the wording for the equivalent settings for the
output registers. In this case just to clarify that each individual
word in the output has its bytes reversed, as opposed to the entire
multi-word value being reversed.

Fixes #6251.

Signed-off-by: Michael Munday <mike.munday@lowrisc.org>



======Commit: 81e74852======
======Short Message======
[rv_core_ibex] Fix Ibex AscentLint waivers
======Full Message======
[rv_core_ibex] Fix Ibex AscentLint waivers

Signed-off-by: Greg Chadwick <gac@lowrisc.org>



======Commit: fb2d1195======
======Short Message======
[rom_ctrl] AscentLint warning fixes
======Full Message======
[rom_ctrl] AscentLint warning fixes

We waive one warning, and rejig code to hopefully silence most of the
rest. There are still some HIER_NET_NOT_READ warnings which I'll
address in a follow-up (once I understand what's going on!)

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 553aeceb======
======Short Message======
[ spi_device, spi_host, top_earlgrey ] Add SPI passthrough to spi_host
======Full Message======
[ spi_device, spi_host, top_earlgrey ] Add SPI passthrough to spi_host

- Create new corefile for spi_device_pkg
- Add passthrough structure I/O to spi_host
- Uncomment intermodule connections in top_earlgrey
- Correct typo in spi_device PASSTHROUGH_DEFAULT_REQ interhost

Signed-off-by: Martin Lueker-Boden <martin.lueker-boden@wdc.com>



======Commit: efd70e9d======
======Short Message======
[dv/otp_ctrl] regression corner case fix
======Full Message======
[dv/otp_ctrl] regression corner case fix

This PR fixes a corner case on regression: The status is checked during
lc_program_req, and we could not accurate predict in scb if the error is
expected. I added a logic to ignore the checking whe lc_program_req is
in progress.

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: 70d6ef8b======
======Short Message======
[kmac] Prefix to be stable across App Op
======Full Message======
[kmac] Prefix to be stable across App Op

This is reported by @udinator (Issue #6345 )

KMAC only sends out the predefined hard-coded Prefix value in `StAppMsg`
state. That state is short-lived state. FSM stays in that state only
while it feeds the data into the MSG_FIFO. After recevied the last beat
of the message and feeds into the MSG_FIFO, the state moves to the next
state (either StAppOutLen or StAppProcess).

If the message is short length, then even after state machine is moved
to `AppProcess`, the SHA3 engine may not complete the PREFIX
computation. Then, the prefix value is swapped to all zero value, which
results in wrong digest value.

This commit adds more state conditions in the prefix assignment block.

Signed-off-by: Eunchan Kim <eunchan@opentitan.org>



======Commit: 4dcb0746======
======Short Message======
[docs] Fix Hugo version sniffing
======Full Message======
[docs] Fix Hugo version sniffing

Recent versions of Hugo seem to have slightly changed their version
string syntax. For example, the one that we're currently downloading
prints out:

    hugo v0.82.0-9D960784+extended linux/amd64 (...snip...)

It seems that the format used to use "/extended". Weaken the regex to
allow either format, avoiding re-downloading Hugo on each call to
build_docs.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 6caf4b81======
======Short Message======
[dv/kmac] cycle-accurate model bugfixes - pt 1
======Full Message======
[dv/kmac] cycle-accurate model bugfixes - pt 1

this PR contains several fixes for the KMAC cycle accurate model:

- most are related to KDF transactions, in particular backpressure
  scenarios where the msgfifo fills up while KDF transactions are still
  being continually sent to the DUT.

- fixed a potential race condition where `fifo_empty` could be sampled
  on the same timestep that it is updated internally

Signed-off-by: Udi Jonnalagadda <udij@google.com>



======Commit: af435d2f======
======Short Message======
[dv/clkmgr] Adds more clock gating tests.
======Full Message======
[dv/clkmgr] Adds more clock gating tests.

Adds more randomized tests for the peripheral and transactional
units clocking.
Fixes the concurrent assertions in clkmgr_if.

Signed-off-by: Guillermo Maturana <maturana@google.com>



======Commit: 4ebb36e0======
======Short Message======
[dm] Waive unused bits of addr_i input to debug_rom
======Full Message======
[dm] Waive unused bits of addr_i input to debug_rom

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 49308e6b======
======Short Message======
[otbn] Flop address bits to select 32-bit word in LSU
======Full Message======
[otbn] Flop address bits to select 32-bit word in LSU

Previously the LSU relied upon the controller keeping the incoming
address stable the cycle following a load request so base word loads
could select the correct word from the WLEN data. When the load uses the
call stack as a base address register this is violated. Flopping the
bits for the word select avoids the need for the controller to keep the
address stable.

Fixes #6295

Signed-off-by: Greg Chadwick <gac@lowrisc.org>



======Commit: 65699fe9======
======Short Message======
[dv/otp_ctrl] Fix nightly regression error
======Full Message======
[dv/otp_ctrl] Fix nightly regression error

This PR fixes a few otp_ctrl's regression error:
1. init_failure test: internal escalation will set otp_dai_idle status
to 0. So we need to align it in the testbench.
2. when lc_esc_en is on, and we turn off scb, the alert checking will
have some mismatch. This PR fixes by not doing background error check if
the escalation_en is on.

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: 0530f3bc======
======Short Message======
[dv/otp_ctrl] Temp fix CI issue
======Full Message======
[dv/otp_ctrl] Temp fix CI issue

This PR temp fixes CI failure on PR #6314. We will discuss further if
this behavior is intended.

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: 18b8ed95======
======Short Message======
[reggen] Prefer explicit utf-8 encoding
======Full Message======
[reggen] Prefer explicit utf-8 encoding

This fixes the chip level nightly breakage.

Signed-off-by: Srikrishna Iyer <sriyer@google.com>



======Commit: 9b8fa6d0======
======Short Message======
[util] Fix for intermodule names
======Full Message======
[util] Fix for intermodule names

This issue was originally discovered by @eunchan.

The top level template code originally used im_netname for determining
the code for dangling nets at both the module instantiation level, as well
as the broadcast tie-off (for modules like kmac_app and edn1).

However, the input to im_netname was different in each case.
For module level instantiation, the input was the module `inter_signal` definition which does not include `req/rsp` as part of the struct name.

For broadcast tie-off, such as kmac_app and edn1, the input was the top level inter_module definition that includes `req/rsp` as part of the struct name already.

This creates a conflict where either the module level didn't contain the suffix or the top level had an extra suffix.

The fix moves the default net name creation directly to when the top level defintion is created and avoids this conflict.

Eventually this same scheme can be ported to im_netname as well without needing to construct on the fly.  But that will be done in a separate PR.

Signed-off-by: Timothy Chen <timothytim@google.com>



======Commit: 670f4e4b======
======Short Message======
Convert C defines for param names to snake_case
======Full Message======
Convert C defines for param names to snake_case

Many module parameters are converted from UPPER_SNAKE_CASE in their
hjson files to a variant of CamelCase for use in SystemVerilog files.
These parameter names are then converted to the all-caps form of the
CAMLECASE name in C header files.

The UPPERCASEWITHOUTUNDERSCORES form is too hard to read.  This change
converts back to UPPER_SNAKE_CASE for C header files and fixes all
existing uses for the previous naming scheme.

Signed-off-by: Chris Frantz <cfrantz@google.com>



======Commit: 1062fdb8======
======Short Message======
[mask_rom] HMAC driver fixes for digest reading and endianness
======Full Message======
[mask_rom] HMAC driver fixes for digest reading and endianness

This change fixes `hmac_sha256_init` and `hmac_sha256_final` to match
the output of `openssl` and `sha256sum` and preserve the numerical value
of the digest.

It also fixes IRQ clearing in these functions so that the driver can be
used more than once. This is required to be able to verify the second
slot if the first one does not succeed.

Signed-off-by: Alphan Ulusoy <alphan@google.com>



======Commit: fc28a944======
======Short Message======
[mask_rom] Create unified error space
======Full Message======
[mask_rom] Create unified error space

1. Create a unified error enum `rom_error_t` which builds up errors from
general categories, the source module and a specific error code.
2. Return such errors from the uart driver.

Note: the name `rom_error_t` was chosen so as to not conflict with `error_t`
defined by C++.

Signed-off-by: Chris Frantz <cfrantz@google.com>



======Commit: b1dbb76d======
======Short Message======
[chip,dv] Fix mem_bkdr_if::randomize_mem if !(PARITY || ECC)
======Full Message======
[chip,dv] Fix mem_bkdr_if::randomize_mem if !(PARITY || ECC)

At the moment, this interface doesn't support ECC properly, so it just
sets all the bits at random. Before this commit, calling randomize_mem
didn't do anything if neither PARITY or ECC was enabled.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 453a3202======
======Short Message======
[spi_host] Proper routing of sd_o in standard mode.
======Full Message======
[spi_host] Proper routing of sd_o in standard mode.

Due to a cut and paste error, standard-mode outputs were being routed to sd_o.

Many thanks to @tunghoang290780 for catching this.

Signed-off-by: Martin Lueker-Boden <martin.lueker-boden@wdc.com>



======Commit: 52f36cd2======
======Short Message======
[rom_ctrl] Properly exclude DIGEST/EXP_DIGEST from CSR tests
======Full Message======
[rom_ctrl] Properly exclude DIGEST/EXP_DIGEST from CSR tests

The previous temporary "fix" (in 532aa80) excluded them from
everything except for the HwReset tests... which promptly failed. Turn
those off too.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 73aebbf4======
======Short Message======
[rom_ctrl] Fix assertion about rel_addr
======Full Message======
[rom_ctrl] Fix assertion about rel_addr

We subtract TopStartAddr (the address of the first of the "expected
digest" words) from counter_addr to get an index into the expected
digest words. This will always be in the range 0..7 when we care about
it (when reading_top is true) and we actually get the index by slicing
out those bottom bits.

We've got an "unused_" signal to waive the fact that we ignore the
other bits and the RelAddrWide_A assertion says that we don't care
about their values.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 245ef06f======
======Short Message======
[rom_ctrl,rtl] Fix valid signal for exp_digest
======Full Message======
[rom_ctrl,rtl] Fix valid signal for exp_digest

This had an off-by-one error, so we'd signal valid for one extra cycle
at the end (trashing the bottom bit of the stored expected digest).

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 3ce52d47======
======Short Message======
[dv/otp_ctrl] Two cleanups regarding OTP_CTRL testbench
======Full Message======
[dv/otp_ctrl] Two cleanups regarding OTP_CTRL testbench

1. Takes away the temp exclusion for `timeout` csr. Even though it
will trigger alert, we still can find a way to verify that. (#6240 fixed
the assertion error)

2. Drive random value to `lc_seed_hw_rd_en_i` input. Thanks to the
coverage result, i found this input was tied to Off and never driven
value `On` in testbench.

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: 9340b9d0======
======Short Message======
[AST] Fix analog out contention
======Full Message======
[AST] Fix analog out contention

Signed-off-by: Jacob Levy <jacob.levy@opentitan.org>



======Commit: 40279036======
======Short Message======
[AST] Fix analog out contention
======Full Message======
[AST] Fix analog out contention

Signed-off-by: Jacob Levy <jacob.levy@opentitan.org>



======Commit: 59c52d31======
======Short Message======
[AST] Fix analog out contention
======Full Message======
[AST] Fix analog out contention

Signed-off-by: Jacob Levy <jacob.levy@opentitan.org>



======Commit: e8793953======
======Short Message======
[dv/otp_ctrl] Fix nightly regression error
======Full Message======
[dv/otp_ctrl] Fix nightly regression error

This PR fixes some nightly regression error:
1. Stress_all with reset did not return on scb after background check is
done.
2. OTP_init_fail test can have more than one alert causes happen at the
same time.
3. Fix a warning that function's output is being voided.

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: 33d904ae======
======Short Message======
[dv/lc_ctrl] Use push-pull agent data constrain
======Full Message======
[dv/lc_ctrl] Use push-pull agent data constrain

This PR finishes a TODO to remove hard-coded program_error input, and
replace that with a pull-push agent driver with constrained device data.

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: 43a6a185======
======Short Message======
[dv/sram] add executable SRAM test
======Full Message======
[dv/sram] add executable SRAM test

This PR implements the sram_ctrl_executable test as described by the
testplan.

In this test, we fully randomize all DUT config knobs used to set the
SRAM into "executable" mode, and then drive TL transactions that are
randomized between DataType and InstrType.

The scoreboard is updated to handle the new set of error cases that is
introduced with this testing.

The tl_monitor and tl_seq_item have also had minor updates made to them
to copy the a_user bits, as this is required to drive the right kind of
stimulus to the SRAM.

Signed-off-by: Udi Jonnalagadda <udij@google.com>



======Commit: c20cdcab======
======Short Message======
[otbn-as] Generate .line numbers to fix up DWARF information
======Full Message======
[otbn-as] Generate .line numbers to fix up DWARF information

To try this out, run something like this from the hw/ip/otbn/util
directory:

  ./otbn-as -g -o tmp.o ../dv/otbnsim/test/simple/pseudos/li.s
  ./otbn-objdump -dS tmp.o

The result looks like this:

  00000000 <.text>:
      expansion was correct is a little difficult, unless you can run the
      generated instructions... which is what we can do for ISS testing. So the
      checks seem to fit quite well here.

  */
    li x2, 1230
     0:   4ce00113                li      sp,1230
    li x3, -123
     4:   f8500193                li      gp,-123
    li x4, 2272
     8:   00001237                lui     tp,0x1
     c:   8e020213                addi    tp,tp,-1824 # 8e0 <.text+0x8e0>

    /* Big immediates that can be done with a single LUI */
    li x5, 1048576
    10:   001002b7                lui     t0,0x100
    li x6, -0x800000
    14:   ff800337                lui     t1,0xff800

As a bonus, this commit also slightly improves how we print
instructions that we've assembled or pseudo-instructions that we've
expanded. This won't make any difference unless debugging
otbn-as (with the --otbn-translate flag), but it should make li
instructions a bit less confusing when that happens.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 19caff35======
======Short Message======
[otbn,util] Fix block comment parsing in otbn-as
======Full Message======
[otbn,util] Fix block comment parsing in otbn-as

For some reason, I'd put effort into passing comments through to the
destination when translating from OTBN assembly to RISC-V assembly.
Other aspects of the code get mangled, so this isn't really worth
doing and, worse, it also made a mess of instruction parsing. So
something like this:

    addi x0, x0, 1 /* foo */

would try to match ADDI args with string "x0, x0, 1 /* foo */" (not
stripping out the comment).

Stop doing the silly thing! Also, reformat the "addi" ISS test to use
the syntax that was breaking things. This should avoid things coming
unstuck in future (without needing to put effort into a specific
"assembler testsuite").

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 7a5278a7======
======Short Message======
[otbn] Editorial fix in code comment
======Full Message======
[otbn] Editorial fix in code comment

The function writes to STDOUT.

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: eb9bdbab======
======Short Message======
[otbn] Standalone sim: only dump regs if asked for
======Full Message======
[otbn] Standalone sim: only dump regs if asked for

The standalone OTBN simulation, `otbnsim/standalone.py` has an option
`--dump-regs` which controls the dumping of all registers to a file or
STDOUT after the operation. By default, the registers were dumped to
STDOUT, implicitly passing `--dump-regs=-` to the simulation. This makes
it hard/impossible to *not* dump registers at all.

Instead of dumping to STDOUT by default, this commit makes `--dump-dmem`
and `--dump-regs` consistent in behavior: don't dump anything unless the
option is passed. Passing `-` as file name will dump the register or
memory contents to STDOUT.

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: f6a057e9======
======Short Message======
[dv/kmac] fix kmac_intr_test failures
======Full Message======
[dv/kmac] fix kmac_intr_test failures

this PR updates the kmac_scoreboard to fix the intr_test failures in
nightly regression runs.

Signed-off-by: Udi Jonnalagadda <udij@google.com>



======Commit: f21fee59======
======Short Message======
[dv/dvsim] Add "^Error:" as a run fail pattern.
======Full Message======
[dv/dvsim] Add "^Error:" as a run fail pattern.

This failure message is generated by the ISS model.

Signed-off-by: Guillermo Maturana <maturana@google.com>



======Commit: a4071be9======
======Short Message======
[dv/otp_ctrl] align behavior for fatal error [part2]
======Full Message======
[dv/otp_ctrl] align behavior for fatal error [part2]

Follow PR #6240, this PR supports sequences that disabled scb check.

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: fd1a7f71======
======Short Message======
[dv/otp_ctrl] align the behavior for fatal error
======Full Message======
[dv/otp_ctrl] align the behavior for fatal error

This PR aligns the behavior for PR #6077.
What changes here is - now if any alert triggered, the otp_ctrl will go
to terminal stage for all partitions (previously only the partition that
has error will go to terminal stage)
This PR works on scb and interface. The coming PR will work on sequence
that does not enable scb.

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: de891cb1======
======Short Message======
[spi_device] Lint fixes
======Full Message======
[spi_device] Lint fixes

remove casting on integers as it makes lint mistakenly think it becomes a
signed value, thus cascading into other downstream lint errors.

Certain linters will not like this, as it creates "mistmatches", we should
waive those warnings / errors.

Signed-off-by: Timothy Chen <timothytim@google.com>



======Commit: a3a2bc57======
======Short Message======
[all] Minor lint fixes
======Full Message======
[all] Minor lint fixes

- wire up spi_host q/d correctly
- remove constant casting and let ascentlint deal with any large values

Signed-off-by: Timothy Chen <timothytim@google.com>



======Commit: 2a12e171======
======Short Message======
[rtl/tlul_adapter_sram] fix bug with ifetch enable
======Full Message======
[rtl/tlul_adapter_sram] fix bug with ifetch enable

Signed-off-by: Udi Jonnalagadda <udij@google.com>



======Commit: 9d491bd8======
======Short Message======
[dvsim] Fix column bug in DV summary report
======Full Message======
[dvsim] Fix column bug in DV summary report

The DV Summary report is located here:
https://reports.opentitan.org/hw/top_earlgrey/dv/summary.html

The header row is skewed by 1 to the right and the center alignment is
broken. This commit fixes it.

Signed-off-by: Srikrishna Iyer <sriyer@google.com>



======Commit: a72c4dcb======
======Short Message======
[top] Hook-up ibex reset bypass
======Full Message======
[top] Hook-up ibex reset bypass

Fixes #6058

Signed-off-by: Timothy Chen <timothytim@google.com>



======Commit: bffbcad2======
======Short Message======
[sw/dif] Introduce the EDN header.
======Full Message======
[sw/dif] Introduce the EDN header.

dif_edn.h implements the interface for the Entropy Distribution Network
(EDN) device.

EDN supports two modes of operation:

 - boot-time: EDN configures the associated CSRNG instance to fetch pre-FIPS
   entropy immediately at boot-time or after reset.
 - auto refresh: EDN sends reseed and generate commands to the associated
   CSRNG instance. The API allows the user to set the CSRNG instantiate,
   reseed and generate para meters, as well as the reseed frequency.

Common set of operations for both boot-time and auto refresh modes:

  - `dif_edn_init()`
  - `dif_edn_configure()`

Order of operations in boot-time request mode:

  - `did_edn_boot_mode_start()`
  - `dif_edn_stop()`

Order of operations in auto refresh mode:

  - `dif_edn_auto_mode_start()`
  - `dif_edn_stop()`

Remaining work:

 - Add error status interface.

Signed-off-by: Miguel Osorio <miguelosorio@google.com>



======Commit: e9c1be61======
======Short Message======
[csrng/rtl] es seed capture timing fixed
======Full Message======
[csrng/rtl] es seed capture timing fixed

The capturing of the seed from entropy_src was off by a cycle.

Signed-off-by: Mark Branstad <mark.branstad@wdc.com>



======Commit: c33afd86======
======Short Message======
[dvsim] Fix testplan test counts
======Full Message======
[dvsim] Fix testplan test counts

The same tests mapped to different testplan entries get
multiply-counted, resulting in incorrect totals. This update fixes that.

Signed-off-by: Srikrishna Iyer <sriyer@google.com>



======Commit: c9e4ee83======
======Short Message======
[dvsim] Fix #6061
======Full Message======
[dvsim] Fix #6061

In the Scheduler code, if `poll()` is called but no jobs are actually
running, it is likely due to a SIGINT event. In that case, signal that
the status of the running jobs changed by returning True, so that the
status printer can print the final status one last time before exiting.

Signed-off-by: Srikrishna Iyer <sriyer@google.com>



======Commit: c67d179f======
======Short Message======
[otbn] Fix long comment
======Full Message======
[otbn] Fix long comment

Signed-off-by: Pirmin Vogel <vogelpi@lowrisc.org>



======Commit: 6357816a======
======Short Message======
[reggen,dv] Split some long lines in generated UVM code
======Full Message======
[reggen,dv] Split some long lines in generated UVM code

In order to get a proper "longlines" check in CI, it would be nice to
drop the current Verible configuration from 150 characters down to
100, to match AscentLint. Since we use that for DV code as well as
RTL, we there are a few other places that need tidying up.

This patch avoids the long lines in the generated UVM code, such as
chip_ral_pkg.sv.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 2af73a74======
======Short Message======
[top] Fixes for optimized modules
======Full Message======
[top] Fixes for optimized modules

- The pins used for creating ast clocks were sometimes being removed
  during synthesis optimization.  This caused a whole set of logic to
  not have a clock, even though the initial constraint definition was
  successful.

- Add buffers to anchor where the constraints would go and ensure logic is
  not removed.  Note this is only needed for open source synthesis since
  AST is not real

Signed-off-by: Timothy Chen <timothytim@google.com>



======Commit: 684fbc93======
======Short Message======
[keymgr] Width fixes
======Full Message======
[keymgr] Width fixes

- satisfy both ascentlint / verilator

Signed-off-by: Timothy Chen <timothytim@google.com>



======Commit: 947196bb======
======Short Message======
Update lowrisc_ibex to lowRISC/ibex@5c60b094
======Full Message======
Update lowrisc_ibex to lowRISC/ibex@5c60b094

Update code from upstream repository
https://github.com/lowRISC/ibex.git to revision
5c60b094fe550cde031b7d544a5a1791e7403a22

* [rtl] Break long lines in icache (Rupert Swarbrick)
* [rtl] Wire scan_rst_ni through ibex_top_tracing (Tom Roberts)
* [ibex] Add reset bypass controls (Timothy Chen)
* [ibex] Fix buffer instantiations (Timothy Chen)
* add cast to enum (Dawid Zimonczyk)

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 2832f448======
======Short Message======
[rom_ctrl] Fix lint error due to always process
======Full Message======
[rom_ctrl] Fix lint error due to always process

Signed-off-by: Michael Schaffner <msf@google.com>



======Commit: a4bebc02======
======Short Message======
[otbn] Fix minor lint warnings due to long lines
======Full Message======
[otbn] Fix minor lint warnings due to long lines

Signed-off-by: Michael Schaffner <msf@google.com>



======Commit: 0e07c359======
======Short Message======
[tops] Update waiver and fix minor lint issues
======Full Message======
[tops] Update waiver and fix minor lint issues

Signed-off-by: Michael Schaffner <msf@google.com>



======Commit: 7ddf09a8======
======Short Message======
[fpv] dvsim script error
======Full Message======
[fpv] dvsim script error

Formal.cfg hits an error when manually kill the job. The reason is
`mode.launcher.fail_msg` is not a string. I modify it to
`mode.launcher.fail_msg.message` then it works.

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: 3136b999======
======Short Message======
[otbn] Fix flake8 lint issues
======Full Message======
[otbn] Fix flake8 lint issues

Signed-off-by: Greg Chadwick <gac@lowrisc.org>



======Commit: 757278a7======
======Short Message======
[dv] fix some multi-ral issues
======Full Message======
[dv] fix some multi-ral issues

fix all ral models connected to the same adapter
and fix shadow reg ony from defaul ral and a similar issue in mem test

Signed-off-by: Weicai Yang <weicai@google.com>



======Commit: 4c583dea======
======Short Message======
[top] Connect RomCtrlSkipCheck
======Full Message======
[top] Connect RomCtrlSkipCheck

- default this value to 1 (this should be changed later)
- for synthesis, explicitly pass in 0 (this should be removed later)

Signed-off-by: Timothy Chen <timothytim@google.com>



======Commit: 13043ae2======
======Short Message======
[dv/doc] Minor fix on dv_doc
======Full Message======
[dv/doc] Minor fix on dv_doc

This PR fixes a missing ")" in dv doc and template.

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: 6e0fabb5======
======Short Message======
[dm] Fix name of waiver file
======Full Message======
[dm] Fix name of waiver file

It seems that I missed a "c" when I added it in the first place. Oops.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 0e25fd77======
======Short Message======
[otp_ctrl] Locally escalate upon a fatal alert/error
======Full Message======
[otp_ctrl] Locally escalate upon a fatal alert/error

Previously, only the affected FSM went into a terminal error state upon
encountering a fatal alert.

This commit widens the scope of that local countermeasure, and moves all
partitions controllers and FSMs into a terminal error state if any of
them experienced a fatal error/alert.

Signed-off-by: Michael Schaffner <msf@opentitan.org>



======Commit: 206721cc======
======Short Message======
[dvsim] Scheduler updates - max_parallel, max_poll
======Full Message======
[dvsim] Scheduler updates - max_parallel, max_poll

The max_parallel setting previously was a Scheduler class variable. It
has now been moved to the Launcher class, since each launcher variant
has different needs.

Likewise, 2 new features are added - `max_poll` and `poll_freq`. By
default, the max_poll 10K, and the polling frequency is 1 second.
The purpose of adding these knobs is to reduce the polling rate and the
number of jobs polled at a given time. With external launchers such as
LSF and cloud, polling for a job completion could involve multiple steps
and some external command invocations that are time-consuming. These
features help limit the time taken by the Scheduler to poll the entire
set of jobs. If we do not provide a way to fine-tune / adjust these
parameters, DVSim will appear to have hung (or worse, it could crash the
system).

The max_poll needs to cycle through the list of running jobs, rather
than just the first N ones. For example, if there are 5 jobs running [a,
b, c, d, e], and max_poll is set to 2, on the first poll window, it
polls for jobs a and b to complete. Then it polls b and c, followed by e
and a and so on. To allow this to happen, the list of running jobs now
needs to be maintained as a circular linked list, that supports
iterating through the list, while allowing jobs to be added or removed
from the list in realtime. This is achieved in the newly added
`CircularList` class.

Signed-off-by: Srikrishna Iyer <sriyer@google.com>



======Commit: 956b3f8f======
======Short Message======
[dvsim] Set `Deploy.job_name` more robustly
======Full Message======
[dvsim] Set `Deploy.job_name` more robustly

It is possible to have to sim_cfgs to have the same same, added to a
primary config supplied to DVSIm to run a large regression. For example:
SRAM_RET and SRAT_MAIN supply the Hjson with the same `name` attribute.
This causes a conflict in the `job_name` setting in the `Deploy`
class object. This PR fixes that by using `scratch_path` directory name
instead.

Signed-off-by: Srikrishna Iyer <sriyer@google.com>



======Commit: bd29a0e4======
======Short Message======
[top] Address reset bypass during DFT
======Full Message======
[top] Address reset bypass during DFT

This is a fix for #6191, however we need to confirm that scanmode
does not depend on trst_n before approving and merging.

Signed-off-by: Timothy Chen <timothytim@google.com>



======Commit: 2f35bed6======
======Short Message======
[rstmgr] Correctly connect scan bypassed reset
======Full Message======
[rstmgr] Correctly connect scan bypassed reset

Fixes #6193

Signed-off-by: Timothy Chen <timothytim@google.com>



======Commit: 479f000f======
======Short Message======
[hmac,lint] Use a static cast for RoundWidth in sha2.sv
======Full Message======
[hmac,lint] Use a static cast for RoundWidth in sha2.sv

This avoids a Verilator width mismatch error.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 9f686738======
======Short Message======
[hmac,lint] Explicitly convert width of BlockSize in hmac_core.sv
======Full Message======
[hmac,lint] Explicitly convert width of BlockSize in hmac_core.sv

When assigning to sha_message_length, BlockSize was being expanded to
64 bits (from a 32-bit "int"). In the comparison with txcount, it was
being truncated to (BlockSizeBits + 1) bits. In both cases, Verilator
warns about the width mismatch; this patch makes the conversions
explicit.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 5eba738c======
======Short Message======
[dm,lint] Silence some lint warnings in the debug module
======Full Message======
[dm,lint] Silence some lint warnings in the debug module

This removes almost all Verilator unused variable/bit warnings in the
debug module, leaving only a note about a "dmcontrol" helper variable,
which is probably better sorted out upstream.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 4366c82a======
======Short Message======
[rom_ctrl] A script to scramble a ROM image
======Full Message======
[rom_ctrl] A script to scramble a ROM image

This takes a 32-bit ELF file as input (something like the
boot_rom_sim_verilator.elf that we already create as part of the SW
build).

It pads the file up to the expected ROM size with pseudo-random data,
adds ECC checksum bits, extending to 40 bits in width and then
scrambles the result, writing out a VMEM file at the end.

This is not yet a complete solution because we don't calculate the
expected digest for the top 8 bytes (at the moment, they are all
zero). We'll come back to that once we have a proper model of the
interaction between rom_ctrl and the KMAC block.

As well as code to load a 32-bit ELF and write a 40-bit VMEM file,
this commit also has code to load VMEM files because the initial
version of this patch consumed e.g. boot_rom_sim_verilator.32.vmem.
The problem is that the build process has already zero-padded this
file internally, which we don't want, so we have to load
the (segmented) ELF instead. However, the VMEM loading code works and
might be useful soon, so I've left it in for now.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 791c7e65======
======Short Message======
[sw/dif] Move AES to a single error space.
======Full Message======
[sw/dif] Move AES to a single error space.

Part of lowrisc/opentitan#6137

Signed-off-by: Miguel Osorio <miguelosorio@google.com>



======Commit: c805f2f0======
======Short Message======
[dv/otp_ctrl] OTP_CTRL DV doc
======Full Message======
[dv/otp_ctrl] OTP_CTRL DV doc

This PR:
1. Finishes OTP_CTRL's DV documentation and the block diagram.
2. Fixes a few items in uvmdvgen documentation template.

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: 04d0752d======
======Short Message======
[otbn,doc] Fix mangled sentence in LOOP documentation
======Full Message======
[otbn,doc] Fix mangled sentence in LOOP documentation

Something went a bit awry when re-wording things to use ERR_BITS in
5ce1cb7b63.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 3ceee63f======
======Short Message======
[rom_ctrl] Initial design RTL for the ROM checker
======Full Message======
[rom_ctrl] Initial design RTL for the ROM checker

This has the counter FSM to read from ROM, the mux to arbitrate
between the checker and bus access, and a "compare" block to check
against expected outputs.

The checks that run at the start of time are all disabled by
default (because of the SkipCheck parameter). This means that we can
integrate this code with the top-level and teach pwrmgr to sequence
things properly before turning on the check.

This commit does not yet contain ROM scrambling (which will need a bit
more tooling work).

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: dcee03a9======
======Short Message======
[dv/dv_macros] Fix DV_PRINT_ARR_CONTENTS
======Full Message======
[dv/dv_macros] Fix DV_PRINT_ARR_CONTENTS

For array `arr` with a single value 42, DV_PRINT_ARR_CONTENTS
should print `arr[0] = 42 (0x2a)`; it currently prints
`arr[0] = 0x42[0x2a]`.

Signed-off-by: Guillermo Maturana <maturana@google.com>



======Commit: 38f5cac4======
======Short Message======
[csrng/rtl] added tracking sm fields to reg for debug
======Full Message======
[csrng/rtl] added tracking sm fields to reg for debug

The csrng command tracking state machine values have now been attached to an
observation register.

Signed-off-by: Mark Branstad <mark.branstad@wdc.com>



======Commit: 21509582======
======Short Message======
[pwm] Minor lint fixes
======Full Message======
[pwm] Minor lint fixes

Signed-off-by: Michael Schaffner <msf@google.com>



======Commit: c87c917b======
======Short Message======
[prim_usb_diff] Minor lint fix
======Full Message======
[prim_usb_diff] Minor lint fix

Signed-off-by: Michael Schaffner <msf@google.com>



======Commit: b3d80f8c======
======Short Message======
[spi_device] Minor lint fix
======Full Message======
[spi_device] Minor lint fix

AscentLint complains about a two-state type variable being assigned
to 4 state logic. Solution: make it a 4 state type.

Signed-off-by: Michael Schaffner <msf@google.com>



======Commit: c71e1689======
======Short Message======
[spi_host] Minor lint fixes
======Full Message======
[spi_host] Minor lint fixes

Signed-off-by: Michael Schaffner <msf@google.com>



======Commit: c035b84e======
======Short Message======
[chiplevel] Minor lint fixes
======Full Message======
[chiplevel] Minor lint fixes

Signed-off-by: Michael Schaffner <msf@google.com>



======Commit: 5c610e3e======
======Short Message======
[spi_device] Fix lint waiver format
======Full Message======
[spi_device] Fix lint waiver format

Signed-off-by: Michael Schaffner <msf@google.com>



======Commit: dca78f46======
======Short Message======
[aes] Fix lint waiver format
======Full Message======
[aes] Fix lint waiver format

Signed-off-by: Michael Schaffner <msf@google.com>



======Commit: ac567603======
======Short Message======
[lc_ctrl] Lint fixes and waivers
======Full Message======
[lc_ctrl] Lint fixes and waivers

Signed-off-by: Michael Schaffner <msf@google.com>



======Commit: 6abe0373======
======Short Message======
[entropy_src/rtl] fix for halt/start sequence
======Full Message======
[entropy_src/rtl] fix for halt/start sequence

Timing of setting register bits needed to be coordinated.

Signed-off-by: Mark Branstad <mark.branstad@wdc.com>



======Commit: 0caa1395======
======Short Message======
[keymgr,lint] Waive some Verilator warnings about array accesses
======Full Message======
[keymgr,lint] Waive some Verilator warnings about array accesses

"Fixing" this in the RTL would be hard. The problem is that you'd need
to make some 2-bit signals to represent the enum entries.
Unfortunately, AscentLint (the lint tool that we use for signoff)
doesn't accept code that extracts bits from enum values without an
explicit concatenation. So you end up having to write something like
this for each enum entry:

  localparam bit [2:0] OpAdvanceBits = {OpAdvance};
  localparam bit [1:0] ShortOpAdvance = OpAdvanceBits[1:0];

which is getting a bit ridiculous. Just waive the warning.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 11d9657f======
======Short Message======
[keymgr,lint] Fix minor width mismatches for round counts
======Full Message======
[keymgr,lint] Fix minor width mismatches for round counts

Another way to define e.g. LastAdvRound this would be code like
CntWidth'(AdvRounds - 1), but I think way this is probably better
because it ensures we're slicing rather than expanding.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 723c05e4======
======Short Message======
[flash_ctrl,lint] Fix various bit width mismatches
======Full Message======
[flash_ctrl,lint] Fix various bit width mismatches

Nothing clever going on here: we just make the various
slicing/expansion operations explicit to silence Verilator warnings.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 91a2335d======
======Short Message======
[sysrst_ctrl] cleaned up unused lint errors
======Full Message======
[sysrst_ctrl] cleaned up unused lint errors

Signed-off-by: Eric Shiu <eshiu@google.com>



======Commit: 2f164f89======
======Short Message======
Update lowrisc_ibex to lowRISC/ibex@0e7117fb
======Full Message======
Update lowrisc_ibex to lowRISC/ibex@0e7117fb

Update code from upstream repository
https://github.com/lowRISC/ibex.git to revision
0e7117fbec434fcfdf2bcce4ed379d34cdbe68b4

* [lockstep] Introduce optimization barrier around lockstep Ibex
  (Michael Schaffner)
* [dv] Remove MISA from csr_description.yaml (Greg Chadwick)
* Update README to match design (Philipp Wagner)
* Fix a couple of synthesis bugs (Tom Roberts)
* [dv] Improvements to functional coverage (Greg Chadwick)
* [rtl] Fix RF read enables for illegal instruction/fetch error (Greg
  Chadwick)
* [rtl] illegal_csr_write shouldn't factor in csr_op_en_i (Greg
  Chadwick)
* [dv] Add known failure detection to riscv_debug_ebreakmu_test (Greg
  Chadwick)

Signed-off-by: Tom Roberts <tomroberts@lowrisc.org>



======Commit: b168ae97======
======Short Message======
[otbn] Implement RND/URND CSR/WSR and RND_PREFETCH CSR
======Full Message======
[otbn] Implement RND/URND CSR/WSR and RND_PREFETCH CSR

This adds logic to read RND values from the EDN, removing the test RND
dummy value. A small cache to hold a single 256-bit random number from
an EDN request is provided. A RND_PREFETCH CSR is introduced which
prefetches to the cache when any value is written to it. Any RND read
will take the value from the cache, emptying it. If a value isn't
available in the cache the RND read will stall until one is available,
starting a new EDN request to fetch one if required.

An LFSR is added to supply values to URND. This is seeded via a request
to the EDN that occurs when OTBN starts. Execution cannot proceed until
the LFSR has been seeded.

Two dummy EDNs are provided in `otbn_top_sim.sv`. These provides the
existing test RND dummy value on every request after a fixed delay.

The ISS has been altered to support the new stalling behaviour for RND
reads. In a testbench the EDN interface is monitored and the ISS is
provided with RND values as they appear on the interface.

ISS support for URND has not yet been implemented, though it does
implement the stall at the beginning of execution whilst OTBN awaits a
URND reseed.

Signed-off-by: Greg Chadwick <gac@lowrisc.org>



======Commit: 53b946bb======
======Short Message======
[topgen] Fix enum type warnings
======Full Message======
[topgen] Fix enum type warnings

enum for top package did not define any type. Change them to `int
unsigned`.

Signed-off-by: Eunchan Kim <eunchan@opentitan.org>



======Commit: 6c80023b======
======Short Message======
[sw] Fix dependency to build coverage
======Full Message======
[sw] Fix dependency to build coverage

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: 69b1c422======
======Short Message======
[aes] Fix and realign LEC script for the different combinational S-Boxes
======Full Message======
[aes] Fix and realign LEC script for the different combinational S-Boxes

Signed-off-by: Pirmin Vogel <vogelpi@lowrisc.org>



======Commit: bdb0dcea======
======Short Message======
[aes] Add u_-prefix to module instances inside S-Boxes
======Full Message======
[aes] Add u_-prefix to module instances inside S-Boxes

Signed-off-by: Pirmin Vogel <vogelpi@lowrisc.org>



======Commit: 8ef4fdcd======
======Short Message======
[dv/dvsim] Provides more context on some failures.
======Full Message======
[dv/dvsim] Provides more context on some failures.

* For failures with non-zero exit code the last 10 lines of the log are also
  shown.
* For build failures the 10 lines starting at the error are also shown, since
  we typically have one build per dvsim run.
* For run failures we keep the messages as they are, since failures are
  bucketized.

Fixes lowRISC#6098

Signed-off-by: Guillermo Maturana <maturana@google.com>



======Commit: 32655b71======
======Short Message======
[ spi_host ] SPI_HOST Implementation
======Full Message======
[ spi_host ] SPI_HOST Implementation

Register Changes:

- Simplified Command structure to speed, direction, length, and CSAAT
- CSAAT moved out of CONFIGOPTS
- COMMAND register no longer a multi-reg
- Added a separate CSID register
- Added two new types of errors for command checking
- Removed Manual CS feature
- Made RX and TX FIFO come through the same register
- Simplified all reset registers into one SW_RST
- Renamed "BUSYERR" field to CMDBUSY, and homogenized dashes of similar registers
- Harmonized all FIFO related sizes and quantities to word-units and
  8 bit sizes
- ByteOrder now defaults to 1 (Little-Endian)
- Clarified operation of ByteOrder in description of !!DATA register

Inital implementation included

Signed-off-by: Martin Lueker-Boden <martin.lueker-boden@wdc.com>



======Commit: 587b7a3c======
======Short Message======
[dvsim] Fix local run error.
======Full Message======
[dvsim] Fix local run error.

Signed-off-by: Eunchan Kim <eunchan@opentitan.org>



======Commit: 3b847a73======
======Short Message======
[dv] Support multi-ral (part 4)
======Full Message======
[dv] Support multi-ral (part 4)

Just realized we should have different clock/rst for different TL
interface.
store multiple tl_vif in `clk_rst_vifs` and keep the default
`clk_rst_vif`

This is probably the final part of multi-ral support

Signed-off-by: Weicai Yang <weicai@google.com>



======Commit: a1a444c8======
======Short Message======
[flash/dv] Update tl_if path as it has multiple tl_if
======Full Message======
[flash/dv] Update tl_if path as it has multiple tl_if

Add suffix to distinguish 2 tl_if

Signed-off-by: Weicai Yang <weicai@google.com>



======Commit: bea621d1======
======Short Message======
[edn] Minor fix to get synthesis going again
======Full Message======
[edn] Minor fix to get synthesis going again

Signed-off-by: Michael Schaffner <msf@google.com>



======Commit: 76caf9ac======
======Short Message======
[dv/dvsim] Adds failure bucketizer for triage.
======Full Message======
[dv/dvsim] Adds failure bucketizer for triage.

Changes _post_finish to take an ErrorMessage as second argument.
Moves class SimCfg's Results to its own file and renames it to SimResults.
The bucketizer is called when initializing SimResults.
This will change when reruns are implemented, since we would want to
rerun one test per bucket as soon as the failing test completes.

Signed-off-by: Guillermo Maturana <maturana@google.com>



======Commit: fa9fc4d1======
======Short Message======
[dv/kmac] fix kmac_smoke nightly failures
======Full Message======
[dv/kmac] fix kmac_smoke nightly failures

Signed-off-by: Udi Jonnalagadda <udij@google.com>



======Commit: 17f4bf81======
======Short Message======
[pinmux] Update strap sampling mode in DFT-enabled LC states
======Full Message======
[pinmux] Update strap sampling mode in DFT-enabled LC states

This slightly modifies the strap sampling behavior in DFT-enabled
LC states. In particular, we now continously sample the straps in
those states, instead of gating the continous sampling mode
on whether the initial sample was nonzero or not.

This puts less burden on the emulation and simulation environments
where it the device can run in a DFT-enabled mode, since the
strap values may be changed arbitrarily during the test sequence.

This also changes the default life cycle state to RMA instead of DEV
for simulation and emulation environments to ungate all debug
infrastructure and functional modes.

Signed-off-by: Michael Schaffner <msf@google.com>



======Commit: aa96b51e======
======Short Message======
[dv/otp_ctrl] Fix regression lc output mismatch
======Full Message======
[dv/otp_ctrl] Fix regression lc output mismatch

This PR fixes three lc_esc related mismatch:
1). when lc_esc is On, the otp_lc_o should return default value.
2). when lc_esc is issued during otp write, it will wait until OTP write
complete, then backdoor align
3). when reset/lc_esc_on is issued during digest calculate, will use
backdoor to recover digest value.

This PR also adds lc_esc_en sequence to stress_all test.

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: b5b86863======
======Short Message======
[otbn] Clear CSRs/WSRs to 0 on start
======Full Message======
[otbn] Clear CSRs/WSRs to 0 on start

Fixes #5733

Signed-off-by: Greg Chadwick <gac@lowrisc.org>



======Commit: 6f9c25b3======
======Short Message======
[top] Fix a templating bug that breaks CI
======Full Message======
[top] Fix a templating bug that breaks CI

This appears to be a CI escape (possibly due to multiple PRs colliding),
and causes multiply-driven errors in VCS.

Signed-off-by: Michael Schaffner <msf@opentitan.org>



======Commit: 5b548d56======
======Short Message======
[csrng/rtl] Two csrng app interfaces working
======Full Message======
[csrng/rtl] Two csrng app interfaces working

Fixes to remove hang conditions.

Signed-off-by: Mark Branstad <mark.branstad@wdc.com>



======Commit: 6893dfe6======
======Short Message======
[csrng/rtl] csrng command tracker added
======Full Message======
[csrng/rtl] csrng command tracker added

Debug aid added to track csrng app commands.

Signed-off-by: Mark Branstad <mark.branstad@wdc.com>



======Commit: b3d45f60======
======Short Message======
[top] Various top level lint fixes
======Full Message======
[top] Various top level lint fixes

Signed-off-by: Timothy Chen <timothytim@google.com>



======Commit: 93e04381======
======Short Message======
[sram_ctrl] waive unused paramter error.
======Full Message======
[sram_ctrl] waive unused paramter error.

sram_ctrl currently does not instantiate the memory it controls.
As a result, parameters that are actually used by the memory and
not the controller appear as "unused".

Signed-off-by: Timothy Chen <timothytim@google.com>



======Commit: 190bdd28======
======Short Message======
[spi_dev] Attempt to fix combo loop
======Full Message======
[spi_dev] Attempt to fix combo loop

A combo loop was observed through the following path

data_i -> dp_sel -> data_o, which then loops back to data_i.

The issue is because in cmdparse the upload case immediately
selects a new datapath because there are no more guaranteed clocks
for certain commands.  However, this same combo selection does not
have to be used for the read return path, so the fix just flops the
read return on spi_clk_out (spi_clk_in might also be okay)

Signed-off-by: Timothy Chen <timothytim@google.com>



======Commit: 7b60d054======
======Short Message======
[edn] supply default value evne though data port not used
======Full Message======
[edn] supply default value evne though data port not used

Signed-off-by: Timothy Chen <timothytim@google.com>



======Commit: 2a1cf3e7======
======Short Message======
[dv/mem_bkdr_if] inject parity errors
======Full Message======
[dv/mem_bkdr_if] inject parity errors

this PR adds support to the mem_bkdr_if for parity error injection.

this is done by flipping a single bit in the byte data and backdoor
writing this corrupted data after calculating the parity based off of
the uncorrupted data value.

note that parity error injection will only work if the `MEM_PARITY`
parameter is enabled.

Signed-off-by: Udi Jonnalagadda <udij@google.com>



======Commit: e1e0fd6c======
======Short Message======
[flash_ctrl] update intergrity error handling
======Full Message======
[flash_ctrl] update intergrity error handling

- switch to random addr/data key when integrity error detected
- send fatal alerts when integrity error detected

Signed-off-by: Timothy Chen <timothytim@google.com>



======Commit: aa86723e======
======Short Message======
[mem_bkdr] Add a default case for memory init
======Full Message======
[mem_bkdr] Add a default case for memory init

- This is needed for flash info initilization
- While flash currently has ECC, it is not yet enabled.  Without a default
  case the info content does not initialize and flash dies on the initial seed read.

Signed-off-by: Timothy Chen <timothytim@google.com>



======Commit: 085e2fbc======
======Short Message======
[dv] Fix tl_error failure
======Full Message======
[dv] Fix tl_error failure

Thanks @cindychip for finding this failure

Signed-off-by: Weicai Yang <weicai@google.com>



======Commit: 8317b037======
======Short Message======
Update lowrisc_ibex to lowRISC/ibex@25cd6600
======Full Message======
Update lowrisc_ibex to lowRISC/ibex@25cd6600

Update code from upstream repository
https://github.com/lowRISC/ibex.git to revision
25cd6600c64e6eec4c3f5ee20237b53e4d5a3a52

* [dv] Don't kill regression on sim error (Greg Chadwick)
* [rtl] Add dual core lockstep option (Tom Roberts)
* [rtl] Add a new top level plus wiring (Tom Roberts)
* [rtl/icache] Move various parameters into the pkg (Tom Roberts)
* [rtl] Add SVA to ensure valid_i in compressed decoder is known
  (Pirmin Vogel)
* Update google_riscv-dv to google/riscv-dv@59dcd8c (Rupert Swarbrick)
* [util] Document required VCS version (Rupert Swarbrick)
* [util] Manually "vendor" latest check_tool_requirements.py (Rupert
  Swarbrick)
* Fix initialisation in ibex_icache_env_cfg.sv (Rupert Swarbrick)
* Update lowrisc_ip to lowRISC/opentitan@f29a0f7a7 (Rupert Swarbrick)
* Avoid encumbered name in ibex_icache_testplan.hjson (Rupert
  Swarbrick)
* [dv] Remove semicolon (Philipp Wagner)
* [dv] Fix name of ELF file in report (Philipp Wagner)
* [dv] Fix riscv_nested_interrupt_test (Greg Chadwick)
* [dv] Fix riscv_irq_in_debug_mode_test (Greg Chadwick)
* [dv] Allow full IRQ randomisation (Greg Chadwick)
* [dv] Small core_ibex_test_lib refactor (Greg Chadwick)

Signed-off-by: Tom Roberts <tomroberts@lowrisc.org>



======Commit: 6abe0ff0======
======Short Message======
[kmac, sha3] Add separate Verilator lint waiver files, fix some warnings
======Full Message======
[kmac, sha3] Add separate Verilator lint waiver files, fix some warnings

Signed-off-by: Pirmin Vogel <vogelpi@lowrisc.org>



======Commit: e7133731======
======Short Message======
[csrng] Fix Verilator lint warning, replace inline AscentLint waiver
======Full Message======
[csrng] Fix Verilator lint warning, replace inline AscentLint waiver

Signed-off-by: Pirmin Vogel <vogelpi@lowrisc.org>



======Commit: 22576257======
======Short Message======
[prim] Fix lint warnings, replace inline AscentLint waivers
======Full Message======
[prim] Fix lint warnings, replace inline AscentLint waivers

Signed-off-by: Pirmin Vogel <vogelpi@lowrisc.org>



======Commit: e1bc3619======
======Short Message======
[edn,lint] Fix width mismatch in the definition of cmd_sent
======Full Message======
[edn,lint] Fix width mismatch in the definition of cmd_sent

cmd_fifo_cnt_q is actually 4 bits wide in the current design. The
mismatch between that and 13'h01 causes Verilator width warnings.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: f479b9e7======
======Short Message======
[dvsim] Scratch root default to $REPO_TOP/scratch
======Full Message======
[dvsim] Scratch root default to $REPO_TOP/scratch

Use $REPO_TOP/scratch rather than CWD/scratch as the default scratch
area.

Signed-off-by: Srikrishna Iyer <sriyer@google.com>



======Commit: 75715405======
======Short Message======
[dv/otp_ctrl] Fix regression stress_all_with_reset error
======Full Message======
[dv/otp_ctrl] Fix regression stress_all_with_reset error

This PR fixes two errors in stress_all_with_reset test:
1. Constraint conflict: I will disable this constriant when
stress_all_with_reset test is running.

2. When reset is issued during OTP write, the scb cannot accurately
predict how much writing has OTP memory done. So the plan is to backdoor
read back the specific address after reset is issued.

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: a0980d32======
======Short Message======
[flash_ctrl] Correct behavior when buffer not enabled.
======Full Message======
[flash_ctrl] Correct behavior when buffer not enabled.

When buffer is not enabled, the flash_phy_rd may erroneously return data
to back to back transactions when it is not supposed to.

This happens because even when buffers are not enabled, the read data is
written into the holding FIFO between read and descramble stages.  As a
result, the return path falsely thinks the data is available and returns
it.

This causes an issue because even though the data is returned, the front door
logic has already created 2 transactions to the flash, and a result, we have
extra data returning.

The buffer not enabled case can be caused by otp_ctrl not returning the
flash controller's request for a key.  This in turn can happen because
entropy is not yet enabled.  This latter point deserves a wider discussion
as to the right solution.

To fix this, the forward hint is used to distinguish when the data in the
FIFO is valid vs when it is not.

Signed-off-by: Timothy Chen <timothytim@google.com>



======Commit: d6257b52======
======Short Message======
[dv/otp] force some signals to improve FSM error coverage
======Full Message======
[dv/otp] force some signals to improve FSM error coverage

This PR tries to improve OTP_CTRL's FSM coverage below:
1. sw partition check_fail: Since sw partition does not really do
otp_checks, the check_fail comes from internal ECC reg calculation
error. In this sequence, I force the error to bit 1 in order to trigger
check fail.

2. LC check fail: This is done when we program lc partition via LC
interface but did not perform a reset. This is not recommanded in OTP
spec so I did not support that in scb, but just use this sequence to
check.

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: 7e26d6f4======
======Short Message======
[dv/sram] increase timeout for bijecttion test
======Full Message======
[dv/sram] increase timeout for bijecttion test

this PR increases the timeout period for the bijection test,
fixing some nightly regression timeout failures.

Signed-off-by: Udi Jonnalagadda <udij@google.com>



======Commit: 7c0b5ea6======
======Short Message======
[dv] Support multi-ral (part 2)
======Full Message======
[dv] Support multi-ral (part 2)

Add change tl agent, cfg, adapter and related fifos to associative
arrays
keep `m_tl_agent_cfg` and `tl_sequencer_h`, when it only has one RAL, we
can continue to use the same way to control tl cfg and sequencer.
in scb, add `process_tl_access_for_non_default_intf` for non default
RAL. If only one RAL or default RAL, continue to use `process_tl_access`

In next PR, will update vseq and scb tl_err/mem predict.

Signed-off-by: Weicai Yang <weicai@google.com>



======Commit: a3e123fb======
======Short Message======
[formal] Clean up some formal warnings
======Full Message======
[formal] Clean up some formal warnings

This PR cleans up some formal warnings:
1. Formal will ignore the initial struct. For macros using initial (such
as `ASSERT_INIT), I added a workaround.
2. Disable formal warning for isunknown for non-constant argument. This
assertion is mainly used for simulation. In formal, it will randomly
pick a 1 or 0 if it unknown. So this warning will be ignored.
3. Add a two warnings to escalate into errors and stop the simulation.

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: 00c3db05======
======Short Message======
[csrng/rtl] correction for AES quiet equation
======Full Message======
[csrng/rtl] correction for AES quiet equation

Original equation reforming needed fixing.

Signed-off-by: Mark Branstad <mark.branstad@wdc.com>



======Commit: 3cba8f69======
======Short Message======
[spi_device] lint fixes
======Full Message======
[spi_device] lint fixes

- remove combo loop

Signed-off-by: Timothy Chen <timothytim@google.com>



======Commit: fe73d2ef======
======Short Message======
[pinmux] Lint fix
======Full Message======
[pinmux] Lint fix

line-up pad attribute bits with register read back bits.

Signed-off-by: Timothy Chen <timothytim@google.com>



======Commit: 5de89cb8======
======Short Message======
[sram_ctrl] Use the correct tl_instr_en_e
======Full Message======
[sram_ctrl] Use the correct tl_instr_en_e

This enum type is defined in both sram_ctrl_pkg.sv (as an 8-bit type
with values EnSramIfetch and DisSramIfetch) and in tlul_pkg.sv (as a
3-bit type with values InstrEn and InstrDis).

Importing the tlul_pkg version into scope in sram_ctrl is actually a
spec violation (SystemVerilog doesn't do shadowing, so you're not
allowed to import two things that clash) and also happens to confuse
Verilator's width inference.

Fortunately, everything sort of worked because the external ports used
the narrower type and the enum values had the same bottom bits, but it
was all a bit magic and kind of worked by luck. This patch explicitly
qualifies the name when we use tlul_pkg::tl_instr_en_e, which should
sort everything out.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 55ef1a6e======
======Short Message======
[otp_ctrl] Put req_type_o signal back again
======Full Message======
[otp_ctrl] Put req_type_o signal back again

This has been a rather complicated history, because of PRs colliding
in mid-air. The signal was added by commit 564683d and added a second
time by 5174eaf (a broken rebase). We then removed one copy in
05ef653, fixing the resulting compile error. And then 8d33919 removed
the other one: presumably another broken rebase.

Put one back!

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 7651597e======
======Short Message======
[otbn] Wire up bus intg_error_o signals
======Full Message======
[otbn] Wire up bus intg_error_o signals

These are merged together and cause a "bus integrity error", which is
a fatal alert.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: da747944======
======Short Message======
[rom_ctrl] Hook up the other bus integrity error signals in rom_ctrl
======Full Message======
[rom_ctrl] Hook up the other bus integrity error signals in rom_ctrl

It seems that I managed one register top but not the other one, or the
SRAM adapter. Oops!

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 93fe50cb======
======Short Message======
[top/chip] Rename chip-level tops
======Full Message======
[top/chip] Rename chip-level tops

This renames all target specific toplevels such that they are prefixed
with chip_* instead of top_*. This is done to distinguish the
autogenerated toplevel, which contains all the IPs, crossbar, etc, from
the chiplevel wrappers that are target-specific.

Note that another option would have been to rename
top_<name> -> <name>, but we refrained from doing so as this would
change the definition of what we have so far referred to as the top,
and would have a more profound impact on tooling scripts, generated
headers and packages that use the name top_<name> inline (e.g.
hierarchical paths) or as part of the file name.

Signed-off-by: Michael Schaffner <msf@google.com>



======Commit: 05ef6533======
======Short Message======
[otp_ctrl] fix compile error
======Full Message======
[otp_ctrl] fix compile error

TLUL port `req_type_o` was declared twice and has a compile error.
This PR fixes it.

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: 64430209======
======Short Message======
[rv_timer/lint] Waive a lint error that is ok
======Full Message======
[rv_timer/lint] Waive a lint error that is ok

Signed-off-by: Michael Schaffner <msf@google.com>



======Commit: 5174eaf8======
======Short Message======
[otp_ctrl] Several small lint fixes
======Full Message======
[otp_ctrl] Several small lint fixes

Signed-off-by: Michael Schaffner <msf@google.com>



======Commit: de7eba3d======
======Short Message======
[csrng/entropy_src] fix for #4601
======Full Message======
[csrng/entropy_src] fix for #4601

Inter-module signals to prevent power spikes.
Changed permissions for several files to not be executable.

Signed-off-by: Mark Branstad <mark.branstad@wdc.com>



======Commit: c6241a90======
======Short Message======
[prim_fifo_async] Make async FIFO output zero when empty
======Full Message======
[prim_fifo_async] Make async FIFO output zero when empty

This is configurable by the parameter `OutputZeroIfEmpty`, which
defaults to off.

Signed-off-by: Noah Moroze <noahmoroze@gmail.com>
Co-authored-by: Philipp Wagner <mail@philipp-wagner.com>



======Commit: 44add926======
======Short Message======
[keymgr,lint] Correct width for keymgr_stage_e enum
======Full Message======
[keymgr,lint] Correct width for keymgr_stage_e enum

The code in keymgr.sv sizes arrays (like adv_matrix, adv_dvalid,
id_matrix) to have 2**StageWidth entries. Here, StageWidth is
$clog2(KeyMgrStages) and is the number of bits needed to index into
the 3 possible stages (corresponding to the three valid enum values of
keymgr_stage_e).

In fact, we index into these arrays with the "stage_sel_o" output of
keymgr_ctrl, which can also have value 3 (= Disable).

Anyway, Verilator was complaining because we used a 3-bit enum
constant to index into an array of 4 entries. Fixing the enum width to
2 bits silences the warnings.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 84f7b4c1======
======Short Message======
[dv/otp_ctrl] Fix lc program checking and order
======Full Message======
[dv/otp_ctrl] Fix lc program checking and order

This PR reflects the change in issue #5942 where we decided to reverse
the order of LC_state and LC_cnt.
This PR also adds checking for otp_lc_data_o.

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: f0f5f692======
======Short Message======
[otp_ctrl,lint] Rejig logic for muxes in otp_ctrl_scrmbl
======Full Message======
[otp_ctrl,lint] Rejig logic for muxes in otp_ctrl_scrmbl

This avoids width mismatch errors (doing the bit slicing for
LastScrmblKey and LastDigestSet) and also factors out the bottom bits
of sel_i, which I think makes things look a bit cleaner.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: f6e68c27======
======Short Message======
[otp_ctrl,lint] Make narrowing for DigestOffset explicit
======Full Message======
[otp_ctrl,lint] Make narrowing for DigestOffset explicit

This silences some Verilator warnings in otp_ctrl_part_buf.sv and
otp_ctrl_part_unbuf.sv. Also, add an assertion to make sure that
OtpByteAddrWidth (which comes from the hjson file) is big enough for
everything to be representable. I think we'd silently miss errors
there before.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 413fe662======
======Short Message======
[flash_ctrl] Fix width mismatch
======Full Message======
[flash_ctrl] Fix width mismatch

CntWidth is defined as $clog2(ArbCnt + 1), so this slice is safe.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 83f9aa4d======
======Short Message======
[otbn] Explicitly stub off unused signal from tlul_adapter_sram
======Full Message======
[otbn] Explicitly stub off unused signal from tlul_adapter_sram

This output port was added by 4798f27 but the commit didn't stub it
off for all uses in the tree. Fix the resulting OTBN lint warning.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 12841fcc======
======Short Message======
[flash_ctrl,lint] Fix width errors for parameters in flash_ctrl_pkg
======Full Message======
[flash_ctrl,lint] Fix width errors for parameters in flash_ctrl_pkg

Most of these changes are pretty mechanical, silencing Verilator
warnings by making casts explicit.

The only non-trivial change is in flash_ctrl_info_cfg.sv, where a
page_addr_t structure (normally used for addressing pages within a
data partition) is used to address pages in an info partition. This
means that the "CurPage" index needs expanding from InfoPageW to
PageW. In practice, Info partitions are no bigger than data
partitions, so this should be fine, but we also add a comment and an
ASSERT_INIT to make sure this holds.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 71174e05======
======Short Message======
[dv/otp_ctrl] stress_all_with_rand_reset test part 1
======Full Message======
[dv/otp_ctrl] stress_all_with_rand_reset test part 1

This PR clears up stress_all_with_rand_reset test compile issues.
1. Fix the constraint names that does not match the base constraint name
2. Clean up cfg.hjson and testplan
3. Turn on the access mode for test_access region, so tl_error in
stress_all_with_reset sequence won't hang

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: 4798f27d======
======Short Message======
[flash] Improve flash ECC handling based on transasction attribute
======Full Message======
[flash] Improve flash ECC handling based on transasction attribute

Refer to #4812

- When an instruction type transaction sees an uncorrectable error, it is always returned to the source as an error.

- When a data type transaction sees an uncorrectable error, it is returned based on software configuration (this may be further improved to lv_hw_debug_en.  Discussions are ongoing).

- Regardless of the error return type to the source, the error is always collected in the flash_ctrl and alerts generated for consumption.

Signed-off-by: Timothy Chen <timothytim@google.com>



======Commit: 9bff8eae======
======Short Message======
[dvsim] Fix remaining comments  from #5876
======Full Message======
[dvsim] Fix remaining comments  from #5876

Signed-off-by: Srikrishna Iyer <sriyer@google.com>



======Commit: d4d59930======
======Short Message======
Correct a documentation error regarding DIFs
======Full Message======
Correct a documentation error regarding DIFs

DIFs are a verification resource and are intended to make writing DV and
silicon bringup code easier.

DIFs are not primitives for writing production code such as ROM, ROM_EXT,
bootloaders or kernel drivers.

Signed-off-by: Chris Frantz <cfrantz@google.com>



======Commit: ef62c7b2======
======Short Message======
[formal] unify export name and small clean up
======Full Message======
[formal] unify export name and small clean up

This PR has two purposes:
1. Unify the export names for fpv.tcl(use DUT_TOP) and conn.tcl(use TOP).
   This can help dvsim common_formal_cfg.hjson file to have one export.
2. Connectivity test uses default target instead of formal target.
Because it does not run any assertions and won't need to bind all extra
interfaces. It can just use design's default target.

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: 1909e9e0======
======Short Message======
[doc] Fix stand-alone documentation build instructions
======Full Message======
[doc] Fix stand-alone documentation build instructions

Signed-off-by: Colin O'Flynn <coflynn@newae.com>



======Commit: 4458f837======
======Short Message======
[otbn] Move to version 0.2
======Full Message======
[otbn] Move to version 0.2

OTBN is now in a consistent state from a specification, RTL,
verification, and software perspective. The respective D1/V1/S1 status
indicates that. We would like to use this opportunity to mark this state
as version 0.1 before we move out of this consistent state again.

Version 0.1 of OTBN isn't perfect -- there are known bugs and gaps in
the implementation, in the verification, in the DIF and test software,
and in the specification, as it would be expected for a design in
L1/D1/V1/S1 state. However, OTBN in its current state is good enough
to be synthesized properly, run RSA and ECDSA-P256 on it, and pass basic
verification. The specification has seen extensive review.

Going forward in version 0.2 we will (re-)open the discussion around some
aspects of the specification, mostly to add security hardening features,
and likely to be better suited for workloads we haven't considered so
far (e.g. SIMD instructions for SHA2).

For now, I'm leaving the D1/V1/S1 status in place (instead of going down
e.g. to D0), as it is still valid. In the past we were able in OTBN to
reasonably synchronously add support for new features to DIF, RTL, and
verification, which would keep the *1 status in place. However, we don't
have that many examples of version bumps in OpenTitan, and with that not
that many established guidelines that we could follow.

Finally: The version number does not have any semantic meaning whatsoever.

Documentation on versioning: https://docs.opentitan.org/doc/project/development_stages/#versioning

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: 751a37dd======
======Short Message======
[otp_ctrl,lint] Explicitly compare multi-bit signals with zero
======Full Message======
[otp_ctrl,lint] Explicitly compare multi-bit signals with zero

This is actually in our style guide ("Do not use multi-bit signals in
a boolean context"). The implicit boolean conversion also caused a
Verilator width warning. Use the relevant enum value (NoError)
instead.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 1d6600ed======
======Short Message======
[otp_ctrl,lint] Make casting explicit when computing otp_addr_o
======Full Message======
[otp_ctrl,lint] Make casting explicit when computing otp_addr_o

The previous code right-shifted a wide signal so that the interesting
stuff was in the low bits, then relied on Verilog to truncate away the
upper bits (causing Verilator to spit out width mismatch warnings).
This patch changes things so that we slice out the bits we want
explicitly.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 8235b73d======
======Short Message======
[sw, dif_aon_timer] Minor naming and documentation fixups
======Full Message======
[sw, dif_aon_timer] Minor naming and documentation fixups

Signed-off-by: Silvestrs Timofejevs <silvestrst@lowrisc.org>



======Commit: 070d956d======
======Short Message======
[dv/otp_ctrl] Add macro failure to otp init test
======Full Message======
[dv/otp_ctrl] Add macro failure to otp init test

The otp_init_fail can also be triggered by ECC failure.
ECC correctable failure will pass OTP init with an error.
ECC uncorrectable failure will fail OTP init with an alert.

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: f29a0f7a======
======Short Message======
[dv] Allow monitor items to have different types from sequence items
======Full Message======
[dv] Allow monitor items to have different types from sequence items

This was broken by 47c9510. This isn't the cleanest fix, because the
monitor class is still parameterised by types that it has no business
knowing about.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: e371842b======
======Short Message======
[docs/hugo] Move to hugo version 0.82.0
======Full Message======
[docs/hugo] Move to hugo version 0.82.0

When adding more pinmux signals and pads, we run into a
funny error where HUGO can't read the generated pinmux register
documentation anymore since the file is too big. This file
limitation has just recently (3 months ago) been removed.

See https://github.com/gohugoio/hugo/pull/8172 for reference.

This commit moves to HUGO 0.82.0 which contains this fix.

Signed-off-by: Michael Schaffner <msf@opentitan.org>



======Commit: 414f7a74======
======Short Message======
[dv/otp_ctrl] otp init failure test
======Full Message======
[dv/otp_ctrl] otp init failure test

This PR adds a otp_init failure test. This test will cause otp init
failure by creating init check errors. Scb is disabled in this test.

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: 4c519c55======
======Short Message======
[sw/dif] Fix dif_hmac.h clang-format
======Full Message======
[sw/dif] Fix dif_hmac.h clang-format

Also small compile fixes to dif_hmac_smoketest.c

Signed-off-by: Miguel Osorio <miguelosorio@google.com>



======Commit: 83490b62======
======Short Message======
[dif/hmac] Clarify Transaction Semantics
======Full Message======
[dif/hmac] Clarify Transaction Semantics

This changes the `_start` functions so the `DIGEST_SWAP` and
`ENDIAN_SWAP` `CFG` register bits are configured on a per-transaction
basis, rather than when the device is initialized.

This also solves a bug where the meaning of these values for big vs
little endian was swapped.

Signed-off-by: Sam Elliott <selliott@lowrisc.org>



======Commit: e0eefbce======
======Short Message======
[keymgr/dv] Fix scb for LC disable
======Full Message======
[keymgr/dv] Fix scb for LC disable

update state to StInvalid for LC disable
and align with design when LC disable occurs, no hw/sw input error will happen

Signed-off-by: Weicai Yang <weicai@google.com>



======Commit: f309ea55======
======Short Message======
[fpv] revert back the FPV compile error
======Full Message======
[fpv] revert back the FPV compile error

This PR revert back the previous workaround to avoid the compile error.
Now the JasperGold is fixed to support this `prim_lc_sync` syntax.

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: 737238f9======
======Short Message======
[dvsim] Fix primary_cfg handling
======Full Message======
[dvsim] Fix primary_cfg handling

Signed-off-by: Srikrishna Iyer <sriyer@google.com>



======Commit: 144c53de======
======Short Message======
[dvsim] Deal with non unicode chars in log files
======Full Message======
[dvsim] Deal with non unicode chars in log files

- get_status() reads the log file to look for errors. If non-unicode
chars are encountered, it barfs up completely. This should fix that.

Signed-off-by: Srikrishna Iyer <sriyer@google.com>



======Commit: 2773319d======
======Short Message======
[dvsim] Minor cleanups to to formal flow
======Full Message======
[dvsim] Minor cleanups to to formal flow

- Add `build_log` subst var and use it everywhere
- Replace FPV_TOP with DUT_TOP as the exported var representing the top
level DUT
- Fix FormalCfg to report tool flow errors correctly

Signed-off-by: Srikrishna Iyer <sriyer@google.com>



======Commit: 8e21e51a======
======Short Message======
[dvsim] Fixes to UNR and cov analysis flows
======Full Message======
[dvsim] Fixes to UNR and cov analysis flows

- Set Cov analysis to use GUI mode by default
- Designate input directories for both flows

Signed-off-by: Srikrishna Iyer <sriyer@google.com>



======Commit: a9bde869======
======Short Message======
[dvsim] LsfLauncher report early errors as F
======Full Message======
[dvsim] LsfLauncher report early errors as F

Reserve "K" exclusively for job killed either manually or if its deps
failed. Report everything else as a failure with "F".

Signed-off-by: Srikrishna Iyer <sriyer@google.com>



======Commit: 15f3a602======
======Short Message======
[dvsim] Minor fix in clean_odirs function
======Full Message======
[dvsim] Minor fix in clean_odirs function

The `clean_odirs` method takes `max_odirs` as an arg (which limits the
number of output directories to that number). This fixes the code to
handle `max_odirs = 1|0`.

Signed-off-by: Srikrishna Iyer <sriyer@google.com>



======Commit: 8ca91da4======
======Short Message======
[chip dv] Set +sw_images as comma-separated list
======Full Message======
[chip dv] Set +sw_images as comma-separated list

The `+sw_images` plusarg is currently set as a space separated list,
which requires it to be quoted. This plusarg is a part of `run_opts`,
which is yet another list of options that requires to be quoted too
(this means the quotes used in `+sw_images` need to be escaped).

The entire make command further needs to be set as a string when
launching over bsub / Google Cloud, which requires ... (see where I am
going?). `shlex.quote` does not work unfortunately.

Rather than have to deal with the headache of having properly escaped
quotes within escaped quotes, this change makes the `+sw_images` plusarg
a comma-separated list instead.

It also fixes a bug in the wildcard substitution code that processes
`{eval_cmd}`.

Signed-off-by: Srikrishna Iyer <sriyer@google.com>



======Commit: 10c6e5bf======
======Short Message======
[dv/otp_ctrl] Support ecc correctable error in otp check
======Full Message======
[dv/otp_ctrl] Support ecc correctable error in otp check

This PR supports ECC correctable error in otp_checks.
This error not trigger any alert, but just trigger an interrupt and
update error code accordingly.

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: 7cb51b32======
======Short Message======
[dv/alert_handler] Fix regression error
======Full Message======
[dv/alert_handler] Fix regression error

Two regression errors related to alert_handler:
1. If reset interrupt esc_cycle cnt, scb prediction might have one cycle
off due to reset is async, and we are only counting cycles at negedge
clock.
2. SCB is cycle accurate to predict esc_cnt, and currently scb only
support sending alert right when it finishes (not wait an extra cycle)
I will eventually try to support that in scb, but right now to pass
nightly regression, we will use this temp fix.

Finally I reduced the runtime for entropy_test. As there are 29 alerts
in top-level, it is hard to hit all corner cases by increase the
runtime. Need to fine tune and constraints.

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: 4653df9a======
======Short Message======
[fpv] Fix connectivity script folder name
======Full Message======
[fpv] Fix connectivity script folder name

This PR fixes connectivity script folder name.
Also small fix on auto-exit in gui mode.

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: dd87f4e8======
======Short Message======
[keymgr] Fix advance state when there is a HW input error
======Full Message======
[keymgr] Fix advance state when there is a HW input error

Update scb as #4899 is fixed

Signed-off-by: Weicai Yang <weicai@google.com>



======Commit: f92131e8======
======Short Message======
[rstmgr] clean-up for d2 preparation
======Full Message======
[rstmgr] clean-up for d2 preparation

- finish up documentation
- add regwen for debug dumping

Signed-off-by: Timothy Chen <timothytim@google.com>



======Commit: aceb52a2======
======Short Message======
[keymgr] Fix input value checks
======Full Message======
[keymgr] Fix input value checks

Fixes #5867

Signed-off-by: Timothy Chen <timothytim@google.com>



======Commit: 5dc16147======
======Short Message======
[keymgr] Treat operations as invalid during wipe
======Full Message======
[keymgr] Treat operations as invalid during wipe

- Fixes #5853

Signed-off-by: Timothy Chen <timothytim@google.com>



======Commit: a753d34a======
======Short Message======
[dif_kmac] Add header file and checklist for KMAC DIF.
======Full Message======
[dif_kmac] Add header file and checklist for KMAC DIF.

This API provides a streaming interface to the KMAC unit. The KMAC
unit will be initialized with information about how entropy will be
generated and the endianness of the message and digest. After that
a transaction can be started by passing the required information
(e.g. key) to a `dif_kmac_mode_{sha3,shake,cshake,kmac}_start`
function. Data is then passed into the hash function using the
`dif_kmac_absorb` function. Once the data to be hashed has been
completely absorbed the output (a.k.a. digest) can be written out
using the `dif_kmac_squeeze` function. The output may be a variable
or fixed length depending on the mode. Once the squeeze has been
started no further absorb operations can be performed. Finally,
`dif_kmac_end` is called to end the operation ready for a new
operation to be started.

Example:

```c
// Initial hardware configuration.
  dif_kmac_config_t config = (dif_kmac_config_t) {
    .entropy_mode = kDifKmacEntropyModeSoftware,
    .entropy_seed = generate_seed(),
    .entropy_fast_process = kDifKmacToggleEnabled,
    .message_endianness = kDifKmacEndiannessLittle,
    .output_state_endianness = kDifKmacEndiannessLittle,
  };
  CHECK(dif_kmac_configure(&kmac, config));

  // Example KMAC XOF calculation with empty customization string.
  CHECK(dif_kmac_mode_kmac_start(&kmac,
                                 0 /* L=0 (XOF) */,
                                 &key,
                                 nullptr /* S="" */));
  CHECK(dif_kmac_absorb(&kmac, msg, len, nullptr /* block */));
  CHECK(dif_kmac_squeeze(&kmac, out, len, nullptr /* block */));
  CHECK(dif_kmac_end(&kmac));
```

Signed-off-by: Michael Munday <mike.munday@lowrisc.org>



======Commit: 3d70205a======
======Short Message======
[flash_ctrl,lint] Fix width mismatch warnings
======Full Message======
[flash_ctrl,lint] Fix width mismatch warnings

The idx variable has width WordSelW, which is at least
$clog2(WidthMultiple). Explicitly slice out the relevant bits from
WidthMultiple - 1 to avoid a Verilator width mismatch warning.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: af66b988======
======Short Message======
[rstmgr] Fix width mismatch in rstmgr_por.sv
======Full Message======
[rstmgr] Fix width mismatch in rstmgr_por.sv

We can safely slice StretchCount here because CtrWidth is defined as
$clog2(StretchCount + 1).

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 51761ca5======
======Short Message======
[otp_ctrl/rtl] Fix otp_ctrl consistency check false alert
======Full Message======
[otp_ctrl/rtl] Fix otp_ctrl consistency check false alert

Solve issue #5870

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: 567afdbb======
======Short Message======
[spi_device] Lint fix
======Full Message======
[spi_device] Lint fix

- Removed undriven signals for synthesis
- Tied some unused signals to `unused_*`
- Waived unpacked array errors for one bit array signals

Signed-off-by: Eunchan Kim <eunchan@opentitan.org>



======Commit: fe452e49======
======Short Message======
[keymgr/dv] Fix asserton typo
======Full Message======
[keymgr/dv] Fix asserton typo

wanted to use asserton, but mistakenly used assertoff

Signed-off-by: Weicai Yang <weicai@google.com>



======Commit: 34f334fb======
======Short Message======
[dv/kmac] rework prefix calculation to fix #5755
======Full Message======
[dv/kmac] rework prefix calculation to fix #5755

Signed-off-by: Udi Jonnalagadda <udij@google.com>



======Commit: 0e71a670======
======Short Message======
[topgen] Impose an ordering on blocks in top_uvm_reg.sv.tpl
======Full Message======
[topgen] Impose an ordering on blocks in top_uvm_reg.sv.tpl

Tracing things back through topgen.py, the insertion order of
top.blocks depends on the order that the glob returns filenames in
search_ips (in lib.py). This isn't guaranteed to be stable across
machines and the whole thing feels a bit delicate either way.

This commit uses the blocks in alphabetical order. Another option
would be to order by the base address of the first instance: maybe a
bit nicer, but more work so I've gone with the easy solution first.

To check this works on a single machine, add the line

    ips.reverse()

just after the definition of ips in search_ips (in lib.py). The
generate results before and after the addition, diffing the two

    mkdir -p X
    util/topgen.py -t hw/top_earlgrey/data/top_earlgrey.hjson -r -o X

With this patch, nothing changes.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 985c9612======
======Short Message======
[reggen] Remove stray import
======Full Message======
[reggen] Remove stray import

This is unused since we removed fusesoc_core_name support and causes a
flake8 lint error.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: d37d10da======
======Short Message======
[dvsim] Add GUI mode for running simulations
======Full Message======
[dvsim] Add GUI mode for running simulations

The adds support for running simulations in GUI mode. This change plumbs
the dvsim switch `--gui` to the underlying tools. With VCS and Xcelium,
the respective GUI windows will open, exposing the UCLI prompt, where
the user can take control of running the simulation (debugging, adding
breakpoints etc).

If GUI mode is enabled and multiple tests are provided for run, it picks
the first and drops everything else. The onus is on the user to pick
correctly (pass a single test with `--items` and a specific seed with
`--seed`).

Further, in GUI mode, it drops the pass and fail patterns, since the
whole simulation is run from inside the tool (the log file is not
generated).

Only VCS and Xcelium are currently fully supported. For all others,
`--gui` has no effect.

Signed-off-by: Srikrishna Iyer <sriyer@google.com>



======Commit: 5f6bc725======
======Short Message======
[dv/otp_ctrl] fix lc_esc_req regression failure
======Full Message======
[dv/otp_ctrl] fix lc_esc_req regression failure

This PR fixes lc_esc_req regression failure.
Current issue:
If reset is issued during lc_prog_req, scb cannot predict how many OTP
memory cells have been programmed.

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: ee472e9f======
======Short Message======
[dv] Fix reg backdoor
======Full Message======
[dv] Fix reg backdoor

3 fixes in this PR
1. Fix hier_path not used in top reg
2. Fix path check didn't run properly as path types weren't given
3. Fix wrong error message `does not have hdl path defined for
abstraction 'RTL'`, we don't use `RTL` as hdl path, it should be
`BkdrRegPathRtl`

Signed-off-by: Weicai Yang <weicai@google.com>



======Commit: 63ebea22======
======Short Message======
[aes] Replace '{default:} by loop statements for parameterized signals
======Full Message======
[aes] Replace '{default:} by loop statements for parameterized signals

This is needed for Synopsys Design Compiler.

Signed-off-by: Pirmin Vogel <vogelpi@lowrisc.org>



======Commit: be212857======
======Short Message======
[reggen] Fix name for "u_reg" backdoor in RAL code
======Full Message======
[reggen] Fix name for "u_reg" backdoor in RAL code

The generated RAL code needs to know where to find the generated
register in the design. Before this patch, we had it hardcoded as
"u_reg" but that isn't going to work if there are multiple register
blocks in the design(!).

Here, we use the same naming convention as the rest of the reggen
code: if a device interface has an explicit name, "foo", we assume
things relating to the interface get a "_foo" suffix.

Also fix the name of the one example in the tree (in rom_ctrl.sv) to
match this convention.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 5c06a7b8======
======Short Message======
[kmac] Fix width mismatches in keccak_round.sv
======Full Message======
[kmac] Fix width mismatches in keccak_round.sv

Fixes minor nits that cause Verilator lint errors.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: b3b9a47c======
======Short Message======
[clkmgr] Wire up lc_dft_en_i at top-level
======Full Message======
[clkmgr] Wire up lc_dft_en_i at top-level

This port was added in fa60a60581 but wasn't added to
clkmgr.hjson.tpl, so we have a missing pin in top_earlgrey.sv, causing
lint errors. Wire it up with a default value for now.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: d15513ae======
======Short Message======
[rv_dm] Sign off debug module into D1
======Full Message======
[rv_dm] Sign off debug module into D1

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: 46703a32======
======Short Message======
[aes] Fix lint error
======Full Message======
[aes] Fix lint error

Signed-off-by: Pirmin Vogel <vogelpi@lowrisc.org>



======Commit: c658d4ee======
======Short Message======
[dif_alert_handler] Use auto-generated Hjson file
======Full Message======
[dif_alert_handler] Use auto-generated Hjson file

The alert_handler is an IP template which is instantiated with a
top_earlgrey-specific configuration. The C header file must be generated
from the templated Hjson file, not the example Hjson file which happens
to be in the tree as well, but doesn't contain the right configuration.

Fixes #5778

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: 5ae27dde======
======Short Message======
[otbn] Pedantic style fix
======Full Message======
[otbn] Pedantic style fix

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: 6bcea959======
======Short Message======
[aes] Editorial fixes in comments
======Full Message======
[aes] Editorial fixes in comments

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: e2301212======
======Short Message======
[otbn] Integrate ECC check bits properly into the memory
======Full Message======
[otbn] Integrate ECC check bits properly into the memory

These extra bits will be used for ECC-based integrity checks. We're
not doing that as yet, but want correctly sized memories for area
estimation.

We'd already expanded the memories, using the top bits as check bits.
Unfortunately, that causes (correctly) Verilator lint errors. Most are
easy enough to waive with unused_foo signals, but our choice of a
write mask doesn't divide into the memory size which causes warnings
in the SRAM primitive.

Rather than hack around further, this patch integrates things more
properly, putting 7 (ignored) "check bits" after each 32-bit word in
the data memory. For now, otbn.sv converts between the expanded
312-bit words and the narrow 256-bit words that the SRAM adapter, the
core and the model expect. Once we start generating/consuming
integrity properly, this conversion will essentially move to the Ibex
and OTBN ALUs.

As well as the narrowing/widening conversions in otbn.sv (repeated in
otbn_top_sim.sv), we also use the new Ecc32MemArea class to handle the
check bit insertion.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: a1eb13f4======
======Short Message======
[otbn] Fix link to DV documentation
======Full Message======
[otbn] Fix link to DV documentation

This fixes the missing link on the hardware dashboard.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 3fb45c6f======
======Short Message======
[pattgen] Fix width of literal in pattgen_chan.sv
======Full Message======
[pattgen] Fix width of literal in pattgen_chan.sv

I think this was probably copied from the previous line. pda_o should
be a single bit output.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 41d815de======
======Short Message======
[uvmdvgen] Fix has_interrupts in env_cfg
======Full Message======
[uvmdvgen] Fix has_interrupts in env_cfg

This PR fixes `env_cfg.sv.tpl` to not generate interrupt related code
when `has_interrupts` is not set.

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: 3800c6dc======
======Short Message======
[dv/otp] fix number of edn required for sram
======Full Message======
[dv/otp] fix number of edn required for sram

The num of EDN required for SRAM should be 12 instead of 10.

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: fb12cc29======
======Short Message======
[dv/otp_ctrl] fix regression otp ecc error
======Full Message======
[dv/otp_ctrl] fix regression otp ecc error

This PR fixes regression ECC error. If there is an ACCESS ERROR, OTP
won't detect ECC error because the read is blocked.

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: 0c49992b======
======Short Message======
[kmac] Fix app_config_t to work with Verilator
======Full Message======
[kmac] Fix app_config_t to work with Verilator

Verilator doesn't have proper support for unpacked structs. Since we
don't need one here, we can just declare app_config_t to be packed.

Also, it seems to have rather strange behaviour with int enums when
used as fields in a struct. I've reported this on the Verilator bug
tracker as issue #2855 but there's an easy workaround here, which is
probably what we'd want for synthesizable code anyway.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: f3a8de56======
======Short Message======
[kmac] Add Prefix Mux to App intf
======Full Message======
[kmac] Add Prefix Mux to App intf

This commit adds prefix mux fow app interface.
It `PrefixMode` parameter in `AppCfg` is 1'b 1, the kmac_app module uses
Prefix from AppCfg.

Signed-off-by: Eunchan Kim <eunchan@opentitan.org>



======Commit: 44fe217a======
======Short Message======
[csrng] Fix some width mismatches
======Full Message======
[csrng] Fix some width mismatches

These cause lint errors from Verilator. Most of the changes are
mechanical, but I've changed the left shift that computes
concat_outblk_shifted_value to add the BlkLen zeros at the bottom
explicitly (I think we might have been silently dropping the top block
before).

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 65e84efb======
======Short Message======
[otp_ctrl] Return bus errors when FSM is in error state
======Full Message======
[otp_ctrl] Return bus errors when FSM is in error state

Fix #5790

Signed-off-by: Michael Schaffner <msf@opentitan.org>



======Commit: 08adf5b3======
======Short Message======
[otbn] Wrap non-synthesizeable code with defines
======Full Message======
[otbn] Wrap non-synthesizeable code with defines

Some dv code in otbn is included as part of the design core files
to do side by side comparisons.  These files need to be wrapped with
the SYNTHESIS flag to ensure they do not get parsed for synthesis.

Applying this fix to otbn_memutil_pkg.sv (the same fix is already applied
to various other model files).

Signed-off-by: Timothy Chen <timothytim@google.com>



======Commit: 19a2795e======
======Short Message======
[sw/dif_keymgr] Minor fixes and updates in dif_keymgr.h
======Full Message======
[sw/dif_keymgr] Minor fixes and updates in dif_keymgr.h

Signed-off-by: Alphan Ulusoy <alphan@google.com>



======Commit: 593d2aa5======
======Short Message======
[sw/dif_pwrmgr] Fix a typo in dif_pwrmgr_unittest.cc
======Full Message======
[sw/dif_pwrmgr] Fix a typo in dif_pwrmgr_unittest.cc

Signed-off-by: Alphan Ulusoy <alphan@google.com>



======Commit: be7f5a59======
======Short Message======
[kmac] Change App Intf to unpacked array
======Full Message======
[kmac] Change App Intf to unpacked array

This commit changes `app_i/o` to array port in kmac_app module.
Its size is determined by `NumAppIntf` parameter in kmac_pkg.

To arbitrate among the requests, fixed priority arbiter module is used.

Signed-off-by: Eunchan Kim <eunchan@opentitan.org>



======Commit: b9b6165d======
======Short Message======
[sram_ctrl,lint] Fix width of RndCnstSramLfsrPermDefault
======Full Message======
[sram_ctrl,lint] Fix width of RndCnstSramLfsrPermDefault

This is a 160-bit parameter, so we should use a 160-bit
default (silencing a lint warning). This is grabbed from the random
constant we've currently got in top_earlgrey.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: c41e436b======
======Short Message======
[keymgr, lint] Express rounding differently to avoid lint errors
======Full Message======
[keymgr, lint] Express rounding differently to avoid lint errors

These three localparams are of the form ceil(A / B). The existing code
is rather nice, but Verilator treats (X > 0) as a 1-bit expression, so
it then complains if you add it to the A/B quotient. Use the usual
formula of (A + B - 1) / B to avoid the problem.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 4791da5f======
======Short Message======
[pwrmgr / usbdev] Minor fixes for low power entry / exit
======Full Message======
[pwrmgr / usbdev] Minor fixes for low power entry / exit

- fix wakeup reason mapping to be consistent with registers
- correct reversed polarity on low power activation
- add missing dependency in core file

Signed-off-by: Timothy Chen <timothytim@google.com>



======Commit: 7355a1ec======
======Short Message======
[dvsim] Fix printing of last 10 lines
======Full Message======
[dvsim] Fix printing of last 10 lines

If an error is encountered, the last 10 lines are printed (if none of
the fail patterns are seen). During the last refactor, this part got
broken.

Signed-off-by: Srikrishna Iyer <sriyer@google.com>



======Commit: ee11011f======
======Short Message======
[entropy_src/rtl] fixes #5800
======Full Message======
[entropy_src/rtl] fixes #5800

RNG FIFO had the incorrect pop signal.

Signed-off-by: Mark Branstad <mark.branstad@wdc.com>



======Commit: 8f4d13d6======
======Short Message======
[primgen] Minor fix to enable types with underscores
======Full Message======
[primgen] Minor fix to enable types with underscores

Signed-off-by: Michael Schaffner <msf@google.com>



======Commit: 5f995272======
======Short Message======
[kmac] Define Application interface config
======Full Message======
[kmac] Define Application interface config

This commit defines necessary config type and planned config values for
upcoming application interface in kmac_pkg.sv.

It has three config values per application port.

- Mode: choose the KMAC algorithm among SHA3, cSHAKE, KMAC
- PrefixMode: in cSHAKE, KMAC, determines whether the prefix coming from
  CSRs or compile-time parameter `Prefix` below.
- Prefix: If `PrefixMode` is 1, then this constant is used as prefix in
  cSHAKE.

Signed-off-by: Eunchan Kim <eunchan@opentitan.org>



======Commit: da490e7b======
======Short Message======
[otbn] Document the idle_o signal
======Full Message======
[otbn] Document the idle_o signal

As Sri pointed out, I've just added some DV code that checks the
idle_o signal does what I think it should do, but this isn't actually
specced anywhere. Fix that!

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: f49bee18======
======Short Message======
[dvsim] Prevent command echo suppression
======Full Message======
[dvsim] Prevent command echo suppression

At some point in the past, I had refactored the way SW images were
handled. I had added `.ONESHELL:` to the `sw_build` target, assuming
that the `.ONESHELL` would only affect that target (cause all recipes of
a target to execute in the same shell). Turns out, its more of a global
setting - it affects ALL recipes of all targets.

This had an unintended consequence:
For all targets, the first recipe is an echo command printing the name
of that target, the echoing of which is suppressed with an `@`. Because the
rest of the recipes get invoked in the same shell, their echoing is also
suppressed. This makes issues hard to debug.

In this change, the `.ONESHELL` is removed, and all recipes of
`sw_build` are invoked one the same line with a trailing `\`. The first
command is `set -e` which is the equivalent of all commands chained with
`&&` (which is already what we want).

Signed-off-by: Srikrishna Iyer <sriyer@google.com>



======Commit: e390f206======
======Short Message======
[dv/otp_ctrl] Add back tlul error data check
======Full Message======
[dv/otp_ctrl] Add back tlul error data check

This PR is based on PR #5784 that design will always return d_data as 0
when d_error occurred in tlul memory read.
This PR also:
1. add more possiblilities to hit the TLUL sw partition memory error
case
2. include digest address in tlul memory error check

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: abd74ca5======
======Short Message======
[spi] Remove a few lint errors to clean-up output
======Full Message======
[spi] Remove a few lint errors to clean-up output

- tie off unused from spi host
- temporarily remove combo loop in spi device
- changes to case inside usage

Signed-off-by: Timothy Chen <timothytim@google.com>



======Commit: d60792a0======
======Short Message======
minor lint fixes
======Full Message======
minor lint fixes

Signed-off-by: Timothy Chen <timothytim@google.com>



======Commit: 9698a118======
======Short Message======
[otp_ctrl] Fix PartEnd overflow in otp_ctrl_dai
======Full Message======
[otp_ctrl] Fix PartEnd overflow in otp_ctrl_dai

Signed-off-by: Michael Schaffner <msf@opentitan.org>



======Commit: c18d7c4b======
======Short Message======
[otp_ctrl] Tie data response to 0 in case of an access error
======Full Message======
[otp_ctrl] Tie data response to 0 in case of an access error

Signed-off-by: Michael Schaffner <msf@opentitan.org>



======Commit: 2e6a6c60======
======Short Message======
[aes] Add documentation on security hardening, enable masking by default
======Full Message======
[aes] Add documentation on security hardening, enable masking by default

Signed-off-by: Pirmin Vogel <vogelpi@lowrisc.org>



======Commit: 496fd343======
======Short Message======
[otbn] Changes to indirect register usage and increments
======Full Message======
[otbn] Changes to indirect register usage and increments

* If a value greater than 31 is used for an indirect register reference
  an `illegal_insn` error is raised.
* Increment no longer wraps

Fixes #4808

Signed-off-by: Greg Chadwick <gac@lowrisc.org>



======Commit: e8fd23e1======
======Short Message======
[sw/dif] Introduce CSRNG header
======Full Message======
[sw/dif] Introduce CSRNG header

This API implements an interface for the CSRNG hardware.

The API follows the naming conventions used in NIST SP 800-90Ar1:

- Instantiate.
- Update
- Reseed
- Generate
- Uninstantiate

The seed used for instantiation can either be provided directly in
hardware by an entropy source module; or directly by software. See
`dif_csrng_instantiate()` and `dif_csrng_instantiate_source` for
more details.

The following sequence of operations are required to initialize
and generate criptographic entropy from the CSRNG module:

- `dif_csrng_init()`
- `dif_csrng_configure()`
- `dif_csrng_instantiate()`
- `dif_csrng_generate()`
- `dif_csrng_unistnantiate()`

The following functions can be used for reseed and update operations:

- `dif_csrng_reseed()`
- `dif_csrng_update()`

The following utility functions are available to poll the state of
the hardware:

- `dif_csrng_get_cmd_interface_status()`
- `dif_csrng_get_output_status()`

Please see the following documentation for more information:
https://docs.opentitan.org/hw/ip/csrng/doc/

Remaining work:

- Add error status interface.
- Add internal state control and debug interface.

Signed-off-by: Miguel Osorio <miguelosorio@google.com>



======Commit: 7df14340======
======Short Message======
[util] Fix some minor indent issues
======Full Message======
[util] Fix some minor indent issues

Signed-off-by: Timothy Chen <timothytim@google.com>



======Commit: ad995692======
======Short Message======
[kmac] Rewrite a replication in a form that Verilator likes
======Full Message======
[kmac] Rewrite a replication in a form that Verilator likes

Verilator complained about the previous version because unsized
integers aren't allowed in concatenations. This is arguably a
Verilator bug, since the cast gives the value a width. Let's rewrite
this in a format that Verilator likes for now, while we try to get
things fixed.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 96d77bd1======
======Short Message======
[kmac] Make types of single-bit parameters match
======Full Message======
[kmac] Make types of single-bit parameters match

We had a mix of ints and bits, which causes width mismatch errors with
Verilator. Since these are used as booleans, convert them all to bit.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: b43415ad======
======Short Message======
[spi_device] Correct syntax for set membership case statement
======Full Message======
[spi_device] Correct syntax for set membership case statement

The braces here would mean that we're checking whether the opcode is a
concatenation of opcodes, not whether it's one of the given set. This
causes Verilator warnings (and is a pretty clear bug!).

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 0a14f39c======
======Short Message======
[spi_device] Fix assorted width mismatches
======Full Message======
[spi_device] Fix assorted width mismatches

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 0e71e804======
======Short Message======
[spi_device] Fix width in definition of MailboxMask
======Full Message======
[spi_device] Fix width in definition of MailboxMask

Verilator complains about a width mismatch with the existing code (an
XOR where one side has 32 bits and the other has 2+MailboxAw). Rather
than zero-extending and XOR'ing with '1, invert things: I think it's
probably easier to read anyway.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 26eb7b22======
======Short Message======
[spi_device] Fix name of variable in spi_readcmd
======Full Message======
[spi_device] Fix name of variable in spi_readcmd

The write-enable is called sram_we_o, not sram_write_o.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 8472ebe0======
======Short Message======
[aes] Fix lint errors
======Full Message======
[aes] Fix lint errors

Signed-off-by: Pirmin Vogel <vogelpi@lowrisc.org>



======Commit: f2b7ef06======
======Short Message======
[otbn] Add a "multi" vseq to run binaries back-to-back
======Full Message======
[otbn] Add a "multi" vseq to run binaries back-to-back

This should catch errors where we don't re-initialise enough of the
design when starting a new operation. It intentionally doesn't do a
reset, which would hide that sort of thing.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 37b0c994======
======Short Message======
[dvsim] Spot fixes for LSF and internal launcher
======Full Message======
[dvsim] Spot fixes for LSF and internal launcher

Over the past few weeks, the scheduling and launching mechanism were
refactored to fully support LSF and our Google cloud which is used
internally.

The fixes made in this PR are minor ones to support our internal cloud
launcher (which will not be committed to our open repo).

The fixes are as follows:
- Updates to commands and env vars in the HJson data
- Addition of `input_dirs` and `output_dirs` variables in `Deploy`
  - This is needed only for the cloud launcher because jobs with cloud
  run in a hermetically sealed VM which needs to explicitly indicate
  what the input and output data is.
  - We will refactor this again in future when we will flip the Deploy
  and Launcher hierarchy.
- Fixes to command sub-strings (ensure they are quoted properly)
- Allow remote launchers to set their own python virtualenv region
- Some cosmetic changes

Signed-off-by: Srikrishna Iyer <sriyer@google.com>



======Commit: 5c6da15f======
======Short Message======
[fpv/rstmgr] FPV compile error
======Full Message======
[fpv/rstmgr] FPV compile error

This PR fixes a compile error in FPV. I will contact the AE and see if
they can fix it. Right now the prim_lc_sync syntax works for simulation
but not FPV.

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: cf02fd20======
======Short Message======
[dv] Fix AST hdl path
======Full Message======
[dv] Fix AST hdl path

Add a dict `attrs` in top to contain modules' attr
Update based on new reggen #5564, and close previous fix #5558

Signed-off-by: Weicai Yang <weicai@google.com>



======Commit: f0e1afce======
======Short Message======
[otp] Cast between different widths more explicitly in otp_ctrl_dai
======Full Message======
[otp] Cast between different widths more explicitly in otp_ctrl_dai

The existing code was causing Verilator lint errors and this patch
makes the casts explicit, adding comments to explain why they are
right and adding a couple of assertions to make sure nothing comes
unstuck.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: ca8dabd0======
======Short Message======
[dv/otp_ctrl] Fix tb issues related to mem
======Full Message======
[dv/otp_ctrl] Fix tb issues related to mem

This PR fixes a few testbench issues with OTP TLUL mem.
1. If read lock is set, otp sw access memory partition will be locked.
So we override the cip_base_scb function.
2. Fix sequence issue that never lock the read partition (The lock is
reverted by reset)

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: ee06fea1======
======Short Message======
[spi_device] Read Command module
======Full Message======
[spi_device] Read Command module

This commit implements Read command processing block. It recevies
commands from cmdparse module and reads data from DPSRAM, then returns
the data through SPI interface by sending bytes to spi_p2s module.

It detects the command type and switch the line mode from SingleIO to
DualIO or QuadIO if commands are Fast Read Dual, Fast Read Dual IO, Fast
Read Quad, Fast Read Quad IO. For IO commands, the module accepts multi
line address inputs.

It also fixes lint and synthesis errors in the other modules inside
SPI_DEVICE such as cmdparse, SPI-to-Parallel modules.

Then, this commit instantiates cmdparse and readcmd modules in the IP
top.

Signed-off-by: Eunchan Kim <eunchan@opentitan.org>



======Commit: 0364ad1f======
======Short Message======
[otbn] Generate an immediate error on trace mismatch
======Full Message======
[otbn] Generate an immediate error on trace mismatch

We were previously stumbling along until the end of the simulation,
which is ok when it's in the console, but runs the risk of actually
missing stuff if it happens deep inside a regression run.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 0920acc8======
======Short Message======
[otbn] Teach RIG not to choose GPRs pointing at invalid WDRs
======Full Message======
[otbn] Teach RIG not to choose GPRs pointing at invalid WDRs

A previous version of the OTBN spec said that the instructions
BN.LID, BN.SID and BN.MOVR would just look at the bottom 5 bits of the
value of the GPR used to choose the WDRs they'd read or write. We're
changing the spec so that an invalid index causes an error; teach the
RIG about this to avoid generating lots of spurious streams.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 613d37f0======
======Short Message======
[rstmgr] Fix several controllable reset issues
======Full Message======
[rstmgr] Fix several controllable reset issues

See #5601 and #5602

Signed-off-by: Timothy Chen <timothytim@google.com>



======Commit: 12ad5412======
======Short Message======
[fpv/otp_ctrl] fix assertion issue
======Full Message======
[fpv/otp_ctrl] fix assertion issue

This PR fixes an assertion error in DV regression. In property, it
already includes a one cycle delay. Using `=>` gives an extra cycle that
causes the failure.

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: 0464b8aa======
======Short Message======
[fpv/otp_ctrl] Disable assertions due to lc_esc_en
======Full Message======
[fpv/otp_ctrl] Disable assertions due to lc_esc_en

This PR disable `prim_sync_reqack` assertion that checks request has to
stay high until ack. This scenario won't work if `lc_escalate_en` is
issue. Then the req will reset to default even though ack is still low.

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: 78173843======
======Short Message======
Update lowrisc_ibex to lowRISC/ibex@4b43afa5
======Full Message======
Update lowrisc_ibex to lowRISC/ibex@4b43afa5

Update code from upstream repository
https://github.com/lowRISC/ibex.git to revision
4b43afa53315d00784d5c3b714583276127eddcc

* [doc] Fix table rendering for `mseccfg` (Greg Chadwick)
* [rtl] Add MSECCFGH CSR (Greg Chadwick)
* [rtl] Hard wire dcsr.stepie to 0 (Greg Chadwick)
* [rtl] Fix hardware breakpoints and exceptions interaction (Greg
  Chadwick)
* Fix spacing for bullet points to appear (Yusef Karim)
* [ci/ibex] temporarily remove pmp_full_random_test (Udi Jonnalagadda)

Signed-off-by: Greg Chadwick <gac@lowrisc.org>



======Commit: bca085f3======
======Short Message======
[keymgr] Fix advance state consistency
======Full Message======
[keymgr] Fix advance state consistency

Address #4899

Signed-off-by: Timothy Chen <timothytim@google.com>



======Commit: a560a2ce======
======Short Message======
[dv] Fix mem test hang
======Full Message======
[dv] Fix mem test hang

Recently I updated to count N access of read for mem test, but read only
occurs after at least a mem address is written. If reset occurs before any write,
it will forever sending read access, which creates a deadloop

Signed-off-by: Weicai Yang <weicai@google.com>



======Commit: 44bf5faa======
======Short Message======
[fpv/rv_plic] Fix compile error from auto-gen csr_fpv_assert core file
======Full Message======
[fpv/rv_plic] Fix compile error from auto-gen csr_fpv_assert core file

This PR fixes a fusesoc dependency error from auto-generated
csr_fpv_assertion core file.
In `ip_block.py` we assume all IP core file names are
`lowrisc:ip:{block_name}`. However, for rv_plic, it is called
`lowrisc:ip:rv_plic_example`. So in hjson file, I added the core name to
avoid fusesoc compile error.

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: 7b247667======
======Short Message======
[otbn,dv] Generate the OTBN testplan for documentation
======Full Message======
[otbn,dv] Generate the OTBN testplan for documentation

Also fix up some stale text about how we generate binaries for
testing and remove some stale TODOs.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 27169bbd======
======Short Message======
[sw,dv] Update headers to pass fix_include_guards.py
======Full Message======
[sw,dv] Update headers to pass fix_include_guards.py

See also #5693 which fixes headers using #pragma once.

Signed-off-by: Alex Bradbury <asb@lowrisc.org>



======Commit: 53e3d967======
======Short Message======
[otbn] Tidy up how we call gen-binaries.py from UVM
======Full Message======
[otbn] Tidy up how we call gen-binaries.py from UVM

Now we just generate one binary for each test (rather than generating
20 and only using one of them!). Also, we bump up the default reseed
count for otbn_single so that the nightly test has more chance of
seeing things going wrong.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 967319de======
======Short Message======
[aon_timer] Lint fixes
======Full Message======
[aon_timer] Lint fixes

Ascentlint doesn't pick up the unused_* bits from inside a struct and so
is failing on the intr_state bits. This commit lists them out explicitly
which will hopefully silence the warning.

Signed-off-by: Tom Roberts <tomroberts@lowrisc.org>



======Commit: f63bf6a5======
======Short Message======
[xbar/dv] Fix assertion error due to short reset
======Full Message======
[xbar/dv] Fix assertion error due to short reset

xbar has 2 clock domains. reset needs to last for at least one clock to
avoid false alarm from SVA as assertion checks reset at the active clock
edge.
increase reset to 50-100 TL clock periods, which should be long enough
for most of IPs. (default faster clock / slowest clock < 10)

Signed-off-by: Weicai Yang <weicai@google.com>



======Commit: c439f967======
======Short Message======
[dv/otp_ctrl] Fix killing push-pull agent seq
======Full Message======
[dv/otp_ctrl] Fix killing push-pull agent seq

When lc_escalate_en is On, it will turn all state machines to ErrorSt
and all output to defaults. Thus if pull request is sent, if won't get
any responses.

Previous code handle it by directly kill the sequence, but this is not
recommended, as it could casue some error in sequencer. Current method
set the push-pull sequence to non-blocking mode when lc_escalate_en is
On. Then scb will ensure the request never gets reponses. And eventually
we will issue reset to clear the push-pull sequence.

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: 8f21c2d3======
======Short Message======
[sw, silicon_creator] Place mask_rom and rom_ext under a common dir
======Full Message======
[sw, silicon_creator] Place mask_rom and rom_ext under a common dir

The main motivation:
Silicon Creator common code can live in the top directory, whilst
component specific (MaskROM and ROM_EXT) code is nested under their
respective sub-directories.

```
cd $REPO_TOP
mkdir sw/device/silicon_creator
mv sw/device/mask_rom sw/device/silicon_creator
mv sw/device/rom_exts sw/device/silicon_creator

sed -i 's/sw\/device\/rom_exts/sw\/device\/silicon_creator\/rom_exts/' \
`grep -ril sw/device/rom_exts --exclude-dir=build* --exclude-dir=.git*`

sed -i 's/sw\/device\/mask_rom/sw\/device\/silicon_creator\/mask_rom/' \
`grep -ril sw/device/mask_rom --exclude-dir=build* --exclude-dir=.git*`

git clang-format

HEADERS=`find ./sw/device/ -name *.h`
for i in $HEADERS; do ./util/fix_include_guard.py $i; done
```

Signed-off-by: Silvestrs Timofejevs <silvestrst@lowrisc.org>



======Commit: 4b8a43ca======
======Short Message======
[fpga] Fix dedicated IOs and capture trigger for top_englishbreakfast
======Full Message======
[fpga] Fix dedicated IOs and capture trigger for top_englishbreakfast

The pads of the dedicated IOs and the capture trigger got accidentally
disconnected with lowRISC/OpenTitan#5486.

Signed-off-by: Pirmin Vogel <vogelpi@lowrisc.org>



======Commit: 96fe705b======
======Short Message======
[otbn] Fix ALU flag enables
======Full Message======
[otbn] Fix ALU flag enables

`flags_en` should only be asserted where there is a valid executing
instruction.

Fixes #5655

Signed-off-by: Greg Chadwick <gac@lowrisc.org>



======Commit: 3299bf46======
======Short Message======
[sensor_ctrl] Fix AlertAsyncOn parameter
======Full Message======
[sensor_ctrl] Fix AlertAsyncOn parameter

This needs a bit per alert, but the existing code just had a single
bit, causing a Verilator lint warning when wiring up the top-level.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 21d6e5bf======
======Short Message======
[flash_ctrl] Fix AlertAsyncOn parameter
======Full Message======
[flash_ctrl] Fix AlertAsyncOn parameter

This needs a bit per alert, but the existing code just had a single
bit, causing a Verilator lint warning when wiring up the top-level.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: c66d8c9b======
======Short Message======
[keymgr] Fix AlertAsyncOn parameter
======Full Message======
[keymgr] Fix AlertAsyncOn parameter

This needs a bit per alert, but the existing code just had a single
bit, causing a Verilator lint warning when wiring up the top-level.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: b1e4b6d9======
======Short Message======
[aon_timer/rtl] Fix bugs found by smoke test
======Full Message======
[aon_timer/rtl] Fix bugs found by smoke test

Lifecycle input signals are the wrong way around.
Only clock the prescale counter when enabled.

Relates to #5624

Signed-off-by: Tom Roberts <tomroberts@lowrisc.org>



======Commit: da03e2fc======
======Short Message======
[dv/uvmdvgen] Add comment for testplan
======Full Message======
[dv/uvmdvgen] Add comment for testplan

This PR adds a comment to remind user to add testplan to the
`util/build_docs.py` to avoid doc generation error.

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: 7d9887cb======
======Short Message======
[dv/otp_ctrl] Allow check timeout to continue background check
======Full Message======
[dv/otp_ctrl] Allow check timeout to continue background check

This PR fixes an issue discussed in PR #5616, where we allow OTP to
still doing the background check even though check timeout.

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: f56b9b4c======
======Short Message======
[dv/top_earlgrey] chip csr_aliasing timeout
======Full Message======
[dv/top_earlgrey] chip csr_aliasing timeout

Current chip csr_aliasing automation test timeout because chip level
totally has 1510 csrs in csr_aliasing test. So totally there are around
1510 * 1510 csr access in one iteration.
To reduce the runtime, For each CSR in top-level, we only randomly pick
100 CSRs, so the totally csr access is 1510 * 100.
For two iterations, this fix reduce the runtime to 38 mins.

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: 4829d28a======
======Short Message======
[dvsim] Cosmetic updates to launcher methods
======Full Message======
[dvsim] Cosmetic updates to launcher methods

- Rearranged APIs to make them uniform
- Updated `_has_passed()`
  - Renamed to `_check_status()`
  - Returns a tuple as opposed to bool
    - Tuple returned is status, err_msg, where status is "P" or "F"
    - Makes it easy to pick the 'right' error message to report
    especially when there are multiple points of failure in more complex
    launcher system such as LSF
- _post_finish() now takes err_msg as additional arg to reuse more code
- LsfLauncher:
  - Renamed some vars / methods
  - Removed the bsub output file existence check since it adds runtime
    overhead and is not needed.
  - Some more cosmetic changes

Signed-off-by: Srikrishna Iyer <sriyer@google.com>



======Commit: 0f86c75e======
======Short Message======
[dv/common] Fix xcelium compile error
======Full Message======
[dv/common] Fix xcelium compile error

Fix two xcelium compile error:
1. In mem_bkdr_if, for standarized randomization function, xcelium
throws error for using mem index. But it passed the compilation once we
create a variable.
2. In otp_ctrl scb, xcelium throw compile error for streaming and
concatenation, saying it violates LRM 11.4.14.
Fix it by using a if else instead.

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: fbe54fe3======
======Short Message======
[otbn] Update the RAL model on register writes
======Full Message======
[otbn] Update the RAL model on register writes

I wrongly believed that this happened in cip_base_scoreboard, but it
seems that each block has to do it explicitly. Fixes otbn_intr_test,
which was failing in overnight testing.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 6cc21b36======
======Short Message======
[tlul] Two minor adapter_reg fixes
======Full Message======
[tlul] Two minor adapter_reg fixes

- return all 1's (similar to error case) on rdata for write transactions
- correct the data used for integrity generation

Signed-off-by: Timothy Chen <timothytim@google.com>



======Commit: df96e0c2======
======Short Message======
[AST] AscentLint, HJSON fixes, and rgn_fips_i port
======Full Message======
[AST] AscentLint, HJSON fixes, and rgn_fips_i port

Signed-off-by: Jacob Levy <jacob.levy@opentitan.org>



======Commit: 55a311a1======
======Short Message======
[util] Don't explode on unexpected format in fix_include_guard.py
======Full Message======
[util] Don't explode on unexpected format in fix_include_guard.py

The existing code assumed that there was an #ifndef line somewhere in
the file and exploded if not (calling None.group()). This patch
handles these cases more gracefully by having a notion of "unfixable"
files. It also changes the output format a bit to make the CI
wrapper's job a bit easier.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 4853e579======
======Short Message======
[fpv] compile issue fix
======Full Message======
[fpv] compile issue fix

This PR fixes two compile issue:
1. SPI_DEVICE the fpv.tcl script has a signal name mismatch
2. AES has an issue where input is recogized as an array

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: d888d642======
======Short Message======
[reggen] Allow overwriting the FuseSoC core name
======Full Message======
[reggen] Allow overwriting the FuseSoC core name

With this commit the IP description Hjson format gains a new key,
`fusesoc_core_name`, defaulting to `lowrisc:ip:<name>`.

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: c681af11======
======Short Message======
[reggen] Make Params class a MutableMapping
======Full Message======
[reggen] Make Params class a MutableMapping

A MutableMapping is effectively a dict and can be used in practically
the same way.

The special implementation of `get()` is gone now and replaced with the
default implementation, which has an additional, optional second
parameter to give a default value. The existing behavior remains
unchanged (return `None` if the key was not found).

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: ff974390======
======Short Message======
[dv/sram] extend tl_errors_test to the SRAM
======Full Message======
[dv/sram] extend tl_errors_test to the SRAM

this PR adds a TLUL protocol error test to the SRAM memory interface,
and does so by extending the `cip_base_vseq__tl_errors.svh` to allow
the `tl_protocol_err()` task to take an input sequencer, allowing
protocol error tests to be run on any generic TLUL agent.

Only this task was updated in this way as all of the other error cases
are specific to CSR and uvm_mem interfaces, making them unfit to use on
the SRAM memory TLUL interface.

The `run_tl_errors_vseq()` task is extended by this test sequence to run
the custom TLUL protocol testcases, and is done so that it still remains
compatible with `stress_all_with_rand_reset` tests.

Signed-off-by: Udi Jonnalagadda <udij@google.com>



======Commit: d916a608======
======Short Message======
[dv] Update csr_wr to support field write
======Full Message======
[dv] Update csr_wr to support field write

for field write, use `csr_wr(.ptr(ral.csr.fld), ...)`, same for `csr_poke`
Using `csr_wr(.csr(...)) will have compile error, it's now `ptr`

Signed-off-by: Weicai Yang <weicai@google.com>



======Commit: c9227d9d======
======Short Message======
[dv] Add timeout for each TL error access
======Full Message======
[dv] Add timeout for each TL error access

Also comment out tl_err test due to #5484
tl_err includes mem access and dummy spi_host mem may cause hang

Signed-off-by: Weicai Yang <weicai@google.com>



======Commit: a233c27c======
======Short Message======
[dv] Fix stress_all failure in i2c and pattgen
======Full Message======
[dv] Fix stress_all failure in i2c and pattgen

intr_test needs to have scb enabled
I have run a 20+ seeds and they're passing

Signed-off-by: Weicai Yang <weicai@google.com>



======Commit: 5de9775b======
======Short Message======
[dv/otp_ctrl] enable error code check in lc sequence
======Full Message======
[dv/otp_ctrl] enable error code check in lc sequence

This PR enables error code check in lc_sequence.

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: 3c322085======
======Short Message======
[dv/common] Fix regression warnings
======Full Message======
[dv/common] Fix regression warnings

This PR fixes two warnings in regression:
1. Add a void cast when using predict function
2. Correct apply_reset input name in otp_ctrl dv

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: 545a28d2======
======Short Message======
[spi_device/dv] Fix regression timeout
======Full Message======
[spi_device/dv] Fix regression timeout

mem size is increased recently, made these changes to avoid timeout
1. increase max timeout timer to 1.5s, 1s takes a bit over 1hr
2. reduce num_trans in spi_device_fifo_underflow_overflow_vseq
Signed-off-by: Weicai Yang <weicai@google.com>



======Commit: 7e4e4d21======
======Short Message======
[uart/dv] Fix regression failure
======Full Message======
[uart/dv] Fix regression failure

Reduce TL delay when uart clock is fast to have more margin to predict
status and interrupt correctly
Reduce num_trans for stess_all, as very a few cases may run over 3hr

Signed-off-by: Weicai Yang <weicai@google.com>



======Commit: 25468b4a======
======Short Message======
[dv] Get blocks with multiple device interfaces working with chip DV
======Full Message======
[dv] Get blocks with multiple device interfaces working with chip DV

The big change here is that we might now generate several *_ral_pkg.sv
files for a block: one per device interface. To support this,
gen_dv.py now has a loop over device interfaces (just like gen_rtl.py
and gen_fpv.py).

What's more, we have the same problem as gen_fpv where we need to list
the generated files in the core file properly. To get that right, we
pull core file generation out of ralgen.py and put it into gen_fpv,
where we know what files we've created.

Finally (and this is the biggest part of the patch), we split up the
top-level and block-level versions of uvm_reg.sv.tpl. The top-level
and block-level templates share functions from uvm_reg_base.sv.tpl,
and I think the result is a bit easier to follow. There's also a
liberal sprinking of big "##"-style comments to try to make the
template code a bit easier to follow.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 1d2899fb======
======Short Message======
[dvsim] Do weighted scheduling of jobs
======Full Message======
[dvsim] Do weighted scheduling of jobs

This patch adds rough weights to each target (build, run, cov etc). If
the slots are fully utilized and just one becomes available, the
weighted scheduling will prefer the earlier targets than the latter. If
multiple tests pass and more slots are available, then it distrubutes
the available slots to each remaining target by their assigned weights.

The weights are set such that builds have the highest preference,
followed by coverage tasks followed by runs. The reason for doing so is
as follows:

Lets say that all build are complete and only the simulation and
coverage jobs are queued up. If all tests of AES are complete, then its
coverage tasks will end up starving until ALL tests in ALL other blocks
are complete. With weighted allocation of dispatch slots, AES coverage
tasks will complete sooner, providing us an early preview of the
results, rather than having to wait 3+ hours for the rest of the
simulation to finish.

Weights are currently set based on relative importance. We can always
adjust them as needed.

Signed-off-by: Srikrishna Iyer <sriyer@google.com>



======Commit: 7c480565======
======Short Message======
[dvsim] Schedule jobs by dependency
======Full Message======
[dvsim] Schedule jobs by dependency

The current Scheduler implementation splits jobs by targets - builds,
runs, cov etc. All jobs added to each target are scheduled ONLY after
all jobs in the previous target are complete. What that means for
example is, AES tests cannot run immediately after AES simulation
executable is built - they have to wait until ALL other builds are
complete. This results in the max parallelizable queue to starve, making
the process slightly inefficient.

The changes in the PR reverts back to the original approach, where jobs
are enqueued in the dependency order independently for each DUT
(HJson config). The dispatch queue size is still limited to the
`max_parallel` setting, but at least it is no longer starved. The
benefit of this may not be visible if max_parallel setting is << number
of jobs in a given target. At Google, we set `max_parallel` to 200,
which far exceeds the number of builds (~25). So regressions now finish
a lot quicker (~40% speedup).

Most of the changes revolve around segregating the items and maintaining
target specific status queues (since jobs in several targets my be running
in a given time). Apart from that, I moved the code around a bit to make
things more prominently visible. Other updates are as follows:

- TargetScheduler is removed
- Helper methods added to find a finished item's successors
- A failed item recursively cancels its successors (with exceptions)
- `_cancel_item()` recursively cancels all successors of a canceled item
- Likewise for `_kill_item()`
- `kill()` recursively kills / cancels item and all successors
- On SIGINT (with above bullet), `Scheduler::run()` returns the final
  results back rather than exiting immediately - this allows the full
  result table to be printed - which might be useful info to look at.
- Linter fixes

Signed-off-by: Srikrishna Iyer <sriyer@google.com>



======Commit: 9d9d86fb======
======Short Message======
[dvsim] Implement LsfLauncher
======Full Message======
[dvsim] Implement LsfLauncher

This is a first cut implementation of the LsfLauncher. There are several
items left as TODOs - they will be addressed later.

This implementation dispatches all targets (builds, runs, cov etc) as
job arrays by default. Builds are run discretely (array of 1 job) since
we consider each build to have specific job requirements that cannot be
shared with other builds (cpu/mem/disk/stack usage settings - these will
be added in future). Runs pertaining to a build is dispatched as an
array. The associated changes made to other sources support the array
generation.

The job polling is not done by invoking bjobs or bhist, but by looking
for the LSF job output file (unique for each array index), which gets
written to only AFTER the job is complete. This offers a really fast way
to test for completion rather than invoking bjobs or bhist, which bring
the system to a crawl when invoked for 20k tests in flight. This largely
works for now, but we need to explore other options such as using IBM's
Platform LSF Python APIs (future work!).

What launcher system to pick is decided by `DVSIM_LAUNCHER` variable.
In addition, this PR also adds support for Python virtualenv to isolate
project-specific python requirements that need to be met when running
tasks on remote machines used by several other projects as well.

Signed-off-by: Srikrishna Iyer <sriyer@google.com>



======Commit: c5faffb2======
======Short Message======
[dv/chip] solve same_csr_outstanding_timeout
======Full Message======
[dv/chip] solve same_csr_outstanding_timeout

This PR fixes same_csr_outstanding timeout issue. The timeout is reached
mainly because there are too many resets in this sequence.
We removed the reset when writing to wen_regs by manually calling the
function to lock lockable regs.

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: a40e98ab======
======Short Message======
[dv] Fix CI failure at EDN
======Full Message======
[dv] Fix CI failure at EDN

The update #5532 had null pointer error, somehow, CI didn't fail
This should fix it

Signed-off-by: Weicai Yang <weicai@google.com>



======Commit: 4f219f7f======
======Short Message======
[dv/hmac] Fix illegal bin failure
======Full Message======
[dv/hmac] Fix illegal bin failure

This PR fixes hmac illegal bin error. The error is due to hmac scb
sampling issue.
When we do a intr_test write, and then intr_test write, the interrupt
could be cleared. Then if we read intr_test, the interrupt test still
expects the test bits to be set.
This PR fixes the issue by sampling it on intr_test.

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: 4fe07f96======
======Short Message======
Display error message from topgen in topgen-fusesoc
======Full Message======
Display error message from topgen in topgen-fusesoc

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: 0949e6de======
======Short Message======
[lint_commits] Propose a command line which signs the commit
======Full Message======
[lint_commits] Propose a command line which signs the commit

We do some basic checks on the commit author to check if it is likely a
"real name." When this check fails we give a git command line to fix it.
However in that command line we do not include the `--signoff` flag to add a
`Signed-off-by` line, meaning users following our guidance will then be
facing another lint failure. This is fixed in this commit, hopefully
making our developer experience slightly nicer.

Also replace all uses of `-s` in this doc with `--signoff` to make it
clearer to users what this flag actually means.

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: 8e56cfc0======
======Short Message======
[otp_ctrl] Disable assertion due to esc_en failure
======Full Message======
[otp_ctrl] Disable assertion due to esc_en failure

This PR disables an assertion from `prim_arbiter_tree`. The assertion
tries to check if req should stay high until grant signal is set.
However, it does not work if `lc_escalate_en` signal is set.
Please feel free to discard this PR if you prefer some other ways to fix
it.

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: 7b8ea6bd======
======Short Message======
[dv/otp_ctrl] fix regression status mismatch
======Full Message======
[dv/otp_ctrl] fix regression status mismatch

This PR fix otp_ctrl check_fail sequence status error.
In scb we are trying to check status field `check_pending`, but if
timeout is set to very small value, when we read status, the check could
already finished due to timeout.
This PR fixes it by only checking status when check is done.

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: 7758c09e======
======Short Message======
[dv] Fix wrong reset condition
======Full Message======
[dv] Fix wrong reset condition

change from `if (!cfg.under_reset) continue;` to
`if (cfg.under_reset) continue;`

Signed-off-by: Weicai Yang <weicai@google.com>



======Commit: 53441696======
======Short Message======
Update lowrisc_ibex to lowRISC/ibex@42827fc9
======Full Message======
Update lowrisc_ibex to lowRISC/ibex@42827fc9

Update code from upstream repository
https://github.com/lowRISC/ibex.git to revision
42827fc9cd0b2043d5d179cae46b0238a55d3652

* [rtl/icache] Switch ECC granularity to 32bits (Tom Roberts)
* Update lowrisc_ip to lowRISC/opentitan@1ae03937f (Tom Roberts)
* [rtl] Fix lint issues (Greg Chadwick)
* [dv/ibex] filter out tests on a per-config basis (Udi Jonnalagadda)

Signed-off-by: Tom Roberts <tomroberts@lowrisc.org>



======Commit: e6e919fc======
======Short Message======
[dv/sram] add address comparison function in SCB
======Full Message======
[dv/sram] add address comparison function in SCB

this minor patch updates how the scoreboard does address comparisons in
case of read-after-write hazards to handle data forwarding.

we add a function to properly mask off the address widths and compare,
which allows for better reuse in the scoreboard if needed.

Signed-off-by: Udi Jonnalagadda <udij@google.com>



======Commit: 0cdc3447======
======Short Message======
[entropy_src/rtl] remove duplicate parameter
======Full Message======
[entropy_src/rtl] remove duplicate parameter

The EsFifoDepth parameter will now only be set in the top file.
This parameter is set to the same default value in all cases.
Increasing the depth requires a width increase to the debug register.

Signed-off-by: Mark Branstad <mark.branstad@wdc.com>



======Commit: 4d8438cf======
======Short Message======
[doc/dv] Fixes typos and formatting changes.
======Full Message======
[doc/dv] Fixes typos and formatting changes.

Signed-off-by: Matute <maturana@google.com>



======Commit: b6801194======
======Short Message======
[doc/formal] Fixes typo and minor style issues.
======Full Message======
[doc/formal] Fixes typo and minor style issues.

Signed-off-by: Matute <maturana@google.com>



======Commit: bbba5546======
======Short Message======
[dv/sram] implement pipelining test and update scb
======Full Message======
[dv/sram] implement pipelining test and update scb

this PR adds the SRAM pipelining test as laid out in the testplan.

in this test, we choose a random mem address and send a series of
back-to-back transactions to that address, to stress the internal
pipelining and forwarding logic.

this requires an overhaul of the scoreboard as the SRAM pipelining logic
means that while TL memory requests are handled in-order, the underlying
memory macro is updated in an out-of-order fashion, leading to several
tricky edge cases.

NOTE: this PR depends on #5530 to be merged first, as that contains a
      fix for an issue uncovered by this test.

Signed-off-by: Udi Jonnalagadda <udij@google.com>



======Commit: 00a064aa======
======Short Message======
[dvsim] Use bash when running make underneath
======Full Message======
[dvsim] Use bash when running make underneath

Fixes #5552.
In environments where the default shell is [t]csh, some of the make
commands which are written in bash will not work. This commit adds the
SHELL variable to all of our Makefiles pointing to /bin/bash explicitly
instead.

Signed-off-by: Srikrishna Iyer <sriyer@google.com>



======Commit: 4abf56b9======
======Short Message======
[aon_timer/lint] Minor lint fixes
======Full Message======
[aon_timer/lint] Minor lint fixes

Signed-off-by: Tom Roberts <tomroberts@lowrisc.org>



======Commit: 6c83129f======
======Short Message======
[reggen/comport] Syntax for multiple interfaces in a peripheral
======Full Message======
[reggen/comport] Syntax for multiple interfaces in a peripheral

Rather than try to bodge things with an "other_device_interfaces" key
or similar, I've simplified the configuration file format a bit. Now,
an IP block just needs to list all its interfaces, host or device.

All the existing blocks look something like this at the moment:

    bus_interfaces: [
      { protocol: "tlul", direction: "device" }
    ],

which specifies a single, unnamed, device interface.

However, we now have the syntax to specify a block with two device
interfaces:

    bus_interfaces: [
      { protocol: "tlul", direction: "device", name: "if_a" },
      { protocol: "tlul", direction: "device", name: "if_b" }
    ],

This won't actually work at the moment because topgen assumes each
block instance has exactly one connection to the crossbar. We'll fix
that in a follow-up commit.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: cc0dd2a7======
======Short Message======
[otbn] Add second EDN connection
======Full Message======
[otbn] Add second EDN connection

OTBN needs two connections, one for RND and URND. This purely adds the
second EDN connection, RND and URND are not yet implemented.

Fixes #5523

Signed-off-by: Greg Chadwick <gac@lowrisc.org>



======Commit: 13cdb239======
======Short Message======
[topgen] Remove alert_module and interrupt_module from top_*.hjson
======Full Message======
[topgen] Remove alert_module and interrupt_module from top_*.hjson

These lists actually had code to populate them in topgen/merge.py's
amend_alert function, but this didn't ever run because it already has
a value. That value means that you need to remember to update it
whenever you add a new instance of an IP block.

The original motivation behind listing these explicitly was that the
top-level might not want to wire up all the alerts / interrupts from
the modules that it instantiates. We're not doing that at the moment
and, if we start doing that again, it's probably cleaner to explicitly
disable things rather than to have to add everything twice.

With this patch, we fix the code in amend_interrupt and amend_alert to
add everything. Now the only difference between that and the manual
list is the exact ordering of the bits in the signal. Since we access
these bits through auto-generated named constants anyway, we can
dispense with the manual step entirely.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 2612b256======
======Short Message======
[keymgr] latch one-hot error when it happens
======Full Message======
[keymgr] latch one-hot error when it happens

Address #5363

Signed-off-by: Timothy Chen <timothytim@google.com>



======Commit: 54a50997======
======Short Message======
[sram_ctrl] Fix potential back-to-back partial write bug
======Full Message======
[sram_ctrl] Fix potential back-to-back partial write bug

Signed-off-by: Michael Schaffner <msf@opentitan.org>



======Commit: 0fdf0087======
======Short Message======
[spi_host] Add missing connection to scanmode_i
======Full Message======
[spi_host] Add missing connection to scanmode_i

The module gained the port in dbd087ed00 but we forgot to add the flag
in the hjson to get topgen to wire it up for us. This causes Verilator
lint errors.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 7247d8aa======
======Short Message======
[otbn] Fix read/write enables in tracer
======Full Message======
[otbn] Fix read/write enables in tracer

* `insn_valid` must be factored in with the read enable for the bignum
  register file as it uses the raw decoder signal.
* `rf_base_wr_commit` must be combined with the write enable for the
  base register file to determine if the write occurred.

Signed-off-by: Greg Chadwick <gac@lowrisc.org>



======Commit: cfcfbce8======
======Short Message======
[reggen] Promote FOO_SIZE to an int unsigned in *_reg_pkg.sv
======Full Message======
[reggen] Promote FOO_SIZE to an int unsigned in *_reg_pkg.sv

With the previous version of the code, there was a problem if the last
window happened to finish on the same power of 2 boundary as the
block's address space. In that case, we ended up with something like

    parameter logic [9:0] BLOCK_FOO_SIZE = 10'd1024;

which is, of course, zero.

It turns out that the only code in the tree that uses these _SIZE
parameters is using them to compute int parameters (rather than
something involving the address width). As such, we can just promote
the parameter to an int unsigned, fixing various width mismatches as a
bonus!

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 264a77f3======
======Short Message======
[nmi_gen] Ignore intg_err_o output from reg_top
======Full Message======
[nmi_gen] Ignore intg_err_o output from reg_top

This signal got added by commit 915df69, but we didn't wire it up
properly here (causing a Verilator lint error).

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: e3af4cf0======
======Short Message======
[dvsim] Fix for #5527
======Full Message======
[dvsim] Fix for #5527

Ignore `--remote` if `--dry-run` is passed.

Signed-off-by: Srikrishna Iyer <sriyer@google.com>



======Commit: 93daf962======
======Short Message======
[dv/otp_ctrl] check timeout failure
======Full Message======
[dv/otp_ctrl] check timeout failure

This PR supports one kind of check failure - the timeout failure.
The timoeut failure is triggered by setting the timeout value to a small
value. The timeout failure will send out a fatal alert and status
timeout error bit will be set.

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: c43c58ba======
======Short Message======
[dv/dpi] Fix assignment to SystemVerilog chandle
======Full Message======
[dv/dpi] Fix assignment to SystemVerilog chandle

Section 6.14 of the standard states that assignment to chandle can only
be made from `null` or an other chandle, not from an integer literal.

This patch allows the compilation of the simulation models with modelsim

Signed-off-by: Tarik Graba <tarik.graba@telecom-paris.fr>



======Commit: 27c88508======
======Short Message======
[lint] Waive Verilator UNUSED warnings for packages
======Full Message======
[lint] Waive Verilator UNUSED warnings for packages

By default, recent versions of Verilator complain if not every
parameter that was defined in a package gets used somewhere. This
might be reasonable if there's a single top-level, but it doesn't work
at all if you have lots of different top-levels (several chip
top-levels, then each IP block), all of whom use different
combinations of the parameters.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 77a30c23======
======Short Message======
[uvmdvgen] Update DV doc path and terminology
======Full Message======
[uvmdvgen] Update DV doc path and terminology

UVMDVGen generated DV doc appears to not be up to date with the change
in the terminology (Testplan -> DV plan, DV plan -> DV document, path:
hw/ip/<ip>/doc/dv_plan/index.md -> hw/ip/<ip>/doc/dv/index.md). This
update fixes that.

Signed-off-by: Srikrishna Iyer <sriyer@google.com>



======Commit: 1abc7b90======
======Short Message======
[aon_timer dv doc] Update DV doc
======Full Message======
[aon_timer dv doc] Update DV doc

UVMDVGen generated DV doc appears to not be up to date with the change
in the terminology (Testplan -> DV plan, DV plan -> DV document, path:
hw/ip/<ip>/doc/dv_plan/index.md -> hw/ip/<ip>/doc/dv/index.md). This
update fixes that.

Also the DV doc link in .prj.hjson file is updated so that it gets
linked up in the HW dashboard.

The testplan is also added to the build_docs.py script so that it can
render the DV doc page correctly.

Signed-off-by: Srikrishna Iyer <sriyer@google.com>



======Commit: 6ddbb231======
======Short Message======
[otp_ctrl] Properly end cnsty/integ checks that found an error
======Full Message======
[otp_ctrl] Properly end cnsty/integ checks that found an error

This changes the behavior of the buffered partition checker logic such
that failing checks signal back to the LFSR timer that they have
finished performing the check.

That way, the LFSR timer can still continue running and triggering
checks in other partitions, despite the faulty partition being in the
terminal error state.

Signed-off-by: Michael Schaffner <msf@opentitan.org>



======Commit: 61540b43======
======Short Message======
[otp_ctrl] Make sure timeout error is asserted permanently
======Full Message======
[otp_ctrl] Make sure timeout error is asserted permanently

Signed-off-by: Michael Schaffner <msf@opentitan.org>



======Commit: a1af4ece======
======Short Message======
[clkmgr] Fix dft issues
======Full Message======
[clkmgr] Fix dft issues

Addresses #5452 and #5453

- force step_down_req to 0 when in test mode
  - It is assumed the flops inside prim_clock_div are off the scan chain

- remove bypass mux functionality when in test mode.  The mux itself is
  still kept as a constraint anchor point.

Signed-off-by: Timothy Chen <timothytim@google.com>



======Commit: c454740c======
======Short Message======
[util] add `dec` types to prim_secded_pkg
======Full Message======
[util] add `dec` types to prim_secded_pkg

this PR creates specific struct types for each of the secded decoding
functions, and modifies the decoding functions to return an instance of
the appropriate struct.

this helps DV out by encapsulating the field sizes, and also avoids some
CI errors.

Signed-off-by: Udi Jonnalagadda <udij@google.com>



======Commit: 7db3e0ac======
======Short Message======
[dv/otp_ctrl] Fix lc sequence mismatch
======Full Message======
[dv/otp_ctrl] Fix lc sequence mismatch

This PR fixed nightly regression lc sequence mismatch to align with
design behavior in PR #5433

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: b5871b73======
======Short Message======
[AST] AscentLint & Spyglass fixes
======Full Message======
[AST] AscentLint & Spyglass fixes

Signed-off-by: Jacob Levy <jacob.levy@opentitan.org>



======Commit: dcb0de15======
======Short Message======
[lint] Fix a bunch of lint warnings related to long lines (>100 chars)
======Full Message======
[lint] Fix a bunch of lint warnings related to long lines (>100 chars)

Signed-off-by: Michael Schaffner <msf@google.com>



======Commit: 269bb3d0======
======Short Message======
[reggen] Define a class wrapping the top-level IP block
======Full Message======
[reggen] Define a class wrapping the top-level IP block

The bulk of this patch is in ip_block.py, which defines the IpBlock class.
This object replaces the top-level dictionary that we were parsing.
Client code then replaces something like this:

    obj = hjson.load(hjson_file.open('r'),
                     use_decimal=True,
                     object_pairs_hook=OrderedDict)
    if validate.validate(obj, params=[]) != 0:
        log.info("Parsing %s configuration failed." % hjson_file)
        sys.exit(1)

with

    obj = IpBlock.from_path(str(hjson_file), [])

where obj is now an IpBlock object instead of a dict.

Other than some pesky rewrites in the various gen_FOO scripts and
template files, the other big change on the reggen side was to replace
the hierarchical "Block" class that was defined in data.py. Now, we
have a Top class (created by topgen code) and a Top can contain
multiple blocks. We've also now got some validation logic to make sure
that the sub-blocks and memories don't overlap: I'm not sure that was
there before.

As well as changing how we load files (as described above), topgen
also needed a bit of work. We now have to convert various objects to
dicts in the merge stage. (Before, we cloned the dictionaries and
added some keys; now we construct the new dictionary explicitly).

The idea is that in time we'll start to generate objects instead of
dicts in topgen as well. As a bonus, we should be able to get rid of
some of the spurious "dump & load" logic found there.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: aae67c91======
======Short Message======
[reggen] Define Interrupt and Alert types
======Full Message======
[reggen] Define Interrupt and Alert types

No significant change, except that an Alert no longer allows multiple
bits (it warned before). The big patch is because we lose some
auto-generated fields from the hjson dump.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 12cce14e======
======Short Message======
[tlul] Add memory transmission integrity checks
======Full Message======
[tlul] Add memory transmission integrity checks

- Add optional integrity generation / checks into tlul_adapter_sram
- Update sram_scr to make use of the integrity error information

Signed-off-by: Timothy Chen <timothytim@google.com>

[top] Fix for englishbreakfast

Signed-off-by: Timothy Chen <timothytim@google.com>

[all] update for intg_error_o port

- Create alert from sram controllers
- Unused for all other modules

Signed-off-by: Timothy Chen <timothytim@google.com>

[top] Auto generate files

Signed-off-by: Timothy Chen <timothytim@google.com>

[sram dv] Add extra alert

Signed-off-by: Timothy Chen <timothytim@google.com>



======Commit: f77e60c3======
======Short Message======
[rtl/otp_ctrl] Report ECC correctable error in consistency check
======Full Message======
[rtl/otp_ctrl] Report ECC correctable error in consistency check

This PR adds some logic to report ECC correctable error in consistency
check. Previous logic will silently fix the ecc correctable error
without reporting it to status and error bit.

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: 4c609f8a======
======Short Message======
[chip/dv] Fix OTP preloading issues in chip DV environment
======Full Message======
[chip/dv] Fix OTP preloading issues in chip DV environment

This moves OTP preloading into the chip_base_vseq such that all tests
correctly preload the OTP with the correct LC state.

This also adds some more CSR exclusions, as now the OTP and LC
controllers populate these CSRs with nonzero values upon init.

Signed-off-by: Michael Schaffner <msf@google.com>



======Commit: dc0c1e97======
======Short Message======
[top/lc_ctrl] connect CPU_EN and KEYMGR_EN signals
======Full Message======
[top/lc_ctrl] connect CPU_EN and KEYMGR_EN signals

Fix #5356

Signed-off-by: Michael Schaffner <msf@opentitan.org>



======Commit: c88e97fe======
======Short Message======
[ibex] Connect up crash dump output
======Full Message======
[ibex] Connect up crash dump output

Fixes #4618

Signed-off-by: Tom Roberts <tomroberts@lowrisc.org>



======Commit: bc7f6d6c======
======Short Message======
Update lowrisc_ibex to lowRISC/ibex@6d9e1ac
======Full Message======
Update lowrisc_ibex to lowRISC/ibex@6d9e1ac

Update code from upstream repository
https://github.com/lowRISC/ibex.git to revision
6d9e1aca8ad7cf09d4effcde97e471d6c213ead1

* [rtl] Minor lint fix in ibex_core.sv (Tom Roberts)
* [rtl] Add MCOUNTEREN CSR (Vladimir Rozic)
* Update lowrisc_ip to lowRISC/opentitan@6cc5c164b (Tom Roberts)
* [vendor] Remove fcov patch from dv_utils (Tom Roberts)
* [dv/ibex] update how coverage is merged (Udi Jonnalagadda)
* Don't automatically generate disassembly in the example Makefile
  (Rupert Swarbrick)
* [dv] Fix bug in sim.py and type in testlist (Greg Chadwick)
* [rtl] Add crash dump outputs (Tom Roberts)
* [rtl] Lint fixes for Ascent lint issues (Greg Chadwick)
* [rtl] Remove paths between dmem and imem signals (Greg Chadwick)
* [simple_system] Fix type for mhpmcounter_get (Rupert Swarbrick)
* [rtl] Debug mode controller changes (Greg Chadwick)
* Fix deprecated sphinx html_context usage in conf.py (Philipp Wagner)
* [dv] Reorder checks in sim.py (Greg Chadwick)
* Update google_riscv-dv to google/riscv-dv@0b62525 (Greg Chadwick)
* [dv] Add RISCV-DV patch to fix csr_test (Greg Chadwick)
* [dv] Fix MISA CSR reset value (Greg Chadwick)
* [dv] Fix issues with timeout on WFI (Greg Chadwick)
* [dv] Add ePMP support to cs_registers testbench (Greg Chadwick)
* [dv] Fix race condition in cs_registers testbench (Greg Chadwick)
* [doc] Add ePMP information (Greg Chadwick)
* [rtl] Add ePMP support to Ibex (Greg Chadwick)
* [dv] Improve sim.py error reporting (Greg Chadwick)
* [dv] Rename stored copy of run phase (Rupert Swarbrick)
* [dv] Be explicit about the target priv_mode in wait_ret test (Rupert
  Swarbrick)
* [dv] Wire up alerts to dut probe interface (Rupert Swarbrick)
* Specify boot address in hex to avoid 32-bit signed overflow (Rupert
  Swarbrick)
* [syn] Fail a bit more gracefully if something goes wrong (Rupert
  Swarbrick)
* [doc] Update dependency descriptions for Spike/OVPsim (Rupert
  Swarbrick)
* [syn] Add missing include path (Greg Chadwick)
* [verilator] Remove clock gating waiver and add extra warning (Rupert
  Swarbrick)
* [rtl] Fix lint "fix" with DbgTriggerEn (Rupert Swarbrick)
* [rtl] Fix lint warning when DbgTriggerEn parameter is set (Rupert
  Swarbrick)
* [dv] Ibex uarch functional coverage (Greg Chadwick)
* Update lowrisc_ip to lowRISC/opentitan@7aa5c2b89 (Greg Chadwick)
* [dv] Patch for fcov macros in dv_utils (Greg Chadwick)
* [rtl] Fix overlapping encodings of immediate instructions in tracer
  package (Pirmin Vogel)
* [rtl] Fix encoding of ZIP/UNZIP pseudo-instrcutions in tracer
  package (Pirmin Vogel)
* [rtl] Fix encoding for ORC16/REV16 instructions in tracer package
  (Pirmin Vogel)
* [syn] Fix timing reports in synthesis flow (Greg Chadwick)
* [rtl] Fix PMP NAPOT matching for 0 PMPGranularity (Greg Chadwick)
* [dv] Verilator unused parameter handling (Tobias Wölfel)
* [rtl] Add B extension to misa (Tobias Wölfel)
* [rtl] Avoid latch creation (Tobias Wölfel)
* [rtl] Use tracer parameters for decoding (Tobias Wölfel)
* [rtl] Disable definition of unused instructions (Tobias Wölfel)
* [rtl] Remove unused tracer branch instruction (Tobias Wölfel)
* [doc/um] Updated the python requirements run command for sw simple
  system (Rahul Raveendran)
* CI: The distro-provided pyyaml package is enough (Philipp Wagner)
* Revert "Clear MAKEFLAGS when running dvsim.py" (Rupert Swarbrick)
* Update lowrisc_ip to lowRISC/opentitan@c277e3a8 (Philipp Wagner)
* Use overlapping implications for Xcelium 19.03 (Fresher14)
* Use more descriptive issue template names (Philipp Wagner)
* Add issue templates to GitHub project (Philipp Wagner)
* [rtl] Add branch prediction signals to icache (Tom Roberts)
* [rtl] icache performance updates (Tom Roberts)
* [fpv] Assume icache req_i input is low when in reset (Rupert
  Swarbrick)
* [dv] Make sure the req_i interface is never asserted in reset
  (Rupert Swarbrick)
* [syn] Fix path in synthesis script (Tom Roberts)
* CI: Remove outdated workarounds for Ubuntu 16.04 (Philipp Wagner)
* CI: Update to Ubuntu 18.04 (Philipp Wagner)
* Avoid use of the term "sanity test" in icache UVM testbench (Rupert
  Swarbrick)
* Update lowrisc_ip to lowRISC/opentitan@e619fc60 (Rupert Swarbrick)
* Clear MAKEFLAGS when running dvsim.py (Rupert Swarbrick)
* Delete dv/uvm/data and point DV code at the vendored version (Rupert
  Swarbrick)
* Vendor in hw/dv/{data,tools} from OpenTitan (Rupert Swarbrick)
* Update paths for vendored DV code (Rupert Swarbrick)
* Improve ibex_config command line handling with missing output_fn
  (Rupert Swarbrick)
* Fix Xcelium warnings (Philipp Wagner)
* [dv/ibex] add support for DSim (Udi Jonnalagadda)
* [doc] Add bitmanip note to README (Greg Chadwick)
* [doc] Update info on simulators for verification (Greg Chadwick)
* Update google_riscv-dv to google/riscv-dv@3da32bb (Udi Jonnalagadda)
* [rtl] Fix performance counter bug (Tom Roberts)
* [dv] Fixes for disabling forks, for Cadence Xcelium This makes
  changes to support Cadence Xcelium 20.09.001. (CathalMCrevinn)
* [ibex/dv] Modify EOT ecall check (Udi Jonnalagadda)
* [rtl] Reduce size of PMP addr CSRs to minimum (Michael Platzer)
* [rtl] Fix NAPOT address matching (Michael Platzer)
* [dv] Fix riscv_debug_single_step_test (Greg Chadwick)

Signed-off-by: Tom Roberts <tomroberts@lowrisc.org>



======Commit: dadebce3======
======Short Message======
[otbn] Fix bad_insn_addr ERR_BITS description
======Full Message======
[otbn] Fix bad_insn_addr ERR_BITS description

Write to IMEM cannot occur from OTBN, so bad_insn_addr will only be
signalled on IMEM reads from OTBN.

Signed-off-by: Greg Chadwick <gac@lowrisc.org>



======Commit: 93932305======
======Short Message======
[dv/sram] minor updates to sram tb
======Full Message======
[dv/sram] minor updates to sram tb

this PR fixes a few unaligned statements and some minor style fixes

Signed-off-by: Udi Jonnalagadda <udij@google.com>



======Commit: f2cc9633======
======Short Message======
[alert_handler] Delete stale comment
======Full Message======
[alert_handler] Delete stale comment

Fix #5457

Signed-off-by: Michael Schaffner <msf@opentitan.org>



======Commit: 6578374f======
======Short Message======
[dvsim] Split Deploy into Deploy and Launcher
======Full Message======
[dvsim] Split Deploy into Deploy and Launcher

In this commit, the act of launching and communicating with the job
while it is still running is split out into a separate class called
'Launcher'. It does the job of maintaining the running environment
(creating dirs, launching the sub-process, providing APIs to communicate
with the running job) of a dispatched job.

The Deploy class is reduced to just maintaing a generic runnable job. It
creates the launcher as a child object, allowing Scheduler to access the
launcher's methods. The Deploy class and its extensions are also
significantly refactored (general cleanup) to further simplify how the
instance members are set.

The Launcher class is meant to be an abstract class providing high level
APIs that each variant needs to implement, in addition to proving
general housekeeping functions. The LocalLauncher class extends from it,
providing the launching mechanism locally within the user's workstation
(spawn child processes upto a given limit). This will be followed up by
LSFLauncher and GCPLauncher in subsequent commits / PRs, which can be
chosen based on a switch.

The reason for making this split is to cleanly add support for various
backend compute dispatch systems to which jobs can be launched, such as
LSF and GCP.

Signed-off-by: Srikrishna Iyer <sriyer@google.com>



======Commit: a8252384======
======Short Message======
[dv/sram] SRAM smoke test, bring to V1 status
======Full Message======
[dv/sram] SRAM smoke test, bring to V1 status

This PR implements the smoke test for `sram_ctrl` as laid out in the
testplan.

Note that this PR requires #4794 to be merged first, CI will fail until
then.

This PR also incorporates the changes made by @weicaiyang in #5122 to
fix the RAL HDL hierarchy, and adds the SRAM configs to the nightly
regression.

Finally, this PR also updates the `sram_ctrl` to V1 status as all items
have been completed.

Signed-off-by: Udi Jonnalagadda <udij@google.com>



======Commit: aa6c1ede======
======Short Message======
[top] peripheral / host transmission integrity
======Full Message======
[top] peripheral / host transmission integrity

- Add cmd / rsp generate and checks
- Currently does not natively handle peripherals that have
  windows with built in integrity (otbn). That will be a
  follow-on PR
- Currently the tap interface inside lc_ctrl is not correctly
  handled, that will also be a follow-on PR.
- All error hook-ups are tied to 0 right now, we need to wait for
  host updates and memory initialization before fully enabling them.

Signed-off-by: Timothy Chen <timothytim@google.com>



======Commit: 1f4b2580======
======Short Message======
[sw, rom_ext_signer] Move configuration file and use dev files
======Full Message======
[sw, rom_ext_signer] Move configuration file and use dev files

This configuration is for development, debugging and testing purposes,
and should reside in the development directory.

Signed-off-by: Silvestrs Timofejevs <silvestrst@lowrisc.org>



======Commit: eb7d11e9======
======Short Message======
[sw, rom_ext_signer] Add temporary development files
======Full Message======
[sw, rom_ext_signer] Add temporary development files

- rom_ext_blank_image.bin: 1024 byte (slightly larger than the
  manifest) binary initialised with zeros.

- system_state_value.bin: 32-byte dummy system state value initalised
  with 0xA5.

- test_key_private.der: private key in DER format, converted from
  `sw/device/rom_exts/keys/test_key_private.pem`.

- usage_constraints.bin: 256-bit dummy usage constraints binary blob
  initialised to 0xA5.

NOTE: These files are for development, debug and tetsing purposes.
      They are likely to be completely or partially removed as the
      implementation matures.

Signed-off-by: Silvestrs Timofejevs <silvestrst@lowrisc.org>



======Commit: a6f58299======
======Short Message======
[tlul] block writes and reads on errors in adapter_reg
======Full Message======
[tlul] block writes and reads on errors in adapter_reg

Signed-off-by: Timothy Chen <timothytim@google.com>



======Commit: efaa97eb======
======Short Message======
[ast] AscenLint fixes and new analog typedef
======Full Message======
[ast] AscenLint fixes and new analog typedef

Co-authored-by: Jacob Levy <jacob.levy@opentitan.org>
Signed-off-by: Michael Schaffner <msf@opentitan.org>
Signed-off-by: Jacob Levy <jacob.levy@opentitan.org>



======Commit: 11e4d899======
======Short Message======
[otp_ctrl] Always attempt to program all LC words in presence of errors
======Full Message======
[otp_ctrl] Always attempt to program all LC words in presence of errors

Signed-off-by: Michael Schaffner <msf@opentitan.org>



======Commit: 614ac71a======
======Short Message======
[lc_ctrl] Do not latch new LC state in register
======Full Message======
[lc_ctrl] Do not latch new LC state in register

Previously, the new LC state has been latched inside the lc_ctrl before
programming it, with the intent to reuse some of the error checking
logic on that LC state.

However, this path can potentially be dangerous since it requires
additional logic to make sure the life cycle signals are not decoded
anymore once the new state has been latched.

This change therefore removes this feedback path into the life cycle
state register, and directly feeds out the combinationally computed next
state. This logic is running on a very slow clock <=25 MHz, hence this
should not create timing issues.

Signed-off-by: Michael Schaffner <msf@opentitan.org>



======Commit: 6cb60c4a======
======Short Message======
[reggen] Make the "name" field for windows required
======Full Message======
[reggen] Make the "name" field for windows required

This was actually required in practice already (used by e.g. miname in
gen_dv.py). Reflect that in the documentation and make missing names
give a nice parsing error, rather than an explosion deep inside a
template.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 69367b39======
======Short Message======
[dvsim] Add fileset_partner to FuseSoC
======Full Message======
[dvsim] Add fileset_partner to FuseSoC

This adds the `--fileset_partner` flag to FuseSoC as an example
to `vendor_chip_sim_cfg_example.hjson`.

By default, the open source implementation is selected (using the
negation of `fileset_partner` flag). If `fileset_partner` flag is set,
FuseSoC selects that implementation instead.

Signed-off-by: Srikrishna Iyer <sriyer@google.com>



======Commit: c6d96649======
======Short Message======
[DV][FCOV] Minor updates to #5414
======Full Message======
[DV][FCOV] Minor updates to #5414

- Prefix all macros in `dv_fcov_macros.svh` with `DV_FCOV`
  - Makes it clear where to lookup their definition

- Remove DV_FCOV_SVA - this is already defined as `COVER` in prim_assert

- Move DV_FCOV_EXPR_SEEN to `dv_fcov_macros.svh` since it will be used
only in DV code.

Signed-off-by: Srikrishna Iyer <sriyer@google.com>



======Commit: 1f5fae9c======
======Short Message======
[dvsim] Fix --cov + --build|run-only bugs
======Full Message======
[dvsim] Fix --cov + --build|run-only bugs

The `SimCfg` prunes the number of builds if there is no uniqueness among
the existing build objects. If a simulation is rerun with --run-only
switch (the assumption here being there is no need to rebuild the
simulation executables since the source code did not change), with the
old code, the build pruning is not performed, causing the tests to
reference non-existent builds and fail. This commit fixes that issue.

If `--cov --build-only` is passed on the command line (with the intent
to pass `--cov --run-only` later), builds get prematurely pruned out
because we turn off the coverage switch. This prevents us from  doing
`--cov --build-only` and `--cov --run-only` as two separate steps.

Also, the coverage table and summary table end up throwing errors. This
change fixes that.

In addition, the `--cov-merge-previous` was also broken (appending Path
vars instead of str). The `odir_limiter` also has a minor fix such that
if `odir` does not exist, it still prunes and returns the old dirs.

The cov merge task also needed information from the builds, which do not
exist if `--run-only` switch is passed. The CovMerge code is updated to
seek the same information from runs instead.

Signed-off-by: Srikrishna Iyer <sriyer@google.com>



======Commit: c8b3333e======
======Short Message======
[rtl/lc_ctrl] Fix jtag d_error
======Full Message======
[rtl/lc_ctrl] Fix jtag d_error

When I try to use DMI to access LC_CTRL CSR, I always get a `d_error`.
The error is coming from this check: https://github.com/lowRISC/opentitan/blob/master/hw/ip/tlul/rtl/tlul_pkg.sv#L142
I believe it is related to default value for tap's tl_i.a_user.

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: 03bcc2f0======
======Short Message======
[dv/jtag] Fix two small jtag issue
======Full Message======
[dv/jtag] Fix two small jtag issue

These PR fixes two small issues in jtag:
1. Add a clock cycle delay in between clock_en and drive_tms.
   This is to make sure the clock is stable before driving any signals.
2. Fix a port declaration from output to ref.

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: 94432215======
======Short Message======
[top / util] updates to ast generation
======Full Message======
[top / util] updates to ast generation

- generate open source ast registers as part of topgen
- remove the need for xbar_peri to hardcode ast address
- introduce different module attributes to distinguish
  between normal modules, templated modules, and to specific
  modules like sensor_ctrl and ast

Signed-off-by: Timothy Chen <timothytim@google.com>

[top] Minor englishbreakfast fixes

Signed-off-by: Timothy Chen <timothytim@google.com>



======Commit: a12fb22a======
======Short Message======
Update pulp_riscv_dbg to pulp-platform/riscv-dbg@64f48cd
======Full Message======
Update pulp_riscv_dbg to pulp-platform/riscv-dbg@64f48cd

Drop the patch we were carrying, it has been merged upstream since. No
changes to the RTL itself.

Update code from upstream repository https://github.com/pulp-
platform/riscv-dbg to revision
64f48cd8ef3ed4269ab3dfcc32e8a137a871e3e1

* Fix various lint warnings (Michael Schaffner)

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: fcf3c92d======
======Short Message======
[dv/macros] Add fcov macros from Ibex
======Full Message======
[dv/macros] Add fcov macros from Ibex

These macros are currently added separately in the Ibex repo (some
applied as a vendoring-in patch and some in a separate directory). This
has caused some issues recently with vendoring Ibex back into OT. This
commit brings them all into one place, and allows other OT blocks to use
these macros if desired.

Signed-off-by: Tom Roberts <tomroberts@lowrisc.org>



======Commit: ce5945d1======
======Short Message======
[aon_timer] Lint fixes
======Full Message======
[aon_timer] Lint fixes

Fix a few signal warnings picked up by Ascent lint.

Signed-off-by: Tom Roberts <tomroberts@lowrisc.org>



======Commit: e58e9732======
======Short Message======
[tlul] Fix "unused" name for AscentLint too
======Full Message======
[tlul] Fix "unused" name for AscentLint too

It seems that Verilator is happy to treat foo_unused as a hint that
the signal is unused, but AscentLint requires the name to start with
unused instead.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: bf2bbda2======
======Short Message======
[reggen] Fix check_name() regex in reggen/lib.py
======Full Message======
[reggen] Fix check_name() regex in reggen/lib.py

Also fix the one example where we had something that's supposed to
look like a symbol and in fact contained a space.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 07110a6e======
======Short Message======
[aes] Fix lint errors
======Full Message======
[aes] Fix lint errors

Signed-off-by: Pirmin Vogel <vogelpi@lowrisc.org>



======Commit: 11f4081a======
======Short Message======
[dvsim/verilator] Fix pre-build cmd failure when hw/foundry is absent
======Full Message======
[dvsim/verilator] Fix pre-build cmd failure when hw/foundry is absent

Signed-off-by: Michael Schaffner <msf@opentitan.org>



======Commit: 7ce0e528======
======Short Message======
Revert "[top] Hardware rv_dm hw_debug_en"
======Full Message======
Revert "[top] Hardware rv_dm hw_debug_en"

This reverts commit 50978abe1e2fd623cfd3693a5738f421fc349c92.

That commit was a workaround needed for keeping the debug port alive
since LC/OTP preloading was not in place yet.

Now that this preloading mechanism has been put in place, we can go a
head and connect the life cycle signal again.

Signed-off-by: Michael Schaffner <msf@opentitan.org>



======Commit: 7e0b00ad======
======Short Message======
[gen-otp-img] Fix digest calculation function
======Full Message======
[gen-otp-img] Fix digest calculation function

Signed-off-by: Michael Schaffner <msf@opentitan.org>



======Commit: afe93928======
======Short Message======
[otbn] Fix missing operation docs for bn.sel
======Full Message======
[otbn] Fix missing operation docs for bn.sel

The class name had a spare "r" in it (probably a copy-paste error from
when I copied it from BNRSHI above). This doesn't matter in any way
for the ISS, because decoding and tracing is driven by the "insn"
class field (which had the right name). But it *does* matter for the
connection with document extraction, which means that the BN.SEL entry
in the docs was missing its Operation section.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: d772df45======
======Short Message======
[aon_timer] Lint updates
======Full Message======
[aon_timer] Lint updates

- Fix a minor lint issue in aon_timer
- Update Ascentlint setup to match other modules
- Add aon_timer to the top_earlgrey lint config plus add empty waiver
  files.

Signed-off-by: Tom Roberts <tomroberts@lowrisc.org>



======Commit: 2d15119a======
======Short Message======
[dvsim] Use builtins wherever possible
======Full Message======
[dvsim] Use builtins wherever possible

This change gets rid of `os.system` calls, `grep`s and other things that
are better achieved by using python built-ins.

Apart from that, there are lint fixes and other very minor changes.

Signed-off-by: Srikrishna Iyer <sriyer@google.com>



======Commit: 548810e1======
======Short Message======
[prim] Avoid an apparent combinatorial loop in prim_secded_*_dec.sv
======Full Message======
[prim] Avoid an apparent combinatorial loop in prim_secded_*_dec.sv

Verilator tracks combinatorial loops by variable, not by bit. Thus, it
sees a loop with the code that was there and generates an UNOPTFLAT
warning. Pull the shared ^syndrome_o calculation out into a separate
variable to fix things.

Running secded_gen.py was a bit painful. For next time I need to
figure this out:

    git grep secded_gen.py -- '*dec.sv' | \
      grep -v hamming | \
      cut -d ' ' -f 3- | \
      xargs -n 8 util/design/secded_gen.py

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 50a83bed======
======Short Message======
[csrng/rtl] internal state read timing improvements
======Full Message======
[csrng/rtl] internal state read timing improvements

Re-structed the read flow for the internal state array.
Added parameter to prim_fifo_sync to remove output mux.
Added simple flops to break up configuration paths.
Added fifo output mux back for genbits to prevent assertion.
Cleaned up format for hjson file.
Updated internal state rtl based on feedback.
Fixed hjson register wording.
Added comment for FIFO parameter use.

Signed-off-by: Mark Branstad <mark.branstad@wdc.com>



======Commit: 144ca84e======
======Short Message======
[aes] Add life cycle escalation signal
======Full Message======
[aes] Add life cycle escalation signal

If the life cycle escalation signal is received, the main controller FSM
of the AES unit locks up in the terminal error state. A reset is required.

Signed-off-by: Pirmin Vogel <vogelpi@lowrisc.org>



======Commit: 93f12ea8======
======Short Message======
[otbn] Remove enable_i input from otbn_core_model
======Full Message======
[otbn] Remove enable_i input from otbn_core_model

The previous code had a race in the initial blocks when used in
otbn.sv. The obvious way to fix this in the SystemVerilog code would
be to call otbn_model_init() just before we first call
otbn_model_step. Unfortunately, you can't do that (for Verilator, at
least) because that ends up mixing blocking and non-blocking
assignments.

Rather than think hard about how to do this properly in Verilog, we
can just put in a simple layer of indirection in the C++ and only
start the subprocess when we see start_i for the first time.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 6442e7ed======
======Short Message======
[otbn] Fix silly memory leak in otbn_top_sim
======Full Message======
[otbn] Fix silly memory leak in otbn_top_sim

I even wrote explicitly that VerilatorMemUtil didn't take ownership of
its argument, but apparently forgot when I used it. D'oh.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 363f5c19======
======Short Message======
[dv/shadow_reg] Fix aes shadow reg error
======Full Message======
[dv/shadow_reg] Fix aes shadow reg error

This PR support aes shadow reg with the new feature reported in
PR #4895 :
AES shadow reg fatal error will lock this register's write access.

This PR updates the testbench regarding this feature:
1. Add a `shadow_fatal_lock` local variable to indicate if the shadow
reg is locked due to fatal error.
2. Temp unlock the `shadow_fatal_lock` if a backdoor write is issued.
Because tesbench can still update the shadow reg value.

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: ff5a23bd======
======Short Message======
[fpv] TLUL_pkg compile error
======Full Message======
[fpv] TLUL_pkg compile error

This PR fixes a small compile error due to enum casting in tlul_pkg.

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: 12b7578d======
======Short Message======
[i2c, dv] Fix nightly dv regression run and update the scoreboard
======Full Message======
[i2c, dv] Fix nightly dv regression run and update the scoreboard

  - scoreboard: enable do_read_check and
    stop compare transaction when reset occurs
  - stress_all_with_rand_reset: exclude error_intr_vseq from
    vseq list since it can issue its own internal reset

Signed-off-by: Tung Hoang <hoang.tung@wdc.com>



======Commit: 340c0f4f======
======Short Message======
[dv] Fix VPD dumping
======Full Message======
[dv] Fix VPD dumping

The VPD `dump` command returns a file id when run with the `-file
<filename>` switch (which is what we do as a first step). That by
itself does not start creating the dump file.

The `-add` command is what actually starts the actual dumping. Without
providing the file id to the `-add` switch, it assumes that a new file
is supposed to be created. For worksites that have access to the FSDM
dumper license, it defaults to dumping with FSDB (despite providing the
`-w vpd` switch to dvsim), else it defaults to vpd. This explains why it
works at lowRISC but bombs at Google / WD.

In this fix, we capture the file id returned by the `dump -file` command
and pass it to the subsequent `dump -add` commands.

While this did seem to fix the VPD dumping, I was unable to open it out of
the box using `gtkwave`. FWIU, the reason is this happens because we
enable dumping of MDAs. gtkwave runs the `vpd2vcd` utility underneath to
convert it to vcd, but that is missing the `+includemda` switch which
causes it to bomb. I am not sure how folks at LR are handling this at
the moment.

Fixes #5354.

Signed-off-by: Srikrishna Iyer <sriyer@google.com>



======Commit: d55bc6cd======
======Short Message======
[sw, dif] Fix spelling of 'occurred' in all DIFs and template
======Full Message======
[sw, dif] Fix spelling of 'occurred' in all DIFs and template

Signed-off-by: Michael Munday <mike.munday@lowrisc.org>



======Commit: e9fd2bfc======
======Short Message======
[aes] Use sparse encodings for additional control signals
======Full Message======
[aes] Use sparse encodings for additional control signals

This commit extends the usage of sparse signal encodings to additional
control signals between main controller, counter module, cipher core
controller and inside the cipher core itself to protect the design from
starting or finishing early due to fault injection.

In case any of these signals takes on an invalid value, the corresponding
FSM signals an alert and enters the terminal error state. The design needs
to be reset.

Signed-off-by: Pirmin Vogel <vogelpi@lowrisc.org>



======Commit: d31b0cc4======
======Short Message======
[aes] Drive random netlist constants from top_*_rnd_cnst_pkg.sv
======Full Message======
[aes] Drive random netlist constants from top_*_rnd_cnst_pkg.sv

Previously, these constants were exposed to the top level but driven by
the default values defined in aes_pkg.sv.

Signed-off-by: Pirmin Vogel <vogelpi@lowrisc.org>



======Commit: 3ec2dae4======
======Short Message======
[dv/otp_ctrl] ECC uncorrectable error
======Full Message======
[dv/otp_ctrl] ECC uncorrectable error

This PR adds suppor to trigger ECC uncorrectable error. Currently only
allow 2 errors per word. Once the ECC is integrity in mem_bkdr_if, we
can fully randomize the error.

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: c2185e0b======
======Short Message======
[systemtest] Test basic OpenOCD interaction in Verilator
======Full Message======
[systemtest] Test basic OpenOCD interaction in Verilator

Test if OpenOCD is able to connect to an Earl Grey system running in
Verilator. This test ensures that the debug system is setup properly and
reachable, but doesn't go beyond that.

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: 2ba5f991======
======Short Message======
[systemtest] Allow using find_in_uart0() without filter
======Full Message======
[systemtest] Allow using find_in_uart0() without filter

Previously, if `None` was passed to `find_in_uart0()` it always used the
default filter, which strips message prefixes produced by `LOG_*()`
macros in OpenTitan.

After this patch, passing `None` results in no filter being applied.
Not passing any argument uses the default filter.

Additionally, some lint fixes.

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: d34bf23e======
======Short Message======
[keymgr/dv] Add invalid cmd/fsm vseq
======Full Message======
[keymgr/dv] Add invalid cmd/fsm vseq

force design internal signal cmd/fsm to trigger fault error
disable scb in this seq as kmac transaction may be terminated earlier

Signed-off-by: Weicai Yang <weicai@google.com>



======Commit: ea96a354======
======Short Message======
[top/dv] fix CSR test failures
======Full Message======
[top/dv] fix CSR test failures

1. exclude HW update csr check in aon_timer
2. exclude RX status CSR for uart

Signed-off-by: Weicai Yang <weicai@google.com>



======Commit: 6c46103d======
======Short Message======
[dv/otp_ctrl] non-sticky interrupt check
======Full Message======
[dv/otp_ctrl] non-sticky interrupt check

This PR enables interrupt check in scb according to the updates in PR
To avoid scb doing cycle accurate prediction, this PR also adds a delay
if lc_prog error is found, then we will wait one clock cycle to check
interrupts.

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: eef49a58======
======Short Message======
Update pulp_riscv_dbg to pulp-platform/riscv-dbg@e67a0a7
======Full Message======
Update pulp_riscv_dbg to pulp-platform/riscv-dbg@e67a0a7

Update code from upstream repository https://github.com/pulp-
platform/riscv-dbg to revision
e67a0a79e9268c13c4232fc2887692404d75a069

* Bender.yml: Fix path to `one scratch` debug rom (Florian Zaruba)
* Update CHANGELOG.md (bluew)
* write CmdErrBusy to cmderr only if cmderr contains 0 (Tzachi Noy)
* Fix for pulp-platform/riscv-dbg#81 and pulp-platform/riscv-dbg#91
  (Arjan Bink)
* Fix for issue pulp-platform/riscv-dbg#63 (Arjan Bink)
* Fix for issue pulp-platform/riscv-dbg#77 and pulp-platform/riscv-
  dbg#88 (Arjan Bink)
* Fixed enumeration name (Arjan Bink)
* Fix for pulp-platform/riscv-dbg#69 (Arjan Bink)
* Fixed verilator file list (Arjan Bink)
* Fix for issue pulp-platform/riscv-dbg#74; updates to use latest
  version of CV32E40P; moved assertions out of RTL to prevent issues
  with various tools (e.g. synthesis tools) (Arjan Bink)
* return CmdErrBusy if accessing data or progbuf while command was
  executing (Tzachi Noy)
* Added missing input keyword (Arjan Bink)
* Added changelog entry for SBA be fix. (John Eric Martin)
* Correction to be_mask signal and added parameter ReadByteEnable to
  restore the old behavior if desired. (John Eric Martin)
* add <WaitWriteValid> after <Write> in dmi_jtag state machine (Tzachi
  Noy)
* Fix for SBA 'be' when reading (fixes pulp-platform/riscv-dbg#22).
  (John Eric Martin)

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: 25b2c987======
======Short Message======
[rv_dm] Waive unfixable AscentLint errors
======Full Message======
[rv_dm] Waive unfixable AscentLint errors

Also restructure the tlul_host_adapter waivers to have them within the
adapter instead of having them in the callsites.

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: 2053baa1======
======Short Message======
[rv_dm] Fix unused signal warning in lint
======Full Message======
[rv_dm] Fix unused signal warning in lint

The `host_r_err` signal is (intentionally) unused, silence a Verilator
lint warning about it.

```
%Warning-UNUSED: ../src/lowrisc_ip_rv_dm_0.1/rtl/rv_dm.sv:163:27: Signal is not used: 'host_r_err'
                                                                : ... In instance rv_dm
  163 |   logic                   host_r_err;
      |                           ^~~~~~~~~~
```

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: 27b0a64a======
======Short Message======
[dv] Hard code various dv connections until full hook-up
======Full Message======
[dv] Hard code various dv connections until full hook-up

Signed-off-by: Timothy Chen <timothytim@google.com>

[dv] more dv related fixes

Signed-off-by: Timothy Chen <timothytim@google.com>

[prim] Add auto generated fpv files

Signed-off-by: Timothy Chen <timothytim@google.com>



======Commit: 76f567c9======
======Short Message======
[dv/kmac] fix regression failures
======Full Message======
[dv/kmac] fix regression failures

requested output length foor SHAKE256 test_vectors test can go over 136B
(the keccak block size), need disable existing output length constraints
to avoid constraint failures midway through the test.

Signed-off-by: Udi Jonnalagadda <udij@google.com>



======Commit: 8318ceab======
======Short Message======
[otbn] Add parameter defaults to otbn_trace_if
======Full Message======
[otbn] Add parameter defaults to otbn_trace_if

Xcellium requires these.

Fixes #5355

Signed-off-by: Greg Chadwick <gac@lowrisc.org>



======Commit: ac6af87a======
======Short Message======
[top] Various minor lint fixes in the system
======Full Message======
[top] Various minor lint fixes in the system

Signed-off-by: Timothy Chen <timothytim@google.com>



======Commit: 4bc32ae8======
======Short Message======
[otp_ctrl] Make error interrupts non-sticky
======Full Message======
[otp_ctrl] Make error interrupts non-sticky

Fix #5350

Signed-off-by: Michael Schaffner <msf@opentitan.org>



======Commit: 9f05fd3d======
======Short Message======
[otbn] Rewrite flag reads and writes in operation docs
======Full Message======
[otbn] Rewrite flag reads and writes in operation docs

Also, fix how BN.MULQACC.SO writes back its flags. This was actually
wrong in the ISS because it didn't do the delayed write. Of course, it
was also the last thing in the instruction, so didn't really matter.
However, it looked wrong in the rendered docs!

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 7aa16425======
======Short Message======
[otbn] Simplify error tracking in the ISS
======Full Message======
[otbn] Simplify error tracking in the ISS

Rather than tracking proper errors with messages (which we didn't
actually have any way to look at anyway), set the ERR_BITS bits
explicitly. One advantage of doing this is that it lets us write
something more understandable in the ISA docs.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: d861bea1======
======Short Message======
[dv/otp_ctrl] update testplan to fix the unmapped test
======Full Message======
[dv/otp_ctrl] update testplan to fix the unmapped test

This PR updates the test sequence names and description to match the
name of the sequences and avoid unmapped tests in regression results.

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: 50978abe======
======Short Message======
[top] Hardware rv_dm hw_debug_en
======Full Message======
[top] Hardware rv_dm hw_debug_en

- Temporarily address #5332

Signed-off-by: Timothy Chen <timothytim@google.com>



======Commit: 50271cf8======
======Short Message======
[otbn/sw] Fix indentation in meson file
======Full Message======
[otbn/sw] Fix indentation in meson file

Editorial only, no functional change.

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: 87285a2d======
======Short Message======
[rtl/kmac] fix `right_encode(output_len)` for KDF
======Full Message======
[rtl/kmac] fix `right_encode(output_len)` for KDF

this PR fixes the output length encoding that is padded by the
kmac_keymgr module.
The values should be exactly the same as the encoded keylength in
kmac_core.sv, except the byte that contains the byte-length of the
encoded value should be in the MSB position for right encoding instead
of in the LSB position for left encoding.

Signed-off-by: Udi Jonnalagadda <udij@google.com>



======Commit: 6a0baac7======
======Short Message======
[dvsim] lint fixes to FlowCfg
======Full Message======
[dvsim] lint fixes to FlowCfg

Signed-off-by: Srikrishna Iyer <sriyer@google.com>



======Commit: 4c472c61======
======Short Message======
[dvsim] lint fixes to Scheduler
======Full Message======
[dvsim] lint fixes to Scheduler

Signed-off-by: Srikrishna Iyer <sriyer@google.com>



======Commit: 15912f56======
======Short Message======
[Verible/FPV] Workaround that excludes CSR FPV files in Verible runs
======Full Message======
[Verible/FPV] Workaround that excludes CSR FPV files in Verible runs

The autogenerated CSR FPV assertions contain constructs that Verible
does not yet understand.
Verible then throws syntax errors that break our lint flow.
Unfortunately, these syntax errors cannot easily be waived, and the
issue needs to be addressed upstream, see
https://github.com/google/verible/issues/652

In the meantime, this commit introduces a workaround that excludes the
offending files from Verible lint runs.

Signed-off-by: Michael Schaffner <msf@opentitan.org>



======Commit: db4e2e45======
======Short Message======
[lint] Update Verible lint parser to detect Verible syntax errors
======Full Message======
[lint] Update Verible lint parser to detect Verible syntax errors

Signed-off-by: Michael Schaffner <msf@opentitan.org>



======Commit: a590e1ab======
======Short Message======
[lint] Spot errors in the lint flow that we weren't expecting
======Full Message======
[lint] Spot errors in the lint flow that we weren't expecting

If something goes wrong and the lint tool returns a nonzero exit
status (causing edalize/fusesoc to complain), we normally want to
squash that error message because it's something we have other
warnings about anyway.

However, we *do* want to see the message if something more dramatic
has happened. For example, we weren't seeing syntax error messages
from a very confused Verible, meaning that we reported no lint errors
when in fact the tool had died completely.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>
Co-authored-by: Michael Schaffner <msf@opentitan.org>



======Commit: b5ef3384======
======Short Message======
[lint] Remove Fusesoc-related message waivers
======Full Message======
[lint] Remove Fusesoc-related message waivers

For some time in summer 2020, Ibex contained some cores using a
"symbiyosys" edalize target, which wasn't yet supported by a released
version of edalize. These lines waived the spurious "lint errors"
that they caused.

Now that edalize has support for a "symbiyosys" target (added in
August 2020), the lines should no longer appear so don't need waiving.
See https://github.com/lowRISC/ibex/issues/1033 for context.

Signed-off-by: Michael Schaffner <msf@opentitan.org>



======Commit: 17d87be1======
======Short Message======
[syn] generated clock fix for IO_DIV4_CLK
======Full Message======
[syn] generated clock fix for IO_DIV4_CLK

Signed-off-by: Michael Schaffner <msf@opentitan.org>



======Commit: 32a6d56a======
======Short Message======
[sensor_ctrl] Fix differential ack handling
======Full Message======
[sensor_ctrl] Fix differential ack handling

Signed-off-by: Timothy Chen <timothytim@google.com>



======Commit: 802d4723======
======Short Message======
[dv/alert_handler] fix regression error
======Full Message======
[dv/alert_handler] fix regression error

Two regression error fixes regarding alert_handler:
1. Regwen switch from W1C to W0C, so writing 0 to the regwen will lock
the lockable regs.
2. Adding a reset when check escalation length, because reset is async
and monitor counts on posedge while scb counts on negedge. If reset is
in between the clock edge, there might be mismatch.

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: dc816189======
======Short Message======
[dv/hmac] Fix hmac vector parsing
======Full Message======
[dv/hmac] Fix hmac vector parsing

This PR fixes the regression failure on hmac NIST vector parsing. The
hmac vector does not have `KeyLen` keyword, but still has `Key`. The
current parsing logic will set the key to 0 in this case.

Also hmac NIST vector does not need to reserve key input, but kmac
vectors needs to. So this PR adds a flag for user to decide if they want
the key to be reserved.

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: 7a0289c6======
======Short Message======
[top] Minor lint fixes
======Full Message======
[top] Minor lint fixes

- tie off undriven input due to #5260
- tie off unused clocks / resets in scanmode muxing

Signed-off-by: Timothy Chen <timothytim@google.com>



======Commit: 6e293427======
======Short Message======
[fpv] Fix FPV compile errors
======Full Message======
[fpv] Fix FPV compile errors

1. sram_ctrl compile error comes from prim_lc_sync. It requires input
to be an array, even though the size is 1.

2. RV_DM compile error comes from missing `prim_lc_sync` package.

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: 3bb4f0b1======
======Short Message======
[otbn] Signal multiple errors together
======Full Message======
[otbn] Signal multiple errors together

Previously when several errors were observed together OTBN prioritised
them to set a single error bit. This removes the priortisation so bits
for all observed errors are set simultaneously.

Fixes #5141

Signed-off-by: Greg Chadwick <gac@lowrisc.org>



======Commit: f8394763======
======Short Message======
[csrng] Select Canright S-Box implementation for AES cipher core
======Full Message======
[csrng] Select Canright S-Box implementation for AES cipher core

This commit changes the default selection for the S-Box implementation
inside the embedded AES cipher core from the LUT-based implementation the
unmasked Canright design. This is more suitable for ASIC implementations
because of the lower area footprint. The LUT-based implementation should
be used for FPGA targets only.

This change got already merged with lowRISC/OpenTitan#5215 but it got
accidentally reverted when rebasing lowRISC/OpenTitan#5195.

Signed-off-by: Pirmin Vogel <vogelpi@lowrisc.org>



======Commit: 11880035======
======Short Message======
[reggen] Fix layout in register table
======Full Message======
[reggen] Fix layout in register table

I messed this up in commit 94926ae (by closing the <td> containing a
register description when there was an enum to follow).

This patch fixes that and, I think, simplifies the logic a bit. Now,
we collect up "desc_parts", which contains any register description
and any enum. The surrounding <td> ... </td> get added together at the
end. Doing it this way should avoid things coming unstuck again in the
future.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 2aff11b7======
======Short Message======
[ci] Move "slow lint" commands into script
======Full Message======
[ci] Move "slow lint" commands into script

This should work the same as before, but is easier to run locally.
Also, the job is no longer marked as "always()", which means it won't
run if installing the package dependencies fails (which caused rather
confusing error messages).

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: f2a373a7======
======Short Message======
Fix spelling errors
======Full Message======
Fix spelling errors

Signed-off-by: Tobias Wölfel <tobias.woelfel@mailbox.org>



======Commit: 1e65528a======
======Short Message======
[doc] Fix table ending
======Full Message======
[doc] Fix table ending

As there are no more rows which follow this one, the current `rowspan`
removes the table border.

Signed-off-by: Tobias Wölfel <tobias.woelfel@mailbox.org>



======Commit: 60b45095======
======Short Message======
[fpga] Raise severity of create_clock failures to error
======Full Message======
[fpga] Raise severity of create_clock failures to error

By default, such failures are just reported as critical warnings in batch
mode which are easily overlooked. Such failures usually occur if clock
constraints get outdated, e.g., because anchor points change. The design
might still work but some clocks will be unconstrained which can lead to
other problems later on.

Therefore, this commit raises the severity of such failures from critical
warning to error. As a result, synthesis is aborted.

This is related to lowRISC/OpenTitan#5254.

Signed-off-by: Pirmin Vogel <vogelpi@lowrisc.org>



======Commit: bd80aed9======
======Short Message======
[top/dv] Fix uart CSR failure
======Full Message======
[top/dv] Fix uart CSR failure

uart RX pin may not be connected. When loopback is set, TX pin may
toggle unexpectedly. Disable monitor TX pin in CSR test

Signed-off-by: Weicai Yang <weicai@google.com>



======Commit: f67df357======
======Short Message======
[kmac] Latch absorbed signal to delay Done command
======Full Message======
[kmac] Latch absorbed signal to delay Done command

kmac_keymgr interface asserts `CmdDone` when it sees `absorbed` signal.
The SHA3 module asserts absorbed signal when it is in `StAbsorb` but the
next state is `StSqueeze`. It creates assertion error as only
`StSqueeze` expects `CmdDone`.

To break the timing path, latch in absorbed_o is added.

This issue is reported by @udinator

Signed-off-by: Eunchan Kim <eunchan@opentitan.org>



======Commit: a0717f8d======
======Short Message======
[dv/otp] Fix regression regwen failure
======Full Message======
[dv/otp] Fix regression regwen failure

The nightly regression failure is due to recent change in `reset`
function. When reset is issued at posedge of `rst_n`, previous otp_scb
code causes a race condition. This PR moves the ral prediction after
`reset` function to avoid the race condition.

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: bd7f2296======
======Short Message======
[dv/kmac] fixes/updates for kmac_test_vector tests
======Full Message======
[dv/kmac] fixes/updates for kmac_test_vector tests

This PR contains a few updates/fixes for the test_vector tests,
and adds a few helpful display messages during simulation.

Signed-off-by: Udi Jonnalagadda <udij@google.com>



======Commit: 2b8ef762======
======Short Message======
[aon_timer] Minor fixes and updates for integration
======Full Message======
[aon_timer] Minor fixes and updates for integration

- Add exclusions to clk_aon registers
- Slightly rename reset request for consistency with wakeup request
- Add dummy INTR_ENABLE register for #5260

Signed-off-by: Timothy Chen <timothytim@google.com>

[top] Integrate aon_timer and remove nmi_gen

Signed-off-by: Timothy Chen <timothytim@google.com>

[sw] update total interrupts

Signed-off-by: Timothy Chen <timothytim@google.com>

[top] Auto generate files

Signed-off-by: Timothy Chen <timothytim@google.com>



======Commit: b826e4d7======
======Short Message======
[top/dv] Fix backdoor override
======Full Message======
[top/dv] Fix backdoor override

readelf may trancate the symbol name if long is over 85 chars
Since we need to find the symbol name `exp_spi_device_rx_data` to
replace the value, we can't trancate it

Before the fix:
>  1512: 20003698   128 OBJECT  LOCAL  DEFAULT    6 exp_spi_device_r[...]
After:
>  1512: 20003698   128 OBJECT  LOCAL  DEFAULT    6 exp_spi_device_rx_data

Signed-off-by: Weicai Yang <weicai@google.com>



======Commit: 5d25c33b======
======Short Message======
[site] Generate complete DIF description
======Full Message======
[site] Generate complete DIF description

Currently the text produced for the DIF description stops at the first
subelement. This is apparent if the description contains a variable
enclosed in backticks. The text up to this variable is returned but not
the rest.

Instead of using the `text` member of the element, which only contains
the text up to the first subelement according to the ET documentation,
create proper HTML for the description.

All tags are transformed into `span` HTML tags with
`@class='doxygentag-ORIGINALTAGNAME` set to retain the original tag
information from the Doxygen schema. To give us a bit more semantic
HTML, the `<computeroutput>` tag is transformed into a `<code>` HTML tag.

Fixes #5001

Signed-off-by: Tobias Wölfel <tobias.woelfel@mailbox.org>
Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: b7248ba8======
======Short Message======
[i2c, rtl] Lint errors due to full_o
======Full Message======
[i2c, rtl] Lint errors due to full_o

Fixed lint errors cause by full_o output wiring of prim_fifo_sync

Signed-off-by: Igor Kouznetsov <igor.kouznetsov@wdc.com>



======Commit: b5b8eba5======
======Short Message======
[padring/top] Carry over pinout from bronze and align sim and FPGA tops
======Full Message======
[padring/top] Carry over pinout from bronze and align sim and FPGA tops

Note that this is an intermediate step needed for the pinmux updates.
There are a couple of things that are still Bronze-specific and these
will be cleaned up over the coming weeks as we work towards Silver.

[top] Align englishbreakfast I/O configuration with earlgrey

Since both designs use the same padring, the MIO/DIO config should be
the same, even if not all IOs are connected to a pad.

[topgen] Topgen adjustments to keep MIO order stable

This changes the way the MIOs are enumerated and connected to the
pinmux. Before, topgen would connect all inouts from all modules first,
and then proceed with inputs and outputs.

This is inconsistent with how the ordering is implied by the
`mio_modules` key inside the top hjson.

This fix changes how the MIOs are enumerated. Within a module, topgen
still connects the inouts first, but globally it observes the order
specifiec by the `mio_modules list.

Note that this piece of topgen is going to be overhauled, so this is
just a temporary fix to ensure the MIO insel/outsel indices remain the
same among tops that have different amounts of MIO peripherals.

[top/dv] Alignments and workarounds to get chip simulation working

[top] Regenerate files

Signed-off-by: Michael Schaffner <msf@google.com>



======Commit: 37dc92c4======
======Short Message======
[dv/tools] Bug fix to common.tcl tb_top section.
======Full Message======
[dv/tools] Bug fix to common.tcl tb_top section.

Signed-off-by: Eitan Shapira <eitan.shapira@nuvoton.com>



======Commit: 9dffa1b3======
======Short Message======
[reggen] Minor fix to REGWEN error message
======Full Message======
[reggen] Minor fix to REGWEN error message

Relates to #5267

Signed-off-by: Tom Roberts <tomroberts@lowrisc.org>



======Commit: 81ada4f0======
======Short Message======
[ci] Remove --fork-point from git merge-base command
======Full Message======
[ci] Remove --fork-point from git merge-base command

The --fork-point argument enables a complicated mode for git
merge-base, which tries to cope with situations where the branch from
which we forked (origin/master) has had rewrites.

This uses the reflog when searching for ancestors, which isn't
appropriate in CI (where we're working on fresh checkouts). It seems
that this fails occasionally, leading to rather mysterious CI errors.

Since we don't rewrite the master branch, just use vanilla merge-base.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 01ec7cf8======
======Short Message======
[sw] Update source documentation
======Full Message======
[sw] Update source documentation

Fixes mostly spelling errors and outdated parameters.
Based on the warnings generated by Doxygen.

Signed-off-by: Tobias Wölfel <tobias.woelfel@mailbox.org>



======Commit: 0435a83e======
======Short Message======
[site] Remove double break
======Full Message======
[site] Remove double break

Only create one line break after a register table.
Remove the double line break formatting.

This allows multiple line breaks to be formatted correctly.

Fixes #4762

Signed-off-by: Tobias Wölfel <tobias.woelfel@mailbox.org>



======Commit: 2053fe16======
======Short Message======
[dv/kmac] fix CI compile issue in kmac tb
======Full Message======
[dv/kmac] fix CI compile issue in kmac tb

Signed-off-by: Udi Jonnalagadda <udij@google.com>



======Commit: 0e451f07======
======Short Message======
[dv/otp_ctrl] Add lc_prog interface to otp_ctrl_if
======Full Message======
[dv/otp_ctrl] Add lc_prog interface to otp_ctrl_if

This PR adds lc_prog interface to otp_ctrl_if in order to:
1. Add assertions to ensure if lc_program request is set, either
otp_idle_o will be reset to 0, or lc_prog has error
2. Add a clock cycle delay to lc_prog_req for later use in scb

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: 30d23802======
======Short Message======
[top] Re-align top_englishbreakfast with top_earlgrey
======Full Message======
[top] Re-align top_englishbreakfast with top_earlgrey

The most prominent changes are:
- Move pinmux from main crossbar to peripheral crossbar.
- Re-align instance names (uart -> uart0, add _aon suffixes).
- Re-align base addresses (ram_ret_aon, usbdev, sensor_ctrl_aon,
  ast_wrapper).
- Re-align top_englishbreakfast.hjson to ease future diffs.

This resolves lowRISC/OpenTitan#5242.

Signed-off-by: Pirmin Vogel <vogelpi@lowrisc.org>



======Commit: 0146f3ef======
======Short Message======
[dv] Fix stress_all with reset
======Full Message======
[dv] Fix stress_all with reset

1. #5097 added flushing item every 1ns durin reset, but at the last 1ns
before getting out of reset, we may still receive a new item. If this
case, it's not flushed out
Updated it to flush constantly during reset
2. reset ral in one place

Signed-off-by: Weicai Yang <weicai@google.com>



======Commit: 56a7a514======
======Short Message======
[topgen] Remove warning emitted for each inter-module connection
======Full Message======
[topgen] Remove warning emitted for each inter-module connection

I assume this was just intended as a debugging tool in commit e4a8507.
As far as I can tell, this shouldn't be a warning.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: a5973fbc======
======Short Message======
[fpga] Fix clock constraints
======Full Message======
[fpga] Fix clock constraints

The clkmgr instance got renamed recently. As a result, the clock
constraints couldn't be applied, leaving many clocks unconstrained on FPGA.

Signed-off-by: Pirmin Vogel <vogelpi@lowrisc.org>



======Commit: 9d84982a======
======Short Message======
[uart] Fix signal width
======Full Message======
[uart] Fix signal width

Verilator lint correctly identifies the signal as one bit too short
(should be 6, is 5).

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: 823ed759======
======Short Message======
[tlul] Add parentheses in true-clause of ternary
======Full Message======
[tlul] Add parentheses in true-clause of ternary

Fixes a VeribleLint warning and makes the code actually less ambiguous.

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: cd9dfee3======
======Short Message======
[rv_dm] Fix indentation in port list
======Full Message======
[rv_dm] Fix indentation in port list

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: cf45be18======
======Short Message======
[tlul] Update verilator waiver for tlul_err_resp
======Full Message======
[tlul] Update verilator waiver for tlul_err_resp

Commit 041c683 fixed the d_size response from tlul_err_resp and, in
doing so, read some more bits from tl_h_i. This commit updates the
Verilator waiver so that it matches the warning message again.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 9ce762fa======
======Short Message======
[util] fixed check_tool_requirements.py shebang
======Full Message======
[util] fixed check_tool_requirements.py shebang

Signed-off-by: Arnon Sharlin <arnon.sharlin@opentitan.org>



======Commit: d540782d======
======Short Message======
[prim] Minor lint fix
======Full Message======
[prim] Minor lint fix

Fix signal width in prim_intr_hw

Signed-off-by: Tom Roberts <tomroberts@lowrisc.org>



======Commit: c5841b7c======
======Short Message======
[regtool] Add reset values for hwext registers to reg_pkg
======Full Message======
[regtool] Add reset values for hwext registers to reg_pkg

The result (for AES) looks like

    // Default values for hwext registers
    parameter logic [1:0] AES_ALERT_TEST_RESVAL = 2'h 0;
    parameter logic [31:0] AES_KEY_SHARE0_0_RESVAL = 32'h 0;
    parameter logic [31:0] AES_KEY_SHARE0_1_RESVAL = 32'h 0;
    parameter logic [31:0] AES_KEY_SHARE0_2_RESVAL = 32'h 0;
    ...

Doing this means that design code can look in FOO_reg_pkg to set its
reset value as declared in the hjson, avoiding needing to duplicate
any constants by hand.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: d408de70======
======Short Message======
[otp] Add en_sram_ifetch configuration
======Full Message======
[otp] Add en_sram_ifetch configuration

Signed-off-by: Timothy Chen <timothytim@google.com>

[otp] Add default generation for intermodule

Signed-off-by: Timothy Chen <timothytim@google.com>



======Commit: b3c311b6======
======Short Message======
[keymgr/dv] Update for fatal alert
======Full Message======
[keymgr/dv] Update for fatal alert

design changed fault alert to fatal, update scb to match it
and add reset at the end of seq which triggers fatal alert

Signed-off-by: Weicai Yang <weicai@google.com>



======Commit: 5649c2a7======
======Short Message======
[top] Ast updates
======Full Message======
[top] Ast updates

- connect jitter enable
- connect differential scanmode signal

Signed-off-by: Timothy Chen <timothytim@google.com>

fixup! [top] Ast updates



======Commit: d65d1396======
======Short Message======
[csrng/rtl] added fatal alert
======Full Message======
[csrng/rtl] added fatal alert

Also changed all sync fifos to use the full_o.
Force fatal error register added.
Re-ran the top level interconnection script.
Connect new alert to alert handler at the top level.
Fixed some of the error reporting logic.
Updated the fifo intr to be a fatal interrupt.
Updated the csrng tb to stub intial io values.
Changed the fatal interrupt name to be more consistant with others.
Changed register name to err_code_test, and read-only.
Re-ran top level make.

Signed-off-by: Mark Branstad <mark.branstad@wdc.com>



======Commit: 445fe313======
======Short Message======
[dv/otp] backdoor ECC correctable error seq
======Full Message======
[dv/otp] backdoor ECC correctable error seq

This PR implements a backdoor method to inject 1 bit ECC error. This
error is categorized as correctable macro error, so status will show
error bit but won't fire fatal alert.

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: 8a00452d======
======Short Message======
[fpv] update jg tcl script for 2020.12 new version
======Full Message======
[fpv] update jg tcl script for 2020.12 new version

The JapserGold 2020.12 version includes a feature to randomize input
data at both pos/nedgedge clocks if -both-edge switch is enabled. But
our design's data should only be randomized at one clock edge.
This PR fixes it by adding a `-rate` to constraint only randomize at
posedge clock.

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: a43453c5======
======Short Message======
[util] Fix argument checks for sparse-fsm-encode.py
======Full Message======
[util] Fix argument checks for sparse-fsm-encode.py

This commit changes two argument checks for the sparse-fsm-encode.py
script:
1. Abort if the number of requested states is below 2. The script doesn't
   support this case and previously aborted because of a division or
   modulo by 0.
2. If the number of requested states is 2, the encodings with x bits and
   a minimum Hamming distance of x exists and the script is able to find
   them. Previously, the script would abort and print an error message.

Signed-off-by: Pirmin Vogel <vogelpi@lowrisc.org>



======Commit: 675e9497======
======Short Message======
[sw/sca] Fix a typo in aes_serial.c
======Full Message======
[sw/sca] Fix a typo in aes_serial.c

Signed-off-by: Alphan Ulusoy <alphan@google.com>



======Commit: 774e4850======
======Short Message======
[csrng] Select Canright S-Box implementation for AES cipher core
======Full Message======
[csrng] Select Canright S-Box implementation for AES cipher core

This commit changes the default selection for the S-Box implementation
inside the embedded AES cipher core from the LUT-based implementation the
unmasked Canright design. This is more suitable for ASIC implementations
because of the lower area footprint. The LUT-based implementation should
be used for FPGA targets only.

Signed-off-by: Pirmin Vogel <vogelpi@lowrisc.org>



======Commit: a74743ce======
======Short Message======
[aes] Fix lint warnings
======Full Message======
[aes] Fix lint warnings

Signed-off-by: Pirmin Vogel <vogelpi@lowrisc.org>



======Commit: 0623f96a======
======Short Message======
[keymgr/dv] Fix intr_test failure in stress_all
======Full Message======
[keymgr/dv] Fix intr_test failure in stress_all

1. stress_all shouldn't call keymgr_init which does some reg programming
and screws up intr_test
2. Add comment to address #5159

Signed-off-by: Weicai Yang <weicai@google.com>



======Commit: 558f3313======
======Short Message======
[dv] Provide license diagnostic info for VCS
======Full Message======
[dv] Provide license diagnostic info for VCS

This switch provides additional diagnostic info if there is a failure to
checkout a license. It at least tells us that a build failed due to
license checkout error rather than barfing up an esoteric stack trace.

Signed-off-by: Srikrishna Iyer <sriyer@google.com>



======Commit: 326a1868======
======Short Message======
[tlul] Minor fix in tlul_adapter_reg.sv
======Full Message======
[tlul] Minor fix in tlul_adapter_reg.sv

Signed-off-by: Michael Schaffner <msf@google.com>



======Commit: 40b86427======
======Short Message======
[dv/otp_ctrl] LC OTP_CTRL test update
======Full Message======
[dv/otp_ctrl] LC OTP_CTRL test update

This PR has three updates for lc_sequences:
1. Use push_pull agent h_data constraints to randomize more valid data
for lc_program inputs
2. Implement scb checking for lc_prog_idle signal.
3. Implement error checking for lc_program status. The error bits
and interrupt will be set if lc_program request has macro errors.
And push-pull agent error bit will be set as well.

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: 700d61b4======
======Short Message======
[ci] Constrain linting to num CPUs by default
======Full Message======
[ci] Constrain linting to num CPUs by default

This won't have any effect if a developer is running locally and has a
different DVSIM_MAX_PARALLEL set, but it should avoid the current
situation where we're running 16 parallel tasks on our 2 VCPU CI
machines.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 69e647fc======
======Short Message======
[doc] Fix issues/5093 -- "footnotes off-by-one in rust_for_c doc"
======Full Message======
[doc] Fix issues/5093 -- "footnotes off-by-one in rust_for_c doc"

The situation was worse than it looked initially, but it _looks_ like
all is well now.

It would be good for the reviewer to take the role of editor seriously
here, though -- I'm a Rust Newbie, so somebody really needs to check
my work carefully here.

Signed-off-by: Dan Nussbaum <dansn@google.com>



======Commit: 53cc1f8e======
======Short Message======
[ci] Add flash_ctrl_gen.py to the check-generated CI check
======Full Message======
[ci] Add flash_ctrl_gen.py to the check-generated CI check

This check started failing with 7858f3d a week ago and we hadn't
noticed (fixed in the commit before this one).

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: ef348c99======
======Short Message======
[reggen] Add naming check for REGWEN and standardize on RW0C accesses
======Full Message======
[reggen] Add naming check for REGWEN and standardize on RW0C accesses

Fixes #1922

This PR also aligns the affected designs and corresponding DV
environments and DIFs such that CI passes.

Signed-off-by: Michael Schaffner <msf@opentitan.org>



======Commit: e839c877======
======Short Message======
[prim/otp_ctrl] Fix ECC correctable bug in generic OTP wrapper
======Full Message======
[prim/otp_ctrl] Fix ECC correctable bug in generic OTP wrapper

Fixes #5175

Signed-off-by: Michael Schaffner <msf@opentitan.org>



======Commit: 6f25e378======
======Short Message======
[dv/otp] fix edn request regression error
======Full Message======
[dv/otp] fix edn request regression error

This PR fixes a regression mismatch during OTBN key request, TB expects
EDN request size is 16 while design is 18. The extra two edn request
coming from the background LFSR timer for checks.
To avoid this mismatch, if edn request is two more than expected, scb
will assume it is a LFSR timer request and ignore the output check.

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: 623cd924======
======Short Message======
[keymgr/dv] Fix falures in keymgr_lc_disable
======Full Message======
[keymgr/dv] Fix falures in keymgr_lc_disable

1. add 2 sync cycle for keymgr_en, which makes it more accurary to
predict csr value
2. fix randomize to Invalid state which can't be there normally
3. fix prediction of csr working_state, which can be read anytime and
need to be more precise in term of cycle

Signed-off-by: Weicai Yang <weicai@google.com>



======Commit: 01930e8e======
======Short Message======
[otbn] Remove unneeded __init__.py
======Full Message======
[otbn] Remove unneeded __init__.py

The util directory is supposed to contain scripts, who include stuff
from the "shared" subdirectory: it's not supposed to be a Python
package itself. Removing this file also silences an error from the
newest versions of mypy.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: c5b38159======
======Short Message======
[reggen] Define a Register type for use in reggen
======Full Message======
[reggen] Define a Register type for use in reggen

The big change in this commit is to define a Register type (in
util/reggen/register.py), to represent registers as parsed from hjson.
Once you do that, it makes sense to define objects to represent things
inside a register like allowed accesses (in access.py), fields (in
field.py), bit ranges (in bits.py) and enum entries (in
enum_entry.py).

The original plan for this commit was to stop there but multireg
objects, which wrap a register, are a bit fiddly so we also define a
MultiRegister class (in multi_register.py).

The motivation for this change is that the code in validate.py now
actually parses its input to MultiRegister or Register objects.
Before, it checked the data was good and left it as a nested
dictionary. Downstream code then has to do silly things like re-parse
integers from strings. This rather violates the "parse, don't
validate" mantra.

**

The most obvious user-visible change from this commit that there
should be slightly better error messages BUT there will be fewer of
them. Rather than collect up error counts, as validate.py does, this
code raises a ValueError. The disadvantage of doing this is that we
don't get to generate multiple error messages. The advantage is that
the code gets much cleaner. This trade-off seems like a good one to
me: this is a configuration parser, not a C compiler!

A slightly less obvious change is that the parsing code is now more
opinionated. Before this commit, there were lots of configuration
errors that you could make that caused the parsing code to emit a
warning (that no-one notices...) and then to change the input to look
more sensible. Now, we just raise an error: in my opinion, there's no
real reason not to force a user to Do It Right.

To see how this commit changes things for code that now uses the
Register types, see the make_intr_alert_reg() function in validate.py.
This has got a little shorter, and no longer needs to reproduce the
logic to generate fields like "genswwraccess" and similar. Another
place to look is check_wen_regs() in the same file, where
multi-register handling has got much simpler.

**

There are various ways in which this is work in progress. Firstly,
there are other objects that are currently not wrapped (same-address
register lists, windows, skipto) and the top-level "wrapping object"
is still a dictionary. Assuming we're happy with this approach,
wrapping those should be easy enough.

Secondly, there are duplicate "multireg", "register" and "field"
classes. The code in gen_rtl.py constructs actual objects to represent
these. It was doing this by re-parsing the dicts. This commit
simplifies that code a bit, so it's now just re-shaping things like
Register objects. An obvious job for a follow-up commit is to get rid
of the types that are currently in data.py.

Finally, the wrapping of access enums in access.py is a bit ugly. I've
left this similar to the original for now, to avoid yet more changes
in the codebase.

**

As part of fixing everything up to match again, I also removed
genbasebits support, which seems to have lain unused since the initial
import.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 63be5173======
======Short Message======
[util/design] Minor fix in sparse FSM encoding script
======Full Message======
[util/design] Minor fix in sparse FSM encoding script

This error got recently introduced while cleaning up the log
message format in util/design scripts.

Signed-off-by: Michael Schaffner <msf@opentitan.org>



======Commit: f9f02497======
======Short Message======
[keymgr/dv] Update scb for sw_binding_en
======Full Message======
[keymgr/dv] Update scb for sw_binding_en

due to #5105, sw_binding_en wasn't actually verified before
After solved that issue, found some issues in scb (which is fixed in this PR)
and design issue at #5124

Signed-off-by: Weicai Yang <weicai@google.com>



======Commit: e6bddc73======
======Short Message======
[otp_ctrl] Update behavior of LCI idle signals
======Full Message======
[otp_ctrl] Update behavior of LCI idle signals

The idle signal is now only deasserted during programming operations to
be consistent with the idle signal behavior of the DAI.

Fixes #5132

Signed-off-by: Michael Schaffner <msf@opentitan.org>



======Commit: f1006bd2======
======Short Message======
[top] Hook-up alert handler and kmac to edn
======Full Message======
[top] Hook-up alert handler and kmac to edn

Signed-off-by: Timothy Chen <timothytim@google.com>

[alert_handler] Add edn dependency

Signed-off-by: Timothy Chen <timothytim@google.com>

[alert_handler] fix edn connections in tb

Signed-off-by: Timothy Chen <timothytim@google.com>

[top] fixes for top_englishbreakfast

Signed-off-by: Timothy Chen <timothytim@google.com>



======Commit: 5b9b2536======
======Short Message======
[util] Fix a minor corner case
======Full Message======
[util] Fix a minor corner case

- In a partial-one-to-N connection where there is only one responder,
  the current code mistakenly thinks it is a 1:1 signal and skips the
  logic handling the partial connection.

Signed-off-by: Timothy Chen <timothytim@google.com>



======Commit: 5c755b69======
======Short Message======
[fpv] top_level updates
======Full Message======
[fpv] top_level updates

This PR fixes a few included IPs core files from top-level, in order to
let FPV fusesoc build passes in top-level FPV connectivity test.

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: d4347522======
======Short Message======
[otbn] Initial framework for configuring weights in RIG
======Full Message======
[otbn] Initial framework for configuring weights in RIG

This patch only allows the configuration to specify weights between
the different generators. It also assumes that the configuration comes
from the rig directory.

The plan is to do much more, and to allow something more general for
custom configurations (passing them by path too, and allowing
configurations to inherit from each other). This is the "MVP" version
to get the wiring right.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: f68d8029======
======Short Message======
[prim] fix flash sram adapter use for configuration space
======Full Message======
[prim] fix flash sram adapter use for configuration space

see #4999

Signed-off-by: Timothy Chen <timothytim@google.com>



======Commit: ac3f4734======
======Short Message======
[keymgr] fix sw_binding regwen
======Full Message======
[keymgr] fix sw_binding regwen

see #5124

Signed-off-by: Timothy Chen <timothytim@google.com>



======Commit: 0d48a445======
======Short Message======
[dv] Fix tl host for reset
======Full Message======
[dv] Fix tl host for reset

In #4282, we updated it to avoid printing too much log and reduce loops
However, when a req comes in the the middle of reset, we don't process
it as driver is waiting for reset to be released, which causes
uncompleted items in RAL

Changed to still polling every 1ns but don't enter `DV_SPINWAIT_EXIT if
it's in the reset

Signed-off-by: Weicai Yang <weicai@google.com>



======Commit: bdc2e588======
======Short Message======
[keymgr/dv] Fix cfgen seq
======Full Message======
[keymgr/dv] Fix cfgen seq

One condition was wrong, the write to locked reg never occured.
Avoid checking start field, when it's not clear during the OP.

Signed-off-by: Weicai Yang <weicai@google.com>



======Commit: e204d609======
======Short Message======
[dv] Make CSR fields randomizable by default.
======Full Message======
[dv] Make CSR fields randomizable by default.

- Partially fixes #5105. As a safeguard, the fixes suggested by
@weicaiyang must also be employed.

Signed-off-by: Srikrishna Iyer <sriyer@google.com>



======Commit: 5d3c8bde======
======Short Message======
[otbn] Update block architecture diagram
======Full Message======
[otbn] Update block architecture diagram

Fixes #3517

Signed-off-by: Greg Chadwick <gac@lowrisc.org>



======Commit: 546cbac2======
======Short Message======
[otbn] Remove a stray semicolon
======Full Message======
[otbn] Remove a stray semicolon

This was causing a null statement AscentLint error.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: cd39bbd5======
======Short Message======
[otp_ctrl] Latch external check triggers
======Full Message======
[otp_ctrl] Latch external check triggers

This fixes a minor issue with external check triggers.
Previously, they have not been latched, which could lead to
situations where both checks were triggered simultanously via the
external trigger register, but only one of them would actually run.

Signed-off-by: Michael Schaffner <msf@opentitan.org>



======Commit: 010e3cc3======
======Short Message======
[top] Minor lint fixes
======Full Message======
[top] Minor lint fixes

Signed-off-by: Timothy Chen <timothytim@google.com>



======Commit: 03f1af66======
======Short Message======
[top] Various top related fixes
======Full Message======
[top] Various top related fixes

Signed-off-by: Timothy Chen <timothytim@google.com>

[top] revert top english breakfast changes

Signed-off-by: Timothy Chen <timothytim@google.com>

[top] various top level connection fixes

Signed-off-by: Timothy Chen <timothytim@google.com>

[top] Additional fixes for CI

Signed-off-by: Timothy Chen <timothytim@google.com>



======Commit: ac6e768a======
======Short Message======
[pattgen] assertion fixes
======Full Message======
[pattgen] assertion fixes

Signed-off-by: Timothy Chen <timothytim@google.com>



======Commit: b0f55771======
======Short Message======
[top] Instantiate i2c and patterngen
======Full Message======
[top] Instantiate i2c and patterngen

Signed-off-by: Timothy Chen <timothytim@google.com>

[sw] update interrupt layout

Signed-off-by: Timothy Chen <timothytim@google.com>

[top] minor fixes

Signed-off-by: Timothy Chen <timothytim@google.com>



======Commit: d09aabf8======
======Short Message======
[i2c, rtl] Fixes to Lint Errors and Warnings
======Full Message======
[i2c, rtl] Fixes to Lint Errors and Warnings

1. Added full_o pins to prim_fifo_sync instances (see PR #5020)
2. Fixed warnings and made minor logic simplifications

Signed-off-by: Igor Kouznetsov <igor.kouznetsov@wdc.com>



======Commit: 6beec5ce======
======Short Message======
[dv/otp_ctrl] Fix regwen error in regression
======Full Message======
[dv/otp_ctrl] Fix regwen error in regression

This PR removes the check for regwen in dai error sequence because it is
hard to predict which clock cycle the error is found and then set regwen
back to 1.

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: ef9d438a======
======Short Message======
[otp_ctrl] Fix DV warnings
======Full Message======
[otp_ctrl] Fix DV warnings

This PR fixes DV enum syntax warning. We added a casting to avoid the
warning.

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: 7826935e======
======Short Message======
[edn/top] Fix port default assignments
======Full Message======
[edn/top] Fix port default assignments

Signed-off-by: Michael Schaffner <msf@google.com>



======Commit: e5059128======
======Short Message======
[nmi_gen] Minor fix to get synthesis in DC unstuck
======Full Message======
[nmi_gen] Minor fix to get synthesis in DC unstuck

Signed-off-by: Michael Schaffner <msf@google.com>



======Commit: 47c2e162======
======Short Message======
[ci] Fail CI again on failing FPGA tests
======Full Message======
[ci] Fail CI again on failing FPGA tests

As #5029 is fixed we can now re-enable the check in CI.

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: 622ec3f0======
======Short Message======
[ci] Remove "wrong" build artifacts from SW builds
======Full Message======
[ci] Remove "wrong" build artifacts from SW builds

We build the device software twice: once in a normal version for
top_earlgrey, and once in a patched version which is only used/suitable
for the Nexys Video FPGA board. The whole patching process is a rather
ugly hack, but necessary until we are able to build multiple parametrizable
toplevels, e.g. with reduced amounts of flash and SRAM to match
available resources on certain FPGA boards.

Whenever we build software, the build outputs end up in $BIN_DIR. If we
build the software twice from different sources (i.e., the unpatched and
the patched sources), we have build artifacts with the same file name,
but different content in $BIN_DIR. That makes the whole situation not
only extremely confusing, but also dangerously buggy: if we download build
artifacts from both the unpatched and the patched build step and extract
them into the same directory (as we do currently), we get an
unpredictable mix of binaries from different sources.

This patch addresses the worst part of the problem by removing all build
artifacts from $BIN_DIR which we know shouldn't be there.

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: 9b875061======
======Short Message======
Updates to uartdpi.sv
======Full Message======
Updates to uartdpi.sv

 - fixed bug in cycle counters where (CYCLES_PER_SYMBOL-1) should be
   used as counter end value.  Only visible when running UART at max
   baud rate for simulation test, i.e. CYCLES_PER_SYMBOL==2.
 - added initial block to set 'seen_reset' qualifier for UART receive
   start bit. This prevents spurious characters being printed when the
   rx_i pin toggles before reset.

Signed-off-by: Shareef Jalloq <shareef@jalloq.co.uk>



======Commit: 4a015f9e======
======Short Message======
[prim_util_pkg] Fix DC warning in _clog2()
======Full Message======
[prim_util_pkg] Fix DC warning in _clog2()

DC warns about assigning to an input port (`value`). Use an intermediate
variable instead.

```
Warning:  ../src/lowrisc_prim_util_0.1/rtl/prim_util_pkg.sv:30: Port value of type input is being assigned.  (VER-1005)
Warning:  ../src/lowrisc_prim_util_0.1/rtl/prim_util_pkg.sv:32: Port value of type input is being assigned.  (VER-1005)
```

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: 701c9a5e======
======Short Message======
[otbn] Rename from "error code" to "error bit" in ISS
======Full Message======
[otbn] Rename from "error code" to "error bit" in ISS

No functional change, but the name now matches the design a bit
better.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 0b60b5d9======
======Short Message======
[otbn] Allow multiple errors in a single cycle in ISS
======Full Message======
[otbn] Allow multiple errors in a single cycle in ISS

This means we can't just raise an exception any more, which makes
things a little more fiddly. Instead, any component of the state that
might raise an error has an "errs" list, to which it appends an error
if it sees one. These lists get concatenated in a tree, in much the
same way as we gather up changes.

After executing an instruction, the code checks whether there were any
errors. If not, it commits pending changes. If there is an error, it
figures out the correct value of ERR_BITS and stops.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 51f1d188======
======Short Message======
[reggen] Elevate alert name check severity to error
======Full Message======
[reggen] Elevate alert name check severity to error

Signed-off-by: Michael Schaffner <msf@opentitan.org>



======Commit: 0ceb79fd======
======Short Message======
[otp_ctrl] Fix misaligned breakout type for HW_CFG partition
======Full Message======
[otp_ctrl] Fix misaligned breakout type for HW_CFG partition

Signed-off-by: Michael Schaffner <msf@opentitan.org>



======Commit: 39b14340======
======Short Message======
[fpv] fix otp_ctrl and lc_ctrl syntax error
======Full Message======
[fpv] fix otp_ctrl and lc_ctrl syntax error

This PR fixes syntax error reported in issue #5035 according to
michael's suggestion.

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: cd5a6a4d======
======Short Message======
[spi_device] Extract serial-to-parallel from fwmode
======Full Message======
[spi_device] Extract serial-to-parallel from fwmode

As spi_s2p module is introduced, Removed rx handler from FwMode module.
fwmode module handed over rx valid and data from s2p to async FIFO and
detects the overflow error only.

Signed-off-by: Eunchan Kim <eunchan@opentitan.org>



======Commit: e0d517eb======
======Short Message======
[topgen] Don't generate empty clock_reset_export entries
======Full Message======
[topgen] Don't generate empty clock_reset_export entries

The check_clk_rst_export function was essentially the same thing as
setdefault(). Since topgen's merge.py is actually the only thing that
reads this key, keep the same defaulting behaviour but don't actually
generate extra entries.

If we don't do this, we have to add clock_reset_export to the optional
fields list for every type in topgen/validate.py to avoid a warning.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 96c905b2======
======Short Message======
[topgen] Allow eflash objects to have name, clock_connections
======Full Message======
[topgen] Allow eflash objects to have name, clock_connections

In practice, they always have a name (we generate exactly one in
top_earlgrey.hjson, which is an element in the memory list with name
and type both "eflash").

They also always have a clock_connections field, which is generated in
amend_clocks (I wonder whether this should actually just overwrite
clock_srcs, but that's definitely for a different patch).

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 1b4bfc57======
======Short Message======
[topgen] Silence warning on missing power domain
======Full Message======
[topgen] Silence warning on missing power domain

Most of our blocks don't currently define a power domain, and thus get
assigned to "default". That seems like a perfectly reasonable
behaviour and doesn't need a warning, I don't think.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 243d4a66======
======Short Message======
[fpga] Fix boot ROM splice script for NexysVideo
======Full Message======
[fpga] Fix boot ROM splice script for NexysVideo

Signed-off-by: Pirmin Vogel <vogelpi@lowrisc.org>



======Commit: de15468c======
======Short Message======
[top] Fix reference and doc for top_earlgrey_reduce.py script
======Full Message======
[top] Fix reference and doc for top_earlgrey_reduce.py script

Signed-off-by: Pirmin Vogel <vogelpi@lowrisc.org>



======Commit: 7858f3da======
======Short Message======
Add missing full_o output signal of prim_fifo_sync
======Full Message======
Add missing full_o output signal of prim_fifo_sync

prim_fifo_sync was updated to have another output port, but the callers
weren't updated in sync. Fix that.

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: 42a9f3b4======
======Short Message======
[otbn] Prevent instruction actions on error
======Full Message======
[otbn] Prevent instruction actions on error

Fixes #4507

Signed-off-by: Greg Chadwick <gac@lowrisc.org>



======Commit: 915c7465======
======Short Message======
[dv] Gracefully kill simulation
======Full Message======
[dv] Gracefully kill simulation

When running sims remotely (LSF, etc), if we need to kill a simulation
that might be hung, then issuing a TERM signal to the process running
the simulation (or `bkill`ing the LSF job) causes the simulation to
terminate unexpectedly and uncleanly. If wavedump is enabled, it causes
the dump to get corrupted, preventing us from debugging the cause of the
hang in the first place.

In this patch, there is logic added to the simulation that checks for
the presence of a `dv.stop` file in the run directory periodically every
1ms. Whether to enable this logic AND the polling interval can be
changed via plusargs. This file can be easily added to the run directory
by running `touch <rundir>/dv.stop`. DVsim can use this method rather
then killing the process (more updates on that coming soon).

Signed-off-by: Srikrishna Iyer <sriyer@google.com>



======Commit: c2b279ad======
======Short Message======
[usdev] usbdev related changes to integrate aon_wake function
======Full Message======
[usdev] usbdev related changes to integrate aon_wake function

- forward wake_en/wake_ack/suspend signals from usbdev
- usb_out_of_rst is also constructed in usbdev.  While this module is not always on, if we assume an isolation value of 0 will be used during low power, then it effectively serves the same purpose.
- minor tweaks inside usbdev_aon_wake to no longer hold the io's and instead re-use pinmux's native io-holding
- To fully support this, pinmux io sleep enable behavior needs to be software controllable per pin.

Signed-off-by: Timothy Chen <timothytim@google.com>

[usbdev] re-name and update file

Signed-off-by: Timothy Chen <timothytim@google.com>

[usbdev] Add missing file

Signed-off-by: Timothy Chen <timothytim@google.com>

[usbdev] update tb connections

Signed-off-by: Timothy Chen <timothytim@google.com>

[pinmux / top] pinmux and top level changes to support usbdev_aon_wake

- usbdev_aon_wake is directly instantiated inside pinmux.
- the incoming dp/dn signals are plucked to compare against dp_pullupen and dn_pullupen signals
- pinmux needs an additional change to make sleep-enable behavior per pin and software controllable

Signed-off-by: Timothy Chen <timothytim@google.com>

[pinmux] hook-up usb wakeup in a separate PR.

Signed-off-by: Timothy Chen <timothytim@google.com>

[pinmux / usb] various updates

- address comments
- hook-up debug
- hook-up wakeup

Signed-off-by: Timothy Chen <timothytim@google.com>

[top] Correctly assign reset power domain

Signed-off-by: Timothy Chen <timothytim@google.com>

[pinmux] connect usb wakeup as part of separate PR

Signed-off-by: Timothy Chen <timothytim@google.com>

[top] add connections for top_englishbreakfast

Signed-off-by: Timothy Chen <timothytim@google.com>

[pinmux] continued fixes for top_englishbreakfast

Signed-off-by: Timothy Chen <timothytim@google.com>

[pinmux] connect usb wakeup in a different PR.

Signed-off-by: Timothy Chen <timothytim@google.com>

[util] rebase fixes

Signed-off-by: Timothy Chen <timothytim@google.com>

[util] fix false positive error

Signed-off-by: Timothy Chen <timothytim@google.com>

[top] Auto generate files

Signed-off-by: Timothy Chen <timothytim@google.com>

[usbdev] fixes based on reviews

Signed-off-by: Timothy Chen <timothytim@google.com>



======Commit: 562f4714======
======Short Message======
[usbdev] DRAFT Always On USB Wake detection module
======Full Message======
[usbdev] DRAFT Always On USB Wake detection module

Uploaded for discussion. Has not been included in any build
(i.e. expect syntax errors etc).

Discussion in issue #3530

Signed-off-by: Mark Hayter <mark.hayter@gmail.com>



======Commit: 0d807b65======
======Short Message======
[otp] Fix Verible lint error
======Full Message======
[otp] Fix Verible lint error

Fix lint error

```
src/lowrisc_ip_otp_ctrl_pkg_0.1/rtl/otp_ctrl_part_pkg.sv:239:36: Remove trailing spaces. [Style: trailing-spaces] [no-trailing-spaces]
```

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: d0ac8621======
======Short Message======
[ci] Fix syntax error
======Full Message======
[ci] Fix syntax error

a10943bd9dd3bf00158b5e1a067937b0794cdc30 introduced a syntax error in
our CI configuration which wasn't caught before merging into master. Fix
that.

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: 5302ffff======
======Short Message======
[flash / top] Minor edits based on reviews
======Full Message======
[flash / top] Minor edits based on reviews

Signed-off-by: Timothy Chen <timothytim@google.com>

[flash] fix alert name

Signed-off-by: Timothy Chen <timothytim@google.com>

[flash_ctrl] exclude alert trigger from tests

Signed-off-by: Timothy Chen <timothytim@google.com>



======Commit: 16741100======
======Short Message======
[flash_ctrl / top] Various functional updates to flash
======Full Message======
[flash_ctrl / top] Various functional updates to flash

- Add ERR_CODE register and separate various error sources
- Update prim_generic_flash interface to align with latest spec
- Add fatal and recoverable alert senders

Signed-off-by: Timothy Chen <timothytim@google.com>

[flash_ctrl] Add flash_ctrl to list of connected alert modules

Signed-off-by: Timothy Chen <timothytim@google.com>



======Commit: 78e9b18e======
======Short Message======
[dv/cip_scb] alert checking fix
======Full Message======
[dv/cip_scb] alert checking fix

This PR fixes a logic in cip_scb when alert checking is ignored due to
alert in progress, it still assign the exp alert. This is fixed in this
PR.
Thanks @weicaiyang for the issue and waveform.

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: 5a7bac3e======
======Short Message======
[keymgr/dv] Add kmac respond error seq
======Full Message======
[keymgr/dv] Add kmac respond error seq

1. support kmac to respond error or invalid data in eymgr_kmac_agent
2. add keymgr_kmac_rsp_err_vseq and update scb to check it

Signed-off-by: Weicai Yang <weicai@google.com>



======Commit: e4d639a0======
======Short Message======
[otp_ctrl/lc_ctrl] Make invalid defaults for lc state random constants
======Full Message======
[otp_ctrl/lc_ctrl] Make invalid defaults for lc state random constants

Signed-off-by: Michael Schaffner <msf@google.com>



======Commit: 6d32d8de======
======Short Message======
[util/design] Switch to RuntimeError exceptions for errors
======Full Message======
[util/design] Switch to RuntimeError exceptions for errors

Signed-off-by: Michael Schaffner <msf@opentitan.org>



======Commit: aebbe997======
======Short Message======
[util/design] Ensure digests are always placed at the end of a partition
======Full Message======
[util/design] Ensure digests are always placed at the end of a partition

This change makes sure that digests are always placed at the end of a
partition. The RTL invalid default vector is adjusted such that
unallocated space within a partition is accounted for.

This commit also removes the HW_CFG_CONTENT item since it is not needed
anymore.

Signed-off-by: Michael Schaffner <msf@opentitan.org>



======Commit: c82f92cf======
======Short Message======
[util/design] Add python PRESENT library
======Full Message======
[util/design] Add python PRESENT library

This includes minor fixes in Present.py to make it work with Python 3.5+

Signed-off-by: Michael Schaffner <msf@opentitan.org>



======Commit: 16532b26======
======Short Message======
[util/design] Use RuntimeError to signal errors in lc gen script
======Full Message======
[util/design] Use RuntimeError to signal errors in lc gen script

Signed-off-by: Michael Schaffner <msf@opentitan.org>



======Commit: 20cea71a======
======Short Message======
[dv/alert_esc_agent] Use mon_cb's signal in alert_monitor
======Full Message======
[dv/alert_esc_agent] Use mon_cb's signal in alert_monitor

This PR fixes alert_monitor - it directly uses cfg.vif.alert_* signals
instead of the signals from the clocking block. Because of this, there
is a hard-coded one cycle delay in alert_monitor.
Thanks @weicaiyang for pointing that out during a review.

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: 3fbb0751======
======Short Message======
[dv/kmac] fix common dv tests
======Full Message======
[dv/kmac] fix common dv tests

this PR fixes the common nightly test (intr/csr) failures in KMAC.j

Signed-off-by: Udi Jonnalagadda <udij@google.com>



======Commit: fb9fdb64======
======Short Message======
[ci] Quote argument to get-build-type.sh
======Full Message======
[ci] Quote argument to get-build-type.sh

When we run on master (rather than a PR),
$SYSTEM_PULLREQUEST_TARGETBRANCH isn't defined, since this isn't a
pull request. Make sure we still actually pass 2 arguments to
get-build-type.sh.

Also, condition the Python lint check on being a PR. Amusingly, this
was running on the master branch before, but the call to git to get a
file list was broken (which we didn't notice), hiding any follow-on
errors.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 62b3e768======
======Short Message======
[dvsim] Generate FUSESOC_IGNORE at top of scratch root
======Full Message======
[dvsim] Generate FUSESOC_IGNORE at top of scratch root

This is a bit of a work-around for a race condition that was causing
all sorts of confusing CI failures. This crops up the second time you
run a "primary config" (list of configurations), if you do that second
run with a high parallelism.

Suppose you've done a dvsim lint run already and you have two IP
blocks, A and B. At this point, you'll have generated .core files
somewhere inside A's build directory, protected by a FUSESOC_IGNORE
file.

Now you start a new run. Two fusesoc processes (for A and B,
respectively) start to race. The one for A cleans its build directory,
essentially running "rm -rf" on the generated tree. This works
top-down, deleting files and directories. Within a directory, it works
in the order that files come back from readdir. What happens if
FUSESOC_IGNORE appears in the list before the directories containing
the core files?

The "rm -rf" process deletes the FUSESOC_IGNORE file. Now suppose that
the kernel suspends that process and switches over to the fusesoc
process for block B. That process can now merrily read its way down
the build directory. There's no FUSESOC_IGNORE file, so it looks in
core A's generated core files and finds some. Oops.

Now the process for block B gets suspended and we're back to A, which
finishes up deleting stuff. When we get back to B again, it tries to
load that juicy core file that it found... which isn't there any
more. Total confusion!

Debugging this was made much worse by the fact that the time stamps
have all since been trashed by core A's fusesoc run, which has since
helpfully re-created all the files!

One "proper" fix would be to delete the old build directory more
carefully, ensuring that the generated core files get deleted before
FUSESOC_IGNORE. That seems rather difficult, though. Ideally, we'd
want to move that logic back to fusesoc, rather than calling "rm -rf"
ourselves.

Another possible fix would be to move this "touch" operation into the
various flow configurations that need it. I'm not so keen on that,
though, because now we duplicate the logic all over the place.

I'm hoping this commit will be reverted and replaced by a better
solution soon :-)

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 03862099======
======Short Message======
Revert "[lint] Provision syntax error filter for Verible lint"
======Full Message======
Revert "[lint] Provision syntax error filter for Verible lint"

This reverts commit 268692c5b6afcf51d5146be6c024aa4760ede4a6.

Signed-off-by: Michael Schaffner <msf@opentitan.org>



======Commit: 68bae0e1======
======Short Message======
[rtl/sram] fix otp<->sram connection parameters
======Full Message======
[rtl/sram] fix otp<->sram connection parameters

Currently the `prim_sync_reqack_data` module instantiated to connect the
OTP and SRAM is parameterized such that it expects data to be
transferred from the SRC side (SRAM) to the DST side (OTP).

However this needs to be reversed, as the OTP is sending scrambling seed
data over to the SRAM.

This PR adds the relevant parameters.

Signed-off-by: Udi Jonnalagadda <udij@google.com>



======Commit: 2971a1ea======
======Short Message======
[top] Top level updates
======Full Message======
[top] Top level updates

- add extra uarts
- align memory addresses
- update software for uart0

Signed-off-by: Timothy Chen <timothytim@google.com>

[sw] update unittest

Signed-off-by: Timothy Chen <timothytim@google.com>

[top] revert flash size for now

Signed-off-by: Timothy Chen <timothytim@google.com>

[top] Fix concat for software consistency

Signed-off-by: Timothy Chen <timothytim@google.com>

[sw] update unittest for plic

Signed-off-by: Timothy Chen <timothytim@google.com>

[sw] update new location

Signed-off-by: Timothy Chen <timothytim@google.com>

[uart] exclude reads to status

- non-dedicated uarts showed failures likely due to 0'd inputs

Signed-off-by: Timothy Chen <timothytim@google.com>

[uart] exclude check on rx_idle only

Signed-off-by: Timothy Chen <timothytim@google.com>

[uart] update tag type

Signed-off-by: Timothy Chen <timothytim@google.com>

[top] Auto generate files

Signed-off-by: Timothy Chen <timothytim@google.com>



======Commit: 71d98f8e======
======Short Message======
[prim] Update fifo behavior during reset
======Full Message======
[prim] Update fifo behavior during reset

Address #4260

Signed-off-by: Timothy Chen <timothytim@google.com>

[prim] Minor fifo updates

Signed-off-by: Timothy Chen <timothytim@google.com>

[prim] minor update

Signed-off-by: Timothy Chen <timothytim@google.com>

[flash_ctrl] fixes to flash for prim_fifo updates

Signed-off-by: Timothy Chen <timothytim@google.com>

[flash_ctrl] Auto generate files

Signed-off-by: Timothy Chen <timothytim@google.com>



======Commit: 4c56668b======
======Short Message======
[keymgr/dv] update stress_all with reset
======Full Message======
[keymgr/dv] update stress_all with reset

Enhance keymgr_kmac_agent to handle reset
Fix issues on checking sw_bind_en and err_code

Signed-off-by: Weicai Yang <weicai@google.com>



======Commit: 7a857a01======
======Short Message======
[dv] Increase num_trans for stress_all with reset
======Full Message======
[dv] Increase num_trans for stress_all with reset

`num_trans` is often set to very low number for CSR, but stress_all with
reset is also using the same common_vseq.
Also fix the `delay_to_reset` to make it random for each iteration

Signed-off-by: Weicai Yang <weicai@google.com>



======Commit: 9e7eb06f======
======Short Message======
[docs] Fix incorrect wavedrom tag for PLIC
======Full Message======
[docs] Fix incorrect wavedrom tag for PLIC

Signed-off-by: Stefan Wallentowitz <stefan.wallentowitz@hm.edu>



======Commit: 125940fa======
======Short Message======
[sw/sca] Add simple serial library
======Full Message======
[sw/sca] Add simple serial library

This change introduces a library that implements simple serial protocol
version 1.1. This library provides:
- A mechanism for registering command handlers,
- A simple parser that parses incoming packets and dispatches them to
  the appropriate handlers,
- A built-in handler for the 'v' (version) command, and
- Functions to send arbitrary packets to the host.

Signed-off-by: Alphan Ulusoy <alphan@google.com>



======Commit: 23b2ab4b======
======Short Message======
[dv/dvsim] Fix when next_item does not have dependency
======Full Message======
[dv/dvsim] Fix when next_item does not have dependency

This PR fixes the comment in PR #4993. Thanks @rupert for the
suggestion.

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: 6a9caa2d======
======Short Message======
[otbn] Remove the --output argument from rig gen
======Full Message======
[otbn] Remove the --output argument from rig gen

Since we only generate one file and don't echo anything to
stdout (error messages appear on stderr), there's no need for this
complexity.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: e5213f7b======
======Short Message======
[prim_packer_fifo/rtl] reset to disable output controls
======Full Message======
[prim_packer_fifo/rtl] reset to disable output controls

AST RNG request for feature to connect EDN bus.
Trying to fix CI fail.

Signed-off-by: Mark Branstad <mark.branstad@wdc.com>



======Commit: 7c42f67e======
======Short Message======
[otbn] fix bn.rshi instructions in Barrett code
======Full Message======
[otbn] fix bn.rshi instructions in Barrett code

This reverses the parameters of the bn.rshi instructions
in the code snippet for the 384 bit Barrett modular
multiplication to match the current OTBN specification.

This is related to #4112

Signed-off-by: Felix Miller <felix.miller@gi-de.com>



======Commit: 9ab407ef======
======Short Message======
[util] Allow optional tools in check_tool_requirements
======Full Message======
[util] Allow optional tools in check_tool_requirements

tool_requirements.py lists minimum versions for tools, but the
distinction between "tools that absolutely need to be installed" and
"the minimum version of a tool if you want to run it" was baked in to
check_tool_requirements.py

This patch moves that distinction to the (more user-editable)
tool_requirements.py. Tools that are marked as_needed aren't checked
unless they are passed on the command line to
check_tool_requirements.py.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 268692c5======
======Short Message======
[lint] Provision syntax error filter for Verible lint
======Full Message======
[lint] Provision syntax error filter for Verible lint

Signed-off-by: Michael Schaffner <msf@opentitan.org>



======Commit: 56a75589======
======Short Message======
[lint] Rename tool warnings to flow warnings and reduce their severity
======Full Message======
[lint] Rename tool warnings to flow warnings and reduce their severity

Currently, the flow warnings also contain fusesoc and sometimes topgen
warnings. These should be addressed in the long run, but are not as
critical as lint warnings and errors, and should hence not block PR CI.

Signed-off-by: Michael Schaffner <msf@opentitan.org>



======Commit: 924c6065======
======Short Message======
[dv/dvsim] collect coverage in scheduler
======Full Message======
[dv/dvsim] collect coverage in scheduler

Current Scheduler.py will kill the `next_item` if any dependencies
failed or killed. But for nightly regression coverage runs, I think the
goal is to collect coverage as long as there is any passing test. So
here I add some logic to the `dispatch` function.

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: cf607b21======
======Short Message======
[dvsim] Fix Syn class
======Full Message======
[dvsim] Fix Syn class

The number of _gen_results arguments has recently changed and that
caused the syn class to fail. This commit aligns this.

Signed-off-by: Michael Schaffner <msf@google.com>



======Commit: a06c8a60======
======Short Message======
[dv/shadow_reg] move get_shadow_regs function to dv_base_ral_block
======Full Message======
[dv/shadow_reg] move get_shadow_regs function to dv_base_ral_block

The main purpose of this PR is to move the get_shadow_regs function to
dv_base_reg_block.
This PR also fixed a small logic in get_enabled_regs. The
`get_registers` function already return all registers recursively, so
there is no need to recursively all every block again.

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: d593f3cd======
======Short Message======
[secded_gen] Fix template bug that results in lint error
======Full Message======
[secded_gen] Fix template bug that results in lint error

Signed-off-by: Michael Schaffner <msf@opentitan.org>



======Commit: 31d6753c======
======Short Message======
[dv/flash_ctrl] mass erase en fix & bkdr if data type change
======Full Message======
[dv/flash_ctrl] mass erase en fix & bkdr if data type change

Signed-off-by: Eitan Shapira <eitan.shapira@nuvoton.com>



======Commit: abfd3faa======
======Short Message======
[dv] Fix debug message format mismatch
======Full Message======
[dv] Fix debug message format mismatch

Also add debug message when alert is being expected

Signed-off-by: Weicai Yang <weicai@google.com>



======Commit: efa09012======
======Short Message======
[otbn] Lint fixes
======Full Message======
[otbn] Lint fixes

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: 650bd043======
======Short Message======
[dv/alert] update shadow_reg alert naming in DV
======Full Message======
[dv/alert] update shadow_reg alert naming in DV

This PR finishes the first step report in Issue #4895.
Previously shadow_reg has a naming convention but current change does
not adpot that convention anymore. So in order to automatically check
shadow_register's update and storage error, it requires to user to
manaully link the related alerts in hjson file.

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: 60ed0d2c======
======Short Message======
[dv/push-pull-agent] Fix async clock and reset issue
======Full Message======
[dv/push-pull-agent] Fix async clock and reset issue

This PR fixes a corner case caused by reset and async clk.
If the async clk frequency is low and reset is toggled within a clock
cycle, the monitor might miss the reset condition. This PR fixed it by
adding two thread to check reset and clock.

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: ef6428ac======
======Short Message======
[pattgen, dv] Add pattgen_error test
======Full Message======
[pattgen, dv] Add pattgen_error test

  - In-progress channels are randomly disabled to cause error patterns
    that are dropped in both scoreboard and monitor

Signed-off-by: Tung Hoang <hoang.tung@wdc.com>



======Commit: 8e1f4b52======
======Short Message======
[keymgr/dv] Fix failure in stress_all with reset
======Full Message======
[keymgr/dv] Fix failure in stress_all with reset

Disable check in vseq when reset occurs
Use do_apply_reset to avoid doing reset in sub seq

Signed-off-by: Weicai Yang <weicai@google.com>



======Commit: 2405f7fe======
======Short Message======
[prim] Properly fix widths in tlul_adapter_sram
======Full Message======
[prim] Properly fix widths in tlul_adapter_sram

In commit 51ea6b8, I tried to sort out widths properly when SramDw !=
TL_DW but didn't quite get it right. In this module, we have two FIFOs
(u_reqfifo and u_rspfifo) for bus accesses. These should be sized for
the bus width, rather than the SRAM width.

Doing so gets rid of some nasty casts (and an out-of-date waiver),
which is nice, and should fix a remaining AscentLint width mismatch
error.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: d6a2ed1a======
======Short Message======
[kmac] Do not shadow ErrNone constant
======Full Message======
[kmac] Do not shadow ErrNone constant

A constant named ErrNone is present in the sha3_pkg as well as in
kmac_pkg. The latter did a wildcard-import of all of sha3_pkg, resulting
in a redeclaration of the ErrNone symbol. To prevent that from happening
in the future, remove the wildcard import and fully qualify the used
constants (which matches our style guide anyways).

Reported by DC:

```
Error:  ../src/lowrisc_ip_kmac_0.1/rtl/kmac_pkg.sv:102: redeclaration of symbol ErrNone as constant. (VER-513)

Error:  ../src/lowrisc_ip_kmac_0.1/rtl/kmac_pkg.sv:102: invalid symbol ErrNone found in expression. (VER-255)
```

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: 9aef1c91======
======Short Message======
[otbn] Loop controller must factor in stall
======Full Message======
[otbn] Loop controller must factor in stall

When an instruction is stalled the loop controller must not alter its
state or trigger certain actions. In particular at the loop end
instruction if it stalls (e.g. it is a load) the loop controller must
wait until the stall ends before commmanding the loop jump.

Fixes #4941

Signed-off-by: Greg Chadwick <gac@lowrisc.org>



======Commit: fbcf507d======
======Short Message======
[otbn] Remove dummy register fields
======Full Message======
[otbn] Remove dummy register fields

The `dummy` fields in the `CMD` and `STATUS` registers were inserted to
work around a reggen bug, which has been fixed since (in #3418). Remove
the workaround.

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: 960e57d5======
======Short Message======
[secded_gen] Add ability to generate FPV TB's and correct Hamming code
======Full Message======
[secded_gen] Add ability to generate FPV TB's and correct Hamming code

This adds additional templates to automatically generate a simple FPV
testbench for each SECDEC pair.

Also, this slightly reworks the encoder/decoder templates to be more
compact, and corrects the Hamming variant (the parity bit did not
include all other ECC bits, and the error status decode was not
correct). The Hamming code errors have been flagged by the FPV testbench
(to be checked in in the subsequent commit).

Signed-off-by: Michael Schaffner <msf@opentitan.org>



======Commit: 69fa127c======
======Short Message======
[dvsim] Get rid of Deploy's static dispatch_counter
======Full Message======
[dvsim] Get rid of Deploy's static dispatch_counter

We now have a simple list of running jobs in TargetScheduler._running,
and can use that instead of a class variable to keep track of how many
things are running.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: a2892a50======
======Short Message======
[dvsim] Remove "status" from Deploy items
======Full Message======
[dvsim] Remove "status" from Deploy items

Before this patch, the scheduler code in dvsim had two notions of
the status of a job:

  - Deploy.status (stored in each job)
  - TargetStatus.counters (a count of passes/fails)

This patch removes the first of the two, to more cleanly split "run
some stuff and collect the results" (done by the scheduler) from "how
do I run this job?" (done by the Deploy object).

There are some extra changes we have to make to get this to work.
Firstly, we move the SIGINT handling code into Runner.py: this belongs
around the code that actually runs something, not at the top of
dvsim.py. That means that the "kill some stuff" logic can now be
triggered in the main thread via a threading.Event, which avoids lots
of code running in the signal handler and is probably a bit safer.

Secondly, we have to explicitly return the results of running jobs
from Scheduler.run() and thread them through FlowCfg.gen_results(). As
it turns out, most of the subclasses of FlowCfg figure out
success/failure by loading generated hjson files, so this actually
only needs updating in SimCfg.py.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 381770d2======
======Short Message======
[dvsim] Create jobs with dependencies instead of sub-jobs
======Full Message======
[dvsim] Create jobs with dependencies instead of sub-jobs

This looks a bit more like normal schedulers, where you have a big
load of jobs with dependencies between them. One reason to do this
sort of thing is that you simplify the process of actually running
things (nothing new to kick off).

The main visible change here, however, is that if a build fails then
we don't run every dependent job for a second before giving up on
it. (We could have retro-fitted that into the existing design, but I'm
trying to move things towards a more "standard" shape as I go). With
the new code, when we're about to dispatch a job, we check to see
whether its dependencies have all run successfully. If not, we kill
it.

Note that this logic is made easier because dvsim runs in
phases (called "targets" in the code). We ensure that dependencies are
always in an earlier phase, so know that they will have run to
completion or failed before any dependent job is started. In code,
this is the assertion that dep.status is P, F or K in
Scheduler.dispatch().

The only other change in this patch is to printing. Because we now
have jobs for future phases/targets, we don't want to print both a
"[build]: ..." and a "[run]: ..." line each time. To avoid that, we
skip targets where everything is still queued if we've printed
something for a previous target.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: c0e753d6======
======Short Message======
[dvsim] Factor deploy method out of Deploy object
======Full Message======
[dvsim] Factor deploy method out of Deploy object

A Deploy object is "something that can be deployed". This is kind of
orthogonal from a scheduler, which is what the deploy() method was.

This patch pulls the scheduling logic into a separate class,
Scheduler. It also defines a class for status tracking, used for
tracking the status of jobs for a given target. This replaces an
ordered dictionary, but does the same job (hopefully with
easier-to-read code).

This change is still sort of half-and-half, in that the number of
running jobs is still tracked in a class variable in Deploy. That's
pretty unusual - you'd normally expect to see that count tracked in
the scheduler - but I thought I'd stop at this for now to keep the
patch manageable.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 0391c6da======
======Short Message======
[dvsim] Fix printing of Deploy objects
======Full Message======
[dvsim] Fix printing of Deploy objects

The __repr__ method is supposed to give a hunk of Python code that
evaluates to something the same as the object (whereas __str__ can do
whatever you fancy). Overriding __repr__ like this caused an infinite
recursion in verbose mode if you tried to print an object (presumably
the pprint library tries to print 'self' if you give it
'self.__dict__').

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 00a1012b======
======Short Message======
[dv/alert] Fix logic in cip_base_scoreboard to check alert
======Full Message======
[dv/alert] Fix logic in cip_base_scoreboard to check alert

This PR fixes logic in cip_base_scoreboard that checks alert.
Main issue is the delay, we remove the flexibility for user to set their
own delay in alert check. We need to know the accurate predict for when
alert happens in order to know if the alert request is ignored due to
alert handshake in progress

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: 0754ed87======
======Short Message======
[keymgr/dv] Add stress_all test
======Full Message======
[keymgr/dv] Add stress_all test

also enable stress_all with reset
Fix some variables which are not re-initialized correctly after reset
Signed-off-by: Weicai Yang <weicai@google.com>



======Commit: 379b7914======
======Short Message======
[otbn] Fix disassembly of negative PC-relative immediates
======Full Message======
[otbn] Fix disassembly of negative PC-relative immediates

Without this change, you get things like ".+-10". Now it's just
".-10" (conveniently, we already had the code to do this for ISA doc
generation)

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: be2cec02======
======Short Message======
[otbn] Fix disassembly for glued operands
======Full Message======
[otbn] Fix disassembly for glued operands

This broke when I added padding to mnemonics back in August. Oops!

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 8b38eeb4======
======Short Message======
[aes] Fix lint errors
======Full Message======
[aes] Fix lint errors

Signed-off-by: Pirmin Vogel <vogelpi@lowrisc.org>



======Commit: 9b103143======
======Short Message======
[otbn] Fix line length lint errors
======Full Message======
[otbn] Fix line length lint errors

We got two previously unseen lint errors in the tracer, fix the line
length to be below 100 characters.

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: 04fe8814======
======Short Message======
[DV] Enable cov comp creation iff cov is enabled
======Full Message======
[DV] Enable cov comp creation iff cov is enabled

In our DV base classes (`hw/dv/sv/dv_lib`), the `en_cov` cfg bit is set
to 1 by default, for both, the agents and the env. The original
motivation for this was to enable coverage-driven stimulus generation.
This is something we are not doing at the moment. Even if we decide to
do something like that, it can be enabled on a per test / vseq basis.

This change sets the `en_cov` bit at the env cfg level to 0 and enables
this setting to be retrieved via plusarg in `dv_base_test`. In all env
classes, this cfg setting is then passed on the the downstream agent cfg
objects. This change is applied to `uvmdvgen` env template as well.

In `hw/dv/tools/dvsim/common_modes.hjson` the `+en_cov=1` plusarg is
set, so that if coverage collection is enabled, the coverage collection
component is created (previously, the coverage component was created
regardless of whether the coverage was enabled or not).

With this change, simulations run without coverage collection enabled
should see roughly 10-30% improvement in runtime, which directly impacts
the private CI runtime (which has been inching closer to the 20 min
timeout as more DUTs are added to the regression list).

Signed-off-by: Srikrishna Iyer <sriyer@google.com>



======Commit: e8d95917======
======Short Message======
[otbn] Exclude non-synthesizable files from being compiled
======Full Message======
[otbn] Exclude non-synthesizable files from being compiled

Synthesis with DC currently fails as DC is unable to parse the code in
otbn_tracer. We include those files in the default set of files to
build, but never use them; still, the tool must be able to parse them,
which isn't the case here.

Extend the approach in 5101724e7febb15d16acb6f0024be09d7fdc104c to the
remaining model-only files. See also
https://github.com/lowRISC/opentitan/issues/4144#issuecomment-726937662
for a more detailed discussion of the problem.

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: 8fea32ec======
======Short Message======
[otbn/dif] Remove logging from smoke test
======Full Message======
[otbn/dif] Remove logging from smoke test

The smoke test did log a fair amount of status information during the
execution. Doing so is rather slow on Verilator simulations (due to the
way the simulated UART works). Remove the logging to speed up test
execution in CI, at the cost of making the debugging of this test
slightly harder. Logging in error cases is still the same as before.

Also removed is information on how long the applications took to execute on
OTBN. This was useful information in early bringup, but isn't that
useful any more for the smoke test.

Fixes #4742

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: fd3708aa======
======Short Message======
[aes] Protect round counter against fault injection
======Full Message======
[aes] Protect round counter against fault injection

This commit adds protection against fault injection attacks for the round
counter inside the cipher core. This is achieved by introducing a second
counter as well as parity information. If a fault is detected, the FSM
goes into the terminal error state and a fatal alert is triggered.

Signed-off-by: Pirmin Vogel <vogelpi@lowrisc.org>



======Commit: b50dc9d7======
======Short Message======
[aes] Rework handling and signaling of invalid mux selector signals
======Full Message======
[aes] Rework handling and signaling of invalid mux selector signals

This commit reworks the handling of invalid mux selector signals and how
they are signaled from the cipher core to the main controller.

In case of an invalid mux selector signal inside the cipher core, we no
longer immediately signal the error to the main controller FSM. Instead, we
just make sure no data is released from the cipher core. The alert is then
signaled in the next clock cycle once the terminal error state has been
entered. This avoids timing loops occurring during FPGA synthesis.

Signed-off-by: Pirmin Vogel <vogelpi@lowrisc.org>



======Commit: a6546a7e======
======Short Message======
[otp_ctrl] Minor OTP documentation fix
======Full Message======
[otp_ctrl] Minor OTP documentation fix

Signed-off-by: Michael Schaffner <msf@opentitan.org>



======Commit: 5f769a08======
======Short Message======
[ibex] Fix type of literals when defining a localparam
======Full Message======
[ibex] Fix type of literals when defining a localparam

The FifoDepth localparam is used for the ReqDepth and RspDepth
parameters of the tlul_fifo_sync module. Fix its type to match (by
making it unsigned) and also change the literals with which it's
initialised to have the right type.

This fixes a Verilator lint warning.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 242edb88======
======Short Message======
[tlul] Fix width mismatch for MAX_REQS check in tlul_adapter_host
======Full Message======
[tlul] Fix width mismatch for MAX_REQS check in tlul_adapter_host

Here, MAX_REQS is an int but source_q is some narrower bit vector (big
enough to represent everything up to MAX_REQS - 1). Define a
localparam that equals MAX_REQS - 1, but with the right number of bits
and compare with that.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 0a3dfb4e======
======Short Message======
[ibex] Fix lint warnings from parameter width mismatch
======Full Message======
[ibex] Fix lint warnings from parameter width mismatch

This parameter gets passed to tlul_fifo_sync, which expects a bit. The
possible values here are also single bits, but we're storing the
intermediate value in an int, causing Verilator lint warnings.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 5ce1cb7b======
======Short Message======
[otbn] Switch to using bitfield for errors
======Full Message======
[otbn] Switch to using bitfield for errors

This replaces the `ERR_CODE` register with an `ERR_BITS` register. This
is a bitfield where a particular bit signals a particular error. The
commit includes all RTL, documentation and software updates needed.

For the ISS this commit alters the error codes it uses to match the
`ERR_BITS` encoding but further work is required so the ISS can produce
several errors at once.

For now the RTL continues to prioritise errors and will only signal a
single error. This is to ease the transition to the use of `ERR_BITS`
whilst the ISS changes are still needed. The RTL will drop the
prioritising and will be capable of signalling several errors at once
when the ISS is ready to deal with this.

Signed-off-by: Greg Chadwick <gac@lowrisc.org>



======Commit: 711d2261======
======Short Message======
[otbn] Resolve AscentLint warnings/errors
======Full Message======
[otbn] Resolve AscentLint warnings/errors

Resolve all lint warnings produced by AscentLint. Most of them are
"fixed" in RTL, some of them are waived.

Fixes #4252

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: fad5d3a7======
======Short Message======
[otbn] Document behavior when two increments are specified
======Full Message======
[otbn] Document behavior when two increments are specified

The BN.LID, BN.SID, and BN.MOVR can increment one of the two GPRs used
in the operation. Even though possible in encoding, only one increment
can be specified (because we only have a single write port in the
GPR file). Document this fact.

Fixes #3588

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: 694ff767======
======Short Message======
[otbn] Add a --size argument to gen-binaries.py
======Full Message======
[otbn] Add a --size argument to gen-binaries.py

For now, the default is unchanged at 100 but we'll probably bump it up
at some point (otherwise loops are rather boring).

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 4c22cf20======
======Short Message======
[aes] Align alert naming and signaling with latest guidance
======Full Message======
[aes] Align alert naming and signaling with latest guidance

This commit aligns the naming and signaling of alerts inside AES with the
latest guidance in the comportability spec. In particular, the alerts
are prefixed with either `fatal` or `recov` to indicate the severeness, and
the alert name itself is indicative of the alert cause (update error in
Control Register or detection of a fault).

In addition, the recoverable alert is high for just one clock cycle to
signal a single alert event, and the fatal alert is additionally latched
inside the alert sender module.

Signed-off-by: Pirmin Vogel <vogelpi@lowrisc.org>



======Commit: b6acc10e======
======Short Message======
[otbn] Rename "recoverable" alert to just "recov" & set fatal flag
======Full Message======
[otbn] Rename "recoverable" alert to just "recov" & set fatal flag

This fixes a warning from reggen (which expects recoverable alerts to
be called recov_FOO or just recov). Also, set the IsFatal flag
correctly when instantiating prim_alert_sender.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: a7b16226======
======Short Message======
[xbar/dv] fix toggle coverage
======Full Message======
[xbar/dv] fix toggle coverage

Accidentally drop xbar_cover while solving the conflict for PR #3921
toggle coverage should be 100% with this fix

Signed-off-by: Weicai Yang <weicai@google.com>



======Commit: 32b72eea======
======Short Message======
[prim_alert] Fix xcelium compile error
======Full Message======
[prim_alert] Fix xcelium compile error

This PR fixes a prove equavalent that not supported in xcelium and causes compile failure.

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: a1b72140======
======Short Message======
[doc] Add a tiny bit of "SW development tips and tricks"
======Full Message======
[doc] Add a tiny bit of "SW development tips and tricks"

Add a section to the SW getting started guide to discuss how to

* debug software with GDB (only pointers to existing documentation)
* disassemble an ELF file with objdump

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: c36275a6======
======Short Message======
[doc] Editorial fixed to the SW Getting started guide
======Full Message======
[doc] Editorial fixed to the SW Getting started guide

Only markup and consistency fixes, nothing interesting.

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: 82d2b4f0======
======Short Message======
[sw] Disassemble only code sections
======Full Message======
[sw] Disassemble only code sections

The software build system produces a disassembly file for easier
debugging with all software. This file was produced with
`--disassemble-all`, which disassembles all sections, most of which are
rarely useful when debugging code. This commit changes the disassembler
settings to only disassemble code sections. The change speeds up a
software build on my machine by roughly 50 percent. Producing no
disassembly file at all does not speed up the build any further on my
machine.

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: 382047f6======
======Short Message======
[lc_ctrl/dv] Fix num of input token CSRs
======Full Message======
[lc_ctrl/dv] Fix num of input token CSRs

This PR fix an tb issue pointed out by @msf. The input token has four
CSRs with a total width of 128 bits, but in TB I only write three CSRs
with a width of 96 bits. This PR fixed this error.
Thanks Michael!

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: c208de00======
======Short Message======
[systemtest] Do not use UART for test status in Verilator
======Full Message======
[systemtest] Do not use UART for test status in Verilator

Self-checking software tests produce test status over UART, but also
through the sw_test_status_if machinery, which ends up on stdout in
Verilator. Use this output to determine if a test passed or failed.

The UART logging output can now used for human debugging, or disabled
entirely to speed up test runs.

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: 7d625a54======
======Short Message======
[systemtest] Adjust Verilator UART frequency
======Full Message======
[systemtest] Adjust Verilator UART frequency

The UART frequency was changed, but not copied over into all places that
need it. Fix that and add a comment to make it less likely to go out of
sync the next time.

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: a8cabbb1======
======Short Message======
[dv/lc_ctrl] Fix when RndCnstRawUnlockTokenHashed is not 0
======Full Message======
[dv/lc_ctrl] Fix when RndCnstRawUnlockTokenHashed is not 0

In current lc_ctrl smoke test, we assume all the tokens to be 0, but
with otp_ctrl update, we are randomize the `RndCnstRawUnlockTokenHashed`
constant. This commit fix it by driving correct hashed token from OTP
when `*TestUnlock*` states are requested.

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: 26b242fc======
======Short Message======
[dv/keymgr_kmac_agent] Add 2 assertions to check last and done
======Full Message======
[dv/keymgr_kmac_agent] Add 2 assertions to check last and done

Also fix some typos

Signed-off-by: Weicai Yang <weicai@google.com>



======Commit: 5cde4b8c======
======Short Message======
[kmac/dv] Update testplan wording
======Full Message======
[kmac/dv] Update testplan wording

This commit updates the KMAC testplan wording.

Previously, it stated that we only manually squeeze more output data if
the desired output length is greater than 1600 bits.

This has been fixed to reflect that we only manually squeeze output data
if the desired output length is greater than the keccak block size (168
  or 136 bytes).

Signed-off-by: Udi Jonnalagadda <udij@google.com>



======Commit: 2c11675e======
======Short Message======
[otbn] Add a note about "Operation" section for enums/options
======Full Message======
[otbn] Add a note about "Operation" section for enums/options

The pseudo-code in the operation section treats everything as a
number, including enums and optional operands. This patch adds a note
to the top of that section if necessary to help readers figure out
what's going on.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 4c9fc269======
======Short Message======
[otbn] Fix width mismatches in parameter definitions
======Full Message======
[otbn] Fix width mismatches in parameter definitions

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 51ea6b81======
======Short Message======
[tlul] Explicitly cast between SRAM width and TL width
======Full Message======
[tlul] Explicitly cast between SRAM width and TL width

OTBN uses tlul_adapter_sram with a width of 256 bits: more than the TL
bus width of 32 bits. This triggers a couple of Verilator warnings
caused by width mismatches. This patch makes the "extract bottom bits"
and "zero extend" steps explicit. There should be no change in
behaviour.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 99f4be5e======
======Short Message======
[dv/push-pull-agent] reset in monitor
======Full Message======
[dv/push-pull-agent] reset in monitor

This PR fixes a small issue when reset is issued in the middle of a pull
device request, then if no ack is issued (because interrupted by reset),
then the monitor will be stuck at waiting for ack.

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: 3b2af0c9======
======Short Message======
[dv/otp_ctrl] rename macro error sequence to DAI error sequence
======Full Message======
[dv/otp_ctrl] rename macro error sequence to DAI error sequence

This PR clears the confusion by separating out dai_errs_vseq from
macro_errs_vseq.
The macro errors are related to OTP macro errors, not neccessarily from
DAI interface. This commit renamed the sequence to avoid confusion.

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: 6e8a054b======
======Short Message======
[rtl/otp_ctrl] Fix a small design logic
======Full Message======
[rtl/otp_ctrl] Fix a small design logic

This PR fixes a design corner case:
In previous statement, `addr_base` will normalize the last 3 bits if the
DAI address request a SW partition's digest address. But this could
happen in HW partitions' digests as well. For the HW partitions, we can
still use DAI interface to read digests.
So I delete the constraints `PartInfo[part_idx].hw_digest`

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: e0fd1984======
======Short Message======
[dv/otp_ctrl] OTP macro error sequence
======Full Message======
[dv/otp_ctrl] OTP macro error sequence

This PR completes the otp_macro error sequences with the following
errors:
1. Write non-blank otp address, this allows bitwise write, if original
OTP data is `h03`, new write is `h7f`, this is allowed
2. Write HW digest via DAI interface
3. Access partitions when it is locked
4. Access lc partition via dai interface

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: 26d59d5d======
======Short Message======
[aes] Add status bit indicating lost output data, fix scoreboard
======Full Message======
[aes] Add status bit indicating lost output data, fix scoreboard

This commit adds a new status bit `OUTPUT_LOST` indicating if previous
output data has been overwritten by the AES unit before it could be read by
the processor. Once set, the flag remains high until AES operation is
restarted by updating the Control Register. The primary use of this flag
is design verification of manual mode operation.

Related to the addition of this status bit, this commit also fixes an issue
in the scoreboard and base sequence. This commit has been co-authored by
@rasmus-madsen.

Signed-off-by: Pirmin Vogel <vogelpi@lowrisc.org>



======Commit: f18ff1ef======
======Short Message======
[dv/keymgr] Enable testing for sw_binding_*
======Full Message======
[dv/keymgr] Enable testing for sw_binding_*

Also fix a corner case in cfgen_vseq: when done is asserted, skiping
writting cfgen gated csr

Signed-off-by: Weicai Yang <weicai@google.com>



======Commit: 8292407c======
======Short Message======
[sw] Editorial fix to doxygen comment
======Full Message======
[sw] Editorial fix to doxygen comment

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: cc086427======
======Short Message======
[uart/doc] Editorial fixes
======Full Message======
[uart/doc] Editorial fixes

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: b5591876======
======Short Message======
[otbn] Tidy up how we pass err_code from ISS to SystemVerilog
======Full Message======
[otbn] Tidy up how we pass err_code from ISS to SystemVerilog

Rather than packing the error code into the top bits of status, pass
it out with an explicit output argument.

The only "clever" bit is in otbn_core_model, where raw_err_code_d and
raw_err_code_q update at the same time, but with a blocking and
non-blocking assignment, respectively. If there is just one
"raw_err_code" value, Verilator complains that the inout argument of
otbn_model_step acts as a blocking assignment to the value, but the
initialisation on reset acts as a non-blocking assignment to the same
variable.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: ec7773fd======
======Short Message======
[doc] Ensure code blocks are rendered properly in Chrome
======Full Message======
[doc] Ensure code blocks are rendered properly in Chrome

Chrome has a bug which doesn't assign the right font size (16px) to code
blocks (https://bugs.chromium.org/p/chromium/issues/detail?id=833697).
Fix that by explicitly setting the default font size in the html element
(16px in most browsers).

Now Firefox and Chrome render code blocks the same, both in 16px.

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: 8534c84e======
======Short Message======
[doc] Work around delayed math rendering
======Full Message======
[doc] Work around delayed math rendering

With MathJax 2 math rendering is delayed by a couple of seconds in many
page loads (I wasn't able to determine what exactly triggered the
behavior). The console shows

```
Uncaught DOMException: Node.removeChild: The node to be removed is not a child of this node MathJax.js:19
    c https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.7/MathJax.js?config=TeX-AMS-MML_HTMLorMML:19
```

(This error message is from Firefox, but Chrome shows the same
behavior and a similar error message.)

I wasn't able to determine the root cause for this behavior, but
switching to MathJax 3 (a complete rewrite) fixes the problem, so I went
with that.

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: d8ebf0df======
======Short Message======
[doc] Small editorial fix
======Full Message======
[doc] Small editorial fix

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: 49ea637d======
======Short Message======
[otp_ctrl] Fix a DAI/KDI concurrency issue
======Full Message======
[otp_ctrl] Fix a DAI/KDI concurrency issue

Fix #4852

The scrambling datapath mutex was accidentally released in the KDI when
requesting data from EDN.

Signed-off-by: Michael Schaffner <msf@opentitan.org>



======Commit: b552f456======
======Short Message======
[otp_ctrl] Fix digest read accesses in DAI
======Full Message======
[otp_ctrl] Fix digest read accesses in DAI

Fix #4825

Signed-off-by: Michael Schaffner <msf@opentitan.org>



======Commit: cbe21132======
======Short Message======
[prim-flash] Add missing deps
======Full Message======
[prim-flash] Add missing deps

- These are actually added to the TSMC version of prim_flash. Due to a
bug in FuseSoC, those dependencies (which are also generators) do not
get invoked.

Signed-off-by: Srikrishna Iyer <sriyer@google.com>



======Commit: f835aa38======
======Short Message======
[fpga] deploy size reduction script for fpga
======Full Message======
[fpga] deploy size reduction script for fpga

This is only a short term solution.

Signed-off-by: Timothy Chen <timothytim@google.com>

Build a separate software tree for NexysVideo

Build the software twice: once for the normal earl grey design, and once
for a slightly modified design where SRAM and flash sizes are modified
by a script.

Signed-off-by: Philipp Wagner <phw@lowrisc.org>

[doc] fix doc instructions

Signed-off-by: Timothy Chen <timothytim@google.com>

[util] Add size_check to dependency

Signed-off-by: Timothy Chen <timothytim@google.com>

[top] Remove cw305 related content from top_earlgrey

- top_englishbreakfast is the separate top for cw305

Signed-off-by: Timothy Chen <timothytim@google.com>



======Commit: b99218ae======
======Short Message======
[keymgr] keymgr documentation fixes
======Full Message======
[keymgr] keymgr documentation fixes

Signed-off-by: Timothy Chen <timothytim@google.com>



======Commit: faeb4121======
======Short Message======
[dv/top] Remove ImplGeneric default assignment
======Full Message======
[dv/top] Remove ImplGeneric default assignment

This is not needed since all prims default to the generic
implementation. Also, it can collide with technology specific simulation
configs in the closed source foundry repo.

Signed-off-by: Michael Schaffner <msf@google.com>



======Commit: 83deb829======
======Short Message======
[otp_ctrl] Minor fixes that address VCS warnings
======Full Message======
[otp_ctrl] Minor fixes that address VCS warnings

Signed-off-by: Michael Schaffner <msf@google.com>



======Commit: 58a124df======
======Short Message======
[otbn/doc] Expand programming sections
======Full Message======
[otbn/doc] Expand programming sections

Split the "Programming" sections into two parts: a section about writing
software running on OTBN itself, and a section about writing software
running on the host CPU (Ibex). In particular, I made the following
changes:

* Move the general information about IMEM and DMEM to the "Design
  Details" sections.
* Expand the "High-level operation sequence" section.
* Add a "Driver" section, mentioning the existence of the newly added
  "high-level" driver.
* Add a section "Writing OTBN applications" with new subsections on
  toolchain support, data passing, and returning from an OTBN
  application.

Fixes #2804

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: 3691899e======
======Short Message======
[otbn] Remove stray debug lines from RIG
======Full Message======
[otbn] Remove stray debug lines from RIG

I added these when bringing up branch generation and they seem to have
survived the pre-PR cleanup. Oops!

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: c90e0c58======
======Short Message======
[aes] Use sparse encodings for FSMs, trigger alert for invalid states
======Full Message======
[aes] Use sparse encodings for FSMs, trigger alert for invalid states

This commit changes all FSMs inside AES to use sparse state encodings with
a minimum Hamming distance of 3 between states. If any FSM enters an
invalid state, the AES unit locks and an alert is triggered. The cipher
core is prevented from finishing the current operation or starting a new
operation. Writes to the control register are ignored. The AES unit needs
to be reset.

This commit also renames the alert signals. Update errors in the shadow
control register are collected in `recoverable`. More severe errors such as
storage errors in the shadow control register, entering invalid FSM
states trigger a `fatal` alert.

Signed-off-by: Pirmin Vogel <vogelpi@lowrisc.org>



======Commit: 55a7c94a======
======Short Message======
[keymgr/dv] Add sideload key check
======Full Message======
[keymgr/dv] Add sideload key check

1. Add sideload key check in interface in order to check the duration as
well
2. create a `get_err_code` function and simpilfy some logic in scb
3. store generated meaningful key in interface to compare with invalid
keys generated by error cases
4. fix some typos in cfgen_vseq and lc_disable_vseq

Signed-off-by: Weicai Yang <weicai@google.com>



======Commit: 9bcb6c32======
======Short Message======
[dv] Fix a typo in tb.sv.tpl
======Full Message======
[dv] Fix a typo in tb.sv.tpl

Signed-off-by: Weicai Yang <weicai@google.com>



======Commit: 31fd7dc3======
======Short Message======
[rtl/sram_ctrl] update error signaling logic
======Full Message======
[rtl/sram_ctrl] update error signaling logic

Currently SRAM controller performs a bitwise OR of the 2-bit error
signal to check whether there are any correctable/uncorrectable memory
errors.

However correctable memory errors are not supported by the SRAM.

This patch adds an assertion to ensure that the error bit
indicating a correctable error never goes high and updates the error
signaling logic to only rely on the bit indicating uncorrectable errors.

Signed-off-by: Udi Jonnalagadda <udij@google.com>



======Commit: 819233af======
======Short Message======
[keymgr] Fix a combo loop between keymgr and kmac
======Full Message======
[keymgr] Fix a combo loop between keymgr and kmac

The path was roughly...
keymgr.key_valid -> kmac.error -> keymgr.wipe_key -> keymgr.key_valid

This fix breaks the last arrow.

Signed-off-by: Timothy Chen <timothytim@google.com>



======Commit: 444724c7======
======Short Message======
[otbn] Fix RIG model's _inc_gpr logic
======Full Message======
[otbn] Fix RIG model's _inc_gpr logic

This wasn't quite right, because we call _inc_gpr after
_generic_update_for_insn. As usual, that's fine for everything except
x1. For x1, the get_reg() call inside _inc_gpr was causing a double
pop.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 77758a64======
======Short Message======
[keymgr] Fix keymgr key valid stuck high
======Full Message======
[keymgr] Fix keymgr key valid stuck high

Signed-off-by: Timothy Chen <timothytim@google.com>



======Commit: b1ba59b5======
======Short Message======
[flash / top / ast] functional updates
======Full Message======
[flash / top / ast] functional updates

- add flash_bist_enable
- connect lc_nvm_debug_en

Signed-off-by: Timothy Chen <timothytim@google.com>

[flash_ctrl] Tweak assertion

- the previous assertion hard coded a delay check that would fail depending on timing changes

Signed-off-by: Timothy Chen <timothytim@google.com>

[top] update separate top

Signed-off-by: Timothy Chen <timothytim@google.com>

[flash_ctrl] update dv tb

Signed-off-by: Timothy Chen <timothytim@google.com>

[flash_ctrl] fix tb typo

Signed-off-by: Timothy Chen <timothytim@google.com>

[prim_flash] remove erase_suspend_done output

Signed-off-by: Timothy Chen <timothytim@google.com>



======Commit: 45fd60e5======
======Short Message======
[ralgen, dv] Associated changes to ralgen
======Full Message======
[ralgen, dv] Associated changes to ralgen

Supporting updates to ralgen, which is the fusesoc generator that wraps
the regtool, to enable the generation of UVM RAL models from
user-defined classes instead of the default `dv_base_reg` classes.

Signed-off-by: Srikrishna Iyer <sriyer@google.com>



======Commit: d2341c28======
======Short Message======
[reggen, dv] Add ability to set DV register prefix
======Full Message======
[reggen, dv] Add ability to set DV register prefix

This came out of a discussion with Nuvoton to add support for generating
UVM reg models that are extended not from `dv_base_reg*` classes
but from custom classes that add Nuvoton-specific functionality on top of
`dv_base_reg*` classes. With this PR, this can be achieved by setting
the switch `--dv-base-class-prefix foo`. This approach assumes that the
following exist, given the arg value of `foo`:

- A fusesoc core with the name `lowrisc:dv:foo_reg` that sources the
following files at minimum:
  - `foo_reg_pkg.sv`: includes the `foo` reg classes below.
  - `foo_reg.sv`: register class
  - `foo_reg_field.sv`: field class abstraction
  - `foo_reg_block.sv`: register block class abstraction
  - `foo_mem.sv`: memory abstraction
- These are required to derive from their corresponding `dv_base_reg*`
classes.
- If any of these specialized abstractions is not needed, they need to
be typedef'ed to the `dv_baes_reg*` one in the pkg.

Signed-off-by: Srikrishna Iyer <sriyer@google.com>



======Commit: 351c14bf======
======Short Message======
[systemtest] Run OTBN RSA test on Nexys Video in CI
======Full Message======
[systemtest] Run OTBN RSA test on Nexys Video in CI

Enable the end-to-end RSA test in FPGA CI. It takes a while to run in
Verilator simulation, but it's quick to run on FPGAs, giving us good
test coverage and fast test turnaround at the same time.

Fixes #3691

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: 9a4f47b0======
======Short Message======
[otbn] Fix wrapping for grs1 increment with bn.lid/bn.sid
======Full Message======
[otbn] Fix wrapping for grs1 increment with bn.lid/bn.sid

Because grs1 has a 14-bit signed immediate added to it, we can have a
valid address even when grs1 is really big. For example, suppose that
x21 is 0x1000 in

    bn.lid   x10, -2144(x21++)

Then we should write x21 = 0x1020 (rather than the 0x20 that we were
writing).

Similarly, if x21 is 0xffffffc0 (2^32 - 64) then

    bn.lid   x10, 64(x21++)

loads from the valid address of 0 and should increment x21 to
0xffffffe0.

Getting this right implies a 27-bit adder, plus extra muxing for the
top bits of increment_out. To avoid that, we could e.g. change the
spec to only operate on the lower 16 bits of the base address (which
would then need an 11-bit adder and no muxing on most of the upper
bits: much more manageable!)

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 51ec3894======
======Short Message======
[prim_sync_reqack_data] Fix SVA checking DST-to-SRC data stability
======Full Message======
[prim_sync_reqack_data] Fix SVA checking DST-to-SRC data stability

This commit reduces the window during which data must be stable. Since the
next REQ only takes 1 SRC clock cycle (and 2 DST clock cycles) to cross
over from SRC to DST, it doesn't make sense to check that the data remains
stable for 2 SRC clock cycles after the SRC handshake.

This resolves lowRISC/OpenTitan#4797.

Signed-off-by: Pirmin Vogel <vogelpi@lowrisc.org>



======Commit: d43704df======
======Short Message======
[dv/otp_ctrl] clean up macro errors sequence
======Full Message======
[dv/otp_ctrl] clean up macro errors sequence

A few updates related to macro_errors sequences:
1. Change from pre_start task to pre_randomize.
2. Updates a few namings in scb and sequences.

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: 67204b70======
======Short Message======
[kmac/dv] Fix CSR test failure
======Full Message======
[kmac/dv] Fix CSR test failure

Encountered some failure when running CI. After debug this, I found this timer
shouldn't be written in CSR test, otherwise, it may cause SVA errors.

Signed-off-by: Weicai Yang <weicai@google.com>



======Commit: 331252a6======
======Short Message======
[keymgr/dv] Update scoreboard for error cases
======Full Message======
[keymgr/dv] Update scoreboard for error cases

Move err_code check from seq to scb
Add several updates for scb
1. update checking for  error cases to match with design change #4778
2. simplify logic to update current_state and current_op_state at the
end of operation
3. remove local intr_exp and update ral model predict value directly

Signed-off-by: Weicai Yang <weicai@google.com>



======Commit: e529604d======
======Short Message======
[keymgr / top] fix hjson wrong width
======Full Message======
[keymgr / top] fix hjson wrong width

Signed-off-by: Timothy Chen <timothytim@google.com>



======Commit: 8ebb5312======
======Short Message======
[keymgr/dv] Fix csr_mem_rw_with_rand_reset
======Full Message======
[keymgr/dv] Fix csr_mem_rw_with_rand_reset

After reset, need to wait for 2 cycles before accessing csr

Signed-off-by: Weicai Yang <weicai@google.com>



======Commit: c04a5265======
======Short Message======
[otp_ctrl] Do not descramble digest values when read through the DAI
======Full Message======
[otp_ctrl] Do not descramble digest values when read through the DAI

Fix #4799

Signed-off-by: Michael Schaffner <msf@opentitan.org>



======Commit: 87dfb794======
======Short Message======
[otbn] BN.MOV shouldn't enable base RF read
======Full Message======
[otbn] BN.MOV shouldn't enable base RF read

Fixes #4721

Signed-off-by: Greg Chadwick <gac@lowrisc.org>



======Commit: b022a4ee======
======Short Message======
[otbn] Pass stall signal to call stack to avoid double-pop
======Full Message======
[otbn] Pass stall signal to call stack to avoid double-pop

This avoids a problem with instruction sequences like

    addi    x1, x0, 0
    addi    x1, x0, 1
    bn.lid  x1, 0(x0)
    ecall

Without a fix like this one, the controller holds the read enable for
x1 high for both cycles of the stalling bn.lid instruction, resulting
in a double pop.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 000a18cb======
======Short Message======
[keymgr/dv] Fix regression failures
======Full Message======
[keymgr/dv] Fix regression failures

1. Fix key_version not updated after moving into new state, which
triggers unexpected error
2. Fix cfgen checking at StReset

Signed-off-by: Weicai Yang <weicai@google.com>



======Commit: 2aafbc26======
======Short Message======
[dv/top] Fix VCS warning for cover cfg file
======Full Message======
[dv/top] Fix VCS warning for cover cfg file

Fix for below warning. The syntax for struct is slightly different

Warning-[VCM-HFUFR] Hier Config: regions not found
  In the '-cm_hier' configuration file, pattern "+node ---
  tb.dut.top_earlgrey.u_*.tl_*" did not match any pattern.
  Please check the entry at line number "16" in hier config file
  "/edascratch/weicai-opentitan/ot/rerun_top2/repo_top/hw/top_earlgrey/dv/cov/chip_cover_reg_top.cfg".
  If the unmatched pattern is a design unit which is present in a verilog
  library or present under a celldefine directive and you want VCS to consider
  it for coverage, then please pass "-cm_libs yv+celldefine".

Signed-off-by: Weicai Yang <weicai@google.com>



======Commit: 7992280f======
======Short Message======
[dvsim] Fix a wrong path in print message
======Full Message======
[dvsim] Fix a wrong path in print message

Signed-off-by: Weicai Yang <weicai@google.com>



======Commit: 28bb4727======
======Short Message======
[prim] Teach verilator to recognise a clock gate
======Full Message======
[prim] Teach verilator to recognise a clock gate

This avoids an UNOPTFLAT warning, and should speed up simulation a
bit. Quoting from the Verilator manual:

> The clock_enable attribute will cause the clock gate to be ignored
> in the scheduling algorithm, sometimes required for correct clock
> behavior, and always improving performance. It's also a good idea to
> enable the IMPERFECTSCH warning, to ensure all clock enables are
> properly recognized.

Adding the IMPERFECTSCH warning throws up LOTS of cases, unrelated to
this patch, so I'm not convinced that's worth doing at the moment (it
probably shows there are some low-hanging simulation performance
improvements though).

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: ce701d2f======
======Short Message======
[dv/lc_ctrl] V1 status
======Full Message======
[dv/lc_ctrl] V1 status

This commit claims the V1 status for LC_CTRL.
Also fix a small space alignment in otp_ctrl doc

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: 3022a237======
======Short Message======
[dv/top] Fix top CSR test build error
======Full Message======
[dv/top] Fix top CSR test build error

Fix a typo and this may also fix some of top-level regression failures

Signed-off-by: Weicai Yang <weicai@google.com>



======Commit: 1034dd74======
======Short Message======
[lc_ctrl] Add OTP partition error bit that is accessible via TAP
======Full Message======
[lc_ctrl] Add OTP partition error bit that is accessible via TAP

Signed-off-by: Michael Schaffner <msf@opentitan.org>



======Commit: 253db829======
======Short Message======
[prim/edn] Fix lint error (width mismatch)
======Full Message======
[prim/edn] Fix lint error (width mismatch)

prim_edn_req asynchronous FIFO has wrong width definition. It adds
`fips` signal so, the width should be increased by 1.

Signed-off-by: Eunchan Kim <eunchan@opentitan.org>



======Commit: 36c4230c======
======Short Message======
[keymgr/dv] Fix CSR failure
======Full Message======
[keymgr/dv] Fix CSR failure

Exclude writing to binding_en as it's locked until next advance
Signed-off-by: Weicai Yang <weicai@google.com>



======Commit: d332ef74======
======Short Message======
[kmac] Revise Entropy Timer register
======Full Message======
[kmac] Revise Entropy Timer register

Revised entropy timer register. It is split into two fields, wait timer
and entropy timer. Wait timer is for EDN request. If wait timer expires,
KMAC reports an error to the softaware.

Entropy timer is for update internal LFSR with newly fed seed from EDN
even the entropy is not consumed.

It also adds a few config fields, entropy ready and error processed.

Signed-off-by: Eunchan Kim <eunchan@opentitan.org>



======Commit: 7e131447======
======Short Message======
[otbn] Fix ordering problems in RIG model update logic
======Full Message======
[otbn] Fix ordering problems in RIG model update logic

Before this patch, Model.update_for_insn updated the model
"generically", based on the instruction's operands and their types and
then it called any specific update function.

The problem is that we don't explicitly keep "before" and "after"
versions of registers (as done by the commit() methods in the ISS), so
the specific updater function could get a stale version of an input
argument. This doesn't matter for most operands (because, at worst,
writing an indeterminate value to the operand just forgets its value),
but does matter for x1, where something like

   addi x2, x1, 123

ended up using the element immediately below the top of the stack when
calculating the new value for x2.

To fix things, we make the specialized update_for_FOO instructions
call the generic update logic explicitly. That way, we can do any
required reads first and apply any required changes afterwards.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 34fdf365======
======Short Message======
Do not require a specific version of pyyaml
======Full Message======
Do not require a specific version of pyyaml

We don't know the exact minimum version of the pyyaml dependency, but
the Ubuntu 16.04 distro default should work fine; don't specify any
version until we run into problems with missing features, which will
give us a strong signal regarding the right minimum version (same
approach as taken for all other Python dependencies).

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: 9f1bcca6======
======Short Message======
Do not require pyyaml >= 5.1
======Full Message======
Do not require pyyaml >= 5.1

There's no reason other than aestetics to use the sort_keys and
default_flow_style arguments in PyYAML. Remove it to lower our
minimum required version significantly. (The dumped YAML is read by
fusesoc, which also uses PyYAML as parser, so no compat issues are
expected.)

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: 33156a06======
======Short Message======
[otbn] Fix handling of negative addi operands in RIG's update
======Full Message======
[otbn] Fix handling of negative addi operands in RIG's update

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 1a24c1ee======
======Short Message======
[util] Adapt flash size reduce/check scripts for changes in flash params
======Full Message======
[util] Adapt flash size reduce/check scripts for changes in flash params

We've recently changed the flash parametrization in lowRISC/OpenTitan#4534.
This commit adapts the flash size reduce/check scripts required for smaller
FPGAs accordingly.

This fixes lowRISC/OpenTitan#4638.

Signed-off-by: Pirmin Vogel <vogelpi@lowrisc.org>



======Commit: bdef8527======
======Short Message======
[otbn] Fix a bug in RIG jump target selection
======Full Message======
[otbn] Fix a bug in RIG jump target selection

The pick_branch_targets function picks a "gap": a range of addresses
from which we can choose a target. Once it has done so, gap_vma is the
start address of the range and gap_len is its length (a positive
number of bytes). If there is only one valid address in the gap,
gap_len will be 1.

To choose the address within the gap we calculate max_insn_off, a
"maximum offset for an instruction" (in units of instruction size).
This calculation wasn't quite right, and could give a negative value
when gap_len was 1.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 754a5278======
======Short Message======
[keymgr] Separate input and output errors
======Full Message======
[keymgr] Separate input and output errors

- Now input errors do not automatically cause output errors

Signed-off-by: Timothy Chen <timothytim@google.com>



======Commit: f99f01a9======
======Short Message======
[keymgr] Minor fix
======Full Message======
[keymgr] Minor fix

Address #4665

Signed-off-by: Timothy Chen <timothytim@google.com>



======Commit: 26588208======
======Short Message======
[lc_ctrl] Add script to generate the LC state based on the ECC poly
======Full Message======
[lc_ctrl] Add script to generate the LC state based on the ECC poly

This adds a script to generate the life cycle state and transition
counter encoding according to the ECC polynomial used in OTP.

It generates values that can be incrementally written on top of each
other (in OTP) without causing ECC errors.

Signed-off-by: Michael Schaffner <msf@opentitan.org>



======Commit: ec839fad======
======Short Message======
[verilator] Only control the reset line when necessary
======Full Message======
[verilator] Only control the reset line when necessary

The previous code was calling SetReset() and then UnsetReset() for
every cycle after the initial reset, which I noticed because I was
using a watchpoint to debug something else.

This seems a bit unnecessary, so this patch gets rid of that. It also
changes the logic to only call SetReset() and UnsetReset() on the
"edges". This should be equivalent, but it's a bit more obvious what's
going on.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 3b86f302======
======Short Message======
[otbn] Fix ISS support for CSRRW/CSRRS on single flag group
======Full Message======
[otbn] Fix ISS support for CSRRW/CSRRS on single flag group

We missed some masking when splitting the flag groups up. Add it back
in, and add an assertion to _set_field to make sure this sort of thing
doesn't happen again.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 2f6c2b01======
======Short Message======
[dv/csr_utils] Add debug msg for UVM_NOT_OK err
======Full Message======
[dv/csr_utils] Add debug msg for UVM_NOT_OK err

This PR adds a debug message to show which register is being accessed
when a UVM_NOT_OK error occurred.
Thanks @eunchan for the suggestions

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: e8c2d4fe======
======Short Message======
[dv/otp] add write access error for OTP_ctrl
======Full Message======
[dv/otp] add write access error for OTP_ctrl

Write access error is triggered when OTP write to non-zero addresses.
This PR adds the sequence to support write access error and add scb
supports.
Note that `otp_macro_errors` includes other scenarios. Coming PRs will
support the rest of the error cases.

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: ac7ee0d7======
======Short Message======
[otbn] Fix instructions that both read and write x1
======Full Message======
[otbn] Fix instructions that both read and write x1

The code was writing to the wrong address (one too high). This patch
fixes things by defining stack_wr_idx to be the address to which we
should write. It's normally equal to stack_wr_ptr_q (one above the top
of the stack), but gets decremented by one if we're popping too.

The patch also renames stack_rd_ptr to stack_rd_idx so that things of
length StackDepthW are called "idx" and things of length StackDepthW+1
are called "ptr": hopefully this will make things a bit easier to
understand.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 3448ddaf======
======Short Message======
[ci] Fail CI on broken FPGA runs
======Full Message======
[ci] Fail CI on broken FPGA runs

When we introduced the CI runs on FPGAs we downgraded failures to
warnings to ensure that infrastructure problems wouldn't disrupt the
development workflow. The infrastructure has shown to be stable now and
is actually catching real bugs, so we can make the warning an error
again to raise visibility.

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: 87e8f85b======
======Short Message======
[dvsim] Add exclude hidden files when needed
======Full Message======
[dvsim] Add exclude hidden files when needed

Only when hidden files exist, adds `--exclude` option to rsync.

Problem:

    If all hidden files are added into `.gitignore` then rsync error out
    with the message:

    ERROR: [dvsim] Failed to copy over opentitan to scratch/...:
    zsh:1: no matches found: --exclude=.*

Signed-off-by: Eunchan Kim <eunchan@opentitan.org>



======Commit: b613a46f======
======Short Message======
[otbn] Split "gen" and "asm" parts of gen-binaries.py
======Full Message======
[otbn] Split "gen" and "asm" parts of gen-binaries.py

This works the same, but gives less mysterious error messages when
something goes wrong. Piping the output of 'gen' into the 'asm'
command means that any Python traceback doesn't appear in the shell
and you just get a mysterious error from the 'asm' command warning
of malformed json code.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 30abf91b======
======Short Message======
[sw] Document and Fix Meson Argument Handling
======Full Message======
[sw] Document and Fix Meson Argument Handling

The primary motivation for this change was to add functionality to error
on unprocessed arguments, for instance if someone passes an argument
without the right preceeding option.

As part of this work, I noticed we weren't using bash's `getopts` in a
conventional manner, especially around including `?` in the optstring,
which doesn't mean anything.

As part of this change, I have: documented exactly how optstring should
be written; corrected how error handling in `./meson_init.sh` works so
that unexpected options and options without arguments are handled
correctly; and reordered all the options to be in alphabetical order.

Signed-off-by: Sam Elliott <selliott@lowrisc.org>



======Commit: 26a57cd0======
======Short Message======
[otbn] Fix address range check for narrow loads and stores
======Full Message======
[otbn] Fix address range check for narrow loads and stores

Dividing by 32 here converts from "address" to "32-byte word". We
should add 3 to the address before dividing, so that we're getting the
word corresponding to the top byte of the load or store. (In practice,
this doesn't actually do anything because addr is 4-byte aligned, but
it can't hurt to be explicit).

Before this patch, we were adding 31 instead (copy-pasted from the
wide load and store methods above), which causes an error if you try
to load or store 32 bits to e.g. 0xff4.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 0d5d90a7======
======Short Message======
[otbn] Fix model tracking for LUI in RIG
======Full Message======
[otbn] Fix model tracking for LUI in RIG

Unlike other RISC-V instructions, LUI expects the programmer to do the
operand shift explicitly, and I forgot here.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: a37acedd======
======Short Message======
[DV, Xcelium] Fix for #4690
======Full Message======
[DV, Xcelium] Fix for #4690

Signed-off-by: Srikrishna Iyer <sriyer@google.com>



======Commit: ec279477======
======Short Message======
[otbn dv] Include missing header file
======Full Message======
[otbn dv] Include missing header file

Without this, OTBN and oddly, chip level sims fail with the following
error:

```console
scratch/rstmgr-test/top_earlgrey_asic-sim-vcs/default/sim-vcs/../src/lowrisc_ip_otbn_tracer_0/cpp/log_trace_listener.cc: In constructor 'LogTraceListener::LogTraceListener(const string&)':
scratch/rstmgr-test/top_earlgrey_asic-sim-vcs/default/sim-vcs/../src/lowrisc_ip_otbn_tracer_0/cpp/log_trace_listener.cc:18:11: error: 'runtime_error' is not a member of 'std'
     throw std::runtime_error(oss.str());
```

Signed-off-by: Srikrishna Iyer <sriyer@google.com>



======Commit: ca58b5a4======
======Short Message======
[keymgr/dv] Add keymgr_lc_disable_vseq
======Full Message======
[keymgr/dv] Add keymgr_lc_disable_vseq

1. Also fix gen_id check and fix unexpected version error in vseq
2. update scb for lc disabled

Signed-off-by: Weicai Yang <weicai@google.com>



======Commit: 69cb1f86======
======Short Message======
[dv/alert_esc_agent] add basic support for esc sender driver
======Full Message======
[dv/alert_esc_agent] add basic support for esc sender driver

This PR adds basic supports for esc_sender_driver. It only resets the
signals and avoid fatal errors. Still need more work to drive esc
sequence.

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: 48a136bd======
======Short Message======
[otp_ctrl] Update EDN interface and KDI logic
======Full Message======
[otp_ctrl] Update EDN interface and KDI logic

This updates the EDN interface to use the correct structs instead of the
mock-up types, and instantiates the prim_edn_req gadget to synchronize
the data and pack it to the correct internal width.

This also fixes the KDI FSM that previously did not correctly request
entropy data under certain circumstances.

Signed-off-by: Michael Schaffner <msf@opentitan.org>



======Commit: 3ff4287a======
======Short Message======
[csrng/rtl] internal state observed from TLUL register
======Full Message======
[csrng/rtl] internal state observed from TLUL register

This debug feature is enabled with lc_hw_debug.
Gated off the read reg with enable so that x's do not propagate.
Cleaned up internal state field description and dump regs.
Added more clean up to text descriptions, and long lines.
Added the feature to reset the internal state ptr on reg write.
Added an enable for all FIFO errors.
Added onehot asserts and include file.
Added more rewording of text based on reviews.

Signed-off-by: Mark Branstad <mark.branstad@wdc.com>



======Commit: 72b8635b======
======Short Message======
[dv/otp_ctrl] fix test_access mem_test regression failure
======Full Message======
[dv/otp_ctrl] fix test_access mem_test regression failure

Regression failed on otp_ctrl mem_walk test because test_access cannot
be accessed until dft_en is set to ON. To set dft_en, tb drives the
dft_en pin, and RTL goes to lc_sync module, which at least take three
clock cycles.

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: eb4b0d36======
======Short Message======
[prim] Add hamming code as ECC option
======Full Message======
[prim] Add hamming code as ECC option

Still default to hsiao code

Signed-off-by: Timothy Chen <timothytim@google.com>



======Commit: d8b71066======
======Short Message======
Fix missing else
======Full Message======
Fix missing else

Signed-off-by: Naoya Hatta <dalance@gmail.com>



======Commit: ae05e946======
======Short Message======
[keymgr] Minor fixes
======Full Message======
[keymgr] Minor fixes

- Address #4590 and #4649

Signed-off-by: Timothy Chen <timothytim@google.com>



======Commit: 2ada63aa======
======Short Message======
[all] Fix remaining broken Ibex documentation links
======Full Message======
[all] Fix remaining broken Ibex documentation links

Signed-off-by: Michael Munday <mike.munday@lowrisc.org>



======Commit: c8ee5cbf======
======Short Message======
[prim_ram] Rearrange parity bit packing and fix wrong wmask settings
======Full Message======
[prim_ram] Rearrange parity bit packing and fix wrong wmask settings

This ensures that 1) memories not using per-bit or per-byte wmask
have the correct DataBitsPerMask setting, and 2) that memories with byte
parity employ the correct data + parity bit packing order such that
these memories can be efficiently mapped onto FPGA block rams.

This fix reduces BRAM utilization on NexysVideo from ~80% to ~65%.

Signed-off-by: Michael Schaffner <msf@opentitan.org>



======Commit: 0965de8f======
======Short Message======
[rtl/otp_ctrl] Fix seed_valid output signals from OTP
======Full Message======
[rtl/otp_ctrl] Fix seed_valid output signals from OTP

In otp_ctrl, `seed_valid` output for otbn, flash, and sram should be set
when the Secret1 Partition is locked. For keymgr, the `valid` signal
should be set when Secret2 Partition is locked.
This PR fixes this logic.

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: bf53e8b0======
======Short Message======
[dv/lc_ctrl] add rma and clk_byp response
======Full Message======
[dv/lc_ctrl] add rma and clk_byp response

This PR adds rsp sequence to rma and clk_byp requests.
The response includes an error bit that can cause error cases in
response. The error case will be used in later sequence.

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: 2a82c6c9======
======Short Message======
[kmac] Fix cSHAKE mux selection issue
======Full Message======
[kmac] Fix cSHAKE mux selection issue

In cSHAKE/KMAC mode, the state machine changes internal mux selection in
SHA3 padding logic from MuxPrefix to MuxNone while waiting the prefix
block process completion. It results in asserting msg_ready then the
next block (secret key) was received without processing it.

This commit fixes the issue above by changing MuxNone ready output to 0
and FSM to select MuxPrefix while in PrefixWait state.

Signed-off-by: Eunchan Kim <eunchan@opentitan.org>



======Commit: 260948a4======
======Short Message======
[keymgr/dv] Fix some regression failures
======Full Message======
[keymgr/dv] Fix some regression failures

1. Fix cfgen predict logic
2. Fix key_version and max_key_ver* relationship
3. Fix key_version check in seq
4. delete unused file keymgr_op_at_wipe_state_vseq.sv
5. override seq body to have more randomization in random_vseq

Signed-off-by: Weicai Yang <weicai@google.com>



======Commit: 6641bea1======
======Short Message======
[aes/dv] Fixed a few corner cases in clear seq and cleaned up some code"
======Full Message======
[aes/dv] Fixed a few corner cases in clear seq and cleaned up some code"

Signed-off-by: Rasmus Madsen <rasmus.madsen@wdc.com>



======Commit: 2f42ccd1======
======Short Message======
[ci, topgen] Add CI tests for English Breakfast top
======Full Message======
[ci, topgen] Add CI tests for English Breakfast top

For the beginning, we build:
- a couple of binaries,
- the Verilator simulation,
- the FPGA bitstream.
Executing binaries in simulation and running tests on the FPGA will follow.

In topgen, we need to skip fixing the C header guards if the generated C
files are not within the source tree. This is always the case if topgen is
invoked through FuseSoc in CI. However, in this case the C files are not
needed anyway.

Signed-off-by: Pirmin Vogel <vogelpi@lowrisc.org>



======Commit: 7ac9f330======
======Short Message======
[lc, otp] Add missing default value for intermodule signal
======Full Message======
[lc, otp] Add missing default value for intermodule signal

Signed-off-by: Pirmin Vogel <vogelpi@lowrisc.org>



======Commit: fb560211======
======Short Message======
[otbn] No longer factor rvalid into rerror signals
======Full Message======
[otbn] No longer factor rvalid into rerror signals

Since commit f083eb5, rerror implies rvalid anyway.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: acac3a5d======
======Short Message======
[fpv] Fix jaspergold run script
======Full Message======
[fpv] Fix jaspergold run script

Fix jaspergold script error by adding an absolute path to fpv.tcl file.

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: 7ef10f62======
======Short Message======
[kmac] Revise the endianness in KMAC
======Full Message======
[kmac] Revise the endianness in KMAC

Previous commit 00310851134f35124264a55458a9fc9b1e48d645 fixed the
ordering issue. Based on the update, the KMAC top is revised w.r.t the
reverted endianness in MSG_FIFO.

The CFG.msg_endianness represents little-endian if the value is 0.
The KMAC top, however, byte-swapped the TL input data and mask if 0.

Also, the msg_endianness describes the value to affect secret keys. So,
the design is updated accordingly.

Signed-off-by: Eunchan Kim <eunchan@opentitan.org>



======Commit: b1bd6b4b======
======Short Message======
[aes] Fix lint errors related to unused clock and reset signals
======Full Message======
[aes] Fix lint errors related to unused clock and reset signals

If fully combinational S-Box implementations are used, these signals are
unused.

Signed-off-by: Pirmin Vogel <vogelpi@lowrisc.org>



======Commit: b7d51296======
======Short Message======
[dv/otp] fix lc test failure
======Full Message======
[dv/otp] fix lc test failure

LC test uses intermediate value as a buffer but did not actually store
the 1st round result into the variable.
This PR fixes this logic that causes LC test failed in regression.

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: c07b007b======
======Short Message======
[prim_esc_rxtx/rv_core_ibex] Add default values and NMI synchronization
======Full Message======
[prim_esc_rxtx/rv_core_ibex] Add default values and NMI synchronization

Signed-off-by: Michael Schaffner <msf@opentitan.org>



======Commit: 7570b149======
======Short Message======
[kmac] Reverse the PREFIX order
======Full Message======
[kmac] Reverse the PREFIX order

Changed the !!PREFIX register order in little-endian way.

Signed-off-by: Eunchan Kim <eunchan@opentitan.org>



======Commit: 13a5dde0======
======Short Message======
[dvsim] Fix regression publish result link with --remote switch
======Full Message======
[dvsim] Fix regression publish result link with --remote switch

If we use `--remote` switch, the result summary path is not correct.
This is because to remove the root directory and get `rel_path` in
FlowCfg, we used
```
        if self.rel_path == "":
            self.rel_path = os.path.dirname(self.flow_cfg_file).replace(
                self.proj_root + '/', '')
```
For this one, if remote switch is on, the self.proj_root is remote
repo_top. However, `self.flow_cfg_file` still uses the local abs path,
so the rel_path ended up still include the absolute path.
This PR fixed it by using the remote `cfg_path` if --remote is turned
on.

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: 5e71793e======
======Short Message======
[top] Fix lint errors related to interrupts
======Full Message======
[top] Fix lint errors related to interrupts

Signed-off-by: Timothy Chen <timothytim@google.com>



======Commit: 853015f3======
======Short Message======
[prim_ram_1p_scr] Fix sequencing bug in scrambling logic
======Full Message======
[prim_ram_1p_scr] Fix sequencing bug in scrambling logic

Signed-off-by: Michael Schaffner <msf@opentitan.org>



======Commit: f083eb5a======
======Short Message======
[prim_ram*_adv] Qualify error output signals with rvalid
======Full Message======
[prim_ram*_adv] Qualify error output signals with rvalid

Fix #4390

Signed-off-by: Michael Schaffner <msf@opentitan.org>



======Commit: 660baa93======
======Short Message======
[otbn] Add lock-step comparisons between RTL and ISS
======Full Message======
[otbn] Add lock-step comparisons between RTL and ISS

To do this, we wire up a new consumer for trace items called the
"trace checker". This is a singleton class to allow the ISS wrapper
to get hold of its instance: we could probably thread things through
properly with the Verilator environment, but it just ain't gonna
happen with other simulators, that don't have a C++ toplevel.

This patch then changes the ISS to spit out responses that look more
like the RTL when it's running in "stepped" mode: the idea is that we
can compare them with just string comparisons.

Finally, there's a certain amount of logic to handle things like stall
cycles cleanly.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: ccb53f8f======
======Short Message======
[otbn] Rename otbn_trace_intf to otbn_trace_if
======Full Message======
[otbn] Rename otbn_trace_intf to otbn_trace_if

Our style guide (enforced by Verible in CI) requires interfaces to
have names ending in _if.

Also replace a fall-through with an explicit default in a case
statement to fix the other "style violation" that Verible catches and
add a missing qualification on a port type (that VCS catches).

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 9eb9b981======
======Short Message======
[otbn] Fix stall behaviour in ISS at start of time
======Full Message======
[otbn] Fix stall behaviour in ISS at start of time

The previous version of the code worked, in that it took the right
number of cycles. But it incorrectly started the first instruction
immediately and then stalled just after it. This doesn't matter unless
you're checking against the RTL and you reset the block immediately
after starting it. Which is exactly what we do in the Verilator
testbench!

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 9d268e23======
======Short Message======
[otbn] Move trace collation to the otbn_tracer core file
======Full Message======
[otbn] Move trace collation to the otbn_tracer core file

This code shouldn't be in otbn_top_sim.cc: it's going to be needed for
the UVM-based test machinery too. This patch defines a new class
called OtbnTraceSource. It's a singleton, whose instance listens to a
DPI function and broadcasts calls to all listeners.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 4a4b527e======
======Short Message======
[otbn] Re-enable smoke test in CI (again)
======Full Message======
[otbn] Re-enable smoke test in CI (again)

Re-re-enable it: we should now have a working out-of-tree ISS plus
support for address errors.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 26177368======
======Short Message======
[otbn] Report errors properly from ISS to RTL
======Full Message======
[otbn] Report errors properly from ISS to RTL

Most of the plumbing is pretty obvious. The only challenging bit is
getting multiple values back from the C++ model wrapper to the SV code
in otbn_core_model.sv. We were already passing 3 flags as the bottom 3
bits of a uint32_t. Now we pass a 16-bit error code as the top 3 bits.
If we ever need more than that many bits, we might have to do
something cleverer with out parameters, but I thought the quick and
dirty solution was probably best for now.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 0e8551f1======
======Short Message======
[otbn] Teach ISS to handle bad address errors
======Full Message======
[otbn] Teach ISS to handle bad address errors

This catches out-of-range or misaligned accesses to dmem and bad PCs
for jump/branch destinations.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: ce7dfab4======
======Short Message======
[otbn] Implement fatal/recoverable alerts
======Full Message======
[otbn] Implement fatal/recoverable alerts

There are currently two different types of alert. A "fatal" alert is
caused by things like ECC errors. In the future, it will also be
caused if we notice FSM glitches. This sends an alert, which latches
on until reset. The fatal alert has an associated FATAL_CAUSE
register, with one bit per cause.

A "recoverable" alert is sent just once. At the moment, we don't
actually have anything that generates one of these, but we probably
will in the future.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: b184865b======
======Short Message======
[otbn] Update error handling documentation
======Full Message======
[otbn] Update error handling documentation

This was sitting in a stub "Design Details" section. I've renamed and
re-purposed that: if we have other general design details in the
future, I propose that we give them their own sections.

This description matches what I understand from the discussion on
issue #4208. Obviously, the patch doesn't update the RTL to match.
There shouldn't be any ISS changes required.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 2b99fa43======
======Short Message======
[otbn] Add to/clarify loop information to docs
======Full Message======
[otbn] Add to/clarify loop information to docs

* Formatting of the doc string is corrected (one sentence per line)
* Zero iterations in `LOOPI` also results in error
* Add guidance on how loop nesting works
* Make it explicit that branches/jumps are allowed in loops excepting
  the last instruction.

Signed-off-by: Greg Chadwick <gac@lowrisc.org>



======Commit: ec6449e3======
======Short Message======
[dvsim] Fix purge not delete remote repo_top
======Full Message======
[dvsim] Fix purge not delete remote repo_top

This PR tries to fix the `purge` command could not delete remote
repo_top if we enable `--remote` switch.
I am not sure this is the best approach, it added a purge switch inside
`resolve_porj_root` function. Please let me know if you prefer a better
solution.

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: 5e856078======
======Short Message======
[flash_ctrl] Fix error handling in rma response
======Full Message======
[flash_ctrl] Fix error handling in rma response

Signed-off-by: Timothy Chen <timothytim@google.com>



======Commit: 8dd960cf======
======Short Message======
[otbn] Hush build commands by default in otbn_build.py
======Full Message======
[otbn] Hush build commands by default in otbn_build.py

This avoids them spewing out when running ninja to build all the
software. We've still got some other Python tooling that writes random
warnings to the console, but we should probably cut this down as much
as possible.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 769d5b0a======
======Short Message======
[keymgr/dv] Change polling cfgen to wait for 2 cycles
======Full Message======
[keymgr/dv] Change polling cfgen to wait for 2 cycles

As Cindy pointed out, if polling cfgen during synchronizing, scb need to
handle those 2 cycles when value is changing. Use 2 cycles delay to avoid
special handle in scb
Also fix a typo at checking cfgen value
Signed-off-by: Weicai Yang <weicai@google.com>



======Commit: 981c36b0======
======Short Message======
[dvsim] Logic to copy repo to scratch area
======Full Message======
[dvsim] Logic to copy repo to scratch area

This change adds logic to copy the repo to the scratch area using
`rsync` command. The copy is triggered on the presence of two things -
- DVSIM_REMOTE_DISPATCH env variable defined
- `scratch_root` not being tool-default

If these conditions are met, it is assumed that a different scratch
area is being used, which is accessible to the user's workspace /
workstation as well as to the remote dispatch system. It is also assumed
that the remote dispatch system cannot access the user's workspace,
which is why the copying is needed. If the repo is copied to the scratch
area, the `proj_root` is set to the destination location, so that in
HJson files, everything is referenced from the destination as opposed
to the actual project root.

The destination is chosen to be `{scratch_root}/{branch}/repo_top`. This
is common to all toolflows run from the same branch.

The other change is removal of `tool_srcs_dir` and `tool_srcs`, and
addition of `proj_root` as a mandatory variable set for the Makefile.
All sources that the EDA tools need to have access to can now be
referenced from `{proj_root}` in the HJson files.

Lastly, a `--local` switch is added to dvsim to prevent triggering the
repo copy. It is user's responsibility to ensure that with `--local`,
DVSim is invoked such that the EDA tools are invoked from user's
workstation.

In the `common_project_cfg.hjson`, the changes reflect the above
updates.

Signed-off-by: Srikrishna Iyer <sriyer@google.com>

[dvsim, dv] Removal of `tool_srcs*`

This changes removes `tool_srcs*` from HJson and other files and
references all dependent sources from `{proj_root}` instead. Commit
b7ed20676 is required to support this change.

Wherever applicable, `{dv_root}` is used in lieu of `{proj_root}` to
stay opentitan-independent.

Signed-off-by: Srikrishna Iyer <sriyer@google.com>

[dvsim, fpv] Removal of `tool_srcs*`

This changes removes `tool_srcs*` from HJson and other files and
references all dependent sources from `{proj_root}` instead. Commit
b7ed20676 is required to support this change.

The second change is addition of `fpv_root`, which is where things that
could be common across OT and other projects can be found. All
references to `{proj_root}/hw/formal` are replaced with `{fpv_root}`.

Signed-off-by: Srikrishna Iyer <sriyer@google.com>

[dvsim, lint] Removal of `tool_srcs*`

This changes removes `tool_srcs*` from HJson and other files and
references all dependent sources from `{proj_root}` instead. Commit
b7ed20676 is required to support this change.

The second change is addition of `{lint_root}`, which represents a
location where all lint sources common across projects may reside. All
references to `{proj_root}/hw/lint` are replaced with `{lint_root}`.

Signed-off-by: Srikrishna Iyer <sriyer@google.com>

[dvsim, syn] Removal of `tool_srcs*`

This changes removes `tool_srcs*` from HJson and other files and
references all dependent sources from `{proj_root}` instead. Commit
b7ed20676 is required to support this change.

The second change is the addion of `{syn_root}` where all common
synthesis sources common across projects may reside. All isntances of
`{proj_root}/hw/syn` are replaced with `{syn_root}` as applicable.

Signed-off-by: Srikrishna Iyer <sriyer@google.com>



======Commit: 7cbf9721======
======Short Message======
[otp_ctrl] Add random default value mechanism for secret OTP partitions
======Full Message======
[otp_ctrl] Add random default value mechanism for secret OTP partitions

Signed-off-by: Michael Schaffner <msf@opentitan.org>



======Commit: e88298ff======
======Short Message======
[keymgr/dv] Add 1 cycle after reset to fix CSR failures
======Full Message======
[keymgr/dv] Add 1 cycle after reset to fix CSR failures

Address failure mentioned at #4566
Signed-off-by: Weicai Yang <weicai@google.com>



======Commit: b31bdbf2======
======Short Message======
[rtl/otp_ctrl] Small fix on unlock token encode
======Full Message======
[rtl/otp_ctrl] Small fix on unlock token encode

This PR fix a small issue reported in #4586.

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: a786bfb4======
======Short Message======
[kmac] Connect only one bit per 8bit in packer mask
======Full Message======
[kmac] Connect only one bit per 8bit in packer mask

The previous fix 003108511 removed the endian conversion logic and
directly connects the packer outputs to fifo_wdata struct.

The strobe in the fifo struct is byte strobe but the revised logic only
directly assigned the 64bit packer mask into 8bit byte strobe.

This commit is to connect only LSB in a byte to fifo strobe signal.

Signed-off-by: Eunchan Kim <eunchan@opentitan.org>



======Commit: 21437af7======
======Short Message======
[otbn] Fix is_dest check in rig
======Full Message======
[otbn] Fix is_dest check in rig

This code is supposed to check which operands are destinations (to see
whether we're seeing a read or a write). Unfortunately, I forgot the
parentheses for the function call, so was checking whether a function
was none or not (it isn't).

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 5238ecf8======
======Short Message======
[otbn] Don't jump to the instruction we're choosing in rig
======Full Message======
[otbn] Don't jump to the instruction we're choosing in rig

The code that picks a jump target is careful to pick somewhere that
doesn't yet have any instruction data, but it didn't know not to pick
the address whose instruction we're currently defining.

We'll probably need something a bit cleverer in the future (when we
start generating branches and function calls), but this is a simple
fix for now.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 41a94472======
======Short Message======
[otbn] Fix logic for picking LSU target in rig
======Full Message======
[otbn] Fix logic for picking LSU target in rig

This wasn't quite right before (there was a bug that meant we
calculated k_min/k_max "backwards" from offset_range), and the
comments were a bit confusing, because I'd changed notations a few
times when writing it without tidying everything up properly.

This should be correct now and, possibly more importantly, it's rather
easier to follow the comments to convince yourself that it makes
sense!

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: d2854882======
======Short Message======
[otbn] Only generate 32-byte initialised data in rig
======Full Message======
[otbn] Only generate 32-byte initialised data in rig

4 bytes at once is a nice idea, but doesn't play well with the binary
loader, which expects 256-bit aligned segments. I don't think this
will actually miss any coverage, since we'll generate SW store
instructions that dump data all over the place.

This patch also defines an "InitData" class to wrap up the dictionary
mapping address to value, and gives it an as_segs() method, which
coalesces data at adjacent addresses into one segment. This coalescing
is needed for the binary loader (otherwise e.g. the second word of 8
32-bit words in a 256-bit word is a misaligned segment)

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: e97e0b8a======
======Short Message======
[flash_ctrl] update parameters
======Full Message======
[flash_ctrl] update parameters

- update parameters to production values and fix related lint warnings
- only remaining parameter not to be updated is number of pages due to
  fpga constraints

Signed-off-by: Timothy Chen <timothytim@google.com>



======Commit: 0a12094f======
======Short Message======
[keymgr / lc] Additional hook-ups
======Full Message======
[keymgr / lc] Additional hook-ups

Signed-off-by: Timothy Chen <timothytim@google.com>

[keymgr] Add init recognition to cfg_en and sideload controls

Signed-off-by: Timothy Chen <timothytim@google.com>

[keymgr] Hardwire keymgr_en default

Signed-off-by: Timothy Chen <timothytim@google.com>

[keymgr] hook-up otp device_id as well

Signed-off-by: Timothy Chen <timothytim@google.com>

[keymgr / top] top level hook-ups

Signed-off-by: Timothy Chen <timothytim@google.com>



======Commit: fe08b980======
======Short Message======
[dv/otp_ctrl] Fix otp_ctrl_dai_lock randomization failure
======Full Message======
[dv/otp_ctrl] Fix otp_ctrl_dai_lock randomization failure

In nightly regression, some otp_ctrl_dai_lock sequence has randomization
failure. The reason is because dai_write ran out of address.
There are total 467 writtable address within OTP DAI access. And
dai_lock sequence does not enable mem_clear, so could not rewrite any of
the address.
This PR fix it by adding a constraint to num total address can be
written.

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: 72067ff5======
======Short Message======
[dv/lc_ctrl] fix csr_mem_rw_with_rand_reset failure
======Full Message======
[dv/lc_ctrl] fix csr_mem_rw_with_rand_reset failure

LC_CTRL has a similar issue as otp_ctrl that after issuing reset, to
start the LC_ctrl we need initilize lc_ctrl with external input from
pwrmgr and otp_ctrl. So in csr_mem_rw_with_rand_reset test, it won't
pass unless initialization is done.
Similar to OTP_CTRL, the fix is override
`read_and_check_all_csrs_after_reset` with init sequence.
This PR also fixes the issue in OTP_CTRL that did not call super in
`read_and_check_all_csrs_after_reset`.

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: 98c38dcc======
======Short Message======
[flash_ctrl] fix default value typo
======Full Message======
[flash_ctrl] fix default value typo

Signed-off-by: Timothy Chen <timothytim@google.com>



======Commit: 436fa6c8======
======Short Message======
[kmac] Latch the output data from state
======Full Message======
[kmac] Latch the output data from state

Problem:

    The software reads unknown data or all-zero from state window.

The `tlram_rdata` is connected to tlram_rdata_endian. the latter is a
muxed signal from the internal Keccak state registers. The mux selection
signal is the input TL-UL address.

As the address only valid when the request is asserted, the selection
signal becomes unknown or incorrect value when the state module returns
the read data.

This commit is to fix the bug by latching the tlram_rdata. There's
another solution to latch the address selectino only when it is valid.
The latter consumes less registers as address bit width is smaller than
the return data but creates a little bit more ambiguous logic so that
drops the readability.

The issue is reported by @udinator

Signed-off-by: Eunchan Kim <eunchan@opentitan.org>



======Commit: 1c3b1606======
======Short Message======
[csrng/rtl] switch to lc_hw_debug_en for lifecycle input
======Full Message======
[csrng/rtl] switch to lc_hw_debug_en for lifecycle input

Converted to the prim_lc_sync module version of this function.
Removed all lint complaints.
Regenerated top earlgrey sv.
Folded in review comments.

Signed-off-by: Mark Branstad <mark.branstad@wdc.com>



======Commit: bf0ab0a8======
======Short Message======
[ci] Increase timeout for OTBN smoke test
======Full Message======
[ci] Increase timeout for OTBN smoke test

We did run into this timeout already at package installation (due to
other bugs which caused package installation to take longer, but to
succeed still). Increase the test timeout to make it more resilient to
such things.

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: dc12cd37======
======Short Message======
[ci] Use pip through Python
======Full Message======
[ci] Use pip through Python

Avoid using an old "pip3" wrapper script, as indicated by this warning
we're getting in CI:

```
WARNING: pip is being invoked by an old script wrapper. This will fail in a future version of pip.
Please see https://github.com/pypa/pip/issues/5599 for advice on fixing the underlying issue.
To avoid this problem you can invoke Python with '-m pip' instead of running pip directly.
```

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: 00310851======
======Short Message======
[kmac] Revise Endianess in the Message FIFO
======Full Message======
[kmac] Revise Endianess in the Message FIFO

Problem:

    When the software writes partially and proceed the SHA3, the
    assertion inside sha3pad module fires. The assertion is to check
    when it is partial, the MSB of the strobe is always 0.

The strob and the data in partial completion was not expected value.
lower bytes of the message and lower bits of the strobe are 0 rather
than MSB as 0.

The data in between prim_packer and prim_fifo inside kmac_msgfifo module
was swapped always. The code was derived from HMAC.

It is correct to swap the data in HMAC. HMAC implements the hashing
logic in big-endian way. So the lower most bytes should be placed at the
higher most byte.

In KMAC, the message in SHA3 hashing module is converted into 3-D cube
form. The conversion logic assumes the data to be little-endian. Bit 0
is the actual bit 0 in the SHA3 specification. So, no need to convert
again.

This commit is to fix the issue above by assigning the data without
endian conversion.

The issue is reported by @udinator

Signed-off-by: Eunchan Kim <eunchan@opentitan.org>



======Commit: abe07e66======
======Short Message======
[dv/otp_ctrl] Fix push-pull agent port
======Full Message======
[dv/otp_ctrl] Fix push-pull agent port

In this PR, fix the push-pull agent port that connecting to scb. The
current port used should be `analysis_port` rather than `req_port`.

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: b610308d======
======Short Message======
[dvsim] Fix publish report path
======Full Message======
[dvsim] Fix publish report path

Move `self.rel_path` before `self._process_overrides()` to fix
`rel_path` is empty in hjson file

Fix below highlighted path
VERBOSE: [FlowCfg] CLOUDSDK_PYTHON=/usr/bin/python2.7 /usr/bin/gsutil cp /edascratch/weicai-opentitan/ot/uart.sim.vcs/try_publish/results_Mon.12.14.20__06.57.39PM.html gs://reports.opentitan.org/**hw/ip/uart/dv**/latest/results.html;

Signed-off-by: Weicai Yang <weicai@google.com>



======Commit: 3275711d======
======Short Message======
[fpv/rv_dm] remove old FPV code
======Full Message======
[fpv/rv_dm] remove old FPV code

In rv_dm core file, it still refers to old `dv/tb/rv_dm_bind.sv` file.
This PR removes the old method to avoid compile error.

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: ae9022bd======
======Short Message======
[dvsim] Fix revision hyperlink
======Full Message======
[dvsim] Fix revision hyperlink

add `https://` otherwise, when we click in the website, it becomes
https://reports.opentitan.org/hw/ip/spi_device/dv/2020.12.10_13.42.20/github.com/lowrisc/opentitan/tree/22d577b88cea101d6d20794542c2db06c5d5f2bf

can try it [here](https://reports.opentitan.org/hw/ip/spi_device/dv/2020.12.10_13.42.20/results.html)
Signed-off-by: Weicai Yang <weicai@google.com>



======Commit: 51c8546b======
======Short Message======
[keymgr] Usability updates
======Full Message======
[keymgr] Usability updates

- Remove error interrupt and it is not really useful for software
- Add a software clear to sideload keys
- Use different derivation constants for each sideload key

Signed-off-by: Timothy Chen <timothytim@google.com>



======Commit: 431f84a8======
======Short Message======
[lc_ctrl] Fix nvm_debug_en discrepancy in DEV
======Full Message======
[lc_ctrl] Fix nvm_debug_en discrepancy in DEV

Signed-off-by: Michael Schaffner <msf@opentitan.org>



======Commit: 4eb46081======
======Short Message======
[dv/otp] OTP_CTRL dai lock sequence
======Full Message======
[dv/otp] OTP_CTRL dai lock sequence

This sequence lock each partition of OTP's DAI interface by:
1. Trigger digest
2. Write rd_lock_reg for SW partitions
Then access read/write/digest cal, to ensure data cannot be accessed and
corresponding status reg is set correctly.

Next step will work on the error code.

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: 418a6f87======
======Short Message======
[dv] Fix regression compile error
======Full Message======
[dv] Fix regression compile error

Some regression has compile error due to `cip_env` null object for
edn_agent_cfg. This PR fix it by adding a gating logic `has_edn` before
assigning zero_delay to it.

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: d5aa79a7======
======Short Message======
[otbn] Allow concurrent runs of otbn_build.py on the same files
======Full Message======
[otbn] Allow concurrent runs of otbn_build.py on the same files

Because the Meson-based build system doesn't really allow multiple
toolchains, we use a hack to build OTBN code through "custom
commands". Doing this, in turn, means that we have to assemble and
link every assembly file that goes into an ELF in a single script.

If two different ELF files use the same assembly file, this means
we've got two different runs of the script that are both trying to
create the relevant object file at the same time, which causes
confusing errors.

This patch should fix the errors by assembling the objects to
temporary files and then (atomically) renaming them to put them in the
right place. Obviously, it would be nice to teach the build system to
do this properly, but that looks like it's a bigger job, so we're
applying the hacky fix for now.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: e43cb498======
======Short Message======
[dv] Connect edn_pull_agent zero_delays and fix object randomization
======Full Message======
[dv] Connect edn_pull_agent zero_delays and fix object randomization

Fix that objects in cip_base_env_cfg can't be randomized before it's
created
Fix zero_delays usage. It's set at the end of test build phase, we
should use iti at env build phase or later

Signed-off-by: Weicai Yang <weicai@google.com>



======Commit: b773efa6======
======Short Message======
[doc] Fix checklist items in V1
======Full Message======
[doc] Fix checklist items in V1

Signed-off-by: Michael Schaffner <msf@opentitan.org>



======Commit: 11f9ece0======
======Short Message======
[dv, gpio smoke test] Add SV side checking
======Full Message======
[dv, gpio smoke test] Add SV side checking

Add `chip_gpio_smoke_vseq` which randomizes the SW symbol `kGpioVals` to
write some random data to the GPIOs rather than use some fixed values.
It also checks if the correct GPIO values are seen on the chip pins.

Signed-off-by: Srikrishna Iyer <sriyer@google.com>



======Commit: e1a0e6ca======
======Short Message======
[dv/csr_excl] Fix VCS warning
======Full Message======
[dv/csr_excl] Fix VCS warning

In csr_excl_item.sv currently there is a xcelium warning for assigning
enum type directly to 0.
This PR fixed it by directly using the enum default type.

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: 98231bef======
======Short Message======
[sw/device/examples] Fix hello world examples
======Full Message======
[sw/device/examples] Fix hello world examples

The base addresses of some peripherals were updated in d5a1e4b.
This broke the hello world examples because they used hardcoded
addresses. This change uses the relevant constants defined in the
top_earlgrey header instead.

Signed-off-by: Michael Munday <mike.munday@lowrisc.org>



======Commit: 99f3e3a9======
======Short Message======
[flash / lc] update enable signals per #4504
======Full Message======
[flash / lc] update enable signals per #4504

Signed-off-by: Timothy Chen <timothytim@google.com>

[flash / lc] dv and lint updates

Signed-off-by: Timothy Chen <timothytim@google.com>

[lc_ctrl] update typos and rebase

Signed-off-by: Timothy Chen <timothytim@google.com>

[lc_ctrl] assertion fixes and removing old signals

Signed-off-by: Timothy Chen <timothytim@google.com>



======Commit: 8a546bfc======
======Short Message======
[keymgr/dv] Fix reg name to make CI pass
======Full Message======
[keymgr/dv] Fix reg name to make CI pass

design just changed reg name, but I just merged one PR which used old name
CI didn't catch this issue in both PRs

Signed-off-by: Weicai Yang <weicai@google.com>



======Commit: 2ac0deeb======
======Short Message======
[dv] Auto-gen byte write for RAL
======Full Message======
[dv] Auto-gen byte write for RAL

Without update, we need to manually set partial write support for the
mem that supports it. If not, will see failure in tl_errors test.
Make it automatic to save time to debug this kind of issue

Signed-off-by: Weicai Yang <weicai@google.com>



======Commit: 5c02d78e======
======Short Message======
Fix topgen.py style by lintpy.py
======Full Message======
Fix topgen.py style by lintpy.py

Signed-off-by: Weicai Yang <weicai@google.com>



======Commit: f52a4612======
======Short Message======
[flash_ctrl] hook-up flash_ctrl key request interface
======Full Message======
[flash_ctrl] hook-up flash_ctrl key request interface

- minor modifications to otp

Signed-off-by: Timothy Chen <timothytim@google.com>

[flash / otp] Create default connection for otp-flash

Signed-off-by: Timothy Chen <timothytim@google.com>

[flash / top] update handling of req/ack interface between flash and otp

Signed-off-by: Timothy Chen <timothytim@google.com>

[flash] updates for assertions and dv

Signed-off-by: Timothy Chen <timothytim@google.com>

[flash] Address review comments

Signed-off-by: Timothy Chen <timothytim@google.com>

[flash] fix dv port name typo

Signed-off-by: Timothy Chen <timothytim@google.com>



======Commit: f3efb925======
======Short Message======
Add ascentlint default options for all cores depending on lint:common
======Full Message======
Add ascentlint default options for all cores depending on lint:common

This sets the options -wait_license and -stop_on_error for all cores
running ascentlint that depend on this core

Signed-off-by: Olof Kindgren <olof.kindgren@gmail.com>



======Commit: e741715e======
======Short Message======
[i2c, rtl] Fixed Lint warnings
======Full Message======
[i2c, rtl] Fixed Lint warnings

Signed-off-by: Igor Kouznetsov <igor.kouznetsov@wdc.com>



======Commit: 597dd966======
======Short Message======
[otp] lci interface assertion related fix
======Full Message======
[otp] lci interface assertion related fix

As documented in PR #4488. Michael pointed out the fix for the two
reported assertion issues:

1. Fix lci data known assertion error, by using a mux to select using
otp_lc_program_i data or using all 0s.
2. Fix prim_generic_otp wrap round assertions by gating it with `req`.

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: 677a343e======
======Short Message======
[otp_ctrl] Add feature for specifying invalid state defaults
======Full Message======
[otp_ctrl] Add feature for specifying invalid state defaults

Signed-off-by: Michael Schaffner <msf@opentitan.org>



======Commit: 302b76df======
======Short Message======
[otbn] Simple ISS tests to check loop error handling
======Full Message======
[otbn] Simple ISS tests to check loop error handling

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: fb6692e2======
======Short Message======
[otbn]: Add loop error support to ISS
======Full Message======
[otbn]: Add loop error support to ISS

Also, change the model to work the same way as the RTL. Now, we push
and pop from the stack even with a loop count of 1. We also raise an
error on a zero-iteration loop, which matches the spec (agreed upon
after this code was originally written).

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: f7e92cfe======
======Short Message======
[otbn] Document LOOP/LOOPI error conditions
======Full Message======
[otbn] Document LOOP/LOOPI error conditions

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 9233aac1======
======Short Message======
[sw, rom_exts] manifest.md SHA-265 => SHA-256 typo fix
======Full Message======
[sw, rom_exts] manifest.md SHA-265 => SHA-256 typo fix

Signed-off-by: Silvestrs Timofejevs <silvestrst@lowrisc.org>



======Commit: a23dfec1======
======Short Message======
[util] Rejig how we load hjson configurations for dvsim.py
======Full Message======
[util] Rejig how we load hjson configurations for dvsim.py

The main new feature from this patch is that a dvsim configuration
should now set a "dvsim_flow" value. This value is used to decide
which subclass of FlowCfg to construct (in CfgFactory.py).

There are two upsides to this:

  1. You can now run a lint or synthesis run without specifying the
     tool on the command line (before, the code made a SimCfg unless
     it recognised the tool).

  2. If you run dvsim.py on some other random hjson file, you get a
     somewhat helpful error message. Before, you'd get something
     cryptic about expanding verbosity flags.

There is also a downside:

  1. Every configuration needs to specify dvsim_flow. In practice,
     this isn't so bad, because this can be done in the included
     common_*_cfg.hjson.

Note that "every configuration" here includes primary configurations.
This is kind of silly, because a "primary configuration" is really
just a list of other things to run. In later patches, we can split
these out into their own type, which should clean up quite a lot of
the code, and get rid of this requirement. However, you can't do that
splitting without the change in this patch (I tried!), so I've done
this patch first.

To make sense of how this all works:

  - dvsim.py calls CfgFactory.make_config

  - This uses CfgJson.load_hjson to load an hjson file and everything
    it includes.

  - After loading the file, make_config looks at dvsim_flow (which
    must have a value) to decide which subclass of FlowCfg to
    instantiate.

  - The constructor for FlowCfg gets passed hjson_data. It sets up
    a whole list of attributes, then calls self._merge_hjson to merge
    the data from hjson_data into itself. It then calls self._expand
    to expand all the wildcards. Subclasses can hook in to these two
    methods if they need things to happen at specific times.

The only slight complication is from primary configs: configurations
that have a list of children to be loaded and run. These need to load
up some new hjson files. They can do so by calling back to the
factory (passed in as an argument to avoid circular dependencies).

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 4a96545d======
======Short Message======
Revert "[otbn] Re-enable smoke test in CI"
======Full Message======
Revert "[otbn] Re-enable smoke test in CI"

This reverts commit 8438016. Unfortunately, the changes in commit
480c0deb0 (which passed CI before enabling the smoke test, but then
were merged afterwards) break things.

Let's disable the test for a bit: fixing it properly needs a couple of
patches to the ISS, which are pending but not yet merged.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 1d329c43======
======Short Message======
Change VerilatorSimCtrl::Exec to handle --help properly
======Full Message======
Change VerilatorSimCtrl::Exec to handle --help properly

If a verilator-based toplevel wants to do some post-simulation
checking or reporting, it needs to know whether VerilatorSimCtrl::Exec
actually ran the simulation or not.

Before this patch, it could do so by replicating the contents of the
Exec method. This patch changes the prototype of the Exec method so
that it reports whether the simulation actually ran or not.

Use it like this:

    auto pr = simctrl.Exec(argc, argv);
    int ret_code = pr.first;
    bool ran_simulation = pr.second;

    if (ret_code != 0 || !ran_simulation) {
      return ret_code;
    }

    // Run post-simulation checks
    ...

The include-order changes are to satisfy clang-format on the changed
files.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 36f5a518======
======Short Message======
Simplify handling of exit_app in VerilatorSimCtrl::ParseCommandArgs
======Full Message======
Simplify handling of exit_app in VerilatorSimCtrl::ParseCommandArgs

Now, we ensure to set exit_app whenever the caller of ParseCommandArgs
should stop immediately, which simplifies its behaviour somewhat. Even
nicer would be to change ParseCommandArgs to return a POSIX-style
error code, but that changes the API so I'm punting on that for now.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 480c0deb======
======Short Message======
[otbn] Add error code test to dif_otbn_smoketest
======Full Message======
[otbn] Add error code test to dif_otbn_smoketest

Signed-off-by: Greg Chadwick <gac@lowrisc.org>



======Commit: f5a8a442======
======Short Message======
[otbn] Add error codes to documentation
======Full Message======
[otbn] Add error codes to documentation

Signed-off-by: Greg Chadwick <gac@lowrisc.org>



======Commit: 398bb941======
======Short Message======
[otbn] Update DIF with new error codes
======Full Message======
[otbn] Update DIF with new error codes

Signed-off-by: Greg Chadwick <gac@lowrisc.org>



======Commit: b5163fd9======
======Short Message======
[otbn] Add error conditions for loop to RTL
======Full Message======
[otbn] Add error conditions for loop to RTL

Signed-off-by: Greg Chadwick <gac@lowrisc.org>



======Commit: d3154ec2======
======Short Message======
[otbn] Add error handling to RTL
======Full Message======
[otbn] Add error handling to RTL

This adds a variety of new error codes to otbn_pkg as well as
implementing the handling for them in the RTL.

Fixes #4005

Signed-off-by: Greg Chadwick <gac@lowrisc.org>



======Commit: 44824948======
======Short Message======
[otbn] Remove dependency on riscv-python-sim
======Full Message======
[otbn] Remove dependency on riscv-python-sim

We were just using this for the Trace and TracePC classes, which
contain almost nothing. Define our own Trace/TracePC classes, remove
the "# type: ignore" hacks and fix the typing bugs that they hid.

Finally define an explicit Trace.trace function, rather than relying
on __str__ to generate trace output. We'll need this soon when we
start comparing with the RTL (because we'll want a different format
for different output types).

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 62f79b88======
======Short Message======
[aes] Parameterize LFSR default seeds and perms
======Full Message======
[aes] Parameterize LFSR default seeds and perms

This commit changes how the LFSR default seeds and permutations for the
clearing and masking PRNG of AES are generated and propagated. In line
with other OpenTitan IPs, we now use the `gen-lfsr-seed.py` script. The
values are exposed as IP parameters.

We do not yet expose them to the top-level/`top_pkg.sv` as the type
declarations and dimensions are likely to change in the process of SCA
hardening. This allows to continue the SCA hardening work without
constantly updating the top level.

Signed-off-by: Pirmin Vogel <vogelpi@lowrisc.org>



======Commit: 5808ad33======
======Short Message======
[i2c, rtl] SDA Interference fix
======Full Message======
[i2c, rtl] SDA Interference fix

In Idle state, event_sda_interference will be raised only if host is enabled

Signed-off-by: Igor Kouznetsov <igor.kouznetsov@wdc.com>



======Commit: 107f7c1f======
======Short Message======
[lc_ctrl] Two minor fixes
======Full Message======
[lc_ctrl] Two minor fixes

1. Fix assertion naming typo.
2. Fix comment naming `TEST_UNLOCK_TOKEN2` -> `TEST_UNLOCK_TOKEN3`

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: ed5086c6======
======Short Message======
[docs] Update Software Tree Documentation
======Full Message======
[docs] Update Software Tree Documentation

This Change:
- Fixes some links.
- Describes most of the Software Tree More accurately.

Signed-off-by: Sam Elliott <selliott@lowrisc.org>



======Commit: c002c825======
======Short Message======
[sram_ctrl] Rtl lint fix
======Full Message======
[sram_ctrl] Rtl lint fix

Signed-off-by: Michael Schaffner <msf@opentitan.org>



======Commit: 1c16a3b3======
======Short Message======
[otbn] Add missing RV32_TOOL_LD setting
======Full Message======
[otbn] Add missing RV32_TOOL_LD setting

The smoke test gets built differently from the other generated
binaries (because it uses the default linker script rather than
defining its own). This needs a different Ninja rule, and I'd missed
setting the RV32_TOOL_LD environment variable when copy-pasting.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 195ee865======
======Short Message======
[otbn] fix transposed digits in p256 code
======Full Message======
[otbn] fix transposed digits in p256 code

constant loading via dmem was edited manually in
the p256 code. This fixes a transposed digits
error in the dmem address that was introduced.

Signed-off-by: Felix Miller <felix.miller@gi-de.com>



======Commit: caf78d06======
======Short Message======
[otbn] Update p256 code with spec changes
======Full Message======
[otbn] Update p256 code with spec changes

This fixes issues due to two updates that were
made to the OTBN spec after the auto-conversion
of this code:
- positon of L and M flag in CSR
- order of words concatenation for bn.rshi

Signed-off-by: Felix Miller <felix.miller@gi-de.com>



======Commit: 1edca41b======
======Short Message======
[doc] Update Vivado version requirements
======Full Message======
[doc] Update Vivado version requirements

Vivado 2019.1 doesn't work with OpenTitan, but later versions work.
Recommend using 2020.1 by default.

Also remove a comment relating to 2018.1, it's less and less likely
people will use this version today.

Fixes #89

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: d81f5a94======
======Short Message======
[otbn] Add +1 offset to bodysize in LOOP[I]
======Full Message======
[otbn] Add +1 offset to bodysize in LOOP[I]

This alters the encoding of LOOP[I] such that zero sized loop bodies are
impossible.

Fixes #4338

Signed-off-by: Greg Chadwick <gac@lowrisc.org>



======Commit: 30b4d1eb======
======Short Message======
[otbn] Add fixed_offset to immediate operands
======Full Message======
[otbn] Add fixed_offset to immediate operands

This allows instruction encodings where the immediate given in assembly
is offset by some fixed value before being encoded.

Signed-off-by: Greg Chadwick <gac@lowrisc.org>



======Commit: 97da1d1d======
======Short Message======
[dv] Make width conversion explicit in dv_base_env_cfg::initialize
======Full Message======
[dv] Make width conversion explicit in dv_base_env_cfg::initialize

This is needed if BUS_AW doesn't equal `UVM_REG_ADDR_WIDTH. The
implicit (unsigned) conversion will do the right thing if
csr_base_addr is a fixed value, but will zero-extend '1 to something
like 0x00000000ffffffff if BUS_AW = 32 and `UVM_REG_ADDR_WIDTH == 64,
which breaks the magic address handling in set_base_addr.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 249a544e======
======Short Message======
[dvsim] Allow dvsim.py to be run under Make
======Full Message======
[dvsim] Allow dvsim.py to be run under Make

This can be handy if you want to use a Makefile to gather together
commonly-used arguments, for example. Unfortunately, this causes all
sorts of confusion if the wrapping Makefile was called with VAR=VAL
arguments where VAR matches a name in the flow makefile. Clearing
MAKEFLAGS fixes such problems.

It's slightly surprising that Make doesn't have a "ignore any
MAKEFLAGS: you're at the top!" command line argument, but I can't find
one.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 92e9ebb0======
======Short Message======
[aes] Use fresh, random intermediate masks in "noreuse" Canright S-Box
======Full Message======
[aes] Use fresh, random intermediate masks in "noreuse" Canright S-Box

Formal analysis using the REBECCA tool revealed that it is not secure to
re-use bits of the input and output masks for these intermediate masks.
Using fresh randomness instead allows the "noreuse" version to pass static
verification.

This also requires changes in the masking PRNG and the distribution of the
randomness inside the cipher core. To simplify future changes to the
masking scheme, the PRNG output now consists of a fixed-width part (8 bits
output mask per S-Box) and a parameterized part per S-Box, used e.g. for
intermediate masks.

Signed-off-by: Pirmin Vogel <vogelpi@lowrisc.org>



======Commit: 89001bd7======
======Short Message======
[dv] Fix push_pull_agent
======Full Message======
[dv] Fix push_pull_agent

Found 2 interesting issues
1. without `this` when we create analysis_fifo, it will be created under
root and if we create 2 of them (like create 2 device agents), will see this error
UVM_FATAL @         0 ps: (uvm_component.svh:1897) req_fifo [CLDEXT] Name 'req_fifo' is not unique to other top-level instances. If parent is a module, build a unique name by combining the the module name and component name: $sformatf("%m.%s","req_fifo").

2. `req_fifo` is the name which is already used in
[uvm_sequencer_param_base](https://verificationacademy.com/verification-methodology-reference/uvm/docs_1.2/html/src/seq/uvm_sequencer_param_base.svh), So have to use a different name

Signed-off-by: Weicai Yang <weicai@google.com>



======Commit: dddf93b9======
======Short Message======
[dvsim[ rename revision_string to revision
======Full Message======
[dvsim[ rename revision_string to revision

PLus, a minor fix to how commit id is retrieved.

Signed-off-by: Srikrishna Iyer <sriyer@google.com>



======Commit: a4f06643======
======Short Message======
[dvsim] fix for full verbosity
======Full Message======
[dvsim] fix for full verbosity

Signed-off-by: Srikrishna Iyer <sriyer@google.com>



======Commit: 65e16673======
======Short Message======
[keymgr, top] Hook-up key path from otp to keymgr
======Full Message======
[keymgr, top] Hook-up key path from otp to keymgr

- Also modify keymgr to now take both key shares directly

Signed-off-by: Timothy Chen <timothytim@google.com>

[keymgr] Fix tb connections

Signed-off-by: Timothy Chen <timothytim@google.com>

[keymgr / otp] update default randoms

Signed-off-by: Timothy Chen <timothytim@google.com>



======Commit: 98c18f11======
======Short Message======
[dv] Fix Questa warning and remove unused var
======Full Message======
[dv] Fix Questa warning and remove unused var

Address Questa warning in #4377
Remove unused var in #4398

Signed-off-by: Weicai Yang <weicai@google.com>



======Commit: a23678e3======
======Short Message======
[ast] fixed nested pragmas
======Full Message======
[ast] fixed nested pragmas

Signed-off-by: Arnon Sharlin <arnon.sharlin@opentitan.org>



======Commit: c75c5a1b======
======Short Message======
[doc] Add alias for deprecated dashboard link
======Full Message======
[doc] Add alias for deprecated dashboard link

The current docs push does not delete files and with this an old version
of the dashboard is still visible.

As the link to this page is also present use an alias to redirect to the
correct page which shows the hardware dashboard.

Fixes lowrisc/opentitan#2634

Signed-off-by: Tobias Wölfel <tobias.woelfel@mailbox.org>



======Commit: e4191f58======
======Short Message======
[keymgr] Hook-up random compile time constants
======Full Message======
[keymgr] Hook-up random compile time constants

- minor fixes to scripts

Signed-off-by: Timothy Chen <timothytim@google.com>

[keymgr] fix copy/paste issue from util gen

Signed-off-by: Timothy Chen <timothytim@google.com>

[keymgr] fix assertion variables

Signed-off-by: Timothy Chen <timothytim@google.com>



======Commit: 68c311ae======
======Short Message======
[keymgr] bug fixes
======Full Message======
[keymgr] bug fixes

Address #4292

Signed-off-by: Timothy Chen <timothytim@google.com>



======Commit: 97c9ef6e======
======Short Message======
[otbn] Print PC as part of trace in standalone.py
======Full Message======
[otbn] Print PC as part of trace in standalone.py

This makes debugging things much easier.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 8f02cf7f======
======Short Message======
[sw, dif_plic] Add diagnostic message to one of the test cases
======Full Message======
[sw, dif_plic] Add diagnostic message to one of the test cases

The mismatch of in-test register array values with the
RV_PLIC_PARAM_NUMSRC, costed two enginners some debug time.

This change should help to identify the fault quicker.

Signed-off-by: Silvestrs Timofejevs <silvestrst@lowrisc.org>



======Commit: 221e9d38======
======Short Message======
[kmac] Revise to release MsgFIFO access when Idle
======Full Message======
[kmac] Revise to release MsgFIFO access when Idle

Problem:
    When Idle or KeyMgr is in operation (KDF), Sw access to MsgFIFO
    hangs the interconnect.

`kmac_keymgr` drops the `sw_ready_o` if `mux_sel` is not `SelSw`. The
mux is switched to the software when KeyMgr is not operating and the
software issues `CmdStart`.

In this case when the mux is not switched to the software, if the
software writes data into the Msg FIFO, the keymgr interface module
never asserts the ready. So, there's no way for software to release this
condition, as the software cannot issue CmdStart.

This commit is to fix the behavior by asserting the ready always. Then
it also creates an error code for this scenario so that the software
knows what it did wrong.

This is related to issue #4409

Signed-off-by: Eunchan Kim <eunchan@opentitan.org>



======Commit: 96a7ec25======
======Short Message======
[DVSim] Fix how sw_images is treated
======Full Message======
[DVSim] Fix how sw_images is treated

This change fixes the way sw_images is treated - it can now be set in
`build_modes`, `run_modes`, test specifications and 'bare' in the HJson
which will get it applied to all tests. Previously, it was not possible
to add it to build_modes. Also a bug prevented it from getting appended
properly across run_modes and test specifications.

Signed-off-by: Srikrishna Iyer <sriyer@google.com>



======Commit: f75bdf70======
======Short Message======
[DV common] Fixes in sim.mk for Verilator
======Full Message======
[DV common] Fixes in sim.mk for Verilator

This commit fixes two of the pre-build steps - copying tool sources and
SV filelist generation. Verilator build is invoked from within FuseSoC,
so the filelist generation is skipped. Also, Verilator does not have
additional tool sources that need to be copied over. This fixes the
sim.mk in preparation of adding Verilator support to DVSim.

Signed-off-by: Srikrishna Iyer <sriyer@google.com>



======Commit: 3cca442c======
======Short Message======
[dv, sw_test_status_if] Add sw_test_passed signal
======Full Message======
[dv, sw_test_status_if] Add sw_test_passed signal

This adds a `sw_test_passed` signal to make it easy for upstream
components to look it up to determine the final test pass / fail status
(for which the SW test status interface is one of the voters).

It also cleans up the intermediate SW test status values printed in hex
- earlier versions of Verilator did not support printing enum names in
string, which seems to have been fixed with 4.104.

Signed-off-by: Srikrishna Iyer <sriyer@google.com>



======Commit: 6c15f6f3======
======Short Message======
[keymgr] bug fixes
======Full Message======
[keymgr] bug fixes

address #4411 and #4417

Signed-off-by: Timothy Chen <timothytim@google.com>



======Commit: 6abbf733======
======Short Message======
[edn/rtl] fix for ascentlint lint
======Full Message======
[edn/rtl] fix for ascentlint lint

Signed-off-by: Mark Branstad <mark.branstad@wdc.com>



======Commit: 080cacc5======
======Short Message======
[dv/otp] Replace randc with a queue of used addr
======Full Message======
[dv/otp] Replace randc with a queue of used addr

Currently we use randc to try not having dump addresss for DAI write,
because duplicated addrs will cause DAI write error.
But everytime after mem_clear, we should be able clear all previous
written addresses. So randc does not provide much flexiblity.

This PR uses a used_addr_q two write down any DAI address that has
been written. The queue will be cleared upon every mem_clear. This will
give more flexibility on accessing address.

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: 8e674510======
======Short Message======
[dv/push-pull-agent] fix xcelium hanging issue
======Full Message======
[dv/push-pull-agent] fix xcelium hanging issue

In push-pull agent monitor, we set `valid_txn` to 1 and to 0
sequentially without any timing delay, then in a separate thread we are
looking for a negedge for `valid_txn`.
It works fine for VCS, but for xcelim, it could not detect the negedge.
This PR fix it by using the design signal req/ack instead of valid_txn

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: dc946521======
======Short Message======
[otbn] Fix trivial lint warnings
======Full Message======
[otbn] Fix trivial lint warnings

Fix some trivial lint warnings and style issues in OTBN:

* Line length
* ASSERT with semicolon at the end

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: fc13cabc======
======Short Message======
[otbn] Fix immediate for BN.LID/BN.SID
======Full Message======
[otbn] Fix immediate for BN.LID/BN.SID

Immediate bits in decoder for sign-extended offset from BN.LID and
BN.SID did not match encoding in ISA. Possibly due to an earlier
encoding change that failed to update the decoder.

Signed-off-by: Greg Chadwick <gac@lowrisc.org>



======Commit: 1a10750e======
======Short Message======
[entropy_src/rtl] asserts expanded
======Full Message======
[entropy_src/rtl] asserts expanded

Fixed up asserts by adding the include statement.
Regenerated the reg package since it was out of date.

Signed-off-by: Mark Branstad <mark.branstad@wdc.com>



======Commit: fe45898e======
======Short Message======
[csrng/rtl] fix assentlint errors
======Full Message======
[csrng/rtl] fix assentlint errors

Also adding a tag to not check a status register.
Removed the 0 from the assert names.

Signed-off-by: Mark Branstad <mark.branstad@wdc.com>



======Commit: faf057e5======
======Short Message======
[dv/otp] Support SW partition write lock (write digest)
======Full Message======
[dv/otp] Support SW partition write lock (write digest)

This PR has two main changes:
1. Update function `is_secret`. Current is_secret function returns 1
when it is NOT secret partition. This logic is not correct and this PR
fixed it.
2. Support lock SW partitions by using DAI to write digest. Because the
digest check is depend on SW (OTP won't check if the digest is correct),
this PR writes random data to SW partition digests.
Also there is an issue related to this PR #4363, so in this PR, scb only
checks digest_0 for sw partitions.

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: 46e01b59======
======Short Message======
[prim_arbiter_ppc] Fix lint error
======Full Message======
[prim_arbiter_ppc] Fix lint error

Fix lint error reported by AscentLint:

```
E   SIGNED_RANGE:   prim_arbiter_ppc.sv:123   Part select of signed signal 'i[IdxW - 1:0]' encountered                 New
```

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: 41fd2b00======
======Short Message======
[otbn] Remove "err" interrupt
======Full Message======
[otbn] Remove "err" interrupt

We're going to consolidate these interrupts, so the only one is the
"done" interrupt. To spot errors, the host software can use the
ERR_CODE status register.

This patch looks big because of auto-generated code, but the only manual
changes to hardware are:

  - otbn.hjson: Remove the interrupt

  - otbn.sv:    Remove the interrupt and tidy up the error code logic

  - tb.sv:      Remove a top-level connection

The manual changes to software are also small: although we've now just
got one interrupt type, the DIF style is to keep an explicit index, so
all we really do is remove an entry from the enum. There's also a
manually entered count of interrupts in dif_plic.c which needs
updating.

In software test code, we remove various entries from
dif_otbn_unittest.cc. The interrupt tests try the first and last
interrupts, which doesn't make sense when there's just one, so this
patch removes the "last" part each time. Finally, we have to change an
interrupt count in dif_plic_unittest.cc.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 4b41116e======
======Short Message======
[sw, rom_ext] Minor grammatical fixes in descriptions
======Full Message======
[sw, rom_ext] Minor grammatical fixes in descriptions

Signed-off-by: Silvestrs Timofejevs <silvestrst@lowrisc.org>



======Commit: 7502de2a======
======Short Message======
[aes/dv] changed error_types/cfg_error_type to struct for clearity
======Full Message======
[aes/dv] changed error_types/cfg_error_type to struct for clearity

Signed-off-by: Rasmus Madsen <rasmus.madsen@wdc.com>



======Commit: 5e62ebcc======
======Short Message======
[reggen] Fix hw2reg_t bit index comments in reg_pkg.sv.tpl
======Full Message======
[reggen] Fix hw2reg_t bit index comments in reg_pkg.sv.tpl

The iteration logic wasn't quite right (it was using inconsistent
bittype arguments in calls to Reg.get_n_bits). This patch fixes that,
and also makes the template code a bit simpler to read.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 40cd9149======
======Short Message======
[otbn] Conflate correctable/uncorrectable ECC errors
======Full Message======
[otbn] Conflate correctable/uncorrectable ECC errors

We're treating both as a disaster, so there's no need to keep them
separate. Also qualify the alert signal with imem_rvalid or
dmem_rvalid - the error is only meaningful when the result is valid.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 84e76f94======
======Short Message======
[otp_ctrl] fix part_unbuf otp_size_o selection
======Full Message======
[otp_ctrl] fix part_unbuf otp_size_o selection

As Michael suggested in issue #4381, this PR implemented the fix for
otp_size_o when SW partition uses DAI to write digest.

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: 813d6895======
======Short Message======
[dvsim] run yapf to fix style
======Full Message======
[dvsim] run yapf to fix style

Signed-off-by: Weicai Yang <weicai@google.com>



======Commit: 03ab58e4======
======Short Message======
[lc_ctrl] Minor fixes in documentation and lc_ctrl interface
======Full Message======
[lc_ctrl] Minor fixes in documentation and lc_ctrl interface

In particular, this makes the following updates:
- Update the documentation to reflect that the LC_PROVISION signal is
now split into LC_PROVISION_WR_EN and LC_PROVISION_RD_EN.
- Update the life cycle signals table and add new signals that where
missing.
- Put a link into the life cycle architecture document that points to
the life cycle controller technical specification

Signed-off-by: Michael Schaffner <msf@opentitan.org>



======Commit: a6032fc3======
======Short Message======
[dv] Fix tl_err due to no unmapped address
======Full Message======
[dv] Fix tl_err due to no unmapped address

Address #4317
Signed-off-by: Weicai Yang <weicai@google.com>



======Commit: 23b88205======
======Short Message======
[otbn] Fix how we run meson
======Full Message======
[otbn] Fix how we run meson

We probably shouldn't be running it at all (tracked in issue #4326),
but we definitely don't want to run it once per test(!). Also, fix the
BUILD_ROOT override to work properly, and pass the resulting object
directory to gen-binaries.py.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: cc990620======
======Short Message======
[csrng/rtl] fix for csrng smoke test
======Full Message======
[csrng/rtl] fix for csrng smoke test

Signed-off-by: Mark Branstad <mark.branstad@wdc.com>



======Commit: fa1660ed======
======Short Message======
[otp_ctrl] Fix warnings from VCS
======Full Message======
[otp_ctrl] Fix warnings from VCS

Fix two warnings from VCS:

1. In tb.sv assigned a wire[3:0] variable to an enum.
   Fix this by directly declare the variable using enum type.
2. In prim_lc_sync.sv design assigned a variable to enum without
casting.
   Fix this by adding a cast statement.

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: acd1795f======
======Short Message======
[lc] fix decode state_invalid_error
======Full Message======
[lc] fix decode state_invalid_error

In LC_state_decode, the logic for invalid error has some minor issue:
The code is trying to set state_invalid_error if state_i is not
RawState, and cnt_i is 0.

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: 155579bd======
======Short Message======
[kmac] Fix lint errors
======Full Message======
[kmac] Fix lint errors

Fixed lint errors (not all) for ascentlint tool.

Added two lint waivers for enum int error, which are used as constants
in the design.

Signed-off-by: Eunchan Kim <eunchan@opentitan.org>



======Commit: ff80736b======
======Short Message======
[top_earlgrey/rtl] adding csrng and edn blocks
======Full Message======
[top_earlgrey/rtl] adding csrng and edn blocks

Most connections for entropy complex blocks add been made.
Added csrng and edn to the lint list, plus the verilator files.
Amended a typo in csrng.hjson.
Regenerated the top_earlgrey verilog file.
Fixed the default statements to entropy_src and csrng packages.
Fixed the edn hjson file and rerun make.
Added and adjusted multibit statement in csrng.core.
Fixed entropy_src ports to match in the hjson file.
Removed unneeded xbar connections in top_earlgrey hjson file.
Restricted csrng_cmd to only one i/f since ENV does not support more.
Changed csrng and edn hjson and rtl core files to get chip reg test to pass.
Removed CI whitespace on hjson files.
Added cntl and status tags to edn.hjson to prevent hw actions during reg testing.
Added alert connection to entropy_src because dv alert class needs a fix.
Removed executable permissions on various files.
Removed TODOs because support for multiple block instance support for dv was added.
Updated the memory map for the main xbar for edn0, edn1, and some reserved space.

Signed-off-by: Mark Branstad <mark.branstad@wdc.com>



======Commit: 6562f986======
======Short Message======
[otbn] Add DIF functions to documentation
======Full Message======
[otbn] Add DIF functions to documentation

Fixes #3184

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: 5f3e97b5======
======Short Message======
[otbn] Update multiply examples in documentation
======Full Message======
[otbn] Update multiply examples in documentation

This removes the confusing references to the non-existent BN.MULH
instruction.

Fixes #2877

Signed-off-by: Greg Chadwick <gac@lowrisc.org>



======Commit: e0668cfb======
======Short Message======
[dv/alert_handler] fix alert_handler regression failure
======Full Message======
[dv/alert_handler] fix alert_handler regression failure

Fix alert_handler regression failure due to a typo between `=|` and
`|=`.
Also update the code to use `get_dv_base_reg_by_name` instead of
`get_reg_by_name`

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: 35eabaa9======
======Short Message======
[lc_ctrl] Fix transition command error checking
======Full Message======
[lc_ctrl] Fix transition command error checking

Signed-off-by: Michael Schaffner <msf@opentitan.org>



======Commit: 24ab6ca6======
======Short Message======
[rtl/lc] Fix assertion typo
======Full Message======
[rtl/lc] Fix assertion typo

This PR fixes an assertion typo of a signal name mismatch.

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: 2de46f6d======
======Short Message======
[entropy_src/rtl] fixes to address issue #3511
======Full Message======
[entropy_src/rtl] fixes to address issue #3511

Added ERR_CODE register and supporting logic.
General style cleanup.
Doc signal typo fixed.

Signed-off-by: Mark Branstad <mark.branstad@wdc.com>



======Commit: a6670365======
======Short Message======
[dv] Fix python styles
======Full Message======
[dv] Fix python styles

Signed-off-by: Weicai Yang <weicai@google.com>



======Commit: a2c05e77======
======Short Message======
[otbn] Simplify bn.wsrrs/bn.wsrrw to just bn.wsrr/bn.wsrw
======Full Message======
[otbn] Simplify bn.wsrrs/bn.wsrrw to just bn.wsrr/bn.wsrw

We've decided that our wide side doesn't need the full "bit set" and
"bit clear" functionality that RV32I defines (csrrs/csrrw) and we
initially copied across.

Instead, we're going to use simpler instructions, which are
essentially "read WSR" and "write WSR".

This commit updates the documentation, ISS, RTL and smoke test
accordingly.

Fixes #3374, fixes #3338

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>
Signed-off-by: Greg Chadwick <gac@lowrisc.org>



======Commit: 8e01602d======
======Short Message======
[otbn] Allow mulqacc to set flags
======Full Message======
[otbn] Allow mulqacc to set flags

The bn.mulqacc.wo and bn.mulqacc.so instructions now set M, L and Z
flags in a specified flag group. We needed a little bit of shuffling
in the encoding to make this fit.

The changes are as follows:

 - There's now a flag group field at bit 31 (the same as other
   instructions that take a flag group)

 - The "wb" field, which chooses between the three writeback modes,
   has moved from bits 31-30 to bits 30-29 and has been split into two
   parts: "so" and "wb0". "so" is just set for bn.mulqacc.so (just like
   the top bit of "wb"). If "so" is not set, then "wb0" selects
   between bn.mulqacc and bn.mulqacc.wo. If "so" is set, "wb0" selects
   the destination halfword.

This commit includes all ISS, RTL and specification changes required to
implement the above.

Fixes #2979

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>
Signed-off-by: Greg Chadwick <gac@lowrisc.org>



======Commit: de5efa04======
======Short Message======
[dvsim] Replace `sw_test` with `sw_images`
======Full Message======
[dvsim] Replace `sw_test` with `sw_images`

This change is part 1/4 commit series that updates the way SW tests are
build for chip level. For the chip level SW tests to pass, all 4 commits
are needed.

This change reduces dependency on DVSim to process how SW images for
each tests are set and built. The goal is to be able to supply an
arbitrary list of images to build, rather than assuming a fixes set (ROM
and SW test). The need for this change arose from one more addition -
OTBN that requires an image to be built. The processing is now handled
by `sim.mk` and testbench code. All SW build steps (specific to DV) are
integrated into meson.

Signed-off-by: Srikrishna Iyer <sriyer@google.com>



======Commit: ebe4e36b======
======Short Message======
[usbdev] Fixes for pin config sims to pass
======Full Message======
[usbdev] Fixes for pin config sims to pass

Fix issues simulating usbdev with script in top_earlgrey/util

- Bug introduced in latest iomux changes in single-end flipping

- usbdpi fake phy not reflecting true line state when device driving
  This caused the rx to see SE0 when in differential mode thus reset

- Added check to usbdev_linkstate not to detect SE0 when driving
  Makes robust against different PHY behaviour, discussed in PR

- Final !!! output has moved because program timing changes
  If the code misses push at frame 0x11 it skips to 0x21

- Line number changes in expected output

- Expected output renamed without .log to avoid gitignore

Signed-off-by: Mark Hayter <mark.hayter@gmail.com>



======Commit: dbd655a3======
======Short Message======
[otbn] Add separate FG0 & FG1 CSRs
======Full Message======
[otbn] Add separate FG0 & FG1 CSRs

Fixes #3693

Signed-off-by: Greg Chadwick <gac@lowrisc.org>



======Commit: da493599======
======Short Message======
[dv] two small fix in dv
======Full Message======
[dv] two small fix in dv

1. Fix core file generate template comments: using `#` instead of `//`.
2. Enable OTP_CTRL dv testplan display.

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: 0789ce42======
======Short Message======
[otbn] Fix circular dependency in gen-binaries.py
======Full Message======
[otbn] Fix circular dependency in gen-binaries.py

Intriguingly, if you just run "ninja" on the result (without
specifying smoke.elf as the target), it silently skips the rule. Huh?!

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 98b11361======
======Short Message======
[dv/otp_ctrl] fix mem_walk uvm_not_ok error
======Full Message======
[dv/otp_ctrl] fix mem_walk uvm_not_ok error

In test_access mem_walk automation sequence, there are regression errors
saying UVM_STATUS is not okay.

This is because the testbench trying to read/write test_access memory
the same cycle as `lc_dft_en` is set to `ON`. However, the `lc_dft_en`
needs one clock cycle to update the FSM state register.

So the fix here adds some delay after drive `lc_dft_en` pin.

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: 2b5b780e======
======Short Message======
[dv/top] fix same_csr_outstanding timeout issue
======Full Message======
[dv/top] fix same_csr_outstanding timeout issue

In current nightly regression, the `chip_same_csr_outstanding` has
timeout issue. The reason is because that looping through each csr
within the chip, we issue a reset to make sure current csr value does
not affect others.
However, chip level dut_init takes a long time, thus caused the timeout.
The solution here is to: only issue reset after each iteration, or after
written enable_register.(same_csr_outstanding_access uses tl_access to
read and write rather than UVM build-in RAL method. So it could not
automatically predict enable-regs' behavior)

This PR also removes a little bit redundant logic from the sequence

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: 64566b82======
======Short Message======
[dv/common] Fix deadloop when reset occurs
======Full Message======
[dv/common] Fix deadloop when reset occurs

There was a deadloop in the auto-response device seq and driver when
reset occurs
Signed-off-by: Weicai Yang <weicai@google.com>



======Commit: 9ff31891======
======Short Message======
[dv/alert_handler] support alert_class overflows into two registers
======Full Message======
[dv/alert_handler] support alert_class overflows into two registers

This is a temp fix for PR #4211 to pass private CI. The issue is by
adding one more alert (16 to 17 alerts), the `alert_class` register
overflows into `alert_class_0` and `alert_class_1` registers.

Next step I will make a generic function for this multi-reg overflow
issue.

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: 18cb5e29======
======Short Message======
[otbn] Teach ISS to generate errors on call stack under/overflow
======Full Message======
[otbn] Teach ISS to generate errors on call stack under/overflow

This is a reasonably large patch because the ISS didn't do any
handling of architectural errors before. We now define a special
exception type (Alert) in the Python and raise it if something goes
wrong. If that happens, it gets caught in OTBNSim.step(), which tells
the state to throw away any changes that were in flight and then to
come to a screeching halt.

The commit also comes with two simple ISS tests, to check that we stop
properly on underflow or overflow. Since the RTL doesn't support this
yet, we'll get mismatches for code that triggers the error (but
hopefully we don't actually have any such code in our testing at the
moment).

Finally, we add the new enum item to the DIF.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 0673ae16======
======Short Message======
[otbn] Improve documentation of call stack and GPRs in general
======Full Message======
[otbn] Improve documentation of call stack and GPRs in general

I've got rid of the table, because I think it makes things harder to
understand. The call stack behaviour is now described carefully in the
GPRs section (before, it was rather duplicated), with links to the
"how to call and return" information in JAL/JALR.

This commit removes the note that GPRs and WDRs are separate register
files. I think this is pretty clear from the rest of the document, and
there's already a note in the previous paragraph to show which
instructions operate on which registers.

Finally, this commit registers a new named error code for call stack
errors in the otbn.hjson and otbn_pkg.sv and refers to the name in the
documentation.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 9b297c5d======
======Short Message======
[otbn] Trivial rejig in sim.py
======Full Message======
[otbn] Trivial rejig in sim.py

No functional change (insn is None iff was_stalled is True), but this
silences a mypy error, caused by the fact that mypy doesn't know insn
is Non-none if was_stalled is False.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: b519d80d======
======Short Message======
[dv/common] Minor improvement for common drivers
======Full Message======
[dv/common] Minor improvement for common drivers

1. tl_host_driver, the logic here is a little bit inefficient:
```
        forever begin
          seq_item_port.try_next_item(req);
          if (req != null) begin
            send_a_channel_request(req);
          end else begin
            // avoid zero delay loop and always align with clock edge to send item
            if (reset_asserted) #1ns;
            `DV_SPINWAIT_EXIT(@(cfg.vif.host_cb);,
                              wait(reset_asserted);)
          end
        end
```
If under reset, then the else statement basically checks every 1ns until
reset_deasserted. It would be much more efficient if just replace the if
statement with a wait reset done. (Thanks @weicai for the suggestion)

2. alert_receiver_base_seq:
Current alert_receiver driver does not support sig_int_error. So I added
a temp constraint here in base sequence.

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: d2c9ff49======
======Short Message======
[flash_ctrl] update prim flash interface
======Full Message======
[flash_ctrl] update prim flash interface

- The prim flash interface now contains multiple flash banks
- This enables re-use of the test interface during production
- DV / other rtl tops are updated as a part of this

Signed-off-by: Timothy Chen <timothytim@google.com>

[top] Forgot to run clang-format

Signed-off-by: Timothy Chen <timothytim@google.com>

[top] fix verilator typos

Signed-off-by: Timothy Chen <timothytim@google.com>

[flash_ctrl] remove comments

Signed-off-by: Timothy Chen <timothytim@google.com>



======Commit: 9c14933c======
======Short Message======
[otbn] Fix size check in operand.py
======Full Message======
[otbn] Fix size check in operand.py

The lo/hi range is for the value of the operand before it gets shifted
down, so should be compared with offset_val, rather than the shifted
value (called "shifted").

Getting this wrong meant we crashed into an assertion a few lines
later: hooray for belt-and-braces programming!

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: d2a16f95======
======Short Message======
[otbn] Fix output writing with `otbn-rig gen`
======Full Message======
[otbn] Fix output writing with `otbn-rig gen`

otbn-rig gen wrote different data to stdout as it did write to an output
file. Fix that.

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: 02f9c508======
======Short Message======
[otbn] Require a command in otbn-rig
======Full Message======
[otbn] Require a command in otbn-rig

Calling `otbn-rig` without any additional argument resulted in an
exception, now it gives a nice error/help message.

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: 5d9c25fd======
======Short Message======
[otbn] Use VerilatorSimCtrl::Exec in otbn_top_sim
======Full Message======
[otbn] Use VerilatorSimCtrl::Exec in otbn_top_sim

Previously the body of `Exec` was effectively being done in `main`.
However it didn't deal with error codes correctly so the simulation
would start even if it should exit with an error code instead.

Signed-off-by: Greg Chadwick <gac@lowrisc.org>



======Commit: 18a09cbe======
======Short Message======
[otbn] Introduce tracer for RTL
======Full Message======
[otbn] Introduce tracer for RTL

This adds a tracer module and interface. Both the module and interface
should be bound into a top-level instantiation of otbn_core with the
interface instance passed to the module. The tracer collects records
using the trace interface to gather relevant information and passes it
to the simulation via a DPI call.

The new tracer setup is added to the OTBN standalone verilator
simulation. An optional log file (via --trace-log-file) can be specified
which causes the trace to be output there.

Fixes #2624

Signed-off-by: Greg Chadwick <gac@lowrisc.org>



======Commit: e8ade050======
======Short Message======
Update to Verilator 4.104
======Full Message======
Update to Verilator 4.104

This gives use one fix when using chandle data types, proposed by
Rupert, and now included in upstream Verilator.

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: 2bfb6ccf======
======Short Message======
Update to Verilator 4.102
======Full Message======
Update to Verilator 4.102

Require Verilator 4.102 (over 4.040) to fix a bug we encounter in OTBN
tracing code.

Besides the typical set of bug fixes and improvements we don't expect
any visible change to existing testbenches.

Note that this version of Verilator now requires a C++11-capable
compiler on the host; this is not a new requirement for OpenTitan users,
as we had such a host compiler requirement for a while now and building,
e.g. spiflash, requires even newer C++ features.

Fixes #4170

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: 98333ba4======
======Short Message======
[toolchain] Added `--dest-dir` switch
======Full Message======
[toolchain] Added `--dest-dir` switch

- Changed `--target-dir` to `--install-dir`
  - Updated references in other files.
- Added `--dest-dir` switch to allow a staged installation
- Added `--latest-available-version` switch to return the latest version
  - This will be used to construct the `--install-dir` path when
  performing the staged installation.
- Fixes #4219
Signed-off-by: Srikrishna Iyer <sriyer@google.com>



======Commit: f807f9df======
======Short Message======
[dv common] Wave dumping improvements / fix
======Full Message======
[dv common] Wave dumping improvements / fix

The original scope of this change was to fix the broken FSDB dumping
with Xcelium. I eventually ended up adding some more improvements to it.

- Got rid of the extra `--dump` switch in `dvsim`.
The existing `--waves` is update to accept one optional argument. If no
argument is specified, then it picks up whatever is the tool default.
Else, the user can set the preferred dumping format like this: `--waves
vpd`.

- Moved the suppprted tool-specific wave formats to HJson. This is
helpful when adding support for a new simulator (no need to poke around
the source code to figure out what needs to be done to get wave dump
supported).

- Added ability for the user to override the default run scripts (User
can override `run_script` HJson variable to supply a different file,
other than `<tool>.tcl`. They can set `skip_run` to take full control of
the simulation flow, or set `dump_tb_top` to 0 to add custom set of
hierarchies for dumping waves.

- Simulator run script (tcl) updates:
  - Added `common.tcl` for common (global) variables and procedures.
  - Added `wavedumpScope` proc - user can use this to dump custom
  scopes rather than the full testbench.
  - Added support for vcd and evcd dump formats (not expected to be
  used, but its there).
  - Fixed FSDB dumping for Xcelium (required 'call' to be added before
  `fsdbDump*` commands).

Signed-off-by: Srikrishna Iyer <sriyer@google.com>



======Commit: e9879cac======
======Short Message======
[dv] Fix for `--run-only` switch
======Full Message======
[dv] Fix for `--run-only` switch

This change fixes the `--run-only` switch when waves are enabled, and
the simulation executable does not need to be rebuilt. It adds the
`copy-tool-sources' step as a dependency to the `run` target as well
(and an associated fix in Deploy.py).

Signed-off-by: Srikrishna Iyer <sriyer@google.com>



======Commit: 7af51184======
======Short Message======
[otbn] Fix RIG logic for picking immediate operands
======Full Message======
[otbn] Fix RIG logic for picking immediate operands

This wasn't taking account of the operand shift.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 88e1ea61======
======Short Message======
[otbn] Fix shift syntax for bignum operations
======Full Message======
[otbn] Fix shift syntax for bignum operations

We want things like:

    bn.not w17, w2 >> 30B, FG1

but the syntax was actually asking for things like:

    bn.not w17, w2, >> 30B, FG1

with an extra comma.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: d1627648======
======Short Message======
[otbn] Fix bugs when marking memory known in rig model.py
======Full Message======
[otbn] Fix bugs when marking memory known in rig model.py

There were two bugs here. The first was a stupid variable shadowing
problem (the code used 'idx' for the byte address to touch and also
for the index of the range in the for loop). Since there's no real
reason to call an address "idx", I've renamed it to "addr".

The second bug was in the definition of "left", which is supposed to
be all elements up to (but not including) index last_idx_below. This
had an off-by-one error because I'd thought foo[a:b] included the
entry at b, rather than stopping one before.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: e5860874======
======Short Message======
[keymgr/dv] Fix keymgr regression failures
======Full Message======
[keymgr/dv] Fix keymgr regression failures

1. Move csr program to keymgr_init to fix CSR failure
2. comment out stress test
3. minor enhancement on keymgr_op_at_wipe_state_vseq
Signed-off-by: Weicai Yang <weicai@google.com>



======Commit: 33e387ff======
======Short Message======
[csrng/rtl] Split cmd_sts into two registers
======Full Message======
[csrng/rtl] Split cmd_sts into two registers

Fixed general style issues and operator use.
Fixed type in doc.
Amended to remove the cmd_ack register since the status bit does the same function.

Signed-off-by: Mark Branstad <mark.branstad@wdc.com>



======Commit: 25f1b51d======
======Short Message======
[dv] Fix VCS compile error
======Full Message======
[dv] Fix VCS compile error

Change build opt CFLAGS from `--std=c99 to `--std=c++11`

Signed-off-by: Weicai Yang <weicai@google.com>



======Commit: 5e5ddb3e======
======Short Message======
[sparse-fsm-encode] Switch to Safe Rust Encoding
======Full Message======
[sparse-fsm-encode] Switch to Safe Rust Encoding

In Rust, unlike C, enum values which are not a named variant's value
cause undefined behaviour. This means they cannot be treated like an
integer, like they might be in C.

We use these sparse encodings with the understanding that the code may
see any possible encoding value, but only certain values are defined to
have specific behaviour (and all other values cause errors).

We need to not trigger undefined behaviour in our code, so we choose a
more manual type representation for these Rust enums, which uses the
`newtype` struct, and named constants.

Signed-off-by: Sam Elliott <selliott@lowrisc.org>



======Commit: b3346f84======
======Short Message======
[sparse-fsm-encode] Disallow Complementary Encodings
======Full Message======
[sparse-fsm-encode] Disallow Complementary Encodings

In software, it is usual to check that a queried state is equal to the
expected state, and also that the complement of the queried state also
equals the complement of the expected state, like so:

  if (read_current_state() == VALID) {
    if (~read_current_state() == ~VALID) {
      // Only in this block should it be assumed that `current_state`
      // is actually `VALID`.
    }
  }

With this in mind, we want to avoid producing state encodings where one
state is the complement of any other state. This helps avoid confusing
states in this kind of check (programmer error), and also helps to avoid
security issues.

This check may make it difficult to produce state encodings with higher
inter-state hamming distances.

Signed-off-by: Sam Elliott <selliott@lowrisc.org>



======Commit: 213d87cd======
======Short Message======
[otp_ctrl/rtl] digest calculation fix
======Full Message======
[otp_ctrl/rtl] digest calculation fix

According to issue #4199, this PR implemented fix suggested by Michael.
1. A typo in scrmbl_data_o assigment that causes the digest calculation
to load incorrect input.
2. Disable counter when padding the zeros to the last digest
calculation.
3. Reset the counter once the calculation ended

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: dc7e9f80======
======Short Message======
[sw/rom_ext] Add manifest.h to dependency sources
======Full Message======
[sw/rom_ext] Add manifest.h to dependency sources

`sw/device/lib/rom_exts.h` is used in both the header and the
implementation of the ROM_EXT Manifest parser. In this case, we need to
declare that the generated manifest.h is also a dependency of any
libraries that depend on the parser, not just of the parser itself, as
any dependencies will use the library's header, which uses manifest.h.

This solves an intermitent build error we've been seeing with
manifest.h.

Signed-off-by: Sam Elliott <selliott@lowrisc.org>



======Commit: 6114dc08======
======Short Message======
[prim/util] Fix parameter type when using prefixes
======Full Message======
[prim/util] Fix parameter type when using prefixes

Previously, the optional prefix was used for the type definition only but
not when instantiating a parameter of this type. This caused compilation
errors.

Also, instead of `localparam` the utility now generates `parameters`.
In accordance with our style guide, this is the preferred choice as in most
cases these snippets end up in package files.

Signed-off-by: Pirmin Vogel <vogelpi@lowrisc.org>



======Commit: 5101724e======
======Short Message======
[otbn] Wrap OTBN model with definition
======Full Message======
[otbn] Wrap OTBN model with definition

This commit is related to #4144

otbn_model is in the dependency list in otbn.core. The model file is not
synthesizable but due to the dependency, it is included in the syn
filelist. The synthesis fails at the analyze stage.

This commit is to fix the error by wrapping otbn_core_model.sv with
`OTBN_BUILD_MODEL`.

Signed-off-by: Eunchan Kim <eunchan@opentitan.org>



======Commit: b4ca6646======
======Short Message======
[keymgr/prim_lfsr] Correct minor errors in core files
======Full Message======
[keymgr/prim_lfsr] Correct minor errors in core files

Signed-off-by: Michael Schaffner <msf@opentitan.org>



======Commit: b6acfab1======
======Short Message======
[edn/rtl] non-auto gen rtl added
======Full Message======
[edn/rtl] non-auto gen rtl added

Added the rest of the base rtl files.
Split the SW_CMD_STS into two registers.
Updated the topology drawing.
Amended review feedback.
Amended by removing the CMD_ACK register.
Amended to have fixed EDN bus sizes of 32 bits.
Amended more review feedback to remove csrng_pkg.

Signed-off-by: Mark Branstad <mark.branstad@wdc.com>



======Commit: 8a48d54c======
======Short Message======
[otbn] Fix comment in smoke_test.s
======Full Message======
[otbn] Fix comment in smoke_test.s

Signed-off-by: Greg Chadwick <gac@lowrisc.org>



======Commit: 73cd46c3======
======Short Message======
[otbn] Fix flag enables in otbn_alu_bignum
======Full Message======
[otbn] Fix flag enables in otbn_alu_bignum

`adder_update_flags_en` and `logic_update_flags_en` only had meaning if
`flag_en` in `operation_i` was set. However the `flags_d` mux was
implemented via a `unique case (1'b1)` statement that doesn't take this
into account violating the `unique`.

This introduces `adder_update_flags_en_raw` and
`logic_update_flags_en_raw` which then have `flag_en` factored in to
produce the actual flag enable signals.

Fixes #4168

Signed-off-by: Greg Chadwick <gac@lowrisc.org>



======Commit: 7f8cc8e7======
======Short Message======
[top] Add power attribute to the design
======Full Message======
[top] Add power attribute to the design

- split reset manager outputs into always-on and non-always-on
- add domain attribute to modules, memories and xbars
- do appropriate checks for power domain
- create appropriate top level paths when referencing reset

Signed-off-by: Timothy Chen <timothytim@google.com>

[util] typo fixes

Signed-off-by: Timothy Chen <timothytim@google.com>

[top] updates to tie off unused resets

Signed-off-by: Timothy Chen <timothytim@google.com>

[util] minor cleanup

Signed-off-by: Timothy Chen <timothytim@google.com>



======Commit: 8d38646c======
======Short Message======
[prim] update prim flash to have ack / done support
======Full Message======
[prim] update prim flash to have ack / done support

Signed-off-by: Timothy Chen <timothytim@google.com>

[prim] enumeration fix

Signed-off-by: Timothy Chen <timothytim@google.com>

[prim] operator consistency

Signed-off-by: Timothy Chen <timothytim@google.com>



======Commit: 4a97f3ba======
======Short Message======
[keymgr] Minor keymgr fixes
======Full Message======
[keymgr] Minor keymgr fixes

- Obey valid/ready handshake even during error case when sending random data
- Re-organize each module to contain its own lfsr_en

Signed-off-by: Timothy Chen <timothytim@google.com>



======Commit: 9b113e5b======
======Short Message======
[flash_ctrl] Add support for program resolution in flash
======Full Message======
[flash_ctrl] Add support for program resolution in flash

Signed-off-by: Timothy Chen <timothytim@google.com>

[flash_ctrl] Add program resolution check

Signed-off-by: Timothy Chen <timothytim@google.com>

[flash_ctrl] fix doc typos

Signed-off-by: Timothy Chen <timothytim@google.com>



======Commit: cd9224e6======
======Short Message======
[docs] Fix comment about clang-format version
======Full Message======
[docs] Fix comment about clang-format version

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: 49ebda43======
======Short Message======
[reggen] Minor tidy-ups in gen_dv.py
======Full Message======
[reggen] Minor tidy-ups in gen_dv.py

No functional change, but fix flake8 warnings, move comments above
functions into docstrings, and make gen_ral a bit easier to read.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 586b93f6======
======Short Message======
[regtool] Tidy up output dir / file selection
======Full Message======
[regtool] Tidy up output dir / file selection

This checks that we don't specify both the output file and the output
directory, and also checks that we don't specify an output file for a
format that expects an output directory or vice versa. Finally, it
slightly improves an error message and removes some repeated code.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: b8e71d3d======
======Short Message======
[regtool] Tidy up how we pick target format
======Full Message======
[regtool] Tidy up how we pick target format

Now we'll print an error and abort if the user specifies more than one
output format, which is probably a better behaviour than picking the
one that happened to appear first in the list.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 220de307======
======Short Message======
[flash_ctrl] Fix the way data forwarding is handled.
======Full Message======
[flash_ctrl] Fix the way data forwarding is handled.

- When nothing in the pipeline, forward data
- When something is in the pipeline, look at the registered results

Signed-off-by: Timothy Chen <timothytim@google.com>



======Commit: 986990c3======
======Short Message======
[otbn] Fix otbnsim bitwise operations with signed immediates
======Full Message======
[otbn] Fix otbnsim bitwise operations with signed immediates

In Python, XOR'ing a signed number gives a signed number (inheriting
semantics from C). We store unsigned values in our registers in
otbnsim, so we need to convert the signed immediate into a u32 before
doing the bitwise operation.

Before this change, we hit assertions when performing bitwise
operations with negative immediates. After the change, we'll see trace
lines like this:

    xori         x10, x0, -728          | [x10 = 0xfffffd28]

(incidentally, this is the right interpretation - the RISC-V ISA
specifies that these signed immediates are sign-extended).

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 0f7d76c1======
======Short Message======
[dv/alert_esc_agent] Corner case timing alignment
======Full Message======
[dv/alert_esc_agent] Corner case timing alignment

This PR fixes corner case related to alert_esc_agent timing:
1. If alert_p/n and ping_p/n triggers at the same clock cycle, the
alert_p/n is considered ping response rather than independent alerts.
2. In esc_driver, is_ping is determined one clock cycle after esc_p/n is
being reset (because ping response is only one clock cycle long). So the
code has to wait one clock cycle to ensure is_ping is set.
3. Move the wait clcok before drive int_err to avoid reset confilict.

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: 508e0f68======
======Short Message======
[fpv] fix regen regression failure
======Full Message======
[fpv] fix regen regression failure

FPV regression found corner case where regen signal was updated during
TLUL write's data phase. Current assertion check regen at data phase,
but design check it during address phase.
This PR fix the assertion issue by split it into two assertions:
1. If regen is enabled, then check wr data is updated
2. If regen is not enabled, check wr data is stable

W1C register is still WIP with a TODO because they might be updated by
internal HW regs. I will clean them up together in a separate PR.

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: 207b1a67======
======Short Message======
[usbdev] ISO endpoint fixes, add out_err interrupt
======Full Message======
[usbdev] ISO endpoint fixes, add out_err interrupt

Signed-off-by: Stefan Lippuner <lstefan@iis.ee.ethz.ch>



======Commit: 52fce157======
======Short Message======
[systemtest] Fix timeout handling in find_in_uart0()
======Full Message======
[systemtest] Fix timeout handling in find_in_uart0()

The timeout never triggered in the test_sim_verilator.find_in_uart0()
function due to an optimization which is no longer useful: only every
100 lines we tried to check the timeout. This worked fine when reading
log files (where the function originally came from), but isn't working
well any more. Besides, the implementation was broken and the counter
could never increment properly.

Also follow up on a refactoring made a couple days ago, where
find_in_files() now can return a subprocess.TimeoutException, which
needs to be handled downstream.

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: 3fc9e27d======
======Short Message======
[systemtest] Fix yapf errors
======Full Message======
[systemtest] Fix yapf errors

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: 9e6f99a0======
======Short Message======
[otbn] Rename otbn_sanity to otbn_single
======Full Message======
[otbn] Rename otbn_sanity to otbn_single

This is slightly prompted by the ongoing sanity -> smoke rename, but
things are a little more complicated here because the sequence that
was called otbn_sanity is actually a bit more involved than the smoke
test we're going to end up with.

So this patch renames it to the correct eventual name. I'll follow up
with another commit to define the smoke test properly.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 0ae0f2bf======
======Short Message======
[doc] Fix Sentence/Line Breaks
======Full Message======
[doc] Fix Sentence/Line Breaks

Signed-off-by: Sam Elliott <selliott@lowrisc.org>



======Commit: 1901c3d7======
======Short Message======
Update lowrisc_misc-linters to lowRISC/misc-linters@5c93cb0
======Full Message======
Update lowrisc_misc-linters to lowRISC/misc-linters@5c93cb0

Update code from upstream repository https://github.com/lowRISC/misc-
linters.git to revision 5c93cb0fe96c954ed02c4f6e1fdcadc4ce62b1c9

* Fix line over 100 chars (weicaiyang)
* Update import order to pass isort (weicaiyang)
* Update licence-checker for .cfg and .cfg.tpl files (weicaiyang)
* [licence-checker] Add documentation on usage (Florian Zaruba)
* [licence-checker] Add optional regex matching (Florian Zaruba)
* Combine licence and CommentStyle objects early (Rupert Swarbrick)

Signed-off-by: Weicai Yang <weicai@google.com>



======Commit: fcfbb15a======
======Short Message======
[dv] Fix license header for some cfg files
======Full Message======
[dv] Fix license header for some cfg files

Signed-off-by: Weicai Yang <weicai@google.com>



======Commit: cb953c19======
======Short Message======
[dv] Only check scoreboard from pre_abort if we were in run phase
======Full Message======
[dv] Only check scoreboard from pre_abort if we were in run phase

This avoids spurious (and confusing) error messages from the
scoreboard's check phase if the build phase failed. For example,
cip_base_scoreboard's check_phase assumes that its build_phase has
run, and you get strange messages about using null FIFOs if it hasn't.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: e2a0558a======
======Short Message======
[otbn] Indicate S1 status for software
======Full Message======
[otbn] Indicate S1 status for software

Software has fulfilled all requirements to be in S1 status, update the
tracking file to match.

Fixes #4012

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: 9ff2d1ca======
======Short Message======
[dv] Expand top level bind-file name in dvsim cfg
======Full Message======
[dv] Expand top level bind-file name in dvsim cfg

- A very small bug in the auto-testbench generator resulted in `{name}`
variable creeping into the generated sim cfg HJson. It should have
really been expanded to the DUT name instead (which was recently fixed
in the uvmdvgen template.

Signed-off-by: Srikrishna Iyer <sriyer@google.com>



======Commit: 359de277======
======Short Message======
[ci] Disable RISC-V compliance tests
======Full Message======
[ci] Disable RISC-V compliance tests

The RISC-V compliance tests are important to catch issues in the CPU and
the interconnect, but take a very long time to run (30-60 min for each
of the two chunks) in Verilator simulation on the Microsoft-provided
Azure Runners. Furthermore, the runners we get are rather unpredictable
in their performance, leading to huge variations in the test execution
time.

At the same time, these tests didn't flag a new issue recently which
wasn't caught somewhere else. Therefore, disabling them is unlikely to
reduce the quality of the testing much.

We still need to find a way to re-enable these tests. Running them on
the FPGA platform is likely to be a good approach, which will bring down
test times massively. Having a dedicated, powerful runner could be
another option if we want to continue running the tests in simulation.

Fixes #4128

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: e8fb80f9======
======Short Message======
[dv/otp] Fix status bit order
======Full Message======
[dv/otp] Fix status bit order

In PR #4074 we changed the order of status bit. This PR updates
OTP_WAKE_UP test for that change.

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: 63851ac4======
======Short Message======
[ast] Rewrite assignment leading to syntax error in Verible
======Full Message======
[ast] Rewrite assignment leading to syntax error in Verible

Signed-off-by: Michael Schaffner <msf@opentitan.org>



======Commit: 2a6626d5======
======Short Message======
[dv] Fix library paths for dsim
======Full Message======
[dv] Fix library paths for dsim

Signed-off-by: Srikrishna Iyer <sriyer@google.com>



======Commit: 808cc89e======
======Short Message======
[dv/alert] Support async mode in device mode
======Full Message======
[dv/alert] Support async mode in device mode

This PR adds support for async mode in Device mode.
In device mode, IPs are connected with `alert_sender`, so in async_mode,
the `alert_sender` will delay received signals `alert_rx` in two clock
cycle. This PR support that and adds a default async mode to all IPs.
This can be override in inidividual IPs if needed.

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: 8e329ad8======
======Short Message======
[pattgen, dv] Support V1 for pattgen
======Full Message======
[pattgen, dv] Support V1 for pattgen

  - Add csr_* test (update pattgen.hjson)
  - Add sanity test and scoreboard
  - Fix bugs in pattgen_monitor
  - Update dv/doc (including checklist.md and dv_plan)
  - Update top_earlgrey_sim_cfgs.hjson and
    top_earlgrey_lint_cfgs.hjson for pattgen CI

Signed-off-by: Tung Hoang <hoang.tung@wdc.com>



======Commit: b0d28afe======
======Short Message======
[otbn] Add a model of the processor to the UVM testbench
======Full Message======
[otbn] Add a model of the processor to the UVM testbench

This OTBN model module wraps the Python ISS and will be used as a
golden reference. The model is attached to the rest of the testbench
through an interface. The interface signals are tracked with a passive
agent, which sends transactions to the scoreboard.

This patch also has minor tweaks to the documentation, updating the
list of interfaces in the block diagram and correcting the agent
descriptions.

This is a partial implementation: we don't yet check timing on the
"done" signal, nor do we connect up the error checking.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: de15b01e======
======Short Message======
[otbn] Fix nested loops in modexp.S
======Full Message======
[otbn] Fix nested loops in modexp.S

Currently (as implemented in RTL) nested loops cannot end on the same
instruction. There was one example of this in modexp.S. This fixes that
(by adding a nop to the outer loop).

Signed-off-by: Greg Chadwick <gac@lowrisc.org>



======Commit: 49f26df9======
======Short Message======
[aes/dv] implemented a config_error test that verifies AES handles erroneous control settings
======Full Message======
[aes/dv] implemented a config_error test that verifies AES handles erroneous control settings

Signed-off-by: Rasmus Madsen <rasmus.madsen@wdc.com>



======Commit: 35dad185======
======Short Message======
[aes/dv] implemented key_lenght and mode configuration errors
======Full Message======
[aes/dv] implemented key_lenght and mode configuration errors

 Removed config_en as it is no longer used.

Signed-off-by: Rasmus Madsen <rasmus.madsen@wdc.com>



======Commit: ae7e2ef8======
======Short Message======
[chip dv] fixes #4032
======Full Message======
[chip dv] fixes #4032

Signed-off-by: Srikrishna Iyer <sriyer@google.com>



======Commit: 7274c013======
======Short Message======
[otp rtl] Fix warning
======Full Message======
[otp rtl] Fix warning

This change fixes the following warning:
```
Warning-[DTIE] Different enum types in equality
../src/lowrisc_ip_otp_ctrl_0.1/rtl/otp_ctrl_scrmbl.sv, 156
otp_ctrl_scrmbl, "(data_state_sel == SelDigestConst)"
  Enum values 'data_state_sel' and 'SelDigestConst' of different enum types
  are used together with equality operator '=='.
  LHS type: enum 'data_state_sel_e' defined in scope 'otp_ctrl_scrmbl_0000' at
  "../src/lowrisc_ip_otp_ctrl_0.1/rtl/otp_ctrl_scrmbl.sv", 128
  RHS type: enum 'key_state_sel_e' defined in scope 'otp_ctrl_scrmbl_0000' at
  "../src/lowrisc_ip_otp_ctrl_0.1/rtl/otp_ctrl_scrmbl.sv", 136
```

The change fixes the offending assertion.

Signed-off-by: Srikrishna Iyer <sriyer@google.com>



======Commit: 528b935e======
======Short Message======
[dv, common] Promote VCS warning to error
======Full Message======
[dv, common] Promote VCS warning to error

- The following warning should really be an error:
```
Warning-[SV-OHCM] Object hides class method
../src/lowrisc_dv_dv_base_reg_0/dv_base_reg.sv, 184
  Virtual method 'write' is hidden by entity with same name.
  Virtual method declared at "../src/lowrisc_dv_dv_base_reg_0/dv_base_reg.sv",
  184
  is hidden by declaration at
  "../src/lowrisc_dv_chip_ral_pkg_0/chip_ral_pkg.sv", 34761
```
This change promotes it to an error.

Signed-off-by: Srikrishna Iyer <sriyer@google.com>



======Commit: d9d84670======
======Short Message======
[otp rtl] Update OTP ctrl field names to fix #4051
======Full Message======
[otp rtl] Update OTP ctrl field names to fix #4051

 This change updates `read` and `write` fields of OTP CSR
 `direct_access_cmd` to `rd` and `wr` respectively to fix #4051.

Signed-off-by: Srikrishna Iyer <sriyer@google.com>



======Commit: 1366af71======
======Short Message======
[clkmgr] Add divider bypass during test mode
======Full Message======
[clkmgr] Add divider bypass during test mode

Signed-off-by: Timothy Chen <timothytim@google.com>

[clkmgr] Fix cg connection

Signed-off-by: Timothy Chen <timothytim@google.com>



======Commit: 78b4016c======
======Short Message======
[opt_ctrl] Change state_q assignment to ease debugging
======Full Message======
[opt_ctrl] Change state_q assignment to ease debugging

Signed-off-by: Michael Schaffner <msf@opentitan.org>



======Commit: 685be99a======
======Short Message======
[kmac] Fixing Enum state again
======Full Message======
[kmac] Fixing Enum state again

Missed to revise the State Enum in the assertion in b1041a90e83e7ad81f6adb130a0336e8e905ed4d

Signed-off-by: Eunchan Kim <eunchan@opentitan.org>



======Commit: b1041a90======
======Short Message======
[kmac] Fix Duplicated enum error
======Full Message======
[kmac] Fix Duplicated enum error

While moving sha3.sv state to sha3_pkg, I didn't change sha3pkg.sv and
kmac_core.sv to have unique enum name for the internal state machine.

This commit is to make sha3pad, kmac_core state machine to have unique
name so that DC tool does not complain.

Signed-off-by: Eunchan Kim <eunchan@opentitan.org>



======Commit: 7824ccc3======
======Short Message======
[ibex] Enable icache in top_earlgrey
======Full Message======
[ibex] Enable icache in top_earlgrey

Fixes #3539

Signed-off-by: Tom Roberts <tomroberts@lowrisc.org>



======Commit: 3a5fdd65======
======Short Message======
Update lowrisc_ibex to lowRISC/ibex@5826af8
======Full Message======
Update lowrisc_ibex to lowRISC/ibex@5826af8

Update code from upstream repository
https://github.com/lowRISC/ibex.git to revision
5826af8ad924eccdb51b8ea02dfd54a9d4719edf

* [rtl] Instantiate shadow CSRs (Tom Roberts)
* [rtl] Lint fix for unused signal in multdiv (Greg Chadwick)
* [simple-system] always_comb should be always (Greg Chadwick)
* [simple-system] Add ICache parameters (Greg Chadwick)
* Add VCS compile option for unicode (Hodjat Asghari Esfeden)
* Update google_riscv-dv to google/riscv-dv@3467c37 (Udi Jonnalagadda)
* Fix lint issues (Luka Macan)
* Add .svlint.toml (Luka Macan)
* [ibex/dv/rtl] Updates to run Cadence Xcelium (Paul OKeeffe)
* Pass -fno-extended-identifiers to VCS (Rupert Swarbrick)
* Avoid spurious rebuilds in core_ibex Makefile with OUT = sim (Rupert
  Swarbrick)
* [ibex/dv] Update CSV log conversion script (Udi Jonnalagadda)
* [dv] Increase simulation timeout (Philipp Wagner)
* [ci] Add a comment on private CI (Philipp Wagner)
* Enable configuration with Icache in public CI (Philipp Wagner)
* Tie off branch predictor signals when icache is used (Philipp
  Wagner)
* [rtl] Various small lint fixes (Tom Roberts)
* Enable Verible lint (Philipp Wagner)
* Pass through ICache-related parameters in compliance test (Philipp
  Wagner)
* Update Spike to a version with icache support (Philipp Wagner)
* Use the latest version of Verible (Philipp Wagner)
* Use the same toolchain as in OpenTitan (Philipp Wagner)
* Use Verilator 4.040 in CI (Philipp Wagner)
* [dv/ibex] Enable icache in Ibex environment (Udi Jonnalagadda)
* Update google_riscv-dv to google/riscv-dv@39797b2 (Udi Jonnalagadda)
* [ibex/dv] return non-zero exit code upon failure (Udi Jonnalagadda)
* [doc] Mark icache verification as "done for now" (Philipp Wagner)
* Add support for additional HW breakpoints (Tobias Wölfel)
* [rtl] Fix illegal write to DCSR cause field (Tom Roberts)
* [rtl] Add CSR module and instantiate (Tom Roberts)
* [rtl] Various security feature bugfixes (Tom Roberts)
* [rtl] Fix missing else branch in decoder (Tom Roberts)
* [rtl] Add plusarg to disable trace log (Tobias Wölfel)
* [ci] Update install-build-deps.sh script for Ubuntu 18.04 (Philipp
  Wagner)
* [doc] Fix broken link to examples description (Alex Bradbury)
* [doc] Fix image link (Tobias Wölfel)
* Restructure documentation (Philipp Wagner)
* [simple-system] Add missing linker sections (Tom Roberts)
* [simple_system] Update CSR Access for LLVM and GCC (Sam Elliott)
* In util, restrict mypy linting to sv2v_in_place.py (Rupert
  Swarbrick)
* [formal] Add check for multdiv cycle consumption (Tobias Wölfel)
* Move sv2v script into standalone core file (Tobias Wölfel)
* [syn] Add script to print kGE equivalent (Tom Roberts)
* [rtl] Fix debug step over EBREAK issue (Tom Roberts)
* Fix "no invalidate" logic in ICache sequence (Rupert Swarbrick)
* Port ICache formal core file to final Edalize design (Rupert
  Swarbrick)
* [ci] Force setuptools not to use version 50.0.0 for now (Rupert
  Swarbrick)

Signed-off-by: Tom Roberts <tomroberts@lowrisc.org>



======Commit: de6e4794======
======Short Message======
[entropy_src/rtl] IO changes updated
======Full Message======
[entropy_src/rtl] IO changes updated

Asserts for known outputs added.
State machine single type mismatch fixes.
Module diagram updated.
Fix for CSR bit bash test.
Alert io change added.
Module testbench updated for new io pins.
Chip level testbench connection to AST updated for rng_ok.
Amend for hjson typos and state machine type match format.

Signed-off-by: Mark Branstad <mark.branstad@wdc.com>



======Commit: 2d4b0106======
======Short Message======
[kmac] Revise RhoOffset to meet verilator style
======Full Message======
[kmac] Revise RhoOffset to meet verilator style

Verilator does not recognize 2-D parameter array. It assumes 2-D array
as variable even it is defined as localparam.

This commit changes RhoOffset to 1-D array so that verilator can
synthesize RhoOffset as constant.

The fix comes from @timothytrippel

Signed-off-by: Eunchan Kim <eunchan@opentitan.org>
Co-Authored-by: Tim Trippel <ttrippel@google.com>



======Commit: c0f6f3d3======
======Short Message======
[otbn] Add DIF sanity test
======Full Message======
[otbn] Add DIF sanity test

Add a device software test which shows the full interaction between OTBN
and Ibex using the DIF.

On OTBN, we run a multiplication algorithm, the 384-bit wide Barrett
multiplication. For simplicity, only trivial parameters are used.

On Ibex, the test loads the OTBN application code into OTBN's
instruction memory, zeros all of OTBN's data memory, starts the
operation from a non-zero start address, reads back the multiplication
results OTBN stored in its data memory, and finally checks the result
for correctness.

In addition to checking the DIF and all the interaction between OTBN
and Ibex, this sanity tests also shows how the build system integration
works.

Fixes #2577

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: 80cc823f======
======Short Message======
[sw/otbn] Integrate OTBN code building into meson
======Full Message======
[sw/otbn] Integrate OTBN code building into meson

Build OTBN code with the meson build system. The primary use case is the
integration of OTBN binaries into device (Ibex) binaries.

OTBN is a separate architecture based on RV32I. Since meson doesn't
support compiling (and combining) software for multiple targets in the
same run, we have to cheat by using an external script, which
effectively does what meson would do for "normal" device software: call
the assembler, linker, and binutils to produce the desired output files
from the sources.

However, since we know that OTBN is based on RV32I, we make at least
sure that we reuse the toolchain discovery results from meson and pass
them on to the OTBN toolchain. The OTBN toolchain itself is a "frontend"
to the GNU Assembler and the GNU linker, callable through otbn-as and
otbn-ld.

Fixes #2936

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: cab83033======
======Short Message======
[otbn] Rename label to match what it does
======Full Message======
[otbn] Rename label to match what it does

Looks like a copy/paste error.

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: 0218389b======
======Short Message======
[dv/dvsim] Fix -c option compile error
======Full Message======
[dv/dvsim] Fix -c option compile error

Current self.exports uses `_process_exports` to convert it from a list
of dict to dict. But when enable coverage collection, in its `post_init`
function, current code tries to add `cov_db_dirs` to `self.exports`
before it converts to `dict`. So there is a compile error.

This fix calls the super._post_init first and avoid this error.

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: 90610768======
======Short Message======
[sw] Degrade unused functions to warnings
======Full Message======
[sw] Degrade unused functions to warnings

Currently we abort the build if a function (in C) is unused. This is
quite inconvenient during development when one tries to comment out code
or return early to iteratively develop or debug a feature. To increase
developer productivity, this commit reduces the compiler message from an
error to a warning.

As we get closer to finalizing the software we can think about
re-enabling it, or using a different build configuration in CI that
overrides this setting.

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: f177c75e======
======Short Message======
[otp_ctrl/otbn/aes] Fix alert test register enumeration order
======Full Message======
[otp_ctrl/otbn/aes] Fix alert test register enumeration order

This fixes #4049

Signed-off-by: Michael Schaffner <msf@opentitan.org>



======Commit: b3e4dcdd======
======Short Message======
[syn/otbn/aes] Add block-level OTBN synthesis and fix AES synthesis
======Full Message======
[syn/otbn/aes] Add block-level OTBN synthesis and fix AES synthesis

Signed-off-by: Michael Schaffner <msf@google.com>



======Commit: f6f72263======
======Short Message======
[dv] Tidy up use of get_normalized_addr
======Full Message======
[dv] Tidy up use of get_normalized_addr

The get_normalized_addr function is defined in cip_base_scoreboard and
is used to round down word addresses and (seemingly) to convert byte
offsets (as reported by the TL agent) into absolute addresses matching
the RAL model.

However, it turns out that this isn't actually how we were using
it (which has had me *very* confused!). In fact, most of the addresses
floating around are absolute addresses (with occasional exceptions in
code like spi_device_env_cfg and some of the hmac code). The
definition of get_normalized_addr threw away the upper bits of the
address (converting to an offset), rounded down to a multiple of 4,
and then added the base address back on again.

This patch splits up that function into two functions:

  - align_to_word_addr  (rounds down to a multiple of 4)
  - offset_to_addr      (adds default map's base address to an offset)

and updates the code to use the right one in each situation.

Now (I think) everything called an "address" is an absolute address,
including the base address. Things relative to the start of the
register block are now called "offset"s.

The other part of this patch moves these two functions from
cip_base_scoreboard into dv_base_reg_block, which is probably a more
appropriate place for them to live. This was the original motivation
because I thought I needed the "offset_to_addr" functionality in
reactive sequences. It turns out this is wrong (we actually just need
to round addresses down!), but it can't hurt to put things somewhere
more sensible.

Finally, the patch tidies up how the base address for the register
block gets set (since I had to touch the code anyway). This includes
fixes for some integer overflows to do with sizes that are the whole
of the address space.

Note that it's a bit odd to put these functions in the register block
rather than the register map (since one register block can have
multiple register maps). However, we don't seem to actually
instantiate dv_base_reg_map when building our register blocks (indeed,
I'm not sure whether you can do so with UVM), so putting the functions
there doesn't work! Assuming this is right, I'll follow up with a
patch to get rid of that class later.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 942d14ea======
======Short Message======
[dv/common] Fix regwen issue
======Full Message======
[dv/common] Fix regwen issue

Fix for #4058

Signed-off-by: Weicai Yang <weicai@google.com>



======Commit: 7ec5dbd0======
======Short Message======
[fpv] Fix fusesoc dependecy issue
======Full Message======
[fpv] Fix fusesoc dependecy issue

When CSR assertions can be generated automatically, we encountered some
fusesoc dependency issue. Because CSR auto-gen assertions depend on
RTL(reg core file), for most of IPs, there isn't an independent reg file
core, thus the auto-gen file directly used the rtl core file. And formal
target is build on the default RTL core file. Now we try to import the
CSR auto-gen core file, and this creates a dependency issue.

To solve this issue, the new formal core file is built on IP_sva.core
instead of RTL core file.

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: 4e1a4a3d======
======Short Message======
[reggen] Add a _BIT suffix to bit index constants
======Full Message======
[reggen] Add a _BIT suffix to bit index constants

Signed-off-by: Miguel Young de la Sota <mcyoung@google.com>



======Commit: f6f3596e======
======Short Message======
[otbn] Add/fix enables
======Full Message======
[otbn] Add/fix enables

There were a few instances of writes to registers (register file, isprs,
flags) occurring when they shouldn't, this fixes them.

Signed-off-by: Greg Chadwick <gac@lowrisc.org>



======Commit: 6ab8d95a======
======Short Message======
[otbn] Remove generic unused signal lint waiver
======Full Message======
[otbn] Remove generic unused signal lint waiver

For early bring-up a catch-all lint waiver was used to waive any unused
signal lint. Now the RTL is more complete this waiver has been removed
and any issues it was hiding fixed.

Signed-off-by: Greg Chadwick <gac@lowrisc.org>



======Commit: 1d1ac6cb======
======Short Message======
[sw] Prevent use of COMMON Sections
======Full Message======
[sw] Prevent use of COMMON Sections

Old versions of GCC default to using `-fcommon`, but this changed in
GCC version 10.0 to default to `-fno-common`, which Clang matches.

The DV environment was using an old GCC version with the wrong default,
which was causing issues when exposed to the changes in
lowrisc/opentitan#4014. This ensures we avoid using COMMON at all costs,
instead favouring using real, defined sections for our C code.

Signed-off-by: Sam Elliott <selliott@lowrisc.org>



======Commit: 8c1d9714======
======Short Message======
[otbn] Fully mux between model and RTL
======Full Message======
[otbn] Fully mux between model and RTL

The RTL implementation of OTBN didn't get disabled when the model was
selected due to an error in an earlier refactoring by me. Fix that, and
go the safe route to fully mux the start and done signals.

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: 525891d9======
======Short Message======
[sw] Refactor exporting to only use BIN_DIR
======Full Message======
[sw] Refactor exporting to only use BIN_DIR

We build code in the object directory (build-out, $OBJ_DIR), and then export it
into the bin directory (build-bin, $BIN_DIR). Within BIN_DIR, we
conventionally follow/mirror the directory structure in the source tree.

Before this patch we constructed the sub-directories $BIN_DIR/sw/host
and $BIN_DIR/sw/device in build_consts.sh, and passed them individually
to meson. After this patch, we only pass $BIN_DIR to meson, and let its
build logic figure out the rest.

This allows for a simplification in the meson logic without changing the
directory structure we produce.

The motivation for this change is the pending addition of the sw/otbn
directory, which would duplicate the same functionality for a third
time.

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: 7ce44e97======
======Short Message======
[kmac] Change the order of CFG_REGWEN
======Full Message======
[kmac] Change the order of CFG_REGWEN

As filed in the issue #4058 , if REGWEN is defined after the registers
to guard, the DV RAL package raises an error in simulation. Until the
issue is resolved, shifting the CFG_REGWEN to the first register.

Signed-off-by: Eunchan Kim <eunchan@opentitan.org>



======Commit: 4fc11891======
======Short Message======
[kmac] Fix FPV testbenches
======Full Message======
[kmac] Fix FPV testbenches

SHA3 related parameters, functions are relocated into `sha3_pkg.sv` in
40979092 . But some of sha3 fpv testbenches still include `kmac_pkg`.
This commit is to fix the issue so that FPV test can run.

Signed-off-by: Eunchan Kim <eunchan@opentitan.org>



======Commit: 46ddbea8======
======Short Message======
[keymgr] Fix inter-module signal
======Full Message======
[keymgr] Fix inter-module signal

`hw_key_req_t` is a uni-directional im signal. The keymgr.hjson defines
the struct as `hw_key`. It should be `hw_key_req`.

Also added the default signal of `hw_key_req_t`.

Signed-off-by: Eunchan Kim <eunchan@opentitan.org>



======Commit: bb2b46b9======
======Short Message======
[kmac] moving up to L1 stage.
======Full Message======
[kmac] moving up to L1 stage.

Fixing typo in kmac.prj.hjson. If an IP reaches D1, the life stage
should be L1 too.

Signed-off-by: Eunchan Kim <eunchan@opentitan.org>



======Commit: 199ae3f1======
======Short Message======
[edn/rtl] hjson update and auto gen rtl
======Full Message======
[edn/rtl] hjson update and auto gen rtl

Updated the hjson file to add the error_code register.
Add auto-generated reg rtl and related core files.
Amended hjson file to add finer definition of the error code reg.
Fixed problems with edn.core and edn_pkg.core files.
Removed spelling issues from hjson.
Added ascentlint parameter.

Signed-off-by: Mark Branstad <mark.branstad@wdc.com>



======Commit: 0c1f1807======
======Short Message======
[csrng/rtl] lifecycle input to support aes mode
======Full Message======
[csrng/rtl] lifecycle input to support aes mode

The lifecycle input will make sure that aes bypass will only occur in certain modes.
This is related to issue #3894
Also, text corrections are made to the hjson file for err_code.
Fixed spelling errors in hjson.
Added ascentlint parameters.

Signed-off-by: Mark Branstad <mark.branstad@wdc.com>



======Commit: e4c36051======
======Short Message======
[lint] Fix lint warning
======Full Message======
[lint] Fix lint warning

Fix a lint warnings from keymgr, prim_presence, prim_lfsr, csrng, and prim_prince tb.
Fix prim_lfsr core file by adding lint target to it.

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: b8e92a92======
======Short Message======
[rstmgr] streamline rstmgr templating
======Full Message======
[rstmgr] streamline rstmgr templating

- differentiate core file names between hw/ip and hw/top_*
- update references such that all references can always point to hw/ip

Signed-off-by: Timothy Chen <timothytim@google.com>

[rstmgr] update template

Signed-off-by: Timothy Chen <timothytim@google.com>

[rstmgr] fix newline

Signed-off-by: Timothy Chen <timothytim@google.com>



======Commit: c1840e06======
======Short Message======
[otbn] Fix idle logic
======Full Message======
[otbn] Fix idle logic

We are idle if we aren't running (~ busy_q) and also aren't being told
to start (~ start).

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: a8fb05ee======
======Short Message======
[dvsim] Fix HJson bugs
======Full Message======
[dvsim] Fix HJson bugs

- The `exports` key is meant to have a list of key-value pairs (dicts).
Instead, currently they are all parsed as strings instead. This fixes
the exports key and thereby enables the removal of `FlowCfg::process_exports()` subroutine.
- The values in the exports var also contains variable substitutions
(what we are referring to as wildcards) encapsulated in braces without
quotes - this is not allowed in HJson. Values that begin and end in
braces must have quotes, otherwise the braces end up getting treated as
HJson punctuation syntax. It is working currently because it treats the
complete item in a list (separated by comma) as a string.
- As with the first bullet, the `process_exports()` is removed from the
code.

Signed-off-by: Srikrishna Iyer <sriyer@google.com>



======Commit: 04f3b590======
======Short Message======
[otp] Fix compile error
======Full Message======
[otp] Fix compile error

Due to two PRs committed at similar time, PR #3946 and PR #3987, some
paramter names are changed while the other pr still uses the old name.
This PR aligns the naming and solve the compile error.

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: 488f433d======
======Short Message======
[rtl/otp_ctrl] change default lfsr count
======Full Message======
[rtl/otp_ctrl] change default lfsr count

In current code, default lfsr count is 0. So when reset asserts, it will
also trigger a `edn_req`. This is not a real req, so this PR initialize
it to '1 to avoid triggering `edn_req` right at negedge reset.

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: 233ea81e======
======Short Message======
[kmac] Lint fix
======Full Message======
[kmac] Lint fix

Fixed lint errors or added to waiver for lint errors.

Signed-off-by: Eunchan Kim <eunchan@opentitan.org>



======Commit: a3a2d863======
======Short Message======
[prim] slicer lint fix
======Full Message======
[prim] slicer lint fix

Lint tool complains `'0` for undetermined size. Either
OutW*(2**InW)'(value) or fixed in this commit are fine.

Signed-off-by: Eunchan Kim <eunchan@opentitan.org>



======Commit: e0e863c5======
======Short Message======
[kmac] Remove PREFIX.QE from register
======Full Message======
[kmac] Remove PREFIX.QE from register

Hardware does not use QE signal for PREFIX registers.

Signed-off-by: Eunchan Kim <eunchan@opentitan.org>



======Commit: 4e9700ec======
======Short Message======
[dv/otp] fix regression csr_reset_readout_err
======Full Message======
[dv/otp] fix regression csr_reset_readout_err

In csr_mem_rw_with_rand_reset test, the regression failed after
apply_reset and try to read out registers. Some register's value won't
reset to default until otp_init is done. This PR fix it by override the
`read_and_check_all_csr_after_reset()` test.

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: 87b8fe6e======
======Short Message======
[kmac] Fix critical lint error
======Full Message======
[kmac] Fix critical lint error

Signed-off-by: Eunchan Kim <eunchan@opentitan.org>



======Commit: eb1eba38======
======Short Message======
[fpga] Add Vivado pre-synthesis hook, also setup hooks for CW305 board
======Full Message======
[fpga] Add Vivado pre-synthesis hook, also setup hooks for CW305 board

This commit adds a new pre-synthesis to hook to change the severity of
messages. Also, two warnings are changed to errors:
- If the boot ROM init file cannot be found, the tool should not proceed
  and generate a non-functional bitstream.
- If latches are automatically inferred during synthesis, the tool should
  abort. This helps to prevent that such code ends up in the repo.

Existing hooks are also enabled on the ChipWhisperer CW305 FPGA board
except for the placement check of the boot ROM (specific to the
NexysVideo, required to use the boot ROM splicing script).

Signed-off-by: Pirmin Vogel <vogelpi@lowrisc.org>



======Commit: 1de9b336======
======Short Message======
[test] Correct timeout handling in system test Process.run
======Full Message======
[test] Correct timeout handling in system test Process.run

I noticed this because the function was raising a
subprocess.TimeoutExpired on failure without providing any arguments.
That's also not quite right: we might get to EOF without the magic
pattern without timing out. So I've fixed that too.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: d8dca9f9======
======Short Message======
[test] flake8 fixes in utils.py
======Full Message======
[test] flake8 fixes in utils.py

A whitespace change, and remove a duplicate definition of a
function(!), keeping the second.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: a9b46e02======
======Short Message======
[otbn] Add types to localparams in otbn_core_model.sv
======Full Message======
[otbn] Add types to localparams in otbn_core_model.sv

This silences some CI lint errors.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: fd9b73c2======
======Short Message======
[dv/common] Upgrade some VCS warnings to errors
======Full Message======
[dv/common] Upgrade some VCS warnings to errors

Make the VCS stricter, so that we can avoid seeing this kind of issue #3968

Signed-off-by: Weicai Yang <weicai@google.com>



======Commit: 5793d75d======
======Short Message======
[dv/push_pull_agent]
======Full Message======
[dv/push_pull_agent]

When pull agent is config to Device mode, data has X and this PR fix it
by assigning the driver data to data_int rather than data directly.

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: eaa3f2b0======
======Short Message======
[keymgr] Connect dangling kmac interface signals.
======Full Message======
[keymgr] Connect dangling kmac interface signals.

- Also update spec for kmac errors

Signed-off-by: Timothy Chen <timothytim@google.com>



======Commit: 592cd5df======
======Short Message======
[dvsim] Document and slightly improve subst_wildcards in utils.py
======Full Message======
[dvsim] Document and slightly improve subst_wildcards in utils.py

When messing around with config files, I managed to trigger an
infinite loop in the subst_wildcards function. This patch fixes that,
and also adds a big documentation comment and tests.

Changes:

  - Document exactly what subst_wildcards does (it's quite
    complicated!)

  - Spot circular recursion rather than blowing the call stack.

  - Fix some odd behaviour in {eval_cmd} support.

    The previous code would transform "foo {eval_cmd} echo bar" to
    "bar", ignoring the "foo" prefix entirely. Similarly, it would
    transform "{eval_cmd}xecho foo" to "foo" (skipping over the 'x',
    which it assumed to be a space).

  - Be more explicit about how values get stringified

  - Make the interaction between {eval_cmd} and ignore_error=True a
    more uniform.

    The previous code performed partial evaluation when ignore_error
    was true except when doing {eval_cmd}, when it would discard the
    partially evaluated command string.

  - Add some simple tests.

    These correspond to documentation examples. You can run them with
    pytest. Note that this doesn't add a dependency on pytest unless
    you actually want to run the tests (since Python will merrily
    "parse" code where the named modules aren't in scope!)

Differences in behaviour from the original code:

  - Clearer eval_cmd behavior (see above)

  - Circular references are now spotted. Before, a call to

      subst_wildcards('{a}', {'a': '{b}', 'b': '{a}'})

    would cause an infinite loop. This is the sort of thing that you
    can trigger by a mistake in your config files, and what caused me
    to look at the function in the first place. Now it reports an
    error (regardless of the value of ignore_error).

  - List items are now stringified recursively in
    _stringify_wildcard_value. This makes rules like {'a': ['b', 10]}
    work. The functionality isn't used in dvsim at the moment (because
    all lists are lists of strings), but it's probably a bit cleaner.

  - Computed wildcard names are now possible. Probably not a
    particularly useful feature, but it comes for free with the
    "iterate over matches from the left" implementation, so it can't
    hurt to support explicitly.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 3afeacb3======
======Short Message======
[xbar/dv] Update xbar to have 100% function coverage
======Full Message======
[xbar/dv] Update xbar to have 100% function coverage

a few fix to make assert/covergroup 100%
1. increase same address chance
2. increase seq cnt to hit 256 outstanding items
3. fix req/rsp_valid_len randomization
4. add control to d_error in tl_device_seq
5. fix 2 soft constraint conflicts

Signed-off-by: Weicai Yang <weicai@google.com>



======Commit: 53c9586c======
======Short Message======
[otbn] Implement LOOP
======Full Message======
[otbn] Implement LOOP

An initial implementation of the LOOP instruction, more thought is
required for a variety of corner cases and error conditions. This
initial implementation exists to enable SW work. Further work is needed
to deal with details that are totally unaddressed in this commit.

Signed-off-by: Greg Chadwick <gac@lowrisc.org>



======Commit: 7285a989======
======Short Message======
[dv/top] fix alert_monitor phase_ready_to_end timeout
======Full Message======
[dv/top] fix alert_monitor phase_ready_to_end timeout

Random CSR rw might trigger alert. Some alerts will conintuously be triggered until reset
applied, which will cause alert_monitor phase_ready_to_end timeout.
This commit solves it by adding a reset at post_start().

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: a4654f4d======
======Short Message======
[dv/cip_base] fix xcelium compile error
======Full Message======
[dv/cip_base] fix xcelium compile error

Xcelium has compile error due to previously declared `status` variable.
Remove this variable and Xcelium can compile.

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: 2b253209======
======Short Message======
[otbn] Fix style issue in otbn_core_model
======Full Message======
[otbn] Fix style issue in otbn_core_model

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: 18942d36======
======Short Message======
[otbn] Fix building earl grey with OTBN model
======Full Message======
[otbn] Fix building earl grey with OTBN model

When passing OTBN_MODEL, Earl Grey can be built with the OTBN model
instead of the RTL implementation. This sets DesignScope == "", which in
turn doesn't make the otbn_rf_peek() function available through DPI
as SV export.

To avoid a compile error in this case make otbn_rf_peek() a weak symbol,
and check for its availability at runtime.

Fixes #3929

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: b6135f56======
======Short Message======
[sparse-fsm-encode] Update template to prevent JG compile error
======Full Message======
[sparse-fsm-encode] Update template to prevent JG compile error

Signed-off-by: Michael Schaffner <msf@opentitan.org>



======Commit: 5c856f7c======
======Short Message======
Gracefully shut down Verilator when software test fails
======Full Message======
Gracefully shut down Verilator when software test fails

When a software test fails (i.e. an "potentially expected error", e.g.
through the `CHECK()` functionality), we call `DV_ERROR()`, which in
turn calls `$error()`, which calls `$stop()`. By default, Verilator
terminates the simulation immediately and writes a crash dump. This is
not necessarily what we want for such "expected errors"; instead, we
want a clean exit with a non-zero exit code.

Before:

```
E00008 dif_otbn_sanitytest.c:125] CHECK-fail: Unexpected result c at byte 0: 0xc8 (actual) != 0xc9 (expected)
I00009 test_status.c:34] FAIL!
[1988778] %Error: sw_test_status_if.sv:42: Assertion failed in TOP.top_earlgrey_verilator.u_sw_test_status_if: 1988778: (../src/lowrisc_dv_sw_test_status_0/sw_test_status_if.sv:42) [TOP.top_earlgrey_verilator.u_sw_test_status_if] ==== SW TEST FAILED ====
%Error: ../src/lowrisc_dv_sw_test_status_0/sw_test_status_if.sv:42: Verilog $stop
Aborting...
Abgebrochen (Speicherabzug geschrieben)
```

("Aborted (core dumped)" in German)

After:

```
E00008 dif_otbn_sanitytest.c:125] CHECK-fail: Unexpected result c at byte 0: 0xc8 (actual) != 0xc9 (expected)
I00009 test_status.c:34] FAIL!
[1988778] %Error: sw_test_status_if.sv:42: Assertion failed in TOP.top_earlgrey_verilator.u_sw_test_status_if: 1988778: (../src/lowrisc_dv_sw_test_status_0/sw_test_status_if.sv:42) [TOP.top_earlgrey_verilator.u_sw_test_status_if] ==== SW TEST FAILED ====
Received stop request, shutting down simulation.

Simulation statistics
=====================
Executed cycles:  994389
Wallclock time:   44.676 s
Simulation speed: 22257.8 cycles/s (22.2578 kHz)
$ echo $?
1
```

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: 89de84f8======
======Short Message======
[otbn] Rename assembly files from .S to .s
======Full Message======
[otbn] Rename assembly files from .S to .s

Follow-up to the recent rename to fix remaining cases which landed in
the meantime.

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: efb1eaf8======
======Short Message======
[verilator] Change sw_test_status_if is instanced
======Full Message======
[verilator] Change sw_test_status_if is instanced

The `sw_test_status_if` was originally bound to the `sim_sram_if`
directly to probe the signals maintained there.
The SV bind keyword unfortunately does not play nice when tracing is
enabled (results in seg fault).
This fixes #3951 by instantiating `sw_test_status_if` instead and
manually connecting the signals from `sim_sram_if` instance.

Signed-off-by: Srikrishna Iyer <sriyer@google.com>



======Commit: 4096f7d4======
======Short Message======
[kmac] Initial KMAC HWIP Technical Specification
======Full Message======
[kmac] Initial KMAC HWIP Technical Specification

This commit documents the KMAC/SHA3 HWIP techinical specification. It
lacks the sections that are not finalized such as KeyMgr interface,
entropy generator, and the error report.

Signed-off-by: Eunchan Kim <eunchan@opentitan.org>



======Commit: 7c1ce95e======
======Short Message======
[otp] fix FPV compile error
======Full Message======
[otp] fix FPV compile error

This is a compile error for JG formal but warnings for Xcelium and VCS.
The simulators are complaining that assigning an enum to a non-enum
port.

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: 2d604509======
======Short Message======
[dvsim] Kill subprocesses more gracefully
======Full Message======
[dvsim] Kill subprocesses more gracefully

Before this patch, we just used subprocess.Popen.kill(), which sends a
SIGKILL signal. This doesn't work well if the process has some child
processes, because it doesn't have a chance to clean up. This patch
sends a SIGTERM first, waits up to a couple of seconds for the process
to terminate, and then sends a SIGKILL if necessary. Hopefully, this
will leave fewer simv processes lying around.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 7c39bf0f======
======Short Message======
[dv/common] Fix mem failure
======Full Message======
[dv/common] Fix mem failure

When mem write is aborted, shouldn't update the address to the queue
which indicates write is done successfully
Add `tl_access_w_abort` to output status, rather than having `tl_access`
to output status as status isn't needed for most of cases

Signed-off-by: Weicai Yang <weicai@google.com>



======Commit: 559aa9fc======
======Short Message======
[fpv] fix pattgen fusesoc formal compile error
======Full Message======
[fpv] fix pattgen fusesoc formal compile error

This target_formal picks formal_files that is undefined. This causes a
fusesoc error while compile formal.
Comment it out until formal is defined.

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: bfd88712======
======Short Message======
[rtl] fix prim_alert_sender input in entropy_src
======Full Message======
[rtl] fix prim_alert_sender input in entropy_src

Signed-off-by: Srikrishna Iyer <sriyer@google.com>



======Commit: b5b8c7f4======
======Short Message======
[otbn] Use .s instead of .S suffix for assembly
======Full Message======
[otbn] Use .s instead of .S suffix for assembly

OTBN assembly doesn't go through the pre-processor. The typical file
extension for such files is `.s`, not `.S`. Rename all OTBN assembly
files to match this convention, and adjust the tooling as well.

Fixes #3329

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: 64c575e6======
======Short Message======
[prim] Fix Verilator lint warnings
======Full Message======
[prim] Fix Verilator lint warnings

Signed-off-by: Pirmin Vogel <vogelpi@lowrisc.org>



======Commit: b4a3194f======
======Short Message======
[tlul] Fix Verilator lint warnings
======Full Message======
[tlul] Fix Verilator lint warnings

Signed-off-by: Pirmin Vogel <vogelpi@lowrisc.org>



======Commit: 90076409======
======Short Message======
[memutil] Allocate the right number of bytes in StagedMem::GetFlat()
======Full Message======
[memutil] Allocate the right number of bytes in StagedMem::GetFlat()

This was an off-by-one error (forgetting that max_addr_ was inclusive).

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: a6951964======
======Short Message======
Fix build in top_earlgrey_verilator.cc
======Full Message======
Fix build in top_earlgrey_verilator.cc

This was broken in commit d79ffc2, part of PR #3883 (at one point, I'd
used different names, which I changed again before pushing up).

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: d79ffc2f======
======Short Message======
[obtn] Wrap memutil_dpi for OTBN to be accessible through DPI
======Full Message======
[obtn] Wrap memutil_dpi for OTBN to be accessible through DPI

This patch wraps DpiMemUtil up in an interface that's convenient for
SV code to call through DPI to backdoor-load ELF code into memory.
Moving the address setup into a separate class also avoids us having
to duplicate it between e.g. otbn_top_sim and the DV code.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: e00fdb4a======
======Short Message======
[doc] Fix cdgori username
======Full Message======
[doc] Fix cdgori username

Signed-off-by: Michael Schaffner <msf@opentitan.org>



======Commit: 7dbf0b42======
======Short Message======
[dv/top-earlgrey] Support otp_mem auto-tests
======Full Message======
[dv/top-earlgrey] Support otp_mem auto-tests

To support top-level OTP mem test, this PR added the following:
1. Add a backdoor mem to initialize OTP_mem to avoid X assertion errors.
2. Add options to run OTP mem tests after OTP init.
3. Temp force pwr_req_i signal to 1 to trigger OTP init. Once the OTP is
connected to pwrmgr, we can replace it with real sequence.

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: f9bd996c======
======Short Message======
[dv/alert] change to more specific naming
======Full Message======
[dv/alert] change to more specific naming

Currently alert_esc_seq_time has a variable called `timeout`. Now this
PR changes it to `ping_timeout` because only ping has timeout error.

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: 746cb147======
======Short Message======
[kmac] Fix KeyMgr default value
======Full Message======
[kmac] Fix KeyMgr default value

After revised the KeyMgr Interface at @66e2618a , the kmac.sv didn't
revise the default assignment of keymgr_kdf output. It missed `error`
signal. This commit fixed that.

Signed-off-by: Eunchan Kim <eunchan@opentitan.org>



======Commit: 10831bef======
======Short Message======
[fpv] update regression items
======Full Message======
[fpv] update regression items

Update FPV regression items:
1. Remove the ones that already had a DV testbench (The generated FPV
csr assertions does not work for FPV fusesoc)
2. Add sha3pad_fpv and prim_arbiter_fixed_fpv to regression

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: 3c10d434======
======Short Message======
[otp] Fix xcelium compile error
======Full Message======
[otp] Fix xcelium compile error

Fix xcelium compile error by adding parameters a default value in
module.

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: 66e2618a======
======Short Message======
[keymgr] Revise the KMAC data interface
======Full Message======
[keymgr] Revise the KMAC data interface

Adding the last beat indicator to the request interface and the error
completion in the response interface. KMAC uses last beat indicator to
initiate the hashing operation. If any error occurs during the hashing
operation, KMAC returns the garbage digest with error to indicate KeyMgr
to discard current op and re-initate.

Signed-off-by: Eunchan Kim <eunchan@opentitan.org>



======Commit: 196421e9======
======Short Message======
[dv/shadow_reg] fix precedence error
======Full Message======
[dv/shadow_reg] fix precedence error

In shadow_reg base sequence, there are some precedence error that causes
testbench to tirgger false alarm for storage error. This PR fixed the
logic.
bitwise `&` has a higher precedence than bitwise `^`
bitwise `+ or -` has a higher precedence than `<<`.

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: df5994c0======
======Short Message======
[dif/alert_handler] Fix some bugs in the DIF implementations
======Full Message======
[dif/alert_handler] Fix some bugs in the DIF implementations

Signed-off-by: Miguel Young de la Sota <mcyoung@google.com>



======Commit: 2b28a0cd======
======Short Message======
[memutil] Split out the non-verilator part of verilator_memutil
======Full Message======
[memutil] Split out the non-verilator part of verilator_memutil

The point of this patch is to define DpiMemutil, a DPI-based interface
to backdoor load memories with the contents of VMem or ELF files, in a
way that can be used by non-Verilator simulations.

To do this, we split out everything but command line parsing and
SimCtrlExtension bits into a DpiMemutil class. The VerilatorMemutil
class is now a wrapper around a DpiMemutil, providing the
SimCtrlExtension interface.

This wrapping is done with a member (rather than multiple inheritance)
to allow users to subclass DpiMemutil and then wrap that. Doing that
with multiple inheritance, you end up with the usual diamond diagram
and bad things happen...

The split is cunningly designed to stay API compatible for C++ code
that uses VerilatorMemutil, but we don't keep API compatibility for
SystemVerilog code because we rename

   simutil_verilator_memload -> simutil_memload
   simutil_verilator_set_mem -> simutil_set_mem
   simutil_verilator_get_mem -> simutil_get_mem

One slight wart on the VerilatorMemutil class is the
RegisterMemoryArea forwarding functions. These are needed for API
compatibility, but we could get rid of them in future by changing the
callsites to use the GetUnderlying() accessor.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: eee24a1e======
======Short Message======
[otbn] Generate separate segments in rig programs
======Full Message======
[otbn] Generate separate segments in rig programs

We want to load these programs up by PHDR, so want to avoid ld merging
them all together into one segment. This patch modifies the generated
linker script to look like this:

    PHDRS
    {
        seg0000 PT_LOAD AT ( 0x100000 );
        seg0001 PT_LOAD AT ( 0x1002d4 );
        seg0002 PT_LOAD AT ( 0x100cfc );
    }

    SECTIONS
    {
        /* Section 0 (addresses [0x0000..0x0007]) */
        .text.sec0000 0x0 : AT(0x100000)
        {
            *(.text.sec0000)
        } : seg0000

        /* Section 1 (addresses [0x02d4..0x02d7]) */
        .text.sec0001 0x2d4 : AT(0x1002d4)
        {
            *(.text.sec0001)
        } : seg0001

        /* Section 2 (addresses [0x0cfc..0x0d03]) */
        .text.sec0002 0xcfc : AT(0x100cfc)
        {
            *(.text.sec0002)
        } : seg0002
    }

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: b4e5d40d======
======Short Message======
[prim_arbiter_fixed/fpv] Add generated FPV testbench
======Full Message======
[prim_arbiter_fixed/fpv] Add generated FPV testbench

Signed-off-by: Michael Schaffner <msf@google.com>



======Commit: d4594069======
======Short Message======
[dv/shadow_reg] top-level shadow reg sequence
======Full Message======
[dv/shadow_reg] top-level shadow reg sequence

In top-level, plan to use a simpler shadow_reg sequence
This sequence will loop through all shadow_regs within the chip, then
1. Do an update error by first writing 'h5555_5555 to shadow_reg,
   then write h'aaaa_aaaa as second write.
2. Do a storage error by poking either the shadow_reg or committed_reg.
3. Check alert handshakes.

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: c63af95d======
======Short Message======
[dv/common] Support TL abort at mem test and TL errors
======Full Message======
[dv/common] Support TL abort at mem test and TL errors

Add abort control at `tl_access` and test mem with abort
Enable TL abort at tl error seq

Signed-off-by: Weicai Yang <weicai@google.com>



======Commit: 16a72e37======
======Short Message======
[mask_rom] Fix SP Initialization
======Full Message======
[mask_rom] Fix SP Initialization

I failed to initialize the stack pointer correctly in the initial
Mask ROM CRT, and only just noticed. This confusion comes from the fact
that I unified `_start` and `_end` to always go from lowest address to
highest, and forgot that in RISC-V the stack grows downwards.

In the other linker scripts, `_stack_start` is the highest address on
the stack, but not in Mask ROM (or ROM_EXT).

Signed-off-by: Sam Elliott <selliott@lowrisc.org>



======Commit: aa7022d9======
======Short Message======
[otp_ctrl] Add partition defaults and make LC state invalid by default
======Full Message======
[otp_ctrl] Add partition defaults and make LC state invalid by default

Signed-off-by: Michael Schaffner <msf@opentitan.org>



======Commit: 1df43b35======
======Short Message======
[otp_ctrl] Minor updates and fixes
======Full Message======
[otp_ctrl] Minor updates and fixes

- Fixes a small bug in the digest calculation of the DAI.
- Makes all DAI accesses to digests 64bit in size.

Signed-off-by: Michael Schaffner <msf@opentitan.org>



======Commit: 93739435======
======Short Message======
[dv/common] Fix testplan path
======Full Message======
[dv/common] Fix testplan path

PR #3656 didn't apply the changes to some recent commits
Also update uvmdvgen

Signed-off-by: Weicai Yang <weicai@google.com>



======Commit: 75b5197b======
======Short Message======
[prim_assert] Fixed non-UVM part of `ASSERT_ERROR
======Full Message======
[prim_assert] Fixed non-UVM part of `ASSERT_ERROR

Signed-off-by: Srikrishna Iyer <sriyer@google.com>



======Commit: 5d140b37======
======Short Message======
[otp_ctrl] Simplify and consolidate OTP error codes
======Full Message======
[otp_ctrl] Simplify and consolidate OTP error codes

Signed-off-by: Michael Schaffner <msf@opentitan.org>



======Commit: 7a895e75======
======Short Message======
[otp_ctrl/doc] Simplify and consolidate OTP error codes in docs
======Full Message======
[otp_ctrl/doc] Simplify and consolidate OTP error codes in docs

Signed-off-by: Michael Schaffner <msf@opentitan.org>



======Commit: f2fe351e======
======Short Message======
[kmac] Fix critical syntax errors.
======Full Message======
[kmac] Fix critical syntax errors.

This commit is to fix a few critical errors preventing the design from
compiling in the simulator. Mainly the KMAC has been checked in FPV not
in the simulator until now. So some parts of the design assumed `FPV_ON`
is set always.

Also, this fixes parts of the lint error such as typo, bit-width
mismatches.

Signed-off-by: Eunchan Kim <eunchan@opentitan.org>



======Commit: c4e20d85======
======Short Message======
[otp_ctrl] Fix scrmbl assertion failure
======Full Message======
[otp_ctrl] Fix scrmbl assertion failure

Fix a small enum typo in otp_ctrl assertion.
Delete IV check because it is tied to constant.

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: b2dd288b======
======Short Message======
[otp_ctrl] TL-UL window fixes
======Full Message======
[otp_ctrl] TL-UL window fixes

This consolidates the TL-UL windows for the SW_CFG partitions, thereby
making the CSR layout simpler.

This however requires some more explicit addressing decoding logic in
otp_ctrl.sv.

Signed-off-by: Michael Schaffner <msf@opentitan.org>



======Commit: e7a2957e======
======Short Message======
[dv/alert_handler] fix ping_corner_cases to adapte different ping timers
======Full Message======
[dv/alert_handler] fix ping_corner_cases to adapte different ping timers

In previous ping_corner_cases test, after a ping request is detected,
the sequence will randomly choose to insert alert or reset. Then it will
wait until the escalation phases are done. However, the new entropy
LFSR SEED changes the ping frequency - that some pings are triggered in
a short interval. So there are cases that ping triggered during
`run_ping_interrupt_seqs`. To avoid this, this PR:
1). Remove the wait for escalation phases done logic in
`run_ping_interrupt_seqs` task
2). Remove the `alert_handler_init` calls in each transaction in
ping_corner_cases, it only calls `alert_handler_init` after dut_init.
3). Fix a small logic in `alert_handler_sanity` test, the
set_config_locked logic should happen right after the `lock_config`
call. Current logic it happened after driving alert and escalation
response.

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: 4edcfd6f======
======Short Message======
[otbn] add modexp subroutine for pubexp 65537
======Full Message======
[otbn] add modexp subroutine for pubexp 65537

This adds a subroutine for modular exponentiation
with the public exponent 66537.
The routine uses plain sqr+mult which is inherently
constant-time due to the fixed exp.
It uses still the old bulky calling conventions for
now to be consistent with the full modexp.

Signed-off-by: Felix Miller <felix.miller@gi-de.com>



======Commit: a3977744======
======Short Message======
[dv/xbar] Fix xcelium warning
======Full Message======
[dv/xbar] Fix xcelium warning

chip xbar re-defines some macro as chip TB uses different way connect tl
ports. I feel it's better to use another macro name rather than
re-define existing macro. This will fix xcelium warning

Signed-off-by: Weicai Yang <weicai@google.com>



======Commit: e1bf879c======
======Short Message======
[dv] Minor fixups to dv_Utils_pkg
======Full Message======
[dv] Minor fixups to dv_Utils_pkg

- Made the package importable in non UVM testbenches.

Signed-off-by: Srikrishna Iyer <sriyer@google.com>



======Commit: 5b626f5c======
======Short Message======
[dv] Fix platform-agnostic log macros
======Full Message======
[dv] Fix platform-agnostic log macros

- Updated `DV_INFO|WARNING|ERROR|FATAL` macros for UVM to directly
invoke the functions scoped with `uvm_pkg::` - this takes the guesswork
out (whether the module it is invoked in has already imported uvm_pkg r
not...)

Signed-off-by: Srikrishna Iyer <sriyer@google.com>



======Commit: 5273cee1======
======Short Message======
[otbn] Fix otbn-as for input files that don't end with a newline
======Full Message======
[otbn] Fix otbn-as for input files that don't end with a newline

Obviously, such files are evil and should be banned :-) But we
probably shouldn't explode when reading them.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 4bb2b9b2======
======Short Message======
[dv/alert] fix xcelium error and warning
======Full Message======
[dv/alert] fix xcelium error and warning

Fix xcelium compile error by adding a size to the constant assignment
Fix xcelium warning by adding a static keyword to tb variable
Update naming for alert_esc_agent to avoid word `temp`

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: 5fdd53bc======
======Short Message======
[reggen] Enum Value Definition Fixes
======Full Message======
[reggen] Enum Value Definition Fixes

Reggen has been generating enum values already, directly using the
definitions from the hjson. This causes issues when binary literals are
included in the string, as we don't allow those in C/C++ code, so this
change moves to emitting all values as hexadecimal values.

The other change this makes is to add '_VALUE_` between the register
field name and the enum name, so that there are no collisions between
the offset/mask definitions and the enum values.

Closes #3804.

Signed-off-by: Sam Elliott <selliott@lowrisc.org>



======Commit: aace53c2======
======Short Message======
[entropy_src/rtl] fix for dv sanity test
======Full Message======
[entropy_src/rtl] fix for dv sanity test

There is an rtl fix to allow the sanity test to run.
There are lint and style changes added in several files.
The request/ack state machine was added to insure proper bus timing.

Signed-off-by: Mark Branstad <mark.branstad@wdc.com>



======Commit: 81acec48======
======Short Message======
[otp_ctrl] Lint fixes
======Full Message======
[otp_ctrl] Lint fixes

Signed-off-by: Michael Schaffner <msf@google.com>



======Commit: b0a3ba58======
======Short Message======
[spiflash] Avoid libftdi Deprecated Errors
======Full Message======
[spiflash] Avoid libftdi Deprecated Errors

Signed-off-by: Sam Elliott <selliott@lowrisc.org>



======Commit: 1052ce1b======
======Short Message======
[util] Add Offset Support to ROM_EXT Manifest Generator
======Full Message======
[util] Add Offset Support to ROM_EXT Manifest Generator

This adds the ability to generate "offsets", which are like fields but
they don't have any size definitions. We need these for the entry point
and the interrupt vector, but I also added one so we know where the
signed area starts.

I also added support for specifying a non-default alignment, which
ensures fields and offsets are at their required alignment.

Signed-off-by: Sam Elliott <selliott@lowrisc.org>



======Commit: 50770646======
======Short Message======
[dv/alert_handler] add async logic in alert interface
======Full Message======
[dv/alert_handler] add async logic in alert interface

Since it might take a little bit time until standard CDC is implemented,
this PR propose a temp 2 cycle delay model in alert_esc_if:
1. Add two flops to get two cycle delayed values in interface
2. Remove the patched two cycle delay in alert_monitor
3. In wait_ping tasks, add reset considerations. (alert ping is edge
triggered, and reset will flip the ping to 0. This might cause a
unexpected reset in scb)

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: 4b26a92f======
======Short Message======
[prim] Fix AscentLint waiver that made the tool crash
======Full Message======
[prim] Fix AscentLint waiver that made the tool crash

This error has been reported to RealIntent, as the tool did not output a
meaningful error message.

Signed-off-by: Michael Schaffner <msf@google.com>



======Commit: 945bbef4======
======Short Message======
[checklists] Clean up and align HW and SW checklists
======Full Message======
[checklists] Clean up and align HW and SW checklists

This introduces the following changes:
- Remove Reviewer(s) and signoff for D1, D2, V1, V2
- Align discrepancies wrt to template
- Fix all links to checklist items
- Remove reviewer and signed-off rows for S1/2
- Fix links in SW checklists

Signed-off-by: Michael Schaffner <msf@opentitan.org>



======Commit: dbe7a745======
======Short Message======
[doc] Update documentation to use Ubuntu 18.04
======Full Message======
[doc] Update documentation to use Ubuntu 18.04

Fixes #3664

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: 3dcf49e4======
======Short Message======
[otbn] Write flags on logical operations
======Full Message======
[otbn] Write flags on logical operations

Previously logical operations did not alter flags, with this change the
M, L and Z flags are updated on all logical operations. C is left
unaltered.

Fixes #3688

Signed-off-by: Greg Chadwick <gac@lowrisc.org>



======Commit: 3e65dbad======
======Short Message======
[rom_ext] Manifest Generator Meson Fixes
======Full Message======
[rom_ext] Manifest Generator Meson Fixes

Signed-off-by: Sam Elliott <selliott@lowrisc.org>



======Commit: 248ed9e0======
======Short Message======
[usb] Fix lint errors and warnings
======Full Message======
[usb] Fix lint errors and warnings

Signed-off-by: Pirmin Vogel <vogelpi@lowrisc.org>



======Commit: 0949a17e======
======Short Message======
[flash_ctrl] Switch to new keyschedule in PRINCE
======Full Message======
[flash_ctrl] Switch to new keyschedule in PRINCE

This fixes a bug in the improved keyschedule in the PRINCE primitive,
and enables that new keyschedule inside the flash controller.

The comment was outdated, as we have decided to go with PRINCE due to
the lower latency and area with respect to PRESENT.

Signed-off-by: Michael Schaffner <msf@opentitan.org>



======Commit: 97a103dc======
======Short Message======
[lint] fix the waiver format
======Full Message======
[lint] fix the waiver format

Revised to fix the multiline waivers in xilinx_pad_waiver

Signed-off-by: Eunchan Kim <eunchan@opentitan.org>



======Commit: a3a75a18======
======Short Message======
[sw] Fix for RISCV compliance test.
======Full Message======
[sw] Fix for RISCV compliance test.

- A write to the `kDeviceTestStatusAddress` with the value returned from
main() was removed from `flash_crt.S` in an earlier commit.
- This adds an explicit `test_status_set()` call in the RISCV compliance
`support.c` source to get it to exit gracefully.

Signed-off-by: Srikrishna Iyer <sriyer@google.com>



======Commit: a0b489da======
======Short Message======
[sw] Remove kDeviceStopAddress from device.h
======Full Message======
[sw] Remove kDeviceStopAddress from device.h

- Removed kDeviceStopAddress since it does the same thing as
kDeviceTestStatusAddress
  - Also update kDeviceTestStatusAddress to 0x30000000
  - KDeviceLogBypassUartAddress to 0x30000004
- Updated `hart.c` to remove extra writes on abort()
- Updated boot_rom to invoke `abort()` on return from flash
- Added helper function in test_status.c
- Replicated some of the changes from PR #3598

- Fixes #3619

Signed-off-by: Srikrishna Iyer <sriyer@google.com>



======Commit: 3e932b0c======
======Short Message======
[dv,sim_sram_if] Minor enhancements to sim_sram_if
======Full Message======
[dv,sim_sram_if] Minor enhancements to sim_sram_if

- Added both, tl_d2h and h2d ports as inputs
- Added a wr_valid signal to qualify writes to the SRAM
addr region.
- Spacing fixes in `sim_sram.sv`

Signed-off-by: Srikrishna Iyer <sriyer@google.com>



======Commit: fa54f39c======
======Short Message======
[dv common] Add platform-agnostic log macros
======Full Message======
[dv common] Add platform-agnostic log macros

- Adds `DV_INFO|WARNING|ERROR|FATAL` macros that expands to UVM log
facilities if UVM is defined, or to standard SV system tasks.

Signed-off-by: Srikrishna Iyer <sriyer@google.com>



======Commit: c70b8f50======
======Short Message======
[sim sram] TLUL sink enhancement
======Full Message======
[sim sram] TLUL sink enhancement

- Updated tlul_sink to behave more like `tlul_adapter_reg`
- remove same cycle response mode which does not work
- Added error handling capabilities

Signed-off-by: Srikrishna Iyer <sriyer@google.com>



======Commit: 693b65ca======
======Short Message======
[sparse-fsm-encode] Expand error and help messages
======Full Message======
[sparse-fsm-encode] Expand error and help messages

Signed-off-by: Michael Schaffner <msf@opentitan.org>



======Commit: 0205d7cf======
======Short Message======
[dv/common] TLUL agent function coverage
======Full Message======
[dv/common] TLUL agent function coverage

Added these covergroup
1. a_chan_cov_cg: cover basic req info like opcode, source, mask
2. d_chan_cov_cg: cover basic rsp info
3. same address used in more than 1 outstanding items
4. all kinds of error cases

Signed-off-by: Weicai Yang <weicai@google.com>



======Commit: a72a6362======
======Short Message======
[dv/shadow_reg] support alert handshake checking
======Full Message======
[dv/shadow_reg] support alert handshake checking

This PR support AES block level alert handshake checking:
1). Add an enum `shadow_reg_alert_e` to store the storage and update
error names.
2). Add a `shadow_reg_wr` task to write to shadow register, this write
will also monitor if alert has been triggered during the write and
return an `alert_triggered` bit.
3). For storage error, in order not to fire alert too many times, this
sequence will backdoor write back the original value once the storage
alert is triggered.
4). In `dv_base_reg` class, I added a `update_shadow_val` function to
update shadow_reg value according to design. This should only be called
after post_write.

In top level, I temp disabled alert_check and leave a todo, I would like
to further investigate:
1). How to carry the block level customization (eg `aes_common_vseq.sv`)
to top-level.
2). If only check alert_triggered and connectivity, maybe top-level can
use a simpler sequence rather than this.

Also this PR depends on the fix of issue #3635

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: 9e858fb8======
======Short Message======
[otbn] Style fixes in case statements
======Full Message======
[otbn] Style fixes in case statements

Tweaks to formatting so clauses in case statements are either entirely
on one line or consistently use begin/end.

Signed-off-by: Greg Chadwick <gac@lowrisc.org>



======Commit: 78b40501======
======Short Message======
[otbn] Fix BN.ADDI/BN.SUBI
======Full Message======
[otbn] Fix BN.ADDI/BN.SUBI

The immediate add/sub do not allow shifted operands so the shift amount
must be set to 0 when executing them.

Signed-off-by: Greg Chadwick <gac@lowrisc.org>



======Commit: 65ecc7a6======
======Short Message======
[otbn] Fix insn_subset latch
======Full Message======
[otbn] Fix insn_subset latch

insn_subset in otbn_decoder was being inferred as a latch as it lacked a
default value.

Signed-off-by: Greg Chadwick <gac@lowrisc.org>



======Commit: cf048240======
======Short Message======
[otbn] Small decode fixes and struct rearrangement
======Full Message======
[otbn] Small decode fixes and struct rearrangement

This places far more of the decoder signals into the specific
base/bignum structs. Those signals that are moved into the specific
structs may have had a shared meaning but are unrelated in terms of
logic (e.g. operand select for the ALUs, different decode logic for
bignum and base ISAs and different ALU muxes they control).

There are some small clean-ups around removing unused types and enums
that relate to decode.

Signed-off-by: Greg Chadwick <gac@lowrisc.org>



======Commit: d8bfaf10======
======Short Message======
[otbn] Generate a skeleton test framework with uvmdvgen
======Full Message======
[otbn] Generate a skeleton test framework with uvmdvgen

We've currently got various "verification-ish" tools in hw/ip/otbn/dv,
so we either have to move them or put the DV code generated by
uvmdvgen in its own subfolder.

In this patch, I've gone for the latter option. It's generated by
running:

    util/uvmdvgen/uvmdvgen.py otbn -e -eo hw/ip/otbn

and then moving everything that was created in hw/ip/otbn/dv into a
new directory called hw/ip/otbn/dv/uvm. I then manually fixed up a
couple of paths.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: d36be2ed======
======Short Message======
[aes] Fix lint error
======Full Message======
[aes] Fix lint error

Signed-off-by: Pirmin Vogel <vogelpi@lowrisc.org>



======Commit: d2634eef======
======Short Message======
[kmac checklist] Fix CI failure (build-docs)
======Full Message======
[kmac checklist] Fix CI failure (build-docs)

Signed-off-by: Srikrishna Iyer <sriyer@google.com>



======Commit: 429dc701======
======Short Message======
[otp/fpv] update error code assertion
======Full Message======
[otp/fpv] update error code assertion

This `OtpErrorState_A` ensures OTP unrecoverable errors go to terminal
state. But the unrecoverable errors seem to be out-of-dated.
This PR added all recoverable errors from the spec.

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: ead2229b======
======Short Message======
[dv] Fix 2 regression failures
======Full Message======
[dv] Fix 2 regression failures

1. uart tx watermark calculation needs to remove one for processing item
2. Shouldn't update predicted reg value in post_write when the item is
aborted (rw.state == UVM_NOT_OK)

Signed-off-by: Weicai Yang <weicai@google.com>



======Commit: 7429e2cd======
======Short Message======
[otbn] add documentation to modexp library
======Full Message======
[otbn] add documentation to modexp library

This patch only adds documentation and does not change
any instructions.

Signed-off-by: Felix Miller <felix.miller@gi-de.com>



======Commit: a90106fb======
======Short Message======
[otbn] Memoize disassembly in the ISS
======Full Message======
[otbn] Memoize disassembly in the ISS

When running loops, we end up running the same instruction lots of
times. Avoid the reasonably expensive operation of disassembling it
each time.

With a silly "run nop 1e6 times in a loop" test, memoization speeds up
execution from ~45 KHz to ~65 KHz. This is the standalone wrapper
without the '-v' flag.

This patch does slightly more, avoiding calling disassemble at all
when the '-v' flag isn't passed. This bumps things up further to
~69KHz.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: d0136850======
======Short Message======
[otbn] Silence mypy error in yaml_parse_helpers.py
======Full Message======
[otbn] Silence mypy error in yaml_parse_helpers.py

There might be a cleverer way to tell mypy the base class here, but I
don't see much point. Just tell it to be quiet!

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 6154c5c2======
======Short Message======
[formal/doc] Minor typo fix in subtitle
======Full Message======
[formal/doc] Minor typo fix in subtitle

Signed-off-by: Michael Schaffner <msf@opentitan.org>



======Commit: 893b4297======
======Short Message======
[dv common] SW test status interface updates
======Full Message======
[dv common] SW test status interface updates

- Now written in pure SV for Verilator compatibility
- Fixes some simulation issues with previous implementation.

Signed-off-by: Srikrishna Iyer <sriyer@google.com>



======Commit: 890cf7cf======
======Short Message======
[dv, verilator] Simulation memory prototype impl
======Full Message======
[dv, verilator] Simulation memory prototype impl

This change set implements a small memory used for chip level
simulations. An empty space in the chip address map can be used for this
memory. It is primarily used for the embedded CPU in the design (Ibex)
to signal information to the testbench, for example indicate when the SW
is done and the simulation can exit.

Currently, a couple of addresses in our on-device SRAM are being used
for this purpose. With this patch, those are completely gone.

The simulation SRAM intercepts a TL interface to instantiate a 1:2
socket and the (adapter + ) SRAM. This must NOT exist during synthesis,
hence takes the following strategy:
- An interception point is created in `rv_core_ibex` - this is done by
disconnecting the output of the TL fifo and the module port. This
disconnection happens only if `VERILATOR` or `UVM` is defined.
- THis allows the user to instantiate the SRAM in the testbench and
connect its inputs and outptuts to the interception point in
`rv_core_ibex`.
- This enables us to preserve the original design hierarchy without
pulluting with simulation components (or adding forces which is not
supported in Verilator).

Please see sim_sram documentation for more details.

Once approved, the address locations for signaling the end of test and
logging will be switched over to use this address space.

Signed-off-by: Srikrishna Iyer <sriyer@google.com>



======Commit: d9e3350a======
======Short Message======
[prim] Fix Lint warning for prim_slicer
======Full Message======
[prim] Fix Lint warning for prim_slicer

Changed the design to unroll up to OutW*(2^IndexW) and slice from it.
this resolves mismatch width warning in lint.

Signed-off-by: Eunchan Kim <eunchan@opentitan.org>



======Commit: efd2690a======
======Short Message======
[dv/common] Fix a few regression failures
======Full Message======
[dv/common] Fix a few regression failures

1. TL driver returns d_error = 0 and req_complete = 0 when reset occurs
2. Fix driving TL abort in stress all with reset test
3. Fix infinite loop
  in below loop, when reset occurs, we no longer update ral predict
  value. `status` will be a fixed value and this may create a deadloop
'''
do begin
 csr_rd(.ptr(ral.fifo_status), .value(fifo_status));
end while (get_field_val(ral.status.txidle, status) == 0);
'''
  In previous TL driver, we updated predicted value no matter if reset
  occurs or not. so, this kind of issue doesn't show up. But it makes
  more sense to not update when it's in reset

Signed-off-by: Weicai Yang <weicai@google.com>



======Commit: 1602432c======
======Short Message======
[dv/alert_handler] fix two errors in alert_handler
======Full Message======
[dv/alert_handler] fix two errors in alert_handler

1. In alert_handler sender_driver, there could be a race condition to when
reset issued. So to guarantee the reset can release all semaphores, this
PR moves the release function after reset is deasserted.

2. In alert_handler_sanity_test, this PR changed the order to predict
`lock` condition right after issued `do_lock` task. In current sequence,
the prediction happened after triggering alert and escalation, this
could be too late if we have any reset or ping that disable the thread
in the middle.

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: a814d043======
======Short Message======
[dv/alert_handler] fix alert_en hardcoded constraints
======Full Message======
[dv/alert_handler] fix alert_en hardcoded constraints

In `alert_handler_entropy_vseq.sv`, there is a hardcoded constrain for
`alert_en`. This constraint causes alert_en to only set to `'b1111`.
However in top-level, there are more than 4 alerts. This commit fixes
this issue.

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: ee872bcd======
======Short Message======
[uart/dv] Fix a corner case
======Full Message======
[uart/dv] Fix a corner case

tx watermark needs to be updated in couple cycle after adding/removing
an item. Need to use the queue size value (which is before the delay) to
predict the watermark

Signed-off-by: Weicai Yang <weicai@google.com>



======Commit: 34b7fac6======
======Short Message======
[reggen] Change log.info calls to log.debug
======Full Message======
[reggen] Change log.info calls to log.debug

These calls seem to be used to trace through the run of the tool.
Among other things, they spam the console when building the
documentation. Following the recommendations at [1], I think they
should be classed as debug.

Interestingly, once you do this, you notice a whole load of
warnings (from reggen.gen_html), which look like they might be worth
looking at.

[1] https://docs.python.org/3.8/howto/logging.html#logging-basic-tutorial

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 2b9d8c8d======
======Short Message======
[reggen] Improve names when unpacking field bits
======Full Message======
[reggen] Improve names when unpacking field bits

No functional change, but this patch names the elements in the tuple
that comes back from the call to bitmask, which makes the code a bit
easier to follow.

As a plus, the check that field_msb fits in the register width doesn't
need the explanatory comment any more, because the variable names make
it clear what's going on.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 8a2ccbdc======
======Short Message======
[dv/otp_ctrl] Add exclusions to csr automation tests
======Full Message======
[dv/otp_ctrl] Add exclusions to csr automation tests

1. Add exclusions to CSR automation test
2. Fix port naming from tb
3. Add clear mem and drive pwr input

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: a49d704b======
======Short Message======
[sw] Deny Most GNU Extensions
======Full Message======
[sw] Deny Most GNU Extensions

This includes fixups for empty struct initializers (which should just be
omitted), and an empty struct declaration (which was unused).

This change does not enable warnings about comma pasting in variadic
macros, because we use it in one place, and the problematic macro is
complex enough that a refactor might take some time. I have added it to
the list of warnings to enable in the future.

Signed-off-by: Sam Elliott <selliott@lowrisc.org>



======Commit: 6fa87b1c======
======Short Message======
[sw] Enable More Warnings
======Full Message======
[sw] Enable More Warnings

In this commit, we increase the meson warning level, which in this case
enables `-Wextra`. Given we have warnings-as-errors, this commit also
turns off specific warning kinds which are triggered in existing code.

It is our intention to remove these ignores in the future.

Signed-off-by: Sam Elliott <selliott@lowrisc.org>



======Commit: 499ad612======
======Short Message======
[sw] Ensure all switches have defaults
======Full Message======
[sw] Ensure all switches have defaults

Signed-off-by: Sam Elliott <selliott@lowrisc.org>



======Commit: 3eed4a77======
======Short Message======
[sw] Add Warnings for Implict Fallthrough
======Full Message======
[sw] Add Warnings for Implict Fallthrough

This catches a very common C pitfall: case statement bodies requiring a
`break` statement so they don't execute the next case body.

This caught a bug in `dif_i2c.c` which is now fixed.

A vendored file in CoreMark has a few errors, so I'm avoiding enforcing
this rule on that build target.

Signed-off-by: Sam Elliott <selliott@lowrisc.org>



======Commit: 90b6c2bd======
======Short Message======
[fpga] Route UART Tx to second pin on ChipWhisperer board for debugging
======Full Message======
[fpga] Route UART Tx to second pin on ChipWhisperer board for debugging

On the ChipWhisperer FPGA board, the UART is connected to the capture
board and used for transfering input and output data. This commit adds a
second UART Tx pin to allow debugging before capturing traces.

Signed-off-by: Pirmin Vogel <vogelpi@lowrisc.org>



======Commit: b627f16c======
======Short Message======
[kmac] Revise CFG to be read-only in HW
======Full Message======
[kmac] Revise CFG to be read-only in HW

This commit is to fix the CFG register behavior. It was external and
`hrw` type for HW to direct control the write permission.  After
utilizing REGWEN feature, it doesn't have to be write-able from HW view.
The permission was remained and caused the unknown value to kmac_en and
rest of the values, which creates an error on FPV.

Signed-off-by: Eunchan Kim <eunchan@opentitan.org>



======Commit: c35c520b======
======Short Message======
[otbn] Fix off-by-one error in otbn-as li handling
======Full Message======
[otbn] Fix off-by-one error in otbn-as li handling

The "this is a small constant" check is supposed to check whether the
value can be represented as a 12-bit signed number, but it was
checking against the range [-2^12, 2^12-1] rather than [-2^11, 2^11-1].

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 9cc6766a======
======Short Message======
[test] Add system tests running on a Nexys Video board
======Full Message======
[test] Add system tests running on a Nexys Video board

Run a basic set of sanity tests on FPGA: flash the FPGA with the
bitstream, load software over SPI with the spiflash tool, connect to the
UART device, and check if the software does what it should do.

For this first PR we run all self-checking software tests, as we do on
the Verilator simulation target (minus the usbdev one, which isn't
supported on FPGA, as it needs the USBDPI module).

To run the FPGA tests only, run

```
pytest -sv --log-cli-level=DEBUG test/systemtest/earlgrey/test_fpga_nexysvideo.py
```

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: ff9b7f86======
======Short Message======
[opentitan-pgm-fpga] Add ability to choose HW server
======Full Message======
[opentitan-pgm-fpga] Add ability to choose HW server

Add the ability to choose a running Xilinx HW server instead of starting
a new one on localhost (the default behavior, which is unchanged). This
is mainly useful for remote/CI setups where the FPGA board is connected
to another machine.

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: 03aaf320======
======Short Message======
[test] Refactor system tests to use pytest as runner
======Full Message======
[test] Refactor system tests to use pytest as runner

System tests, living in `test/systemtest`, test the whole end-to-end
design of OpenTitan: they initialize the target (e.g. a simulation, an
FPGA, or later an ASIC), load test software as needed, and check for
outputs or other expected behavior. To do so, multiple components need
to work together. For example, a simulation process, components for data
transfer (such as OpenOCD), components which interact with (simulated or
real) external interfaces, etc. Pytest provides a very convenient way to
handle such situations through their fixtures. Our current system tests
make use of this functionality.

What we haven't been using in the past is the ability of pytest to serve
as test runner: select tests, collect their output and results, etc.
(Instead, a shell script was used.)

This PR refactors the system tests to make use of pytest as test runner,
with one main consequence: Tests are now "opinionated", they don't take
configuration parameters through command line arguments any more. Tests
expect build outputs in the distribution directory (`build-bin`) to be
in the well-known layout for this directory.

Notes:
* This commit lays the groundwork to add tests running on an FPGA target
  in a similar way as the verilated tests, which should explain some of
  the structuring of the code.
* The ability to run the debug "compliance test" built into OpenOCD,
  which was present in the `test/systemtest/openocd_verilator_test.py`
  file, has been removed temporarily. This test was unmaintained, and
  will be brought back in revised form at a later time.
* Equally, the "FPGA test runner" available in
  `test/systemtest/functional_fpga_test.py` has been rarely used (as a
  poll on Slack showed) and is also removed.
  It will be brought back in modified form in a future commit.

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: a3df7faa======
======Short Message======
[ci] Remove package installation from artifact download job
======Full Message======
[ci] Remove package installation from artifact download job

The artifact download job currently installs a package and needs
sudo/root permissions for that, which are not available in all builders.
Remove the sudo call, as it was for debugging only.

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: bf622991======
======Short Message======
[uartdpi] Add missing stdbool include
======Full Message======
[uartdpi] Add missing stdbool include

The uartdpi.c file uses bool but didn't include stdbool.h. Fix that.

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: 20dcb167======
======Short Message======
[fpga] Fix hierarchical signal reference in CW305 top
======Full Message======
[fpga] Fix hierarchical signal reference in CW305 top

Signed-off-by: Pirmin Vogel <vogelpi@lowrisc.org>



======Commit: 5b16d7cf======
======Short Message======
[otbn] Adjust BN.LID/BN.SID/BN.MOVR encoding
======Full Message======
[otbn] Adjust BN.LID/BN.SID/BN.MOVR encoding

As these use indirect addressing grd register field is moved to the
field used for grs2 in all other instructions as the given grd value
becomes a base side register to read to generate a bignum side register
index for the destination register.

BN.SID has no destination but the grs2 register field is moved to match
with all other instructions (and so the offset and inc fields match up
with BN.LID/BN.MOVR).

Fixes #3666

Signed-off-by: Greg Chadwick <gac@lowrisc.org>



======Commit: 098128c9======
======Short Message======
Revert "Revert "[usbdev] Fixes for I/O modes and expand their tests""
======Full Message======
Revert "Revert "[usbdev] Fixes for I/O modes and expand their tests""

This reverts commit d2e1184308b9582551252d1135a126ea558a6ab8 which
itself reverts commit 66c509296798cdd9dbeba4deeb381d0cecf3b429.

The original commit was suspected to increase FPGA synthesis times by
2x and to cause many CI failures. With lowRISC/OpenTitan#3647 those
issues have been resolved which is why the original commit can be
re-applied.

Signed-off-by: Pirmin Vogel <vogelpi@lowrisc.org>



======Commit: 0561610e======
======Short Message======
[otbn] fix increment for BN.SID and BN.LID
======Full Message======
[otbn] fix increment for BN.SID and BN.LID

The read/write pointer has to be incremented
by 32 when accessing dmem in order to address
full 256-bit dmem cells.

Signed-off-by: Felix Miller <felix.miller@gi-de.com>



======Commit: eea1a6ce======
======Short Message======
[otp_ctrl/doc] Incremental documentation updates
======Full Message======
[otp_ctrl/doc] Incremental documentation updates

- Update links, remove several TODOs
- Document initialization sequence for periodic checks
- Update buffered partition FSM diagram
- Updates for interface signals, blockdiagram and scrambling keys
- Updated error codes and description
- Updated scrambling docs, added RAW unlock token hashing function
- Add LCI and KDI documentation

Signed-off-by: Michael Schaffner <msf@opentitan.org>



======Commit: cbf6cf31======
======Short Message======
[dv/common] Add run opt plusarg to enable file path in the log
======Full Message======
[dv/common] Add run opt plusarg to enable file path in the log

Address #3495
Use +show_file_path=1 to show file path. By default only show file name

Signed-off-by: Weicai Yang <weicai@google.com>



======Commit: b5bc0f79======
======Short Message======
[otbn] Use error signal in otbn_top_sim
======Full Message======
[otbn] Use error signal in otbn_top_sim

The block-level sim now exits with non-zero status code (and doesn't
print a register dump) if anything goes wrong.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 6e518c5b======
======Short Message======
[otbn] Add proper error tracking to otbn_core_model
======Full Message======
[otbn] Add proper error tracking to otbn_core_model

This turned out to be a bit painful: if you want to update more than
one SystemVerilog variable, you need to put the logic in a task, but
then verilator notices that you're being called from an always_ff
block and tells you to use non-blocking assignments (not
unreasonably). It also complains if you mix blocking and non-blocking
assignments. If you still need to inspect the return code from DPI
functions, you might try to change this pattern:

   retcode = call_dpi(arg1, arg2);
   unique case (retcode)
     ...
   endcase

to this one:

   unique case (call_dpi(arg1, arg2))
     ...
   endcase

but that doesn't work because call_dpi(..) gets evaluated (with
side-effects) for each branch of the case statement until a match is
found.

So I gave up, packing the status bits that I cared about into an
integer and just doing the stateful updates in the C++ code.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: b35a77dd======
======Short Message======
[otbn] Fix CSRRW in ISS when destination is x0
======Full Message======
[otbn] Fix CSRRW in ISS when destination is x0

This was (wrongly) skipping the instruction entirely when the
destination is x0, rather than just skipping the read.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 2afda30b======
======Short Message======
[otbn] Pass "design scope" instead of a "standalone" flag to model
======Full Message======
[otbn] Pass "design scope" instead of a "standalone" flag to model

This patch doesn't add any new behaviour, but the point is that future
patches can bind checkers in to the design, starting at this scope.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 3d6ef53b======
======Short Message======
[otbn] Fix types in simple_test.py
======Full Message======
[otbn] Fix types in simple_test.py

The tmpdir fixture in pytest turns out to pass a py.path.local object,
rather than a string, as tmpdir. This doesn't matter with recent
Python versions, because it has an implicit string coercion which can
be used by functions like os.path.join. However, it *does* matter with
Python 3.5, as used on our CI nodes.

Make the types explicit (we don't actually run mypy checks, but it
might make things less confusing for the next person who looks) and
cast to str manually.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 24baa88a======
======Short Message======
[spiflash] Insert additional delays for robustness, increase SPI clock
======Full Message======
[spiflash] Insert additional delays for robustness, increase SPI clock

This commit adds two additional delays to the SPI Flash tool:
- Upon receiving the first frame, the device is expected to erase the
  internal Flash. The host should wait for this operation to complete
  before requesting the hash check.
- On the host side, we need to add a delay between receiving the data
  over SPI and actually using it.

With these two changes, the tool is much more robust and we can
raise the SPI clock frequency back to 1 MHz.

In addition, this commit fixes some comments and variable names (all
delays are given in microseconds instead of nanoseconds.)

This is related to lowRISC/OpenTitan#3606.

Signed-off-by: Pirmin Vogel <vogelpi@lowrisc.org>



======Commit: 3776f5be======
======Short Message======
[fpga] Add a clock buffer to the JTAG clock obtained from pinmux/padring
======Full Message======
[fpga] Add a clock buffer to the JTAG clock obtained from pinmux/padring

Vivado doesn't like us feeding LUT outputs (pinmux/padring) to clock
inputs (debug module) as this can lead to large hold time violations.
This commit adds a clock buffer to prevent this.

Signed-off-by: Pirmin Vogel <vogelpi@lowrisc.org>



======Commit: bf7659c4======
======Short Message======
[sw/device/examples] Fix Missing Conditional in CHECK
======Full Message======
[sw/device/examples] Fix Missing Conditional in CHECK

Signed-off-by: Pirmin Vogel <vogelpi@lowrisc.org>



======Commit: 02512399======
======Short Message======
[chip dv] Fix for RV timer test
======Full Message======
[chip dv] Fix for RV timer test

- Reduce timer deadline for DV to 100 us

Signed-off-by: Srikrishna Iyer <sriyer@google.com>



======Commit: 1267bd1c======
======Short Message======
[bootstrap] Fix Missing Conditional in CHECK
======Full Message======
[bootstrap] Fix Missing Conditional in CHECK

Signed-off-by: Sam Elliott <selliott@lowrisc.org>



======Commit: 55405b41======
======Short Message======
[kmac] Revise SHA3 Pad FPV test to match the signal
======Full Message======
[kmac] Revise SHA3 Pad FPV test to match the signal

Commit 663b814da revises the message interface name using from mask to
strb to make clear the term `mask` in KMAC/ SHA3 are for hardening
scheme for SCA attacks. The commit missed the revision of SHA3 Pad FPV
tb. This commit fixed it.

Signed-off-by: Eunchan Kim <eunchan@opentitan.org>



======Commit: 31ffc1de======
======Short Message======
[otbn] Fix possible overflow in BN.SUBM
======Full Message======
[otbn] Fix possible overflow in BN.SUBM

This was triggered by comments on commit 840e329 (a similar fix for
BN.ADDM). As specced before, you'd get an overflow if wrs1 = 0 and
wrs2 > 2**255 because the result would have a zero top bit when
truncated to 256 bits.

Since we're not using the borrow at all here, I've changed the
spec (and ISS code) to be more explicit, showing the subtraction and
testing whether the result is less than zero.

Note that the detailed behaviour depends on the fact that our negative
numbers are 2's-complement (in the case that the intermediate result
is less than -MOD), so I've made sure to say so explicitly in the
spec change.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 9ea7ad4b======
======Short Message======
[otbn] Fix BN.LID / BN.SID in ISS
======Full Message======
[otbn] Fix BN.LID / BN.SID in ISS

Now, BN.LID / BN.SID load and store 256-bit little-endian values (so
byte 0 is the LSB; byte 31 is the MSB). As before (and as expected by
the RISC-V base ISA), the LW / SW instructions load and store 32-bit
little-endian values. Before this change, the code was a mess of
reversed() calls. After lots of debug prints, I think it's finally
both consistent and right!

This patch also updates the post-increment behaviour as discussed in
issue #3587 and expands the documentation a bit.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 2f872b9c======
======Short Message======
[otbn] Add simple ISS testing infrastructure
======Full Message======
[otbn] Add simple ISS testing infrastructure

After breaking things a couple of times and starting to get specific
on exactly how some instructions should work, it looks like a good
idea to add some "smoke tests" for the simulator.

This patch adds a couple (checking we implement 'add' and 'addi'
correctly) but the idea is that we'll flesh that out for more
instructions in later commits.

The tests are extremely simple: each has a single assembly file,
together with a list of expected register values. We check that
assembling and linking the assembly file and running the simulation
ends up with the same values as expected.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: e24346c4======
======Short Message======
[otbn] Add some convenience commands to stepped.py
======Full Message======
[otbn] Add some convenience commands to stepped.py

These allow you to run a simulation and print out the resulting
registers with something like:

  echo -e "load_elf bug\nstart 0\nrun\nprint_regs\n" | \
    hw/ip/otbn/dv/otbnsim/stepped.py

which should make it easy to write some simple "golden model" tests.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 840e329b======
======Short Message======
[otbn] Fix rounding in bn.addm in ISS
======Full Message======
[otbn] Fix rounding in bn.addm in ISS

The add_with_carry function truncates its result to 256 bits, which is
what you normally want, but isn't what you want for BN.ADDM, where you
might overflow but then fix it by subtracting MOD.

I've updated the documentation to match. This now matches the RTL.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: b0005d08======
======Short Message======
[fpga] Fix clock constraint
======Full Message======
[fpga] Fix clock constraint

For some reason, Vivado moves one of the clock dividers inside clkmgr
to the outside of clkmgr. As a result, the path used to find the
relevant cell is wrong and the divided clock cannot be properly
constrained. This leads to a bunch of critical warnings.

This commit fixes the path such that the clock can be constrained.

Signed-off-by: Pirmin Vogel <vogelpi@lowrisc.org>



======Commit: 456e53d6======
======Short Message======
[dv] fix top-level csr failure
======Full Message======
[dv] fix top-level csr failure

Fix Top-level csr automation test failures due to:
1. pwrmgr register wake_status cannot be automatically predicted in csr
test. So excluded from csr read check

2. Top level shadow_reg has async alert_sender clocks. Previously to
make alert storage error, I waited for one clock cycle then backdoor
write back to original value. This will ensure only one alert is
triggered.
But in top-level async mode, one clock cycle for main_clock might be
less than one cycle alert_sender clock. Which will cause the
storage_error to be ignored.

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: ac559a08======
======Short Message======
[i2c, dv] Refactor, clean-up DV, and fix duplicated randomization
======Full Message======
[i2c, dv] Refactor, clean-up DV, and fix duplicated randomization

Signed-off-by: Tung Hoang <hoang.tung@wdc.com>



======Commit: 738f206f======
======Short Message======
[rstmgr data] Fix exclusion tags
======Full Message======
[rstmgr data] Fix exclusion tags

There were causing CSR tests at the top level to fail.

Signed-off-by: Srikrishna Iyer <sriyer@google.com>



======Commit: b7d02024======
======Short Message======
[DV common] Add DV_ASSERT_CTRL macro
======Full Message======
[DV common] Add DV_ASSERT_CTRL macro

This commit adds `` `DV_ASSERT_CTRL`` macro that can be used to control
assertions in the DUT from any arbitrary UVM code, without needing hooks
or interfaces between the UVM and the testebench. This uses the
`uvm_config_db` mechanism to allow a configuration bit to be set by the
UVM world to indicate specific instants in the test to turn on / off
assertions in a particular hierarchy.

It also fixes #3623 partially, by avoiding invoking `$assertoff` without
specifying the DUT hierarchy.

Signed-off-by: Srikrishna Iyer <sriyer@google.com>



======Commit: 63205aab======
======Short Message======
[XBAR DV] Fixes for the updated tl_agent
======Full Message======
[XBAR DV] Fixes for the updated tl_agent

Fixes in the XBAR DV for 100% pass rate with the TL agent updates.

Signed-off-by: Srikrishna Iyer <sriyer@google.com>



======Commit: f11ed059======
======Short Message======
[otp_ctrl] Make command trigger regs hwext
======Full Message======
[otp_ctrl] Make command trigger regs hwext

Fix #3624

Signed-off-by: Michael Schaffner <msf@opentitan.org>



======Commit: d2e11843======
======Short Message======
Revert "[usbdev] Fixes for I/O modes and expand their tests"
======Full Message======
Revert "[usbdev] Fixes for I/O modes and expand their tests"

This reverts commit 66c509296798cdd9dbeba4deeb381d0cecf3b429.

This commit is suspected to increase FPGA synthesis times by 2x and
seems to cause routing congestion. We'll need to have a closer look
what's going on there, but revert the change first to get CI latencies
back to normal.

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: 66c50929======
======Short Message======
[usbdev] Fixes for I/O modes and expand their tests
======Full Message======
[usbdev] Fixes for I/O modes and expand their tests

The differental mode reception and conversion was being done in the iomux
and potentially not passing all information to the usb_fs_rx module. Reworked
to pass the single ended and differential data to usb_fs_rx, recover them
both and use the configured mode to forward appropriately.

This changes the usbdev_iomux to only synchronize and pinflip I/O and
pass the rx d, d+ and d- to receive logic.

As part of debug fixed verilator UNOPTFLAT complaint and added a link
state representing the link being active but never seen SOF because this
is where a flipped link gets stuck between FPGA board and Linux. (The
flipped pullup will make it look like a LS not FS link so the 1.5Mbit
chatter is enough to get rx PID erros but also keeps resetting the
link so host_lost never fires).

Update verilator top and usbdpi to manage all the I/Os. And add code
to the usbdpi to be able to simulate pinflip and differential as well
as the normal pin mode. Note that because there is no other signal it
uses the tx_mode_se signal to control use of differential mode in both
tx and rx directions (so it only works if both phy config bits are the
same). It uses the DN PULLUP being asserted to detect flip.

Update hello_usbdev.c to set the phy config from gpio pins. These
are switches on the nexysvideo and can be set using gpio-dpi in
verilator.

Update top_earlgrey_nexysvideo to be able to fake swapping of USB pins.
Uses DN pullup to cause the pins used for DP and DN to be swapped, allows
testing of both flip options with one FPGA build.

Tested with verilator that all four settings of PINFLIP and DIFFIO in
hello_usb.c get the same expected output. Added a script to run all
four simulations (setting the GPIOs to control).

Tested with FPGA that PINFLIP=0,1 both work by setting the switch.

Included changes requested in software and hardware reviews.

Fixes lowRISC/OpenTitan#2598

Signed-off-by: Mark Hayter <mark.hayter@gmail.com>



======Commit: b57138e1======
======Short Message======
[otbn] fix function call in ISS
======Full Message======
[otbn] fix function call in ISS

Order of arguments of call to set_half_word_unsigned()
has to be reversed to match expectation.

Signed-off-by: Felix Miller <felix.miller@gi-de.com>



======Commit: d9881e9e======
======Short Message======
[otp/fpv] fix a few assertion compile error
======Full Message======
[otp/fpv] fix a few assertion compile error

PR #3574 update LFSR seeding and thus a few interface signal name gets
updated. This PR update the interface naming in ASSERT_KNOWN.

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: 7ffe17d9======
======Short Message======
[otbn] Make registers much more explicit in the ISS
======Full Message======
[otbn] Make registers much more explicit in the ISS

This patch defines a new class for registers (called Reg, in reg.py).
It's a bit simpler than the riscvmodel version, but the big difference
is that it has no magic coercions. If you want to get the value as an
unsigned integer, you call Reg.read_unsigned. If you want set the
value as a signed integer, you call Reg.write_signed. It's all very
explicit, which should hopefully catch corner cases in the spec.

reg.py also defines a RegFile class, to hold the registers. This is
used as-is for the wide registers, but is subclassed for GPRs in
gpr.py. This allows us to give x0 and x1 special behaviour (a zeros
register and a call stack, respectively).

Most of the rest of this patch is porting the instruction definitions
in insn.py to use the new register interface. Because there are no
magic coercions, the definitions get rather longer, but they are
hopefully easier to understand.

One notable change from the previous Register class is that you get an
assertion error if you try to assign an integer that's out of range.
So state.gprs.get_reg(1).write_unsigned(1 << 32) will trigger an
error. This means that code that does arithmetic on operands generally
gains an explicit mask "foo & ((1 << 32) - 1)". This was an
intentional design decision, because it means the code in
insn.py (which defines what the instruction does) fully specifies the
semantics, rather than relying on magic inside the Register class.

Similarly, the register files no longer override __getitem__ and
__setitem__. I think the result is less magical and the syntax more
accurately shows what's actually happening in the Python simulation.
The plan is that when we do automatic extraction from the ISS to the
spec examples, we'll do some sort of transformation, turning e.g.

    val1 = state.gprs.get_reg(self.grs1).read_unsigned()
    ...
    state.gprs.get_reg(self.grd).write_unsigned(result)

to something more like

    val = unsigned(state.gprs[self.grs1])
    ...
    state.gprs[self.grd] = from_unsigned(result)

So the "trace the assignments" approach to reading the documentation
works again.

When porting the instruction definitions, I made one intentional
change to behaviour (to match the intended semantics): If a big number
ALU instruction specifies a right shift of shift_bytes, it's now a
logical right shift, rather than an arithmetic one.

I also got rid of most updates to variable values in the instruction
definitions, so they are now in a sort of "pseudo-SSA style". This
tends to be more convenient when you're looking at pseudo-code
documentation, especially when debugging or trying to write formal
definitions, because you can say "foo" rather than "the value of foo
at line 12".

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: c70ce6df======
======Short Message======
[memutil] Simplify how we read ELF files in verilator_memutil.cc
======Full Message======
[memutil] Simplify how we read ELF files in verilator_memutil.cc

We didn't support ELFCLASS64 anyway (and I doubt we're going to care
about this any time soon). So just use the Elf32_* types and
functions.

Also, improve the error message on a corrupt PHDR that points outside
of the file.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: a5749875======
======Short Message======
[memutil] Use exceptions to simplify error handling
======Full Message======
[memutil] Use exceptions to simplify error handling

Rather than printing to stderr and returning false, the internal
functions now throw an exception, which percolates up as far as
ParseCLIArguments.

We also get rid of the explicit advance check for whether we can open
a file: it's always racy to do that sort of thing and if we can't open
the file, we'll hit an error soon enough!

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: a63fc724======
======Short Message======
[memutil] Allow memory locations to have associated LMAs
======Full Message======
[memutil] Allow memory locations to have associated LMAs

The full version of RegisterMemoryArea now allows you to specify an
LMA address range. By default, there is none. This patch doesn't allow
any new behaviour but the point is that being able to look up memories
by (load) address will let us load ELF files with different segments
going to different memories.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: ccdf9a2e======
======Short Message======
[memutil] Improve type of ElfFileToBinary in verilator_memutil.cc
======Full Message======
[memutil] Improve type of ElfFileToBinary in verilator_memutil.cc

Also, define a couple of helpers to make error handling and cleaning
up easier. This also lets us get rid of the hacky "mini buffer" in
WriteElfToMem.

Also, size the copy buffer with p_memsz instead of p_filesz to make
sure that things like .bss sections get zeroed properly.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 54aadb2a======
======Short Message======
[dv/alert] fix alert_agent cfg create call
======Full Message======
[dv/alert] fix alert_agent cfg create call

Move alert_agent_cfg creation call from build_phase to initilization
function. Thanks to Sri's suggestion.
With this move, `LIST_OF_ALERTS` needs to be override before
initilization is called.

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: 0a0aaa3f======
======Short Message======
[dv/alert_handler] fix csr test failure
======Full Message======
[dv/alert_handler] fix csr test failure

The csr test failure in alert_handler is due to recent change in ping
timer. The ping timer now sends out ping testing much more frequently.
If during csr testing, ping test sent out without any response, it will
change the value for alert_loc_cause, and csr test cannot auto predict
that.
Instead of exclude the loc_alert_cause related registers, this PR drives
alert and esc signals to response to ping.

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: 44ec2bab======
======Short Message======
[dv/common] Fix deadloop in reset test with Xcelium
======Full Message======
[dv/common] Fix deadloop in reset test with Xcelium

In TL driver, when reset occurs, we set `req_done=1`, but using `output`
at task send_a_request_body will clear `req_done` even this task is
killed at the very begining
Change `output` to `ref` to fix it

Signed-off-by: Weicai Yang <weicai@google.com>



======Commit: 1b0f3407======
======Short Message======
[kmac] Fix Verible Style Lint error
======Full Message======
[kmac] Fix Verible Style Lint error

Signed-off-by: Eunchan Kim <eunchan@opentitan.org>



======Commit: 8ccbb274======
======Short Message======
[kmac] Revise NsPrefix register size formula
======Full Message======
[kmac] Revise NsPrefix register size formula

NsPrefix was byte based but incorrect at the boundary.
e.g. 256 creaetes 3 bytes but 255 value also creates three bytes.
This commit to fix by implementing 8bit round up to the parameter.

Also, the final value of NsPrefixSize is now Word granularity (32b) to
fit into register interface.

Signed-off-by: Eunchan Kim <eunchan@opentitan.org>



======Commit: 397915af======
======Short Message======
[prim_ram_adv/fpv] fix assertion
======Full Message======
[prim_ram_adv/fpv] fix assertion

`wmask_i` is an input with width [Width-1:0], this assertion is always
false if `TotalWidth != Width`, means if `ParWidth != 0`.

I am not sure if this fix is correct, please let me know what you think.

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: 965c41da======
======Short Message======
[otbn] Fix BN.AND in ISS
======Full Message======
[otbn] Fix BN.AND in ISS

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 3eb6007c======
======Short Message======
[rstmgr] Finish off some rstmgr D1 items.
======Full Message======
[rstmgr] Finish off some rstmgr D1 items.

- Add lint directory for top level rstmgr lint
- Add bypass muxes for reset output
- Add alert_info crash dump

Signed-off-by: Timothy Chen <timothytim@google.com>

[rstmgr] Exclude cnt check from csr test suite

Signed-off-by: Timothy Chen <timothytim@google.com>

[rstmgr] Adjust crashdump registers

Signed-off-by: Timothy Chen <timothytim@google.com>

[rstmgr] fixes to alert info dump indexing

Signed-off-by: Timothy Chen <timothytim@google.com>

[rstmgr] simplify hardwiring

Signed-off-by: Timothy Chen <timothytim@google.com>

[rstmgr] auto-generate file

Signed-off-by: Timothy Chen <timothytim@google.com>



======Commit: 2398dc10======
======Short Message======
[otbn] Specify flag group to update in bignum logical insns
======Full Message======
[otbn] Specify flag group to update in bignum logical insns

Before this patch, the bignum logical instructions updated flag group
0. This patch finds some encoding space to specify the flag group for
each instruction. To do so, we switch logical operations to use the
normal "funct3" function encoding (rather than their previous special
"funct31" single-bit encoding) and rejig some other funct3 values to
make space.

The re-encoding was done by Stefan Wallentowitz; the simulator work by
me.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>
Co-authored-by: Stefan Wallentowitz <stefan.wallentowitz@gi-de.com>



======Commit: a11aed31======
======Short Message======
[otp_ctrl] Add KDI stub, define errors for aux FSMs
======Full Message======
[otp_ctrl] Add KDI stub, define errors for aux FSMs

Signed-off-by: Michael Schaffner <msf@opentitan.org>



======Commit: e4406d2b======
======Short Message======
[dv/common] Fix Response queue overflow
======Full Message======
[dv/common] Fix Response queue overflow

1. move put_response after item_done when reset occurs
2. stop sending tl error transactions when reset occurs, so that log can
be cleaner when high verbosity is enabled

Signed-off-by: Weicai Yang <weicai@google.com>



======Commit: 6cc1abc5======
======Short Message======
[fpv/csr_assert] add csr support for regwen
======Full Message======
[fpv/csr_assert] add csr support for regwen

Issue #3035 recorded compile errors when some module enabled FPV csr
assert. The reason was because of the regwen registers. They could not
be accessed through `reg2hw` or `hw2reg`. To solve this issue, this PR
stored the regwen values locally.
This PR also cleans up a few redundant code.
fpv CSR assert also does not support backdoor write, so the csr assert
will be disabled if backdoor write is enabled.

Right now the only compile error remaining are:
1. alert_handler: the enable register "classa_clren" can be written by
hw. Will need more support on FPV csr assert
2. flash_ctrl: the enable registers in flash_ctrl are not all W0C, reg
`ctrl_regwen` is RO. Will need more support on FPV csr assert

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: 4403ea10======
======Short Message======
[kmac] Revise incorrect Assertion
======Full Message======
[kmac] Revise incorrect Assertion

When process_latched asserted and it is not the end of the block, the
assertion is to check if internal padding logic to complete the block
size or not by checking keccak_valid_o signal. If the time is the end of
the block transfer, padding logic will trigger `run` first and will padd
th rest of the bits in next block.

Current assertion precondition was wrong. `!end_of_block ||
!sent_blocksize` is always 1 as `end_of_block` and `sent_blocksize` are
always one cycle apart.

WHy not detected earlier?:

    In previous commits (PRs), FPV only tested SHA3-256 algorithm with
    fixed data pattern (Empty, 1 Word, or 3 bytes). So there was no
    chance to hit this corner case. However, in KMAC top-level test, it
    doesn't bound the data pattern or algorithm mode/strength **yet**.
    So, the FPV tool was able to catch this condition.

Signed-off-by: Eunchan Kim <eunchan@opentitan.org>



======Commit: c9809883======
======Short Message======
[tlul_adapter_sram] Minor lint fix
======Full Message======
[tlul_adapter_sram] Minor lint fix

Signed-off-by: Michael Schaffner <msf@google.com>



======Commit: 530cf13d======
======Short Message======
[prim*] Various lint fixes in the prims
======Full Message======
[prim*] Various lint fixes in the prims

Signed-off-by: Michael Schaffner <msf@google.com>



======Commit: ad7a57cc======
======Short Message======
[otbn] Fix use of carry flag for borrow in otbnsim
======Full Message======
[otbn] Fix use of carry flag for borrow in otbnsim

When carry is set, for subb and cmpb it acts as a borrow flag so A - B -
c must be computed (where c is the carry flag). This introduces a
seperate 'subtract_with_borrow' function to the model to deal with this.
Documentation is also updated to match.

Signed-off-by: Greg Chadwick <gac@lowrisc.org>



======Commit: dbb06097======
======Short Message======
[otbn] Fix disassembly with build script
======Full Message======
[otbn] Fix disassembly with build script

otbn-objdump expects -D alone as an argument to disassemble bignum ISA
instructions.

Signed-off-by: Greg Chadwick <gac@lowrisc.org>



======Commit: 00028da7======
======Short Message======
[otbn] Python 3.5 fix for otbn-objdump
======Full Message======
[otbn] Python 3.5 fix for otbn-objdump

Altered arguments to subprocess.run to be compatible with python 3.5

Signed-off-by: Greg Chadwick <gac@lowrisc.org>



======Commit: 1351e98e======
======Short Message======
[otbn] Fix LUI instruction
======Full Message======
[otbn] Fix LUI instruction

Signed-off-by: Greg Chadwick <gac@lowrisc.org>



======Commit: ea1903d2======
======Short Message======
[util] Return absolute file path
======Full Message======
[util] Return absolute file path

Always return the resolved file path to prevent a file not found error.

Signed-off-by: Tobias Wölfel <tobias.woelfel@mailbox.org>



======Commit: 913a4837======
======Short Message======
[otbn] Run the ISS in lock-step with the RTL in otbn_top_sim
======Full Message======
[otbn] Run the ISS in lock-step with the RTL in otbn_top_sim

And (very excitingly) they actually match for the smoke test! There's
not yet much observability for errors: all we do is check that the
simulations take the same amount of time and that DMEM matches when
the simulation finishes.

At the moment, error reporting is pretty rubbish: we just print an
unhappy message to stderr. Figuring out how to pipe these errors
around the internals of the SystemVerilog simulation is probably the
next significant job.

As a future patch, I intend to add register file dumping to the
simulator, so we can compare register data at the end of the
simulation (basically the same check as the golden register values
that are in the smoke test at the moment).

A more significant piece of work is cycle-by-cycle checks. The plan is
to add a tracing interface to the core itself, render that to a
string (in SystemVerilog) and then textually diff with the trace
coming out of the ISS on each instruction.

Obviously, that's all in the future: for now, we just check we can run
the darn thing :-)

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: f3114540======
======Short Message======
[otbn] Explicitly create and destroy OTBN model C object
======Full Message======
[otbn] Explicitly create and destroy OTBN model C object

This shouldn't cause any functional change, but is another step
towards the world where we make a simulator and then interact with it
over time.

Also, rename "run_model" to "otbn_model_run": these names are in a
global namespace, so need some sort of prefixing.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: fefe7f69======
======Short Message======
[keymgr] Fix comparison for key version.
======Full Message======
[keymgr] Fix comparison for key version.

Issue identified by @weicaiyang

Signed-off-by: Timothy Chen <timothytim@google.com>



======Commit: 6faf4f1e======
======Short Message======
[rstmgr / pwrmgr] connect reset requests
======Full Message======
[rstmgr / pwrmgr] connect reset requests

- currently a reset request is used from nmi_gen

Signed-off-by: Timothy Chen <timothytim@google.com>

[rstmgr] Remove unnecessary comments from template.

Signed-off-by: Timothy Chen <timothytim@google.com>

[pwrmgr] correct regen usage

Signed-off-by: Timothy Chen <timothytim@google.com>

[rstmgr] slight update for comments

Signed-off-by: Timothy Chen <timothytim@google.com>

[pwrmgr] fixes from reviews

Signed-off-by: Timothy Chen <timothytim@google.com>



======Commit: 31d877eb======
======Short Message======
[uart/dv] avoid zero delay during reset
======Full Message======
[uart/dv] avoid zero delay during reset

Fix regression failure
Add `wait(!cfg.under_reset)` in forever loop in case delay is set to 0
and reset occurs

Signed-off-by: Weicai Yang <weicai@google.com>



======Commit: e1e3512c======
======Short Message======
[sw/vendor] Move OT-specific code out of riscv_compliance
======Full Message======
[sw/vendor] Move OT-specific code out of riscv_compliance

This change moves OT-specific initialization out of the riscv_compliance
directory, and adds comments explaining why this should be maintained.

In particular, this change makes it possible to change the names of
OpenTitan headers without having to go and generate new patches for
riscv_compliance, and makes the existing Meson target in
riscv_compliance_support somewhat less of a spooky-action-at-a-distance
vector.

Signed-off-by: Miguel Young de la Sota <mcyoung@google.com>



======Commit: c32adb3b======
======Short Message======
[topgen] Assign specified default to un-exposed parameters in top
======Full Message======
[topgen] Assign specified default to un-exposed parameters in top

With this commit, topgen drives un-exposed parameters with the default
value specified in the IP hjson, but still does not expose those
parameters to higher levels in the hierarchy.

Signed-off-by: Pirmin Vogel <vogelpi@lowrisc.org>



======Commit: 00d2be5a======
======Short Message======
[reggen] Add new, optional `expose` field for parameters
======Full Message======
[reggen] Add new, optional `expose` field for parameters

The `expose` field controls whether a parameter should be exposed
at the top level of the IP (and to topgen). By default, parameters
are not exposed. This commit also adds checks to ensure that:
- local parameters are not exposed, and
- exposed parameters have a default.

Signed-off-by: Pirmin Vogel <vogelpi@lowrisc.org>



======Commit: 73804155======
======Short Message======
[aes] Rename `NumDelayCyclesStartTrigger` parameter
======Full Message======
[aes] Rename `NumDelayCyclesStartTrigger` parameter

This commit renames the security-critical parameter
`NumDelayCyclesStartTrigger` to `SecStartTriggerDelay`. The `Sec`
prefix indicates that this parameter is security critical. This
can be leveraged by tools like reggen and topgen.

Signed-off-by: Pirmin Vogel <vogelpi@lowrisc.org>



======Commit: 6bf85408======
======Short Message======
[syn] Minor fix to test synthesis script
======Full Message======
[syn] Minor fix to test synthesis script

This adds a new example to the testsynthesis script, and updates the
load/driving strength constraints, and verilog write-outs.

Signed-off-by: Michael Schaffner <msf@opentitan.org>



======Commit: 4ad2ef36======
======Short Message======
[flash_ctrl] Add address filter for scramble / ECC enable
======Full Message======
[flash_ctrl] Add address filter for scramble / ECC enable

- Instead of a single bit to turn the feature on/off, it now follows
  the same pattern in memory region configuration.

- Note because the host path cannot access information partitions, it only
  observes rules from the data partition.

Signed-off-by: Timothy Chen <timothytim@google.com>

[flash_ctrl] indentation and spacing fixes

Signed-off-by: Timothy Chen <timothytim@google.com>



======Commit: 5557f964======
======Short Message======
[vendor] Do not include diffstat and signature in patches
======Full Message======
[vendor] Do not include diffstat and signature in patches

The signature line contains, by default, the git version number. Every
time we re-run vendor.py on a patch repo with a newer git version, the
patches change without actually changing content-wise. The git version
number serves no other purpose, so we can simply remove it.

Also remove the diffstat, which is not very meaningful in committed
patches, but also adds noise when updating patches.

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: b3de0530======
======Short Message======
[otbn] Fix silly typo in comment
======Full Message======
[otbn] Fix silly typo in comment

I'd spent a while oscillating between the two names, and came down on
one side in the code and the other in the documentation. Get
everything in sync.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: babc7786======
======Short Message======
[otbn] Fix indices of flags in ISS
======Full Message======
[otbn] Fix indices of flags in ISS

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: c7e5aa89======
======Short Message======
[OTBN] Mark OTBN as being in the D1/Functional design stage
======Full Message======
[OTBN] Mark OTBN as being in the D1/Functional design stage

Work on OTBN has been ongoing for a while now and we're making rapid
progress in the specification and design efforts. To reflect that, we
propose to move the design into the D1 (Functional) design stage. See
https://docs.opentitan.org/doc/project/development_stages/#hardware-design-stages
for a detailed explanation of the design stages.

Importantly, the design stage only refers to the v0.1 version of the
design. This version is not ready for production silicon, but an
intermediate milestone that allows us to synchronize implementation,
verification, simulator, and software development work. There will be
future revisions to the specification. The Google Doc [OTBN Enhancement
Proposals](https://docs.google.com/document/u/3/d/1rgtPlXiJo21dq7gL_QZdV2XPISR78hkoLhJV8f1pt5M/edit)
lists high-level proposals to evolve the design, which will be addressed
in a subsequent version.

In short, the D1 design stage indicates that the design "does something,"
but isn't complete yet. Looking at the individual items in the hardware
design stages documentation:

* **Feature set finalized, spec complete.** We have identified a
  feature set for the v0.1 version which is a very solid starting point
  for fine-tuning the ISA in various ways. This feature set is
  documented well in the OTBN specification. We had success in running
  larger chunks of crypto code in a simulator implementing this
  specification, serving as a proof-point that the design is going in
  the right direction.

* **CSRs identified; RTL/DV/SW collateral generated**. All CSRs have
  been documented in the HJSON file, and regtool has generated
  appropriate bindings for it. UVM-based CSR tests run in CI and nightly
  regressions.

* **SW interface automation completed.** A DIF has been written and
  merged, which makes use of all auto-generated header files, e.g. to
  obtain information about the register layout.

* **Clock(s)/reset(s) connected to all sub modules.** This is the case.

* **Lint run setup.** Lint is setup and runs in CI and in nightly lint
  runs.

* **Ports Frozen.** OTBN has only a small set of top-level ports, which
  are fully hooked up into the earlgrey design.

The RTL implementation of the OTBN design has started, and we continue
to evolve it by implementing more and more instructions, as well as
improving the implementation of existing ones.

Fixes #3361

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: 5e1759fd======
======Short Message======
[otbn] Fix SW and LW in ISS
======Full Message======
[otbn] Fix SW and LW in ISS

The problem was caused by Dmem._get_u32s and Dmem._set_u32s being
confused about whether they split the 256-bit value into 8 uint32's in
little-endian or big-endian order.

Now, everything should be little-endian, and has docstring comments
saying so! Also change the definition of Dmem.load_i32 to use
Dmem._get_u32s so the bit-shifting logic only appears in one place.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 909441a2======
======Short Message======
[cip, dv] Fix variable printed by uvm_info
======Full Message======
[cip, dv] Fix variable printed by uvm_info

Signed-off-by: Tung Hoang <hoang.tung@wdc.com>



======Commit: ee3c57d8======
======Short Message======
[dv/alert_handler] interrupt needs one clock cycle to be reset
======Full Message======
[dv/alert_handler] interrupt needs one clock cycle to be reset

In the alert_handler design, there is a `timeout` counter that will
count how many cycles the interrupt has been set. If the cycle is larger
than the threshold, the corresponding escalation will be triggered.
Upon interrupt is set, design will take one more clock cycle to stop the
counter. But tb's scb here stop the counter immediately. If the
interrupt is issued at the last clock cycle before timeout, design will
continue to count one more clock cycle and trigger the escalation, while
in tb I will exit immediately.
This PR fixed it by adding a one clock cycle delay before setting the
interrupt values.

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: 1d9d7d31======
======Short Message======
[dv, tl_agent] Fix TYCMPAT error in tl_monitor when using Cadence Xcelium
======Full Message======
[dv, tl_agent] Fix TYCMPAT error in tl_monitor when using Cadence Xcelium

Signed-off-by: Tung Hoang <hoang.tung@wdc.com>



======Commit: f54937e8======
======Short Message======
[uartdpi] Accept log file name through plusarg
======Full Message======
[uartdpi] Accept log file name through plusarg

The UARTDPI module simulates an UART device by creating a
pseudo-terminal (e.g. /dev/pts/N). Additionally, each written character
is also written to a log file, in our case always `uart0.log` in the
current directory.

This patch adds the ability to specify the path of the log file through
a plus argument (plusarg). The defaults remain unchanged: calling the
simulation without special arguents writes an `uart0.log` file.

As a new feature, the log file can now also be given as "-", which
writes UART logs directly to STDOUT. In this case, the running
simulation directly shows all output printed from device software, e.g.
from `LOG()` macros, making the life of software developers much easier.

To write all logs of uart0 (the one and only UART in an Earl Grey
system), use a command like the following:

```
build/lowrisc_systems_top_earlgrey_verilator_0.1/sim-verilator/Vtop_earlgrey_verilator \
  --meminit=rom,build-bin/sw/device/boot_rom/boot_rom_sim_verilator.elf  \
  --meminit=flash,build-bin/sw/device/tests/dif_hmac_sanitytest_sim_verilator.elf \
  +UARTDPI_LOG_uart0=-
```

To implement this functionality, the log writing was refactored from
SystemVerilog to C (DPI) code.

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: e96730f7======
======Short Message======
[flash_ctrl] Add ECC to program / erase datapaths
======Full Message======
[flash_ctrl] Add ECC to program / erase datapaths

- New parameters are defined to represent the "metadata" of flas
  - Software only has direct access to data portion
  - Metadata area is used for empty detection as well as ECC
  - There are currently no plans to make metadata directly accessible to
    software, although that can be done.
- ECC and scramble are always disabled / enabled at the same time.
- ECC is calculated on the scrambled data.
- There is no good DV / verilator support yet, To get around the issue,
  prim_generic_flash instantiates a memory for main, and another for metadata.
  - long term there will need to be a better backdoor solution to flash.
- ECC uncorrectable errors are forwarded up to both the host / controller
- When an uncorrectable error occurs, all F's are returned to the reading agent.

Signed-off-by: Timothy Chen <timothytim@google.com>

[flash_ctrl] update for review comments

Signed-off-by: Timothy Chen <timothytim@google.com>



======Commit: 8d0a2245======
======Short Message======
[otbn] Fix dmem size in verilator sim
======Full Message======
[otbn] Fix dmem size in verilator sim

Fixes #3470

Signed-off-by: Greg Chadwick <gac@lowrisc.org>



======Commit: 6812c33d======
======Short Message======
[kmac] Remove unused ports from sha3pad and more FPV
======Full Message======
[kmac] Remove unused ports from sha3pad and more FPV

entropy interface in sha3pad is not used. Also block pushed indicator is
not used outside as `run_o` can be used as the indicator.

SHA3 padding logic assumes the incoming message is already XORed with
the entropy at upper level. And the padded bits such as prefix, function
pads don't need entropy as they are not security sensitive information.

Also, this commit revises FPV assertions to not have "unreacheable"
assertions and assumptions. Previously, the FPV couldn't reach the
Vector assertion to check the SHA3 result.

Signed-off-by: Eunchan Kim <eunchan@opentitan.org>



======Commit: 321e7890======
======Short Message======
[otbn] Fix silly memory leak in ISS wrapper
======Full Message======
[otbn] Fix silly memory leak in ISS wrapper

The std::string constructor takes a copy of its char* argument, so we
need to delete the original afterwards. Thank you, Valgrind!

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 42ea809e======
======Short Message======
[otbn] Fix branch address for BEQ/BNE
======Full Message======
[otbn] Fix branch address for BEQ/BNE

The immediate operand is PC-relative, but the "+ pc" operation happens
as part of decoding, so we don't need to add it on again as part of
the instruction body.

Maybe we should rename the operand to something like "dest", since the
assembly code is written with the destination, rather than the offset.
But let's leave that for later, sticking with the RISC-V naming for
now.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: e4665c1f======
======Short Message======
Fix invalid read in verilator_memutil
======Full Message======
Fix invalid read in verilator_memutil

The simutil_verilator_set_mem function is an exported SystemVerilog
function with the following prototype:

  function int simutil_verilator_set_mem(input int         index,
                                         input bit [255:0] val);

The val input is only used as follows:

    mem[index] = val[Width-1:0];

(with Width = 32 in the memory I'm interested in). However, Verilator
translates the function to include the following statement:

    VL_SET_W_SVBV(256,val__Vcvt,val);

This is a function call to a function defined in verilator_dpi.h,
designed to convert between "val" (an svBitVecVal*, whose layout is
defined by the SystemVerilog DPI spec) and "val__Vcvt" (an internal
Verilator bit vector type).

That function reads the whole of val (all 256 bits of it). If val is
actually a pointer to the last few bytes of a malloc'd array, this
reads off the end of the array. The C++ code goes on to mask out the
upper bits (to do the [Width-1:0] select) but the damage is already
done: we've read data off the end of an array.

This causes an "Invalid read of size 4" error when run under Valgrind.

An alternative fix would be to allocate an extra 31 bytes of padding
as part of the malloc in ElfFileToBinary. Since I can't believe the
performance of this code matters, I've done it this way to make things
more explicit.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 4ef12742======
======Short Message======
[dif] Fix some typos in the DIF library header template
======Full Message======
[dif] Fix some typos in the DIF library header template

Signed-off-by: Miguel Young de la Sota <mcyoung@google.com>



======Commit: d9f63e14======
======Short Message======
[site] Add dark code highlight theme
======Full Message======
[site] Add dark code highlight theme

Switch between "colorful" and "dracula" theme for light and dark mode,
respectively.
Adds a scss file with theme definitions. HTML code is generated with
classes matching the scss theme.
Deviation of default themes by setting the default background with a
small difference in lightness to site background.
Adds new scss variable `$black` which is the default background.

Requires the update of Hugo in order to guess the syntax which helps to
get code highlight for fenced code with the keyword `console` as this
language is not recognized by Chroma, the lexer used by Hugo. Using
`guessSyntax = true` results in some basic highlighting.
Feature request for console lexer is open alecthomas/chroma#137

Fixes lowrisc/opentitan#867
Fixes lowrisc/opentitan#2262

Signed-off-by: Tobias Wölfel <tobias.woelfel@mailbox.org>



======Commit: dd431e96======
======Short Message======
[otbn] Run the ISS as a "stepped" subprocess in otbn_model
======Full Message======
[otbn] Run the ISS as a "stepped" subprocess in otbn_model

This patch doesn't actually change the behaviour of the code at all,
but should allow us to do cleverer things in future. It runs the
stepped simulator (instead of otbnsim) but, instead of running it with
system(..), it spawns a subprocess and communicates over stdin/stdout.

With future patches, we'll be able to actually run the ISS one cycle
at a time. Detection of when the ISS finishes isn't particularly
pretty (see the regex code in ISSWrapper::saw_busy_cleared), but it
should work for now. I'm assuming we'll completely overhaul the
tracing format in the reasonably near future anyway.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 7c0c1ebc======
======Short Message======
[otbn] Make an explicit class to represent OTBN's dmem in the ISS
======Full Message======
[otbn] Make an explicit class to represent OTBN's dmem in the ISS

The main motivation here was to make sure we always dumped the right
number of bytes when dumping dmem from the stepped simulator. However,
this patch lets us clean up several other things:

  - We no longer inherit from riscvmodel.State. We were doing that,
    and then promptly overriding several attributes (and calling some
    non-existant methods!). It turns out that we weren't actually
    getting much from the subclass, so it makes more sense just to
    inline it.

  - As a result, we can call the thing representing DMEM by the name
    "dmem" rather than "memory", which is nice.

  - We now get to be explicit about how things are stored in
    memory (as 256-bit unsigned integers). This matches how the wide
    register file works, so should be a bit more efficient than what
    we had.

  - And, of course, everything now has mypy annotations, which makes
    the linting check a bit stricter.

  - In the spirit of being explicit, we get rid of pc_update and the
    magic that was in State.__setattr__, instead defining pc_next.
    This is either None or an integer; the latter meaning to redirect
    the PC.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 8869386d======
======Short Message======
[otbn] Split out the reggen wrapping from mem_layout.py
======Full Message======
[otbn] Split out the reggen wrapping from mem_layout.py

The ISS is going to need to know other things that also come from
reggen. This patch just separates out the "parse stuff with reggen"
code for use elsewhere.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 41a199e0======
======Short Message======
[otbn] Delete model directory when we're done with it
======Full Message======
[otbn] Delete model directory when we're done with it

Rather than littering /tmp, let's tidy up after ourselves. For
debugging, you can set OTBN_MODEL_KEEP_TMP=1 to keep the temporary
directory.

Also, respect the TMPDIR environment variable.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 103b4cb2======
======Short Message======
[flash_ctrl] Support the notion of a 'program-repair'.
======Full Message======
[flash_ctrl] Support the notion of a 'program-repair'.

This function is specific to the underlying flash, and not all will support it.
As a result, expose a "functional available" output from the flash wrapper and allow the controller to properly control whether a transaction should be allowed.

Note, need to add software read back to that status.

Signed-off-by: Timothy Chen <timothytim@google.com>

[flash_ctrl] minor updates

- Add software read back to check what program types are supported

Signed-off-by: Timothy Chen <timothytim@google.com>

[flash_ctrl] Add otp disable to program repair

Signed-off-by: Timothy Chen <timothytim@google.com>



======Commit: 5f6d00ff======
======Short Message======
[prim/tlul] Various small lint fixes
======Full Message======
[prim/tlul] Various small lint fixes

Signed-off-by: Michael Schaffner <msf@google.com>



======Commit: 88e7e878======
======Short Message======
[dv/gpio] support interrupt as a flop
======Full Message======
[dv/gpio] support interrupt as a flop

According to PR #3422, now interrupt will take one more clock cycle to
be reset or reset. This affects GPIO scb prediction for interrupts. The
ideal solution would be to update the prediction logic for
`intr_state_update_queue`, but it seems to be quite complex. This PR
provides an easier fix to use the original `intr_state_update_queue`
calculated value, but wait one clock cycle before comparing with the
interrupt pin.

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: a1b9455d======
======Short Message======
[spiflash] Default to FTDI
======Full Message======
[spiflash] Default to FTDI

Recent change to spiflash broke old usage of just giving input file

Modify argument parse so if only an input file is given the default is
set to FTDI.

Fixes 3315

Signed-off-by: Mark Hayter <mark.hayter@gmail.com>



======Commit: 333e5c6a======
======Short Message======
[i2c, dv] Support on-the-fly reset, add error_intr, and fix fifo_overflow
======Full Message======
[i2c, dv] Support on-the-fly reset, add error_intr, and fix fifo_overflow

This PR includes
  - Update i2c_agent to assert error interrupts (e.g. sda_interference,
    scl_inteference, and sda_unstable)
  - Install on-the-fly reset for i2c_agent and scoreboard to allow dut and
    dv are reset then re-started when the error interrupts are triggered
  - Add error_intr test
  - Disable checking request match in tl_host_driveri (tl_agent)
    when reset is in progress
  - Fix i2c_fifo_overflow test to address PR #3422

Signed-off-by: Tung Hoang <hoang.tung@wdc.com>



======Commit: f2649701======
======Short Message======
[dv/rv_timer] support interrupt as a flop
======Full Message======
[dv/rv_timer] support interrupt as a flop

According to the PR #3422, now interrupt will take one more clock cycle
to be set or reset. So the `check_intrrupt_pin` needs one more clock
cycle delay before checking interrupt pin. Since the `intr_state_exp`
value might change after one clock cycle, this PR fix it by adding a
local variable to store the current expected data.

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: 15adeeef======
======Short Message======
[keymgr] First draft of key manager module
======Full Message======
[keymgr] First draft of key manager module

- Sideload interface currently assumed (decision not finalized)
- Minimal secure hardneing (multi-bit signals, sparse FSM) in place

Signed-off-by: Timothy Chen <timothytim@google.com>

[keymgr] Minor fixes to ensure advance transition can happen

Signed-off-by: Timothy Chen <timothytim@google.com>

[keymgr] Minor fixes

- only push to software registers when doing generate
- check for correct key when generating
- always over-write existing keys even when in disabled state
- exclude specific fields from csr tests

Signed-off-by: Timothy Chen <timothytim@google.com>

[keymgr] updates per review comments

Signed-off-by: Timothy Chen <timothytim@google.com>

[keymgr] minor updates

- address review comments

Signed-off-by: Timothy Chen <timothytim@google.com>



======Commit: c0b28740======
======Short Message======
[flash_ctrl] updates for review comments
======Full Message======
[flash_ctrl] updates for review comments

- various typoes
- various fixes for DC issues

Signed-off-by: Timothy Chen <timothytim@google.com>



======Commit: 69f0fe23======
======Short Message======
[dv] Chip sim cfg fixes
======Full Message======
[dv] Chip sim cfg fixes

- Fixes the correct path to the rv_timer SW test
- Extends the test timeout for the rv_timer test to 12ms
- Minor fixups to the test names

Signed-off-by: Srikrishna Iyer <sriyer@google.com>



======Commit: c6c763c7======
======Short Message======
[sw rv_timer test] Minor fix and updates
======Full Message======
[sw rv_timer test] Minor fix and updates

- Fixes `kDeadline` value to correctly reflect 10ms (instead of
65.536ms)
- Adds another check at the end of the test to ensure the timer reads
an expected time value that is within a safe bound.

Signed-off-by: Srikrishna Iyer <sriyer@google.com>



======Commit: 7e2d674e======
======Short Message======
[chip dv] Fix for failing GPIO test
======Full Message======
[chip dv] Fix for failing GPIO test

- Fixes the pins_if to prevent accidental default pull down due to
ambiguity introduced by the internal `pins_int` signal.
- Fixes chip GPIO SV test seq to disable pullup or pulldown on
`gpio_vif` from the start of the test.

Signed-off-by: Srikrishna Iyer <sriyer@google.com>



======Commit: 701a2d0d======
======Short Message======
[RTl] Generic pad wrapper default behavior fix
======Full Message======
[RTl] Generic pad wrapper default behavior fix

- Fixes #3236.

Signed-off-by: Srikrishna Iyer <sriyer@google.com>



======Commit: 3f181547======
======Short Message======
[reggen] Fix #3301 missing type definitions
======Full Message======
[reggen] Fix #3301 missing type definitions

In the case when the number of bits in either read or write direction is
exactly once the register tool does not generate the necessary
`*_reg2hw_t` and `*_hw2reg_t` types in its package.

Signed-off-by: Florian Zaruba <zarubaf@iis.ee.ethz.ch>



======Commit: 479690a6======
======Short Message======
[flash_ctrl, sw] Minor update to software flash memory protection
======Full Message======
[flash_ctrl, sw] Minor update to software flash memory protection

Signed-off-by: Timothy Chen <timothytim@google.com>

[flash_ctrl, sw] clang-format fixes

Signed-off-by: Timothy Chen <timothytim@google.com>

[flash_ctrl, sw] remove unused field

Signed-off-by: Timothy Chen <timothytim@google.com>



======Commit: e0f70d20======
======Short Message======
[flash_ctrl] Update memory protection handling for info partition
======Full Message======
[flash_ctrl] Update memory protection handling for info partition

- Info partitions are now handled on a page-by-page basis.
- Info partitions DO NOT use the region configuration memory protection.

Signed-off-by: Timothy Chen <timothytim@google.com>

[flash_ctrl] Minor update to flash_mp

- support info page settings independently for each bank.

Signed-off-by: Timothy Chen <timothytim@google.com>

[flash_ctrl] verible lint fixes

Signed-off-by: Timothy Chen <timothytim@google.com>

[flash_ctrl] Fix unpacked array initialization syntax

Signed-off-by: Timothy Chen <timothytim@google.com>

[flash_ctrl] Minor review fixes

Signed-off-by: Timothy Chen <timothytim@google.com>



======Commit: 2df95612======
======Short Message======
[flash_ctrl] Minor fixes
======Full Message======
[flash_ctrl] Minor fixes

- fix seed page parameter construction
- fix address mistmatch between hardware interface and software

Signed-off-by: Timothy Chen <timothytim@google.com>



======Commit: 7f4b87c7======
======Short Message======
[OTBN/DIF] Use a non-zero error code in mock tests
======Full Message======
[OTBN/DIF] Use a non-zero error code in mock tests

Previously, only an error code with value 0 was available for testing,
now we also have a non-zero error code available. Use a non-zero error
code to also catch cases where zero is the default (uninitialized)
value.

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: 9afc6d24======
======Short Message======
[OTBN/DIF] Add ErrCodeBadDataAddr error code
======Full Message======
[OTBN/DIF] Add ErrCodeBadDataAddr error code

The hardware has a new error code, make the DIF aware of it.

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: 7a3c94e1======
======Short Message======
[OTBN/DIF] Cleanup: Name enum type and values consistently
======Full Message======
[OTBN/DIF] Cleanup: Name enum type and values consistently

The error enum type is named `dif_otbn_err_code_t`, use the same prefix
also for the enum constants, also matching the use of "err" over "error"
in the hardware register name.

Also use hexadecimal numbers in the case statement to match the base
used in the hardware documentation.

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: 0c11fc89======
======Short Message======
[otp_ctrl/doc] Initial commit of OTP spec
======Full Message======
[otp_ctrl/doc] Initial commit of OTP spec

This is the initial commit of the OTP spec. Note that there are
still a couple of TODOs in the Markdown file that have to be
worked out in more detail (e.g., the Life Cycle interface, some FSM
details, as well as links to docs that do not exist yet).

Also, we are still in the process of getting more clarity on some
questions about the actual OTP macro used in production, and that may
affect error codes and the OTP wrapper open-source interface.

These updates will follow soon in subsequent commits.

Signed-off-by: Michael Schaffner <msf@opentitan.org>



======Commit: 22e57063======
======Short Message======
[hmac/fix] corner case for error sequences
======Full Message======
[hmac/fix] corner case for error sequences

While modifying hmac scb I found a corner case where in hmac error
sequence.
In sanity sequence, if hmac msg stream in msg is partial (length is not
a multiple of 4), there is one clock cycle that is wavied to check
fifo_empty interrupt. So in sanity sequence I used `msg_q % 4` to gate it.
But in hmac_error seq, we are not always stream in `msg_q`, if we found
the sequence causes an error, we will resend some other random messages.
This could potentially stream in partial message. So this PR resolves
this issue by gating the error_sequence as well.

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: 155b5ab3======
======Short Message======
[docker] Ensure Containers use UTF-8
======Full Message======
[docker] Ensure Containers use UTF-8

We've had issues in the past with trying to build documentation with
non-ASCII characters in the document comments.

This sets the locale to UTF-8, so that python chooses utf-8 by default
too. This ensures that parsing files in python with non-ascii characters
will succeed, as long as those characters are valid utf-8.

Signed-off-by: Sam Elliott <selliott@lowrisc.org>



======Commit: 24f2a914======
======Short Message======
[otbn] fix specification of bn.subm instruction
======Full Message======
[otbn] fix specification of bn.subm instruction

With the `bn.addm` instruction the result is expected to
be in the range of `0` to `MOD-1` even if the non-modular
result is only in the range of `0` to `2*MOD-1`. For this,
in case the result is greater or equal `MOD` it needs to be
corrected by subtracting `MOD` once.
So far we had the same defintion for `bn.subm` which is wrong.
Here, the non-modular result is tolerable in the range
of `-MOD+1` to `MOD-1`. In case it is smaller than 0 it
needs to be corrected by adding the result to `MOD` such that
the final result is also between `0` and `MOD-1`.

Signed-off-by: Felix Miller <felix.miller@gi-de.com>



======Commit: 36dd48a3======
======Short Message======
[OTBN] Clarify wording on CSRRS docs
======Full Message======
[OTBN] Clarify wording on CSRRS docs

Address Rupert's review comment in PR #3380, which I only fixed locally,
but then didn't `git add` the file. Sorry, my bad.

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: 3affadfc======
======Short Message======
[dv/hmac] improve hmac scb
======Full Message======
[dv/hmac] improve hmac scb

While fixing the corner cases in PR #3334, i found a few stall codes in
hmac_scb. This PR cleans up the code (no functional change), and modify
a few comments to make it eaiser to read.

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: 914e1b21======
======Short Message======
[dv/alert_esc_agent] fix vcs warning
======Full Message======
[dv/alert_esc_agent] fix vcs warning

VCS throws a warning for the wait statement below:
`wait(cfg.probe_vif.get_esc_en());` and VCS throws a warning:
`Warning-[FCWAIEW] FuncCall Without Arguments In Wait/Event`

To fix this, I moved the wait task inside the interface.

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: 8e7f253e======
======Short Message======
[OTBN] Remove paragraph about unspecified instruction encoding
======Full Message======
[OTBN] Remove paragraph about unspecified instruction encoding

The instruction encoding is now documented, remove the paragraph saying
it's not. The instruction alignment isn't really an ISA requirement,
it's an implementation requirement for our instruction fetch unit, it
was out of place in this section.

Fixes #2864

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: a4b2c62c======
======Short Message======
[otbn] Fix generation of JALR instructions in instruction generator
======Full Message======
[otbn] Fix generation of JALR instructions in instruction generator

The code was conflating the base address that comes from the register
that we're branching through (for JALR) with the base address coming
from the current PC (for JAL).

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: d3de4bbe======
======Short Message======
[otbn] Fix TOC headings for OTBN ISA documentation
======Full Message======
[otbn] Fix TOC headings for OTBN ISA documentation

It seems that you can't use readFile in a shortcode to read in
Markdown contents and then have them appear in the top-level table of
contents. See [1] for another disappointed customer!

Fortunately, we don't really need it because we only have two headings
we care about. So now the yaml_to_doc.py script generates a Markdown
fragment for each instruction group, which gets included explicitly by
the documentation. It feels a little less magic, but hey ho.

[1] https://github.com/gohugoio/hugo/issues/6690

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 73f4ec61======
======Short Message======
[otbn] Better specify "result" when setting flags
======Full Message======
[otbn] Better specify "result" when setting flags

The L, M and Z flags operate on the "result" of an operation. Clarify
that this means only the "lower" 256 bits as they are written back to
the destination register, not the overflow bit (which is present in the
carry flag).

Fixes #3336 (See also this issue for a long reason by Felix Miller why
this is the correct behavior.)

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: 15abf0bd======
======Short Message======
[util] Fix lint in dvsim.py
======Full Message======
[util] Fix lint in dvsim.py

Python (and flake8 in particular) doesn't like tabulation of
dictionaries. This was added in commit 2de350a (in PR #2994), but
apparently our CI didn't run for that commit so we didn't notice the
breakage :-(

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 0fb3e17a======
======Short Message======
[tlgen] Fix US node lookup for socket M1
======Full Message======
[tlgen] Fix US node lookup for socket M1

Use first list element of host DS as index to lookup US node index

Signed-off-by: Jan Van Winkel <jan.van_winkel@dxplore.eu>



======Commit: 50c80a86======
======Short Message======
[otbn] Fix some issues in modexp assembly
======Full Message======
[otbn] Fix some issues in modexp assembly

The modexp assembly doesn't currently run on the new simulator. Some
problems are simulator-related, others are bugs in the code. I'm still
going through all of them, but here are two fixes which are clearly
wrong in the assembly.

* LW expects offsets in bytes, not in 32b words.
* In contrast to dcrypto1, routines need to end with an explicit ECALL
  instruction.

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: a7f81fee======
======Short Message======
[otbn] fix RND WSR address
======Full Message======
[otbn] fix RND WSR address

In this implementation it was assumed that the RND WSR
is at address 2. In fact it is at address 1.

This is related to #3337

Signed-off-by: Felix Miller <felix.miller@gi-de.com>



======Commit: e26a00ba======
======Short Message======
[host, sw] temporarily reduce frequency
======Full Message======
[host, sw] temporarily reduce frequency

- With spi device now running at a slower clock, 1MHz seems to cause some instability.
- This needs to be further debugged.

Signed-off-by: Timothy Chen <timothytim@google.com>



======Commit: 9d829608======
======Short Message======
[dv] various updates to dv for divided clocks
======Full Message======
[dv] various updates to dv for divided clocks

- set default uart baudrate to 1mbps
- set default 'aon_clk' frequency to 2MHz.  This is significantly slower than
  other operational clocks, but fast enough so that it doesn't significantly hurt simulation speeds.

Signed-off-by: Timothy Chen <timothytim@google.com>

[dv] c-formatting fixes

Signed-off-by: Timothy Chen <timothytim@google.com>

[sw, dv] update uart_tx_rx_test

- private CI seems to fail with unexpected empty interrupt even though it cannot be reproduced locally.
- This could be happening when rx interrupts fire ahead of tx interrupts, resulting in one case not being handled.

Signed-off-by: Timothy Chen <timothytim@google.com>

[sw] format updates

Signed-off-by: Timothy Chen <timothytim@google.com>

[sw] fix format

Signed-off-by: Timothy Chen <timothytim@google.com>



======Commit: dc19cf91======
======Short Message======
[dv] update dv template to also include derived clocks
======Full Message======
[dv] update dv template to also include derived clocks

Signed-off-by: Timothy Chen <timothytim@google.com>

[dv, sw] DV fixes for clock division

Signed-off-by: Timothy Chen <timothytim@google.com>



======Commit: 1d1febce======
======Short Message======
[dv/hmac] fix regression failure
======Full Message======
[dv/hmac] fix regression failure

Hmac regression found one corner cases regarding fifo_empty.
After hash_process is issued, if message input is not a multiple
of 4, there is a period of time sequence won't check fifo_empty
interrupt because it is hard for scb to align.
Now since prim_packer can hold one more data, the ignored period of time
needs to be extended.

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: d0eebabf======
======Short Message======
[dv/gpio] fix regression failure
======Full Message======
[dv/gpio] fix regression failure

The daily regression GPIO failure on `gpio_sanity_no_pullup_pulldown`
was due to a round up corner case:
For the statement in GPIO scb line 82:
`((crnt_time - data_in_update_queue[$].eval_time) / clk_period) > 1`
In the corner case, the crnt_time is 434ns, the eval_time is 395ns,
and the clk period is 20ns. So (434-395)/20 = 39/20 is 1.
However, the eval_time should be: 394499ps which should round down to
394ns instead of 395ns. I think it might because of async rst_n caused a
little bit delay.
So the solution I propose in this PR is to: change the `clk_period` from
`int` to `real` and allow rounding for the division value. In this
corner case, 1.95 will be round up to 2.

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: 5e355774======
======Short Message======
[uart] Make tick_baud_x16 flexible to NCO Width
======Full Message======
[uart] Make tick_baud_x16 flexible to NCO Width

NCO Width is fixed to 16 bits. When it is changed, the `nco_sum_q` also
should be changed. This commit makes `nco_sum_q` to be flexible to NCO
CSR width.

Signed-off-by: Eunchan Kim <eunchan@opentitan.org>



======Commit: 8738e847======
======Short Message======
[otbn] Fix register naming in BN.SID
======Full Message======
[otbn] Fix register naming in BN.SID

`grs1` is always the memory address, and always the second item in the
assembly (as in RISC-V). Fix the assembly syntax to match the
description.

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: 109fd07a======
======Short Message======
Pass -fno-extended-identifiers to VCS
======Full Message======
Pass -fno-extended-identifiers to VCS

VCS includes DPI code that has smart quotes (yes, smart quotes) around
some #error macros. Recent GCC versions (g++ >= 10.2) have got proper
support for UTF-8, which is nice but makes them choke on these input
files.

Passing -fno-extended-identifiers tells GCC to go back to the days of
yore and pretend that everything is ASCII, and all is well again!

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 181cc4fe======
======Short Message======
[dv/alert_agent] async reset fix
======Full Message======
[dv/alert_agent] async reset fix

Previously reset is issued with the clocking block. So if async mode is
on and one of the clock goes very slow, then there is a corner case
where all the reset of the signals are reset, but the slow clock's
interface is not.
To fix this issue, reset signals needs to be async (not driving through
the clocking block). To allow this, the input of the alert_esc_interface
is set to logic instead of wire.

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: f0742af3======
======Short Message======
[i2c,dv] Patches for the incorrect assertion of sda_interference and sda_unstable
======Full Message======
[i2c,dv] Patches for the incorrect assertion of sda_interference and sda_unstable

  - Fix sda interference occurred in the address phase of read transaction
  - Fix sda not remain (unstable) during clock pulse

Signed-off-by: Tung Hoang <hoang.tung@wdc.com>



======Commit: 7c97b756======
======Short Message======
[sw] Prefix all meson build targets for DIFs with sw_lib_
======Full Message======
[sw] Prefix all meson build targets for DIFs with sw_lib_

Build targets for DIFs were inconsistently named, unify naming.

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: c03e15d5======
======Short Message======
[CI] License checker: show full command line
======Full Message======
[CI] License checker: show full command line

If the license checker fails, it shows an error message in CI:

"Licence header check failed. Please check output of
util/lowrisc_misc-linters/licence-checker/licence-checker.py on
the noted failures.".

This commit makes the message more actionable for the user confronted
with this message by showing the full invocation, including the config
file.

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: e919338c======
======Short Message======
[otbn] Print error messages on failure in otbn-objdump
======Full Message======
[otbn] Print error messages on failure in otbn-objdump

subprocess.run(...., capture_output=True) captures both stdout and
stderr for the child process. We need to capture stdout because we
want to alter it if all went well. But we need to make sure that
everything makes it to the console if something explodes and I'd
forgotten the captured stderr.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: eab983fa======
======Short Message======
[otbn] Bump riscv-model version
======Full Message======
[otbn] Bump riscv-model version

This gets a bugfix (it was incorrectly decoding offsets for JAL
instructions). Also, force an exact version. Since python-riscv-model
is in a state of flux, it's probably better to make sure that everyone
is using exactly the same version of the code.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 839eb622======
======Short Message======
[otbn] Teach tooling about PC-relative operands
======Full Message======
[otbn] Teach tooling about PC-relative operands

The branch (beq, bne) and direct jump (jal) instructions from RISC-V
compute a destination based on the current PC. The encoding holds the
offset, so a jump to PC 128 starting at PC 64 would encode an offset
of 64. But the assembly syntax looks like the absolute destination, so
the instruction would just look like

    JAL  x0, 128

The tooling didn't really understand that before. It didn't really
matter, because both the assembler and objdump worked by punting to
binutils (which gets it right).

Of course, the random instruction generator does need to understand
what's going on. Before this patch, it correctly figured out that it
needed to encode the offset, but it printed out that offset in the
assembly rendering. So the example above would have appeared as

    JAL x0, 64

To fix this correctly, we either need to print out the first
line ("JAL x0, 128") or print out something that's explicitly
pc-relative, like "JAL x0, . + 64".

This patch goes with the first option: we know our PC anyway, and it's
a bit easier to read the generated assembly if everything is absolute.

Note that the patch changes otbn-objdump, but the calculated pc will
never actually be used because the instructions that would use
it (jal, beq, bne) are all disassembled by the binutils assembler
anyway.

Similarly, ImmOperandType prints a pc-relative operand in the ". + 64"
format if it doesn't know the current PC. Again, this doesn't actually
happen (because we happen to know that the only call site that might
use it is LI support in otbn-as), but it seemed more sensible to cope
with this case just in case we want to add another pseudo-op to the
assembler in future. Otherwise, you just end up with the same amount
of work in adding defensive assertions.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: deaecd97======
======Short Message======
[otbn] Make illegal instructions work like others in otbnsim
======Full Message======
[otbn] Make illegal instructions work like others in otbnsim

Without this, if you try to execute 0x00000000, you get an error
because IllegalInsn matches the bit pattern and you call its
constructor (that expects the word as an argument) with no arguments.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 4f27660b======
======Short Message======
[topgen, tlgen] Updates to support ast bus export
======Full Message======
[topgen, tlgen] Updates to support ast bus export

- Add the notion of a xbar stub node
- Fix ordering of verilog parameter to match python list

Signed-off-by: Timothy Chen <timothytim@google.com>



======Commit: 9f6c899a======
======Short Message======
[otbn] BN.MULQACC fixes for ISS
======Full Message======
[otbn] BN.MULQACC fixes for ISS

* Encoding expected by ISS didn't match ISA, updated ISS to match the ISA.
* Half-word write for .SO variant needs to mask data for write

Signed-off-by: Greg Chadwick <gac@lowrisc.org>



======Commit: 60138bdc======
======Short Message======
[otbn] Fix register names in MULQACC examples
======Full Message======
[otbn] Fix register names in MULQACC examples

Signed-off-by: Greg Chadwick <gac@lowrisc.org>



======Commit: e3814646======
======Short Message======
Update lowrisc_ibex to lowRISC/ibex@f30e84b
======Full Message======
Update lowrisc_ibex to lowRISC/ibex@f30e84b

Update code from upstream repository
https://github.com/lowRISC/ibex.git to revision
f30e84ba00b1c5e630dea0ba6fbf117ec69ebcc8

* [rtl] Remove outdated assertion (Tom Roberts)
* [doc] Document branch prediction configuration (Greg Chadwick)
* [rtl] Introduce static branch prediction (Greg Chadwick)
* [ibex/rtl] Remove duplicate check for irq_fast[5] (Udi)
* Fix `RegFile` parameter overriding in ArtyA7 example (Pirmin Vogel)
* List all Python requirements for dvsim (Philipp Wagner)
* Add `RegFile` parameter for selecting register file implementation
  (Pirmin Vogel)
* [rtl] Fix FENCE comment in decoder (Tom Roberts)
* Add private CI trigger (Philipp Wagner)
* CI: Factor out installation of build dependencies (Philipp Wagner)
* CI: Script to convert CI variables (Philipp Wagner)
* Add lowRISC-specific version of Spike to CI config (Philipp Wagner)
* Factor out CI variables into separate file (Philipp Wagner)
* Fix PRJ_DIR in DV Makefile (Philipp Wagner)
* Update google_riscv-dv to google/riscv-dv@2e52518 (Philipp Wagner)
* Doc support for overriding enum/string parameters at the top level
  (Pirmin Vogel)
* Add a single `RV32M` enum parameter to select multiplier
  implementation (Pirmin Vogel)
* B extension: Correct doc and parameter usage (Pirmin Vogel)
* Use a RV32IMCB toolchain in CI (Philipp Wagner)
* [ibex/dv] Add dependency on bus_params_pkg (Udi)
* Update google_riscv-dv to google/riscv-dv@17d7984 (Udi)
* Update lowrisc_ip to lowRISC/opentitan@92e92424 (Rupert Swarbrick)

Signed-off-by: Pirmin Vogel <vogelpi@lowrisc.org>



======Commit: 75e5b98e======
======Short Message======
[otbn] Split up JSON dumping/loading in otbn-rig
======Full Message======
[otbn] Split up JSON dumping/loading in otbn-rig

This is a bit verbose, because we're properly parsing JSON data back
to ProgInsn objects, so have to do various sanity checks on the way to
make sure all the types match up.

The core of the patch is in the otbn-rig script, where we change the
command line to have two subcommands: 'gen' and 'asm'. Running 'gen'
will generate some JSON that describes the snippets in a random
instruction stream. Feeding that JSON to 'asm' generates assembly code
that can be assembled into a binary for testing.

This isn't quite so handy to use if you "just want to generate a darn
asm file!", but it's the shape we're going to use in the future and
running things in two stages like this will spot any silly mistakes in
the JSON parsing.

Here's an example of how to run it to generate a small example:

    hw/ip/otbn/util/otbn-rig gen --size 10 -o tst.json
    hw/ip/otbn/util/otbn-rig asm -o tst tst.json

This example can be assembled and linked with:

    hw/ip/otbn/util/otbn-as tst.S -o tst.o
    hw/ip/otbn/util/otbn-ld -o tst -T tst.ld tst.o

If you just want to see some assembly, the 'gen' phase will print its
JSON to stdout if not given an '-o' argument, the 'asm' phase will
read from stdin if not given a JSON file, and will print just the
assembly to stdout. So you can run:

    hw/ip/otbn/util/otbn-rig gen --size 10 | \
      hw/ip/otbn/util/otbn-rig asm

Of course, this doesn't generate a linker script, so this is only
useful for quick checks. Chaining like this does:

    hw/ip/otbn/util/otbn-rig gen --size 10 | \
      hw/ip/otbn/util/otbn-rig asm -o tst

(but you no longer get to keep the JSON intermediate file).

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 60fd43f8======
======Short Message======
[dv/alert] support async alert
======Full Message======
[dv/alert] support async alert

This PR intends to solve issue #3135
To support async alert:
1). Add two clk cycle delays when alert is detected if the alert async mode is on
2). If signal int error detected, and it is the first clock cycle,
ignore this error because it could potentially be a `clk_skew`
3). In alert_esc_if add async clocks (randomly generate freqs) and reset (currently
tied to rst_n)

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: c0a49727======
======Short Message======
[otbn] Fix encoding for bn.lid and bn.sid
======Full Message======
[otbn] Fix encoding for bn.lid and bn.sid

The offset is required in the documentation to be a multiple of WLEN
(32 bytes), but the scheme had a shift of 4 on the immediate,
multiplying by 16 rather than 32.

This patch changes the shift to match the documentation (in both the
YAML file and the simulator).

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 1d4ff9ec======
======Short Message======
[otbn] Fix address for BN.LID and BN.SID in simulator
======Full Message======
[otbn] Fix address for BN.LID and BN.SID in simulator

The offset is encoded shifted down by 4 in the tooling. The decoder
wasn't shifting at all, but the operand got used multiplied by
32 (2**5), which doesn't match. Worse still, the bit field in the
encoding is split up in a complicated way, which the simulator didn't
know about.

This patch changes the simulator to match the tooling and
documentation.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: ff1a7be3======
======Short Message======
[otbn] Move shift information from encoding to operand
======Full Message======
[otbn] Move shift information from encoding to operand

Some operands get encoded with a "shift". For example, the following
line of assembly

    bn.mulqacc w30.1, w25.0, 64

has an acc_shift_imm operand of 64. This is actually encoded as 1: the
operand is shifted down by 6 bits before encoding.

This sort of thing is supported by the RISC-V instruction set too, and
their ISA specifies these shifts as part of the list of encoding
schemes. Until now, we did the same thing (copying them!)

In general, there are two jobs that need doing when converting from
the string representation in the assembly file to a number that can be
put in the encoding.

  - 2's complement encoding for signed immediates
  - Shifting down appropriately

Before this commit, the signedness information for an operand was
stored on the OperandType object and the shift was stored on the
EncSchemeField object. This is a bit silly: surely it would make more
sense to put them together! In fact, it's worse: we could specify a
register operand with a shift. With a shift of 1, you'd be able to
write x0, x2, x4 and x62(!) but not x1 or x3.

So this commit moves the shift to the OperandType object. Now our
OperandType.read_index function does both of the jobs above, and it is
the inverse operation of OperandType.render_val. Much nicer!

As a bonus, this now means it's easy for an operand's type to be more
precise about the range of values it supports. So acc_shift_imm used
to say "Valid range: 0..3". Now it says "Valid range: 0..196 in steps
of 64".

While writing this patch, I noticed that OperandType.read_index also
didn't support signed operands correctly, which this also fixes.

As a sanity check, I compared the assembled (and disassembled) code
snippet examples before and after this patch. The assembled snippets
are identical. The differences in the objdump disassembly are exactly
from fixing the rendering of shifted operands as in the example above.

Similarly, the only differences in generated documentation are from
the fixed ranges described above and a fixed text string for mulqacc's
acc_shift_imm operand.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: f9ca661d======
======Short Message======
[otbn] Parse any encoding before operands in YAML
======Full Message======
[otbn] Parse any encoding before operands in YAML

This lets us get rid of an ugly "now fix up any unknown widths"
step (the _update_widths_from_encoding() function). It also lets us do
things like allocate more bits for an immediate operand than it
strictly needs.

However, the real point of this work is that it's a cleanup that needs
doing before we start representing operand shifts at operand-level as
well as the encoding. This is probably the cleanest way to fix objdump
disassembly (which currently doesn't shift stuff back up) and
documentation generation.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 8f72a95e======
======Short Message======
[otbn] Further tweaks to assembly syntax
======Full Message======
[otbn] Further tweaks to assembly syntax

Apparently, I didn't check commit d82e48d carefully enough. We
definitely want to strip spaces from the right of the operand string,
but not from the left. Or at least, not without doing some other work.
The problem is the syntax for mulqacc, which looks something like
this:

    [<z>] <wrs1>.<wrs1_qwsel>, <wrs2>.<wrs2_qwsel>, <imm>

If you strip the input string completely, an instruction like this

    BN.MULQACC w28.1, w29.0, 64

means we try to match "w28.1, w29.0, 64". The problem is that the
current matching logic requires the space after the optional ".Z".

Maybe the proper fix is to change the matching regex to be cleverer
and ignore whitespace between optional and required syntax, but that's
not completely trivial. For example, this syntax:

   <foo> [<bar>] <baz>

probably should need a space between <foo> and <baz> if <bar> isn't
supplied.

While I looking at this, I've also fixed a few more syntaxes for the
bignum instructions, removing stray spaces. This is needed to parse
correctly if we strip on the right for a similar reason. If the syntax
is:

    <wrd>, <wrs>, <imm> [, FG<flag_group>]

and you use the form without a flag group, the matching code expects
some trailing whitespace. Before stripping the input, there was a
newline that matched nicely. Afterwards, it failed. But I think it's
perfectly reasonable for that to fail, and the syntax

    <wrd>, <wrs>, <imm>[, FG<flag_group>]

looks nicer in the docs anyway.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 0731d51b======
======Short Message======
[otbn] Add some OTBN instructions to otbnsim
======Full Message======
[otbn] Add some OTBN instructions to otbnsim

Add the variant, model and basic instruction support.

We also dump an execution trace to a file (/tmp/otbn_XXXXX/trace) and
print out the name of the trace directory, which should make debugging
rather easier.

As a sanity check, run it with the smoke test example as follows:

    mkdir -p build-bin/otbn/smoke_test
    hw/ip/otbn/util/build.sh \
      hw/ip/otbn/dv/smoke/smoke_test.S \
      build-bin/otbn/smoke_test/smoke
    hw/ip/otbn/dv/otbnsim/standalone.py -v \
      build-bin/otbn/smoke_test/smoke.elf

The trace looks like this:

    lui x1, 855019                      | [x1 = d0beb000]
    addi x1, x1, 1299                   | [x1 = d0beb513]
    lui x2, 658409                      | [x2 = a0be9000]
    addi x2, x2, 282                    | [x2 = a0be911a]
    add x3, x1, x2                      | [x3 = 717d462d, x1 = 00000000]
    sub x4, x2, x1                      | [x4 = a0be911a]
    or x5, x1, x2                       | [x5 = a0be911a]
    and x6, x1, x2                      | [x6 = 00000000]
    xor x7, x1, x2                      | [x7 = a0be911a]
    ori x8, x1, 291                     | [x8 = 00000123]
    andi x9, x1, 1980                   | [x9 = 00000000]
    xori x10, x1, 1146                  | [x10 = 0000047a]
    slli x11, x1, 0x0a                  | [x11 = 00000000]
    srli x12, x1, 0x0d                  | [x12 = 00000000]
    srai x13, x1, 0x07                  | [x13 = 00000000]
    sll x14, x1, x2                     | [x14 = 00000000]
    srl x15, x1, x2                     | [x15 = 00000000]
    sra x16, x1, x2                     | [x16 = 00000000]

Notice the updates to x1: the code is using it just like a normal
register, but we know better(!) and are treating it as a hardware call
stack.

This also behaves "as expected" when running the loop.S code snippet.
Generate that with

   make -C hw/ip/otbn/util asm-sanity
   hw/ip/otbn/dv/otbnsim/standalone.py -v \
     build-bin/otbn/util/code-snippets/loop

Finally, note that we bump the required version of riscv-model. This
is because there's an API break between 0.6.2 and 0.6.4 (the module
exporting TerminateException changes from riscvmodel.isa to
riscvmodel.model).

Signed-off-by: Stefan Wallentowitz <stefan.wallentowitz@gi-de.com>
Co-authored-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: fac8e2f9======
======Short Message======
[otbn] Improve reporting of illegal instructions in otbnsim
======Full Message======
[otbn] Improve reporting of illegal instructions in otbnsim

This actually fixes a bug (we can't hex-format registers), and also
prints the raw bytes of the instruction that wasn't allowed.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: dbedcfb8======
======Short Message======
[fpv/doc] README syntax fix
======Full Message======
[fpv/doc] README syntax fix

FPV README has syntax issue, there are a few extra lines that messed up
with the README syntax.
This PR removes this extra lines.

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: d4cd5aba======
======Short Message======
[flash_ctrl, dv] DV updates to support default seed reading
======Full Message======
[flash_ctrl, dv] DV updates to support default seed reading

Signed-off-by: Timothy Chen <timothytim@google.com>

[flash, dv] change polling loop to csr_spinwait

Signed-off-by: Timothy Chen <timothytim@google.com>



======Commit: 7e455db8======
======Short Message======
[dv/csr] add common task for csr_or_field_rd_check
======Full Message======
[dv/csr] add common task for csr_or_field_rd_check

This PR adds a task `csr_or_field_rd_check` to randomly choose to read check a
CSR or CSR fields. This task can exclude the CSR or field based on
manual exclusion tags. This task can be used for automated tests such as
: `csr_rw` and `csr_shadow_reg_errors`

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: 1c063dc7======
======Short Message======
[otbn] Add unit test for OTBN DIF
======Full Message======
[otbn] Add unit test for OTBN DIF

Fixes #2576

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: 1c7cf8f8======
======Short Message======
[otbn] Initial DIF
======Full Message======
[otbn] Initial DIF

An initial DIF implementation for OTBN.

Fixes #2575

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: 10d86981======
======Short Message======
[docs] Fix Git Invocation for Google Cloud
======Full Message======
[docs] Fix Git Invocation for Google Cloud

The Google Cloud docs builder does not manage to get file versions
because it has to cross a filesystem boundary when attempting to find
the git directory for the repository.

This change ensures that git starts in the right working directory,
regardless of where doxygen is invoked from.

Signed-off-by: Sam Elliott <selliott@lowrisc.org>



======Commit: e5fce7e8======
======Short Message======
[dv] Chip UART TX RX test seq fix
======Full Message======
[dv] Chip UART TX RX test seq fix

- The first `send_uart_rx_data()` should not be forked because the
transmision needs to complete before the checks.

Signed-off-by: Srikrishna Iyer <sriyer@google.com>



======Commit: d5407d5f======
======Short Message======
[dv/shadow_reg] update sequence for storage error
======Full Message======
[dv/shadow_reg] update sequence for storage error

1. Add two backdoor paths for shadow_reg's `shadow_q` and `committed_q`
2. In `shadow_reg_errors` vseq, randomly choose to backdoor write either
one of the registers, and create a storage error.
3. Add a special tag called `shadowed_reg_path` in regtool because the shadow reg
is declared separated in aes core.
4. override `poke` task to update `committed_val` and `shadow_val`
5. disable shadow_reg related assertions in AES and top_level to avoid
assertion errors
6. change ral backdoor default path from `RTL` to `BkdrRegRtl`

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: 7fe6abc6======
======Short Message======
[otbn] Initial OTBN python simulator
======Full Message======
[otbn] Initial OTBN python simulator

This adds the first iteration of the python instruction set
simulator (ISS) for OTBN. Right now it only has RV32I, but it lays the
fundamental groundwork.

The base model is an external dependency ("riscv-model", which is
hosted on pypi and will be installed by pip as part of
python-requirements.txt). The OTBN model is currently a small wrapper
that loads up imem and dmem contents, instantiates the base model,
runs that, and dumps some results to files. This will expand as we add
support for the rest of the OTBN instruction set.

As well as including a basic ISS, this patch has a C++ wrapper that
can be used through DPI to run the ISS inside an RTL simulation. The
wrapper grabs imem and dmem contents from the simulation and dumps
them to files. It then finds the path to the Python simulator (based
on the location of the binary) and runs that. Finally it grabs the
contents of dmem after the run, together with the number of cycles
taken by the simulation (which it returns).

Use `fusesoc ... --OTBN_MODEL` to use this OTBN model instead of the
RTL implementation.

Signed-off-by: Stefan Wallentowitz <stefan.wallentowitz@gi-de.com>
Co-authored-by: Rupert Swarbrick <rswarbrick@lowrisc.org>
Co-authored-by: Philipp Wagner <phw@lowrisc.org>



======Commit: 21167d21======
======Short Message======
[i2c, rtl] Initial incomplete implementation of i2c target mode
======Full Message======
[i2c, rtl] Initial incomplete implementation of i2c target mode

1. Added registers for i2c target mode
2. Added target tx and acq fifos
3. Added target ports to FSM (FSM not functional in target mode yet)
4. Added dv fixes to CI errors

Signed-off-by: Igor Kouznetsov <igor.kouznetsov@wdc.com>



======Commit: ecf04dcc======
======Short Message======
Regenerate top-levels after tooling change
======Full Message======
Regenerate top-levels after tooling change

I think that PR #2975 was merged without re-running the autogeneration
after rebasing. Unfortunately, some of the sources from which it
autogenerates things had changed in the meantime. Until this is fixed,
every PR will fail CI.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 8daa53c9======
======Short Message======
[dv] Fix csr_rd check during reset
======Full Message======
[dv] Fix csr_rd check during reset

when reset occurs, all items will be dropped immediately.
may end up getting d_error = 1 from previous item on the bus

Signed-off-by: Weicai Yang <weicai@google.com>



======Commit: af0deb7c======
======Short Message======
[dv/rv_timer] fix regression corner case
======Full Message======
[dv/rv_timer] fix regression corner case

There is a regression failure regarding timer timeout. The issue is
because the while loop is constructed :
```
          while (1) begin
            csr_rd(.ptr(intr_state_rg), .value(read_data));
            if (spinwait_delay_ns) #(spinwait_delay_ns * 1ns);
            if ((read_data == exp_data) | (reset_asserted == 1)) break;
          end
```
So in the worst case scenario, the interrupt is set right after csr_rd,
then the wait time should be twice of the spinwait_delay_ns.

This PR fixed this timeout issue by multiply the delay with 2.

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: d326f250======
======Short Message======
[sw] Vendor in llvm_clang_rt_profile
======Full Message======
[sw] Vendor in llvm_clang_rt_profile

This change adds a vendor.hjson file and a patch to be able to build
the LLVM profiling runtime support library for OpenTitan. This library
relies heavily on file I/O, which we don't have, and supports multiple
platforms that we are not interested in. Thus, the hjson file excludes
all files that are irrelevant to OpenTitan while the patch removes the
headers that we don't need and adjusts the paths of several headers.

Signed-off-by: Alphan Ulusoy <alphan@google.com>



======Commit: d5b1c0f7======
======Short Message======
[topgen] Add rstmgr generation to topgen
======Full Message======
[topgen] Add rstmgr generation to topgen

Signed-off-by: Timothy Chen <timothytim@google.com>

[topgen] update reset checks for 'internal' type

Signed-off-by: Timothy Chen <timothytim@google.com>

[topgen] lint fixes

Signed-off-by: Timothy Chen <timothytim@google.com>



======Commit: 94e374bd======
======Short Message======
[aes] Disable SVAs checking key length/mode in case of storage errors
======Full Message======
[aes] Disable SVAs checking key length/mode in case of storage errors

In the case of storage errors in the shadowed control register, the AES
module might be confronted with invalid key length and mode values (such
as all-zero values or if multiple bits are set). Since such storage
errors need to be handled by the RTL, the SVAs checking the key length
and mode values seen by the module must be disabled in case of storage
errors.

Signed-off-by: Pirmin Vogel <vogelpi@lowrisc.org>



======Commit: fc03de64======
======Short Message======
[otbn] Add support for unconditional jumps in otbn-rig
======Full Message======
[otbn] Add support for unconditional jumps in otbn-rig

For a tiny example, run:

  hw/ip/otbn/util/otbn-rig --asm-output gen.S --size 10 -o gen.json

and gen.S will contain:

  /* Section 0 (2 instructions) */
  .offset 0x0
  addi          x30, x0, 1269
  jal           x6, 3320

  /* Section 1 (4 instructions) */
  .offset 0x2d4
  lui           x29, 29447
  srl           x18, x30, x30
  slli          x17, x24, 5
  ecall

  /* Section 2 (2 instructions) */
  .offset 0xcfc
  andi          x24, x0, 4
  jal           x3, -2604

Note that the .offset directives in the generated assembly don't
actually work for generating different sections: that, together with
the rather ugly command line, will be fixed in a separate commit.

Finally, this commit changes the comments generated in the assembly
output from "Snippet" to "Section": the things being described might
come from several snippets. I think I just had the word snippet on the
mind when I wrote the code in the first place!

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: bf5ca978======
======Short Message======
[util] Improve error messages for bad Signed-off-by lines
======Full Message======
[util] Improve error messages for bad Signed-off-by lines

I was tracking down a CI failure for someone and had to add a print
statement to this script to figure out why the commit wasn't allowed.
This patch prints out the "I expected to see ..." message that I
needed. It also checks for malformed signoff lines.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 32fcf7cc======
======Short Message======
[util] Flake8 and spelling/grammar fixes in lint_commits.py
======Full Message======
[util] Flake8 and spelling/grammar fixes in lint_commits.py

No functional change, except that some of the error messages have
slightly better text. Also, fix spelling of "summary"!

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 0f643e1e======
======Short Message======
[otbn] Move software to sw/otbn
======Full Message======
[otbn] Move software to sw/otbn

Fixes #2935

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: fa8c6922======
======Short Message======
[top_earlgrey] Run the Verilator sim with 4 threads
======Full Message======
[top_earlgrey] Run the Verilator sim with 4 threads

Verilator can parallelize the execution of the simulation. Previously,
we didn't make use of this functionality. With this commit, the
simulation is split into four threads by default, which works best for
systems with four or more physical cores (in one socket); this should be
a sane default for a developer workstation/laptop these days.

Users can override this setting when compiling the simulation to better
adjust to their system configuration by providing a parameter to
fusesoc. For example, the following command line compiles the simulation
with 8 threads.

```
fusesoc --cores-root=. run --target=sim  --setup --build \
  --flag=fileset_top lowrisc:systems:top_earlgrey_verilator \
  --verilator_options '--threads 8'
```

In my testing, the speedup in simulation performance is reasonably close
to being proportional to the amount of threads, as long as physical CPU
cores are available. For example, going from 1 thread to 4 threads
results in a speedup of 3.2 on my 8th generation Intel Core i7 laptop CPU.

For CI with Azure Pipelines, we need to disable threading, as the
provided machines only have two virtual CPUs, and we get a slow-down
from enabling tracing, which times out some simulations.
(See
https://docs.microsoft.com/en-us/azure/devops/pipelines/agents/hosted?view=azure-devops&tabs=yaml;
VM model "Standard_DS2_v2" as listed in
https://docs.microsoft.com/en-us/azure/virtual-machines/dv2-dsv2-series#dsv2-series).

Also note that the compliance test in CI runs with four parallel jobs;
changing the number of threads per simulation will likely also need
changes to the number of compliance test jobs.

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: 9b0681ed======
======Short Message======
[top_earlgrey_verilator] Use faster build options
======Full Message======
[top_earlgrey_verilator] Use faster build options

Verilator improved its default options compile options a lot in the
past, now giving much better and performant defaults than before. Remove
custom options to let these new defaults take effect.

With this change, on my machine, the build time on my machine is reduced
from 6:30 min to 1:21 min.

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: 3dc24fca======
======Short Message======
[aes] Add second alert signal
======Full Message======
[aes] Add second alert signal

This commit adds a second alert signal to AES in order to distinguish
between
- minor/recoverable update errors, and
- major/fatal storage errors that require the module to be reset.

Signed-off-by: Pirmin Vogel <vogelpi@lowrisc.org>



======Commit: e9e06bcb======
======Short Message======
[tlul/dv] Update test plan for tl errors
======Full Message======
[tlul/dv] Update test plan for tl errors

List all the error cases in testplan

Signed-off-by: Weicai Yang <weicai@google.com>



======Commit: 0d0b2dc5======
======Short Message======
[otbn] Allow the user to supply a linker script with -T in otbn-ld
======Full Message======
[otbn] Allow the user to supply a linker script with -T in otbn-ld

It turns out that binutils ld accumulates -T options, so otbn-ld
didn't really support something like

   path/to/otbn-ld -T my-linker-script.ld my-object.o

since it expanded to something like

   riscv32-unknown-elf-ld -T default-linker-script.ld \
                          -T my-linker-script.ld \
                          my_object.o

This latter command isn't what you want, because *it* is equivalent to
something like

   cat default-linker-script.ld my-linker-script.ld >combined.ld
   riscv32-unknown-elf-ld -T combined.ld my_object.o

which is no good if you want to override, rather than augment, the
default linker script.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: e496c109======
======Short Message======
[i2c, dv] Update v1 and fixed issues in v2 for i2c_host dv
======Full Message======
[i2c, dv] Update v1 and fixed issues in v2 for i2c_host dv

 - Decouple address and data phase for read transaction
   to utilize fmt_fifo bandwidth in i2c_sanity (v1)
 - Verify irq assertion on interrupt pins (instead of reading intr_state)
   in fifo_overflow_vseq and watermark_vseq (v2)
 - Fix issue in scoreboard to handle rx_fifo overflow (v2)

Signed-off-by: Tung Hoang <hoang.tung@wdc.com>



======Commit: af5a715d======
======Short Message======
[lint/prim*] Waive STAR_PORT_CONN_USE errors in generated prims
======Full Message======
[lint/prim*] Waive STAR_PORT_CONN_USE errors in generated prims

Signed-off-by: Michael Schaffner <msf@google.com>



======Commit: 665843c4======
======Short Message======
[otbn] An initial random instruction generator
======Full Message======
[otbn] An initial random instruction generator

This can generate random straight-line programs. Example usage:

  ./hw/ip/otbn/util/otbn-rig -o x.json --asm-output x.asm

This writes information about the snippets that it has generated into
x.json (not particularly interesting except for debug at the moment;
will be the basis for anything advanced like test shrinking in the
future). It writes assembly code to x.asm. This example starts:

    /* Snippet 0 (97 instructions) */
    .offset 0x0
    addi          x30, x0, 1269
    slli          x3, x30, 9
    sub           x13, x30, x3
    sra           x17, x13, x13
    and           x25, x17, x0
    srl           x18, x30, x30
    slli          x17, x13, 5
    ori           x16, x13, -1155
    or            x3, x25, x13
    sub           x25, x18, x25
    or            x6, x3, x0
    lui           x21, 273100
    and           x25, x13, x13
    andi          x3, x16, 698
    and           x23, x17, x30
    xori          x5, x25, 1442
    sll           x4, x5, x13
    addi          x20, x13, -1068
    xori          x31, x30, -1750
    ...

This is *far* from feature complete. The next steps are probably:

  - Add support for unconditional branches

  - Allow the user to restrict the instructions that are generated

  - Generate bn.lid, bn.sid, bn.movr. The dependencies for these
    indirect instructions aren't tracked properly at the moment. Note
    that we don't generate *any* big number instructions at the moment
    as a result (because you need to do a bn.lid to get an
    architectural value in a register)

Slightly further along:

  - Generate CSR/WSR accesses (there's some infrastructure here
    already, but we won't generate any at the moment because we
    haven't marked any of their "addresses" as having a value).

  - Generate loads with address not based on x0. We do simple register
    value tracking for lui and addi, so this is theoretically
    possible. Probably we just need a specialized snippet that's
    designed to generate the sort of lui/addi sequences that will give
    us useful known register values.

  - Allow the user (or something else) to customise weights for
    different snippets and instructions within a snippet.

  - Generate sequences with conditional branches

  - Generate sequences with functions and function calls

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: b461bbd0======
======Short Message======
[otbn] Infer operand widths from encoding if there is one
======Full Message======
[otbn] Infer operand widths from encoding if there is one

If an instruction has an encoding, we check that any operand width
either specified or implied in the list of operands matches the number
of bits in the encoding.

This patch propagates information the other way, so that every operand
of an instruction with an encoding ends up with a width.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 1ca138f4======
======Short Message======
[uart/dv] Fix oversample corner case
======Full Message======
[uart/dv] Fix oversample corner case

Wait long period to flush out garbage data after testing rx oversample
so that final interrupt check won't see the unexpected interrupt

Signed-off-by: Weicai Yang <weicai@google.com>



======Commit: a6e05aec======
======Short Message======
[dv/chip] shadow_reg regression fix
======Full Message======
[dv/chip] shadow_reg regression fix

Recent regression shadow_reg failures are due to reset in shadow_reg
sequences. Original code directly used `dut_init` task to issue reset.
But in `chip_common_vseq.sv` we override the `apply_reset` task. So this
PR:
1). Change the `dut_init` task to `apply_reset` in shadow_reg sequence
2). Because csr_rd in shadow_reg sequence is non_blocking, add a
"wait_max_outstanding_item" between each read to ensure no outstanding
access exceeds max. Also add a "wait_no_outstanding_access" to make sure
all reads are done before going to next iteration
3). Change from verbosity `UVM_LOW` to `UVM_MEDIUM` to reduce the amount
of code printed in daily regression

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: 2c399647======
======Short Message======
[aes dv] Fix AES C mode compilation option
======Full Message======
[aes dv] Fix AES C mode compilation option

Signed-off-by: Srikrishna Iyer <sriyer@google.com>



======Commit: 8bddbfbc======
======Short Message======
[chip dv] Reorg coverage collection at chip level
======Full Message======
[chip dv] Reorg coverage collection at chip level

THis fixes the coverage collected at the chip level.

Signed-off-by: Srikrishna Iyer <sriyer@google.com>



======Commit: e4662af9======
======Short Message======
[dvsim] Do builds smartly
======Full Message======
[dvsim] Do builds smartly

This is a small enhancement that saves compute resources by eliminating
identical builds.

It is possible for tests to specify unique builds via the `build_mode`
key in the HJson. Without that option, tests are run with the `default`
build mode, which is the vanilla build with no extra (specific) compile
time options. It is possible the the uniquely specific builds may differ
from the default only under certain conditions, such as coverage being
enabled. If coverage is not enabled, then it is wasteful to run two
completely identical builds, expecially in time/resource-sensitive
environments such as the private CI. This enhancement checks if newly
encountered builds are unique to an existing one in the list by
comparing the final `cmd` and the environment exports. If they are, then
the new one is discarded and tests belonging to the new build are
remapped to run with ths existing build.

Signed-off-by: Srikrishna Iyer <sriyer@google.com>



======Commit: 234b4349======
======Short Message======
[otbn] Clarify what happens on out-of-bounds or unaligned load/store
======Full Message======
[otbn] Clarify what happens on out-of-bounds or unaligned load/store

Allocate an error code for "bad data access" and refer to it in the
docs: this can totally change as we implement the design, but it's
much easier to say something and change it later.

This patch also slightly expands the general notes about what happens
on an error ("We stop and set an error flag": see _index.md). I think
this should be pretty uncontentious. Obviously, there are more details
to add in future!

The patch adds a check for top-of-memory to the pseudo-code that
describes how the bn.lid and bn.sid instructions work. Hopefully, this
pseudo-code will eventually be pulled from the simulator, but it can't
hurt to add that check for now.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 16686803======
======Short Message======
[otbn] Handle signed immediate operands properly in tooling
======Full Message======
[otbn] Handle signed immediate operands properly in tooling

Now, the ISA data in insns.yml specifies whether an immediate operand
is signed or not (usually not, except for RV32I instructions).

The .insn-matching logic in otbn-as fixes things up accordingly and we
actually lose one instruction: LOOP no longer fits in a RISC-V
standard encoding.

Finally, objdump should now disassemble signed immediates correctly.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: b2970df1======
======Short Message======
[fpv] fix fpv csr assert
======Full Message======
[fpv] fix fpv csr assert

1. From nightly regression found most of the CSR assertions are
unreachable. Found fpv csr assert should use normalized address to
compare
2. Fix a few assertion issues while running the existing IPs:
  1). W1C regiters only clears when writing 1, when writing a 0, the
  originally values stays unchanged. Previous implementation did not
  capture this behavior correctly.
  2). non-homog register will read/write by field no matter it is a
  multi-reg or not.
  3). "R0W1C" register always reads out 0 rather than the rest of the
  "W1C" registers

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: 1b018deb======
======Short Message======
[xbar/dv] Update chip-level xbar to drive from each IP  ports
======Full Message======
[xbar/dv] Update chip-level xbar to drive from each IP  ports

1. detail discussion at #2464
2. re-enable chip xbar tests (tmp disabled at #3040)
3. exceptionis (non-comportable instance/port name) are handled in
termodule.py:find_otherside_module
  1. all mem IPs (rom, ram_main, eflash, ram_ret), which can be removed
  when we make memory as comportable IP
  2. corei, cored, debug_mem, dm_sba: need more discussion

Signed-off-by: Weicai Yang <weicai@google.com>



======Commit: 88f36217======
======Short Message======
[dv] Renable chip sanity test
======Full Message======
[dv] Renable chip sanity test

This reenables chip level sanity test that was temporarily disabled due
to #2405, for which fixes now seem to be in place.

Signed-off-by: Srikrishna Iyer <sriyer@google.com>



======Commit: 44d5cabe======
======Short Message======
[fpv/tlul] syntax error fix
======Full Message======
[fpv/tlul] syntax error fix

FPV gives error for this syntax:
` ../src/lowrisc_tlul_headers_0.1/rtl/tlul_pkg.sv(49): an enum variable
may only be assigned the same enum typed variable or one of its values`
DV also throws warning:
`file: ../src/lowrisc_tlul_headers_0.1/rtl/tlul_pkg.sv
    default: '0
              |
xmvlog: *W,ENUMERR (../src/lowrisc_tlul_headers_0.1/rtl/tlul_pkg.sv,48|14): This assignment is a violation of SystemVerilog strong typing rules for enumeration datatypes.
`
Please feel free to let me know if there is other better ways to fix it.

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: c8ea251b======
======Short Message======
[ast] ast changes to enable top_earlgrey
======Full Message======
[ast] ast changes to enable top_earlgrey

- speed up always on clock and use it as the sole clock that drives the system as top_earlgrey is not yet ready for async clocks

Signed-off-by: Timothy Chen <timothytim@google.com>

[ast] various veriblelint fixes

Signed-off-by: Timothy Chen <timothytim@google.com>

[ast] verible-lint fixes

Signed-off-by: Timothy Chen <timothytim@google.com>



======Commit: 322f2549======
======Short Message======
[topgen] Topgen updates to suppport sensor_ctrl
======Full Message======
[topgen] Topgen updates to suppport sensor_ctrl

- sensor_ctrl is a top specific module that is NOT templated
- It thus follows a slightly different set of rules when compared
  to hw/ip and templated ips under hw/top_earlgrey

Signed-off-by: Timothy Chen <timothytim@google.com>

[topgen] minor fix to alert literal generation

Signed-off-by: Timothy Chen <timothytim@google.com>



======Commit: 450168c7======
======Short Message======
[rstmgr] Minor updates for ast integration
======Full Message======
[rstmgr] Minor updates for ast integration

- switch to ast driven packages for root resets
- fix reset naming and connection

Signed-off-by: Timothy Chen <timothytim@google.com>



======Commit: c19ac398======
======Short Message======
[ast_wrapper] Add ast wrapper files
======Full Message======
[ast_wrapper] Add ast wrapper files

Signed-off-by: Timothy Chen <timothytim@google.com>

[ast_wrapper] ast_wrapper updates for ast integration

Signed-off-by: Timothy Chen <timothytim@google.com>

[ast_wrapper] minor veriblelint fixes

Signed-off-by: Timothy Chen <timothytim@google.com>

[ast_wrapper] Add missing header

Signed-off-by: Timothy Chen <timothytim@google.com>

[ast_wrapper] review updates

Signed-off-by: Timothy Chen <timothytim@google.com>



======Commit: 9edf4aaa======
======Short Message======
[dv/esc_agent] Align with design behavior for ping timeout
======Full Message======
[dv/esc_agent] Align with design behavior for ping timeout

According to PR #3034, we decided to leave the issue as WONT FIX and
DV will align:

1. Since prim_esc_sender does not know ping_timeout, so in esc_monitor,
we will check the resp_p/n until it reaches complete state or
signal_int_fail state.

2. A minor style change: change `check_esc_resp` task from `if else
if` statements to `case` statement to improve the code readability.

3. In task `check_esc_resp` if it is a ping and a ping is interrupted
by real escalation, move the priority to the highest, and skip checking

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: 02de327c======
======Short Message======
[dv/alert_driver] semaphore fix
======Full Message======
[dv/alert_driver] semaphore fix

The semaphore is used to limit the access to use send alert, and make
sure each alert handshake are two clock cycle apart. But previous
implementation has scheduler issues as below:

```
fork
  thread 1: send_alert
  thread 2: reset
join_any
disable fork;
1) semaphore try_get
2) semaphore release ---> if other thread get it during line 1) and 2)
here, then it will release the semaphore from other thread.
```

The reason i implemented line 1) and 2) is to handle the logic when
reset is issue during send_alert, then the code is still able to release
semaphore. However, I did not count for the case when alert_send (thread 1) is
finished, and other thread is trying to acquire the semaphore.

The solution in this PR is to move the try_get and release to a separate
reset thread.

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: 96bd1249======
======Short Message======
[dv/alert_handler] Fix esc_receiver_driver behavior
======Full Message======
[dv/alert_handler] Fix esc_receiver_driver behavior

When esc_receiver driver receives a ping_response, while responding to
the ping response, a real escalation signal interrupted.
In this case, design will abort the ping response, and directly jumpped
to escalation response.
Current `esc_receiver_driver` did not do anything but keep toggling the
resp_p/n, this behaivor is fine but makes the sequence harder to manage.

This PR update the behavior: Now the driver will abort the random
resp_p/n drives, and response to the real escalation signal without any
sig_int_err.

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: 57071c0c======
======Short Message======
[topgen] Support custom external name format
======Full Message======
[topgen] Support custom external name format

Current Inter-module signal has fixed naming rule for every inter-module
signals. It creates weird naming format for external ports. External
ports doesn't have `_o`, `_i` suffixes and also it always has the
instance name in front of the signal name such as `clkmgr_clk_main`.

This commit is to support custom top signal name for external type
(other type will be addressed in following PRs). To support it,
top_earlgrey.hjson format is slightly revised. Please see the
`inter_module`.`external` data field.

This is related to Issue #3095

Signed-off-by: Eunchan Kim <eunchan@opentitan.org>



======Commit: eb333ec2======
======Short Message======
[syn] Carry over synthesis flow updates from bronze
======Full Message======
[syn] Carry over synthesis flow updates from bronze

This carries over recent updates to the synthesis flow on bronze and fixes
a couple of syntax issues that break several tools (DC, Verilator).

Signed-off-by: Michael Schaffner <msf@google.com>



======Commit: 681f48ad======
======Short Message======
[dvsim] Allow testplan to be omitted
======Full Message======
[dvsim] Allow testplan to be omitted

In the current implementation, `dvsim` makes it necessary to provide a
testplan, otherwise it results in errors being thrown.

This patch fixes that and allows testplan to be completely omitted. The
tests in that case appear as 'Unmapped Tests' in the final results
table. This is useful for DUTs such as `prim_lfsr` and `prim_present`.

Signed-off-by: Srikrishna Iyer <sriyer@google.com>



======Commit: 64c89739======
======Short Message======
[sw] Fix flash_header section attributes
======Full Message======
[sw] Fix flash_header section attributes

Moving the flash_header section from the linker script to an assembly file
allows us to specify that section's attributes and ensure it's not
writeable. This prevents the segment containing the code and other
read-only data to also be flagged as writeable.

Signed-off-by: Luís Marques <luismarques@lowrisc.org>



======Commit: e0d37fec======
======Short Message======
[topgen] Convert Xbar connection to inter-module signal
======Full Message======
[topgen] Convert Xbar connection to inter-module signal

Purpose: Make Xbar to be comportable IP

This is 2nd modification to make Xbar being comportable IP.
Now topgen reads comportable Xbar hjson object and amends to xbar object
in top cfg. Then the `inter_signal_list` is utilized while connecting
the modules.

Remained Items:

- Defining the connection in `inter_module.connect` is still hand-made.
  need to be automated
- memory port is better to use inter_module connection rather than
  current manual connection
- `corei`, `cored`, `dm_sba`, `debug_mem` are still manual. Ibex, RV_DM
  should have *virtual* comportable IP hjson to make inter-module
  connect-able

This commit addresses #3031 partially.

Signed-off-by: Eunchan Kim <eunchan@opentitan.org>



======Commit: ea90aace======
======Short Message======
[dvsim] Change cores-root to avoid conflicts with autogen'd core files
======Full Message======
[dvsim] Change cores-root to avoid conflicts with autogen'd core files

The `$SCRATCH_ROOT` defaults to `$PROJ_ROOT/scratch` the way we invoke
dvsim, if `$SCRATCH_ROOT` is not defined. This may cause core file
conflicts with autogen'd core files in that build scratch, since all
dvsim flows use `$PROJ_ROOT` as the `cores-root` path. This patch
changes the `cores-root` to `$PROJ_ROOT/hw` to avoid that from
happending.

Fix #3049

Signed-off-by: Michael Schaffner <msf@opentitan.org>



======Commit: fbbf6cbe======
======Short Message======
[dvsim] Update `tests` key behavior in regressions
======Full Message======
[dvsim] Update `tests` key behavior in regressions

This was encountered in #3040. The `common_sim_cfg.hjson` adds a
`sanity` regression target without specifying the `tests` key, with the
assumption that each individual IP's cfg hjson will update the `sanity`
regression with the required list of tests. In PR #3040, the sanity
tests in some of the IPs had to be commented out due to some other
issues. But on doing so, running `sanity` regression ended up adding ALL
available tests for regression for that particular DUT, since the `tests`
key remained empty list (originally intended behavior). This PR fixes
that behavior. So to sum up:

Previous behavior of the `tests` key was as follows:
- `tests` member of class `Regression` in `Modes.py` defaulted to empty
  list
- If in regressions (in the hjson), it continues to remain an empty
  list after all hjson source are parsed, then ALL available tests are
  run

New behavior is as follows:
- `tests` member of class `Regression` in `Modes.py` now defaults to
  `None`
- If in regressions (in the hjson) it is set to an empty list, and
  eventually remains an empty list after all hjson sources are parsed,
  then no tests are run
- If in regressions (in the hjson) it is entirely omitted, such that
  after all hjson sources are parsed, it continues to hold the value of
  `None`, the ALL available tests are run

Signed-off-by: Srikrishna Iyer <sriyer@google.com>



======Commit: 9ddf230c======
======Short Message======
[lint] Minor update of ERROR patterns in parser script
======Full Message======
[lint] Minor update of ERROR patterns in parser script

I came across a new error pattern (due to waiver regexp that cannot be
compiler). These messages have a different signature, hence the filter
update.

Signed-off-by: Michael Schaffner <msf@google.com>



======Commit: f00760fc======
======Short Message======
[Aes:dv] adding manual mode and  several debug knobs for fixed data/iv/key/mode/operation etc
======Full Message======
[Aes:dv] adding manual mode and  several debug knobs for fixed data/iv/key/mode/operation etc

Signed-off-by: Rasmus Madsen <rasmus.madsen@wdc.com>



======Commit: f5fd1c02======
======Short Message======
[aes] Fix lint warnings and errors
======Full Message======
[aes] Fix lint warnings and errors

Signed-off-by: Pirmin Vogel <vogelpi@lowrisc.org>



======Commit: 98fcc6b2======
======Short Message======
[pwrmgr] Re-do pwrmgr templating with fusesoc --flag
======Full Message======
[pwrmgr] Re-do pwrmgr templating with fusesoc --flag

- No longer require parsing dependencies
- Top vs Ip selection is now done in the core file that actually is switched

Signed-off-by: Timothy Chen <timothytim@google.com>

Minor fix for stray comment

Signed-off-by: Timothy Chen <timothytim@google.com>

[pwrmgr] updates for template

Signed-off-by: Timothy Chen <timothytim@google.com>



======Commit: c50ff878======
======Short Message======
[sw] Fix formatting in comment
======Full Message======
[sw] Fix formatting in comment

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: faf6f383======
======Short Message======
[otbn] Define existing error codes
======Full Message======
[otbn] Define existing error codes

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: 31441089======
======Short Message======
[otbn] Initial block-level structure
======Full Message======
[otbn] Initial block-level structure

Initial OTBN block-level structure with modules instantiated for the
base instruction subset.

All code inside the modules is "dummy code" to make the whole design
synthesize, but not yet perform any useful functionality.

Fixes #2614

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: 7750fe22======
======Short Message======
[otbn] Fix .data VMA in OTBN linker script
======Full Message======
[otbn] Fix .data VMA in OTBN linker script

I had thought that the "imem" and "dmem" regions in the MEMORY command
above would have separate counters, but that's not how it works at
all!

It seems that ld actually works by building a usage bitmap for the
memory space and if you don't specify an address for an output
section, it gets placed in the "first available address matching the
specified region". With the code before, the "first available address
in dmem" was... the first address after the end of imem. Not very
Harvard! :-)

This patch also changes the spacing in the AT> output section
attributes to be more conventional.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 3a034ef2======
======Short Message======
[dv/shadow_reg] shadow_reg update error
======Full Message======
[dv/shadow_reg] shadow_reg update error

This is the first PR that create a sequence to run shadow_reg error
test. This test currently will
1. write registers and randomly create
update error by writing a different value during the second write.
2. randomly read registers and check against the predicted values. If
reading a shadow register, its phase tracker will be cleared.
3. randomly insert RESET before write registers to check if reset will
clear the internal stored values for shadow reg.

Following PRs will finish the rest of the TODOS:
1. check alerts after storage or update errors.
2. backdoor write and create storage error cases.

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: bd401c3a======
======Short Message======
[dv/alert_handler] add exclusions for top_level alert
======Full Message======
[dv/alert_handler] add exclusions for top_level alert

In PR #3017, the shadow register's update and storage errors will cause
alert to trigger. When alert triggered, some of the alert_handler's
registers need to be excluded. These registers included: alert_cause,
alert_state, alert_accum_cnt, esc_cnt.

This pr also fix a small typo in topgen: the path to top_earlgrey.hjson
should be in `hw/top_earlgrey/data` but not `hw/top_earlgrey/doc`.

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: 50599af6======
======Short Message======
[i2c, rtl] Transaction Complete Fix
======Full Message======
[i2c, rtl] Transaction Complete Fix

Fixed trans_complete interrupt during RESTART

Signed-off-by: Igor Kouznetsov <igor.kouznetsov@wdc.com>



======Commit: 31dcc4fc======
======Short Message======
[dvsim] Tidy up config file loading in FlowCfg.py
======Full Message======
[dvsim] Tidy up config file loading in FlowCfg.py

This changes how command line overrides work, but I think the previous
behaviour probably wasn't intentional.

Before this patch, a command line override would only take effect when
reading a second config file that set a given key where both config
files set it with a 'non-default' value. This behaviour was added by
commit 680f7e2 and I think the point was just to allow the user to set
the tool (VCS or xcelium) on the command line.

After this patch, a command line override takes effect as soon as we
see the corresponding key in any configuration file. However, we can't
allow any old command line argument. For example, there is a --waves
command line argument which clashes with a config file key.
(Presumably, the existing code would get confused if we had multiple
config files setting the waves key inconsistently, but no-one does
this). To avoid this confusion, we now list the keys that can be
overridden on the command line in _CMDLINE_FIELDS.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: fb7cc68e======
======Short Message======
[dvsim] Make it simpler to derive from FlowCfg
======Full Message======
[dvsim] Make it simpler to derive from FlowCfg

Before this patch, a subclass had to call

   self.parse_flow_cfg(...)
   self._post_parse_flow_cfg()

Ideally, we wouldn't need either, but subclasses generally need to do
some set-up of their fields before parsing the configuration
file (because of the way that we conflate member variables and hjson
attributes).

This patch simplifies things slightly, so that they can now just call

   self._parse_flow_cfg(...)

(adding an underscore to the name to follow the normal Python naming
convention for protected-ish methods).

To do this, the _parse_flow_cfg() method now calls _parse_cfg (which
recurses if it sees import_cfgs). That means that the body of the old
_post_parse_flow_cfg can be slotted in at the end of _parse_flow_cfg.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 54b3829d======
======Short Message======
[lint] Update warning/error exclusions in parser scripts
======Full Message======
[lint] Update warning/error exclusions in parser scripts

This updates the warning/error exclusions for more accurate reporting,
and aligns all three lint parser scripts such that they output the same
exit messages via the logger.

Signed-off-by: Michael Schaffner <msf@google.com>



======Commit: 54d69324======
======Short Message======
[dvsim] Fix for `--tool` override
======Full Message======
[dvsim] Fix for `--tool` override

Signed-off-by: Srikrishna Iyer <sriyer@google.com>



======Commit: 6a3cf8f0======
======Short Message======
[dvsim] Bug fix in LintCfg.py
======Full Message======
[dvsim] Bug fix in LintCfg.py

- `results_page` referenced on line 226 needs to be qualified with
`self`

Signed-off-by: Srikrishna Iyer <sriyer@google.com>



======Commit: b238135b======
======Short Message======
[otbn] Auto-generate linker script based on otbn.hjson
======Full Message======
[otbn] Auto-generate linker script based on otbn.hjson

This patch creates mem_layout.py, which uses reggen and the data in
otbn.hjson to find the memory layout for the block. We then use this
in otbn-ld to automatically make a linker script with the right
layout.

We'll also want to use it in the simulator (which needs to know the
size of memory) and when we load up ELF files in a block-level
testbench (which needs to know which LMAs correspond to imem and
dmem).

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 1375b466======
======Short Message======
[fpv] Fix CSR assert template
======Full Message======
[fpv] Fix CSR assert template

- assertion when bound to al RTL can access sub-heirarchies in the RTL
directly - it doesn't have to be the full hierarchy.

Signed-off-by: Srikrishna Iyer <sriyer@google.com>



======Commit: ed3b6508======
======Short Message======
[dv/cip_lib] devmode fix
======Full Message======
[dv/cip_lib] devmode fix

In the current DV code, if `devmode_en` is set and `addrmiss` happened,
cip_lib scoreboard expect design to NOT set tl `d_error` bit. However,
in current design, the condition will set `d_error` to 1.
The reason this issue has not caused any mismatch is because: in dv we
assume `devmode_en` = 0, but in RTL, devmode is internally tied to 1.

This PR:
1. Fix the logic that `devmode_en` will trigger `d_error` if `addrmiss`.
2. Temporarily set `devmode_en` to 1 with a TODO note.
3. Comment out the code that drives devmode in tl_error_vseq, and add a
TODO to fix it once `devmode_i` is not internally tied off in RTL.

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: 847ec7a3======
======Short Message======
[sw/dif] Improve (the consistency of) Doxygen comments
======Full Message======
[sw/dif] Improve (the consistency of) Doxygen comments

- Consistently use the `/**` Doxygen style.
- Typo fixes.
- Add a `@file` header to all DIFs to ensure they are linked from the
  generated documentation.

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: 91e1b769======
======Short Message======
[dvsim] Fix coverage dashboard link
======Full Message======
[dvsim] Fix coverage dashboard link

PR #2934 introduced a bug causing coverage report page link in the
reports.opentitan.org area to be broken.
This PR fixes that, while also preserving the intent of #2934.

Signed-off-by: Srikrishna Iyer <sriyer@google.com>



======Commit: e2bf04d6======
======Short Message======
[otbn] Specify memory layout as seen from processor
======Full Message======
[otbn] Specify memory layout as seen from processor

Fixes #2620

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: 0a95e208======
======Short Message======
[prim] Rename prim_util_memload.sv to svh
======Full Message======
[prim] Rename prim_util_memload.sv to svh

prim_util_memload is meant to be only ever included; use the .svh file
suffix to indicate that.

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: a07394dc======
======Short Message======
[util/syn_yosys] fix yosys/sv2v flow
======Full Message======
[util/syn_yosys] fix yosys/sv2v flow

- Adjust key point mapping method to fix false non-equivalences in rv_dm and to
  improve performance, and per recommendations from Cadence support staff
- Skip checking full top_earlgrey, for now
- Remove now unneeded hacks for past sv2v issues
- Workaround unsupported strengths in prim_generic_pad_wrapper.sv
- Compatibility with BSD-style sed
- Remove checked-in lec_sv2v.do swapfile
- Limit number of threads used by sv2v (faster conversion)

With these changes, all of the modules pass verification, and the converted
result successfully passes the Yosys frontend.

Tool versions:
- sv2v v0.0.5
- Yosys 0.9+2406 (git sha1 9bcde4d, gcc 4.8.5 -fPIC -Os)
- LEC version 19.10-s300 (24-Aug-2019)

Signed-off-by: Zachary Snow <zach@zachjs.com>



======Commit: 301ad912======
======Short Message======
[otbn] default increment dmem pointer
======Full Message======
[otbn] default increment dmem pointer

for dmem access operations with two pointer increments
(reg pointer and dmem) pointer only one increment can be
handled in the load/store instruction. The other increment
is handeled in a subsequent `addi`. This adjusts the increments
such that always the dmem pointer is incremented in the load/store
and the reg pointer in the `addi`. This has the advantage that an
immediate of `1` can be used for the `addi` instruction regardless
of the type of addressing used for dmem.

Signed-off-by: Felix Miller <felix.miller@gi-de.com>



======Commit: aebf7c1f======
======Short Message======
[flash_ctrl dv] Connect opt_t interface
======Full Message======
[flash_ctrl dv] Connect opt_t interface

This sets a default value to the OTP interface to flash. In future, it
will be replaced with an actual interface.

Signed-off-by: Srikrishna Iyer <sriyer@google.com>



======Commit: 26f13335======
======Short Message======
[flash_ctrl rtl] Fix for bug #2995
======Full Message======
[flash_ctrl rtl] Fix for bug #2995

Signed-off-by: Srikrishna Iyer <sriyer@google.com>



======Commit: 70080425======
======Short Message======
[prim_arbiter_fixed/fpv] Add generated FPV testbench
======Full Message======
[prim_arbiter_fixed/fpv] Add generated FPV testbench

Signed-off-by: Michael Schaffner <msf@google.com>



======Commit: 3cd41ca9======
======Short Message======
[prim_arbiter_fixed] This adds a fixed priority arbiter
======Full Message======
[prim_arbiter_fixed] This adds a fixed priority arbiter

Fixed priority arbiter, based on a binary tree. This can also be used to
detect the index of the first 1 in a vector.

Signed-off-by: Michael Schaffner <msf@google.com>



======Commit: 663e8587======
======Short Message======
[vendor/rtl] add prim_clock_inv to pulp_riscv_debug.core
======Full Message======
[vendor/rtl] add prim_clock_inv to pulp_riscv_debug.core

Add a prim_clock_inv core to the pulp_riscv_debug.core depend lib

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: e3749bd3======
======Short Message======
[i2c, dv] Add i2c_stretch_timeout and i2c_fifo_full tests (v2)
======Full Message======
[i2c, dv] Add i2c_stretch_timeout and i2c_fifo_full tests (v2)

1) i2c_stretch_timeout: stretch_timeout interrupt is aggressively trigerred and verified.
 - Add i2c_stretch_timeout_vseq
 - Update i2c_testplan.md
 - Fix invalid format programmed to fmt_fifo (i2c_rx_tx_vseq.sv)
 - Refactor code and clean nits

2) i2c_fifo_full: verify full status of both rx_fifo and fmt_fifo
 - Add i2c_fifo_full_vseq
 - Update i2c_testplan.md

Signed-off-by: Tung Hoang <hoang.tung@wdc.com>



======Commit: c81e63db======
======Short Message======
[aes/rtl] Fix status tracking for initial key and IV registers
======Full Message======
[aes/rtl] Fix status tracking for initial key and IV registers

Whenever the key is used, this must be signaled. When starting decryption,
the key is declared as not new any more to re-trigger decryption key
generation upon future key updates. When performing encryption, the key
is now declared as armed: It is still new and will trigger decryption key
generation, but any future write to a key register will reset the status
tracking (declares the key as dirty) to prevent partial key updates.

Similarly, when the IV has been fully updated internally, any write by
software must reset the status tracking to prevent partial updates by
software.

This resolves lowRISC/OpenTitan#2913.

Signed-off-by: Pirmin Vogel <vogelpi@lowrisc.org>



======Commit: bb08a765======
======Short Message======
[usbdpi] Keep output of monitor_usb() in usb0.log file
======Full Message======
[usbdpi] Keep output of monitor_usb() in usb0.log file

Previsouly, the output of monitor_usb() went to a FIFO pipe and
consequently was lost after closing the USB DPI module. This commit
makes sure the output is kept just like other logs, as this is
useful for debugging (e.g. in CI).

Signed-off-by: Pirmin Vogel <vogelpi@lowrisc.org>



======Commit: dc40d265======
======Short Message======
[topgen] Fix Merge IP shallow copy issue
======Full Message======
[topgen] Fix Merge IP shallow copy issue

Problem:
    If multiple instances for a module exist in a top, inter_signal_list
    is added N times into only last modules.

While merging the ip object read from .hjson file into the top['module']
entry, it just shallow copies the data structure into module which
creates multiple instances of a ip to access same data structure.

Inter-signal list manipulates the data structure while processing, which
happen to move the data structure to last instance.

It now use deepcopy to copy over any list object into top['module']
entries.

Signed-off-by: Eunchan Kim <eunchan@opentitan.org>



======Commit: 2cc5ac98======
======Short Message======
site/landing: Don't minify when serving locally
======Full Message======
site/landing: Don't minify when serving locally

There's a bug in hugo that prevents the minifier from working with our
SVGs, it ends up corrupting them. Disable it when serving locally, as
it's already disabled when deploying.

Signed-off-by: Garret Kelly <gdk@google.com>



======Commit: 642e338c======
======Short Message======
[dif] Add a comment explaining how to drop an error on the ground
======Full Message======
[dif] Add a comment explaining how to drop an error on the ground

See https://gcc.gnu.org/bugzilla/show_bug.cgi?id=25509, which
necessitates doing this in a non-standard, but still portable, manner.

Signed-off-by: Miguel Young de la Sota <mcyoung@google.com>



======Commit: 7b8efc6e======
======Short Message======
[sw/test] Add a test for the CRT.
======Full Message======
[sw/test] Add a test for the CRT.

This test can, for now, catch the regression fixed by the previous
commit. However, this test is not a fail-safe, since the linker can
arrange symbols in a way that causes the test to spuriously pass.

Signed-off-by: Miguel Young de la Sota <mcyoung@google.com>



======Commit: e82507ae======
======Short Message======
[sw/crt] Fix CRT code clobbering the first word of .bss
======Full Message======
[sw/crt] Fix CRT code clobbering the first word of .bss

When this assembly was written, an incorrect assumption was made that
the _*_end pointers pointed to the final word in a section, when in
reality, they point one past. Due to how the linker laid out .data and
.bss, .data initialization would clobber the first word of .bss.

Signed-off-by: Miguel Young de la Sota <mcyoung@google.com>



======Commit: da48ed2c======
======Short Message======
[ci] Fail "only doc changes" check in case of error
======Full Message======
[ci] Fail "only doc changes" check in case of error

When running a PR against a branch (and not against master), we see the
following error from the doc check in CI. This then goes on to
incorrectly set only_doc_changes to 1, skipping all other CI checks.

```
Checking for doc-only changes in this pull request
fatal: ambiguous argument '': unknown revision or path not in the working tree.
Use '--' to separate paths from revisions, like this:
'git <command> [<revision>...] -- [<file>...]'

Finishing: Check if the commit only contains documentation changes
```

This commit itself doesn't solve the problem, but ensures that such
failures don't silently go unnoticed.

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: 99862396======
======Short Message======
[ci] Print environment variables for debugging
======Full Message======
[ci] Print environment variables for debugging

Show all environment variables in the current runner to make it easier
to debug environment problems.

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: be4bcb79======
======Short Message======
[aes] Add shadow CTRL register, interface with alert handler
======Full Message======
[aes] Add shadow CTRL register, interface with alert handler

This commit adds a shadow CTRL register according to @tjaychen's Shadow
Register RFC:
- If the content of the staged register and the value written to the
  actual register do not match, this causes an update error and triggers
  an alert. The register is not updated.
- If the contents of actual and shadow registers differ, this causes a
  storage error and triggers an alert.
- Invalid mode field values are resolved to the new reset value
  AES_NONE = 4'b1000.
- The cipher core is not allowed to start or finish unless the mode field
  is set to a valid value.

Signed-off-by: Pirmin Vogel <vogelpi@lowrisc.org>



======Commit: dc51df5f======
======Short Message======
[dv/common] initial support for shadow register
======Full Message======
[dv/common] initial support for shadow register

1. Add a tag for shadow register in dv_base_reg
2. Add a knob to control if user wants to
  a). write shadow register twice with the same values
  b). only write shadow register once (later use for error case)

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: 57d24c2b======
======Short Message======
[rtl/prince] Small fixes for PRINCE cipher logic
======Full Message======
[rtl/prince] Small fixes for PRINCE cipher logic

Signed-off-by: Udi Jonnalagadda <udij@google.com>



======Commit: 06922d2b======
======Short Message======
[padring/rtl] packed array index fix
======Full Message======
[padring/rtl] packed array index fix

1. Fix a small typo on Mio from Dio
2. Fix packed array index. In current line: we do
parameter logic [1:0][NMioPads-1:0] MioPadVariant
In line 109, when we actually index MioPadVariant[k], we are indexing
the first one `[1:0]` rather than `[NMioPads-1:0]. So I changed the
order of the parameter declaration

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: 75105e06======
======Short Message======
[syn] Fix an error in the DC synthesis setup
======Full Message======
[syn] Fix an error in the DC synthesis setup

Signed-off-by: Michael Schaffner <msf@google.com>



======Commit: 887f5c10======
======Short Message======
[top] Change pad variant array to packed logic
======Full Message======
[top] Change pad variant array to packed logic

The default assignment to the unpacked array caused issues in DC, and
also caused the assignment order to be the reverse of the port
assignment order when using vector concatenation, which is inconvenient.

Hence, this is changed to a packed array of logics.

Signed-off-by: Michael Schaffner <msf@google.com>



======Commit: 68bc07a8======
======Short Message======
[otbn] Fix name of wide data registers
======Full Message======
[otbn] Fix name of wide data registers

Wide data registers are called WDRs, not WREG.

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: 77867514======
======Short Message======
[dv doc] Fix rendered testplan table
======Full Message======
[dv doc] Fix rendered testplan table

- Fixes #2876

Signed-off-by: Srikrishna Iyer <sriyer@google.com>



======Commit: a2d4d133======
======Short Message======
[ci] Correct path to licence checker in CI error messages
======Full Message======
[ci] Correct path to licence checker in CI error messages

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 78e73484======
======Short Message======
[dvsim/syn] Minor fix in message reporting
======Full Message======
[dvsim/syn] Minor fix in message reporting

Signed-off-by: Michael Schaffner <msf@google.com>



======Commit: 5bcc6919======
======Short Message======
[otbn] Remove debug print from SyntaxHunk.from_string
======Full Message======
[otbn] Remove debug print from SyntaxHunk.from_string

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 204508dd======
======Short Message======
[doc] Fix Link in USB Device Checklist
======Full Message======
[doc] Fix Link in USB Device Checklist

Signed-off-by: Sam Elliott <selliott@lowrisc.org>



======Commit: 24398ab6======
======Short Message======
[docs] Address Doc Building Issues
======Full Message======
[docs] Address Doc Building Issues

Issues when building the SW API Doxygen docs were not being correctly
propagated to fail the build.

This commit contains two changes:
- The first is to ensure we `set -e` in the docs CI bash script, so that
  if the `build_docs.py` errors, the build fails.
- The second is to make the process which extracts information from the
  Doxygen XML dump more robust to failures - returning empty strings
  when information is not available rather than throwing exceptions.

Closes #2813

Signed-off-by: Sam Elliott <selliott@lowrisc.org>



======Commit: 23fc302c======
======Short Message======
[top] Fix lint issues due to ports tied to Z
======Full Message======
[top] Fix lint issues due to ports tied to Z

Signed-off-by: Michael Schaffner <msf@google.com>



======Commit: a59a076e======
======Short Message======
[otbn] Return an error for unmapped register accesses
======Full Message======
[otbn] Return an error for unmapped register accesses

This is in line with all other IPs, and helps to prevent errors in the
nightly DV regression, as reported by Cindy.

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: 204d98d1======
======Short Message======
[vsg] fix _i/_o for several modules
======Full Message======
[vsg] fix _i/_o for several modules

Signed-off-by: Scott Johnson <scottdj@google.com>



======Commit: d24d3a85======
======Short Message======
[otbn] Specify memory accesses must be aligned
======Full Message======
[otbn] Specify memory accesses must be aligned

Fixes #2782

Signed-off-by: Greg Chadwick <gac@lowrisc.org>



======Commit: 4b0d1616======
======Short Message======
[dv] Fix uvmdpi.so path for DSIM
======Full Message======
[dv] Fix uvmdpi.so path for DSIM

Signed-off-by: Srikrishna Iyer <sriyer@google.com>



======Commit: 7af52b90======
======Short Message======
[vsg] fix _i/_o for rv_plic
======Full Message======
[vsg] fix _i/_o for rv_plic

Signed-off-by: Scott Johnson <scottdj@google.com>



======Commit: f6ff9652======
======Short Message======
[util] Add Licence Checker
======Full Message======
[util] Add Licence Checker

This commit adds a script which can checks the licence headers in our
source code against an expected licence header.

The script can check most text file formats that we have checked into
the repository, though it has some limitations. It ensures the entire
licence appears on consecutive lines in the first comment in the file,
and those lines contain nothing else.

The primary limitation of the checker is that each file suffix can only
match one comment style, which is used for checking for the licence
header. In text formats which accept multiple comment styles, there is
now a canonical one that the licence must use. Where available, the
licence should use a line comment style.

The other limitation is for files where the canonical style is block
comments, like `/* */`, each line must be wrapped in the comment prefix
and suffix, rather than the whole licence header being wrapped in a
single comment prefix and suffix. This is an artefact of how the checker
searches for the licence.

The checker is configured using a hjson file, which contains the exact
licence header, and a list of file patterns to exclude from checking the
licence for, which is used to exclude vendored and other externally
sourced files.

Signed-off-by: Sam Elliott <selliott@lowrisc.org>



======Commit: 45fb1c6c======
======Short Message======
[doc] Update Licence Headers to fit agreed style
======Full Message======
[doc] Update Licence Headers to fit agreed style

This commit primarily fixes typos in existing licence headers, or
changes the comment style of existing headers to be compatible with the
licence checker.

This commit does add licence headers to some files, where they were
missing before.

Signed-off-by: Sam Elliott <selliott@lowrisc.org>



======Commit: c38f7890======
======Short Message======
[top] Fix alert connection generation
======Full Message======
[top] Fix alert connection generation

Signed-off-by: Timothy Chen <timothytim@google.com>



======Commit: 4fd33125======
======Short Message======
[vsg] fix _i/_o usage on sram_arbiter
======Full Message======
[vsg] fix _i/_o usage on sram_arbiter

Signed-off-by: Scott Johnson <scottdj@google.com>



======Commit: f6782a37======
======Short Message======
[otbn] Misc fixes in insns.yml
======Full Message======
[otbn] Misc fixes in insns.yml

  - Specify a shift in the "acc" field for the mulqacc encoding. This
    means that we can write

      BN.MULQACC w28.1, w29.0, 64

    rather than

      BN.MULQACC w28.1, w29.0, 1

  - Remove some stray spaces from syntax examples. The point is that

      <foo>[, <bar>]

    and

      <foo> [, <bar>]

    aren't quite the same, because the latter expects some whitespace
    before the comma.

    Note that an assembler can't just strip out all whitespace,
    because we have some fields like

       <foo> <bar>

  - Use "++" for the "increment this" option. It's what Felix is using
    in his example code, and I think it makes more sense.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 7d26d921======
======Short Message======
[otbn] Improve error in insn_yaml.py if no YAML file
======Full Message======
[otbn] Improve error in insn_yaml.py if no YAML file

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: c6bac104======
======Short Message======
[otbn] Always generate an example syntax for an instruction
======Full Message======
[otbn] Always generate an example syntax for an instruction

Before, we stored an insn.syntax of None if the syntax was the normal
bog-standard one (mnemonic op0, op1, op2). But that means you need
special cases later. This patch changes things so that we just
generate the bog-standard syntax as we go.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 02750b59======
======Short Message======
[otbn] Fix formatting for BN.MULQACC
======Full Message======
[otbn] Fix formatting for BN.MULQACC

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: 935a910c======
======Short Message======
[otbn] Add ACC access via WSRs
======Full Message======
[otbn] Add ACC access via WSRs

Fixes #2778

Signed-off-by: Greg Chadwick <gac@lowrisc.org>



======Commit: 2d3397ba======
======Short Message======
[vsg] fix _i/_o usage on prim_fifo
======Full Message======
[vsg] fix _i/_o usage on prim_fifo

Signed-off-by: Scott Johnson <scottdj@google.com>



======Commit: 5a689e8d======
======Short Message======
[sv/alert] add alert support in cip_base
======Full Message======
[sv/alert] add alert support in cip_base

In cip_base_scoreboard, add the following alert_esc_agent support:
1. Add tlm_analysis port to detect alert sent from DUT
2. Use process_alert_fifos task to filter out illegal alert_items (ping
responses and sig_int_err). If real alert happened, or real alert
handshake finished, both condition will call "process_alert_sig"
function.

In cip_base_vseq, add support:
1. add a knob to en_auto_alerts_response in cip_base_vseq - default on
2. add run_alert_response_nonblocking in dut_init
3. If user disabled the en_auto_alerts_response knob, the nonblocking
sequence will wait for current response to finish then exit
4. If user wants to re-enable the en_auto_alerts_response knob, they
have to also trigger dut_init() again

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: 0a720ef0======
======Short Message======
[otbn] Fix operation description for BN.RSHI
======Full Message======
[otbn] Fix operation description for BN.RSHI

* Indicate in Python syntax the concatenation of two registers.
* Use consistent names for decoded values.

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: 5b2fc188======
======Short Message======
[otbn] Allow an insn to have ops without a space after the mnemonic
======Full Message======
[otbn] Allow an insn to have ops without a space after the mnemonic

This is used by mulqacc, which has an optional .z suffix that says to
zero the accumulator.

This patch isn't particularly interesting, just improving the
documentation spacing slightly. But the information is also needed by
an assembler, which needs to know what the mnemonic "bn.mulqacc.z"
means.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 56a2ac54======
======Short Message======
[otbn] Add OTBN encoding information to insns.yml
======Full Message======
[otbn] Add OTBN encoding information to insns.yml

This patch defines a way to write "encoding schemes" in the YAML. This
is slightly inspired by the LLVM approach [1] but massively
simplified. I initially had something even simpler, without allowing
any hierarchy in the encoding schemes, but it was quite ugly to fill
in the instruction encodings and I was worried that it would make it
very difficult to change the encodings if we needed to later.

Instructions now have encodings defined, and we have code in the
Python parser that resolves the (hierarchical) scheme used by an
instruction into a flat one, then matches up the named operands with
the fields in the encoding scheme.

We finally check that the encoding is not ambiguous: that no bit
pattern matches more than one instruction.

Once this is all done, the documentation generator now spits out an
encoding table next to each instruction.

Final encoding work by Stefan.

[1] See e.g. llvm/lib/Target/RISCV/RISCVInstrFormatsC.td in the LLVM
    source tree.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>
Co-authored-by: Stefan Wallentowitz <stefan.wallentowitz@gi-de.com>



======Commit: 0409c2c6======
======Short Message======
[dvsim/lint/syn] Properly set the errors_seen value to return nonzero status
======Full Message======
[dvsim/lint/syn] Properly set the errors_seen value to return nonzero status

Signed-off-by: Michael Schaffner <msf@opentitan.org>



======Commit: 065297df======
======Short Message======
[dvsim] Fix open() call with Pathlib for older Python versions
======Full Message======
[dvsim] Fix open() call with Pathlib for older Python versions

open() is not properly integrated with Pathlib in older python versions,
hence the calls as they are currently present in the code may fail.

Signed-off-by: Michael Schaffner <msf@opentitan.org>



======Commit: 01a1609f======
======Short Message======
[intermodule] Add option for explicit defaults
======Full Message======
[intermodule] Add option for explicit defaults

Signed-off-by: Michael Schaffner <msf@opentitan.org>



======Commit: 65a1afb0======
======Short Message======
[style-lint] Last round of minor fixes to get all targets clean
======Full Message======
[style-lint] Last round of minor fixes to get all targets clean

Signed-off-by: Michael Schaffner <msf@opentitan.org>



======Commit: 81944882======
======Short Message======
[syn] Fix behavior of parsing script in a few error cases
======Full Message======
[syn] Fix behavior of parsing script in a few error cases

Signed-off-by: Michael Schaffner <msf@google.com>



======Commit: d6ad63ca======
======Short Message======
[Synth] Minor constraint updates
======Full Message======
[Synth] Minor constraint updates

- Update clock port name: It would probably be better to update intermodule.py to allow fixed names

Signed-off-by: Timothy Chen <timothytim@google.com>



======Commit: fc733217======
======Short Message======
Update pulp_riscv_dbg to pulp-platform/riscv-dbg@834853c
======Full Message======
Update pulp_riscv_dbg to pulp-platform/riscv-dbg@834853c

Update code from upstream repository https://github.com/pulp-
platform/riscv-dbg to revision
834853c0c68fc48d032a3e256e563f2b0bd28492

* Added missing reset to cmd_valid_q; fixes pulp-platform/riscv-dbg#28
  (Arjan Bink)
* Update CHANGELOG.md with OBI wrapper addition (Arjan Bink)
* Add optional wrapper to make dm_top compatible to the OBI spec
  (Arjan Bink)
* Avoid X's on hartinfo_i in assertion at time 0 (Eugene Feinberg)
* Fix dependency typo (Eugene Feinberg)
* Fix haltsum1-3 calculation (bluew)
* Update CHANGELOG.md (bluew)
* Make two scratch debug rom the default (Florian Zaruba)
* riscv-dbg: Make second scratch register optional (Florian Zaruba)
* Simplify cross compilation step (bluew)
* Add CI badge to README.md (bluew)
* Update CHANGELOG.md (bluew)
* Add tb running dm+ri5cy through OpenOCD compliance tests (bluew)
* Fixed a typo (: vs ::) in dp_mem.sv that crashed compilation
  (Florian Glaser)
* Use correct bit width (pbing)
* Use explicit base address for data regiser access (bluew)
* Fix off-by-one error in data and progbuf end address (bluew)
* Correct typos in dm_csrs.sv (Felix Yan)
* Fix date in changelog (Philipp Wagner)
* Update CHANGELOG.md (bluew)

Signed-off-by: Michael Schaffner <msf@opentitan.org>



======Commit: 1a1b94d0======
======Short Message======
Update lowrisc_ibex to lowRISC/ibex@6b9165f
======Full Message======
Update lowrisc_ibex to lowRISC/ibex@6b9165f

Update code from upstream repository
https://github.com/lowRISC/ibex.git to revision
6b9165fa66b49534226acfcb739f2c252be4853c

* [doc] Update READMEs with best CoreMark results (Greg Chadwick)
* [sw] Enable choice of -march= string for CoreMark (Greg Chadwick)
* Value passed to UVM set_timeout is calculated as 1000000000 basing
  on 1ns/1ps timescale. But if you are using precompiled UVM it may be
  compiled with other timescale depending on compilation option used
  when it was compiled or tools default timescale value (uvm does not
  set timescale int the code). In this case for us precompiled UVM
  timescale is 1ps/1ps - so UVM gets 1000000000 in set timeout but
  interprets it as ps. As a result timeout is 1000 times smaller that
  you expect. That is why we are getting timeouts. It is hard to find
  perfect solution. One of them is to recompile the UVM with
  -timescale 1ns/ps (or whatever you will use for your design). (Dawid
  Zimonczyk)
* update readme for Riviera-PRO (Dawid Zimonczyk)
* correct wrong assignment to enum (Dawid Zimonczyk)
* Lint: Fix some line length warnings (Philipp Wagner)
* ibex_counter: Use always_ff (Philipp Wagner)
* Enforce lint of simple system in CI (Philipp Wagner)
* Specify data type for all parameters in simple_system (Philipp
  Wagner)
* Clarifications to the README of the simple system (Philipp Wagner)
* Only include necessary LFSR primitive (Philipp Wagner)
* Update lowrisc_ip to lowRISC/opentitan@ebf4663b (Philipp Wagner)
* [dv/ibex] Add two new interrupt/debug tests (Udi)
* [doc] Fix spelling of CoreMark (Pirmin Vogel)
* Handle --help properly in simple_system top-level (Rupert Swarbrick)
* Update lowrisc_ip to lowRISC/opentitan@9ac4f9c8 (Rupert Swarbrick)
* Use the Xilinx primitives for the Arty board (Philipp Wagner)
* [doc] Clarify that the supported version of the B extension is a
  draft (Pirmin Vogel)
* Clean up Verilator sections in core files (Philipp Wagner)
* Fix and waive Verilator lint errors in tb_cs_registers (Philipp
  Wagner)
* Remove lowrisc:prim:clock_gating from shared core collections
  (Philipp Wagner)
* Add lint for ibex_simple_system to CI (Philipp Wagner)
* ibex_simple_system: Add lint target (Philipp Wagner)
* Simplify lint targets (Philipp Wagner)
* Remove unrelated files from lint in ibex_core_tracing (Philipp
  Wagner)
* Add dependency on prim_clock_gating (Philipp Wagner)
* Fix Ibex description in core file (Philipp Wagner)
* icache: Depend on prim_assert (Philipp Wagner)
* Fix SRAM initialisation for fpga/artya example (Rupert Swarbrick)
* Drop SRAM_INIT_FILE from ibex_riscv_compliance.core (Rupert
  Swarbrick)
* Get simple_system working for VCS (Rupert Swarbrick)
* Pass MemInitFile parameter from our ram_*p wrappers (Rupert
  Swarbrick)
* Update lowrisc_ip to lowRISC/opentitan@976d9b9c (Philipp Wagner)
* Icache: It's not a draft any more (Philipp Wagner)
* Remove outdated documentation (Philipp Wagner)
* CI: Show exact command to run Verilator lint (Philipp Wagner)
* CI: Enable Verible lint for all configs (Philipp Wagner)
* CI: use the new binary name of Verible (Philipp Wagner)
* Add a waiver file for Verible lint (Philipp Wagner)
* Fix Verible lint issues (Philipp Wagner)
* Add some formal cover properties for ICache (Rupert Swarbrick)
* Add an ICacheECC parameter to ICache formal flow (Rupert Swarbrick)
* Formal protocol checking for icache <-> core interface (Rupert
  Swarbrick)
* A simple formal flow for the ICache based on SymbiYosys (Rupert
  Swarbrick)
* Move riscv-formal code into formal/riscv-formal (Rupert Swarbrick)
* [doc] Add bitmanip spec to introduction page (Philipp Wagner)
* [CI] Update Verible version (Philipp Wagner)
* Update lowrisc_ip to lowRISC/opentitan@5cae0cf1 (Rupert Swarbrick)
* [bitmanip] Optimizations and Parametrization (ganoam)
* [rtl] Fix icache xprop issue (Tom Roberts)
* Prevent writing CSR_SECURESEED to get the seed of dummy instruction
  (Xiang Wang)

Signed-off-by: Michael Schaffner <msf@opentitan.org>



======Commit: ab9d1caf======
======Short Message======
[reggen] Integrate shadow register primitive
======Full Message======
[reggen] Integrate shadow register primitive

This commit integrates the shadow register primitive into the regtool. By
specifying the key `shadowed` with value `true` in the hjson file and
providing a `_shadowed` suffix for the register name, the regtool can be
made to instantiate the shadow register primitive, and signal error
conditions to the hardware.

Signed-off-by: Pirmin Vogel <vogelpi@lowrisc.org>



======Commit: 7b2a5c36======
======Short Message======
[prim] Add shadow register primitive
======Full Message======
[prim] Add shadow register primitive

This commit adds a shadow register primitive according to @tjaychen's
Shadow Register RFC:
- If the content of the staged register and the value written to the
  committed register do not match, this causes an update error.
- If the contents of committed and shadow registers differ, this causes a
  storage error.

This is related to lowRISC/OpenTitan#150.

Signed-off-by: Pirmin Vogel <vogelpi@lowrisc.org>



======Commit: 08db49f4======
======Short Message======
[sw, dif_uart] Fulfil S1 Checklist DIF_TEST_SANITY requirement
======Full Message======
[sw, dif_uart] Fulfil S1 Checklist DIF_TEST_SANITY requirement

DIF_TEST_SANITY (requirement):
Sanity tests exist for the DIF in sw/device/tests/dif named
dif_<ip>_sanitytest.c.

This should perform a basic test of the main datapath of the hardware
module by the embedded core, via the DIF, and should be able to be run
on all OpenTitan platforms (including FPGA, simulation, and DV). This
test will be shared with DV.

Sanity tests are for diagnosing major issues in both software and
hardware, and with this in mind, they should execute
quickly. Initially we expect this kind of test to be written by
hardware designers for debugging issues during module
development. This happens long before a DIF is implemented, so there
are no requirements on how these should work, though we suggest they
are placed in sw/device/tests/<ip>/<ip>.c as this has been the
convention until now. Later, when a DIF is written, the DIF author is
responsible for updating this test to use the DIF, and for moving this
test into the aforementioned location.

CHANGE:
This change creates `sw/device/tests/dif/dif_uart_sanitytest`, updates
DV config and CI to use this test.

Signed-off-by: Silvestrs Timofejevs <silvestrst@lowrisc.org>



======Commit: 102e7e54======
======Short Message======
[sw, dif_uart] Add API useful for debugging
======Full Message======
[sw, dif_uart] Add API useful for debugging

There could be many use-cases for the loopback functionality, one of
which is dif_uart_sanitytest.

`dif_uart_fifo_reset` API is added for flexibility, which is
particularily useful together with a loopback functionality.

Signed-off-by: Silvestrs Timofejevs <silvestrst@lowrisc.org>



======Commit: 92967648======
======Short Message======
[flash] Add scrambling primitive and hook-up to program / read pipelines
======Full Message======
[flash] Add scrambling primitive and hook-up to program / read pipelines

Signed-off-by: Timothy Chen <timothytim@google.com>

[flash] Pick correct buffer to update after de-scramble

Signed-off-by: Timothy Chen <timothytim@google.com>

[flash] update to multi-cycle prince and various fixes

Signed-off-by: Timothy Chen <timothytim@google.com>



======Commit: ce9451ab======
======Short Message======
[intermodule] Fix assert compare logic
======Full Message======
[intermodule] Fix assert compare logic

`sig_i` is integer. the comparison should be `==` not `is`

Signed-off-by: Eunchan Kim <eunchan@opentitan.org>



======Commit: 6ba132e1======
======Short Message======
[alert_handler/rtl] priority between ping_ok and sig_int_err
======Full Message======
[alert_handler/rtl] priority between ping_ok and sig_int_err

In alert_handler spec it is mention that "note that the escalation
signal always takes precedence, and the ping_en_i will just be
ackownledged when `ping_ok_o` in case esc_en_i is already asserted. An
ongoing ping sequence will be aborted immediately."
Through DV regression we found a corner case where if esc_en_i is set
during ping, and the same clk cycle detected a signal_int_err (ping_p
and n has the same value), then `ping_ok_o` won't be set.
This PR fix this corner case by moving the set ping_ok_o variable after
checking sig_int_err.
This PR also fix an assertion related to this change, and remove the
previous DV TODO comments.

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: d200bcb9======
======Short Message======
[dv/alert_agent] Fix ok_to_end condition
======Full Message======
[dv/alert_agent] Fix ok_to_end condition

Fix a typo in ok_to_end condition in esc_monitor.

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: 09188442======
======Short Message======
[sw/dif] fix a typo in code comment
======Full Message======
[sw/dif] fix a typo in code comment

Fix a small typo in dif_spi_device.h code comment.

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: d54a4501======
======Short Message======
[otbn] Correct wmask assertions in OTBN top-level
======Full Message======
[otbn] Correct wmask assertions in OTBN top-level

This fixes the assertion about imem_wmask_bus so that it only triggers
on a write (a partial wmask on a read is allowed, but ignored).

This patch also removes the imem_write_o port from otbn_core: the core
cannot write to IMEM. We keep the imem_write_core signal in otbn.sv,
because it makes things look a bit more uniform, but it's forced to
zero.

The patch completely removes imem_wmask_core from otbn.sv: it was just
assigned to and then ignored in otbn.sv, so we may as well get rid of
it.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 4c7b97be======
======Short Message======
[top] update fpga / verilator wrap files
======Full Message======
[top] update fpga / verilator wrap files

Signed-off-by: Timothy Chen <timothytim@google.com>

[top] fix verilator clock connections

Signed-off-by: Timothy Chen <timothytim@google.com>

[top] update top level wrapper for cw305

Signed-off-by: Timothy Chen <timothytim@google.com>



======Commit: b63f3b87======
======Short Message======
[clkmgr] add support for divided clocks
======Full Message======
[clkmgr] add support for divided clocks

- clocks are not divided yet, but this adds support to split the clock path
- change clkmgr source clock inputs to inter-module, this allows separation
  between the derived clocks and the functional clocks
- update merging / validation as required
- manually update rstmgr to match - this module is not yet templated

Signed-off-by: Timothy Chen <timothytim@google.com>

[util] fix pylint errors

Signed-off-by: Timothy Chen <timothytim@google.com>

[rstmgr] update rstmgr for extra divided clock

Signed-off-by: Timothy Chen <timothytim@google.com>



======Commit: 9d5b5b68======
======Short Message======
[rstmgr / top] Add reset bypass during test
======Full Message======
[rstmgr / top] Add reset bypass during test

Signed-off-by: Timothy Chen <timothytim@google.com>

[rstmgr] fixes to reset bypass

Signed-off-by: Timothy Chen <timothytim@google.com>

[rstmgr] remove duplicate declaration

Signed-off-by: Timothy Chen <timothytim@google.com>

[top] update scan reset name

Signed-off-by: Timothy Chen <timothytim@google.com>



======Commit: 548b58c5======
======Short Message======
[prim] Add a few prim cells needed for clock / resets
======Full Message======
[prim] Add a few prim cells needed for clock / resets

- Reference prim_flops directly from prim_flop_2sync
  - This might be pointless as long term it would probably be better
    to make prim_flop_2sync an abstract cell

Signed-off-by: Timothy Chen <timothytim@google.com>

[prim] update prim_flop

Signed-off-by: Timothy Chen <timothytim@google.com>

[prim] Change prim_flop_2sync to a primgen cell

Signed-off-by: Timothy Chen <timothytim@google.com>

[prim] fix comment

Signed-off-by: Timothy Chen <timothytim@google.com>



======Commit: 7f730358======
======Short Message======
[dv] added default timeout message to DV_SPINWAIT
======Full Message======
[dv] added default timeout message to DV_SPINWAIT

Signed-off-by: Srikrishna Iyer <sriyer@google.com>



======Commit: 6485d78d======
======Short Message======
[dv] Fix compile warning  in cip_base_scoreboard
======Full Message======
[dv] Fix compile warning  in cip_base_scoreboard

- This fixes a warning thrown in `cip_base_scoreboard` related to the
instantiation of a `mem_model` instance.

Signed-off-by: Srikrishna Iyer <sriyer@google.com>



======Commit: 8963e18f======
======Short Message======
[flash] Fix default region sizing
======Full Message======
[flash] Fix default region sizing

- Addresses #2755
- Ensures the last region when there are power of 2 regions can be covered
- This fix is techincally only needed only when number of pages are powers of 2

Signed-off-by: Timothy Chen <timothytim@google.com>



======Commit: f5c19e09======
======Short Message======
[flash] Fix flash_mp region matching
======Full Message======
[flash] Fix flash_mp region matching

Addresses #2754

Signed-off-by: Timothy Chen <timothytim@google.com>



======Commit: 63da48ea======
======Short Message======
Extract OTBN ISA documentation into a YAML file
======Full Message======
Extract OTBN ISA documentation into a YAML file

The idea is that this file is more "machine readable". We'll put other
information about the instructions into it (which might not appear in
the documentation, but will affect things like the random instruction
generator).

As well as taking the current text from _index.md, this patch contains
code in insn_yaml.py to parse the YAML file, doing various validity
checks on the result. For example, it makes sure that any syntax
example for an instruction has the same operands as the list of
operands. These checks caught several errors in the
hand-written (hand-copy/pasted!) text.

The parsed file can then be transformed with yaml_to_doc.py to
generate Markdown content suitable for our documentation. This is now
run in build_docs.py and wired in to Hugo with a simple shortcode.

I've manually compared the generated documentation with what was there
before and it's basically the same. Intentional differences:

  - Enumeration operands now list their values with a nested table.

  - BN.MULQACC's qwsel operands are now listed as immediates, rather
    than enumerations. They were enumerations of the form ".0", ".1",
    ".2", ".3". Now the syntax contains the dot, so they can just be
    imm2.

  - The increment options for BN.LID and BN.SID give their required
    syntax.

There are probably further improvements we could make to formatting,
but I thought it made sense to get this in sooner rather than later as
a starting point.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 7a930529======
======Short Message======
[sw, tock] Improve generated DIF bindings
======Full Message======
[sw, tock] Improve generated DIF bindings

* Generate defaults for structures (useful for dummy initialisation).
* Generate enum variants without type prefix (type and enum names are not
  mangled).
* Use core instead of std (no on-device code can use std).
* Use usize instead of size_t (less conversion in drivers).

Signed-off-by: Silvestrs Timofejevs <silvestrst@lowrisc.org>



======Commit: 4a9e9ed4======
======Short Message======
[pinmux] Fix inter-module signal struct
======Full Message======
[pinmux] Fix inter-module signal struct

pinmux struct type of lifecycle strap was wrong. It is revised to be
`lc_strap_{req/rsp}_t`. The default values of those structs are revised
accordingly.

Signed-off-by: Eunchan Kim <eunchan@opentitan.org>



======Commit: 457b94a9======
======Short Message======
[meson] Make warn_unused_result an error
======Full Message======
[meson] Make warn_unused_result an error

Signed-off-by: Miguel Young de la Sota <mcyoung@google.com>



======Commit: 460a5af4======
======Short Message======
[sw] Fix up all warn_unused_result warnings.
======Full Message======
[sw] Fix up all warn_unused_result warnings.

Signed-off-by: Miguel Young de la Sota <mcyoung@google.com>



======Commit: 924b1549======
======Short Message======
[tests] Fix rv_timer_test's IRQ handler having the wrong ABI
======Full Message======
[tests] Fix rv_timer_test's IRQ handler having the wrong ABI

While rv_timer_test did correctly override the weak symbol for the
interrupt handler, it failed to include handler.h, which set up the
correct attributes for the ABI. As such, the handler was *not* doing an
mret, but instead doing a ret directly back into user code, clobbering
several registers in the process.

Signed-off-by: Miguel Young de la Sota <mcyoung@google.com>



======Commit: 6567b7cf======
======Short Message======
[primgen] Fix some flake8-reported style issues
======Full Message======
[primgen] Fix some flake8-reported style issues

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: 8b0ba7c1======
======Short Message======
[prim] Improve extraction of parameter port list
======Full Message======
[prim] Improve extraction of parameter port list

The `_parse_parameter_port_list()` function in primgen extracts the
names of parameters from a parameter port list. The extraction failed
for parameters without an initial value, or with a `-` in the data type
definition (as in `Width-1`). Fix both cases by updating the regex.

This commit also adds a small inline test, to be run with `pytest`, to
make it easier to improve this code in the future.

Fixes #2679

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: 98703733======
======Short Message======
[doc] Fix 128x128 BN.MULQACC example in OTBN docs
======Full Message======
[doc] Fix 128x128 BN.MULQACC example in OTBN docs

Signed-off-by: Greg Chadwick <gac@lowrisc.org>



======Commit: de5f9f3b======
======Short Message======
[OTBN] fix inconsitency in spec
======Full Message======
[OTBN] fix inconsitency in spec

This is related to lowRISC#2570

The CMP/CMPB instructions are supposed to share the same logic
as the SUB/SUBB instructions, with the only difference that
no result is written in the case of CMP/CMPB.
This adds the possible immediate shift of rs2 to the CMP and CMPB
instructions.

Signed-off-by: Felix Miller <felix.miller@gi-de.com>



======Commit: f39b8270======
======Short Message======
[otbn] Fix dmem depth parameter calculation
======Full Message======
[otbn] Fix dmem depth parameter calculation

The missing parentheses lead to a 2 deep dmem instead of a 128 deep
dmem.

Signed-off-by: Michael Schaffner <msf@google.com>



======Commit: ebf4663b======
======Short Message======
[prim_lfsr] Fix description in core file for FPV
======Full Message======
[prim_lfsr] Fix description in core file for FPV

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: 9ac4f9c8======
======Short Message======
Allow verilated top-levels to do work after a simulation completes
======Full Message======
Allow verilated top-levels to do work after a simulation completes

Before this patch, it isn't possible for a main() function that calls
VerilatorSimCtrl::Exec() to tell whether the simulation actually
ran: a return value of zero might mean a successful run or it might
mean the user passed --help.

This patch moves the registration of a signal handler into
RunSimulation() (there's no point in registering the signal handler
before we start running anything) and makes ParseCommandArgs() public.
This means that Exec() is now a simple wrapper around a collection of
public methods which can be called separately.

For example, you could have something like this:

    ...
    bool exit_app = false;
    int ret_code = sim_ctrl.ParseCommandArgs(argc, argv, exit_app);
    if (exit_app) {
      return ret_code;
    }

    sim_ctrl.RunSimulation();

    if (!sim_ctrl.WasSimulationSuccessful()) {
      return 1;
    }

    do_some_postprocessing();
    return 0;

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: a4a9e401======
======Short Message======
[top_earlgrey] Enable OTBN in toplevel
======Full Message======
[top_earlgrey] Enable OTBN in toplevel

Enable OTBN in the top_earlgrey toplevel.

Fixes #2580

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: 016c8e45======
======Short Message======
[aes/rtl] Fix lint warnings and errors
======Full Message======
[aes/rtl] Fix lint warnings and errors

Signed-off-by: Pirmin Vogel <vogelpi@lowrisc.org>



======Commit: 976d9b9c======
======Short Message======
[lint] Add blanket waiver for DECLFILENAME with blackboxes
======Full Message======
[lint] Add blanket waiver for DECLFILENAME with blackboxes

When running Verilator lint with blackboxed modules, we get warnings
like the ones below:

```
%Warning-DECLFILENAME: ../../../vendor/lowrisc_ip/prim_xilinx/rtl/prim_xilinx_clock_gating.sv:12:10: Filename 'prim_xilinx_clock_gating' does not match NOTFOUNDMODULE name: 'BUFGCE'
   12 |   BUFGCE u_bufgce (
      |          ^~~~~~~~
                       ... Use "/* verilator lint_off DECLFILENAME */" and lint_on around source to disable this message.
%Warning-DECLFILENAME: ../../../vendor/lowrisc_ip/prim_xilinx/rtl/prim_xilinx_clock_mux2.sv:17:11: Filename 'prim_xilinx_clock_mux2' does not match NOTFOUNDMODULE name: 'BUFGMUX'
   17 |   BUFGMUX bufgmux_i (
      |           ^~~~~~~~~
%Warning-DECLFILENAME: ../../../vendor/lowrisc_ip/prim_xilinx/rtl/prim_xilinx_pad_wrapper.sv:36:9: Filename 'prim_xilinx_pad_wrapper' does not match NOTFOUNDMODULE name: 'IOBUF'
   36 |   IOBUF i_iobuf (
      |         ^~~~~~~
```

This is due to https://github.com/verilator/verilator/issues/2430. Until
the issue is fixed, disable this lint error.

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: cd19f995======
======Short Message======
[reggen] Fix TypeError
======Full Message======
[reggen] Fix TypeError

Running reggen (e.g. through `make -C hw`) on the `v1-bronze` branch
fails with the following error message:

```
Traceback (most recent call last):
  File "/home/philipp/src/opentitan/util/topgen.py", line 964, in <module>
    main()
  File "/home/philipp/src/opentitan/util/topgen.py", line 860, in main
    generate_top_ral(completecfg, ip_objs, out_path)
  File "/home/philipp/src/opentitan/util/topgen.py", line 655, in generate_top_ral
    top_block.blocks.sort(key=lambda block: block.base_addr)
TypeError: '<' not supported between instances of 'int' and 'str'
```

Fix that by converting `base_addr` to str/int as necessary in all places
where it is used.

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: aae92818======
======Short Message======
[dvsim] Fix for #2686 - missing else
======Full Message======
[dvsim] Fix for #2686 - missing else

Testplan milestones (V1, V2, V3) are also regression targets (one can
run all V2 tests for instance by passing the switch `-i V2`). It could
be possible that the tests added to the testplan to one of these
milestones could actually be missing (yet to be developed) in the
simulation config hjson.

When that is true, invoking dvsim results in the error messages reported
in #2686. The fix for this is a missing else clause.

Signed-off-by: Srikrishna Iyer <sriyer@google.com>



======Commit: 5cae0cf1======
======Short Message======
Allow different assertion "backends" in prim_assert.sv
======Full Message======
Allow different assertion "backends" in prim_assert.sv

Different tools support different assertions. This splits out the
definitions of the base macros from prim_assert.sv into separate
headers (prim_assert_standard_macros.svh, prim_assert_dummy_macros.svh
and prim_assert_yosys_macros.svh).

The last of the three is new: it's used for Yosys when not
synthesizing (so used when Yosys is being run as a formal tool).

At the moment, Yosys's (System)Verilog frontend doesn't support
concurrent assertions. It does, however, support the immediate form,
so prim_assert_yosys_macros.svh expresses them as such.

For example, ASSERT_I is normally

   name: assert (expr) else stmt

but here it becomes:

   begin : name
     assert (expr);
   end

(The name isn't reported by the error reporting machinery in the Yosys
flow, but at least it makes code a bit easier to figure out if you've
preprocessed your source with sv2v and the line numbers are all
bogus).

Similarly, ASSERT is normally something like:

   name: assert property (@(posedge clk_i) disable iff rst_ni expr)

Here it becomes:

   always_ff @(posedge clk_i) begin : name
     if (rst_ni) name: assert (prop);
   end

These transformations should not change the truth of an assertion, at
least with the Yosys tool (which isn't event based and samples signals
for assertions after everything has settled).

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 5849cd15======
======Short Message======
[sw] Make the Clang-based toolchain the default one
======Full Message======
[sw] Make the Clang-based toolchain the default one

In CI we continue building with both Clang and GCC, but now the default
toolchain in `meson_init.sh` is the Clang-based one.

Signed-off-by: Luís Marques <luismarques@lowrisc.org>



======Commit: 10013f41======
======Short Message======
[flash_ctrl dv] Fix V1 tests
======Full Message======
[flash_ctrl dv] Fix V1 tests

- Fixed flash ctrl RAL HDL path for backdoor access
- Added flash ctrl to sanity and nightly regressions
- Scoreboard fixes to get common tests passing

Signed-off-by: Srikrishna Iyer <sriyer@google.com>



======Commit: ac92ff84======
======Short Message======
[prim/present] fix PRESENT decryption bugs
======Full Message======
[prim/present] fix PRESENT decryption bugs

Signed-off-by: Udi Jonnalagadda <udij@google.com>



======Commit: 56af7285======
======Short Message======
[prim/present] fix some PRESENT encryption bugs
======Full Message======
[prim/present] fix some PRESENT encryption bugs

Signed-off-by: Udi Jonnalagadda <udij@google.com>



======Commit: 371c79f1======
======Short Message======
[sw] Cleanup Meson Configuration
======Full Message======
[sw] Cleanup Meson Configuration

This change deduplicates most of our compiler argument processing that
is done in meson.build, so that our compiler instances agree more. It
also makes some native: true vs native: false options explicit.

This change also moves the include purging into a "postconf" script, as
supported by meson for this exact purpose. This means if ninja needs to
re-run meson, includes will (correctly) remain purged.

This change also removes some default build options that were causing
warnings when reconfiguring meson. Unfortunately we cannot remove them
all as the following warning is misleading, and those build options do
cause effects: `WARNING: Unknown options: "build.c_std, build.cpp_std"`.

Signed-off-by: Sam Elliott <selliott@lowrisc.org>



======Commit: 2b57492d======
======Short Message======
[style-lint] Fix some common style lint warnings
======Full Message======
[style-lint] Fix some common style lint warnings

Signed-off-by: Michael Schaffner <msf@google.com>



======Commit: 16102e52======
======Short Message======
[dvsim/lint] Minor fixes for printout issues and result parser status
======Full Message======
[dvsim/lint] Minor fixes for printout issues and result parser status

This adds a missing \n before the triple back-ticks around the tool
messages. Also, the position of the messages is corrected, and the
return value of the lint parser scripts is fixed.

Signed-off-by: Michael Schaffner <msf@google.com>



======Commit: 6ecc55aa======
======Short Message======
[dv/script] nightly regression run script patch
======Full Message======
[dv/script] nightly regression run script patch

I accidentally merged the PR2257 without waiting for the CI to pass.
Sorry about that and this PR fix the order and check if there is any CI
failures.

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: 8f388fe5======
======Short Message======
[prim_util] Do not use $clog2() in Xcelium
======Full Message======
[prim_util] Do not use $clog2() in Xcelium

Xcelium seems to have trouble with the use of $clog2() in
`prim_util_pkg::vbits()`. Fortunately, we can provide a drop-in
replacement which keeps the interface identical.

This approach allows us to keep the interface/function signature
identical, with the option to remove the workaround once we understand
the Xcelium issue better.

If we switched to a macro we had to change all call sites, and make
`prim_util` an include file again.

Fixes #2597

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: 6dd66a06======
======Short Message======
Define XCELIUM when running dvsim with Xcelium
======Full Message======
Define XCELIUM when running dvsim with Xcelium

For some tool-specific workarounds, we need to know which tool we're
using. Some tools define a tool-specific define by default, Xcelium
doesn't seem to be one of them. Define `XCELIUM` ourselves, then.

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: eeaa69d0======
======Short Message======
[prim_util] Make prim_util a package
======Full Message======
[prim_util] Make prim_util a package

prim_util was a include file before, and the `vbits()` function in it
was effectively a global function. This patch modifies the code to put
the utility function into its own package, `prim_util`.

The old implementation was problematic for a number of reasons:

- Xcelium doesn't like `$clog2()` inside a "constant function". Even
  though we couldn't find evidence that this isn't allowed by the LRM,
  we have to live with the implemented reality. A potential workaround
  would be implementing `clog2()` as it was done in pre-SystemVerilog
  days.
- Functions in included files are visible for all code in the same
  compilation unit, with no way to undefine them. This spill-over can
  lead to surprising bugs and is best avoided.

Fixes #2579

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: b35a340e======
======Short Message======
[flash] Design updates and clean-up
======Full Message======
[flash] Design updates and clean-up

- Clean-up and fix the usage of sizing parameters.  Previous
  design represented flash sizes in bus words, leading to an
  incorrect alignment of page boundaries.  This PR changes
  the parameters to flash word size base and explicitly declares
  the bus widths separately.

- Also add an arbiter count between host and controller arbitration.
  Since host reads are critical to performance, the past design
  always favored hosts, with the understanding under the right access
  patterns this could lead to deadlock.  Recent system changes indeed
  led to such an arbitration starvation, so a counter is added to
  ensure controller will not be starved.

- Round robin is still not preferred because controller does not need
  access priority as long as it can "eventually" finish.

Signed-off-by: Timothy Chen <timothytim@google.com>



======Commit: 244ccebd======
======Short Message======
[style/dif] Mandate warn_unused_result on DIFs
======Full Message======
[style/dif] Mandate warn_unused_result on DIFs

This commit mandates the warn_unused_result on all DIFs (and their
related helper functions) that return some kind of error value that
should not be ignored.

Signed-off-by: Miguel Young de la Sota <mcyoung@google.com>



======Commit: 62a7854c======
======Short Message======
[meson] Temporarially make warn_unused_result not an error
======Full Message======
[meson] Temporarially make warn_unused_result not an error

This commit will be reverted once we have appropriate adoption of the
new attribute.

Signed-off-by: Miguel Young de la Sota <mcyoung@google.com>



======Commit: 8cd71603======
======Short Message======
[style] Allow the warn_unused_result attribute.
======Full Message======
[style] Allow the warn_unused_result attribute.

This attribute is implemented by both GCC and Clang, and is analogous to
the C++17's [[must_use_result]], albeit useable from C.

Allowing use of this attribute will allow us to help DIF callers avoid
forgetting to check errors. Notably, bindgen supports converting them
into `#[must_use]` annotations.

Signed-off-by: Miguel Young de la Sota <mcyoung@google.com>



======Commit: 589354c8======
======Short Message======
[ibex] Do not vendor in DV code
======Full Message======
[ibex] Do not vendor in DV code

Configure the vendoring tooling to not include the `dv` folder inside
the Ibex repository.

This folder contains code and core files which are shadowing ones in
OpenTitan, breaking the simulation. We can think about vendoring the DV
code from Ibex back into OT as soon as we're sure that we will not
shadow more code. This work is tracked in lowrisc/ibex#985.

Fixes #2586

See #2513 and lowrisc/ibex#985 for more background.

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: 59d0872f======
======Short Message======
Update lowrisc_ibex to lowRISC/ibex@ae547c8
======Full Message======
Update lowrisc_ibex to lowRISC/ibex@ae547c8

Update code from upstream repository
https://github.com/lowRISC/ibex.git to revision
ae547c8d3010d86ef7afdee900d461616c3cb414

* [top_pkg] Fix style lint warnings (Michael Schaffner)
* [ibex/dv] Add clocking blocks to Ibex interfaces (Udi)
* Add a stress_all_with_reset ICache test (Rupert Swarbrick)
* Invalidate in an ICache sequence after a change to mem_err_shift
  (Rupert Swarbrick)
* Fix ICache caching window test with combination sequences (Rupert
  Swarbrick)
* Add ibex_icache_stress_all test (Rupert Swarbrick)
* Tidy up properly after overriding class in ICache back_line_seq
  (Rupert Swarbrick)
* Remove empty tasks from ibex_icache_base_vseq.sv (Rupert Swarbrick)
* Use dv_base_vseq's num_trans field rather than making our own
  (Rupert Swarbrick)
* Control core sequence's transaction count from top in ICache tests
  (Rupert Swarbrick)
* Remove ibex_icache_sanity_vseq (Rupert Swarbrick)
* Configure ICache mem_error tests from the vseq (not a test class)
  (Rupert Swarbrick)
* Pass mem_err_shift to the ICache memory model on each error check
  (Rupert Swarbrick)
* Configure ICache ECC tests just from the vseq (not a test class)
  (Rupert Swarbrick)
* [rtl] disable clock between reset and fetch_enable_i (Bert Pieters)
* Add some basic protocol checking to the icache's RAM interface
  (Rupert Swarbrick)
* Enable ICache ECC in the way dvsim.py requires (Rupert Swarbrick)
* Update lec_sv2v.sh (NilsGraf)
* Update lec_sv2v.sh (NilsGraf)
* Update lec_sv2v.do (NilsGraf)
* Add LEC script to formally verify sv2v translation (Nils Graf)
* [dv/ibex] Update riscv_core_setting to match latest version of
  riscv-dv (Udi)
* Correct window_width calculation in ICache UVM scoreboard (Rupert
  Swarbrick)
* Fix ordering in ICache core monitor start-up (Rupert Swarbrick)
* Correct "cancelled_valid" sequence in ICache UVM core coverage
  (Rupert Swarbrick)
* Allow ready & branch in ICache UVM tests (Rupert Swarbrick)
* Weight branches in icache tests to favour edges of address space
  (Rupert Swarbrick)
* Update google_riscv-dv to google/riscv-dv@6cf6b4f (Udi)
* Fix documentation markup for tracer (Philipp Wagner)
* [rtl] Remove use of `define in decoder (Bert Pieters)
* Increase priority of failure messages in ICache scoreboard (Rupert
  Swarbrick)
* Fix verbosity in ECC UVM driver (Rupert Swarbrick)
* [dv] Fix DUT probe IF paths (Tom Roberts)
* Add ECC agents to ICache DV plan document (Rupert Swarbrick)
* Define an "ECC agent" for icache testing and a test that uses it
  (Rupert Swarbrick)
* Add and use a 'badbit' RAM for ICache tests (Rupert Swarbrick)
* Enable ECC in ICache tests (Rupert Swarbrick)
* Drive the branch_spec line in ICache UVM tests (Rupert Swarbrick)
* [ibex/dv] add Questa support (Bert Pieters)
* Simplify timestamps in ICache tests (Rupert Swarbrick)
* Update lowrisc_ip to lowRISC/opentitan@c91b50f3 (Rupert Swarbrick)
* [rtl] Simplify I$ ECC error handling (Tom Roberts)
* [rtl] Use outer generate loop for latch RF (Greg Chadwick)
* [doc] Add top-level status table (Tom Roberts)
* [configs] Add a maxperf config (Tom Roberts)
* [rtl] Use gated clock for wb_stage and rf (Greg Chadwick)
* [rtl] Use generate loop in FF register file (Greg Chadwick)

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: 9fa32410======
======Short Message======
[pwrmgr] Fix DC compilation issue and verible style warnings
======Full Message======
[pwrmgr] Fix DC compilation issue and verible style warnings

Signed-off-by: Michael Schaffner <msf@google.com>



======Commit: 772b15f3======
======Short Message======
[otbn] Give IMEM/DMEM a 1 MiB address space each
======Full Message======
[otbn] Give IMEM/DMEM a 1 MiB address space each

OTBN instruction and data memories (IMEM and DMEM) are currently 4 kB
each. To give us an easy way to modify the memory sizes without
modifications to software, we are currently trying to provide a 16 kB
address space for both IMEM and DMEM. Unfortunately, the way this
address space was defined didn't take into account address prefix
rules, making it hard to properly implement in hardware.

This commit fixes the prefixes/alignment, and also increases the address
space to 1 MB for IMEM and DMEM, each, giving us even more breathing
space. Overall, this makes the OTBN device occupy a 4 MB address space.

Fixes #2540

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: 99e9f7f0======
======Short Message======
[otbn] Fix rendering of WSR table in spec
======Full Message======
[otbn] Fix rendering of WSR table in spec

The empty line in the spec made our renderer switch from HTML back to
markdown mode, showing the source code of the table instead of the table
itself.

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: 48870787======
======Short Message======
[usb] Fix lint errors
======Full Message======
[usb] Fix lint errors

Signed-off-by: Pirmin Vogel <vogelpi@lowrisc.org>



======Commit: 9fe94508======
======Short Message======
[usbuart] Fix driver conflict
======Full Message======
[usbuart] Fix driver conflict

This resolves lowRISC/OpenTitan#2527.

Signed-off-by: Pirmin Vogel <vogelpi@lowrisc.org>



======Commit: cded0b6a======
======Short Message======
[i2c, rtl] Style Lint fixes
======Full Message======
[i2c, rtl] Style Lint fixes

1. Removed a trailing space.
2. Fixed undersized binary literal issues.

Signed-off-by: Igor Kouznetsov <igor.kouznetsov@wdc.com>



======Commit: e1b4f635======
======Short Message======
[prim] - Fix generic flash enum reference
======Full Message======
[prim] - Fix generic flash enum reference

Signed-off-by: Timothy Chen <timothytim@google.com>



======Commit: a37d6e44======
======Short Message======
[tlgen] Various fixes to tlgen behavior.
======Full Message======
[tlgen] Various fixes to tlgen behavior.

- De-couples unode / dnode dependencies. In the existing design
  sometimes the downstream node may overwrite properties of upstream.

- When s1n connects to sm1, always fully passthrough, FIFOs can be
  instantiated at the beginning of s1n, or the end of sm1

Signed-off-by: Timothy Chen <timothytim@google.com>



======Commit: 66591efc======
======Short Message======
[prim_fifo_sync] Use vbits() for simpler code
======Full Message======
[prim_fifo_sync] Use vbits() for simpler code

prim_fifo_sync currently uses two different approaches to get the
functionality we now provide in `vbits()`; use this new function
instead.

This change also fixes a Verilator lint error (width mismatch).

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: ef8c78fe======
======Short Message======
[sw] Upgrade toolchain
======Full Message======
[sw] Upgrade toolchain

This fixes issues where the previously used toolchain had a broken symlink
and required a more recent version of libstdc++ than is available by default
in some distributions.

Signed-off-by: Luís Marques <luismarques@lowrisc.org>



======Commit: 0bf8ee83======
======Short Message======
[vendor] Refresh patches to target dir
======Full Message======
[vendor] Refresh patches to target dir

target_patch_dir is a relative directory, and with `cwd` set, it
resolves to the temporary directory. Make it an absolute path to ensure
that patches are actually produced.

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: 4e710ab0======
======Short Message======
[fpv/prim_packer] fix CI failure due to index out of bound
======Full Message======
[fpv/prim_packer] fix CI failure due to index out of bound

One of the assumptions in prim_packer ensures input mask is continous,
thus it uses `InW-2` as index, but entroy_src uses prim_packer with
InW=1, so there is compile error in CI check.
This PR fix it by guarding the assumption with InW>1 condition.

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: 61163795======
======Short Message======
[ci] Make Clang Errors Fail Build
======Full Message======
[ci] Make Clang Errors Fail Build

This commit removes `continueOnError: true` from the clang software
build and test tasks. Now if either of these tasks fail, then the whole
build will fail.

Signed-off-by: Sam Elliott <selliott@lowrisc.org>



======Commit: b33ffdaa======
======Short Message======
[dv/alert] interrupt timeout state cannot be cleared by esc_clr
======Full Message======
[dv/alert] interrupt timeout state cannot be cleared by esc_clr

This fix the issue when register set esc_clear: it will only clear
escalation phases (phase0, phase1, phase2, phase3) and clear escalation
accumulation counts. It won't clear timeout_state. The timeout state
cannot be cleared by setting intr_state.

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: ae097d5e======
======Short Message======
[prim_arbiter_tree] Fix incorrect arbitration behavior
======Full Message======
[prim_arbiter_tree] Fix incorrect arbitration behavior

This carries over the new FPV properties from prim_arbiter_ppc, aligns
the parameters of the design, and corrects an arbitration issue.

The arbiter should now behave the same as the PPC arbiter.

Signed-off-by: Michael Schaffner <msf@google.com>



======Commit: 8c925edc======
======Short Message======
[alert/dv] fix priority when ping_ok and timeout triggered same cycle
======Full Message======
[alert/dv] fix priority when ping_ok and timeout triggered same cycle

In RTL, when ping_ok and timeout happened at the same clk cycle, design
will still trigger the timeout alert. Testbench follows this rule but
did not count for corner case: where ping_ok is triggered by real
esc_p/n happened during ping. This PR fixed this corner case.

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: fb16821f======
======Short Message======
[memutil] Increase max memory width to 256bit
======Full Message======
[memutil] Increase max memory width to 256bit

- Required for OTBN memories
- Fixes #2504

Signed-off-by: Tom Roberts <tomroberts@lowrisc.org>



======Commit: 05a8af77======
======Short Message======
[ibex] Do not vendor in duplicated top_pkg into OT
======Full Message======
[ibex] Do not vendor in duplicated top_pkg into OT

top_pkg is a global package and may appear only once in the tree. Before
this change, there were two instances of this package: one in opentitan,
and one vendored in through Ibex.

Remove the one from Ibex when vendoring in.

Fixes #2510

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: 6b59246e======
======Short Message======
[dv] Fix leftover TL items after reset
======Full Message======
[dv] Fix leftover TL items after reset

Stop driving more TL items when reset occurs to fix below error
> UVM_ERROR @ 18604172900 ps: (tl_host_driver.sv:47) uvm_test_top.env.m_tl_agent.driver [uvm_test_top.env.m_tl_agent.driver] Check failed seq_item_port.has_do_available() == 0 (1 [0x1] vs 0 [0x0])
UVM_FATAL @ 18604272900 ps: uvm_test_top.env.m_tl_agent.sequencer [uvm_test_top.env.m_tl_agent.sequencer] Item_done() called with no outstanding requests. Each call to item_done() must be paired with a previous call to get_next_item().

Signed-off-by: Weicai Yang <weicai@google.com>



======Commit: 8aa50793======
======Short Message======
[sw] Add Guidance on DIF Return Codes
======Full Message======
[sw] Add Guidance on DIF Return Codes

This codifies the result of the discussion in #1911 and in the OpenTitan
Software Meeting on 2020-04-14. It clarifies the usage of
`kDif<ip>Error` based on discussions after that point as to its usage,
as well as clarifying the uses of that around enum switches.

Signed-off-by: Sam Elliott <selliott@lowrisc.org>



======Commit: 670e9e1f======
======Short Message======
Fix reference to Active stage
======Full Message======
Fix reference to Active stage

Signed-off-by: Scott Johnson <scottdj@google.com>



======Commit: 39f010ea======
======Short Message======
[prim_ram*_adv] Update core files and add prim_util dependency
======Full Message======
[prim_ram*_adv] Update core files and add prim_util dependency

This corrects an error in prim_ram_2p*_adv cores and adds the prim_util
dependency to all prim_ram*_adv cores such that the utility function
vbits() can be used.

Signed-off-by: Michael Schaffner <msf@google.com>



======Commit: e39f67d0======
======Short Message======
[dv:entropy_src] Fixes for csr/intr tests
======Full Message======
[dv:entropy_src] Fixes for csr/intr tests

Signed-off-by: Steve Nelson <steve.nelson@wdc.com>



======Commit: 7b207b74======
======Short Message======
[dvsim] Run tests in "interleaved" order
======Full Message======
[dvsim] Run tests in "interleaved" order

This is as suggested in issue #2370. The advantage is that when you
introduce a bug, you often break (almost) all seeds for one particular
test. Ideally, you'd want to see failures for that test early in a
run, rather than running a whole load of seeds through other tests
first.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 21a20e24======
======Short Message======
[dv/uart] Fix a corner case
======Full Message======
[dv/uart] Fix a corner case

During last bit of uart transfer, shouldn't read rdata to avoid
unaccurary prediction. Here is the change

Original:
`wait_when_in_ignored_period; read N bytes`
Change to:
`repeat (N) {wait_when_in_ignored_period; read one byte}`

Signed-off-by: Weicai Yang <weicai@google.com>



======Commit: 5aa10105======
======Short Message======
[rtl] Fix prim flash dependency
======Full Message======
[rtl] Fix prim flash dependency

- The flash ctrl IP level DV testbench runs into a compile error due to
missing dependencies this commit fixes.

Signed-off-by: Srikrishna Iyer <sriyer@google.com>



======Commit: 9ac2b15f======
======Short Message======
[prim_fifo_sync] Make FIFO output zero when empty
======Full Message======
[prim_fifo_sync] Make FIFO output zero when empty

This is configurable by the parameter `OutputZeroIfEmpty`, which
defaults to on.

Signed-off-by: Noah Moroze <noahmoroze@gmail.com>



======Commit: 35cef980======
======Short Message======
[topgen] Fix multiple instances case
======Full Message======
[topgen] Fix multiple instances case

topgen amended the ip objects to only one module that first hit. If
multiple instances instantiated into a top, following modules with same
`type` don't have amended data which results in failure of top
generation.

Now the tool loops the entire modules that have same `type` name and
amend everything.

Signed-off-by: Eunchan Kim <eunchan@opentitan.org>



======Commit: 536ab20f======
======Short Message======
[dvsim] Allow max-parallel to be set in the environment
======Full Message======
[dvsim] Allow max-parallel to be set in the environment

If you have a limited number of licences, you currently have to
remember the --max-parallel (or -mp) argument every time you run dvsim
to avoid annoying your colleagues.

This patch teaches the script to check a $DVSIM_MAX_PARALLEL
environment variable if the argument isn't given, so people at small
companies can put something like 'export DVSIM_MAX_PARALLEL=1' in
their .bashrc and not worry about eating all the licences in future!

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 51a5cfc1======
======Short Message======
[usb] Fix default usb_fs_nb_out_pe NumOutEps
======Full Message======
[usb] Fix default usb_fs_nb_out_pe NumOutEps

Signed-off-by: Zachary Snow <zach@zachjs.com>



======Commit: 1426e357======
======Short Message======
[dvsim] Fix --reseed argument
======Full Message======
[dvsim] Fix --reseed argument

This was broken by commit b7aacc1a (I fluffed splitting up the PR, it
seems). The default should have been None (since e83b55e), but some
rebase to the doc update patch put the default -1 back.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: a572770e======
======Short Message======
[pinmux] Fix an indexing out of bounds issue
======Full Message======
[pinmux] Fix an indexing out of bounds issue

Signed-off-by: Michael Schaffner <msf@google.com>



======Commit: a758451d======
======Short Message======
[dv/xbar] Fix xcelium compile error
======Full Message======
[dv/xbar] Fix xcelium compile error

1. Fix error #2404, xcelium doesn't allow to force one of var in packed
struct
2. Also change to only drive clocks used by xbar

Signed-off-by: Weicai Yang <weicai@google.com>



======Commit: 5f89d3be======
======Short Message======
[i2c, dv] Fix incorrect bit width definition for timeout value
======Full Message======
[i2c, dv] Fix incorrect bit width definition for timeout value

Signed-off-by: Tung Hoang <tung.hoang.290780@gmail.com>



======Commit: 8191b245======
======Short Message======
[dv] Allow a test to have "simple" timestamps
======Full Message======
[dv] Allow a test to have "simple" timestamps

Before this patch the clock phase was always randomised so, even if
you had a clock frequency that would give you a nice period (50MHz)
and no jitter, the time stamps would still look weird.

In a test with a single clock and the default reset strategy, the
clock phase was the sum of the time before reset (dly_ps in
apply_reset) and 0-10ps chosen at random in the driving block.

This patch changes wait_for_reset so that it always waits a whole
number of clock periods, decoupling the "reset at a random time" event
from the clock phase. It then lengthens the random delay in the
driving block from 0 -> 10ps to 0 -> clk_period. This should give the
same randomness in phase as before.

However, tests which only have one clock don't really need the random
clock phase and it makes the timestamps look odd in dumped waves. This
patch adds a "sole_clock" flag which disables the random delay, so the
clock ends up exactly in phase. The flag defaults to false, so the
default behaviour is as before.

You can now get simple timestamps in a given test. To do so:

  - Constrain the frequency. Since the frequency doesn't affect a
    non-gate-level test with only one clock, we may as well pick
    something helpful.

    If your test uses dv_lib, your <block>_env_cfg class, which
    derives from dv_base_env_cfg, should gain a constraint like:

      constraint clk_freq_50_c {
        clk_freq_mhz == ClkFreq50Mhz;
      }

    This will give a clock edge every 10ns. Other enum values that
    will look OK are ClkFreq25Mhz or ClkFreq100Mhz. If you don't force
    this, you might get a 24MHz or 48MHz clock, which looks a little
    weird.

  - Set the sole_clock flag. The easiest place to do this is the
    build_phase of the environment class. If <block>_env derives from
    dv_base_env, add something like this to its build_phase function:

      cfg.clk_rst_vif.set_sole_clock();

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 95f55d55======
======Short Message======
[fpv] fix TLUL_adapter_sram assertion unreachables
======Full Message======
[fpv] fix TLUL_adapter_sram assertion unreachables

Fpv has unreachables in Hmac and Flashctrl, when the sram is WO ONLY.
I excluded the assertions in the run script.

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: d1f3da16======
======Short Message======
[sw, dif_plic] Fulfil S1 Checklist DIF_TEST_SANITY requirement
======Full Message======
[sw, dif_plic] Fulfil S1 Checklist DIF_TEST_SANITY requirement

DIF_TEST_SANITY (requirement):
Sanity tests exist for the DIF in sw/device/tests/dif named dif_<ip>_sanitytest.c.

This should perform a basic test of the main datapath of the hardware
module by the embedded core, via the DIF, and should be able to be run
on all OpenTitan platforms (including FPGA, simulation, and DV). This
test will be shared with DV.

Sanity tests are for diagnosing major issues in both software and
hardware, and with this in mind, they should execute
quickly. Initially we expect this kind of test to be written by
hardware designers for debugging issues during module
development. This happens long before a DIF is implemented, so there
are no requirements on how these should work, though we suggest they
are placed in sw/device/tests/<ip>/<ip>.c as this has been the
convention until now. Later, when a DIF is written, the DIF author is
responsible for updating this test to use the DIF, and for moving this
test into the aforementioned location.

CHANGE:
This change renames consecutive_irqs_test to dif_plic_sanitytest, and
places the source from sw/device/tests/ to sw/device/tests/dif/.

Signed-off-by: Silvestrs Timofejevs <silvestrst@lowrisc.org>



======Commit: ec9ac736======
======Short Message======
[dv/hmac] Fix xcelium error
======Full Message======
[dv/hmac] Fix xcelium error

File in issue #2404. Xcelium detected an error happened when a race
condition between msg_q.delete() and hmac_process. This PR addresses
this issue by delete msg_q after hmac_process is detected in the forever
loop.

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: c0321826======
======Short Message======
[doc] Fix Links to hw_checklist
======Full Message======
[doc] Fix Links to hw_checklist

These must have been missed when introducing the software checklist.

However, github doesn't render symlinks, and
`doc/project/hw_checklist.md.tpl` is a symlink to
`util/uvmdvgen/checklist.md.tpl`, so we need to update URLs to point to
the latter template, and not the former.

Signed-off-by: Sam Elliott <selliott@lowrisc.org>



======Commit: d8ff1d97======
======Short Message======
[sw] Use .option push/pop to turn off rvc
======Full Message======
[sw] Use .option push/pop to turn off rvc

This is a less error-prone way of turning off compressed instructions,
as exactly the options prior to the push will be restored when popped.

Signed-off-by: Sam Elliott <selliott@lowrisc.org>



======Commit: 531ae5a6======
======Short Message======
[fpv] formal compile fix required by VC Formal
======Full Message======
[fpv] formal compile fix required by VC Formal

Thanks Shruti for reporting these issues. These are some compile errors
found by VC Formal run script.

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: 5c323ef5======
======Short Message======
[usb] Fix lint errors
======Full Message======
[usb] Fix lint errors

Signed-off-by: Pirmin Vogel <vogelpi@lowrisc.org>



======Commit: f73a7c24======
======Short Message======
[dv] Temporarily disable chip_uart_tx_rx regression test.
======Full Message======
[dv] Temporarily disable chip_uart_tx_rx regression test.

This test currently fails due to some issues in Ibex. Disabling until
bug fixes are in opentitan.

See also: #2405.

Signed-off-by: Alphan Ulusoy <alphan@google.com>



======Commit: 0441f325======
======Short Message======
[dvsim] Fix error detection logic in Deploy.py
======Full Message======
[dvsim] Fix error detection logic in Deploy.py

The code in set_status searches through the log for error messages. If
it finds one, it adds it to self.fail_msg. If it doesn't find an error
message, the code is supposed to check the process return code. If
that is nonzero, it considers the job to have failed and adds the end
of the log to the fail message.

Unfortunately the "did I see an error message" logic was wrong,
because it assumed self.fail_msg would be empty before running
set_status. This isn't true for CompileSim, at any rate, because the
constructor adds a header.

This patch corrects the logic by adding an explicit local
"seen_fail_pattern" variable.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 2f2330e6======
======Short Message======
[i2c, dv] Add i2c_sanity_vseq for V1
======Full Message======
[i2c, dv] Add i2c_sanity_vseq for V1

1) i2c_sanity_vseq generates following transaction types
  - b2b-read  trans without STOP bit at the end (issue repSTART after)
  - b2b-read  trans with    STOP bit at the end (issue    START after)
  - b2b-write trans without STOP bit at the end (issue repSTART after)
  - b2b-write trans with    STOP bit at the end (issue    START after)
  - interleave read and write transactions (randomly change direction)
  - support clock streching by device
2) i2c_scoreboard
      - verify transaction types (generated by i2c_sanity_vseq)
3) fix monitor_ready_to_end task in i2c_monitor.sv to avoid timeout

TODO: b2b-read chained trans

Signed-off-by: Tung Hoang <tung.hoang.290780@gmail.com>



======Commit: dbce36f2======
======Short Message======
[dv/alert_handler] fix xcelium warning
======Full Message======
[dv/alert_handler] fix xcelium warning

Move hierachy related task/function from alert_esc_interface to drivers
and monitors, those who actually use the task/function.

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: b2ffb8a9======
======Short Message======
[Earlgrey] Fix multi tier xbar naming collision
======Full Message======
[Earlgrey] Fix multi tier xbar naming collision

If a crossbar connects to multiple xbars, naming collision occurs. Now
the connection between crossbars has the format of `tl_` + {host_xbar} +
`_` + {dev_xbar} + `_{h2d/d2h}`.

Signed-off-by: Eunchan Kim <eunchan@opentitan.org>



======Commit: c0c27c06======
======Short Message======
[topgen] Fix importing bug
======Full Message======
[topgen] Fix importing bug

topgen imports object file with module's name not type.
It creates empty object which results in key error.

Signed-off-by: Eunchan Kim <eunchan@opentitan.org>



======Commit: a47a4155======
======Short Message======
[site] Add dynamic section table
======Full Message======
[site] Add dynamic section table

Shortcode for inserting a generated table of content for the current
folder.
This can be used in Markdown files in order to have an always up-to-date
list of the content of the folder.

Supports a "type" parameter which can be set to "section" in order to
list only subsection. Will ignore other content such as normal pages.
Parameter "depth" controls the level to which the content is listed.
Defaults to two if not set.

Fixes lowrisc/opentitan#1419

Signed-off-by: Tobias Wölfel <tobias.woelfel@mailbox.org>



======Commit: de0df861======
======Short Message======
[COMMITTERS] Add new committers agreed at today's TC meeting
======Full Message======
[COMMITTERS] Add new committers agreed at today's TC meeting

In its meeting today, the OpenTitan Technical Committee took into
account the considerations described in
<https://docs.opentitan.org/doc/project/committers/> and voted to add
the additional committers listed in this patch.

Signed-off-by: Alex Bradbury <asb@lowrisc.org>



======Commit: 53e386ce======
======Short Message======
[dv] Fix loop when waiting for end of run phase in dv_base_monitor
======Full Message======
[dv] Fix loop when waiting for end of run phase in dv_base_monitor

Since phase_ready_to_end is re-run whenever the total objection count
for the phase drops to zero, we have to make sure that the objection
raised by watchdog_ok_to_end doesn't cause us to run the watchdog a
second time.

The loop where the test re-runs phase_ready_to_end was caused by the
changes in commit 7bdd957 and can be seen in Ibex icache tests. I'm
not sure why it didn't break stuff in OpenTitan.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: b4b624dc======
======Short Message======
[util] Remove docgen references
======Full Message======
[util] Remove docgen references

Remove references and point to `build_docs.py` if applicable.

Fixes lowrisc/opentitan#2131

Signed-off-by: Tobias Wölfel <tobias.woelfel@mailbox.org>



======Commit: e8f0ab2a======
======Short Message======
[doc] Choose a smaller font
======Full Message======
[doc] Choose a smaller font

Currently, docs are rendered in roughly 16px font sizes, which is huge
and doesn't leave much room for content. '1rem' is the default used by
bootstrap and gives a much better reading experience, without being too
small.

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: 8999db8e======
======Short Message======
[dv/alert_handler] fix corner case
======Full Message======
[dv/alert_handler] fix corner case

Fix corner case where escalation is triggered in the same cycle as
esc_clear register.
Use DV_CHECK_MEMBER_RANDOMIZE_FATAL to randomize one value, instead of
using DV_CHECK_RANDOMIZE_FATAL

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: e83b55ed======
======Short Message======
[dvsim] Small tidy-ups in dvsim.py command line parsing
======Full Message======
[dvsim] Small tidy-ups in dvsim.py command line parsing

  - Arguments with action 'store_true' already get a default of False,
    so don't bother doing that explicitly.

  - Simplify how we take arguments in the FlowCfg constructor. Note
    that this wouldn't be equivalent code if we modified self.items,
    self.list_items or self.select_cfgs. But we don't.

  - Rename -select_cfgs to --select-cfgs (apparently this was the
    intended name, based on PR feedback). Default to None. This means
    that passing --select-cfgs with no arguments is now different from
    not passing it at all, which is probably the behaviour we want.

  - Tidy up the logic in prune_selected_cfgs to allow self.select_cfgs
    to be None. And write the filter as a 1-line list comprehension
    rather than using list's remove method.

  - Print an error if the user wrongly passed -select_cfgs for a
    non-master config (before this patch, we just ignored the argument).

  - Use None as a default reseed value rather than -1. I think it's
    probably better to get an error if we forget to set reseed
    somewhere than to get -1*reseed_multiplier iterations, then loop
    over range(-10) tests (which is the empty sequence) without any
    error.

  - Pull the FlowCfg factory logic into a separate factory function in
    dvsim.py called make_config().

  - Default to None for --tool and print an error if a simulation run
    has no tool on the command line or in a non-master-config config
    file. This previously failed rather mysteriously when it
    substituted the empty string for {tool} when constructing
    filenames.

  - Default to None for --profile. We have to default to a string (we
    pick something clearly bogus) in the SimCfg constructor so that
    interpolation works when --profile is not set. This should have no
    effect, because no config file should use {profile} except in a
    profile build_mode. But it's probably good to have something that
    makes it clear what's going on.

  - Use nargs=? for the --profile argument. Now "--profile" means
    "profile for time". If you want to explicitly specify how to
    profile, you can do that too ("--profile=time" or
    "--profile=mem").

  - Slightly change the semantics of --list. If not specified, it does
    nothing. If passed with no arguments (nargs is now *, not +), it
    lists targets for all categories. If passed with some
    categories (now checked against a list of valid options), it lists
    targets that match the categories.

  - Default to None for --branch; move comment into a docstring in the
    resolve_branch function.

  - Use choices=... to force sensible values when using --profile,
    --verbosity or --verbose.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 5f562a9a======
======Short Message======
[dv/alert_handler] syntax fix for Xcelium
======Full Message======
[dv/alert_handler] syntax fix for Xcelium

Fix two issues in alert_handler tb:
1. refering to alert_handler as dut instead
2. change from functions(with fork join_none) to tasks, because they are
called by other tasks

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: 299cae54======
======Short Message======
[dvsim] Tidy up wave dumping logic
======Full Message======
[dvsim] Tidy up wave dumping logic

Before this patch, you had to run one of:

  dvsim.py ... -w -d fsdb   (Verdi FSDB dumping on VCS or xcelium)
  dvsim.py ... -w -d shm    (Native SHM dumping on xcelium)
  dvsim.py ... -w -d vpd    (Native VCD+ dumping on VCS or xcelium)

This seems like unnecessary work for the user (and a VCS simulation
just hangs if you use the default 'fsdb' dump type without a Verdi
licence).

With this patch, dvsim.py guesses the format to use by looking on
$PATH for verdi. On success, it uses fsdb. On failure, it uses vpd for
VCS and SHM for xcelium. If you want to override the automatic choice,
you can still pass -d, but most of the time you shouldn't have to.

The patch also adds some more error checking (you can no longer
specify --waves when running Verible, for example) and adds support
for vpd dumping on xcelium.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: ce40dbf8======
======Short Message======
[vendor.py] Enable overriding of desc keys
======Full Message======
[vendor.py] Enable overriding of desc keys

The vendor tool uses configuration in `*.vendor.hjson` files, organized
as nested dicts. This patch enables the overriding of some configuration
entries with values on the command line.

Usage example: `vendor.py -Dpatch_repo.url=/home/user/src/patch_repo`

This feature makes it easier to make temporary or development changes to
a vendored-in code by pointing to local copies of the patch or upstream
repositories instead of remote ones. Achieving the same effect without
this change would require changes to the `*.vendor.hjson` file, and a
commit of those changes, as the vendor tool checks for a clean working
directory before performing its work.

Users of this functionality need to be aware that it can lead to
mismatches between a local run with overridden configuration options,
and a run on another machine, where those overrides are not present. In
OpenTitan, we catch those cases with CI integrations. If there is no
such CI check present, users need to be aware of the power of the tool
they're using.

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: f698198d======
======Short Message======
[vendor] Catch keyboard interrupt for nicer error message
======Full Message======
[vendor] Catch keyboard interrupt for nicer error message

Avoid printing a stack trace in a user-initiated abort, but print a
"nice" message instead.

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: 9114454b======
======Short Message======
[hmac/dv] dsim compile error
======Full Message======
[hmac/dv] dsim compile error

In hmac scoreboard I declared a dynamic array without using new[]
function to allocate its memory. Somehow it works for VCS and Xcelium,
but Dsim throws an array. Fixed it and replaced the dynamic array to a
queue.

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: 3319d27b======
======Short Message======
[dv] Fix dsim compile error
======Full Message======
[dv] Fix dsim compile error

Signed-off-by: Weicai Yang <weicai@google.com>



======Commit: 5ccf9ec3======
======Short Message======
Update riscv_compliance to riscv/riscv-compliance@5a978cf
======Full Message======
Update riscv_compliance to riscv/riscv-compliance@5a978cf

- Switched from VMEM to ELF files when loading the verilator simulation
- Non-functional: Restructured the patch queue to be topic-oriented, not a timeline.

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: 56ab9e45======
======Short Message======
[prim] Fix lint errors
======Full Message======
[prim] Fix lint errors

Signed-off-by: Pirmin Vogel <vogelpi@lowrisc.org>



======Commit: 0b81f276======
======Short Message======
[prim] Rework how primgen.py writes out parameter lists for instantiations
======Full Message======
[prim] Rework how primgen.py writes out parameter lists for instantiations

This commit changes primgen.sv to put just a single parameter per line and
to skip parameter lists completely if empty. This prevents many lint
errors.

Signed-off-by: Pirmin Vogel <vogelpi@lowrisc.org>



======Commit: 2dcb4bf5======
======Short Message======
[aes, tlul] Fix lint errors
======Full Message======
[aes, tlul] Fix lint errors

Signed-off-by: Pirmin Vogel <vogelpi@lowrisc.org>



======Commit: 611be61d======
======Short Message======
[sw] Ensure Generated C Headers Can Be Used By C++
======Full Message======
[sw] Ensure Generated C Headers Can Be Used By C++

This patch follows up #1958 and adds polyglot extern guards to the
autogenerated headers for register definitions and the top system header.

Signed-off-by: Sam Elliott <selliott@lowrisc.org>



======Commit: 1dfabbf4======
======Short Message======
[sw/meson] Move linking options to `add_project_link_arguments`
======Full Message======
[sw/meson] Move linking options to `add_project_link_arguments`

Some project linking options were being set with `add_project_arguments`.
When compiling with clang, clang correctly warned that linking-related
options were not being used during the compilation stage. This patch fixes
that issue, by moving the options to the linking stage.

Signed-off-by: Luís Marques <luismarques@lowrisc.org>



======Commit: 3f35d4e4======
======Short Message======
[vendor.py] Fix iteration code
======Full Message======
[vendor.py] Fix iteration code

Seems like a left-over from a previous design point where `Mapping` was
actually a list.

```
Traceback (most recent call last):
  File "/home/philipp/src/opentitan/util/vendor.py", line 710, in <module>
    main(sys.argv)
  File "/home/philipp/src/opentitan/util/vendor.py", line 651, in main
    shortlog = produce_shortlog(clone_subdir, desc.mapping,
  File "/home/philipp/src/opentitan/util/vendor.py", line 152, in produce_shortlog
    else [src for (src, _) in mapping.items])
  File "/home/philipp/src/opentitan/util/vendor.py", line 152, in <listcomp>
    else [src for (src, _) in mapping.items])
TypeError: cannot unpack non-iterable Mapping1 object
```

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: b29ebe8d======
======Short Message======
[dv] Initial flash_ctrl DV testbench
======Full Message======
[dv] Initial flash_ctrl DV testbench

- Initial dump using `uvmdvgen`
- Added hand-written `flash_ctrl_wrapper` module
- Added hand-written `flash_ctrl_wrapper_reg_block` that adds eflash mem
to the autogenerated RAL model

- This PR needs an additional fix made in #2281.

Signed-off-by: Srikrishna Iyer <sriyer@google.com>



======Commit: 37c91273======
======Short Message======
[dvsim] Update Xcelium cfg to use CDNS UVM
======Full Message======
[dvsim] Update Xcelium cfg to use CDNS UVM

- Fixes #2305
- Let Xcelium use its own provided UVM installation than rely on
external path

Signed-off-by: Srikrishna Iyer <sriyer@google.com>



======Commit: 639c43bf======
======Short Message======
[dv] Cleanup Xcelium warning: unconnected port
======Full Message======
[dv] Cleanup Xcelium warning: unconnected port

- This is a benign `pins_if` instance for the devmode which is not
connected in a few DUTs - This commit fixes it, including the UVMDVGen
template.

Signed-off-by: Srikrishna Iyer <sriyer@google.com>



======Commit: 1b1f2ec6======
======Short Message======
[dv] Cleanup Xcelium warning: default arg
======Full Message======
[dv] Cleanup Xcelium warning: default arg

- Xcelium threw warning on mismatching function argument signature
between the base (dv_base_reg_block) and the derived classes (*_reg_block)

Signed-off-by: Srikrishna Iyer <sriyer@google.com>



======Commit: bf4f77e7======
======Short Message======
[dv] Cleanup Xcelium warning: XProp related
======Full Message======
[dv] Cleanup Xcelium warning: XProp related

- Added `-xverbose` elab option by default - this does not impact the
build time significantly.
- Added `xflags` to enable array corruption on invalid / oob index -
suggested by Xcelium

Signed-off-by: Srikrishna Iyer <sriyer@google.com>



======Commit: 481ceefa======
======Short Message======
[util] Fix Lock File Path Handling in vendor.py
======Full Message======
[util] Fix Lock File Path Handling in vendor.py

Signed-off-by: Sam Elliott <selliott@lowrisc.org>



======Commit: 898321f4======
======Short Message======
[ci] Check Vendoring is up to Date
======Full Message======
[ci] Check Vendoring is up to Date

This adds a step to the CI to check whether the vendored versions of
repositories have been fully committed. If it hasn't, running
`vendor.py` (without `--update`), will cause changes to the repo which
`git diff` will show.

The intention here is to catch when someone has not committed all the
changes that an update to a vendor file may have caused.

This CI step uses the `--check-patches` option to ensure any patches
apply cleanly.

Signed-off-by: Sam Elliott <selliott@lowrisc.org>



======Commit: 364c194d======
======Short Message======
[util] Correctly cope with patch_dir and no mapping in vendor.py
======Full Message======
[util] Correctly cope with patch_dir and no mapping in vendor.py

This was broken with my recent patch to add "mapping" support. The fix
passes a boolean flag to Mapping1.make_default saying "please add a
relative patch directory of '.' to the dummy mapping entry you make".

This patch also fixes how we run "git apply" to apply the patches.
It turns out that if you run

   cd subdir/in/repo
   git apply my.patch

then the paths in my_path are interpreted relative to the root of the
repository (and anything that applies to a file outside of
subdir/in/repo is skipped).

Before the recent vendoring changes, we applied the patches before
copying into the target repository. So it was something like

   git clone git://something /tmp/something
   (cd /tmp/something; git apply -p1 /path/to/my.patch)
   cp /tmp/something/* vendor/something

I'm not sure this would work with only_subdir, but it definitely did
work correctly if we were copying from the top of the vendored repo.

The recent vendoring changes alter things to:

   git clone git://something /tmp/something
   cp /tmp/something/* vendor/something
   (cd vendor/something; git apply -p1 /path/to/my.patch)

This doesn't do what you want, because the paths in the patch look
like a/myfile.c rather than a/vendor/something/myfile.c (and the hunks
all get skipped).

We can fix things up again by using the --directory argument to git
apply, which works a bit like you might expect changing directory to
vendor/something would work and changes how the patch paths are
interpreted.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: befd89b0======
======Short Message======
[util] Iterate over patches in sorted order in vendor.py
======Full Message======
[util] Iterate over patches in sorted order in vendor.py

The "sorted(..)" call got lost accidentally as part of commit 249b4c3.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 25d88922======
======Short Message======
[ibex] Enable PMPs
======Full Message======
[ibex] Enable PMPs

Enable the maximum of 16 PMPs with the most fine-grained granularity of
a word.

Note that PMP is EXPERIMENTAL at this point and not yet verified on the Ibex
side. Still, enabling it now has two benefits:

- It gives software an early access to test this fundamental functionality
  during operating system development (with the clear expectation that
  the hardware could be buggy).
- Given the significant area increase of Ibex with PMP enabled, it gives
  us a better indication of area and timing pressure across the chip.

Fixes #1445

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: 208dc5c5======
======Short Message======
[sw] Check-in opentitan tock image
======Full Message======
[sw] Check-in opentitan tock image

- This includes the `elf`, `vmem` and the `dis` files.
- Both, 32 and 64 bit vmems are checked in. Once the flash update to
switch to 64b data width, the 32b image will be removed.
- The elf and dis can help with debug if needed.

Signed-off-by: Srikrishna Iyer <sriyer@google.com>



======Commit: 12d8be4c======
======Short Message======
Specify minimum versions of Python dependencies
======Full Message======
Specify minimum versions of Python dependencies

We install the fusesoc and edalize Python dependencies from
Git repositories which contain OT-specific modifications (potentially;
currently, edalize is unmodified, only fusesoc is patched). The
requirements in python-requirements.txt were written under the
assumption that a call to `pip install -r python-requirements.txt` would
aways install the latest version as specified by the branch argument.
This assumption is wrong, as documented in
https://pip.readthedocs.io/en/latest/reference/pip_install/#git:

"For non-editable installs, the project is built locally in a temp dir
and then installed normally. Note that if a satisfactory version of the
package is already installed, the VCS source will not overwrite it
without an --upgrade flag. VCS requirements pin the package version
(specified in the setup.py file) of the target commit, not necessarily
the commit itself."

It's still hard to specify the exact version we require and users are
encouraged to always use the `--upgrade`/`-U` flag with pip to be on the
safe side. Nonetheless, we can be slightly more specific by adding the
minimum version we need for fusesoc and edalize.

Fixes #1858

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: 5d730104======
======Short Message======
[rv_core_ibex] Fix indentation
======Full Message======
[rv_core_ibex] Fix indentation

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: 4f735bc6======
======Short Message======
Update lowrisc_ibex to lowRISC/ibex@dd39ec0
======Full Message======
Update lowrisc_ibex to lowRISC/ibex@dd39ec0

Update code from upstream repository
https://github.com/lowRISC/ibex.git to revision
dd39ec0c91d13d6288e4f131a39d049ccfe32173

* Optimize use of RAM primitive in icache (Philipp Wagner)
* [DV] Tie test_en_i to zero (Tom Roberts)
* [dv] Add missing signal to i$ tb (Tom Roberts)
* Use vendored-in primitives from OpenTitan (Philipp Wagner)
* Move Verilator simutil upstream to OpenTitan (Philipp Wagner)
* [CI] Install wheel for easier package installation (Philipp Wagner)
* [CI] Add dependency on pyyaml (Philipp Wagner)
* Fix deprecation warning in ibex_config.py (Philipp Wagner)
* Add '.gitignore' entry for file generated by Xcelium (Tudor Timi)
* Add wave dumping to Xcelium simulation setup (Tudor Timi)
* Fix non-standard usage of '`"` operator (Tudor Timi)
* Add Xcelium simulation setup (Tudor Timi)
* Update lowrisc_ip to lowRISC/opentitan@249b4c31 (Rupert Swarbrick)
* Merge vendor scripts for opentitan imports (Rupert Swarbrick)
* Update opentitan vendor imports to lowRISC/opentitan@249b4c31
  (Rupert Swarbrick)
* [rtl] Add speculative branch signal (Tom Roberts)
* [assertions] Tweak xprop assertion qualifiers (Tom Roberts)
* [rtl] Prevent xprop from fetch fifo (Tom Roberts)
* [rtl] Fix PMP address matching (Tom Roberts)
* [dv/icache] revert ff5c0c5 (Tom Roberts)
* [dv/icache] Add qualifications in protocol checker (Tom Roberts)
* [rtl] Various small icache bugfixes (Tom Roberts)
* [rtl] Remove redundant assignment (Tobias Wölfel)
* [rtl] Update RVFI order (Tobias Wölfel)
* [rtl] Forward register data with status (Tobias Wölfel)
* [rtl] Set RVFI program counter (Tobias Wölfel)
* [formal] Create Ibex Verilog source (Tobias Wölfel)
* [rtl] Add RVFI IXL interface (Tobias Wölfel)
* [bitmanip] Add ZBR instruction group (ganoam)
* Make RAM size configurable in compliance test system (Philipp
  Wagner)
* Use prim_generic_ram_1p in ram_1p (Philipp Wagner)
* [dv] Change performance counter access to DPI (Stefan Wallentowitz)
* Change simple system core file to provide default files (Stefan
  Wallentowitz)
* Get rid of some duplication in ICache virtual sequences (Rupert
  Swarbrick)
* Use control knobs rather than subclassing in ICache core sequences
  (Rupert Swarbrick)
* Add passthru test for ICache (Rupert Swarbrick)
* Update google_riscv-dv to google/riscv-dv@7b38e54 (Udi)
* [rtl] Add dummy instruction insertion (Tom Roberts)
* added missing cmp_opts to Riviera compilation options (Dawid
  Zimonczyk)
* [syn] Add more Ibex parameters to flow (Greg Chadwick)
* [syn] Add STA util for investigating feedthroughs (Greg Chadwick)
* Search backwards for grant seeds in icache memory model (Rupert
  Swarbrick)
* Apply new seeds to memory request in icache memory model (Rupert
  Swarbrick)
* Use --start_seed rather than --seed in core_ibex/Makefile (Rupert
  Swarbrick)
* Update google_riscv-dv to google/riscv-dv@e6a63ff (Rupert Swarbrick)
* Add a --start_seed argument to core_ibex/sim.py (Rupert Swarbrick)
* [bitmanip] Add ZBC instruction group (ganoam)
* Update ICache testplan after review meeting (Rupert Swarbrick)
* Move seed updates into sequence in ICache memory agent (Rupert
  Swarbrick)
* [rtl] Fix instr_valid_i exception issue (Tom Roberts)
* [config] Change default PMPNumRegions (Tom Roberts)
* [rtl] Add data-independent timing to multdiv_fast (Tom Roberts)
* [rtl] data-independent execution for multdiv_slow (Tom Roberts)
* [rtl] multdiv_slow general tidy-up (Tom Roberts)
* [dv] Enable use of ibex configs in DV (Greg Chadwick)
* [cfg] Add PMP parameters to ibex_config.yaml (Greg Chadwick)
* [bitmanip] Add sext.b/h instructions (ganoam)
* [bitmanip] Add ZBF instruction group (ganoam)
* [bitmanip] Add ZBE Instruction Group (ganoam)
* Print commands in core_ibex/Makefile when VERBOSE=1 (Rupert
  Swarbrick)
* Check for correct "high" bits in icache core protocol checker
  (Rupert Swarbrick)
* Weaken some checks on cache in ibex_icache_core_protocol_checker
  (Rupert Swarbrick)
* Fix assertion in ibex_icache_core_protocol_checker (Rupert
  Swarbrick)
* Update google_riscv-dv to google/riscv-dv@162ea73 (Udi)
* Add an empty common_cov_excl.el (Rupert Swarbrick)
* Allow coverage collection in icache/dv/Makefile (Rupert Swarbrick)
* Always assert ready in core driver for ICache UVM testbench (Rupert
  Swarbrick)
* [dv/cs_registers] Remove .* binding (Tom Roberts)
* Specify "-xlrm uniq_prior_final" for VCS (Rupert Swarbrick)
* Update google_riscv-dv to google/riscv-dv@ace2805 (Udi)
* [dv] Manually update dvsim config files (Udi)
* [dv] enable writeback stage and branch ALU (Udi)
* [rtl] Stop regfile writeback for load errors (Tom Roberts)

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: b1888b8a======
======Short Message======
[sw, dif_uart] Fix use of wrong enum in return code
======Full Message======
[sw, dif_uart] Fix use of wrong enum in return code

Two functions were returning enum values from the wrong enum type. The
numerical value was the same as for the correct enum, so this was only a
latent bug. This was noticed when compiling with Clang, which warns about
the use of mismatching enums.

Signed-off-by: Luís Marques <luismarques@lowrisc.org>



======Commit: 7bdd9575======
======Short Message======
[dv] Refactor watchdog_ok_to_end
======Full Message======
[dv] Refactor watchdog_ok_to_end

- Found an issue where chip level DV sim was not exiting gracefully.
- I started debugging it and ended up refactoring it a bit to make it
more streamlined.
- watchdog timer ensures that `ok_to_end` stays asserted for 1 period
- `phase_ready_to_end` can now raise the objection again (if there are
other components that are not yet done and can trigger more activity on
`this` component.

Signed-off-by: Srikrishna Iyer <sriyer@google.com>



======Commit: 7ab48edd======
======Short Message======
[i2c, dv] Updated documents to reflect dv changes (V1)
======Full Message======
[i2c, dv] Updated documents to reflect dv changes (V1)

  - add definition for error, stress_all_with_reset, perf test in i2c_testplan.hjson
  - update description for i2c_agent in index.md
  - add i2c_checklist.md

Signed-off-by: Tung Hoang <tung.hoang.290780@gmail.com>



======Commit: 0f9e04fd======
======Short Message======
[dv/alert_handler] fix daily regression cases
======Full Message======
[dv/alert_handler] fix daily regression cases

Fix corner case when timeout value small than 2

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: 285ef261======
======Short Message======
[dv] Fix for tl_monitor ok_to_end
======Full Message======
[dv] Fix for tl_monitor ok_to_end

If `ok_to_end = 0`, we need to wait for `pending_a_req.size() == 0`

`wait(pending_a_req.size())` implies waiting for the size to be
non-zero, which causes a hang (at chip level DV), when `ok_to_end = 0`
and the `pending_a_req.size()` transitions from 1 to 0.

Signed-off-by: Srikrishna Iyer <sriyer@google.com>



======Commit: 82ed76ec======
======Short Message======
Teach check_tool_requirements to check for edalize versions
======Full Message======
Teach check_tool_requirements to check for edalize versions

This is a patch by @rswarbrick ported from
https://github.com/lowRISC/ibex/pull/774 in order to align the
scripts between Ibex and OT.

Original commit message:

We need this specific edalize version because recent verilators have
got pickier about string parameter passing, breaking the
"MultiplierImplementation" parameter.

As well as teaching check_tool_requirements.py to get the edalize
version from pip3, this patch also does a bit of tidying up, coping
better if tool_requirements.py is missing or malformed.

Original author: Rupert Swarbrick <rswarbrick@lowrisc.org>

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: 249b4c31======
======Short Message======
[util] Add support for multiple src/dst directories to vendor.py
======Full Message======
[util] Add support for multiple src/dst directories to vendor.py

This patch adds the supporting code and also some documentation in
vendor_in_tool.md. The first use case is actually in Ibex, whose DV
code needs various things that are currently in OpenTitan. Here is a
vendor file that can be used there:

    {
        name: "lowrisc_ip",
        target_dir: "lowrisc_ip",

        upstream: {
            url: "https://github.com/lowRISC/opentitan"
            rev: "master"
        }

        mapping: [
            {from: "hw/dv/sv/common_ifs", to: "common_ifs"},
            {from: "hw/dv/sv/csr_utils",  to: "csr_utils"},
            {from: "hw/dv/sv/dv_lib",     to: "dv_lib"},
            {from: "hw/dv/sv/dv_utils",   to: "dv_utils"},
            {from: "util/dvsim",          to: "dvsim"},
            {from: "util/uvmdvgen",       to: "uvmdvgen"}
        ]
    }

Note that we don't currently support mapping and patch_repo at the
same time. To do so, you would have to run the 'git format-patch'
calls in _export_patches() in each subdirectory. Probably not too
difficult, but complicated enough to punt on until we have a user.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 643e7c01======
======Short Message======
[util] Parse inputs into objects in vendor.py
======Full Message======
[util] Parse inputs into objects in vendor.py

Before this commit, the vendor code loaded data from hjson files and
then used dictionary lookups (code like desc['upstream']['url']) to
get data.

There are two problems with this. Firstly, the error reporting when a
config file is malformed isn't great: you get to debug a KeyError
generated deep inside the code. Secondly, the code that extracts data
from dictionaries by name is all interleaved with the "business logic"
code.

This patch moves the parsing into the constructor for two classes,
Desc and LockDesc (representing the contents of the config file and a
lock file, respectively). The path resolution logic also gets folded
in to the Desc constructor.

This should cause no functional change

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: cdcaceec======
======Short Message======
[util] PEP8 fixes in util/vendor.py
======Full Message======
[util] PEP8 fixes in util/vendor.py

No functional change, but no longer triggers flake8 errors.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 5b098350======
======Short Message======
[memutils] Make memutils work with wider RAMs
======Full Message======
[memutils] Make memutils work with wider RAMs

- Using the RAM width in the DPI function definition causes Verilator
  compilation failures where there are multiple memory instances with
  different widths.
- With this patch, the width of the function is fixed at 128bits, and
  the memory loader can load any width of data (+ ECC bits) that it
  likes (up to 128bits total). The RAM on the SystemVerilog side will
  discard any extra unused bits.

[Carried over by imphil from https://github.com/lowRISC/ibex/pull/844.]

Signed-off-by: Tom Roberts <tomroberts@lowrisc.org>



======Commit: f56143b9======
======Short Message======
[verilator simutil] Make C/C++ lint happy
======Full Message======
[verilator simutil] Make C/C++ lint happy

* "Fix" include guards.
* Make the code pass the CI version of clang-format.

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: e1efc184======
======Short Message======
[prim_ram_1p] Move advanced functionality into wrapper
======Full Message======
[prim_ram_1p] Move advanced functionality into wrapper

Reduce the single-port RAM primitive (prim_ram_1p) to its basic
functionality. This functionality doesn't include a "read data valid"
singal (rvalid), as all data is expected to be returned in the next
cycle.

In line with what was done in the dual-port RAM primitive (prim_ram_2p),
we now have a wrapper for such "advanced" functionality like the rvalid
signal in the form of `prim_ram_1p_adv`.

Currently, this wrapper only provides the same functionality as
prim_ram_1p did provide before with an interface mostly identical to the
one in prim_ram_2p_adv.

Adding advanced functionality which actually lives up to the name (e.g.
ECC and parity) can be done as needed in a follow-up.

For Ibex, we have to go slightly ugly: since Ibex uses prim_ram_1p, we
need to adjust its interfaces as well. We cannot do that in Ibex
upstream directly, as we need to get the prim_ram_1p changes (which are
in this commit) first into OpenTitan. To get out of this cyclic
dependency this commit adds a patch to the vendored Ibex. This patch is
then applied with the vendor tool to give subsequent vendor imports the
same patched interface.

Fixes #2181

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: d25753ef======
======Short Message======
[pinmux] Address 3 lint errors
======Full Message======
[pinmux] Address 3 lint errors

Signed-off-by: Satnam Singh <satnam@google.com>



======Commit: 17fa1c5c======
======Short Message======
[alert_handler] Fix a corner case related to esc / accu clearing
======Full Message======
[alert_handler] Fix a corner case related to esc / accu clearing

Signed-off-by: Michael Schaffner <msf@opentitan.org>



======Commit: ec0e2f74======
======Short Message======
[dv/alert_handler] fix hjson run option
======Full Message======
[dv/alert_handler] fix hjson run option

In the same hjson file, run options needs to be under the same list,
otherwise the previous one will be override.

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: 2b791b16======
======Short Message======
[prim_ram_2p] Provide read data only if requested
======Full Message======
[prim_ram_2p] Provide read data only if requested

Previously, the 2-port RAM primitive returned read data even for writes.
Simplify the primitive by returning read data only if it is explicitly
requested. This aligns the 2p implementation with the 1p RAM primitive.

Fixes #2201

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: 872edb75======
======Short Message======
[otp_ctrl/formal] add bind file to formal target
======Full Message======
[otp_ctrl/formal] add bind file to formal target

Add otp_ctrl bind file to tb.
Add otp_ctrl to fpv_all run script.
A few small fix to avoid otp_ctrl fpv compile error

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: dd62d1b0======
======Short Message======
[fpv/pinmux] fix complie error
======Full Message======
[fpv/pinmux] fix complie error

1. Add a enum cast to pinmux wrapper input
2. Fix namings in fpv testbench
I understand the entire pinmux tb needs to be updated, this PR only
fix compile errors so top_earlgrey can compile. There will be following
PR to update fpv tb.

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: 2a98c36b======
======Short Message======
[dv/alert_handler] styling and small adjustment
======Full Message======
[dv/alert_handler] styling and small adjustment

1. Fix nit issue from #2271
2. Adjust constraint to relax accum count threshold
3. Add one more clear conditions in case corner case when interrupt is
cleared right after esc_clr
4. Drive entropy on csr auto tests in case the tests run very long and
cause assertion error

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: cba2a678======
======Short Message======
[util] Fix Vendor Reset Revision
======Full Message======
[util] Fix Vendor Reset Revision

The vendor tool can fail if you try to `git-reset` to a branch that does
not exist.

When cloning a repository to create patches, we almost always need to
check out a branch or revision that is not `master`, but cloning a repo
only creates the `master` branch, so the `git-reset` can fail if given
an upstream branch name (which doesn't yet exist in the clone).

One issue we have is that we want to be able to pass either an upstream
branch name or a git revision sha, and we don't know which we have
(because they use the same key in the configuration). If we use
`git-checkout` instead of `git-reset`, then the checkout operation will
create a local branch that matches the upstream branch of the same name
(if given a branch name), or will checkout a git revision sha if given
a sha.

This is the most minimal change that we can do, and means the vendor
tool does not have to guess when it should add the upstream prefix to
the branch name.

This ensures that the clone operation will not fail when refreshing
patches, but also if a non-master branch is specified in the vendor
configuration.

Signed-off-by: Sam Elliott <selliott@lowrisc.org>



======Commit: 70b98e25======
======Short Message======
[RTL] Fix flash_ctrl dependencies
======Full Message======
[RTL] Fix flash_ctrl dependencies

- Ran into a compile issue where flash_ctrl fusesoc core adds dependency
on prim:all but needs 1p ram and flash to be able to compile.

Signed-off-by: Srikrishna Iyer <sriyer@google.com>



======Commit: c041ff79======
======Short Message======
[dvsim] Enable round-trip of env variables into log
======Full Message======
[dvsim] Enable round-trip of env variables into log

Environment variables are read by the dvsim tool and written back into a
log file. We define this log file as being UTF-8 encoded. The contents
of self.exports (read through os.environ()) are, however, locale-dependent.

Python retains the UTF-8 bytes it cannot decode in the system locale in
the string within a private Unicode coding space. This patch enables
writing them back into the log file.

An orthogonal (and desirable) fix is to change the CI runners to use
UTF-8 locales.

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: 1acdcbba======
======Short Message======
[uvmdvgen] Minor env gen fix
======Full Message======
[uvmdvgen] Minor env gen fix

- Ran into this when generating the flash ctrl env. We add virtual
sequencer regardless of whether there are downstream agents or not.

Signed-off-by: Srikrishna Iyer <sriyer@google.com>



======Commit: 9be0f175======
======Short Message======
[dv] csr_excl_item printed msg cleanup
======Full Message======
[dv] csr_excl_item printed msg cleanup

- very minor fix re-arranging the printed message on exclusions.

Signed-off-by: Srikrishna Iyer <sriyer@google.com>



======Commit: d29e918f======
======Short Message======
[i2c, rtl] Various FSM fixes and improvements
======Full Message======
[i2c, rtl] Various FSM fixes and improvements

1. Eliminated extra clock cycle from timing
2. Added fmt_fifo_wvalid_i and fmt_fifo_depth_i inputs to FSM
3. Enabled transistion to Idle when fmt_fifo is about to become empty
4. Fixed SDA logic during Host...Ack
5. Stopped X propagation from FMT FIFO into FSM
6. Released host-generated SDA during Read operation, except for Host Ack state
7. Changed duration of ClockLow states
8. Moved t_f from tClockLow to tClockPulse

Signed-off-by: Igor Kouznetsov <igor.kouznetsov@wdc.com>



======Commit: 1f647878======
======Short Message======
[site] Align parent indicator
======Full Message======
[site] Align parent indicator

The first element is rendered differently in Chrome in contrast to
Firefox.
This happens with `list-style-type: none` active for the first element.
Removing the extra line height seems to fix the offset.

Signed-off-by: Tobias Wölfel <tobias.woelfel@mailbox.org>



======Commit: a37bcfa3======
======Short Message======
[prim] Make ROM_INIT_FILE a parameter
======Full Message======
[prim] Make ROM_INIT_FILE a parameter

Instead of having a global define ROM_INIT_FILE, which contains a path
to a VMEM file with the boot ROM contents, use a parameter passed
through the hierarchy. This enables multiple instantiations of the ROM,
and avoids naming clashes between the ROM_INIT_FILE/SRAM_INIT_FILE
define, which can be used only once in the whole toplevel design.

This requires changes in various places to properly pass through the
parameter.

Instead of updating the prim_xilinx_rom variant, remove it. This
primitive is identical to the generic one, with the addition of
generating an empty ROM if no ROM initialization file is present during
the synthesis run. We capture this problem now in a more user-friendly
way with a TCL script after synthesis; removing this primitive here
avoids updating it first to the new way of passing in the init file.

The Arty S7 changes were done blindly, I don't have that board. I also
note that the board was very likely broken before, as the ROM init file
name was not called SRAM_INIT_FILE for a long time.

Fixes #2225

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: 3430bb44======
======Short Message======
[dv/alert_handler] a few minor fixed and cleanup
======Full Message======
[dv/alert_handler] a few minor fixed and cleanup

1. Fix runfile linked to a wrong run test
2. Fix ping_rsp_fail test constraint name
3. Clean up unused items in entropy test

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: 0622cc36======
======Short Message======
[packer] Add support of 1bit input width
======Full Message======
[packer] Add support of 1bit input width

Reported by @mwbranstad

Proble: prim_packer doesn't handle 1bit input width

If `InW` is set to 1, `lod_idx` size goes to negative, which creates
lint errors. This commit is to fix the error and guarantees `lod_idx`
widht to 1bit when `InW` is 1.

Signed-off-by: Eunchan Kim <eunchan@opentitan.org>



======Commit: 016772f7======
======Short Message======
[usbdev] Fix comment
======Full Message======
[usbdev] Fix comment

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: 23ad173a======
======Short Message======
[dv/alert_handler] alert_ping response fail
======Full Message======
[dv/alert_handler] alert_ping response fail

Alert ping response fail
Fix two issues:
1. regen (config_lock) in stress_all test won't be reset unless issuing
reset
2. interrupt update at negedge clk cycle to avoid race condition between
updating and reading

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: 9c68b253======
======Short Message======
[dv/chip] fix csr_hw_reset X assertion issue
======Full Message======
[dv/chip] fix csr_hw_reset X assertion issue

The assertion issue from csr_hw_reset is mainly due to padring and tb
driving conflicts. If tb does not drive it, then high z will cause the
assertions to fire.
This PR attempt to disable the assertions during csr_hw_reset random
write CSRs. Then turn the assertions back on after hw_reset is issued.

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: ee0e68a8======
======Short Message======
[sw, tock] Use device specific configuration
======Full Message======
[sw, tock] Use device specific configuration

Earlgrey can be run on different devices that may require different
initialisation parameters.

This change:
  * Adds device specific configurations.
  * Adds infrastructure to choose a configuration.

For the available options, see boards/opentitan/Cargo.toml. The option
to build for a specific device can be passed through the TOCK_FEATURES
environment variable. For example, "TOCK_FEATURES=device_verilator".
If TOCK_FEATURES is not specified, tock will be built for fpga by default.

NOTE: there might be a better way to request specific device than an
      environment variable, however it is good enough as a first step
      and can be improved in follow-up PRs.

Signed-off-by: Silvestrs Timofejevs <silvestrst@lowrisc.org>



======Commit: c295ec38======
======Short Message======
[site] Show the current position
======Full Message======
[site] Show the current position

Provide links to the parents of the current site.

Fixes lowrisc/opentitan#866 lowrisc/opentitan#1420

Signed-off-by: Tobias Wölfel <tobias.woelfel@mailbox.org>



======Commit: 56901a87======
======Short Message======
[site] Add menu sidebar for docs
======Full Message======
[site] Add menu sidebar for docs

Add a menu to left side to indicate the current position in the
documentation tree.

Increases the site width in order to accommodate the new entry.
Remove menu and toc for narrower windows.

It only shows entries which are recognized by Hugo.
This does not include all the READMEs which are available.

Fixes lowrisc/opentitan#866 lowrisc/opentitan#1420

Signed-off-by: Tobias Wölfel <tobias.woelfel@mailbox.org>



======Commit: cd8b1e0c======
======Short Message======
[sw] Update riscv-compliance patches
======Full Message======
[sw] Update riscv-compliance patches

This is primarily to bring in a change so that the root of this repo is
added to the search path for the linker, so it picks up the
autogenerated linker script.

Hopefully this also solves some whitespace issues in the
riscv-compliance patches (which are a mix of indentation of tabs and
spaces, and of CR/LF and LF-only line endings).

Signed-off-by: Sam Elliott <selliott@lowrisc.org>



======Commit: a18fe551======
======Short Message======
[dv] Fix 2 issues in top-level mem seq
======Full Message======
[dv] Fix 2 issues in top-level mem seq

1. limit the number of mem access
2. wait until all outstanding items are done

Signed-off-by: Weicai Yang <weicai@google.com>



======Commit: 10446847======
======Short Message======
[tlul] Host adaptor timing fix
======Full Message======
[tlul] Host adaptor timing fix

- The memory interface used for the Ibex I/D side and debug module use
  confusingly named req/gnt signalling
- Despite their names, these signals are effectively just a standard
  ready/valid handshake
- Neither Ibex nor the debug module rely on gnt |-> req
- Removing the loopback of req into grant significantly eases timing in
  Ibex and is required for enabling PMP

Signed-off-by: Tom Roberts <tomroberts@lowrisc.org>



======Commit: 61c707ba======
======Short Message======
[util] Fix run-clang-format.sh
======Full Message======
[util] Fix run-clang-format.sh

Commit 15cae7a6 removed all references to `vendor` from this file, as
that commit switched to using `.clang-format` files to avoid formatting
vendored code.

Unfortunately, I removed too many references to `vendor`, and the script
to detect forgotten parentheses has been including issues in the vendor
directories where it should not have been. This fix ensures that it no
longer complains about this issue in vendored code.

Signed-off-by: Sam Elliott <selliott@lowrisc.org>



======Commit: f1d17fec======
======Short Message======
[dv/alert_handler] fix three corner cases
======Full Message======
[dv/alert_handler] fix three corner cases

1. Alert ping happened when alert is firing.
   Solution: monitor wait for alert to finish, then complete ping
   response
2. True escalation happened during escalation ping response.
   Fix: align the expected value according to the design FSM machine
3. Two classes' escalation phases assigned to same escalation signal,
   and the ending time only has one clk cycle difference.
   Solution: use realtime to record the last timing, and use that to
   correct the signal length count.

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: 313af3ce======
======Short Message======
[dv/alert_handler] improve cov
======Full Message======
[dv/alert_handler] improve cov

1. Adjust reset timing to improve FSM cov
2. Fix ":=" to ":/"

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: 57f926be======
======Short Message======
[i2c, rtl] Various FSM fixes and improvements
======Full Message======
[i2c, rtl] Various FSM fixes and improvements

1. Eliminated extra clock cycle from timing
2. Added fmt_fifo_wvalid_i and fmt_fifo_depth_i inputs to FSM
3. Enabled transistion to Idle when fmt_fifo is about to become empty
4. Fixed SDA logic during Host...Ack

Signed-off-by: Igor Kouznetsov <igor.kouznetsov@wdc.com>



======Commit: 990de69f======
======Short Message======
[i2c, rtl] Fix to a case when Stop is issued after Write
======Full Message======
[i2c, rtl] Fix to a case when Stop is issued after Write

Added a fork after PopFmtFifo state: either Continue or Idle

Signed-off-by: Igor Kouznetsov <igor.kouznetsov@wdc.com>



======Commit: b19a153d======
======Short Message======
[dv/spi_device] Increase timeout timer
======Full Message======
[dv/spi_device] Increase timeout timer

Very a few tests (< 0.1%) fail due to timeout, increase timer to fix it
Signed-off-by: Weicai Yang <weicai@google.com>



======Commit: 366af853======
======Short Message======
[usbdev/doc] Add PMOD info for testing usbdev on FPGA
======Full Message======
[usbdev/doc] Add PMOD info for testing usbdev on FPGA

The usbdev testing on the Nexys Video board requires use of a PMOD.
Add description of this card to the main documentation and the
Kicad design files.

Fixes #1653

Signed-off-by: Mark Hayter <mark.hayter@gmail.com>



======Commit: 1a1d1801======
======Short Message======
[dv] Fix top-level mem test
======Full Message======
[dv] Fix top-level mem test

Control the max outstanding accesses to avoid timeout

Signed-off-by: Weicai Yang <weicai@google.com>



======Commit: 36c41307======
======Short Message======
[rtl] Fix for #2235
======Full Message======
[rtl] Fix for #2235

Signed-off-by: Srikrishna Iyer <sriyer@google.com>



======Commit: b6520456======
======Short Message======
[dv/alert_handler] fix ping timeout with regen
======Full Message======
[dv/alert_handler] fix ping timeout with regen

Previous commit forget to gate updating ping_timeout cycle with regen.
This PR fix it: when regen is set to 0, ping timeout value won't be
updated

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: c75c6c14======
======Short Message======
[topgen] Fix flake8 lint errors
======Full Message======
[topgen] Fix flake8 lint errors

Signed-off-by: Eunchan Kim <eunchan@opentitan.org>



======Commit: 961a33b6======
======Short Message======
[dv/top] Fix chip_flash_ctrl_test timeout
======Full Message======
[dv/top] Fix chip_flash_ctrl_test timeout

Increase timeout timer

Signed-off-by: Weicai Yang <weicai@google.com>



======Commit: 1faeb3cb======
======Short Message======
[top] - hjson update
======Full Message======
[top] - hjson update

- Move pinmux use of fixed clock to io_clk

Signed-off-by: Timothy Chen <timothytim@google.com>



======Commit: 33b3b9d8======
======Short Message======
[clkmgr, top] - Add clk_aon_i, and rename other clocks
======Full Message======
[clkmgr, top] - Add clk_aon_i, and rename other clocks

- renamed clk_fixed_i to clk_io_i
- renamed clk_usb_48mhz_i to clk_usb_i
- Renaming is NOT done to individual modules, only clkmgr/rstmgr/top
- clkmgr/rstmgr are not yet making use of clk_aon_i in this commit

Signed-off-by: Timothy Chen <timothytim@google.com>



======Commit: 5b7f5de9======
======Short Message======
[dvsim] Print what cmd is executed in the log
======Full Message======
[dvsim] Print what cmd is executed in the log

At the start of the log file, the full command line is printed to
help easily debug / reproduce outside of dvsim.

Signed-off-by: Srikrishna Iyer <sriyer@google.com>



======Commit: 7b7e47aa======
======Short Message======
[style-lint] Fix a couple of nitty style errors
======Full Message======
[style-lint] Fix a couple of nitty style errors

Signed-off-by: Michael Schaffner <msf@opentitan.org>



======Commit: ebeb7969======
======Short Message======
[dvsim] Specify encoding of opened files as UTF-8
======Full Message======
[dvsim] Specify encoding of opened files as UTF-8

In private CI we get the following error:

```
Traceback (most recent call last):
  File "util/dvsim/dvsim.py", line 539, in <module>
    main()
  File "util/dvsim/dvsim.py", line 520, in main
    cfg.deploy_objects()
  File "/azp/agent/_work/1/s/util/dvsim/SimCfg.py", line 412, in deploy_objects
    super().deploy_objects()
  File "/azp/agent/_work/1/s/util/dvsim/FlowCfg.py", line 442, in deploy_objects
    Deploy.deploy(self.deploy)
  File "/azp/agent/_work/1/s/util/dvsim/Deploy.py", line 506, in deploy
    dispatch_items(queued_items[0:num_slots])
  File "/azp/agent/_work/1/s/util/dvsim/Deploy.py", line 399, in dispatch_items
    item.dispatch_cmd()
  File "/azp/agent/_work/1/s/util/dvsim/Deploy.py", line 582, in dispatch_cmd
    super().dispatch_cmd()
  File "/azp/agent/_work/1/s/util/dvsim/Deploy.py", line 179, in dispatch_cmd
    f.write("{}={}\n".format(var, self.exports[var]))
UnicodeEncodeError: 'ascii' codec can't encode characters in position 2194-2195: ordinal not in range(128)
```

It looks like some environment variable is having a non-ASCII character
in it. That's actually not forbidden, so let's be explicit about the
encoding when opening files, a best practice we follow in other scripts
equally.

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: 09a5791b======
======Short Message======
[pwrmgr] - Fix low power entry hint clearing
======Full Message======
[pwrmgr] - Fix low power entry hint clearing

Signed-off-by: Timothy Chen <timothytim@google.com>



======Commit: 110fa29a======
======Short Message======
[clkmgr] - Minor clock and power updates/fixes to enable integration
======Full Message======
[clkmgr] - Minor clock and power updates/fixes to enable integration

Signed-off-by: Timothy Chen <timothytim@google.com>

[clkmgr] - Flatten the hierarchical clock gating since this makes FPGA unhappy.

- I personally prefer hierarhical gating, but it is not absolutely critical here.

Signed-off-by: Timothy Chen <timothytim@google.com>



======Commit: 2c668f7e======
======Short Message======
[dv] This fixes a padctrl reset issue in the chip level tb
======Full Message======
[dv] This fixes a padctrl reset issue in the chip level tb

Signed-off-by: Michael Schaffner <msf@google.com>



======Commit: fc4be79e======
======Short Message======
[prim_flash] - Breakup large input fanout
======Full Message======
[prim_flash] - Breakup large input fanout

- On fpga's, the prim_flash introduces a huge fanout from the input control
  signals to the various brams. This causes a giant delay and causes
  issues for timing.
- This commit breaks the fanout to more manageable values
- Ideally, this should be broken off separately into prim_xilinx_flash.sv, however, the extra latency immediately caused errors on the processor that would have been difficult to debug in an fpga environment. As a result, the modification of behavior is made to both for now.

Signed-off-by: Timothy Chen <timothytim@google.com>



======Commit: 712e06f2======
======Short Message======
[tlul] - Update to prevent x on d_error
======Full Message======
[tlul] - Update to prevent x on d_error

The scenario is as follows:
- A transaction is accepted (reqfifo is updated)
- reqfifo attributes are used in the next cycle to set payload such as d_error
- However, if downstream takes more than 1 cycle to return, the response during
  that cycle is unknown, and the assertion fails.

This stall is quite likely to happen in a real system, so d_error is now also
qualified with d_valid like the return data.

Signed-off-by: Timothy Chen <timothytim@google.com>



======Commit: fc5cd996======
======Short Message======
[dv/alert_handler] separate esc into two categories
======Full Message======
[dv/alert_handler] separate esc into two categories

Separate escalation integrity error into two categories:
1. standalone escalation resp error
2. escalation resp error during esc_p/n or ping

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: 783edaf4======
======Short Message======
[dv/uart] Fix a corner case tx_watermark mismatch
======Full Message======
[dv/uart] Fix a corner case tx_watermark mismatch

Only add delay to update tx_watermark when txrst is set
Signed-off-by: Weicai Yang <weicai@google.com>



======Commit: 7934f4c6======
======Short Message======
[sw] Refresh riscv-compliance patches
======Full Message======
[sw] Refresh riscv-compliance patches

This is to pick up the changes to the interrupt vector symbol and the
assembly file location.

Signed-off-by: Sam Elliott <selliott@lowrisc.org>



======Commit: ebd56210======
======Short Message======
[chip dv] Fix # of seeds on CSR tests
======Full Message======
[chip dv] Fix # of seeds on CSR tests

- Updated chip sim cfg hjson to reuse the common csr_tests.hjson
- Fixed CSR and MEM tests to run with 20 seeds each

Signed-off-by: Srikrishna Iyer <sriyer@google.com>



======Commit: fe1f8816======
======Short Message======
[chip dv] Get coremark working again
======Full Message======
[chip dv] Get coremark working again

This PR provides fixes to get coremark working again in chip level DV environment.

Signed-off-by: Srikrishna Iyer <sriyer@google.com>



======Commit: 09063cc3======
======Short Message======
[dv/alert_handler] scb improvement to support accurate count
======Full Message======
[dv/alert_handler] scb improvement to support accurate count

1. increase alert_accum_cnt and esc_cycle_cnt in the negedge clk to avoid
race when reading and increasing the register at the same time
2. fix clear register takes one clk cycle to actually clear the counts
3. fix class_clr register does not clear interrupt timeout counter

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: f09a4fc3======
======Short Message======
[uart/dv] Fix a corner case tx_watermark mismatch
======Full Message======
[uart/dv] Fix a corner case tx_watermark mismatch

Add delay to update tx_watermark after reset txfifo

Signed-off-by: Weicai Yang <weicai@google.com>



======Commit: 34a406c3======
======Short Message======
[HMAC] Fix indentation
======Full Message======
[HMAC] Fix indentation

No functional change.

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: 02ac5b12======
======Short Message======
[tlul_adapter_sram] Correct tlul error cases for new maskfifo
======Full Message======
[tlul_adapter_sram] Correct tlul error cases for new maskfifo

Signed-off-by: Michael Schaffner <msf@google.com>



======Commit: ea3cd4c1======
======Short Message======
[topgen] Fix relative paths in C header generation
======Full Message======
[topgen] Fix relative paths in C header generation

The `README.md` file in `hw/top_earlgrey` recommends running topgen from
`hw/top_earlgrey`, which fails with this error message:

```
Traceback (most recent call last):
  File "../../util/topgen.py", line 676, in <module>
    main()
  File "../../util/topgen.py", line 659, in main
    rel_header_path = cheader_path.relative_to(SRCTREE_TOP)
  File "/usr/lib64/python3.8/pathlib.py", line 899, in relative_to
    raise ValueError("{!r} does not start with {!r}"
ValueError: 'sw/autogen/top_earlgrey.h' does not start with '../..'
```

In this case, SRCTREE_TOP resolves to `../..`, and `cheader_path` to
`sw/autogen/top_earlgrey.h`. The `relative_to` comparision, however,
needs an absolute path to work properly, as does `subprocess.run()`
below.

Bug report by Stefan Wallentowitz.

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: 6c0679a0======
======Short Message======
[doc] Fix spiflash path to fpga binary in docs
======Full Message======
[doc] Fix spiflash path to fpga binary in docs

Signed-off-by: Michael Schaffner <msf@google.com>



======Commit: 890e0517======
======Short Message======
[dv/alert_handler] accum_cnt saturate fix and cov
======Full Message======
[dv/alert_handler] accum_cnt saturate fix and cov

Fix dv tb saturate accum_cnt, also add coverage to ensure this case is
covered

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: bc6aabd2======
======Short Message======
[chip dv] Enable parallel meson invocation
======Full Message======
[chip dv] Enable parallel meson invocation

This update enables parallel meson invocations from simulations running
in parallel, effectively fixing #1708.

It uses the `flock` utility to enable this.

Signed-off-by: Srikrishna Iyer <sriyer@google.com>



======Commit: f732675c======
======Short Message======
[tlul_adapter_sram] Fix mask width
======Full Message======
[tlul_adapter_sram] Fix mask width

Signed-off-by: Michael Schaffner <msf@google.com>



======Commit: 031fe277======
======Short Message======
[dv/alert_handler] Fix regression err
======Full Message======
[dv/alert_handler] Fix regression err

Forever seq causes stress_all to have multiple of the non-blocking seq,
this PR will disable all the forks before exiting current sequence

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: f6963d2e======
======Short Message======
[util/reggen] Fix broken links in README
======Full Message======
[util/reggen] Fix broken links in README

Signed-off-by: Pirmin Vogel <vogelpi@lowrisc.org>



======Commit: 3fc2ce42======
======Short Message======
[dv] Fix failures in test csr_mem_rw_with_rand_reset
======Full Message======
[dv] Fix failures in test csr_mem_rw_with_rand_reset

1. Disable interrupt check for gpio
2. Solve hmac mem read returning d_error=1
3. Add csr excl for hmac reg err_code as it's affected by mem write
4. Increase timeout value
Signed-off-by: Weicai Yang <weicai@google.com>



======Commit: 3c24e7c4======
======Short Message======
[clkmgr] Fix core name
======Full Message======
[clkmgr] Fix core name

The clkmgr_pkg core file could overwrite the rstmgr_pkg core file
depending on how fusesoc happens to pick up files, leading to a broken
build.

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: 79408a20======
======Short Message======
[sw] Fix PASS!, FAIL! signatures for CI
======Full Message======
[sw] Fix PASS!, FAIL! signatures for CI

Signed-off-by: Srikrishna Iyer <sriyer@google.com>



======Commit: ae19bec3======
======Short Message======
[dvsim] small fix on css style
======Full Message======
[dvsim] small fix on css style

Previous style does not wrap text around

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: 75639fe1======
======Short Message======
[sw, dif_uart] Return enum error codes instead of bool
======Full Message======
[sw, dif_uart] Return enum error codes instead of bool

This change keeps dif_uart conformant with the DIF guidlines outlined
in the README file.

Signed-off-by: Silvestrs Timofejevs <silvestrst@lowrisc.org>



======Commit: a0b0c4c4======
======Short Message======
[sw, uart] Fix ConfigTest NullArgs test
======Full Message======
[sw, uart] Fix ConfigTest NullArgs test

This test was testing wrong API (dif_uart_init instead of
dif_uart_configure).

Signed-off-by: Silvestrs Timofejevs <silvestrst@lowrisc.org>



======Commit: 5a90f7d4======
======Short Message======
[sw/dif] Fix UART *irq_state_clear
======Full Message======
[sw/dif] Fix UART *irq_state_clear

- Current method does a read-modify-write to the INTR_STATE register
which ends up clearing more interrupt bit than required. This change
fixes that by writing 1 only to the given interrupt bit.

Signed-off-by: Srikrishna Iyer <sriyer@google.com>



======Commit: 9286ee64======
======Short Message======
Add extern declarations for mmion_region_write_only_set*32() functions.
======Full Message======
Add extern declarations for mmion_region_write_only_set*32() functions.

These functions were introduced in #2047 without the corresponding
`extern` declarations in `mmio.c`. This change fixes that.

Signed-off-by: Alphan Ulusoy <alphan@google.com>



======Commit: 837c7964======
======Short Message======
[util/tlgen] Fix flake8 lint errors
======Full Message======
[util/tlgen] Fix flake8 lint errors

Fixed flake8 python lint errors for tlgen util.

Signed-off-by: Eunchan Kim <eunchan@opentitan.org>



======Commit: 0bd75666======
======Short Message======
[reggen] Flake8 lint fix for reggen
======Full Message======
[reggen] Flake8 lint fix for reggen

As flake8 is chosen for python linter in OT, ran flake8 to check reggen
library. A few python codes in the reggen wasn't checked yet (gen_dv,
gen_fpv).

Signed-off-by: Eunchan Kim <eunchan@opentitan.org>



======Commit: 049eeade======
======Short Message======
[topgen] Check valid pairs of inter-module type/act
======Full Message======
[topgen] Check valid pairs of inter-module type/act

Adding validation code to check if inter_signal has valid pair of type
and act.

This commit fixes #2081

Signed-off-by: Eunchan Kim <eunchan@opentitan.org>



======Commit: 920b48f3======
======Short Message======
[prim/secded] Revise comment
======Full Message======
[prim/secded] Revise comment

Wrong information was in the comment in secded generation script.
@tjaychen pointed out those errors. They are revised now.

Signed-off-by: Eunchan Kim <eunchan@opentitan.org>



======Commit: 2b2e3637======
======Short Message======
[dv/spi_device] Fix csr test failure and intr test
======Full Message======
[dv/spi_device] Fix csr test failure and intr test

1. Exclude writing wprt/rprt
2. Add more delay to check interrupt
Signed-off-by: Weicai Yang <weicai@google.com>



======Commit: e5a52894======
======Short Message======
[doc] Linked DV plan & testplan in HW stages
======Full Message======
[doc] Linked DV plan & testplan in HW stages

- fixes #2068

Signed-off-by: Srikrishna Iyer <sriyer@google.com>



======Commit: 1d17b122======
======Short Message======
[fpv] Fix compile error
======Full Message======
[fpv] Fix compile error

Add a macro to wrap around UVM only items in tlul_assert to avoid FPV
compile error

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: 75e3e65c======
======Short Message======
[dv] Add excl for rstmgr, pwrmgr and fix top-level csr test
======Full Message======
[dv] Add excl for rstmgr, pwrmgr and fix top-level csr test

1. Add excl for rstmgr, pwrmgr
2. Update dv_base_reg to allow RO type for regwen
3. Add extra delay in apply_reset to allow rstmgr release reset for
other IPs
Signed-off-by: Weicai Yang <weicai@google.com>



======Commit: 7d38bf90======
======Short Message======
[dv] Allow dv_lib-based sequences to have different RSP/REQ types
======Full Message======
[dv] Allow dv_lib-based sequences to have different RSP/REQ types

Most UVM sequences just send items and don't receive any response:

    start_item(req);
    `DV_CHECK_RANDOMIZE_FATAL(req)
    finish_item(req);

However, sometimes a driver needs to report what happened. For
example, there might have been some sort of error on the bus which
will affect the next sequence item to send. In this case, the driver
calls

    seq_item_port.item_done(rsp);

and the sequencer's code looks like

    start_item(req);
    `DV_CHECK_RANDOMIZE_FATAL(req)
    finish_item(req);
    get_response(rsp);
    // Do something based on rsp...

But what type is rsp? Sometimes, it's enough to send the request item
back. This works nicely when the sequence items are actually
pipelined (so that the sequence can figure out what item finished).
Sometimes, however, you might want to use a different type from the
request type - it's a bit of a bodge just to add another field to the
request for a "back channel".

To support this, many UVM classes are parameterised by "REQ" and
"RSP": the type of request and response item, respectively. Some of
the dv_lib code supported this already (dv_base_seq), but the
sequencer and driver base classes didn't.

This patch adds that support, defaulting to RSP = REQ. The ordering of
parameters looks a little odd, but it seems that lots of OpenTitan
code sets parameters by position, rather than name, so we have to add
any new optional parameter at the end of the list.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 6cc20110======
======Short Message======
[dvsim] PEP8 fixes in dvsim
======Full Message======
[dvsim] PEP8 fixes in dvsim

These should cause no functional change. Detailed list of code changes:

  - Get rid of 'import *': this defeats static analysis tools. Don't
    do it.

  - Add newline after colon in "if foo: bar"

  - Use 'is' to check for equality with boolean literals

  - Don't catch exceptions when running os.system in Deploy.py: the
    os.system function returns the program's exit code.

  - Delete some variables that are written but not read.

  - Minor whitespace changes (missing blank lines between functions;
    weird indentation; missing space after '#')

  - Delete autogenerated module docstrings (they didn't contain any
    information. Maybe it would be good to have a docstring, but at
    the moment it's just noise).

  - Don't use \ as a line continuation character. Use parentheses if
    necessary.

  - Replace code like "foo" + \ "bar" with just "foo" "bar" (Python
    concatenates adjacent string literals just like C). (I didn't do
    this everywhere, but it happened a lot next to the backslash
    continuations, so I got rid of the unnecessary '+' then).

  - Replace "not foo in bar" with "foo not in bar"

  - Use raw strings for regexes with backslashes (r'a\+', not 'a\+')

With these changes, you can run:

  find util/dvsim -name '*.py' | xargs flake8

and see no errors.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: ec62b3e0======
======Short Message======
[dvsim] Fix PEP8 error and slightly tidy code in testplan_utils.py
======Full Message======
[dvsim] Fix PEP8 error and slightly tidy code in testplan_utils.py

The PEP8 violation is comparing types for equality in this line:

         elif (type(list1[key]) == type(list2[key])):

Python tends to go for duck typing, so this approach isn't
particularly Pythonic in general, but I've tried to keep the same
logic for now at least.

Since fixing this needed a bit of surgery on the code anyway, I've
used 'continue' to avoid a level of indentation and added some
comments explaining how the logic works.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 5dbaee7d======
======Short Message======
[dvsim] Correct bug in regression creation in dvsim's Modes.py
======Full Message======
[dvsim] Correct bug in regression creation in dvsim's Modes.py

The create_regressions function is a static method, so there's no
'self' available. I think this should have been called on the
regression object.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 07372da7======
======Short Message======
[sw] Add a wfi to the bootrom irq handlers
======Full Message======
[sw] Add a wfi to the bootrom irq handlers

Rather than spin endlessly, filling the Verilog instruction trace with
garbage c.j instructions, an IRQ in the bootrom will wfi, making it easy
to debug the cause of an unhandled interrupt by looking at the
instruction trace.

Signed-off-by: Miguel Young de la Sota <mcyoung@google.com>



======Commit: 0ab7fb72======
======Short Message======
[sw] Update to flash_ctrl test to ensure DV build runs
======Full Message======
[sw] Update to flash_ctrl test to ensure DV build runs

- This is a temporary commit to enable flash_ctrl test to run in
  DV environments.  This commit will be abandoned when the real fix
  lands
- see #1974

Signed-off-by: Timothy Chen <timothytim@google.com>



======Commit: 15cae7a6======
======Short Message======
[sw] Avoid clang-format-ing Vendored Software
======Full Message======
[sw] Avoid clang-format-ing Vendored Software

We should not be re-formatting vendored software, even accidentally, as
we want vendored software to be as close to the original as possible.

This patch adds `.clang-format` files to the `vendor` directories, which
disables formatting of any code contained in those directories.

This patch also removes all `.clang-format` files from vendored
repositories, as these are 'closer' to the vendored files so can
re-enable formatting for the vendored repositories.

This change also ensures that `.clang-format` files are not copied into
the documentation website.

Signed-off-by: Sam Elliott <selliott@lowrisc.org>



======Commit: 529134ba======
======Short Message======
[topgen] flake8 lint fix
======Full Message======
[topgen] flake8 lint fix

Ran flake8 to check topgen/*.py and fixed the errors

Signed-off-by: Eunchan Kim <eunchan@opentitan.org>



======Commit: 06f78093======
======Short Message======
[usb/doc] Revise documenation
======Full Message======
[usb/doc] Revise documenation

This commits revises the documentation of the USB device to mainly:
- Add a note that the USB device is a comportable IP.
- Add references to the USB 2.0 specification where suitable.
- Harmonize spelling.
- Harmonize usage of terms describing the same thing (e.g. Available Buffer
  FIFO & AV FIFO, Received Buffer FIFO & Receive FIFO, buffer ID & buffer
  number)
- Add missing definitions of acronyms.
- Fix broken references to register descriptions.

Signed-off-by: Pirmin Vogel <vogelpi@lowrisc.org>



======Commit: 2bc2f010======
======Short Message======
Use StrictMock in MmioTest
======Full Message======
Use StrictMock in MmioTest

There are three types of mock objects in googlemock: nice, naggy, and
strict. The difference between them is the way they handle
_uninteresting_ mock method calls. Uninteresting calls are calls to mock
methods that don't have any `EXPECT_CALL` specifications. `NiceMock`
silently ignores such calls, `NaggyMock` prints warnings while
`StrictMock` makes all uninteresting calls failures.

A mock object is currently naggy by default, which can potentially hide
some issues in DIF libraries because MMIO accesses without
corresponding `EXPECT_CALL`s do not cause tests to fail. This change
makes the mock object in `MmioTest` a `StrictMock` so that such accesses
will cause tests to fail.

Signed-off-by: Alphan Ulusoy <alphan@google.com>



======Commit: a24497bc======
======Short Message======
[util] vendor.py now re-clones by default
======Full Message======
[util] vendor.py now re-clones by default

This commit adds the `--update` command line flag to `util/vendor.py`.

Before this change, the vendor tool would always download the revision
specificed in the `.vendor.hjson` file, and if that pointed to a branch,
the repository would be updated with all the upstream changes.

After this change, users have to explicitly pass `--update` to get this
behaviour.

Now, by default, the vendor tool will re-clone the upstream repository
as specified in the `.lock.hjson` file, and apply any new patches or
file exclusions to what should be the existing version of the
repository. This means you can easily re-vendor existing versions of
repositories without having to integrate upstream changes.

Signed-off-by: Sam Elliott <selliott@lowrisc.org>



======Commit: a863a283======
======Short Message======
[sw, tock] Add the option to build Tock locally
======Full Message======
[sw, tock] Add the option to build Tock locally

Adds a -T flag to meson_init.sh that causes Tock to build from
sw/device/tock/tock_local rather than using git dependencies. The entire
sw/device/tock/tock_local directory is covered under the .gitignore so
one can freely checkout and work on Tock in this directory.

The default behavior remains the same. This is only a quality of life
change for those who want to do local Tock development. The tock_local
folder introduced by this change is empty, and meson will not build out
of this directory unless the -T flag is passed to meson_init.sh.

Signed-off-by: Jon Flatley <jflat@google.com>



======Commit: 45a18313======
======Short Message======
[pwrmgr] Various clean-up and updates
======Full Message======
[pwrmgr] Various clean-up and updates

- fixed missing pre-sync flops
- various typo fixes
- comments from #1924

Signed-off-by: Timothy Chen <timothytim@google.com>



======Commit: b61ef1b7======
======Short Message======
[sw] Fix for DV logging
======Full Message======
[sw] Fix for DV logging

SW logging for DV is broken at TOT. See #2026 for details.

Signed-off-by: Srikrishna Iyer <sriyer@google.com>



======Commit: 163050b9======
======Short Message======
[pwrmgr] - pwrmgr integration into top_earlgrey
======Full Message======
[pwrmgr] - pwrmgr integration into top_earlgrey

Even though pwrmgr is integrated and connected, it does literally
nothing right now since the rstmgr is not present.

It simply exercises a power-up routine without impacting any function
in the design.

This PR also makes several small fixes that were discovered during integration.

Signed-off-by: Timothy Chen <timothytim@google.com>



======Commit: 37d4fbeb======
======Short Message======
[topgen] Auto-format Generated top_earlgrey.h
======Full Message======
[topgen] Auto-format Generated top_earlgrey.h

CI complains if these files are not formatted, so after generating the
final C versions, we auto-format them. This means any committed versions
should not generate linting errors without the template having to
understand and account for formatting conventions.

Signed-off-by: Sam Elliott <selliott@lowrisc.org>



======Commit: 0938b335======
======Short Message======
[topgen] Add Module Name When Prefixing Signals
======Full Message======
[topgen] Add Module Name When Prefixing Signals

This commit adds the module name into the signal information when
generating top_earlgrey.gen.hjson. This makes it much easier to, for
example, map a PLIC interrupt signal back to the module it
corresponds to, without having to split the signal name again.

Signed-off-by: Sam Elliott <selliott@lowrisc.org>



======Commit: 193ee382======
======Short Message======
[CI] Re-enable RISC-V Conformance suite CI.
======Full Message======
[CI] Re-enable RISC-V Conformance suite CI.

Fixes #2012

Signed-off-by: Greg Chadwick <gac@lowrisc.org>



======Commit: 12871046======
======Short Message======
[sw] Generate 32-bit and 64-bit .vmem
======Full Message======
[sw] Generate 32-bit and 64-bit .vmem

To enable 64-bit width flash we need 64-bit .vmem. This updates the
build system to generate 64-bit .vmem files on top the existing 32-bit
.vmem files. A new naming scheme is introduced .32.vmem and .64.vmem for
the two vmem bit-widths. Relevant paths have been updated to deal with
this new naming.

Fixes #1986

Signed-off-by: Greg Chadwick <gac@lowrisc.org>



======Commit: d14b37a8======
======Short Message======
Update lowrisc_ibex to lowRISC/ibex@a3a1f9f
======Full Message======
Update lowrisc_ibex to lowRISC/ibex@a3a1f9f

Update code from upstream repository
https://github.com/lowRISC/ibex.git to revision
a3a1f9f40a73b3494de378f38d587c31d4ef9da9

* [rtl] Fix icache PMP error handling (Tom Roberts)
* [memutils] Add support for > 32b memories (Tom Roberts)
* [dv] fix PMP compile option, update basic pmp test (Udi)
* Fix rst syntax (Michael Gielda)
* Update google_riscv-dv to google/riscv-dv@42264b7 (Udi)
* update yaml file for riviera (Dawid Zimonczyk)
* Bugfix: Generate Erroneous Illegal Insn (ganoam)
* Add clocking blocks to the ibex_icache_core_agent (Rupert Swarbrick)
* Fix variable names in icache scoreboard code (Rupert Swarbrick)
* Fix scratch-root in icache/dv/Makefile (Rupert Swarbrick)
* [bitmanip] Add ZBT Instruction Group (ganoam)
* Teach check_tool_requirements to check for edalize versions (Rupert
  Swarbrick)
* Rename ibex_icache_agent -> ibex_icache_core_agent (Rupert
  Swarbrick)
* Minimal code for the 'core agent' in icache UVM testbench (Rupert
  Swarbrick)
* Add a simple Makefile to wrap running dvsim for icache tests (Rupert
  Swarbrick)
* Switch from 'bool' to 'int' parameters in fusesoc core files (Rupert
  Swarbrick)
* [ci] Fix multi-config CI (Greg Chadwick)
* [lint] Add waiver for RV32B parameter (Greg Chadwick)
* Add RV32B parameter to ibex_core_tracing/ibex_riscv_compliance (Greg
  Chadwick)
* Clarifications in icache detailed documentation (Rupert Swarbrick)
* [rtl] Add fixed time execution of branches (Tom Roberts)
* [dv] fix timing issue in ebreakmu_test (Udi)
* Initial icache testplan (Rupert Swarbrick)
* Fill out an initial DV plan for the icache (Rupert Swarbrick)
* [dv] Remove IUS support (Greg Chadwick)
* [dv] Fix running on LSF (Udi)

Signed-off-by: Tom Roberts <tomroberts@lowrisc.org>



======Commit: 6902211d======
======Short Message======
[sw, dif_uart] Introduce public FIFO size constant
======Full Message======
[sw, dif_uart] Introduce public FIFO size constant

This constant is useful for the DIF UART library as well as the unittest.
The previous separate RX and TX macros have been merged into one, as
there is no indication that these FIFOs are ever intended to differ in
size.

Signed-off-by: Silvestrs Timofejevs <silvestrst@lowrisc.org>

dif_uart fixup!

Signed-off-by: Silvestrs Timofejevs <silvestrst@lowrisc.org>



======Commit: d4b7b50c======
======Short Message======
[ci] Temporarily disable risc-v compliance CI
======Full Message======
[ci] Temporarily disable risc-v compliance CI

Disabling until #2012 is fixed.

Signed-off-by: Greg Chadwick <gac@lowrisc.org>



======Commit: 752f06d7======
======Short Message======
[dv] Update xcelium option to fix compile error
======Full Message======
[dv] Update xcelium option to fix compile error

Need this [PR](https://github.com/lowRISC/ibex/pull/796) at ibex to be
vendored in
Signed-off-by: Weicai Yang <weicai@google.com>



======Commit: f743b445======
======Short Message======
[dv/rv_timer] fix nighly regression failure
======Full Message======
[dv/rv_timer] fix nighly regression failure

1.Constraints the cfg settings to avoid timeout
2.Fix update timer_v on the fly, need to reset counter once the value is
updated

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: de344b13======
======Short Message======
[doc/rv_plic] fix broken doc link
======Full Message======
[doc/rv_plic] fix broken doc link

Add back rv_plic spec and DV documentation links

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: 6c05c51d======
======Short Message======
[spi_device] Remove latches
======Full Message======
[spi_device] Remove latches

Problem:

    SPI TXF state machine has had latches inside.

The state machine is coded in a way based on the state machine table
described in the specification. The last part in `StPush` state is to
move to `StUpdate` based on the condition left over (fifo_ready &&
cnt_eq_end). Mistakenly, the condition is added as `else if`. It should
be `else` to eliminate the latches. The condition is matched to what
left over anyway.

The state machine is fixed to have `else` rather than `else if` now.

This is related to #2001

Signed-off-by: Eunchan Kim <eunchan@opentitan.org>



======Commit: d4d5d2f3======
======Short Message======
[lint] Fix several style-lint warnings
======Full Message======
[lint] Fix several style-lint warnings

Signed-off-by: Michael Schaffner <msf@opentitan.org>



======Commit: 09b15460======
======Short Message======
[fpv/csr_assertion] Improve csr assertion script
======Full Message======
[fpv/csr_assertion] Improve csr assertion script

Fix a few errors in csr assertion generator
Clean up redundant logic
Add more support for special types like W1C, W0C,t WO, RO
Add csr asserts for pinmux

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: dbd19d6a======
======Short Message======
[aes/rtl] Fix lint warnings
======Full Message======
[aes/rtl] Fix lint warnings

Signed-off-by: Pirmin Vogel <vogelpi@lowrisc.org>



======Commit: a3a5d798======
======Short Message======
[ci] Reactivate riscv-compliance tests
======Full Message======
[ci] Reactivate riscv-compliance tests

Fixes #1181

Signed-off-by: Greg Chadwick <gac@lowrisc.org>



======Commit: b22fb105======
======Short Message======
Update riscv_compliance to riscv/riscv-compliance@5a978cf
======Full Message======
Update riscv_compliance to riscv/riscv-compliance@5a978cf

Update code from upstream repository https://github.com/riscv/riscv-
compliance.git to revision 5a978cfd444d5e640150d46703deda99057b2bbb

* Restructure (riscv/riscv-compliance#101) (Neel Gala)
* Update ChangeLog (Neel Gala)
* updated ChangeLog (Neel Gala)
* fixes issue riscv/riscv-compliance#95 (Neel Gala)
* riscv-test-suite/rv64im/Makefrag: remove duplicate REMUW in value of
  variable rv64im_sc_tests (Daniel S. Wilkerson)
* riscv-test-suite/rv64i/Makefrag: remove duplicate SRAIW in value of
  variable rv64i_sc_tests (Daniel S. Wilkerson)
* removed the .pdf with version number (Allen Baum)
* minor typographical corrections (Allen Baum)
* Adding the jpg of the diagram included in the testformatspec doc
  (Allen Baum)
* Adding a prebuilt version of the testspecformat (Allen Baum)
*     * typo grammatical, and consistency fixes (Allen Baum)
*        * typos fixed        * added RVTEST_BASEUPD macro        *
  added explanations for each macro        * clarified restrictions on
  #ifdefs        * added comment that test cases with identical
  conditions should be combined into a single case        * documented
  that test case first parameter should match the #ifdef parameter
  that precedes it (Allen Baum)
* added missing parameters to BASEUPD macro (Allen Baum)
* * modified macro names to conformn to riscof naming convention of
  model specific vs. pre-defined * add more complete list of macros,
  their uses, parameters, and whether they are required or optional *
  minor structural changes (moving sentences, renumbering) and typo
  fixes * clarified impact of debug macros * clarified how SIGUPD and
  BASEUPD must be used * remove section about test taxonomy, binary
  tests, emulated ops * clarify/fix  boundary between test target and
  framework responsibilities   (split test target into test target and
  test shell) * remove To Be discussed items that have been discussed
  * remove default case condition; if conditions are unchanged, part
  of same case *  minor grammatical changes related to the above
  (Allen Baum)
* fixed some references that should have been changed, added IO_WRITE
  to list of macros (Allen Baum)
* updated history with all the changes (Allen Baum)
* fixed the appendix so it appears in the TOC (Allen Baum)
* removed references to address in signature, moved note about
  multiple test cases in a test closer to definition fixed cut/paste
  error in example of test pool changed case of test subdirectoies to
  be all caos for primar extensions and architectures, camel-case for
  Z-extensions changed test example to match new macros, including
  ifdefs (Allen Baum)
* Minor formatting fixes (Allen Baum)
* More grammar, spelling corrections and clarifications, minor
  formatting changes. (Allen Baum)
* yet more grammatical fixes and clarifications add ToBeDiscussed
  items for emulated ops and binary tests (Allen Baum)
* minor grammer updates (Allen Baum)
* Update spec/TestFormatSpec.adoc (Allen Baum)
* removed ambiguity of framework functionality: it will insert test
  part names and version numbers and conmpare signatures. (Allen Baum)
* Changed  signature format to fixed maxsize physical addr:32b data in
  COMPLIANCE_DATA_BEGIN/END range. (Allen Baum)
* minor spelling, wording corrections (Allen Baum)
* Changes to match riscof implementation of macros (Allen Baum)
* spelling fixes and To Be Discussed additions and clarifications
  (Allen Baum)
* gitignore now ignores Macintosh invisible .DS_STore files ChangeLog
  lists all the changes made TestPsecFormat updated to v1.2 with
  numerous granmmer/spelling corrections,  updates to changes that
  have been decided, new directory structure,  new test macros,
  updated signature format, added clarifications, examples,  future
  work, and notes that this is still a work in progress and does not
  reflect the current state of the test repository. (Allen Baum)
* Fix Ibex target following parallel changes (Tom Roberts)
* Ignore case when comparing signature outputs (Xiretza)
* Support F extension on RV32 sail-riscv-c. (Prashanth Mundkur)
* Correct a typo in README (Felix Yan)
* Document the usage of Parallel execution (eroom1966)
* Add Parallel make for supported targets (eroom1966)
* Fix issues riscv/riscv-compliance#84 riscv/riscv-compliance#76
  (eroom1966)
* Update to riscvOVPsim (eroom1966)
* Update of riscv-ovpsim (eroom1966)
* fix IO behavior for verbose logging (eroom1966)
* source code files for improved coverage (eroom1966)
* Added coverage report information (eroom1966)
* HVB update on jalr (eroom1966)
* Add HVB new enhanced coverage tests (eroom1966)
* Fix for issue riscv/riscv-compliance#67 (eroom1966)
* Restructured RV32I to move Zicsr and Zifencei into their own suites
  (eroom1966)

Signed-off-by: Greg Chadwick <gac@lowrisc.org>



======Commit: a23672aa======
======Short Message======
[sw] Add patch_repo for riscv-compliance
======Full Message======
[sw] Add patch_repo for riscv-compliance

The patch_repo has the latest version of riscv-compliance with a changed
OpenTitan target that works with the latest SW stack.

Signed-off-by: Greg Chadwick <gac@lowrisc.org>



======Commit: 30ed4b0b======
======Short Message======
[uvmdvgen] Automate checklist gen, fixes
======Full Message======
[uvmdvgen] Automate checklist gen, fixes

- This PR automates the generate of the template checklist for a new IP
along with the DV bench.
  - If the checklist already exists, then it gets skipped.
- In addition, it fixes the following:
  - Moved the generated DV plan from <ip>/doc/<ip>_dv_plan.md -->
  <ip>/doc/dv_plan/index.md
  - Made the move for entropy_src DV Plan to be compliant with this
  - Fixed a missing `% endif` in the index.md.tpl that was causing mako
  exception to be thrown

Signed-off-by: Srikrishna Iyer <sriyer@google.com>



======Commit: 5ba95d73======
======Short Message======
[sw, dif_uart] Fix an issue introduced in 5f0f8284
======Full Message======
[sw, dif_uart] Fix an issue introduced in 5f0f8284

RX mask and offset was used instead of the TX in the
dif_uart_watermark_tx_set function.

Signed-off-by: Silvestrs Timofejevs <silvestrst@lowrisc.org>



======Commit: 7a22d533======
======Short Message======
[pwrmgr] Updates based on comments
======Full Message======
[pwrmgr] Updates based on comments

- Address cdc_pulse to remove STA warnings
- Fix intent issues
- Fix ordering of hjson and swaccessibility inconsistencies

Signed-off-by: Timothy Chen <timothytim@google.com>



======Commit: 160b13be======
======Short Message======
[dv/alert_handler] improve multi class and alert in scb
======Full Message======
[dv/alert_handler] improve multi class and alert in scb

Enable multiple alert and multiple class enable at the same time.
SCB supports esc signals triggered from different interrupt classes
Minor testplan fix to reflect the changes

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: 87db62d6======
======Short Message======
[dv] improve rv_timer gpio coverage
======Full Message======
[dv] improve rv_timer gpio coverage

Increase seeds for rv_timer to get 100% coverage
Fix gpio scb typo to collect a_data instead of d_data

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: 7dddad56======
======Short Message======
[dv] Add begin...end around if statement in macro
======Full Message======
[dv] Add begin...end around if statement in macro

Found this didn't work as the `else` paired with the `if` in downcast
```
  if (...) `downcast(...)
  else     `downcast(...)
```
We have a similar mismatch in our code here.
https://github.com/lowRISC/opentitan/blob/master/hw/dv/sv/cip_lib/cip_base_vseq.sv#L330

This problem isn't easy to debug and I feel it's better to avoid it by
adding `begin...end` in the macro

Signed-off-by: Weicai Yang <weicai@google.com>



======Commit: ecc70ea3======
======Short Message======
[dv/top] Fix csr rw test
======Full Message======
[dv/top] Fix csr rw test

Fix top_earlgrey csr rw test:
1. Exclude certain registers from rv_plic
2. Use top_level alert_handler.hjson
3. Enable register support w1c and w0c

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: f88ae75d======
======Short Message======
[doc] Hardware breakpoints are now supported
======Full Message======
[doc] Hardware breakpoints are now supported

Remove a paragraph about hardware breakpoints not being supported, which
was fixed in #1577.

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: 98854dd2======
======Short Message======
[tlul] Add tlul_adapater_host
======Full Message======
[tlul] Add tlul_adapater_host

tlul_adapter_host was taken from rv_dv but is a generic adapter that
belongs under tlul.

It adapts an Ibex style req/gnt/addr/valid/rdata interface to TL-UL.
Basic multiple request handling has been added and some changes around
how non word size transactions have been made. See the comments within
the RTL for details.

Fixes #1860, #53

Signed-off-by: Greg Chadwick <gac@lowrisc.org>



======Commit: 2b1f219f======
======Short Message======
[dvsim] Fix broken link of xbar testplan
======Full Message======
[dvsim] Fix broken link of xbar testplan

Add testplan_md_path for those whose testplans aren't in default location
Signed-off-by: Weicai Yang <weicai@google.com>



======Commit: 6689d5ed======
======Short Message======
[sw] Fix Software Include Guards
======Full Message======
[sw] Fix Software Include Guards

Recently a bug was found in CI where the code formatting hooks were not
firing correctly. This bug was fixed in
lowrisc/opentitan#ffa126f00f5cae43bd8ccd1e212550ab2d997491.

This change ensures that the include guards on existing code are
correct, so that going forwards we know the software tree is and remains
correct.

Signed-off-by: Sam Elliott <selliott@lowrisc.org>



======Commit: 7ea54b1c======
======Short Message======
[sw] Reformat Software Code
======Full Message======
[sw] Reformat Software Code

Recently a bug was found in CI where the code formatting hooks were not
firing correctly. This bug was fixed in
lowrisc/opentitan#ffa126f00f5cae43bd8ccd1e212550ab2d997491.

This change reformats the existing software tree, so that going forwards
we know the software tree is and remains correctly formatted.

Signed-off-by: Sam Elliott <selliott@lowrisc.org>



======Commit: 09035e75======
======Short Message======
[hmac] Drop the request prior to hash_start
======Full Message======
[hmac] Drop the request prior to hash_start

Jon mentioned the case that MSG_FIFO can be back-pressured when the
software writes the message into MSG_FIFO when `hash_start` is not
asserted in issue #1869. It is not desirable behavior as it can lock the
core access. If that happens, core cannot set `hash_start` to flush out
the data.

This commit is to restrict the access from the software. It only allows
the MSG_FIFO (request to packer) from `hash_start` to `hash_process`. If
the software tries to write the message other than the time above, it
drops the request and raises an error with
`SwPushMsgWhenDisallowed(0x5)` error code.

This is related to #1869 #1871

Signed-off-by: Eunchan Kim <eunchan@opentitan.org>



======Commit: ffa126f0======
======Short Message======
[ci] Fix condtional checks
======Full Message======
[ci] Fix condtional checks

Triggering condition was C/C++ lint and include guard check was the
inverse of what is should be. So the check triggered when it wasn't
needed and vice-versa

Signed-off-by: Greg Chadwick <gac@lowrisc.org>



======Commit: 82445bc1======
======Short Message======
[dvsim] Add control of max job submission per second
======Full Message======
[dvsim] Add control of max job submission per second

default is up to 20 jobs per second
Signed-off-by: Weicai Yang <weicai@google.com>



======Commit: 3cd4aaef======
======Short Message======
[dv] Fix timeout due to too many non-blocking TL accesses
======Full Message======
[dv] Fix timeout due to too many non-blocking TL accesses

In run_mem_partial_access_vseq, limit the max non-blocking items
Signed-off-by: Weicai Yang <weicai@google.com>



======Commit: 5489376c======
======Short Message======
[fpv/pinmux] Fix assertion error
======Full Message======
[fpv/pinmux] Fix assertion error

Previously in RTL there are assumptions to constraint that periph_sel
won't access the oob index, but the assumtions are taken away to avoid
X-prop.
This PR adds assertions to check oob index.

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: 0039ff9e======
======Short Message======
[util, gen_cheader] Fix the formatting
======Full Message======
[util, gen_cheader] Fix the formatting

Not all of the formatting in this file is correct, fix it by running
"lintpy.py --fix".

Signed-off-by: Silvestrs Timofejevs <silvestrst@lowrisc.org>



======Commit: ab0c95f7======
======Short Message======
[dv/alert_handler] improve the logic for interrupt timer
======Full Message======
[dv/alert_handler] improve the logic for interrupt timer

Improve the logic for interrupt timer to fix the daily regression error:
esc_timer predicts the wrong timeout due to interrupt was reset within one clk cycle

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: 6b714a0b======
======Short Message======
[syn/lint] Small scripting fixes in synthesis/lint flows
======Full Message======
[syn/lint] Small scripting fixes in synthesis/lint flows

This fixes a regular expression and an error calculation
function in the synthesis result parsing script. Also, an
additional synthesis report is written out from DC
(check_design) for completeness, and a few unused Python libs
are removed.

Signed-off-by: Michael Schaffner <msf@opentitan.org>



======Commit: 84dac533======
======Short Message======
[doc] HW dashboard fixes
======Full Message======
[doc] HW dashboard fixes

- Addressed all @gkelly's comments
  - updated links to relrefs in dashboard.html
  - updated checklist key to hw_checklist
  - fixed #results-of-toolflows anchor

- Addressed @imphil's comments from standards meeting
  - Updated version in the table to link to the root of commit id tree
  - Hovering over the version also now indicates the commit id

- Addressed @sjgitty's comments from the standards meeting
  - Fixed incorrect commit ids on gpio, tlul, uart on previous versions -
  now the stages correctly link to the signed off checklists

Signed-off-by: Srikrishna Iyer <sriyer@google.com>



======Commit: b7ce1a8e======
======Short Message======
[dv/hmac] support hash_start not set error case
======Full Message======
[dv/hmac] support hash_start not set error case

Thanks to Jon's report #1869, this PR add a sequence to run illegal cases for hmac

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: 9ebdeb4a======
======Short Message======
[dv] Fix unmapped test and add partial mem write support
======Full Message======
[dv] Fix unmapped test and add partial mem write support

Add partial mem write to the seq to match original plan, but no IP
supports that yet
(hmac supports mem partial write, but can't read mem for check)

Signed-off-by: Weicai Yang <weicai@google.com>



======Commit: 6c962a46======
======Short Message======
[spi_device/dv] Fix 2 DV issues
======Full Message======
[spi_device/dv] Fix 2 DV issues

1. Fix design fetch data when it's not ready
2. Fix watermark value out of range
Signed-off-by: Weicai Yang <weicai@google.com>



======Commit: 77436c34======
======Short Message======
[dv] Re-org tl_seq_lib
======Full Message======
[dv] Re-org tl_seq_lib

1. Re-org tl_seq_lib to be one class one file in seq_lib folder. No code
update.
2. Add fusesoc build error and add UVM_WARNING as run error
Signed-off-by: Weicai Yang <weicai@google.com>



======Commit: 39ffebd3======
======Short Message======
[dvsim] Enable coverage collection with Xcelium
======Full Message======
[dvsim] Enable coverage collection with Xcelium

- Enabled coverage collection with Xcelium
  - Added Xcelium too opts
  - Made fixes in SimCfg class to add support for it
  - Fixed coverage 'bug' caught by Xceluim in `tl_agent_cov`

Publishing reports to the web server is disabled.

Signed-off-by: Srikrishna Iyer <sriyer@google.com>



======Commit: 2bdf245f======
======Short Message======
Correcting mismatches between I2C.sv and I2C.hjson
======Full Message======
Correcting mismatches between I2C.sv and I2C.hjson

Fixes hjson port names as indicated in #1822

Signed-off-by: Martin Lueker-Boden <martin.lueker-boden@wdc.com>



======Commit: bce0b73e======
======Short Message======
[fpv/padctrl] Add backward assertions
======Full Message======
[fpv/padctrl] Add backward assertions

Add backward assertions for padctrl and padring's outputs
Fix small symbolic variable usage in padring

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: 14ffb825======
======Short Message======
[fpv/padctrl] Fix compile error
======Full Message======
[fpv/padctrl] Fix compile error

Delete the dependency from prim as it is auto-generated now
Delete the Imp local-param assignment

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: c4e32032======
======Short Message======
[dvsim] Added fusesoc generator for RAL
======Full Message======
[dvsim] Added fusesoc generator for RAL

- Added fuseson generator `ralgen` for autogenerating RAL pkg. This was
originally done by `hw/dv/tools/gen_ral_pkg.sv`, which has now been
removed.
- Updated all fusesoc env core files that are dependent on its RAL pkg
to invoke the generator.
- Updated all documentation `uvmdvgen` templates to reflect these
updates.

- Fixes #1784.

Signed-off-by: Srikrishna Iyer <sriyer@google.com>



======Commit: 0da9c51f======
======Short Message======
[dvsim] Fix summary table
======Full Message======
[dvsim] Fix summary table

When coverage isn't enabled results must not include a cell for coverage
results otherwise the summary table is misprinted.

Signed-off-by: Greg Chadwick <gac@lowrisc.org>



======Commit: 161bb0ce======
======Short Message======
[CI] Use apt-fast instead of apt-get if possible
======Full Message======
[CI] Use apt-fast instead of apt-get if possible

apt-fast is a apt-get wrapper to parallelize apt operations. The
repository containing this script is enabled by default on
Azure-provided runners.

This shaves off ~10s from the dependency installation step, which
continues to be dominated by the time pip takes to install dependencies.

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: 75029b3f======
======Short Message======
Avoid meson 0.54.0
======Full Message======
Avoid meson 0.54.0

Meson 0.54.0 requires Ninja 1.7, as documented at
https://mesonbuild.com/Release-notes-for-0-54-0.html. Ubuntu 16.04 only
ships with ninja 1.5.1 by default (a backport is available). We have no
need for newer ninja/meson versions at the moment, so let's avoid
requiring all Ubuntu 16.04 users to add/enable a separate repository and
stick to older versions of meson.

Fixes #1840

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: bb9df418======
======Short Message======
[spi_device/dv] Add interrupt seq
======Full Message======
[spi_device/dv] Add interrupt seq

spi_device:
1. Add interrupt seq to test interrupts directly and adjust some seq for
reuse
2. Add intr_test coverage sample
3. Fix underflow_overflow corner issue

common dv:
1. Add max2 min2 functions
2. update check_interrups function to use intr_enable

Signed-off-by: Weicai Yang <weicai@google.com>



======Commit: 0d7f7ac7======
======Short Message======
[fpv] fpv improvement
======Full Message======
[fpv] fpv improvement

1. Add bind file back to some IPs
2. Change fpv target to fpv instead of default
3. Add new ips: alert_handler, i2c, aes

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: 31029d2d======
======Short Message======
[dvsim] Update return error message
======Full Message======
[dvsim] Update return error message

Update for #1777
1. have compile and sim pass/fail patterns
2. check fail patterns and output them before check return code

Signed-off-by: Weicai Yang <weicai@google.com>



======Commit: 113d667d======
======Short Message======
[prim/keccak] Fix the doc meta
======Full Message======
[prim/keccak] Fix the doc meta

Meta YAML field should begin with `---`, three dashes.
The keccak doc has four dashes in previsou commit.

This is fixed here.

Signed-off-by: Eunchan Kim <eunchan@opentitan.org>



======Commit: 8abbc605======
======Short Message======
[dvsim.py] Fix no result displayed issue
======Full Message======
[dvsim.py] Fix no result displayed issue

In the Deploy.py when we assign queued_items = items
Then del queued_items[:]
It deletes the original items object as well.
I reverted the code back as I do not know if there is any better
solutions.

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: b2b5b43f======
======Short Message======
[util] Add flake8 support to lintpy.py
======Full Message======
[util] Add flake8 support to lintpy.py

Because yapf output is not stable between Python versions (aargh! see
issue #77), we can't use it for CI runs.

However, we'd like to check that code is valid PEP8, so this patch
adds flake8 support to lintpy.py, which we can switch on in our CI
pipeline.

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 6b869134======
======Short Message======
[dvsim] Fix for missing coverage
======Full Message======
[dvsim] Fix for missing coverage

- Fixed and optimized the logic that tracks the status of currently
dispatched processes. There was a bug in the existing code the caused
dvsim to prematurely exit before all coverage jobs were done.

Signed-off-by: Srikrishna Iyer <sriyer@google.com>



======Commit: e8f19300======
======Short Message======
[dvsim] Minor fix in LintCfg class
======Full Message======
[dvsim] Minor fix in LintCfg class

Signed-off-by: Michael Schaffner <msf@opentitan.org>



======Commit: 06383685======
======Short Message======
[util] Minor tidyups in dvsim.py
======Full Message======
[util] Minor tidyups in dvsim.py

This shouldn't cause any functional change, but hushes flake8 on the
codebase.

Classes of changes:

  - Don't catch bare exceptions
  - Don't put multiple statements on a line
  - Remove unused import
  - Fix up an error message (which I think hadn't been finished)
  - Sort out some string formatting
  - Add capitals at the start of some sentences in help strings

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 7dba9f34======
======Short Message======
[util] Correctly handle the --proj-root argument in dvsim.py
======Full Message======
[util] Correctly handle the --proj-root argument in dvsim.py

Commit a122dda35 added the argument, but didn't actually use the
result properly. Bug found by flake8 (the proj_root variable was set
but not used).

Signed-off-by: Rupert Swarbrick <rswarbrick@lowrisc.org>



======Commit: 32aae3f2======
======Short Message======
[dvsim] Replaced dicts with OrderedDicts
======Full Message======
[dvsim] Replaced dicts with OrderedDicts

- Fixes #1478

Signed-off-by: Srikrishna Iyer <sriyer@google.com>



======Commit: 4488d241======
======Short Message======
[sw/crt] Ensure Small Read-Only Data is Linked
======Full Message======
[sw/crt] Ensure Small Read-Only Data is Linked

We're not using a small data threshold yet, but this avoids any
potential problems when we start to.

GNU ld by default puts these sections into the `.data` output section
for faster access using `gp`. In our case, it seems prudent to put them
into ROM, so they remain read-only.

Signed-off-by: Sam Elliott <selliott@lowrisc.org>



======Commit: c383de06======
======Short Message======
[uart/dv] Fix a corner issue
======Full Message======
[uart/dv] Fix a corner issue

When tx starts, tx watermark needs 3 cycles to update the value

Signed-off-by: Weicai Yang <weicai@google.com>



======Commit: fbaa01ad======
======Short Message======
[dvsim] Fix for missing coverage
======Full Message======
[dvsim] Fix for missing coverage

- The while loop in `Deploy.deploy()` method that sequences the deployed
processes had a bug that caused it to exit when there was more work to
be done. I reordered it so that it works correctly now. `cov_report`
should now get dispatched after `cov_merge`.
- This fixes #1792.

- Some minor fixes to the way things are displayed in stdout.

Signed-off-by: Srikrishna Iyer <sriyer@google.com>



======Commit: ae2f6d0a======
======Short Message======
[sw] Fix a couple typos in the CHECK macros.
======Full Message======
[sw] Fix a couple typos in the CHECK macros.

Signed-off-by: Miguel Young de la Sota <mcyoung@google.com>



======Commit: a39557eb======
======Short Message======
[top/usbdev] Compile error fix in usbdev and naming changes in toplevel
======Full Message======
[top/usbdev] Compile error fix in usbdev and naming changes in toplevel

Signed-off-by: Michael Schaffner <msf@opentitan.org>



======Commit: 90eac34d======
======Short Message======
[dv/common] Fix reset and under_reset order for nightly
======Full Message======
[dv/common] Fix reset and under_reset order for nightly

Use cfg.under_reset rather than under_reset. Change the order so reset()
values first then reset cfg.under_reset.
Add UVM_FATAL to display in the website

Add rv_timer stress_all_with_rand_reset in hjson.

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: 2cdfa8dd======
======Short Message======
[i2c] Add missing inter-core dependency
======Full Message======
[i2c] Add missing inter-core dependency

i2c_env_pkg.sv uses i2c_reg_pkg, which is part of the i2c_reg_pkg.sv
file, which in turn is part of the lowrisc:ip:i2c core. Add the missing
dependency to get the compile order right.

VCS reports in a DV regression run:

```
Parsing design file '../src/lowrisc_dv_i2c_env_0.1/i2c_env_pkg.sv'

Error-[SV-LCM-PND] Package not defined
../src/lowrisc_dv_i2c_env_0.1/i2c_env_pkg.sv, 15
i2c_env_pkg, "i2c_reg_pkg::"
  Package scope resolution failed. Token 'i2c_reg_pkg' is not a package.
  Originating module 'i2c_env_pkg'.
  Move package definition before the use of the package.

```

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: 0a0fec39======
======Short Message======
[alert] Add missing dependency to core file
======Full Message======
[alert] Add missing dependency to core file

When running the regression VCS reports:

```
Parsing included file '../src/lowrisc_dv_alert_handler_env_0.1/alert_handler_env_cfg.sv'.

Error-[SV-EEM-SRE] Scope resolution error
../src/lowrisc_dv_alert_handler_env_0.1/alert_handler_env_cfg.sv, 35
alert_handler_env_pkg, "alert_pkg::NAlerts"
  Target for scope resolution operator does not exist. Token 'alert_pkg' is
  not a class/package.  Originating module 'alert_handler_env_pkg'.
  Check that class or package exists with referred token as the name.
```

The `alert_pkg` SV package is part of the
lowrisc:ip:alert_handler_component FuseSoC core, and hence
lowrisc:dv:alert_handler_env needs to depend on this package.

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: 87efef8a======
======Short Message======
[dv] Fix mem_walk error
======Full Message======
[dv] Fix mem_walk error

In #1732, design no longer returns full data for read if mask isn't '1
And mem_walk can't verify partial read. Will make another PR to add mem
parity read test
Signed-off-by: Weicai Yang <weicai@google.com>



======Commit: bd3aad08======
======Short Message======
Recommend installing python3-yaml as distro package
======Full Message======
Recommend installing python3-yaml as distro package

The Python yaml package (pyyaml) can optionally use a YAML parser/dumper
written in C called LibYAML. This library is roughly 10x faster than the
fallback implementation written in Python. Since fusesoc (and fusesoc
generators) use YAML quite extensively, switching to a faster YAML
implementation decreases build and simulation times measurably (10s of
seconds in my tests).

pip can install pyyaml with LibYAML support as long as the Python
development headers, a C compiler, and LibYAML are present. Or we can
avoid compiling the package on a user's machine, and use a precompiled
version provided by the distribution. That's what this patch is doing.
The pip version is still available as fallback in
python-requirements.txt for users not installing all requirements
from the apt-requirements.txt file (or the user guide, which uses this
information as well).

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: 55b97a9e======
======Short Message======
[dv/gpio] fix errors from nightly regression
======Full Message======
[dv/gpio] fix errors from nightly regression

Fix unmapped gpio tests
Fix stress_all and stress_all_with_rand_reset errors
Update same_csr_outstanding to only disable clear_all_interrupts in gpio
tests

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: df4350b2======
======Short Message======
[uvmdvgen] fix has_ral integration with uvmdvgen templates
======Full Message======
[uvmdvgen] fix has_ral integration with uvmdvgen templates

Signed-off-by: Udi Jonnalagadda <udij@google.com>



======Commit: be1b4b63======
======Short Message======
[dv/rv_timer] fix nightly coverage to 100%
======Full Message======
[dv/rv_timer] fix nightly coverage to 100%

The reason it is not 100% is because currently rv_timer only has one
interrupt, but the random write value starts from 1, thus it will never
cover interrupt test write value is 0. Now change the random range to
start from 0.

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: 94014696======
======Short Message======
Remove property from assert message
======Full Message======
Remove property from assert message

Assert macros in prim_assert.sv report the asserted property as part of
the error message if the assertion fails. Doing that requires us to
stringify the property. If the property is multi-line in the source
code, this produces a multi-line string. According to the
SystemVerilog standard, a multi-line string requires a backslash (`\`)
at the end of a line. Adding this backslash through a macro is not
possible (at least to my knowledge), giving us no way to produce a
standards-compliant implementation of the `ASSERT` macros that report
the property as string.

This commit therefore removes the property from the error message if an
assertion fails. It makes these messages less useful, but the
information can still be recovered in a less convenient way through the
name of the assertion, and the file and line numbers. File and line
number were missing from the non-UVM code path before, this commit adds
them there as well.

This aligns the prim_assert.sv macro with what has been done in Ibex,
where all the discussion around this change happened as well. Please
have a look at https://github.com/lowRISC/ibex/issues/669 and
https://github.com/lowRISC/ibex/pull/699 for the bigger picture.

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: dd1706e2======
======Short Message======
[CI] Explicitly trigger builds on branches and PRs
======Full Message======
[CI] Explicitly trigger builds on branches and PRs

Azure Pipelines doesn't trigger builds currently if trigger conditions
are not explicitly mentioned. This is against their documentation and
will be fixed on the Azure side later; until that's fixed, we can work
around it by explicitly specifying the triggers.

Fixes #1746

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: 3e6d1bbe======
======Short Message======
[i2c, rtl] Issue #1662 fix and FIFO watermarks cleared after reset
======Full Message======
[i2c, rtl] Issue #1662 fix and FIFO watermarks cleared after reset

1. Added PopFmtFifoCont state which goes to the next state bypassing Idle.
2. Added default FMT and RX FIFO watermark values after reset.

Signed-off-by: Igor Kouznetsov <igor.kouznetsov@wdc.com>



======Commit: 96e54101======
======Short Message======
[dvsim] Added --fixed-seed switch
======Full Message======
[dvsim] Added --fixed-seed switch

- Added a --fixed-seed <integer> switch that will fix the seed value to
be used for running ALL tests.
- Setting this option on the command line will enforce --reseed 1, since
there is no point in running multiple seeds.

Signed-off-by: Srikrishna Iyer <sriyer@google.com>



======Commit: 2aec1fa1======
======Short Message======
[pinmux] Align arrays to powers of 2 to fix implicit X's
======Full Message======
[pinmux] Align arrays to powers of 2 to fix implicit X's

Signed-off-by: Michael Schaffner <msf@opentitan.org>



======Commit: 39faf387======
======Short Message======
[tlul_adapter_sram] Fix to avoid X on invalid read data
======Full Message======
[tlul_adapter_sram] Fix to avoid X on invalid read data

Signed-off-by: Michael Schaffner <msf@opentitan.org>



======Commit: 97fe0d81======
======Short Message======
[dv, sw] UART logs to UVM prints
======Full Message======
[dv, sw] UART logs to UVM prints

This PR enables logs from SW test sent over UART to be captured as UVM
print messages. The printed message looks for severity identifier in the
message string (INFO, WARN, ERROR and FATAL) and prints the final
message with the corresponding uvm_* facilities.

The plan to enable the much faster print-bypassing-uart is still on -
that will be enabled shortly. The goal is to have both methods supported
so that FPGA tests can be run as-is in DV without any modifications.

Signed-off-by: Srikrishna Iyer <sriyer@google.com>



======Commit: 87198915======
======Short Message======
[alert_handler/rtl] phase3 to terminal esc_cnt
======Full Message======
[alert_handler/rtl] phase3 to terminal esc_cnt

Clear cnt_en to fix issue #1711

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: 0e4b119e======
======Short Message======
[aes:dv] Use queue syntax supported by XCelium 18.09
======Full Message======
[aes:dv] Use queue syntax supported by XCelium 18.09

XCelium 18.09 does not support getting last element in
an unbounded queue using [$]. Version 19.09 supports this syntax.

Use a more explicit syntax to support XCelium 18.09.

Fixes #1696

Signed-off-by: Rasmus Madsen <rasmus.madsen@wdc.com>



======Commit: 81fca45c======
======Short Message======
[doc] Fix links
======Full Message======
[doc] Fix links

Signed-off-by: Tobias Wölfel <tobias.woelfel@mailbox.org>



======Commit: 442d8db4======
======Short Message======
[dvsim] Exit with error on test failures
======Full Message======
[dvsim] Exit with error on test failures

- This PR fixes #1692 - it return with 1 if test errors were
encountered.

Signed-off-by: Srikrishna Iyer <sriyer@google.com>



======Commit: 4179012f======
======Short Message======
Correct a documentation error for the uart.
======Full Message======
Correct a documentation error for the uart.

The documentation has an example function which should either
receive a character or return -1 if the receive fifo is empty.
The documentation uses the type 'char' and the value '0xff' to
represent -1, however the C standard does not define the
signedness of char.  Change to 'int', similar to the C standard
library's 'getc' and friends, to conform the documented
return value.

It is also unclear what the C definition of 'UART_RDATA_REG' is,
apart that it is a pointer itno the register space.  The sample
code in sw/device/lib/dif/dif_uart.c treats this register as a
32-bit register, so one assumes the sample code is meant to read
this as a uint32 (however if it were declared as pointer-to-char,
then a similar issue would exist with sign extension to the
return type of int).

Signed-off-by: Chris Frantz <cfrantz@google.com>



======Commit: 05ad5abd======
======Short Message======
Use a ot-specific patched version of fusesoc
======Full Message======
Use a ot-specific patched version of fusesoc

For recent work on OpenTitan we need modifications in fusesoc, which are
not yet merged upstream. Until that happens, switch to a OT-specific
branch of fuseosoc, we we did for edalize.

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: ed097cc5======
======Short Message======
Check for supported tool versions
======Full Message======
Check for supported tool versions

Define supported tool versions in tool_requirements.py, and check them
in a fusesoc run. If an unsupported tool version is found, fusesoc
outputs an error like this:

```
$ fusesoc --cores-root ../../ run --target=lint lowrisc:ip:aes
INFO: Preparing lowrisc:constants:top_pkg:0
INFO: Preparing lowrisc:lint:comportable:0.1
...
INFO: Preparing lowrisc:tool:check_tool_requirements:0.1
INFO: Preparing lowrisc:lint:common:0.1
...
INFO: Preparing lowrisc:ip:aes:0.5

ERROR: verilator is too old: found version 4.016, need at least 4.028
ERROR: Tool requirements not fulfilled. Please update the tools and retry.
ERROR: Failed to build lowrisc:ip:aes:0.5 : pre_build script \
       'check_tool_requirements' exited with error code 1
```

The only version checked at this point is Verilator, which is set to
version 4.028, the first version to support wildcard matching for
`lint_off` rules.

The whole infrastructure has been created by @imphil in the Ibex
repository (see lowRISC/Ibex#604). This commit just copies the
framework over to OpenTitan.

Signed-off-by: Pirmin Vogel <vogelpi@lowrisc.org>



======Commit: f244ca9e======
======Short Message======
[hmac/dv] fix reset status error
======Full Message======
[hmac/dv] fix reset status error

The current reset strategy will kill the current seq thread after reset
positive edge, rather than after negative edge. This PR add hmac scb
support to this change.

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: 7702be54======
======Short Message======
[dvsim] Better in-progress print messages
======Full Message======
[dvsim] Better in-progress print messages

- This PR updates the dvsim on-going progress to print valuable
information in terms of how many queued, dispatched, passed, failed, killed and
total. This helps keep things clear.

Signed-off-by: Srikrishna Iyer <sriyer@google.com>



======Commit: 9baf57b6======
======Short Message======
[hw/top_earlgrey/data] PERIPH_OUTSEL index starts from 3 instead of 2.
======Full Message======
[hw/top_earlgrey/data] PERIPH_OUTSEL index starts from 3 instead of 2.

Fixes #1546

Signed-off-by: Zhongyi Chen <zhongyi.chen@gmail.com>



======Commit: cdcff821======
======Short Message======
[site/docs] Fix ToC position
======Full Message======
[site/docs] Fix ToC position

Keep the ToC field on the top right.
This helps to navigate between different sections in larger documents
and keep an overview on the content.

Signed-off-by: Tobias Wölfel <tobias.woelfel@mailbox.org>



======Commit: dfff26f4======
======Short Message======
[doc] Make links more precise
======Full Message======
[doc] Make links more precise

With a more recent Hugo version (v0.65.3/extended) using the current
links results in a "REF_NOT_FOUND" error.
Preparation for possible updates to Hugo.

Signed-off-by: Tobias Wölfel <tobias.woelfel@mailbox.org>



======Commit: b27cff95======
======Short Message======
[i2c, rtl] Format flag assignments
======Full Message======
[i2c, rtl] Format flag assignments

1. Swapped bits for fmt_flag_read_bytes and fmt_flag_read_continue (bug fix).
2. Reduced hold time in Stop condition to a minimum.

Signed-off-by: Igor Kouznetsov <igor.kouznetsov@wdc.com>



======Commit: 7900b549======
======Short Message======
[dv] Fix reset issue in the driver
======Full Message======
[dv] Fix reset issue in the driver

valid signals in driver remained high during & after reset, which caused
unexpected transactions after reset
Signed-off-by: Weicai Yang <weicai@google.com>



======Commit: 3e9d8888======
======Short Message======
[dvsim] Add i2c to the regressions
======Full Message======
[dvsim] Add i2c to the regressions

- Added i2c to top_earlgrey sim cfgs list so that it gets run as a part
of sanity and nightly
- i2c will use Xcelium as the default simulator for displaying the
results

Signed-off-by: Srikrishna Iyer <sriyer@google.com>



======Commit: e67d7f1f======
======Short Message======
[dv/alert_handler] add signal int fail
======Full Message======
[dv/alert_handler] add signal int fail

Support signal integrity error in the alert_sender side
Add checks for alert accumulation register

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: 6c731a89======
======Short Message======
[tlul] Match tlul_adapter_sram Outstanding to value
======Full Message======
[tlul] Match tlul_adapter_sram Outstanding to value

Reduce the number of Oustanding to its parameter value. Previous design
increased the request outstanding capability by one to accept next
request when it processes current request. It creates assertion error
below:

    `ASSERT(rvalidHighWhenRspFifoFull, rvalid_i |-> rspfifo_wready)

It is debatable whether the second request should be allowed or not.
This commit is to limit the request when the number of outstanding
requests reaches to its max value. Or we could revise the assertion to
consider the case.

This is related to #1489

Signed-off-by: Eunchan Kim <eunchan@opentitan.org>



======Commit: 3195ae39======
======Short Message======
[dv/uart] make nightly coverage 100%
======Full Message======
[dv/uart] make nightly coverage 100%

1. fix TL outstanding excess limit issue during reset
2. fix intr_test cov in uart
3. increase reseed for reset_fifo and stress_reset

Signed-off-by: Weicai Yang <weicai@google.com>



======Commit: daf5259c======
======Short Message======
[chip dv] Fixes to get CSR HW reset test passing
======Full Message======
[chip dv] Fixes to get CSR HW reset test passing

- added pinmux exclusions

Signed-off-by: Srikrishna Iyer <sriyer@google.com>



======Commit: 81949854======
======Short Message======
[reggen] Fix Interrupt `genresmask`
======Full Message======
[reggen] Fix Interrupt `genresmask`

Problem:

    Multireg doesn't show correct mask value

The auto generated multi registers doesn't consider the multi-width
field in the interrupt related registers. Now the code is changed to
consider the `width` field to correctly calculate the `genresmask`.

Also in multireg validation code, when it creates a `genreg`, it didn't
store the `genresval` and `genresmask`. So the register table in the
specification only showed 0 reset value and 1 mask value.

This fixes #41

Signed-off-by: Eunchan Kim <eunchan@opentitan.org>



======Commit: 3a13b4f8======
======Short Message======
[util/topgen] Ensure size is compared as integer
======Full Message======
[util/topgen] Ensure size is compared as integer

The module['size'] variable is an integer, while module['gensize'] is
a string. To compare the two, we need to ensure that both variables
are integers.

Fixes #1663

Signed-off-by: Zhongyi Chen <zhongyi.chen@gmail.com>



======Commit: ff99eb97======
======Short Message======
[aes/rtl] Fix lint errors and warnings
======Full Message======
[aes/rtl] Fix lint errors and warnings

Signed-off-by: Pirmin Vogel <vogelpi@lowrisc.org>



======Commit: ed09deb1======
======Short Message======
[sw, spiflash] Dramatically increase transfer rate
======Full Message======
[sw, spiflash] Dramatically increase transfer rate

The spiflash tool has relied on a fixed delay for spacing the writes
between frames. This hasn't been a problem for small binary deployments
to the FPGA, but Tock release binaries take ~3m23s to flash, and debug
binaries take even longer.

Add flow control to spiflash by waiting for until the hash of the
current frame can be read back before writing the next frame. This
successfully allows Tock to be flashed to the FPGA in 6.7s, a 96.7%
decrease over the previous implementation.

Signed-off-by: Jon Flatley <jflat@google.com>



======Commit: 758d4620======
======Short Message======
[prim_esc_sender] Fix to correctly exit from response checking states
======Full Message======
[prim_esc_sender] Fix to correctly exit from response checking states

Signed-off-by: Michael Schaffner <msf@opentitan.org>



======Commit: 0596a85a======
======Short Message======
[dvsim] Add color encodings for errors and warning
======Full Message======
[dvsim] Add color encodings for errors and warning

- Updated dvsim tool such that warnings and errors indicated as "7 W"
and "10 E" respectively for example, get automatically color coded with
yellow and red. "0 E" and "0 W" get color coded with green.

Signed-off-by: Srikrishna Iyer <sriyer@google.com>



======Commit: f899b5cf======
======Short Message======
[dv/xbar] Fix cov exclusion not found
======Full Message======
[dv/xbar] Fix cov exclusion not found

Update sim_cfg to copy cov exclusion file to sim folder
Signed-off-by: Weicai Yang <weicai@google.com>



======Commit: 8e7f0db5======
======Short Message======
[uart/dv] Fix regr corner issue and reg exclusion
======Full Message======
[uart/dv] Fix regr corner issue and reg exclusion

Signed-off-by: Weicai Yang <weicai@google.com>



======Commit: ce974659======
======Short Message======
[assertion/alert_handler] Move reset condition to pre_condition
======Full Message======
[assertion/alert_handler] Move reset condition to pre_condition

Some assertions gated under reset condition, as reset is asyn, causes
some issue in simulation. We decided to move them to the
pre-condition instead.
This fix issue: https://github.com/lowRISC/opentitan/issues/1589

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: bc18947e======
======Short Message======
[sw] Fix build breaks due to misaligned binaries
======Full Message======
[sw] Fix build breaks due to misaligned binaries

The VMem format variant we use requires binaries to be a whole number of
32-bit words long. This change ensures this at the build level, allowing
us to remove a hack in hello_usbdev.c.

Signed-off-by: Miguel Young de la Sota <mcyoung@google.com>



======Commit: acc57b71======
======Short Message======
Remove manual FPGA test script
======Full Message======
Remove manual FPGA test script

This script is not working any more as-is, and doesn't seem to have any
users. Remove it to avoid confusion.

Fixes #1599

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: 738aab08======
======Short Message======
fix for incompatible types
======Full Message======
fix for incompatible types

Signed-off-by: Daniel Mlynek <danielm@aldec.com.pl>



======Commit: 5a7f734a======
======Short Message======
[sw] Fix printf not working in RISC-V
======Full Message======
[sw] Fix printf not working in RISC-V

This is an unfortunate side-effect of the difference between va_list on
amd64 and rv32imc. On the former, it is a double pointer, so advancing
it in process_specifier() actually advances it overall. On rv32imc,
however, it's just a void *, so a pointer to it needs to be passed.

This commit changes print.c to correctly advance the va_list in rv32imc,
by passing a pointer. This incurs a copy on amd64, but is free on
rv32imc.

Signed-off-by: Miguel Young de la Sota <mcyoung@google.com>



======Commit: ca02d9aa======
======Short Message======
[sw/spiflash] Update spiflash to resend prev.frame
======Full Message======
[sw/spiflash] Update spiflash to resend prev.frame

Problem:

    If spiflash hash doesn't match, it sends current frame again.

When spiflash sends firmware image, it splits the data into smaller
chunk (frame). Every frame is verified by checking the calculated hash
in the device side and the expected hash in the host side.

The calculated hash is sent by the device bootrom firmware at the next
frame. If the hash failed, the spiflash tries to re-send the frame
again.

But, current code doesn't handle it correctly. If the very first hash is
failed, it doesn't go back to frame 0, but re-sending frame 1. So the
device always returns error as the first frame isn't yet arrived.

This is a simple fix to resolve. spiflash now sends the frame 0 again.

This is related to #1606 but doesn't solve the root cause.

Signed-off-by: Eunchan Kim <eunchan@opentitan.org>



======Commit: c15f33a7======
======Short Message======
[rtl, dv] Fix top_earlgrey_asic, dv updates
======Full Message======
[rtl, dv] Fix top_earlgrey_asic, dv updates

- Updated top_earlgrey to hookup the SPI interface (make it look more
like nexysvideo)
  - SPI is muxed with JTAG due to 'nexysvideo' version of padctl - once
  the 'asic' version of padctl lands, we can fix the tb as needed later

- Updates to get CSR HW reset test passing at the chip level
  - There are several assertion errors that are currently under debug

Signed-off-by: Srikrishna Iyer <sriyer@google.com>



======Commit: 910104d4======
======Short Message======
[sw/meson] Hotfix for build break
======Full Message======
[sw/meson] Hotfix for build break

This commit fixes a Meson build break due to two otherwise independent
commits comflicting: one deleted a Meson target, while another added a
new use for it.

Signed-off-by: Miguel Young de la Sota <mcyoung@google.com>



======Commit: 30eb41a2======
======Short Message======
[sw] Move printf-like facilities into libbase.
======Full Message======
[sw] Move printf-like facilities into libbase.

|printf|-like functions simply move bytes around in a fancy way, and
having them accessible everywhere is probably useful.

As #1162 is addressed, we will see if we can use some link-time
mechanism to more effectively control the "default" sink used by
|base_printf()|.

Signed-off-by: Miguel Young de la Sota <mcyoung@google.com>



======Commit: 3d958886======
======Short Message======
[sw, tock] Reduced binary size
======Full Message======
[sw, tock] Reduced binary size

The Tock debug binary with the .apps section is ~200KB. This takes
upwards of 3m30s to load onto the FPGA using spiflash.

To reduce the size of the binary let's remove the .apps section (since
we're not loading any apps at the moment) and enable lto. This brings
the binary down to ~57KB and allows spiflash to finish in under a
minute.

Signed-off-by: Jon Flatley <jflat@google.com>



======Commit: 4fbe98ff======
======Short Message======
[CI] Optionally pass repository source to template
======Full Message======
[CI] Optionally pass repository source to template

We have an Azure Pipelines template to install all build requirements for
OpenTitan, which assumes it is being called from the root of the
OpenTitan repository. This assumption is violated if the template is
included from another repository, as described in the docs at
https://docs.microsoft.com/en-us/azure/devops/pipelines/process/templates?view=azure-devops#use-other-repositories.

For this use case, this commit introduces a template parameter
`REPO_TOP`, which defaults to `.`. In cases where this default isn't
applicable (i.e. whenever this template is used from another repo), it
can be overwritten as needed.

The name `REPO_TOP` reflects the naming we use in the OpenTitan
documentation for the root of the opentitan repository.

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: 5b9e814f======
======Short Message======
[flash] Fix default interrupt state
======Full Message======
[flash] Fix default interrupt state

Make sure interrups do not assert by default

Signed-off-by: Timothy Chen <timothytim@google.com>



======Commit: ecfc76c1======
======Short Message======
Fix ROM_INIT_FILE after build output changes
======Full Message======
Fix ROM_INIT_FILE after build output changes

Recent work changed the directory structure in the build output
directory. Adjust references to ROM_INIT_FILE which were forgotten.

Fixes #1586

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: 3d742781======
======Short Message======
[dv/dpi] Fix duplicated memory free
======Full Message======
[dv/dpi] Fix duplicated memory free

- ctx_free is always called by the socket thread at the end of
  server_create(). Calling it again in tcp_server_close() is a
  duplication.
- Fixes #1587

Signed-off-by: Tom Roberts <tomroberts@lowrisc.org>



======Commit: a68e3072======
======Short Message======
[ci] Use consistent style in azure-pipelines.yml
======Full Message======
[ci] Use consistent style in azure-pipelines.yml

These changes include:
- Consistent quotation (single quotes in YAML, only for multi-word
  strings; double-quotes in bash around all variable references).
- Consistent use of [[ instead of [ for testing conditions.
- Consistent indentation within bash.
- Consistent file paths (e.g., when calling a script, prefix with ./
  only when strictly necessary).

Signed-off-by: Miguel Young de la Sota <mcyoung@google.com>



======Commit: f0b2abc3======
======Short Message======
Update uart documentation
======Full Message======
Update uart documentation

Fix #1579

Signed-off-by: Timothy Chen <timothytim@google.com>



======Commit: fd2c22e8======
======Short Message======
[dv] Add simulation result summary page
======Full Message======
[dv] Add simulation result summary page

Here is the report that will be generated
https://reports.opentitan.org/hw/top_earlgrey/dv/summarys.html
Also fix xbar coverage error

Signed-off-by: Weicai Yang <weicai@google.com>



======Commit: a25377dd======
======Short Message======
[aes/rtl] Fix controller behavior when stalling the cipher core
======Full Message======
[aes/rtl] Fix controller behavior when stalling the cipher core

This commit corrects two issues in the behavior of the main controller when
the stalling the cipher core (because the DATA_OUT registers cannot yet be
overwritten).

1) The controller must not overwrite the DATA_OUT registers and not proceed
   to the next state until the DATA_OUT registers have been read by
   software. Without this commit, the controller keeps the cipher core
   stalled (and waiting forever) but still proceeds.

2) The stall bit in the STATUS register must only be asserted if the
   cipher core has valid output and is indeed being stalled. Without this
   commit, the stall bit is asserted also when the cipher core is still
   busy and does not yet have valid output.

This resolves lowRISC/OpenTitan#1560 reported by @labbott.

Signed-off-by: Pirmin Vogel <vogelpi@lowrisc.org>



======Commit: 01ecafe1======
======Short Message======
[dv tool] css fix for reports page
======Full Message======
[dv tool] css fix for reports page

- Removed CSS style that causes report content to be centered in the
page rather than start from the top.

Signed-off-by: Srikrishna Iyer <sriyer@google.com>



======Commit: 21900110======
======Short Message======
Python requirements: Allow newer meson versions
======Full Message======
Python requirements: Allow newer meson versions

Meson fixed the incompatibility with Python 3.5.2 introduced in meson
0.53.0, and we can use newer versions again.

Upstream fix: https://github.com/mesonbuild/meson/pull/6498

Fixes #1288

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: 49ef1c5f======
======Short Message======
[sw, tests] Introduce a test to handle two different consecutive IRQs
======Full Message======
[sw, tests] Introduce a test to handle two different consecutive IRQs

The purpose of this test is to validate external interrupt delivery from
peripheral to the target. The aim is not to test the entire PLIC or entirety
of the peripherals, but to ensure that two different IRQs can interrupt the
processor and be successfully handled. For the purpose of this test the UART
peripheral is used as the origin of the interrupts, and the interrupted target
is Ibex (the only target in current Earl Grey implementation).

This test ensures (in terms of UART RX Overflow and TX Empty IRQ sources, and
Ibex target):

* That PLIC getaway receives and handles an IRQ correctly.
* That PLIC Core and Target modules handle an IRQ correctly.
* That an IRQ can interrupt the target.
* That an IRQ can be cleared and a new IRQ can be processed.

The reason for introducing this test was an issues we had previously with the
IRQ delivery on the FPGA, see issue #1355 for more details. This test can be
run by CI, and used manually to test the IRQs on an FPGA.

Fixes: #1402

Signed-off-by: Silvestrs Timofejevs <silvestrst@lowrisc.org>



======Commit: c001558b======
======Short Message======
[aes] Disable padding in crypto (OpenSSL/BoringSSL) interface
======Full Message======
[aes] Disable padding in crypto (OpenSSL/BoringSSL) interface

By default, padding is enabled in the used EVP functions of
OpenSSL/BoringSSL. Both the sizes of the NIST test data sets we are using
so far and the sizes of our tests are multiples of the block size. No
padding is actually required. However, to make the padding checks in the
EVP decryption functions succeed, workarounds are required.

This commit disables the padding and padding checks in the EVP functions
and removes the corresponding workarounds for the padding checks.

Signed-off-by: Pirmin Vogel <vogelpi@lowrisc.org>



======Commit: 2cdcbce9======
======Short Message======
[xbar dv, testplan tool] Fixes to support PR #1530
======Full Message======
[xbar dv, testplan tool] Fixes to support PR #1530

- Updated testplan tool to allow imported testplan to set a default name
(or any scalar key value pair) that the parent tesplan hjson can
override
- Added fixes to generic tlul testplan and sim_cfg hjson files to make
them look more generic (moved vcs_cov_excl_files key to the generated
hjson sim cfg file instead)
- Added fixes to the generated xbar testplan and sim_cfg hjson files

Signed-off-by: Srikrishna Iyer <sriyer@google.com>



======Commit: 6a4b49e5======
======Short Message======
[topgen] Use OrderedDict for top, xbar objects
======Full Message======
[topgen] Use OrderedDict for top, xbar objects

This is related to PR #1552.

Problem:

    In Azure Pipeline that uses Python 3.5, doesn't keep the order of
    hjson keys. It results the generated hjson has a lot of change
    randomly.

`dict` type in python is unordered dictionary. It doesn't maintain the
order of keys in the dictionary. `topgen` dumps a couple of hjson files,
such as generated tops (e.g.
`hw/top_earlgrey_data/autogen/top_earlgrey.gen.hjson`) and the crossbar
configurations (e.g.
`$TOP/ip/xbar_{name}/data/autogen/xbar_{name}.hjson`). This unordered
behavior creates random changes to the generated files, which increases
commit diffs.

From python3.7, the default dictionary type is changed to
`collections.OrderedDict`. So, if the `topgen` runs on the system >=
python3.7, it always maintain the order.

Resolution:

    Use OrderedDict when create dictionary variables.

With OrderedDict (introduced in Python2.7), the generated hjson files
are remains in order.

Signed-off-by: Eunchan Kim <eunchan@opentitan.org>



======Commit: f85033e8======
======Short Message======
[doc] Fixed reset values in flash ctrl and hmac
======Full Message======
[doc] Fixed reset values in flash ctrl and hmac

Signed-off-by: Srikrishna Iyer <sriyer@google.com>



======Commit: e7c1cb51======
======Short Message======
[usbdev] Workaround to fix dead loop due to tool issue
======Full Message======
[usbdev] Workaround to fix dead loop due to tool issue

This is a workaround to fix #1548.
Consider this as an alternative to avoid the tool issue and no need
to revert it when the tool issue is fixed

Signed-off-by: Weicai Yang <weicai@google.com>



======Commit: 2b7cd93b======
======Short Message======
[fpv/usbuart] Fix compile error
======Full Message======
[fpv/usbuart] Fix compile error

Fix compile error due to port name change

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: 85c09eaf======
======Short Message======
[sw, dif] Improve UART initialisation routine
======Full Message======
[sw, dif] Improve UART initialisation routine

This change allows to specify the behaviour of the UART initialisation
routine. It might be desirable to keep the peripheral configuration
state after the jump from boot_rom to flash.

Fixes #1505

Signed-off-by: Silvestrs Timofejevs <silvestrst@lowrisc.org>



======Commit: 9ac2ac84======
======Short Message======
[sw] Fix a few non-absolute includes
======Full Message======
[sw] Fix a few non-absolute includes

Signed-off-by: Miguel Young de la Sota <mcyoung@google.com>



======Commit: 0ed9022d======
======Short Message======
[DMI DPI] Instantiate DMI DPI in Verilator
======Full Message======
[DMI DPI] Instantiate DMI DPI in Verilator

- Makes DMI DPI the default option instead of JTAG DPI

Signed-off-by: Tom Roberts <tomroberts@lowrisc.org>



======Commit: 83aa605d======
======Short Message======
[DPI DMI] Add new DMI DPI module
======Full Message======
[DPI DMI] Add new DMI DPI module

- The DMI DPI module provides a direct interface between OpenOCD and the
  internal DMI interface in the debug module.
- Rather than routing requests through the JTAG port, the DMI DPI module
  internally converts OpenOCD transactions into DMI transactions and sends
  them into the design.
- This allows the debug module to process a new debug command every 2 cycles
  rather than every ~100 cycles.
- Debugging performance in Verilator is increased by ~10x when enabled.

Signed-off-by: Tom Roberts <tomroberts@lowrisc.org>



======Commit: 41d4fa5f======
======Short Message======
[hw, rv_core_ibex] Enable hardware breakpoints
======Full Message======
[hw, rv_core_ibex] Enable hardware breakpoints

This change enables hardware breakpoints, which allows the usage of
hbreak in GDB.

Fixes #574

Signed-off-by: Silvestrs Timofejevs <silvestrst@lowrisc.org>



======Commit: dbc21cfb======
======Short Message======
[sw, dif_uart] Fix dif_uart_byte_send_polled() routine
======Full Message======
[sw, dif_uart] Fix dif_uart_byte_send_polled() routine

UART_STATUS_TXEMPTY means that the HW took the last data element of
the FIFO for processing. UART_STATUS_TXIDLE is set when there is no
activity on the UART lines. Combination of these two flags can be used
to determine whether the HW has completely processed the last element.

NOTE: polling operation guarantees that the requested byte is
      processed completely on return from the function. This means
      that we must check whether the FIFO is drained to insure that
      this is the case.

Fixes issue in PR #1510.

Signed-off-by: Silvestrs Timofejevs <silvestrst@lowrisc.org>



======Commit: b306508d======
======Short Message======
[sw, dif_plic] Use generated register definitions
======Full Message======
[sw, dif_plic] Use generated register definitions

The hardcoded register definitions in dif_plic are fragile, as any RTL
change breaks the DIF PLIC.

This change updates the PLIC DIF to use the generated register
definitions.

Fixes #1508

Signed-off-by: Silvestrs Timofejevs <silvestrst@lowrisc.org>



======Commit: 89706edc======
======Short Message======
[top_earlgrey] Generate rv_plic register definitions
======Full Message======
[top_earlgrey] Generate rv_plic register definitions

This change generates the PLIC register definitions from the relevant
.hjson file.

This change is required as a first step to fix #1508.

Signed-off-by: Silvestrs Timofejevs <silvestrst@lowrisc.org>



======Commit: 14cd97bf======
======Short Message======
[hmac] Block `hash_start` when HMAC active
======Full Message======
[hmac] Block `hash_start` when HMAC active

Problem:

    HMAC can be stuck if `hash_start` is asserted while HMAC is in
    active state and received message chunks already.

If `hash_start` is asserted in the middle of the data operation, the
`message_length` is not matched with the actual data feed. So, SHA
compute engine has more data than the given message length. It affects
to the padding logic, which cannot complete with correct sequence then
SHA engine waits indefinitely. Only option to recover from this hang
state is the IP reset.

This scenario was already added to the assertions in HMAC design. So, if
this case happens in simulation, it fails immediately. However,
triggering the hang condition is not wise, as `hash_start` is the
software-controlled signal and the scenario can happen in production.

Resolution:

    Block the `hash_start` when HMAC is in active.

This commit is to block the second `hash_start` when configuration is
blocked. So, only option for the software is to complete the current
hash process with `hash_process` and initiates another round of the
hash.

Also, if the scenario happens, the HMAC IP now reports an error with
error code 0x4 (SwHashStartWhenActive).

Thanks to @cindychip

Signed-off-by: Eunchan Kim <eunchan@opentitan.org>



======Commit: c204cc0c======
======Short Message======
[dv/common] add debug info for objections
======Full Message======
[dv/common] add debug info for objections

According to the system verilog coding style, add phase debug msg.
Fix a few minor coding sytle issues.

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: 17fbadb0======
======Short Message======
[regtool] Error on duplicated C Defines
======Full Message======
[regtool] Error on duplicated C Defines

Some changes recently have almost caused regtool.py to output C headers
with duplicate definitions (with differing values).

This commit ensures that doing so causes a hard error in the build,
rather than outputting a file containing two definitions of the same
symbol.

Signed-off-by: Sam Elliott <selliott@lowrisc.org>



======Commit: c417986a======
======Short Message======
[sw, dif_uart] Fix misuse of __builtin_unreachable
======Full Message======
[sw, dif_uart] Fix misuse of __builtin_unreachable

uart_irq_offset_get() used __builtin_unreachable in it's default case,
which is a not appropriate use for it (is reachable, and getting into
the default case is an error).

Signed-off-by: Silvestrs Timofejevs <silvestrst@lowrisc.org>



======Commit: dd376a3d======
======Short Message======
[tlul] Fix $fatal call with invalid syntax
======Full Message======
[tlul] Fix $fatal call with invalid syntax

Signed-off-by: Naoya Hatta <dalance@gmail.com>



======Commit: 8854ee96======
======Short Message======
[dv/common] Fix same csr outstanding failure on gpio
======Full Message======
[dv/common] Fix same csr outstanding failure on gpio

GPIO same CSR outstanding failure due to checking interrupt state at the
end of the sequence. This checking should be ignored because the purpose
of the sequence is only check same CSR outstanding write and read
access.

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: 4c02de98======
======Short Message======
[sw] Fix read32() signature
======Full Message======
[sw] Fix read32() signature

read32() in memory.h is taking a non-const pointer.

Make read32() in memory.h take a const pointer.

Signed-off-by: Jon Flatley <jflat@google.com>



======Commit: a675e6e8======
======Short Message======
[usb/rtl] Fix SVAs
======Full Message======
[usb/rtl] Fix SVAs

This resolves lowRISC/OpenTitan#1533.

Signed-off-by: Pirmin Vogel <vogelpi@lowrisc.org>



======Commit: b6950112======
======Short Message======
[doc] Add C Style Guide Rules for Symbol Naming
======Full Message======
[doc] Add C Style Guide Rules for Symbol Naming

Unlike C++, C does not have user-defined namespaces. This means
programmers need to be a lot more careful when naming types, functions,
and symbols.

The following two rules have come up in the software team when
discussing the DIFs, and I feel they are important enough to go into the
OpenTitan-wide C style guide.

1. All symbols in a particular header must share the same unique prefix.
2. The names of enumeration constants must be prefixed with the name of
   their respective enumeration type.

This commit adds both rules with some explanation as to why they are
needed, and some illustrative examples.

Signed-off-by: Sam Elliott <selliott@lowrisc.org>



======Commit: d834c70d======
======Short Message======
[doc] Document Top Earlgrey Parameterisations
======Full Message======
[doc] Document Top Earlgrey Parameterisations

At the moment, we only have one top level (top_earlgrey) and therefore
only one parameterisation of various peripherals (alert handler, pinmux,
PLIC).

The docs, until today, have been generated from the "default"
parameterisations, which have not matched the top earlgrey
parameterisations, which has made writing software against the hardware
difficult and error-prone.

This commit changes the docs to use the earlgrey parameterisations, and
documents the parameterisations in the parameter tables. Should we gain
other top levels, we should revisit how this is generated, but we knew
that already, and this makes the software developers lives much easier.

Closes #1068, #1496

Signed-off-by: Sam Elliott <selliott@lowrisc.org>



======Commit: 2681da75======
======Short Message======
[usb] Fix lint errors and warnings, remove inline lint comments
======Full Message======
[usb] Fix lint errors and warnings, remove inline lint comments

This commit fixes lint errors and warnings. It also removes inline lint
comments and adds SVAs instead.

This is related to lowRISC/OpenTitan#1093.

Signed-off-by: Pirmin Vogel <vogelpi@lowrisc.org>



======Commit: 333172cd======
======Short Message======
[testplanner tool] Fix for #1199
======Full Message======
[testplanner tool] Fix for #1199

- Fix to better align columns in the testplan expanded inline within the
DV plan docs.

Signed-off-by: Srikrishna Iyer <sriyer@google.com>



======Commit: 7b207b3a======
======Short Message======
[dv/alert_handler] support intr_test and tl_errs
======Full Message======
[dv/alert_handler] support intr_test and tl_errs

Add scb support for intr_test and tl_errors tests

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: 0d6eb443======
======Short Message======
[dv/gpio] Fix failure tests
======Full Message======
[dv/gpio] Fix failure tests

Fix failure tests due to after reset, simulator might run the deleting
queue thread first, then add items to the queue.

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: d5dd2146======
======Short Message======
Revert "[prim_assert] Fix lint error due to long lines"
======Full Message======
Revert "[prim_assert] Fix lint error due to long lines"

This reverts commit 17f60494bd4c515b650d82711ee1ff9a9a979fdd.

Backed out for CI failure:

Verilator reports (Vivado also fails):
```
%Error: ../src/lowrisc_ip_flash_ctrl_0.1/rtl/flash_ctrl.sv:474: syntax error, unexpected '('
```

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: 17f60494======
======Short Message======
[prim_assert] Fix lint error due to long lines
======Full Message======
[prim_assert] Fix lint error due to long lines

Signed-off-by: Michael Schaffner <msf@opentitan.org>



======Commit: fe07c7ce======
======Short Message======
Fix failing python dependencies in CI
======Full Message======
Fix failing python dependencies in CI

Signed-off-by: Greg Chadwick <gac@lowrisc.org>



======Commit: 46ede4b6======
======Short Message======
[hw] Add default clk/rst for prim_assert macros
======Full Message======
[hw] Add default clk/rst for prim_assert macros

Fixes #1259

Signed-off-by: Greg Chadwick <gac@lowrisc.org>



======Commit: cf423089======
======Short Message======
[hw] Switch to explicit prim_assert.sv include
======Full Message======
[hw] Switch to explicit prim_assert.sv include

Fixes #1431

Signed-off-by: Greg Chadwick <gac@lowrisc.org>



======Commit: bb1aab7c======
======Short Message======
[dv/common] pre_abort deadloop
======Full Message======
[dv/common] pre_abort deadloop

Fix pre_abort deadloop

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: 7e009f52======
======Short Message======
[dv] Fix xcelium compile error
======Full Message======
[dv] Fix xcelium compile error

Signed-off-by: Weicai Yang <weicai@google.com>



======Commit: de3b673c======
======Short Message======
[uvmdvgen] Fixes from #1441
======Full Message======
[uvmdvgen] Fixes from #1441

- Fixed the base_seq template to override the REQ type to the correct
type

Signed-off-by: Srikrishna Iyer <sriyer@google.com>



======Commit: 389d6fb0======
======Short Message======
[dv/xbar] Update core file to fix filelist error
======Full Message======
[dv/xbar] Update core file to fix filelist error

Signed-off-by: Weicai Yang <weicai@google.com>



======Commit: f578e7ca======
======Short Message======
[dv regr tool] Publish results in html + fixes
======Full Message======
[dv regr tool] Publish results in html + fixes

 - In this PR, the results published to the results server is switched
 over from markdown to html directly.
 - Uploaded results reuse the same css style that is already uploaded to
 `reports.opentitan.org/css/style.css`
 - This is just an elementary styling - enough to get the results look
 presentable.

In addition, there are few more updates:
- The history of past regressions are embedded as a section in the
latest results as opposed to being copied over to a separate
history.html
- All DV plan documents are updated to reflect the latest regression
results page correctly
- The results page now also provides a link back to the testplan for
ease of cross referencing the test points in the table.

Signed-off-by: Srikrishna Iyer <sriyer@google.com>



======Commit: 7f559d90======
======Short Message======
[dv] Improve sim performace for tl_errors
======Full Message======
[dv] Improve sim performace for tl_errors

Constraint took 99.5% of time and found tl_access_unmapped_addr took most of the time.
Use 2 ways to improve perf
1. Move for-loop calculation out of the constraint and use `inside` instead
2. Split the randomization into 2 parts and randomize addr first.
Sim time is reduced from 530s to 7s in worst case (running all tl_access_unmapped_addr)
and from 38s to 10s in normal case (running mixed tl error cases)

Signed-off-by: Weicai Yang <weicai@google.com>



======Commit: 3e4cd9d5======
======Short Message======
Fix busy_sleep_micros and ibex_busy_loop
======Full Message======
Fix busy_sleep_micros and ibex_busy_loop

- Implement `ibex_mcycle_read()` that reads the 64-bit cycle counter
value stored across `mcycleh` and `mcycle`.
- `busy_sleep_micros(size_t)`:
  - Rename to `usleep(uint32_t)`.
  - Fix divisor (should be `1000000`, had an extra `0`).
  - Use a `uint64_t` to store the number of cycles instead of `uint32_t`.
  - Replace the call to `ibex_busy_loop(size_t)` with a loop +
`ibex_mcycle_read()`.
- Remove `ibex_busy_loop(size_t)`.

See also: #1227, #1207.

Signed-off-by: Alphan Ulusoy <alphan@google.com>



======Commit: 8330c4c8======
======Short Message======
[CI] Use named Ubuntu image for package/deploy step
======Full Message======
[CI] Use named Ubuntu image for package/deploy step

The package/deploy step used "ubuntu-latest" as CI image, which doesn't
give reproducible results. Use Ubuntu 16.04 instead, which is our
default image.

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: 2f2baf57======
======Short Message======
[aes/rtl] Select clear/all-zero for invalid/default selector inputs
======Full Message======
[aes/rtl] Select clear/all-zero for invalid/default selector inputs

In case of invalid/default selector inputs, muxes now select the
clear/all-zero signal if available rather than just the first listed
signal.

Signed-off-by: Pirmin Vogel <vogelpi@lowrisc.org>



======Commit: 030e1fbb======
======Short Message======
[flash_ctrl] Temporary fix per #1412
======Full Message======
[flash_ctrl] Temporary fix per #1412

Signed-off-by: Timothy Chen <timothytim@google.com>



======Commit: a2b1528b======
======Short Message======
Timing parameter tuning algorithm and examples added
======Full Message======
Timing parameter tuning algorithm and examples added

To motivate some timing parameter examples requested as part of this PR, #1047, the programmers guide was started
in order to help explain the examples.   The programmers guide at this point only consists of a text description of the tuning
algorithm.

Also fixed a few minor typos.

Signed-off-by: Martin Lueker-Boden <martin.lueker-boden@wdc.com>



======Commit: 171540d4======
======Short Message======
[prim_arbiter] Add binary tree implementation for RR arbiter
======Full Message======
[prim_arbiter] Add binary tree implementation for RR arbiter

This adds a second RR arbiter implementation that is based on a binary
tree. The prim_arbiter module has thus been split into two modules named
prim_arbiter_ppc (original implementation) and prim_arbiter_tree.

The original implementation uses parallel prefix computing to determine
the next grant signal, and is better suited for ASIC implementations with
low timing pressure, since it can result in a slightly more compact
circuit.

The binary tree implementation maps better on FPGAs and in situations
where timing pressure is high (both in ASIC and FPGA logic).

Signed-off-by: Michael Schaffner <msf@opentitan.org>



======Commit: 0a447e50======
======Short Message======
[dif_plic] Introduce DIF PLIC library
======Full Message======
[dif_plic] Introduce DIF PLIC library

PLIC (Platform Level Interrupt Controller) multiplexes various device
interrupts onto the external interrupt lines. Single PLIC can facilitate
interrupt delivery to 1 or more targets.

This change introduces the PLIC DIF (Device Interface Functions) for
programming PLIC.

There is a number of important details that derive from the PLIC integration with
the Earl Grey, and the PLIC implementation itself:
 1) The sequence of interrupt sources as passed to the PLIC gateway,
    dictates the register layouts and the interrupt bit indexes in these
    registers. It also determines interrupt source IDs.
 2) Same peripheral interrupts are always packed together in the
    registers, and their IDs are consecutive.
 3) There is a set of per target registers that control the interrupt
    delivery to these targets (Interrupt Enable, Threshold and
    Claim/Complete).
 4) Any interrupt source can interrupt any of the PLIC supported targets
    providing the target specific registers are configured appropriately.

Note:
Presently, PLIC documentation is generated with a default parameterisation,
which does not match the Earl Grey PLIC implementation.

Relevant verilog source files to understand the Earl Grey PLIC
implementation:
hw/top_earlgrey/rtl/autogen/rv_plic_reg_top.sv:
registers implementation inside PLIC

hw/top_earlgrey/rtl/autogen/rv_plic.sv:
PLIC implementation

hw/top_earlgrey/rtl/autogen/top_earlgrey.sv:
IP blocks connected together, in particular "intr_vector" (size, how it is
assigned, and how it is passed to PLIC).

Signed-off-by: Silvestrs Timofejevs <silvestrst@lowrisc.org>



======Commit: 5703b90e======
======Short Message======
[sw] Fix behavior of uart_rcv_char()
======Full Message======
[sw] Fix behavior of uart_rcv_char()

This commit makes sure the function behaves as documented, i.e., return
-1 if no character is available and 0 if one character could be read.
Without this commit, the function is blocking until a character is
available, which partially breaks our hello_world/usbdev examples.

Signed-off-by: Pirmin Vogel <vogelpi@lowrisc.org>



======Commit: 5fc8c755======
======Short Message======
[clean] fix no-eol
======Full Message======
[clean] fix no-eol

Signed-off-by: Scott Johnson <scottdj@google.com>



======Commit: fd7d5d46======
======Short Message======
[prim_fifo_sync] Fix DC synth issue related to unpacked array
======Full Message======
[prim_fifo_sync] Fix DC synth issue related to unpacked array

Signed-off-by: Michael Schaffner <msf@opentitan.org>



======Commit: 43ef33a1======
======Short Message======
[aes/dv/makefile] I have updated the aes/dv/Makefile to default to vcs if SIMULATOR is not set
======Full Message======
[aes/dv/makefile] I have updated the aes/dv/Makefile to default to vcs if SIMULATOR is not set

Signed-off-by: Rasmus Madsen <rasmus.madsen@wdc.com>



======Commit: 3d93afbe======
======Short Message======
[dv regr] Some more fixes
======Full Message======
[dv regr] Some more fixes

- Adding some more fixes that possibly address some stability issues
when running sims locally

Signed-off-by: Srikrishna Iyer <sriyer@google.com>



======Commit: 228f1c1f======
======Short Message======
[dv regr tool] Possible fixes for crash / freeze
======Full Message======
[dv regr tool] Possible fixes for crash / freeze

- Reduced max parallel from 32 to 16
- Changed the command to move the test result links from mv to ln (more
stable)
- Test not found in regressions does not cause script to exit (just
throws an error and runs whatever it could find)

Signed-off-by: Srikrishna Iyer <sriyer@google.com>



======Commit: 1b5fa9f1======
======Short Message======
[verible/style] This corrects several style linter warnings/errors
======Full Message======
[verible/style] This corrects several style linter warnings/errors

Signed-off-by: Michael Schaffner <msf@opentitan.org>



======Commit: 8c8e14d7======
======Short Message======
[dv/trial1] Fix race condition
======Full Message======
[dv/trial1] Fix race condition

Use non-blocking assignment to fix race condition
Signed-off-by: Weicai Yang <weicai@google.com>



======Commit: 3529221b======
======Short Message======
[dv regr tool] Added 'overrides' directive
======Full Message======
[dv regr tool] Added 'overrides' directive

- You can now specify overrides for default sim key values using the
overrides keyword.
- Example:
```hjson

  // In 'common' cfg, specify a default attribute
  foo: bar

  // In DUT specific cfg, provide an override for it
  overrides: [
    {
      name: foo
      value: baz
    }
  ]
```

- This us useful to set a project-default attribute and use overrides if
an IP needs a custom version of it.
- This is needed to setup the hjson cfg for the chip level where the
coverage collection model is different.

Signed-off-by: Srikrishna Iyer <sriyer@google.com>



======Commit: 627f782f======
======Short Message======
[usbdev dv] Initial dv bench
======Full Message======
[usbdev dv] Initial dv bench

- Full UVM DV bench for usbdev
- Added a skeleton usb20 UVM agent just in case someone has BW to
develop it
- RTL and testbench compiles cleanly
- Basic CSR power on reset test passing with 100 seeds

- Added usbdev links to hw/_index.md to get it to show the USBDEV spec
and DV plan docs
- Renamed usbdev.sv tl ports from tl_d_i to tl_i and tl_d_o to tl_o
  - Reason for this is to support automation (conformity across all IPs
  helps)
- Minor fixes to uvmdvgen templates

Signed-off-by: Srikrishna Iyer <sriyer@google.com>



======Commit: 9218949e======
======Short Message======
[lint] Fix minor lint warnings
======Full Message======
[lint] Fix minor lint warnings

Signed-off-by: Michael Schaffner <msf@opentitan.org>



======Commit: c53ac172======
======Short Message======
[dv/top] Fix top_earlgray sanity
======Full Message======
[dv/top] Fix top_earlgray sanity

when jtag reset takes longer than system reset, it will block the mem
load and cpu fetches unknown instructions
Signed-off-by: Weicai Yang <weicai@google.com>



======Commit: 941227d0======
======Short Message======
[dv/common] outstanding access
======Full Message======
[dv/common] outstanding access

In DV common seq, add an outstanding access for the same CSR. cannot use
ral build in read/write, so uses tl_access
Overwrite "WO" reg's predict function, so that if WO, ral won't update
the current write value, will return the default value

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: af7b2782======
======Short Message======
Update pulp_riscv_dbg to pulp-platform/riscv-dbg@2b1e9d0
======Full Message======
Update pulp_riscv_dbg to pulp-platform/riscv-dbg@2b1e9d0

Update code from upstream repository https://github.com/pulp-
platform/riscv-dbg to revision
2b1e9d09614c2bf2774f897c5151697cd6f034ed

* Fix too small cast (bluew)
* Make sure all case statements are unique and have a default (Michael
  Schaffner)
* [abstract cs] Do not execute invalid abstract cmd (Tom Roberts)
* [ROM] Restore s0 and a0 on debug exception entry (Tom Roberts)

Signed-off-by: Michael Schaffner <msf@opentitan.org>



======Commit: ee57d1ae======
======Short Message======
[dv] Support Xcelium and xprop in new dv regression flow
======Full Message======
[dv] Support Xcelium and xprop in new dv regression flow

And also update vcs coverage and fix profile opt

Signed-off-by: Weicai Yang <weicai@google.com>



======Commit: 03b7f1f5======
======Short Message======
[dv] Fix for glint error
======Full Message======
[dv] Fix for glint error

- Fixed sw_msg_monitor_if to resolve the style lint error

Signed-off-by: Srikrishna Iyer <sriyer@google.com>



======Commit: eb27b6fb======
======Short Message======
[dv/common] Fix tl_err with rst not handle non-blocking
======Full Message======
[dv/common] Fix tl_err with rst not handle non-blocking

Fix tl_err with rst in scb could not handle non-blocking read/write.
Fix hmac stress all test adding tl_error when the new
tl_err_with_rand_reset already included this test
Adjust the tl_err running num to make sure simulation do not run for a
long time

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: 7d3a9e02======
======Short Message======
[dif_uart] Introduce UART DIF library
======Full Message======
[dif_uart] Introduce UART DIF library

This change introduces an UART DIF, a low level library for UART
hardware manipulation. The set of functions in this library can be
used in an ISR context, as well as normal execution context (It is up
to the higher level driver or OS to guard against the race conditions).

The init function is responsible for initialising the UART state,
which must be passed to all other DIF API.

This change is written to RFC #1043, and fixes issue #1076

Limitations:
* Implementation expects that only one thread of execution exclusively
  owns the hardware resource. This is a subject to implementation in a
  higher level driver, or OS.
* Implementation does not protect against race conditions that can
  occur between the ISR context and normal execution context. This
  responsibility also lies on a higher level driver or OS.

Current state:
* Fundamental API has been introduced, which should be sufficient for an UART
  driver needs, however it may be evolved and extended. For example, private
  user data could be added to the state structure.
* This API is largely untested

Signed-off-by: Silvestrs Timofejevs <silvestrst@lowrisc.org>



======Commit: 642faf28======
======Short Message======
[dv/alert_handler] Fix Xcelium error
======Full Message======
[dv/alert_handler] Fix Xcelium error

Xcelium run time error due to using the same object to send seq_item

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: ae02f9aa======
======Short Message======
[fpv/adapter_sram] Fix assertion X check
======Full Message======
[fpv/adapter_sram] Fix assertion X check

Current assertion checks if read out value is X,
but when no data is written, FIFO read out is X, so we decide to relax
the assertion.

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: 730d504a======
======Short Message======
[usbdev] Fix two bugs for packets of length 63/64
======Full Message======
[usbdev] Fix two bugs for packets of length 63/64

Signed-off-by: Stefan Lippuner <lstefan@iis.ee.ethz.ch>



======Commit: 86144f70======
======Short Message======
[usbdev] Fix issues discovered with linter
======Full Message======
[usbdev] Fix issues discovered with linter

Signed-off-by: Stefan Lippuner <lstefan@iis.ee.ethz.ch>



======Commit: a17530f0======
======Short Message======
[usbdev] USB device update from ETH repo
======Full Message======
[usbdev] USB device update from ETH repo

This commit combines a number of changes and improvements that have been implemented in a separate system.
Major changes:
 - Control endpoint stalling
 - Link FSM aligned with USB spec
 - Faster TX after RX (to meet spec)
 - Reset & CDC fixes
 - More software visibility on errors
 - ISO endpoint support
 - Differential transceiver support (SW controlled)

Signed-off-by: Stefan Lippuner <lstefan@iis.ee.ethz.ch>



======Commit: 64009056======
======Short Message======
[dv regr tool] Enabled 2 command line switches
======Full Message======
[dv regr tool] Enabled 2 command line switches

- Enabled the following command line switches:
  - --purge: Clean the scratch area
  This is a standalone switch meant to be run by itself. If items are
  specified to be run, they are ignored.

  - --map-full-testplan: This forces the result to be mapped to the
  complete testplan. By default the full mapping is disabled; only the
  tests that are run in that regression are mapped instead for a smaller
  and more concise table.

- Fixes:
  - Fixed results table column alignment

Signed-off-by: Srikrishna Iyer <sriyer@google.com>



======Commit: 8af5a2a3======
======Short Message======
[dv/alert_handler] Add scoreboard support
======Full Message======
[dv/alert_handler] Add scoreboard support

Add simple predictions for scb TLUL and alert agents
Fix enum type name

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: e19f42bd======
======Short Message======
[dv] Port HMAC to use dvsim regr tool
======Full Message======
[dv] Port HMAC to use dvsim regr tool

- added HMAC sim configuration hjson file with test specifications
- minor fixes and enhancements

Signed-off-by: Srikrishna Iyer <sriyer@google.com>



======Commit: 9bfff179======
======Short Message======
[prim] Fix prim_ram_2p_async_adv reset
======Full Message======
[prim] Fix prim_ram_2p_async_adv reset

 - Add a separate reset signal for both clock domains
 - Add a missing reset to x_rvalid_sram

Signed-off-by: Stefan Lippuner <lstefan@iis.ee.ethz.ch>



======Commit: 893f665d======
======Short Message======
[lint] Preliminary Verilator/AscentLint lint flows for AES
======Full Message======
[lint] Preliminary Verilator/AscentLint lint flows for AES

This patch adds preliminary linting support for Verilator and
AscentLint for the AES module (the lint targets and waiver files will
follow in a subsequent commit).

Support for AscentLint is preliminary, since the flow still requires a
proprietary lint policy file, which is not publicly available. However,
this lint policy will be available soon as a built-in lint policy in the
upcoming 2019.A.p3 release of the tool. The lint waivers will all be
publicly available, and the lint makefile supports a summary report option
that filters out the relevant messages from a batch run. Note that lint
report information must be filtered using this summary report script
before publishing openly.

The Verilator lint waivers are only partially populated at the moment, and
hence this linting flow still throws many warnings and messages. Further,
there is no summary report generation for Verilator lint yet.

Signed-off-by: Michael Schaffner <msf@opentitan.org>



======Commit: 3b812844======
======Short Message======
Minor fix to xbar template code
======Full Message======
Minor fix to xbar template code

Related to #1285

Signed-off-by: Timothy Chen <timothytim@google.com>



======Commit: e4315d21======
======Short Message======
[dv] Add auto-generate xbar TB in topgen
======Full Message======
[dv] Add auto-generate xbar TB in topgen

Also re-generate alert_handler.hjson to fix some typo

Signed-off-by: Weicai Yang <weicai@google.com>



======Commit: 43e08b63======
======Short Message======
[dv/doc] Fix minor diagram arrow
======Full Message======
[dv/doc] Fix minor diagram arrow

Fix gpio, hmac, i2c, rv_timer, spi_device, tlul, and uart

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: 7cf7cad8======
======Short Message======
[dv regr tool] Generate testplan annotated results
======Full Message======
[dv regr tool] Generate testplan annotated results

- Updated script to generate a testplan annotated results table
- Additional minor fixes to support the above change

Note the table is generated using a thirld party python library called
'tabulate'. This needs to be installed separately by running
```
pip3 install --user tabulate
```

It has been added to the `python-requirements.txt` file.

Signed-off-by: Srikrishna Iyer <sriyer@google.com>



======Commit: c5ed91c1======
======Short Message======
[synthesis] Several small fixes to make DC synthesis run
======Full Message======
[synthesis] Several small fixes to make DC synthesis run

Signed-off-by: Michael Schaffner <msf@opentitan.org>



======Commit: e69c75b8======
======Short Message======
[alert_handler/doc] V1 for alert_handler
======Full Message======
[alert_handler/doc] V1 for alert_handler

Declare V1 stage for alert_handler
Update description as we are verifying in both DV and FPV
Fix a tiny typo in register file

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: 6f30e93b======
======Short Message======
[sw/device] Disable PIC and PIE for device code
======Full Message======
[sw/device] Disable PIC and PIE for device code

Meson by default enables position-indepdendent code (PIC) in static
libraries. This is so that static libraries can be linked into shared
libraries, without the static library needing to be rebuilt.

Unfortunately, this causes some symbol lookups in the final executables
to use the GOT. Our device linker scripts do not support using a GOT, so
we must disable PIC everywhere. This can be done with `pic: false` in
the `static_library` call, but we wish to disable it globally for device
code.

I have taken this opportunity to disable position-independent
executables (PIE) explicitly as well. PIE is not enabled by default, but
explicitly disabling it should mean that future meson updates will not
break our device code.

Signed-off-by: Sam Elliott <selliott@lowrisc.org>



======Commit: 94c295a7======
======Short Message======
Avoid broken meson version 0.53.0 on Python 3.5.2
======Full Message======
Avoid broken meson version 0.53.0 on Python 3.5.2

Meson 0.53.0 broke compatibility with Python 3.5.2

Error message with meson 0.53.0 in our Ubuntu 16.04/Python 3.5.2 CI
environment:

```
meson -Dtarget=sim-verilator -Dot_version=opentitan-snapshot-20191101-1-434-gb99db7f -Ddev_bin_dir=/home/vsts/work/1/a/build-bin/sw/device/sim-verilator -Dhost_bin_dir=/home/vsts/work/1/a/build-bin/sw/host --cross-file=/tmp/toolchain.dhA3HP.txt /home/vsts/work/1/a/build-out/sw/sim-verilator
Traceback (most recent call last):
  File "/usr/local/bin/meson", line 11, in <module>
    load_entry_point('meson==0.53.0', 'console_scripts', 'meson')()
  File "/usr/local/lib/python3.5/dist-packages/pkg_resources/__init__.py", line 489, in load_entry_point
    return get_distribution(dist).load_entry_point(group, name)
  File "/usr/local/lib/python3.5/dist-packages/pkg_resources/__init__.py", line 2852, in load_entry_point
    return ep.load()
  File "/usr/local/lib/python3.5/dist-packages/pkg_resources/__init__.py", line 2443, in load
    return self.resolve()
  File "/usr/local/lib/python3.5/dist-packages/pkg_resources/__init__.py", line 2449, in resolve
    module = __import__(self.module_name, fromlist=['__name__'], level=0)
  File "/usr/local/lib/python3.5/dist-packages/mesonbuild/mesonmain.py", line 25, in <module>
    from . import mconf, mdist, minit, minstall, mintro, msetup, mtest, rewriter, msubprojects, munstable_coredata
  File "/usr/local/lib/python3.5/dist-packages/mesonbuild/mconf.py", line 16, in <module>
    from . import coredata, environment, mesonlib, build, mintro, mlog
  File "/usr/local/lib/python3.5/dist-packages/mesonbuild/environment.py", line 32, in <module>
    from . import compilers
  File "/usr/local/lib/python3.5/dist-packages/mesonbuild/compilers/__init__.py", line 102, in <module>
    from .compilers import (
  File "/usr/local/lib/python3.5/dist-packages/mesonbuild/compilers/compilers.py", line 389, in <module>
    class CompilerArgs(typing.MutableSequence[str]):
  File "/usr/local/lib/python3.5/dist-packages/mesonbuild/compilers/compilers.py", line 658, in CompilerArgs
    def __eq__(self, other: typing.Any) -> typing.Union[bool, 'NotImplemented']:
    "Forward references must evaluate to types.")
  File "/usr/lib/python3.5/typing.py", line 312, in _type_check
    raise TypeError(msg + " Got %.100r." % (arg,))
TypeError: Forward references must evaluate to types. Got NotImplemented.
```

Works around #1288 for now.
Reported upstream at https://github.com/mesonbuild/meson/issues/6427

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: d5251ac2======
======Short Message======
[xbar/dv] Support multiple address range in device
======Full Message======
[xbar/dv] Support multiple address range in device

1. Move xbar/dv to xbar_main/dv
2. Support multiple address range in device
3. Fix some minor issues in xbr tpl files

Signed-off-by: Weicai Yang <weicai@google.com>



======Commit: d76ed7d9======
======Short Message======
[dv] Fix top_earlgrey failure
======Full Message======
[dv] Fix top_earlgrey failure

X is propagated from dm_top due to lack of reset on jtag reset pin
Add reset at the beginning of run phase in jtag driver

Signed-off-by: Weicai Yang <weicai@google.com>



======Commit: 5bcb5dfe======
======Short Message======
[doc] Fix wrong paths in getting started guide
======Full Message======
[doc] Fix wrong paths in getting started guide

Signed-off-by: Pirmin Vogel <vogelpi@lowrisc.org>



======Commit: 74a39e3e======
======Short Message======
Update lowrisc_ibex to lowRISC/ibex@7e22830
======Full Message======
Update lowrisc_ibex to lowRISC/ibex@7e22830

Update code from upstream repository
https://github.com/lowRISC/ibex.git to revision
7e2283056b18cf3b1733d12cfd877a46102ab201

The import required the following updates to our in-tree code:
- Update top_earlgrey to align its Verilator simulation with the changes
  made to simutil_verilator.
- Update the test harness to always use `--meminit=flash,...`, instead of
  `--meminit flash,...`. The variant with space doesn't work any more
  (and isn't documented to work).

* [rtl] Trigger C decoder assertions only if instr valid (Pirmin
  Vogel)
* [DV] Continue argument parsing (Tobias Wölfel)
* [ci] Add clang-format checking to CI (Tom Roberts)
* [verilator] Fix ELF processing (Bryan Cantrill)
* SimCtrlExtension: Add a default destructor (Philipp Wagner)
* [verilator] Modify verilator examples for memutils (Tom Roberts)
* [verilator] Separate out memory loading utilities (Tom Roberts)
* [make] Fix target reference (Tobias Wölfel)
* [rtl] By default, forward incoming instruction in C decoder (Pirmin
  Vogel)
* [rtl] Use macros for all SystemVerilog assertions (Pirmin Vogel)
* [rtl] Remove X assignments, add SVAs for selector signals (Pirmin
  Vogel)
* [rtl] Consistently use `data_offset` signal in LSU (Pirmin Vogel)
* [DV] Fix TB read responses (lowRISC/ibex#531) (udinator)
* Update google_riscv-dv to google/riscv-dv@9ecee87 (lowRISC/ibex#530)
  (udinator)
* Update google_riscv-dv to google/riscv-dv@74b8cb6 (lowRISC/ibex#529)
  (udinator)
* [DV] fix incorrect irq_seq handle name (lowRISC/ibex#525) (udinator)
* [DV] update MISA csr yaml description (lowRISC/ibex#513) (udinator)
* [DV] Enable sending multiple interrupts at once (lowRISC/ibex#519)
  (udinator)
* [DV] update override to riscv_asm_program gen in Makefile
  (lowRISC/ibex#520) (udinator)
* [RTL] Only restore from mstack in nmi mode (Greg Chadwick)
* Update google_riscv-dv to google/riscv-dv@5b1dd4e (lowRISC/ibex#523)
  (udinator)
* [DV] add support_unaligned_load_store setting (lowRISC/ibex#521)
  (udinator)
* [DV] Fix xRET wait checks (lowRISC/ibex#515) (udinator)
* [doc] Add a comment on mhpmcounter optimization (Tom Roberts)
* [dbg] Add minimal hardware breakpoint support (Tom Roberts)
* [verilator] Clarify ELF BSS handling (Tobias Wölfel)
* [examples] Fix spelling for description type (Tobias Wölfel)
* [csr] Add U Mode support to misa (Tom Roberts)
* RTL simulation scripts for Cadence tool was added (Taras Dulibianyk)
* Add Synopsys VCS Support for Ibex Simple System (Mehrdad Biglari)
* Pluseargs parsing was corrected (Taras Dulibianyk)
* [ci] Add CS registers TB to CI (Tom Roberts)

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: 0523f6b8======
======Short Message======
[top_earlgrey] Multi-tiered Xbar
======Full Message======
[top_earlgrey] Multi-tiered Xbar

Problem (Need-to-Improve):

    tlgen puts many Async FIFOs if the devices' clocks are different
    from the main Xbar clock. If the top has multiple Xbars, the address
    for lower-tiered Xbar isn't aggregated into the device port of the
    main crossbar.

This commit is to separate the main crossbar into two crossbars, one for
main crossbar having the peripherals, memories having main clock,
another for the peri crossbar having the peripherals using fixed clock
for their main clocks.

Signed-off-by: Eunchan Kim <eunchan@opentitan.org>



======Commit: 07e50b81======
======Short Message======
[dv] Fix compile error in top_eargrey
======Full Message======
[dv] Fix compile error in top_eargrey

Signed-off-by: Weicai Yang <weicai@google.com>



======Commit: 67ee833d======
======Short Message======
[dv] Fix compile error and warning
======Full Message======
[dv] Fix compile error and warning

1. Specify local cfg to fix compile error
2. Change task to function to fix warning as it's used in another
function

Signed-off-by: Weicai Yang <weicai@google.com>



======Commit: 632825bb======
======Short Message======
[dv] Fix csr seq and adaptor
======Full Message======
[dv] Fix csr seq and adaptor

1. Fix null object error at mem address in reg_adaptor
2. Fix csr exclusion issue in csr_rw_seq

Signed-off-by: Weicai Yang <weicai@google.com>



======Commit: e4da673f======
======Short Message======
[dv] Add TL error seq to run in parallel with stress & reset
======Full Message======
[dv] Add TL error seq to run in parallel with stress & reset

1. Add tl_err seq with stress & reset
2. use low priority for tl_err and set the other tl item priority to be
100 at tl_access and csr_utils_pkg
Signed-off-by: Weicai Yang <weicai@google.com>



======Commit: 44a912b2======
======Short Message======
[dv] Add xprop support
======Full Message======
[dv] Add xprop support

1. enable xprop by default when run sim with vcs
2. only enable xprop for tb.dut
Signed-off-by: Weicai Yang <weicai@google.com>



======Commit: a7b1fd77======
======Short Message======
[spi_device/dv] Update for under/overflow seq
======Full Message======
[spi_device/dv] Update for under/overflow seq

1. Update seq for #103 to avoid data mis-alignment
2. Fix mis-connected interrupts in tb

Signed-off-by: Weicai Yang <weicai@google.com>



======Commit: 2463e2db======
======Short Message======
[sw] Split irq control functions from handlers
======Full Message======
[sw] Split irq control functions from handlers

When testing, it is useful to be able to use the irq control functions,
while also overriding the default handler implementations in handler.c.
This commit splits the libraries, so components can both control their
interrupts and override the default handlers (which depend on uart).

This commit also splits off the declarations of the handler function
names into the handler header, so that other libraries can produce
compatible definitions which override the default, weak-linkage,
definitions. In particular, only the default definitions should have
`__attribute__((weak))`, and only the hardware interrupt handlers should
be aligned and have `__attribute__((interrupt))`.

This commit also documents the requirements about interrupt handler and
mtvec address alignment.

Signed-off-by: Sam Elliott <selliott@lowrisc.org>



======Commit: 0240b786======
======Short Message======
[doc] Fix code examples in IP docs
======Full Message======
[doc] Fix code examples in IP docs

Fix some code examples in the PLIC IP specification, so they conform to
what clang-format and our style guide mandate a little better (the
examples being pseudocode notwithstanding).

Signed-off-by: Miguel Young de la Sota <mcyoung@google.com>



======Commit: 1c514414======
======Short Message======
[util] get-toolchain.py: Support JSON buildinfo files
======Full Message======
[util] get-toolchain.py: Support JSON buildinfo files

Current toolchain builds from
https://github.com/lowRISC/lowrisc-toolchains contain a human-readable
"buildinfo" file with the version of the build, among other things.
Since https://github.com/lowRISC/lowrisc-toolchains/pull/6 the toolchain
builds also contain a buildinfo.json file with a superset of this
information in JSON, which is much better to read from a script.

This commit updates the get-toolchain.py script to make use of this new
JSON build information, if available, and fall back to the old plaintext
file otherwise.

To help the implementation of that feature I also did the following
cleanups:

- (Behavior) Remove the `--force` option, and imply it with `--update`
  if a existing toolchain installation was detected; bail out with an
  error if the target path doesn't a toolchain yet. This gives us
  roughly the same safety net as before, while simplifying the logic.
- (Fix) Fix buildinfo regex to work with all known buildinfo files.
- (Refactoring) Use pathlib.Path consistently.
- (Refactoring) Shuffle around functions to get build information, and
  improve their naming.

Overall we get a slight decrease in lines-of-code and more
functionality.

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: ca656842======
======Short Message======
[dv] Use macro UVM to distinguash UVM TB and the other environments
======Full Message======
[dv] Use macro UVM to distinguash UVM TB and the other environments

Xcelium doesn't compile UVM at the beginning. UVM_PKG_SV macro isn't set
before compile prim_assert. Hence, assert error isn't reported as
uvm_error. Use +define+UVM to solve this issue

Signed-off-by: Weicai Yang <weicai@google.com>



======Commit: 26e22006======
======Short Message======
[meson] Ensure we don't include a build-id in the ROM
======Full Message======
[meson] Ensure we don't include a build-id in the ROM

This is a followup patch from 5e2c8db45819acaa4f1c3b01cd958abd7e13b26a
which ensured we don't see a build-id in the SW binaries. This patche
ensures it doesn't make it into the ROM binary.

Signed-off-by: Alistair Francis <alistair.francis@wdc.com>



======Commit: bacc0713======
======Short Message======
[sw] Fix CI due to missing #includes.
======Full Message======
[sw] Fix CI due to missing #includes.

Signed-off-by: Miguel Young de la Sota <mcyoung@google.com>



======Commit: b1a4e034======
======Short Message======
[sw] Fix the |.data| segment in boot_rom to be mutable.
======Full Message======
[sw] Fix the |.data| segment in boot_rom to be mutable.

This change also cleans up the boot ROM's CRT code and linker script.

Signed-off-by: Miguel Young de la Sota <mcyoung@google.com>



======Commit: fa976d43======
======Short Message======
Update pulp_riscv_dbg to pulp-platform/riscv-dbg@6bef5d8
======Full Message======
Update pulp_riscv_dbg to pulp-platform/riscv-dbg@6bef5d8

Update code from upstream repository https://github.com/pulp-
platform/riscv-dbg to revision
6bef5d80f3559d54cfd0cecd1fa40edb564daa93

* [ling/cleanup] Fix several verilator lint warnings due to sizing
  (Michael Schaffner)
* [lint/cleanup] Break long lines and make literal lengths explicit
  (Michael Schaffner)
* [lint/cleanup] Fix several lint errors / warnings (Michael
  Schaffner)
* [lint/cleanup] Simplify some statements (Michael Schaffner)
* [lint/cleanup] Make params unsingend, correct defaults and uniquify
  (Michael Schaffner)
* [lint/cleanup] Name blocks, align blocking structure (Michael
  Schaffner)
* [lint/cleanup] Change indentation from 4 to 2 spaces per tab
  (Michael Schaffner)
* [lint/cleanup] Fix lint warning in debug_rom, fix indentation
  (Michael Schaffner)

Signed-off-by: Michael Schaffner <msf@opentitan.org>



======Commit: f1fa20b6======
======Short Message======
[docs] Fix link to register tool documentation
======Full Message======
[docs] Fix link to register tool documentation

Signed-off-by: Satnam Singh <satnam@google.com>



======Commit: 5797c565======
======Short Message======
[sw/meson] Move Debug Choice into Options
======Full Message======
[sw/meson] Move Debug Choice into Options

Signed-off-by: Sam Elliott <selliott@lowrisc.org>



======Commit: e9f2566e======
======Short Message======
[sw/meson] Move Error Level Choice into Options
======Full Message======
[sw/meson] Move Error Level Choice into Options

Signed-off-by: Sam Elliott <selliott@lowrisc.org>



======Commit: 3d265a68======
======Short Message======
[dv/common] Fix vcs warnings from the uvmgen
======Full Message======
[dv/common] Fix vcs warnings from the uvmgen

Fix vcs warning by adding a void cast to the predict function

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: 7e90d6b0======
======Short Message======
[hmac] Case to Unique and default
======Full Message======
[hmac] Case to Unique and default

The style guide is updated to mandate `unique case` with exceptions.
Also, the case is recommended to have `default` statement regardless of
whether the condition inside the case statement is full or not.

HMAC/ PrimPacker modules are updated to have them in place.

Signed-off-by: Eunchan Kim <eunchan@opentitan.org>



======Commit: a2a38201======
======Short Message======
Fix markdown syntax for heading
======Full Message======
Fix markdown syntax for heading

The heading "C Version" renders incorrectly because the character after last # is not space.

Signed-off-by: Alphan Ulusoy <alphan@google.com>



======Commit: b89b84f7======
======Short Message======
[sw] Fix a few places where execution could "fall off"
======Full Message======
[sw] Fix a few places where execution could "fall off"

Signed-off-by: Miguel Young de la Sota <mcyoung@google.com>



======Commit: 1a4dbe07======
======Short Message======
[aes/rtl] Fix linting errors
======Full Message======
[aes/rtl] Fix linting errors

Signed-off-by: Pirmin Vogel <vogelpi@lowrisc.org>



======Commit: 57418e78======
======Short Message======
[systemtest] Add test timeout
======Full Message======
[systemtest] Add test timeout

Time out tests; if tests time out, all existing logs are dumped, helping
to debug.

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: 907d803a======
======Short Message======
[systemtest] Avoid time increments after compare
======Full Message======
[systemtest] Avoid time increments after compare

We didn't use the same time value for a comparision and later on in a
statement, causing a negative value to be passed to select.select().
This leads to "ValueError: timeout must be non-negative".

Avoid the problem by buffering the current time for the check and the
socket.select() call.

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: 416770cf======
======Short Message======
[systemtest] Fix log dumping
======Full Message======
[systemtest] Fix log dumping

All logs are written to a temporary directory. If a pytest fails, we do
have code in pytest_exception_interact() to dump all files in the
temporary directory. This logic was broken by renaming the temporary
directory parameter from `tmpdir` to `tmp_path`. Fix that; it remains
fragile though.

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: 22abe231======
======Short Message======
[top_earlgrey] Fix path to memory init files
======Full Message======
[top_earlgrey] Fix path to memory init files

After switching to meson, the boot rom is in a different location. Fix
the default include path.

Fixes #1169

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: 1faaa454======
======Short Message======
[sw] Fix some style issues in the AES proto dif.
======Full Message======
[sw] Fix some style issues in the AES proto dif.

This also fixes a header/TU mismatch in |aes_key_put()|.

Signed-off-by: Miguel Young de la Sota <mcyoung@google.com>



======Commit: 33d52d2f======
======Short Message======
[doc] Fix make invocations missed in #1070
======Full Message======
[doc] Fix make invocations missed in #1070

Signed-off-by: Miguel Young de la Sota <mcyoung@google.com>



======Commit: 680faef6======
======Short Message======
[sw] Avoid GNU Extensions for C
======Full Message======
[sw] Avoid GNU Extensions for C

We want to keep the C that we are writing as close to standard C as
possible. This means switching off `-std=gnu99` in favour of `-std=c99`,
which should lead to better compiler warnings and errors.

Signed-off-by: Sam Elliott <selliott@lowrisc.org>



======Commit: dd043d0b======
======Short Message======
[sw] Avoid using `__asm__` for Inline Assembly
======Full Message======
[sw] Avoid using `__asm__` for Inline Assembly

In preparation for moving to `-std=c99`, all uses of `asm` as a C
keyword have become invalid.

Given we wish to use `asm`, this patch provides a define to `__asm__`, a
compiler-specific C extension which matches the `asm` keyword interface
in C++.

This patch also updates all uses of `__asm__` to use the `asm` macro,
following the notes in the proposed Assembly Style Guide.

Signed-off-by: Sam Elliott <selliott@lowrisc.org>



======Commit: 69b8732a======
======Short Message======
[sw] Fix mpsse Compile Error in usleep
======Full Message======
[sw] Fix mpsse Compile Error in usleep

In preparation for moving to `-std=c99`, there arose a compile issue
with the usage of `usleep` in `mpsse.c`. This patch defines the correct
version of `_XOPEN_SOURCE` which ensures that `usleep` will be
available.

Signed-off-by: Sam Elliott <selliott@lowrisc.org>



======Commit: bc59e9e0======
======Short Message======
[sw] Standardise Variadic Logging Macros
======Full Message======
[sw] Standardise Variadic Logging Macros

In preparation for moving to `-std=c99`, we need to fix the usage of
variadic macros in the logging interface. This is because of a known
issue in C99/C11 where `__VA_ARGS__` often requires a non-zero number of
arguments in order to avoid issues with extra commas in function calls.

We fix the issue by including the initial, non-optional `fmt` argument
within the variadic part of these macros, so `__VA_ARGS__` always has
at least one argument within it.

Signed-off-by: Sam Elliott <selliott@lowrisc.org>



======Commit: 033221b2======
======Short Message======
[i2c] Minor FSM Update
======Full Message======
[i2c] Minor FSM Update

Fixing Lint violations in FSM:
-Assigned byte_index to '0 at reset.
-Fixed bit length mismatch between byte_num and fmt_byte_i.

Signed-off-by: Igor Kouznetsov <igor.kouznetsov@wdc.com>



======Commit: 6e9fae91======
======Short Message======
[github] Add owner for util
======Full Message======
[github] Add owner for util

Set default owner for root util directory.

Fixes #1140

Signed-off-by: Tobias Wölfel <tobias.woelfel@mailbox.org>



======Commit: 6ad9ad44======
======Short Message======
[prim_lfsr] Fix verilator lint warnings
======Full Message======
[prim_lfsr] Fix verilator lint warnings

Signed-off-by: Michael Schaffner <msf@opentitan.org>



======Commit: 5ddcc73c======
======Short Message======
[fpv/tcl] Fix tcl file compile error
======Full Message======
[fpv/tcl] Fix tcl file compile error

Fix tcl fix compile error

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: e9dc2aac======
======Short Message======
[ci] Fix some CI steps to use the install-deps template.
======Full Message======
[ci] Fix some CI steps to use the install-deps template.

Signed-off-by: Miguel Young de la Sota <mcyoung@google.com>



======Commit: 1dc43db5======
======Short Message======
[xbar/dv] Fix compile warning at xbar bind file
======Full Message======
[xbar/dv] Fix compile warning at xbar bind file

1. Update tlgen.py to generate bind file with corrent endpoint
2. Add xbar_main_bind as a top
Signed-off-by: Weicai Yang <weicai@google.com>



======Commit: ad3eb03d======
======Short Message======
[tlul/dv] Temporarily fix tlul error due to new feature - multi-clk
======Full Message======
[tlul/dv] Temporarily fix tlul error due to new feature - multi-clk

New feature was just added #903
Current TB doesn't support multi-clock, use same clock to avoid failure
Signed-off-by: Weicai Yang <weicai@google.com>



======Commit: 49b23b8d======
======Short Message======
[test] Add riscv_compliance patch
======Full Message======
[test] Add riscv_compliance patch

- Add opentitan target
- Remove tests that are known to fail. These should be restored later.

Signed-off-by: Timothy Chen <timothytim@google.com>



======Commit: 4a4946d9======
======Short Message======
[meson] Make meson_init.sh idempotent.
======Full Message======
[meson] Make meson_init.sh idempotent.

This change makes meson_init.sh idempotent; this way, all of our build
instructions can simply say to run `./meson_init.sh` indiscriminately,
without worrying about confusing users or breaking scripts with errors.

The old functionality, where existing directories would cause an error,
isn't very useful outside of CI, and can be accessed with
`./meson_init.sh -A`.

Signed-off-by: Miguel Young de la Sota <mcyoung@google.com>



======Commit: 8446204f======
======Short Message======
[fpvgen] Minor update to make generated files compile
======Full Message======
[fpvgen] Minor update to make generated files compile

This adds a TODO comment and fixes a syntax error in one of the file
templates.

Signed-off-by: Michael Schaffner <msf@opentitan.org>



======Commit: 3bc8e097======
======Short Message======
[sw] Reference bug report on the use of objcopy
======Full Message======
[sw] Reference bug report on the use of objcopy

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: 7d7467a2======
======Short Message======
Revert "[sw/device] Drop all linker sections not specified"
======Full Message======
Revert "[sw/device] Drop all linker sections not specified"

This reverts commit 5336f3fde4d804c37b0dc49379d903144fd78d27.

Dropping all nonspecified sections from the ELF was done in order to
prevent the .note.gnu.build-id section to appear in the final binary
that we create with objcopy. As a side effect, this also removed all
other sections, like debug sections, making the ELF files unusable for
debugging with GDB (something we document in our user guide).

It turns out, this patch is actually unnecessary. We already suppress
the generation of the .note.gnu.build-id section by passing
|--build-id=none| to the linker.

If (for whatever reason in the future) we want to use the build id, a
better fix would be one of:

- Don't dump the .note.gnu.build-id section into the binary (*.bin) file
  by passing |-R .note.gnu.build-id| to objcopy.
- Modify the linker script to discard this section, or place it
  somewhere more suitable, and ideally give it a label so it can be
  referenced from software. See
  https://interrupt.memfault.com/blog/gnu-build-id-for-firmware for
  write-up.

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: 03af2b7d======
======Short Message======
[site] Suppress non-printworthy styling in print
======Full Message======
[site] Suppress non-printworthy styling in print

Suppress the rendering of several elements during printing: the table of
contents, the header, and skip-to-content links.

Fixes #1123

Signed-off-by: Garret Kelly <gdk@google.com>



======Commit: 714f4c21======
======Short Message======
[dv/hmac] Fix Xcelium compile error
======Full Message======
[dv/hmac] Fix Xcelium compile error

Shouldn't drive wire (pins_if.pins) in task, use pins_if.drive_pin
instead

Signed-off-by: Weicai Yang <weicai@google.com>



======Commit: d4d65a13======
======Short Message======
Adjust to newer simutil_verilator
======Full Message======
Adjust to newer simutil_verilator

simutil_verilator was improved in various ways. The main improvements
are:

- Memories can be loaded with ELF files directly, instead of VMEM files.
- A generic way to specify memories was added.
- Reworked interface to be easier to use (less duplicated code).

These changes require adjustemnts to our code.

- The memory primitives need to support a new
  `simutil_verilator_memload()` DPI function, which is used to write the
  converted ELF file.
- libelf is required for ELF parsing. Add this dependency to the
  core files, documentation and to the CI setup.
- VerilatorSimCtrl is now much easier to use by calling the `Exec()`
  function. Everything else is now handled by VerilatorSimCtrl itself.
  By using stack-allocated objects we can simplify error/free handling.
- VerilatorSimCtrl doesn't expose a static variable `simctrl` any more,
  but instead implements a singleton accessible through
  `VerilatorSimCtrl::GetInstance()`. Update spidpi to use this.

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: 9d19588b======
======Short Message======
[usbdev] Fix alignment issue (clang-format)
======Full Message======
[usbdev] Fix alignment issue (clang-format)

Signed-off-by: Stefan Lippuner <lstefan@iis.ee.ethz.ch>



======Commit: 07097045======
======Short Message======
[usbdev] Fix a port mismatch in usbdev.sv
======Full Message======
[usbdev] Fix a port mismatch in usbdev.sv

Signed-off-by: Stefan Lippuner <lstefan@iis.ee.ethz.ch>



======Commit: 40f7c50d======
======Short Message======
[doc] Fix minor typos in logical security model
======Full Message======
[doc] Fix minor typos in logical security model

Signed-off-by: Gurleen Grewal <gurleen.grewal@opentitan.org>



======Commit: 9d20ee66======
======Short Message======
[ci] Only perform step if dependencies succeeded
======Full Message======
[ci] Only perform step if dependencies succeeded

Our use of `condition:` overwrote the default behavior, in which a job
is only performed if all dependencies succeeded. Add back that behavior
by explicitly checking for `succeeded()`. This prevents for example the
FPGA synthesis job to start if the software build failed (and hence
cannot provide the FPGA build with the requried bootrom file).

Documentation:
- https://docs.microsoft.com/en-us/azure/devops/pipelines/process/conditions?view=azure-devops&tabs=yaml
- https://docs.microsoft.com/en-us/azure/devops/pipelines/process/expressions?view=azure-devops#succeeded

Example pipeline with this problem: https://dev.azure.com/lowrisc/opentitan/_build/results?buildId=6152&view=results

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: e74ce0ec======
======Short Message======
[coremark] Fix some issues with Meson coremark.
======Full Message======
[coremark] Fix some issues with Meson coremark.

Coremark was including <sys/types.h> even though this is an embedded
target; this is forbidden.

Furthermore, fix some style issues with coremark's Meson files.

Signed-off-by: Miguel Young de la Sota <mcyoung@google.com>



======Commit: 9e28a059======
======Short Message======
[DV/DPI] Add logic type to IO declaration
======Full Message======
[DV/DPI] Add logic type to IO declaration

- Fixes #1092 (compilation failures in newer Verilator versions)

Signed-off-by: Tom Roberts <tomroberts@lowrisc.org>



======Commit: a2f4dc68======
======Short Message======
[sw] Fix -O3 Infinite Loop in libc functions
======Full Message======
[sw] Fix -O3 Infinite Loop in libc functions

A classic problem with trying to implement libc is that, at higher
optimisation levels, compilers will recognise the body of your C library
function implementation as a function it knows about, and replace the
body of that function with a call to the same function. This results in
a recursive function, which does absolutely nothing until it causes a
stack overflow.

Thankfully, GCC and clang provide options so you can disable this
recognition and replacement of libc functions. In OpenTitan's case, we
only need to do this for the `mem_ot` library, as we don't mind if other
libraries have calls to these libc functions inserted into them.

Signed-off-by: Sam Elliott <selliott@lowrisc.org>



======Commit: b38abdcf======
======Short Message======
[sw] Implement abort with infinite wfi loop
======Full Message======
[sw] Implement abort with infinite wfi loop

The call to `__builtin_abort` was being replaced with a call to `abort`,
thus causing an infinite loop. This has now been replaced by an infinite
loop containing wfi, which should let the core power down.

GCC allows `__builtin_abort` to be implemented in a target-specific way.
The RISC-V backend evidently uses the default behaviour, of calling
`abort`, rather than specifying how else to compile this intrinsic.

Signed-off-by: Sam Elliott <selliott@lowrisc.org>



======Commit: 983c6a46======
======Short Message======
[i2c] Reg, Core, and FSM Update
======Full Message======
[i2c] Reg, Core, and FSM Update

Fixing Lint violations in CSR:
-Changed STATUS hwaccess from hrw to hwo.
-Expanded fmt_fifo_wvalid to depend on all FDATA qe bits.
-Implemented CTRL.ENABLEHOST functionality.
-Removed scanmode_i signal
-Removed devmode_i from i2c.sv
-Assigned unused bits in partly used registers to explicitly defined signals.

Signed-off-by: Igor Kouznetsov <igor.kouznetsov@wdc.com>



======Commit: 1125a5aa======
======Short Message======
[doc] Tiny editorial fixes
======Full Message======
[doc] Tiny editorial fixes

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: 9b95c2a1======
======Short Message======
[rv_timer/dv] stress test with reset fix
======Full Message======
[rv_timer/dv] stress test with reset fix

rv_timer_stress_all_vseq: fix for stress test with reset

Signed-off-by: Shailendra Kushwah <kushwahs@google.com>



======Commit: 11a49106======
======Short Message======
[sw] Add coremark meson build
======Full Message======
[sw] Add coremark meson build

Includes some tweaks to coremark earlgrey port to allow build to work
and stop coremark crashing before it finishes.

Remove coremark makefile based build. It was broken and making both
meson + makefile work together is a pain.

Fixes #552

Signed-off-by: Greg Chadwick <gac@lowrisc.org>



======Commit: d8e780bb======
======Short Message======
[sw] Setup proper vendoring for coremark
======Full Message======
[sw] Setup proper vendoring for coremark

Includes patch to adjust include paths so coremark can build under meson

Signed-off-by: Greg Chadwick <gac@lowrisc.org>



======Commit: e1f36c3d======
======Short Message======
Update pulp_riscv_dbg to pulp-platform/riscv-dbg@811b2d7
======Full Message======
Update pulp_riscv_dbg to pulp-platform/riscv-dbg@811b2d7

Update code from upstream repository https://github.com/pulp-
platform/riscv-dbg to revision
811b2d707795a5044d63a68f747b2f9cd29d3a88

fixes #1035

Signed-off-by: Tom Roberts <tomroberts@lowrisc.org>



======Commit: ac5e64bf======
======Short Message======
[dv/spi_device/top_earlgrey] Fix compile warnings
======Full Message======
[dv/spi_device/top_earlgrey] Fix compile warnings

Signed-off-by: Gaurang Chitroda <gaurangg@google.com>



======Commit: 56d871c0======
======Short Message======
[sw] Fix embedded linking not including .crt or .vectors.
======Full Message======
[sw] Fix embedded linking not including .crt or .vectors.

Fixes #1058.

Signed-off-by: Miguel Young de la Sota <mcyoung@google.com>



======Commit: 89bec026======
======Short Message======
[hw] Fix one of the top_earlgrey .core files to use the new build dir.
======Full Message======
[hw] Fix one of the top_earlgrey .core files to use the new build dir.

Signed-off-by: Miguel Young de la Sota <mcyoung@google.com>



======Commit: 6c71205f======
======Short Message======
[site/landing] Minor layout fixes
======Full Message======
[site/landing] Minor layout fixes

Address some of the style fixes required to make the landing site
content look nice on differently-sized devices.  Also update the serving
source of the lowRISC logo.

Signed-off-by: Garret Kelly <gdk@google.com>



======Commit: b2ef483a======
======Short Message======
[sw] Centralize the definition of $OT_VERSION
======Full Message======
[sw] Centralize the definition of $OT_VERSION

$OT_VERSION is now defined in util/build_consts.sh. Meson, chip_info.h,
and make_distribution.sh all use this definition now.

This definition is also not dependent on git: if run outside of the git
repository, it will simply be "opentitan-<unknown>".

Fixes #1057.

Signed-off-by: Miguel Young de la Sota <mcyoung@google.com>



======Commit: 1bf0b49a======
======Short Message======
[boot_rom] Add bootstrap pre flash programming debug messages
======Full Message======
[boot_rom] Add bootstrap pre flash programming debug messages

When bootstrap pin is asserted - required peripherals (SPI and Flash)
are initialised, and execution enters a busy loop waiting for SPI data
to program flash.

It is useful to have a debug message describing what is happening to
prevent the system looking unresponsive.

Signed-off-by: Silvestrs Timofejevs <silvestrst@lowrisc.org>



======Commit: 2ba206b5======
======Short Message======
[meson] Re-add build_by_default to embedded targets.
======Full Message======
[meson] Re-add build_by_default to embedded targets.

Apparently, build_by_default's default value is dependent on both
the target type (custom_target vs executable) and Meson version.
Even worse, Meson's documentation merely states that it affects "running
plain ninja", and *not* that it also removes the target from the "all"
target.

In #1031 we removed build_by_default, and somehow CI didn't catch it.
This change fixes the resulting #1052.

Signed-off-by: Miguel Young de la Sota <mcyoung@google.com>



======Commit: 22790469======
======Short Message======
[sw/device] Keep .text.unlikely in the linker script
======Full Message======
[sw/device] Keep .text.unlikely in the linker script

To avoid errors about symbols being dropped as they are in
.text.unlikely ensure that .text.unlikely remains in the binary.

Signed-off-by: Alistair Francis <alistair.francis@wdc.com>



======Commit: cbb081c1======
======Short Message======
[util] splice_nexysvideo.sh fix the target directory
======Full Message======
[util] splice_nexysvideo.sh fix the target directory

This change fixes an issue introduced in 6379357. When running, script
cannot find required target files due to not specifying the full path
to these files.

Signed-off-by: Silvestrs Timofejevs <silvestrst@lowrisc.org>



======Commit: dff8e653======
======Short Message======
[pinmux] Fix Xcelium compilation crash
======Full Message======
[pinmux] Fix Xcelium compilation crash

Change `logic` to `wire` for all the signals those are passed to $size,
as a workaround to fix Xcelium crash
Cadence AE has created a case to fix this issue
Signed-off-by: Weicai Yang <weicai@google.com>



======Commit: 3594d960======
======Short Message======
[hmac] Block the configuration change while processing
======Full Message======
[hmac] Block the configuration change while processing

There were a few test failures on the sudden CFG register update during
SHA/HMAC process. A few bugs caused system hang. They blocked the
interconnect so that the software cannot release the errors.

Related commits: 14a4312 13678cf

Latest one that @cindychip found at Issue #991 also caused hang
condition inside HMAC. Rather fixing every hang condition, it seems to
be better to block the CFG update in the middle of the process. If the
software wants to update CFG, it can update CFG but it only can be
visible to the hardware after the current HMAC/SHA process is completed.

This PR also blocks the secret key update while the hash engine is
active. Secret key (KEY0 .. KEY7) can only be updated after the engine
completes the computing of hash and before the new message is fed.

If the event occurs (secret key is updated in process), the error will
be reported to the software through the ERROR FIFO.

This is related to #991

Signed-off-by: Eunchan Kim <eunchan@opentitan.org>



======Commit: c2a536ed======
======Short Message======
Register rominit and flashinit as CLI parameters in core file
======Full Message======
Register rominit and flashinit as CLI parameters in core file

Verilator uses the --rominit and --flashinit parameters but they
are not registered in the core file and therefore don't show up
when running
fusesoc run --target=sim lowrisc:systems:top_earlgrey_verilator --help

This patch registers the arguments in the core file which also helps
if there is a need to set a default value for them later on.

Signed-off-by: Olof Kindgren <olof.kindgren@gmail.com>



======Commit: 4ecff813======
======Short Message======
[hw/dv] Reuse existing GPIO FIFO
======Full Message======
[hw/dv] Reuse existing GPIO FIFO

If the GPIO FIFO already exists in the file system do not abort creation
immediately but continue to try to open it.

When using GDB to debug the Verilator simulation the file is not deleted
at the exit. If the file is not deleted manually the next run will
result in an error. Reusing the file is in this case possible.

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: 5336f3fd======
======Short Message======
[sw/device] Drop all linker sections not specified
======Full Message======
[sw/device] Drop all linker sections not specified

ld will sometimes (I guess it depends on how it's built) insert a
.note.gnu.build-id symbol into the ELF. This defaults to being at the
start of the ELF. If this happens we get non-code at the start of the
ELF which causes an illigal instruction to be executed when jumping from
ROM to a sw binary loaded into flash.

The PR https://github.com/lowRISC/opentitan/pull/966 attempted to fix
the issue using the build-id command line. This PR instead disacrds all
non specified linker sections. We have to add .text.startup to ensure
the build does not fail.

Signed-off-by: Alistair Francis <alistair.francis@wdc.com>



======Commit: 5e2c8db4======
======Short Message======
[Makefile] Ensure we don't include a build-id in the elf
======Full Message======
[Makefile] Ensure we don't include a build-id in the elf

ld will sometimes (I guess it depends on how it's built) insert a
.note.gnu.build-id symbol into the ELF. This defaults to being at the
start of the ELF. If this happens we get non-code at the start of the
ELF which causes an illigal instruction to be executed when jumping from
ROM to a sw binary loaded into flash.

We could specify a location for the build-id (in the linker script) but
as it seems unessecay to include (it increases the size by 24 bytes) and
it isn't in the current generated release binaries it makes more sense
to just explicity disable it for all builds.

Signed-off-by: Alistair Francis <alistair.francis@wdc.com>



======Commit: cce7eb55======
======Short Message======
[meson] Ensure we don't include a build-id in the elf
======Full Message======
[meson] Ensure we don't include a build-id in the elf

ld will sometimes (I guess it depends on how it's built) insert a
.note.gnu.build-id symbol into the ELF. This defaults to being at the
start of the ELF. If this happens we get non-code at the start of the
ELF which causes an illigal instruction to be executed when jumping from
ROM to a sw binary loaded into flash.

We could specify a location for the build-id (in the linker script) but
as it seems unessecay to include (it increases the size by 24 bytes) and
it isn't in the current generated release binaries it makes more sense
to just explicity disable it for all builds.

Signed-off-by: Alistair Francis <alistair.francis@wdc.com>



======Commit: b78df299======
======Short Message======
[hugo] Revise the heading style (Demote headers)
======Full Message======
[hugo] Revise the heading style (Demote headers)

Revise the HTML/CSS style to make the title to be a title of the page.
Other markdown headings are demoted in style (h1 tag --> h2 style).
And added h3 style.

In addition to that, now `site/docs/layouts/_default/list.html` is
symlinked to `single.html`.

Markdown files which set the title for `hugo` do not need to have the
title set again. This would result in the header printed twice.

This is related to PR #868

Signed-off-by: Eunchan Kim <eunchan@opentitan.org>



======Commit: 6d137acf======
======Short Message======
[boot_rom] Add more descriptive message on successful boot
======Full Message======
[boot_rom] Add more descriptive message on successful boot

Fixes #590

Signed-off-by: Silvestrs Timofejevs <silvestrst@lowrisc.org>



======Commit: 8c725d44======
======Short Message======
[fpv/common] Fix fpv run files and dependency
======Full Message======
[fpv/common] Fix fpv run files and dependency

Since fpv.tcl file deletes the statement to search all the bind files,
in the formal.core, I manually add the bind files.
Set time limit to FPV run files to 2 hours.
Temp delete the modules that do not have a bind file, added a TODO to
decide how to add them back.
Add liveness, deadend, and conflict check in fpv.tcl file

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: e9dcfbb1======
======Short Message======
[util] Better error message for invalid HJSON
======Full Message======
[util] Better error message for invalid HJSON

If the testplanner comes across invalid HJSON, it only outputs a
stacktrace without the affected file. Change that to make the error
message more human-friendly.

Signed-off-by: Philipp Wagner <phw@lowrisc.org>



======Commit: 53e3b3b1======
======Short Message======
[CI] Remove signed off IPs from the register module checker
======Full Message======
[CI] Remove signed off IPs from the register module checker

This is temporary fix until the IP versioning discussion is completed.
As PR #965 merged, the Azure Pipeline failed on newer PRs.

```log
Build log #L1010
Register headers not up-to-date. Regenerate them with 'make -C hw regs'.
```

PR #965 didn't include `gpio`, `uart`, `rv_timer` from the collaterals
as those IPs were signed off ( #676 #615 #652 ). The azure pipeline
checks every IPs' generated register modules.

It is good as it can catch this case, which prevents silent upgrade of
internal modules in the signed-off IPs. But it is also annoying every
PRs from now failed.

So, temporary `hw/Makefile` ignores signed-off IPs until better IP
versioning rule is suggested.

This is related to #975

Signed-off-by: Eunchan Kim <eunchan@opentitan.org>



======Commit: 668ea2e9======
======Short Message======
[reggen] Register to have typedef struct
======Full Message======
[reggen] Register to have typedef struct

In transition to the parameterized multireg #47, now each register has
its own struct packed type, which is named as
`module_reg2hw/hw2reg_regname_reg/mreg_t`. It creates mane typedef
inside the register package file but the overal reg2hw and hw2reg
structures are cleaner.

It gives more flexibility to transition to register interface from the
struct. The interface should consider the number of registers, not the
fields names.

There's still TODOs in this change.

1.  The field name function call `get_basename()` doesn't work properly
    with field having digits in its name. For instance, alert_handler
    has `en_e0` to `en_e3` in CLASSD_CTRL register, and the function
    chops the digit and returns `en_e` only, which creates an error.
2.  Handling the multi register and normal register is not standardized.
    The functions defined in `util/reggen/data.py` are specific for
    multireg type. It should be commonly used regardless of the register
    type.
3.  `util/topgen/lib.py` could be useful if it is moved to its own
    module. The functions inside lib.py can be used in any generator for
    RTLs.

This is related to #606 #270 #47

Signed-off-by: Eunchan Kim <eunchan@opentitan.org>



======Commit: 2f873828======
======Short Message======
[util] build_docs.py add missing space
======Full Message======
[util] build_docs.py add missing space

This is a follow-up to ecaf87c change to make the debug output more
readable.

Signed-off-by: Silvestrs Timofejevs <silvestrst@lowrisc.org>



======Commit: ecaf87ce======
======Short Message======
[util] build_docs.py check if existing hugo is hugo-extended
======Full Message======
[util] build_docs.py check if existing hugo is hugo-extended

build_docs.py uses hugo-extended to build the docs for OpenTitan, which
is stored as the binary named "hugo". When this binary is present the script
does not check whether the version is extended.

This change adds a hugo version check, which makes sure that the binary is
extended, and downloads the correct version if it is not.

Fixes #757
Signed-off-by: Silvestrs Timofejevs <silvestrst@lowrisc.org>



======Commit: 9d0403c9======
======Short Message======
[dv,sw] C messaging flow
======Full Message======
[dv,sw] C messaging flow

- provide a generic set of APIs to print msgs
- provide ability to attach severity (msg type) and verbosity to msgs
- provide ability to attach a header to the msg underneath
  - privide ability to construct the header based on severity, verbosity
    file and line number for ease of debug

- provide a generic msg_print() function that can parse a formatted string and
take variable number of args

- provide implementation specific APIs in
sw/util/msg_uart/msg_api_impl.h to do the prints via UART

- PR #259 is being split to make the review easier
- this PR focuses on providing a high level API and 'typical' SW
implementation of it using UART,
- Subsequent PR will focus on DV specific implementation

Signed-off-by: Srikrishna Iyer <sriyer@google.com>



======Commit: 707f8d67======
======Short Message======
[reggen] hw/Makefile fix
======Full Message======
[reggen] hw/Makefile fix

- Fix for the [issue](https://github.com/lowRISC/opentitan/pull/875#issuecomment-553075178)
  reported by @eunchan.

Signed-off-by: Srikrishna Iyer <sriyer@google.com>



======Commit: 0e5eba17======
======Short Message======
[doc] Move logical security doc to fix resource links
======Full Message======
[doc] Move logical security doc to fix resource links

Signed-off-by: Timothy Chen <timothytim@google.com>



======Commit: 2bcd6211======
======Short Message======
[dv/hmac] fix_reset_corner_case
======Full Message======
[dv/hmac] fix_reset_corner_case

Recently Hmac updated to delete tlul interface probing. Found a corner
case with reset: when reset signal is low, scoreboard's
`hmac_process_fifo_rw` did not gate the
rst signal, thus still increase the wr_cnt during reset. Here added a gating signal
for reset.
Scb flush function, add a statement to reset the `wr_cnt_updated` back
to 1. In case deadloop.

Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: 9492975d======
======Short Message======
[aes/doc] Fix broken link in checklist
======Full Message======
[aes/doc] Fix broken link in checklist

Signed-off-by: Pirmin Vogel <vogelpi@lowrisc.org>



======Commit: 39db6868======
======Short Message======
[uart/doc] Minor update on dv_plan and testplan
======Full Message======
[uart/doc] Minor update on dv_plan and testplan

1. Move frequency support from testplant to dv_plan
2. Fix type
3. Add covergroup path
Signed-off-by: Weicai Yang <weicai@google.com>



======Commit: 72cd325d======
======Short Message======
[top/earlgrey] Tying SPI interface
======Full Message======
[top/earlgrey] Tying SPI interface

After adding ASSERT_KNOWN, top sim is failed at the SPI_DEVICE
assertion,

    UVM_ERROR @    135732 ps: (prim_assert.sv:21) [ASSERT FAILED]
    [tb.dut.top_earlgrey.spi_device.CioMisoEnOKnown] CioMisoEnOKnown:
    !$isunknown(cio_miso_en_o)
    (hw/ip/spi_device/rtl/spi_device.sv:565)

`cio_miso_en_o` is connected to csb_i, which signal is floating at the
top. So, all the inputs of SPI interface are tied to 1 for now.

Signed-off-by: Eunchan Kim <eunchan@google.com>



======Commit: e87d5b10======
======Short Message======
[checklist] Change D1 checklist to instantiable
======Full Message======
[checklist] Change D1 checklist to instantiable

Changed the IP_INSTANTIATED to IP_INSTANTIABLE.

Previous term isn't appropriate. IP in D1 stage doesn't have to be
included in the top level. The intention of the checklist item is to
check whether it breaks the existing test items in the top.

Conforming to the [comportability spec][] doesn't mean that the IP
itself doesn't affect outside of the IP. For instance, some interrupt
keeps bugging the interrupt controller. This checklist item is to make
sure it is ready to test the main datapath in the top level simulation
or on the FPGA.

Signed-off-by: Eunchan Kim <eunchan@google.com>



======Commit: 43225aa0======
======Short Message======
[ci] Fix quoting in clang-format CI check
======Full Message======
[ci] Fix quoting in clang-format CI check

$changed_files should be quoted when used in `test -z`. This commit
fixes that.

Signed-off-by: Alex Bradbury <asb@lowrisc.org>



======Commit: f9611844======
======Short Message======
[ci] Just recommend git clang-format to fix formatting issues
======Full Message======
[ci] Just recommend git clang-format to fix formatting issues

As the CI checks the diff rather than the whole tree,
util/run-clang-format.sh isn't the most sensible fix.

Signed-off-by: Alex Bradbury <asb@lowrisc.org>



======Commit: 5607cc02======
======Short Message======
[tlul/dv] Fix tlul core file
======Full Message======
[tlul/dv] Fix tlul core file

Update tlul core file to fix tlul compile. Will make another PR to
update format.core to include bind files from all IPs

Signed-off-by: Weicai Yang <weicai@google.com>



======Commit: c36b8756======
======Short Message======
[dv/hmac] Fix TL outstanding request > 2
======Full Message======
[dv/hmac] Fix TL outstanding request > 2

This is a fix for TL outstanding request >2. DV engineers decide to set
the max outstanding req to a very large value. Then when collecting
coverage, DV engineers will be able to provide a covered upper bound.
During coverage review, designers will be able to check if it meets their
expectation.
Signed-off-by: Cindy Chen <chencindy@google.com>



======Commit: 42765f88======
======Short Message======
[dv] Update covergroup in tl_agent
======Full Message======
[dv] Update covergroup in tl_agent

1. merge with Shail's update
2. fix only sample max outstanding value
Signed-off-by: Weicai Yang <weicai@google.com>



======Commit: db4f2be5======
======Short Message======
Fix pin names of uart/gpio in artys7 toplevel
======Full Message======
Fix pin names of uart/gpio in artys7 toplevel

Signed-off-by: Olof Kindgren <olof.kindgren@gmail.com>



======Commit: 6502e5c7======
======Short Message======
[doc] Fix minor README.md grammar issue
======Full Message======
[doc] Fix minor README.md grammar issue



======Commit: ca8c8abe======
======Short Message======
[COMMITTERS] Fix Scott's GitHub username
======Full Message======
[COMMITTERS] Fix Scott's GitHub username

Signed-off-by: Alex Bradbury <asb@lowrisc.org>



======Commit: 52282da2======
======Short Message======
[dv] Fix cover.cfg and fix outstanding cg
======Full Message======
[dv] Fix cover.cfg and fix outstanding cg

1. Fix cover.cfg to remove #1
2  Fix outstanding covergroup in tl monitor



======Commit: 5bbb1649======
======Short Message======
[doc] minor fixes to dv related docs
======Full Message======
[doc] minor fixes to dv related docs

- fixed broken links in the DV plan templates
- fixed bullets in util docs



======Commit: fe241599======
======Short Message======
[tlul] Add section on error behavior
======Full Message======
[tlul] Add section on error behavior



======Commit: 7518de88======
======Short Message======
[tlul/dv] Bind tlul_assert
======Full Message======
[tlul/dv] Bind tlul_assert

1. Bind tlul_assert to all hosts/devices
2. Remove unused bind files
3. Move tl_if_connect_macros to xbar as it's only used in xbar
4. Update xbar_error_test to disable assertions for tl errors



======Commit: e3edbe84======
======Short Message======
[rv_plic/doc] Fix dv_plan HW_stage path
======Full Message======
[rv_plic/doc] Fix dv_plan HW_stage path



======Commit: e05873fb======
======Short Message======
[doc] dv methodology doc updates
======Full Message======
[doc] dv methodology doc updates

- fixes suggested by @rasmus-madsen in #725



======Commit: c8c3c71a======
======Short Message======
[dv/hmac] Fix xcellium warnings
======Full Message======
[dv/hmac] Fix xcellium warnings



======Commit: 59dd6dbf======
======Short Message======
[doc/alert_handler] Make signal names consistent and fix waves
======Full Message======
[doc/alert_handler] Make signal names consistent and fix waves



======Commit: 1ba89b86======
======Short Message======
[lint/top] Various lint fixes in order to get the top level lint clean
======Full Message======
[lint/top] Various lint fixes in order to get the top level lint clean



======Commit: 041c683d======
======Short Message======
[tlul] Fixed TL-UL error response of d_size
======Full Message======
[tlul] Fixed TL-UL error response of d_size

Problem:

    d_size of unmapped address was tied to 0

`tlul_err_resp` module is used to return the error response inside TL-UL
crossbar when a host tries to access unmapped address space. It tied the
`d_size` to 0 regardless of the request size. But TL specification
requires the device to return the `d_size` same as `a_size`.

Resolution:

    Latch `a_size` and return the value to `d_size`.

The issue is reported by @weicaiyang and issue #822 was created.



======Commit: 4dda5f0e======
======Short Message======
Update manual test script
======Full Message======
Update manual test script

Minor fix to fpga pytest.
Minor fix to meson build flow in splice script and also update
main script to use meson.



======Commit: f57964e1======
======Short Message======
[top_earlgrey] Fix vendor in JTAG IDCODE
======Full Message======
[top_earlgrey] Fix vendor in JTAG IDCODE

The JTAG IDCODE field uses a manufacturer ID from the JEDEC list of
manufacturers. This list organizes its entries in banks. Google is in
bank 9. The previously used number was from bank 10.

With this change, OpenOCD reports the right vendor:

```
$ /tools/openocd/bin/openocd -s util/openocd -f board/lowrisc-earlgrey-nexysvideo.cfg
Open On-Chip Debugger 0.10.0+dev-00823-g20804cb4d (2019-10-30-22:27)
Licensed under GNU GPL v2
For bug reports, read
        http://openocd.org/doc/doxygen/bugs.html
none separate

Info : Listening on port 6666 for tcl connections
Info : Listening on port 4444 for telnet connections
Info : clock speed 30000 kHz
Info : JTAG tap: riscv.tap tap/device found: 0x04f5484d (mfg: 0x426 (Google Inc), part: 0x4f54, ver: 0x0)
Info : datacount=2 progbufsize=8
Info : Examined RISC-V core; found 1 harts
Info :  hart 0: XLEN=32, misa=0x40001104
Info : Listening on port 3333 for gdb connections
```

Fixes #490



======Commit: 7799ca5e======
======Short Message======
[tlul/doc] Minor layout fix to opcode table
======Full Message======
[tlul/doc] Minor layout fix to opcode table



======Commit: 078262aa======
======Short Message======
[github] Minor update to default reviewers
======Full Message======
[github] Minor update to default reviewers



======Commit: 54691049======
======Short Message======
[doc] Review padctrl docs for markdown consistency
======Full Message======
[doc] Review padctrl docs for markdown consistency

- Also fix port name, hjson mismatch



======Commit: 7cd442f7======
======Short Message======
[doc] Minor documentation fixes
======Full Message======
[doc] Minor documentation fixes

- Remove repo private comment
- Add a missing sw dependency



======Commit: 567cfd6d======
======Short Message======
[doc] Getting started/Instructions updates & fixes
======Full Message======
[doc] Getting started/Instructions updates & fixes



======Commit: 5ffe7fbb======
======Short Message======
[doc/ug] verification methodology documentation
======Full Message======
[doc/ug] verification methodology documentation

- added doc explaining overall verification methodology
- some sections are WIP and will be completed soon
- Updated hw/ug/_index.md landing page with DV methodology topics

Adress fixes based on PR feedback



======Commit: 888e5805======
======Short Message======
[flash_ctrl] Minor fix to known outputs
======Full Message======
[flash_ctrl] Minor fix to known outputs

Ignore outputs that are derived from FIFOs, since the contents are unknown
at reset time.



======Commit: 8a184b37======
======Short Message======
[doc] Fix broken link in `getting_started_sw.md`
======Full Message======
[doc] Fix broken link in `getting_started_sw.md`

Updates #723 item 8.



======Commit: c37d5e95======
======Short Message======
[doc] Fix highlighting styles
======Full Message======
[doc] Fix highlighting styles

Switch to a highlighting style `tango`, and fix font size so that it's
page scale independent.

Updates #723 items 3 and 4.



======Commit: d2353f23======
======Short Message======
[doc] Fix template header and footers
======Full Message======
[doc] Fix template header and footers

Correct the copyright notice.  Update privacy policy link.  Remove
unused social icons.  Update link to github repo.  Remove unnecessary
links left over from template.

Updates #723 items 6, 9, 10.



======Commit: 1130f5bc======
======Short Message======
[doc] Fix testplan table
======Full Message======
[doc] Fix testplan table

<br> doesn't break the line, use <li> to fix it.
And also run ./lintpy.py to fix style



======Commit: 0d1ca01b======
======Short Message======
[fpv/doc] Fix hugo err
======Full Message======
[fpv/doc] Fix hugo err



======Commit: f5608d06======
======Short Message======
[ci] Fix clang-format dependencies in CI
======Full Message======
[ci] Fix clang-format dependencies in CI

For reasons that are unclear Azure ships their own version of clang-6.0
in their Ubuntu 18.04 images.  It has a dev-tagged version string which
prevents installing packages that depend on a normally-tagged version
from being installed.  Remove their version before installing the normal
version.



======Commit: 5376caa2======
======Short Message======
[uart/dv] Adjust timeout and fix xcelium warnings
======Full Message======
[uart/dv] Adjust timeout and fix xcelium warnings

1. adjust weight and timeout timer to avoid timeout
2. fix a few xcelium warning



======Commit: d70f7558======
======Short Message======
[TLUL/Doc] Minor doc wording fixes
======Full Message======
[TLUL/Doc] Minor doc wording fixes

- Fix N:1 to M:1 and make Get and Put look more consistent



======Commit: 82d146c2======
======Short Message======
[doc] Fix meson build instructions
======Full Message======
[doc] Fix meson build instructions



======Commit: 4417b11c======
======Short Message======
[spiflash] Fix nullptr access in ~FtdiSpiInterface
======Full Message======
[spiflash] Fix nullptr access in ~FtdiSpiInterface



======Commit: e76fadce======
======Short Message======
Add instructions for FPGA quickstart
======Full Message======
Add instructions for FPGA quickstart

Added instructions for using a portable storage device in order to
program the FPGA on a Nexys Video board.

Also some broken-links fixes in the getting started doc.



======Commit: 3e76f78c======
======Short Message======
[hugo] Enable noEmptyLineBeforeBlock blackfriday extension
======Full Message======
[hugo] Enable noEmptyLineBeforeBlock blackfriday extension

This matches GitHub's markdown rendering behaviour and the behaviour of
mistletoe. It fixes rendering of multiple in-tree docs, where there
isn't an additional newline between a paragraph of text and a list.



======Commit: 226bf0e1======
======Short Message======
[ci] Move software build tasks back to self-hosted runners
======Full Message======
[ci] Move software build tasks back to self-hosted runners

PR #631 erroneously moved over software and verilator build tasks to the
Azure-hosted pool. It's faster to run these on the self-hosted runners
in our "Default" pool.

Meson is still built on hosted runners.



======Commit: c5a7d986======
======Short Message======
[doc] Fix hugo breakage
======Full Message======
[doc] Fix hugo breakage



======Commit: 39fc9a45======
======Short Message======
[doc] Fix make commands in {fpga,sw} user guides
======Full Message======
[doc] Fix make commands in {fpga,sw} user guides

* Point to make -C sw/device, since this is where the device Make
  scaffolding lives.
* Add explicit make boot_rom command in fpga getting started
  instructions.  Some users are running into problems due to the fact
  that the boot_rom file dependency is not checked at FPGA bitstream
  build time and the instructions don't explicitly call out the make
  command for boot_rom.

Keeping instructions in Make format as requested by
lowrisc/opentitan#733.



======Commit: 838daa0c======
======Short Message======
[sw/host/vendor/mpsse] Use util/vendor_hw.py for mpsse
======Full Message======
[sw/host/vendor/mpsse] Use util/vendor_hw.py for mpsse

Add sw/host/vendor/mpsse.vendor.hjson and patches in
sw/host/vendor/patches/mpsse to use util/vendor_hw.py script to
replace the previous version of mpsse that was copied in by hand.

Commit message auto-generated by util/vendor_hw.py -c below:

Update mpsse to e729a6148

Update code from subdir trunks/ftdi in upstream repository
https://chromium.googlesource.com/chromiumos/platform2/ to revision
e729a61489259d1bf34e6df7f8e284febf02da2e



======Commit: 600ee458======
======Short Message======
[util/vendor_hw.py] Fix only_subdir support to allow patching.
======Full Message======
[util/vendor_hw.py] Fix only_subdir support to allow patching.

Previous commit "[util/vendor_hw.py] Add support for 'only_subdir' key
in upstream section." left patching for only_subdir upstreams broken.
This commit fixes that oversight.



======Commit: e86f54f5======
======Short Message======
[hmac] Block the msg fifo request with packer ready
======Full Message======
[hmac] Block the msg fifo request with packer ready

This is follow-up PR for #683

Problem 1:

    In #683, the design unguarded msg_fifo_gnt signal from
    `fifo_wready`. It only needs to see `packer_ready`. This results
    unintended request acceptance as `msg_write` is also gated by
    `fifo_wready`.

What happend with the problem is, when the MSG_FIFO is full, it
de-asserts `fifo_wready`. At this time, `prim_packer` has still enough
room to accept one more request. It doesn't drop `packer_ready`
(`prim_packer.ready_o`) yet. So `msg_fifo_gnt` can be high whenever the
request comes. That request should've come to `prim_packer`, which
didn't happen due to the `msg_write` is gated by `fifo_wready`.

Resolution:

    `msg_write` is not gated by `fifo_wready`.

I've tested hmac_back_pressure test with modified design. It still
fails. But the failure isn't due to the modified design but the
scoreboard assumes getting the fifo_full status which cannot be happen
as the request was back-pressured and accepted after fifo_full condition
is resolved.

Also, fifo_full interrupt now happens when MSG_FIFO and prim_packer both
cannot accept the new request, not only seeing MSG_FIFO `fifo_wready`.

Cindy has a fix PR for this issue.



======Commit: 0f9bcddb======
======Short Message======
[xbar/dv] Update scb and add device AES
======Full Message======
[xbar/dv] Update scb and add device AES

1. Update scb to fix unmapped address issue
2. Add checking no item in the queue in scb at the end of sim
3. Add device AES as design updated



======Commit: 8903e080======
======Short Message======
[hmac] fix the doc headings for Hugo
======Full Message======
[hmac] fix the doc headings for Hugo

Some remnants of mistletoe were in the HMAC doc. Removed



======Commit: 436d2241======
======Short Message======
[top/earlgrey] Adding PINMUX to the top
======Full Message======
[top/earlgrey] Adding PINMUX to the top

PINMUX is to arbitrate the inputs/outputs from internal IPs into
multiplexed IO pads. This commit is to generate PINMUX register module
based on the given input/outputs from IP hjsons and the number of MIO
pads defined in the top hjson.

With this PR, top_earlgrey port list is changed to:

1. All Multiplexer I/Os have `mio_` prefix and no distinct names tied
   to the IPs anymore.
2. Dedicated I/Os have distinct names still, but have `dio_` prefix.
   Previously, they have `cio_` prefix in the top port list.

Add padding function to line-up the signals in generated codes.

Removed `parameterize` function inside template but moving to the
topgen.lib function. It is now used as filter function, which looks the
template code more clean, I hope.

A few more helper functions are added to topgen.lib also. Those aren't
filter functions as they need second argument. For instance,
topgen.lib.bitarray function needs second argument `width` to pad with
spaces at the end of the bit slice (e.g. '[1:0]  ')

This is related to #81



======Commit: 6add2419======
======Short Message======
[hugo] Fix whitespace errors in file
======Full Message======
[hugo] Fix whitespace errors in file



======Commit: 1b099b26======
======Short Message======
[hugo] Exclude scratch directories
======Full Message======
[hugo] Exclude scratch directories

scratch folders are created when running DV, and hugo processing fails
on them. Exclude them to have the build succeed.

```
Error: Error building site: process: readAndProcessContent: walk: Readdir: decorate: lstat /some/path/opentitan/hw/ip/uart/dv/scratch/uart/default/simv.daidir/_20713_archive_1.so: no such file or directory
```



======Commit: 6969db85======
======Short Message======
[dv/hmac] hmac wr_ptr needs to wait when fifo full
======Full Message======
[dv/hmac] hmac wr_ptr needs to wait when fifo full

When fifo is full, hmac needs to wait until d_valid is asserted.
Add more display for debugging
Wait 1ps before checking fifo full
hmac fifo updates to depth 17



======Commit: 7daf7a1c======
======Short Message======
[dv] top level fix
======Full Message======
[dv] top level fix



======Commit: 54a9eae2======
======Short Message======
[dv/hmac] Adjustment to increase coverage
======Full Message======
[dv/hmac] Adjustment to increase coverage

1. Add more weight to full msg write, so it will be easier to hit fifo_full
cases
2. Add tl_errors_vseq to stress_all test, in order to include error case
toggle coverage. Will remove once tl_errors is integrated to the reset
sequences.



======Commit: 1d96a1ec======
======Short Message======
[top/dv] Fix top_earlgrey compile error
======Full Message======
[top/dv] Fix top_earlgrey compile error



======Commit: d91d4bb9======
======Short Message======
[dv/hmac] Fix warning and scb timing
======Full Message======
[dv/hmac] Fix warning and scb timing

Add void to a function declaration
Add 1ns delay when updating fifo_full to avoid corner case when rd/wr
pointers are updated at the same time



======Commit: 2bb1c0e1======
======Short Message======
[ci] Fix comment
======Full Message======
[ci] Fix comment



======Commit: fd11c536======
======Short Message======
[ci] Enhance run_sw_build.sh create dist dir
======Full Message======
[ci] Enhance run_sw_build.sh create dist dir

A distribution directory is the "output directory" where we stage build
artifacts which will become part of a binary release. Enhance the
run_sw_build.sh script to copy the build output into such a directory.

This fix is temporary until we have built-in support in the build
system, where this functionality should be.



======Commit: 952b9b82======
======Short Message======
[hmac] Meet the Verilog Style Guide
======Full Message======
[hmac] Meet the Verilog Style Guide

Changed registers' name to have `_q` and `_d` postfix to conform the
verilog style guide, especially the state machines' variables.



======Commit: 2c7f6783======
======Short Message======
[hmac] Remove prim_fifo wready to be a qualifier
======Full Message======
[hmac] Remove prim_fifo wready to be a qualifier

`prim_packer` has a way to back-pressure the TL-UL request. So the grant
signal doesn't have to be gated by `fifo_wready` signal, which goes into
`prim_packer`'s `ready_i` already.

Added `default` to the SHA PAD data select case. I prefer having
explicit default condition even if it is full case.



======Commit: efa01154======
======Short Message======
[doc] Fix names for sw build
======Full Message======
[doc] Fix names for sw build



======Commit: 9758e960======
======Short Message======
[xbar/dv] Add stress and reset tests
======Full Message======
[xbar/dv] Add stress and reset tests

1. Add stress and stress with reset tests
2. change scb to extend dv_base_scoreboard in order to reuse reset
features
3. fix tl_host_driver for reset



======Commit: 47033bd6======
======Short Message======
[common/dv] Fix env cfg compile warning seen for all IPs
======Full Message======
[common/dv] Fix env cfg compile warning seen for all IPs

- Instead of specifying default value of argument
  csr_addr_map_size in initialize method, set csr_addr_map_size
  using a new method initialize_csr_addr_map_size.
- This method initialize_csr_addr_map_size is empty by default in
  dv_base_env_cfg, and must be overridden with csr_addr_map_size
  assignment specific to IP under verification.
- parameter names changed from ADDR_MAP_SIZE to <IP>_ADDR_MAP_SIZE
- Updated test plans to reflect parameter name changes
- Updated templates generation scripts env_pkg.sv.tpl, env_cfg.sv.tpl



======Commit: 1c0171a7======
======Short Message======
[dv] reggen fixes
======Full Message======
[dv] reggen fixes

- fixed field reset value to be set in hex instead if decimal
- fixed chip reg block to sort blocks and windows by base addr so that new updates
show up as incremental change (fix for #153)



======Commit: 61d6218a======
======Short Message======
First version of FPGA compile flow.
======Full Message======
First version of FPGA compile flow.

Passing to @mcy to hook up PyTest
fpga framework

	new file:   test/fpga_error_check.sh
	modified:   test/fpga_manual_test.sh



======Commit: 789a3dfe======
======Short Message======
[reggen] skipto error fix
======Full Message======
[reggen] skipto error fix

Previous fix #654 wasn't correct.

Problem:

    `skipto` field value should be string as shown in example, not
    integer. But `rv_plic.hjson.tpl` set it to integer type. It results
    in to wrap the value with `hex()` to make it string type.

    This make the rv_plic reports correct error but it let build_docs.py
    failed.

```
Traceback (most recent call last):
  File "./util/build_docs.py", line 165, in <module>
    main()
  File "./util/build_docs.py", line 151, in main
    process_all_files()
  File "./util/build_docs.py", line 127, in process_all_files
...
  File "/mistletoe/base_renderer.py", line 95, in render
    return self.render_map[token.__class__.__name__](token)
  File "util/docgen/lowrisc_renderer.py", line 301, in render_lowrisc_escape
    if validate.validate(obj) == 0:
  File "util/reggen/validate.py", line 1363, in validate
    " which is not a multiple of the register size " +
TypeError: 'str' object cannot be interpreted as an integer
```

Resolution:

    Rolled-back the `validate.py` error report code. And changed
    `rv_plic.hjson.tpl` to make `skipto` to string type.

Issue reported by @asb



======Commit: 086b703a======
======Short Message======
[top_earlgrey] Set JTAG IDCODE
======Full Message======
[top_earlgrey] Set JTAG IDCODE

Use a Google-provided JTAG IDCODE value for the development version of
OpenTitan. Manufacturers of chips are expected to replace this IDCODE
with their own one.

Fixes #490



======Commit: fd9c24cf======
======Short Message======
[host/spiflash] Fix linking
======Full Message======
[host/spiflash] Fix linking

The Makefile applies the linker arguments before the object files,
causing the linker on some systems to not find the FTDI and OpenSSL
symbols.

Fixes #655



======Commit: 5fc2fd52======
======Short Message======
[gpio/dv] Fix for random regression failure
======Full Message======
[gpio/dv] Fix for random regression failure



======Commit: 7b52baa8======
======Short Message======
[rv_plic] Add skipto handling for large interrupts
======Full Message======
[rv_plic] Add skipto handling for large interrupts

Problem:

    Current `reggen` raises an error if `skipto` field is less than
    calculated `offset` field. RV_PLIC sets first target offset to
    `0x100` and if # of interrupt sources is greater than or equal to
    60, it exceeds 0x100 offset for the first target. For 60 interrupts
    , it needs 60 PRIORITY registers (240 addr offset) and two Interrupt
    Pending registers and two Level-Edge registers. So it hits the
    `skipto <= offset` condition in `reggen/validate.py#L1357`.

Error Msg:

    Traceback (most recent call last):
      File "../../../util/regtool.py", line 213, in <module>
        main()
      File "../../../util/regtool.py", line 165, in main
        elif (validate.validate(obj, params=params) == 0):
      File "/util/reggen/validate.py", line 1357, in validate
        " evaluates as " + hex(skipto) +
    TypeError: can only concatenate str (not "int") to str

Resolution:

    Changed `hw/ip/rv_plic/data/rv_plic.hjson.tpl` to consider a large
    number of interrupts case. It calculates the target offset and
    increases skip to value at 0x100 granularity. So if #Src is greater
    than 60, it changes the `skipto` value to 0x200.

    Also, validate.py now converts `['skipto']` to string so that rather
    than above Exception error, it correctly creates error on the log
    file (our stdout).

this is related to #653



======Commit: 626547e0======
======Short Message======
[hmac/dv] add hmac plan
======Full Message======
[hmac/dv] add hmac plan

Add hmac plan from the template
Add hmac block diagram
Add hmac testplan
Fix test_vectors readme format
Fix crypto-DPI README name to README.md



======Commit: aea108d6======
======Short Message======
[i2c] Signal Name Fix
======Full Message======
[i2c] Signal Name Fix

Changed signal name from fmt_fifo_wen to fmt_fifo_wvalid.



======Commit: 634f8cc3======
======Short Message======
[uart/dv] Fix TB diagram not show in the web
======Full Message======
[uart/dv] Fix TB diagram not show in the web



======Commit: 607c404c======
======Short Message======
[dv, doc] doc for dv_lib, plus some fixes
======Full Message======
[dv, doc] doc for dv_lib, plus some fixes

- added README for dv_lib (WIP)
- some basic fixes
- fixes to support moving DV plan document to ip/*/doc and testplan
Hjson to ip/*/data



======Commit: 23778c69======
======Short Message======
[dv, doc] doc & Hjson tesetplan fixes
======Full Message======
[dv, doc] doc & Hjson tesetplan fixes

- replaced {hjson, HJSON} with Hjson
- updated all existing Hjson testplans (along with the templates) to use
  {V1, V2, V3} instead of lower case
- additional minor style related fixes



======Commit: e2dc7da5======
======Short Message======
[dv/hmac] interrupt test fix not always reset
======Full Message======
[dv/hmac] interrupt test fix not always reset

Fix intr_test sequence not always reset intr_state signal



======Commit: 832af272======
======Short Message======
[dv/hmac] support error_code
======Full Message======
[dv/hmac] support error_code

Enable sha_en=0
Add checkings for hmac err_code when sha_en=0 and trigger hash or stream
in data



======Commit: ec61951f======
======Short Message======
[dv/common] intr coverage quick fix
======Full Message======
[dv/common] intr coverage quick fix

Thanks to Weicai's help, we think we one of the illegal bin should be
legal, thus delete it.



======Commit: 973273f6======
======Short Message======
[aes] Fix .hjson
======Full Message======
[aes] Fix .hjson

This commit changes the `clock_primary` field to `clk_i` and introduces
two parameters to define the `count` field of the multiregs.



======Commit: 4c5fbecf======
======Short Message======
[hw/ip] Update references to data
======Full Message======
[hw/ip] Update references to data

All references which point to `doc` contain now `data`.

Fixes lowrisc/opentitan#256



======Commit: a9acdced======
======Short Message======
[hw/ip] Move configuration files
======Full Message======
[hw/ip] Move configuration files

Use the following to move the files:

Fixes lowrisc/opentitan#256



======Commit: f5040213======
======Short Message======
[top_earlgrey] Check timing before bitstream generation
======Full Message======
[top_earlgrey] Check timing before bitstream generation

This commit adds a TCL script to ensure that there are no timing
violations. This script is run by Vivado before it writes a bitstream.

To get this script run by Vivado, we need to do two things:

- Execute the "set_property STEPS.WRITE_BITSTREAM.TCL.PRE" command
  during project creation to register our hook script. This is done in
  vivado_setup_hooks.tcl. Adding this script to the fusesoc core file
  as tclSource ensures that it gets sourced during project creation.
- Write a hook script to do the checking.
  This script does not need to be sourced by Vivado, we only need to
  copy it to the workroot (the Vivado directory containing the project
  file).
  We instruct fusesoc doing this copying by declaring it as "data"
  file type (which fusesoc doesn't touch), and explicitly copy it to the
  desired location.

As result, "fusesoc run" now fails with an error if the design doesn't
meet timing. Since this script is also run in CI, we get CI failures if
timing isn't met.

The following error is now part of the Vivado log, and Vivado and
ultimately fusesoc return with an 1 error code:

```
INFO: [Designcheck 1-1] Checking design
INFO: [Designcheck 1-2] Slack is -8.076 ns.
ERROR: [Designcheck 1-3] Timing failed. Slack is -8.076 ns.
ERROR: [runtcl-1] ERROR: [Common 17-39] 'send_msg_id' failed due to earlier errors.
```

In case of a good run, the designcheck looks like this, and no error is
reported.

```
INFO: [Designcheck 1-1] Checking design
INFO: [Designcheck 1-2] Slack is 0.040 ns.
```



======Commit: 0945e55d======
======Short Message======
[i2c] Update FSM
======Full Message======
[i2c] Update FSM

Initial FSM framework, updated based on the feedback
- Added comments for code
- Added _i and _o sufixes to inputs and outputs, respectively
- States and transitions:
  - Idle state
  - Issue start (SetupStart and HoldStart)
  - Transmit byte (four substates)
  - Read byte (four substates)
  - Issue stop (SetupStop and HoldStop)
  - Target acknowledge (four substates)
  - Host (not)acknowledge (four substates)
  - PopFmtFifo
- Event flags are not implemented yet



======Commit: 6d31a7c0======
======Short Message======
[rv_timer/dv] Fix regression failure
======Full Message======
[rv_timer/dv] Fix regression failure

1. dv_base_vseq: Added 1ps delay after reset
2. rv_timer_cfg_update_on_fly_vseq: Increased minimum period before
updating timer config
3. rv_timer_scoreboard,rv_timer_env_cov: Changed covergroup name



======Commit: 6709a642======
======Short Message======
[gpio/dv] Fix gpio_full_random_vseq test sequence for random test failure
======Full Message======
[gpio/dv] Fix gpio_full_random_vseq test sequence for random test failure



======Commit: 4fc169f1======
======Short Message======
[rv_plic] Latch to CC for pending interrupts
======Full Message======
[rv_plic] Latch to CC for pending interrupts

This is related to #577. @GregAC reported this bug while reviewing the
RV_PLIC specification.

Error:

    RISC-V PLIC assumes the Claim/Complete register can be polled by the
    software even the interrupt pending bit (mip) isn't set. The RV_PLIC
    design only set the CC0 register when the priority is greater than
    the threshold value.

From the RISCV PLIC Spec:

> It is always legal for a hart to perform a claim even if the EIP is
> not set.  In particular, a hart could set the threshold value to
> maximum to disable interrupt notifications and instead poll for active
> interrupts using periodic claim requests, though a simpler approach to
> implement polling would be to clear the external interrupt enable in
> the corresponding xie register for privilege mode x.

https://github.com/riscv/riscv-isa-manual/blob/master/src/plic.tex#L329-L334

For instance, if the `threshold` value is set to 7h while the MAX_PRIO
is set to 7 and ID 1 interrupt is pending, the `irq_o` of the RV_PLIC IP
will never be asserted. In this case, `CC0` register of the previous
version showed value `0` always. What spec expects is to be visible of
the most highest priority pending interrupt, which is, in this case, ID
1.

Solution:

    Revise the logic not to consider threshold to calculate `irq_id` in
    the target module. But `irq` should consider the threshold value
    comparing with max priority calculated.



======Commit: e34ccdc6======
======Short Message======
[hmac/dv] Enable mem_read err and fix minor issue
======Full Message======
[hmac/dv] Enable mem_read err and fix minor issue

Enable mem_read error in hmac_env_cfg
Fix hmac typo
Use an enum type for hmac cmd reg fields



======Commit: afd05056======
======Short Message======
Specify minimum version for mistletoe
======Full Message======
Specify minimum version for mistletoe

Previous versions of this package can cause the documentation build to
abort when parsing, e.g., vendored-in docs such as the one of the
debug module.



======Commit: edee92e3======
======Short Message======
[dv] Fix VCS compile error
======Full Message======
[dv] Fix VCS compile error



======Commit: fb1f1b8b======
======Short Message======
[xbar/dv] Support unmapped addr and add tests
======Full Message======
[xbar/dv] Support unmapped addr and add tests

1. update random seq framework
2. update scb to support unmapped addr
3. add tests
  - xbar_access_same_device
  - xbar_same_source
  - xbar_error_test: test d_error from device and disable protocol
  related constraint
  - xbar_unmapped_addr



======Commit: 9e594a75======
======Short Message======
[gpio/dv] gpio full random test, sequence updates and warnings' cleanup
======Full Message======
[gpio/dv] gpio full random test, sequence updates and warnings' cleanup

Adding full random test sequence
Fix long write long read sequence
Move common constraints to gpio base vseq
void casting on uvm_reg and uvm_reg_field predict method calls



======Commit: e7d86433======
======Short Message======
[test] Fix OpenOCD test breakage introduce by refactoring.
======Full Message======
[test] Fix OpenOCD test breakage introduce by refactoring.

This change fixes the breakage introduced in https://github.com/lowRISC/opentitan/pull/547,
due to the OpenOCD command being resolved against $PATH by default.
In the future, we should consider removing this dependency on $PATH
once testing is fully automated.



======Commit: f2cc406e======
======Short Message======
[dv] Fix compile warning in tl_seq_item
======Full Message======
[dv] Fix compile warning in tl_seq_item

There is an extra '&' in the statement. removed the variable but
forgot to remove the '&'



======Commit: 309a4797======
======Short Message======
[prim] Use prim_pkg::impl_e instead of int for Impl
======Full Message======
[prim] Use prim_pkg::impl_e instead of int for Impl

All target-dependent primitives are supplied with an Impl parameter,
which chooses the implementation target. The potential values for this
parameter are listed in the prim_pkg::impl_e enum, which is based on
int.

This commit switches Impl over to use prim_pkg::impl_e as type, instead
of int. Doing so avoids many casts over the code base, at the cost of
having to pass an enum type name to the tool in the PRIM_DEFAULT_IMPL
define. This approach is standards-compliant, but seems fragile.
Let's give it a try nonetheless, and see how tools react to it.

Tested with
- Verilator 4.019
- Xilinx Vivado synthesis 2018.3
- Synopsys VCS 2019.06

Note for the future: revert this commit if you run into tool issues.



======Commit: cabf26f3======
======Short Message======
[prim] Restore ability to select default implementation
======Full Message======
[prim] Restore ability to select default implementation

When we introduced the primitives library, we also had the possibility
to choose a per-design default implementation for primitives. To set a
default implementation, the synthesis script would set the
PRIM_DEFAULT_IMPL define to values like "xilinx" or "generic", which was
then used as default value for the Impl parameter, which is present in
all primitives modules:

```verilog
parameter Impl = `"`PRIM_DEFAULT_IMPL`"
```

Unfortunately, this syntax to "cast" a define to a string isn't
supported in Cadence LEC. As a stop-gap, we removed the functionality
altogether. This resulted in always using the "generic" implementation
for all targets, which produces suboptimal results e.g. on Xilinx FPGAs.

With this commit, the original functionality is restored in a
LEC-compatible way. Instead of using strings for PRIM_DEFAULT_IMPL, we
now use integers. The allowed values are listed in the
prim_pkg::impl_e enum.

Implementation notes on types:

* PRIM_DEFAULT_IMPL is a define passed through to tools as command line
  options. Most/all tools only support "primitive" types in this way,
  not enums; hence PRIM_DEFAULT_IMPL is an integer, and all assignments
  to it must be integer as well. This includes the default assignment:

  `ifndef PRIM_DEFAULT_IMPL
    `define PRIM_DEFAULT_IMPL integer'(prim_pkg::ImplGeneric)
  `endif

* Since we assign the PRIM_DEFAULT_IMPL define to the Impl parameter,
  this parameter needs to be either an integer, or cast the RHS to an
  enum.

* In this implementation we stayed with an integer type for the Impl to
  avoid potential problems with tools don't supporting enums as
  parameter type. (We don't know of any tool yet that doesn't support
  it, but it seems sufficiently exotic to run into problems down the
  road.)

Thanks to Tim for an initial version of this code.

Fixes #40



======Commit: e7aef113======
======Short Message======
[boot_rom] Fix README.md naming
======Full Message======
[boot_rom] Fix README.md naming



======Commit: 45859b7e======
======Short Message======
[reggen] Wrap output to meet code standards
======Full Message======
[reggen] Wrap output to meet code standards

Fixes #578

regtool could output comments and #defines that went over the 80
character line limit leading to a failure of C/C++ lint checking. This
fixes all instances of that currently seen but doesn't entirely prevent
it.

Included with the commit are the new results of running regtool which
pass the C/C++ lint checks.



======Commit: 6c2a57c7======
======Short Message======
[aes/rtl] Fix lint errors
======Full Message======
[aes/rtl] Fix lint errors



======Commit: ef72c0e6======
======Short Message======
[rv_dm] Document the Debug System wrapper
======Full Message======
[rv_dm] Document the Debug System wrapper

The debug system wrapper instantiates the PULP Debug System, which we
vendor in. The vendored-in code contains documentation that follows our
documentation standards.

This commit adds documentation for the debug system wrapper. It points
to the upstream documentation, and explains the additional functinality
provided by the wrapper.

Fixes #343



======Commit: 14a43120======
======Short Message======
[hmac] Error Handling: Discard Msg if sha_en:=0
======Full Message======
[hmac] Error Handling: Discard Msg if sha_en:=0

First version of HMAC silently discarded the incoming message if the
message FIFO was full. The reasone was the FIFO was connected to the
register interface, which doesn't have back-pressure mechanism. So, the
consequences of the behavior was the hash digest could be wrong if the
feeder sends the data faster than what HMAC can consume.

Livestream mode was introduced to address the issue above. With
`prim_packer` module and the window feature in reggen, now the message
FIFO is connected through TL-UL window port not the register interface
port. Window port is another TL-UL port that can back-pressure the
requester (yes it has ready signal now).

The consequences? Now the feeder (software or DMA later) can be stuck at
requesting new data until HMAC consumes previous data. It becomes
important that the HMAC IP now shouldn't hang, which has a chance to
create a hang condition to the entire SoC system.

One particular case was what @cindychip found in #523. She tried to send
a message into the HMAC message FIFO while HMAC is turned off, aka
sha_en := 0. This case, HMAC accepts the message and let the message
FIFO full and eventually back-pressuring the host.

As the host is back-pressured, it cannot clear the hang condition!
(maybe watchdog eventually can do) So, the design is changed to clear
this issue. Now HMAC discards the incoming message if HMAC is not
enabled.

One more step taken in this issue is to create `ERR_CODE` register. It
might be OK to create another interrupt line named as
`new_msg_sha_disabled` or something similar. It, however, could be
beneficial to combine any error message into one error message code and
let the software knows what was the reason after getting the alert/
interrupt. So, HMAC stores error code while generating the interrupt.

It also adds a logic to detect the condition of the software that sets
`hash_start` when `sha_en` is 0. This ensures the earliest catch of
wrong software behavior.

Next PR will also merge `fifo_full` interrupt into `hmac_err`.



======Commit: a40dc027======
======Short Message======
[docgen] Fix two testplans that broke docgen
======Full Message======
[docgen] Fix two testplans that broke docgen



======Commit: 13678cf4======
======Short Message======
[hmac] Add Error Reponse for Read of MSG
======Full Message======
[hmac] Add Error Reponse for Read of MSG

HMAC MSG FIFO is not a generic memory. It has a range of address space
(from offset 0x800 to 0xFFF in a HMAC IP) but all writes to the region
fall into a entry in the Message FIFO.

The characteristic of the MSG FIFO in the HMAC results in a test failure
of DV R/W to the MSG FIFO. Why it tries R/W to the MSG FIFO? well, as it
is defined as window in `ip.hjson`, it creates UVM memory model by the
tool. So, it needs explict waiver to work around.

Now the MSG FIFO has `swaccess` type as `wo`. It shouldn't create the
R/W test by default. But it is still useful to notify the software
whether it tries to read from the MSG FIFO or not.

@tjaychen added a Paramter to `tlul_adapter_sram`. It is `ErrOnRead` to
report error on any read request. This paramter value is set to 1 for
MSG FIFO now.

This is related to #236



======Commit: 7fc62cea======
======Short Message======
[doc] minor fixes to fpga doc
======Full Message======
[doc] minor fixes to fpga doc



======Commit: 1c14ede5======
======Short Message======
[dv, doc] doc & Hjson tesetplan fixes
======Full Message======
[dv, doc] doc & Hjson tesetplan fixes

- replaced {hjson, HJSON} with Hjson
- updated all existing Hjson testplans (along with the templates) to use
  {V1, V2, V3} instead of lower case
- additional minor style related fixes



======Commit: aaaad5fa======
======Short Message======
[dv] Fix for dv plan template doc
======Full Message======
[dv] Fix for dv plan template doc



======Commit: a9f69bec======
======Short Message======
[reggen] Correct calculation of interrupt width
======Full Message======
[reggen] Correct calculation of interrupt width

Issue was found during the code review #516.

Error Symptom:

    If a IP has interrupts having more than one bit width, the validate
    has a chance to not raises ERROR for the interrupt exceeding full
    register width (currently 32).

auto interrupt register generation was added to create INTERRUPT
enable/status/test registers by the tool. It does have a limitation that
only supports up to 32bit interrupts in a IP. For instance, if IP has 33
interrupts, it raises an ERROR and stop generating.

However, GPIO has only one interrupt signal but the width of the
interrupt is 32bit width. If it is set to 33 bit width, tool doesn't
create an error. as the checker only checks:

```python
if len(m['interrupt_list']) > fullwidth:
```

It should check the `width` field and account it to compare with
`fullwidth`.

Results:

    Changed to sum the width of the interrupt_list

```python
sum([int(x['width']) if 'width' in x else 1 for x in
m['interrupt_list'])
```



======Commit: 5cb7022b======
======Short Message======
[prim] Fix various comments
======Full Message======
[prim] Fix various comments

Remove wrong comments from primitives, add the common TODO comment to
all abstract primitives.

No functional changes.



======Commit: 2e5894d3======
======Short Message======
[sw, flash] Minor fix to flash_test for verilator
======Full Message======
[sw, flash] Minor fix to flash_test for verilator

All test regions need to be initialized (erased) in the test
since verilator does not currently pre-initialize flash to all 1's



======Commit: 9e2f893d======
======Short Message======
[lint/prim_fifo_sync] This corrects two lint errors in case of Depth = 1
======Full Message======
[lint/prim_fifo_sync] This corrects two lint errors in case of Depth = 1



======Commit: 658d5c6f======
======Short Message======
[dv/hmac] fix hmac dv typo
======Full Message======
[dv/hmac] fix hmac dv typo

Thanks for weicai's helping in debugging, DV common csr sequence fix a
typo.



======Commit: 005dbe71======
======Short Message======
[doc] Fix verilator instructions
======Full Message======
[doc] Fix verilator instructions



======Commit: 6637075c======
======Short Message======
[fpga] Fix ROM init file paths and typos
======Full Message======
[fpga] Fix ROM init file paths and typos

Addresses #422



======Commit: 444055d8======
======Short Message======
[fpga] Minor fixes to splicing
======Full Message======
[fpga] Minor fixes to splicing

- update ROM search path
- update script to automatically move spliced bitfile



======Commit: 698d6769======
======Short Message======
[dv] Update all IP to support tl error cases
======Full Message======
[dv] Update all IP to support tl error cases

Also support outstanding access for tl errors



======Commit: 6b6621d6======
======Short Message======
	modified:   ../../hw/top_earlgrey/data/placement.xdc
======Full Message======
	modified:   ../../hw/top_earlgrey/data/placement.xdc

Relate to PR #428
Fixes needed in xdc and splice script which need to go alongwith #428

Updated placement.xdc to include change in instance names coming from #428 (instance name suggested rom's now)



======Commit: 14891160======
======Short Message======
[uart/dv] Fix corner case for tx_empty
======Full Message======
[uart/dv] Fix corner case for tx_empty

1. ignore checking tx_empty at last 2 cycles when txlvl is 0 or 1
2. make no delay on a_valid in tl_host_driver as we control delay in seq



======Commit: 79aac27c======
======Short Message======
Update lowrisc_ibex to lowRISC/ibex@6b1a7ad
======Full Message======
Update lowrisc_ibex to lowRISC/ibex@6b1a7ad

Update code from upstream repository
https://github.com/lowRISC/ibex.git to revision
6b1a7add5dcc8cd8b62f0e5765efd35d90b3e466

* [Doc] Added extra setup info for Verification (Greg Chadwick)
* Update google_riscv-dv to google/riscv-dv@033fccf (lowRISC/ibex#406)
  (udinator)
* [DV] Debug_ebreak test fix (lowRISC/ibex#405) (udinator)
* Add RV32IM test (lowRISC/ibex#404) (taoliug)
* Licensing documentation: Add commercial support info (Philipp
  Wagner)
* Improve copyright/licensing page (Philipp Wagner)
* [RTL] Fix single stepping on exceptions (Greg Chadwick)
* [RTL] Fix ebreak behaviour in U-mode (Greg Chadwick)
* [RTL] Fix ebreak and cleanup debug (Greg Chadwick)
* [DV] Fix bugs in mem_error test to circumvent test deadlock
  (lowRISC/ibex#400) (udinator)
* [RTL] Prevent CSR write on any illegal CSR reason (Greg Chadwick)
* [DV] Fix lint warnings (lowRISC/ibex#397) (udinator)
* Remove non-ASCII characters from .sv and .rst files (Pirmin Vogel)
* [DV] Let time-consuming checker tasks detect failures
  (lowRISC/ibex#395) (udinator)
* [DV] Add reset test (lowRISC/ibex#392) (udinator)
* [DV] Update csr description for U-mode changes (lowRISC/ibex#387)
  (udinator)
* [RTL] Enable reading mstatus.tw (lowRISC/ibex#388) (udinator)
* [CI] Stop pinning an old attrs version (Alex Bradbury)



======Commit: 00b63376======
======Short Message======
[padctrl] Append _pad postfix to pad signals
======Full Message======
[padctrl] Append _pad postfix to pad signals



======Commit: 7ba939a6======
======Short Message======
[top_earlgrey] Fix documentation how to use topgen
======Full Message======
[top_earlgrey] Fix documentation how to use topgen



======Commit: 8fccfe25======
======Short Message======
[Ibex] Fix indentation of top-level parameters
======Full Message======
[Ibex] Fix indentation of top-level parameters



======Commit: a3ec3ba3======
======Short Message======
[Ibex] Expose PMP-related parameters in wrapper
======Full Message======
[Ibex] Expose PMP-related parameters in wrapper

PMP is disabled currently (which is the default), but still expose the
parmaeters to have the ability to tune things in the future, and keep a
consistent interface with Ibex.



======Commit: 009d38d4======
======Short Message======
[aes/rtl] Fix clearing of key and output registers
======Full Message======
[aes/rtl] Fix clearing of key and output registers



======Commit: b5961eb0======
======Short Message======
Update pulp_riscv_dbg to pulp-platform/riscv-dbg@811b2d7
======Full Message======
Update pulp_riscv_dbg to pulp-platform/riscv-dbg@811b2d7

Update code from upstream repository https://github.com/pulp-
platform/riscv-dbg to revision
811b2d707795a5044d63a68f747b2f9cd29d3a88

* Document the current debug system (Philipp Wagner)



======Commit: 556c3d71======
======Short Message======
[dv gpio] Updates related to coverage, gpio weak pull, warnings' cleanup
======Full Message======
[dv gpio] Updates related to coverage, gpio weak pull, warnings' cleanup

1. cip_base_env_cov.sv: covergroup for the case in which interrupt state is
   cleared and then set again due to active interrupt event
2. pins_if.sv: Modified the way weak pull up/down is implemented to avoid
   overriding 'x' with 0/1, when there are multiple conflicting drivers
3. */tb.tb.sv: Connect wire devmode to connect to devmode_if pins port
4. gpio_env_cov.sv: cross coverage involving *out* and *oe* registers along
   with data_in registers
5. gpio_scoreboard.sv: Sampling for new covergroups
6. mem_model.sv: Fix compile warning



======Commit: 531b2631======
======Short Message======
[dv/hmac] Update hmac addr size for tl_errors
======Full Message======
[dv/hmac] Update hmac addr size for tl_errors

Quick fix for hmac as it causes sanity failed. Will create another PR to
make all IPs support tl_errors



======Commit: 59d2f014======
======Short Message======
[tlul] Revise full data check.
======Full Message======
[tlul] Revise full data check.

If `a_mask` is `0h` for 1 byte write, `tlul_err` did not raise an error
for PutFullData command. It is fixed to check a_mask with mask signal.

This is related to #236



======Commit: aeca7056======
======Short Message======
[dv] Fix xcelium compile errors
======Full Message======
[dv] Fix xcelium compile errors

1. std:randomize can be only used for local variable
2. fix top TB compile errors



======Commit: 7aab7598======
======Short Message======
[dv] Fix compile error due to lack of input of cfg.initialize
======Full Message======
[dv] Fix compile error due to lack of input of cfg.initialize



======Commit: dead5f40======
======Short Message======
[dv] TL error - protocol error
======Full Message======
[dv] TL error - protocol error

Test TL with all kinds of protocol error and check in scb



======Commit: a8255fdc======
======Short Message======
[dv, uvmdvgen] fixes for issue 434
======Full Message======
[dv, uvmdvgen] fixes for issue 434

- fixed base test to extend from cip_base_test if cip
- added -hi and -ha switches to indicate if interrupts / alerts are to
  be created in the testbench
- removed typedef for virtual sequencer if there are no agents (always create it)



======Commit: 387ba86c======
======Short Message======
[padctrl] Fix lint errors due to recent changes
======Full Message======
[padctrl] Fix lint errors due to recent changes



======Commit: 2d4e2535======
======Short Message======
[uart] Condition of Overflow
======Full Message======
[uart] Condition of Overflow

Previous overflow interrupt didn't consider frame error or parity error.
If a frame error or a parity error occurs, the logic doesn't push a
entry into rx fifo. So it shouldn't trigger overflow at that time.



======Commit: 3366175c======
======Short Message======
[doc] User guide typo fix
======Full Message======
[doc] User guide typo fix



======Commit: 24df721a======
======Short Message======
Remove pinned attrs version from python-requirements.txt
======Full Message======
Remove pinned attrs version from python-requirements.txt

Fixes #305.

simplesat (required by fusesoc) was broken by an update to the attrs
library. Now simplesat 0.8.2 has been released which fixes the issue, we
can remove the explicit pinning of the old attrs version.



======Commit: 2af98eda======
======Short Message======
[topgen] Fix generation script
======Full Message======
[topgen] Fix generation script

It dumped entire crossbar list not a member. Now it is fixed to create
individual crossbar configuration, so that tlgen.py can read the hjson.



======Commit: e8cc63e6======
======Short Message======
[tlgen] Minor fix to pipeline generation
======Full Message======
[tlgen] Minor fix to pipeline generation



======Commit: 4ba02d0a======
======Short Message======
Minor fix to the ibex wrapper
======Full Message======
Minor fix to the ibex wrapper

Previous ibex wrapper can generate incorrect address / size / mask
combinations. For example, a byte write to 0x1000FFE9 generated the
followin:
Address - 0x1000FFE8
Operation - PutPartialData
Size - 1 byte
Mask - 0010

This combination creates a mask_chk failure inside tlul_err.

The new wrapper (to be replaced by a generic tlul_host_adapter) simply
fixes 'size' to be full.  So the above example becomes
Address - 0x1000FFE8
Operation - PutPartialData
Size - 4 byte
Mask - 0010

This is a legal combination under TLUL as PutPartial commands are
allowed to access less than the full active lanes.  It also conforms
to how the ibex formats its outputs



======Commit: c45ce160======
======Short Message======
[sw, flash_ctrl] Various flash fixes
======Full Message======
[sw, flash_ctrl] Various flash fixes

- fix BANK_CFG multireg field offset
- add flash_cfg_bank_erase



======Commit: 875469a5======
======Short Message======
[dv/hmac] hmac reset during sequence
======Full Message======
[dv/hmac] hmac reset during sequence

Randomly insert reset in the existing sequences
After reset, check if all the csrs are reset to the default stage



======Commit: e568226e======
======Short Message======
Update lowrisc_ibex to lowRISC/ibex@2b6a951
======Full Message======
Update lowrisc_ibex to lowRISC/ibex@2b6a951

Update code from upstream repository
https://github.com/lowRISC/ibex.git to revision
2b6a95190e5fa80d547a34aa6419a7d54df033fc

* Remove outdated waiver (Philipp Wagner)
* Tie off csr_pmp_* signals for all lint tools (Philipp Wagner)
* Avoid self-determined bit length of signals (Philipp Wagner)
* ibex_cs_registers: Add missing generate name (Philipp Wagner)
* [RTL LSU] Change unaligned error behaviour (Tom Roberts)
* Update google_riscv-dv to google/riscv-dv@ad6fe56 (lowRISC/ibex#385)
  (udinator)
* [DV] Added unaligned memory error test (lowRISC/ibex#378) (udinator)
* Update description for running RISC-V compliance (Tobias Wölfel)
* Remove reference to simulation (Tobias Wölfel)



======Commit: 6d9652cf======
======Short Message======
[TLUL PC] Minor documentation review update
======Full Message======
[TLUL PC] Minor documentation review update

- Fix link destination



======Commit: cb28a17d======
======Short Message======
[tool] Add nice debug info for Mako
======Full Message======
[tool] Add nice debug info for Mako

Debugging Mako template error is quite hard. With this PR, at least it
gives the exact location in the template file when error occurs.

Reference: https://docs.makotemplates.org/en/latest/usage.html#handling-exceptions



======Commit: 4b98fc8d======
======Short Message======
[top_earlgrey_verilator] Enable instr. traces
======Full Message======
[top_earlgrey_verilator] Enable instr. traces

Now that we have a Verilator-compatible instruction tracer we can always
enable it. This makes debugging of software much easier, and helps us to
test the RVFI=true configuration in CI.



======Commit: 92e9f221======
======Short Message======
[rv_ibex] Update port list after ibex_tracer changes
======Full Message======
[rv_ibex] Update port list after ibex_tracer changes

Fixes #361



======Commit: e340cadc======
======Short Message======
[dv] TL error cases
======Full Message======
[dv] TL error cases

1. only have 4 error cases as current design only supports them
2. only update uart, spi_device to support TL error cases, will add it
to the other IPs in another PR.
3. move common tests to common_tests.mk
4. add checking tl error cases in scb
5. add disable/enable sva in tl_assert



======Commit: 17e9624c======
======Short Message======
Update lowrisc_ibex to lowRISC/ibex@ee1098f
======Full Message======
Update lowrisc_ibex to lowRISC/ibex@ee1098f

Update code from upstream repository
https://github.com/lowRISC/ibex.git to revision
ee1098f9afb1a63a34d613a8949c00e5b0c75b47

* Tracer: Reference Verilator bug for miscompilation (Philipp Wagner)
* Include rs1 and rd in trace of c.addi16sp (Philipp Wagner)
* [DV] Top level toggle coverage (lowRISC/ibex#371) (udinator)
* [Doc] Add more pipeline details (Greg Chadwick)
* [Doc] Fix for table wrapping in RTD theme (Greg Chadwick)
* Add missing enum cast (Philipp Wagner)
* [Doc] Fix some rendering issues in cs_registers (Tom Roberts)
* [RTL PMP] Fix address matching bugs (Tom Roberts)
* [Priv modes] Add support for U-Mode (Tom Roberts)
* RISC-V Compliance test: Enable tracing (Philipp Wagner)
* [DV] Update ibex log regex (lowRISC/ibex#366) (udinator)
* Tracer: Fix default file name (Philipp Wagner)
* CI: Also check tracer in lint (Philipp Wagner)
* Lint: Enable lint for ibex_core_tracing (Philipp Wagner)
* Update gitignore to include trace log file (Philipp Wagner)
* Document new tracer implementation (Philipp Wagner)
* Implement Verilator-compatible tracer, and use it (Philipp Wagner)
* Remove tracer testbench (Philipp Wagner)
* [RTL] Fix timing path around exceptions and pc_set (Greg Chadwick)
* [RTL] Keep instr in ID valid for FLUSH state (Greg Chadwick)
* Pull `csr_we_int` around case in CSR (Marek Pikuła)
* CI: Unbreak build after simplesat breakage (Philipp Wagner)
* Docs: Fix Sphinx warnings and errors (Philipp Wagner)
* [DV] Debug single step test (lowRISC/ibex#362) (udinator)
* Add more parameters to core file (Philipp Wagner)
* ibex_core_tracing: Pass through all parameters (Philipp Wagner)
* ibex_core: Use correct width for param assignments (Philipp Wagner)
* Tracer: Update copyright notice to match other files (Philipp
  Wagner)
* [Prefetch buffer] - various bug fixes (Tom Roberts)
* [DV]Add Makefile target for functional coverage (lowRISC/ibex#358)
  (taoliug)
* [rtl/ibex_core] Added missing parameter assignment
  (lowRISC/ibex#356) (NilsGraf)
* [DV] Fix ovpsim compare issue (lowRISC/ibex#355) (udinator)
* [DV] Refactor debug stress stimulus to avoid race conditions
  (lowRISC/ibex#354) (udinator)
* Update google_riscv-dv to google/riscv-dv@d341944 (lowRISC/ibex#353)
  (udinator)
* [DV] Basic performance test (lowRISC/ibex#352) (udinator)
* Tighten debug stimulus assertion (lowRISC/ibex#351) (udinator)
* Update google_riscv-dv to google/riscv-dv@e3e1e30 (lowRISC/ibex#349)
  (udinator)
* Update google_riscv-dv to google/riscv-dv@4450592 (lowRISC/ibex#347)
  (udinator)
* [DV] Fix implemented_csr[] compile issue (lowRISC/ibex#346)
  (udinator)
* [DV] Update implemented CSRs (lowRISC/ibex#345) (udinator)
* Fix memory error test logic (lowRISC/ibex#344) (udinator)
* Tracing: Wrap fatal error message with `$fatal()` (Pirmin Vogel)
* [DV] Illegal instruction monitoring (lowRISC/ibex#338) (udinator)
* [DV] Shorten length of interrupt tests to prevent timeouts
  (lowRISC/ibex#337) (udinator)
* [DV] Drive external stimulus to 0 after reset (lowRISC/ibex#334)
  (udinator)
* Update google_riscv-dv to google/riscv-dv@80d4294 (lowRISC/ibex#333)
  (udinator)
* Add memory error testing (lowRISC/ibex#330) (udinator)
* Compliance test suite: Prefer D over I accesses (Philipp Wagner)
* Consolidate the script logging (lowRISC/ibex#329) (taoliug)
* Add dsim support (lowRISC/ibex#328) (taoliug)
* Lint: Enable RVFI when doing lint checks (Philipp Wagner)
* Lint: Fix signal width in tracer (Philipp Wagner)
* Ignore common editor files in Git (Philipp Wagner)
* Add interrupt testing, and update some debug test checks
  (lowRISC/ibex#324) (udinator)
* Integrate with the new riscv-dv user extension flow
  (lowRISC/ibex#323) (taoliug)
* Update google_riscv-dv to google/riscv-dv@0d2b5b7 (lowRISC/ibex#321)
  (udinator)
* ibex_riscv_compliance: Adjust to simutil_verilator (Philipp Wagner)
* simutil_verilator: Always produce toplevel class (Philipp Wagner)
* [DV] Fix latch in simple bus (Greg Chadwick)
* [DV] Standardize logging, allow parallel simulation
  (lowRISC/ibex#315) (taoliug)
* Fix ELF section name (lowRISC/ibex#314) (taoliug)
* Fix regression failure (lowRISC/ibex#313) (taoliug)
* Update google_riscv-dv to google/riscv-dv@c98d89c (lowRISC/ibex#312)
  (udinator)



======Commit: 73718e67======
======Short Message======
[dv/tlul] Clean up tlul TB
======Full Message======
[dv/tlul] Clean up tlul TB

1. use new makefile structure
2. use new core files structure
3. fix tb-dut connections
4. update scb for new DUT



======Commit: ac94003e======
======Short Message======
[padctrl/fpv/lint] Fix inout wire issue with lint and fpv
======Full Message======
[padctrl/fpv/lint] Fix inout wire issue with lint and fpv



======Commit: 7eae32ec======
======Short Message======
Set WAVES=1 by default for waveform-gen
======Full Message======
Set WAVES=1 by default for waveform-gen



======Commit: 6658dc3f======
======Short Message======
[reggen] fix minor issue with chip_reg_block generation
======Full Message======
[reggen] fix minor issue with chip_reg_block generation



======Commit: f7031627======
======Short Message======
[hw] Update default make target
======Full Message======
[hw] Update default make target

Include `tops_gen` target in default `all` target.
Disable the verbose output.



======Commit: 25eb480a======
======Short Message======
Add exception handling for instruction / ld errors
======Full Message======
Add exception handling for instruction / ld errors

Addresses #18



======Commit: 0050715d======
======Short Message======
[dv/hmac] fix xcelium run time error
======Full Message======
[dv/hmac] fix xcelium run time error

Fix dpi-c error when malloc a memory size of 0



======Commit: ab58a81e======
======Short Message======
[dv] Fix top_earlgray compile
======Full Message======
[dv] Fix top_earlgray compile



======Commit: e8d310e5======
======Short Message======
[padctrl] Add padctrl implementation
======Full Message======
[padctrl] Add padctrl implementation

* [padctrl] Initial commit of regfile template and documentation
* [padctrl] Add generated files
* [padctrl] Add RTL implementation
* [padctrl/prim_pad_wrapper] Make lint clean
* [padctrl] Update documentation
* [padctrl] Align defaults in documentation and implementation



======Commit: 53ccbe8d======
======Short Message======
[dv] Use 2 top opts in BUILD_OPTS
======Full Message======
[dv] Use 2 top opts in BUILD_OPTS

XCelium requires to specify all the tops.
Default tops are tb ${DUT_TOP}_bind



======Commit: 61363330======
======Short Message======
[gpio dv] Fix gpio interrupt pin checker to use the latest intr_state value
======Full Message======
[gpio dv] Fix gpio interrupt pin checker to use the latest intr_state value



======Commit: 6a9358cc======
======Short Message======
[reggen] Fixes to validate.py that broke document generation
======Full Message======
[reggen] Fixes to validate.py that broke document generation



======Commit: 72f8a8da======
======Short Message======
Fix fusesoc dependency breakage using python-requirements.txt
======Full Message======
Fix fusesoc dependency breakage using python-requirements.txt

In #302, azure-pipelines.yml was modified to ensure that attrs 19.1.0 is
installed. This is because 19.2.0 breaks FuseSoC via the simplesat
dependency (see https://github.com/enthought/sat-solver/issues/270).
While the edits to azure-pipelines.yml fixed CI, users following the
getting started guide are still going to run into this issue. This
commit addresses the problem in an alternative way - by specifying the
version of attrs to use in python-requirements.txt.

Introducing a constraints.txt could have advantages, but that is more
intrusive and would require further doc updates. I feel that would be
overkill for a quick fix workaround that we hope to remove quite
rapidly.



======Commit: 276af5e9======
======Short Message======
[reggen] Add default value to param argument
======Full Message======
[reggen] Add default value to param argument



======Commit: 5cb7ee5e======
======Short Message======
Attempt to fix broken build
======Full Message======
Attempt to fix broken build



======Commit: 6ec3b899======
======Short Message======
[reggen] Rewrite param value from the script
======Full Message======
[reggen] Rewrite param value from the script

Now reggen.validate.validate function accepts positional argument, which
overwrites the default value of `param` in `param_list`.
This can let the tool creates multiple RTLs from a single hjson.

To do that, regtool.py also has `param` argument now. The format is
--param ParamA:ValueA ParamB:ValueB. You need to add the param argument
at the end of the script (after input path).

This is related to #30 #47



======Commit: 9a92bea9======
======Short Message======
[reggen] Fix template error in degenerate case (empty hw2reg/reg2hw)
======Full Message======
[reggen] Fix template error in degenerate case (empty hw2reg/reg2hw)



======Commit: f9fe0056======
======Short Message======
[reggen] Fix nested parameter and dimension stacking
======Full Message======
[reggen] Fix nested parameter and dimension stacking



======Commit: c77feabb======
======Short Message======
[flash_ctrl] Fix leaky permission
======Full Message======
[flash_ctrl] Fix leaky permission

Permission control was criscrossing between rd/prog/erase/bk_erase
Fix so that each is qualified with the related request.



======Commit: e2d72bc2======
======Short Message======
[dv/common] Fix syntax
======Full Message======
[dv/common] Fix syntax

Change from ''' to url



======Commit: 0d72c43a======
======Short Message======
[tlul/sram] Add error checker in tlul_adapter_sram
======Full Message======
[tlul/sram] Add error checker in tlul_adapter_sram

Pull-request #279 adressed #236 in the register interface.
This PR is to add error checker in tlul_adapter_sram.

It adds common TL-UL protocol checker in the sram adapter too.
Also this PR slightly revises the adapter module design to increase
readability of the code and to make data path more streamlined.

Previously tlul_adapter_sram forwarded the request to SRAM interface
even wrsp_error error is detected. Now the module drops the request and
handles internally (push to request fifo but req_o not asserted). Then
it keeps the order then send error response.



======Commit: 5996285c======
======Short Message======
[rv_timer/dv] Fix xcelium compile errors
======Full Message======
[rv_timer/dv] Fix xcelium compile errors

1. rv_timer_scoreboard: Updated logic to fix xcelium compile errors
2. cip_base_vseq: Flushing queue before extracting common csr



======Commit: b10517de======
======Short Message======
[tlul] Add tlul_err to register interface
======Full Message======
[tlul] Add tlul_err to register interface

tlul_adapter_reg now has error detection and response to the host with
error.

Discussed in #236



======Commit: e15f7e52======
======Short Message======
[gpio dv] Multiple fixes and updates in gpio verif env
======Full Message======
[gpio dv] Multiple fixes and updates in gpio verif env

1.  gpio_env_pkg.sv: Cleanup
2.  pins_if.sv: Apply pullup/pulldown on pins rather than pins_int
    By doing this, we can model gpio inout functionality correctly
3.  tb.sv: Remove logic for weak pullup/pulldown and related plusargs
    Now that we are using pins_if functions for this, modify generate
    block logic to allow muxing between gpio output and input
4.  gpio_env_cfg.sv: Weak pullup/pulldown random variables with default
    constraint to have only one of them as value 1
5.  gpio_common_vseq.sv: Fixes for gpio csr tests
6.  gpio_intr_with_filter_rand_intr_event_vseq.sv: Cleanup
7.  gpio_random_long_reg_writes_reg_reads_vseq.sv:
    New test sequence for "long reg writes and long reg reads" for gpio
8.  gpio_scoreboard.sv: Check for pullup/pulldown effect based on pins_if
    pins_pu and pins_pd values, rather than cfg member values
    Updated checker to triggerr only when some real gpio activity is seen
9.  Makefile: Rename active_high_pullup to weak_pullup_en
10. gpio_sanity_vseq.sv: Re-use base sequence member delay
    Allow delay value 0 as scoreboard is capable of evaluating data_in
    correctly even for that case. Remove check inside sequence as
    scoreboard already checks for correctness of data_in upon reading it
11. gpio_base_vseq.sv: Sequence based control for gpio pullup/pulldown
12. gpio_vseq_list.sv: Add new sequence in compilation



======Commit: 70c76d68======
======Short Message======
[sw/host] Update spiflash hash function.
======Full Message======
[sw/host] Update spiflash hash function.

The last frame had an invalid hash calculation due to the frame number
update performed after the hash had been set. This commit moves the hash
calculation to fix this issue.



======Commit: 69d5099c======
======Short Message======
Fix Makefile for missing crt.o
======Full Message======
Fix Makefile for missing crt.o

opt.mk was using := and was not picking CRT_SRCS.
This caused the flash make to jump directly into the test instead of
crt.  Since the first function in the test was an endless loop, the
test was never able to complete.



======Commit: 8330d773======
======Short Message======
[rv_timer/dv] Enhancement to cfg_update_on_fly seq
======Full Message======
[rv_timer/dv] Enhancement to cfg_update_on_fly seq

1. rv_timer_cfg_update_on_fly_vseq: Added support to update timer cfg
close to timer expiry
2. rv_timer_sanity_vseq: update constraint val range
3. cip_base_vseq: Optimize run_intr_test and clear_all_interrupts tasks
4. rv_timer_common_vseq: Deleted exclusion as issue is fixed



======Commit: cfd59cc8======
======Short Message======
CODEOWNERS to set default reviewers
======Full Message======
CODEOWNERS to set default reviewers



======Commit: 88179fc7======
======Short Message======
[CI] Add SW build using make targets
======Full Message======
[CI] Add SW build using make targets

Add software build targets to Azure pipelines. This may
eventually change once we add system test coverage to CI.

To run the flow in local mode:

```console
$ cd ${REPO_TOP}
$ ci/run_sw_build.sh
```

By default TOOLCHAIN_PATH points to /tools/riscv. If overridden,
the script will fetch the toolchain if needed before running the
build, e.g.:

```console
$ cd ${REPO_TOP}
$ TOOLCHAIN_PATH=/tmp/toolchain-path ci/run_sw_build.sh
```

Additional ENVARs:

* `REQUEST_UPDATE`: If set to true, the script will attempt to update
  toolchain to the requested `TOOLCHAIN_VERSION` which defaults to
  `latest`.

Other Comments:

* Why a shell script instead of Python? I expect that once we move
to a new build system, the script will no longer require to hardcode
the target enumeration, so the bulk of the logic will be gone.
I am open to rewriting in Python if we prefer consistency.



======Commit: e2a3fb7f======
======Short Message======
[CI] Select clang-format files by command-line tools
======Full Message======
[CI] Select clang-format files by command-line tools

Use command-line utilities to select the files which are checked by
clang-format.

Azure Pipelines hosted runners use Ubuntu 16.04, which uses a dated
version of git which does not support to use `pathspec` to exclude
certain files/folders from the diff output.

Fixes #227



======Commit: 789c27cb======
======Short Message======
[dv,sw] sw Makefile refactor
======Full Message======
[dv,sw] sw Makefile refactor

[sw] Makefile refactor

- added centrallized Makefile infra for maximizing reuse across SW
test, lib and boot_rom targets
- existing Make flows still remain (for the timebeing; will remove it
once all approve of this)
- all make commands are to be run from sw/ area
- updated with chip_info generation
- TODOs
  - add some documentation
  - need to fix support for external apps, eg coremark

[dv,sw] coremark port now works

- updates to get external app (coremark) compiling with the refactored
flow
- added ability to compile targets with external Makefiles with
STANDALONE_SW var
- added sw/benchmarks/srcs.mk to supply STANDALONE_CMD to build custom
app

[dv,sw] removed existing Makefiles (deprecated)



======Commit: 40749089======
======Short Message======
[prim_lfsr] Fix lint error due to define MAX_LEN_SVA
======Full Message======
[prim_lfsr] Fix lint error due to define MAX_LEN_SVA



======Commit: 0946e9ec======
======Short Message======
[alert_handler] Fix declaration of unpacked array
======Full Message======
[alert_handler] Fix declaration of unpacked array



======Commit: eb795572======
======Short Message======
[alert_handler] Fix assertions in esc timer
======Full Message======
[alert_handler] Fix assertions in esc timer



======Commit: 3b36e060======
======Short Message======
[reggen] Revise devmode behavior
======Full Message======
[reggen] Revise devmode behavior

Register modules aren't aware of LifeCycle anymore. It determines the
error response based on `devmode_i` only.



======Commit: de88e3a1======
======Short Message======
[reggen] Add devmode_i to register module
======Full Message======
[reggen] Add devmode_i to register module

Now *_reg_top has `devmode_i` signal. It controls the error return
behavior if LifeCyle is set to 1. If the host accesses unmapped
registers, the register module returns normal response in case of
LifeCycle 1b and devmode_i 1b. If LifeCycle is 0b, it always assume
devmode is 1b.



======Commit: 57e75de0======
======Short Message======
[tlul/reg] Remove opcode checker from tlul_adapter_reg
======Full Message======
[tlul/reg] Remove opcode checker from tlul_adapter_reg

Remove unnecessary error checking logic from adater_reg. Revise
tlul_assert.sv to meet TL-UL specification (but adding more restrictive)

This is related to #236



======Commit: 65a4aa73======
======Short Message======
[tlul] return AccessAckData for Get even if error happens.
======Full Message======
[tlul] return AccessAckData for Get even if error happens.

TL-UL spec shows the flow graph that the device responses as
AccessAckData for Get. Current logic returns AccessAck if error inside
`tlul_adapter_reg` occurs. Now it returns AccessAckData opcode in D
channel.



======Commit: db021fd2======
======Short Message======
[uart/dv] Fix issues due to PR #105 and #157
======Full Message======
[uart/dv] Fix issues due to PR #105 and #157

1. PR 105 rename intr_test_vseq
2. remove interrupt clear at post_start as PR 157 added it



======Commit: c705000c======
======Short Message======
[util] Make sure get-toolchain downloads tar file
======Full Message======
[util] Make sure get-toolchain downloads tar file

Sometimes the release API returns files out of order, listing the log
file before the tar archive. This commit adds an additional suffix check
to make sure we download the tar file.



======Commit: 0a8fbf90======
======Short Message======
Reduce default flash read to 1 cycle
======Full Message======
Reduce default flash read to 1 cycle

Data returns immediately in the next cycle after request is accepted.
In the future, if there is an icache, the default timing will be increased



======Commit: bc5d5143======
======Short Message======
[reggen] Fix the last comma (oops!)
======Full Message======
[reggen] Fix the last comma (oops!)

Sorry I made last minute mistake (while beautifying the codes...)



======Commit: 51461cd2======
======Short Message======
[util/reggen] Addressed subword write.
======Full Message======
[util/reggen] Addressed subword write.

If write size is smaller than the register width, then responses an
error. Previously it raises an error for subword write regardless of the
register width.

For instance, if the CPU writes a byte into a register having smaller
than 8 valid bit, it succeeds. But if register field width is greater
than 8, it returns error now.

Errored write access won't let the register value be written



======Commit: 8f659ab3======
======Short Message======
Temporary fix to scanmode_i
======Full Message======
Temporary fix to scanmode_i

top_earlgrey now checks for scanmode being known.  It is not clear at the
momemnt where and what hierarchy level scanmode should be generated, so for
now stay consisten with FPGA and tie it off at the simulation wrapper



======Commit: 8c89cb9a======
======Short Message======
[dv] Fix xcelium issues for all IPs
======Full Message======
[dv] Fix xcelium issues for all IPs

1. need to import ip_test_pkg in tb.sv
2. can't use ref val in fork join
3. substr().atohex isn't allowed
4. "conv_endian = (swap) ? {<<8{v}} : v" isn't allowed
5. add default UVM_TEST for trial1
6. change jtag_if signal to wire and fix driving wire directly in driver
7. fix randomize cross reference variable in mem_bkdr_if.sv



======Commit: 61e25e8e======
======Short Message======
The option is controlled through xbar_main.hjson
======Full Message======
The option is controlled through xbar_main.hjson

By default all xbar componentns are marked with
'pipeline' = true
'pipeline_byp' = true

This means all elements (socket1n/socketm1) have both incoming and outgoing
FIFOs that are bypassable if the FIFO is empty

Setting `pipeline_byp` to false makes it a non-bypassable fifo and incurs
extra latency while giving better timing

Setting `pipeline` to false passes through the FIFO entirely and connects
input to output

The current scheme does the following:
remove pipelines for coreI/coreD to minimize process latency
remove pipeliens for ROM / RAM / FLASH to minimize instruction latency
keep pipelines to all other peripherals and memories



======Commit: 70f0b0de======
======Short Message======
[reggen] Update to support subword register access
======Full Message======
[reggen] Update to support subword register access

- Revised to tie lower 2 bits of address to register interface
- Add address alignment checker in tlul_adapter_reg for read
- Write creates error if address isn't word-aligned
- Raises an error if opcode isn't supported
- Drop the request if internal error occurs (unaligned, malformed_meta,
  opcode)
- Removed register_tool invisible character



======Commit: 260e1bde======
======Short Message======
[dv] Fix xcelium compile errors
======Full Message======
[dv] Fix xcelium compile errors

1. use wire struct in tl_if
2. change uart_tx to wire
3. fix tl_device_driver hierarchy path typo



======Commit: fbd8a520======
======Short Message======
[util/uvmdvgen] Fix uvmdvgen.py script
======Full Message======
[util/uvmdvgen] Fix uvmdvgen.py script

Rename csr_vseq.sv.tpl to common_vseq.sv.tpl



======Commit: 55fd78e6======
======Short Message======
Update lowrisc_ibex to lowRISC/ibex@f025236
======Full Message======
Update lowrisc_ibex to lowRISC/ibex@f025236

Update code from upstream repository
https://github.com/lowRISC/ibex.git to revision
f025236a22e4d2290acf856de60449f24d79bc6f

* [I-side] - Fix issues found in tracing example (Tom Roberts)
* Run clang-format on all source files (Philipp Wagner)
* Add lowRISC standard clang-format file (Philipp Wagner)
* Controller: fix `nmi_mode` default assignment (Pirmin Vogel)
* Update slave_driver grant timing to pass Ibex assertion checks
  (lowRISC/ibex#295) (udinator)
* Controller: Fix exception cause ID of fast interrupts (Pirmin Vogel)
* [I-side] - Fix assertion error (Tom Roberts)
* Instruction set extensions M and C may be swapped (pbing)
* Fix syntax error (Udi)
* Adding Compressed Instruction support in tracer (Rahul Behl)
* CSRs: reset `dcsr.XDEBUGVER` to `XDEBUGVER_STD` instead of 0 (Pirmin
  Vogel)
* [RTL] Fix I-side timing loop (Tom Roberts)
* Add core_sleep_o to ibex interface (Greg Chadwick)
* [RTL] - Remove timing loop in LSU (Tom Roberts)
* Added dret and ebreak tests (lowRISC/ibex#281) (udinator)



======Commit: fd760328======
======Short Message======
[chip dv] fix for failing sanity test
======Full Message======
[chip dv] fix for failing sanity test

- updated chip_csr_vseq to create ip_common_vseq



======Commit: 95f36c3f======
======Short Message======
[prim_lfsr] Fix indentation
======Full Message======
[prim_lfsr] Fix indentation



======Commit: 53b41ba9======
======Short Message======
[doc/ug] Update cmds in Verilator user guide
======Full Message======
[doc/ug] Update cmds in Verilator user guide

Fix some typos in sample commands.



======Commit: 0584991e======
======Short Message======
[hw/formal] Fix rtl_diff_all for rv_plic
======Full Message======
[hw/formal] Fix rtl_diff_all for rv_plic

Now using rv_plic.sv from top_earlgrey directory.



======Commit: 0985b4ca======
======Short Message======
Disable uart monitors for top level tests
======Full Message======
Disable uart monitors for top level tests

If uart monitors required for a specific test, it should be separately
enabled.  Otherwise tests terminate with a "stop bit" not found error



======Commit: 5d862e12======
======Short Message======
[rv_timer/dv] Added generic task for intr test
======Full Message======
[rv_timer/dv] Added generic task for intr test

1. cip_base_vseq: Added task to check intr test register functionality
2. rv_timer_scoreboard: Enhancement for intr test register
3. rv_timer_env_pkg: Fixed glint errors
4. *_csr_vseq.sv: Renamed to *_common_vseq.sv
5. Makefile, *.tpl, *_vseq_list: Added intr test and renamed
IP_csr_vseq to IP_commong_vseq
6. rv_timer_vseq_list: Removed intr seq
7. uart_intr_testmode_vseq, uart_vseq_list: Removed intr seq
8. *_base_vseq: Removed body from IP base seq



======Commit: 33638182======
======Short Message======
[spi_device/dv] Fix extra cycle driving when CPHA=1
======Full Message======
[spi_device/dv] Fix extra cycle driving when CPHA=1

1. Remove exact cycle in spi_host_driver
2. Add checking for x/z data in monitor



======Commit: 49f80bc5======
======Short Message======
[dv] fix compile warnings
======Full Message======
[dv] fix compile warnings

- fixed STRINGIFY macro re-definition warning
- fixed cip_base_env warning



======Commit: 18e8694e======
======Short Message======
Minor fixes to stubcpu logic
======Full Message======
Minor fixes to stubcpu logic

Sri helped track down some minor errors that caused cpu tests to terminate too
early



======Commit: 1e643558======
======Short Message======
[util] Catch more problems with commit lint
======Full Message======
[util] Catch more problems with commit lint

This improves the commit lint script to catch a couple more problems:

* The commit message is now checked:
  * We require an empty second line, separating the summary (first line)
    from the optional long description (lines 3-). (In fact, git
    shortlog assumes that everything before the first empty line is the
    summary, leading to a summary line containing the whole commit
    message if there's no empty line in between.)
  * The summary line should not be overly long. The often-recommended
    limit is 50 characters, but there is no hard rule. This commit enforces
    a 100 character limit on the first line, which should be lenient
    enough.
* There's now a warning if the author name does not contain a space.
  That typically indicates that the user didn't set his real name but a
  GitHub username as name. It's not an error because there's no
  universal rule that names must consist of multiple words.

In addition to these functional changes, the implementation switched to
use GitPython, avoiding manually calling git and parsing its output.

Note: Merge commits are not checked in our CI setup. When Azure
Pipelines runs, it tests the PR merge into origin/master. The merge
commit is added by GitHub with author information as set in the GitHub
UI: the full name (if set) or the GitHub username, and the public email
address. This commit will not appear in our repository when doing
"rebase merges". Checking merge commits would check something other than
the commits as we ultimately see them in our repo, raising false alarm.



======Commit: da45061a======
======Short Message======
Remove meson from Python requirements
======Full Message======
Remove meson from Python requirements

We don't use meson yet, and installing meson fails on Python 3.5 (which
is used in Ubuntu 16.04) with the following error:

Collecting meson (from -r python-requirements.txt (line 6))
  Downloading https://files.pythonhosted.org/packages/4a/66/5f1bfeda5aed501bbd9869f511fc9946554398787a24159d7ad1cff2e047/meson-0.51.2.tar.gz (1.5MB)
    Complete output from command python setup.py egg_info:
    Traceback (most recent call last):
      File "<string>", line 1, in <module>
      File "/tmp/pip-build-mh7b7k_7/meson/setup.py", line 24, in <module>
        from mesonbuild.coredata import version
      File "/tmp/pip-build-mh7b7k_7/meson/mesonbuild/coredata.py", line 21, in <module>
        from .mesonlib import (
      File "/tmp/pip-build-mh7b7k_7/meson/mesonbuild/mesonlib.py", line 393, in <module>
        class PerMachineDefaultable(PerMachine[typing.Optional[_T]]):
      File "/usr/lib/python3.5/typing.py", line 916, in __new__
        "non-type-variable %s" % bp)
    TypeError: Cannot inherit from a generic class parameterized with non-type-variable typing.Union[~_T, NoneType]



======Commit: 53ef2ec4======
======Short Message======
Update lowrisc_ibex to lowRISC/ibex@d14312c
======Full Message======
Update lowrisc_ibex to lowRISC/ibex@d14312c

Ibex top-level interface has changed, single hart_id replaces
cluster_id/core_id.

Update code from upstream repository
https://github.com/lowRISC/ibex.git to revision
d14312c3cc47a7d4b34943e4febb96312353b2cc

* Replace cluster_id/core_id with hart_id (lowRISC/ibex#29) (Greg
  Chadwick)
* CSR: Access checks on Debug CSRs (Rahul Behl)
* [RTL] - Add PMP module (Tom Roberts)
* Register file: update comments (Pirmin Vogel)
* Controller: change behavior of DRET instruction (Pirmin Vogel)
* Update interrupt mode, add debug mode WFI test (lowRISC/ibex#268)
  (udinator)
* Lint: Update Verilator waiver file (Philipp Wagner)
* Update google_riscv-dv to 102791d (lowRISC/ibex#266) (taoliug)
* Mention CREDITS.md in license header (Philipp Wagner)
* Replace author credits in files with CREDITS.md (Philipp Wagner)
* Add link to CREDITS.md from README.md (Philipp Wagner)
* Add CREDITS.md file (Philipp Wagner)
* Integrate risc-v stream generator handshake into Ibex sim flow
  (lowRISC/ibex#264) (udinator)
* Update google_riscv-dv to google/riscv-dv@faddfa4 (lowRISC/ibex#263)
  (udinator)
* Correct a typo in doc/verification.rst (Felix Yan)
* Update documentation how to run riscv-compliance (Philipp Wagner)
* CI: Run the compliance tests for all ISA variants (Philipp Wagner)
* Update google_riscv-dv to e81acc9 (lowRISC/ibex#257) (taoliug)
* Make mtvec writable, remove previous workaround (lowRISC/ibex#256)
  (taoliug)
* Test cleanup (lowRISC/ibex#255) (taoliug)
* Update google_riscv-dv to 73274f2 (lowRISC/ibex#254) (taoliug)
* Consolidate some debug generation options, and make the
  signature_addr handshake optional (lowRISC/ibex#253) (udinator)
* Add more debug tests (lowRISC/ibex#251) (udinator)
* src_files.yml: Add ibex_core_tracing.sv (Pirmin Vogel)
* ram_1p.sv: Fix rvalid_o generation (Pirmin Vogel)
* Remove unused signal data_reg_offset (Ivan Ribeiro)
* Add Azure Pipelines build badge to README.md (Philipp Wagner)
* CI: Use Azure Pipelines to run lint and some DV (Philipp Wagner)
* Update google_riscv-dv to google/riscv-dv@7cce16c (lowRISC/ibex#246)
  (udinator)
* ID stage: rework CSR-related pipeline flushes (Pirmin Vogel)
* Adapt Verilator lint waiver (Pirmin Vogel)
* Add basic debug test and modify sim flow (lowRISC/ibex#243)
  (udinator)
* [DV] Enable aligned load/store test (lowRISC/ibex#242) (taoliug)
* Update google_riscv-dv to 63fa0ca (lowRISC/ibex#241) (taoliug)
* Update google_riscv-dv to google/riscv-dv@07599f6 (lowRISC/ibex#240)
  (udinator)
* Fix the verbose logging issue, fix coverage/waveform options
  (lowRISC/ibex#235) (taoliug)
* Update google_riscv-dv to google/riscv-dv@e905e9f (lowRISC/ibex#234)
  (udinator)
* update ibex testbench (lowRISC/ibex#232) (udinator)
* update ibex simulation flow (lowRISC/ibex#233) (udinator)
* [rtl] Add support for instruction fetch errors (Tom Roberts)



======Commit: 9614a839======
======Short Message======
[doc] Fetch upstream after adding it
======Full Message======
[doc] Fetch upstream after adding it

We use the upstream remote later, e.g. in `git checkout -b new_branch
upstream/master`. For that to work, we need to fetch it first at least
once, otherwise the error message is rather confusing for newcomers to
git: "upstream/master is not a commit".



======Commit: c77af86f======
======Short Message======
[doc] Remove command to disable push
======Full Message======
[doc] Remove command to disable push

When using the [hub](https://github.com/github/hub) command line tool it
is not possible to set non-URLs as remote:

```
$ git remote set-url --push upstream disabled
Error: repository disabled/opentitan doesn't exist
```

Removing this instruction from the user guide to prevent confusion for
users who have this tool installed.



