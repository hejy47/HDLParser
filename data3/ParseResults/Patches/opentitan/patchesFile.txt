CommitId: 4f735bc6e72691152b3a87dd7d29bb394be5c785
Update lowrisc_ibex to lowRISC/ibex@dd39ec0
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_alu.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_alu.sv
@@ -188,16 +279,18 @@ module ibex_alu #(
   // * fsl: without word-swap bit: first cycle, else: second cycle
   // * fsr: without word-swap bit: second cycle, else: first cycle
   // * a single-bit instruction: sbclr, sbset, sbinv (excluding sbext)
+  // * bfp: bfp_mask << bfp_off
   always_comb begin
     unique case (operator_i)
       ALU_SLL: shift_left = 1'b1;
-      ALU_SLO: shift_left = RV32B ? 1'b1 : 1'b0;
+      ALU_SLO,
+      ALU_BFP: shift_left = RV32B ? 1'b1 : 1'b0;
       ALU_ROL: shift_left = RV32B ? instr_first_cycle_i : 0;
-      ALU_ROR: shift_left = RV32B ? !instr_first_cycle_i : 0;
+      ALU_ROR: shift_left = RV32B ? ~instr_first_cycle_i : 0;
       ALU_FSL: shift_left =
-          RV32B ? (shift_amt[5] ? !instr_first_cycle_i : instr_first_cycle_i) : 1'b0;
+          RV32B ? (shift_amt[5] ? ~instr_first_cycle_i : instr_first_cycle_i) : 1'b0;
       ALU_FSR: shift_left =
-          RV32B ? (shift_amt[5] ? instr_first_cycle_i : !instr_first_cycle_i) : 1'b0;
+          RV32B ? (shift_amt[5] ? instr_first_cycle_i : ~instr_first_cycle_i) : 1'b0;
       default: shift_left = 1'b0;
     endcase
     if (shift_sbmode) begin

ParseResult:
UPD HdlStmCase@@operator_i to operator_i
    UPD HdlOp@@ASSIGN to ASSIGN
        UPD HdlOp@@TERNARY to TERNARY
            UPD HdlOp@@NEG_LOG to NEG
    UPD HdlOp@@ASSIGN to ASSIGN
        UPD HdlOp@@TERNARY to TERNARY
            UPD HdlOp@@TERNARY to TERNARY
                UPD HdlOp@@NEG_LOG to NEG
    UPD HdlOp@@ASSIGN to ASSIGN
        UPD HdlOp@@TERNARY to TERNARY
            UPD HdlOp@@TERNARY to TERNARY
                UPD HdlOp@@NEG_LOG to NEG


CommitId: 4f735bc6e72691152b3a87dd7d29bb394be5c785
Update lowrisc_ibex to lowRISC/ibex@dd39ec0
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_alu.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_alu.sv
@@ -365,7 +351,7 @@ module ibex_alu #(
       ALU_XNOR,
       ALU_ORN,
       ALU_ANDN: bwlogic_op_b_negate = RV32B ? 1'b1 : 1'b0;
-      ALU_CMIX: bwlogic_op_b_negate = RV32B ? !instr_first_cycle_i : 1'b0;
+      ALU_CMIX: bwlogic_op_b_negate = RV32B ? ~instr_first_cycle_i : 1'b0;
       default:  bwlogic_op_b_negate = 1'b0;
     endcase
   end

ParseResult:
UPD HdlStmIf@@ to 
    INS HdlValueId@@RV32B to 
    INS HdlStmBlock@@SEQ to 
    INS list@@elifs to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmCase@@operator_i to operator_i
    UPD HdlOp@@ASSIGN to ASSIGN
        UPD HdlOp@@TERNARY to TERNARY
            UPD HdlOp@@NEG_LOG to NEG


CommitId: 4f735bc6e72691152b3a87dd7d29bb394be5c785
Update lowrisc_ibex to lowRISC/ibex@dd39ec0
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_alu.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_alu.sv
@@ -376,8 +362,8 @@ module ibex_alu #(
   assign bwlogic_and_result = operand_a_i & bwlogic_operand_b;
   assign bwlogic_xor_result = operand_a_i ^ bwlogic_operand_b;
 
-  assign bwlogic_or  = (operator_i == ALU_OR) || (operator_i == ALU_ORN);
-  assign bwlogic_and = (operator_i == ALU_AND) || (operator_i == ALU_ANDN);
+  assign bwlogic_or  = (operator_i == ALU_OR)  | (operator_i == ALU_ORN);
+  assign bwlogic_and = (operator_i == ALU_AND) | (operator_i == ALU_ANDN);
 
   always_comb begin
     unique case (1'b1)

ParseResult:
UPD HdlStmAssign@@ to 
    UPD HdlOp@@OR_LOG to OR

UPD HdlStmAssign@@ to 
    UPD HdlOp@@OR_LOG to OR

UPD HdlStmIf@@ to 
    INS HdlValueId@@RV32B to 
    INS HdlStmBlock@@SEQ to 
    INS list@@elifs to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ


CommitId: 4f735bc6e72691152b3a87dd7d29bb394be5c785
Update lowrisc_ibex to lowRISC/ibex@dd39ec0
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_alu.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_alu.sv
@@ -429,8 +742,8 @@ module ibex_alu #(
 
       if (shuffle_flip) begin
         shuffle_result = (shuffle_result & 32'h8822_4411) |
-            ((shuffle_result << 6) &  FLIP_MASK_L[0])  | ((shuffle_result >> 6) & FLIP_MASK_R[0]) |
-            ((shuffle_result << 9) &  FLIP_MASK_L[1])  | ((shuffle_result >> 9) & FLIP_MASK_R[1]) |
+            ((shuffle_result << 6)  & FLIP_MASK_L[0]) | ((shuffle_result >> 6)  & FLIP_MASK_R[0]) |
+            ((shuffle_result << 9)  & FLIP_MASK_L[1]) | ((shuffle_result >> 9)  & FLIP_MASK_R[1]) |
             ((shuffle_result << 15) & FLIP_MASK_L[2]) | ((shuffle_result >> 15) & FLIP_MASK_R[2]) |
             ((shuffle_result << 21) & FLIP_MASK_L[3]) | ((shuffle_result >> 21) & FLIP_MASK_R[3]);
       end

ParseResult:
INS HdlStmIf@@ to objs

UPD HdlStmIf@@ to 
    INS HdlValueId@@RV32B to 
    INS HdlStmBlock@@SEQ to 
    INS list@@elifs to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmIf@@ to 
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: minmax_result
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: bitcnt_result
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: pack_result
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: multicycle_result
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: singlebit_result
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: shuffle_result
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: imd_val_d_o
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: imd_val_we_o
    DEL HdlValueId@@RV32B from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL list@@elifs from 

MOV HdlStmProcess@@ to body
HdlStmProcess
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: shuffle_result
                    HdlValueId: operand_a_i
            HdlStmIf
                HdlValueId: shuffle_flip
                HdlStmBlock: SEQ
                    list: body
                        HdlOp: ASSIGN
                            list: ops
                                HdlOp: INDEX
                                    list: ops
                                        HdlValueId: shuffle_mode
                                        HdlValueInt: 3
                                HdlOp: INDEX
                                    list: ops
                                        HdlValueId: shift_amt
                                        HdlValueInt: 0
                        HdlOp: ASSIGN
                            list: ops
                                HdlOp: INDEX
                                    list: ops
                                        HdlValueId: shuffle_mode
                                        HdlValueInt: 2
                                HdlOp: INDEX
                                    list: ops
                                        HdlValueId: shift_amt
                                        HdlValueInt: 1
                        HdlOp: ASSIGN
                            list: ops
                                HdlOp: INDEX
                                    list: ops
                                        HdlValueId: shuffle_mode
                                        HdlValueInt: 1
                                HdlOp: INDEX
                                    list: ops
                                        HdlValueId: shift_amt
                                        HdlValueInt: 2
                        HdlOp: ASSIGN
                            list: ops
                                HdlOp: INDEX
                                    list: ops
                                        HdlValueId: shuffle_mode
                                        HdlValueInt: 0
                                HdlOp: INDEX
                                    list: ops
                                        HdlValueId: shift_amt
                                        HdlValueInt: 3
                list: elifs
                HdlStmBlock: SEQ
                    list: body
                        HdlOp: ASSIGN
                            list: ops
                                HdlValueId: shuffle_mode
                                HdlOp: INDEX
                                    list: ops
                                        HdlValueId: shift_amt
                                        HdlOp: DOWNTO
                                            list: ops
                                                HdlValueInt: 3
                                                HdlValueInt: 0
            HdlStmIf
                HdlValueId: shuffle_flip
                HdlStmBlock: SEQ
                    list: body
                        HdlOp: ASSIGN
                            list: ops
                                HdlValueId: shuffle_result
                                HdlOp: OR
                                    list: ops
                                        HdlOp: OR
                                            list: ops
                                                HdlOp: OR
                                                    list: ops
                                                        HdlOp: OR
                                                            list: ops
                                                                HdlOp: OR
                                                                    list: ops
                                                                        HdlOp: OR
                                                                            list: ops
                                                                                HdlOp: OR
                                                                                    list: ops
                                                                                        HdlOp: OR
                                                                                            list: ops
                                                                                                HdlOp: AND
                                                                                                    list: ops
                                                                                                        HdlValueId: shuffle_result
                                                                                                        HdlValueInt: 88224411
                                                                                                HdlOp: AND
                                                                                                    list: ops
                                                                                                        HdlOp: SLL
                                                                                                            list: ops
                                                                                                                HdlValueId: shuffle_result
                                                                                                                HdlValueInt: 6
                                                                                                        HdlOp: INDEX
                                                                                                            list: ops
                                                                                                                HdlValueId: FLIP_MASK_L
                                                                                                                HdlValueInt: 0
                                                                                        HdlOp: AND
                                                                                            list: ops
                                                                                                HdlOp: SRL
                                                                                                    list: ops
                                                                                                        HdlValueId: shuffle_result
                                                                                                        HdlValueInt: 6
                                                                                                HdlOp: INDEX
                                                                                                    list: ops
                                                                                                        HdlValueId: FLIP_MASK_R
                                                                                                        HdlValueInt: 0
                                                                                HdlOp: AND
                                                                                    list: ops
                                                                                        HdlOp: SLL
                                                                                            list: ops
                                                                                                HdlValueId: shuffle_result
                                                                                                HdlValueInt: 9
                                                                                        HdlOp: INDEX
                                                                                            list: ops
                                                                                                HdlValueId: FLIP_MASK_L
                                                                                                HdlValueInt: 1
                                                                        HdlOp: AND
                                                                            list: ops
                                                                                HdlOp: SRL
                                                                                    list: ops
                                                                                        HdlValueId: shuffle_result
                                                                                        HdlValueInt: 9
                                                                                HdlOp: INDEX
                                                                                    list: ops
                                                                                        HdlValueId: FLIP_MASK_R
                                                                                        HdlValueInt: 1
                                                                HdlOp: AND
                                                                    list: ops
                                                                        HdlOp: SLL
                                                                            list: ops
                                                                                HdlValueId: shuffle_result
                                                                                HdlValueInt: 15
                                                                        HdlOp: INDEX
                                                                            list: ops
                                                                                HdlValueId: FLIP_MASK_L
                                                                                HdlValueInt: 2
                                                        HdlOp: AND
                                                            list: ops
                                                                HdlOp: SRL
                                                                    list: ops
                                                                        HdlValueId: shuffle_result
                                                                        HdlValueInt: 15
                                                                HdlOp: INDEX
                                                                    list: ops
                                                                        HdlValueId: FLIP_MASK_R
                                                                        HdlValueInt: 2
                                                HdlOp: AND
                                                    list: ops
                                                        HdlOp: SLL
                                                            list: ops
                                                                HdlValueId: shuffle_result
                                                                HdlValueInt: 21
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlValueId: FLIP_MASK_L
                                                                HdlValueInt: 3
                                        HdlOp: AND
                                            list: ops
                                                HdlOp: SRL
                                                    list: ops
                                                        HdlValueId: shuffle_result
                                                        HdlValueInt: 21
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: FLIP_MASK_R
                                                        HdlValueInt: 3
                list: elifs
            HdlStmIf
                HdlOp: INDEX
                    list: ops
                        HdlValueId: shuffle_mode
                        HdlValueInt: 3
                HdlStmBlock: SEQ
                    list: body
                        HdlOp: ASSIGN
                            list: ops
                                HdlValueId: shuffle_result
                                HdlOp: OR
                                    list: ops
                                        HdlOp: AND
                                            list: ops
                                                HdlValueId: shuffle_result
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: SHUFFLE_MASK_NOT
                                                        HdlValueInt: 0
                                        HdlOp: OR
                                            list: ops
                                                HdlOp: AND
                                                    list: ops
                                                        HdlOp: SLL
                                                            list: ops
                                                                HdlValueId: shuffle_result
                                                                HdlValueInt: 8
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlValueId: SHUFFLE_MASK_L
                                                                HdlValueInt: 0
                                                HdlOp: AND
                                                    list: ops
                                                        HdlOp: SRL
                                                            list: ops
                                                                HdlValueId: shuffle_result
                                                                HdlValueInt: 8
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlValueId: SHUFFLE_MASK_R
                                                                HdlValueInt: 0
                list: elifs
            HdlStmIf
                HdlOp: INDEX
                    list: ops
                        HdlValueId: shuffle_mode
                        HdlValueInt: 2
                HdlStmBlock: SEQ
                    list: body
                        HdlOp: ASSIGN
                            list: ops
                                HdlValueId: shuffle_result
                                HdlOp: OR
                                    list: ops
                                        HdlOp: AND
                                            list: ops
                                                HdlValueId: shuffle_result
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: SHUFFLE_MASK_NOT
                                                        HdlValueInt: 1
                                        HdlOp: OR
                                            list: ops
                                                HdlOp: AND
                                                    list: ops
                                                        HdlOp: SLL
                                                            list: ops
                                                                HdlValueId: shuffle_result
                                                                HdlValueInt: 4
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlValueId: SHUFFLE_MASK_L
                                                                HdlValueInt: 1
                                                HdlOp: AND
                                                    list: ops
                                                        HdlOp: SRL
                                                            list: ops
                                                                HdlValueId: shuffle_result
                                                                HdlValueInt: 4
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlValueId: SHUFFLE_MASK_R
                                                                HdlValueInt: 1
                list: elifs
            HdlStmIf
                HdlOp: INDEX
                    list: ops
                        HdlValueId: shuffle_mode
                        HdlValueInt: 1
                HdlStmBlock: SEQ
                    list: body
                        HdlOp: ASSIGN
                            list: ops
                                HdlValueId: shuffle_result
                                HdlOp: OR
                                    list: ops
                                        HdlOp: AND
                                            list: ops
                                                HdlValueId: shuffle_result
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: SHUFFLE_MASK_NOT
                                                        HdlValueInt: 2
                                        HdlOp: OR
                                            list: ops
                                                HdlOp: AND
                                                    list: ops
                                                        HdlOp: SLL
                                                            list: ops
                                                                HdlValueId: shuffle_result
                                                                HdlValueInt: 2
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlValueId: SHUFFLE_MASK_L
                                                                HdlValueInt: 2
                                                HdlOp: AND
                                                    list: ops
                                                        HdlOp: SRL
                                                            list: ops
                                                                HdlValueId: shuffle_result
                                                                HdlValueInt: 2
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlValueId: SHUFFLE_MASK_R
                                                                HdlValueInt: 2
                list: elifs
            HdlStmIf
                HdlOp: INDEX
                    list: ops
                        HdlValueId: shuffle_mode
                        HdlValueInt: 0
                HdlStmBlock: SEQ
                    list: body
                        HdlOp: ASSIGN
                            list: ops
                                HdlValueId: shuffle_result
                                HdlOp: OR
                                    list: ops
                                        HdlOp: AND
                                            list: ops
                                                HdlValueId: shuffle_result
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: SHUFFLE_MASK_NOT
                                                        HdlValueInt: 3
                                        HdlOp: OR
                                            list: ops
                                                HdlOp: AND
                                                    list: ops
                                                        HdlOp: SLL
                                                            list: ops
                                                                HdlValueId: shuffle_result
                                                                HdlValueInt: 1
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlValueId: SHUFFLE_MASK_L
                                                                HdlValueInt: 3
                                                HdlOp: AND
                                                    list: ops
                                                        HdlOp: SRL
                                                            list: ops
                                                                HdlValueId: shuffle_result
                                                                HdlValueInt: 1
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlValueId: SHUFFLE_MASK_R
                                                                HdlValueInt: 3
                list: elifs
            HdlStmIf
                HdlValueId: shuffle_flip
                HdlStmBlock: SEQ
                    list: body
                        HdlOp: ASSIGN
                            list: ops
                                HdlValueId: shuffle_result
                                HdlOp: OR
                                    list: ops
                                        HdlOp: OR
                                            list: ops
                                                HdlOp: OR
                                                    list: ops
                                                        HdlOp: OR
                                                            list: ops
                                                                HdlOp: OR
                                                                    list: ops
                                                                        HdlOp: OR
                                                                            list: ops
                                                                                HdlOp: OR
                                                                                    list: ops
                                                                                        HdlOp: OR
                                                                                            list: ops
                                                                                                HdlOp: AND
                                                                                                    list: ops
                                                                                                        HdlValueId: shuffle_result
                                                                                                        HdlValueInt: 88224411
                                                                                                HdlOp: AND
                                                                                                    list: ops
                                                                                                        HdlOp: SLL
                                                                                                            list: ops
                                                                                                                HdlValueId: shuffle_result
                                                                                                                HdlValueInt: 6
                                                                                                        HdlOp: INDEX
                                                                                                            list: ops
                                                                                                                HdlValueId: FLIP_MASK_L
                                                                                                                HdlValueInt: 0
                                                                                        HdlOp: AND
                                                                                            list: ops
                                                                                                HdlOp: SRL
                                                                                                    list: ops
                                                                                                        HdlValueId: shuffle_result
                                                                                                        HdlValueInt: 6
                                                                                                HdlOp: INDEX
                                                                                                    list: ops
                                                                                                        HdlValueId: FLIP_MASK_R
                                                                                                        HdlValueInt: 0
                                                                                HdlOp: AND
                                                                                    list: ops
                                                                                        HdlOp: SLL
                                                                                            list: ops
                                                                                                HdlValueId: shuffle_result
                                                                                                HdlValueInt: 9
                                                                                        HdlOp: INDEX
                                                                                            list: ops
                                                                                                HdlValueId: FLIP_MASK_L
                                                                                                HdlValueInt: 1
                                                                        HdlOp: AND
                                                                            list: ops
                                                                                HdlOp: SRL
                                                                                    list: ops
                                                                                        HdlValueId: shuffle_result
                                                                                        HdlValueInt: 9
                                                                                HdlOp: INDEX
                                                                                    list: ops
                                                                                        HdlValueId: FLIP_MASK_R
                                                                                        HdlValueInt: 1
                                                                HdlOp: AND
                                                                    list: ops
                                                                        HdlOp: SLL
                                                                            list: ops
                                                                                HdlValueId: shuffle_result
                                                                                HdlValueInt: 15
                                                                        HdlOp: INDEX
                                                                            list: ops
                                                                                HdlValueId: FLIP_MASK_L
                                                                                HdlValueInt: 2
                                                        HdlOp: AND
                                                            list: ops
                                                                HdlOp: SRL
                                                                    list: ops
                                                                        HdlValueId: shuffle_result
                                                                        HdlValueInt: 15
                                                                HdlOp: INDEX
                                                                    list: ops
                                                                        HdlValueId: FLIP_MASK_R
                                                                        HdlValueInt: 2
                                                HdlOp: AND
                                                    list: ops
                                                        HdlOp: SLL
                                                            list: ops
                                                                HdlValueId: shuffle_result
                                                                HdlValueInt: 21
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlValueId: FLIP_MASK_L
                                                                HdlValueInt: 3
                                        HdlOp: AND
                                            list: ops
                                                HdlOp: SRL
                                                    list: ops
                                                        HdlValueId: shuffle_result
                                                        HdlValueInt: 21
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: FLIP_MASK_R
                                                        HdlValueInt: 3
                list: elifs
    HdlStmProcessTriggerConstrain: COMB

DEL HdlStmIf@@ from objs


CommitId: 4f735bc6e72691152b3a87dd7d29bb394be5c785
Update lowrisc_ibex to lowRISC/ibex@dd39ec0
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_alu.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_alu.sv
@@ -509,6 +990,23 @@ module ibex_alu #(
             imd_val_we_o = 1'b0;
           end
         end
+
+        ALU_CRC32_W, ALU_CRC32C_W,
+        ALU_CRC32_H, ALU_CRC32C_H,
+        ALU_CRC32_B, ALU_CRC32C_B: begin
+          imd_val_d_o = clmul_result_rev;
+          unique case(1'b1)
+            crc_bmode: multicycle_result = clmul_result_rev ^ (operand_a_i >> 8);
+            crc_hmode: multicycle_result = clmul_result_rev ^ (operand_a_i >> 16);
+            default:   multicycle_result = clmul_result_rev;
+          endcase
+          if (instr_first_cycle_i) begin
+            imd_val_we_o = 1'b1;
+          end else begin
+            imd_val_we_o = 1'b0;
+          end
+        end
+
         default: begin
           imd_val_d_o = operand_a_i;
           imd_val_we_o = 1'b0;

ParseResult:
INS HdlStmIf@@ to objs

UPD HdlStmIf@@ to 
    INS HdlValueId@@RV32B to 
    INS HdlStmBlock@@SEQ to 
    INS list@@elifs to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmIf@@ to 
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: minmax_result
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: bitcnt_result
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: pack_result
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: multicycle_result
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: singlebit_result
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: shuffle_result
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: imd_val_d_o
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: imd_val_we_o
    DEL HdlValueId@@RV32B from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL list@@elifs from 

MOV HdlStmProcess@@ to body
HdlStmProcess
    HdlStmBlock: SEQ
        list: body
            HdlStmCase: operator_i
                HdlStmCaseType: CASE
                HdlValueId: operator_i
                list: cases
                    tuple
                        HdlValueId: ALU_CMOV
                        HdlStmBlock: SEQ
                            list: body
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: imd_val_d_o
                                        HdlValueId: operand_a_i
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: multicycle_result
                                        HdlOp: TERNARY
                                            list: ops
                                                HdlOp: EQ
                                                    list: ops
                                                        HdlValueId: operand_b_i
                                                        HdlValueInt: 0
                                                HdlValueId: operand_a_i
                                                HdlValueId: imd_val_q_i
                                HdlStmIf
                                    HdlValueId: instr_first_cycle_i
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlOp: ASSIGN
                                                list: ops
                                                    HdlValueId: imd_val_we_o
                                                    HdlValueInt: 1
                                    list: elifs
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlOp: ASSIGN
                                                list: ops
                                                    HdlValueId: imd_val_we_o
                                                    HdlValueInt: 0
                    tuple
                        HdlValueId: ALU_CMIX
                        HdlStmBlock: SEQ
                            list: body
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: multicycle_result
                                        HdlOp: OR
                                            list: ops
                                                HdlValueId: imd_val_q_i
                                                HdlValueId: bwlogic_and_result
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: imd_val_d_o
                                        HdlValueId: bwlogic_and_result
                                HdlStmIf
                                    HdlValueId: instr_first_cycle_i
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlOp: ASSIGN
                                                list: ops
                                                    HdlValueId: imd_val_we_o
                                                    HdlValueInt: 1
                                    list: elifs
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlOp: ASSIGN
                                                list: ops
                                                    HdlValueId: imd_val_we_o
                                                    HdlValueInt: 0
                    tuple
                        HdlValueId: ALU_FSR
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmIf
                                    HdlOp: EQ
                                        list: ops
                                            HdlOp: INDEX
                                                list: ops
                                                    HdlValueId: shift_amt
                                                    HdlOp: DOWNTO
                                                        list: ops
                                                            HdlValueInt: 4
                                                            HdlValueInt: 0
                                            HdlValueInt: 0
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlOp: ASSIGN
                                                list: ops
                                                    HdlValueId: multicycle_result
                                                    HdlOp: TERNARY
                                                        list: ops
                                                            HdlOp: INDEX
                                                                list: ops
                                                                    HdlValueId: shift_amt
                                                                    HdlValueInt: 5
                                                            HdlValueId: operand_a_i
                                                            HdlValueId: imd_val_q_i
                                    list: elifs
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlOp: ASSIGN
                                                list: ops
                                                    HdlValueId: multicycle_result
                                                    HdlOp: OR
                                                        list: ops
                                                            HdlValueId: imd_val_q_i
                                                            HdlValueId: shift_result
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: imd_val_d_o
                                        HdlValueId: shift_result
                                HdlStmIf
                                    HdlValueId: instr_first_cycle_i
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlOp: ASSIGN
                                                list: ops
                                                    HdlValueId: imd_val_we_o
                                                    HdlValueInt: 1
                                    list: elifs
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlOp: ASSIGN
                                                list: ops
                                                    HdlValueId: imd_val_we_o
                                                    HdlValueInt: 0
                    tuple
                        HdlValueId: ALU_FSL
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmIf
                                    HdlOp: EQ
                                        list: ops
                                            HdlOp: INDEX
                                                list: ops
                                                    HdlValueId: shift_amt
                                                    HdlOp: DOWNTO
                                                        list: ops
                                                            HdlValueInt: 4
                                                            HdlValueInt: 0
                                            HdlValueInt: 0
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlOp: ASSIGN
                                                list: ops
                                                    HdlValueId: multicycle_result
                                                    HdlOp: TERNARY
                                                        list: ops
                                                            HdlOp: INDEX
                                                                list: ops
                                                                    HdlValueId: shift_amt
                                                                    HdlValueInt: 5
                                                            HdlValueId: operand_a_i
                                                            HdlValueId: imd_val_q_i
                                    list: elifs
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlOp: ASSIGN
                                                list: ops
                                                    HdlValueId: multicycle_result
                                                    HdlOp: OR
                                                        list: ops
                                                            HdlValueId: imd_val_q_i
                                                            HdlValueId: shift_result
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: imd_val_d_o
                                        HdlValueId: shift_result
                                HdlStmIf
                                    HdlValueId: instr_first_cycle_i
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlOp: ASSIGN
                                                list: ops
                                                    HdlValueId: imd_val_we_o
                                                    HdlValueInt: 1
                                    list: elifs
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlOp: ASSIGN
                                                list: ops
                                                    HdlValueId: imd_val_we_o
                                                    HdlValueInt: 0
                    tuple
                        HdlValueId: ALU_ROL
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmIf
                                    HdlOp: EQ
                                        list: ops
                                            HdlOp: INDEX
                                                list: ops
                                                    HdlValueId: shift_amt
                                                    HdlOp: DOWNTO
                                                        list: ops
                                                            HdlValueInt: 4
                                                            HdlValueInt: 0
                                            HdlValueInt: 0
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlOp: ASSIGN
                                                list: ops
                                                    HdlValueId: multicycle_result
                                                    HdlOp: TERNARY
                                                        list: ops
                                                            HdlOp: INDEX
                                                                list: ops
                                                                    HdlValueId: shift_amt
                                                                    HdlValueInt: 5
                                                            HdlValueId: operand_a_i
                                                            HdlValueId: imd_val_q_i
                                    list: elifs
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlOp: ASSIGN
                                                list: ops
                                                    HdlValueId: multicycle_result
                                                    HdlOp: OR
                                                        list: ops
                                                            HdlValueId: imd_val_q_i
                                                            HdlValueId: shift_result
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: imd_val_d_o
                                        HdlValueId: shift_result
                                HdlStmIf
                                    HdlValueId: instr_first_cycle_i
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlOp: ASSIGN
                                                list: ops
                                                    HdlValueId: imd_val_we_o
                                                    HdlValueInt: 1
                                    list: elifs
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlOp: ASSIGN
                                                list: ops
                                                    HdlValueId: imd_val_we_o
                                                    HdlValueInt: 0
                    tuple
                        HdlValueId: ALU_ROR
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmIf
                                    HdlOp: EQ
                                        list: ops
                                            HdlOp: INDEX
                                                list: ops
                                                    HdlValueId: shift_amt
                                                    HdlOp: DOWNTO
                                                        list: ops
                                                            HdlValueInt: 4
                                                            HdlValueInt: 0
                                            HdlValueInt: 0
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlOp: ASSIGN
                                                list: ops
                                                    HdlValueId: multicycle_result
                                                    HdlOp: TERNARY
                                                        list: ops
                                                            HdlOp: INDEX
                                                                list: ops
                                                                    HdlValueId: shift_amt
                                                                    HdlValueInt: 5
                                                            HdlValueId: operand_a_i
                                                            HdlValueId: imd_val_q_i
                                    list: elifs
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlOp: ASSIGN
                                                list: ops
                                                    HdlValueId: multicycle_result
                                                    HdlOp: OR
                                                        list: ops
                                                            HdlValueId: imd_val_q_i
                                                            HdlValueId: shift_result
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: imd_val_d_o
                                        HdlValueId: shift_result
                                HdlStmIf
                                    HdlValueId: instr_first_cycle_i
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlOp: ASSIGN
                                                list: ops
                                                    HdlValueId: imd_val_we_o
                                                    HdlValueInt: 1
                                    list: elifs
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlOp: ASSIGN
                                                list: ops
                                                    HdlValueId: imd_val_we_o
                                                    HdlValueInt: 0
                HdlStmBlock: SEQ
                    list: body
                        HdlOp: ASSIGN
                            list: ops
                                HdlValueId: imd_val_d_o
                                HdlValueId: operand_a_i
                        HdlOp: ASSIGN
                            list: ops
                                HdlValueId: imd_val_we_o
                                HdlValueInt: 0
                        HdlOp: ASSIGN
                            list: ops
                                HdlValueId: multicycle_result
                                HdlValueId: operand_a_i
                HdlStmCaseUniqConstrain: UNIQUE
    HdlStmProcessTriggerConstrain: COMB

UPD HdlStmProcess@@ to 
    INS HdlStmBlock@@SEQ to 
    INS HdlStmProcessTriggerConstrain@@COMB to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: bitcnt_partial
                list
                    HdlOp: MAP_ASSOCIATION
                        list: ops
                            HdlValueId: default
                            HdlValueInt: 0
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlOp: INDEX
                    list: ops
                        HdlValueId: bitcnt_partial
                        HdlValueInt: 31
                HdlOp: ADD
                    list: ops
                        HdlOp: INDEX
                            list: ops
                                HdlValueId: bitcnt_partial
                                HdlValueInt: 15
                        HdlOp: INDEX
                            list: ops
                                HdlValueId: bitcnt_partial
                                HdlValueInt: 31
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlOp: INDEX
                    list: ops
                        HdlValueId: bitcnt_partial
                        HdlValueInt: 23
                HdlOp: ADD
                    list: ops
                        HdlOp: INDEX
                            list: ops
                                HdlValueId: bitcnt_partial
                                HdlValueInt: 15
                        HdlOp: INDEX
                            list: ops
                                HdlValueId: bitcnt_partial
                                HdlValueInt: 23
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlOp: INDEX
                    list: ops
                        HdlValueId: bitcnt_partial
                        HdlValueInt: 0
                HdlOp: CONCAT
                    list: ops
                        HdlValueInt: 0
                        HdlOp: INDEX
                            list: ops
                                HdlValueId: bitcnt_bits
                                HdlValueInt: 0

DEL HdlStmIf@@ from objs


CommitId: 4f735bc6e72691152b3a87dd7d29bb394be5c785
Update lowrisc_ibex to lowRISC/ibex@dd39ec0
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_alu.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_alu.sv
@@ -568,8 +1041,8 @@ module ibex_alu #(
 
     logic packu;
     logic packh;
-    assign packu = (operator_i == ALU_PACKU);
-    assign packh = (operator_i == ALU_PACKH);
+    assign packu = operator_i == ALU_PACKU;
+    assign packh = operator_i == ALU_PACKH;
 
     always_comb begin
       unique case (1'b1)

ParseResult:
INS HdlStmIf@@ to objs

UPD HdlStmIf@@ to 
    INS HdlValueId@@RV32B to 
    INS HdlStmBlock@@SEQ to 
    INS list@@elifs to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmIf@@ to 
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: minmax_result
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: bitcnt_result
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: pack_result
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: multicycle_result
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: singlebit_result
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: shuffle_result
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: imd_val_d_o
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: imd_val_we_o
    DEL HdlValueId@@RV32B from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL list@@elifs from 

MOV HdlIdDef@@packu to body
HdlIdDef: packu
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

MOV HdlIdDef@@packh to body
HdlIdDef: packh
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

MOV HdlStmAssign@@ to body
HdlStmAssign
    HdlOp: EQ
        list: ops
            HdlValueId: operator_i
            HdlValueId: ALU_PACKU
    HdlValueId: packu

MOV HdlStmAssign@@ to body
HdlStmAssign
    HdlOp: EQ
        list: ops
            HdlValueId: operator_i
            HdlValueId: ALU_PACKH
    HdlValueId: packh

MOV HdlStmProcess@@ to body
HdlStmProcess
    HdlStmBlock: SEQ
        list: body
            HdlStmCase: {'__class__': 'HdlValueInt', 'base': 2, 'bits': 1, 'val': '1'} 
                HdlStmCaseType: CASE
                HdlValueInt: 1
                list: cases
                    tuple
                        HdlValueId: packu
                        HdlOp: ASSIGN
                            list: ops
                                HdlValueId: pack_result
                                HdlOp: CONCAT
                                    list: ops
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: operand_b_i
                                                HdlOp: DOWNTO
                                                    list: ops
                                                        HdlValueInt: 31
                                                        HdlValueInt: 16
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: operand_a_i
                                                HdlOp: DOWNTO
                                                    list: ops
                                                        HdlValueInt: 31
                                                        HdlValueInt: 16
                    tuple
                        HdlValueId: packh
                        HdlOp: ASSIGN
                            list: ops
                                HdlValueId: pack_result
                                HdlOp: CONCAT
                                    list: ops
                                        HdlOp: CONCAT
                                            list: ops
                                                HdlValueInt: 0
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: operand_b_i
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 7
                                                                HdlValueInt: 0
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: operand_a_i
                                                HdlOp: DOWNTO
                                                    list: ops
                                                        HdlValueInt: 7
                                                        HdlValueInt: 0
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: pack_result
                        HdlOp: CONCAT
                            list: ops
                                HdlOp: INDEX
                                    list: ops
                                        HdlValueId: operand_b_i
                                        HdlOp: DOWNTO
                                            list: ops
                                                HdlValueInt: 15
                                                HdlValueInt: 0
                                HdlOp: INDEX
                                    list: ops
                                        HdlValueId: operand_a_i
                                        HdlOp: DOWNTO
                                            list: ops
                                                HdlValueInt: 15
                                                HdlValueInt: 0
                HdlStmCaseUniqConstrain: UNIQUE
    HdlStmProcessTriggerConstrain: COMB

DEL HdlStmIf@@ from objs


CommitId: 4f735bc6e72691152b3a87dd7d29bb394be5c785
Update lowrisc_ibex to lowRISC/ibex@dd39ec0
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_alu.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_alu.sv
@@ -599,7 +1084,7 @@ module ibex_alu #(
     result_o   = '0;
 
     unique case (operator_i)
-      // Bitwise Logic Operations (negate: RV32B Ops)
+      // Bitwise Logic Operations (negate: RV32B)
       ALU_XOR,  ALU_XNOR,
       ALU_OR,   ALU_ORN,
       ALU_AND,  ALU_ANDN: result_o = bwlogic_result;

ParseResult:
UPD HdlStmIf@@ to 
    INS HdlValueId@@RV32B to 
    INS HdlStmBlock@@SEQ to 
    INS list@@elifs to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmCase@@operator_i to operator_i
    DEL tuple@@ from cases
    tuple
        HdlValueId: ALU_GREV
        HdlOp: ASSIGN
            list: ops
                HdlValueId: result_o
                HdlValueId: shift_result
    DEL tuple@@ from cases
    tuple
        HdlValueId: ALU_GORC
        HdlOp: ASSIGN
            list: ops
                HdlValueId: result_o
                HdlValueId: shift_result


CommitId: 4f735bc6e72691152b3a87dd7d29bb394be5c785
Update lowrisc_ibex to lowRISC/ibex@dd39ec0
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_alu.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_alu.sv
@@ -610,11 +1095,10 @@ module ibex_alu #(
       // Shift Operations
       ALU_SLL,  ALU_SRL,
       ALU_SRA,
-      // RV32B Ops
-      ALU_SLO,  ALU_SRO,
-      ALU_GREV, ALU_GORC: result_o = shift_result;
+      // RV32B
+      ALU_SLO,  ALU_SRO: result_o = shift_result;
 
-      // Shuffle Operations (RV32B Ops)
+      // Shuffle Operations (RV32B)
       ALU_SHFL, ALU_UNSHFL: result_o = shuffle_result;
 
       // Comparison Operations

ParseResult:
UPD HdlStmIf@@ to 
    INS HdlValueId@@RV32B to 
    INS HdlStmBlock@@SEQ to 
    INS list@@elifs to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmCase@@operator_i to operator_i
    DEL tuple@@ from cases
    tuple
        HdlValueId: ALU_GREV
        HdlOp: ASSIGN
            list: ops
                HdlValueId: result_o
                HdlValueId: shift_result
    DEL tuple@@ from cases
    tuple
        HdlValueId: ALU_GORC
        HdlOp: ASSIGN
            list: ops
                HdlValueId: result_o
                HdlValueId: shift_result


CommitId: 23e0f3f05410596a3c31c13c2c27505c5971f4ee
[i2c, rtl] Fixes to Lint Errors and Changes to Clock Stretching by Target
--- a/hw/ip/i2c/rtl/i2c_core.sv
+++ b/hw/ip/i2c/rtl/i2c_core.sv
@@ -46,11 +46,12 @@ module  i2c_core (
   logic [15:0] t_buf;
   logic [30:0] stretch_timeout;
   logic        timeout_enable;
-  logic        stretch_en_addr;
-  logic        stretch_en_tx;
-  logic        stretch_en_acq;
-  logic        stretch_stop;
-  logic        stretch_stop_clr;
+  logic        stretch_en_addr_tx;
+  logic        stretch_en_addr_acq;
+  logic        stretch_stop_tx;
+  logic        stretch_stop_acq;
+  logic        stretch_stop_tx_clr;
+  logic        stretch_stop_acq_clr;
   logic [31:0] host_timeout;
 
   logic scl_sync;

ParseResult:
UPD HdlIdDef@@stretch_en_addr to stretch_en_addr_tx

UPD HdlIdDef@@stretch_en_tx to stretch_en_addr_acq

UPD HdlIdDef@@stretch_en_acq to stretch_stop_tx

UPD HdlIdDef@@stretch_stop to stretch_stop_acq

UPD HdlIdDef@@stretch_stop_clr to stretch_stop_tx_clr

INS HdlIdDef@@stretch_stop_acq_clr to objs
HdlIdDef: stretch_stop_acq_clr
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL


CommitId: 23e0f3f05410596a3c31c13c2c27505c5971f4ee
[i2c, rtl] Fixes to Lint Errors and Changes to Clock Stretching by Target
--- a/hw/ip/i2c/rtl/i2c_core.sv
+++ b/hw/ip/i2c/rtl/i2c_core.sv
@@ -83,7 +84,7 @@ module  i2c_core (
   logic        fmt_fifo_wvalid;
   logic        fmt_fifo_wready;
   logic [12:0] fmt_fifo_wdata;
-  logic [5:0]  fmt_fifo_depth;
+  logic [6:0]  fmt_fifo_depth;
   logic        fmt_fifo_rvalid;
   logic        fmt_fifo_rready;
   logic [12:0] fmt_fifo_rdata;

ParseResult:
INS HdlIdDef@@fmt_fifo_depth to objs
HdlIdDef: fmt_fifo_depth
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 6
                    HdlValueInt: 0
    HdlDirection: INTERNAL

DEL HdlIdDef@@fmt_fifo_depth from objs
HdlIdDef: fmt_fifo_depth
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 5
                    HdlValueInt: 0
    HdlDirection: INTERNAL


CommitId: 23e0f3f05410596a3c31c13c2c27505c5971f4ee
[i2c, rtl] Fixes to Lint Errors and Changes to Clock Stretching by Target
--- a/hw/ip/i2c/rtl/i2c_core.sv
+++ b/hw/ip/i2c/rtl/i2c_core.sv
@@ -102,7 +103,7 @@ module  i2c_core (
   logic        rx_fifo_wvalid;
   logic        rx_fifo_wready;
   logic [7:0]  rx_fifo_wdata;
-  logic [5:0]  rx_fifo_depth;
+  logic [6:0]  rx_fifo_depth;
   logic        rx_fifo_rvalid;
   logic        rx_fifo_rready;
   logic [7:0]  rx_fifo_rdata;

ParseResult:
INS HdlIdDef@@rx_fifo_depth to objs
HdlIdDef: rx_fifo_depth
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 6
                    HdlValueInt: 0
    HdlDirection: INTERNAL

DEL HdlIdDef@@rx_fifo_depth from objs
HdlIdDef: rx_fifo_depth
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 5
                    HdlValueInt: 0
    HdlDirection: INTERNAL


CommitId: 23e0f3f05410596a3c31c13c2c27505c5971f4ee
[i2c, rtl] Fixes to Lint Errors and Changes to Clock Stretching by Target
--- a/hw/ip/i2c/rtl/i2c_core.sv
+++ b/hw/ip/i2c/rtl/i2c_core.sv
@@ -115,7 +116,7 @@ module  i2c_core (
   logic        tx_fifo_wvalid;
   logic        tx_fifo_wready;
   logic [7:0]  tx_fifo_wdata;
-  logic [5:0]  tx_fifo_depth;
+  logic [6:0]  tx_fifo_depth;
   logic        tx_fifo_rvalid;
   logic        tx_fifo_rready;
   logic [7:0]  tx_fifo_rdata;

ParseResult:
INS HdlIdDef@@tx_fifo_depth to objs
HdlIdDef: tx_fifo_depth
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 6
                    HdlValueInt: 0
    HdlDirection: INTERNAL

DEL HdlIdDef@@tx_fifo_depth from objs
HdlIdDef: tx_fifo_depth
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 5
                    HdlValueInt: 0
    HdlDirection: INTERNAL


CommitId: 23e0f3f05410596a3c31c13c2c27505c5971f4ee
[i2c, rtl] Fixes to Lint Errors and Changes to Clock Stretching by Target
--- a/hw/ip/i2c/rtl/i2c_core.sv
+++ b/hw/ip/i2c/rtl/i2c_core.sv
@@ -123,7 +124,7 @@ module  i2c_core (
   logic        acq_fifo_wvalid;
   logic        acq_fifo_wready;
   logic [9:0]  acq_fifo_wdata;
-  logic [5:0]  acq_fifo_depth;
+  logic [6:0]  acq_fifo_depth;
   logic        acq_fifo_rvalid;
   logic        acq_fifo_rready;
   logic [9:0]  acq_fifo_rdata;

ParseResult:
INS HdlIdDef@@acq_fifo_depth to objs
HdlIdDef: acq_fifo_depth
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 6
                    HdlValueInt: 0
    HdlDirection: INTERNAL

DEL HdlIdDef@@acq_fifo_depth from objs
HdlIdDef: acq_fifo_depth
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 5
                    HdlValueInt: 0
    HdlDirection: INTERNAL


CommitId: 23e0f3f05410596a3c31c13c2c27505c5971f4ee
[i2c, rtl] Fixes to Lint Errors and Changes to Clock Stretching by Target
--- a/hw/ip/i2c/rtl/i2c_core.sv
+++ b/hw/ip/i2c/rtl/i2c_core.sv
@@ -170,8 +171,10 @@ module  i2c_core (
   assign hw2reg.fifo_status.acqlvl.d = acq_fifo_depth;
   assign hw2reg.acqdata.abyte.d = line_loopback ? 8'hff : acq_fifo_rdata[7:0];
   assign hw2reg.acqdata.signal.d = line_loopback ? 2'b11 : acq_fifo_rdata[9:8];
-  assign hw2reg.stretch_ctrl.stop.d = 1'b0;
-  assign hw2reg.stretch_ctrl.stop.de = stretch_stop_clr;
+  assign hw2reg.stretch_ctrl.stop_tx.d = 1'b0;
+  assign hw2reg.stretch_ctrl.stop_tx.de = stretch_stop_tx_clr;
+  assign hw2reg.stretch_ctrl.stop_acq.d = 1'b0;
+  assign hw2reg.stretch_ctrl.stop_acq.de = stretch_stop_acq_clr;
 
   assign override = reg2hw.ovrd.txovrden;
 

ParseResult:
INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlValueId: stretch_stop_tx_clr
    HdlValueId: hw2reg

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: hw2reg

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlValueId: stretch_stop_acq_clr
    HdlValueId: hw2reg

DEL HdlStmAssign@@ from objs
HdlStmAssign
    HdlValueId: stretch_stop_clr
    HdlValueId: hw2reg


CommitId: 23e0f3f05410596a3c31c13c2c27505c5971f4ee
[i2c, rtl] Fixes to Lint Errors and Changes to Clock Stretching by Target
--- a/hw/ip/i2c/rtl/i2c_core.sv
+++ b/hw/ip/i2c/rtl/i2c_core.sv
@@ -210,12 +213,13 @@ module  i2c_core (
   assign t_buf           = reg2hw.timing4.t_buf.q;
   assign stretch_timeout = reg2hw.timeout_ctrl.val.q;
   assign timeout_enable  = reg2hw.timeout_ctrl.en.q;
-  assign stretch_en_addr = reg2hw.stretch_ctrl.enableaddr.q;
-  assign stretch_en_tx   = reg2hw.stretch_ctrl.enabletx.q;
-  assign stretch_en_acq  = reg2hw.stretch_ctrl.enableacq.q;
-  assign stretch_stop    = reg2hw.stretch_ctrl.stop.q;
   assign host_timeout    = reg2hw.host_timeout_ctrl.q;
 
+  assign stretch_en_addr_tx  = reg2hw.stretch_ctrl.en_addr_tx.q;
+  assign stretch_en_addr_acq = reg2hw.stretch_ctrl.en_addr_acq.q;
+  assign stretch_stop_tx     = reg2hw.stretch_ctrl.stop_tx.q;
+  assign stretch_stop_acq    = reg2hw.stretch_ctrl.stop_acq.q;
+
   assign i2c_fifo_rxrst   = reg2hw.fifo_ctrl.rxrst.q & reg2hw.fifo_ctrl.rxrst.qe;
   assign i2c_fifo_fmtrst  = reg2hw.fifo_ctrl.fmtrst.q & reg2hw.fifo_ctrl.fmtrst.qe;
   assign i2c_fifo_rxilvl  = reg2hw.fifo_ctrl.rxilvl.q;

ParseResult:
MOV HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: DOT
        list: ops
            HdlOp: DOT
                list: ops
                    HdlValueId: reg2hw
                    HdlValueId: host_timeout_ctrl
            HdlValueId: q
    HdlValueId: host_timeout

MOV HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: DOT
        list: ops
            HdlOp: DOT
                list: ops
                    HdlOp: DOT
                        list: ops
                            HdlValueId: reg2hw
                            HdlValueId: stretch_ctrl
                    HdlValueId: enabletx
            HdlValueId: q
    HdlValueId: stretch_en_tx

MOV HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: DOT
        list: ops
            HdlOp: DOT
                list: ops
                    HdlOp: DOT
                        list: ops
                            HdlValueId: reg2hw
                            HdlValueId: stretch_ctrl
                    HdlValueId: enableaddr
            HdlValueId: q
    HdlValueId: stretch_en_addr

UPD HdlStmAssign@@ to 
    UPD HdlValueId@@stretch_en_acq to stretch_en_addr_tx
    UPD HdlOp@@DOT to DOT
        UPD HdlOp@@DOT to DOT
            UPD HdlValueId@@enableacq to en_addr_tx

UPD HdlStmAssign@@ to 
    UPD HdlValueId@@stretch_stop to stretch_en_addr_acq
    UPD HdlOp@@DOT to DOT
        UPD HdlOp@@DOT to DOT
            UPD HdlValueId@@stop to en_addr_acq

UPD HdlStmAssign@@ to 
    UPD HdlValueId@@stretch_en_tx to stretch_stop_tx
    UPD HdlOp@@DOT to DOT
        UPD HdlOp@@DOT to DOT
            UPD HdlValueId@@enabletx to stop_tx

UPD HdlStmAssign@@ to 
    UPD HdlValueId@@stretch_en_addr to stretch_stop_acq
    UPD HdlOp@@DOT to DOT
        UPD HdlOp@@DOT to DOT
            UPD HdlValueId@@enableaddr to stop_acq


CommitId: 20dcb1679fa96d5fe0822eeb466911aea30ed8d5
[fpga] Fix hierarchical signal reference in CW305 top
--- a/hw/top_earlgrey/rtl/top_earlgrey_cw305.sv
+++ b/hw/top_earlgrey/rtl/top_earlgrey_cw305.sv
@@ -299,10 +299,10 @@ module top_earlgrey_cw305 #(
 
   for (genvar i = 0; i < padctrl_reg_pkg::NMioPads; i++) begin : gen_mio_out
     if (i == MioIdxTrigger) begin
-      // To obtain a more precise capture trigger for SCA analysis, we only forward the software-
-      // controlled capture trigger when the AES module is actually busy (performing either
-      // encryption/decryption or clearing internal registers).
-      assign mio_out[i] = mio_out_core[i] & ~top_earlgrey.aes_idle;
+      // To obtain a more precise capture trigger for side-channel analysis, we only forward the
+      // software-controlled capture trigger when the AES module is actually busy (performing
+      // either encryption/decryption or clearing internal registers).
+      assign mio_out[i] = mio_out_core[i] & ~top_earlgrey.clkmgr_idle[clkmgr_pkg::Aes];
     end else begin
       assign mio_out[i] = mio_out_core[i];
     end
ParseResult:
UPD HdlStmAssign@@ to 
    UPD HdlOp@@AND to AND
        UPD HdlOp@@NEG to NEG
            INS list@@ops to NEG
            INS HdlOp@@INDEX to ops
            UPD HdlOp@@INDEX to INDEX
                INS HdlOp@@DOUBLE_COLON to ops
                HdlOp: DOUBLE_COLON
                    list: ops
                        HdlValueId: clkmgr_pkg
                        HdlValueId: Aes

UPD HdlStmAssign@@ to 
    UPD HdlOp@@AND to AND
        UPD HdlOp@@NEG to NEG
            MOV list@@ops to NEG
            list: ops
                HdlOp: DOT
                    list: ops
                        HdlValueId: top_earlgrey
                        HdlValueId: aes_idle
            UPD HdlOp@@DOT to DOT
                UPD HdlValueId@@aes_idle to clkmgr_idle


CommitId: 12a27bc5c21ecccbbac6b376504eee56b3bde0fa
[csrng/rtl] bug fix for uninstantiate cmd with adata
--- a/hw/ip/csrng/rtl/csrng_core.sv
+++ b/hw/ip/csrng/rtl/csrng_core.sv
@@ -905,6 +905,7 @@ module csrng_core import csrng_pkg::*; #(
          ((instant_req && flag0_q) ||
           reseed_req ||
           update_req ||
+          uninstant_req ||
           (generate_req && flag0_q));
 
   //-------------------------------------
ParseResult:
UPD HdlStmAssign@@ to 
    UPD HdlOp@@AND_LOG to AND_LOG
        UPD HdlOp@@OR_LOG to OR_LOG
            INS HdlOp@@OR_LOG to ops
            UPD HdlOp@@OR_LOG to OR_LOG
                INS list@@ops to OR_LOG
                INS HdlValueId@@uninstant_req to ops

UPD HdlStmAssign@@ to 
    UPD HdlOp@@AND_LOG to AND_LOG
        UPD HdlOp@@OR_LOG to OR_LOG
            MOV HdlOp@@OR_LOG to ops
            HdlOp: OR_LOG
                list: ops
                    HdlOp: OR_LOG
                        list: ops
                            HdlOp: AND_LOG
                                list: ops
                                    HdlValueId: instant_req
                                    HdlValueId: flag0_q
                            HdlValueId: reseed_req
                    HdlValueId: update_req


CommitId: 6893dfe6f36b270232141ed7c6991eb49458d725
[csrng/rtl] csrng command tracker added
--- a/hw/ip/csrng/rtl/csrng_core.sv
+++ b/hw/ip/csrng/rtl/csrng_core.sv
@@ -308,6 +308,8 @@ module csrng_core import csrng_pkg::*; #(
   logic                    ctr_drbg_gen_es_ack;
   logic                    block_encrypt_quiet;
 
+  logic [StateId-1:0]      track_inst_id[NApps];
+
   // flops
   logic [2:0]  acmd_q, acmd_d;
   logic [3:0]  shid_q, shid_d;

ParseResult:
INS HdlIdDef@@track_inst_id to objs
HdlIdDef: track_inst_id
    HdlOp: INDEX
        list: ops
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: logic
                    HdlOp: DOWNTO
                        list: ops
                            HdlOp: SUB
                                list: ops
                                    HdlValueId: StateId
                                    HdlValueInt: 1
                            HdlValueInt: 0
            HdlValueId: NApps
    HdlDirection: INTERNAL


CommitId: 53ef2ec43c1c1eb00b771e17fc157f5bb1103ed5
Update lowrisc_ibex to lowRISC/ibex@d14312c
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_prefetch_buffer.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_prefetch_buffer.sv
@@ -34,6 +23,7 @@ module ibex_prefetch_buffer (
     output logic        valid_o,
     output logic [31:0] rdata_o,
     output logic [31:0] addr_o,
+    output logic        err_o,
 
 
     // goes to instruction memory / instruction cache

ParseResult:
INS HdlIdDef@@err_o to ports
HdlIdDef: err_o
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: OUT


CommitId: 53ef2ec43c1c1eb00b771e17fc157f5bb1103ed5
Update lowrisc_ibex to lowRISC/ibex@d14312c
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_prefetch_buffer.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_prefetch_buffer.sv
@@ -41,6 +31,8 @@ module ibex_prefetch_buffer (
     input  logic        instr_gnt_i,
     output logic [31:0] instr_addr_o,
     input  logic [31:0] instr_rdata_i,
+    input  logic        instr_err_i,
+    input  logic        instr_pmp_err_i,
     input  logic        instr_rvalid_i,
 
     // Prefetch Buffer Status

ParseResult:
INS HdlIdDef@@instr_err_i to ports
HdlIdDef: instr_err_i
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: IN

INS HdlIdDef@@instr_pmp_err_i to ports
HdlIdDef: instr_pmp_err_i
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: IN


CommitId: 53ef2ec43c1c1eb00b771e17fc157f5bb1103ed5
Update lowrisc_ibex to lowRISC/ibex@d14312c
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_prefetch_buffer.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_prefetch_buffer.sv
@@ -56,6 +48,8 @@ module ibex_prefetch_buffer (
   logic [31:0] instr_addr_q, fetch_addr;
   logic [31:0] instr_addr, instr_addr_w_aligned;
   logic        addr_valid;
+  logic        pmp_err_q;
+  logic        instr_or_pmp_err;
 
   logic        fifo_valid;
   logic        fifo_ready;

ParseResult:
INS HdlIdDef@@pmp_err_q to objs
HdlIdDef: pmp_err_q
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

INS HdlIdDef@@instr_or_pmp_err to objs
HdlIdDef: instr_or_pmp_err
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL


CommitId: 53ef2ec43c1c1eb00b771e17fc157f5bb1103ed5
Update lowrisc_ibex to lowRISC/ibex@d14312c
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_prefetch_buffer.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_prefetch_buffer.sv
@@ -71,6 +65,10 @@ module ibex_prefetch_buffer (
   // Fetch fifo - consumes addresses and data //
   //////////////////////////////////////////////
 
+  // Instruction fetch errors are valid on the data phase of a request
+  // PMP errors are generated in the address phase, and registered into a fake data phase
+  assign instr_or_pmp_err = instr_err_i | pmp_err_q;
+
   ibex_fetch_fifo fifo_i (
       .clk_i                 ( clk_i             ),
       .rst_ni                ( rst_ni            ),

ParseResult:
INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: OR
        list: ops
            HdlValueId: instr_err_i
            HdlValueId: pmp_err_q
    HdlValueId: instr_or_pmp_err


CommitId: 53ef2ec43c1c1eb00b771e17fc157f5bb1103ed5
Update lowrisc_ibex to lowRISC/ibex@d14312c
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_prefetch_buffer.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_prefetch_buffer.sv
@@ -141,7 +141,10 @@ module ibex_prefetch_buffer (
         end
 
         //~> granted request or not
-        pf_fsm_ns = instr_gnt_i ? WAIT_RVALID : WAIT_GNT;
+        // If the instruction generated a PMP error, we may or may not
+        // get granted (the external valid is suppressed by the error)
+        // but we proceed to WAIT_RVALID to push the error to the fifo
+        pf_fsm_ns = (instr_gnt_i || pmp_err_q) ? WAIT_RVALID : WAIT_GNT;
       end // case: WAIT_GNT
 
       // we wait for rvalid, after that we are ready to serve a new request

ParseResult:
UPD HdlStmCase@@pf_fsm_cs to pf_fsm_cs
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@TERNARY to TERNARY
                INS HdlOp@@OR_LOG to ops
                UPD HdlOp@@OR_LOG to OR_LOG
                    INS list@@ops to OR_LOG
                    INS HdlValueId@@pmp_err_q to ops

UPD HdlStmCase@@pf_fsm_cs to pf_fsm_cs
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@TERNARY to TERNARY
                MOV HdlValueId@@instr_gnt_i to ops
                HdlValueId: instr_gnt_i


CommitId: 53ef2ec43c1c1eb00b771e17fc157f5bb1103ed5
Update lowrisc_ibex to lowRISC/ibex@d14312c
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_prefetch_buffer.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_prefetch_buffer.sv
@@ -155,7 +158,8 @@ module ibex_prefetch_buffer (
         if (req_i && (fifo_ready || branch_i)) begin
           // prepare for next request
 
-          if (instr_rvalid_i) begin
+          // Fake the rvalid for PMP errors to push the error to the fifo
+          if (instr_rvalid_i || pmp_err_q) begin
             instr_req_o = 1'b1;
             fifo_valid  = 1'b1;
             addr_valid  = 1'b1;

ParseResult:
UPD HdlStmCase@@pf_fsm_cs to pf_fsm_cs
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@TERNARY to TERNARY
                INS HdlOp@@OR_LOG to ops
                UPD HdlOp@@OR_LOG to OR_LOG
                    INS list@@ops to OR_LOG
                    INS HdlValueId@@pmp_err_q to ops

UPD HdlStmIf@@ to 
    INS HdlOp@@OR_LOG to 
    UPD HdlOp@@OR_LOG to OR_LOG
        INS list@@ops to OR_LOG
        INS HdlValueId@@pmp_err_q to ops

UPD HdlStmCase@@pf_fsm_cs to pf_fsm_cs
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@TERNARY to TERNARY
                MOV HdlValueId@@instr_gnt_i to ops
                HdlValueId: instr_gnt_i

UPD HdlStmIf@@ to 
    MOV HdlValueId@@instr_rvalid_i to 
    HdlValueId: instr_rvalid_i


CommitId: 53ef2ec43c1c1eb00b771e17fc157f5bb1103ed5
Update lowrisc_ibex to lowRISC/ibex@d14312c
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_prefetch_buffer.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_prefetch_buffer.sv
@@ -173,7 +177,8 @@ module ibex_prefetch_buffer (
         end else begin
           // just wait for rvalid and go back to IDLE, no new request
 
-          if (instr_rvalid_i) begin
+          // Fake the rvalid for PMP errors to push the error to the fifo
+          if (instr_rvalid_i || pmp_err_q) begin
             fifo_valid = 1'b1;
             pf_fsm_ns  = IDLE;
           end

ParseResult:
UPD HdlStmCase@@pf_fsm_cs to pf_fsm_cs
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@TERNARY to TERNARY
                INS HdlOp@@OR_LOG to ops
                UPD HdlOp@@OR_LOG to OR_LOG
                    INS list@@ops to OR_LOG
                    INS HdlValueId@@pmp_err_q to ops

UPD HdlStmIf@@ to 
    INS HdlOp@@OR_LOG to 
    UPD HdlOp@@OR_LOG to OR_LOG
        INS list@@ops to OR_LOG
        INS HdlValueId@@pmp_err_q to ops

UPD HdlStmCase@@pf_fsm_cs to pf_fsm_cs
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@TERNARY to TERNARY
                MOV HdlValueId@@instr_gnt_i to ops
                HdlValueId: instr_gnt_i

UPD HdlStmIf@@ to 
    MOV HdlValueId@@instr_rvalid_i to 
    HdlValueId: instr_rvalid_i


CommitId: 53ef2ec43c1c1eb00b771e17fc157f5bb1103ed5
Update lowrisc_ibex to lowRISC/ibex@d14312c
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_prefetch_buffer.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_prefetch_buffer.sv
@@ -214,11 +219,13 @@ module ibex_prefetch_buffer (
     if (!rst_ni) begin
       pf_fsm_cs      <= IDLE;
       instr_addr_q   <= '0;
+      pmp_err_q      <= '0;
     end else begin
       pf_fsm_cs      <= pf_fsm_ns;
 
       if (addr_valid) begin
         instr_addr_q <= instr_addr;
+        pmp_err_q    <= instr_pmp_err_i;
       end
     end
   end
ParseResult:
INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: pmp_err_q

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueId: instr_pmp_err_i
    HdlValueId: pmp_err_q


CommitId: c8ea251bc0ca31c452d18ea4659719293f2a7ac1
[ast] ast changes to enable top_earlgrey
--- a/hw/top_earlgrey/ip/ast/rtl/usb_clk.sv
+++ b/hw/top_earlgrey/ip/ast/rtl/usb_clk.sv
@@ -16,7 +16,7 @@ module usb_clk #(
    parameter time USB_VAL_RDLY = 50ms,
    parameter time USB_VAL_FDLY = 80ns,
 // synopsys translate_on
-   parameter UsbCalibWidth = 16
+   parameter int UsbCalibWidth = 16
 ) (
    input rst_ni,                             // AST USB Reset
    input clk_src_usb_en_i,                   // USB Source Clock Enable

ParseResult:
UPD HdlIdDef@@UsbCalibWidth to UsbCalibWidth
    INS HdlValueId@@int to UsbCalibWidth


CommitId: 983c6a46bc982d5876ed35be7c4a0f59c26b502b
[i2c] Reg, Core, and FSM Update
--- a/hw/ip/i2c/rtl/i2c_fsm.sv
+++ b/hw/ip/i2c/rtl/i2c_fsm.sv
@@ -13,6 +13,8 @@ module i2c_fsm (
   input        sda_i,  // serial data input from i2c bus
   output       sda_o,  // serial data output to i2c bus
 
+  input        host_enable_i, // enable host functionality
+
   input        fmt_fifo_rvalid_i, // indicates there is valid data in fmt_fifo
   output logic fmt_fifo_rready_o, // populates fmt_fifo
   input [7:0]  fmt_byte_i,        // byte in fmt_fifo to be sent to target

ParseResult:
INS HdlIdDef@@host_enable_i to ports
HdlIdDef: host_enable_i
    HdlValueId: wire
    HdlDirection: IN


CommitId: 983c6a46bc982d5876ed35be7c4a0f59c26b502b
[i2c] Reg, Core, and FSM Update
--- a/hw/ip/i2c/rtl/i2c_fsm.sv
+++ b/hw/ip/i2c/rtl/i2c_fsm.sv
@@ -400,7 +402,8 @@ module i2c_fsm (
     unique case (state_q)
       // Idle: initial state, SDA and SCL are released (high)
       Idle : begin
-        if (!fmt_fifo_rvalid_i) state_d = Idle;
+        if (!host_enable_i) state_d = Idle; // Idle unless host is enabled
+        else if (!fmt_fifo_rvalid_i) state_d = Idle;
         else if (fmt_flag_read_bytes_i) begin
           byte_clr = 1'b1;
           state_d = ReadClockLow;
ParseResult:
UPD HdlStmIf@@ to 
    INS HdlOp@@NEG_LOG to 
    HdlOp: NEG_LOG
        list: ops
            HdlValueId: host_enable_i
    INS tuple@@ to elifs
    INS HdlOp@@ASSIGN to 
    HdlOp: ASSIGN
        list: ops
            HdlValueId: state_d
            HdlValueId: Idle

UPD HdlStmIf@@ to 
    MOV HdlOp@@NEG_LOG to 
    HdlOp: NEG_LOG
        list: ops
            HdlValueId: fmt_fifo_rvalid_i


CommitId: df96e0c2a6cc99652e459b22c1bcb2c1ce5f59f1
[AST] AscentLint, HJSON fixes, and rgn_fips_i port
--- a/hw/top_earlgrey/ip/ast/rtl/usb_clk.sv
+++ b/hw/top_earlgrey/ip/ast/rtl/usb_clk.sv
@@ -13,6 +13,8 @@ module usb_clk (
   input clk_src_usb_en_i,                  // USB Source Clock Enable
   input usb_ref_val_i,                     // USB Reference (Pulse) Valid
   input usb_ref_pulse_i,                   // USB Reference Pulse
+  input scan_mode_i,                       // Scan Mode
+  input scan_reset_ni,                     // Scan Reset
   //
   output logic clk_src_usb_o,              // USB Source Clock
   output logic clk_src_usb_val_o           // USB Source Clock Valid

ParseResult:
INS HdlIdDef@@scan_mode_i to ports
HdlIdDef: scan_mode_i
    HdlValueId: wire
    HdlDirection: IN

INS HdlIdDef@@scan_reset_ni to ports
HdlIdDef: scan_reset_ni
    HdlValueId: wire
    HdlDirection: IN


CommitId: df96e0c2a6cc99652e459b22c1bcb2c1ce5f59f1
[AST] AscentLint, HJSON fixes, and rgn_fips_i port
--- a/hw/top_earlgrey/ip/ast/rtl/usb_clk.sv
+++ b/hw/top_earlgrey/ip/ast/rtl/usb_clk.sv
@@ -21,7 +23,8 @@ module usb_clk (
 logic clk, usb_clk_en, rst_n;
 
 assign rst_n = rst_usb_clk_ni;  // Scan enabled
-assign usb_clk_en = clk_src_usb_en_i && clk_usb_pd_ni && rst_usb_clk_ni;
+assign usb_clk_en = scan_mode_i ||
+                    (clk_src_usb_en_i && clk_usb_pd_ni && rst_usb_clk_ni);
 
 // Clock Oscilator
 ///////////////////////////////////////

ParseResult:
UPD HdlStmAssign@@ to 
    INS HdlOp@@OR_LOG to 
    UPD HdlOp@@OR_LOG to OR_LOG
        INS list@@ops to OR_LOG
        INS HdlValueId@@scan_mode_i to ops

UPD HdlStmAssign@@ to 
    MOV HdlOp@@AND_LOG to 
    HdlOp: AND_LOG
        list: ops
            HdlOp: AND_LOG
                list: ops
                    HdlValueId: clk_src_usb_en_i
                    HdlValueId: clk_usb_pd_ni
            HdlValueId: rst_usb_clk_ni


CommitId: df96e0c2a6cc99652e459b22c1bcb2c1ce5f59f1
[AST] AscentLint, HJSON fixes, and rgn_fips_i port
--- a/hw/top_earlgrey/ip/ast/rtl/usb_clk.sv
+++ b/hw/top_earlgrey/ip/ast/rtl/usb_clk.sv
@@ -41,7 +44,7 @@ prim_clock_buf u_clk_usb_buf(
 
 // 2-stage de-assertion
 logic rst_val_n;
-assign rst_val_n = rst_n && usb_clk_en;
+assign rst_val_n = scan_mode_i ? scan_reset_ni : rst_n && usb_clk_en;
 
 prim_flop_2sync #(
   .Width ( 1 ),
ParseResult:
UPD HdlStmAssign@@ to 
    MOV HdlOp@@AND_LOG to 
    HdlOp: AND_LOG
        list: ops
            HdlValueId: rst_n
            HdlValueId: usb_clk_en


CommitId: 3a5fdd65bfd8e71701c7e019ae980ec39610b474
Update lowrisc_ibex to lowRISC/ibex@5826af8
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_tracer.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_tracer.sv
@@ -92,6 +96,17 @@ module ibex_tracer (
   localparam logic [4:0] MEM = (1 << 4);
   logic [4:0] data_accessed;
 
+  logic trace_log_enable;
+  initial begin
+    if ($value$plusargs("ibex_tracer_enable=%b", trace_log_enable)) begin
+      if (trace_log_enable == 1'b0) begin
+        $display("%m: Instruction trace disabled.");
+      end
+    end else begin
+      trace_log_enable = 1'b1;
+    end
+  end
+
   function automatic void printbuffer_dumpline();
     string rvfi_insn_str;
 

ParseResult:
INS HdlIdDef@@trace_log_enable to objs
HdlIdDef: trace_log_enable
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

INS HdlStmProcess@@ to objs
HdlStmProcess
    HdlStmBlock: SEQ
        list: body
            HdlStmIf
                HdlOp: CALL
                    list: ops
                        HdlValueId: $value$plusargs
                        str
                        HdlValueId: trace_log_enable
                HdlStmBlock: SEQ
                    list: body
                        HdlStmIf
                            HdlOp: EQ
                                list: ops
                                    HdlValueId: trace_log_enable
                                    HdlValueInt: 0
                            HdlStmBlock: SEQ
                                list: body
                                    HdlOp: CALL
                                        list: ops
                                            HdlValueId: $display
                                            str
                            list: elifs
                list: elifs
                HdlStmBlock: SEQ
                    list: body
                        HdlOp: ASSIGN
                            list: ops
                                HdlValueId: trace_log_enable
                                HdlValueInt: 1
            HdlStmWait:
                list: val


CommitId: 3a5fdd65bfd8e71701c7e019ae980ec39610b474
Update lowrisc_ibex to lowRISC/ibex@5826af8
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_tracer.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_tracer.sv
@@ -391,9 +406,7 @@ module ibex_tracer (
       12'd899: return "mibound";
       12'd900: return "mdbase";
       12'd901: return "mdbound";
-      12'd800: return "mucounteren";
-      12'd801: return "mscounteren";
-      12'd802: return "mhcounteren";
+      12'd800: return "mcountinhibit";
       default: return $sformatf("0x%x", csr_addr);
     endcase
   endfunction

ParseResult:
UPD HdlStmReturn@@mucounteren to mcountinhibit

UPD HdlStmCase@@csr_addr to csr_addr
    DEL tuple@@ from cases
    tuple
        HdlValueInt: 801
        HdlStmReturn: mscounteren
    DEL tuple@@ from cases
    tuple
        HdlValueInt: 802
        HdlStmReturn: mhcounteren


CommitId: 3a5fdd65bfd8e71701c7e019ae980ec39610b474
Update lowrisc_ibex to lowRISC/ibex@5826af8
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_tracer.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_tracer.sv
@@ -732,7 +745,7 @@ module ibex_tracer (
 
   // log execution
   always_ff @(posedge clk_i) begin
-    if (rvfi_valid) begin
+    if (rvfi_valid && trace_log_enable) begin
       printbuffer_dumpline();
     end
   end
ParseResult:
INS HdlStmProcess@@ to objs

UPD HdlStmProcess@@ to 
    MOV list@@sensitivity to 
    list: sensitivity
        HdlOp: RISING
            list: ops
                HdlValueId: clk_i
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL HdlStmProcessTriggerConstrain@@FF from 

INS HdlStmIf@@ to body

UPD HdlStmIf@@ to 
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlValueId: printbuffer_dumpline
    DEL HdlValueId@@rvfi_valid from 
    DEL list@@elifs from 

DEL HdlStmIf@@ from body

DEL HdlStmProcess@@ from objs


CommitId: 2de46f6dd9a3db8d3425364c0b834d63d0b7a3b6
[entropy_src/rtl] fixes to address issue #3511
--- a/hw/ip/entropy_src/rtl/entropy_src_ack_sm.sv
+++ b/hw/ip/entropy_src/rtl/entropy_src_ack_sm.sv
@@ -37,9 +37,9 @@ module entropy_src_ack_sm (
     AckWait   = 6'b111000  // wait until the fifo has an entry
   } state_e;
 
-  state_e state_d;
+  state_e state_d, state_q;
 
-  logic [StateWidth-1:0] state_q;
+  logic [StateWidth-1:0] state_raw_q;
 
   // This primitive is used to place a size-only constraint on the
   // flops in order to prevent FSM state encoding optimizations.

ParseResult:
INS HdlIdDef@@state_q to objs
HdlIdDef: state_q
    HdlDirection: INTERNAL

UPD HdlIdDef@@state_q to state_raw_q


CommitId: 2de46f6dd9a3db8d3425364c0b834d63d0b7a3b6
[entropy_src/rtl] fixes to address issue #3511
--- a/hw/ip/entropy_src/rtl/entropy_src_ack_sm.sv
+++ b/hw/ip/entropy_src/rtl/entropy_src_ack_sm.sv
@@ -51,11 +51,13 @@ module entropy_src_ack_sm (
     .clk_i,
     .rst_ni,
     .d_i ( state_d ),
-    .q_o ( state_q )
+    .q_o ( state_raw_q )
   );
 
+  assign state_q = state_e'(state_raw_q);
+
   always_comb begin
-    state_d = state_e'(state_q);
+    state_d = state_q;
     ack_o = 1'b0;
     fifo_pop_o = 1'b0;
     unique case (state_q)
ParseResult:
INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: CALL
        list: ops
            HdlValueId: state_e
            HdlValueId: state_raw_q
    HdlValueId: state_q

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@CALL to CALL
                MOV HdlValueId@@state_q to ops
                HdlValueId: state_q
                DEL HdlValueId@@state_e from ops
                DEL list@@ops from CALL
            DEL HdlOp@@CALL from ops


CommitId: 098128c9003b1ab226ff17001ac59845a6755f24
Revert "Revert "[usbdev] Fixes for I/O modes and expand their tests""
--- a/hw/top_earlgrey/rtl/top_earlgrey_nexysvideo.sv
+++ b/hw/top_earlgrey/rtl/top_earlgrey_nexysvideo.sv
@@ -60,9 +60,9 @@ module top_earlgrey_nexysvideo #(
   logic [padctrl_reg_pkg::NMioPads-1:0] mio_out_core, mio_out_padring;
   logic [padctrl_reg_pkg::NMioPads-1:0] mio_oe_core, mio_oe_padring;
   logic [padctrl_reg_pkg::NMioPads-1:0] mio_in_core, mio_in_padring;
-  logic [padctrl_reg_pkg::NDioPads-1:0] dio_out_core, dio_out_padring;
-  logic [padctrl_reg_pkg::NDioPads-1:0] dio_oe_core, dio_oe_padring;
-  logic [padctrl_reg_pkg::NDioPads-1:0] dio_in_core, dio_in_padring;
+  logic [padctrl_reg_pkg::NDioPads-1:0] dio_out_core, dio_out_umux, dio_out_padring;
+  logic [padctrl_reg_pkg::NDioPads-1:0] dio_oe_core, dio_oe_umux, dio_oe_padring;
+  logic [padctrl_reg_pkg::NDioPads-1:0] dio_in_core, dio_in_umux, dio_in_padring;
 
   padring #(
     // MIOs 31:20 are currently not

ParseResult:
INS HdlIdDef@@dio_out_umux to objs
HdlIdDef: dio_out_umux
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlOp: SUB
                        list: ops
                            HdlOp: DOUBLE_COLON
                                list: ops
                                    HdlValueId: padctrl_reg_pkg
                                    HdlValueId: NDioPads
                            HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: INTERNAL

INS HdlIdDef@@dio_oe_umux to objs
HdlIdDef: dio_oe_umux
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlOp: SUB
                        list: ops
                            HdlOp: DOUBLE_COLON
                                list: ops
                                    HdlValueId: padctrl_reg_pkg
                                    HdlValueId: NDioPads
                            HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: INTERNAL

INS HdlIdDef@@dio_in_umux to objs
HdlIdDef: dio_in_umux
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlOp: SUB
                        list: ops
                            HdlOp: DOUBLE_COLON
                                list: ops
                                    HdlValueId: padctrl_reg_pkg
                                    HdlValueId: NDioPads
                            HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: INTERNAL


CommitId: 5a8da962f357b097cd559841edf088b3d67106a9
[pwm, rtl] PWM RTL update to fix a lint error
--- a/hw/ip/pwm/rtl/pwm_core.sv
+++ b/hw/ip/pwm/rtl/pwm_core.sv
@@ -47,6 +47,7 @@ module pwm_core #(
   logic                  cntr_en;
   logic [BeatCntDw-1:0]  clk_div;
   logic [3:0]            dc_resn;
+  logic [3:0]            lshift;
 
   logic [BeatCntDw-1:0]  beat_ctr_q;
   logic [BeatCntDw-1:0]  beat_ctr_d;

ParseResult:
INS HdlIdDef@@lshift to objs
HdlIdDef: lshift
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 3
                    HdlValueInt: 0
    HdlDirection: INTERNAL


CommitId: 5a8da962f357b097cd559841edf088b3d67106a9
[pwm, rtl] PWM RTL update to fix a lint error
--- a/hw/ip/pwm/rtl/pwm_core.sv
+++ b/hw/ip/pwm/rtl/pwm_core.sv
@@ -85,8 +86,9 @@ module pwm_core #(
 
   // Only update phase_ctr at the end of each beat
   // Exception: allow reset to zero whenever not enabled
+  assign lshift = 4'd15 - dc_resn;
   assign phase_ctr_en = beat_end & (clr_phase_cntr | cntr_en);
-  assign phase_ctr_incr =  (PhaseCntDw)'('h1) << (4'd15 - dc_resn);
+  assign phase_ctr_incr =  (PhaseCntDw)'('h1) << lshift;
   assign {phase_ctr_overflow, phase_ctr_next} = phase_ctr_q + phase_ctr_incr;
   assign phase_ctr_d = clr_phase_cntr ? '0 : phase_ctr_next;
   assign cycle_end = beat_end & phase_ctr_overflow;
ParseResult:
INS HdlStmAssign@@ to objs

UPD HdlStmAssign@@ to 
    UPD HdlOp@@SLL to SLL
        MOV HdlOp@@SUB to ops
        HdlOp: SUB
            list: ops
                HdlValueInt: 15
                HdlValueId: dc_resn

UPD HdlStmAssign@@ to 
    INS HdlValueId@@lshift to 

UPD HdlStmAssign@@ to 
    UPD HdlOp@@SLL to SLL
        INS HdlValueId@@lshift to ops


CommitId: 4f735bc6e72691152b3a87dd7d29bb394be5c785
Update lowrisc_ibex to lowRISC/ibex@dd39ec0
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_ex_block.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_ex_block.sv
@@ -38,6 +38,7 @@ module ibex_ex_block #(
     input  logic [31:0]           multdiv_operand_a_i,
     input  logic [31:0]           multdiv_operand_b_i,
     input  logic                  multdiv_ready_id_i,
+    input  logic                  data_ind_timing_i,
 
     // intermediate val reg
     output logic                  imd_val_we_o,

ParseResult:
INS HdlIdDef@@data_ind_timing_i to ports
HdlIdDef: data_ind_timing_i
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: IN


CommitId: c8ea251bc0ca31c452d18ea4659719293f2a7ac1
[ast] ast changes to enable top_earlgrey
--- a/hw/top_earlgrey/ip/ast/rtl/aon_osc.sv
+++ b/hw/top_earlgrey/ip/ast/rtl/aon_osc.sv
@@ -22,7 +22,11 @@ module aon_osc #(
 
 // synopsys translate_off
 
-localparam time AON_CLK_PERIOD = 5000ns; // 5000ns (200Khz)
+// localparam real AON_CLK_PERIOD = 5000; // 5000ns (200Khz)
+// TBD
+// This is a temporary work-around until the design fully supports
+// async clocks as part of a different PR.
+localparam real AON_CLK_PERIOD = 20;
 
 logic init_start, clk;
 

ParseResult:
UPD HdlIdDef@@AON_CLK_PERIOD to AON_CLK_PERIOD
    UPD HdlValueId@@time to real
    DEL HdlExprNotImplemented@@value from AON_CLK_PERIOD


CommitId: 8484ee48059293e41bb8fa87bf8ecf3061af9159
[csrng/rtl] fix for app command arbiter
--- a/hw/ip/csrng/rtl/csrng_cmd_stage.sv
+++ b/hw/ip/csrng/rtl/csrng_cmd_stage.sv
@@ -252,28 +257,30 @@ module csrng_cmd_stage import csrng_pkg::*; #(
     unique case (state_q)
       Idle: begin
         if (!cmd_fifo_zero) begin
-          state_d = SendSOP;
+          state_d = ArbGnt;
         end
       end
-      SendSOP: begin
+      ArbGnt: begin
         cmd_arb_req_o = 1'b1;
         if (cmd_arb_gnt_i) begin
-          cmd_gen_1st_req = 1'b1;
-          cmd_arb_sop_o = 1'b1;
-          cmd_fifo_pop = 1'b1;
-          if (sfifo_cmd_rdata[30:12] == GenBitsCntrWidth'(1)) begin
-            cmd_gen_cnt_last = 1'b1;
-          end
-          if (cmd_len == '0) begin
-            cmd_arb_eop_o = 1'b1;
-            state_d = GenCmdChk;
-          end else begin
-            state_d = SendMOP;
-          end
+          state_d = SendSOP;
+        end
+      end
+      SendSOP: begin
+        cmd_gen_1st_req = 1'b1;
+        cmd_arb_sop_o = 1'b1;
+        cmd_fifo_pop = 1'b1;
+        if (sfifo_cmd_rdata[30:12] == GenBitsCntrWidth'(1)) begin
+          cmd_gen_cnt_last = 1'b1;
+        end
+        if (cmd_len == '0) begin
+          cmd_arb_eop_o = 1'b1;
+          state_d = GenCmdChk;
+        end else begin
+          state_d = SendMOP;
         end
       end
       SendMOP: begin
-        cmd_arb_req_o = 1'b1;
         if (!cmd_fifo_zero) begin
           cmd_fifo_pop = 1'b1;
           cmd_len_dec = 1'b1;

ParseResult:
UPD HdlStmCase@@state_q to state_q
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS HdlValueId@@Idle to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@GenReq to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@GenArbGnt to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmCase@@state_q to state_q
    UPD HdlValueId@@Idle to ArbGnt
    UPD HdlValueId@@GenReq to GenSOP
    UPD HdlStmBlock@@SEQ to SEQ
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: cmd_arb_req_o
                HdlValueInt: 1
        DEL list@@body from SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: cmd_arb_req_o
                HdlValueInt: 1
    DEL HdlStmBlock@@SEQ from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 

UPD HdlStmIf@@ to 
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: cmd_gen_1st_req
                    HdlValueInt: 1
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: cmd_arb_sop_o
                    HdlValueInt: 1
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: cmd_fifo_pop
                    HdlValueInt: 1
            HdlStmIf
                HdlOp: EQ
                    list: ops
                        HdlOp: INDEX
                            list: ops
                                HdlValueId: sfifo_cmd_rdata
                                HdlOp: DOWNTO
                                    list: ops
                                        HdlValueInt: 30
                                        HdlValueInt: 12
                        HdlOp: CALL
                            list: ops
                                HdlValueId: GenBitsCntrWidth
                                HdlValueInt: 1
                HdlStmBlock: SEQ
                    list: body
                        HdlOp: ASSIGN
                            list: ops
                                HdlValueId: cmd_gen_cnt_last
                                HdlValueInt: 1
                list: elifs
            HdlStmIf
                HdlOp: EQ
                    list: ops
                        HdlValueId: cmd_len
                        HdlValueInt: 0
                HdlStmBlock: SEQ
                    list: body
                        HdlOp: ASSIGN
                            list: ops
                                HdlValueId: cmd_arb_eop_o
                                HdlValueInt: 1
                        HdlOp: ASSIGN
                            list: ops
                                HdlValueId: state_d
                                HdlValueId: GenCmdChk
                list: elifs
                HdlStmBlock: SEQ
                    list: body
                        HdlOp: ASSIGN
                            list: ops
                                HdlValueId: state_d
                                HdlValueId: SendMOP
    MOV HdlValueId@@cmd_arb_gnt_i to 
    HdlValueId: cmd_arb_gnt_i
    DEL list@@elifs from 

INS HdlStmIf@@ to body

UPD HdlStmIf@@ to 
    MOV HdlOp@@NEG_LOG to 
    HdlOp: NEG_LOG
        list: ops
            HdlValueId: cmd_fifo_zero

UPD HdlStmIf@@ to 
    INS HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: state_d
                    HdlValueId: ArbGnt
    INS list@@elifs to 

DEL HdlStmIf@@ from body


CommitId: 8484ee48059293e41bb8fa87bf8ecf3061af9159
[csrng/rtl] fix for app command arbiter
--- a/hw/ip/csrng/rtl/csrng_cmd_stage.sv
+++ b/hw/ip/csrng/rtl/csrng_cmd_stage.sv
@@ -307,17 +314,7 @@ module csrng_cmd_stage import csrng_pkg::*; #(
               state_d = Idle;
             end else begin
               // issue a subsequent gen request
-              cmd_arb_req_o = 1'b1;
-              if (cmd_arb_gnt_i) begin
-                cmd_arb_sop_o = 1'b1;
-                cmd_arb_eop_o = 1'b1;
-                cmd_gen_inc_req = 1'b1;
-                state_d = GenCmdChk;
-                // check for final genbits beat
-                if (cmd_gen_cnt_q == GenBitsCntrWidth'(1)) begin
-                  cmd_gen_cnt_last = 1'b1;
-                end
-              end
+              state_d = GenArbGnt;
             end
           end
         end else begin

ParseResult:
UPD HdlStmCase@@state_q to state_q
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS HdlValueId@@Idle to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@GenReq to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@GenArbGnt to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmCase@@state_q to state_q
    UPD HdlValueId@@Idle to ArbGnt
    UPD HdlValueId@@GenReq to GenSOP
    UPD HdlStmBlock@@SEQ to SEQ
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: cmd_arb_req_o
                HdlValueInt: 1
        DEL list@@body from SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: cmd_arb_req_o
                HdlValueInt: 1
    DEL HdlStmBlock@@SEQ from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 

UPD HdlStmIf@@ to 
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: cmd_arb_sop_o
                    HdlValueInt: 1
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: cmd_arb_eop_o
                    HdlValueInt: 1
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: cmd_gen_inc_req
                    HdlValueInt: 1
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: state_d
                    HdlValueId: GenCmdChk
            HdlStmIf
                HdlOp: EQ
                    list: ops
                        HdlValueId: cmd_gen_cnt_q
                        HdlOp: CALL
                            list: ops
                                HdlValueId: GenBitsCntrWidth
                                HdlValueInt: 1
                HdlStmBlock: SEQ
                    list: body
                        HdlOp: ASSIGN
                            list: ops
                                HdlValueId: cmd_gen_cnt_last
                                HdlValueInt: 1
                list: elifs
    MOV HdlValueId@@cmd_arb_gnt_i to 
    HdlValueId: cmd_arb_gnt_i
    DEL list@@elifs from 

INS HdlStmIf@@ to body

UPD HdlStmIf@@ to 
    MOV HdlValueId@@cmd_gen_flag_q to 
    HdlValueId: cmd_gen_flag_q
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: cmd_final_ack
                    HdlValueInt: 1
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: state_d
                    HdlValueId: Idle
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL list@@elifs from 

UPD HdlStmIf@@ to 
    INS HdlStmBlock@@SEQ to 
    INS list@@elifs to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

INS HdlStmIf@@ to body

UPD HdlStmIf@@ to 
    MOV HdlOp@@NEG_LOG to 
    HdlOp: NEG_LOG
        list: ops
            HdlValueId: sfifo_genbits_full
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL list@@elifs from 

UPD HdlStmIf@@ to 
    INS HdlStmBlock@@SEQ to 
    INS list@@elifs to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

INS HdlStmIf@@ to body

UPD HdlStmIf@@ to 
    MOV HdlOp@@EQ to 
    HdlOp: EQ
        list: ops
            HdlValueId: cmd_gen_cnt_q
            HdlValueInt: 0
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: cmd_final_ack
                    HdlValueInt: 1
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: state_d
                    HdlValueId: Idle
    MOV list@@elifs to 
    list: elifs
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: cmd_arb_req_o
                HdlValueInt: 1
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 

UPD HdlStmIf@@ to 
    INS HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: state_d
                    HdlValueId: GenArbGnt

DEL HdlStmIf@@ from body

DEL HdlStmIf@@ from body

DEL HdlStmIf@@ from body

DEL HdlStmIf@@ from body


CommitId: 8484ee48059293e41bb8fa87bf8ecf3061af9159
[csrng/rtl] fix for app command arbiter
--- a/hw/ip/csrng/rtl/csrng_cmd_stage.sv
+++ b/hw/ip/csrng/rtl/csrng_cmd_stage.sv
@@ -326,6 +323,22 @@ module csrng_cmd_stage import csrng_pkg::*; #(
           state_d = Idle;
         end
       end
+      GenArbGnt: begin
+        cmd_arb_req_o = 1'b1;
+        if (cmd_arb_gnt_i) begin
+          state_d = GenSOP;
+        end
+      end
+      GenSOP: begin
+        cmd_arb_sop_o = 1'b1;
+        cmd_arb_eop_o = 1'b1;
+        cmd_gen_inc_req = 1'b1;
+        state_d = GenCmdChk;
+        // check for final genbits beat
+        if (cmd_gen_cnt_q == GenBitsCntrWidth'(1)) begin
+          cmd_gen_cnt_last = 1'b1;
+        end
+      end
       Error: begin
         cmd_stage_sm_err_o = 1'b1;
       end
ParseResult:
UPD HdlStmCase@@state_q to state_q
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS HdlValueId@@Idle to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@GenReq to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@GenArbGnt to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmCase@@state_q to state_q
    UPD HdlValueId@@Idle to ArbGnt
    UPD HdlValueId@@GenReq to GenSOP
    UPD HdlStmBlock@@SEQ to SEQ
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: cmd_arb_req_o
                HdlValueInt: 1
        DEL list@@body from SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: cmd_arb_req_o
                HdlValueInt: 1
    DEL HdlStmBlock@@SEQ from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 

INS HdlStmIf@@ to body

INS HdlStmIf@@ to body

UPD HdlStmIf@@ to 
    MOV HdlValueId@@cmd_gen_flag_q to 
    HdlValueId: cmd_gen_flag_q
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: cmd_final_ack
                    HdlValueInt: 1
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: state_d
                    HdlValueId: Idle
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL list@@elifs from 

UPD HdlStmIf@@ to 
    INS HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: state_d
                    HdlValueId: GenSOP
    INS list@@elifs to 

DEL HdlStmIf@@ from body


CommitId: 1d046cee10b7d152a623379f603964fa049cca94
[pwm] Minor lint fix
--- a/hw/ip/pwm/rtl/pwm_core.sv
+++ b/hw/ip/pwm/rtl/pwm_core.sv
@@ -114,4 +114,8 @@ module pwm_core #(
 
   end : gen_chan_insts
 
+  // unused register configuration
+  logic unused_reg;
+  assign unused_reg = ^reg2hw.alert_test | ^reg2hw_sync.alert_test;
+
 endmodule : pwm_core
ParseResult:
INS HdlIdDef@@unused_reg to objs
HdlIdDef: unused_reg
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: OR
        list: ops
            HdlOp: XOR_UNARY
                list: ops
                    HdlOp: DOT
                        list: ops
                            HdlValueId: reg2hw
                            HdlValueId: alert_test
            HdlOp: XOR_UNARY
                list: ops
                    HdlOp: DOT
                        list: ops
                            HdlValueId: reg2hw_sync
                            HdlValueId: alert_test
    HdlValueId: unused_reg


CommitId: eef49a584162a29737680efa7101b19c63f8fb88
Update pulp_riscv_dbg to pulp-platform/riscv-dbg@e67a0a7
--- a/hw/vendor/pulp_riscv_dbg/src/dm_sba.sv
+++ b/hw/vendor/pulp_riscv_dbg/src/dm_sba.sv
@@ -16,7 +16,8 @@
 *
 */
 module dm_sba #(
-  parameter int unsigned BusWidth = 32
+  parameter int unsigned BusWidth = 32,
+  parameter bit          ReadByteEnable = 1
 ) (
   input  logic                   clk_i,       // Clock
   input  logic                   rst_ni,

ParseResult:
INS HdlIdDef@@ReadByteEnable to params
HdlIdDef: ReadByteEnable
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: bit
    HdlValueInt: 1
    HdlDirection: INTERNAL


CommitId: eef49a584162a29737680efa7101b19c63f8fb88
Update pulp_riscv_dbg to pulp-platform/riscv-dbg@e67a0a7
--- a/hw/vendor/pulp_riscv_dbg/src/dm_sba.sv
+++ b/hw/vendor/pulp_riscv_dbg/src/dm_sba.sv
@@ -144,7 +152,7 @@ module dm_sba #(
 
   always_ff @(posedge clk_i or negedge rst_ni) begin : p_regs
     if (!rst_ni) begin
-      state_q <= Idle;
+      state_q <= dm::Idle;
     end else begin
       state_q <= state_d;
     end

ParseResult:
UPD HdlStmIf@@ to 
    UPD HdlOp@@AND_LOG to AND_LOG
        UPD HdlOp@@NE to NE
            INS HdlOp@@DOUBLE_COLON to ops
            UPD HdlOp@@DOUBLE_COLON to DOUBLE_COLON
                INS list@@ops to DOUBLE_COLON
                INS HdlValueId@@dm to ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlOp@@DOUBLE_COLON to ops
            UPD HdlOp@@DOUBLE_COLON to DOUBLE_COLON
                INS list@@ops to DOUBLE_COLON
                INS HdlValueId@@dm to ops

UPD HdlStmAssign@@ to 
    MOV HdlValueId@@Idle to 
    HdlValueId: Idle


CommitId: 17e9624c452e05f71f4ad2b7c75bf6bbb071c324
Update lowrisc_ibex to lowRISC/ibex@ee1098f
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_prefetch_buffer.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_prefetch_buffer.sv
@@ -39,20 +39,21 @@ module ibex_prefetch_buffer (
     output logic        busy_o
 );
 
-  // Changes to the address flops would be required for > 2 outstanding requests
-  localparam int unsigned NUM_REQS = 2;
+  localparam int unsigned NUM_REQS  = 2;
 
-  logic                valid_req;
+  logic                valid_new_req, valid_req;
   logic                valid_req_d, valid_req_q;
-  logic                hold_addr_d, hold_addr_q;
+  logic                discard_req_d, discard_req_q;
   logic                gnt_or_pmp_err, rvalid_or_pmp_err;
   logic [NUM_REQS-1:0] rdata_outstanding_n, rdata_outstanding_s, rdata_outstanding_q;
-  logic [NUM_REQS-1:0] branch_abort_n, branch_abort_s, branch_abort_q;
+  logic [NUM_REQS-1:0] branch_discard_n, branch_discard_s, branch_discard_q;
+  logic [NUM_REQS-1:0] rdata_pmp_err_n, rdata_pmp_err_s, rdata_pmp_err_q;
 
-  logic [31:0]         instr_addr_q, fetch_addr;
+  logic [31:0]         stored_addr_d, stored_addr_q;
+  logic                stored_addr_en;
+  logic [31:0]         fetch_addr_d, fetch_addr_q;
+  logic                fetch_addr_en;
   logic [31:0]         instr_addr, instr_addr_w_aligned;
-  logic                addr_valid;
-  logic                pmp_err_q;
   logic                instr_or_pmp_err;
 
   logic                fifo_valid;

ParseResult:
MOV HdlIdDef@@pmp_err_q to objs
HdlIdDef: pmp_err_q
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

MOV HdlIdDef@@addr_valid to objs
HdlIdDef: addr_valid
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

INS HdlIdDef@@valid_new_req to objs
HdlIdDef: valid_new_req
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

UPD HdlIdDef@@hold_addr_d to discard_req_d

UPD HdlIdDef@@hold_addr_q to discard_req_q

INS HdlIdDef@@branch_discard_n to objs
HdlIdDef: branch_discard_n
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlOp: SUB
                        list: ops
                            HdlValueId: NUM_REQS
                            HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: INTERNAL

INS HdlIdDef@@branch_discard_s to objs
HdlIdDef: branch_discard_s
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlOp: SUB
                        list: ops
                            HdlValueId: NUM_REQS
                            HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: INTERNAL

UPD HdlIdDef@@branch_abort_n to branch_discard_q

UPD HdlIdDef@@branch_abort_s to rdata_pmp_err_n

UPD HdlIdDef@@branch_abort_q to rdata_pmp_err_s

INS HdlIdDef@@rdata_pmp_err_q to objs
HdlIdDef: rdata_pmp_err_q
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlOp: SUB
                        list: ops
                            HdlValueId: NUM_REQS
                            HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: INTERNAL

UPD HdlIdDef@@instr_addr_q to stored_addr_d

UPD HdlIdDef@@fetch_addr to stored_addr_q

UPD HdlIdDef@@pmp_err_q to stored_addr_en

INS HdlIdDef@@fetch_addr_d to objs
HdlIdDef: fetch_addr_d
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 31
                    HdlValueInt: 0
    HdlDirection: INTERNAL

INS HdlIdDef@@fetch_addr_q to objs
HdlIdDef: fetch_addr_q
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 31
                    HdlValueInt: 0
    HdlDirection: INTERNAL

UPD HdlIdDef@@addr_valid to fetch_addr_en


CommitId: 17e9624c452e05f71f4ad2b7c75bf6bbb071c324
Update lowrisc_ibex to lowRISC/ibex@ee1098f
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_prefetch_buffer.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_prefetch_buffer.sv
@@ -71,19 +72,21 @@ module ibex_prefetch_buffer (
 
   // Instruction fetch errors are valid on the data phase of a request
   // PMP errors are generated in the address phase, and registered into a fake data phase
-  assign instr_or_pmp_err = instr_err_i | pmp_err_q;
+  assign instr_or_pmp_err = instr_err_i | rdata_pmp_err_q[0];
 
   // A branch will invalidate any previously fetched instructions
   assign fifo_clear = branch_i;
 
-  ibex_fetch_fifo fifo_i (
+  ibex_fetch_fifo #(
+    .NUM_REQS (NUM_REQS)
+  ) fifo_i (
       .clk_i                 ( clk_i             ),
       .rst_ni                ( rst_ni            ),
 
       .clear_i               ( fifo_clear        ),
 
       .in_valid_i            ( fifo_valid        ),
-      .in_addr_i             ( instr_addr_q      ),
+      .in_addr_i             ( addr_i            ),
       .in_rdata_i            ( instr_rdata_i     ),
       .in_err_i              ( instr_or_pmp_err  ),
       .in_ready_o            ( fifo_ready        ),

ParseResult:
UPD HdlStmAssign@@ to 
    UPD HdlOp@@OR to OR
        INS HdlOp@@INDEX to ops
        UPD HdlOp@@INDEX to INDEX
            INS list@@ops to INDEX
            INS HdlValueInt@@0 to ops

UPD HdlStmAssign@@ to 
    UPD HdlOp@@OR to OR
        UPD HdlValueId@@pmp_err_q to rdata_pmp_err_q
        MOV HdlValueId@@pmp_err_q to ops
        HdlValueId: pmp_err_q


CommitId: 17e9624c452e05f71f4ad2b7c75bf6bbb071c324
Update lowrisc_ibex to lowRISC/ibex@ee1098f
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_prefetch_buffer.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_prefetch_buffer.sv
@@ -194,22 +226,16 @@ module ibex_prefetch_buffer (
   always_ff @(posedge clk_i or negedge rst_ni) begin
     if (!rst_ni) begin
       valid_req_q          <= 1'b0;
-      hold_addr_q          <= 1'b0;
+      discard_req_q        <= 1'b0;
       rdata_outstanding_q  <= 'b0;
-      branch_abort_q       <= 'b0;
+      branch_discard_q     <= 'b0;
+      rdata_pmp_err_q      <= 'b0;
     end else begin
       valid_req_q          <= valid_req_d;
-      hold_addr_q          <= hold_addr_d;
+      discard_req_q        <= discard_req_d;
       rdata_outstanding_q  <= rdata_outstanding_s;
-      branch_abort_q       <= branch_abort_s;
-    end
-  end
-
-  // CPU resets with a branch, so no need to reset these
-  always_ff @(posedge clk_i) begin
-    if (addr_valid) begin
-      instr_addr_q <= instr_addr;
-      pmp_err_q    <= instr_pmp_err_i;
+      branch_discard_q     <= branch_discard_s;
+      rdata_pmp_err_q      <= rdata_pmp_err_s;
     end
   end
 

ParseResult:
UPD HdlStmProcess@@ to 
    MOV list@@sensitivity to 
    list: sensitivity
        HdlOp: RISING
            list: ops
                HdlValueId: clk_i
    DEL HdlStmBlock@@SEQ from 
    HdlStmBlock: SEQ
        list: body
            HdlStmIf
                HdlValueId: addr_valid
                HdlStmBlock: SEQ
                    list: body
                        HdlStmAssign
                            HdlValueId: instr_addr
                            HdlValueId: instr_addr_q
                        HdlStmAssign
                            HdlValueId: instr_pmp_err_i
                            HdlValueId: pmp_err_q
                list: elifs
    DEL HdlStmProcessTriggerConstrain@@FF from 

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: rdata_pmp_err_q

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueId: rdata_pmp_err_s
    HdlValueId: rdata_pmp_err_q

UPD HdlStmAssign@@ to 
    UPD HdlValueId@@hold_addr_q to discard_req_q

UPD HdlStmAssign@@ to 
    UPD HdlValueId@@branch_abort_q to branch_discard_q

UPD HdlStmAssign@@ to 
    UPD HdlValueId@@hold_addr_d to discard_req_d
    UPD HdlValueId@@hold_addr_q to discard_req_q

UPD HdlStmAssign@@ to 
    UPD HdlValueId@@branch_abort_s to branch_discard_s
    UPD HdlValueId@@branch_abort_q to branch_discard_q

DEL HdlStmProcess@@ from objs


CommitId: 6abbf733feb2a4d9abbdd7247cdd2cf30a4dbc24
[edn/rtl] fix for ascentlint lint
--- a/hw/ip/edn/rtl/edn_core.sv
+++ b/hw/ip/edn/rtl/edn_core.sv
@@ -532,7 +532,7 @@ module edn_core import edn_pkg::*; #(
   //--------------------------------------------
 
   assign     hw2reg.sum_sts.internal_use.de = !edn_enable;
-  assign     hw2reg.sum_sts.internal_use.d  = 1'b0 && reg2hw.regen;
+  assign     hw2reg.sum_sts.internal_use.d  = reg2hw.regen.q;
 
 
 endmodule
ParseResult:
UPD HdlStmAssign@@ to 
    UPD HdlOp@@AND_LOG to DOT
    UPD HdlOp@@AND_LOG to AND_LOG
        DEL HdlValueInt@@0 from ops

UPD HdlStmAssign@@ to 
    UPD HdlOp@@DOT to DOT
        INS HdlValueId@@q to ops


CommitId: ef348c9995b53217479ebda6af8f7501042ecb72
[reggen] Add naming check for REGWEN and standardize on RW0C accesses
--- a/hw/ip/edn/rtl/edn_core.sv
+++ b/hw/ip/edn/rtl/edn_core.sv
@@ -533,7 +533,7 @@ module edn_core import edn_pkg::*; #(
   //--------------------------------------------
 
   assign     hw2reg.sum_sts.internal_use.de = !edn_enable;
-  assign     hw2reg.sum_sts.internal_use.d  = reg2hw.regen.q;
+  assign     hw2reg.sum_sts.internal_use.d  = reg2hw.regwen.q;
 
 
 endmodule
ParseResult:
INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: DOT
        list: ops
            HdlOp: DOT
                list: ops
                    HdlValueId: reg2hw
                    HdlValueId: regwen
            HdlValueId: q
    HdlValueId: hw2reg

DEL HdlStmAssign@@ from objs
HdlStmAssign
    HdlOp: DOT
        list: ops
            HdlOp: DOT
                list: ops
                    HdlValueId: reg2hw
                    HdlValueId: regen
            HdlValueId: q
    HdlValueId: hw2reg


CommitId: 098128c9003b1ab226ff17001ac59845a6755f24
Revert "Revert "[usbdev] Fixes for I/O modes and expand their tests""
--- a/hw/dv/dpi/usbdpi/usbdpi.sv
+++ b/hw/dv/dpi/usbdpi/usbdpi.sv
@@ -21,21 +22,31 @@ module usbdpi #(
   output logic dn_p2d,
   input  logic dn_d2p,
   input  logic dn_en_d2p,
+  output logic d_p2d,
+  input  logic d_d2p,
+  input  logic d_en_d2p,
+  input  logic se0_d2p,
+  input  logic se0_en_d2p,
+  input  logic txmode_d2p,
+  input  logic txmode_en_d2p,
+
   output logic sense_p2d,
-  input  logic pullup_d2p,
-  input  logic pullup_en_d2p
+  input  logic pullupdp_d2p,
+  input  logic pullupdp_en_d2p,
+  input  logic pullupdn_d2p,
+  input  logic pullupdn_en_d2p
 );
   import "DPI-C" function
     chandle usbdpi_create(input string name, input int loglevel);
 
   import "DPI-C" function
-    void usbdpi_device_to_host(input chandle ctx, input bit [4:0] d2p);
+    void usbdpi_device_to_host(input chandle ctx, input bit [10:0] d2p);
 
   import "DPI-C" function
     void usbdpi_close(input chandle ctx);
 
   import "DPI-C" function
-    byte usbdpi_host_to_device(input chandle ctx, input bit [4:0] d2p);
+    byte usbdpi_host_to_device(input chandle ctx, input bit [10:0] d2p);
 
   chandle ctx;
 

ParseResult:
INS HdlIdDef@@d_p2d to ports
HdlIdDef: d_p2d
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: OUT

INS HdlIdDef@@d_d2p to ports
HdlIdDef: d_d2p
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: IN

INS HdlIdDef@@d_en_d2p to ports
HdlIdDef: d_en_d2p
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: IN

INS HdlIdDef@@se0_d2p to ports
HdlIdDef: se0_d2p
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: IN

INS HdlIdDef@@se0_en_d2p to ports
HdlIdDef: se0_en_d2p
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: IN

INS HdlIdDef@@txmode_d2p to ports
HdlIdDef: txmode_d2p
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: IN

INS HdlIdDef@@txmode_en_d2p to ports
HdlIdDef: txmode_en_d2p
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: IN

INS HdlIdDef@@pullupdp_d2p to ports
HdlIdDef: pullupdp_d2p
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: IN

UPD HdlIdDef@@pullup_d2p to pullupdp_en_d2p

UPD HdlIdDef@@pullup_en_d2p to pullupdn_d2p

INS HdlIdDef@@pullupdn_en_d2p to ports
HdlIdDef: pullupdn_en_d2p
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: IN


CommitId: 098128c9003b1ab226ff17001ac59845a6755f24
Revert "Revert "[usbdev] Fixes for I/O modes and expand their tests""
--- a/hw/dv/dpi/usbdpi/usbdpi.sv
+++ b/hw/dv/dpi/usbdpi/usbdpi.sv
@@ -47,32 +58,39 @@ module usbdpi #(
     usbdpi_close(ctx);
   end
 
-  logic [4:0] d2p;
-  logic [4:0] d2p_r;
+  logic [10:0] d2p;
+  logic [10:0] d2p_r;
   logic       unused_dummy;
   logic       unused_clk = clk_i;
   logic       unused_rst = rst_ni;
-  logic       dp_int, dn_int;
+  logic       dp_int, dn_int, d_int;
 
-  assign d2p = {dp_d2p, dp_en_d2p, dn_d2p, dn_en_d2p, pullup_d2p & pullup_en_d2p};
+  assign d2p = {dp_d2p, dp_en_d2p, dn_d2p, dn_en_d2p, d_d2p, d_en_d2p, se0_d2p, se0_en_d2p, pullupdp_d2p & pullupdp_en_d2p, pullupdn_d2p & pullupdn_en_d2p, txmode_d2p & txmode_en_d2p};
   always_ff @(posedge clk_48MHz_i) begin
-    if (pullup_d2p && pullup_en_d2p) begin
+    if ((pullupdp_d2p && pullupdp_en_d2p) || (pullupdn_d2p && pullupdn_en_d2p)) begin
       automatic byte p2d = usbdpi_host_to_device(ctx, d2p);
+      d_int <= p2d[3];
       dp_int <= p2d[2];
       dn_int <= p2d[1];
       sense_p2d <= p2d[0];
-      unused_dummy <= |p2d[7:3];
+      unused_dummy <= |p2d[7:4];
       d2p_r <= d2p;
       if (d2p_r != d2p) begin
         usbdpi_device_to_host(ctx, d2p);
       end
-    end else begin
+    end else begin // if (pullupdp_d2p && pullupdp_en_d2p)
+      d_int <= 0;
       dp_int <= 0;
       dn_int <= 0;
     end
   end
 
   always_comb begin : proc_data
+    if (d_en_d2p) begin
+      d_p2d = d_d2p;
+    end else begin
+      d_p2d = d_int;
+    end
     if (dp_en_d2p) begin
       dp_p2d = dp_d2p;
     end else begin
ParseResult:
INS HdlIdDef@@d_int to objs
HdlIdDef: d_int
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

UPD HdlStmAssign@@ to 
    INS HdlOp@@CONCAT to 
    UPD HdlOp@@CONCAT to CONCAT
        INS list@@ops to CONCAT
        INS HdlOp@@CONCAT to ops
        INS HdlOp@@AND to ops
        HdlOp: AND
            list: ops
                HdlValueId: txmode_d2p
                HdlValueId: txmode_en_d2p
        UPD HdlOp@@CONCAT to CONCAT
            INS list@@ops to CONCAT
            INS HdlOp@@CONCAT to ops
            INS HdlOp@@AND to ops
            HdlOp: AND
                list: ops
                    HdlValueId: pullupdn_d2p
                    HdlValueId: pullupdn_en_d2p
            UPD HdlOp@@CONCAT to CONCAT
                INS list@@ops to CONCAT
                INS HdlOp@@CONCAT to ops
                UPD HdlOp@@CONCAT to CONCAT
                    INS list@@ops to CONCAT
                    INS HdlOp@@CONCAT to ops
                    INS HdlValueId@@se0_en_d2p to ops
                    UPD HdlOp@@CONCAT to CONCAT
                        INS list@@ops to CONCAT
                        INS HdlOp@@CONCAT to ops
                        INS HdlValueId@@se0_d2p to ops
                        UPD HdlOp@@CONCAT to CONCAT
                            INS list@@ops to CONCAT
                            INS HdlValueId@@d_en_d2p to ops
                UPD HdlOp@@AND to AND
                    INS HdlValueId@@pullupdp_d2p to ops

INS HdlStmIf@@ to body
HdlStmIf
    HdlValueId: d_en_d2p
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: d_p2d
                    HdlValueId: d_d2p
    list: elifs
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: d_p2d
                    HdlValueId: d_int

UPD HdlStmIf@@ to 
    INS HdlOp@@OR_LOG to 
    UPD HdlOp@@OR_LOG to OR_LOG
        INS list@@ops to OR_LOG
        INS HdlOp@@AND_LOG to ops
        HdlOp: AND_LOG
            list: ops
                HdlValueId: pullupdn_d2p
                HdlValueId: pullupdn_en_d2p

UPD HdlIdDef@@d2p to d2p
    UPD HdlOp@@PARAMETRIZATION to PARAMETRIZATION
        UPD HdlOp@@DOWNTO to DOWNTO
            UPD HdlValueInt@@4 to 10

UPD HdlIdDef@@d2p_r to d2p_r
    UPD HdlOp@@PARAMETRIZATION to PARAMETRIZATION
        UPD HdlOp@@DOWNTO to DOWNTO
            UPD HdlValueInt@@4 to 10

UPD HdlStmIf@@ to 
    MOV HdlOp@@AND_LOG to 
    HdlOp: AND_LOG
        list: ops
            HdlValueId: pullup_d2p
            HdlValueId: pullup_en_d2p
    UPD HdlOp@@AND_LOG to AND_LOG
        UPD HdlValueId@@pullup_d2p to pullupdp_d2p
        UPD HdlValueId@@pullup_en_d2p to pullupdp_en_d2p

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlOp: INDEX
        list: ops
            HdlValueId: p2d
            HdlValueInt: 3
    HdlValueId: d_int

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: d_int

UPD HdlStmAssign@@ to 
    UPD HdlOp@@CONCAT to CONCAT
        MOV HdlOp@@AND to ops
        HdlOp: AND
            list: ops
                HdlValueId: pullup_d2p
                HdlValueId: pullup_en_d2p
        UPD HdlOp@@AND to AND
            UPD HdlValueId@@pullup_en_d2p to pullupdp_en_d2p
            UPD HdlValueId@@pullup_d2p to d_d2p
            MOV HdlValueId@@pullup_d2p to ops
            HdlValueId: pullup_d2p
    MOV HdlOp@@CONCAT to 
    HdlOp: CONCAT
        list: ops
            HdlOp: CONCAT
                list: ops
                    HdlOp: CONCAT
                        list: ops
                            HdlOp: CONCAT
                                list: ops
                                    HdlValueId: dp_d2p
                                    HdlValueId: dp_en_d2p
                            HdlValueId: dn_d2p
                    HdlValueId: dn_en_d2p
            HdlOp: AND
                list: ops
                    HdlValueId: pullup_d2p
                    HdlValueId: pullup_en_d2p

UPD HdlStmAssign@@ to 
    UPD HdlOp@@OR_UNARY to OR_UNARY
        UPD HdlOp@@INDEX to INDEX
            UPD HdlOp@@DOWNTO to DOWNTO
                UPD HdlValueInt@@3 to 4


CommitId: b27cff9584c6d42b71a89c66ec64f15b166435b2
[i2c, rtl] Format flag assignments
--- a/hw/ip/i2c/rtl/i2c_core.sv
+++ b/hw/ip/i2c/rtl/i2c_core.sv
@@ -188,8 +188,8 @@ module  i2c_core (
   assign fmt_byte               = fmt_fifo_rdata[7:0];
   assign fmt_flag_start_before  = fmt_fifo_rdata[8];
   assign fmt_flag_stop_after    = fmt_fifo_rdata[9];
-  assign fmt_flag_read_continue = fmt_fifo_rdata[10];
-  assign fmt_flag_read_bytes    = fmt_fifo_rdata[11];
+  assign fmt_flag_read_bytes    = fmt_fifo_rdata[10];
+  assign fmt_flag_read_continue = fmt_fifo_rdata[11];
   assign fmt_flag_nak_ok        = fmt_fifo_rdata[12];
 
   // Unused parts of exposed bits
ParseResult:
UPD HdlStmAssign@@ to 
    UPD HdlValueId@@fmt_flag_read_continue to fmt_flag_read_bytes

UPD HdlStmAssign@@ to 
    UPD HdlValueId@@fmt_flag_read_bytes to fmt_flag_read_continue


CommitId: 2de46f6dd9a3db8d3425364c0b834d63d0b7a3b6
[entropy_src/rtl] fixes to address issue #3511
--- a/hw/ip/entropy_src/rtl/entropy_src_adaptp_ht.sv
+++ b/hw/ip/entropy_src/rtl/entropy_src_adaptp_ht.sv
@@ -6,11 +6,11 @@
 //
 
 module entropy_src_adaptp_ht #(
-  parameter int unsigned RegWidth = 16,
-  parameter int unsigned RngBusWidth = 4
+  parameter int RegWidth = 16,
+  parameter int RngBusWidth = 4
 ) (
-  input                  clk_i,
-  input                  rst_ni,
+  input logic clk_i,
+  input logic rst_ni,
 
    // ins req interface
   input logic [RngBusWidth-1:0] entropy_bit_i,

ParseResult:
UPD HdlIdDef@@RegWidth to RegWidth
    UPD HdlOp@@PARAMETRIZATION to PARAMETRIZATION
        MOV HdlValueId@@int to ops
        HdlValueId: int
        DEL HdlOp@@MAP_ASSOCIATION from ops
        HdlOp: MAP_ASSOCIATION
            list: ops
                HdlValueId: signed
        DEL list@@ops from PARAMETRIZATION
    DEL HdlOp@@PARAMETRIZATION from RegWidth

UPD HdlIdDef@@RngBusWidth to RngBusWidth
    UPD HdlOp@@PARAMETRIZATION to PARAMETRIZATION
        MOV HdlValueId@@int to ops
        HdlValueId: int
        DEL HdlOp@@MAP_ASSOCIATION from ops
        HdlOp: MAP_ASSOCIATION
            list: ops
                HdlValueId: signed
        DEL list@@ops from PARAMETRIZATION
    DEL HdlOp@@PARAMETRIZATION from RngBusWidth

UPD HdlIdDef@@clk_i to clk_i
    INS HdlOp@@PARAMETRIZATION to clk_i
    UPD HdlOp@@PARAMETRIZATION to PARAMETRIZATION
        INS list@@ops to PARAMETRIZATION

UPD HdlIdDef@@clk_i to clk_i
    UPD HdlValueId@@wire to logic
    MOV HdlValueId@@wire to clk_i
    HdlValueId: wire

UPD HdlIdDef@@rst_ni to rst_ni
    DEL HdlValueId@@wire from rst_ni


CommitId: 2de46f6dd9a3db8d3425364c0b834d63d0b7a3b6
[entropy_src/rtl] fixes to address issue #3511
--- a/hw/ip/entropy_src/rtl/entropy_src_adaptp_ht.sv
+++ b/hw/ip/entropy_src/rtl/entropy_src_adaptp_ht.sv
@@ -19,27 +19,22 @@ module entropy_src_adaptp_ht #(
   input logic                   active_i,
   input logic [RegWidth-1:0]    thresh_hi_i,
   input logic [RegWidth-1:0]    thresh_lo_i,
-  input logic [RegWidth-1:0]    window_i,
+  input logic                   window_wrap_pulse_i,
   output logic [RegWidth-1:0]   test_cnt_o,
-  output logic                  test_done_pulse_o,
   output logic                  test_fail_hi_pulse_o,
   output logic                  test_fail_lo_pulse_o
 );
 
   // signals
   logic [RegWidth-1:0] column_cnt;
-  logic        window_cntr_wrap;
 
   // flops
-  logic [RegWidth-1:0] window_cntr_q, window_cntr_d;
   logic [RegWidth-1:0] test_cnt_q, test_cnt_d;
 
   always_ff @(posedge clk_i or negedge rst_ni)
     if (!rst_ni) begin
-      window_cntr_q    <= '0;
       test_cnt_q       <= '0;
     end else begin
-      window_cntr_q    <= window_cntr_d;
       test_cnt_q       <= test_cnt_d;
     end
 

ParseResult:
MOV HdlIdDef@@test_cnt_o to ports
HdlIdDef: test_cnt_o
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlOp: SUB
                        list: ops
                            HdlValueId: RegWidth
                            HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: OUT

UPD HdlIdDef@@test_done_pulse_o to window_wrap_pulse_i

UPD HdlIdDef@@window_cntr_wrap to window_cntr_wrap
    MOV HdlOp@@PARAMETRIZATION to window_cntr_wrap
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    DEL HdlDirection@@INTERNAL from window_cntr_wrap

UPD HdlIdDef@@test_done_pulse_o to test_done_pulse_o
    UPD HdlDirection@@OUT to IN

DEL HdlIdDef@@window_i from ports
HdlIdDef: window_i
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlOp: SUB
                        list: ops
                            HdlValueId: RegWidth
                            HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: IN

DEL HdlIdDef@@window_cntr_wrap from objs

DEL HdlIdDef@@window_cntr_q from objs
HdlIdDef: window_cntr_q
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlOp: SUB
                        list: ops
                            HdlValueId: RegWidth
                            HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: INTERNAL

DEL HdlIdDef@@window_cntr_d from objs
HdlIdDef: window_cntr_d
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlOp: SUB
                        list: ops
                            HdlValueId: RegWidth
                            HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: INTERNAL

DEL HdlStmAssign@@ from body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: window_cntr_q

DEL HdlStmAssign@@ from body
HdlStmAssign
    HdlValueId: window_cntr_d
    HdlValueId: window_cntr_q


CommitId: 33e387ff92df07f8a334ab97a02becf08505a130
[csrng/rtl] Split cmd_sts into two registers
--- a/hw/ip/csrng/rtl/csrng_ctr_drbg_upd.sv
+++ b/hw/ip/csrng/rtl/csrng_ctr_drbg_upd.sv
@@ -7,12 +7,12 @@
 // implementation using security_strength = 256
 
 module csrng_ctr_drbg_upd #(
-  parameter int unsigned Cmd = 3,
-  parameter int unsigned StateId = 4,
-  parameter int unsigned BlkLen = 128,
-  parameter int unsigned KeyLen = 256,
-  parameter int unsigned SeedLen = 384,
-  parameter int unsigned CtrLen  = 32
+  parameter int Cmd = 3,
+  parameter int StateId = 4,
+  parameter int BlkLen = 128,
+  parameter int KeyLen = 256,
+  parameter int SeedLen = 384,
+  parameter int CtrLen  = 32
 ) (
   input logic                clk_i,
   input logic                rst_ni,

ParseResult:
UPD HdlIdDef@@Cmd to Cmd
    UPD HdlOp@@PARAMETRIZATION to PARAMETRIZATION
        MOV HdlValueId@@int to ops
        HdlValueId: int
        DEL HdlOp@@MAP_ASSOCIATION from ops
        HdlOp: MAP_ASSOCIATION
            list: ops
                HdlValueId: signed
        DEL list@@ops from PARAMETRIZATION
    DEL HdlOp@@PARAMETRIZATION from Cmd

UPD HdlIdDef@@StateId to StateId
    UPD HdlOp@@PARAMETRIZATION to PARAMETRIZATION
        MOV HdlValueId@@int to ops
        HdlValueId: int
        DEL HdlOp@@MAP_ASSOCIATION from ops
        HdlOp: MAP_ASSOCIATION
            list: ops
                HdlValueId: signed
        DEL list@@ops from PARAMETRIZATION
    DEL HdlOp@@PARAMETRIZATION from StateId

UPD HdlIdDef@@BlkLen to BlkLen
    UPD HdlOp@@PARAMETRIZATION to PARAMETRIZATION
        MOV HdlValueId@@int to ops
        HdlValueId: int
        DEL HdlOp@@MAP_ASSOCIATION from ops
        HdlOp: MAP_ASSOCIATION
            list: ops
                HdlValueId: signed
        DEL list@@ops from PARAMETRIZATION
    DEL HdlOp@@PARAMETRIZATION from BlkLen

UPD HdlIdDef@@KeyLen to KeyLen
    UPD HdlOp@@PARAMETRIZATION to PARAMETRIZATION
        MOV HdlValueId@@int to ops
        HdlValueId: int
        DEL HdlOp@@MAP_ASSOCIATION from ops
        HdlOp: MAP_ASSOCIATION
            list: ops
                HdlValueId: signed
        DEL list@@ops from PARAMETRIZATION
    DEL HdlOp@@PARAMETRIZATION from KeyLen

UPD HdlIdDef@@SeedLen to SeedLen
    UPD HdlOp@@PARAMETRIZATION to PARAMETRIZATION
        MOV HdlValueId@@int to ops
        HdlValueId: int
        DEL HdlOp@@MAP_ASSOCIATION from ops
        HdlOp: MAP_ASSOCIATION
            list: ops
                HdlValueId: signed
        DEL list@@ops from PARAMETRIZATION
    DEL HdlOp@@PARAMETRIZATION from SeedLen

UPD HdlIdDef@@CtrLen to CtrLen
    UPD HdlOp@@PARAMETRIZATION to PARAMETRIZATION
        MOV HdlValueId@@int to ops
        HdlValueId: int
        DEL HdlOp@@MAP_ASSOCIATION from ops
        HdlOp: MAP_ASSOCIATION
            list: ops
                HdlValueId: signed
        DEL list@@ops from PARAMETRIZATION
    DEL HdlOp@@PARAMETRIZATION from CtrLen


CommitId: 33e387ff92df07f8a334ab97a02becf08505a130
[csrng/rtl] Split cmd_sts into two registers
--- a/hw/ip/csrng/rtl/csrng_ctr_drbg_upd.sv
+++ b/hw/ip/csrng/rtl/csrng_ctr_drbg_upd.sv
@@ -51,16 +51,16 @@ module csrng_ctr_drbg_upd #(
   output logic [2:0]         ctr_drbg_upd_sfifo_final_err_o
 );
 
-  localparam int unsigned UpdReqFifoDepth = 1;
-  localparam int unsigned UpdReqFifoWidth = KeyLen+BlkLen+SeedLen+StateId+Cmd;
-  localparam int unsigned BlkEncReqFifoDepth = 1;
-  localparam int unsigned BlkEncReqFifoWidth = KeyLen+BlkLen+StateId+Cmd;
-  localparam int unsigned BlkEncAckFifoDepth = 1;
-  localparam int unsigned BlkEncAckFifoWidth = BlkLen+StateId+Cmd;
-  localparam int unsigned PDataFifoDepth = 1;
-  localparam int unsigned PDataFifoWidth = SeedLen;
-  localparam int unsigned FinalFifoDepth = 1;
-  localparam int unsigned FinalFifoWidth = KeyLen+BlkLen+StateId+Cmd;
+  localparam int UpdReqFifoDepth = 1;
+  localparam int UpdReqFifoWidth = KeyLen+BlkLen+SeedLen+StateId+Cmd;
+  localparam int BlkEncReqFifoDepth = 1;
+  localparam int BlkEncReqFifoWidth = KeyLen+BlkLen+StateId+Cmd;
+  localparam int BlkEncAckFifoDepth = 1;
+  localparam int BlkEncAckFifoWidth = BlkLen+StateId+Cmd;
+  localparam int PDataFifoDepth = 1;
+  localparam int PDataFifoWidth = SeedLen;
+  localparam int FinalFifoDepth = 1;
+  localparam int FinalFifoWidth = KeyLen+BlkLen+StateId+Cmd;
 
   // signals
   logic [SeedLen-1:0] updated_key_and_v;

ParseResult:
INS HdlIdDef@@UpdReqFifoDepth to objs
HdlIdDef: UpdReqFifoDepth
    HdlValueId: int
    HdlValueInt: 1
    HdlDirection: INTERNAL

INS HdlIdDef@@BlkEncReqFifoDepth to objs
HdlIdDef: BlkEncReqFifoDepth
    HdlValueId: int
    HdlValueInt: 1
    HdlDirection: INTERNAL

INS HdlIdDef@@BlkEncAckFifoDepth to objs
HdlIdDef: BlkEncAckFifoDepth
    HdlValueId: int
    HdlValueInt: 1
    HdlDirection: INTERNAL

INS HdlIdDef@@PDataFifoDepth to objs
HdlIdDef: PDataFifoDepth
    HdlValueId: int
    HdlValueInt: 1
    HdlDirection: INTERNAL

INS HdlIdDef@@PDataFifoWidth to objs
HdlIdDef: PDataFifoWidth
    HdlValueId: int
    HdlValueId: SeedLen
    HdlDirection: INTERNAL

INS HdlIdDef@@FinalFifoDepth to objs
HdlIdDef: FinalFifoDepth
    HdlValueId: int
    HdlValueInt: 1
    HdlDirection: INTERNAL

UPD HdlIdDef@@UpdReqFifoWidth to UpdReqFifoWidth
    UPD HdlOp@@PARAMETRIZATION to PARAMETRIZATION
        MOV HdlValueId@@int to ops
        HdlValueId: int
        DEL HdlOp@@MAP_ASSOCIATION from ops
        HdlOp: MAP_ASSOCIATION
            list: ops
                HdlValueId: signed
        DEL list@@ops from PARAMETRIZATION
    DEL HdlOp@@PARAMETRIZATION from UpdReqFifoWidth

UPD HdlIdDef@@BlkEncReqFifoWidth to BlkEncReqFifoWidth
    UPD HdlOp@@PARAMETRIZATION to PARAMETRIZATION
        MOV HdlValueId@@int to ops
        HdlValueId: int
        DEL HdlOp@@MAP_ASSOCIATION from ops
        HdlOp: MAP_ASSOCIATION
            list: ops
                HdlValueId: signed
        DEL list@@ops from PARAMETRIZATION
    DEL HdlOp@@PARAMETRIZATION from BlkEncReqFifoWidth

UPD HdlIdDef@@BlkEncAckFifoWidth to BlkEncAckFifoWidth
    UPD HdlOp@@PARAMETRIZATION to PARAMETRIZATION
        MOV HdlValueId@@int to ops
        HdlValueId: int
        DEL HdlOp@@MAP_ASSOCIATION from ops
        HdlOp: MAP_ASSOCIATION
            list: ops
                HdlValueId: signed
        DEL list@@ops from PARAMETRIZATION
    DEL HdlOp@@PARAMETRIZATION from BlkEncAckFifoWidth

UPD HdlIdDef@@FinalFifoWidth to FinalFifoWidth
    UPD HdlOp@@PARAMETRIZATION to PARAMETRIZATION
        MOV HdlValueId@@int to ops
        HdlValueId: int
        DEL HdlOp@@MAP_ASSOCIATION from ops
        HdlOp: MAP_ASSOCIATION
            list: ops
                HdlValueId: signed
        DEL list@@ops from PARAMETRIZATION
    DEL HdlOp@@PARAMETRIZATION from FinalFifoWidth

DEL HdlIdDef@@UpdReqFifoDepth from objs
HdlIdDef: UpdReqFifoDepth
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: int
            HdlOp: MAP_ASSOCIATION
                list: ops
                    HdlValueId: signed
    HdlValueInt: 1
    HdlDirection: INTERNAL

DEL HdlIdDef@@BlkEncReqFifoDepth from objs
HdlIdDef: BlkEncReqFifoDepth
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: int
            HdlOp: MAP_ASSOCIATION
                list: ops
                    HdlValueId: signed
    HdlValueInt: 1
    HdlDirection: INTERNAL

DEL HdlIdDef@@BlkEncAckFifoDepth from objs
HdlIdDef: BlkEncAckFifoDepth
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: int
            HdlOp: MAP_ASSOCIATION
                list: ops
                    HdlValueId: signed
    HdlValueInt: 1
    HdlDirection: INTERNAL

DEL HdlIdDef@@PDataFifoDepth from objs
HdlIdDef: PDataFifoDepth
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: int
            HdlOp: MAP_ASSOCIATION
                list: ops
                    HdlValueId: signed
    HdlValueInt: 1
    HdlDirection: INTERNAL

DEL HdlIdDef@@PDataFifoWidth from objs
HdlIdDef: PDataFifoWidth
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: int
            HdlOp: MAP_ASSOCIATION
                list: ops
                    HdlValueId: signed
    HdlValueId: SeedLen
    HdlDirection: INTERNAL

DEL HdlIdDef@@FinalFifoDepth from objs
HdlIdDef: FinalFifoDepth
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: int
            HdlOp: MAP_ASSOCIATION
                list: ops
                    HdlValueId: signed
    HdlValueInt: 1
    HdlDirection: INTERNAL


CommitId: 33e387ff92df07f8a334ab97a02becf08505a130
[csrng/rtl] Split cmd_sts into two registers
--- a/hw/ip/csrng/rtl/csrng_ctr_drbg_upd.sv
+++ b/hw/ip/csrng/rtl/csrng_ctr_drbg_upd.sv
@@ -166,9 +166,9 @@ module csrng_ctr_drbg_upd #(
     ReqSend = 4'b0110
   } blk_enc_state_e;
 
-  blk_enc_state_e blk_enc_state_d;
+  blk_enc_state_e blk_enc_state_d, blk_enc_state_q;
 
-  logic [BlkEncStateWidth-1:0] blk_enc_state_q;
+  logic [BlkEncStateWidth-1:0] blk_enc_state_raw_q;
 
   // This primitive is used to place a size-only constraint on the
   // flops in order to prevent FSM state encoding optimizations.

ParseResult:
INS HdlIdDef@@blk_enc_state_q to objs
HdlIdDef: blk_enc_state_q
    HdlDirection: INTERNAL

UPD HdlIdDef@@blk_enc_state_q to blk_enc_state_raw_q


CommitId: 33e387ff92df07f8a334ab97a02becf08505a130
[csrng/rtl] Split cmd_sts into two registers
--- a/hw/ip/csrng/rtl/csrng_ctr_drbg_upd.sv
+++ b/hw/ip/csrng/rtl/csrng_ctr_drbg_upd.sv
@@ -179,9 +179,11 @@ module csrng_ctr_drbg_upd #(
     .clk_i,
     .rst_ni,
     .d_i ( blk_enc_state_d ),
-    .q_o ( blk_enc_state_q )
+    .q_o ( blk_enc_state_raw_q )
   );
 
+  assign blk_enc_state_q = blk_enc_state_e'(blk_enc_state_raw_q);
+
   // Encoding generated with ./sparse-fsm-encode.py -d 3 -m 3 -n 6 -s 4062121537
   // Hamming distance histogram:
   //

ParseResult:
INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: CALL
        list: ops
            HdlValueId: blk_enc_state_e
            HdlValueId: blk_enc_state_raw_q
    HdlValueId: blk_enc_state_q


CommitId: 33e387ff92df07f8a334ab97a02becf08505a130
[csrng/rtl] Split cmd_sts into two registers
--- a/hw/ip/csrng/rtl/csrng_ctr_drbg_upd.sv
+++ b/hw/ip/csrng/rtl/csrng_ctr_drbg_upd.sv
@@ -204,9 +206,9 @@ module csrng_ctr_drbg_upd #(
     Shift   = 6'b110010
   } outblk_state_e;
 
-  outblk_state_e outblk_state_d;
+  outblk_state_e outblk_state_d, outblk_state_q;
 
-  logic [OutBlkStateWidth-1:0] outblk_state_q;
+  logic [OutBlkStateWidth-1:0] outblk_state_raw_q;
 
   // This primitive is used to place a size-only constraint on the
   // flops in order to prevent FSM state encoding optimizations.

ParseResult:
INS HdlIdDef@@outblk_state_q to objs
HdlIdDef: outblk_state_q
    HdlDirection: INTERNAL

UPD HdlIdDef@@outblk_state_q to outblk_state_raw_q


CommitId: 33e387ff92df07f8a334ab97a02becf08505a130
[csrng/rtl] Split cmd_sts into two registers
--- a/hw/ip/csrng/rtl/csrng_ctr_drbg_upd.sv
+++ b/hw/ip/csrng/rtl/csrng_ctr_drbg_upd.sv
@@ -217,9 +219,11 @@ module csrng_ctr_drbg_upd #(
     .clk_i,
     .rst_ni,
     .d_i ( outblk_state_d ),
-    .q_o ( outblk_state_q )
+    .q_o ( outblk_state_raw_q )
   );
 
+  assign outblk_state_q = outblk_state_e'(outblk_state_raw_q);
+
   always_ff @(posedge clk_i or negedge rst_ni)
     if (!rst_ni) begin
       v_ctr_q            <= '0;

ParseResult:
INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: CALL
        list: ops
            HdlValueId: outblk_state_e
            HdlValueId: outblk_state_raw_q
    HdlValueId: outblk_state_q


CommitId: 33e387ff92df07f8a334ab97a02becf08505a130
[csrng/rtl] Split cmd_sts into two registers
--- a/hw/ip/csrng/rtl/csrng_ctr_drbg_upd.sv
+++ b/hw/ip/csrng/rtl/csrng_ctr_drbg_upd.sv
@@ -303,7 +307,7 @@ module csrng_ctr_drbg_upd #(
   //--------------------------------------------
 
   always_comb begin
-    blk_enc_state_d = blk_enc_state_e'(blk_enc_state_q);
+    blk_enc_state_d = blk_enc_state_q;
     v_ctr_load = 1'b0;
     v_ctr_inc  = 1'b0;
     interate_ctr_inc  = 1'b0;

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@CALL to CALL
                MOV HdlValueId@@blk_enc_state_q to ops
                HdlValueId: blk_enc_state_q
                DEL HdlValueId@@blk_enc_state_e from ops
                DEL list@@ops from CALL
            DEL HdlOp@@CALL from ops


CommitId: 33e387ff92df07f8a334ab97a02becf08505a130
[csrng/rtl] Split cmd_sts into two registers
--- a/hw/ip/csrng/rtl/csrng_ctr_drbg_upd.sv
+++ b/hw/ip/csrng/rtl/csrng_ctr_drbg_upd.sv
@@ -462,7 +466,7 @@ module csrng_ctr_drbg_upd #(
   //--------------------------------------------
 
   always_comb begin
-    outblk_state_d = outblk_state_e'(outblk_state_q);
+    outblk_state_d = outblk_state_q;
     concat_ctr_inc  = 1'b0;
     concat_outblk_shift = 1'b0;
     sfifo_pdata_pop = 1'b0;
ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@CALL to CALL
                MOV HdlValueId@@outblk_state_q to ops
                HdlValueId: outblk_state_q
                DEL HdlValueId@@outblk_state_e from ops
                DEL list@@ops from CALL
            DEL HdlOp@@CALL from ops


CommitId: 966df62208479e46c1decd0c79a3490c8960bea1
[dv/pwrmgr] Generate dv environment
--- a/hw/ip/pwrmgr/dv/sva/pwrmgr_bind.sv
+++ b/hw/ip/pwrmgr/dv/sva/pwrmgr_bind.sv
@@ -6,21 +6,18 @@ module pwrmgr_bind;
 
   bind pwrmgr tlul_assert #(
     .EndpointType("Device")
-  )  tlul_assert_device (
+  ) tlul_assert_device (
     .clk_i,
     .rst_ni,
     .h2d  (tl_i),
     .d2h  (tl_o)
   );
 
-  import pwrmgr_reg_pkg::*;
   bind pwrmgr pwrmgr_csr_assert_fpv pwrmgr_csr_assert (
     .clk_i,
     .rst_ni,
     .h2d    (tl_i),
-    .d2h    (tl_o),
-    .reg2hw (reg2hw),
-    .hw2reg (hw2reg)
+    .d2h    (tl_o)
   );
 
 endmodule
ParseResult:
UPD HdlModuleDef@@pwrmgr_bind to pwrmgr_bind
    DEL HdlImport@@ from objs
    HdlImport
        list: path
            HdlValueId: pwrmgr_reg_pkg
            HdlAll


CommitId: 86144f7033cb38171990fb9bd5f5f0f8f85f0c5d
[usbdev] Fix issues discovered with linter
--- a/hw/ip/usbdev/rtl/usbdev_usbif.sv
+++ b/hw/ip/usbdev/rtl/usbdev_usbif.sv
@@ -122,7 +122,7 @@ module usbdev_usbif  #(
       // TODO: This code should be re-written to be more human-readable, in the
       // current state is hard to understand or verify
       out_max_used_next[0] = (out_max_used[PktW] & out_max_used[0]) ? 1'b1 : out_ep_put_addr[0];
-      out_max_used_next[PktW - 1: 1] = out_max_used[PktW] ? {PktW{1'b0}} : out_ep_put_addr[PktW - 1:1];
+      out_max_used_next[PktW - 1: 1] = out_max_used[PktW] ? '0 : out_ep_put_addr[PktW - 1:1];
       out_max_used_next[PktW] = (&out_max_used[PktW - 1:0]) | out_max_used[PktW];
     end else begin
       out_max_used_next = out_max_used;
ParseResult:
UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@TERNARY to TERNARY
                UPD HdlOp@@REPL_CONCAT to REPL_CONCAT
                    MOV HdlValueInt@@0 to ops
                    HdlValueInt: 0
                    DEL HdlValueId@@PktW from ops
                    DEL list@@ops from REPL_CONCAT
                DEL HdlOp@@REPL_CONCAT from ops


CommitId: 531ae5a6f1d589620a7b20af92f54665f84eac73
[fpv] formal compile fix required by VC Formal
--- a/hw/ip/otp_ctrl/rtl/otp_ctrl_scrmbl.sv
+++ b/hw/ip/otp_ctrl/rtl/otp_ctrl_scrmbl.sv
@@ -24,6 +24,8 @@ module otp_ctrl_scrmbl import otp_ctrl_pkg::*; (
   logic [PresentKeySize-1:0]    key_state_d, key_state_q;
   logic [PresentBlockSize-1:0]  data_state_d, data_state_low_q, data_state_high_q;
   logic [PresentBlockSize-1:0]  digest_state_d, digest_state_q;
+  logic [PresentBlockSize-1:0]  enc_data_out, dec_data_out;
+  logic [PresentKeySize-1:0]    dec_key_out, enc_key_out;
 
   typedef enum logic [2:0] {SelEncDataOut,
                             SelDecDataOut,
ParseResult:
INS HdlIdDef@@enc_data_out to objs
HdlIdDef: enc_data_out
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlOp: SUB
                        list: ops
                            HdlValueId: PresentBlockSize
                            HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: INTERNAL

INS HdlIdDef@@dec_data_out to objs
HdlIdDef: dec_data_out
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlOp: SUB
                        list: ops
                            HdlValueId: PresentBlockSize
                            HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: INTERNAL

INS HdlIdDef@@dec_key_out to objs
HdlIdDef: dec_key_out
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlOp: SUB
                        list: ops
                            HdlValueId: PresentKeySize
                            HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: INTERNAL

INS HdlIdDef@@enc_key_out to objs
HdlIdDef: enc_key_out
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlOp: SUB
                        list: ops
                            HdlValueId: PresentKeySize
                            HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: INTERNAL


CommitId: 19044edfb0b9485031557705595840bea41fb33d
[prim_secded] Use _i/_o suffix for port names
--- a/hw/ip/prim/rtl/prim_secded_39_32_enc.sv
+++ b/hw/ip/prim/rtl/prim_secded_39_32_enc.sv
@@ -5,19 +5,19 @@
 // SECDED encoder generated by util/design/secded_gen.py
 
 module prim_secded_39_32_enc (
-  input        [31:0] in,
-  output logic [38:0] out
+  input        [31:0] data_i,
+  output logic [38:0] data_o
 );
 
   always_comb begin : p_encode
-    out = 39'(in);
-    out[32] = ^(out & 39'h002606BD25);
-    out[33] = ^(out & 39'h00DEBA8050);
-    out[34] = ^(out & 39'h00413D89AA);
-    out[35] = ^(out & 39'h0031234ED1);
-    out[36] = ^(out & 39'h00C2C1323B);
-    out[37] = ^(out & 39'h002DCC624C);
-    out[38] = ^(out & 39'h0098505586);
+    data_o = 39'(data_i);
+    data_o[32] = ^(data_o & 39'h002606BD25);
+    data_o[33] = ^(data_o & 39'h00DEBA8050);
+    data_o[34] = ^(data_o & 39'h00413D89AA);
+    data_o[35] = ^(data_o & 39'h0031234ED1);
+    data_o[36] = ^(data_o & 39'h00C2C1323B);
+    data_o[37] = ^(data_o & 39'h002DCC624C);
+    data_o[38] = ^(data_o & 39'h0098505586);
   end
 
 endmodule : prim_secded_39_32_enc
ParseResult:
UPD HdlIdDef@@in to data_i

UPD HdlIdDef@@out to data_o

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@out to data_o
            UPD HdlOp@@CALL to CALL
                UPD HdlValueId@@in to data_i
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@INDEX to INDEX
                UPD HdlValueId@@out to data_o
            UPD HdlOp@@XOR_UNARY to XOR_UNARY
                UPD HdlOp@@AND to AND
                    UPD HdlValueId@@out to data_o
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@INDEX to INDEX
                UPD HdlValueId@@out to data_o
            UPD HdlOp@@XOR_UNARY to XOR_UNARY
                UPD HdlOp@@AND to AND
                    UPD HdlValueId@@out to data_o
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@INDEX to INDEX
                UPD HdlValueId@@out to data_o
            UPD HdlOp@@XOR_UNARY to XOR_UNARY
                UPD HdlOp@@AND to AND
                    UPD HdlValueId@@out to data_o
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@INDEX to INDEX
                UPD HdlValueId@@out to data_o
            UPD HdlOp@@XOR_UNARY to XOR_UNARY
                UPD HdlOp@@AND to AND
                    UPD HdlValueId@@out to data_o
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@INDEX to INDEX
                UPD HdlValueId@@out to data_o
            UPD HdlOp@@XOR_UNARY to XOR_UNARY
                UPD HdlOp@@AND to AND
                    UPD HdlValueId@@out to data_o
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@INDEX to INDEX
                UPD HdlValueId@@out to data_o
            UPD HdlOp@@XOR_UNARY to XOR_UNARY
                UPD HdlOp@@AND to AND
                    UPD HdlValueId@@out to data_o
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@INDEX to INDEX
                UPD HdlValueId@@out to data_o
            UPD HdlOp@@XOR_UNARY to XOR_UNARY
                UPD HdlOp@@AND to AND
                    UPD HdlValueId@@out to data_o


CommitId: 1a1b94d01fd7022438e2bd651e48ad2d99e3abca
Update lowrisc_ibex to lowRISC/ibex@6b9165f
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_ex_block.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_ex_block.sv
@@ -9,10 +9,10 @@
  * Execution block: Hosts ALU and MUL/DIV unit
  */
 module ibex_ex_block #(
-    parameter bit RV32M                    = 1,
-    parameter bit RV32B                    = 0,
-    parameter bit BranchTargetALU          = 0,
-    parameter     MultiplierImplementation = "fast"
+    parameter bit               RV32M                    = 1,
+    parameter ibex_pkg::rv32b_e RV32B                    = ibex_pkg::RV32BNone,
+    parameter bit               BranchTargetALU          = 0,
+    parameter                   MultiplierImplementation = "fast"
 ) (
     input  logic                  clk_i,
     input  logic                  rst_ni,

ParseResult:
UPD HdlIdDef@@RV32B to RV32B
    UPD HdlOp@@PARAMETRIZATION to DOUBLE_COLON
    UPD HdlOp@@PARAMETRIZATION to PARAMETRIZATION
        UPD HdlValueId@@bit to ibex_pkg
    DEL HdlValueInt@@0 from RV32B

UPD HdlIdDef@@RV32B to RV32B
    INS HdlOp@@DOUBLE_COLON to RV32B
    HdlOp: DOUBLE_COLON
        list: ops
            HdlValueId: ibex_pkg
            HdlValueId: RV32BNone
    UPD HdlOp@@DOUBLE_COLON to DOUBLE_COLON
        INS HdlValueId@@rv32b_e to ops


CommitId: 1a1b94d01fd7022438e2bd651e48ad2d99e3abca
Update lowrisc_ibex to lowRISC/ibex@6b9165f
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_ex_block.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_ex_block.sv
@@ -41,9 +41,9 @@ module ibex_ex_block #(
     input  logic                  data_ind_timing_i,
 
     // intermediate val reg
-    output logic                  imd_val_we_o,
-    output logic [33:0]           imd_val_d_o,
-    input  logic [33:0]           imd_val_q_i,
+    output logic [1:0]            imd_val_we_o,
+    output logic [33:0]           imd_val_d_o[2],
+    input  logic [33:0]           imd_val_q_i[2],
 
     // Outputs
     output logic [31:0]           alu_adder_result_ex_o, // to LSU

ParseResult:
UPD HdlIdDef@@imd_val_d_o to imd_val_d_o
    INS HdlOp@@INDEX to imd_val_d_o
    UPD HdlOp@@INDEX to INDEX
        INS list@@ops to INDEX
        INS HdlValueInt@@2 to ops

UPD HdlIdDef@@imd_val_q_i to imd_val_q_i
    INS HdlOp@@INDEX to imd_val_q_i
    UPD HdlOp@@INDEX to INDEX
        INS list@@ops to INDEX
        INS HdlValueInt@@2 to ops

UPD HdlIdDef@@imd_val_we_o to imd_val_we_o
    UPD HdlOp@@PARAMETRIZATION to PARAMETRIZATION
        INS HdlOp@@DOWNTO to ops
        HdlOp: DOWNTO
            list: ops
                HdlValueInt: 1
                HdlValueInt: 0

UPD HdlIdDef@@imd_val_d_o to imd_val_d_o
    MOV HdlOp@@PARAMETRIZATION to imd_val_d_o
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 33
                    HdlValueInt: 0

UPD HdlIdDef@@imd_val_q_i to imd_val_q_i
    MOV HdlOp@@PARAMETRIZATION to imd_val_q_i
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 33
                    HdlValueInt: 0


CommitId: 1a1b94d01fd7022438e2bd651e48ad2d99e3abca
Update lowrisc_ibex to lowRISC/ibex@6b9165f
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_ex_block.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_ex_block.sv
@@ -63,10 +63,11 @@ module ibex_ex_block #(
   logic        alu_cmp_result, alu_is_equal_result;
   logic        multdiv_valid;
   logic        multdiv_sel;
-  logic [31:0] alu_imd_val_d;
-  logic        alu_imd_val_we;
-  logic [33:0] multdiv_imd_val_d;
-  logic        multdiv_imd_val_we;
+  logic [31:0] alu_imd_val_q[2];
+  logic [31:0] alu_imd_val_d[2];
+  logic [ 1:0] alu_imd_val_we;
+  logic [33:0] multdiv_imd_val_d[2];
+  logic [ 1:0] multdiv_imd_val_we;
 
   /*
     The multdiv_i output is never selected if RV32M=0

ParseResult:
INS HdlIdDef@@alu_imd_val_q to objs
HdlIdDef: alu_imd_val_q
    HdlOp: INDEX
        list: ops
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: logic
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 31
                            HdlValueInt: 0
            HdlValueInt: 2
    HdlDirection: INTERNAL

UPD HdlIdDef@@alu_imd_val_d to alu_imd_val_d
    INS HdlOp@@INDEX to alu_imd_val_d
    UPD HdlOp@@INDEX to INDEX
        INS list@@ops to INDEX
        INS HdlValueInt@@2 to ops

UPD HdlIdDef@@alu_imd_val_d to alu_imd_val_d
    MOV HdlOp@@PARAMETRIZATION to alu_imd_val_d
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 31
                    HdlValueInt: 0

UPD HdlIdDef@@alu_imd_val_we to alu_imd_val_we
    UPD HdlOp@@PARAMETRIZATION to PARAMETRIZATION
        INS HdlOp@@DOWNTO to ops
        HdlOp: DOWNTO
            list: ops
                HdlValueInt: 1
                HdlValueInt: 0

UPD HdlIdDef@@multdiv_imd_val_d to multdiv_imd_val_d
    MOV HdlOp@@PARAMETRIZATION to multdiv_imd_val_d
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 33
                    HdlValueInt: 0


CommitId: 1a1b94d01fd7022438e2bd651e48ad2d99e3abca
Update lowrisc_ibex to lowRISC/ibex@6b9165f
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_ex_block.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_ex_block.sv
@@ -80,8 +81,11 @@ module ibex_ex_block #(
   end
 
   // Intermediate Value Register Mux
-  assign imd_val_d_o  = multdiv_sel ? multdiv_imd_val_d : {2'b0, alu_imd_val_d};
-  assign imd_val_we_o = multdiv_sel ? multdiv_imd_val_we : alu_imd_val_we;
+  assign imd_val_d_o[0] = multdiv_sel ? multdiv_imd_val_d[0] : {2'b0, alu_imd_val_d[0]};
+  assign imd_val_d_o[1] = multdiv_sel ? multdiv_imd_val_d[1] : {2'b0, alu_imd_val_d[1]};
+  assign imd_val_we_o   = multdiv_sel ? multdiv_imd_val_we : alu_imd_val_we;
+
+  assign alu_imd_val_q = '{imd_val_q_i[0][31:0], imd_val_q_i[1][31:0]};
 
   assign result_ex_o  = multdiv_sel ? multdiv_result : alu_result;
 

ParseResult:
INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: TERNARY
        list: ops
            HdlValueId: multdiv_sel
            HdlOp: INDEX
                list: ops
                    HdlValueId: multdiv_imd_val_d
                    HdlValueInt: 1
            HdlOp: CONCAT
                list: ops
                    HdlValueInt: 0
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: alu_imd_val_d
                            HdlValueInt: 1
    HdlOp: INDEX
        list: ops
            HdlValueId: imd_val_d_o
            HdlValueInt: 1

INS HdlStmAssign@@ to objs

UPD HdlStmAssign@@ to 
    INS HdlOp@@INDEX to 
    UPD HdlOp@@INDEX to INDEX
        INS list@@ops to INDEX
        INS HdlValueInt@@0 to ops
    UPD HdlOp@@TERNARY to TERNARY
        INS HdlOp@@INDEX to ops
        UPD HdlOp@@INDEX to INDEX
            INS list@@ops to INDEX
            INS HdlValueInt@@0 to ops
        UPD HdlOp@@CONCAT to CONCAT
            INS HdlOp@@INDEX to ops
            UPD HdlOp@@INDEX to INDEX
                INS list@@ops to INDEX
                INS HdlValueInt@@0 to ops

UPD HdlStmAssign@@ to 
    MOV HdlValueId@@imd_val_d_o to 
    HdlValueId: imd_val_d_o
    UPD HdlOp@@TERNARY to TERNARY
        MOV HdlValueId@@multdiv_imd_val_d to ops
        HdlValueId: multdiv_imd_val_d
        UPD HdlOp@@CONCAT to CONCAT
            MOV HdlValueId@@alu_imd_val_d to ops
            HdlValueId: alu_imd_val_d


CommitId: 1a1b94d01fd7022438e2bd651e48ad2d99e3abca
Update lowrisc_ibex to lowRISC/ibex@6b9165f
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_ex_block.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_ex_block.sv
@@ -218,6 +222,6 @@ module ibex_ex_block #(
   // Multiplier/divider may require multiple cycles. The ALU output is valid in the same cycle
   // unless the intermediate result register is being written (which indicates this isn't the
   // final cycle of ALU operation).
-  assign ex_valid_o = multdiv_sel ? multdiv_valid : !alu_imd_val_we;
+  assign ex_valid_o = multdiv_sel ? multdiv_valid : ~(|alu_imd_val_we);
 
 endmodule
ParseResult:
UPD HdlStmAssign@@ to 
    UPD HdlOp@@TERNARY to TERNARY
        MOV HdlValueId@@multdiv_sel to ops
        HdlValueId: multdiv_sel
        MOV HdlValueId@@multdiv_valid to ops
        HdlValueId: multdiv_valid
        UPD HdlOp@@NEG_LOG to OR_UNARY
    UPD HdlOp@@TERNARY to NEG
    MOV HdlOp@@TERNARY to 
    HdlOp: TERNARY
        list: ops
            HdlValueId: multdiv_sel
            HdlValueId: multdiv_valid
            HdlOp: NEG_LOG
                list: ops
                    HdlValueId: alu_imd_val_we


CommitId: e741715e7b9ee4e5c1913afbbd175832aca20530
[i2c, rtl] Fixed Lint warnings
--- a/hw/ip/i2c/rtl/i2c_fsm.sv
+++ b/hw/ip/i2c/rtl/i2c_fsm.sv
@@ -126,20 +126,20 @@ module i2c_fsm (
     tcount_d = tcount_q;
     if (load_tcount) begin
       unique case (tcount_sel)
-        tSetupStart : tcount_d = t_r_i + tsu_sta_i;
-        tHoldStart  : tcount_d = t_f_i + thd_sta_i;
+        tSetupStart : tcount_d = 20'(t_r_i) + 20'(tsu_sta_i);
+        tHoldStart  : tcount_d = 20'(t_f_i) + 20'(thd_sta_i);
         tClockStart : tcount_d = 20'(thd_dat_i);
-        tClockLow   : tcount_d = tlow_i - t_r_i - tsu_dat_i - thd_dat_i;
-        tSetupBit   : tcount_d = t_r_i + tsu_dat_i;
-        tClockPulse : tcount_d = t_r_i + thigh_i + t_f_i;
-        tHoldBit    : tcount_d = t_f_i + thd_dat_i;
-        tClockStop  : tcount_d = t_f_i + tlow_i - thd_dat_i;
-        tSetupStop  : tcount_d = t_r_i + tsu_sto_i;
-        tHoldStop   : tcount_d = t_r_i + t_buf_i - tsu_sta_i;
+        tClockLow   : tcount_d = 20'(tlow_i) - 20'(t_r_i) - 20'(tsu_dat_i) - 20'(thd_dat_i);
+        tSetupBit   : tcount_d = 20'(t_r_i) + 20'(tsu_dat_i);
+        tClockPulse : tcount_d = 20'(t_r_i) + 20'(thigh_i) + 20'(t_f_i);
+        tHoldBit    : tcount_d = 20'(t_f_i) + 20'(thd_dat_i);
+        tClockStop  : tcount_d = 20'(t_f_i) + 20'(tlow_i) - 20'(thd_dat_i);
+        tSetupStop  : tcount_d = 20'(t_r_i) + 20'(tsu_sto_i);
+        tHoldStop   : tcount_d = 20'(t_r_i) + 20'(t_buf_i) - 20'(tsu_sta_i);
         tNoDelay    : tcount_d = 20'h00001;
         default     : tcount_d = 20'h00001;
       endcase
-    end else if (stretch == 0) begin
+    end else if (stretch == '0) begin
       tcount_d = tcount_q - 1'b1;
     end else begin
       tcount_d = tcount_q;  // pause timer if clock is stretched

ParseResult:
INS HdlStmProcess@@ to objs

UPD HdlStmProcess@@ to 
    INS HdlStmBlock@@SEQ to 
    INS HdlStmProcessTriggerConstrain@@COMB to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: tcount_d
                HdlValueId: tcount_q
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL HdlStmProcessTriggerConstrain@@COMB from 

INS HdlStmIf@@ to body

UPD HdlStmIf@@ to 
    INS HdlValueId@@load_tcount to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmIf@@ to 
    MOV list@@elifs to 
    list: elifs
        tuple
            HdlOp: EQ
                list: ops
                    HdlValueId: stretch
                    HdlValueInt: 0
            HdlStmBlock: SEQ
                list: body
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: tcount_d
                            HdlOp: SUB
                                list: ops
                                    HdlValueId: tcount_q
                                    HdlValueInt: 1
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: tcount_d
                    HdlValueId: tcount_q
    DEL HdlValueId@@load_tcount from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 

INS HdlStmCase@@tcount_sel to body

UPD HdlStmCase@@tcount_sel to tcount_sel
    INS HdlStmCaseType@@CASE to tcount_sel
    INS HdlValueId@@tcount_sel to tcount_sel
    INS list@@cases to tcount_sel
    INS HdlStmCaseUniqConstrain@@UNIQUE to tcount_sel
    INS tuple@@ to cases
    tuple
        HdlValueId: tSetupStart
        HdlOp: ASSIGN
            list: ops
                HdlValueId: tcount_d
                HdlOp: ADD
                    list: ops
                        HdlOp: CALL
                            list: ops
                                HdlValueInt: 20
                                HdlValueId: t_r_i
                        HdlOp: CALL
                            list: ops
                                HdlValueInt: 20
                                HdlValueId: tsu_sta_i
    INS tuple@@ to cases
    tuple
        HdlValueId: tHoldStart
        HdlOp: ASSIGN
            list: ops
                HdlValueId: tcount_d
                HdlOp: ADD
                    list: ops
                        HdlOp: CALL
                            list: ops
                                HdlValueInt: 20
                                HdlValueId: t_f_i
                        HdlOp: CALL
                            list: ops
                                HdlValueInt: 20
                                HdlValueId: thd_sta_i
    INS tuple@@ to cases
    tuple
        HdlValueId: tClockLow
        HdlOp: ASSIGN
            list: ops
                HdlValueId: tcount_d
                HdlOp: SUB
                    list: ops
                        HdlOp: SUB
                            list: ops
                                HdlOp: SUB
                                    list: ops
                                        HdlOp: CALL
                                            list: ops
                                                HdlValueInt: 20
                                                HdlValueId: tlow_i
                                        HdlOp: CALL
                                            list: ops
                                                HdlValueInt: 20
                                                HdlValueId: t_r_i
                                HdlOp: CALL
                                    list: ops
                                        HdlValueInt: 20
                                        HdlValueId: tsu_dat_i
                        HdlOp: CALL
                            list: ops
                                HdlValueInt: 20
                                HdlValueId: thd_dat_i
    INS tuple@@ to cases
    tuple
        HdlValueId: tSetupBit
        HdlOp: ASSIGN
            list: ops
                HdlValueId: tcount_d
                HdlOp: ADD
                    list: ops
                        HdlOp: CALL
                            list: ops
                                HdlValueInt: 20
                                HdlValueId: t_r_i
                        HdlOp: CALL
                            list: ops
                                HdlValueInt: 20
                                HdlValueId: tsu_dat_i
    INS tuple@@ to cases
    tuple
        HdlValueId: tClockPulse
        HdlOp: ASSIGN
            list: ops
                HdlValueId: tcount_d
                HdlOp: ADD
                    list: ops
                        HdlOp: ADD
                            list: ops
                                HdlOp: CALL
                                    list: ops
                                        HdlValueInt: 20
                                        HdlValueId: t_r_i
                                HdlOp: CALL
                                    list: ops
                                        HdlValueInt: 20
                                        HdlValueId: thigh_i
                        HdlOp: CALL
                            list: ops
                                HdlValueInt: 20
                                HdlValueId: t_f_i
    INS tuple@@ to cases
    tuple
        HdlValueId: tHoldBit
        HdlOp: ASSIGN
            list: ops
                HdlValueId: tcount_d
                HdlOp: ADD
                    list: ops
                        HdlOp: CALL
                            list: ops
                                HdlValueInt: 20
                                HdlValueId: t_f_i
                        HdlOp: CALL
                            list: ops
                                HdlValueInt: 20
                                HdlValueId: thd_dat_i
    INS tuple@@ to cases
    tuple
        HdlValueId: tClockStop
        HdlOp: ASSIGN
            list: ops
                HdlValueId: tcount_d
                HdlOp: SUB
                    list: ops
                        HdlOp: ADD
                            list: ops
                                HdlOp: CALL
                                    list: ops
                                        HdlValueInt: 20
                                        HdlValueId: t_f_i
                                HdlOp: CALL
                                    list: ops
                                        HdlValueInt: 20
                                        HdlValueId: tlow_i
                        HdlOp: CALL
                            list: ops
                                HdlValueInt: 20
                                HdlValueId: thd_dat_i
    INS tuple@@ to cases
    tuple
        HdlValueId: tSetupStop
        HdlOp: ASSIGN
            list: ops
                HdlValueId: tcount_d
                HdlOp: ADD
                    list: ops
                        HdlOp: CALL
                            list: ops
                                HdlValueInt: 20
                                HdlValueId: t_r_i
                        HdlOp: CALL
                            list: ops
                                HdlValueInt: 20
                                HdlValueId: tsu_sto_i
    INS tuple@@ to cases
    tuple
        HdlValueId: tHoldStop
        HdlOp: ASSIGN
            list: ops
                HdlValueId: tcount_d
                HdlOp: SUB
                    list: ops
                        HdlOp: ADD
                            list: ops
                                HdlOp: CALL
                                    list: ops
                                        HdlValueInt: 20
                                        HdlValueId: t_r_i
                                HdlOp: CALL
                                    list: ops
                                        HdlValueInt: 20
                                        HdlValueId: t_buf_i
                        HdlOp: CALL
                            list: ops
                                HdlValueInt: 20
                                HdlValueId: tsu_sta_i

UPD HdlStmCase@@tcount_sel to tcount_sel
    MOV HdlOp@@ASSIGN to tcount_sel
    HdlOp: ASSIGN
        list: ops
            HdlValueId: tcount_d
            HdlValueInt: 00001
    MOV tuple@@ to cases
    tuple
        HdlValueId: tClockStart
        HdlOp: ASSIGN
            list: ops
                HdlValueId: tcount_d
                HdlOp: CALL
                    list: ops
                        HdlValueInt: 20
                        HdlValueId: thd_dat_i
    MOV tuple@@ to cases
    tuple
        HdlValueId: tNoDelay
        HdlOp: ASSIGN
            list: ops
                HdlValueId: tcount_d
                HdlValueInt: 00001
    DEL HdlStmCaseType@@CASE from tcount_sel
    DEL HdlValueId@@tcount_sel from tcount_sel
    DEL tuple@@ from cases
    tuple
        HdlValueId: tSetupStart
        HdlOp: ASSIGN
            list: ops
                HdlValueId: tcount_d
                HdlOp: ADD
                    list: ops
                        HdlValueId: t_r_i
                        HdlValueId: tsu_sta_i
    DEL tuple@@ from cases
    tuple
        HdlValueId: tHoldStart
        HdlOp: ASSIGN
            list: ops
                HdlValueId: tcount_d
                HdlOp: ADD
                    list: ops
                        HdlValueId: t_f_i
                        HdlValueId: thd_sta_i
    DEL tuple@@ from cases
    tuple
        HdlValueId: tClockLow
        HdlOp: ASSIGN
            list: ops
                HdlValueId: tcount_d
                HdlOp: SUB
                    list: ops
                        HdlOp: SUB
                            list: ops
                                HdlOp: SUB
                                    list: ops
                                        HdlValueId: tlow_i
                                        HdlValueId: t_r_i
                                HdlValueId: tsu_dat_i
                        HdlValueId: thd_dat_i
    DEL tuple@@ from cases
    tuple
        HdlValueId: tSetupBit
        HdlOp: ASSIGN
            list: ops
                HdlValueId: tcount_d
                HdlOp: ADD
                    list: ops
                        HdlValueId: t_r_i
                        HdlValueId: tsu_dat_i
    DEL tuple@@ from cases
    tuple
        HdlValueId: tClockPulse
        HdlOp: ASSIGN
            list: ops
                HdlValueId: tcount_d
                HdlOp: ADD
                    list: ops
                        HdlOp: ADD
                            list: ops
                                HdlValueId: t_r_i
                                HdlValueId: thigh_i
                        HdlValueId: t_f_i
    DEL tuple@@ from cases
    tuple
        HdlValueId: tHoldBit
        HdlOp: ASSIGN
            list: ops
                HdlValueId: tcount_d
                HdlOp: ADD
                    list: ops
                        HdlValueId: t_f_i
                        HdlValueId: thd_dat_i
    DEL tuple@@ from cases
    tuple
        HdlValueId: tClockStop
        HdlOp: ASSIGN
            list: ops
                HdlValueId: tcount_d
                HdlOp: SUB
                    list: ops
                        HdlOp: ADD
                            list: ops
                                HdlValueId: t_f_i
                                HdlValueId: tlow_i
                        HdlValueId: thd_dat_i
    DEL tuple@@ from cases
    tuple
        HdlValueId: tSetupStop
        HdlOp: ASSIGN
            list: ops
                HdlValueId: tcount_d
                HdlOp: ADD
                    list: ops
                        HdlValueId: t_r_i
                        HdlValueId: tsu_sto_i
    DEL tuple@@ from cases
    tuple
        HdlValueId: tHoldStop
        HdlOp: ASSIGN
            list: ops
                HdlValueId: tcount_d
                HdlOp: SUB
                    list: ops
                        HdlOp: ADD
                            list: ops
                                HdlValueId: t_r_i
                                HdlValueId: t_buf_i
                        HdlValueId: tsu_sta_i
    DEL list@@cases from tcount_sel
    DEL HdlStmCaseUniqConstrain@@UNIQUE from tcount_sel

DEL HdlStmCase@@tcount_sel from body

DEL HdlStmIf@@ from body

DEL HdlStmProcess@@ from objs


CommitId: 4f735bc6e72691152b3a87dd7d29bb394be5c785
Update lowrisc_ibex to lowRISC/ibex@dd39ec0
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_register_file_fpga.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_register_file_fpga.sv
@@ -12,14 +12,16 @@
  * FPGA architectures, it will produce RAM32M primitives. Other vendors have not yet been tested.
  */
 module ibex_register_file #(
-  parameter bit RV32E              = 0,
-  parameter int unsigned DataWidth = 32
+  parameter bit          RV32E             = 0,
+  parameter int unsigned DataWidth         = 32,
+  parameter bit          DummyInstructions = 0
 ) (
   // Clock and Reset
   input  logic                 clk_i,
   input  logic                 rst_ni,
 
   input  logic                 test_en_i,
+  input  logic                 dummy_instr_id_i,
 
   //Read port R1
   input  logic [          4:0] raddr_a_i,

ParseResult:
INS HdlIdDef@@DummyInstructions to params
HdlIdDef: DummyInstructions
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: bit
    HdlValueInt: 0
    HdlDirection: INTERNAL

INS HdlIdDef@@dummy_instr_id_i to ports
HdlIdDef: dummy_instr_id_i
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: IN


CommitId: 4f735bc6e72691152b3a87dd7d29bb394be5c785
Update lowrisc_ibex to lowRISC/ibex@dd39ec0
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_register_file_fpga.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_register_file_fpga.sv
@@ -54,4 +56,12 @@ module ibex_register_file #(
     end
   end : sync_write
 
+  // Reset not used in this register file version
+  logic unused_rst_ni;
+  assign unused_rst_ni = rst_ni;
+
+  // Dummy instruction changes not relevant for FPGA implementation
+  logic unused_dummy_instr;
+  assign unused_dummy_instr = dummy_instr_id_i;
+
 endmodule : ibex_register_file
ParseResult:
INS HdlIdDef@@unused_rst_ni to objs
HdlIdDef: unused_rst_ni
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlValueId: rst_ni
    HdlValueId: unused_rst_ni

INS HdlIdDef@@unused_dummy_instr to objs
HdlIdDef: unused_dummy_instr
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlValueId: dummy_instr_id_i
    HdlValueId: unused_dummy_instr


CommitId: e96730f7612a3fb85637d8d91645355806752c8a
[flash_ctrl] Add ECC to program / erase datapaths
--- a/hw/ip/prim/rtl/prim_secded_72_64_enc.sv
+++ b/hw/ip/prim/rtl/prim_secded_72_64_enc.sv
@@ -75,27 +75,27 @@ module prim_secded_72_64_enc (
   assign out[63] = in[63] ;
   assign out[64] = in[0] ^ in[1] ^ in[2] ^ in[3] ^ in[4] ^ in[5] ^ in[6] ^ in[7] ^ in[8] ^ in[9]
                  ^ in[10] ^ in[11] ^ in[12] ^ in[13] ^ in[14] ^ in[15] ^ in[16] ^ in[17] ^ in[18]
-                 ^ in[19] ^ in[20] ^ in[57] ^ in[58] ^ in[61] ^ in[62] ^ in[63];
+                 ^ in[19] ^ in[20] ^ in[57] ^ in[59] ^ in[60] ^ in[61] ^ in[62];
   assign out[65] = in[0] ^ in[1] ^ in[2] ^ in[3] ^ in[4] ^ in[5] ^ in[21] ^ in[22] ^ in[23] ^ in[24]
                  ^ in[25] ^ in[26] ^ in[27] ^ in[28] ^ in[29] ^ in[30] ^ in[31] ^ in[32] ^ in[33]
-                 ^ in[34] ^ in[35] ^ in[58] ^ in[59] ^ in[60] ^ in[62] ^ in[63];
+                 ^ in[34] ^ in[35] ^ in[56] ^ in[57] ^ in[60] ^ in[62] ^ in[63];
   assign out[66] = in[0] ^ in[6] ^ in[7] ^ in[8] ^ in[9] ^ in[10] ^ in[21] ^ in[22] ^ in[23]
                  ^ in[24] ^ in[25] ^ in[36] ^ in[37] ^ in[38] ^ in[39] ^ in[40] ^ in[41] ^ in[42]
-                 ^ in[43] ^ in[44] ^ in[45] ^ in[56] ^ in[57] ^ in[59] ^ in[60] ^ in[63];
+                 ^ in[43] ^ in[44] ^ in[45] ^ in[56] ^ in[57] ^ in[58] ^ in[61] ^ in[62];
   assign out[67] = in[1] ^ in[6] ^ in[11] ^ in[12] ^ in[13] ^ in[14] ^ in[21] ^ in[26] ^ in[27]
                  ^ in[28] ^ in[29] ^ in[36] ^ in[37] ^ in[38] ^ in[39] ^ in[46] ^ in[47] ^ in[48]
-                 ^ in[49] ^ in[50] ^ in[51] ^ in[56] ^ in[57] ^ in[58] ^ in[61] ^ in[63];
+                 ^ in[49] ^ in[50] ^ in[51] ^ in[56] ^ in[58] ^ in[59] ^ in[62] ^ in[63];
   assign out[68] = in[2] ^ in[7] ^ in[11] ^ in[15] ^ in[16] ^ in[17] ^ in[22] ^ in[26] ^ in[30]
                  ^ in[31] ^ in[32] ^ in[36] ^ in[40] ^ in[41] ^ in[42] ^ in[46] ^ in[47] ^ in[48]
-                 ^ in[52] ^ in[53] ^ in[54] ^ in[56] ^ in[58] ^ in[59] ^ in[61] ^ in[62];
+                 ^ in[52] ^ in[53] ^ in[54] ^ in[58] ^ in[59] ^ in[60] ^ in[61] ^ in[63];
   assign out[69] = in[3] ^ in[8] ^ in[12] ^ in[15] ^ in[18] ^ in[19] ^ in[23] ^ in[27] ^ in[30]
                  ^ in[33] ^ in[34] ^ in[37] ^ in[40] ^ in[43] ^ in[44] ^ in[46] ^ in[49] ^ in[50]
-                 ^ in[52] ^ in[53] ^ in[55] ^ in[56] ^ in[57] ^ in[59] ^ in[60] ^ in[61];
+                 ^ in[52] ^ in[53] ^ in[55] ^ in[56] ^ in[57] ^ in[58] ^ in[60] ^ in[63];
   assign out[70] = in[4] ^ in[9] ^ in[13] ^ in[16] ^ in[18] ^ in[20] ^ in[24] ^ in[28] ^ in[31]
                  ^ in[33] ^ in[35] ^ in[38] ^ in[41] ^ in[43] ^ in[45] ^ in[47] ^ in[49] ^ in[51]
-                 ^ in[52] ^ in[54] ^ in[55] ^ in[56] ^ in[59] ^ in[60] ^ in[61] ^ in[62];
+                 ^ in[52] ^ in[54] ^ in[55] ^ in[56] ^ in[57] ^ in[59] ^ in[61] ^ in[63];
   assign out[71] = in[5] ^ in[10] ^ in[14] ^ in[17] ^ in[19] ^ in[20] ^ in[25] ^ in[29] ^ in[32]
                  ^ in[34] ^ in[35] ^ in[39] ^ in[42] ^ in[44] ^ in[45] ^ in[48] ^ in[50] ^ in[51]
-                 ^ in[53] ^ in[54] ^ in[55] ^ in[57] ^ in[58] ^ in[60] ^ in[62] ^ in[63];
+                 ^ in[53] ^ in[54] ^ in[55] ^ in[58] ^ in[59] ^ in[60] ^ in[61] ^ in[62];
 endmodule
 
ParseResult:
UPD HdlStmAssign@@ to 
    UPD HdlOp@@XOR to XOR
        MOV HdlOp@@XOR to ops
        HdlOp: XOR
            list: ops
                HdlOp: XOR
                    list: ops
                        HdlOp: XOR
                            list: ops
                                HdlOp: XOR
                                    list: ops
                                        HdlOp: XOR
                                            list: ops
                                                HdlOp: XOR
                                                    list: ops
                                                        HdlOp: XOR
                                                            list: ops
                                                                HdlOp: XOR
                                                                    list: ops
                                                                        HdlOp: XOR
                                                                            list: ops
                                                                                HdlOp: XOR
                                                                                    list: ops
                                                                                        HdlOp: XOR
                                                                                            list: ops
                                                                                                HdlOp: XOR
                                                                                                    list: ops
                                                                                                        HdlOp: XOR
                                                                                                            list: ops
                                                                                                                HdlOp: XOR
                                                                                                                    list: ops
                                                                                                                        HdlOp: XOR
                                                                                                                            list: ops
                                                                                                                                HdlOp: XOR
                                                                                                                                    list: ops
                                                                                                                                        HdlOp: XOR
                                                                                                                                            list: ops
                                                                                                                                                HdlOp: XOR
                                                                                                                                                    list: ops
                                                                                                                                                        HdlOp: XOR
                                                                                                                                                            list: ops
                                                                                                                                                                HdlOp: XOR
                                                                                                                                                                    list: ops
                                                                                                                                                                        HdlOp: XOR
                                                                                                                                                                            list: ops
                                                                                                                                                                                HdlOp: XOR
                                                                                                                                                                                    list: ops
                                                                                                                                                                                        HdlOp: XOR
                                                                                                                                                                                            list: ops
                                                                                                                                                                                                HdlOp: XOR
                                                                                                                                                                                                    list: ops
                                                                                                                                                                                                        HdlOp: INDEX
                                                                                                                                                                                                            list: ops
                                                                                                                                                                                                                HdlValueId: in
                                                                                                                                                                                                                HdlValueInt: 0
                                                                                                                                                                                                        HdlOp: INDEX
                                                                                                                                                                                                            list: ops
                                                                                                                                                                                                                HdlValueId: in
                                                                                                                                                                                                                HdlValueInt: 1
                                                                                                                                                                                                HdlOp: INDEX
                                                                                                                                                                                                    list: ops
                                                                                                                                                                                                        HdlValueId: in
                                                                                                                                                                                                        HdlValueInt: 2
                                                                                                                                                                                        HdlOp: INDEX
                                                                                                                                                                                            list: ops
                                                                                                                                                                                                HdlValueId: in
                                                                                                                                                                                                HdlValueInt: 3
                                                                                                                                                                                HdlOp: INDEX
                                                                                                                                                                                    list: ops
                                                                                                                                                                                        HdlValueId: in
                                                                                                                                                                                        HdlValueInt: 4
                                                                                                                                                                        HdlOp: INDEX
                                                                                                                                                                            list: ops
                                                                                                                                                                                HdlValueId: in
                                                                                                                                                                                HdlValueInt: 5
                                                                                                                                                                HdlOp: INDEX
                                                                                                                                                                    list: ops
                                                                                                                                                                        HdlValueId: in
                                                                                                                                                                        HdlValueInt: 6
                                                                                                                                                        HdlOp: INDEX
                                                                                                                                                            list: ops
                                                                                                                                                                HdlValueId: in
                                                                                                                                                                HdlValueInt: 7
                                                                                                                                                HdlOp: INDEX
                                                                                                                                                    list: ops
                                                                                                                                                        HdlValueId: in
                                                                                                                                                        HdlValueInt: 8
                                                                                                                                        HdlOp: INDEX
                                                                                                                                            list: ops
                                                                                                                                                HdlValueId: in
                                                                                                                                                HdlValueInt: 9
                                                                                                                                HdlOp: INDEX
                                                                                                                                    list: ops
                                                                                                                                        HdlValueId: in
                                                                                                                                        HdlValueInt: 10
                                                                                                                        HdlOp: INDEX
                                                                                                                            list: ops
                                                                                                                                HdlValueId: in
                                                                                                                                HdlValueInt: 11
                                                                                                                HdlOp: INDEX
                                                                                                                    list: ops
                                                                                                                        HdlValueId: in
                                                                                                                        HdlValueInt: 12
                                                                                                        HdlOp: INDEX
                                                                                                            list: ops
                                                                                                                HdlValueId: in
                                                                                                                HdlValueInt: 13
                                                                                                HdlOp: INDEX
                                                                                                    list: ops
                                                                                                        HdlValueId: in
                                                                                                        HdlValueInt: 14
                                                                                        HdlOp: INDEX
                                                                                            list: ops
                                                                                                HdlValueId: in
                                                                                                HdlValueInt: 15
                                                                                HdlOp: INDEX
                                                                                    list: ops
                                                                                        HdlValueId: in
                                                                                        HdlValueInt: 16
                                                                        HdlOp: INDEX
                                                                            list: ops
                                                                                HdlValueId: in
                                                                                HdlValueInt: 17
                                                                HdlOp: INDEX
                                                                    list: ops
                                                                        HdlValueId: in
                                                                        HdlValueInt: 18
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlValueId: in
                                                                HdlValueInt: 19
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: in
                                                        HdlValueInt: 20
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: in
                                                HdlValueInt: 57
                                HdlOp: INDEX
                                    list: ops
                                        HdlValueId: in
                                        HdlValueInt: 58
                        HdlOp: INDEX
                            list: ops
                                HdlValueId: in
                                HdlValueInt: 61
                HdlOp: INDEX
                    list: ops
                        HdlValueId: in
                        HdlValueInt: 62
        MOV HdlOp@@INDEX to ops
        HdlOp: INDEX
            list: ops
                HdlValueId: in
                HdlValueInt: 63
        UPD HdlOp@@XOR to XOR
            UPD HdlOp@@XOR to XOR
                MOV HdlOp@@XOR to ops
                HdlOp: XOR
                    list: ops
                        HdlOp: XOR
                            list: ops
                                HdlOp: XOR
                                    list: ops
                                        HdlOp: XOR
                                            list: ops
                                                HdlOp: XOR
                                                    list: ops
                                                        HdlOp: XOR
                                                            list: ops
                                                                HdlOp: XOR
                                                                    list: ops
                                                                        HdlOp: XOR
                                                                            list: ops
                                                                                HdlOp: XOR
                                                                                    list: ops
                                                                                        HdlOp: XOR
                                                                                            list: ops
                                                                                                HdlOp: XOR
                                                                                                    list: ops
                                                                                                        HdlOp: XOR
                                                                                                            list: ops
                                                                                                                HdlOp: XOR
                                                                                                                    list: ops
                                                                                                                        HdlOp: XOR
                                                                                                                            list: ops
                                                                                                                                HdlOp: XOR
                                                                                                                                    list: ops
                                                                                                                                        HdlOp: XOR
                                                                                                                                            list: ops
                                                                                                                                                HdlOp: XOR
                                                                                                                                                    list: ops
                                                                                                                                                        HdlOp: XOR
                                                                                                                                                            list: ops
                                                                                                                                                                HdlOp: XOR
                                                                                                                                                                    list: ops
                                                                                                                                                                        HdlOp: XOR
                                                                                                                                                                            list: ops
                                                                                                                                                                                HdlOp: XOR
                                                                                                                                                                                    list: ops
                                                                                                                                                                                        HdlOp: XOR
                                                                                                                                                                                            list: ops
                                                                                                                                                                                                HdlOp: INDEX
                                                                                                                                                                                                    list: ops
                                                                                                                                                                                                        HdlValueId: in
                                                                                                                                                                                                        HdlValueInt: 0
                                                                                                                                                                                                HdlOp: INDEX
                                                                                                                                                                                                    list: ops
                                                                                                                                                                                                        HdlValueId: in
                                                                                                                                                                                                        HdlValueInt: 1
                                                                                                                                                                                        HdlOp: INDEX
                                                                                                                                                                                            list: ops
                                                                                                                                                                                                HdlValueId: in
                                                                                                                                                                                                HdlValueInt: 2
                                                                                                                                                                                HdlOp: INDEX
                                                                                                                                                                                    list: ops
                                                                                                                                                                                        HdlValueId: in
                                                                                                                                                                                        HdlValueInt: 3
                                                                                                                                                                        HdlOp: INDEX
                                                                                                                                                                            list: ops
                                                                                                                                                                                HdlValueId: in
                                                                                                                                                                                HdlValueInt: 4
                                                                                                                                                                HdlOp: INDEX
                                                                                                                                                                    list: ops
                                                                                                                                                                        HdlValueId: in
                                                                                                                                                                        HdlValueInt: 5
                                                                                                                                                        HdlOp: INDEX
                                                                                                                                                            list: ops
                                                                                                                                                                HdlValueId: in
                                                                                                                                                                HdlValueInt: 6
                                                                                                                                                HdlOp: INDEX
                                                                                                                                                    list: ops
                                                                                                                                                        HdlValueId: in
                                                                                                                                                        HdlValueInt: 7
                                                                                                                                        HdlOp: INDEX
                                                                                                                                            list: ops
                                                                                                                                                HdlValueId: in
                                                                                                                                                HdlValueInt: 8
                                                                                                                                HdlOp: INDEX
                                                                                                                                    list: ops
                                                                                                                                        HdlValueId: in
                                                                                                                                        HdlValueInt: 9
                                                                                                                        HdlOp: INDEX
                                                                                                                            list: ops
                                                                                                                                HdlValueId: in
                                                                                                                                HdlValueInt: 10
                                                                                                                HdlOp: INDEX
                                                                                                                    list: ops
                                                                                                                        HdlValueId: in
                                                                                                                        HdlValueInt: 11
                                                                                                        HdlOp: INDEX
                                                                                                            list: ops
                                                                                                                HdlValueId: in
                                                                                                                HdlValueInt: 12
                                                                                                HdlOp: INDEX
                                                                                                    list: ops
                                                                                                        HdlValueId: in
                                                                                                        HdlValueInt: 13
                                                                                        HdlOp: INDEX
                                                                                            list: ops
                                                                                                HdlValueId: in
                                                                                                HdlValueInt: 14
                                                                                HdlOp: INDEX
                                                                                    list: ops
                                                                                        HdlValueId: in
                                                                                        HdlValueInt: 15
                                                                        HdlOp: INDEX
                                                                            list: ops
                                                                                HdlValueId: in
                                                                                HdlValueInt: 16
                                                                HdlOp: INDEX
                                                                    list: ops
                                                                        HdlValueId: in
                                                                        HdlValueInt: 17
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlValueId: in
                                                                HdlValueInt: 18
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: in
                                                        HdlValueInt: 19
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: in
                                                HdlValueInt: 20
                                HdlOp: INDEX
                                    list: ops
                                        HdlValueId: in
                                        HdlValueInt: 57
                        HdlOp: INDEX
                            list: ops
                                HdlValueId: in
                                HdlValueInt: 58
                UPD HdlOp@@XOR to XOR
                    MOV HdlOp@@INDEX to ops
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: in
                            HdlValueInt: 58
    MOV HdlOp@@XOR to 
    HdlOp: XOR
        list: ops
            HdlOp: XOR
                list: ops
                    HdlOp: XOR
                        list: ops
                            HdlOp: XOR
                                list: ops
                                    HdlOp: XOR
                                        list: ops
                                            HdlOp: XOR
                                                list: ops
                                                    HdlOp: XOR
                                                        list: ops
                                                            HdlOp: XOR
                                                                list: ops
                                                                    HdlOp: XOR
                                                                        list: ops
                                                                            HdlOp: XOR
                                                                                list: ops
                                                                                    HdlOp: XOR
                                                                                        list: ops
                                                                                            HdlOp: XOR
                                                                                                list: ops
                                                                                                    HdlOp: XOR
                                                                                                        list: ops
                                                                                                            HdlOp: XOR
                                                                                                                list: ops
                                                                                                                    HdlOp: XOR
                                                                                                                        list: ops
                                                                                                                            HdlOp: XOR
                                                                                                                                list: ops
                                                                                                                                    HdlOp: XOR
                                                                                                                                        list: ops
                                                                                                                                            HdlOp: XOR
                                                                                                                                                list: ops
                                                                                                                                                    HdlOp: XOR
                                                                                                                                                        list: ops
                                                                                                                                                            HdlOp: XOR
                                                                                                                                                                list: ops
                                                                                                                                                                    HdlOp: XOR
                                                                                                                                                                        list: ops
                                                                                                                                                                            HdlOp: XOR
                                                                                                                                                                                list: ops
                                                                                                                                                                                    HdlOp: XOR
                                                                                                                                                                                        list: ops
                                                                                                                                                                                            HdlOp: XOR
                                                                                                                                                                                                list: ops
                                                                                                                                                                                                    HdlOp: XOR
                                                                                                                                                                                                        list: ops
                                                                                                                                                                                                            HdlOp: INDEX
                                                                                                                                                                                                                list: ops
                                                                                                                                                                                                                    HdlValueId: in
                                                                                                                                                                                                                    HdlValueInt: 0
                                                                                                                                                                                                            HdlOp: INDEX
                                                                                                                                                                                                                list: ops
                                                                                                                                                                                                                    HdlValueId: in
                                                                                                                                                                                                                    HdlValueInt: 1
                                                                                                                                                                                                    HdlOp: INDEX
                                                                                                                                                                                                        list: ops
                                                                                                                                                                                                            HdlValueId: in
                                                                                                                                                                                                            HdlValueInt: 2
                                                                                                                                                                                            HdlOp: INDEX
                                                                                                                                                                                                list: ops
                                                                                                                                                                                                    HdlValueId: in
                                                                                                                                                                                                    HdlValueInt: 3
                                                                                                                                                                                    HdlOp: INDEX
                                                                                                                                                                                        list: ops
                                                                                                                                                                                            HdlValueId: in
                                                                                                                                                                                            HdlValueInt: 4
                                                                                                                                                                            HdlOp: INDEX
                                                                                                                                                                                list: ops
                                                                                                                                                                                    HdlValueId: in
                                                                                                                                                                                    HdlValueInt: 5
                                                                                                                                                                    HdlOp: INDEX
                                                                                                                                                                        list: ops
                                                                                                                                                                            HdlValueId: in
                                                                                                                                                                            HdlValueInt: 6
                                                                                                                                                            HdlOp: INDEX
                                                                                                                                                                list: ops
                                                                                                                                                                    HdlValueId: in
                                                                                                                                                                    HdlValueInt: 7
                                                                                                                                                    HdlOp: INDEX
                                                                                                                                                        list: ops
                                                                                                                                                            HdlValueId: in
                                                                                                                                                            HdlValueInt: 8
                                                                                                                                            HdlOp: INDEX
                                                                                                                                                list: ops
                                                                                                                                                    HdlValueId: in
                                                                                                                                                    HdlValueInt: 9
                                                                                                                                    HdlOp: INDEX
                                                                                                                                        list: ops
                                                                                                                                            HdlValueId: in
                                                                                                                                            HdlValueInt: 10
                                                                                                                            HdlOp: INDEX
                                                                                                                                list: ops
                                                                                                                                    HdlValueId: in
                                                                                                                                    HdlValueInt: 11
                                                                                                                    HdlOp: INDEX
                                                                                                                        list: ops
                                                                                                                            HdlValueId: in
                                                                                                                            HdlValueInt: 12
                                                                                                            HdlOp: INDEX
                                                                                                                list: ops
                                                                                                                    HdlValueId: in
                                                                                                                    HdlValueInt: 13
                                                                                                    HdlOp: INDEX
                                                                                                        list: ops
                                                                                                            HdlValueId: in
                                                                                                            HdlValueInt: 14
                                                                                            HdlOp: INDEX
                                                                                                list: ops
                                                                                                    HdlValueId: in
                                                                                                    HdlValueInt: 15
                                                                                    HdlOp: INDEX
                                                                                        list: ops
                                                                                            HdlValueId: in
                                                                                            HdlValueInt: 16
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlValueId: in
                                                                                    HdlValueInt: 17
                                                                    HdlOp: INDEX
                                                                        list: ops
                                                                            HdlValueId: in
                                                                            HdlValueInt: 18
                                                            HdlOp: INDEX
                                                                list: ops
                                                                    HdlValueId: in
                                                                    HdlValueInt: 19
                                                    HdlOp: INDEX
                                                        list: ops
                                                            HdlValueId: in
                                                            HdlValueInt: 20
                                            HdlOp: INDEX
                                                list: ops
                                                    HdlValueId: in
                                                    HdlValueInt: 57
                                    HdlOp: INDEX
                                        list: ops
                                            HdlValueId: in
                                            HdlValueInt: 58
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: in
                                    HdlValueInt: 61
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: in
                            HdlValueInt: 62
            HdlOp: INDEX
                list: ops
                    HdlValueId: in
                    HdlValueInt: 63

UPD HdlStmAssign@@ to 
    UPD HdlOp@@XOR to XOR
        MOV HdlOp@@XOR to ops
        HdlOp: XOR
            list: ops
                HdlOp: XOR
                    list: ops
                        HdlOp: XOR
                            list: ops
                                HdlOp: XOR
                                    list: ops
                                        HdlOp: XOR
                                            list: ops
                                                HdlOp: XOR
                                                    list: ops
                                                        HdlOp: XOR
                                                            list: ops
                                                                HdlOp: XOR
                                                                    list: ops
                                                                        HdlOp: XOR
                                                                            list: ops
                                                                                HdlOp: XOR
                                                                                    list: ops
                                                                                        HdlOp: XOR
                                                                                            list: ops
                                                                                                HdlOp: XOR
                                                                                                    list: ops
                                                                                                        HdlOp: XOR
                                                                                                            list: ops
                                                                                                                HdlOp: XOR
                                                                                                                    list: ops
                                                                                                                        HdlOp: XOR
                                                                                                                            list: ops
                                                                                                                                HdlOp: XOR
                                                                                                                                    list: ops
                                                                                                                                        HdlOp: XOR
                                                                                                                                            list: ops
                                                                                                                                                HdlOp: XOR
                                                                                                                                                    list: ops
                                                                                                                                                        HdlOp: XOR
                                                                                                                                                            list: ops
                                                                                                                                                                HdlOp: XOR
                                                                                                                                                                    list: ops
                                                                                                                                                                        HdlOp: XOR
                                                                                                                                                                            list: ops
                                                                                                                                                                                HdlOp: XOR
                                                                                                                                                                                    list: ops
                                                                                                                                                                                        HdlOp: XOR
                                                                                                                                                                                            list: ops
                                                                                                                                                                                                HdlOp: XOR
                                                                                                                                                                                                    list: ops
                                                                                                                                                                                                        HdlOp: INDEX
                                                                                                                                                                                                            list: ops
                                                                                                                                                                                                                HdlValueId: in
                                                                                                                                                                                                                HdlValueInt: 4
                                                                                                                                                                                                        HdlOp: INDEX
                                                                                                                                                                                                            list: ops
                                                                                                                                                                                                                HdlValueId: in
                                                                                                                                                                                                                HdlValueInt: 9
                                                                                                                                                                                                HdlOp: INDEX
                                                                                                                                                                                                    list: ops
                                                                                                                                                                                                        HdlValueId: in
                                                                                                                                                                                                        HdlValueInt: 13
                                                                                                                                                                                        HdlOp: INDEX
                                                                                                                                                                                            list: ops
                                                                                                                                                                                                HdlValueId: in
                                                                                                                                                                                                HdlValueInt: 16
                                                                                                                                                                                HdlOp: INDEX
                                                                                                                                                                                    list: ops
                                                                                                                                                                                        HdlValueId: in
                                                                                                                                                                                        HdlValueInt: 18
                                                                                                                                                                        HdlOp: INDEX
                                                                                                                                                                            list: ops
                                                                                                                                                                                HdlValueId: in
                                                                                                                                                                                HdlValueInt: 20
                                                                                                                                                                HdlOp: INDEX
                                                                                                                                                                    list: ops
                                                                                                                                                                        HdlValueId: in
                                                                                                                                                                        HdlValueInt: 24
                                                                                                                                                        HdlOp: INDEX
                                                                                                                                                            list: ops
                                                                                                                                                                HdlValueId: in
                                                                                                                                                                HdlValueInt: 28
                                                                                                                                                HdlOp: INDEX
                                                                                                                                                    list: ops
                                                                                                                                                        HdlValueId: in
                                                                                                                                                        HdlValueInt: 31
                                                                                                                                        HdlOp: INDEX
                                                                                                                                            list: ops
                                                                                                                                                HdlValueId: in
                                                                                                                                                HdlValueInt: 33
                                                                                                                                HdlOp: INDEX
                                                                                                                                    list: ops
                                                                                                                                        HdlValueId: in
                                                                                                                                        HdlValueInt: 35
                                                                                                                        HdlOp: INDEX
                                                                                                                            list: ops
                                                                                                                                HdlValueId: in
                                                                                                                                HdlValueInt: 38
                                                                                                                HdlOp: INDEX
                                                                                                                    list: ops
                                                                                                                        HdlValueId: in
                                                                                                                        HdlValueInt: 41
                                                                                                        HdlOp: INDEX
                                                                                                            list: ops
                                                                                                                HdlValueId: in
                                                                                                                HdlValueInt: 43
                                                                                                HdlOp: INDEX
                                                                                                    list: ops
                                                                                                        HdlValueId: in
                                                                                                        HdlValueInt: 45
                                                                                        HdlOp: INDEX
                                                                                            list: ops
                                                                                                HdlValueId: in
                                                                                                HdlValueInt: 47
                                                                                HdlOp: INDEX
                                                                                    list: ops
                                                                                        HdlValueId: in
                                                                                        HdlValueInt: 49
                                                                        HdlOp: INDEX
                                                                            list: ops
                                                                                HdlValueId: in
                                                                                HdlValueInt: 51
                                                                HdlOp: INDEX
                                                                    list: ops
                                                                        HdlValueId: in
                                                                        HdlValueInt: 52
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlValueId: in
                                                                HdlValueInt: 54
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: in
                                                        HdlValueInt: 55
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: in
                                                HdlValueInt: 56
                                HdlOp: INDEX
                                    list: ops
                                        HdlValueId: in
                                        HdlValueInt: 59
                        HdlOp: INDEX
                            list: ops
                                HdlValueId: in
                                HdlValueInt: 60
                HdlOp: INDEX
                    list: ops
                        HdlValueId: in
                        HdlValueInt: 61
        MOV HdlOp@@INDEX to ops
        HdlOp: INDEX
            list: ops
                HdlValueId: in
                HdlValueInt: 62
        UPD HdlOp@@XOR to XOR
            MOV HdlOp@@INDEX to ops
            HdlOp: INDEX
                list: ops
                    HdlValueId: in
                    HdlValueInt: 61
            UPD HdlOp@@XOR to XOR
                MOV HdlOp@@INDEX to ops
                HdlOp: INDEX
                    list: ops
                        HdlValueId: in
                        HdlValueInt: 60
                UPD HdlOp@@XOR to XOR
                    MOV HdlOp@@XOR to ops
                    HdlOp: XOR
                        list: ops
                            HdlOp: XOR
                                list: ops
                                    HdlOp: XOR
                                        list: ops
                                            HdlOp: XOR
                                                list: ops
                                                    HdlOp: XOR
                                                        list: ops
                                                            HdlOp: XOR
                                                                list: ops
                                                                    HdlOp: XOR
                                                                        list: ops
                                                                            HdlOp: XOR
                                                                                list: ops
                                                                                    HdlOp: XOR
                                                                                        list: ops
                                                                                            HdlOp: XOR
                                                                                                list: ops
                                                                                                    HdlOp: XOR
                                                                                                        list: ops
                                                                                                            HdlOp: XOR
                                                                                                                list: ops
                                                                                                                    HdlOp: XOR
                                                                                                                        list: ops
                                                                                                                            HdlOp: XOR
                                                                                                                                list: ops
                                                                                                                                    HdlOp: XOR
                                                                                                                                        list: ops
                                                                                                                                            HdlOp: XOR
                                                                                                                                                list: ops
                                                                                                                                                    HdlOp: XOR
                                                                                                                                                        list: ops
                                                                                                                                                            HdlOp: XOR
                                                                                                                                                                list: ops
                                                                                                                                                                    HdlOp: XOR
                                                                                                                                                                        list: ops
                                                                                                                                                                            HdlOp: XOR
                                                                                                                                                                                list: ops
                                                                                                                                                                                    HdlOp: XOR
                                                                                                                                                                                        list: ops
                                                                                                                                                                                            HdlOp: INDEX
                                                                                                                                                                                                list: ops
                                                                                                                                                                                                    HdlValueId: in
                                                                                                                                                                                                    HdlValueInt: 4
                                                                                                                                                                                            HdlOp: INDEX
                                                                                                                                                                                                list: ops
                                                                                                                                                                                                    HdlValueId: in
                                                                                                                                                                                                    HdlValueInt: 9
                                                                                                                                                                                    HdlOp: INDEX
                                                                                                                                                                                        list: ops
                                                                                                                                                                                            HdlValueId: in
                                                                                                                                                                                            HdlValueInt: 13
                                                                                                                                                                            HdlOp: INDEX
                                                                                                                                                                                list: ops
                                                                                                                                                                                    HdlValueId: in
                                                                                                                                                                                    HdlValueInt: 16
                                                                                                                                                                    HdlOp: INDEX
                                                                                                                                                                        list: ops
                                                                                                                                                                            HdlValueId: in
                                                                                                                                                                            HdlValueInt: 18
                                                                                                                                                            HdlOp: INDEX
                                                                                                                                                                list: ops
                                                                                                                                                                    HdlValueId: in
                                                                                                                                                                    HdlValueInt: 20
                                                                                                                                                    HdlOp: INDEX
                                                                                                                                                        list: ops
                                                                                                                                                            HdlValueId: in
                                                                                                                                                            HdlValueInt: 24
                                                                                                                                            HdlOp: INDEX
                                                                                                                                                list: ops
                                                                                                                                                    HdlValueId: in
                                                                                                                                                    HdlValueInt: 28
                                                                                                                                    HdlOp: INDEX
                                                                                                                                        list: ops
                                                                                                                                            HdlValueId: in
                                                                                                                                            HdlValueInt: 31
                                                                                                                            HdlOp: INDEX
                                                                                                                                list: ops
                                                                                                                                    HdlValueId: in
                                                                                                                                    HdlValueInt: 33
                                                                                                                    HdlOp: INDEX
                                                                                                                        list: ops
                                                                                                                            HdlValueId: in
                                                                                                                            HdlValueInt: 35
                                                                                                            HdlOp: INDEX
                                                                                                                list: ops
                                                                                                                    HdlValueId: in
                                                                                                                    HdlValueInt: 38
                                                                                                    HdlOp: INDEX
                                                                                                        list: ops
                                                                                                            HdlValueId: in
                                                                                                            HdlValueInt: 41
                                                                                            HdlOp: INDEX
                                                                                                list: ops
                                                                                                    HdlValueId: in
                                                                                                    HdlValueInt: 43
                                                                                    HdlOp: INDEX
                                                                                        list: ops
                                                                                            HdlValueId: in
                                                                                            HdlValueInt: 45
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlValueId: in
                                                                                    HdlValueInt: 47
                                                                    HdlOp: INDEX
                                                                        list: ops
                                                                            HdlValueId: in
                                                                            HdlValueInt: 49
                                                            HdlOp: INDEX
                                                                list: ops
                                                                    HdlValueId: in
                                                                    HdlValueInt: 51
                                                    HdlOp: INDEX
                                                        list: ops
                                                            HdlValueId: in
                                                            HdlValueInt: 52
                                            HdlOp: INDEX
                                                list: ops
                                                    HdlValueId: in
                                                    HdlValueInt: 54
                                    HdlOp: INDEX
                                        list: ops
                                            HdlValueId: in
                                            HdlValueInt: 55
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: in
                                    HdlValueInt: 56
    MOV HdlOp@@XOR to 
    HdlOp: XOR
        list: ops
            HdlOp: XOR
                list: ops
                    HdlOp: XOR
                        list: ops
                            HdlOp: XOR
                                list: ops
                                    HdlOp: XOR
                                        list: ops
                                            HdlOp: XOR
                                                list: ops
                                                    HdlOp: XOR
                                                        list: ops
                                                            HdlOp: XOR
                                                                list: ops
                                                                    HdlOp: XOR
                                                                        list: ops
                                                                            HdlOp: XOR
                                                                                list: ops
                                                                                    HdlOp: XOR
                                                                                        list: ops
                                                                                            HdlOp: XOR
                                                                                                list: ops
                                                                                                    HdlOp: XOR
                                                                                                        list: ops
                                                                                                            HdlOp: XOR
                                                                                                                list: ops
                                                                                                                    HdlOp: XOR
                                                                                                                        list: ops
                                                                                                                            HdlOp: XOR
                                                                                                                                list: ops
                                                                                                                                    HdlOp: XOR
                                                                                                                                        list: ops
                                                                                                                                            HdlOp: XOR
                                                                                                                                                list: ops
                                                                                                                                                    HdlOp: XOR
                                                                                                                                                        list: ops
                                                                                                                                                            HdlOp: XOR
                                                                                                                                                                list: ops
                                                                                                                                                                    HdlOp: XOR
                                                                                                                                                                        list: ops
                                                                                                                                                                            HdlOp: XOR
                                                                                                                                                                                list: ops
                                                                                                                                                                                    HdlOp: XOR
                                                                                                                                                                                        list: ops
                                                                                                                                                                                            HdlOp: XOR
                                                                                                                                                                                                list: ops
                                                                                                                                                                                                    HdlOp: XOR
                                                                                                                                                                                                        list: ops
                                                                                                                                                                                                            HdlOp: INDEX
                                                                                                                                                                                                                list: ops
                                                                                                                                                                                                                    HdlValueId: in
                                                                                                                                                                                                                    HdlValueInt: 4
                                                                                                                                                                                                            HdlOp: INDEX
                                                                                                                                                                                                                list: ops
                                                                                                                                                                                                                    HdlValueId: in
                                                                                                                                                                                                                    HdlValueInt: 9
                                                                                                                                                                                                    HdlOp: INDEX
                                                                                                                                                                                                        list: ops
                                                                                                                                                                                                            HdlValueId: in
                                                                                                                                                                                                            HdlValueInt: 13
                                                                                                                                                                                            HdlOp: INDEX
                                                                                                                                                                                                list: ops
                                                                                                                                                                                                    HdlValueId: in
                                                                                                                                                                                                    HdlValueInt: 16
                                                                                                                                                                                    HdlOp: INDEX
                                                                                                                                                                                        list: ops
                                                                                                                                                                                            HdlValueId: in
                                                                                                                                                                                            HdlValueInt: 18
                                                                                                                                                                            HdlOp: INDEX
                                                                                                                                                                                list: ops
                                                                                                                                                                                    HdlValueId: in
                                                                                                                                                                                    HdlValueInt: 20
                                                                                                                                                                    HdlOp: INDEX
                                                                                                                                                                        list: ops
                                                                                                                                                                            HdlValueId: in
                                                                                                                                                                            HdlValueInt: 24
                                                                                                                                                            HdlOp: INDEX
                                                                                                                                                                list: ops
                                                                                                                                                                    HdlValueId: in
                                                                                                                                                                    HdlValueInt: 28
                                                                                                                                                    HdlOp: INDEX
                                                                                                                                                        list: ops
                                                                                                                                                            HdlValueId: in
                                                                                                                                                            HdlValueInt: 31
                                                                                                                                            HdlOp: INDEX
                                                                                                                                                list: ops
                                                                                                                                                    HdlValueId: in
                                                                                                                                                    HdlValueInt: 33
                                                                                                                                    HdlOp: INDEX
                                                                                                                                        list: ops
                                                                                                                                            HdlValueId: in
                                                                                                                                            HdlValueInt: 35
                                                                                                                            HdlOp: INDEX
                                                                                                                                list: ops
                                                                                                                                    HdlValueId: in
                                                                                                                                    HdlValueInt: 38
                                                                                                                    HdlOp: INDEX
                                                                                                                        list: ops
                                                                                                                            HdlValueId: in
                                                                                                                            HdlValueInt: 41
                                                                                                            HdlOp: INDEX
                                                                                                                list: ops
                                                                                                                    HdlValueId: in
                                                                                                                    HdlValueInt: 43
                                                                                                    HdlOp: INDEX
                                                                                                        list: ops
                                                                                                            HdlValueId: in
                                                                                                            HdlValueInt: 45
                                                                                            HdlOp: INDEX
                                                                                                list: ops
                                                                                                    HdlValueId: in
                                                                                                    HdlValueInt: 47
                                                                                    HdlOp: INDEX
                                                                                        list: ops
                                                                                            HdlValueId: in
                                                                                            HdlValueInt: 49
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlValueId: in
                                                                                    HdlValueInt: 51
                                                                    HdlOp: INDEX
                                                                        list: ops
                                                                            HdlValueId: in
                                                                            HdlValueInt: 52
                                                            HdlOp: INDEX
                                                                list: ops
                                                                    HdlValueId: in
                                                                    HdlValueInt: 54
                                                    HdlOp: INDEX
                                                        list: ops
                                                            HdlValueId: in
                                                            HdlValueInt: 55
                                            HdlOp: INDEX
                                                list: ops
                                                    HdlValueId: in
                                                    HdlValueInt: 56
                                    HdlOp: INDEX
                                        list: ops
                                            HdlValueId: in
                                            HdlValueInt: 59
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: in
                                    HdlValueInt: 60
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: in
                            HdlValueInt: 61
            HdlOp: INDEX
                list: ops
                    HdlValueId: in
                    HdlValueInt: 62

UPD HdlStmAssign@@ to 
    UPD HdlOp@@XOR to XOR
        MOV HdlOp@@XOR to ops
        HdlOp: XOR
            list: ops
                HdlOp: XOR
                    list: ops
                        HdlOp: XOR
                            list: ops
                                HdlOp: XOR
                                    list: ops
                                        HdlOp: XOR
                                            list: ops
                                                HdlOp: XOR
                                                    list: ops
                                                        HdlOp: XOR
                                                            list: ops
                                                                HdlOp: XOR
                                                                    list: ops
                                                                        HdlOp: XOR
                                                                            list: ops
                                                                                HdlOp: XOR
                                                                                    list: ops
                                                                                        HdlOp: XOR
                                                                                            list: ops
                                                                                                HdlOp: XOR
                                                                                                    list: ops
                                                                                                        HdlOp: XOR
                                                                                                            list: ops
                                                                                                                HdlOp: XOR
                                                                                                                    list: ops
                                                                                                                        HdlOp: XOR
                                                                                                                            list: ops
                                                                                                                                HdlOp: XOR
                                                                                                                                    list: ops
                                                                                                                                        HdlOp: XOR
                                                                                                                                            list: ops
                                                                                                                                                HdlOp: XOR
                                                                                                                                                    list: ops
                                                                                                                                                        HdlOp: XOR
                                                                                                                                                            list: ops
                                                                                                                                                                HdlOp: XOR
                                                                                                                                                                    list: ops
                                                                                                                                                                        HdlOp: XOR
                                                                                                                                                                            list: ops
                                                                                                                                                                                HdlOp: XOR
                                                                                                                                                                                    list: ops
                                                                                                                                                                                        HdlOp: XOR
                                                                                                                                                                                            list: ops
                                                                                                                                                                                                HdlOp: XOR
                                                                                                                                                                                                    list: ops
                                                                                                                                                                                                        HdlOp: INDEX
                                                                                                                                                                                                            list: ops
                                                                                                                                                                                                                HdlValueId: in
                                                                                                                                                                                                                HdlValueInt: 5
                                                                                                                                                                                                        HdlOp: INDEX
                                                                                                                                                                                                            list: ops
                                                                                                                                                                                                                HdlValueId: in
                                                                                                                                                                                                                HdlValueInt: 10
                                                                                                                                                                                                HdlOp: INDEX
                                                                                                                                                                                                    list: ops
                                                                                                                                                                                                        HdlValueId: in
                                                                                                                                                                                                        HdlValueInt: 14
                                                                                                                                                                                        HdlOp: INDEX
                                                                                                                                                                                            list: ops
                                                                                                                                                                                                HdlValueId: in
                                                                                                                                                                                                HdlValueInt: 17
                                                                                                                                                                                HdlOp: INDEX
                                                                                                                                                                                    list: ops
                                                                                                                                                                                        HdlValueId: in
                                                                                                                                                                                        HdlValueInt: 19
                                                                                                                                                                        HdlOp: INDEX
                                                                                                                                                                            list: ops
                                                                                                                                                                                HdlValueId: in
                                                                                                                                                                                HdlValueInt: 20
                                                                                                                                                                HdlOp: INDEX
                                                                                                                                                                    list: ops
                                                                                                                                                                        HdlValueId: in
                                                                                                                                                                        HdlValueInt: 25
                                                                                                                                                        HdlOp: INDEX
                                                                                                                                                            list: ops
                                                                                                                                                                HdlValueId: in
                                                                                                                                                                HdlValueInt: 29
                                                                                                                                                HdlOp: INDEX
                                                                                                                                                    list: ops
                                                                                                                                                        HdlValueId: in
                                                                                                                                                        HdlValueInt: 32
                                                                                                                                        HdlOp: INDEX
                                                                                                                                            list: ops
                                                                                                                                                HdlValueId: in
                                                                                                                                                HdlValueInt: 34
                                                                                                                                HdlOp: INDEX
                                                                                                                                    list: ops
                                                                                                                                        HdlValueId: in
                                                                                                                                        HdlValueInt: 35
                                                                                                                        HdlOp: INDEX
                                                                                                                            list: ops
                                                                                                                                HdlValueId: in
                                                                                                                                HdlValueInt: 39
                                                                                                                HdlOp: INDEX
                                                                                                                    list: ops
                                                                                                                        HdlValueId: in
                                                                                                                        HdlValueInt: 42
                                                                                                        HdlOp: INDEX
                                                                                                            list: ops
                                                                                                                HdlValueId: in
                                                                                                                HdlValueInt: 44
                                                                                                HdlOp: INDEX
                                                                                                    list: ops
                                                                                                        HdlValueId: in
                                                                                                        HdlValueInt: 45
                                                                                        HdlOp: INDEX
                                                                                            list: ops
                                                                                                HdlValueId: in
                                                                                                HdlValueInt: 48
                                                                                HdlOp: INDEX
                                                                                    list: ops
                                                                                        HdlValueId: in
                                                                                        HdlValueInt: 50
                                                                        HdlOp: INDEX
                                                                            list: ops
                                                                                HdlValueId: in
                                                                                HdlValueInt: 51
                                                                HdlOp: INDEX
                                                                    list: ops
                                                                        HdlValueId: in
                                                                        HdlValueInt: 53
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlValueId: in
                                                                HdlValueInt: 54
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: in
                                                        HdlValueInt: 55
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: in
                                                HdlValueInt: 57
                                HdlOp: INDEX
                                    list: ops
                                        HdlValueId: in
                                        HdlValueInt: 58
                        HdlOp: INDEX
                            list: ops
                                HdlValueId: in
                                HdlValueInt: 60
                HdlOp: INDEX
                    list: ops
                        HdlValueId: in
                        HdlValueInt: 62
        MOV HdlOp@@INDEX to ops
        HdlOp: INDEX
            list: ops
                HdlValueId: in
                HdlValueInt: 63
        UPD HdlOp@@XOR to XOR
            MOV HdlOp@@XOR to ops
            HdlOp: XOR
                list: ops
                    HdlOp: XOR
                        list: ops
                            HdlOp: XOR
                                list: ops
                                    HdlOp: XOR
                                        list: ops
                                            HdlOp: XOR
                                                list: ops
                                                    HdlOp: XOR
                                                        list: ops
                                                            HdlOp: XOR
                                                                list: ops
                                                                    HdlOp: XOR
                                                                        list: ops
                                                                            HdlOp: XOR
                                                                                list: ops
                                                                                    HdlOp: XOR
                                                                                        list: ops
                                                                                            HdlOp: XOR
                                                                                                list: ops
                                                                                                    HdlOp: XOR
                                                                                                        list: ops
                                                                                                            HdlOp: XOR
                                                                                                                list: ops
                                                                                                                    HdlOp: XOR
                                                                                                                        list: ops
                                                                                                                            HdlOp: XOR
                                                                                                                                list: ops
                                                                                                                                    HdlOp: XOR
                                                                                                                                        list: ops
                                                                                                                                            HdlOp: XOR
                                                                                                                                                list: ops
                                                                                                                                                    HdlOp: XOR
                                                                                                                                                        list: ops
                                                                                                                                                            HdlOp: XOR
                                                                                                                                                                list: ops
                                                                                                                                                                    HdlOp: XOR
                                                                                                                                                                        list: ops
                                                                                                                                                                            HdlOp: XOR
                                                                                                                                                                                list: ops
                                                                                                                                                                                    HdlOp: XOR
                                                                                                                                                                                        list: ops
                                                                                                                                                                                            HdlOp: XOR
                                                                                                                                                                                                list: ops
                                                                                                                                                                                                    HdlOp: INDEX
                                                                                                                                                                                                        list: ops
                                                                                                                                                                                                            HdlValueId: in
                                                                                                                                                                                                            HdlValueInt: 5
                                                                                                                                                                                                    HdlOp: INDEX
                                                                                                                                                                                                        list: ops
                                                                                                                                                                                                            HdlValueId: in
                                                                                                                                                                                                            HdlValueInt: 10
                                                                                                                                                                                            HdlOp: INDEX
                                                                                                                                                                                                list: ops
                                                                                                                                                                                                    HdlValueId: in
                                                                                                                                                                                                    HdlValueInt: 14
                                                                                                                                                                                    HdlOp: INDEX
                                                                                                                                                                                        list: ops
                                                                                                                                                                                            HdlValueId: in
                                                                                                                                                                                            HdlValueInt: 17
                                                                                                                                                                            HdlOp: INDEX
                                                                                                                                                                                list: ops
                                                                                                                                                                                    HdlValueId: in
                                                                                                                                                                                    HdlValueInt: 19
                                                                                                                                                                    HdlOp: INDEX
                                                                                                                                                                        list: ops
                                                                                                                                                                            HdlValueId: in
                                                                                                                                                                            HdlValueInt: 20
                                                                                                                                                            HdlOp: INDEX
                                                                                                                                                                list: ops
                                                                                                                                                                    HdlValueId: in
                                                                                                                                                                    HdlValueInt: 25
                                                                                                                                                    HdlOp: INDEX
                                                                                                                                                        list: ops
                                                                                                                                                            HdlValueId: in
                                                                                                                                                            HdlValueInt: 29
                                                                                                                                            HdlOp: INDEX
                                                                                                                                                list: ops
                                                                                                                                                    HdlValueId: in
                                                                                                                                                    HdlValueInt: 32
                                                                                                                                    HdlOp: INDEX
                                                                                                                                        list: ops
                                                                                                                                            HdlValueId: in
                                                                                                                                            HdlValueInt: 34
                                                                                                                            HdlOp: INDEX
                                                                                                                                list: ops
                                                                                                                                    HdlValueId: in
                                                                                                                                    HdlValueInt: 35
                                                                                                                    HdlOp: INDEX
                                                                                                                        list: ops
                                                                                                                            HdlValueId: in
                                                                                                                            HdlValueInt: 39
                                                                                                            HdlOp: INDEX
                                                                                                                list: ops
                                                                                                                    HdlValueId: in
                                                                                                                    HdlValueInt: 42
                                                                                                    HdlOp: INDEX
                                                                                                        list: ops
                                                                                                            HdlValueId: in
                                                                                                            HdlValueInt: 44
                                                                                            HdlOp: INDEX
                                                                                                list: ops
                                                                                                    HdlValueId: in
                                                                                                    HdlValueInt: 45
                                                                                    HdlOp: INDEX
                                                                                        list: ops
                                                                                            HdlValueId: in
                                                                                            HdlValueInt: 48
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlValueId: in
                                                                                    HdlValueInt: 50
                                                                    HdlOp: INDEX
                                                                        list: ops
                                                                            HdlValueId: in
                                                                            HdlValueInt: 51
                                                            HdlOp: INDEX
                                                                list: ops
                                                                    HdlValueId: in
                                                                    HdlValueInt: 53
                                                    HdlOp: INDEX
                                                        list: ops
                                                            HdlValueId: in
                                                            HdlValueInt: 54
                                            HdlOp: INDEX
                                                list: ops
                                                    HdlValueId: in
                                                    HdlValueInt: 55
                                    HdlOp: INDEX
                                        list: ops
                                            HdlValueId: in
                                            HdlValueInt: 57
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: in
                                    HdlValueInt: 58
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: in
                            HdlValueInt: 60
            UPD HdlOp@@XOR to XOR
                UPD HdlOp@@XOR to XOR
                    UPD HdlOp@@XOR to XOR
                        MOV HdlOp@@INDEX to ops
                        HdlOp: INDEX
                            list: ops
                                HdlValueId: in
                                HdlValueInt: 57
                    MOV HdlOp@@INDEX to ops
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: in
                            HdlValueInt: 58
    MOV HdlOp@@XOR to 
    HdlOp: XOR
        list: ops
            HdlOp: XOR
                list: ops
                    HdlOp: XOR
                        list: ops
                            HdlOp: XOR
                                list: ops
                                    HdlOp: XOR
                                        list: ops
                                            HdlOp: XOR
                                                list: ops
                                                    HdlOp: XOR
                                                        list: ops
                                                            HdlOp: XOR
                                                                list: ops
                                                                    HdlOp: XOR
                                                                        list: ops
                                                                            HdlOp: XOR
                                                                                list: ops
                                                                                    HdlOp: XOR
                                                                                        list: ops
                                                                                            HdlOp: XOR
                                                                                                list: ops
                                                                                                    HdlOp: XOR
                                                                                                        list: ops
                                                                                                            HdlOp: XOR
                                                                                                                list: ops
                                                                                                                    HdlOp: XOR
                                                                                                                        list: ops
                                                                                                                            HdlOp: XOR
                                                                                                                                list: ops
                                                                                                                                    HdlOp: XOR
                                                                                                                                        list: ops
                                                                                                                                            HdlOp: XOR
                                                                                                                                                list: ops
                                                                                                                                                    HdlOp: XOR
                                                                                                                                                        list: ops
                                                                                                                                                            HdlOp: XOR
                                                                                                                                                                list: ops
                                                                                                                                                                    HdlOp: XOR
                                                                                                                                                                        list: ops
                                                                                                                                                                            HdlOp: XOR
                                                                                                                                                                                list: ops
                                                                                                                                                                                    HdlOp: XOR
                                                                                                                                                                                        list: ops
                                                                                                                                                                                            HdlOp: XOR
                                                                                                                                                                                                list: ops
                                                                                                                                                                                                    HdlOp: XOR
                                                                                                                                                                                                        list: ops
                                                                                                                                                                                                            HdlOp: INDEX
                                                                                                                                                                                                                list: ops
                                                                                                                                                                                                                    HdlValueId: in
                                                                                                                                                                                                                    HdlValueInt: 5
                                                                                                                                                                                                            HdlOp: INDEX
                                                                                                                                                                                                                list: ops
                                                                                                                                                                                                                    HdlValueId: in
                                                                                                                                                                                                                    HdlValueInt: 10
                                                                                                                                                                                                    HdlOp: INDEX
                                                                                                                                                                                                        list: ops
                                                                                                                                                                                                            HdlValueId: in
                                                                                                                                                                                                            HdlValueInt: 14
                                                                                                                                                                                            HdlOp: INDEX
                                                                                                                                                                                                list: ops
                                                                                                                                                                                                    HdlValueId: in
                                                                                                                                                                                                    HdlValueInt: 17
                                                                                                                                                                                    HdlOp: INDEX
                                                                                                                                                                                        list: ops
                                                                                                                                                                                            HdlValueId: in
                                                                                                                                                                                            HdlValueInt: 19
                                                                                                                                                                            HdlOp: INDEX
                                                                                                                                                                                list: ops
                                                                                                                                                                                    HdlValueId: in
                                                                                                                                                                                    HdlValueInt: 20
                                                                                                                                                                    HdlOp: INDEX
                                                                                                                                                                        list: ops
                                                                                                                                                                            HdlValueId: in
                                                                                                                                                                            HdlValueInt: 25
                                                                                                                                                            HdlOp: INDEX
                                                                                                                                                                list: ops
                                                                                                                                                                    HdlValueId: in
                                                                                                                                                                    HdlValueInt: 29
                                                                                                                                                    HdlOp: INDEX
                                                                                                                                                        list: ops
                                                                                                                                                            HdlValueId: in
                                                                                                                                                            HdlValueInt: 32
                                                                                                                                            HdlOp: INDEX
                                                                                                                                                list: ops
                                                                                                                                                    HdlValueId: in
                                                                                                                                                    HdlValueInt: 34
                                                                                                                                    HdlOp: INDEX
                                                                                                                                        list: ops
                                                                                                                                            HdlValueId: in
                                                                                                                                            HdlValueInt: 35
                                                                                                                            HdlOp: INDEX
                                                                                                                                list: ops
                                                                                                                                    HdlValueId: in
                                                                                                                                    HdlValueInt: 39
                                                                                                                    HdlOp: INDEX
                                                                                                                        list: ops
                                                                                                                            HdlValueId: in
                                                                                                                            HdlValueInt: 42
                                                                                                            HdlOp: INDEX
                                                                                                                list: ops
                                                                                                                    HdlValueId: in
                                                                                                                    HdlValueInt: 44
                                                                                                    HdlOp: INDEX
                                                                                                        list: ops
                                                                                                            HdlValueId: in
                                                                                                            HdlValueInt: 45
                                                                                            HdlOp: INDEX
                                                                                                list: ops
                                                                                                    HdlValueId: in
                                                                                                    HdlValueInt: 48
                                                                                    HdlOp: INDEX
                                                                                        list: ops
                                                                                            HdlValueId: in
                                                                                            HdlValueInt: 50
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlValueId: in
                                                                                    HdlValueInt: 51
                                                                    HdlOp: INDEX
                                                                        list: ops
                                                                            HdlValueId: in
                                                                            HdlValueInt: 53
                                                            HdlOp: INDEX
                                                                list: ops
                                                                    HdlValueId: in
                                                                    HdlValueInt: 54
                                                    HdlOp: INDEX
                                                        list: ops
                                                            HdlValueId: in
                                                            HdlValueInt: 55
                                            HdlOp: INDEX
                                                list: ops
                                                    HdlValueId: in
                                                    HdlValueInt: 57
                                    HdlOp: INDEX
                                        list: ops
                                            HdlValueId: in
                                            HdlValueInt: 58
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: in
                                    HdlValueInt: 60
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: in
                            HdlValueInt: 62
            HdlOp: INDEX
                list: ops
                    HdlValueId: in
                    HdlValueInt: 63

UPD HdlStmAssign@@ to 
    UPD HdlOp@@XOR to XOR
        MOV HdlOp@@INDEX to ops
        HdlOp: INDEX
            list: ops
                HdlValueId: in
                HdlValueInt: 62
        UPD HdlOp@@XOR to XOR
            UPD HdlOp@@XOR to XOR
                MOV HdlOp@@INDEX to ops
                HdlOp: INDEX
                    list: ops
                        HdlValueId: in
                        HdlValueInt: 59
                UPD HdlOp@@XOR to XOR
                    UPD HdlOp@@XOR to XOR
                        MOV HdlOp@@INDEX to ops
                        HdlOp: INDEX
                            list: ops
                                HdlValueId: in
                                HdlValueInt: 56
                    MOV HdlOp@@INDEX to ops
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: in
                            HdlValueInt: 58

UPD HdlStmAssign@@ to 
    UPD HdlOp@@XOR to XOR
        MOV HdlOp@@INDEX to ops
        HdlOp: INDEX
            list: ops
                HdlValueId: in
                HdlValueInt: 63
        UPD HdlOp@@XOR to XOR
            MOV HdlOp@@INDEX to ops
            HdlOp: INDEX
                list: ops
                    HdlValueId: in
                    HdlValueInt: 60
            UPD HdlOp@@XOR to XOR
                MOV HdlOp@@INDEX to ops
                HdlOp: INDEX
                    list: ops
                        HdlValueId: in
                        HdlValueInt: 59

UPD HdlStmAssign@@ to 
    UPD HdlOp@@XOR to XOR
        UPD HdlOp@@XOR to XOR
            MOV HdlOp@@INDEX to ops
            HdlOp: INDEX
                list: ops
                    HdlValueId: in
                    HdlValueInt: 61
            UPD HdlOp@@XOR to XOR
                UPD HdlOp@@XOR to XOR
                    MOV HdlOp@@INDEX to ops
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: in
                            HdlValueInt: 57
                MOV HdlOp@@INDEX to ops
                HdlOp: INDEX
                    list: ops
                        HdlValueId: in
                        HdlValueInt: 58

UPD HdlStmAssign@@ to 
    UPD HdlOp@@XOR to XOR
        MOV HdlOp@@INDEX to ops
        HdlOp: INDEX
            list: ops
                HdlValueId: in
                HdlValueInt: 61
        UPD HdlOp@@XOR to XOR
            UPD HdlOp@@XOR to XOR
                MOV HdlOp@@INDEX to ops
                HdlOp: INDEX
                    list: ops
                        HdlValueId: in
                        HdlValueInt: 59

UPD HdlStmAssign@@ to 
    UPD HdlOp@@XOR to XOR
        UPD HdlOp@@XOR to XOR
            UPD HdlOp@@XOR to XOR
                UPD HdlOp@@XOR to XOR
                    UPD HdlOp@@XOR to XOR
                        MOV HdlOp@@INDEX to ops
                        HdlOp: INDEX
                            list: ops
                                HdlValueId: in
                                HdlValueInt: 58
                    MOV HdlOp@@INDEX to ops
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: in
                            HdlValueInt: 59


CommitId: da4934f66af80ce1fc85e4c3359af37a5e7183a8
[rom_ctrl] Fix gnt/rvalid timing just after initial check finishes
--- a/hw/ip/rom_ctrl/rtl/rom_ctrl_mux.sv
+++ b/hw/ip/rom_ctrl/rtl/rom_ctrl_mux.sv
@@ -51,8 +51,8 @@ module rom_ctrl_mux #(
   // Spot if the select signal becomes one again after it went to zero
   assign alert_o = sel_i & ~sel_q;
 
-  // The bus can have access every cycle, once the select signal has gone to zero
-  assign bus_gnt_o    = ~sel_q;
+  // The bus can have access every cycle, once the select signal is zero.
+  assign bus_gnt_o    = ~sel_i;
   assign bus_rdata_o  = rom_clr_rdata_i;
   // A high rom_rvalid_i is a response to a bus request if sel_i was zero on the previous cycle.
   assign bus_rvalid_o = ~sel_q & rom_rvalid_i;
ParseResult:
UPD HdlStmAssign@@ to 
    UPD HdlOp@@NEG to NEG
        UPD HdlValueId@@sel_q to sel_i


CommitId: 204d98d1d7d42247de8225cf46f47525f61adf63
[vsg] fix _i/_o for several modules
--- a/hw/ip/spi_device/rtl/spi_fwmode.sv
+++ b/hw/ip/spi_device/rtl/spi_fwmode.sv
@@ -35,9 +35,9 @@ module spi_fwmode (
 
   // SPI Interface: clock is given (ckl_in_i, clk_out_i)
   input        csb_i,
-  input        sdi,
-  output logic sdo,
-  output logic sdo_oe
+  input        sdi_i,
+  output logic sdo_o,
+  output logic sdo_oe_o
 );
 
   import spi_device_pkg::*;

ParseResult:
UPD HdlIdDef@@sdi to sdi_i

UPD HdlIdDef@@sdo to sdo_o

UPD HdlIdDef@@sdo_oe to sdo_oe_o


CommitId: 204d98d1d7d42247de8225cf46f47525f61adf63
[vsg] fix _i/_o for several modules
--- a/hw/ip/spi_device/rtl/spi_fwmode.sv
+++ b/hw/ip/spi_device/rtl/spi_fwmode.sv
@@ -58,9 +58,9 @@ module spi_fwmode (
   // Serial to Parallel
   always_comb begin
     if (cfg_rxorder_i) begin
-      rx_data_d = {sdi, rx_data_q[BITS-1:1]};
+      rx_data_d = {sdi_i, rx_data_q[BITS-1:1]};
     end else begin
-      rx_data_d = {rx_data_q[BITS-2:0], sdi};
+      rx_data_d = {rx_data_q[BITS-2:0], sdi_i};
     end
   end
 

ParseResult:
UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@CONCAT to CONCAT
                UPD HdlValueId@@sdi to sdi_i
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@CONCAT to CONCAT
                UPD HdlValueId@@sdi to sdi_i


CommitId: 204d98d1d7d42247de8225cf46f47525f61adf63
[vsg] fix _i/_o for several modules
--- a/hw/ip/spi_device/rtl/spi_fwmode.sv
+++ b/hw/ip/spi_device/rtl/spi_fwmode.sv
@@ -121,9 +121,9 @@ module spi_fwmode (
     end
   end
 
-  assign sdo = (cfg_txorder_i) ? ((~first_bit) ? sdo_shift[0] : tx_data_i[0]) :
-                (~first_bit) ? sdo_shift[7] : tx_data_i[7] ;
-  assign sdo_oe = ~csb_i;
+  assign sdo_o = (cfg_txorder_i) ? ((~first_bit) ? sdo_shift[0] : tx_data_i[0]) :
+                  (~first_bit) ? sdo_shift[7] : tx_data_i[7] ;
+  assign sdo_oe_o = ~csb_i;
 
   always_ff @(posedge clk_out_i) begin
     if (cfg_txorder_i) begin
ParseResult:
UPD HdlStmAssign@@ to 
    UPD HdlValueId@@sdo to sdo_o

UPD HdlStmAssign@@ to 
    UPD HdlValueId@@sdo_oe to sdo_oe_o


CommitId: 92e9ebb031c9c90db52a3f3985afa352285c8497
[aes] Use fresh, random intermediate masks in "noreuse" Canright S-Box
--- a/hw/ip/aes/rtl/aes_sbox_canright_masked_noreuse.sv
+++ b/hw/ip/aes/rtl/aes_sbox_canright_masked_noreuse.sv
@@ -111,10 +117,11 @@ endmodule
 // Masked inverse in GF(2^8), using normal basis [y^16, y]
 // (see Formulas 3, 12, 18 and 19 in the paper)
 module aes_masked_inverse_gf2p8_noreuse (
-  input  logic [7:0] a,
-  input  logic [7:0] m,
-  input  logic [7:0] n,
-  output logic [7:0] a_inv
+  input  logic [7:0] a,    // input data masked by m
+  input  logic [7:0] m,    // input mask
+  input  logic [7:0] n,    // output mask
+  input  logic [9:0] prd,  // pseudo-random data, e.g. for intermediate masks
+  output logic [7:0] a_inv // output data masked by n
 );
 
   import aes_pkg::*;

ParseResult:
INS HdlIdDef@@prd to ports
HdlIdDef: prd
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 9
                    HdlValueInt: 0
    HdlDirection: IN


CommitId: 92e9ebb031c9c90db52a3f3985afa352285c8497
[aes] Use fresh, random intermediate masks in "noreuse" Canright S-Box
--- a/hw/ip/aes/rtl/aes_sbox_canright_masked_noreuse.sv
+++ b/hw/ip/aes/rtl/aes_sbox_canright_masked_noreuse.sv
@@ -159,20 +195,6 @@ module aes_masked_inverse_gf2p8_noreuse (
   assign b_4 = b_3 ^ mul_a0_m1;
   assign b   = b_4 ^ mul_m0_m1;
 
-  // r must be independent of q.
-  assign r = m1[3:2];
-
-  // Note that the paper states the following requirements on t:
-  // - t must be independent of r.
-  // - t1 must be independent of q0, t0 must be independent of q1.
-  // - t must be independent of m (for the final steps involving s)
-  // The paper suggests to use t = q. To select s = n for the output mask (s must be independent
-  // of t = q = n[7:4]), we would need t = m0 or similar (not r, m1[3:2] though), but this would
-  // break the random product distribution of aes_mul_gf2p4(m0, t), or aes_mul_gf2p4(m1, t) below
-  // (see Lemma 2 in the paper). For this reason, we select t = q here and apply a final mask
-  // switch from s = m to n after the inversion.
-  assign t = q;
-
   // b is masked by q, b_inv is masked by t.
   aes_masked_inverse_gf2p4_noreuse aes_masked_inverse_gf2p4 (
     .b     ( b     ),

ParseResult:
DEL HdlStmAssign@@ from objs
HdlStmAssign
    HdlOp: INDEX
        list: ops
            HdlValueId: m1
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 3
                    HdlValueInt: 2
    HdlValueId: r

DEL HdlStmAssign@@ from objs
HdlStmAssign
    HdlValueId: q
    HdlValueId: t


CommitId: 92e9ebb031c9c90db52a3f3985afa352285c8497
[aes] Use fresh, random intermediate masks in "noreuse" Canright S-Box
--- a/hw/ip/aes/rtl/aes_sbox_canright_masked_noreuse.sv
+++ b/hw/ip/aes/rtl/aes_sbox_canright_masked_noreuse.sv
@@ -182,14 +204,6 @@ module aes_masked_inverse_gf2p8_noreuse (
     .b_inv ( b_inv )
   );
 
-  // Note that the paper states the following requirements on s:
-  // - s must be independent of t
-  // - s1 must be independent of m0, s0 must be independent of m1.
-  // The paper suggests to use s = m (the input mask). To still end up with the specified output
-  // mask n, we will apply a final mask switch after the inversion.
-  assign s1 = m1;
-  assign s0 = m0;
-
   // Formulas 18 and 19
   // IMPORTANT: The following ops must be executed in order (left to right):
   // a1_inv = s1 ^ aes_mul_gf2p4(a0, b_inv)

ParseResult:
DEL HdlStmAssign@@ from objs
HdlStmAssign
    HdlValueId: m1
    HdlValueId: s1

DEL HdlStmAssign@@ from objs
HdlStmAssign
    HdlValueId: m0
    HdlValueId: s0


CommitId: 92e9ebb031c9c90db52a3f3985afa352285c8497
[aes] Use fresh, random intermediate masks in "noreuse" Canright S-Box
--- a/hw/ip/aes/rtl/aes_sbox_canright_masked_noreuse.sv
+++ b/hw/ip/aes/rtl/aes_sbox_canright_masked_noreuse.sv
@@ -222,27 +236,18 @@ module aes_masked_inverse_gf2p8_noreuse (
   assign a0_inv_2 = a0_inv_1 ^ mul_m1_b_inv;
   assign a0_inv   = a0_inv_2 ^ mul_m1_t;
 
-  // Note: a_inv is now masked by s = m, a was masked by m.
-  (* keep = "true" *) logic [7:0] a_inv_0;
-  assign a_inv_0 = {a1_inv, a0_inv};
-
-  // To have a_inv masked by n (the specified output mask), we perform a final mask switch.
-  // IMPORTANT: The following ops must be executed in order (left to right):
-  // a_inv = a_inv ^ n ^ m;
-  //
-  // Generate a_inv step by step.
-  (* keep = "true" *) logic [7:0] a_inv_1;
-  assign a_inv_1 = a_inv_0 ^ n;
-  assign a_inv   = a_inv_1 ^ m;
+  // Note: a_inv is now masked by s = n, a was masked by m.
+  assign a_inv = {a1_inv, a0_inv};
 
 endmodule
 
 module aes_sbox_canright_masked_noreuse (
   input  aes_pkg::ciph_op_e op_i,
-  input  logic [7:0]        data_i,     // masked, the actual input data is data_i ^ in_mask_i
-  input  logic [7:0]        in_mask_i,  // input mask, independent from actual input data
-  input  logic [7:0]        out_mask_i, // output mask, independent from input mask
-  output logic [7:0]        data_o      // masked, the actual output data is data_o ^ out_mask_i
+  input  logic [7:0]        data_i,        // masked, the actual input data is data_i ^ in_mask_i
+  input  logic [7:0]        in_mask_i,     // input mask, independent from actual input data
+  input  logic [7:0]        out_mask_i,    // output mask, independent from input mask
+  input  logic [9:0]        prd_masking_i, // pseudo-random data, e.g. for intermediate masks
+  output logic [7:0]        data_o         // masked, the actual output data is data_o ^ out_mask_i
 );
 
   import aes_pkg::*;

ParseResult:
UPD HdlStmAssign@@ to 
    UPD HdlValueId@@a_inv_0 to a_inv

INS HdlIdDef@@prd_masking_i to ports
HdlIdDef: prd_masking_i
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 9
                    HdlValueInt: 0
    HdlDirection: IN

DEL HdlIdDef@@a_inv_0 from objs
HdlIdDef: a_inv_0
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 7
                    HdlValueInt: 0
    HdlDirection: INTERNAL

DEL HdlIdDef@@a_inv_1 from objs
HdlIdDef: a_inv_1
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 7
                    HdlValueInt: 0
    HdlDirection: INTERNAL

DEL HdlStmAssign@@ from objs
HdlStmAssign
    HdlOp: XOR
        list: ops
            HdlValueId: a_inv_0
            HdlValueId: n
    HdlValueId: a_inv_1

DEL HdlStmAssign@@ from objs
HdlStmAssign
    HdlOp: XOR
        list: ops
            HdlValueId: a_inv_1
            HdlValueId: m
    HdlValueId: a_inv


CommitId: aace53c2dc257477eacada57382e7422dfda12da
[entropy_src/rtl] fix for dv sanity test
--- a/hw/ip/entropy_src/rtl/entropy_src_core.sv
+++ b/hw/ip/entropy_src/rtl/entropy_src_core.sv
@@ -194,7 +194,9 @@ module entropy_src_core import entropy_src_pkg::*; #(
   logic                     pfifo_swread_pop;
 
   logic [SeedLen-1:0]       final_es_data;
-
+  logic                     es_hw_if_req;
+  logic                     es_hw_if_ack;
+  logic                     es_hw_if_fifo_pop;
 
   // flops
   logic [15:0] es_rate_cntr_q, es_rate_cntr_d;

ParseResult:
INS HdlIdDef@@es_hw_if_req to objs
HdlIdDef: es_hw_if_req
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

INS HdlIdDef@@es_hw_if_ack to objs
HdlIdDef: es_hw_if_ack
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

INS HdlIdDef@@es_hw_if_fifo_pop to objs
HdlIdDef: es_hw_if_fifo_pop
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL


CommitId: aace53c2dc257477eacada57382e7422dfda12da
[entropy_src/rtl] fix for dv sanity test
--- a/hw/ip/entropy_src/rtl/entropy_src_core.sv
+++ b/hw/ip/entropy_src/rtl/entropy_src_core.sv
@@ -996,10 +998,10 @@ module entropy_src_core import entropy_src_pkg::*; #(
   // fifo controls
   assign sfifo_esfinal_push = sfifo_esfinal_not_full &&
          ((main_stage_pop || bypass_stage_pop) && !ht_failed_q);
-  assign sfifo_esfinal_clr  = ~es_enable;
+  assign sfifo_esfinal_clr  = !es_enable;
   assign sfifo_esfinal_wdata = {fips_compliance,final_es_data};
-  assign sfifo_esfinal_pop = es_route_to_sw ? pfifo_swread_not_full :
-         (es_enable && entropy_src_hw_if_i.es_req);
+  assign sfifo_esfinal_pop = es_route_to_sw ? pfifo_swread_push :
+         es_hw_if_fifo_pop;
   assign {esfinal_fips_flag,esfinal_data} = sfifo_esfinal_rdata;
 
   // fifo err

ParseResult:
INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: TERNARY
        list: ops
            HdlValueId: es_route_to_sw
            HdlValueId: pfifo_swread_push
            HdlValueId: es_hw_if_fifo_pop
    HdlValueId: sfifo_esfinal_pop

UPD HdlStmAssign@@ to 
    UPD HdlOp@@NEG to NEG_LOG

UPD HdlStmAssign@@ to 
    UPD HdlOp@@TERNARY to TERNARY
        UPD HdlOp@@AND_LOG to AND_LOG
            MOV HdlOp@@DOT to ops
            HdlOp: DOT
                list: ops
                    HdlValueId: entropy_src_hw_if_i
                    HdlValueId: es_req
            DEL HdlValueId@@es_enable from ops
            DEL list@@ops from AND_LOG
        DEL HdlValueId@@es_route_to_sw from ops
        DEL HdlValueId@@pfifo_swread_not_full from ops
        DEL HdlOp@@AND_LOG from ops
        DEL list@@ops from TERNARY
    DEL HdlOp@@TERNARY from 
    DEL HdlValueId@@sfifo_esfinal_pop from 

DEL HdlStmAssign@@ from objs


CommitId: aace53c2dc257477eacada57382e7422dfda12da
[entropy_src/rtl] fix for dv sanity test
--- a/hw/ip/entropy_src/rtl/entropy_src_core.sv
+++ b/hw/ip/entropy_src/rtl/entropy_src_core.sv
@@ -1008,15 +1010,25 @@ module entropy_src_core import entropy_src_pkg::*; #(
          (sfifo_esfinal_pop && !sfifo_esfinal_not_empty );
 
   // drive out hw interface
-  assign entropy_src_hw_if_o.es_ack = sfifo_esfinal_not_empty && !es_route_to_sw;
+  assign es_hw_if_req = entropy_src_hw_if_i.es_req;
+  assign entropy_src_hw_if_o.es_ack = es_hw_if_ack;
   assign entropy_src_hw_if_o.es_bits = esfinal_data;
   assign entropy_src_hw_if_o.es_fips = esfinal_fips_flag;
 
+  entropy_src_ack_sm u_entropy_src_ack_sm (
+    .clk_i            (clk_i),
+    .rst_ni           (rst_ni),
+    .req_i            (es_hw_if_req),
+    .ack_o            (es_hw_if_ack),
+    .fifo_not_empty_i (sfifo_esfinal_not_empty && !es_route_to_sw),
+    .fifo_pop_o       (es_hw_if_fifo_pop)
+  );
+
   //--------------------------------------------
   // software es read path
   //--------------------------------------------
 
-  prim_packer_fifo # (
+  prim_packer_fifo #(
     .InW(SeedLen),
     .OutW(FullRegWidth)
   ) u_prim_packer_fifo_swread (

ParseResult:
INS HdlStmAssign@@ to objs

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlValueId: es_hw_if_ack
    HdlValueId: entropy_src_hw_if_o

UPD HdlStmAssign@@ to 
    INS HdlValueId@@es_hw_if_req to 

UPD HdlStmAssign@@ to 
    MOV HdlOp@@AND_LOG to 
    HdlOp: AND_LOG
        list: ops
            HdlValueId: sfifo_esfinal_not_empty
            HdlOp: NEG_LOG
                list: ops
                    HdlValueId: es_route_to_sw
    DEL HdlValueId@@entropy_src_hw_if_o from 

DEL HdlStmAssign@@ from objs


CommitId: aace53c2dc257477eacada57382e7422dfda12da
[entropy_src/rtl] fix for dv sanity test
--- a/hw/ip/entropy_src/rtl/entropy_src_core.sv
+++ b/hw/ip/entropy_src/rtl/entropy_src_core.sv
@@ -1032,7 +1044,7 @@ module entropy_src_core import entropy_src_pkg::*; #(
     .depth_o    ()
   );
 
-  assign pfifo_swread_push = sfifo_esfinal_pop;
+  assign pfifo_swread_push = es_route_to_sw && pfifo_swread_not_full && sfifo_esfinal_not_empty;
   assign pfifo_swread_wdata = esfinal_data;
 
   assign pfifo_swread_clr = !es_enable;
ParseResult:
INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: AND_LOG
        list: ops
            HdlOp: AND_LOG
                list: ops
                    HdlValueId: es_route_to_sw
                    HdlValueId: pfifo_swread_not_full
            HdlValueId: sfifo_esfinal_not_empty
    HdlValueId: pfifo_swread_push

DEL HdlStmAssign@@ from objs
HdlStmAssign
    HdlValueId: sfifo_esfinal_pop
    HdlValueId: pfifo_swread_push


CommitId: cea5b53e94c5d570e679e2ec72522fd2e8a4ee68
[csrng/rtl] bug fix for cmds with additional data
--- a/hw/ip/csrng/rtl/csrng_core.sv
+++ b/hw/ip/csrng/rtl/csrng_core.sv
@@ -62,6 +62,9 @@ module csrng_core import csrng_pkg::*; #(
   localparam int BlkEncArbWidth = KeyLen+BlkLen+StateId+Cmd;
   localparam int NUpdateArbReqs = 2;
   localparam int UpdateArbWidth = KeyLen+BlkLen+SeedLen+StateId+Cmd;
+  localparam int MaxClen = 12;
+  localparam int ADataDepthWidth = SeedLen/AppCmdWidth;
+  localparam unsigned ADataDepthClog = $clog2(ADataDepthWidth)+1;
 
   // signals
   // interrupt signals

ParseResult:
INS HdlIdDef@@MaxClen to objs
HdlIdDef: MaxClen
    HdlValueId: int
    HdlValueInt: 12
    HdlDirection: INTERNAL

INS HdlIdDef@@ADataDepthWidth to objs
HdlIdDef: ADataDepthWidth
    HdlValueId: int
    HdlOp: DIV
        list: ops
            HdlValueId: SeedLen
            HdlValueId: AppCmdWidth
    HdlDirection: INTERNAL

INS HdlIdDef@@ADataDepthClog to objs
HdlIdDef: ADataDepthClog
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: wire
    HdlOp: ADD
        list: ops
            HdlOp: CALL
                list: ops
                    HdlValueId: $clog2
                    HdlValueId: ADataDepthWidth
            HdlValueInt: 1
    HdlDirection: INTERNAL


CommitId: cea5b53e94c5d570e679e2ec72522fd2e8a4ee68
[csrng/rtl] bug fix for cmds with additional data
--- a/hw/ip/csrng/rtl/csrng_core.sv
+++ b/hw/ip/csrng/rtl/csrng_core.sv
@@ -91,6 +94,9 @@ module csrng_core import csrng_pkg::*; #(
   logic [AppCmdWidth-1:0] acmd_bus;
 
   logic [SeedLen-1:0]     packer_adata;
+  logic [ADataDepthClog-1:0] packer_adata_depth;
+  logic                   packer_adata_pop;
+  logic                   packer_adata_clr;
   logic [SeedLen-1:0]     seed_diversification;
 
   logic                   cmd_entropy_req;

ParseResult:
INS HdlIdDef@@packer_adata_depth to objs
HdlIdDef: packer_adata_depth
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlOp: SUB
                        list: ops
                            HdlValueId: ADataDepthClog
                            HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: INTERNAL

INS HdlIdDef@@packer_adata_pop to objs
HdlIdDef: packer_adata_pop
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL


CommitId: cea5b53e94c5d570e679e2ec72522fd2e8a4ee68
[csrng/rtl] bug fix for cmds with additional data
--- a/hw/ip/csrng/rtl/csrng_core.sv
+++ b/hw/ip/csrng/rtl/csrng_core.sv
@@ -330,7 +337,6 @@ module csrng_core import csrng_pkg::*; #(
   logic        cmd_req_dly_q, cmd_req_dly_d;
   logic [Cmd-1:0] cmd_req_ccmd_dly_q, cmd_req_ccmd_dly_d;
   logic           cs_aes_halt_q, cs_aes_halt_d;
-  logic           packer_adata_pop_q, packer_adata_pop_d;
   logic [SeedLen-1:0] entropy_src_seed_q, entropy_src_seed_d;
   logic               entropy_src_fips_q, entropy_src_fips_d;
 

ParseResult:
MOV HdlIdDef@@packer_adata_pop_d to objs
HdlIdDef: packer_adata_pop_d
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

MOV HdlIdDef@@packer_adata_pop_q to objs
HdlIdDef: packer_adata_pop_q
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

UPD HdlIdDef@@packer_adata_pop_d to packer_adata_clr

UPD HdlIdDef@@packer_adata_pop_q to clr_adata_packer


CommitId: cea5b53e94c5d570e679e2ec72522fd2e8a4ee68
[csrng/rtl] bug fix for cmds with additional data
--- a/hw/ip/csrng/rtl/csrng_core.sv
+++ b/hw/ip/csrng/rtl/csrng_core.sv
@@ -346,7 +352,6 @@ module csrng_core import csrng_pkg::*; #(
       cmd_req_dly_q <= '0;
       cmd_req_ccmd_dly_q <= '0;
       cs_aes_halt_q <= '0;
-      packer_adata_pop_q <= '0;
       entropy_src_seed_q <= '0;
       entropy_src_fips_q <= '0;
     end else begin

ParseResult:
DEL HdlStmAssign@@ from body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: packer_adata_pop_q


CommitId: cea5b53e94c5d570e679e2ec72522fd2e8a4ee68
[csrng/rtl] bug fix for cmds with additional data
--- a/hw/ip/csrng/rtl/csrng_core.sv
+++ b/hw/ip/csrng/rtl/csrng_core.sv
@@ -360,7 +365,6 @@ module csrng_core import csrng_pkg::*; #(
       cmd_req_dly_q <= cmd_req_dly_d;
       cmd_req_ccmd_dly_q <= cmd_req_ccmd_dly_d;
       cs_aes_halt_q <= cs_aes_halt_d;
-      packer_adata_pop_q <= packer_adata_pop_d;
       entropy_src_seed_q <= entropy_src_seed_d;
       entropy_src_fips_q <= entropy_src_fips_d;
     end

ParseResult:
DEL HdlStmAssign@@ from body
HdlStmAssign
    HdlValueId: packer_adata_pop_d
    HdlValueId: packer_adata_pop_q


CommitId: cea5b53e94c5d570e679e2ec72522fd2e8a4ee68
[csrng/rtl] bug fix for cmds with additional data
--- a/hw/ip/csrng/rtl/csrng_core.sv
+++ b/hw/ip/csrng/rtl/csrng_core.sv
@@ -891,22 +896,21 @@ module csrng_core import csrng_pkg::*; #(
   ) u_prim_packer_fifo_adata (
     .clk_i      (clk_i),
     .rst_ni     (rst_ni),
-    .clr_i      (!cs_enable || packer_adata_pop_q),
+    .clr_i      (!cs_enable || packer_adata_clr),
     .wvalid_i   (acmd_mop),
     .wdata_i    (acmd_bus),
     .wready_o   (),
     .rvalid_o   (),
     .rdata_o    (packer_adata),
-    .rready_i   (packer_adata_pop_q),
-    .depth_o    ()
+    .rready_i   (packer_adata_pop),
+    .depth_o    (packer_adata_depth)
   );
 
-  assign packer_adata_pop_d = cs_enable &&
-         ((instant_req && flag0_q) ||
-          reseed_req ||
-          update_req ||
-          uninstant_req ||
-          (generate_req && flag0_q));
+  assign packer_adata_pop = cs_enable &&
+         clr_adata_packer && (packer_adata_depth == ADataDepthClog'(MaxClen));
+
+  assign packer_adata_clr = cs_enable &&
+         clr_adata_packer && (packer_adata_depth < ADataDepthClog'(MaxClen));
 
   //-------------------------------------
   // csrng_state_db nstantiation
ParseResult:
INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: AND_LOG
        list: ops
            HdlOp: AND_LOG
                list: ops
                    HdlValueId: cs_enable
                    HdlValueId: clr_adata_packer
            HdlOp: EQ
                list: ops
                    HdlValueId: packer_adata_depth
                    HdlOp: CALL
                        list: ops
                            HdlValueId: ADataDepthClog
                            HdlValueId: MaxClen
    HdlValueId: packer_adata_pop

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: AND_LOG
        list: ops
            HdlOp: AND_LOG
                list: ops
                    HdlValueId: cs_enable
                    HdlValueId: clr_adata_packer
            HdlOp: LT
                list: ops
                    HdlValueId: packer_adata_depth
                    HdlOp: CALL
                        list: ops
                            HdlValueId: ADataDepthClog
                            HdlValueId: MaxClen
    HdlValueId: packer_adata_clr

DEL HdlStmAssign@@ from objs
HdlStmAssign
    HdlOp: AND_LOG
        list: ops
            HdlValueId: cs_enable
            HdlOp: OR_LOG
                list: ops
                    HdlOp: OR_LOG
                        list: ops
                            HdlOp: OR_LOG
                                list: ops
                                    HdlOp: OR_LOG
                                        list: ops
                                            HdlOp: AND_LOG
                                                list: ops
                                                    HdlValueId: instant_req
                                                    HdlValueId: flag0_q
                                            HdlValueId: reseed_req
                                    HdlValueId: update_req
                            HdlValueId: uninstant_req
                    HdlOp: AND_LOG
                        list: ops
                            HdlValueId: generate_req
                            HdlValueId: flag0_q
    HdlValueId: packer_adata_pop_d


CommitId: 53ef2ec43c1c1eb00b771e17fc157f5bb1103ed5
Update lowrisc_ibex to lowRISC/ibex@d14312c
--- a/hw/vendor/lowrisc_ibex/examples/fpga/artya7-100/rtl/ram_1p.sv
+++ b/hw/vendor/lowrisc_ibex/examples/fpga/artya7-100/rtl/ram_1p.sv
@@ -42,7 +42,7 @@ module ram_1p #(
     if (!rst_ni) begin
       rvalid_o <= '0;
     end else begin
-      rvalid_o <= req_i && ~write_i;
+      rvalid_o <= req_i;
     end
   end
 
ParseResult:
UPD HdlStmAssign@@ to 
    UPD HdlOp@@AND_LOG to AND_LOG
        MOV HdlValueId@@req_i to ops
        HdlValueId: req_i
        DEL HdlOp@@NEG from ops
        HdlOp: NEG
            list: ops
                HdlValueId: write_i
        DEL list@@ops from AND_LOG
    DEL HdlOp@@AND_LOG from 


CommitId: efaa97eb056324fec332981139a3370db290679a
[ast] AscenLint fixes and new analog typedef
--- a/hw/top_earlgrey/ip/ast/rtl/rng.sv
+++ b/hw/top_earlgrey/ip/ast/rtl/rng.sv
@@ -5,14 +5,8 @@
 // *Name: rng
 // *Module Description:  Random (bit/s) Generator
 //############################################################################
-`timescale 1ns / 10ps
 
 module rng #(
-`ifndef VERILATOR
-// synopsys translate_off
-  parameter time RNG_EN_RDLY = 5us,
-// synopsys translate_on
-`endif
   parameter int EntropyStreams = 4
 ) (
   input clk_i,

ParseResult:
DEL HdlIdDef@@RNG_EN_RDLY from params
HdlIdDef: RNG_EN_RDLY
    HdlValueId: time
    HdlExprNotImplemented: value
    HdlDirection: INTERNAL


CommitId: efaa97eb056324fec332981139a3370db290679a
[ast] AscenLint fixes and new analog typedef
--- a/hw/top_earlgrey/ip/ast/rtl/rng.sv
+++ b/hw/top_earlgrey/ip/ast/rtl/rng.sv
@@ -72,8 +60,11 @@ logic rng_rdy;
 logic [2-1:0] rng_rdy_cnt;
 
 always_ff @( posedge rng_clk_o, negedge rng_rst_n ) begin
-  if ( !rng_rst_n )    rng_rdy_cnt <= 2'b00;
-  else if ( !rng_rdy ) rng_rdy_cnt <= rng_rdy_cnt + 1'b1;
+  if ( !rng_rst_n ) begin
+    rng_rdy_cnt <= 2'b00;
+  end else if ( !rng_rdy ) begin
+    rng_rdy_cnt <= rng_rdy_cnt + 1'b1;
+  end
 end
 
 assign rng_rdy = (rng_rdy_cnt == 2'b11);

ParseResult:
UPD HdlStmIf@@ to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmIf@@ to 
    INS HdlStmBlock@@SEQ to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmAssign@@if_true to 

MOV HdlStmAssign@@if_true to 
HdlStmAssign: if_true
    HdlValueInt: 00
    HdlValueId: rng_rdy_cnt

MOV HdlStmAssign@@ to 
HdlStmAssign
    HdlOp: ADD
        list: ops
            HdlValueId: rng_rdy_cnt
            HdlValueInt: 1
    HdlValueId: rng_rdy_cnt


CommitId: efaa97eb056324fec332981139a3370db290679a
[ast] AscenLint fixes and new analog typedef
--- a/hw/top_earlgrey/ip/ast/rtl/rng.sv
+++ b/hw/top_earlgrey/ip/ast/rtl/rng.sv
@@ -81,8 +72,11 @@ assign rng_rdy = (rng_rdy_cnt == 2'b11);
 logic [EntropyStreams-1:0] rng_b;
 
 always_ff @( posedge rng_clk_o, negedge rng_rst_n ) begin
-  if ( !rng_rst_n ) rng_b <= {EntropyStreams{1'b0}};
-  else              rng_b <= lfsr_val[EntropyStreams-1:0];
+  if ( !rng_rst_n ) begin
+    rng_b <= {EntropyStreams{1'b0}};
+  end else begin
+    rng_b <= lfsr_val[EntropyStreams-1:0];
+  end
 end
 
 

ParseResult:
UPD HdlStmIf@@ to 
    INS HdlStmBlock@@SEQ to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmAssign@@if_true to 

MOV HdlStmAssign@@if_true to 
HdlStmAssign: if_true
    HdlOp: REPL_CONCAT
        list: ops
            HdlValueId: EntropyStreams
            HdlValueInt: 0
    HdlValueId: rng_b

UPD HdlStmAssign@@if_false to 

MOV HdlStmAssign@@if_false to 
HdlStmAssign: if_false
    HdlOp: INDEX
        list: ops
            HdlValueId: lfsr_val
            HdlOp: DOWNTO
                list: ops
                    HdlOp: SUB
                        list: ops
                            HdlValueId: EntropyStreams
                            HdlValueInt: 1
                    HdlValueInt: 0
    HdlValueId: rng_b


CommitId: 3a5fdd65bfd8e71701c7e019ae980ec39610b474
Update lowrisc_ibex to lowRISC/ibex@5826af8
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_alu.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_alu.sv
@@ -228,8 +228,10 @@ module ibex_alu #(
   logic [5:0] shift_amt;
   logic [5:0] shift_amt_compl; // complementary shift amount (32 - shift_amt)
 
-  logic [31:0] shift_result;
+  logic [31:0] shift_operand;
   logic [32:0] shift_result_ext;
+  logic        unused_shift_result_ext;
+  logic [31:0] shift_result;
   logic [31:0] shift_result_rev;
 
   // zbf

ParseResult:
MOV HdlIdDef@@shift_result to objs
HdlIdDef: shift_result
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 31
                    HdlValueInt: 0
    HdlDirection: INTERNAL

INS HdlIdDef@@shift_operand to objs
HdlIdDef: shift_operand
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 31
                    HdlValueInt: 0
    HdlDirection: INTERNAL

INS HdlIdDef@@unused_shift_result_ext to objs
HdlIdDef: unused_shift_result_ext
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL


CommitId: 3a5fdd65bfd8e71701c7e019ae980ec39610b474
Update lowrisc_ibex to lowRISC/ibex@5826af8
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_alu.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_alu.sv
@@ -308,19 +310,21 @@ module ibex_alu #(
     // select shifter input
     // for bfp, sbmode and shift_left the corresponding bit-reversed input is chosen.
     if (RV32B == RV32BNone) begin
-      shift_result = shift_left ? operand_a_rev : operand_a_i;
+      shift_operand = shift_left ? operand_a_rev : operand_a_i;
     end else begin
       unique case (1'b1)
-        bfp_op:       shift_result = bfp_mask_rev;
-        shift_sbmode: shift_result = 32'h8000_0000;
-        default:      shift_result = shift_left ? operand_a_rev : operand_a_i;
+        bfp_op:       shift_operand = bfp_mask_rev;
+        shift_sbmode: shift_operand = 32'h8000_0000;
+        default:      shift_operand = shift_left ? operand_a_rev : operand_a_i;
       endcase
     end
 
     shift_result_ext =
-        $signed({shift_ones | (shift_arith & shift_result[31]), shift_result}) >>> shift_amt[4:0];
+        $unsigned($signed({shift_ones | (shift_arith & shift_operand[31]), shift_operand}) >>>
+                  shift_amt[4:0]);
 
-    shift_result = shift_result_ext[31:0];
+    shift_result            = shift_result_ext[31:0];
+    unused_shift_result_ext = shift_result_ext[32];
 
     for (int unsigned i=0; i<32; i++) begin
       shift_result_rev[i] = shift_result[31-i];

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: unused_shift_result_ext
                HdlOp: INDEX
                    list: ops
                        HdlValueId: shift_result_ext
                        HdlValueInt: 32
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlOp@@CALL to ops
            UPD HdlOp@@CALL to CALL
                INS list@@ops to CALL
                INS HdlValueId@@$unsigned to ops

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            MOV HdlOp@@SRA to ops
            HdlOp: SRA
                list: ops
                    HdlOp: CALL
                        list: ops
                            HdlValueId: $signed
                            HdlOp: CONCAT
                                list: ops
                                    HdlOp: OR
                                        list: ops
                                            HdlValueId: shift_ones
                                            HdlOp: AND
                                                list: ops
                                                    HdlValueId: shift_arith
                                                    HdlOp: INDEX
                                                        list: ops
                                                            HdlValueId: shift_result
                                                            HdlValueInt: 31
                                    HdlValueId: shift_result
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: shift_amt
                            HdlOp: DOWNTO
                                list: ops
                                    HdlValueInt: 4
                                    HdlValueInt: 0
            UPD HdlOp@@SRA to SRA
                UPD HdlOp@@CALL to CALL
                    UPD HdlOp@@CONCAT to CONCAT
                        UPD HdlValueId@@shift_result to shift_operand
                        UPD HdlOp@@OR to OR
                            UPD HdlOp@@AND to AND
                                UPD HdlOp@@INDEX to INDEX
                                    UPD HdlValueId@@shift_result to shift_operand

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@shift_result to shift_operand

UPD HdlStmCase@@{'__class__': 'HdlValueInt', 'base': 2, 'bits': 1, 'val': '1'}  to {'__class__': 'HdlValueInt', 'base': 2, 'bits': 1, 'val': '1'} 
    UPD HdlOp@@ASSIGN to ASSIGN
        UPD HdlValueId@@shift_result to shift_operand
    UPD HdlOp@@ASSIGN to ASSIGN
        UPD HdlValueId@@shift_result to shift_operand
    UPD HdlOp@@ASSIGN to ASSIGN
        UPD HdlValueId@@shift_result to shift_operand


CommitId: 3a5fdd65bfd8e71701c7e019ae980ec39610b474
Update lowrisc_ibex to lowRISC/ibex@5826af8
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_alu.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_alu.sv
@@ -656,10 +660,14 @@ module ibex_alu #(
 
         if (shuffle_flip) begin
           shuffle_result = (shuffle_result & 32'h8822_4411) |
-              ((shuffle_result << 6)  & FLIP_MASK_L[0]) | ((shuffle_result >> 6)  & FLIP_MASK_R[0]) |
-              ((shuffle_result << 9)  & FLIP_MASK_L[1]) | ((shuffle_result >> 9)  & FLIP_MASK_R[1]) |
-              ((shuffle_result << 15) & FLIP_MASK_L[2]) | ((shuffle_result >> 15) & FLIP_MASK_R[2]) |
-              ((shuffle_result << 21) & FLIP_MASK_L[3]) | ((shuffle_result >> 21) & FLIP_MASK_R[3]);
+              ((shuffle_result << 6)  & FLIP_MASK_L[0]) |
+              ((shuffle_result >> 6)  & FLIP_MASK_R[0]) |
+              ((shuffle_result << 9)  & FLIP_MASK_L[1]) |
+              ((shuffle_result >> 9)  & FLIP_MASK_R[1]) |
+              ((shuffle_result << 15) & FLIP_MASK_L[2]) |
+              ((shuffle_result >> 15) & FLIP_MASK_R[2]) |
+              ((shuffle_result << 21) & FLIP_MASK_L[3]) |
+              ((shuffle_result >> 21) & FLIP_MASK_R[3]);
         end
 
         if (shuffle_mode[3]) begin

ParseResult:
UPD HdlStmIf@@ to 
    INS list@@elifs to 

UPD HdlStmIf@@ to 
    INS list@@elifs to 

UPD HdlStmIf@@ to 
    DEL list@@elifs from 

UPD HdlStmIf@@ to 
    DEL list@@elifs from 


CommitId: 3a5fdd65bfd8e71701c7e019ae980ec39610b474
Update lowrisc_ibex to lowRISC/ibex@5826af8
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_alu.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_alu.sv
@@ -685,10 +693,14 @@ module ibex_alu #(
 
         if (shuffle_flip) begin
           shuffle_result = (shuffle_result & 32'h8822_4411) |
-              ((shuffle_result << 6)  & FLIP_MASK_L[0]) | ((shuffle_result >> 6) & FLIP_MASK_R[0])  |
-              ((shuffle_result << 9)  & FLIP_MASK_L[1]) | ((shuffle_result >> 9) & FLIP_MASK_R[1])  |
-              ((shuffle_result << 15) & FLIP_MASK_L[2]) | ((shuffle_result >> 15) & FLIP_MASK_R[2]) |
-              ((shuffle_result << 21) & FLIP_MASK_L[3]) | ((shuffle_result >> 21) & FLIP_MASK_R[3]);
+              ((shuffle_result << 6)  & FLIP_MASK_L[0]) |
+              ((shuffle_result >> 6)  & FLIP_MASK_R[0]) |
+              ((shuffle_result << 9)  & FLIP_MASK_L[1]) |
+              ((shuffle_result >> 9)  & FLIP_MASK_R[1]) |
+              ((shuffle_result << 15) & FLIP_MASK_L[2]) |
+              ((shuffle_result >> 15) & FLIP_MASK_R[2]) |
+              ((shuffle_result << 21) & FLIP_MASK_L[3]) |
+              ((shuffle_result >> 21) & FLIP_MASK_R[3]);
         end
       end
 

ParseResult:
UPD HdlStmIf@@ to 
    INS list@@elifs to 

UPD HdlStmIf@@ to 
    INS list@@elifs to 

UPD HdlStmIf@@ to 
    DEL list@@elifs from 

UPD HdlStmIf@@ to 
    DEL list@@elifs from 


CommitId: 3a5fdd65bfd8e71701c7e019ae980ec39610b474
Update lowrisc_ibex to lowRISC/ibex@5826af8
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_alu.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_alu.sv
@@ -1048,6 +1060,8 @@ module ibex_alu #(
         endcase
       end
     end else begin : gen_alu_rvb_notfull
+      logic [31:0] unused_imd_val_q_1;
+      assign unused_imd_val_q_1   = imd_val_q_i[1];
       assign shuffle_result       = '0;
       assign butterfly_result     = '0;
       assign invbutterfly_result  = '0;

ParseResult:
UPD HdlStmIf@@ to 
    INS list@@elifs to 

UPD HdlStmIf@@ to 
    INS list@@elifs to 

INS HdlIdDef@@unused_imd_val_q_1 to body
HdlIdDef: unused_imd_val_q_1
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 31
                    HdlValueInt: 0
    HdlDirection: INTERNAL

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlOp: INDEX
        list: ops
            HdlValueId: imd_val_q_i
            HdlValueInt: 1
    HdlValueId: unused_imd_val_q_1

UPD HdlStmIf@@ to 
    DEL list@@elifs from 

UPD HdlStmIf@@ to 
    DEL list@@elifs from 


CommitId: 3a5fdd65bfd8e71701c7e019ae980ec39610b474
Update lowrisc_ibex to lowRISC/ibex@5826af8
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_alu.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_alu.sv
@@ -1070,8 +1084,8 @@ module ibex_alu #(
     always_comb begin
       unique case (operator_i)
         ALU_CMOV: begin
-            multicycle_result = (operand_b_i == 32'h0) ? operand_a_i : imd_val_q_i[0];
-            imd_val_d_o = '{operand_a_i, 32'h0};
+          multicycle_result = (operand_b_i == 32'h0) ? operand_a_i : imd_val_q_i[0];
+          imd_val_d_o = '{operand_a_i, 32'h0};
           if (instr_first_cycle_i) begin
             imd_val_we_o = 2'b01;
           end else begin

ParseResult:
UPD HdlStmIf@@ to 
    INS list@@elifs to 

UPD HdlStmIf@@ to 
    INS list@@elifs to 

UPD HdlStmIf@@ to 
    DEL list@@elifs from 


CommitId: 3a5fdd65bfd8e71701c7e019ae980ec39610b474
Update lowrisc_ibex to lowRISC/ibex@5826af8
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_alu.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_alu.sv
@@ -1152,6 +1166,12 @@ module ibex_alu #(
 
 
   end else begin : g_no_alu_rvb
+    logic [31:0] unused_imd_val_q[2];
+    assign unused_imd_val_q           = imd_val_q_i;
+    logic [31:0] unused_butterfly_result;
+    assign unused_butterfly_result    = butterfly_result;
+    logic [31:0] unused_invbutterfly_result;
+    assign unused_invbutterfly_result = invbutterfly_result;
     // RV32B result signals
     assign bitcnt_result       = '0;
     assign minmax_result       = '0;

ParseResult:
UPD HdlStmIf@@ to 
    INS list@@elifs to 

INS HdlIdDef@@unused_imd_val_q to body
HdlIdDef: unused_imd_val_q
    HdlOp: INDEX
        list: ops
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: logic
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 31
                            HdlValueInt: 0
            HdlValueInt: 2
    HdlDirection: INTERNAL

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueId: imd_val_q_i
    HdlValueId: unused_imd_val_q

INS HdlIdDef@@unused_butterfly_result to body
HdlIdDef: unused_butterfly_result
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 31
                    HdlValueInt: 0
    HdlDirection: INTERNAL

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueId: butterfly_result
    HdlValueId: unused_butterfly_result

INS HdlIdDef@@unused_invbutterfly_result to body
HdlIdDef: unused_invbutterfly_result
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 31
                    HdlValueInt: 0
    HdlDirection: INTERNAL

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueId: invbutterfly_result
    HdlValueId: unused_invbutterfly_result

UPD HdlStmIf@@ to 
    DEL list@@elifs from 


CommitId: 3a5fdd65bfd8e71701c7e019ae980ec39610b474
Update lowrisc_ibex to lowRISC/ibex@5826af8
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_alu.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_alu.sv
@@ -1245,4 +1265,7 @@ module ibex_alu #(
     endcase
   end
 
+  logic unused_shift_amt_compl;
+  assign unused_shift_amt_compl = shift_amt_compl[5];
+
 endmodule
ParseResult:
INS HdlIdDef@@unused_shift_amt_compl to objs
HdlIdDef: unused_shift_amt_compl
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: INDEX
        list: ops
            HdlValueId: shift_amt_compl
            HdlValueInt: 5
    HdlValueId: unused_shift_amt_compl


CommitId: 5bf97341e1737da17ce758cc8d82f100f8977365
[fpga, sw] Enable SCA on ChipWhisperer CW310 FPGA board
--- a/hw/top_earlgrey/rtl/autogen/chip_earlgrey_cw310.sv
+++ b/hw/top_earlgrey/rtl/autogen/chip_earlgrey_cw310.sv
@@ -38,6 +38,8 @@ module chip_earlgrey_cw310 #(
   inout IO_UPHY_OE_N, // Manual Pad
   inout IO_UPHY_SENSE, // Manual Pad
   inout IO_UPHY_DPPULLUP, // Manual Pad
+  inout IO_CLKOUT, // Manual Pad
+  inout IO_TRIGGER, // Manual Pad
 
   // Muxed Pads
   inout IOA0, // MIO Pad 0

ParseResult:
INS HdlIdDef@@IO_CLKOUT to ports
HdlIdDef: IO_CLKOUT
    HdlValueId: wire
    HdlDirection: INOUT

INS HdlIdDef@@IO_TRIGGER to ports
HdlIdDef: IO_TRIGGER
    HdlValueId: wire
    HdlDirection: INOUT


CommitId: 5bf97341e1737da17ce758cc8d82f100f8977365
[fpga, sw] Enable SCA on ChipWhisperer CW310 FPGA board
--- a/hw/top_earlgrey/rtl/autogen/chip_earlgrey_cw310.sv
+++ b/hw/top_earlgrey/rtl/autogen/chip_earlgrey_cw310.sv
@@ -216,6 +218,8 @@ module chip_earlgrey_cw310 #(
   logic manual_in_io_uphy_oe_n, manual_out_io_uphy_oe_n, manual_oe_io_uphy_oe_n;
   logic manual_in_io_uphy_sense, manual_out_io_uphy_sense, manual_oe_io_uphy_sense;
   logic manual_in_io_uphy_dppullup, manual_out_io_uphy_dppullup, manual_oe_io_uphy_dppullup;
+  logic manual_in_io_clkout, manual_out_io_clkout, manual_oe_io_clkout;
+  logic manual_in_io_trigger, manual_out_io_trigger, manual_oe_io_trigger;
 
   pad_attr_t manual_attr_por_n;
   pad_attr_t manual_attr_usb_p;

ParseResult:
INS HdlIdDef@@manual_in_io_clkout to objs
HdlIdDef: manual_in_io_clkout
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

INS HdlIdDef@@manual_out_io_clkout to objs
HdlIdDef: manual_out_io_clkout
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

INS HdlIdDef@@manual_oe_io_clkout to objs
HdlIdDef: manual_oe_io_clkout
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

INS HdlIdDef@@manual_in_io_trigger to objs
HdlIdDef: manual_in_io_trigger
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

INS HdlIdDef@@manual_out_io_trigger to objs
HdlIdDef: manual_out_io_trigger
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

INS HdlIdDef@@manual_oe_io_trigger to objs
HdlIdDef: manual_oe_io_trigger
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL


CommitId: 5bf97341e1737da17ce758cc8d82f100f8977365
[fpga, sw] Enable SCA on ChipWhisperer CW310 FPGA board
--- a/hw/top_earlgrey/rtl/autogen/chip_earlgrey_cw310.sv
+++ b/hw/top_earlgrey/rtl/autogen/chip_earlgrey_cw310.sv
@@ -233,6 +237,8 @@ module chip_earlgrey_cw310 #(
   pad_attr_t manual_attr_io_uphy_oe_n;
   pad_attr_t manual_attr_io_uphy_sense;
   pad_attr_t manual_attr_io_uphy_dppullup;
+  pad_attr_t manual_attr_io_clkout;
+  pad_attr_t manual_attr_io_trigger;
 
   /////////////////////////
   // Stubbed pad tie-off //

ParseResult:
INS HdlIdDef@@manual_attr_io_clkout to objs
HdlIdDef: manual_attr_io_clkout
    HdlDirection: INTERNAL

INS HdlIdDef@@manual_attr_io_trigger to objs
HdlIdDef: manual_attr_io_trigger
    HdlDirection: INTERNAL


CommitId: e4c3605134b6dedbd3b5e5a32ad8f63de5b8a547
[lint] Fix lint warning
--- a/hw/ip/csrng/rtl/csrng_ctr_drbg_cmd.sv
+++ b/hw/ip/csrng/rtl/csrng_ctr_drbg_cmd.sv
@@ -63,12 +63,12 @@ module csrng_ctr_drbg_cmd import csrng_pkg::*; #(
   output logic [2:0]         ctr_drbg_cmd_sfifo_keyvrc_err_o
 );
 
-  localparam CmdreqFifoDepth = 1;
-  localparam CmdreqFifoWidth = KeyLen+BlkLen+CtrLen+1+2*SeedLen+StateId+Cmd;
-  localparam RCStageFifoDepth = 1;
-  localparam RCStageFifoWidth = CtrLen+1+SeedLen+Cmd;
-  localparam KeyVRCFifoDepth = 1;
-  localparam KeyVRCFifoWidth = KeyLen+BlkLen+CtrLen+1+SeedLen+StateId+Cmd;
+  localparam int unsigned CmdreqFifoDepth = 1;
+  localparam int unsigned CmdreqFifoWidth = KeyLen+BlkLen+CtrLen+1+2*SeedLen+StateId+Cmd;
+  localparam int unsigned RCStageFifoDepth = 1;
+  localparam int unsigned RCStageFifoWidth = CtrLen+1+SeedLen+Cmd;
+  localparam int unsigned KeyVRCFifoDepth = 1;
+  localparam int unsigned KeyVRCFifoWidth = KeyLen+BlkLen+CtrLen+1+SeedLen+StateId+Cmd;
 
 
   // signals
ParseResult:
INS HdlIdDef@@CmdreqFifoDepth to objs
HdlIdDef: CmdreqFifoDepth
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: int
            HdlOp: MAP_ASSOCIATION
                list: ops
                    HdlValueId: signed
    HdlValueInt: 1
    HdlDirection: INTERNAL

INS HdlIdDef@@RCStageFifoDepth to objs
HdlIdDef: RCStageFifoDepth
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: int
            HdlOp: MAP_ASSOCIATION
                list: ops
                    HdlValueId: signed
    HdlValueInt: 1
    HdlDirection: INTERNAL

INS HdlIdDef@@KeyVRCFifoDepth to objs
HdlIdDef: KeyVRCFifoDepth
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: int
            HdlOp: MAP_ASSOCIATION
                list: ops
                    HdlValueId: signed
    HdlValueInt: 1
    HdlDirection: INTERNAL

UPD HdlIdDef@@CmdreqFifoWidth to CmdreqFifoWidth
    INS HdlOp@@PARAMETRIZATION to CmdreqFifoWidth
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: int
            HdlOp: MAP_ASSOCIATION
                list: ops
                    HdlValueId: signed

UPD HdlIdDef@@RCStageFifoWidth to RCStageFifoWidth
    INS HdlOp@@PARAMETRIZATION to RCStageFifoWidth
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: int
            HdlOp: MAP_ASSOCIATION
                list: ops
                    HdlValueId: signed

DEL HdlIdDef@@CmdreqFifoDepth from objs
HdlIdDef: CmdreqFifoDepth
    HdlValueInt: 1
    HdlDirection: INTERNAL

DEL HdlIdDef@@RCStageFifoDepth from objs
HdlIdDef: RCStageFifoDepth
    HdlValueInt: 1
    HdlDirection: INTERNAL

DEL HdlIdDef@@KeyVRCFifoDepth from objs
HdlIdDef: KeyVRCFifoDepth
    HdlValueInt: 1
    HdlDirection: INTERNAL


CommitId: de6e479401510aed7041bd8581d29b7980624958
[entropy_src/rtl] IO changes updated
--- a/hw/ip/entropy_src/rtl/entropy_src_ack_sm.sv
+++ b/hw/ip/entropy_src/rtl/entropy_src_ack_sm.sv
@@ -37,7 +37,12 @@ module entropy_src_ack_sm (
     AckWait   = 6'b111000  // wait until the fifo has an entry
   } state_e;
 
-  state_e state_q, state_d;
+  state_e state_d;
+
+  logic [StateWidth-1:0] state_q;
+
+  // This primitive is used to place a size-only constraint on the
+  // flops in order to prevent FSM state encoding optimizations.
 
   prim_flop #(
     .Width(StateWidth),

ParseResult:
INS HdlIdDef@@state_q to objs
HdlIdDef: state_q
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlOp: SUB
                        list: ops
                            HdlValueId: StateWidth
                            HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: INTERNAL

DEL HdlIdDef@@state_q from objs
HdlIdDef: state_q
    HdlDirection: INTERNAL


CommitId: de6e479401510aed7041bd8581d29b7980624958
[entropy_src/rtl] IO changes updated
--- a/hw/ip/entropy_src/rtl/entropy_src_ack_sm.sv
+++ b/hw/ip/entropy_src/rtl/entropy_src_ack_sm.sv
@@ -50,7 +55,7 @@ module entropy_src_ack_sm (
   );
 
   always_comb begin
-    state_d = state_q;
+    state_d = state_e'(state_q);
     ack_o = 1'b0;
     fifo_pop_o = 1'b0;
     unique case (state_q)
ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            MOV HdlValueId@@state_q to ops
            HdlValueId: state_q


CommitId: b4a3194fe597d38bf7f45a2b7c44be8a0a025fd4
[tlul] Fix Verilator lint warnings
--- a/hw/ip/tlul/rtl/tlul_fifo_sync.sv
+++ b/hw/ip/tlul/rtl/tlul_fifo_sync.sv
@@ -7,8 +7,8 @@
 // and one for the response side.
 
 module tlul_fifo_sync #(
-  parameter int unsigned ReqPass  = 1'b1,
-  parameter int unsigned RspPass  = 1'b1,
+  parameter bit          ReqPass = 1'b1,
+  parameter bit          RspPass = 1'b1,
   parameter int unsigned ReqDepth = 2,
   parameter int unsigned RspDepth = 2,
   parameter int unsigned SpareReqW = 1,
ParseResult:
UPD HdlIdDef@@ReqPass to ReqPass
    UPD HdlOp@@PARAMETRIZATION to PARAMETRIZATION
        UPD HdlValueId@@int to bit
        DEL HdlOp@@MAP_ASSOCIATION from ops
        HdlOp: MAP_ASSOCIATION
            list: ops
                HdlValueId: signed

UPD HdlIdDef@@RspPass to RspPass
    UPD HdlOp@@PARAMETRIZATION to PARAMETRIZATION
        UPD HdlValueId@@int to bit
        DEL HdlOp@@MAP_ASSOCIATION from ops
        HdlOp: MAP_ASSOCIATION
            list: ops
                HdlValueId: signed


CommitId: d65d139663d32e8b509e5aa5af2b848daab74a6b
[csrng/rtl] added fatal alert
--- a/hw/ip/csrng/rtl/csrng_ctr_drbg_upd.sv
+++ b/hw/ip/csrng/rtl/csrng_ctr_drbg_upd.sv
@@ -48,7 +48,9 @@ module csrng_ctr_drbg_upd #(
   output logic [2:0]         ctr_drbg_upd_sfifo_bencreq_err_o,
   output logic [2:0]         ctr_drbg_upd_sfifo_bencack_err_o,
   output logic [2:0]         ctr_drbg_upd_sfifo_pdata_err_o,
-  output logic [2:0]         ctr_drbg_upd_sfifo_final_err_o
+  output logic [2:0]         ctr_drbg_upd_sfifo_final_err_o,
+  output logic               ctr_drbg_updbe_sm_err_o,
+  output logic               ctr_drbg_updob_sm_err_o
 );
 
   localparam int UpdReqFifoDepth = 1;

ParseResult:
INS HdlIdDef@@ctr_drbg_updbe_sm_err_o to ports
HdlIdDef: ctr_drbg_updbe_sm_err_o
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: OUT

INS HdlIdDef@@ctr_drbg_updob_sm_err_o to ports
HdlIdDef: ctr_drbg_updob_sm_err_o
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: OUT


CommitId: d65d139663d32e8b509e5aa5af2b848daab74a6b
[csrng/rtl] added fatal alert
--- a/hw/ip/csrng/rtl/csrng_ctr_drbg_upd.sv
+++ b/hw/ip/csrng/rtl/csrng_ctr_drbg_upd.sv
@@ -73,7 +75,7 @@ module csrng_ctr_drbg_upd #(
   logic                       sfifo_updreq_push;
   logic [UpdReqFifoWidth-1:0] sfifo_updreq_wdata;
   logic                       sfifo_updreq_pop;
-  logic                       sfifo_updreq_not_full;
+  logic                       sfifo_updreq_full;
   logic                       sfifo_updreq_not_empty;
   // breakout
   logic [Cmd-1:0]             sfifo_updreq_ccmd;

ParseResult:
UPD HdlIdDef@@sfifo_updreq_not_full to sfifo_updreq_full


CommitId: d65d139663d32e8b509e5aa5af2b848daab74a6b
[csrng/rtl] added fatal alert
--- a/hw/ip/csrng/rtl/csrng_ctr_drbg_upd.sv
+++ b/hw/ip/csrng/rtl/csrng_ctr_drbg_upd.sv
@@ -87,7 +89,7 @@ module csrng_ctr_drbg_upd #(
   logic                       sfifo_bencreq_push;
   logic [BlkEncReqFifoWidth-1:0] sfifo_bencreq_wdata;
   logic                       sfifo_bencreq_pop;
-  logic                       sfifo_bencreq_not_full;
+  logic                       sfifo_bencreq_full;
   logic                       sfifo_bencreq_not_empty;
   // breakout
   logic [Cmd-1:0]             sfifo_bencreq_ccmd;

ParseResult:
UPD HdlIdDef@@sfifo_bencreq_not_full to sfifo_bencreq_full


CommitId: d65d139663d32e8b509e5aa5af2b848daab74a6b
[csrng/rtl] added fatal alert
--- a/hw/ip/csrng/rtl/csrng_ctr_drbg_upd.sv
+++ b/hw/ip/csrng/rtl/csrng_ctr_drbg_upd.sv
@@ -100,7 +102,7 @@ module csrng_ctr_drbg_upd #(
   logic                       sfifo_bencack_push;
   logic [BlkEncAckFifoWidth-1:0] sfifo_bencack_wdata;
   logic                       sfifo_bencack_pop;
-  logic                       sfifo_bencack_not_full;
+  logic                       sfifo_bencack_full;
   logic                       sfifo_bencack_not_empty;
   // breakout
   logic [Cmd-1:0]             sfifo_bencack_ccmd;

ParseResult:
UPD HdlIdDef@@sfifo_bencack_not_full to sfifo_bencack_full


CommitId: d65d139663d32e8b509e5aa5af2b848daab74a6b
[csrng/rtl] added fatal alert
--- a/hw/ip/csrng/rtl/csrng_ctr_drbg_upd.sv
+++ b/hw/ip/csrng/rtl/csrng_ctr_drbg_upd.sv
@@ -112,7 +114,7 @@ module csrng_ctr_drbg_upd #(
   logic                       sfifo_pdata_push;
   logic [PDataFifoWidth-1:0]  sfifo_pdata_wdata;
   logic                       sfifo_pdata_pop;
-  logic                       sfifo_pdata_not_full;
+  logic                       sfifo_pdata_full;
   logic                       sfifo_pdata_not_empty;
   logic [SeedLen-1:0]         sfifo_pdata_v;
 

ParseResult:
UPD HdlIdDef@@sfifo_pdata_not_full to sfifo_pdata_full


CommitId: d65d139663d32e8b509e5aa5af2b848daab74a6b
[csrng/rtl] added fatal alert
--- a/hw/ip/csrng/rtl/csrng_ctr_drbg_upd.sv
+++ b/hw/ip/csrng/rtl/csrng_ctr_drbg_upd.sv
@@ -121,7 +123,7 @@ module csrng_ctr_drbg_upd #(
   logic                       sfifo_final_push;
   logic [FinalFifoWidth-1:0]  sfifo_final_wdata;
   logic                       sfifo_final_pop;
-  logic                       sfifo_final_not_full;
+  logic                       sfifo_final_full;
   logic                       sfifo_final_not_empty;
   // breakout
   logic [Cmd-1:0]             sfifo_final_ccmd;

ParseResult:
UPD HdlIdDef@@sfifo_final_not_full to sfifo_final_full


CommitId: d65d139663d32e8b509e5aa5af2b848daab74a6b
[csrng/rtl] added fatal alert
--- a/hw/ip/csrng/rtl/csrng_ctr_drbg_upd.sv
+++ b/hw/ip/csrng/rtl/csrng_ctr_drbg_upd.sv
@@ -255,27 +269,27 @@ module csrng_ctr_drbg_upd #(
     .rst_ni   (rst_ni),
     .clr_i    (!ctr_drbg_upd_enable_i),
     .wvalid_i (sfifo_updreq_push),
-    .wready_o (sfifo_updreq_not_full),
+    .wready_o (),
     .wdata_i  (sfifo_updreq_wdata),
     .rvalid_o (sfifo_updreq_not_empty),
     .rready_i (sfifo_updreq_pop),
     .rdata_o  (sfifo_updreq_rdata),
-    .full_o   (),
+    .full_o   (sfifo_updreq_full),
     .depth_o  ()
   );
 
-  assign sfifo_updreq_push = sfifo_updreq_not_full && ctr_drbg_upd_req_i;
+  assign sfifo_updreq_push = !sfifo_updreq_full && ctr_drbg_upd_req_i;
   assign sfifo_updreq_wdata = {ctr_drbg_upd_key_i,ctr_drbg_upd_v_i,ctr_drbg_upd_pdata_i,
                                ctr_drbg_upd_inst_id_i,ctr_drbg_upd_ccmd_i};
-  assign ctr_drbg_upd_rdy_o = sfifo_updreq_not_full;
+  assign ctr_drbg_upd_rdy_o = !sfifo_updreq_full;
 
   assign {sfifo_updreq_key,sfifo_updreq_v,sfifo_updreq_pdata,
           sfifo_updreq_inst_id,sfifo_updreq_ccmd} = sfifo_updreq_rdata;
 
   assign ctr_drbg_upd_sfifo_updreq_err_o =
-         {(sfifo_updreq_push && !sfifo_updreq_not_full),
+         {(sfifo_updreq_push && sfifo_updreq_full),
          (sfifo_updreq_pop && !sfifo_updreq_not_empty),
-         (!sfifo_updreq_not_full && !sfifo_updreq_not_empty)};
+         (sfifo_updreq_full && !sfifo_updreq_not_empty)};
 
   //--------------------------------------------
   // prepare value for block_encrypt step

ParseResult:
INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: AND_LOG
        list: ops
            HdlOp: NEG_LOG
                list: ops
                    HdlValueId: sfifo_updreq_full
            HdlValueId: ctr_drbg_upd_req_i
    HdlValueId: sfifo_updreq_push

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: NEG_LOG
        list: ops
            HdlValueId: sfifo_updreq_full
    HdlValueId: ctr_drbg_upd_rdy_o

UPD HdlStmAssign@@ to 
    UPD HdlOp@@CONCAT to CONCAT
        UPD HdlOp@@AND_LOG to AND_LOG
            UPD HdlOp@@NEG_LOG to NEG_LOG
                UPD HdlValueId@@sfifo_updreq_not_full to sfifo_updreq_full
                MOV HdlValueId@@sfifo_updreq_not_full to ops
                HdlValueId: sfifo_updreq_not_full
                DEL list@@ops from NEG_LOG
            DEL HdlOp@@NEG_LOG from ops
        UPD HdlOp@@CONCAT to CONCAT
            UPD HdlOp@@AND_LOG to AND_LOG
                UPD HdlOp@@NEG_LOG to NEG_LOG
                    UPD HdlValueId@@sfifo_updreq_not_full to sfifo_updreq_full
                    MOV HdlValueId@@sfifo_updreq_not_full to ops
                    HdlValueId: sfifo_updreq_not_full
                    DEL list@@ops from NEG_LOG
                DEL HdlOp@@NEG_LOG from ops

DEL HdlStmAssign@@ from objs
HdlStmAssign
    HdlOp: AND_LOG
        list: ops
            HdlValueId: sfifo_updreq_not_full
            HdlValueId: ctr_drbg_upd_req_i
    HdlValueId: sfifo_updreq_push

DEL HdlStmAssign@@ from objs
HdlStmAssign
    HdlValueId: sfifo_updreq_not_full
    HdlValueId: ctr_drbg_upd_rdy_o


CommitId: d65d139663d32e8b509e5aa5af2b848daab74a6b
[csrng/rtl] added fatal alert
--- a/hw/ip/csrng/rtl/csrng_ctr_drbg_upd.sv
+++ b/hw/ip/csrng/rtl/csrng_ctr_drbg_upd.sv
@@ -315,17 +329,19 @@ module csrng_ctr_drbg_upd #(
     sfifo_pdata_push = 1'b0;
     sfifo_bencreq_push = 1'b0;
     sfifo_updreq_pop = 1'b0;
+    ctr_drbg_updbe_sm_err_o = 1'b0;
     unique case (blk_enc_state_q)
       // ReqIdle: increment v this cycle, push in next
-      ReqIdle:
-        if (sfifo_updreq_not_empty && sfifo_bencreq_not_full && sfifo_pdata_not_full) begin
+      ReqIdle: begin
+        if (sfifo_updreq_not_empty && !sfifo_bencreq_full && !sfifo_pdata_full) begin
           v_ctr_load = 1'b1;
           sfifo_pdata_push = 1'b1;
           blk_enc_state_d = ReqSend;
         end
-      ReqSend:
+      end
+      ReqSend: begin
         if (!interate_ctr_done) begin
-          if (sfifo_bencreq_not_full) begin
+          if (!sfifo_bencreq_full) begin
             v_ctr_inc  = 1'b1;
             interate_ctr_inc  = 1'b1;
             sfifo_bencreq_push = 1'b1;

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: ctr_drbg_updbe_sm_err_o
                HdlValueInt: 0

UPD HdlStmCase@@blk_enc_state_q to blk_enc_state_q
    INS tuple@@ to cases
    tuple
        HdlValueId: BEError
        HdlStmBlock: SEQ
            list: body
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: ctr_drbg_updbe_sm_err_o
                        HdlValueInt: 1
    INS HdlStmBlock@@SEQ to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmCase@@blk_enc_state_q to blk_enc_state_q
    UPD HdlOp@@ASSIGN to ASSIGN
        UPD HdlValueId@@ReqIdle to BEError

MOV HdlStmIf@@ to 
HdlStmIf
    HdlOp: AND_LOG
        list: ops
            HdlOp: AND_LOG
                list: ops
                    HdlValueId: sfifo_updreq_not_empty
                    HdlValueId: sfifo_bencreq_not_full
            HdlValueId: sfifo_pdata_not_full
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: v_ctr_load
                    HdlValueInt: 1
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: sfifo_pdata_push
                    HdlValueInt: 1
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: blk_enc_state_d
                    HdlValueId: ReqSend
    list: elifs

MOV HdlStmIf@@ to 
HdlStmIf
    HdlOp: NEG_LOG
        list: ops
            HdlValueId: interate_ctr_done
    HdlStmBlock: SEQ
        list: body
            HdlStmIf
                HdlValueId: sfifo_bencreq_not_full
                HdlStmBlock: SEQ
                    list: body
                        HdlOp: ASSIGN
                            list: ops
                                HdlValueId: v_ctr_inc
                                HdlValueInt: 1
                        HdlOp: ASSIGN
                            list: ops
                                HdlValueId: interate_ctr_inc
                                HdlValueInt: 1
                        HdlOp: ASSIGN
                            list: ops
                                HdlValueId: sfifo_bencreq_push
                                HdlValueInt: 1
                list: elifs
    list: elifs
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: sfifo_updreq_pop
                    HdlValueInt: 1
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: blk_enc_state_d
                    HdlValueId: ReqIdle

UPD HdlStmIf@@ to 
    UPD HdlOp@@AND_LOG to AND_LOG
        INS HdlOp@@NEG_LOG to ops
        UPD HdlOp@@NEG_LOG to NEG_LOG
            INS list@@ops to NEG_LOG
        UPD HdlOp@@AND_LOG to AND_LOG
            INS HdlOp@@NEG_LOG to ops
            UPD HdlOp@@NEG_LOG to NEG_LOG
                INS list@@ops to NEG_LOG

UPD HdlStmIf@@ to 
    UPD HdlOp@@AND_LOG to AND_LOG
        UPD HdlValueId@@sfifo_pdata_not_full to sfifo_pdata_full
        MOV HdlValueId@@sfifo_pdata_not_full to ops
        HdlValueId: sfifo_pdata_not_full
        UPD HdlOp@@AND_LOG to AND_LOG
            UPD HdlValueId@@sfifo_bencreq_not_full to sfifo_bencreq_full
            MOV HdlValueId@@sfifo_bencreq_not_full to ops
            HdlValueId: sfifo_bencreq_not_full

UPD HdlStmIf@@ to 
    UPD HdlValueId@@sfifo_bencreq_not_full to sfifo_bencreq_full
    MOV HdlValueId@@sfifo_bencreq_not_full to 
    HdlValueId: sfifo_bencreq_not_full


CommitId: d65d139663d32e8b509e5aa5af2b848daab74a6b
[csrng/rtl] added fatal alert
--- a/hw/ip/csrng/rtl/csrng_ctr_drbg_upd.sv
+++ b/hw/ip/csrng/rtl/csrng_ctr_drbg_upd.sv
@@ -334,7 +350,11 @@ module csrng_ctr_drbg_upd #(
           sfifo_updreq_pop = 1'b1;
           blk_enc_state_d = ReqIdle;
         end
-      default: blk_enc_state_d = ReqIdle;
+      end
+      BEError: begin
+        ctr_drbg_updbe_sm_err_o = 1'b1;
+      end
+      default: blk_enc_state_d = BEError;
     endcase // case (blk_enc_state_q)
   end
 

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: ctr_drbg_updbe_sm_err_o
                HdlValueInt: 0

UPD HdlStmCase@@blk_enc_state_q to blk_enc_state_q
    INS tuple@@ to cases
    tuple
        HdlValueId: BEError
        HdlStmBlock: SEQ
            list: body
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: ctr_drbg_updbe_sm_err_o
                        HdlValueInt: 1
    INS HdlStmBlock@@SEQ to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmCase@@blk_enc_state_q to blk_enc_state_q
    UPD HdlOp@@ASSIGN to ASSIGN
        UPD HdlValueId@@ReqIdle to BEError

MOV HdlStmIf@@ to 
HdlStmIf
    HdlOp: NEG_LOG
        list: ops
            HdlValueId: interate_ctr_done
    HdlStmBlock: SEQ
        list: body
            HdlStmIf
                HdlValueId: sfifo_bencreq_not_full
                HdlStmBlock: SEQ
                    list: body
                        HdlOp: ASSIGN
                            list: ops
                                HdlValueId: v_ctr_inc
                                HdlValueInt: 1
                        HdlOp: ASSIGN
                            list: ops
                                HdlValueId: interate_ctr_inc
                                HdlValueInt: 1
                        HdlOp: ASSIGN
                            list: ops
                                HdlValueId: sfifo_bencreq_push
                                HdlValueInt: 1
                list: elifs
    list: elifs
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: sfifo_updreq_pop
                    HdlValueInt: 1
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: blk_enc_state_d
                    HdlValueId: ReqIdle

UPD HdlStmIf@@ to 
    UPD HdlOp@@AND_LOG to AND_LOG
        INS HdlOp@@NEG_LOG to ops
        UPD HdlOp@@NEG_LOG to NEG_LOG
            INS list@@ops to NEG_LOG
        UPD HdlOp@@AND_LOG to AND_LOG
            INS HdlOp@@NEG_LOG to ops
            UPD HdlOp@@NEG_LOG to NEG_LOG
                INS list@@ops to NEG_LOG

UPD HdlStmIf@@ to 
    INS HdlOp@@NEG_LOG to 
    UPD HdlOp@@NEG_LOG to NEG_LOG
        INS list@@ops to NEG_LOG


CommitId: d65d139663d32e8b509e5aa5af2b848daab74a6b
[csrng/rtl] added fatal alert
--- a/hw/ip/csrng/rtl/csrng_ctr_drbg_upd.sv
+++ b/hw/ip/csrng/rtl/csrng_ctr_drbg_upd.sv
@@ -351,12 +371,12 @@ module csrng_ctr_drbg_upd #(
     .rst_ni   (rst_ni),
     .clr_i    (!ctr_drbg_upd_enable_i),
     .wvalid_i (sfifo_bencreq_push),
-    .wready_o (sfifo_bencreq_not_full),
+    .wready_o (),
     .wdata_i  (sfifo_bencreq_wdata),
     .rvalid_o (sfifo_bencreq_not_empty),
     .rready_i (sfifo_bencreq_pop),
     .rdata_o  (sfifo_bencreq_rdata),
-    .full_o   (),
+    .full_o   (sfifo_bencreq_full),
     .depth_o  ()
   );
 

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: ctr_drbg_updbe_sm_err_o
                HdlValueInt: 0

UPD HdlStmCase@@blk_enc_state_q to blk_enc_state_q
    INS tuple@@ to cases
    tuple
        HdlValueId: BEError
        HdlStmBlock: SEQ
            list: body
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: ctr_drbg_updbe_sm_err_o
                        HdlValueInt: 1
    INS HdlStmBlock@@SEQ to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ


CommitId: d65d139663d32e8b509e5aa5af2b848daab74a6b
[csrng/rtl] added fatal alert
--- a/hw/ip/csrng/rtl/csrng_ctr_drbg_upd.sv
+++ b/hw/ip/csrng/rtl/csrng_ctr_drbg_upd.sv
@@ -375,9 +395,9 @@ module csrng_ctr_drbg_upd #(
   assign block_encrypt_ccmd_o = sfifo_bencreq_ccmd;
 
   assign ctr_drbg_upd_sfifo_bencreq_err_o =
-         {(sfifo_bencreq_push && !sfifo_bencreq_not_full),
+         {(sfifo_bencreq_push && sfifo_bencreq_full),
           (sfifo_bencreq_pop && !sfifo_bencreq_not_empty),
-          (!sfifo_bencreq_not_full && !sfifo_bencreq_not_empty)};
+          (sfifo_bencreq_full && !sfifo_bencreq_not_empty)};
 
   //--------------------------------------------
   // block_encrypt response fifo from block encrypt

ParseResult:
UPD HdlStmAssign@@ to 
    UPD HdlOp@@CONCAT to CONCAT
        UPD HdlOp@@AND_LOG to AND_LOG
            UPD HdlOp@@NEG_LOG to NEG_LOG
                UPD HdlValueId@@sfifo_bencreq_not_full to sfifo_bencreq_full
                MOV HdlValueId@@sfifo_bencreq_not_full to ops
                HdlValueId: sfifo_bencreq_not_full
                DEL list@@ops from NEG_LOG
            DEL HdlOp@@NEG_LOG from ops
        UPD HdlOp@@CONCAT to CONCAT
            UPD HdlOp@@AND_LOG to AND_LOG
                UPD HdlOp@@NEG_LOG to NEG_LOG
                    UPD HdlValueId@@sfifo_bencreq_not_full to sfifo_bencreq_full
                    MOV HdlValueId@@sfifo_bencreq_not_full to ops
                    HdlValueId: sfifo_bencreq_not_full
                    DEL list@@ops from NEG_LOG
                DEL HdlOp@@NEG_LOG from ops


CommitId: d65d139663d32e8b509e5aa5af2b848daab74a6b
[csrng/rtl] added fatal alert
--- a/hw/ip/csrng/rtl/csrng_ctr_drbg_upd.sv
+++ b/hw/ip/csrng/rtl/csrng_ctr_drbg_upd.sv
@@ -392,25 +412,25 @@ module csrng_ctr_drbg_upd #(
     .rst_ni   (rst_ni),
     .clr_i    (!ctr_drbg_upd_enable_i),
     .wvalid_i (sfifo_bencack_push),
-    .wready_o (sfifo_bencack_not_full),
+    .wready_o (),
     .wdata_i  (sfifo_bencack_wdata),
     .rvalid_o (sfifo_bencack_not_empty),
     .rready_i (sfifo_bencack_pop),
     .rdata_o  (sfifo_bencack_rdata),
-    .full_o   (),
+    .full_o   (sfifo_bencack_full),
     .depth_o  ()
   );
 
-  assign sfifo_bencack_push = sfifo_bencack_not_full && block_encrypt_ack_i;
+  assign sfifo_bencack_push = !sfifo_bencack_full && block_encrypt_ack_i;
   assign sfifo_bencack_wdata = {block_encrypt_v_i,block_encrypt_inst_id_i,block_encrypt_ccmd_i};
-  assign block_encrypt_rdy_o = sfifo_bencack_not_full;
+  assign block_encrypt_rdy_o = !sfifo_bencack_full;
 
   assign {sfifo_bencack_v,sfifo_bencack_inst_id,sfifo_bencack_ccmd} = sfifo_bencack_rdata;
 
   assign ctr_drbg_upd_sfifo_bencack_err_o =
-         {(sfifo_bencack_push && !sfifo_bencack_not_full),
+         {(sfifo_bencack_push && sfifo_bencack_full),
           (sfifo_bencack_pop && !sfifo_bencack_not_empty),
-          (!sfifo_bencack_not_full && !sfifo_bencack_not_empty)};
+          (sfifo_bencack_full && !sfifo_bencack_not_empty)};
 
   //--------------------------------------------
   // fifo to stage provided_data, waiting for blk_encrypt to ack

ParseResult:
INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: AND_LOG
        list: ops
            HdlOp: NEG_LOG
                list: ops
                    HdlValueId: sfifo_bencack_full
            HdlValueId: block_encrypt_ack_i
    HdlValueId: sfifo_bencack_push

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: NEG_LOG
        list: ops
            HdlValueId: sfifo_bencack_full
    HdlValueId: block_encrypt_rdy_o

UPD HdlStmAssign@@ to 
    UPD HdlOp@@CONCAT to CONCAT
        UPD HdlOp@@AND_LOG to AND_LOG
            UPD HdlOp@@NEG_LOG to NEG_LOG
                UPD HdlValueId@@sfifo_bencack_not_full to sfifo_bencack_full
                MOV HdlValueId@@sfifo_bencack_not_full to ops
                HdlValueId: sfifo_bencack_not_full
                DEL list@@ops from NEG_LOG
            DEL HdlOp@@NEG_LOG from ops
        UPD HdlOp@@CONCAT to CONCAT
            UPD HdlOp@@AND_LOG to AND_LOG
                UPD HdlOp@@NEG_LOG to NEG_LOG
                    UPD HdlValueId@@sfifo_bencack_not_full to sfifo_bencack_full
                    MOV HdlValueId@@sfifo_bencack_not_full to ops
                    HdlValueId: sfifo_bencack_not_full
                    DEL list@@ops from NEG_LOG
                DEL HdlOp@@NEG_LOG from ops

DEL HdlStmAssign@@ from objs
HdlStmAssign
    HdlOp: AND_LOG
        list: ops
            HdlValueId: sfifo_bencack_not_full
            HdlValueId: block_encrypt_ack_i
    HdlValueId: sfifo_bencack_push

DEL HdlStmAssign@@ from objs
HdlStmAssign
    HdlValueId: sfifo_bencack_not_full
    HdlValueId: block_encrypt_rdy_o


CommitId: d65d139663d32e8b509e5aa5af2b848daab74a6b
[csrng/rtl] added fatal alert
--- a/hw/ip/csrng/rtl/csrng_ctr_drbg_upd.sv
+++ b/hw/ip/csrng/rtl/csrng_ctr_drbg_upd.sv
@@ -439,9 +459,9 @@ module csrng_ctr_drbg_upd #(
   assign sfifo_pdata_v = sfifo_pdata_rdata;
 
   assign ctr_drbg_upd_sfifo_pdata_err_o =
-         {(sfifo_pdata_push && !sfifo_pdata_not_full),
+         {(sfifo_pdata_push && sfifo_pdata_full),
           (sfifo_pdata_pop && !sfifo_pdata_not_empty),
-          (!sfifo_pdata_not_full && !sfifo_pdata_not_empty)};
+          (sfifo_pdata_full && !sfifo_pdata_not_empty)};
 
   //--------------------------------------------
   // shifting logic to receive values from block_encrypt

ParseResult:
UPD HdlStmAssign@@ to 
    UPD HdlOp@@CONCAT to CONCAT
        UPD HdlOp@@AND_LOG to AND_LOG
            UPD HdlOp@@NEG_LOG to NEG_LOG
                UPD HdlValueId@@sfifo_pdata_not_full to sfifo_pdata_full
                MOV HdlValueId@@sfifo_pdata_not_full to ops
                HdlValueId: sfifo_pdata_not_full
                DEL list@@ops from NEG_LOG
            DEL HdlOp@@NEG_LOG from ops
        UPD HdlOp@@CONCAT to CONCAT
            UPD HdlOp@@AND_LOG to AND_LOG
                UPD HdlOp@@NEG_LOG to NEG_LOG
                    UPD HdlValueId@@sfifo_pdata_not_full to sfifo_pdata_full
                    MOV HdlValueId@@sfifo_pdata_not_full to ops
                    HdlValueId: sfifo_pdata_not_full
                    DEL list@@ops from NEG_LOG
                DEL HdlOp@@NEG_LOG from ops


CommitId: d65d139663d32e8b509e5aa5af2b848daab74a6b
[csrng/rtl] added fatal alert
--- a/hw/ip/csrng/rtl/csrng_ctr_drbg_upd.sv
+++ b/hw/ip/csrng/rtl/csrng_ctr_drbg_upd.sv
@@ -476,19 +496,22 @@ module csrng_ctr_drbg_upd #(
     sfifo_pdata_pop = 1'b0;
     sfifo_bencack_pop = 1'b0;
     sfifo_final_push = 1'b0;
+    ctr_drbg_updob_sm_err_o = 1'b0;
     unique case (outblk_state_q)
       // AckIdle: increment v this cycle, push in next
-      AckIdle:
-        if (sfifo_bencack_not_empty && sfifo_pdata_not_empty && sfifo_final_not_full) begin
+      AckIdle: begin
+        if (sfifo_bencack_not_empty && sfifo_pdata_not_empty && !sfifo_final_full) begin
           outblk_state_d = Load;
         end
-      Load:
+      end
+      Load: begin
         if (sfifo_bencack_not_empty) begin
           concat_ctr_inc  = 1'b1;
           sfifo_bencack_pop = 1'b1;
           outblk_state_d = Shift;
         end
-      Shift:
+      end
+      Shift: begin
         if (concat_ctr_done) begin
           sfifo_pdata_pop = 1'b1;
           sfifo_final_push = 1'b1;

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: ctr_drbg_updob_sm_err_o
                HdlValueInt: 0

UPD HdlStmCase@@outblk_state_q to outblk_state_q
    INS tuple@@ to cases
    tuple
        HdlValueId: OBError
        HdlStmBlock: SEQ
            list: body
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: ctr_drbg_updob_sm_err_o
                        HdlValueInt: 1
    INS HdlStmBlock@@SEQ to 
    INS HdlStmBlock@@SEQ to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

MOV HdlStmIf@@ to 
HdlStmIf
    HdlOp: AND_LOG
        list: ops
            HdlOp: AND_LOG
                list: ops
                    HdlValueId: sfifo_bencack_not_empty
                    HdlValueId: sfifo_pdata_not_empty
            HdlValueId: sfifo_final_not_full
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: outblk_state_d
                    HdlValueId: Load
    list: elifs

MOV HdlStmIf@@ to 
HdlStmIf
    HdlValueId: sfifo_bencack_not_empty
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: concat_ctr_inc
                    HdlValueInt: 1
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: sfifo_bencack_pop
                    HdlValueInt: 1
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: outblk_state_d
                    HdlValueId: Shift
    list: elifs

MOV HdlStmIf@@ to 
HdlStmIf
    HdlValueId: concat_ctr_done
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: sfifo_pdata_pop
                    HdlValueInt: 1
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: sfifo_final_push
                    HdlValueInt: 1
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: outblk_state_d
                    HdlValueId: AckIdle
    list: elifs
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: concat_outblk_shift
                    HdlValueInt: 1
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: outblk_state_d
                    HdlValueId: Load

UPD HdlStmIf@@ to 
    UPD HdlOp@@AND_LOG to AND_LOG
        INS HdlOp@@NEG_LOG to ops
        UPD HdlOp@@NEG_LOG to NEG_LOG
            INS list@@ops to NEG_LOG

UPD HdlStmIf@@ to 
    UPD HdlOp@@AND_LOG to AND_LOG
        UPD HdlValueId@@sfifo_final_not_full to sfifo_final_full
        MOV HdlValueId@@sfifo_final_not_full to ops
        HdlValueId: sfifo_final_not_full


CommitId: d65d139663d32e8b509e5aa5af2b848daab74a6b
[csrng/rtl] added fatal alert
--- a/hw/ip/csrng/rtl/csrng_ctr_drbg_upd.sv
+++ b/hw/ip/csrng/rtl/csrng_ctr_drbg_upd.sv
@@ -497,6 +520,10 @@ module csrng_ctr_drbg_upd #(
           concat_outblk_shift = 1'b1;
           outblk_state_d = Load;
         end
+      end
+      OBError: begin
+        ctr_drbg_updob_sm_err_o = 1'b1;
+      end
       default: outblk_state_d = AckIdle;
     endcase
   end

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: ctr_drbg_updob_sm_err_o
                HdlValueInt: 0

UPD HdlStmCase@@outblk_state_q to outblk_state_q
    INS tuple@@ to cases
    tuple
        HdlValueId: OBError
        HdlStmBlock: SEQ
            list: body
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: ctr_drbg_updob_sm_err_o
                        HdlValueInt: 1
    INS HdlStmBlock@@SEQ to 
    INS HdlStmBlock@@SEQ to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

MOV HdlStmIf@@ to 
HdlStmIf
    HdlValueId: concat_ctr_done
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: sfifo_pdata_pop
                    HdlValueInt: 1
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: sfifo_final_push
                    HdlValueInt: 1
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: outblk_state_d
                    HdlValueId: AckIdle
    list: elifs
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: concat_outblk_shift
                    HdlValueInt: 1
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: outblk_state_d
                    HdlValueId: Load

UPD HdlStmIf@@ to 
    UPD HdlOp@@AND_LOG to AND_LOG
        INS HdlOp@@NEG_LOG to ops
        UPD HdlOp@@NEG_LOG to NEG_LOG
            INS list@@ops to NEG_LOG


CommitId: d65d139663d32e8b509e5aa5af2b848daab74a6b
[csrng/rtl] added fatal alert
--- a/hw/ip/csrng/rtl/csrng_ctr_drbg_upd.sv
+++ b/hw/ip/csrng/rtl/csrng_ctr_drbg_upd.sv
@@ -518,12 +545,12 @@ module csrng_ctr_drbg_upd #(
     .rst_ni   (rst_ni),
     .clr_i    (!ctr_drbg_upd_enable_i),
     .wvalid_i (sfifo_final_push),
-    .wready_o (sfifo_final_not_full),
+    .wready_o (),
     .wdata_i  (sfifo_final_wdata),
     .rvalid_o (sfifo_final_not_empty),
     .rready_i (sfifo_final_pop),
     .rdata_o  (sfifo_final_rdata),
-    .full_o   (),
+    .full_o   (sfifo_final_full),
     .depth_o  ()
   );
 

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: ctr_drbg_updob_sm_err_o
                HdlValueInt: 0

UPD HdlStmCase@@outblk_state_q to outblk_state_q
    INS tuple@@ to cases
    tuple
        HdlValueId: OBError
        HdlStmBlock: SEQ
            list: body
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: ctr_drbg_updob_sm_err_o
                        HdlValueInt: 1
    INS HdlStmBlock@@SEQ to 
    INS HdlStmBlock@@SEQ to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ


CommitId: d65d139663d32e8b509e5aa5af2b848daab74a6b
[csrng/rtl] added fatal alert
--- a/hw/ip/csrng/rtl/csrng_ctr_drbg_upd.sv
+++ b/hw/ip/csrng/rtl/csrng_ctr_drbg_upd.sv
@@ -539,9 +566,9 @@ module csrng_ctr_drbg_upd #(
   assign ctr_drbg_upd_v_o = sfifo_final_v;
 
   assign ctr_drbg_upd_sfifo_final_err_o =
-         {(sfifo_final_push && !sfifo_final_not_full),
+         {(sfifo_final_push && sfifo_final_full),
           (sfifo_final_pop && !sfifo_final_not_empty),
-          (!sfifo_final_not_full && !sfifo_final_not_empty)};
+          (sfifo_final_full && !sfifo_final_not_empty)};
 
 
 endmodule
ParseResult:
UPD HdlStmAssign@@ to 
    UPD HdlOp@@CONCAT to CONCAT
        UPD HdlOp@@AND_LOG to AND_LOG
            UPD HdlOp@@NEG_LOG to NEG_LOG
                UPD HdlValueId@@sfifo_final_not_full to sfifo_final_full
                MOV HdlValueId@@sfifo_final_not_full to ops
                HdlValueId: sfifo_final_not_full
                DEL list@@ops from NEG_LOG
            DEL HdlOp@@NEG_LOG from ops
        UPD HdlOp@@CONCAT to CONCAT
            UPD HdlOp@@AND_LOG to AND_LOG
                UPD HdlOp@@NEG_LOG to NEG_LOG
                    UPD HdlValueId@@sfifo_final_not_full to sfifo_final_full
                    MOV HdlValueId@@sfifo_final_not_full to ops
                    HdlValueId: sfifo_final_not_full
                    DEL list@@ops from NEG_LOG
                DEL HdlOp@@NEG_LOG from ops


CommitId: c56b59d06932d3348352e2c5739b82b088de52d9
[csrng/rtl] diversification value for prod mode
--- a/hw/ip/csrng/rtl/csrng_core.sv
+++ b/hw/ip/csrng/rtl/csrng_core.sv
@@ -8,7 +8,9 @@
 
 module csrng_core import csrng_pkg::*; #(
   parameter aes_pkg::sbox_impl_e SBoxImpl = aes_pkg::SBoxImplLut,
-  parameter int NHwApps = 2
+  parameter int NHwApps = 2,
+  parameter cs_keymgr_div_t RndCnstCsKeymgrDivNonProduction = CsKeymgrDivWidth'(0),
+  parameter cs_keymgr_div_t RndCnstCsKeymgrDivProduction = CsKeymgrDivWidth'(0)
 ) (
   input logic        clk_i,
   input logic        rst_ni,

ParseResult:
INS HdlIdDef@@RndCnstCsKeymgrDivNonProduction to params
HdlIdDef: RndCnstCsKeymgrDivNonProduction
    HdlValueId: cs_keymgr_div_t
    HdlOp: CALL
        list: ops
            HdlValueId: CsKeymgrDivWidth
            HdlValueInt: 0
    HdlDirection: INTERNAL

INS HdlIdDef@@RndCnstCsKeymgrDivProduction to params
HdlIdDef: RndCnstCsKeymgrDivProduction
    HdlValueId: cs_keymgr_div_t
    HdlOp: CALL
        list: ops
            HdlValueId: CsKeymgrDivWidth
            HdlValueInt: 0
    HdlDirection: INTERNAL


CommitId: c56b59d06932d3348352e2c5739b82b088de52d9
[csrng/rtl] diversification value for prod mode
--- a/hw/ip/csrng/rtl/csrng_core.sv
+++ b/hw/ip/csrng/rtl/csrng_core.sv
@@ -89,6 +91,7 @@ module csrng_core import csrng_pkg::*; #(
   logic [AppCmdWidth-1:0] acmd_bus;
 
   logic [SeedLen-1:0]     packer_adata;
+  logic [SeedLen-1:0]     seed_diversification;
 
   logic                   cmd_entropy_req;
   logic                   cmd_entropy_avail;

ParseResult:
INS HdlIdDef@@seed_diversification to objs
HdlIdDef: seed_diversification
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlOp: SUB
                        list: ops
                            HdlValueId: SeedLen
                            HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: INTERNAL


CommitId: c56b59d06932d3348352e2c5739b82b088de52d9
[csrng/rtl] diversification value for prod mode
--- a/hw/ip/csrng/rtl/csrng_core.sv
+++ b/hw/ip/csrng/rtl/csrng_core.sv
@@ -327,8 +330,6 @@ module csrng_core import csrng_pkg::*; #(
   logic        flag0_q, flag0_d;
   logic        statedb_wr_select_q, statedb_wr_select_d;
   logic        genbits_stage_fips_sw_q, genbits_stage_fips_sw_d;
-  logic        lc_hw_debug_not_on_q, lc_hw_debug_not_on_d;
-  logic        lc_hw_debug_on_q, lc_hw_debug_on_d;
   logic        cmd_req_dly_q, cmd_req_dly_d;
   logic [Cmd-1:0] cmd_req_ccmd_dly_q, cmd_req_ccmd_dly_d;
   logic           cs_aes_halt_q, cs_aes_halt_d;

ParseResult:
DEL HdlIdDef@@lc_hw_debug_not_on_q from objs
HdlIdDef: lc_hw_debug_not_on_q
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

DEL HdlIdDef@@lc_hw_debug_not_on_d from objs
HdlIdDef: lc_hw_debug_not_on_d
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

DEL HdlIdDef@@lc_hw_debug_on_q from objs
HdlIdDef: lc_hw_debug_on_q
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

DEL HdlIdDef@@lc_hw_debug_on_d from objs
HdlIdDef: lc_hw_debug_on_d
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL


CommitId: c56b59d06932d3348352e2c5739b82b088de52d9
[csrng/rtl] diversification value for prod mode
--- a/hw/ip/csrng/rtl/csrng_core.sv
+++ b/hw/ip/csrng/rtl/csrng_core.sv
@@ -344,8 +345,6 @@ module csrng_core import csrng_pkg::*; #(
       flag0_q <= '0;
       statedb_wr_select_q <= '0;
       genbits_stage_fips_sw_q <= '0;
-      lc_hw_debug_not_on_q <= '0;
-      lc_hw_debug_on_q <= '0;
       cmd_req_dly_q <= '0;
       cmd_req_ccmd_dly_q <= '0;
       cs_aes_halt_q <= '0;

ParseResult:
DEL HdlStmAssign@@ from body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: lc_hw_debug_not_on_q

DEL HdlStmAssign@@ from body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: lc_hw_debug_on_q


CommitId: c56b59d06932d3348352e2c5739b82b088de52d9
[csrng/rtl] diversification value for prod mode
--- a/hw/ip/csrng/rtl/csrng_core.sv
+++ b/hw/ip/csrng/rtl/csrng_core.sv
@@ -359,8 +358,6 @@ module csrng_core import csrng_pkg::*; #(
       flag0_q <= flag0_d;
       statedb_wr_select_q <= statedb_wr_select_d;
       genbits_stage_fips_sw_q <= genbits_stage_fips_sw_d;
-      lc_hw_debug_not_on_q <= lc_hw_debug_not_on_d;
-      lc_hw_debug_on_q <= lc_hw_debug_on_d;
       cmd_req_dly_q <= cmd_req_dly_d;
       cmd_req_ccmd_dly_q <= cmd_req_ccmd_dly_d;
       cs_aes_halt_q <= cs_aes_halt_d;

ParseResult:
DEL HdlStmAssign@@ from body
HdlStmAssign
    HdlValueId: lc_hw_debug_not_on_d
    HdlValueId: lc_hw_debug_not_on_q

DEL HdlStmAssign@@ from body
HdlStmAssign
    HdlValueId: lc_hw_debug_on_d
    HdlValueId: lc_hw_debug_on_q


CommitId: c56b59d06932d3348352e2c5739b82b088de52d9
[csrng/rtl] diversification value for prod mode
--- a/hw/ip/csrng/rtl/csrng_core.sv
+++ b/hw/ip/csrng/rtl/csrng_core.sv
@@ -1002,10 +999,14 @@ module csrng_core import csrng_pkg::*; #(
   assign entropy_src_hw_if_o.es_req = cs_enable &&
          cmd_entropy_req;
 
+
+  assign seed_diversification = lc_hw_debug_on ? RndCnstCsKeymgrDivNonProduction :
+                                                 RndCnstCsKeymgrDivProduction;
+
   // Capture entropy from entropy_src
   assign entropy_src_seed_d =
          (cmd_entropy_avail && flag0_q) ? '0 : // special case where zero is used
-         cmd_entropy_avail ? entropy_src_hw_if_i.es_bits :
+         cmd_entropy_avail ? (entropy_src_hw_if_i.es_bits ^ seed_diversification) :
          entropy_src_seed_q;
   assign entropy_src_fips_d =
          (cmd_entropy_avail && flag0_q) ? '0 : // special case where zero is used

ParseResult:
INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: TERNARY
        list: ops
            HdlValueId: lc_hw_debug_on
            HdlValueId: RndCnstCsKeymgrDivNonProduction
            HdlValueId: RndCnstCsKeymgrDivProduction
    HdlValueId: seed_diversification

UPD HdlStmAssign@@ to 
    UPD HdlOp@@TERNARY to TERNARY
        INS HdlOp@@TERNARY to ops
        UPD HdlOp@@TERNARY to TERNARY
            INS list@@ops to TERNARY
            INS HdlValueId@@entropy_src_seed_q to ops

UPD HdlStmAssign@@ to 
    UPD HdlOp@@TERNARY to TERNARY
        UPD HdlOp@@TERNARY to TERNARY
            MOV HdlValueId@@cmd_entropy_avail to ops
            HdlValueId: cmd_entropy_avail
            UPD HdlValueId@@entropy_src_seed_q to seed_diversification
        UPD HdlOp@@TERNARY to XOR
        MOV HdlOp@@TERNARY to ops
        HdlOp: TERNARY
            list: ops
                HdlValueId: cmd_entropy_avail
                HdlOp: DOT
                    list: ops
                        HdlValueId: entropy_src_hw_if_i
                        HdlValueId: es_bits
                HdlValueId: entropy_src_seed_q


CommitId: c56b59d06932d3348352e2c5739b82b088de52d9
[csrng/rtl] diversification value for prod mode
--- a/hw/ip/csrng/rtl/csrng_core.sv
+++ b/hw/ip/csrng/rtl/csrng_core.sv
@@ -1228,14 +1229,6 @@ module csrng_core import csrng_pkg::*; #(
   assign      lc_hw_debug_not_on = (lc_hw_debug_en_out[0] != lc_ctrl_pkg::On);
   assign      lc_hw_debug_on = (lc_hw_debug_en_out[1] == lc_ctrl_pkg::On);
 
-  // flop for better timing
-  assign      lc_hw_debug_not_on_d =
-              (!cs_enable) ? '0 :
-              lc_hw_debug_not_on;
-
-  assign      lc_hw_debug_on_d =
-              (!cs_enable) ? '0 :
-              lc_hw_debug_on;
 
   //-------------------------------------
   // csrng_block_encrypt instantiation

ParseResult:
DEL HdlStmAssign@@ from objs
HdlStmAssign
    HdlOp: TERNARY
        list: ops
            HdlOp: NEG_LOG
                list: ops
                    HdlValueId: cs_enable
            HdlValueInt: 0
            HdlValueId: lc_hw_debug_not_on
    HdlValueId: lc_hw_debug_not_on_d

DEL HdlStmAssign@@ from objs
HdlStmAssign
    HdlOp: TERNARY
        list: ops
            HdlOp: NEG_LOG
                list: ops
                    HdlValueId: cs_enable
            HdlValueInt: 0
            HdlValueId: lc_hw_debug_on
    HdlValueId: lc_hw_debug_on_d


CommitId: 5c323ef52ef42785286da49a3a2919a35dce75d9
[usb] Fix lint errors
--- a/hw/ip/usbuart/rtl/usb_serial_ctrl_ep.sv
+++ b/hw/ip/usbuart/rtl/usb_serial_ctrl_ep.sv
@@ -122,7 +123,7 @@ module usb_serial_ctrl_ep  #(
     status_stage_end = 1'b0;
     send_zero_length_data_pkt = 1'b0;
 
-    case (ctrl_xfr_state)
+    unique case (ctrl_xfr_state)
       StIdle: begin
         if (setup_pkt_start) begin
           ctrl_xfr_state_next = StSetup;

ParseResult:
UPD HdlStmCase@@ctrl_xfr_state to ctrl_xfr_state
    INS HdlStmCaseUniqConstrain@@UNIQUE to ctrl_xfr_state


CommitId: 5c323ef52ef42785286da49a3a2919a35dce75d9
[usb] Fix lint errors
--- a/hw/ip/usbuart/rtl/usb_serial_ctrl_ep.sv
+++ b/hw/ip/usbuart/rtl/usb_serial_ctrl_ep.sv
@@ -225,6 +226,8 @@ module usb_serial_ctrl_ep  #(
 
   // Send setup data (which will be empty in case of a SET operation and
   // come from the ROM in the case of a GET)
+  usb_dscr_type_e dscr_type;
+  assign dcsr_type = usb_dscr_type_e'(wValue[15:8]);
   always_ff @(posedge clk_i or negedge rst_ni) begin
     if (!rst_ni) begin
       dev_addr_int <= '0;

ParseResult:
INS HdlIdDef@@dscr_type to objs
HdlIdDef: dscr_type
    HdlDirection: INTERNAL

INS HdlStmAssign@@ to objs

UPD HdlStmAssign@@ to 
    INS HdlValueId@@dcsr_type to 


CommitId: 5c323ef52ef42785286da49a3a2919a35dce75d9
[usb] Fix lint errors
--- a/hw/ip/usbuart/rtl/usb_serial_ctrl_ep.sv
+++ b/hw/ip/usbuart/rtl/usb_serial_ctrl_ep.sv
@@ -234,39 +237,39 @@ module usb_serial_ctrl_ep  #(
       if (setup_stage_end) begin
         bytes_sent <= '0;
         // Command (bRequest) and sub-command (wValue) come from USB spec
-        case (bRequest)
+        unique case (bRequest)
           SetupGetDescriptor: begin
-            case (usb_dscr_type_e'(wValue[15:8]))
+            unique case (dcsr_type)
               DscrTypeDevice: begin
                 in_ep_stall_o <= 1'b0;
-                rom_addr    <= 'h00;
-                rom_length  <= 'h12;
+                rom_addr      <= 7'h00;
+                rom_length    <= 7'h12;
               end
 
               DscrTypeConfiguration: begin
                 in_ep_stall_o <= 1'b0;
-                rom_addr    <= 'h12;
-                rom_length  <= (9+9+7+7);
+                rom_addr      <= 7'h12;
+                rom_length    <= 7'h20; // 9+9+7+7
               end
 
               DscrTypeDevQual: begin
                 in_ep_stall_o <= 1'b1;
-                rom_addr   <= 'h00;
-                rom_length <= 'h00;
+                rom_addr      <= 7'h00;
+                rom_length    <= 7'h00;
               end
 
               default begin
                 in_ep_stall_o <= 1'b0;
-                rom_addr   <= 'h00;
-                rom_length <= 'h00;
+                rom_addr      <= 7'h00;
+                rom_length    <= 7'h00;
               end
             endcase
           end
 
           SetupSetAddress: begin
             in_ep_stall_o <= 1'b0;
-            rom_addr   <= 'h00;
-            rom_length <= 'h00;
+            rom_addr      <= 7'h00;
+            rom_length    <= 7'h00;
 
             // we need to save the address after the status stage ends
             // this is because the status stage token will still be using

ParseResult:
UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'CALL',  'ops': ['usb_dscr_type_e',          {'__class__': 'HdlOp',           'fn': 'INDEX',           'ops': ['wValue',                   {'__class__': 'HdlOp',                    'fn': 'DOWNTO',                    'ops': [{'__class__': 'HdlValueInt',                             'base': 10,                             'val': '15'},                            {'__class__': 'HdlValueInt',                             'base': 10,                             'val': '8'}]}]}]}  to {'__class__': 'HdlOp',  'fn': 'CALL',  'ops': ['usb_dscr_type_e',          {'__class__': 'HdlOp',           'fn': 'INDEX',           'ops': ['wValue',                   {'__class__': 'HdlOp',                    'fn': 'DOWNTO',                    'ops': [{'__class__': 'HdlValueInt',                             'base': 10,                             'val': '15'},                            {'__class__': 'HdlValueInt',                             'base': 10,                             'val': '8'}]}]}]} 
    MOV HdlOp@@CALL to {'__class__': 'HdlOp',  'fn': 'CALL',  'ops': ['usb_dscr_type_e',          {'__class__': 'HdlOp',           'fn': 'INDEX',           'ops': ['wValue',                   {'__class__': 'HdlOp',                    'fn': 'DOWNTO',                    'ops': [{'__class__': 'HdlValueInt',                             'base': 10,                             'val': '15'},                            {'__class__': 'HdlValueInt',                             'base': 10,                             'val': '8'}]}]}]} 
    HdlOp: CALL
        list: ops
            HdlValueId: usb_dscr_type_e
            HdlOp: INDEX
                list: ops
                    HdlValueId: wValue
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 15
                            HdlValueInt: 8

UPD HdlStmCase@@bRequest to bRequest
    INS HdlStmCaseUniqConstrain@@UNIQUE to bRequest

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'CALL',  'ops': ['usb_dscr_type_e',          {'__class__': 'HdlOp',           'fn': 'INDEX',           'ops': ['wValue',                   {'__class__': 'HdlOp',                    'fn': 'DOWNTO',                    'ops': [{'__class__': 'HdlValueInt',                             'base': 10,                             'val': '15'},                            {'__class__': 'HdlValueInt',                             'base': 10,                             'val': '8'}]}]}]}  to dcsr_type

UPD HdlStmCase@@dcsr_type to dcsr_type
    INS HdlValueId@@dcsr_type to dcsr_type
    INS HdlStmCaseUniqConstrain@@UNIQUE to dcsr_type

UPD HdlStmAssign@@ to 
    UPD HdlOp@@ADD to ADD
        UPD HdlOp@@ADD to ADD
            UPD HdlOp@@ADD to ADD
                UPD HdlValueInt@@9 to 20
                MOV HdlValueInt@@9 to ops
                HdlValueInt: 9
                DEL HdlValueInt@@9 from ops
                DEL list@@ops from ADD
            DEL HdlOp@@ADD from ops
            DEL HdlValueInt@@7 from ops
            DEL list@@ops from ADD
        DEL HdlOp@@ADD from ops
        DEL HdlValueInt@@7 from ops
        DEL list@@ops from ADD
    DEL HdlOp@@ADD from 


CommitId: 5c323ef52ef42785286da49a3a2919a35dce75d9
[usb] Fix lint errors
--- a/hw/ip/usbuart/rtl/usb_serial_ctrl_ep.sv
+++ b/hw/ip/usbuart/rtl/usb_serial_ctrl_ep.sv
@@ -277,19 +280,19 @@ module usb_serial_ctrl_ep  #(
 
           SetupSetConfiguration: begin
             in_ep_stall_o <= 1'b0;
-            rom_addr   <= 'h00;
-            rom_length <= 'h00;
+            rom_addr      <= 7'h00;
+            rom_length    <= 7'h00;
           end
 
           default begin
             in_ep_stall_o <= 1'b0;
-            rom_addr   <= 'h00;
-            rom_length <= 'h00;
+            rom_addr      <= 7'h00;
+            rom_length    <= 7'h00;
           end
         endcase
       end else if ((ctrl_xfr_state == StDataIn) && more_data_to_send && in_ep_data_get_i) begin
-        rom_addr <= rom_addr + 1'b1;
-        bytes_sent <= bytes_sent + 1'b1;
+        rom_addr   <= rom_addr + 7'b1;
+        bytes_sent <= bytes_sent + 8'b1;
       end else if (status_stage_end) begin
         bytes_sent <= '0;
         rom_addr <= '0;
ParseResult:
UPD HdlStmCase@@bRequest to bRequest
    INS HdlStmCaseUniqConstrain@@UNIQUE to bRequest


CommitId: 597dea829296a9563ae6dfbf79a38fbb3ecbabc0
[ast] Fix ast.core file
--- a/hw/top_earlgrey/ip/ast/rtl/sys_osc.sv
+++ b/hw/top_earlgrey/ip/ast/rtl/sys_osc.sv
@@ -10,11 +10,13 @@ module sys_osc (
   input vcore_pok_h_i,    // VCORE POK @3.3V
   input sys_en_i,         // System Source Clock Enable
   input sys_jen_i,        // System Source Clock Jitter Enable
+`ifdef AST_BYPASS_CLK
   input clk_sys_ext_i,    // FPGA/VERILATOR Clock input
+`endif
   output logic sys_clk_o  // System Clock Output
 );
 
-`ifndef SYNTHESIS
+`ifndef AST_BYPASS_CLK
 // Behavioral Model
 ////////////////////////////////////////
 timeunit  1ns / 1ps;

ParseResult:
DEL HdlIdDef@@clk_sys_ext_i from ports
HdlIdDef: clk_sys_ext_i
    HdlValueId: wire
    HdlDirection: IN


CommitId: 1b5fa9f1ebf0a9520ef6ea6faf1f1a2397a349c1
[verible/style] This corrects several style linter warnings/errors
--- a/hw/ip/usbdev/rtl/usbdev_flop_2syncpulse.sv
+++ b/hw/ip/usbdev/rtl/usbdev_flop_2syncpulse.sv
@@ -5,7 +5,7 @@
 // Generic double-synchronizer flop followed by pulse generation
 
 module usbdev_flop_2syncpulse #(
-  parameter Width = 16
+  parameter int unsigned Width = 16
 ) (
   input  logic             clk_i,    // receive clock
   input  logic             rst_ni,
ParseResult:
UPD HdlIdDef@@Width to Width
    INS HdlOp@@PARAMETRIZATION to Width
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: int
            HdlOp: MAP_ASSOCIATION
                list: ops
                    HdlValueId: signed


CommitId: b1e4b6d9f02e98546200ca88a147a370f3ecc8ef
[aon_timer/rtl] Fix bugs found by smoke test
--- a/hw/ip/aon_timer/rtl/aon_timer_core.sv
+++ b/hw/ip/aon_timer/rtl/aon_timer_core.sv
@@ -94,7 +94,7 @@ module aon_timer_core (
 
   // Prescaler counter
   assign prescale_count_d = wkup_incr ? 12'h000 : (prescale_count_q + 12'h001);
-  assign prescale_en      = lc_cpu_en_i[0] == lc_ctrl_pkg::Off;
+  assign prescale_en      = wkup_enable_q & (lc_cpu_en_i[0] == lc_ctrl_pkg::On);
 
   always_ff @(posedge clk_aon_i or negedge rst_aon_ni) begin
     if (!rst_aon_ni) begin

ParseResult:
UPD HdlStmAssign@@ to 
    INS HdlOp@@AND to 
    UPD HdlOp@@AND to AND
        INS list@@ops to AND
        INS HdlValueId@@wkup_enable_q to ops

UPD HdlStmAssign@@ to 
    MOV HdlOp@@EQ to 
    HdlOp: EQ
        list: ops
            HdlOp: INDEX
                list: ops
                    HdlValueId: lc_cpu_en_i
                    HdlValueInt: 0
            HdlOp: DOUBLE_COLON
                list: ops
                    HdlValueId: lc_ctrl_pkg
                    HdlValueId: Off
    UPD HdlOp@@EQ to EQ
        UPD HdlOp@@DOUBLE_COLON to DOUBLE_COLON
            UPD HdlValueId@@Off to On


CommitId: b1e4b6d9f02e98546200ca88a147a370f3ecc8ef
[aon_timer/rtl] Fix bugs found by smoke test
--- a/hw/ip/aon_timer/rtl/aon_timer_core.sv
+++ b/hw/ip/aon_timer/rtl/aon_timer_core.sv
@@ -105,7 +105,7 @@ module aon_timer_core (
   end
 
   // Wakeup timer count
-  assign wkup_incr     = (lc_cpu_en_i[1] == lc_ctrl_pkg::Off) & wkup_enable_q &
+  assign wkup_incr     = (lc_cpu_en_i[1] == lc_ctrl_pkg::On) & wkup_enable_q &
                          (prescale_count_q == wkup_prescaler_q);
   assign wkup_count_d  = wkup_count_reg_wr_i ? wkup_count_wr_data_i :
                                                (wkup_count_q + 32'd1);

ParseResult:
UPD HdlStmAssign@@ to 
    UPD HdlOp@@AND to AND
        UPD HdlOp@@AND to AND
            UPD HdlOp@@EQ to EQ
                UPD HdlOp@@DOUBLE_COLON to DOUBLE_COLON
                    UPD HdlValueId@@Off to On


CommitId: b1e4b6d9f02e98546200ca88a147a370f3ecc8ef
[aon_timer/rtl] Fix bugs found by smoke test
--- a/hw/ip/aon_timer/rtl/aon_timer_core.sv
+++ b/hw/ip/aon_timer/rtl/aon_timer_core.sv
@@ -172,7 +172,7 @@ module aon_timer_core (
   assign wdog_bite_thold_o = wdog_bite_thold_q;
 
   // Watchdog timer count
-  assign wdog_incr     = wdog_enable_q & (lc_cpu_en_i[2] == lc_ctrl_pkg::Off) &
+  assign wdog_incr     = wdog_enable_q & (lc_cpu_en_i[2] == lc_ctrl_pkg::On) &
                          ~(sleep_mode_i & wdog_pause_q);
   assign wdog_count_d  = wdog_count_reg_wr_i ? wdog_count_wr_data_i :
                                                (wdog_count_q + 32'd1);
ParseResult:
UPD HdlStmAssign@@ to 
    UPD HdlOp@@AND to AND
        UPD HdlOp@@AND to AND
            UPD HdlOp@@EQ to EQ
                UPD HdlOp@@DOUBLE_COLON to DOUBLE_COLON
                    UPD HdlValueId@@Off to On


CommitId: 6c2a57c7517547a1a481cd1f030ef0c3dee95266
[aes/rtl] Fix lint errors
--- a/hw/ip/aes/rtl/aes_core.sv
+++ b/hw/ip/aes/rtl/aes_core.sv
@@ -25,7 +25,7 @@ module aes_core #(
   logic     [7:0] key_init_qe;
 
   mode_e          mode, key_expand_mode;
-  key_len_e       key_len;
+  key_len_e       key_len_q, key_len;
 
   logic     [7:0] state_init[16];
   logic     [7:0] state_d[16];

ParseResult:
INS HdlIdDef@@key_len_q to objs
HdlIdDef: key_len_q
    HdlDirection: INTERNAL


CommitId: 6c2a57c7517547a1a481cd1f030ef0c3dee95266
[aes/rtl] Fix lint errors
--- a/hw/ip/aes/rtl/aes_core.sv
+++ b/hw/ip/aes/rtl/aes_core.sv
@@ -66,6 +66,9 @@ module aes_core #(
 
   // Unused signals
   logic    [31:0] unused_data_out_q[4];
+  logic           unused_mode_qe;
+  logic           unused_manual_start_trigger_qe;
+  logic           unused_force_data_overwrite_qe;
 
   // Inputs
   assign key_init[0] = reg2hw.key[0].q;

ParseResult:
INS HdlIdDef@@unused_mode_qe to objs
HdlIdDef: unused_mode_qe
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

INS HdlIdDef@@unused_manual_start_trigger_qe to objs
HdlIdDef: unused_manual_start_trigger_qe
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

INS HdlIdDef@@unused_force_data_overwrite_qe to objs
HdlIdDef: unused_force_data_overwrite_qe
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL


CommitId: 6c2a57c7517547a1a481cd1f030ef0c3dee95266
[aes/rtl] Fix lint errors
--- a/hw/ip/aes/rtl/aes_core.sv
+++ b/hw/ip/aes/rtl/aes_core.sv
@@ -99,8 +102,9 @@ module aes_core #(
 
   assign mode = mode_e'(reg2hw.ctrl.mode.q);
 
+  assign key_len_q = key_len_e'(reg2hw.ctrl.key_len.q);
   always_comb begin : get_key_len
-    unique case (key_len_e'(reg2hw.ctrl.key_len.q))
+    unique case (key_len_q)
       AES_128: key_len = AES_128;
       AES_256: key_len = AES_256;
       AES_192: begin

ParseResult:
INS HdlStmAssign@@ to objs

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'CALL',  'ops': ['key_len_e',          {'__class__': 'HdlOp',           'fn': 'DOT',           'ops': [{'__class__': 'HdlOp',                    'fn': 'DOT',                    'ops': [{'__class__': 'HdlOp',                             'fn': 'DOT',                             'ops': ['reg2hw', 'ctrl']},                            'key_len']},                   'q']}]}  to {'__class__': 'HdlOp',  'fn': 'CALL',  'ops': ['key_len_e',          {'__class__': 'HdlOp',           'fn': 'DOT',           'ops': [{'__class__': 'HdlOp',                    'fn': 'DOT',                    'ops': [{'__class__': 'HdlOp',                             'fn': 'DOT',                             'ops': ['reg2hw', 'ctrl']},                            'key_len']},                   'q']}]} 
    MOV HdlOp@@CALL to {'__class__': 'HdlOp',  'fn': 'CALL',  'ops': ['key_len_e',          {'__class__': 'HdlOp',           'fn': 'DOT',           'ops': [{'__class__': 'HdlOp',                    'fn': 'DOT',                    'ops': [{'__class__': 'HdlOp',                             'fn': 'DOT',                             'ops': ['reg2hw', 'ctrl']},                            'key_len']},                   'q']}]} 
    HdlOp: CALL
        list: ops
            HdlValueId: key_len_e
            HdlOp: DOT
                list: ops
                    HdlOp: DOT
                        list: ops
                            HdlOp: DOT
                                list: ops
                                    HdlValueId: reg2hw
                                    HdlValueId: ctrl
                            HdlValueId: key_len
                    HdlValueId: q

UPD HdlStmAssign@@ to 
    INS HdlValueId@@key_len_q to 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'CALL',  'ops': ['key_len_e',          {'__class__': 'HdlOp',           'fn': 'DOT',           'ops': [{'__class__': 'HdlOp',                    'fn': 'DOT',                    'ops': [{'__class__': 'HdlOp',                             'fn': 'DOT',                             'ops': ['reg2hw', 'ctrl']},                            'key_len']},                   'q']}]}  to key_len_q


CommitId: 6c2a57c7517547a1a481cd1f030ef0c3dee95266
[aes/rtl] Fix lint errors
--- a/hw/ip/aes/rtl/aes_core.sv
+++ b/hw/ip/aes/rtl/aes_core.sv
@@ -120,6 +124,11 @@ module aes_core #(
   assign unused_data_out_q[2] = reg2hw.data_out[2].q;
   assign unused_data_out_q[3] = reg2hw.data_out[3].q;
 
+  // key_len is hrw and hwqe, other fields of ctrl reg are hro and don't need hwqe
+  assign unused_mode_qe                 = reg2hw.ctrl.mode.qe;
+  assign unused_manual_start_trigger_qe = reg2hw.ctrl.manual_start_trigger.qe;
+  assign unused_force_data_overwrite_qe = reg2hw.ctrl.force_data_overwrite.qe;
+
   // State registers
   always_comb begin : state_mux
     unique case (state_sel)
ParseResult:
INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: DOT
        list: ops
            HdlOp: DOT
                list: ops
                    HdlOp: DOT
                        list: ops
                            HdlValueId: reg2hw
                            HdlValueId: ctrl
                    HdlValueId: mode
            HdlValueId: qe
    HdlValueId: unused_mode_qe

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: DOT
        list: ops
            HdlOp: DOT
                list: ops
                    HdlOp: DOT
                        list: ops
                            HdlValueId: reg2hw
                            HdlValueId: ctrl
                    HdlValueId: manual_start_trigger
            HdlValueId: qe
    HdlValueId: unused_manual_start_trigger_qe

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: DOT
        list: ops
            HdlOp: DOT
                list: ops
                    HdlOp: DOT
                        list: ops
                            HdlValueId: reg2hw
                            HdlValueId: ctrl
                    HdlValueId: force_data_overwrite
            HdlValueId: qe
    HdlValueId: unused_force_data_overwrite_qe


CommitId: c035b84e0c1d9c37be3c075787fa66c6ff77ee4f
[chiplevel] Minor lint fixes
--- a/hw/top_earlgrey/rtl/autogen/chip_earlgrey_asic.sv
+++ b/hw/top_earlgrey/rtl/autogen/chip_earlgrey_asic.sv
@@ -770,7 +770,10 @@ module chip_earlgrey_asic (
     // D is used as an input only
     dio_out[DioUsbdevD],
     dio_oe[DioUsbdevD],
-    dio_attr[DioUsbdevD]
+    dio_attr[DioUsbdevD],
+    // Pullup/down
+    dio_attr[DioUsbdevDpPullup],
+    dio_attr[DioUsbdevDnPullup]
   };
 
   //////////////////////
ParseResult:
UPD HdlStmAssign@@ to 
    INS HdlOp@@XOR_UNARY to 
    UPD HdlOp@@XOR_UNARY to XOR_UNARY
        INS list@@ops to XOR_UNARY
        INS HdlOp@@CONCAT to ops
        UPD HdlOp@@CONCAT to CONCAT
            INS list@@ops to CONCAT
            INS HdlOp@@INDEX to ops
            HdlOp: INDEX
                list: ops
                    HdlValueId: dio_attr
                    HdlValueId: DioUsbdevDnPullup
            UPD HdlOp@@CONCAT to CONCAT
                INS HdlOp@@INDEX to ops
                HdlOp: INDEX
                    list: ops
                        HdlValueId: dio_attr
                        HdlValueId: DioUsbdevDpPullup

UPD HdlStmAssign@@ to 
    UPD HdlOp@@XOR_UNARY to CONCAT
    MOV HdlOp@@XOR_UNARY to 
    HdlOp: XOR_UNARY
        list: ops
            HdlOp: CONCAT
                list: ops
                    HdlOp: CONCAT
                        list: ops
                            HdlOp: CONCAT
                                list: ops
                                    HdlOp: CONCAT
                                        list: ops
                                            HdlOp: CONCAT
                                                list: ops
                                                    HdlOp: CONCAT
                                                        list: ops
                                                            HdlOp: CONCAT
                                                                list: ops
                                                                    HdlOp: CONCAT
                                                                        list: ops
                                                                            HdlOp: CONCAT
                                                                                list: ops
                                                                                    HdlOp: CONCAT
                                                                                        list: ops
                                                                                            HdlOp: CONCAT
                                                                                                list: ops
                                                                                                    HdlOp: CONCAT
                                                                                                        list: ops
                                                                                                            HdlOp: CONCAT
                                                                                                                list: ops
                                                                                                                    HdlOp: CONCAT
                                                                                                                        list: ops
                                                                                                                            HdlOp: CONCAT
                                                                                                                                list: ops
                                                                                                                                    HdlOp: INDEX
                                                                                                                                        list: ops
                                                                                                                                            HdlValueId: dio_out
                                                                                                                                            HdlValueId: DioUsbdevSense
                                                                                                                                    HdlOp: INDEX
                                                                                                                                        list: ops
                                                                                                                                            HdlValueId: dio_oe
                                                                                                                                            HdlValueId: DioUsbdevSense
                                                                                                                            HdlOp: INDEX
                                                                                                                                list: ops
                                                                                                                                    HdlValueId: dio_attr
                                                                                                                                    HdlValueId: DioUsbdevSense
                                                                                                                    HdlOp: INDEX
                                                                                                                        list: ops
                                                                                                                            HdlValueId: dio_out
                                                                                                                            HdlValueId: DioUsbdevSe0
                                                                                                            HdlOp: INDEX
                                                                                                                list: ops
                                                                                                                    HdlValueId: dio_oe
                                                                                                                    HdlValueId: DioUsbdevSe0
                                                                                                    HdlOp: INDEX
                                                                                                        list: ops
                                                                                                            HdlValueId: dio_attr
                                                                                                            HdlValueId: DioUsbdevSe0
                                                                                            HdlOp: INDEX
                                                                                                list: ops
                                                                                                    HdlValueId: dio_out
                                                                                                    HdlValueId: DioUsbdevTxModeSe
                                                                                    HdlOp: INDEX
                                                                                        list: ops
                                                                                            HdlValueId: dio_oe
                                                                                            HdlValueId: DioUsbdevTxModeSe
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlValueId: dio_attr
                                                                                    HdlValueId: DioUsbdevTxModeSe
                                                                    HdlOp: INDEX
                                                                        list: ops
                                                                            HdlValueId: dio_out
                                                                            HdlValueId: DioUsbdevSuspend
                                                            HdlOp: INDEX
                                                                list: ops
                                                                    HdlValueId: dio_oe
                                                                    HdlValueId: DioUsbdevSuspend
                                                    HdlOp: INDEX
                                                        list: ops
                                                            HdlValueId: dio_attr
                                                            HdlValueId: DioUsbdevSuspend
                                            HdlOp: INDEX
                                                list: ops
                                                    HdlValueId: dio_attr
                                                    HdlValueId: DioUsbdevRxEnable
                                    HdlOp: INDEX
                                        list: ops
                                            HdlValueId: dio_out
                                            HdlValueId: DioUsbdevD
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: dio_oe
                                    HdlValueId: DioUsbdevD
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: dio_attr
                            HdlValueId: DioUsbdevD


CommitId: 6cc1abc5bbd78431d3d465cb9bdcfc3839dfd3ea
[fpv/csr_assert] add csr support for regwen
--- a/hw/ip/usbdev/dv/sva/usbdev_bind.sv
+++ b/hw/ip/usbdev/dv/sva/usbdev_bind.sv
@@ -13,14 +13,14 @@ module usbdev_bind;
     .d2h  (tl_o)
   );
 
-  // import usbdev_reg_pkg::*;
-  // bind usbdev usbdev_csr_assert_fpv usbdev_csr_assert (
-  //   .clk_i,
-  //   .rst_ni,
-  //   .h2d    (tl_i),
-  //   .d2h    (tl_o),
-  //   .reg2hw (reg2hw),
-  //   .hw2reg (hw2reg)
-  // );
+  import usbdev_reg_pkg::*;
+  bind usbdev usbdev_csr_assert_fpv usbdev_csr_assert (
+    .clk_i,
+    .rst_ni,
+    .h2d    (tl_i),
+    .d2h    (tl_o),
+    .reg2hw (reg2hw),
+    .hw2reg (hw2reg)
+  );
 
 endmodule
ParseResult:
UPD HdlModuleDef@@usbdev_bind to usbdev_bind
    INS HdlImport@@ to objs
    HdlImport
        list: path
            HdlValueId: usbdev_reg_pkg
            HdlAll


CommitId: 59d0872f458f27383e9de2745961517a60cf84f9
Update lowrisc_ibex to lowRISC/ibex@ae547c8
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_alu.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_alu.sv
@@ -591,9 +591,9 @@ module ibex_alu #(
     `define _N(stg) (16 >> stg)
 
     // bext / bdep control bit generation
-    for (genvar stg=0; stg<5; stg++) begin
+    for (genvar stg=0; stg<5; stg++) begin : gen_stage
       // number of segs: 2** stg
-      for (genvar seg=0; seg<2**stg; seg++) begin
+      for (genvar seg=0; seg<2**stg; seg++) begin : gen_segment
 
         assign lrotc_stage[stg][2*`_N(stg)*(seg+1)-1 : 2*`_N(stg)*seg] =
             {{`_N(stg){1'b0}},{`_N(stg){1'b1}}} <<

ParseResult:
UPD HdlStmIf@@ to 
    INS HdlValueId@@RV32B to 
    INS list@@elifs to 

UPD HdlStmIf@@ to 
    DEL HdlValueId@@RV32B from 
    DEL list@@elifs from 


CommitId: 59d0872f458f27383e9de2745961517a60cf84f9
Update lowrisc_ibex to lowRISC/ibex@ae547c8
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_alu.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_alu.sv
@@ -611,7 +611,7 @@ module ibex_alu #(
     end
     `undef _N
 
-    for (genvar stg=0; stg<5; stg++) begin
+    for (genvar stg=0; stg<5; stg++) begin : gen_zbe_mask
       assign butterfly_zbe_mask_not[stg] =
           ~(butterfly_zbe_mask_l[stg] | butterfly_zbe_mask_r[stg]);
     end

ParseResult:
UPD HdlStmIf@@ to 
    INS HdlValueId@@RV32B to 
    INS list@@elifs to 

UPD HdlStmIf@@ to 
    DEL HdlValueId@@RV32B from 
    DEL list@@elifs from 


CommitId: 59d0872f458f27383e9de2745961517a60cf84f9
Update lowrisc_ibex to lowRISC/ibex@ae547c8
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_alu.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_alu.sv
@@ -708,17 +708,17 @@ module ibex_alu #(
     // Shuffle / Unshuffle //
     /////////////////////////
 
-    localparam logic [31:0] SHUFFLE_MASK_L [0:3] =
-        '{32'h00ff_0000, 32'h0f00_0f00, 32'h3030_3030, 32'h4444_4444};
-    localparam logic [31:0] SHUFFLE_MASK_R [0:3] =
-        '{32'h0000_ff00, 32'h00f0_00f0, 32'h0c0c_0c0c, 32'h2222_2222};
+    localparam logic [31:0] SHUFFLE_MASK_L [4] =
+        '{32'h4444_4444, 32'h3030_3030, 32'h0f00_0f00, 32'h00ff_0000};
+    localparam logic [31:0] SHUFFLE_MASK_R [4] =
+        '{32'h2222_2222, 32'h0c0c_0c0c, 32'h00f0_00f0, 32'h0000_ff00};
 
-    localparam logic [31:0] FLIP_MASK_L [0:3] =
-        '{32'h2200_1100, 32'h0044_0000, 32'h4411_0000, 32'h1100_0000};
-    localparam logic [31:0] FLIP_MASK_R [0:3] =
-        '{32'h0088_0044, 32'h0000_2200, 32'h0000_8822, 32'h0000_0088};
+    localparam logic [31:0] FLIP_MASK_L [4] =
+        '{32'h1100_0000, 32'h4411_0000, 32'h0044_0000, 32'h2200_1100};
+    localparam logic [31:0] FLIP_MASK_R [4] =
+        '{32'h0000_0088, 32'h0000_8822, 32'h0000_2200, 32'h0088_0044};
 
-    logic [31:0] SHUFFLE_MASK_NOT [0:3];
+    logic [31:0] SHUFFLE_MASK_NOT [4];
     for(genvar i = 0; i < 4; i++) begin : gen_shuffle_mask_not
       assign SHUFFLE_MASK_NOT[i] = ~(SHUFFLE_MASK_L[i] | SHUFFLE_MASK_R[i]);
     end
ParseResult:
UPD HdlStmIf@@ to 
    INS HdlValueId@@RV32B to 
    INS list@@elifs to 

UPD HdlIdDef@@SHUFFLE_MASK_L to SHUFFLE_MASK_L
    INS HdlValueInt@@44444444 to value

UPD HdlIdDef@@SHUFFLE_MASK_L to SHUFFLE_MASK_L
    UPD HdlValueInt@@00ff0000 to 30303030
    UPD HdlValueInt@@30303030 to 00ff0000
    DEL HdlValueInt@@44444444 from value

UPD HdlIdDef@@SHUFFLE_MASK_R to SHUFFLE_MASK_R
    INS HdlValueInt@@22222222 to value

UPD HdlIdDef@@SHUFFLE_MASK_R to SHUFFLE_MASK_R
    UPD HdlValueInt@@0000ff00 to 0c0c0c0c
    UPD HdlValueInt@@0c0c0c0c to 0000ff00
    DEL HdlValueInt@@22222222 from value

UPD HdlIdDef@@FLIP_MASK_L to FLIP_MASK_L
    UPD HdlValueInt@@22001100 to 11000000
    UPD HdlValueInt@@00440000 to 44110000
    UPD HdlValueInt@@44110000 to 00440000
    UPD HdlValueInt@@11000000 to 22001100

UPD HdlIdDef@@FLIP_MASK_R to FLIP_MASK_R
    UPD HdlValueInt@@00880044 to 00000088
    UPD HdlValueInt@@00002200 to 00008822
    UPD HdlValueInt@@00008822 to 00002200
    UPD HdlValueInt@@00000088 to 00880044

UPD HdlIdDef@@SHUFFLE_MASK_NOT to SHUFFLE_MASK_NOT
    UPD HdlOp@@INDEX to INDEX
        UPD HdlOp@@DOWNTO to DOWNTO
            UPD HdlValueInt@@0 to 4
            MOV HdlValueInt@@0 to ops
            HdlValueInt: 0
            DEL HdlValueInt@@3 from ops
            DEL list@@ops from DOWNTO
        DEL HdlOp@@DOWNTO from ops

UPD HdlStmIf@@ to 
    DEL HdlValueId@@RV32B from 
    DEL list@@elifs from 


CommitId: 37baf9903560f6633adf6e7796beca4fa648faf6
[pattgen] Minor lint fix
--- a/hw/ip/pattgen/rtl/pattgen_core.sv
+++ b/hw/ip/pattgen/rtl/pattgen_core.sv
@@ -88,4 +88,8 @@ module pattgen_core
     .intr_o                 (intr_done_ch1_o)
   );
 
+  // unused registers
+  logic unused_reg;
+  assign unused_reg = ^reg2hw.alert_test;
+
 endmodule : pattgen_core
ParseResult:
INS HdlIdDef@@unused_reg to objs
HdlIdDef: unused_reg
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: XOR_UNARY
        list: ops
            HdlOp: DOT
                list: ops
                    HdlValueId: reg2hw
                    HdlValueId: alert_test
    HdlValueId: unused_reg


CommitId: d2e1184308b9582551252d1135a126ea558a6ab8
Revert "[usbdev] Fixes for I/O modes and expand their tests"
--- a/hw/ip/usb_fs_nb_pe/rtl/usb_fs_nb_pe.sv
+++ b/hw/ip/usb_fs_nb_pe/rtl/usb_fs_nb_pe.sv
@@ -26,7 +26,6 @@ module usb_fs_nb_pe #(
   input  logic [6:0]             dev_addr_i,
 
   input  logic                   cfg_eop_single_bit_i, // 1: detect a single SE0 bit as EOP
-  input  logic                   cfg_rx_differential_i, // 1: use differential rx data on usb_d_i
   input  logic                   tx_osc_test_mode_i, // Oscillator test mode (constantly output JK)
   input  logic [NumOutEps-1:0]   data_toggle_clear_i, // Clear the data toggles for an EP
 

ParseResult:
DEL HdlIdDef@@cfg_rx_differential_i from ports
HdlIdDef: cfg_rx_differential_i
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: IN


CommitId: d2e1184308b9582551252d1135a126ea558a6ab8
Revert "[usbdev] Fixes for I/O modes and expand their tests"
--- a/hw/ip/usb_fs_nb_pe/rtl/usb_fs_nb_pe.sv
+++ b/hw/ip/usb_fs_nb_pe/rtl/usb_fs_nb_pe.sv
@@ -67,25 +66,17 @@ module usb_fs_nb_pe #(
   output logic                   sof_valid_o,
   output logic [10:0]            frame_index_o,
 
-  // RX line status
-  output logic                   rx_se0_det_o,
-  output logic                   rx_jjj_det_o,
-
   // RX errors
   output logic                   rx_crc_err_o,
   output logic                   rx_pid_err_o,
   output logic                   rx_bitstuff_err_o,
 
   ///////////////////////////////////////
-  // USB RX Interface (synchronous)    //
+  // USB TX/RX Interface (synchronous) //
   ///////////////////////////////////////
   input  logic                   usb_d_i,
-  input  logic                   usb_dp_i,
-  input  logic                   usb_dn_i,
+  input  logic                   usb_se0_i,
 
-  ///////////////////////////////////////
-  // USB TX Interface (synchronous)    //
-  ///////////////////////////////////////
   output logic                   usb_d_o,
   output logic                   usb_se0_o,
   output logic                   usb_oe_o

ParseResult:
UPD HdlIdDef@@usb_dn_i to usb_se0_i

DEL HdlIdDef@@rx_se0_det_o from ports
HdlIdDef: rx_se0_det_o
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: OUT

DEL HdlIdDef@@rx_jjj_det_o from ports
HdlIdDef: rx_jjj_det_o
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: OUT

DEL HdlIdDef@@usb_dp_i from ports
HdlIdDef: usb_dp_i
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: IN


CommitId: 17e9624c452e05f71f4ad2b7c75bf6bbb071c324
Update lowrisc_ibex to lowRISC/ibex@ee1098f
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_cs_registers.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_cs_registers.sv
@@ -24,7 +24,12 @@ module ibex_cs_registers #(
 
     // Hart ID
     input  logic [31:0]          hart_id_i,
-    output ibex_pkg::priv_lvl_e  priv_mode_o,
+
+    // Privilege mode
+    output ibex_pkg::priv_lvl_e  priv_mode_id_o,
+    output ibex_pkg::priv_lvl_e  priv_mode_if_o,
+    output ibex_pkg::priv_lvl_e  priv_mode_lsu_o,
+    output logic                 csr_mstatus_tw_o,
 
     // mtvec
     output logic [31:0]          csr_mtvec_o,

ParseResult:
UPD HdlIdDef@@priv_mode_o to priv_mode_id_o

INS HdlIdDef@@priv_mode_if_o to ports
HdlIdDef: priv_mode_if_o
    HdlOp: DOUBLE_COLON
        list: ops
            HdlValueId: ibex_pkg
            HdlValueId: priv_lvl_e
    HdlDirection: OUT

INS HdlIdDef@@priv_mode_lsu_o to ports
HdlIdDef: priv_mode_lsu_o
    HdlOp: DOUBLE_COLON
        list: ops
            HdlValueId: ibex_pkg
            HdlValueId: priv_lvl_e
    HdlDirection: OUT

INS HdlIdDef@@csr_mstatus_tw_o to ports
HdlIdDef: csr_mstatus_tw_o
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: OUT


CommitId: 17e9624c452e05f71f4ad2b7c75bf6bbb071c324
Update lowrisc_ibex to lowRISC/ibex@ee1098f
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_cs_registers.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_cs_registers.sv
@@ -112,8 +117,15 @@ module ibex_cs_registers #(
     logic      mie;
     logic      mpie;
     priv_lvl_e mpp;
+    logic      mprv;
+    logic      tw;
   } Status_t;
 
+  typedef struct packed {
+    logic      mpie;
+    priv_lvl_e mpp;
+  } StatusStk_t;
+
   // struct for mip/mie CSRs
   typedef struct packed {
     logic        irq_software;

ParseResult:
INS HdlIdDef@@StatusStk_t to objs
HdlIdDef: StatusStk_t
    HdlExprNotImplemented: value
    HdlDirection: INTERNAL


CommitId: 17e9624c452e05f71f4ad2b7c75bf6bbb071c324
Update lowrisc_ibex to lowRISC/ibex@ee1098f
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_cs_registers.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_cs_registers.sv
@@ -145,6 +157,7 @@ module ibex_cs_registers #(
   logic [31:0] exception_pc;
 
   // CSRs
+  priv_lvl_e   priv_lvl_q, priv_lvl_d;
   Status_t     mstatus_q, mstatus_d;
   Interrupts_t mie_q, mie_d;
   logic [31:0] mscratch_q, mscratch_d;

ParseResult:
INS HdlIdDef@@priv_lvl_q to objs
HdlIdDef: priv_lvl_q
    HdlDirection: INTERNAL

INS HdlIdDef@@priv_lvl_d to objs
HdlIdDef: priv_lvl_d
    HdlDirection: INTERNAL


CommitId: 17e9624c452e05f71f4ad2b7c75bf6bbb071c324
Update lowrisc_ibex to lowRISC/ibex@ee1098f
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_cs_registers.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_cs_registers.sv
@@ -204,11 +217,12 @@ module ibex_cs_registers #(
   assign csr_addr           = {csr_addr_i};
   assign mhpmcounter_idx    = csr_addr[4:0];
 
-  assign illegal_csr_priv   = 1'b0; // we only support M-mode
+  // See RISC-V Privileged Specification, version 1.11, Section 2.1
+  assign illegal_csr_priv   = (csr_addr[9:8] > {priv_lvl_q});
   assign illegal_csr_write  = (csr_addr[11:10] == 2'b11) && csr_wreq;
-  assign illegal_csr_insn_o = illegal_csr | illegal_csr_write | illegal_csr_priv;
+  assign illegal_csr_insn_o = csr_access_i & (illegal_csr | illegal_csr_write | illegal_csr_priv);
 
-  // mip CSR is purely combintational - must be able to re-enable the clock upon WFI
+  // mip CSR is purely combinational - must be able to re-enable the clock upon WFI
   assign mip.irq_software = irq_software_i & mie_q.irq_software;
   assign mip.irq_timer    = irq_timer_i    & mie_q.irq_timer;
   assign mip.irq_external = irq_external_i & mie_q.irq_external;

ParseResult:
INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: GT
        list: ops
            HdlOp: INDEX
                list: ops
                    HdlValueId: csr_addr
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 9
                            HdlValueInt: 8
            HdlValueId: priv_lvl_q
    HdlValueId: illegal_csr_priv

UPD HdlStmAssign@@ to 
    MOV HdlOp@@OR to 
    HdlOp: OR
        list: ops
            HdlOp: OR
                list: ops
                    HdlValueId: illegal_csr
                    HdlValueId: illegal_csr_write
            HdlValueId: illegal_csr_priv

DEL HdlStmAssign@@ from objs
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: illegal_csr_priv


CommitId: 17e9624c452e05f71f4ad2b7c75bf6bbb071c324
Update lowrisc_ibex to lowRISC/ibex@ee1098f
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_cs_registers.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_cs_registers.sv
@@ -229,6 +243,7 @@ module ibex_cs_registers #(
         csr_rdata_int[CSR_MSTATUS_MIE_BIT]                              = mstatus_q.mie;
         csr_rdata_int[CSR_MSTATUS_MPIE_BIT]                             = mstatus_q.mpie;
         csr_rdata_int[CSR_MSTATUS_MPP_BIT_HIGH:CSR_MSTATUS_MPP_BIT_LOW] = mstatus_q.mpp;
+        csr_rdata_int[CSR_MSTATUS_MPRV_BIT]                             = mstatus_q.mprv;
       end
 
       // misa

ParseResult:
UPD HdlStmCase@@csr_addr_i to csr_addr_i
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlOp: INDEX
                    list: ops
                        HdlValueId: csr_rdata_int
                        HdlValueId: CSR_MSTATUS_MPRV_BIT
                HdlOp: DOT
                    list: ops
                        HdlValueId: mstatus_q
                        HdlValueId: mprv


CommitId: 17e9624c452e05f71f4ad2b7c75bf6bbb071c324
Update lowrisc_ibex to lowRISC/ibex@ee1098f
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_cs_registers.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_cs_registers.sv
@@ -323,7 +338,7 @@ module ibex_cs_registers #(
           if ((csr_addr[4:0] == 5'b00000) ||     // CSR_MCOUNTINHIBIT
               (csr_addr[4:0] == 5'b00001) ||
               (csr_addr[4:0] == 5'b00010)) begin
-            illegal_csr = csr_access_i;
+            illegal_csr = 1'b1;
           end
 
         end else if ((csr_addr & CSR_MASK_MCOUNTER) == CSR_OFF_MCOUNTER) begin

ParseResult:
UPD HdlStmCase@@csr_addr_i to csr_addr_i
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlOp: INDEX
                    list: ops
                        HdlValueId: csr_rdata_int
                        HdlValueId: CSR_MSTATUS_MPRV_BIT
                HdlOp: DOT
                    list: ops
                        HdlValueId: mstatus_q
                        HdlValueId: mprv

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            DEL HdlValueId@@csr_access_i from ops

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            DEL HdlValueId@@csr_access_i from ops


CommitId: 17e9624c452e05f71f4ad2b7c75bf6bbb071c324
Update lowrisc_ibex to lowRISC/ibex@ee1098f
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_cs_registers.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_cs_registers.sv
@@ -332,7 +347,7 @@ module ibex_cs_registers #(
           if ((csr_addr[4:0] == 5'b00000) ||     // CSR_MCYCLE
               (csr_addr[4:0] == 5'b00001) ||
               (csr_addr[4:0] == 5'b00010)) begin // CSR_MINSTRET
-            illegal_csr = csr_access_i;
+            illegal_csr = 1'b1;
           end
 
         end else if ((csr_addr & CSR_MASK_MCOUNTER) == CSR_OFF_MCOUNTERH) begin

ParseResult:
UPD HdlStmCase@@csr_addr_i to csr_addr_i
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlOp: INDEX
                    list: ops
                        HdlValueId: csr_rdata_int
                        HdlValueId: CSR_MSTATUS_MPRV_BIT
                HdlOp: DOT
                    list: ops
                        HdlValueId: mstatus_q
                        HdlValueId: mprv

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlValueInt@@1 to ops

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlValueInt@@1 to ops

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            DEL HdlValueId@@csr_access_i from ops

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            DEL HdlValueId@@csr_access_i from ops


CommitId: 17e9624c452e05f71f4ad2b7c75bf6bbb071c324
Update lowrisc_ibex to lowRISC/ibex@ee1098f
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_cs_registers.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_cs_registers.sv
@@ -341,10 +356,10 @@ module ibex_cs_registers #(
           if ((csr_addr[4:0] == 5'b00000) ||     // CSR_MCYCLEH
               (csr_addr[4:0] == 5'b00001) ||
               (csr_addr[4:0] == 5'b00010)) begin // CSR_MINSTRETH
-            illegal_csr = csr_access_i;
+            illegal_csr = 1'b1;
           end
         end else begin
-          illegal_csr = csr_access_i;
+          illegal_csr = 1'b1;
         end
       end
     endcase

ParseResult:
UPD HdlStmCase@@csr_addr_i to csr_addr_i
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlOp: INDEX
                    list: ops
                        HdlValueId: csr_rdata_int
                        HdlValueId: CSR_MSTATUS_MPRV_BIT
                HdlOp: DOT
                    list: ops
                        HdlValueId: mstatus_q
                        HdlValueId: mprv

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlValueInt@@1 to ops

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlValueInt@@1 to ops

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            DEL HdlValueId@@csr_access_i from ops

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            DEL HdlValueId@@csr_access_i from ops


CommitId: 17e9624c452e05f71f4ad2b7c75bf6bbb071c324
Update lowrisc_ibex to lowRISC/ibex@ee1098f
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_cs_registers.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_cs_registers.sv
@@ -354,6 +369,7 @@ module ibex_cs_registers #(
   always_comb begin
     exception_pc = pc_id_i;
 
+    priv_lvl_d   = priv_lvl_q;
     mstatus_d    = mstatus_q;
     mie_d        = mie_q;
     mscratch_d   = mscratch_q;

ParseResult:
UPD HdlStmCase@@csr_addr_i to csr_addr_i
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlOp: INDEX
                    list: ops
                        HdlValueId: csr_rdata_int
                        HdlValueId: CSR_MSTATUS_MPRV_BIT
                HdlOp: DOT
                    list: ops
                        HdlValueId: mstatus_q
                        HdlValueId: mprv

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlValueInt@@1 to ops


CommitId: 17e9624c452e05f71f4ad2b7c75bf6bbb071c324
Update lowrisc_ibex to lowRISC/ibex@ee1098f
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_cs_registers.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_cs_registers.sv
@@ -489,8 +475,8 @@ module ibex_cs_registers #(
             mhpmcounterh_we[mhpmcounter_idx] = 1'b1;
           end
         end
-      end
-    endcase
+      endcase
+    end
 
     // exception controller gets priority over other writes
     unique case (1'b1)

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: priv_lvl_d
                HdlValueId: priv_lvl_q

INS HdlStmIf@@ to body

UPD HdlStmIf@@ to 
    INS HdlValueId@@csr_we_int to 
    INS HdlStmBlock@@SEQ to 
    INS list@@elifs to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

MOV HdlStmCase@@csr_addr_i to body
HdlStmCase: csr_addr_i
    HdlStmCaseType: CASE
    HdlValueId: csr_addr_i
    list: cases
        tuple
            HdlValueId: CSR_MSTATUS
            HdlStmBlock: SEQ
                list: body
                    HdlStmIf
                        HdlValueId: csr_we_int
                        HdlStmBlock: SEQ
                            list: body
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: mstatus_d
                                        list
                                            HdlOp: MAP_ASSOCIATION
                                                list: ops
                                                    HdlValueId: mie
                                                    HdlOp: INDEX
                                                        list: ops
                                                            HdlValueId: csr_wdata_int
                                                            HdlValueId: CSR_MSTATUS_MIE_BIT
                                            HdlOp: MAP_ASSOCIATION
                                                list: ops
                                                    HdlValueId: mpie
                                                    HdlOp: INDEX
                                                        list: ops
                                                            HdlValueId: csr_wdata_int
                                                            HdlValueId: CSR_MSTATUS_MPIE_BIT
                                            HdlOp: MAP_ASSOCIATION
                                                list: ops
                                                    HdlValueId: mpp
                                                    HdlValueId: PRIV_LVL_M
                        list: elifs
        tuple
            HdlValueId: CSR_MIE
            HdlStmBlock: SEQ
                list: body
                    HdlStmIf
                        HdlValueId: csr_we_int
                        HdlStmBlock: SEQ
                            list: body
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: mie_d
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: csr_wdata_int
                                                HdlValueId: CSR_MSIX_BIT
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: mie_d
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: csr_wdata_int
                                                HdlValueId: CSR_MTIX_BIT
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: mie_d
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: csr_wdata_int
                                                HdlValueId: CSR_MEIX_BIT
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: mie_d
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: csr_wdata_int
                                                HdlOp: DOWNTO
                                                    list: ops
                                                        HdlValueId: CSR_MFIX_BIT_HIGH
                                                        HdlValueId: CSR_MFIX_BIT_LOW
                        list: elifs
        tuple
            HdlValueId: CSR_MSCRATCH
            HdlStmIf
                HdlValueId: csr_we_int
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: mscratch_d
                        HdlValueId: csr_wdata_int
                list: elifs
        tuple
            HdlValueId: CSR_MEPC
            HdlStmIf
                HdlValueId: csr_we_int
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: mepc_d
                        HdlOp: CONCAT
                            list: ops
                                HdlOp: INDEX
                                    list: ops
                                        HdlValueId: csr_wdata_int
                                        HdlOp: DOWNTO
                                            list: ops
                                                HdlValueInt: 31
                                                HdlValueInt: 1
                                HdlValueInt: 0
                list: elifs
        tuple
            HdlValueId: CSR_MCAUSE
            HdlStmIf
                HdlValueId: csr_we_int
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: mcause_d
                        HdlOp: CONCAT
                            list: ops
                                HdlOp: INDEX
                                    list: ops
                                        HdlValueId: csr_wdata_int
                                        HdlValueInt: 31
                                HdlOp: INDEX
                                    list: ops
                                        HdlValueId: csr_wdata_int
                                        HdlOp: DOWNTO
                                            list: ops
                                                HdlValueInt: 4
                                                HdlValueInt: 0
                list: elifs
        tuple
            HdlValueId: CSR_MTVAL
            HdlStmIf
                HdlValueId: csr_we_int
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: mtval_d
                        HdlValueId: csr_wdata_int
                list: elifs
        tuple
            HdlValueId: CSR_MTVEC
            HdlStmIf
                HdlValueId: csr_we_int
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: mtvec_d
                        HdlOp: CONCAT
                            list: ops
                                HdlOp: CONCAT
                                    list: ops
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: csr_wdata_int
                                                HdlOp: DOWNTO
                                                    list: ops
                                                        HdlValueInt: 31
                                                        HdlValueInt: 8
                                        HdlValueInt: 0
                                HdlValueInt: 01
                list: elifs
        tuple
            HdlValueId: CSR_DCSR
            HdlStmBlock: SEQ
                list: body
                    HdlStmIf
                        HdlValueId: csr_we_int
                        HdlStmBlock: SEQ
                            list: body
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: dcsr_d
                                        HdlValueId: csr_wdata_int
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: dcsr_d
                                        HdlValueId: XDEBUGVER_STD
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: dcsr_d
                                        HdlValueId: PRIV_LVL_M
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: dcsr_d
                                        HdlValueInt: 0
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: dcsr_d
                                        HdlValueInt: 0
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: dcsr_d
                                        HdlValueInt: 0
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: dcsr_d
                                        HdlValueInt: 0
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: dcsr_d
                                        HdlValueInt: 0
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: dcsr_d
                                        HdlValueInt: 0
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: dcsr_d
                                        HdlValueInt: 0
                        list: elifs
        tuple
            HdlValueId: CSR_DPC
            HdlStmBlock: SEQ
                list: body
                    HdlStmIf
                        HdlOp: AND_LOG
                            list: ops
                                HdlValueId: csr_we_int
                                HdlOp: EQ
                                    list: ops
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: csr_wdata_int
                                                HdlValueInt: 0
                                        HdlValueInt: 0
                        HdlStmBlock: SEQ
                            list: body
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: depc_d
                                        HdlValueId: csr_wdata_int
                        list: elifs
        tuple
            HdlValueId: CSR_DSCRATCH0
            HdlStmBlock: SEQ
                list: body
                    HdlStmIf
                        HdlValueId: csr_we_int
                        HdlStmBlock: SEQ
                            list: body
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: dscratch0_d
                                        HdlValueId: csr_wdata_int
                        list: elifs
        tuple
            HdlValueId: CSR_DSCRATCH1
            HdlStmBlock: SEQ
                list: body
                    HdlStmIf
                        HdlValueId: csr_we_int
                        HdlStmBlock: SEQ
                            list: body
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: dscratch1_d
                                        HdlValueId: csr_wdata_int
                        list: elifs
        tuple
            HdlValueId: CSR_MCOUNTINHIBIT
            HdlStmBlock: SEQ
                list: body
                    HdlStmIf
                        HdlValueId: csr_we_int
                        HdlStmBlock: SEQ
                            list: body
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: mcountinhibit_we
                                        HdlValueInt: 1
                        list: elifs
        tuple
            HdlValueId: CSR_MCYCLE
            HdlStmBlock: SEQ
                list: body
                    HdlStmIf
                        HdlValueId: csr_we_int
                        HdlStmBlock: SEQ
                            list: body
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: mhpmcounter_we
                                                HdlValueInt: 0
                                        HdlValueInt: 1
                        list: elifs
        tuple
            HdlValueId: CSR_MCYCLEH
            HdlStmBlock: SEQ
                list: body
                    HdlStmIf
                        HdlValueId: csr_we_int
                        HdlStmBlock: SEQ
                            list: body
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: mhpmcounterh_we
                                                HdlValueInt: 0
                                        HdlValueInt: 1
                        list: elifs
        tuple
            HdlValueId: CSR_MINSTRET
            HdlStmBlock: SEQ
                list: body
                    HdlStmIf
                        HdlValueId: csr_we_int
                        HdlStmBlock: SEQ
                            list: body
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: mhpmcounter_we
                                                HdlValueInt: 2
                                        HdlValueInt: 1
                        list: elifs
        tuple
            HdlValueId: CSR_MINSTRETH
            HdlStmBlock: SEQ
                list: body
                    HdlStmIf
                        HdlValueId: csr_we_int
                        HdlStmBlock: SEQ
                            list: body
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: mhpmcounterh_we
                                                HdlValueInt: 2
                                        HdlValueInt: 1
                        list: elifs
    HdlStmBlock: SEQ
        list: body
            HdlStmIf
                HdlOp: EQ
                    list: ops
                        HdlValueId: csr_we_int
                        HdlValueInt: 1
                HdlStmBlock: SEQ
                    list: body
                        HdlStmIf
                            HdlOp: EQ
                                list: ops
                                    HdlOp: AND
                                        list: ops
                                            HdlValueId: csr_addr
                                            HdlValueId: CSR_MASK_MCOUNTER
                                    HdlValueId: CSR_OFF_MCOUNTER
                            HdlStmBlock: SEQ
                                list: body
                                    HdlOp: ASSIGN
                                        list: ops
                                            HdlOp: INDEX
                                                list: ops
                                                    HdlValueId: mhpmcounter_we
                                                    HdlValueId: mhpmcounter_idx
                                            HdlValueInt: 1
                            list: elifs
                                tuple
                                    HdlOp: EQ
                                        list: ops
                                            HdlOp: AND
                                                list: ops
                                                    HdlValueId: csr_addr
                                                    HdlValueId: CSR_MASK_MCOUNTER
                                            HdlValueId: CSR_OFF_MCOUNTERH
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlOp: ASSIGN
                                                list: ops
                                                    HdlOp: INDEX
                                                        list: ops
                                                            HdlValueId: mhpmcounterh_we
                                                            HdlValueId: mhpmcounter_idx
                                                    HdlValueInt: 1
                list: elifs
    HdlStmCaseUniqConstrain: UNIQUE

UPD HdlStmIf@@ to 
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlStmIf
                HdlOp: EQ
                    list: ops
                        HdlOp: AND
                            list: ops
                                HdlValueId: csr_addr
                                HdlValueId: CSR_MASK_MCOUNTER
                        HdlValueId: CSR_OFF_MCOUNTER
                HdlStmBlock: SEQ
                    list: body
                        HdlOp: ASSIGN
                            list: ops
                                HdlOp: INDEX
                                    list: ops
                                        HdlValueId: mhpmcounter_we
                                        HdlValueId: mhpmcounter_idx
                                HdlValueInt: 1
                list: elifs
                    tuple
                        HdlOp: EQ
                            list: ops
                                HdlOp: AND
                                    list: ops
                                        HdlValueId: csr_addr
                                        HdlValueId: CSR_MASK_MCOUNTER
                                HdlValueId: CSR_OFF_MCOUNTERH
                        HdlStmBlock: SEQ
                            list: body
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: mhpmcounterh_we
                                                HdlValueId: mhpmcounter_idx
                                        HdlValueInt: 1
    DEL HdlOp@@EQ from 
    HdlOp: EQ
        list: ops
            HdlValueId: csr_we_int
            HdlValueInt: 1
    DEL list@@elifs from 

UPD HdlStmCase@@csr_addr_i to csr_addr_i
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlOp@@MAP_ASSOCIATION to 
            HdlOp: MAP_ASSOCIATION
                list: ops
                    HdlValueId: mprv
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: csr_wdata_int
                            HdlValueId: CSR_MSTATUS_MPRV_BIT
            INS HdlOp@@MAP_ASSOCIATION to 
            HdlOp: MAP_ASSOCIATION
                list: ops
                    HdlValueId: tw
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: csr_wdata_int
                            HdlValueId: CSR_MSTATUS_TW_BIT
            UPD HdlOp@@MAP_ASSOCIATION to MAP_ASSOCIATION
                INS HdlOp@@CALL to ops
                UPD HdlOp@@CALL to CALL
                    INS list@@ops to CALL
                    INS HdlOp@@INDEX to ops
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: csr_wdata_int
                            HdlOp: DOWNTO
                                list: ops
                                    HdlValueId: CSR_MSTATUS_MPP_BIT_HIGH
                                    HdlValueId: CSR_MSTATUS_MPP_BIT_LOW

UPD HdlStmCase@@csr_addr_i to csr_addr_i
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from csr_addr_i

DEL HdlStmIf@@ from body


CommitId: 17e9624c452e05f71f4ad2b7c75bf6bbb071c324
Update lowrisc_ibex to lowRISC/ibex@ee1098f
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_cs_registers.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_cs_registers.sv
@@ -509,15 +495,16 @@ module ibex_cs_registers #(
         if (debug_csr_save_i) begin
           // all interrupts are masked
           // do not update cause, epc, tval, epc and status
-          dcsr_d.prv   = PRIV_LVL_M;
+          dcsr_d.prv   = priv_lvl_q;
           dcsr_d.cause = debug_cause_i;
           depc_d       = exception_pc;
         end else begin
+          priv_lvl_d     = PRIV_LVL_M;
           mtval_d        = csr_mtval_i;
           mstatus_d.mie  = 1'b0; // disable interrupts
           // save current status
           mstatus_d.mpie = mstatus_q.mie;
-          mstatus_d.mpp  = PRIV_LVL_M;
+          mstatus_d.mpp  = priv_lvl_q;
           mepc_d         = exception_pc;
           mcause_d       = {csr_mcause_i};
           // save previous status for recoverable NMI

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: priv_lvl_d
                HdlValueId: priv_lvl_q

UPD HdlStmIf@@ to 
    INS HdlValueId@@csr_we_int to 
    INS HdlStmBlock@@SEQ to 
    INS list@@elifs to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmCase@@{'__class__': 'HdlValueInt', 'base': 2, 'bits': 1, 'val': '1'}  to {'__class__': 'HdlValueInt', 'base': 2, 'bits': 1, 'val': '1'} 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: priv_lvl_d
                HdlOp: DOT
                    list: ops
                        HdlValueId: mstatus_q
                        HdlValueId: mpp
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: mstack_d
                HdlValueInt: 1
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: mstack_d
                HdlValueId: PRIV_LVL_U

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: priv_lvl_d
                HdlValueId: PRIV_LVL_M
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: mstatus_d
                HdlValueId: priv_lvl_q

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@PRIV_LVL_M to priv_lvl_q
    UPD HdlStmBlock@@SEQ to SEQ
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: mstatus_d
                HdlValueId: PRIV_LVL_M

UPD HdlStmCase@@csr_addr_i to csr_addr_i
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlOp@@MAP_ASSOCIATION to 
            HdlOp: MAP_ASSOCIATION
                list: ops
                    HdlValueId: mprv
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: csr_wdata_int
                            HdlValueId: CSR_MSTATUS_MPRV_BIT
            INS HdlOp@@MAP_ASSOCIATION to 
            HdlOp: MAP_ASSOCIATION
                list: ops
                    HdlValueId: tw
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: csr_wdata_int
                            HdlValueId: CSR_MSTATUS_TW_BIT
            UPD HdlOp@@MAP_ASSOCIATION to MAP_ASSOCIATION
                INS HdlOp@@CALL to ops
                UPD HdlOp@@CALL to CALL
                    INS list@@ops to CALL
                    INS HdlOp@@INDEX to ops
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: csr_wdata_int
                            HdlOp: DOWNTO
                                list: ops
                                    HdlValueId: CSR_MSTATUS_MPP_BIT_HIGH
                                    HdlValueId: CSR_MSTATUS_MPP_BIT_LOW


CommitId: 17e9624c452e05f71f4ad2b7c75bf6bbb071c324
Update lowrisc_ibex to lowRISC/ibex@ee1098f
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_cs_registers.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_cs_registers.sv
@@ -529,12 +516,15 @@ module ibex_cs_registers #(
       end // csr_save_cause_i
 
       csr_restore_mret_i: begin // MRET
+        priv_lvl_d     = mstatus_q.mpp;
         mstatus_d.mie  = mstatus_q.mpie; // re-enable interrupts
         // restore previous status for recoverable NMI
         mstatus_d.mpie = mstack_q.mpie;
         mstatus_d.mpp  = mstack_q.mpp;
         mepc_d         = mstack_epc_q;
         mcause_d       = mstack_cause_q;
+        mstack_d.mpie  = 1'b1;
+        mstack_d.mpp   = PRIV_LVL_U;
       end // csr_restore_mret_i
 
       default:;

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: priv_lvl_d
                HdlValueId: priv_lvl_q

UPD HdlStmCase@@{'__class__': 'HdlValueInt', 'base': 2, 'bits': 1, 'val': '1'}  to {'__class__': 'HdlValueInt', 'base': 2, 'bits': 1, 'val': '1'} 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: priv_lvl_d
                HdlOp: DOT
                    list: ops
                        HdlValueId: mstatus_q
                        HdlValueId: mpp
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: mstack_d
                HdlValueInt: 1
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: mstack_d
                HdlValueId: PRIV_LVL_U

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: priv_lvl_d
                HdlValueId: PRIV_LVL_M
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: mstatus_d
                HdlValueId: priv_lvl_q


CommitId: 17e9624c452e05f71f4ad2b7c75bf6bbb071c324
Update lowrisc_ibex to lowRISC/ibex@ee1098f
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_cs_registers.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_cs_registers.sv
@@ -576,6 +566,7 @@ module ibex_cs_registers #(
   assign csr_mtvec_o = mtvec_q;
 
   assign csr_mstatus_mie_o   = mstatus_q.mie;
+  assign csr_mstatus_tw_o    = mstatus_q.tw;
   assign debug_single_step_o = dcsr_q.step;
   assign debug_ebreakm_o     = dcsr_q.ebreakm;
 

ParseResult:
INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: DOT
        list: ops
            HdlValueId: mstatus_q
            HdlValueId: tw
    HdlValueId: csr_mstatus_tw_o


CommitId: 17e9624c452e05f71f4ad2b7c75bf6bbb071c324
Update lowrisc_ibex to lowRISC/ibex@ee1098f
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_cs_registers.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_cs_registers.sv
@@ -584,10 +575,13 @@ module ibex_cs_registers #(
   // actual registers
   always_ff @(posedge clk_i or negedge rst_ni) begin
     if (!rst_ni) begin
+      priv_lvl_q     <= PRIV_LVL_M;
       mstatus_q      <= '{
           mie:  1'b0,
-          mpie: 1'b0,
-          mpp:  PRIV_LVL_M
+          mpie: 1'b1,
+          mpp:  PRIV_LVL_U,
+          mprv: 1'b0,
+          tw:   1'b0
       };
       mie_q          <= '0;
       mscratch_q     <= '0;

ParseResult:
INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueId: PRIV_LVL_M
    HdlValueId: priv_lvl_q

UPD HdlStmAssign@@ to 
    UPD HdlOp@@MAP_ASSOCIATION to MAP_ASSOCIATION
        UPD HdlValueInt@@0 to 1
    UPD HdlOp@@MAP_ASSOCIATION to MAP_ASSOCIATION
        UPD HdlValueId@@PRIV_LVL_M to PRIV_LVL_U


CommitId: 17e9624c452e05f71f4ad2b7c75bf6bbb071c324
Update lowrisc_ibex to lowRISC/ibex@ee1098f
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_cs_registers.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_cs_registers.sv
@@ -606,15 +600,15 @@ module ibex_cs_registers #(
       dscratch1_q    <= '0;
 
       mstack_q       <= '{
-          mie:  1'b0,
-          mpie: 1'b0,
-          mpp:  PRIV_LVL_M
+          mpie: 1'b1,
+          mpp:  PRIV_LVL_U
       };
       mstack_epc_q   <= '0;
       mstack_cause_q <= '0;
 
     end else begin
       // update CSRs
+      priv_lvl_q     <= priv_lvl_d;
       mstatus_q      <= mstatus_d;
       mie_q          <= mie_d;
       mscratch_q     <= mscratch_d;

ParseResult:
INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueId: priv_lvl_d
    HdlValueId: priv_lvl_q

UPD HdlStmAssign@@ to 
    INS HdlOp@@MAP_ASSOCIATION to src
    HdlOp: MAP_ASSOCIATION
        list: ops
            HdlValueId: mprv
            HdlValueInt: 0
    INS HdlOp@@MAP_ASSOCIATION to src
    HdlOp: MAP_ASSOCIATION
        list: ops
            HdlValueId: tw
            HdlValueInt: 0

UPD HdlStmAssign@@ to 
    UPD HdlOp@@MAP_ASSOCIATION to MAP_ASSOCIATION
        UPD HdlValueInt@@0 to 1
    UPD HdlOp@@MAP_ASSOCIATION to MAP_ASSOCIATION
        UPD HdlValueId@@PRIV_LVL_M to PRIV_LVL_U
    DEL HdlOp@@MAP_ASSOCIATION from src
    HdlOp: MAP_ASSOCIATION
        list: ops
            HdlValueId: mie
            HdlValueInt: 0


CommitId: 17e9624c452e05f71f4ad2b7c75bf6bbb071c324
Update lowrisc_ibex to lowRISC/ibex@ee1098f
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_cs_registers.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_cs_registers.sv
@@ -634,7 +628,12 @@ module ibex_cs_registers #(
     end
   end
 
-  assign priv_mode_o = mstatus_q.mpp;
+  // Send current priv level to the decoder
+  assign priv_mode_id_o = priv_lvl_q;
+  // New instruction fetches need to account for updates to priv_lvl_q this cycle
+  assign priv_mode_if_o = priv_lvl_d;
+  // Load/store instructions must factor in MPRV for PMP checking
+  assign priv_mode_lsu_o = mstatus_q.mprv ? mstatus_q.mpp : priv_lvl_q;
 
   // -----------------
   // PMP registers
ParseResult:
INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlValueId: priv_lvl_q
    HdlValueId: priv_mode_id_o

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlValueId: priv_lvl_d
    HdlValueId: priv_mode_if_o

INS HdlStmAssign@@ to objs

UPD HdlStmAssign@@ to 
    MOV HdlOp@@DOT to 
    HdlOp: DOT
        list: ops
            HdlValueId: mstatus_q
            HdlValueId: mpp
    DEL HdlValueId@@priv_mode_o from 

DEL HdlStmAssign@@ from objs


CommitId: ebe4e36b2ff115d5ec3223cc73499718c23ccd41
[usbdev] Fixes for pin config sims to pass
--- a/hw/ip/usbdev/rtl/usbdev_linkstate.sv
+++ b/hw/ip/usbdev/rtl/usbdev_linkstate.sv
@@ -12,6 +12,7 @@ module usbdev_linkstate (
   input  logic usb_sense_i,
   input  logic usb_dp_i,
   input  logic usb_dn_i,
+  input  logic usb_oe_i,
   input  logic rx_jjj_det_i,
   input  logic sof_valid_i,
   output logic link_disconnect_o,  // level

ParseResult:
INS HdlIdDef@@usb_oe_i to ports
HdlIdDef: usb_oe_i
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: IN


CommitId: ebe4e36b2ff115d5ec3223cc73499718c23ccd41
[usbdev] Fixes for pin config sims to pass
--- a/hw/ip/usbdev/rtl/usbdev_linkstate.sv
+++ b/hw/ip/usbdev/rtl/usbdev_linkstate.sv
@@ -81,8 +82,11 @@ module usbdev_linkstate (
   // Link state is stable, so we can output it to the register
   assign link_state_o      =  link_state_q;
 
+  // If the PHY reflects the line state on rx pins when the device is driving
+  // then the usb_oe_i check isn't needed here. But it seems best to do the check
+  // to be robust in the face of different PHY designs.
   logic see_se0, line_se0_raw;
-  assign line_se0_raw = (usb_dn_i == 1'b0) & (usb_dp_i == 1'b0);
+  assign line_se0_raw = (usb_dn_i == 1'b0) & (usb_dp_i == 1'b0) & (usb_oe_i == 1'b0);
 
   // four ticks is a bit time
   // Could completely filter out 2-cycle EOP SE0 here but
ParseResult:
UPD HdlStmAssign@@ to 
    MOV HdlOp@@AND to 
    HdlOp: AND
        list: ops
            HdlOp: EQ
                list: ops
                    HdlValueId: usb_dn_i
                    HdlValueInt: 0
            HdlOp: EQ
                list: ops
                    HdlValueId: usb_dp_i
                    HdlValueInt: 0


CommitId: e7173ccb1ecc366589261f7b10a16686e5d38ece
[pwm] Fix an asynchronous reset issue in pwm_chan
--- a/hw/ip/pwm/rtl/pwm_chan.sv
+++ b/hw/ip/pwm/rtl/pwm_chan.sv
@@ -40,10 +40,14 @@ module pwm_chan (
                        ? 16'h0 : (cycle_end_i) ? blink_ctr_q + 16'h1 : blink_ctr_q;
 
   always_ff @(posedge clk_i or negedge rst_ni) begin
-    if (!rst_ni || clr_blink_cntr_i) begin
+    if (!rst_ni) begin
       blink_ctr_q <= 16'h0;
     end else begin
-      blink_ctr_q <= (blink_en_i && !htbt_en_i) ? blink_ctr_d : blink_ctr_q;
+      if (clr_blink_cntr_i) begin
+        blink_ctr_q <= 16'h0;
+      end else begin
+        blink_ctr_q <= (blink_en_i && !htbt_en_i) ? blink_ctr_d : blink_ctr_q;
+      end
     end
   end
 

ParseResult:
UPD HdlStmProcess@@ to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

INS HdlStmIf@@ to body

UPD HdlStmIf@@ to 
    UPD HdlOp@@OR_LOG to OR_LOG
        MOV HdlOp@@NEG_LOG to ops
        HdlOp: NEG_LOG
            list: ops
                HdlValueId: rst_ni
        MOV HdlValueId@@clr_blink_cntr_i to ops
        HdlValueId: clr_blink_cntr_i
        DEL list@@ops from OR_LOG
    DEL HdlOp@@OR_LOG from 

UPD HdlStmIf@@ to 
    INS HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: blink_ctr_q
    INS list@@elifs to 

UPD HdlStmProcess@@ to 
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlStmIf
                HdlOp: OR_LOG
                    list: ops
                        HdlOp: NEG_LOG
                            list: ops
                                HdlValueId: rst_ni
                        HdlValueId: clr_blink_cntr_i
                HdlStmBlock: SEQ
                    list: body
                        HdlStmAssign
                            HdlValueInt: 0
                            HdlValueId: blink_ctr_q
                list: elifs
                HdlStmBlock: SEQ
                    list: body
                        HdlStmAssign
                            HdlOp: TERNARY
                                list: ops
                                    HdlOp: AND_LOG
                                        list: ops
                                            HdlValueId: blink_en_i
                                            HdlOp: NEG_LOG
                                                list: ops
                                                    HdlValueId: htbt_en_i
                                    HdlValueId: blink_ctr_d
                                    HdlValueId: blink_ctr_q
                            HdlValueId: blink_ctr_q


CommitId: e7173ccb1ecc366589261f7b10a16686e5d38ece
[pwm] Fix an asynchronous reset issue in pwm_chan
--- a/hw/ip/pwm/rtl/pwm_chan.sv
+++ b/hw/ip/pwm/rtl/pwm_chan.sv
@@ -63,10 +67,14 @@ module pwm_chan (
                       (cycle_end_i) ? htbt_ctr_q + 16'h1 : htbt_ctr_q;
 
   always_ff @(posedge clk_i or negedge rst_ni) begin
-    if (!rst_ni || clr_blink_cntr_i) begin
+    if (!rst_ni) begin
       htbt_ctr_q <= 16'h0;
     end else begin
-      htbt_ctr_q <= (blink_en_i && htbt_en_i) ? htbt_ctr_d : htbt_ctr_q;
+      if (clr_blink_cntr_i) begin
+        htbt_ctr_q <= 16'h0;
+      end else begin
+        htbt_ctr_q <= (blink_en_i && htbt_en_i) ? htbt_ctr_d : htbt_ctr_q;
+      end
     end
   end
   assign dc_htbt_end = cycle_end_i & (htbt_ctr_q == blink_param_x_i);
ParseResult:
UPD HdlStmProcess@@ to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

INS HdlStmIf@@ to body

UPD HdlStmIf@@ to 
    UPD HdlOp@@OR_LOG to OR_LOG
        MOV HdlOp@@NEG_LOG to ops
        HdlOp: NEG_LOG
            list: ops
                HdlValueId: rst_ni
        MOV HdlValueId@@clr_blink_cntr_i to ops
        HdlValueId: clr_blink_cntr_i
        DEL list@@ops from OR_LOG
    DEL HdlOp@@OR_LOG from 

UPD HdlStmIf@@ to 
    INS HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: htbt_ctr_q
    INS list@@elifs to 

UPD HdlStmProcess@@ to 
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlStmIf
                HdlOp: OR_LOG
                    list: ops
                        HdlOp: NEG_LOG
                            list: ops
                                HdlValueId: rst_ni
                        HdlValueId: clr_blink_cntr_i
                HdlStmBlock: SEQ
                    list: body
                        HdlStmAssign
                            HdlValueInt: 0
                            HdlValueId: htbt_ctr_q
                list: elifs
                HdlStmBlock: SEQ
                    list: body
                        HdlStmAssign
                            HdlOp: TERNARY
                                list: ops
                                    HdlOp: AND_LOG
                                        list: ops
                                            HdlValueId: blink_en_i
                                            HdlValueId: htbt_en_i
                                    HdlValueId: htbt_ctr_d
                                    HdlValueId: htbt_ctr_q
                            HdlValueId: htbt_ctr_q


CommitId: 2de46f6dd9a3db8d3425364c0b834d63d0b7a3b6
[entropy_src/rtl] fixes to address issue #3511
--- a/hw/ip/entropy_src/rtl/entropy_src_repcnt_ht.sv
+++ b/hw/ip/entropy_src/rtl/entropy_src_repcnt_ht.sv
@@ -6,11 +6,11 @@
 //
 
 module entropy_src_repcnt_ht #(
-  parameter int unsigned RegWidth = 16,
-  parameter int unsigned RngBusWidth = 4
+  parameter int RegWidth = 16,
+  parameter int RngBusWidth = 4
 ) (
-  input                  clk_i,
-  input                  rst_ni,
+  input logic clk_i,
+  input logic rst_ni,
 
    // ins req interface
   input logic [RngBusWidth-1:0] entropy_bit_i,

ParseResult:
UPD HdlIdDef@@RegWidth to RegWidth
    UPD HdlOp@@PARAMETRIZATION to PARAMETRIZATION
        MOV HdlValueId@@int to ops
        HdlValueId: int
        DEL HdlOp@@MAP_ASSOCIATION from ops
        HdlOp: MAP_ASSOCIATION
            list: ops
                HdlValueId: signed
        DEL list@@ops from PARAMETRIZATION
    DEL HdlOp@@PARAMETRIZATION from RegWidth

UPD HdlIdDef@@RngBusWidth to RngBusWidth
    UPD HdlOp@@PARAMETRIZATION to PARAMETRIZATION
        MOV HdlValueId@@int to ops
        HdlValueId: int
        DEL HdlOp@@MAP_ASSOCIATION from ops
        HdlOp: MAP_ASSOCIATION
            list: ops
                HdlValueId: signed
        DEL list@@ops from PARAMETRIZATION
    DEL HdlOp@@PARAMETRIZATION from RngBusWidth

UPD HdlIdDef@@clk_i to clk_i
    DEL HdlValueId@@wire from clk_i

DEL HdlIdDef@@rst_ni from ports
HdlIdDef: rst_ni
    HdlValueId: wire
    HdlDirection: IN


CommitId: 2de46f6dd9a3db8d3425364c0b834d63d0b7a3b6
[entropy_src/rtl] fixes to address issue #3511
--- a/hw/ip/entropy_src/rtl/entropy_src_repcnt_ht.sv
+++ b/hw/ip/entropy_src/rtl/entropy_src_repcnt_ht.sv
@@ -18,14 +18,11 @@ module entropy_src_repcnt_ht #(
   input logic                   clear_i,
   input logic                   active_i,
   input logic [RegWidth-1:0]    thresh_i,
-  input logic [RegWidth-1:0]    window_i,
   output logic [RegWidth-1:0]   test_cnt_o,
-  output logic                  test_done_pulse_o,
   output logic                  test_fail_pulse_o
 );
 
   // signals
-  logic                  window_cntr_wrap;
   logic [RngBusWidth-1:0] samples_match_pulse;
   logic [RngBusWidth-1:0] samples_no_match_pulse;
   logic [RngBusWidth-1:0] rep_cnt_fail;

ParseResult:
MOV HdlIdDef@@test_done_pulse_o to ports
HdlIdDef: test_done_pulse_o
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: OUT

UPD HdlIdDef@@test_done_pulse_o to rst_ni

UPD HdlIdDef@@window_cntr_wrap to window_cntr_wrap
    MOV HdlOp@@PARAMETRIZATION to window_cntr_wrap
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    DEL HdlDirection@@INTERNAL from window_cntr_wrap

UPD HdlIdDef@@test_done_pulse_o to test_done_pulse_o
    UPD HdlDirection@@OUT to IN

DEL HdlIdDef@@window_i from ports
HdlIdDef: window_i
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlOp: SUB
                        list: ops
                            HdlValueId: RegWidth
                            HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: IN

DEL HdlIdDef@@window_cntr_wrap from objs


CommitId: 2de46f6dd9a3db8d3425364c0b834d63d0b7a3b6
[entropy_src/rtl] fixes to address issue #3511
--- a/hw/ip/entropy_src/rtl/entropy_src_repcnt_ht.sv
+++ b/hw/ip/entropy_src/rtl/entropy_src_repcnt_ht.sv
@@ -33,19 +30,16 @@ module entropy_src_repcnt_ht #(
   // flops
   logic [RngBusWidth-1:0] prev_sample_q, prev_sample_d;
   logic [RegWidth-1:0]  rep_cntr_q[RngBusWidth], rep_cntr_d[RngBusWidth];
-  logic [RegWidth-1:0]  window_cntr_q, window_cntr_d;
   logic [RegWidth-1:0]  test_cnt_q, test_cnt_d;
 
   always_ff @(posedge clk_i or negedge rst_ni)
     if (!rst_ni) begin
       prev_sample_q    <= '0;
       rep_cntr_q       <= '{default:0};
-      window_cntr_q    <= '0;
       test_cnt_q       <= '0;
     end else begin
       prev_sample_q    <= prev_sample_d;
       rep_cntr_q       <= rep_cntr_d;
-      window_cntr_q    <= window_cntr_d;
       test_cnt_q       <= test_cnt_d;
     end
 

ParseResult:
DEL HdlIdDef@@window_cntr_q from objs
HdlIdDef: window_cntr_q
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlOp: SUB
                        list: ops
                            HdlValueId: RegWidth
                            HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: INTERNAL

DEL HdlIdDef@@window_cntr_d from objs
HdlIdDef: window_cntr_d
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlOp: SUB
                        list: ops
                            HdlValueId: RegWidth
                            HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: INTERNAL

DEL HdlStmAssign@@ from body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: window_cntr_q

DEL HdlStmAssign@@ from body
HdlStmAssign
    HdlValueId: window_cntr_d
    HdlValueId: window_cntr_q


CommitId: 2de46f6dd9a3db8d3425364c0b834d63d0b7a3b6
[entropy_src/rtl] fixes to address issue #3511
--- a/hw/ip/entropy_src/rtl/entropy_src_repcnt_ht.sv
+++ b/hw/ip/entropy_src/rtl/entropy_src_repcnt_ht.sv
@@ -61,7 +55,6 @@ module entropy_src_repcnt_ht #(
 
     // NIST A sample
     assign prev_sample_d[sh] = (!active_i || clear_i) ? '0 :
-                               window_cntr_wrap ? '0  :
                                entropy_bit_vld_i ? entropy_bit_i[sh] :
                                prev_sample_q[sh];
 

ParseResult:
UPD HdlStmAssign@@ to 
    UPD HdlOp@@TERNARY to TERNARY
        MOV HdlOp@@TERNARY to ops
        HdlOp: TERNARY
            list: ops
                HdlValueId: window_cntr_wrap
                HdlValueInt: 0
                HdlOp: TERNARY
                    list: ops
                        HdlValueId: entropy_bit_vld_i
                        HdlOp: INDEX
                            list: ops
                                HdlValueId: entropy_bit_i
                                HdlValueId: sh
                        HdlOp: INDEX
                            list: ops
                                HdlValueId: prev_sample_q
                                HdlValueId: sh
        MOV HdlOp@@OR_LOG to ops
        HdlOp: OR_LOG
            list: ops
                HdlOp: NEG_LOG
                    list: ops
                        HdlValueId: active_i
                HdlValueId: clear_i
        UPD HdlOp@@TERNARY to TERNARY
            DEL HdlValueId@@window_cntr_wrap from ops
        DEL HdlValueInt@@0 from ops
        DEL list@@ops from TERNARY
    DEL HdlOp@@TERNARY from 


CommitId: 2de46f6dd9a3db8d3425364c0b834d63d0b7a3b6
[entropy_src/rtl] fixes to address issue #3511
--- a/hw/ip/entropy_src/rtl/entropy_src_repcnt_ht.sv
+++ b/hw/ip/entropy_src/rtl/entropy_src_repcnt_ht.sv
@@ -73,7 +66,6 @@ module entropy_src_repcnt_ht #(
     // NIST B counter
     assign rep_cntr_d[sh] =
            (!active_i || clear_i) ? '0 :
-           window_cntr_wrap ? '0  :
            samples_match_pulse[sh] ? (rep_cntr_q[sh]+1) :
            samples_no_match_pulse[sh] ?  '0 :
            rep_cntr_q[sh];

ParseResult:
UPD HdlStmAssign@@ to 
    UPD HdlOp@@TERNARY to TERNARY
        MOV HdlOp@@TERNARY to ops
        HdlOp: TERNARY
            list: ops
                HdlValueId: window_cntr_wrap
                HdlValueInt: 0
                HdlOp: TERNARY
                    list: ops
                        HdlOp: INDEX
                            list: ops
                                HdlValueId: samples_match_pulse
                                HdlValueId: sh
                        HdlOp: ADD
                            list: ops
                                HdlOp: INDEX
                                    list: ops
                                        HdlValueId: rep_cntr_q
                                        HdlValueId: sh
                                HdlValueInt: 1
                        HdlOp: TERNARY
                            list: ops
                                HdlOp: INDEX
                                    list: ops
                                        HdlValueId: samples_no_match_pulse
                                        HdlValueId: sh
                                HdlValueInt: 0
                                HdlOp: INDEX
                                    list: ops
                                        HdlValueId: rep_cntr_q
                                        HdlValueId: sh
        MOV HdlOp@@OR_LOG to ops
        HdlOp: OR_LOG
            list: ops
                HdlOp: NEG_LOG
                    list: ops
                        HdlValueId: active_i
                HdlValueId: clear_i
        UPD HdlOp@@TERNARY to TERNARY
            DEL HdlValueId@@window_cntr_wrap from ops
        DEL HdlValueInt@@0 from ops
        DEL list@@ops from TERNARY
    DEL HdlOp@@TERNARY from 


CommitId: 2de46f6dd9a3db8d3425364c0b834d63d0b7a3b6
[entropy_src/rtl] fixes to address issue #3511
--- a/hw/ip/entropy_src/rtl/entropy_src_repcnt_ht.sv
+++ b/hw/ip/entropy_src/rtl/entropy_src_repcnt_ht.sv
@@ -83,26 +75,14 @@ module entropy_src_repcnt_ht #(
   end : gen_cntrs
 
 
-  // Window wrap condition
-  assign window_cntr_wrap = (window_cntr_q == window_i);
-
-  // Window counter
-  assign window_cntr_d =
-         clear_i ? '0 :
-         window_cntr_wrap ? '0  :
-         entropy_bit_vld_i ? (window_cntr_q+1) :
-         window_cntr_q;
-
   // Test event counter
   assign test_cnt_d =
          (!active_i || clear_i) ? '0 :
-         window_cntr_wrap ? '0 :
          entropy_bit_vld_i && (|rep_cnt_fail) ? (test_cnt_q+1) :
          test_cnt_q;
 
   // the pulses will be only one clock in length
-  assign test_fail_pulse_o = active_i && window_cntr_wrap && (test_cnt_q > '0);
-  assign test_done_pulse_o = window_cntr_wrap;
+  assign test_fail_pulse_o = active_i && (test_cnt_q > '0);
   assign test_cnt_o = test_cnt_q;
 
 
ParseResult:
UPD HdlStmAssign@@ to 
    UPD HdlOp@@TERNARY to TERNARY
        MOV HdlOp@@TERNARY to ops
        HdlOp: TERNARY
            list: ops
                HdlValueId: window_cntr_wrap
                HdlValueInt: 0
                HdlOp: TERNARY
                    list: ops
                        HdlOp: AND_LOG
                            list: ops
                                HdlValueId: entropy_bit_vld_i
                                HdlOp: OR_UNARY
                                    list: ops
                                        HdlValueId: rep_cnt_fail
                        HdlOp: ADD
                            list: ops
                                HdlValueId: test_cnt_q
                                HdlValueInt: 1
                        HdlValueId: test_cnt_q
        MOV HdlOp@@OR_LOG to ops
        HdlOp: OR_LOG
            list: ops
                HdlOp: NEG_LOG
                    list: ops
                        HdlValueId: active_i
                HdlValueId: clear_i
        UPD HdlOp@@TERNARY to TERNARY
            DEL HdlValueId@@window_cntr_wrap from ops
        DEL HdlValueInt@@0 from ops
        DEL list@@ops from TERNARY
    DEL HdlOp@@TERNARY from 

UPD HdlStmAssign@@ to 
    UPD HdlOp@@AND_LOG to AND_LOG
        UPD HdlOp@@AND_LOG to AND_LOG
            MOV HdlValueId@@active_i to ops
            HdlValueId: active_i
            DEL HdlValueId@@window_cntr_wrap from ops
            DEL list@@ops from AND_LOG
        DEL HdlOp@@AND_LOG from ops

DEL HdlStmAssign@@ from objs
HdlStmAssign
    HdlOp: EQ
        list: ops
            HdlValueId: window_cntr_q
            HdlValueId: window_i
    HdlValueId: window_cntr_wrap

DEL HdlStmAssign@@ from objs
HdlStmAssign
    HdlOp: TERNARY
        list: ops
            HdlValueId: clear_i
            HdlValueInt: 0
            HdlOp: TERNARY
                list: ops
                    HdlValueId: window_cntr_wrap
                    HdlValueInt: 0
                    HdlOp: TERNARY
                        list: ops
                            HdlValueId: entropy_bit_vld_i
                            HdlOp: ADD
                                list: ops
                                    HdlValueId: window_cntr_q
                                    HdlValueInt: 1
                            HdlValueId: window_cntr_q
    HdlValueId: window_cntr_d

DEL HdlStmAssign@@ from objs
HdlStmAssign
    HdlValueId: window_cntr_wrap
    HdlValueId: test_done_pulse_o


CommitId: 2832f448084a782a9cbf394419fa49311b43bfdd
[rom_ctrl] Fix lint error due to always process
--- a/hw/ip/rom_ctrl/rtl/rom_ctrl_mux.sv
+++ b/hw/ip/rom_ctrl/rtl/rom_ctrl_mux.sv
@@ -40,7 +40,7 @@ module rom_ctrl_mux #(
   // TODO: sel_q will definitely need to be multi-bit for glitch resistance. We'll probably also
   // have to chase the "signal bit signals" back a bit further through the logic too.
   logic sel_q;
-  always @(posedge clk_i or negedge rst_ni) begin
+  always_ff @(posedge clk_i or negedge rst_ni) begin
     if (!rst_ni) begin
       sel_q <= 1'b1;
     end else begin
ParseResult:
UPD HdlIdDef@@sel_q to sel_q
    INS HdlOp@@PARAMETRIZATION to sel_q
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic

UPD HdlStmProcess@@ to 
    INS HdlStmProcessTriggerConstrain@@FF to 


CommitId: d65d139663d32e8b509e5aa5af2b848daab74a6b
[csrng/rtl] added fatal alert
--- a/hw/ip/csrng/rtl/csrng_main_sm.sv
+++ b/hw/ip/csrng/rtl/csrng_main_sm.sv
@@ -83,6 +90,7 @@ module csrng_main_sm import csrng_pkg::*; (
     generate_req_o = 1'b0;
     update_req_o = 1'b0;
     uninstant_req_o = 1'b0;
+    main_sm_err_o = 1'b0;
     unique case (state_q)
       Idle: begin
         if (ctr_drbg_cmd_req_rdy_i) begin

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: main_sm_err_o
                HdlValueInt: 0

UPD HdlStmCase@@state_q to state_q
    UPD HdlOp@@ASSIGN to ASSIGN
        UPD HdlValueId@@Idle to Error


CommitId: d65d139663d32e8b509e5aa5af2b848daab74a6b
[csrng/rtl] added fatal alert
--- a/hw/ip/csrng/rtl/csrng_main_sm.sv
+++ b/hw/ip/csrng/rtl/csrng_main_sm.sv
@@ -154,7 +162,10 @@ module csrng_main_sm import csrng_pkg::*; (
         uninstant_req_o = 1'b1;
         state_d = Idle;
       end
-      default: state_d = Idle;
+      Error: begin
+        main_sm_err_o = 1'b1;
+      end
+      default: state_d = Error;
     endcase
   end
 
ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: main_sm_err_o
                HdlValueInt: 0

UPD HdlStmCase@@state_q to state_q
    INS tuple@@ to cases
    tuple
        HdlValueId: Error
        HdlStmBlock: SEQ
            list: body
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: main_sm_err_o
                        HdlValueInt: 1

UPD HdlStmCase@@state_q to state_q
    UPD HdlOp@@ASSIGN to ASSIGN
        UPD HdlValueId@@Idle to Error


CommitId: b5b8eba529a37cec202cd5ec5e2fd05a1e81a75c
[padring/top] Carry over pinout from bronze and align sim and FPGA tops
--- a/hw/top_earlgrey/rtl/top_earlgrey_asic.sv
+++ b/hw/top_earlgrey/rtl/top_earlgrey_asic.sv
@@ -170,9 +343,16 @@ module top_earlgrey_asic (
     .TrstIdx        (                             18 ), // MIO 18
     .SrstIdx        (                             19 ), // MIO 19
     .TdiIdx         ( pinmux_reg_pkg::NMioPads +
-                      top_earlgrey_pkg::TopEarlgreyDioPinSpiDeviceSdi ),
+                      top_earlgrey_pkg::TopEarlgreyDioPinSpiDeviceSd0 ),
     .TdoIdx         ( pinmux_reg_pkg::NMioPads +
-                      top_earlgrey_pkg::TopEarlgreyDioPinSpiDeviceSdo )
+                      top_earlgrey_pkg::TopEarlgreyDioPinSpiDeviceSd1 ),
+    .UsbDpPuIdx     ( pinmux_reg_pkg::NMioPads +
+                      top_earlgrey_pkg::TopEarlgreyDioPinUsbdevDpPullup ),
+    .UsbDnPuIdx     ( pinmux_reg_pkg::NMioPads +
+                      top_earlgrey_pkg::TopEarlgreyDioPinUsbdevDnPullup ),
+    .UsbDIdx        ( pinmux_reg_pkg::NMioPads +
+                      top_earlgrey_pkg::TopEarlgreyDioPinUsbdevD ),
+    .ConnectUSB     (1)
   ) jtag_mux (
     // To JTAG inside core
     .jtag_tck_o   ( jtag_tck        ),

ParseResult:
INS HdlModuleDec@@top_earlgrey_asic to top_earlgrey_asic

UPD HdlModuleDec@@top_earlgrey_asic to top_earlgrey_asic
    INS list@@params to top_earlgrey_asic
    INS list@@ports to top_earlgrey_asic
    INS list@@objs to top_earlgrey_asic

UPD HdlModuleDec@@top_earlgrey_asic to top_earlgrey_asic
    DEL list@@params from top_earlgrey_asic
    DEL list@@ports from top_earlgrey_asic
    DEL list@@objs from top_earlgrey_asic

DEL HdlModuleDec@@top_earlgrey_asic from top_earlgrey_asic


CommitId: b5b8eba529a37cec202cd5ec5e2fd05a1e81a75c
[padring/top] Carry over pinout from bronze and align sim and FPGA tops
--- a/hw/top_earlgrey/rtl/top_earlgrey_asic.sv
+++ b/hw/top_earlgrey/rtl/top_earlgrey_asic.sv
@@ -188,10 +368,13 @@ module top_earlgrey_asic (
     // To padring side
     .out_padring_o ( {dio_out_padring, mio_out_padring} ),
     .oe_padring_o  ( {dio_oe_padring , mio_oe_padring } ),
-    .in_padring_i  ( {dio_in_padring , mio_in_padring } )
+    .in_padring_i  ( {dio_in_padring , mio_in_padring } ),
+    // USB breakouts
+    .usb_pullup_p_en_o ( usb_pullup_p_en ),
+    .usb_pullup_n_en_o ( usb_pullup_n_en ),
+    .usb_diff_input_i  ( usb_diff_input  )
   );
 
-
   //////////////////////
   // AST              //
   //////////////////////

ParseResult:
INS HdlModuleDec@@top_earlgrey_asic to top_earlgrey_asic

UPD HdlModuleDec@@top_earlgrey_asic to top_earlgrey_asic
    INS list@@params to top_earlgrey_asic
    INS list@@ports to top_earlgrey_asic
    INS list@@objs to top_earlgrey_asic

UPD HdlModuleDec@@top_earlgrey_asic to top_earlgrey_asic
    DEL list@@params from top_earlgrey_asic
    DEL list@@ports from top_earlgrey_asic
    DEL list@@objs from top_earlgrey_asic

DEL HdlModuleDec@@top_earlgrey_asic from top_earlgrey_asic


CommitId: b5b8eba529a37cec202cd5ec5e2fd05a1e81a75c
[padring/top] Carry over pinout from bronze and align sim and FPGA tops
--- a/hw/top_earlgrey/rtl/top_earlgrey_asic.sv
+++ b/hw/top_earlgrey/rtl/top_earlgrey_asic.sv
@@ -335,7 +518,7 @@ module top_earlgrey_asic (
     .clk_src_usb_o         ( ast_base_clks.clk_usb ),
     .clk_src_usb_val_o     ( ast_base_pwr.usb_clk_val ),
     // USB IO Pull-up Calibration Setting
-    .usb_io_pu_cal_o       ( ),
+    .usb_io_pu_cal_o       ( usb_io_pu_cal ),
     // adc
     // TODO: Connect to do adc_ctrl when instantiated
     .adc_pd_i              ( '0 ),

ParseResult:
INS HdlModuleDec@@top_earlgrey_asic to top_earlgrey_asic

UPD HdlModuleDec@@top_earlgrey_asic to top_earlgrey_asic
    INS list@@params to top_earlgrey_asic
    INS list@@ports to top_earlgrey_asic
    INS list@@objs to top_earlgrey_asic

UPD HdlModuleDec@@top_earlgrey_asic to top_earlgrey_asic
    DEL list@@params from top_earlgrey_asic
    DEL list@@ports from top_earlgrey_asic
    DEL list@@objs from top_earlgrey_asic

DEL HdlModuleDec@@top_earlgrey_asic from top_earlgrey_asic


CommitId: b5b8eba529a37cec202cd5ec5e2fd05a1e81a75c
[padring/top] Carry over pinout from bronze and align sim and FPGA tops
--- a/hw/top_earlgrey/rtl/top_earlgrey_asic.sv
+++ b/hw/top_earlgrey/rtl/top_earlgrey_asic.sv
@@ -374,7 +557,7 @@ module top_earlgrey_asic (
     .ot_alert_ack_i        ( ast_alert_rsp.alerts_ack[OtSel]     ),
     .ot_alert_o            ( ast_alert_req.alerts[OtSel]         ),
     // dft
-    .dft_strap_test_i      ( '{valid: 1'b0, straps: 2'b00} ),
+    .dft_strap_test_i      ( '0               ),
     .lc_dft_en_i           ( lc_ctrl_pkg::Off ),
     // pad mux related
     //TODO: Connect to pinmux
ParseResult:
INS HdlModuleDec@@top_earlgrey_asic to top_earlgrey_asic

UPD HdlModuleDec@@top_earlgrey_asic to top_earlgrey_asic
    INS list@@params to top_earlgrey_asic
    INS list@@ports to top_earlgrey_asic
    INS list@@objs to top_earlgrey_asic

UPD HdlModuleDec@@top_earlgrey_asic to top_earlgrey_asic
    DEL list@@params from top_earlgrey_asic
    DEL list@@ports from top_earlgrey_asic
    DEL list@@objs from top_earlgrey_asic

DEL HdlModuleDec@@top_earlgrey_asic from top_earlgrey_asic


CommitId: 488707873168bd72fba44d8de8cd4df45d70e106
[usb] Fix lint errors
--- a/hw/ip/usbuart/rtl/usbuart_usbif.sv
+++ b/hw/ip/usbuart/rtl/usbuart_usbif.sv
@@ -25,7 +25,7 @@ module usbuart_usbif (
   output              rx_err, // Also becomes bit 8 to the fifo
   output [7:0]        rx_fifo_wdata,
   input [7:0]         tx_fifo_rdata,
-  input [5:0]         rx_fifo_wdepth,
+
   // Status
   output logic [10:0] status_frame_o,
   output logic        status_host_lost_o,

ParseResult:
DEL HdlIdDef@@rx_fifo_wdepth from ports
HdlIdDef: rx_fifo_wdepth
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: wire
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 5
                    HdlValueInt: 0
    HdlDirection: IN


CommitId: 502a20f19fb13853332a0f0a7ad4992400b04c1e
[chip_earlgrey_asic/lint] Fix/waive remaining AST-related lint messages
--- a/hw/top_earlgrey/rtl/autogen/chip_earlgrey_asic.sv
+++ b/hw/top_earlgrey/rtl/autogen/chip_earlgrey_asic.sv
@@ -925,13 +925,16 @@ module chip_earlgrey_asic (
   logic unused_slow_clk_en;
   logic unused_usb_clk_aon;
   logic unused_usb_clk_io_div4;
+  logic unused_adc_clk_aon;
   assign unused_slow_clk_en = base_ast_pwr.slow_clk_en;
   assign unused_usb_clk_aon = clks_ast.clk_ast_usbdev_aon_peri;
   assign unused_usb_clk_io_div4 = clks_ast.clk_ast_usbdev_io_div4_peri;
+  assign unused_adc_clk_aon = clks_ast.clk_ast_adc_ctrl_aon_aon_peri;
 
   logic unused_usb_usb_rst;
   logic [PowerDomains-1:0] unused_usb_sys_io_div4_rst;
   logic [PowerDomains-1:0] unused_usb_sys_aon_rst;
+  logic [PowerDomains-1:0] unused_adc_ctrl_sys_aon_rst;
   logic unused_ast_sys_io_div4_rst;
   logic unused_sensor_ctrl_sys_io_div4_rst;
   logic unused_adc_ctrl_sys_io_div4_rst;

ParseResult:
INS HdlIdDef@@unused_adc_clk_aon to objs
HdlIdDef: unused_adc_clk_aon
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: DOT
        list: ops
            HdlValueId: clks_ast
            HdlValueId: clk_ast_adc_ctrl_aon_aon_peri
    HdlValueId: unused_adc_clk_aon

INS HdlIdDef@@unused_adc_ctrl_sys_aon_rst to objs
HdlIdDef: unused_adc_ctrl_sys_aon_rst
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlOp: SUB
                        list: ops
                            HdlValueId: PowerDomains
                            HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: INTERNAL


CommitId: 502a20f19fb13853332a0f0a7ad4992400b04c1e
[chip_earlgrey_asic/lint] Fix/waive remaining AST-related lint messages
--- a/hw/top_earlgrey/rtl/autogen/chip_earlgrey_asic.sv
+++ b/hw/top_earlgrey/rtl/autogen/chip_earlgrey_asic.sv
@@ -940,6 +943,7 @@ module chip_earlgrey_asic (
   assign unused_usb_usb_rst = rsts_ast.rst_ast_usbdev_usb_n[DomainAonSel];
   assign unused_usb_sys_io_div4_rst = rsts_ast.rst_ast_usbdev_sys_io_div4_n;
   assign unused_usb_sys_aon_rst = rsts_ast.rst_ast_usbdev_sys_aon_n;
+  assign unused_adc_ctrl_sys_aon_rst = rsts_ast.rst_ast_adc_ctrl_aon_sys_aon_n;
   assign unused_ast_sys_io_div4_rst =
     rsts_ast.rst_ast_ast_sys_io_div4_n[Domain0Sel];
   assign unused_sensor_ctrl_sys_io_div4_rst =

ParseResult:
INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: DOT
        list: ops
            HdlValueId: rsts_ast
            HdlValueId: rst_ast_adc_ctrl_aon_sys_aon_n
    HdlValueId: unused_adc_ctrl_sys_aon_rst


CommitId: 502a20f19fb13853332a0f0a7ad4992400b04c1e
[chip_earlgrey_asic/lint] Fix/waive remaining AST-related lint messages
--- a/hw/top_earlgrey/rtl/autogen/chip_earlgrey_asic.sv
+++ b/hw/top_earlgrey/rtl/autogen/chip_earlgrey_asic.sv
@@ -949,6 +953,9 @@ module chip_earlgrey_asic (
   assign unused_entropy_sys_rst = rsts_ast.rst_ast_entropy_src_sys_n[DomainAonSel];
   assign unused_edn_sys_rst = rsts_ast.rst_ast_edn0_sys_n[DomainAonSel];
 
+  logic unused_pwr_clamp;
+  assign unused_pwr_clamp = base_ast_pwr.pwr_clamp;
+
   ast_pkg::ast_dif_t flash_alert;
   ast_pkg::ast_dif_t otp_alert;
   logic ast_init_done;
ParseResult:
INS HdlIdDef@@unused_pwr_clamp to objs
HdlIdDef: unused_pwr_clamp
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: DOT
        list: ops
            HdlValueId: base_ast_pwr
            HdlValueId: pwr_clamp
    HdlValueId: unused_pwr_clamp


CommitId: cc9906208bf473721d179122d7bf4e8c0462e66c
[csrng/rtl] fix for csrng smoke test
--- a/hw/ip/csrng/rtl/csrng_core.sv
+++ b/hw/ip/csrng/rtl/csrng_core.sv
@@ -788,7 +788,7 @@ module csrng_core import csrng_pkg::*; #(
          update_req ? entropy_src_hw_if_i.es_bits :
          '0;
 
-  assign cmd_entropy_fips = entropy_src_hw_if_i.es_fips;
+  assign cmd_entropy_fips = (instant_req && !flag0_q) ? entropy_src_hw_if_i.es_fips : 1'b0;
 
   //-------------------------------------
   // csrng_ctr_drbg_cmd instantiation
ParseResult:
INS HdlStmAssign@@ to objs

UPD HdlStmAssign@@ to 
    INS HdlOp@@TERNARY to 
    INS HdlValueId@@cmd_entropy_fips to 
    UPD HdlOp@@TERNARY to TERNARY
        INS list@@ops to TERNARY
        INS HdlOp@@AND_LOG to ops
        HdlOp: AND_LOG
            list: ops
                HdlValueId: instant_req
                HdlOp: NEG_LOG
                    list: ops
                        HdlValueId: flag0_q
        INS HdlValueInt@@0 to ops

UPD HdlStmAssign@@ to 
    MOV HdlOp@@DOT to 
    HdlOp: DOT
        list: ops
            HdlValueId: entropy_src_hw_if_i
            HdlValueId: es_fips
    DEL HdlValueId@@cmd_entropy_fips from 

DEL HdlStmAssign@@ from objs


CommitId: 204d98d1d7d42247de8225cf46f47525f61adf63
[vsg] fix _i/_o for several modules
--- a/hw/ip/prim_generic/rtl/prim_generic_flop_2sync.sv
+++ b/hw/ip/prim_generic/rtl/prim_generic_flop_2sync.sv
@@ -13,8 +13,8 @@ module prim_generic_flop_2sync #(
 ) (
   input                    clk_i,       // receive clock
   input                    rst_ni,
-  input        [Width-1:0] d,
-  output logic [Width-1:0] q
+  input        [Width-1:0] d_i,
+  output logic [Width-1:0] q_o
 );
 
   logic [Width-1:0] intq;

ParseResult:
UPD HdlIdDef@@d to d_i

UPD HdlIdDef@@q to q_o


CommitId: fc7332179ae71a31c6734d5038569b5fdca4d838
Update pulp_riscv_dbg to pulp-platform/riscv-dbg@834853c
--- a/hw/vendor/pulp_riscv_dbg/src/dm_csrs.sv
+++ b/hw/vendor/pulp_riscv_dbg/src/dm_csrs.sv
@@ -88,17 +88,17 @@ module dm_csrs #(
 
   logic [31:0] resp_queue_data;
 
-  localparam dm::dm_csr_e DataEnd = dm::dm_csr_e'((dm::Data0 + {4'b0, dm::DataCount}));
-  localparam dm::dm_csr_e ProgBufEnd = dm::dm_csr_e'((dm::ProgBuf0 + {4'b0, dm::ProgBufSize}));
+  localparam dm::dm_csr_e DataEnd = dm::dm_csr_e'(dm::Data0 + {4'b0, dm::DataCount} - 8'h1);
+  localparam dm::dm_csr_e ProgBufEnd = dm::dm_csr_e'(dm::ProgBuf0 + {4'b0, dm::ProgBufSize} - 8'h1);
 
   logic [31:0] haltsum0, haltsum1, haltsum2, haltsum3;
   logic [((NrHarts-1)/2**5 + 1) * 32 - 1 : 0] halted;
   logic [(NrHarts-1)/2**5:0][31:0] halted_reshaped0;
-  logic [NrHarts/2**10:0][31:0] halted_reshaped1;
-  logic [NrHarts/2**15:0][31:0] halted_reshaped2;
-  logic [(NrHarts/2**10+1)*32-1:0] halted_flat1;
-  logic [(NrHarts/2**15+1)*32-1:0] halted_flat2;
-  logic [32-1:0] halted_flat3;
+  logic [(NrHarts-1)/2**10:0][31:0] halted_reshaped1;
+  logic [(NrHarts-1)/2**15:0][31:0] halted_reshaped2;
+  logic [((NrHarts-1)/2**10+1)*32-1:0] halted_flat1;
+  logic [((NrHarts-1)/2**15+1)*32-1:0] halted_flat2;
+  logic [31:0] halted_flat3;
 
   // haltsum0
   logic [14:0] hartsel_idx0;

ParseResult:
INS HdlIdDef@@halted_flat3 to objs
HdlIdDef: halted_flat3
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 31
                    HdlValueInt: 0
    HdlDirection: INTERNAL

UPD HdlIdDef@@DataEnd to DataEnd
    UPD HdlOp@@CALL to CALL
        INS HdlOp@@SUB to ops
        UPD HdlOp@@SUB to SUB
            INS list@@ops to SUB
            INS HdlValueInt@@1 to ops

UPD HdlIdDef@@ProgBufEnd to ProgBufEnd
    UPD HdlOp@@CALL to CALL
        INS HdlOp@@SUB to ops
        UPD HdlOp@@SUB to SUB
            INS list@@ops to SUB
            INS HdlValueInt@@1 to ops

UPD HdlIdDef@@DataEnd to DataEnd
    UPD HdlOp@@CALL to CALL
        MOV HdlOp@@ADD to ops
        HdlOp: ADD
            list: ops
                HdlOp: DOUBLE_COLON
                    list: ops
                        HdlValueId: dm
                        HdlValueId: Data0
                HdlOp: CONCAT
                    list: ops
                        HdlValueInt: 0
                        HdlOp: DOUBLE_COLON
                            list: ops
                                HdlValueId: dm
                                HdlValueId: DataCount

UPD HdlIdDef@@ProgBufEnd to ProgBufEnd
    UPD HdlOp@@CALL to CALL
        MOV HdlOp@@ADD to ops
        HdlOp: ADD
            list: ops
                HdlOp: DOUBLE_COLON
                    list: ops
                        HdlValueId: dm
                        HdlValueId: ProgBuf0
                HdlOp: CONCAT
                    list: ops
                        HdlValueInt: 0
                        HdlOp: DOUBLE_COLON
                            list: ops
                                HdlValueId: dm
                                HdlValueId: ProgBufSize

UPD HdlIdDef@@halted_reshaped1 to halted_reshaped1
    UPD HdlOp@@INDEX to INDEX
        UPD HdlOp@@PARAMETRIZATION to PARAMETRIZATION
            UPD HdlOp@@DOWNTO to DOWNTO
                UPD HdlOp@@DIV to DIV
                    INS HdlOp@@SUB to ops
                    UPD HdlOp@@SUB to SUB
                        INS list@@ops to SUB
                        INS HdlValueInt@@1 to ops

UPD HdlIdDef@@halted_reshaped2 to halted_reshaped2
    UPD HdlOp@@INDEX to INDEX
        UPD HdlOp@@PARAMETRIZATION to PARAMETRIZATION
            UPD HdlOp@@DOWNTO to DOWNTO
                UPD HdlOp@@DIV to DIV
                    INS HdlOp@@SUB to ops
                    UPD HdlOp@@SUB to SUB
                        INS list@@ops to SUB
                        INS HdlValueInt@@1 to ops

UPD HdlIdDef@@halted_reshaped1 to halted_reshaped1
    UPD HdlOp@@INDEX to INDEX
        UPD HdlOp@@PARAMETRIZATION to PARAMETRIZATION
            UPD HdlOp@@DOWNTO to DOWNTO
                UPD HdlOp@@DIV to DIV
                    MOV HdlValueId@@NrHarts to ops
                    HdlValueId: NrHarts

UPD HdlIdDef@@halted_reshaped2 to halted_reshaped2
    UPD HdlOp@@INDEX to INDEX
        UPD HdlOp@@PARAMETRIZATION to PARAMETRIZATION
            UPD HdlOp@@DOWNTO to DOWNTO
                UPD HdlOp@@DIV to DIV
                    MOV HdlValueId@@NrHarts to ops
                    HdlValueId: NrHarts

UPD HdlIdDef@@halted_flat1 to halted_flat1
    UPD HdlOp@@PARAMETRIZATION to PARAMETRIZATION
        UPD HdlOp@@DOWNTO to DOWNTO
            UPD HdlOp@@SUB to SUB
                UPD HdlOp@@MUL to MUL
                    UPD HdlOp@@ADD to ADD
                        UPD HdlOp@@DIV to DIV
                            INS HdlOp@@SUB to ops
                            UPD HdlOp@@SUB to SUB
                                INS list@@ops to SUB
                                INS HdlValueInt@@1 to ops

UPD HdlIdDef@@halted_flat2 to halted_flat2
    UPD HdlOp@@PARAMETRIZATION to PARAMETRIZATION
        UPD HdlOp@@DOWNTO to DOWNTO
            UPD HdlOp@@SUB to SUB
                UPD HdlOp@@MUL to MUL
                    UPD HdlOp@@ADD to ADD
                        UPD HdlOp@@DIV to DIV
                            INS HdlOp@@SUB to ops
                            UPD HdlOp@@SUB to SUB
                                INS list@@ops to SUB
                                INS HdlValueInt@@1 to ops

UPD HdlIdDef@@halted_flat1 to halted_flat1
    UPD HdlOp@@PARAMETRIZATION to PARAMETRIZATION
        UPD HdlOp@@DOWNTO to DOWNTO
            UPD HdlOp@@SUB to SUB
                UPD HdlOp@@MUL to MUL
                    UPD HdlOp@@ADD to ADD
                        UPD HdlOp@@DIV to DIV
                            MOV HdlValueId@@NrHarts to ops
                            HdlValueId: NrHarts

UPD HdlIdDef@@halted_flat2 to halted_flat2
    UPD HdlOp@@PARAMETRIZATION to PARAMETRIZATION
        UPD HdlOp@@DOWNTO to DOWNTO
            UPD HdlOp@@SUB to SUB
                UPD HdlOp@@MUL to MUL
                    UPD HdlOp@@ADD to ADD
                        UPD HdlOp@@DIV to DIV
                            MOV HdlValueId@@NrHarts to ops
                            HdlValueId: NrHarts

DEL HdlIdDef@@halted_flat3 from objs
HdlIdDef: halted_flat3
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlOp: SUB
                        list: ops
                            HdlValueInt: 32
                            HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: INTERNAL


CommitId: fc7332179ae71a31c6734d5038569b5fdca4d838
Update pulp_riscv_dbg to pulp-platform/riscv-dbg@834853c
--- a/hw/vendor/pulp_riscv_dbg/src/dm_csrs.sv
+++ b/hw/vendor/pulp_riscv_dbg/src/dm_csrs.sv
@@ -120,12 +120,12 @@ module dm_csrs #(
     haltsum1     = '0;
     hartsel_idx1 = hartsel_o[19:10];
 
-    for (int unsigned k = 0; k < NrHarts/2**5+1; k++) begin
+    for (int unsigned k = 0; k < (NrHarts-1)/2**5+1; k++) begin
       halted_flat1[k] = |halted_reshaped0[k];
     end
     halted_reshaped1 = halted_flat1;
 
-    if (hartsel_idx1 < 10'((NrHarts/2**10+1))) begin
+    if (hartsel_idx1 < 10'(((NrHarts-1)/2**10+1))) begin
       haltsum1 = halted_reshaped1[hartsel_idx1];
     end
   end

ParseResult:
UPD HdlStmFor@@ to 
    UPD HdlOp@@LT to LT
        UPD HdlOp@@ADD to ADD
            UPD HdlOp@@DIV to DIV
                INS HdlOp@@SUB to ops
                UPD HdlOp@@SUB to SUB
                    INS list@@ops to SUB
                    INS HdlValueInt@@1 to ops

UPD HdlStmFor@@ to 
    UPD HdlOp@@LT to LT
        UPD HdlOp@@ADD to ADD
            UPD HdlOp@@DIV to DIV
                MOV HdlValueId@@NrHarts to ops
                HdlValueId: NrHarts

UPD HdlStmIf@@ to 
    UPD HdlOp@@LT to LT
        UPD HdlOp@@CALL to CALL
            UPD HdlOp@@ADD to ADD
                UPD HdlOp@@DIV to DIV
                    INS HdlOp@@SUB to ops
                    UPD HdlOp@@SUB to SUB
                        INS list@@ops to SUB
                        INS HdlValueInt@@1 to ops

UPD HdlStmIf@@ to 
    UPD HdlOp@@LT to LT
        UPD HdlOp@@CALL to CALL
            UPD HdlOp@@ADD to ADD
                UPD HdlOp@@DIV to DIV
                    MOV HdlValueId@@NrHarts to ops
                    HdlValueId: NrHarts


CommitId: fc7332179ae71a31c6734d5038569b5fdca4d838
Update pulp_riscv_dbg to pulp-platform/riscv-dbg@834853c
--- a/hw/vendor/pulp_riscv_dbg/src/dm_csrs.sv
+++ b/hw/vendor/pulp_riscv_dbg/src/dm_csrs.sv
@@ -137,12 +137,12 @@ module dm_csrs #(
     haltsum2     = '0;
     hartsel_idx2 = hartsel_o[19:15];
 
-    for (int unsigned k = 0; k < NrHarts/2**10+1; k++) begin
+    for (int unsigned k = 0; k < (NrHarts-1)/2**10+1; k++) begin
       halted_flat2[k] = |halted_reshaped1[k];
     end
     halted_reshaped2 = halted_flat2;
 
-    if (hartsel_idx2 < 5'((NrHarts/2**15+1))) begin
+    if (hartsel_idx2 < 5'(((NrHarts-1)/2**15+1))) begin
       haltsum2         = halted_reshaped2[hartsel_idx2];
     end
   end

ParseResult:
UPD HdlStmFor@@ to 
    UPD HdlOp@@LT to LT
        UPD HdlOp@@ADD to ADD
            UPD HdlOp@@DIV to DIV
                INS HdlOp@@SUB to ops
                UPD HdlOp@@SUB to SUB
                    INS list@@ops to SUB
                    INS HdlValueInt@@1 to ops

UPD HdlStmFor@@ to 
    UPD HdlOp@@LT to LT
        UPD HdlOp@@ADD to ADD
            UPD HdlOp@@DIV to DIV
                MOV HdlValueId@@NrHarts to ops
                HdlValueId: NrHarts

UPD HdlStmIf@@ to 
    UPD HdlOp@@LT to LT
        UPD HdlOp@@CALL to CALL
            UPD HdlOp@@ADD to ADD
                UPD HdlOp@@DIV to DIV
                    INS HdlOp@@SUB to ops
                    UPD HdlOp@@SUB to SUB
                        INS list@@ops to SUB
                        INS HdlValueInt@@1 to ops

UPD HdlStmIf@@ to 
    UPD HdlOp@@LT to LT
        UPD HdlOp@@CALL to CALL
            UPD HdlOp@@ADD to ADD
                UPD HdlOp@@DIV to DIV
                    MOV HdlValueId@@NrHarts to ops
                    HdlValueId: NrHarts


CommitId: fc7332179ae71a31c6734d5038569b5fdca4d838
Update pulp_riscv_dbg to pulp-platform/riscv-dbg@834853c
--- a/hw/vendor/pulp_riscv_dbg/src/dm_csrs.sv
+++ b/hw/vendor/pulp_riscv_dbg/src/dm_csrs.sv
@@ -574,6 +574,7 @@ module dm_csrs #(
       // this is the only write-able bit during reset
       cmderr_q       <= dm::CmdErrNone;
       command_q      <= '0;
+      cmd_valid_q    <= '0;
       abstractauto_q <= '0;
       progbuf_q      <= '0;
       data_q         <= '0;
ParseResult:
INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: cmd_valid_q


CommitId: 0c4960cb89ce1e31f1e142bf6de4b7a7fbf37a47
[sysrst_ctrl] Give an explicit size to the EDGE_TYPE param
--- a/hw/ip/sysrst_ctrl/rtl/sysrst_ctrl_ulpfsm.sv
+++ b/hw/ip/sysrst_ctrl/rtl/sysrst_ctrl_ulpfsm.sv
@@ -5,7 +5,7 @@
 // Description sysrst_ctrl ULP FSM module
 
 module sysrst_ctrl_ulpfsm #(
-  parameter EDGE_TYPE = "H", // can be LH, HL and H
+  parameter bit [15:0] EDGE_TYPE = "H", // can be LH, HL and H
   parameter int unsigned TIMERBIT = 16
   ) (
   input                clk_aon_i,
ParseResult:
UPD HdlIdDef@@EDGE_TYPE to EDGE_TYPE
    INS HdlOp@@PARAMETRIZATION to EDGE_TYPE
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: bit
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 15
                    HdlValueInt: 0


CommitId: cabf26f33f6964caba640d9638873d681ba4a6a5
[prim] Restore ability to select default implementation
--- a/hw/ip/padctrl/rtl/padctrl.sv
+++ b/hw/ip/padctrl/rtl/padctrl.sv
@@ -7,9 +7,13 @@
 // to be consumed on the chiplevel.
 //
 
+`ifndef PRIM_DEFAULT_IMPL
+  `define PRIM_DEFAULT_IMPL integer'(prim_pkg::ImplGeneric)
+`endif
+
 module padctrl #(
-  parameter Impl = "generic" // "generic", "xilinx"...
-  ) (
+  parameter integer Impl = `PRIM_DEFAULT_IMPL
+) (
   input                                       clk_i,
   input                                       rst_ni,
   // Bus Interface (device)

ParseResult:
UPD HdlModuleDef@@padctrl to padctrl
    INS HdlImport@@ to objs
    HdlImport
        list: path
            HdlValueId: prim_pkg
            HdlAll

UPD HdlIdDef@@Impl to Impl
    INS HdlValueId@@integer to Impl
    INS HdlExprNotImplemented@@value to Impl


CommitId: cabf26f33f6964caba640d9638873d681ba4a6a5
[prim] Restore ability to select default implementation
--- a/hw/ip/padctrl/rtl/padctrl.sv
+++ b/hw/ip/padctrl/rtl/padctrl.sv
@@ -22,6 +26,8 @@ module padctrl #(
               [padctrl_reg_pkg::AttrDw-1:0]   dio_attr_o
 );
 
+  import prim_pkg::*;
+
   //////////////////////////////////////////////////////
   // This controls the WARL'ness of the CSRs
   // needs to be in line with the corresponding

ParseResult:
UPD HdlModuleDef@@padctrl to padctrl
    INS HdlImport@@ to objs
    HdlImport
        list: path
            HdlValueId: prim_pkg
            HdlAll


CommitId: cabf26f33f6964caba640d9638873d681ba4a6a5
[prim] Restore ability to select default implementation
--- a/hw/ip/padctrl/rtl/padctrl.sv
+++ b/hw/ip/padctrl/rtl/padctrl.sv
@@ -29,10 +35,10 @@ module padctrl #(
   //////////////////////////////////////////////////////
 
   logic [padctrl_reg_pkg::AttrDw-1:0] warl_mask;
-  if (Impl == "generic") begin : gen_generic
+  if (impl_e'(Impl) == ImplGeneric) begin : gen_generic
     // all attributes supported
     assign warl_mask = padctrl_reg_pkg::AttrDw'(6'h3F);
-  end else if (Impl == "xilinx") begin : gen_xilinx
+  end else if (impl_e'(Impl) == ImplXilinx) begin : gen_xilinx
     // only OD and INV supported
     assign warl_mask = padctrl_reg_pkg::AttrDw'(2'h3);
   end else begin : gen_failure
ParseResult:
UPD HdlModuleDef@@padctrl to padctrl
    INS HdlImport@@ to objs
    HdlImport
        list: path
            HdlValueId: prim_pkg
            HdlAll

UPD HdlStmIf@@ to 
    UPD HdlOp@@EQ to EQ
        INS list@@ops to EQ
        INS HdlOp@@CALL to ops
        INS HdlValueId@@ImplGeneric to ops
        UPD HdlOp@@CALL to CALL
            INS HdlValueId@@impl_e to ops
    UPD HdlOp@@EQ to EQ
        INS list@@ops to EQ
        INS HdlOp@@CALL to ops
        INS HdlValueId@@ImplXilinx to ops
        UPD HdlOp@@CALL to CALL
            INS HdlValueId@@impl_e to ops

UPD HdlStmIf@@ to 
    UPD HdlOp@@EQ to EQ
        MOV list@@ops to EQ
        list: ops
            HdlValueId: Impl
            str
        DEL str@@ from ops
    UPD HdlOp@@EQ to EQ
        MOV list@@ops to EQ
        list: ops
            HdlValueId: Impl
            str
        DEL str@@ from ops


CommitId: 66c509296798cdd9dbeba4deeb381d0cecf3b429
[usbdev] Fixes for I/O modes and expand their tests
--- a/hw/dv/dpi/usbdpi/usbdpi.sv
+++ b/hw/dv/dpi/usbdpi/usbdpi.sv
@@ -21,21 +22,31 @@ module usbdpi #(
   output logic dn_p2d,
   input  logic dn_d2p,
   input  logic dn_en_d2p,
+  output logic d_p2d,
+  input  logic d_d2p,
+  input  logic d_en_d2p,
+  input  logic se0_d2p,
+  input  logic se0_en_d2p,
+  input  logic txmode_d2p,
+  input  logic txmode_en_d2p,
+
   output logic sense_p2d,
-  input  logic pullup_d2p,
-  input  logic pullup_en_d2p
+  input  logic pullupdp_d2p,
+  input  logic pullupdp_en_d2p,
+  input  logic pullupdn_d2p,
+  input  logic pullupdn_en_d2p
 );
   import "DPI-C" function
     chandle usbdpi_create(input string name, input int loglevel);
 
   import "DPI-C" function
-    void usbdpi_device_to_host(input chandle ctx, input bit [4:0] d2p);
+    void usbdpi_device_to_host(input chandle ctx, input bit [10:0] d2p);
 
   import "DPI-C" function
     void usbdpi_close(input chandle ctx);
 
   import "DPI-C" function
-    byte usbdpi_host_to_device(input chandle ctx, input bit [4:0] d2p);
+    byte usbdpi_host_to_device(input chandle ctx, input bit [10:0] d2p);
 
   chandle ctx;
 

ParseResult:
INS HdlIdDef@@d_p2d to ports
HdlIdDef: d_p2d
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: OUT

INS HdlIdDef@@d_d2p to ports
HdlIdDef: d_d2p
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: IN

INS HdlIdDef@@d_en_d2p to ports
HdlIdDef: d_en_d2p
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: IN

INS HdlIdDef@@se0_d2p to ports
HdlIdDef: se0_d2p
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: IN

INS HdlIdDef@@se0_en_d2p to ports
HdlIdDef: se0_en_d2p
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: IN

INS HdlIdDef@@txmode_d2p to ports
HdlIdDef: txmode_d2p
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: IN

INS HdlIdDef@@txmode_en_d2p to ports
HdlIdDef: txmode_en_d2p
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: IN

INS HdlIdDef@@pullupdp_d2p to ports
HdlIdDef: pullupdp_d2p
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: IN

UPD HdlIdDef@@pullup_d2p to pullupdp_en_d2p

UPD HdlIdDef@@pullup_en_d2p to pullupdn_d2p

INS HdlIdDef@@pullupdn_en_d2p to ports
HdlIdDef: pullupdn_en_d2p
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: IN


CommitId: 66c509296798cdd9dbeba4deeb381d0cecf3b429
[usbdev] Fixes for I/O modes and expand their tests
--- a/hw/dv/dpi/usbdpi/usbdpi.sv
+++ b/hw/dv/dpi/usbdpi/usbdpi.sv
@@ -47,32 +58,39 @@ module usbdpi #(
     usbdpi_close(ctx);
   end
 
-  logic [4:0] d2p;
-  logic [4:0] d2p_r;
+  logic [10:0] d2p;
+  logic [10:0] d2p_r;
   logic       unused_dummy;
   logic       unused_clk = clk_i;
   logic       unused_rst = rst_ni;
-  logic       dp_int, dn_int;
+  logic       dp_int, dn_int, d_int;
 
-  assign d2p = {dp_d2p, dp_en_d2p, dn_d2p, dn_en_d2p, pullup_d2p & pullup_en_d2p};
+  assign d2p = {dp_d2p, dp_en_d2p, dn_d2p, dn_en_d2p, d_d2p, d_en_d2p, se0_d2p, se0_en_d2p, pullupdp_d2p & pullupdp_en_d2p, pullupdn_d2p & pullupdn_en_d2p, txmode_d2p & txmode_en_d2p};
   always_ff @(posedge clk_48MHz_i) begin
-    if (pullup_d2p && pullup_en_d2p) begin
+    if ((pullupdp_d2p && pullupdp_en_d2p) || (pullupdn_d2p && pullupdn_en_d2p)) begin
       automatic byte p2d = usbdpi_host_to_device(ctx, d2p);
+      d_int <= p2d[3];
       dp_int <= p2d[2];
       dn_int <= p2d[1];
       sense_p2d <= p2d[0];
-      unused_dummy <= |p2d[7:3];
+      unused_dummy <= |p2d[7:4];
       d2p_r <= d2p;
       if (d2p_r != d2p) begin
         usbdpi_device_to_host(ctx, d2p);
       end
-    end else begin
+    end else begin // if (pullupdp_d2p && pullupdp_en_d2p)
+      d_int <= 0;
       dp_int <= 0;
       dn_int <= 0;
     end
   end
 
   always_comb begin : proc_data
+    if (d_en_d2p) begin
+      d_p2d = d_d2p;
+    end else begin
+      d_p2d = d_int;
+    end
     if (dp_en_d2p) begin
       dp_p2d = dp_d2p;
     end else begin
ParseResult:
INS HdlIdDef@@d_int to objs
HdlIdDef: d_int
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

UPD HdlStmAssign@@ to 
    INS HdlOp@@CONCAT to 
    UPD HdlOp@@CONCAT to CONCAT
        INS list@@ops to CONCAT
        INS HdlOp@@CONCAT to ops
        INS HdlOp@@AND to ops
        HdlOp: AND
            list: ops
                HdlValueId: txmode_d2p
                HdlValueId: txmode_en_d2p
        UPD HdlOp@@CONCAT to CONCAT
            INS list@@ops to CONCAT
            INS HdlOp@@CONCAT to ops
            INS HdlOp@@AND to ops
            HdlOp: AND
                list: ops
                    HdlValueId: pullupdn_d2p
                    HdlValueId: pullupdn_en_d2p
            UPD HdlOp@@CONCAT to CONCAT
                INS list@@ops to CONCAT
                INS HdlOp@@CONCAT to ops
                UPD HdlOp@@CONCAT to CONCAT
                    INS list@@ops to CONCAT
                    INS HdlOp@@CONCAT to ops
                    INS HdlValueId@@se0_en_d2p to ops
                    UPD HdlOp@@CONCAT to CONCAT
                        INS list@@ops to CONCAT
                        INS HdlOp@@CONCAT to ops
                        INS HdlValueId@@se0_d2p to ops
                        UPD HdlOp@@CONCAT to CONCAT
                            INS list@@ops to CONCAT
                            INS HdlValueId@@d_en_d2p to ops
                UPD HdlOp@@AND to AND
                    INS HdlValueId@@pullupdp_d2p to ops

INS HdlStmIf@@ to body
HdlStmIf
    HdlValueId: d_en_d2p
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: d_p2d
                    HdlValueId: d_d2p
    list: elifs
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: d_p2d
                    HdlValueId: d_int

UPD HdlStmIf@@ to 
    INS HdlOp@@OR_LOG to 
    UPD HdlOp@@OR_LOG to OR_LOG
        INS list@@ops to OR_LOG
        INS HdlOp@@AND_LOG to ops
        HdlOp: AND_LOG
            list: ops
                HdlValueId: pullupdn_d2p
                HdlValueId: pullupdn_en_d2p

UPD HdlIdDef@@d2p to d2p
    UPD HdlOp@@PARAMETRIZATION to PARAMETRIZATION
        UPD HdlOp@@DOWNTO to DOWNTO
            UPD HdlValueInt@@4 to 10

UPD HdlIdDef@@d2p_r to d2p_r
    UPD HdlOp@@PARAMETRIZATION to PARAMETRIZATION
        UPD HdlOp@@DOWNTO to DOWNTO
            UPD HdlValueInt@@4 to 10

UPD HdlStmIf@@ to 
    MOV HdlOp@@AND_LOG to 
    HdlOp: AND_LOG
        list: ops
            HdlValueId: pullup_d2p
            HdlValueId: pullup_en_d2p
    UPD HdlOp@@AND_LOG to AND_LOG
        UPD HdlValueId@@pullup_d2p to pullupdp_d2p
        UPD HdlValueId@@pullup_en_d2p to pullupdp_en_d2p

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlOp: INDEX
        list: ops
            HdlValueId: p2d
            HdlValueInt: 3
    HdlValueId: d_int

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: d_int

UPD HdlStmAssign@@ to 
    UPD HdlOp@@CONCAT to CONCAT
        MOV HdlOp@@AND to ops
        HdlOp: AND
            list: ops
                HdlValueId: pullup_d2p
                HdlValueId: pullup_en_d2p
        UPD HdlOp@@AND to AND
            UPD HdlValueId@@pullup_en_d2p to pullupdp_en_d2p
            UPD HdlValueId@@pullup_d2p to d_d2p
            MOV HdlValueId@@pullup_d2p to ops
            HdlValueId: pullup_d2p
    MOV HdlOp@@CONCAT to 
    HdlOp: CONCAT
        list: ops
            HdlOp: CONCAT
                list: ops
                    HdlOp: CONCAT
                        list: ops
                            HdlOp: CONCAT
                                list: ops
                                    HdlValueId: dp_d2p
                                    HdlValueId: dp_en_d2p
                            HdlValueId: dn_d2p
                    HdlValueId: dn_en_d2p
            HdlOp: AND
                list: ops
                    HdlValueId: pullup_d2p
                    HdlValueId: pullup_en_d2p

UPD HdlStmAssign@@ to 
    UPD HdlOp@@OR_UNARY to OR_UNARY
        UPD HdlOp@@INDEX to INDEX
            UPD HdlOp@@DOWNTO to DOWNTO
                UPD HdlValueInt@@3 to 4


CommitId: 2b57492d2d5bc5153e952c700a47c59c3eb2fae9
[style-lint] Fix some common style lint warnings
--- a/hw/ip/pinmux/rtl/pinmux_wkup.sv
+++ b/hw/ip/pinmux/rtl/pinmux_wkup.sv
@@ -3,7 +3,7 @@
 // SPDX-License-Identifier: Apache-2.0
 //
 module pinmux_wkup import pinmux_pkg::*; import pinmux_reg_pkg::*; #(
-  parameter Cycles = 4
+  parameter int Cycles = 4
 ) (
   input                    clk_i,
   input                    rst_ni,
ParseResult:
UPD HdlIdDef@@Cycles to Cycles
    INS HdlValueId@@int to Cycles


CommitId: af7b278272b485601238ce55548daa1fc6743826
Update pulp_riscv_dbg to pulp-platform/riscv-dbg@2b1e9d0
--- a/hw/vendor/pulp_riscv_dbg/src/dm_csrs.sv
+++ b/hw/vendor/pulp_riscv_dbg/src/dm_csrs.sv
@@ -532,7 +532,7 @@ module dm_csrs #(
     // default assignment
     haltreq_o = '0;
     resumereq_o = '0;
-    if (selected_hart < HartSelLen'(NrHarts)) begin
+    if (selected_hart < (HartSelLen+1)'(NrHarts)) begin
       haltreq_o[selected_hart]   = dmcontrol_q.haltreq;
       resumereq_o[selected_hart] = dmcontrol_q.resumereq;
     end
ParseResult:
UPD HdlStmIf@@ to 
    UPD HdlOp@@LT to LT
        UPD HdlOp@@CALL to CALL
            INS HdlOp@@ADD to ops
            UPD HdlOp@@ADD to ADD
                INS list@@ops to ADD
                INS HdlValueInt@@1 to ops

UPD HdlStmIf@@ to 
    UPD HdlOp@@LT to LT
        UPD HdlOp@@CALL to CALL
            MOV HdlValueId@@HartSelLen to ops
            HdlValueId: HartSelLen


CommitId: 505776bab0e7f5b78c568e09570f96567cf87c83
[prim] Fix the edge type
--- a/hw/ip/prim/rtl/prim_edge_detector.sv
+++ b/hw/ip/prim/rtl/prim_edge_detector.sv
@@ -49,7 +49,7 @@ module prim_edge_detector #(
     else         q_sync_q <= q_sync_d;
   end
 
-  assign q_posedge_pulse_o = ~q_sync_d & q_sync_q;
-  assign q_negedge_pulse_o = q_sync_d & ~q_sync_q;
+  assign q_posedge_pulse_o = q_sync_d & ~q_sync_q;
+  assign q_negedge_pulse_o = ~q_sync_d & q_sync_q;
 
 endmodule : prim_edge_detector
ParseResult:
MOV HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: AND
        list: ops
            HdlOp: NEG
                list: ops
                    HdlValueId: q_sync_d
            HdlValueId: q_sync_q
    HdlValueId: q_posedge_pulse_o

UPD HdlStmAssign@@ to 
    UPD HdlValueId@@q_negedge_pulse_o to q_posedge_pulse_o

UPD HdlStmAssign@@ to 
    UPD HdlValueId@@q_posedge_pulse_o to q_negedge_pulse_o


CommitId: bc7f6d6cde2259f2741e40112f2ff4c6871d0d75
Update lowrisc_ibex to lowRISC/ibex@6d9e1ac
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_pmp.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_pmp.sv
@@ -16,8 +16,9 @@ module ibex_pmp #(
     input  logic                    rst_ni,
 
     // Interface to CSRs
-    input  ibex_pkg::pmp_cfg_t      csr_pmp_cfg_i  [PMPNumRegions],
-    input  logic [33:0]             csr_pmp_addr_i [PMPNumRegions],
+    input  ibex_pkg::pmp_cfg_t      csr_pmp_cfg_i     [PMPNumRegions],
+    input  logic [33:0]             csr_pmp_addr_i    [PMPNumRegions],
+    input  ibex_pkg::pmp_mseccfg_t  csr_pmp_mseccfg_i,
 
     input  ibex_pkg::priv_lvl_e     priv_mode_i    [PMPNumChan],
     // Access checking channels

ParseResult:
INS HdlIdDef@@csr_pmp_mseccfg_i to ports
HdlIdDef: csr_pmp_mseccfg_i
    HdlOp: DOUBLE_COLON
        list: ops
            HdlValueId: ibex_pkg
            HdlValueId: pmp_mseccfg_t
    HdlDirection: IN


CommitId: bc7f6d6cde2259f2741e40112f2ff4c6871d0d75
Update lowrisc_ibex to lowRISC/ibex@6d9e1ac
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_pmp.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_pmp.sv
@@ -36,7 +37,8 @@ module ibex_pmp #(
   logic [PMPNumChan-1:0][PMPNumRegions-1:0]   region_match_lt;
   logic [PMPNumChan-1:0][PMPNumRegions-1:0]   region_match_eq;
   logic [PMPNumChan-1:0][PMPNumRegions-1:0]   region_match_all;
-  logic [PMPNumChan-1:0][PMPNumRegions-1:0]   region_perm_check;
+  logic [PMPNumChan-1:0][PMPNumRegions-1:0]   region_basic_perm_check;
+  logic [PMPNumChan-1:0][PMPNumRegions-1:0]   region_mml_perm_check;
   logic [PMPNumChan-1:0]                      access_fault;
 
 

ParseResult:
INS HdlIdDef@@region_basic_perm_check to objs
HdlIdDef: region_basic_perm_check
    HdlOp: INDEX
        list: ops
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: logic
                    HdlOp: DOWNTO
                        list: ops
                            HdlOp: SUB
                                list: ops
                                    HdlValueId: PMPNumChan
                                    HdlValueInt: 1
                            HdlValueInt: 0
            HdlOp: DOWNTO
                list: ops
                    HdlOp: SUB
                        list: ops
                            HdlValueId: PMPNumRegions
                            HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: INTERNAL

UPD HdlIdDef@@region_perm_check to region_mml_perm_check


CommitId: bc7f6d6cde2259f2741e40112f2ff4c6871d0d75
Update lowrisc_ibex to lowRISC/ibex@6d9e1ac
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_pmp.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_pmp.sv
@@ -55,8 +57,8 @@ module ibex_pmp #(
     end
     // Address mask for NA matching
     for (genvar b = PMPGranularity+2; b < 34; b++) begin : g_bitmask
-      if (b == PMPGranularity+2) begin : g_bit0
-        // Always mask bit (G+2) for NAPOT
+      if (b == 2) begin : g_bit0
+        // Always mask bit 2 for NAPOT
         assign region_addr_mask[r][b] = (csr_pmp_cfg_i[r].mode != PMP_MODE_NAPOT);
       end else begin : g_others
         // We will mask this bit if it is within the programmed granule

ParseResult:
UPD HdlStmIf@@ to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmIf@@ to 
    UPD HdlOp@@EQ to EQ
        UPD HdlOp@@ADD to ADD
            MOV HdlValueInt@@2 to ops
            HdlValueInt: 2
            DEL HdlValueId@@PMPGranularity from ops
            DEL list@@ops from ADD
        DEL HdlOp@@ADD from ops
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlStmAssign
                HdlOp: OR
                    list: ops
                        HdlOp: NE
                            list: ops
                                HdlOp: DOT
                                    list: ops
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: csr_pmp_cfg_i
                                                HdlValueId: r
                                        HdlValueId: mode
                                HdlValueId: PMP_MODE_NAPOT
                        HdlOp: NAND_UNARY
                            list: ops
                                HdlOp: INDEX
                                    list: ops
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: csr_pmp_addr_i
                                                HdlValueId: r
                                        HdlOp: DOWNTO
                                            list: ops
                                                HdlOp: SUB
                                                    list: ops
                                                        HdlValueId: b
                                                        HdlValueInt: 1
                                                HdlOp: ADD
                                                    list: ops
                                                        HdlValueId: PMPGranularity
                                                        HdlValueInt: 2
                HdlOp: INDEX
                    list: ops
                        HdlOp: INDEX
                            list: ops
                                HdlValueId: region_addr_mask
                                HdlValueId: r
                        HdlValueId: b


CommitId: bc7f6d6cde2259f2741e40112f2ff4c6871d0d75
Update lowrisc_ibex to lowRISC/ibex@6d9e1ac
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_pmp.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_pmp.sv
@@ -64,8 +66,13 @@ module ibex_pmp #(
         //                  ^
         //                  | This bit pos is the top of the mask, all lower bits set
         // thus mask = 1111 0000
-        assign region_addr_mask[r][b] = (csr_pmp_cfg_i[r].mode != PMP_MODE_NAPOT) |
-                                        ~&csr_pmp_addr_i[r][b-1:PMPGranularity+2];
+        if (PMPGranularity == 0) begin : g_region_addr_mask_zero_granularity
+          assign region_addr_mask[r][b] = (csr_pmp_cfg_i[r].mode != PMP_MODE_NAPOT) |
+                                          ~&csr_pmp_addr_i[r][b-1:2];
+        end else begin : g_region_addr_mask_other_granularity
+          assign region_addr_mask[r][b] = (csr_pmp_cfg_i[r].mode != PMP_MODE_NAPOT) |
+                                          ~&csr_pmp_addr_i[r][b-1:PMPGranularity+1];
+        end
       end
     end
   end

ParseResult:
UPD HdlStmIf@@ to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmIf@@ to 
    UPD HdlOp@@EQ to EQ
        UPD HdlOp@@ADD to ADD
            MOV HdlValueInt@@2 to ops
            HdlValueInt: 2
            DEL HdlValueId@@PMPGranularity from ops
            DEL list@@ops from ADD
        DEL HdlOp@@ADD from ops
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlStmAssign
                HdlOp: OR
                    list: ops
                        HdlOp: NE
                            list: ops
                                HdlOp: DOT
                                    list: ops
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: csr_pmp_cfg_i
                                                HdlValueId: r
                                        HdlValueId: mode
                                HdlValueId: PMP_MODE_NAPOT
                        HdlOp: NAND_UNARY
                            list: ops
                                HdlOp: INDEX
                                    list: ops
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: csr_pmp_addr_i
                                                HdlValueId: r
                                        HdlOp: DOWNTO
                                            list: ops
                                                HdlOp: SUB
                                                    list: ops
                                                        HdlValueId: b
                                                        HdlValueInt: 1
                                                HdlOp: ADD
                                                    list: ops
                                                        HdlValueId: PMPGranularity
                                                        HdlValueInt: 2
                HdlOp: INDEX
                    list: ops
                        HdlOp: INDEX
                            list: ops
                                HdlValueId: region_addr_mask
                                HdlValueId: r
                        HdlValueId: b

INS HdlStmIf@@ to body

UPD HdlStmIf@@ to 
    INS HdlOp@@EQ to 
    HdlOp: EQ
        list: ops
            HdlValueId: PMPGranularity
            HdlValueInt: 0
    INS HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlStmAssign
                HdlOp: OR
                    list: ops
                        HdlOp: NE
                            list: ops
                                HdlOp: DOT
                                    list: ops
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: csr_pmp_cfg_i
                                                HdlValueId: r
                                        HdlValueId: mode
                                HdlValueId: PMP_MODE_NAPOT
                        HdlOp: NAND_UNARY
                            list: ops
                                HdlOp: INDEX
                                    list: ops
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: csr_pmp_addr_i
                                                HdlValueId: r
                                        HdlOp: DOWNTO
                                            list: ops
                                                HdlOp: SUB
                                                    list: ops
                                                        HdlValueId: b
                                                        HdlValueInt: 1
                                                HdlValueInt: 2
                HdlOp: INDEX
                    list: ops
                        HdlOp: INDEX
                            list: ops
                                HdlValueId: region_addr_mask
                                HdlValueId: r
                        HdlValueId: b
    INS list@@elifs to 

UPD HdlStmAssign@@ to 
    UPD HdlOp@@OR to OR
        UPD HdlOp@@NAND_UNARY to NAND_UNARY
            UPD HdlOp@@INDEX to INDEX
                UPD HdlOp@@DOWNTO to DOWNTO
                    UPD HdlOp@@ADD to ADD
                        UPD HdlValueInt@@2 to 1


CommitId: bc7f6d6cde2259f2741e40112f2ff4c6871d0d75
Update lowrisc_ibex to lowRISC/ibex@6d9e1ac
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_pmp.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_pmp.sv
@@ -125,4 +177,8 @@ module ibex_pmp #(
     assign pmp_req_err_o[c] = access_fault[c];
   end
 
+  // RLB, rule locking bypass, is only relevant to ibex_cs_registers which controls writes to the
+  // PMP CSRs. Tie to unused signal here to prevent lint warnings.
+  logic unused_csr_pmp_mseccfg_rlb;
+  assign unused_csr_pmp_mseccfg_rlb = csr_pmp_mseccfg_i.rlb;
 endmodule
ParseResult:
INS HdlIdDef@@unused_csr_pmp_mseccfg_rlb to objs
HdlIdDef: unused_csr_pmp_mseccfg_rlb
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: DOT
        list: ops
            HdlValueId: csr_pmp_mseccfg_i
            HdlValueId: rlb
    HdlValueId: unused_csr_pmp_mseccfg_rlb


CommitId: 55fd78e67b61c8ec2a4e9a23277c530eef242eb9
Update lowrisc_ibex to lowRISC/ibex@f025236
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_load_store_unit.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_load_store_unit.sv
@@ -76,11 +76,13 @@ module ibex_load_store_unit (
   logic         split_misaligned_access;
   logic         handle_misaligned_q, handle_misaligned_d; // high after receiving grant for first
                                                           // part of a misaligned access
+  logic         pmp_err_d;
   logic         pmp_err_q;
   logic         data_or_pmp_err;
 
   typedef enum logic [2:0]  {
-    IDLE, WAIT_GNT_MIS, WAIT_RVALID_MIS, WAIT_GNT, WAIT_RVALID
+    IDLE, WAIT_GNT_MIS, WAIT_RVALID_MIS, WAIT_GNT, WAIT_RVALID,
+    WAIT_GNT_ERR, WAIT_RVALID_ERR, WAIT_RVALID_DONE
   } ls_fsm_e;
 
   ls_fsm_e ls_fsm_cs, ls_fsm_ns;

ParseResult:
INS HdlIdDef@@pmp_err_d to objs
HdlIdDef: pmp_err_d
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL


CommitId: 55fd78e67b61c8ec2a4e9a23277c530eef242eb9
Update lowrisc_ibex to lowRISC/ibex@f025236
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_load_store_unit.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_load_store_unit.sv
@@ -321,12 +323,14 @@ module ibex_load_store_unit (
     addr_incr_req_o     = 1'b0;
     handle_misaligned_d = handle_misaligned_q;
     data_or_pmp_err     = 1'b0;
+    pmp_err_d           = pmp_err_q;
 
     unique case (ls_fsm_cs)
 
       IDLE: begin
         if (data_req_ex_i) begin
           data_req_o = 1'b1;
+          pmp_err_d  = data_pmp_err_i;
           if (data_gnt_i) begin
             handle_misaligned_d = split_misaligned_access;
             ls_fsm_ns           = split_misaligned_access ? WAIT_RVALID_MIS : WAIT_RVALID;

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: pmp_err_d
                HdlValueId: pmp_err_q

UPD HdlStmCase@@ls_fsm_cs to ls_fsm_cs
    INS tuple@@ to cases
    tuple
        HdlValueId: WAIT_GNT_ERR
        HdlStmBlock: SEQ
            list: body
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: data_req_o
                        HdlValueInt: 1
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: addr_incr_req_o
                        HdlValueInt: 1
                HdlStmIf
                    HdlValueId: pmp_err_q
                    HdlStmBlock: SEQ
                        list: body
                            HdlOp: ASSIGN
                                list: ops
                                    HdlValueId: ls_fsm_ns
                                    HdlValueId: IDLE
                    list: elifs
                        tuple
                            HdlValueId: data_gnt_i
                            HdlStmBlock: SEQ
                                list: body
                                    HdlOp: ASSIGN
                                        list: ops
                                            HdlValueId: ls_fsm_ns
                                            HdlValueId: WAIT_RVALID_ERR
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS HdlValueId@@WAIT_RVALID_ERR to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@WAIT_RVALID_DONE to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: pmp_err_d
                HdlValueId: data_pmp_err_i


CommitId: 55fd78e67b61c8ec2a4e9a23277c530eef242eb9
Update lowrisc_ibex to lowRISC/ibex@f025236
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_load_store_unit.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_load_store_unit.sv
@@ -338,6 +342,10 @@ module ibex_load_store_unit (
 
       WAIT_GNT_MIS: begin
         data_req_o = 1'b1;
+        // data_pmp_err_i is valid during the address phase of a request. An error will block the
+        // external request and so a data_gnt_i might never be signalled. The registered version
+        // pmp_err_q is only updated for new address phases and so can be used in WAIT_GNT* and
+        // WAIT_RVALID* states
         if (data_gnt_i || pmp_err_q) begin
           handle_misaligned_d = 1'b1;
           ls_fsm_ns           = WAIT_RVALID_MIS;

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: pmp_err_d
                HdlValueId: pmp_err_q

UPD HdlStmCase@@ls_fsm_cs to ls_fsm_cs
    INS tuple@@ to cases
    tuple
        HdlValueId: WAIT_GNT_ERR
        HdlStmBlock: SEQ
            list: body
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: data_req_o
                        HdlValueInt: 1
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: addr_incr_req_o
                        HdlValueInt: 1
                HdlStmIf
                    HdlValueId: pmp_err_q
                    HdlStmBlock: SEQ
                        list: body
                            HdlOp: ASSIGN
                                list: ops
                                    HdlValueId: ls_fsm_ns
                                    HdlValueId: IDLE
                    list: elifs
                        tuple
                            HdlValueId: data_gnt_i
                            HdlStmBlock: SEQ
                                list: body
                                    HdlOp: ASSIGN
                                        list: ops
                                            HdlValueId: ls_fsm_ns
                                            HdlValueId: WAIT_RVALID_ERR
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS HdlValueId@@WAIT_RVALID_ERR to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@WAIT_RVALID_DONE to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: pmp_err_d
                HdlValueId: data_pmp_err_i


CommitId: 55fd78e67b61c8ec2a4e9a23277c530eef242eb9
Update lowrisc_ibex to lowRISC/ibex@f025236
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_load_store_unit.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_load_store_unit.sv
@@ -345,32 +353,34 @@ module ibex_load_store_unit (
       end
 
       WAIT_RVALID_MIS: begin
+        // push out second request
+        data_req_o = 1'b1;
         // tell ID/EX stage to update the address
         addr_incr_req_o = 1'b1;
-        // first part rvalid is received, or gets a pmp error
-        // pmp_err_i will hold stable until the address is updated, and
-        // therefore pmp_err_q is valid in both WAIT_GNT_MIS and WAIT_RVALID_MIS states
+
+        // first part rvalid is received, or gets a PMP error
         if (data_rvalid_i || pmp_err_q) begin
+          // Update the PMP error for the second part
+          pmp_err_d = data_pmp_err_i;
           if (pmp_err_q || data_err_i) begin
             // first part created an error, abort transaction
             data_valid_o        = 1'b1;
             data_or_pmp_err     = 1'b1;
             handle_misaligned_d = 1'b0;
-            ls_fsm_ns           = IDLE;
+            // If already granted, wait for second rvalid
+            ls_fsm_ns = data_gnt_i ? WAIT_RVALID_ERR : WAIT_GNT_ERR;
+
           end else begin
-            // push out second request
-            data_req_o = 1'b1;
-            if (data_gnt_i) begin
-              // second grant is received
-              ls_fsm_ns = WAIT_RVALID;
-            end else begin
-              // second grant is NOT received, but first rvalid
-              ls_fsm_ns = WAIT_GNT;
-            end
+            // No error in first part, proceed with second part
+            ls_fsm_ns = data_gnt_i ? WAIT_RVALID : WAIT_GNT;
           end
+
         end else begin
           // first part rvalid is NOT received
-          ls_fsm_ns = WAIT_RVALID_MIS;
+          if (data_gnt_i) begin
+            // second grant is received
+            ls_fsm_ns = WAIT_RVALID_DONE;
+          end
         end
       end
 

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: pmp_err_d
                HdlValueId: pmp_err_q

UPD HdlStmCase@@ls_fsm_cs to ls_fsm_cs
    INS tuple@@ to cases
    tuple
        HdlValueId: WAIT_GNT_ERR
        HdlStmBlock: SEQ
            list: body
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: data_req_o
                        HdlValueInt: 1
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: addr_incr_req_o
                        HdlValueInt: 1
                HdlStmIf
                    HdlValueId: pmp_err_q
                    HdlStmBlock: SEQ
                        list: body
                            HdlOp: ASSIGN
                                list: ops
                                    HdlValueId: ls_fsm_ns
                                    HdlValueId: IDLE
                    list: elifs
                        tuple
                            HdlValueId: data_gnt_i
                            HdlStmBlock: SEQ
                                list: body
                                    HdlOp: ASSIGN
                                        list: ops
                                            HdlValueId: ls_fsm_ns
                                            HdlValueId: WAIT_RVALID_ERR
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS HdlValueId@@WAIT_RVALID_ERR to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@WAIT_RVALID_DONE to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: data_req_o
                HdlValueInt: 1
        DEL list@@body from SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: ls_fsm_ns
                HdlValueId: IDLE
    DEL HdlStmBlock@@SEQ from 

UPD HdlStmIf@@ to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: pmp_err_d
                HdlValueId: data_pmp_err_i

INS HdlStmIf@@ to body

UPD HdlStmIf@@ to 
    INS HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: ls_fsm_ns
                    HdlOp: TERNARY
                        list: ops
                            HdlValueId: data_gnt_i
                            HdlValueId: WAIT_RVALID
                            HdlValueId: WAIT_GNT
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: ls_fsm_ns
                HdlOp: TERNARY
                    list: ops
                        HdlValueId: data_gnt_i
                        HdlValueId: WAIT_RVALID_ERR
                        HdlValueId: WAIT_GNT_ERR

UPD HdlStmIf@@ to 
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: ls_fsm_ns
                    HdlValueId: WAIT_RVALID_MIS
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@WAIT_RVALID_MIS to WAIT_RVALID_DONE

UPD HdlStmIf@@ to 
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: ls_fsm_ns
                    HdlValueId: WAIT_RVALID
    DEL HdlValueId@@data_gnt_i from 
    DEL list@@elifs from 
    DEL HdlStmBlock@@SEQ from 
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: ls_fsm_ns
                    HdlValueId: WAIT_GNT

DEL HdlStmIf@@ from body


CommitId: 55fd78e67b61c8ec2a4e9a23277c530eef242eb9
Update lowrisc_ibex to lowRISC/ibex@f025236
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_load_store_unit.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_load_store_unit.sv
@@ -385,8 +395,6 @@ module ibex_load_store_unit (
 
       WAIT_RVALID: begin
         data_req_o = 1'b0;
-        // pmp_err_i will hold stable until the address is updated, and
-        // therefore pmp_err_q is valid in both WAIT_GNT and WAIT_RVALID states
         if (data_rvalid_i || pmp_err_q) begin
           data_valid_o        = 1'b1;
           data_or_pmp_err     = data_err_i | pmp_err_q;

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: pmp_err_d
                HdlValueId: pmp_err_q

UPD HdlStmCase@@ls_fsm_cs to ls_fsm_cs
    INS tuple@@ to cases
    tuple
        HdlValueId: WAIT_GNT_ERR
        HdlStmBlock: SEQ
            list: body
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: data_req_o
                        HdlValueInt: 1
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: addr_incr_req_o
                        HdlValueInt: 1
                HdlStmIf
                    HdlValueId: pmp_err_q
                    HdlStmBlock: SEQ
                        list: body
                            HdlOp: ASSIGN
                                list: ops
                                    HdlValueId: ls_fsm_ns
                                    HdlValueId: IDLE
                    list: elifs
                        tuple
                            HdlValueId: data_gnt_i
                            HdlStmBlock: SEQ
                                list: body
                                    HdlOp: ASSIGN
                                        list: ops
                                            HdlValueId: ls_fsm_ns
                                            HdlValueId: WAIT_RVALID_ERR
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS HdlValueId@@WAIT_RVALID_ERR to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@WAIT_RVALID_DONE to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmIf@@ to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: pmp_err_d
                HdlValueId: data_pmp_err_i

UPD HdlStmIf@@ to 
    INS HdlValueId@@data_gnt_i to 
    INS list@@elifs to 


CommitId: 55fd78e67b61c8ec2a4e9a23277c530eef242eb9
Update lowrisc_ibex to lowRISC/ibex@f025236
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_load_store_unit.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_load_store_unit.sv
@@ -424,7 +470,7 @@ module ibex_load_store_unit (
       ls_fsm_cs           <= ls_fsm_ns;
       addr_last_q         <= addr_last_d;
       handle_misaligned_q <= handle_misaligned_d;
-      pmp_err_q           <= data_pmp_err_i;
+      pmp_err_q           <= pmp_err_d;
     end
   end
 

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: pmp_err_d
                HdlValueId: pmp_err_q

UPD HdlStmCase@@ls_fsm_cs to ls_fsm_cs
    INS tuple@@ to cases
    tuple
        HdlValueId: WAIT_GNT_ERR
        HdlStmBlock: SEQ
            list: body
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: data_req_o
                        HdlValueInt: 1
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: addr_incr_req_o
                        HdlValueInt: 1
                HdlStmIf
                    HdlValueId: pmp_err_q
                    HdlStmBlock: SEQ
                        list: body
                            HdlOp: ASSIGN
                                list: ops
                                    HdlValueId: ls_fsm_ns
                                    HdlValueId: IDLE
                    list: elifs
                        tuple
                            HdlValueId: data_gnt_i
                            HdlStmBlock: SEQ
                                list: body
                                    HdlOp: ASSIGN
                                        list: ops
                                            HdlValueId: ls_fsm_ns
                                            HdlValueId: WAIT_RVALID_ERR
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS HdlValueId@@WAIT_RVALID_ERR to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@WAIT_RVALID_DONE to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmAssign@@ to 
    UPD HdlValueId@@data_pmp_err_i to pmp_err_d

UPD HdlStmIf@@ to 
    INS HdlOp@@OR_LOG to 
    HdlOp: OR_LOG
        list: ops
            HdlValueId: data_rvalid_i
            HdlValueId: pmp_err_q
    INS HdlStmBlock@@SEQ to 
    INS list@@elifs to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ


CommitId: 55fd78e67b61c8ec2a4e9a23277c530eef242eb9
Update lowrisc_ibex to lowRISC/ibex@f025236
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_load_store_unit.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_load_store_unit.sv
@@ -451,7 +497,7 @@ module ibex_load_store_unit (
   assign load_err_o    = data_or_pmp_err & ~data_we_q;
   assign store_err_o   = data_or_pmp_err &  data_we_q;
 
-  assign busy_o = (ls_fsm_cs == WAIT_RVALID) | (data_req_o == 1'b1);
+  assign busy_o = (ls_fsm_cs != IDLE);
 
   ////////////////
   // Assertions //
ParseResult:
INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: NE
        list: ops
            HdlValueId: ls_fsm_cs
            HdlValueId: IDLE
    HdlValueId: busy_o

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: pmp_err_d
                HdlValueId: pmp_err_q

UPD HdlStmCase@@ls_fsm_cs to ls_fsm_cs
    INS tuple@@ to cases
    tuple
        HdlValueId: WAIT_GNT_ERR
        HdlStmBlock: SEQ
            list: body
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: data_req_o
                        HdlValueInt: 1
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: addr_incr_req_o
                        HdlValueInt: 1
                HdlStmIf
                    HdlValueId: pmp_err_q
                    HdlStmBlock: SEQ
                        list: body
                            HdlOp: ASSIGN
                                list: ops
                                    HdlValueId: ls_fsm_ns
                                    HdlValueId: IDLE
                    list: elifs
                        tuple
                            HdlValueId: data_gnt_i
                            HdlStmBlock: SEQ
                                list: body
                                    HdlOp: ASSIGN
                                        list: ops
                                            HdlValueId: ls_fsm_ns
                                            HdlValueId: WAIT_RVALID_ERR
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS HdlValueId@@WAIT_RVALID_ERR to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@WAIT_RVALID_DONE to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmIf@@ to 
    INS HdlValueId@@data_rvalid_i to 
    INS HdlStmBlock@@SEQ to 
    INS list@@elifs to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: pmp_err_d
                HdlValueId: data_pmp_err_i

UPD HdlStmIf@@ to 
    INS HdlValueId@@data_err_i to 
    INS HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: data_valid_o
                    HdlValueInt: 1
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: data_or_pmp_err
                    HdlValueInt: 1
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: handle_misaligned_d
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: ls_fsm_ns
                    HdlValueId: WAIT_RVALID_ERR
    INS list@@elifs to 

DEL HdlStmAssign@@ from objs
HdlStmAssign
    HdlOp: OR
        list: ops
            HdlOp: EQ
                list: ops
                    HdlValueId: ls_fsm_cs
                    HdlValueId: WAIT_RVALID
            HdlOp: EQ
                list: ops
                    HdlValueId: data_req_o
                    HdlValueInt: 1
    HdlValueId: busy_o


CommitId: b5871b73f4bfa1371901f600b582d77110719440
[AST] AscentLint & Spyglass fixes
--- a/hw/top_earlgrey/ip/ast/rtl/ast_entropy.sv
+++ b/hw/top_earlgrey/ip/ast/rtl/ast_entropy.sv
@@ -15,6 +15,8 @@ module ast_entropy #(
   input rst_ast_es_ni,                             // Entropy Reset
   input clk_src_sys_en_i,                          // System Source Clock Enable
   input clk_src_sys_jen_i,                         // System Source Clock Jitter Enable
+  input scan_mode_i,                               // Scan Mode
+  input scan_reset_ni,                             // Scane Reset
   output edn_pkg::edn_req_t entropy_req_o          // Entropy Request
 );
 

ParseResult:
INS HdlIdDef@@scan_mode_i to ports
HdlIdDef: scan_mode_i
    HdlValueId: wire
    HdlDirection: IN

INS HdlIdDef@@scan_reset_ni to ports
HdlIdDef: scan_reset_ni
    HdlValueId: wire
    HdlDirection: IN


CommitId: b5871b73f4bfa1371901f600b582d77110719440
[AST] AscentLint & Spyglass fixes
--- a/hw/top_earlgrey/ip/ast/rtl/ast_entropy.sv
+++ b/hw/top_earlgrey/ip/ast/rtl/ast_entropy.sv
@@ -25,8 +27,9 @@ module ast_entropy #(
 // Reset De-Assert syncronizer
 logic entropy_reset_n, sync_rst_es_n, rst_es_n;
 
-assign entropy_reset_n = (rst_ast_es_ni && clk_src_sys_en_i && clk_src_sys_jen_i);
-
+// To eable Syncronizer FFs reset in Scan Mode
+assign entropy_reset_n = scan_mode_i ? scan_reset_ni :
+          (rst_ast_es_ni && clk_src_sys_en_i && clk_src_sys_jen_i);
 prim_flop_2sync #(
   .Width ( 1 ),
   .ResetValue ( 1'b0 )

ParseResult:
UPD HdlStmAssign@@ to 
    MOV HdlOp@@AND_LOG to 
    HdlOp: AND_LOG
        list: ops
            HdlOp: AND_LOG
                list: ops
                    HdlValueId: rst_ast_es_ni
                    HdlValueId: clk_src_sys_en_i
            HdlValueId: clk_src_sys_jen_i


CommitId: b5871b73f4bfa1371901f600b582d77110719440
[AST] AscentLint & Spyglass fixes
--- a/hw/top_earlgrey/ip/ast/rtl/ast_entropy.sv
+++ b/hw/top_earlgrey/ip/ast/rtl/ast_entropy.sv
@@ -36,7 +39,7 @@ prim_flop_2sync #(
   .d_i ( 1'b1 ),
   .q_o ( sync_rst_es_n )
 );
-assign rst_es_n = sync_rst_es_n;
+assign rst_es_n = scan_mode_i ? scan_reset_ni : sync_rst_es_n;
 
 
 ///////////////////////////////////////
ParseResult:
UPD HdlStmAssign@@ to 
    INS HdlOp@@TERNARY to 
    UPD HdlOp@@TERNARY to TERNARY
        INS list@@ops to TERNARY
        INS HdlValueId@@scan_mode_i to ops
        INS HdlValueId@@scan_reset_ni to ops

UPD HdlStmAssign@@ to 
    MOV HdlValueId@@sync_rst_es_n to 
    HdlValueId: sync_rst_es_n


CommitId: 17f4bf815e5eed73c1c16d0260862c5b6d54a1ee
[pinmux] Update strap sampling mode in DFT-enabled LC states
--- a/hw/top_earlgrey/rtl/autogen/chip_earlgrey_nexysvideo.sv
+++ b/hw/top_earlgrey/rtl/autogen/chip_earlgrey_nexysvideo.sv
@@ -90,7 +90,6 @@ module chip_earlgrey_nexysvideo #(
 
   // DFT and Debug signal positions in the pinout.
   localparam pinmux_pkg::target_cfg_t PinmuxTargetCfg = '{
-    const_sampling:    1'b1,
     tck_idx:           TckPadIdx,
     tms_idx:           TmsPadIdx,
     trst_idx:          TrstNPadIdx,
ParseResult:
UPD HdlIdDef@@PinmuxTargetCfg to PinmuxTargetCfg
    DEL HdlOp@@MAP_ASSOCIATION from value
    HdlOp: MAP_ASSOCIATION
        list: ops
            HdlValueId: const_sampling
            HdlValueInt: 1


CommitId: 2de46f6dd9a3db8d3425364c0b834d63d0b7a3b6
[entropy_src/rtl] fixes to address issue #3511
--- a/hw/ip/entropy_src/rtl/entropy_src_core.sv
+++ b/hw/ip/entropy_src/rtl/entropy_src_core.sv
@@ -6,16 +6,16 @@
 //
 
 module entropy_src_core import entropy_src_pkg::*; #(
-  parameter int unsigned EsFifoDepth = 2
+  parameter int EsFifoDepth = 2
 ) (
-  input                  clk_i,
-  input                  rst_ni,
+  input logic clk_i,
+  input logic rst_ni,
 
   input  entropy_src_reg_pkg::entropy_src_reg2hw_t reg2hw,
   output entropy_src_reg_pkg::entropy_src_hw2reg_t hw2reg,
 
   // Efuse Interface
-  input efuse_es_sw_reg_en_i,
+  input logic efuse_es_sw_reg_en_i,
 
 
   // Entropy Interface

ParseResult:
UPD HdlIdDef@@EsFifoDepth to EsFifoDepth
    UPD HdlOp@@PARAMETRIZATION to PARAMETRIZATION
        MOV HdlValueId@@int to ops
        HdlValueId: int
        DEL HdlOp@@MAP_ASSOCIATION from ops
        HdlOp: MAP_ASSOCIATION
            list: ops
                HdlValueId: signed
        DEL list@@ops from PARAMETRIZATION
    DEL HdlOp@@PARAMETRIZATION from EsFifoDepth

UPD HdlIdDef@@clk_i to clk_i
    INS HdlOp@@PARAMETRIZATION to clk_i
    UPD HdlOp@@PARAMETRIZATION to PARAMETRIZATION
        INS list@@ops to PARAMETRIZATION

UPD HdlIdDef@@rst_ni to rst_ni
    INS HdlOp@@PARAMETRIZATION to rst_ni
    UPD HdlOp@@PARAMETRIZATION to PARAMETRIZATION
        INS list@@ops to PARAMETRIZATION

UPD HdlIdDef@@efuse_es_sw_reg_en_i to efuse_es_sw_reg_en_i
    INS HdlOp@@PARAMETRIZATION to efuse_es_sw_reg_en_i
    UPD HdlOp@@PARAMETRIZATION to PARAMETRIZATION
        INS list@@ops to PARAMETRIZATION

UPD HdlIdDef@@clk_i to clk_i
    UPD HdlValueId@@wire to logic
    MOV HdlValueId@@wire to clk_i
    HdlValueId: wire

UPD HdlIdDef@@rst_ni to rst_ni
    UPD HdlValueId@@wire to logic
    MOV HdlValueId@@wire to rst_ni
    HdlValueId: wire

UPD HdlIdDef@@efuse_es_sw_reg_en_i to efuse_es_sw_reg_en_i
    UPD HdlValueId@@wire to logic
    MOV HdlValueId@@wire to efuse_es_sw_reg_en_i
    HdlValueId: wire


CommitId: 2de46f6dd9a3db8d3425364c0b834d63d0b7a3b6
[entropy_src/rtl] fixes to address issue #3511
--- a/hw/ip/entropy_src/rtl/entropy_src_core.sv
+++ b/hw/ip/entropy_src/rtl/entropy_src_core.sv
@@ -40,13 +40,13 @@ module entropy_src_core import entropy_src_pkg::*; #(
 
   import entropy_src_reg_pkg::*;
 
-  localparam int unsigned Clog2EsFifoDepth = $clog2(EsFifoDepth);
-  localparam int unsigned PostHTWidth = 64;
-  localparam int unsigned RngBusWidth = 4;
-  localparam int unsigned HalfRegWidth = 16;
-  localparam int unsigned FullRegWidth = 32;
-  localparam int unsigned EigthRegWidth = 4;
-  localparam int unsigned SeedLen = 384;
+  localparam int Clog2EsFifoDepth = $clog2(EsFifoDepth);
+  localparam int PostHTWidth = 64;
+  localparam int RngBusWidth = 4;
+  localparam int HalfRegWidth = 16;
+  localparam int FullRegWidth = 32;
+  localparam int EigthRegWidth = 4;
+  localparam int SeedLen = 384;
 
   // signals
   logic [RngBusWidth-1:0] lfsr_value;

ParseResult:
INS HdlIdDef@@Clog2EsFifoDepth to objs

INS HdlIdDef@@PostHTWidth to objs
HdlIdDef: PostHTWidth
    HdlValueId: int
    HdlValueInt: 64
    HdlDirection: INTERNAL

INS HdlIdDef@@RngBusWidth to objs
HdlIdDef: RngBusWidth
    HdlValueId: int
    HdlValueInt: 4
    HdlDirection: INTERNAL

INS HdlIdDef@@HalfRegWidth to objs
HdlIdDef: HalfRegWidth
    HdlValueId: int
    HdlValueInt: 16
    HdlDirection: INTERNAL

INS HdlIdDef@@FullRegWidth to objs
HdlIdDef: FullRegWidth
    HdlValueId: int
    HdlValueInt: 32
    HdlDirection: INTERNAL

INS HdlIdDef@@EigthRegWidth to objs
HdlIdDef: EigthRegWidth
    HdlValueId: int
    HdlValueInt: 4
    HdlDirection: INTERNAL

INS HdlIdDef@@SeedLen to objs
HdlIdDef: SeedLen
    HdlValueId: int
    HdlValueInt: 384
    HdlDirection: INTERNAL

UPD HdlIdDef@@Clog2EsFifoDepth to Clog2EsFifoDepth
    INS HdlValueId@@int to Clog2EsFifoDepth
    INS HdlDirection@@INTERNAL to Clog2EsFifoDepth

UPD HdlIdDef@@Clog2EsFifoDepth to Clog2EsFifoDepth
    MOV HdlOp@@CALL to Clog2EsFifoDepth
    HdlOp: CALL
        list: ops
            HdlValueId: $clog2
            HdlValueId: EsFifoDepth
    DEL HdlOp@@PARAMETRIZATION from Clog2EsFifoDepth
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: int
            HdlOp: MAP_ASSOCIATION
                list: ops
                    HdlValueId: signed
    DEL HdlDirection@@INTERNAL from Clog2EsFifoDepth

DEL HdlIdDef@@Clog2EsFifoDepth from objs

DEL HdlIdDef@@PostHTWidth from objs
HdlIdDef: PostHTWidth
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: int
            HdlOp: MAP_ASSOCIATION
                list: ops
                    HdlValueId: signed
    HdlValueInt: 64
    HdlDirection: INTERNAL

DEL HdlIdDef@@RngBusWidth from objs
HdlIdDef: RngBusWidth
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: int
            HdlOp: MAP_ASSOCIATION
                list: ops
                    HdlValueId: signed
    HdlValueInt: 4
    HdlDirection: INTERNAL

DEL HdlIdDef@@HalfRegWidth from objs
HdlIdDef: HalfRegWidth
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: int
            HdlOp: MAP_ASSOCIATION
                list: ops
                    HdlValueId: signed
    HdlValueInt: 16
    HdlDirection: INTERNAL

DEL HdlIdDef@@FullRegWidth from objs
HdlIdDef: FullRegWidth
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: int
            HdlOp: MAP_ASSOCIATION
                list: ops
                    HdlValueId: signed
    HdlValueInt: 32
    HdlDirection: INTERNAL

DEL HdlIdDef@@EigthRegWidth from objs
HdlIdDef: EigthRegWidth
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: int
            HdlOp: MAP_ASSOCIATION
                list: ops
                    HdlValueId: signed
    HdlValueInt: 4
    HdlDirection: INTERNAL

DEL HdlIdDef@@SeedLen from objs
HdlIdDef: SeedLen
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: int
            HdlOp: MAP_ASSOCIATION
                list: ops
                    HdlValueId: signed
    HdlValueInt: 384
    HdlDirection: INTERNAL


CommitId: 2de46f6dd9a3db8d3425364c0b834d63d0b7a3b6
[entropy_src/rtl] fixes to address issue #3511
--- a/hw/ip/entropy_src/rtl/entropy_src_core.sv
+++ b/hw/ip/entropy_src/rtl/entropy_src_core.sv
@@ -72,8 +72,9 @@ module entropy_src_core import entropy_src_pkg::*; #(
   logic                   sfifo_esrng_push;
   logic                   sfifo_esrng_pop;
   logic                   sfifo_esrng_clr;
+  logic                   sfifo_esrng_not_full;
   logic                   sfifo_esrng_not_empty;
-  logic                   sfifo_esrng_err;
+  logic [2:0]             sfifo_esrng_err;
 
   logic [Clog2EsFifoDepth:0] sfifo_esfinal_depth;
   logic [(1+SeedLen)-1:0] sfifo_esfinal_wdata;

ParseResult:
MOV HdlIdDef@@sfifo_esrng_not_empty to objs
HdlIdDef: sfifo_esrng_not_empty
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

UPD HdlIdDef@@sfifo_esrng_err to sfifo_esrng_not_full

INS HdlIdDef@@sfifo_esrng_err to objs
HdlIdDef: sfifo_esrng_err
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 2
                    HdlValueInt: 0
    HdlDirection: INTERNAL


CommitId: 2de46f6dd9a3db8d3425364c0b834d63d0b7a3b6
[entropy_src/rtl] fixes to address issue #3511
--- a/hw/ip/entropy_src/rtl/entropy_src_core.sv
+++ b/hw/ip/entropy_src/rtl/entropy_src_core.sv
@@ -83,7 +84,7 @@ module entropy_src_core import entropy_src_pkg::*; #(
   logic                   sfifo_esfinal_clr;
   logic                   sfifo_esfinal_not_full;
   logic                   sfifo_esfinal_not_empty;
-  logic                   sfifo_esfinal_err;
+  logic [2:0]             sfifo_esfinal_err;
   logic [SeedLen-1:0]     esfinal_data;
   logic                   esfinal_fips_flag;
 

ParseResult:
MOV HdlIdDef@@sfifo_esfinal_err to objs
HdlIdDef: sfifo_esfinal_err
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

INS HdlIdDef@@sfifo_esfinal_err to objs
HdlIdDef: sfifo_esfinal_err
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 2
                    HdlValueInt: 0
    HdlDirection: INTERNAL

UPD HdlIdDef@@sfifo_esfinal_err to markov_hi_fail_pulse


CommitId: 2de46f6dd9a3db8d3425364c0b834d63d0b7a3b6
[entropy_src/rtl] fixes to address issue #3511
--- a/hw/ip/entropy_src/rtl/entropy_src_core.sv
+++ b/hw/ip/entropy_src/rtl/entropy_src_core.sv
@@ -153,15 +154,24 @@ module entropy_src_core import entropy_src_pkg::*; #(
   logic [EigthRegWidth-1:0] bucket_fail_count;
   logic                     bucket_fail_pulse;
 
-  logic [HalfRegWidth-1:0] markov_fips_threshold;
-  logic [HalfRegWidth-1:0] markov_bypass_threshold;
-  logic [HalfRegWidth-1:0] markov_threshold;
-  logic [HalfRegWidth-1:0] markov_event_cnt;
-  logic [HalfRegWidth-1:0] markov_event_hwm_fips;
-  logic [HalfRegWidth-1:0] markov_event_hwm_bypass;
-  logic [FullRegWidth-1:0] markov_total_fails;
-  logic [EigthRegWidth-1:0] markov_fail_count;
-  logic                     markov_fail_pulse;
+  logic [HalfRegWidth-1:0] markov_hi_fips_threshold;
+  logic [HalfRegWidth-1:0] markov_hi_bypass_threshold;
+  logic [HalfRegWidth-1:0] markov_hi_threshold;
+  logic [HalfRegWidth-1:0] markov_lo_fips_threshold;
+  logic [HalfRegWidth-1:0] markov_lo_bypass_threshold;
+  logic [HalfRegWidth-1:0] markov_lo_threshold;
+  logic [HalfRegWidth-1:0] markov_hi_event_cnt;
+  logic [HalfRegWidth-1:0] markov_lo_event_cnt;
+  logic [HalfRegWidth-1:0] markov_hi_event_hwm_fips;
+  logic [HalfRegWidth-1:0] markov_hi_event_hwm_bypass;
+  logic [HalfRegWidth-1:0] markov_lo_event_hwm_fips;
+  logic [HalfRegWidth-1:0] markov_lo_event_hwm_bypass;
+  logic [FullRegWidth-1:0] markov_hi_total_fails;
+  logic [FullRegWidth-1:0] markov_lo_total_fails;
+  logic [EigthRegWidth-1:0] markov_hi_fail_count;
+  logic [EigthRegWidth-1:0] markov_lo_fail_count;
+  logic                     markov_hi_fail_pulse;
+  logic                     markov_lo_fail_pulse;
 
   logic [HalfRegWidth-1:0] extht_hi_fips_threshold;
   logic [HalfRegWidth-1:0] extht_hi_bypass_threshold;

ParseResult:
MOV HdlIdDef@@markov_event_hwm_bypass to objs
HdlIdDef: markov_event_hwm_bypass
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlOp: SUB
                        list: ops
                            HdlValueId: HalfRegWidth
                            HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: INTERNAL

MOV HdlIdDef@@markov_event_hwm_fips to objs
HdlIdDef: markov_event_hwm_fips
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlOp: SUB
                        list: ops
                            HdlValueId: HalfRegWidth
                            HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: INTERNAL

MOV HdlIdDef@@markov_event_cnt to objs
HdlIdDef: markov_event_cnt
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlOp: SUB
                        list: ops
                            HdlValueId: HalfRegWidth
                            HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: INTERNAL

INS HdlIdDef@@markov_hi_fips_threshold to objs
HdlIdDef: markov_hi_fips_threshold
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlOp: SUB
                        list: ops
                            HdlValueId: HalfRegWidth
                            HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: INTERNAL

INS HdlIdDef@@markov_hi_bypass_threshold to objs
HdlIdDef: markov_hi_bypass_threshold
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlOp: SUB
                        list: ops
                            HdlValueId: HalfRegWidth
                            HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: INTERNAL

INS HdlIdDef@@markov_hi_threshold to objs
HdlIdDef: markov_hi_threshold
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlOp: SUB
                        list: ops
                            HdlValueId: HalfRegWidth
                            HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: INTERNAL

INS HdlIdDef@@markov_lo_fips_threshold to objs
HdlIdDef: markov_lo_fips_threshold
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlOp: SUB
                        list: ops
                            HdlValueId: HalfRegWidth
                            HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: INTERNAL

INS HdlIdDef@@markov_lo_bypass_threshold to objs
HdlIdDef: markov_lo_bypass_threshold
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlOp: SUB
                        list: ops
                            HdlValueId: HalfRegWidth
                            HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: INTERNAL

INS HdlIdDef@@markov_lo_threshold to objs
HdlIdDef: markov_lo_threshold
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlOp: SUB
                        list: ops
                            HdlValueId: HalfRegWidth
                            HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: INTERNAL

UPD HdlIdDef@@markov_event_hwm_bypass to markov_hi_event_cnt

UPD HdlIdDef@@markov_event_hwm_fips to markov_lo_event_cnt

UPD HdlIdDef@@markov_event_cnt to markov_hi_event_hwm_fips

UPD HdlIdDef@@markov_fips_threshold to markov_hi_event_hwm_bypass

UPD HdlIdDef@@markov_bypass_threshold to markov_lo_event_hwm_fips

UPD HdlIdDef@@markov_threshold to markov_lo_event_hwm_bypass

INS HdlIdDef@@markov_hi_total_fails to objs
HdlIdDef: markov_hi_total_fails
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlOp: SUB
                        list: ops
                            HdlValueId: FullRegWidth
                            HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: INTERNAL

UPD HdlIdDef@@markov_total_fails to markov_lo_total_fails

INS HdlIdDef@@markov_hi_fail_count to objs
HdlIdDef: markov_hi_fail_count
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlOp: SUB
                        list: ops
                            HdlValueId: EigthRegWidth
                            HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: INTERNAL

UPD HdlIdDef@@markov_fail_count to markov_lo_fail_count

UPD HdlIdDef@@markov_fail_pulse to markov_lo_fail_pulse


CommitId: 2de46f6dd9a3db8d3425364c0b834d63d0b7a3b6
[entropy_src/rtl] fixes to address issue #3511
--- a/hw/ip/entropy_src/rtl/entropy_src_core.sv
+++ b/hw/ip/entropy_src/rtl/entropy_src_core.sv
@@ -231,6 +241,7 @@ module entropy_src_core import entropy_src_pkg::*; #(
   logic        ht_esbus_vld_dly2_q, ht_esbus_vld_dly2_d;
   logic        boot_bypass_q, boot_bypass_d;
   logic        ht_failed_q, ht_failed_d;
+  logic [HalfRegWidth-1:0] window_cntr_q, window_cntr_d;
 
   always_ff @(posedge clk_i or negedge rst_ni)
     if (!rst_ni) begin

ParseResult:
INS HdlIdDef@@window_cntr_q to objs
HdlIdDef: window_cntr_q
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlOp: SUB
                        list: ops
                            HdlValueId: HalfRegWidth
                            HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: INTERNAL

INS HdlIdDef@@window_cntr_d to objs
HdlIdDef: window_cntr_d
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlOp: SUB
                        list: ops
                            HdlValueId: HalfRegWidth
                            HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: INTERNAL


CommitId: 2de46f6dd9a3db8d3425364c0b834d63d0b7a3b6
[entropy_src/rtl] fixes to address issue #3511
--- a/hw/ip/entropy_src/rtl/entropy_src_core.sv
+++ b/hw/ip/entropy_src/rtl/entropy_src_core.sv
@@ -241,6 +252,7 @@ module entropy_src_core import entropy_src_pkg::*; #(
       ht_esbus_dly_q        <= '0;
       ht_esbus_vld_dly_q    <= '0;
       ht_esbus_vld_dly2_q   <= '0;
+      window_cntr_q         <= '0;
     end else begin
       es_rate_cntr_q        <= es_rate_cntr_d;
       lfsr_incr_dly_q       <= lfsr_incr_dly_d;

ParseResult:
INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: window_cntr_q


CommitId: 2de46f6dd9a3db8d3425364c0b834d63d0b7a3b6
[entropy_src/rtl] fixes to address issue #3511
--- a/hw/ip/entropy_src/rtl/entropy_src_core.sv
+++ b/hw/ip/entropy_src/rtl/entropy_src_core.sv
@@ -249,6 +261,7 @@ module entropy_src_core import entropy_src_pkg::*; #(
       ht_esbus_dly_q        <= ht_esbus_dly_d;
       ht_esbus_vld_dly_q    <= ht_esbus_vld_dly_d;
       ht_esbus_vld_dly2_q   <= ht_esbus_vld_dly2_d;
+      window_cntr_q         <= window_cntr_d;
     end
 
   assign es_enable = (|reg2hw.conf.enable.q);

ParseResult:
INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueId: window_cntr_d
    HdlValueId: window_cntr_q


CommitId: 2de46f6dd9a3db8d3425364c0b834d63d0b7a3b6
[entropy_src/rtl] fixes to address issue #3511
--- a/hw/ip/entropy_src/rtl/entropy_src_core.sv
+++ b/hw/ip/entropy_src/rtl/entropy_src_core.sv
@@ -401,7 +442,9 @@ module entropy_src_core import entropy_src_pkg::*; #(
 
   // fifo err
   assign sfifo_esrng_err =
-         (sfifo_esrng_pop && !sfifo_esrng_not_empty );
+         {1'b0,
+         (sfifo_esrng_pop && !sfifo_esrng_not_empty),
+         (!sfifo_esrng_not_full && !sfifo_esrng_not_empty)};
 
 
   // pack esrng bus into signal bit packer

ParseResult:
INS HdlStmAssign@@ to objs

UPD HdlStmAssign@@ to 
    MOV HdlOp@@AND_LOG to 
    HdlOp: AND_LOG
        list: ops
            HdlValueId: sfifo_esrng_pop
            HdlOp: NEG_LOG
                list: ops
                    HdlValueId: sfifo_esrng_not_empty
    DEL HdlValueId@@sfifo_esrng_err from 

DEL HdlStmAssign@@ from objs


CommitId: 2de46f6dd9a3db8d3425364c0b834d63d0b7a3b6
[entropy_src/rtl] fixes to address issue #3511
--- a/hw/ip/entropy_src/rtl/entropy_src_core.sv
+++ b/hw/ip/entropy_src/rtl/entropy_src_core.sv
@@ -462,17 +505,24 @@ module entropy_src_core import entropy_src_pkg::*; #(
   assign repcnt_fips_threshold = reg2hw.repcnt_thresholds.fips_repcnt_thresh.q;
   assign repcnt_bypass_threshold = reg2hw.repcnt_thresholds.bypass_repcnt_thresh.q;
 
+
   assign adaptp_hi_fips_threshold = reg2hw.adaptp_hi_thresholds.fips_adaptp_hi_thresh.q;
   assign adaptp_hi_bypass_threshold = reg2hw.adaptp_hi_thresholds.bypass_adaptp_hi_thresh.q;
 
   assign adaptp_lo_fips_threshold = reg2hw.adaptp_lo_thresholds.fips_adaptp_lo_thresh.q;
   assign adaptp_lo_bypass_threshold = reg2hw.adaptp_lo_thresholds.bypass_adaptp_lo_thresh.q;
 
+
   assign bucket_fips_threshold = reg2hw.bucket_thresholds.fips_bucket_thresh.q;
   assign bucket_bypass_threshold = reg2hw.bucket_thresholds.bypass_bucket_thresh.q;
 
-  assign markov_fips_threshold = reg2hw.markov_thresholds.fips_markov_thresh.q;
-  assign markov_bypass_threshold = reg2hw.markov_thresholds.bypass_markov_thresh.q;
+
+  assign markov_hi_fips_threshold = reg2hw.markov_hi_thresholds.fips_markov_hi_thresh.q;
+  assign markov_hi_bypass_threshold = reg2hw.markov_hi_thresholds.bypass_markov_hi_thresh.q;
+
+  assign markov_lo_fips_threshold = reg2hw.markov_lo_thresholds.fips_markov_lo_thresh.q;
+  assign markov_lo_bypass_threshold = reg2hw.markov_lo_thresholds.bypass_markov_lo_thresh.q;
+
 
   assign extht_hi_fips_threshold = reg2hw.extht_hi_thresholds.fips_extht_hi_thresh.q;
   assign extht_hi_bypass_threshold = reg2hw.extht_hi_thresholds.bypass_extht_hi_thresh.q;

ParseResult:
INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: DOT
        list: ops
            HdlOp: DOT
                list: ops
                    HdlOp: DOT
                        list: ops
                            HdlValueId: reg2hw
                            HdlValueId: markov_hi_thresholds
                    HdlValueId: fips_markov_hi_thresh
            HdlValueId: q
    HdlValueId: markov_hi_fips_threshold

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: DOT
        list: ops
            HdlOp: DOT
                list: ops
                    HdlOp: DOT
                        list: ops
                            HdlValueId: reg2hw
                            HdlValueId: markov_hi_thresholds
                    HdlValueId: bypass_markov_hi_thresh
            HdlValueId: q
    HdlValueId: markov_hi_bypass_threshold

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: DOT
        list: ops
            HdlOp: DOT
                list: ops
                    HdlOp: DOT
                        list: ops
                            HdlValueId: reg2hw
                            HdlValueId: markov_lo_thresholds
                    HdlValueId: fips_markov_lo_thresh
            HdlValueId: q
    HdlValueId: markov_lo_fips_threshold

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: DOT
        list: ops
            HdlOp: DOT
                list: ops
                    HdlOp: DOT
                        list: ops
                            HdlValueId: reg2hw
                            HdlValueId: markov_lo_thresholds
                    HdlValueId: bypass_markov_lo_thresh
            HdlValueId: q
    HdlValueId: markov_lo_bypass_threshold

DEL HdlStmAssign@@ from objs
HdlStmAssign
    HdlOp: DOT
        list: ops
            HdlOp: DOT
                list: ops
                    HdlOp: DOT
                        list: ops
                            HdlValueId: reg2hw
                            HdlValueId: markov_thresholds
                    HdlValueId: fips_markov_thresh
            HdlValueId: q
    HdlValueId: markov_fips_threshold

DEL HdlStmAssign@@ from objs
HdlStmAssign
    HdlOp: DOT
        list: ops
            HdlOp: DOT
                list: ops
                    HdlOp: DOT
                        list: ops
                            HdlValueId: reg2hw
                            HdlValueId: markov_thresholds
                    HdlValueId: bypass_markov_thresh
            HdlValueId: q
    HdlValueId: markov_bypass_threshold


CommitId: 2de46f6dd9a3db8d3425364c0b834d63d0b7a3b6
[entropy_src/rtl] fixes to address issue #3511
--- a/hw/ip/entropy_src/rtl/entropy_src_core.sv
+++ b/hw/ip/entropy_src/rtl/entropy_src_core.sv
@@ -488,7 +538,10 @@ module entropy_src_core import entropy_src_pkg::*; #(
   assign adaptp_lo_threshold = es_bypass_mode ? adaptp_lo_bypass_threshold :
          adaptp_lo_fips_threshold;
   assign bucket_threshold = es_bypass_mode ? bucket_bypass_threshold : bucket_fips_threshold;
-  assign markov_threshold = es_bypass_mode ? markov_bypass_threshold : markov_fips_threshold;
+  assign markov_hi_threshold = es_bypass_mode ? markov_hi_bypass_threshold :
+         markov_hi_fips_threshold;
+  assign markov_lo_threshold = es_bypass_mode ? markov_lo_bypass_threshold :
+         markov_lo_fips_threshold;
   assign extht_hi_threshold = es_bypass_mode ? extht_hi_bypass_threshold :
          extht_hi_fips_threshold;
   assign extht_lo_threshold = es_bypass_mode ? extht_lo_bypass_threshold :

ParseResult:
INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: TERNARY
        list: ops
            HdlValueId: es_bypass_mode
            HdlValueId: markov_hi_bypass_threshold
            HdlValueId: markov_hi_fips_threshold
    HdlValueId: markov_hi_threshold

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: TERNARY
        list: ops
            HdlValueId: es_bypass_mode
            HdlValueId: markov_lo_bypass_threshold
            HdlValueId: markov_lo_fips_threshold
    HdlValueId: markov_lo_threshold

DEL HdlStmAssign@@ from objs
HdlStmAssign
    HdlOp: TERNARY
        list: ops
            HdlValueId: es_bypass_mode
            HdlValueId: markov_bypass_threshold
            HdlValueId: markov_fips_threshold
    HdlValueId: markov_threshold


CommitId: 2de46f6dd9a3db8d3425364c0b834d63d0b7a3b6
[entropy_src/rtl] fixes to address issue #3511
--- a/hw/ip/entropy_src/rtl/entropy_src_core.sv
+++ b/hw/ip/entropy_src/rtl/entropy_src_core.sv
@@ -507,6 +560,20 @@ module entropy_src_core import entropy_src_pkg::*; #(
 
   assign es_bypass_mode = boot_bypass_q || es_bypass_to_sw;
 
+  //--------------------------------------------
+  // common health test window counter
+  //--------------------------------------------
+
+  // Window counter
+  assign window_cntr_d =
+         health_test_clr ? '0 :
+         health_test_done_pulse ? '0  :
+         health_test_esbus_vld ? (window_cntr_q+1) :
+         window_cntr_q;
+
+  // Window wrap condition
+  assign health_test_done_pulse = (window_cntr_q == health_test_window);
+
   //--------------------------------------------
   // repetitive count test
   //--------------------------------------------

ParseResult:
INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: TERNARY
        list: ops
            HdlValueId: health_test_clr
            HdlValueInt: 0
            HdlOp: TERNARY
                list: ops
                    HdlValueId: health_test_done_pulse
                    HdlValueInt: 0
                    HdlOp: TERNARY
                        list: ops
                            HdlValueId: health_test_esbus_vld
                            HdlOp: ADD
                                list: ops
                                    HdlValueId: window_cntr_q
                                    HdlValueInt: 1
                            HdlValueId: window_cntr_q
    HdlValueId: window_cntr_d

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: EQ
        list: ops
            HdlValueId: window_cntr_q
            HdlValueId: health_test_window
    HdlValueId: health_test_done_pulse


CommitId: 2de46f6dd9a3db8d3425364c0b834d63d0b7a3b6
[entropy_src/rtl] fixes to address issue #3511
--- a/hw/ip/entropy_src/rtl/entropy_src_core.sv
+++ b/hw/ip/entropy_src/rtl/entropy_src_core.sv
@@ -925,9 +1032,15 @@ module entropy_src_core import entropy_src_pkg::*; #(
     .value_o             (any_fail_count)
   );
 
-  assign any_active = repcnt_active || adaptp_active || bucket_active || markov_active;
-  assign any_fail_pulse = repcnt_fail_pulse || adaptp_hi_fail_pulse || adaptp_lo_fail_pulse ||
-         bucket_fail_pulse || markov_fail_pulse;
+  assign any_active = repcnt_active || adaptp_active ||
+         bucket_active || markov_active || extht_active;
+
+  assign any_fail_pulse =
+         repcnt_fail_pulse ||
+         adaptp_hi_fail_pulse || adaptp_lo_fail_pulse ||
+         bucket_fail_pulse ||
+         markov_hi_fail_pulse ||markov_lo_fail_pulse ||
+         extht_hi_fail_pulse || extht_lo_fail_pulse;
 
 
   assign ht_failed_d = sfifo_esfinal_push ? 1'b0 :

ParseResult:
UPD HdlStmAssign@@ to 
    MOV HdlOp@@OR_LOG to 
    HdlOp: OR_LOG
        list: ops
            HdlOp: OR_LOG
                list: ops
                    HdlOp: OR_LOG
                        list: ops
                            HdlValueId: repcnt_active
                            HdlValueId: adaptp_active
                    HdlValueId: bucket_active
            HdlValueId: markov_active

UPD HdlStmAssign@@ to 
    MOV HdlOp@@OR_LOG to 
    HdlOp: OR_LOG
        list: ops
            HdlOp: OR_LOG
                list: ops
                    HdlOp: OR_LOG
                        list: ops
                            HdlOp: OR_LOG
                                list: ops
                                    HdlValueId: repcnt_fail_pulse
                                    HdlValueId: adaptp_hi_fail_pulse
                            HdlValueId: adaptp_lo_fail_pulse
                    HdlValueId: bucket_fail_pulse
            HdlValueId: markov_fail_pulse
    UPD HdlOp@@OR_LOG to OR_LOG
        UPD HdlValueId@@markov_fail_pulse to markov_hi_fail_pulse


CommitId: 2de46f6dd9a3db8d3425364c0b834d63d0b7a3b6
[entropy_src/rtl] fixes to address issue #3511
--- a/hw/ip/entropy_src/rtl/entropy_src_core.sv
+++ b/hw/ip/entropy_src/rtl/entropy_src_core.sv
@@ -1002,19 +1115,32 @@ module entropy_src_core import entropy_src_pkg::*; #(
   assign hw2reg.alert_fail_counts.bucket_fail_count.d = bucket_fail_count;
 
 
-  // markov fail counter
+  // markov fail counter hi and lo
+  entropy_src_cntr_reg #(
+    .RegWidth(EigthRegWidth)
+  ) u_entropy_src_cntr_reg_markov_alert_hi_fails (
+    .clk_i               (clk_i),
+    .rst_ni              (rst_ni),
+    .clear_i             (alert_cntrs_clr),
+    .active_i            (markov_active),
+    .event_i             (markov_hi_fail_pulse),
+    .value_o             (markov_hi_fail_count)
+  );
+
+  assign hw2reg.alert_fail_counts.markov_hi_fail_count.d = markov_hi_fail_count;
+
   entropy_src_cntr_reg #(
     .RegWidth(EigthRegWidth)
-  ) u_entropy_src_cntr_reg_markov_alert_fails (
+  ) u_entropy_src_cntr_reg_markov_alert_lo_fails (
     .clk_i               (clk_i),
     .rst_ni              (rst_ni),
     .clear_i             (alert_cntrs_clr),
     .active_i            (markov_active),
-    .event_i             (markov_fail_pulse),
-    .value_o             (markov_fail_count)
+    .event_i             (markov_lo_fail_pulse),
+    .value_o             (markov_lo_fail_count)
   );
 
-  assign hw2reg.alert_fail_counts.markov_fail_count.d = markov_fail_count;
+  assign hw2reg.alert_fail_counts.markov_lo_fail_count.d = markov_lo_fail_count;
 
   // extht fail counter hi and lo
   entropy_src_cntr_reg #(

ParseResult:
INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlValueId: markov_hi_fail_count
    HdlValueId: hw2reg

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlValueId: markov_lo_fail_count
    HdlValueId: hw2reg

DEL HdlStmAssign@@ from objs
HdlStmAssign
    HdlValueId: markov_fail_count
    HdlValueId: hw2reg


CommitId: 2de46f6dd9a3db8d3425364c0b834d63d0b7a3b6
[entropy_src/rtl] fixes to address issue #3511
--- a/hw/ip/entropy_src/rtl/entropy_src_core.sv
+++ b/hw/ip/entropy_src/rtl/entropy_src_core.sv
@@ -1190,8 +1316,9 @@ module entropy_src_core import entropy_src_pkg::*; #(
 
   // fifo err
   assign sfifo_esfinal_err =
-         (sfifo_esfinal_push && !sfifo_esfinal_not_full) |
-         (sfifo_esfinal_pop && !sfifo_esfinal_not_empty );
+         {(sfifo_esfinal_push && !sfifo_esfinal_not_full),
+          (sfifo_esfinal_pop && !sfifo_esfinal_not_empty),
+          (!sfifo_esfinal_not_full && !sfifo_esfinal_not_empty)};
 
   // drive out hw interface
   assign es_hw_if_req = entropy_src_hw_if_i.es_req;
ParseResult:
UPD HdlStmAssign@@ to 
    UPD HdlOp@@OR to CONCAT
    MOV HdlOp@@OR to 
    HdlOp: OR
        list: ops
            HdlOp: AND_LOG
                list: ops
                    HdlValueId: sfifo_esfinal_push
                    HdlOp: NEG_LOG
                        list: ops
                            HdlValueId: sfifo_esfinal_not_full
            HdlOp: AND_LOG
                list: ops
                    HdlValueId: sfifo_esfinal_pop
                    HdlOp: NEG_LOG
                        list: ops
                            HdlValueId: sfifo_esfinal_not_empty


CommitId: 53ef2ec43c1c1eb00b771e17fc157f5bb1103ed5
Update lowrisc_ibex to lowRISC/ibex@d14312c
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_decoder.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_decoder.sv
@@ -82,7 +64,7 @@ module ibex_decoder #(
     // CSRs
     output logic                 csr_access_o,          // access to CSR
     output ibex_pkg::csr_op_e    csr_op_o,              // operation to perform on CSR
-    output logic                 csr_status_o,          // access to xstatus CSR
+    output logic                 csr_pipe_flush_o,      // CSR-related pipeline flush
 
     // LSU
     output logic                 data_req_o,            // start transaction to data memory

ParseResult:
UPD HdlIdDef@@csr_status_o to csr_pipe_flush_o


CommitId: 53ef2ec43c1c1eb00b771e17fc157f5bb1103ed5
Update lowrisc_ibex to lowRISC/ibex@d14312c
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_decoder.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_decoder.sv
@@ -91,7 +73,6 @@ module ibex_decoder #(
                                                         // word or word
     output logic                 data_sign_extension_o, // sign extension for data read from
                                                         // memory
-    output logic [1:0]           data_reg_offset_o,     // register byte offset for stores
 
     // jump/branches
     output logic                 jump_in_dec_o,         // jump is being calculated in ALU

ParseResult:
DEL HdlIdDef@@data_reg_offset_o from ports
HdlIdDef: data_reg_offset_o
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: OUT


CommitId: 53ef2ec43c1c1eb00b771e17fc157f5bb1103ed5
Update lowrisc_ibex to lowRISC/ibex@d14312c
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_decoder.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_decoder.sv
@@ -183,14 +190,12 @@ module ibex_decoder #(
     regfile_we                  = 1'b0;
 
     csr_access_o                = 1'b0;
-    csr_status_o                = 1'b0;
     csr_illegal                 = 1'b0;
     csr_op                      = CSR_OP_READ;
 
     data_we_o                   = 1'b0;
     data_type_o                 = 2'b00;
     data_sign_extension_o       = 1'b0;
-    data_reg_offset_o           = 2'b00;
     data_req_o                  = 1'b0;
 
     illegal_insn                = 1'b0;

ParseResult:
UPD HdlStmProcess@@ to 
    INS HdlStmProcessTriggerConstrain@@COMB to 

UPD HdlStmCase@@opcode to opcode
    INS HdlStmCaseType@@CASE to opcode
    INS HdlValueId@@opcode to opcode
    INS HdlStmCaseUniqConstrain@@UNIQUE to opcode

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: csr_status_o
                HdlValueInt: 0
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: data_reg_offset_o
                HdlValueInt: 00
    DEL HdlStmProcessTriggerConstrain@@COMB from 


CommitId: 53ef2ec43c1c1eb00b771e17fc157f5bb1103ed5
Update lowrisc_ibex to lowRISC/ibex@d14312c
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_decoder.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_decoder.sv
@@ -555,17 +560,6 @@ module ibex_decoder #(
             default: csr_illegal = 1'b1;
           endcase
 
-          if (!csr_illegal) begin
-            // flush pipeline on access to mstatus or debug CSRs
-            if (csr_num_e'(instr[31:20]) == CSR_MSTATUS   ||
-                csr_num_e'(instr[31:20]) == CSR_DCSR      ||
-                csr_num_e'(instr[31:20]) == CSR_DPC       ||
-                csr_num_e'(instr[31:20]) == CSR_DSCRATCH0 ||
-                csr_num_e'(instr[31:20]) == CSR_DSCRATCH1) begin
-              csr_status_o = 1'b1;
-            end
-          end
-
           illegal_insn = csr_illegal;
         end
 
ParseResult:
UPD HdlStmProcess@@ to 
    INS HdlStmProcessTriggerConstrain@@COMB to 

MOV HdlStmIf@@ to body
HdlStmIf
    HdlOp: NEG_LOG
        list: ops
            HdlValueId: csr_illegal
    HdlStmBlock: SEQ
        list: body
            HdlStmIf
                HdlOp: OR_LOG
                    list: ops
                        HdlOp: OR_LOG
                            list: ops
                                HdlOp: OR_LOG
                                    list: ops
                                        HdlOp: OR_LOG
                                            list: ops
                                                HdlOp: EQ
                                                    list: ops
                                                        HdlOp: CALL
                                                            list: ops
                                                                HdlValueId: csr_num_e
                                                                HdlOp: INDEX
                                                                    list: ops
                                                                        HdlValueId: instr
                                                                        HdlOp: DOWNTO
                                                                            list: ops
                                                                                HdlValueInt: 31
                                                                                HdlValueInt: 20
                                                        HdlValueId: CSR_MSTATUS
                                                HdlOp: EQ
                                                    list: ops
                                                        HdlOp: CALL
                                                            list: ops
                                                                HdlValueId: csr_num_e
                                                                HdlOp: INDEX
                                                                    list: ops
                                                                        HdlValueId: instr
                                                                        HdlOp: DOWNTO
                                                                            list: ops
                                                                                HdlValueInt: 31
                                                                                HdlValueInt: 20
                                                        HdlValueId: CSR_DCSR
                                        HdlOp: EQ
                                            list: ops
                                                HdlOp: CALL
                                                    list: ops
                                                        HdlValueId: csr_num_e
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlValueId: instr
                                                                HdlOp: DOWNTO
                                                                    list: ops
                                                                        HdlValueInt: 31
                                                                        HdlValueInt: 20
                                                HdlValueId: CSR_DPC
                                HdlOp: EQ
                                    list: ops
                                        HdlOp: CALL
                                            list: ops
                                                HdlValueId: csr_num_e
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: instr
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 31
                                                                HdlValueInt: 20
                                        HdlValueId: CSR_DSCRATCH0
                        HdlOp: EQ
                            list: ops
                                HdlOp: CALL
                                    list: ops
                                        HdlValueId: csr_num_e
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: instr
                                                HdlOp: DOWNTO
                                                    list: ops
                                                        HdlValueInt: 31
                                                        HdlValueInt: 20
                                HdlValueId: CSR_DSCRATCH1
                HdlStmBlock: SEQ
                    list: body
                        HdlOp: ASSIGN
                            list: ops
                                HdlValueId: csr_status_o
                                HdlValueInt: 1
                list: elifs
    list: elifs

UPD HdlStmIf@@ to 
    UPD HdlOp@@NEG_LOG to OR_LOG
    MOV HdlOp@@NEG_LOG to 
    HdlOp: NEG_LOG
        list: ops
            HdlValueId: csr_illegal
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlStmIf
                HdlOp: OR_LOG
                    list: ops
                        HdlOp: OR_LOG
                            list: ops
                                HdlOp: OR_LOG
                                    list: ops
                                        HdlOp: OR_LOG
                                            list: ops
                                                HdlOp: EQ
                                                    list: ops
                                                        HdlOp: CALL
                                                            list: ops
                                                                HdlValueId: csr_num_e
                                                                HdlOp: INDEX
                                                                    list: ops
                                                                        HdlValueId: instr
                                                                        HdlOp: DOWNTO
                                                                            list: ops
                                                                                HdlValueInt: 31
                                                                                HdlValueInt: 20
                                                        HdlValueId: CSR_MSTATUS
                                                HdlOp: EQ
                                                    list: ops
                                                        HdlOp: CALL
                                                            list: ops
                                                                HdlValueId: csr_num_e
                                                                HdlOp: INDEX
                                                                    list: ops
                                                                        HdlValueId: instr
                                                                        HdlOp: DOWNTO
                                                                            list: ops
                                                                                HdlValueInt: 31
                                                                                HdlValueInt: 20
                                                        HdlValueId: CSR_DCSR
                                        HdlOp: EQ
                                            list: ops
                                                HdlOp: CALL
                                                    list: ops
                                                        HdlValueId: csr_num_e
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlValueId: instr
                                                                HdlOp: DOWNTO
                                                                    list: ops
                                                                        HdlValueInt: 31
                                                                        HdlValueInt: 20
                                                HdlValueId: CSR_DPC
                                HdlOp: EQ
                                    list: ops
                                        HdlOp: CALL
                                            list: ops
                                                HdlValueId: csr_num_e
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: instr
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 31
                                                                HdlValueInt: 20
                                        HdlValueId: CSR_DSCRATCH0
                        HdlOp: EQ
                            list: ops
                                HdlOp: CALL
                                    list: ops
                                        HdlValueId: csr_num_e
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: instr
                                                HdlOp: DOWNTO
                                                    list: ops
                                                        HdlValueInt: 31
                                                        HdlValueInt: 20
                                HdlValueId: CSR_DSCRATCH1
                HdlStmBlock: SEQ
                    list: body
                        HdlOp: ASSIGN
                            list: ops
                                HdlValueId: csr_status_o
                                HdlValueInt: 1
                list: elifs
    UPD HdlOp@@NEG_LOG to NEG_LOG
        MOV list@@ops to NEG_LOG
        list: ops
            HdlValueId: csr_illegal
        UPD HdlValueId@@csr_illegal to csr_op_o
    DEL list@@elifs from 

UPD HdlStmIf@@ to 
    UPD HdlOp@@OR_LOG to OR_LOG
        UPD HdlOp@@OR_LOG to OR_LOG
            UPD HdlOp@@OR_LOG to OR_LOG
                MOV HdlOp@@OR_LOG to ops
                HdlOp: OR_LOG
                    list: ops
                        HdlOp: EQ
                            list: ops
                                HdlOp: CALL
                                    list: ops
                                        HdlValueId: csr_num_e
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: instr
                                                HdlOp: DOWNTO
                                                    list: ops
                                                        HdlValueInt: 31
                                                        HdlValueInt: 20
                                HdlValueId: CSR_MSTATUS
                        HdlOp: EQ
                            list: ops
                                HdlOp: CALL
                                    list: ops
                                        HdlValueId: csr_num_e
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: instr
                                                HdlOp: DOWNTO
                                                    list: ops
                                                        HdlValueInt: 31
                                                        HdlValueInt: 20
                                HdlValueId: CSR_DCSR
                UPD HdlOp@@OR_LOG to OR_LOG
                    MOV HdlOp@@EQ to ops
                    HdlOp: EQ
                        list: ops
                            HdlOp: CALL
                                list: ops
                                    HdlValueId: csr_num_e
                                    HdlOp: INDEX
                                        list: ops
                                            HdlValueId: instr
                                            HdlOp: DOWNTO
                                                list: ops
                                                    HdlValueInt: 31
                                                    HdlValueInt: 20
                            HdlValueId: CSR_DCSR
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@csr_status_o to csr_pipe_flush_o

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: csr_status_o
                HdlValueInt: 0
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: data_reg_offset_o
                HdlValueInt: 00
    DEL HdlStmProcessTriggerConstrain@@COMB from 

UPD HdlStmCase@@opcode to opcode
    DEL HdlStmCaseType@@CASE from opcode
    DEL HdlValueId@@opcode from opcode
    DEL HdlStmCaseUniqConstrain@@UNIQUE from opcode


CommitId: 1a1b94d01fd7022438e2bd651e48ad2d99e3abca
Update lowrisc_ibex to lowRISC/ibex@6b9165f
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_counter.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_counter.sv
@@ -56,7 +56,7 @@ module ibex_counter #(
 `endif
 
   // Counter flop
-  always @(`COUNTER_FLOP_RST) begin
+  always_ff @(`COUNTER_FLOP_RST) begin
     if (!rst_ni) begin
       counter_q <= '0;
     end else begin
ParseResult:
UPD HdlStmProcess@@ to 
    INS HdlStmProcessTriggerConstrain@@FF to 


CommitId: d09aabf89956a6410dd40633b6d3500f1afe3674
[i2c, rtl] Fixes to Lint Errors and Warnings
--- a/hw/ip/i2c/rtl/i2c_core.sv
+++ b/hw/ip/i2c/rtl/i2c_core.sv
@@ -84,6 +84,7 @@ module  i2c_core (
   logic        fmt_fifo_rvalid;
   logic        fmt_fifo_rready;
   logic [12:0] fmt_fifo_rdata;
+  logic        fmt_fifo_full;
   logic [7:0]  fmt_byte;
   logic        fmt_flag_start_before;
   logic        fmt_flag_stop_after;

ParseResult:
INS HdlIdDef@@fmt_fifo_full to objs
HdlIdDef: fmt_fifo_full
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL


CommitId: d09aabf89956a6410dd40633b6d3500f1afe3674
[i2c, rtl] Fixes to Lint Errors and Warnings
--- a/hw/ip/i2c/rtl/i2c_core.sv
+++ b/hw/ip/i2c/rtl/i2c_core.sv
@@ -103,6 +104,7 @@ module  i2c_core (
   logic        rx_fifo_rvalid;
   logic        rx_fifo_rready;
   logic [7:0]  rx_fifo_rdata;
+  logic        rx_fifo_full;
 
   logic        fmt_watermark_d;
   logic        fmt_watermark_q;

ParseResult:
INS HdlIdDef@@rx_fifo_full to objs
HdlIdDef: rx_fifo_full
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL


CommitId: d09aabf89956a6410dd40633b6d3500f1afe3674
[i2c, rtl] Fixes to Lint Errors and Warnings
--- a/hw/ip/i2c/rtl/i2c_core.sv
+++ b/hw/ip/i2c/rtl/i2c_core.sv
@@ -116,6 +118,7 @@ module  i2c_core (
   logic        tx_fifo_rvalid;
   logic        tx_fifo_rready;
   logic [7:0]  tx_fifo_rdata;
+  logic        tx_fifo_full;
 
   logic        acq_fifo_wvalid;
   logic        acq_fifo_wready;

ParseResult:
INS HdlIdDef@@tx_fifo_full to objs
HdlIdDef: tx_fifo_full
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL


CommitId: d09aabf89956a6410dd40633b6d3500f1afe3674
[i2c, rtl] Fixes to Lint Errors and Warnings
--- a/hw/ip/i2c/rtl/i2c_core.sv
+++ b/hw/ip/i2c/rtl/i2c_core.sv
@@ -124,6 +127,7 @@ module  i2c_core (
   logic        acq_fifo_rvalid;
   logic        acq_fifo_rready;
   logic [9:0]  acq_fifo_rdata;
+  logic        acq_fifo_full;
 
   logic        i2c_fifo_txrst;
   logic        i2c_fifo_acqrst;

ParseResult:
INS HdlIdDef@@acq_fifo_full to objs
HdlIdDef: acq_fifo_full
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL


CommitId: 1b5fa9f1ebf0a9520ef6ea6faf1f1a2397a349c1
[verible/style] This corrects several style linter warnings/errors
--- a/hw/ip/usbuart/rtl/usbuart_usbif.sv
+++ b/hw/ip/usbuart/rtl/usbuart_usbif.sv
@@ -34,10 +34,10 @@ module usbuart_usbif (
   output logic [1:0]  parity_o,
   output logic [15:0] baud_o
   );
-  localparam MaxPktSizeByte = 32;
-  localparam PktW = $clog2(MaxPktSizeByte);
-  localparam CtrlEp = 0;
-  localparam FifoEp = 1;
+  localparam int unsigned MaxPktSizeByte = 32;
+  localparam int unsigned PktW = $clog2(MaxPktSizeByte);
+  localparam int unsigned CtrlEp = 0;
+  localparam int unsigned FifoEp = 1;
 
   // us_tick ticks for one cycle every us
   logic [5:0]   ns_cnt;

ParseResult:
UPD HdlIdDef@@MaxPktSizeByte to MaxPktSizeByte
    INS HdlOp@@PARAMETRIZATION to MaxPktSizeByte
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: int
            HdlOp: MAP_ASSOCIATION
                list: ops
                    HdlValueId: signed

UPD HdlIdDef@@PktW to PktW
    INS HdlOp@@PARAMETRIZATION to PktW
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: int
            HdlOp: MAP_ASSOCIATION
                list: ops
                    HdlValueId: signed

UPD HdlIdDef@@CtrlEp to CtrlEp
    INS HdlOp@@PARAMETRIZATION to CtrlEp
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: int
            HdlOp: MAP_ASSOCIATION
                list: ops
                    HdlValueId: signed

UPD HdlIdDef@@FifoEp to FifoEp
    INS HdlOp@@PARAMETRIZATION to FifoEp
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: int
            HdlOp: MAP_ASSOCIATION
                list: ops
                    HdlValueId: signed


CommitId: 309a47974f0ce84cab3d559a85975448dfbd7e2f
[prim] Use prim_pkg::impl_e instead of int for Impl
--- a/hw/ip/prim/abstract/prim_flash.sv
+++ b/hw/ip/prim/abstract/prim_flash.sv
@@ -6,11 +6,11 @@
 // "abstract module". This module is to be replaced by generated code.
 
 `ifndef PRIM_DEFAULT_IMPL
-  `define PRIM_DEFAULT_IMPL integer'(prim_pkg::ImplGeneric)
+  `define PRIM_DEFAULT_IMPL prim_pkg::ImplGeneric
 `endif
 
 module prim_flash #(
-  parameter integer Impl = `PRIM_DEFAULT_IMPL,
+  parameter prim_pkg::impl_e Impl = `PRIM_DEFAULT_IMPL,
 
   parameter int PagesPerBank = 256, // pages per bank
   parameter int WordsPerPage = 256, // words per page

ParseResult:
UPD HdlIdDef@@Impl to Impl
    INS HdlOp@@DOUBLE_COLON to Impl
    INS HdlOp@@DOUBLE_COLON to Impl
    HdlOp: DOUBLE_COLON
        list: ops
            HdlValueId: prim_pkg
            HdlValueId: ImplGeneric
    UPD HdlOp@@DOUBLE_COLON to DOUBLE_COLON
        INS list@@ops to DOUBLE_COLON
        INS HdlValueId@@prim_pkg to ops

UPD HdlIdDef@@Impl to Impl
    UPD HdlValueId@@integer to impl_e
    MOV HdlValueId@@integer to Impl
    HdlValueId: integer
    DEL HdlExprNotImplemented@@value from Impl


CommitId: 309a47974f0ce84cab3d559a85975448dfbd7e2f
[prim] Use prim_pkg::impl_e instead of int for Impl
--- a/hw/ip/prim/abstract/prim_flash.sv
+++ b/hw/ip/prim/abstract/prim_flash.sv
@@ -43,7 +43,7 @@ module prim_flash #(
 
   import prim_pkg::*;
 
-  if (impl_e'(Impl) == ImplGeneric || impl_e'(Impl) == ImplXilinx) begin : gen_flash
+  if (Impl == ImplGeneric || Impl == ImplXilinx) begin : gen_flash
     prim_generic_flash #(
       .PagesPerBank(PagesPerBank),
       .WordsPerPage(WordsPerPage),
ParseResult:
UPD HdlStmIf@@ to 
    UPD HdlOp@@OR_LOG to OR_LOG
        UPD HdlOp@@EQ to EQ
            UPD HdlOp@@CALL to CALL
                MOV HdlValueId@@Impl to ops
                HdlValueId: Impl
                DEL HdlValueId@@impl_e from ops
                DEL list@@ops from CALL
            DEL HdlOp@@CALL from ops
        UPD HdlOp@@EQ to EQ
            UPD HdlOp@@CALL to CALL
                MOV HdlValueId@@Impl to ops
                HdlValueId: Impl
                DEL HdlValueId@@impl_e from ops
                DEL list@@ops from CALL
            DEL HdlOp@@CALL from ops


CommitId: 6faf4f1e71867f869e2086fe141ff1c64ba506f6
[rstmgr / pwrmgr] connect reset requests
--- a/hw/ip/nmi_gen/rtl/nmi_gen.sv
+++ b/hw/ip/nmi_gen/rtl/nmi_gen.sv
@@ -21,6 +21,8 @@ module nmi_gen
   output logic                    intr_esc0_o,
   output logic                    intr_esc1_o,
   output logic                    intr_esc2_o,
+  // Reset Requests
+  output logic                    nmi_rst_req_o,
   // Escalation outputs
   input  esc_tx_t [N_ESC_SEV-1:0] esc_tx_i,
   output esc_rx_t [N_ESC_SEV-1:0] esc_rx_o

ParseResult:
INS HdlIdDef@@nmi_rst_req_o to ports
HdlIdDef: nmi_rst_req_o
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: OUT


CommitId: 6faf4f1e71867f869e2086fe141ff1c64ba506f6
[rstmgr / pwrmgr] connect reset requests
--- a/hw/ip/nmi_gen/rtl/nmi_gen.sv
+++ b/hw/ip/nmi_gen/rtl/nmi_gen.sv
@@ -63,6 +65,9 @@ module nmi_gen
     .intr_o                 ( intr_esc0_o                )
   );
 
+  assign nmi_rst_req_o = esc_en[0];
+
+
   prim_intr_hw #(
     .Width(1)
   ) i_intr_esc1 (
ParseResult:
INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: INDEX
        list: ops
            HdlValueId: esc_en
            HdlValueInt: 0
    HdlValueId: nmi_rst_req_o


CommitId: c8ee5cbfb99ee4aadd774e425d63dfc57e026608
[prim_ram] Rearrange parity bit packing and fix wrong wmask settings
--- a/hw/ip/prim/rtl/prim_ram_2p_async_adv.sv
+++ b/hw/ip/prim/rtl/prim_ram_2p_async_adv.sv
@@ -62,11 +62,6 @@ module prim_ram_2p_async_adv #(
 
   `ASSERT_INIT(CannotHaveEccAndParity_A, !(EnableParity && EnableECC))
 
-  // While we require DataBitsPerMask to be per Byte (8) at the interface in case Byte parity is
-  // enabled, we need to switch this to a per-bit mask locally such that we can individually enable
-  // the parity bits to be written alongside the data.
-  localparam int LocalDataBitsPerMask = (EnableParity) ? 1 : DataBitsPerMask;
-
   // Calculate ECC width
   localparam int ParWidth  = (EnableParity) ? Width/8 :
                              (!EnableECC)   ? 0 :

ParseResult:
DEL HdlIdDef@@LocalDataBitsPerMask from objs
HdlIdDef: LocalDataBitsPerMask
    HdlValueId: int
    HdlOp: TERNARY
        list: ops
            HdlValueId: EnableParity
            HdlValueInt: 1
            HdlValueId: DataBitsPerMask
    HdlDirection: INTERNAL


CommitId: c8ee5cbfb99ee4aadd774e425d63dfc57e026608
[prim_ram] Rearrange parity bit packing and fix wrong wmask settings
--- a/hw/ip/prim/rtl/prim_ram_2p_async_adv.sv
+++ b/hw/ip/prim/rtl/prim_ram_2p_async_adv.sv
@@ -77,6 +72,13 @@ module prim_ram_2p_async_adv #(
                              (Width <= 120) ? 8 : 8 ;
   localparam int TotalWidth = Width + ParWidth;
 
+  // If byte parity is enabled, the write enable bits are used to write memory colums
+  // with 8 + 1 = 9 bit width (data plus corresponding parity bit).
+  // If ECC is enabled, the DataBitsPerMask is ignored.
+  localparam int LocalDataBitsPerMask = (EnableParity) ? 9          :
+                                        (EnableECC)    ? TotalWidth :
+                                                         DataBitsPerMask;
+
   ////////////////////////////
   // RAM Primitive Instance //
   ////////////////////////////

ParseResult:
INS HdlIdDef@@LocalDataBitsPerMask to objs
HdlIdDef: LocalDataBitsPerMask
    HdlValueId: int
    HdlOp: TERNARY
        list: ops
            HdlValueId: EnableParity
            HdlValueInt: 9
            HdlOp: TERNARY
                list: ops
                    HdlValueId: EnableECC
                    HdlValueId: TotalWidth
                    HdlValueId: DataBitsPerMask
    HdlDirection: INTERNAL


CommitId: e38146466c337a0a5c9114e2fa90f7fe98ab93e9
Update lowrisc_ibex to lowRISC/ibex@f30e84b
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_prefetch_buffer.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_prefetch_buffer.sv
@@ -9,7 +9,9 @@
  * Prefetch Buffer that caches instructions. This cuts overly long critical
  * paths to the instruction cache.
  */
-module ibex_prefetch_buffer (
+module ibex_prefetch_buffer #(
+  parameter bit BranchPredictor = 1'b0
+) (
     input  logic        clk_i,
     input  logic        rst_ni,
 

ParseResult:
INS HdlIdDef@@BranchPredictor to params
HdlIdDef: BranchPredictor
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: bit
    HdlValueInt: 0
    HdlDirection: INTERNAL


CommitId: e38146466c337a0a5c9114e2fa90f7fe98ab93e9
Update lowrisc_ibex to lowRISC/ibex@f30e84b
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_prefetch_buffer.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_prefetch_buffer.sv
@@ -17,6 +19,8 @@ module ibex_prefetch_buffer (
 
     input  logic        branch_i,
     input  logic        branch_spec_i,
+    input  logic        predicted_branch_i,
+    input  logic        branch_mispredict_i,
     input  logic [31:0] addr_i,
 
 

ParseResult:
INS HdlIdDef@@predicted_branch_i to ports
HdlIdDef: predicted_branch_i
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: IN

INS HdlIdDef@@branch_mispredict_i to ports
HdlIdDef: branch_mispredict_i
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: IN


CommitId: e38146466c337a0a5c9114e2fa90f7fe98ab93e9
Update lowrisc_ibex to lowRISC/ibex@f30e84b
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_prefetch_buffer.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_prefetch_buffer.sv
@@ -57,20 +61,30 @@ module ibex_prefetch_buffer (
   logic                stored_addr_en;
   logic [31:0]         fetch_addr_d, fetch_addr_q;
   logic                fetch_addr_en;
+  logic [31:0]         branch_mispredict_addr;
   logic [31:0]         instr_addr, instr_addr_w_aligned;
   logic                instr_or_pmp_err;
 
   logic                fifo_valid;
+  logic [31:0]         fifo_addr;
   logic                fifo_ready;
   logic                fifo_clear;
   logic [NUM_REQS-1:0] fifo_busy;
 
+  logic                valid_raw;
+
+  logic [31:0]         addr_next;
+
+  logic                branch_or_mispredict;
+
   ////////////////////////////
   // Prefetch buffer status //
   ////////////////////////////
 
   assign busy_o = (|rdata_outstanding_q) | instr_req_o;
 
+  assign branch_or_mispredict = branch_i | branch_mispredict_i;
+
   //////////////////////////////////////////////
   // Fetch fifo - consumes addresses and data //
   //////////////////////////////////////////////

ParseResult:
INS HdlIdDef@@branch_mispredict_addr to objs
HdlIdDef: branch_mispredict_addr
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 31
                    HdlValueInt: 0
    HdlDirection: INTERNAL

INS HdlIdDef@@fifo_addr to objs
HdlIdDef: fifo_addr
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 31
                    HdlValueInt: 0
    HdlDirection: INTERNAL

INS HdlIdDef@@valid_raw to objs
HdlIdDef: valid_raw
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

INS HdlIdDef@@addr_next to objs
HdlIdDef: addr_next
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 31
                    HdlValueInt: 0
    HdlDirection: INTERNAL

INS HdlIdDef@@branch_or_mispredict to objs
HdlIdDef: branch_or_mispredict
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: OR
        list: ops
            HdlValueId: branch_i
            HdlValueId: branch_mispredict_i
    HdlValueId: branch_or_mispredict


CommitId: e38146466c337a0a5c9114e2fa90f7fe98ab93e9
Update lowrisc_ibex to lowRISC/ibex@f30e84b
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_prefetch_buffer.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_prefetch_buffer.sv
@@ -82,7 +96,7 @@ module ibex_prefetch_buffer (
   // A branch will invalidate any previously fetched instructions.
   // Note that the FENCE.I instruction relies on this flushing behaviour on branch. If it is
   // altered the FENCE.I implementation may require changes.
-  assign fifo_clear = branch_i;
+  assign fifo_clear = branch_or_mispredict;
 
   // Reversed version of rdata_outstanding_q which can be overlaid with fifo fill state
   for (genvar i = 0; i < NUM_REQS; i++) begin : gen_rd_rev

ParseResult:
UPD HdlStmAssign@@ to 
    UPD HdlValueId@@branch_i to branch_or_mispredict


CommitId: e38146466c337a0a5c9114e2fa90f7fe98ab93e9
Update lowrisc_ibex to lowRISC/ibex@f30e84b
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_prefetch_buffer.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_prefetch_buffer.sv
@@ -124,7 +139,7 @@ module ibex_prefetch_buffer (
   assign branch_suppress = branch_spec_i & ~branch_i;
 
   // Make a new request any time there is space in the FIFO, and space in the request queue
-  assign valid_new_req = ~branch_suppress & req_i & (fifo_ready | branch_i) &
+  assign valid_new_req = ~branch_suppress & req_i & (fifo_ready | branch_or_mispredict) &
                          ~rdata_outstanding_q[NUM_REQS-1];
 
   assign valid_req = valid_req_q | valid_new_req;

ParseResult:
UPD HdlStmAssign@@ to 
    UPD HdlOp@@AND to AND
        UPD HdlOp@@AND to AND
            UPD HdlOp@@OR to OR
                UPD HdlValueId@@branch_i to branch_or_mispredict


CommitId: e38146466c337a0a5c9114e2fa90f7fe98ab93e9
Update lowrisc_ibex to lowRISC/ibex@f30e84b
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_prefetch_buffer.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_prefetch_buffer.sv
@@ -141,7 +156,7 @@ module ibex_prefetch_buffer (
   assign valid_req_d = valid_req & ~gnt_or_pmp_err;
 
   // Record whether an outstanding bus request is cancelled by a branch
-  assign discard_req_d = valid_req_q & (branch_i | discard_req_q);
+  assign discard_req_d = valid_req_q & (branch_or_mispredict | discard_req_q);
 
   ////////////////
   // Fetch addr //

ParseResult:
UPD HdlStmAssign@@ to 
    UPD HdlOp@@AND to AND
        UPD HdlOp@@OR to OR
            UPD HdlValueId@@branch_i to branch_or_mispredict


CommitId: e38146466c337a0a5c9114e2fa90f7fe98ab93e9
Update lowrisc_ibex to lowRISC/ibex@f30e84b
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_prefetch_buffer.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_prefetch_buffer.sv
@@ -189,9 +231,10 @@ module ibex_prefetch_buffer (
   end
 
   // Address mux
-  assign instr_addr = valid_req_q   ? stored_addr_q :
-                      branch_spec_i ? addr_i :
-                                      fetch_addr_q;
+  assign instr_addr = valid_req_q         ? stored_addr_q :
+                      branch_spec_i       ? addr_i :
+                      branch_mispredict_i ? branch_mispredict_addr :
+                                            fetch_addr_q;
 
   assign instr_addr_w_aligned = {instr_addr[31:2], 2'b00};
 

ParseResult:
UPD HdlStmAssign@@ to 
    UPD HdlOp@@TERNARY to TERNARY
        UPD HdlOp@@TERNARY to TERNARY
            MOV HdlValueId@@fetch_addr_q to ops
            HdlValueId: fetch_addr_q


CommitId: e38146466c337a0a5c9114e2fa90f7fe98ab93e9
Update lowrisc_ibex to lowRISC/ibex@f30e84b
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_prefetch_buffer.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_prefetch_buffer.sv
@@ -209,7 +252,8 @@ module ibex_prefetch_buffer (
       // If a branch is received at any point while a request is outstanding, it must be tracked
       // to ensure we discard the data once received
       assign branch_discard_n[i]    = (valid_req & gnt_or_pmp_err & discard_req_d) |
-                                      (branch_i & rdata_outstanding_q[i]) | branch_discard_q[i];
+                                      (branch_or_mispredict & rdata_outstanding_q[i]) |
+                                      branch_discard_q[i];
       // Record whether this request received a PMP error
       assign rdata_pmp_err_n[i]     = (valid_req & ~rdata_outstanding_q[i] & instr_pmp_err_i) |
                                       rdata_pmp_err_q[i];

ParseResult:
UPD HdlStmAssign@@ to 
    UPD HdlOp@@ADD to ADD
        INS HdlOp@@TERNARY to ops
        UPD HdlOp@@TERNARY to TERNARY
            INS list@@ops to TERNARY
            INS HdlValueId@@branch_i to ops
            INS HdlValueId@@addr_i to ops
            UPD HdlOp@@TERNARY to TERNARY
                INS HdlOp@@CONCAT to ops
                UPD HdlOp@@CONCAT to CONCAT
                    INS list@@ops to CONCAT
                    INS HdlOp@@INDEX to ops
                    INS HdlValueInt@@00 to ops
                    UPD HdlOp@@INDEX to INDEX
                        INS list@@ops to INDEX
                        INS HdlOp@@DOWNTO to ops
                        HdlOp: DOWNTO
                            list: ops
                                HdlValueInt: 31
                                HdlValueInt: 2

UPD HdlStmAssign@@ to 
    UPD HdlOp@@OR to OR
        UPD HdlOp@@OR to OR
            UPD HdlOp@@AND to AND
                UPD HdlValueId@@branch_i to branch_or_mispredict


CommitId: e38146466c337a0a5c9114e2fa90f7fe98ab93e9
Update lowrisc_ibex to lowRISC/ibex@f30e84b
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_prefetch_buffer.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_prefetch_buffer.sv
@@ -223,7 +267,8 @@ module ibex_prefetch_buffer (
                                       rdata_outstanding_q[i];
       assign branch_discard_n[i]    = (valid_req & gnt_or_pmp_err & discard_req_d &
                                        rdata_outstanding_q[i-1]) |
-                                      (branch_i & rdata_outstanding_q[i]) | branch_discard_q[i];
+                                      (branch_or_mispredict & rdata_outstanding_q[i]) |
+                                      branch_discard_q[i];
       assign rdata_pmp_err_n[i]     = (valid_req & ~rdata_outstanding_q[i] & instr_pmp_err_i &
                                        rdata_outstanding_q[i-1]) |
                                       rdata_pmp_err_q[i];

ParseResult:
UPD HdlStmAssign@@ to 
    UPD HdlOp@@TERNARY to TERNARY
        UPD HdlOp@@TERNARY to TERNARY
            INS HdlOp@@TERNARY to ops
            UPD HdlOp@@TERNARY to TERNARY
                INS list@@ops to TERNARY
                INS HdlValueId@@branch_mispredict_i to ops
                INS HdlValueId@@branch_mispredict_addr to ops

UPD HdlStmAssign@@ to 
    UPD HdlOp@@OR to OR
        UPD HdlOp@@OR to OR
            UPD HdlOp@@AND to AND
                UPD HdlValueId@@branch_i to branch_or_mispredict


CommitId: e38146466c337a0a5c9114e2fa90f7fe98ab93e9
Update lowrisc_ibex to lowRISC/ibex@f30e84b
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_prefetch_buffer.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_prefetch_buffer.sv
@@ -241,6 +286,8 @@ module ibex_prefetch_buffer (
   // Push a new entry to the FIFO once complete (and not cancelled by a branch)
   assign fifo_valid = rvalid_or_pmp_err & ~branch_discard_q[0];
 
+  assign fifo_addr = branch_mispredict_i ? branch_mispredict_addr : addr_i;
+
   ///////////////
   // Registers //
   ///////////////

ParseResult:
INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: TERNARY
        list: ops
            HdlValueId: branch_mispredict_i
            HdlValueId: branch_mispredict_addr
            HdlValueId: addr_i
    HdlValueId: fifo_addr


CommitId: e38146466c337a0a5c9114e2fa90f7fe98ab93e9
Update lowrisc_ibex to lowRISC/ibex@f30e84b
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_prefetch_buffer.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_prefetch_buffer.sv
@@ -268,4 +315,6 @@ module ibex_prefetch_buffer (
   assign instr_req_o  = valid_req;
   assign instr_addr_o = instr_addr_w_aligned;
 
+  assign valid_o = valid_raw & ~branch_mispredict_i;
+
 endmodule
ParseResult:
INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: AND
        list: ops
            HdlValueId: valid_raw
            HdlOp: NEG
                list: ops
                    HdlValueId: branch_mispredict_i
    HdlValueId: valid_o


CommitId: ef348c9995b53217479ebda6af8f7501042ecb72
[reggen] Add naming check for REGWEN and standardize on RW0C accesses
--- a/hw/ip/alert_handler/rtl/alert_handler_reg_wrap.sv
+++ b/hw/ip/alert_handler/rtl/alert_handler_reg_wrap.sv
@@ -161,7 +161,7 @@ module alert_handler_reg_wrap import alert_pkg::*; (
   /////////////////////
 
   // config register lock
-  assign reg2hw_wrap.config_locked = ~reg2hw.regen.q;
+  assign reg2hw_wrap.config_locked = ~reg2hw.regwen.q;
 
   // alert enable and class assignments
   for (genvar k = 0; k < NAlerts; k++) begin : gen_alert_en_class
ParseResult:
INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: NEG
        list: ops
            HdlOp: DOT
                list: ops
                    HdlOp: DOT
                        list: ops
                            HdlValueId: reg2hw
                            HdlValueId: regwen
                    HdlValueId: q
    HdlValueId: reg2hw_wrap

DEL HdlStmAssign@@ from objs
HdlStmAssign
    HdlOp: NEG
        list: ops
            HdlOp: DOT
                list: ops
                    HdlOp: DOT
                        list: ops
                            HdlValueId: reg2hw
                            HdlValueId: regen
                    HdlValueId: q
    HdlValueId: reg2hw_wrap


CommitId: 35eabaa9b9b8b7802ed447b6c06fc9c3eeb44457
[lc_ctrl] Fix transition command error checking
--- a/hw/ip/lc_ctrl/rtl/lc_ctrl_state_transition.sv
+++ b/hw/ip/lc_ctrl/rtl/lc_ctrl_state_transition.sv
@@ -11,6 +11,8 @@ module lc_ctrl_state_transition
   // Life cycle state vector.
   input  lc_state_e        lc_state_i,
   input  lc_cnt_e          lc_cnt_i,
+  // Main FSM state.
+  input  fsm_state_e       fsm_state_i,
   // Decoded lc state input
   input  dec_lc_state_e    dec_lc_state_i,
   // Transition target.

ParseResult:
INS HdlIdDef@@fsm_state_i to ports
HdlIdDef: fsm_state_i
    HdlValueId: fsm_state_e
    HdlDirection: IN


CommitId: d65d139663d32e8b509e5aa5af2b848daab74a6b
[csrng/rtl] added fatal alert
--- a/hw/ip/csrng/rtl/csrng_core.sv
+++ b/hw/ip/csrng/rtl/csrng_core.sv
@@ -27,14 +27,17 @@ module csrng_core import csrng_pkg::*; #(
   input  entropy_src_pkg::entropy_src_hw_if_rsp_t entropy_src_hw_if_i,
 
   // Application Interfaces
-  // instantiation interface
   input  csrng_req_t  [NHwApps-1:0] csrng_cmd_i,
   output csrng_rsp_t  [NHwApps-1:0] csrng_cmd_o,
 
+  // Alerts
+  output logic           alert_test_o,
+  output logic           fatal_alert_o,
+
   output logic           intr_cs_cmd_req_done_o,
   output logic           intr_cs_entropy_req_o,
   output logic           intr_cs_hw_inst_exc_o,
-  output logic           intr_cs_fifo_err_o
+  output logic           intr_cs_fatal_err_o
 );
 
   import csrng_reg_pkg::*;

ParseResult:
INS HdlIdDef@@alert_test_o to ports
HdlIdDef: alert_test_o
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: OUT

INS HdlIdDef@@fatal_alert_o to ports
HdlIdDef: fatal_alert_o
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: OUT

UPD HdlIdDef@@intr_cs_fifo_err_o to intr_cs_fatal_err_o


CommitId: d65d139663d32e8b509e5aa5af2b848daab74a6b
[csrng/rtl] added fatal alert
--- a/hw/ip/csrng/rtl/csrng_core.sv
+++ b/hw/ip/csrng/rtl/csrng_core.sv
@@ -59,7 +62,7 @@ module csrng_core import csrng_pkg::*; #(
   logic       event_cs_cmd_req_done;
   logic       event_cs_entropy_req;
   logic       event_cs_hw_inst_exc;
-  logic       event_cs_fifo_err;
+  logic       event_cs_fatal_err;
   logic       cs_enable;
   logic       aes_cipher_enable;
   logic       acmd_avail;

ParseResult:
UPD HdlIdDef@@event_cs_fifo_err to event_cs_fatal_err


CommitId: d65d139663d32e8b509e5aa5af2b848daab74a6b
[csrng/rtl] added fatal alert
--- a/hw/ip/csrng/rtl/csrng_core.sv
+++ b/hw/ip/csrng/rtl/csrng_core.sv
@@ -229,6 +261,7 @@ module csrng_core import csrng_pkg::*; #(
   logic [NApps-1:0]          cmd_stage_sfifo_genbits_err_wr;
   logic [NApps-1:0]          cmd_stage_sfifo_genbits_err_rd;
   logic [NApps-1:0]          cmd_stage_sfifo_genbits_err_st;
+  logic [NApps-1:0]          cmd_stage_sm_err;
 
   logic [NApps-1:0]          cmd_stage_vld;
   logic [StateId-1:0]        cmd_stage_shid[NApps];

ParseResult:
INS HdlIdDef@@cmd_stage_sm_err to objs
HdlIdDef: cmd_stage_sm_err
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlOp: SUB
                        list: ops
                            HdlValueId: NApps
                            HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: INTERNAL


CommitId: d65d139663d32e8b509e5aa5af2b848daab74a6b
[csrng/rtl] added fatal alert
--- a/hw/ip/csrng/rtl/csrng_core.sv
+++ b/hw/ip/csrng/rtl/csrng_core.sv
@@ -255,6 +288,7 @@ module csrng_core import csrng_pkg::*; #(
   logic                    genbits_stage_bus_rd_sw;
   logic [31:0]             genbits_stage_bus_sw;
   logic                    genbits_stage_fips_sw;
+  logic [2:0]              pfifo_sw_genbits_depth;
 
   logic [14:0]             hw_exception_sts;
   logic                    lc_hw_debug_not_on;

ParseResult:
INS HdlIdDef@@pfifo_sw_genbits_depth to objs
HdlIdDef: pfifo_sw_genbits_depth
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 2
                    HdlValueInt: 0
    HdlDirection: INTERNAL


CommitId: d65d139663d32e8b509e5aa5af2b848daab74a6b
[csrng/rtl] added fatal alert
--- a/hw/ip/csrng/rtl/csrng_core.sv
+++ b/hw/ip/csrng/rtl/csrng_core.sv
@@ -264,6 +298,8 @@ module csrng_core import csrng_pkg::*; #(
   logic [StateId-1:0]      state_db_reg_rd_id;
   logic [31:0]             state_db_reg_rd_val;
 
+  logic [30:0]             err_code_test_bit;
+
   // flops
   logic [2:0]  acmd_q, acmd_d;
   logic [3:0]  shid_q, shid_d;

ParseResult:
INS HdlIdDef@@err_code_test_bit to objs
HdlIdDef: err_code_test_bit
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 30
                    HdlValueInt: 0
    HdlDirection: INTERNAL


CommitId: d65d139663d32e8b509e5aa5af2b848daab74a6b
[csrng/rtl] added fatal alert
--- a/hw/ip/csrng/rtl/csrng_core.sv
+++ b/hw/ip/csrng/rtl/csrng_core.sv
@@ -440,10 +474,9 @@ module csrng_core import csrng_pkg::*; #(
          ctr_drbg_cmd_sfifo_rcstage_err[2] ||
          ctr_drbg_cmd_sfifo_cmdreq_err[2] ||
          (|cmd_stage_sfifo_genbits_err_wr) ||
-         (|cmd_stage_sfifo_cmd_err_wr));
-
-  assign hw2reg.err_code.fifo_read_err.d = 1'b1;
-  assign hw2reg.err_code.fifo_read_err.de =cs_enable  && (
+         (|cmd_stage_sfifo_cmd_err_wr) ||
+         err_code_test_bit[28];
+  assign fifo_read_err_sum =
          block_encrypt_sfifo_blkenc_err[1] ||
          ctr_drbg_gen_sfifo_ggenbits_err[1] ||
          ctr_drbg_gen_sfifo_gadstage_err[1] ||

ParseResult:
MOV HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: AND_LOG
        list: ops
            HdlValueId: cs_enable
            HdlOp: OR_LOG
                list: ops
                    HdlOp: OR_LOG
                        list: ops
                            HdlOp: OR_LOG
                                list: ops
                                    HdlOp: OR_LOG
                                        list: ops
                                            HdlOp: OR_LOG
                                                list: ops
                                                    HdlOp: OR_LOG
                                                        list: ops
                                                            HdlOp: OR_LOG
                                                                list: ops
                                                                    HdlOp: OR_LOG
                                                                        list: ops
                                                                            HdlOp: OR_LOG
                                                                                list: ops
                                                                                    HdlOp: OR_LOG
                                                                                        list: ops
                                                                                            HdlOp: OR_LOG
                                                                                                list: ops
                                                                                                    HdlOp: OR_LOG
                                                                                                        list: ops
                                                                                                            HdlOp: OR_LOG
                                                                                                                list: ops
                                                                                                                    HdlOp: OR_LOG
                                                                                                                        list: ops
                                                                                                                            HdlOp: OR_LOG
                                                                                                                                list: ops
                                                                                                                                    HdlOp: INDEX
                                                                                                                                        list: ops
                                                                                                                                            HdlValueId: block_encrypt_sfifo_blkenc_err
                                                                                                                                            HdlValueInt: 2
                                                                                                                                    HdlOp: INDEX
                                                                                                                                        list: ops
                                                                                                                                            HdlValueId: ctr_drbg_gen_sfifo_ggenbits_err
                                                                                                                                            HdlValueInt: 2
                                                                                                                            HdlOp: INDEX
                                                                                                                                list: ops
                                                                                                                                    HdlValueId: ctr_drbg_gen_sfifo_gadstage_err
                                                                                                                                    HdlValueInt: 2
                                                                                                                    HdlOp: INDEX
                                                                                                                        list: ops
                                                                                                                            HdlValueId: ctr_drbg_gen_sfifo_ggenreq_err
                                                                                                                            HdlValueInt: 2
                                                                                                            HdlOp: INDEX
                                                                                                                list: ops
                                                                                                                    HdlValueId: ctr_drbg_gen_sfifo_grcstage_err
                                                                                                                    HdlValueInt: 2
                                                                                                    HdlOp: INDEX
                                                                                                        list: ops
                                                                                                            HdlValueId: ctr_drbg_gen_sfifo_gbencack_err
                                                                                                            HdlValueInt: 2
                                                                                            HdlOp: INDEX
                                                                                                list: ops
                                                                                                    HdlValueId: ctr_drbg_upd_sfifo_final_err
                                                                                                    HdlValueInt: 2
                                                                                    HdlOp: INDEX
                                                                                        list: ops
                                                                                            HdlValueId: ctr_drbg_upd_sfifo_pdata_err
                                                                                            HdlValueInt: 2
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlValueId: ctr_drbg_upd_sfifo_bencack_err
                                                                                    HdlValueInt: 2
                                                                    HdlOp: INDEX
                                                                        list: ops
                                                                            HdlValueId: ctr_drbg_upd_sfifo_bencreq_err
                                                                            HdlValueInt: 2
                                                            HdlOp: INDEX
                                                                list: ops
                                                                    HdlValueId: ctr_drbg_upd_sfifo_updreq_err
                                                                    HdlValueInt: 2
                                                    HdlOp: INDEX
                                                        list: ops
                                                            HdlValueId: ctr_drbg_cmd_sfifo_keyvrc_err
                                                            HdlValueInt: 2
                                            HdlOp: INDEX
                                                list: ops
                                                    HdlValueId: ctr_drbg_cmd_sfifo_rcstage_err
                                                    HdlValueInt: 2
                                    HdlOp: INDEX
                                        list: ops
                                            HdlValueId: ctr_drbg_cmd_sfifo_cmdreq_err
                                            HdlValueInt: 2
                            HdlOp: OR_UNARY
                                list: ops
                                    HdlValueId: cmd_stage_sfifo_genbits_err_wr
                    HdlOp: OR_UNARY
                        list: ops
                            HdlValueId: cmd_stage_sfifo_cmd_err_wr
    HdlValueId: hw2reg

MOV HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: AND_LOG
        list: ops
            HdlValueId: cs_enable
            HdlOp: OR_LOG
                list: ops
                    HdlOp: OR_LOG
                        list: ops
                            HdlOp: OR_LOG
                                list: ops
                                    HdlOp: OR_LOG
                                        list: ops
                                            HdlOp: OR_LOG
                                                list: ops
                                                    HdlOp: OR_LOG
                                                        list: ops
                                                            HdlOp: OR_LOG
                                                                list: ops
                                                                    HdlOp: OR_LOG
                                                                        list: ops
                                                                            HdlOp: OR_LOG
                                                                                list: ops
                                                                                    HdlOp: OR_LOG
                                                                                        list: ops
                                                                                            HdlOp: OR_LOG
                                                                                                list: ops
                                                                                                    HdlOp: OR_LOG
                                                                                                        list: ops
                                                                                                            HdlOp: OR_LOG
                                                                                                                list: ops
                                                                                                                    HdlOp: OR_LOG
                                                                                                                        list: ops
                                                                                                                            HdlOp: OR_LOG
                                                                                                                                list: ops
                                                                                                                                    HdlOp: INDEX
                                                                                                                                        list: ops
                                                                                                                                            HdlValueId: block_encrypt_sfifo_blkenc_err
                                                                                                                                            HdlValueInt: 1
                                                                                                                                    HdlOp: INDEX
                                                                                                                                        list: ops
                                                                                                                                            HdlValueId: ctr_drbg_gen_sfifo_ggenbits_err
                                                                                                                                            HdlValueInt: 1
                                                                                                                            HdlOp: INDEX
                                                                                                                                list: ops
                                                                                                                                    HdlValueId: ctr_drbg_gen_sfifo_gadstage_err
                                                                                                                                    HdlValueInt: 1
                                                                                                                    HdlOp: INDEX
                                                                                                                        list: ops
                                                                                                                            HdlValueId: ctr_drbg_gen_sfifo_ggenreq_err
                                                                                                                            HdlValueInt: 1
                                                                                                            HdlOp: INDEX
                                                                                                                list: ops
                                                                                                                    HdlValueId: ctr_drbg_gen_sfifo_grcstage_err
                                                                                                                    HdlValueInt: 1
                                                                                                    HdlOp: INDEX
                                                                                                        list: ops
                                                                                                            HdlValueId: ctr_drbg_gen_sfifo_gbencack_err
                                                                                                            HdlValueInt: 1
                                                                                            HdlOp: INDEX
                                                                                                list: ops
                                                                                                    HdlValueId: ctr_drbg_upd_sfifo_final_err
                                                                                                    HdlValueInt: 1
                                                                                    HdlOp: INDEX
                                                                                        list: ops
                                                                                            HdlValueId: ctr_drbg_upd_sfifo_pdata_err
                                                                                            HdlValueInt: 1
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlValueId: ctr_drbg_upd_sfifo_bencack_err
                                                                                    HdlValueInt: 1
                                                                    HdlOp: INDEX
                                                                        list: ops
                                                                            HdlValueId: ctr_drbg_upd_sfifo_bencreq_err
                                                                            HdlValueInt: 1
                                                            HdlOp: INDEX
                                                                list: ops
                                                                    HdlValueId: ctr_drbg_upd_sfifo_updreq_err
                                                                    HdlValueInt: 1
                                                    HdlOp: INDEX
                                                        list: ops
                                                            HdlValueId: ctr_drbg_cmd_sfifo_keyvrc_err
                                                            HdlValueInt: 1
                                            HdlOp: INDEX
                                                list: ops
                                                    HdlValueId: ctr_drbg_cmd_sfifo_rcstage_err
                                                    HdlValueInt: 1
                                    HdlOp: INDEX
                                        list: ops
                                            HdlValueId: ctr_drbg_cmd_sfifo_cmdreq_err
                                            HdlValueInt: 1
                            HdlOp: OR_UNARY
                                list: ops
                                    HdlValueId: cmd_stage_sfifo_genbits_err_rd
                    HdlOp: OR_UNARY
                        list: ops
                            HdlValueId: cmd_stage_sfifo_cmd_err_rd
    HdlValueId: hw2reg

UPD HdlStmAssign@@ to 
    UPD HdlOp@@AND_LOG to OR_LOG
    UPD HdlValueId@@hw2reg to fifo_write_err_sum
    UPD HdlOp@@AND_LOG to AND_LOG
        DEL HdlValueId@@cs_enable from ops

UPD HdlStmAssign@@ to 
    UPD HdlOp@@AND_LOG to OR_LOG
    UPD HdlValueId@@hw2reg to fifo_read_err_sum
    UPD HdlOp@@AND_LOG to AND_LOG
        DEL HdlValueId@@cs_enable from ops

UPD HdlStmAssign@@ to 
    UPD HdlOp@@OR_LOG to OR_LOG
        INS HdlOp@@INDEX to ops
        HdlOp: INDEX
            list: ops
                HdlValueId: err_code_test_bit
                HdlValueInt: 11

UPD HdlStmAssign@@ to 
    UPD HdlOp@@OR_LOG to OR_LOG
        INS HdlOp@@INDEX to ops
        HdlOp: INDEX
            list: ops
                HdlValueId: err_code_test_bit
                HdlValueInt: 12

UPD HdlStmAssign@@ to 
    UPD HdlOp@@OR_LOG to OR_LOG
        INS HdlOp@@INDEX to ops
        HdlOp: INDEX
            list: ops
                HdlValueId: err_code_test_bit
                HdlValueInt: 13

UPD HdlStmAssign@@ to 
    UPD HdlOp@@OR_LOG to OR_LOG
        INS HdlOp@@INDEX to ops
        HdlOp: INDEX
            list: ops
                HdlValueId: err_code_test_bit
                HdlValueInt: 14


CommitId: d65d139663d32e8b509e5aa5af2b848daab74a6b
[csrng/rtl] added fatal alert
--- a/hw/ip/csrng/rtl/csrng_core.sv
+++ b/hw/ip/csrng/rtl/csrng_core.sv
@@ -459,10 +492,9 @@ module csrng_core import csrng_pkg::*; #(
          ctr_drbg_cmd_sfifo_rcstage_err[1] ||
          ctr_drbg_cmd_sfifo_cmdreq_err[1] ||
          (|cmd_stage_sfifo_genbits_err_rd) ||
-         (|cmd_stage_sfifo_cmd_err_rd));
-
-  assign hw2reg.err_code.fifo_state_err.d = 1'b1;
-  assign hw2reg.err_code.fifo_state_err.de =cs_enable  && (
+         (|cmd_stage_sfifo_cmd_err_rd) ||
+         err_code_test_bit[29];
+  assign fifo_status_err_sum =
          block_encrypt_sfifo_blkenc_err[0] ||
          ctr_drbg_gen_sfifo_ggenbits_err[0] ||
          ctr_drbg_gen_sfifo_gadstage_err[0] ||

ParseResult:
MOV HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: AND_LOG
        list: ops
            HdlValueId: cs_enable
            HdlOp: OR_LOG
                list: ops
                    HdlOp: OR_LOG
                        list: ops
                            HdlOp: OR_LOG
                                list: ops
                                    HdlOp: OR_LOG
                                        list: ops
                                            HdlOp: OR_LOG
                                                list: ops
                                                    HdlOp: OR_LOG
                                                        list: ops
                                                            HdlOp: OR_LOG
                                                                list: ops
                                                                    HdlOp: OR_LOG
                                                                        list: ops
                                                                            HdlOp: OR_LOG
                                                                                list: ops
                                                                                    HdlOp: OR_LOG
                                                                                        list: ops
                                                                                            HdlOp: OR_LOG
                                                                                                list: ops
                                                                                                    HdlOp: OR_LOG
                                                                                                        list: ops
                                                                                                            HdlOp: OR_LOG
                                                                                                                list: ops
                                                                                                                    HdlOp: OR_LOG
                                                                                                                        list: ops
                                                                                                                            HdlOp: OR_LOG
                                                                                                                                list: ops
                                                                                                                                    HdlOp: INDEX
                                                                                                                                        list: ops
                                                                                                                                            HdlValueId: block_encrypt_sfifo_blkenc_err
                                                                                                                                            HdlValueInt: 1
                                                                                                                                    HdlOp: INDEX
                                                                                                                                        list: ops
                                                                                                                                            HdlValueId: ctr_drbg_gen_sfifo_ggenbits_err
                                                                                                                                            HdlValueInt: 1
                                                                                                                            HdlOp: INDEX
                                                                                                                                list: ops
                                                                                                                                    HdlValueId: ctr_drbg_gen_sfifo_gadstage_err
                                                                                                                                    HdlValueInt: 1
                                                                                                                    HdlOp: INDEX
                                                                                                                        list: ops
                                                                                                                            HdlValueId: ctr_drbg_gen_sfifo_ggenreq_err
                                                                                                                            HdlValueInt: 1
                                                                                                            HdlOp: INDEX
                                                                                                                list: ops
                                                                                                                    HdlValueId: ctr_drbg_gen_sfifo_grcstage_err
                                                                                                                    HdlValueInt: 1
                                                                                                    HdlOp: INDEX
                                                                                                        list: ops
                                                                                                            HdlValueId: ctr_drbg_gen_sfifo_gbencack_err
                                                                                                            HdlValueInt: 1
                                                                                            HdlOp: INDEX
                                                                                                list: ops
                                                                                                    HdlValueId: ctr_drbg_upd_sfifo_final_err
                                                                                                    HdlValueInt: 1
                                                                                    HdlOp: INDEX
                                                                                        list: ops
                                                                                            HdlValueId: ctr_drbg_upd_sfifo_pdata_err
                                                                                            HdlValueInt: 1
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlValueId: ctr_drbg_upd_sfifo_bencack_err
                                                                                    HdlValueInt: 1
                                                                    HdlOp: INDEX
                                                                        list: ops
                                                                            HdlValueId: ctr_drbg_upd_sfifo_bencreq_err
                                                                            HdlValueInt: 1
                                                            HdlOp: INDEX
                                                                list: ops
                                                                    HdlValueId: ctr_drbg_upd_sfifo_updreq_err
                                                                    HdlValueInt: 1
                                                    HdlOp: INDEX
                                                        list: ops
                                                            HdlValueId: ctr_drbg_cmd_sfifo_keyvrc_err
                                                            HdlValueInt: 1
                                            HdlOp: INDEX
                                                list: ops
                                                    HdlValueId: ctr_drbg_cmd_sfifo_rcstage_err
                                                    HdlValueInt: 1
                                    HdlOp: INDEX
                                        list: ops
                                            HdlValueId: ctr_drbg_cmd_sfifo_cmdreq_err
                                            HdlValueInt: 1
                            HdlOp: OR_UNARY
                                list: ops
                                    HdlValueId: cmd_stage_sfifo_genbits_err_rd
                    HdlOp: OR_UNARY
                        list: ops
                            HdlValueId: cmd_stage_sfifo_cmd_err_rd
    HdlValueId: hw2reg

MOV HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: AND_LOG
        list: ops
            HdlValueId: cs_enable
            HdlOp: OR_LOG
                list: ops
                    HdlOp: OR_LOG
                        list: ops
                            HdlOp: OR_LOG
                                list: ops
                                    HdlOp: OR_LOG
                                        list: ops
                                            HdlOp: OR_LOG
                                                list: ops
                                                    HdlOp: OR_LOG
                                                        list: ops
                                                            HdlOp: OR_LOG
                                                                list: ops
                                                                    HdlOp: OR_LOG
                                                                        list: ops
                                                                            HdlOp: OR_LOG
                                                                                list: ops
                                                                                    HdlOp: OR_LOG
                                                                                        list: ops
                                                                                            HdlOp: OR_LOG
                                                                                                list: ops
                                                                                                    HdlOp: OR_LOG
                                                                                                        list: ops
                                                                                                            HdlOp: OR_LOG
                                                                                                                list: ops
                                                                                                                    HdlOp: OR_LOG
                                                                                                                        list: ops
                                                                                                                            HdlOp: OR_LOG
                                                                                                                                list: ops
                                                                                                                                    HdlOp: INDEX
                                                                                                                                        list: ops
                                                                                                                                            HdlValueId: block_encrypt_sfifo_blkenc_err
                                                                                                                                            HdlValueInt: 0
                                                                                                                                    HdlOp: INDEX
                                                                                                                                        list: ops
                                                                                                                                            HdlValueId: ctr_drbg_gen_sfifo_ggenbits_err
                                                                                                                                            HdlValueInt: 0
                                                                                                                            HdlOp: INDEX
                                                                                                                                list: ops
                                                                                                                                    HdlValueId: ctr_drbg_gen_sfifo_gadstage_err
                                                                                                                                    HdlValueInt: 0
                                                                                                                    HdlOp: INDEX
                                                                                                                        list: ops
                                                                                                                            HdlValueId: ctr_drbg_gen_sfifo_ggenreq_err
                                                                                                                            HdlValueInt: 0
                                                                                                            HdlOp: INDEX
                                                                                                                list: ops
                                                                                                                    HdlValueId: ctr_drbg_gen_sfifo_grcstage_err
                                                                                                                    HdlValueInt: 0
                                                                                                    HdlOp: INDEX
                                                                                                        list: ops
                                                                                                            HdlValueId: ctr_drbg_gen_sfifo_gbencack_err
                                                                                                            HdlValueInt: 0
                                                                                            HdlOp: INDEX
                                                                                                list: ops
                                                                                                    HdlValueId: ctr_drbg_upd_sfifo_final_err
                                                                                                    HdlValueInt: 0
                                                                                    HdlOp: INDEX
                                                                                        list: ops
                                                                                            HdlValueId: ctr_drbg_upd_sfifo_pdata_err
                                                                                            HdlValueInt: 0
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlValueId: ctr_drbg_upd_sfifo_bencack_err
                                                                                    HdlValueInt: 0
                                                                    HdlOp: INDEX
                                                                        list: ops
                                                                            HdlValueId: ctr_drbg_upd_sfifo_bencreq_err
                                                                            HdlValueInt: 0
                                                            HdlOp: INDEX
                                                                list: ops
                                                                    HdlValueId: ctr_drbg_upd_sfifo_updreq_err
                                                                    HdlValueInt: 0
                                                    HdlOp: INDEX
                                                        list: ops
                                                            HdlValueId: ctr_drbg_cmd_sfifo_keyvrc_err
                                                            HdlValueInt: 0
                                            HdlOp: INDEX
                                                list: ops
                                                    HdlValueId: ctr_drbg_cmd_sfifo_rcstage_err
                                                    HdlValueInt: 0
                                    HdlOp: INDEX
                                        list: ops
                                            HdlValueId: ctr_drbg_cmd_sfifo_cmdreq_err
                                            HdlValueInt: 0
                            HdlOp: OR_UNARY
                                list: ops
                                    HdlValueId: cmd_stage_sfifo_genbits_err_st
                    HdlOp: OR_UNARY
                        list: ops
                            HdlValueId: cmd_stage_sfifo_cmd_err_st
    HdlValueId: hw2reg

UPD HdlStmAssign@@ to 
    UPD HdlOp@@AND_LOG to OR_LOG
    UPD HdlValueId@@hw2reg to fifo_read_err_sum
    UPD HdlOp@@AND_LOG to AND_LOG
        DEL HdlValueId@@cs_enable from ops

UPD HdlStmAssign@@ to 
    UPD HdlOp@@AND_LOG to OR_LOG
    UPD HdlValueId@@hw2reg to fifo_status_err_sum
    UPD HdlOp@@AND_LOG to AND_LOG
        DEL HdlValueId@@cs_enable from ops

UPD HdlStmAssign@@ to 
    UPD HdlOp@@OR_LOG to OR_LOG
        INS HdlOp@@INDEX to ops
        HdlOp: INDEX
            list: ops
                HdlValueId: err_code_test_bit
                HdlValueInt: 28


CommitId: d65d139663d32e8b509e5aa5af2b848daab74a6b
[csrng/rtl] added fatal alert
--- a/hw/ip/csrng/rtl/csrng_core.sv
+++ b/hw/ip/csrng/rtl/csrng_core.sv
@@ -605,11 +729,13 @@ module csrng_core import csrng_pkg::*; #(
 
   // set fifo err status bits
   for (genvar i = 0; i < NApps; i = i+1) begin : gen_fifo_sts
-    assign cmd_stage_sfifo_cmd_err_sum[i] = |cmd_stage_sfifo_cmd_err[i];
+    assign cmd_stage_sfifo_cmd_err_sum[i] = (|cmd_stage_sfifo_cmd_err[i] ||
+                                             err_code_test_bit[0]);
     assign cmd_stage_sfifo_cmd_err_wr[i] = cmd_stage_sfifo_cmd_err[i][0];
     assign cmd_stage_sfifo_cmd_err_rd[i] = cmd_stage_sfifo_cmd_err[i][1];
     assign cmd_stage_sfifo_cmd_err_st[i] = cmd_stage_sfifo_cmd_err[i][2];
-    assign cmd_stage_sfifo_genbits_err_sum[i] = |cmd_stage_sfifo_genbits_err[i];
+    assign cmd_stage_sfifo_genbits_err_sum[i] = (|cmd_stage_sfifo_genbits_err[i] ||
+                                                 err_code_test_bit[1]);
     assign cmd_stage_sfifo_genbits_err_wr[i] = cmd_stage_sfifo_genbits_err[i][0];
     assign cmd_stage_sfifo_genbits_err_rd[i] = cmd_stage_sfifo_genbits_err[i][1];
     assign cmd_stage_sfifo_genbits_err_st[i] = cmd_stage_sfifo_genbits_err[i][2];

ParseResult:
UPD HdlStmAssign@@ to 
    MOV HdlOp@@OR_UNARY to 
    HdlOp: OR_UNARY
        list: ops
            HdlOp: INDEX
                list: ops
                    HdlValueId: cmd_stage_sfifo_cmd_err
                    HdlValueId: i

UPD HdlStmAssign@@ to 
    MOV HdlOp@@OR_UNARY to 
    HdlOp: OR_UNARY
        list: ops
            HdlOp: INDEX
                list: ops
                    HdlValueId: cmd_stage_sfifo_genbits_err
                    HdlValueId: i


CommitId: d65d139663d32e8b509e5aa5af2b848daab74a6b
[csrng/rtl] added fatal alert
--- a/hw/ip/csrng/rtl/csrng_core.sv
+++ b/hw/ip/csrng/rtl/csrng_core.sv
@@ -1156,16 +1287,17 @@ module csrng_core import csrng_pkg::*; #(
   assign hw2reg.hw_exc_sts.de = cs_enable;
   assign hw2reg.hw_exc_sts.d  = hw_exception_sts;
 
-  // TODO: add depths or remove
   assign hw2reg.sum_sts.fifo_depth_sts.de = cs_enable;
   assign hw2reg.sum_sts.fifo_depth_sts.d  =
-         (fifo_sel == 4'h0) ? 24'b0 :
+         (fifo_sel == 4'h0) ? {21'b0,pfifo_sw_genbits_depth} :
          24'b0;
 
   assign hw2reg.sum_sts.diag.de = !cs_enable;
   assign hw2reg.sum_sts.diag.d  =
-         (reg2hw.regwen.q)       && // not used
-         (|reg2hw.genbits.q)     && // not used
+         (|err_code_test_bit[19:16]) && // not used
+         (|err_code_test_bit[27:26]) && // not used
+         (reg2hw.regwen.q)        && // not used
+         (|reg2hw.genbits.q)      && // not used
          (|reg2hw.int_state_val.q); // not used
 
 
ParseResult:
UPD HdlStmAssign@@ to 
    UPD HdlOp@@TERNARY to TERNARY
        MOV HdlValueInt@@0 to ops
        HdlValueInt: 0

UPD HdlStmAssign@@ to 
    UPD HdlOp@@AND_LOG to AND_LOG
        UPD HdlOp@@AND_LOG to AND_LOG
            MOV HdlOp@@DOT to ops
            HdlOp: DOT
                list: ops
                    HdlOp: DOT
                        list: ops
                            HdlValueId: reg2hw
                            HdlValueId: regwen
                    HdlValueId: q


CommitId: 92e9ebb031c9c90db52a3f3985afa352285c8497
[aes] Use fresh, random intermediate masks in "noreuse" Canright S-Box
--- a/hw/ip/aes/pre_dv/aes_sbox_lec/aes_sbox_masked_wrapper.sv
+++ b/hw/ip/aes/pre_dv/aes_sbox_lec/aes_sbox_masked_wrapper.sv
@@ -12,20 +12,23 @@ module aes_sbox_masked_wrapper (
 
   logic [7:0] in_data_m, out_data_m;
   logic [7:0] in_mask, out_mask;
+  logic [9:0] prd_masking;
 
   // The mask inputs are tied to constant values.
-  assign in_mask  = 8'hAA;
-  assign out_mask = 8'h55;
+  assign in_mask     = 8'hAA;
+  assign out_mask    = 8'h55;
+  assign prd_masking = 10'h2AA;
 
   // Mask input data
   assign in_data_m = data_i ^ in_mask;
 
   aes_sbox_masked aes_sbox_masked (
-    .op_i       ( op_i       ),
-    .data_i     ( in_data_m  ),
-    .in_mask_i  ( in_mask    ),
-    .out_mask_i ( out_mask   ),
-    .data_o     ( out_data_m )
+    .op_i          ( op_i        ),
+    .data_i        ( in_data_m   ),
+    .in_mask_i     ( in_mask     ),
+    .out_mask_i    ( out_mask    ),
+    .prd_masking_i ( prd_masking ),
+    .data_o        ( out_data_m  )
   );
 
   // Unmask output data
ParseResult:
INS HdlIdDef@@prd_masking to objs
HdlIdDef: prd_masking
    HdlOp: INDEX
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 9
                    HdlValueInt: 0
    HdlDirection: INTERNAL

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlValueInt: 2aa
    HdlValueId: prd_masking


CommitId: 597dea829296a9563ae6dfbf79a38fbb3ecbabc0
[ast] Fix ast.core file
--- a/hw/top_earlgrey/ip/ast/rtl/usb_clk.sv
+++ b/hw/top_earlgrey/ip/ast/rtl/usb_clk.sv
@@ -15,16 +15,16 @@ module usb_clk (
   input usb_ref_pulse_i,                   // USB Reference Pulse
   input scan_mode_i,                       // Scan Mode
   input scan_reset_ni,                     // Scan Reset
+`ifdef AST_BYPASS_CLK
   input clk_usb_ext_i,                     // FPGA/VERILATOR Clock input
+`endif
   //
   output logic clk_src_usb_o,              // USB Source Clock
   output logic clk_src_usb_val_o           // USB Source Clock Valid
 );
 
+logic clk, osc_en, usb_clk_en;
 
-logic clk, osc_en, usb_clk_en, rst_n;
-
-assign rst_n = rst_usb_clk_ni;  // Scan enabled
 assign osc_en = (clk_src_usb_en_i && clk_usb_pd_ni && rst_usb_clk_ni);
 assign usb_clk_en = scan_mode_i || osc_en;
 

ParseResult:
DEL HdlIdDef@@clk_usb_ext_i from ports
HdlIdDef: clk_usb_ext_i
    HdlValueId: wire
    HdlDirection: IN

DEL HdlIdDef@@rst_n from objs
HdlIdDef: rst_n
    HdlDirection: INTERNAL

DEL HdlStmAssign@@ from objs
HdlStmAssign
    HdlValueId: rst_usb_clk_ni
    HdlValueId: rst_n


CommitId: 597dea829296a9563ae6dfbf79a38fbb3ecbabc0
[ast] Fix ast.core file
--- a/hw/top_earlgrey/ip/ast/rtl/usb_clk.sv
+++ b/hw/top_earlgrey/ip/ast/rtl/usb_clk.sv
@@ -47,7 +49,7 @@ prim_clock_buf u_clk_usb_buf(
 
 // 2-stage de-assertion
 logic rst_val_n;
-assign rst_val_n = scan_mode_i ? scan_reset_ni : rst_n && usb_clk_en;
+assign rst_val_n = scan_mode_i ? scan_reset_ni : usb_clk_en;
 
 prim_flop_2sync #(
   .Width ( 1 ),
ParseResult:
UPD HdlStmAssign@@ to 
    UPD HdlOp@@TERNARY to TERNARY
        UPD HdlOp@@AND_LOG to AND_LOG
            MOV HdlValueId@@usb_clk_en to ops
            HdlValueId: usb_clk_en
            DEL HdlValueId@@rst_n from ops
            DEL list@@ops from AND_LOG
        DEL HdlOp@@AND_LOG from ops


CommitId: 19044edfb0b9485031557705595840bea41fb33d
[prim_secded] Use _i/_o suffix for port names
--- a/hw/ip/prim/rtl/prim_secded_hamming_39_32_enc.sv
+++ b/hw/ip/prim/rtl/prim_secded_hamming_39_32_enc.sv
@@ -5,19 +5,19 @@
 // SECDED encoder generated by util/design/secded_gen.py
 
 module prim_secded_hamming_39_32_enc (
-  input        [31:0] in,
-  output logic [38:0] out
+  input        [31:0] data_i,
+  output logic [38:0] data_o
 );
 
   always_comb begin : p_encode
-    out = 39'(in);
-    out[32] = ^(out & 39'h0056AAAD5B);
-    out[33] = ^(out & 39'h009B33366D);
-    out[34] = ^(out & 39'h00E3C3C78E);
-    out[35] = ^(out & 39'h0003FC07F0);
-    out[36] = ^(out & 39'h0003FFF800);
-    out[37] = ^(out & 39'h00FC000000);
-    out[38] = ^(out & 39'h3FFFFFFFFF);
+    data_o = 39'(data_i);
+    data_o[32] = ^(data_o & 39'h0056AAAD5B);
+    data_o[33] = ^(data_o & 39'h009B33366D);
+    data_o[34] = ^(data_o & 39'h00E3C3C78E);
+    data_o[35] = ^(data_o & 39'h0003FC07F0);
+    data_o[36] = ^(data_o & 39'h0003FFF800);
+    data_o[37] = ^(data_o & 39'h00FC000000);
+    data_o[38] = ^(data_o & 39'h3FFFFFFFFF);
   end
 
 endmodule : prim_secded_hamming_39_32_enc
ParseResult:
UPD HdlIdDef@@in to data_i

UPD HdlIdDef@@out to data_o

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@out to data_o
            UPD HdlOp@@CALL to CALL
                UPD HdlValueId@@in to data_i
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@INDEX to INDEX
                UPD HdlValueId@@out to data_o
            UPD HdlOp@@XOR_UNARY to XOR_UNARY
                UPD HdlOp@@AND to AND
                    UPD HdlValueId@@out to data_o
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@INDEX to INDEX
                UPD HdlValueId@@out to data_o
            UPD HdlOp@@XOR_UNARY to XOR_UNARY
                UPD HdlOp@@AND to AND
                    UPD HdlValueId@@out to data_o
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@INDEX to INDEX
                UPD HdlValueId@@out to data_o
            UPD HdlOp@@XOR_UNARY to XOR_UNARY
                UPD HdlOp@@AND to AND
                    UPD HdlValueId@@out to data_o
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@INDEX to INDEX
                UPD HdlValueId@@out to data_o
            UPD HdlOp@@XOR_UNARY to XOR_UNARY
                UPD HdlOp@@AND to AND
                    UPD HdlValueId@@out to data_o
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@INDEX to INDEX
                UPD HdlValueId@@out to data_o
            UPD HdlOp@@XOR_UNARY to XOR_UNARY
                UPD HdlOp@@AND to AND
                    UPD HdlValueId@@out to data_o
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@INDEX to INDEX
                UPD HdlValueId@@out to data_o
            UPD HdlOp@@XOR_UNARY to XOR_UNARY
                UPD HdlOp@@AND to AND
                    UPD HdlValueId@@out to data_o
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@INDEX to INDEX
                UPD HdlValueId@@out to data_o
            UPD HdlOp@@XOR_UNARY to XOR_UNARY
                UPD HdlOp@@AND to AND
                    UPD HdlValueId@@out to data_o


CommitId: df96e0c2a6cc99652e459b22c1bcb2c1ce5f59f1
[AST] AscentLint, HJSON fixes, and rgn_fips_i port
--- a/hw/top_earlgrey/ip/ast/rtl/sys_clk.sv
+++ b/hw/top_earlgrey/ip/ast/rtl/sys_clk.sv
@@ -12,6 +12,8 @@ module sys_clk (
   input rst_sys_clk_ni,                    // System Clock Logic reset
   input clk_src_sys_en_i,                  // System Source Clock Enable
   input clk_src_sys_jen_i,                 // System Source Clock Jitter Enable
+  input scan_mode_i,                       // Scan Mode
+  input scan_reset_ni,                     // Scan Reset
   output logic clk_src_sys_o,              // System Source Clock
   output logic clk_src_sys_val_o           // System Source Clock Valid
 );

ParseResult:
INS HdlIdDef@@scan_mode_i to ports
HdlIdDef: scan_mode_i
    HdlValueId: wire
    HdlDirection: IN

INS HdlIdDef@@scan_reset_ni to ports
HdlIdDef: scan_reset_ni
    HdlValueId: wire
    HdlDirection: IN


CommitId: df96e0c2a6cc99652e459b22c1bcb2c1ce5f59f1
[AST] AscentLint, HJSON fixes, and rgn_fips_i port
--- a/hw/top_earlgrey/ip/ast/rtl/sys_clk.sv
+++ b/hw/top_earlgrey/ip/ast/rtl/sys_clk.sv
@@ -19,7 +21,8 @@ module sys_clk (
 logic clk, sys_clk_en, rst_n;
 
 assign rst_n = rst_sys_clk_ni;  // scan enabled
-assign sys_clk_en = clk_src_sys_en_i && clk_sys_pd_ni && rst_sys_clk_ni;
+assign sys_clk_en = scan_mode_i ||
+                    (clk_src_sys_en_i && clk_sys_pd_ni && rst_sys_clk_ni);
 
 // Clock Oscilator
 ///////////////////////////////////////

ParseResult:
UPD HdlStmAssign@@ to 
    INS HdlOp@@OR_LOG to 
    UPD HdlOp@@OR_LOG to OR_LOG
        INS list@@ops to OR_LOG
        INS HdlValueId@@scan_mode_i to ops

UPD HdlStmAssign@@ to 
    MOV HdlOp@@AND_LOG to 
    HdlOp: AND_LOG
        list: ops
            HdlOp: AND_LOG
                list: ops
                    HdlValueId: clk_src_sys_en_i
                    HdlValueId: clk_sys_pd_ni
            HdlValueId: rst_sys_clk_ni


CommitId: df96e0c2a6cc99652e459b22c1bcb2c1ce5f59f1
[AST] AscentLint, HJSON fixes, and rgn_fips_i port
--- a/hw/top_earlgrey/ip/ast/rtl/sys_clk.sv
+++ b/hw/top_earlgrey/ip/ast/rtl/sys_clk.sv
@@ -39,7 +42,7 @@ prim_clock_buf u_clk_sys_buf(
 
 // 2-stage de-assertion
 logic rst_val_n;
-assign rst_val_n = rst_n && sys_clk_en;
+assign rst_val_n = scan_mode_i ? scan_reset_ni : rst_n && sys_clk_en;
 
 prim_flop_2sync #(
   .Width ( 1 ),
ParseResult:
UPD HdlStmAssign@@ to 
    MOV HdlOp@@AND_LOG to 
    HdlOp: AND_LOG
        list: ops
            HdlValueId: rst_n
            HdlValueId: sys_clk_en


CommitId: 12cce14e3355f5df1c1d2c533a9686b88cc84b93
[tlul] Add memory transmission integrity checks
--- a/hw/ip/prim/rtl/prim_ram_1p_scr.sv
+++ b/hw/ip/prim/rtl/prim_ram_1p_scr.sv
@@ -93,6 +99,24 @@ module prim_ram_1p_scr #(
   `ASSERT_INIT(DiffWidthAligned_A, (DataBitsPerMask % DiffWidth) == 0)
   `ASSERT_INIT(DiffWidthWithParity_A, EnableParity && (DiffWidth == 8) || !EnableParity)
 
+  //////////////////////////////
+  // Integrity error latching //
+  //////////////////////////////
+
+  logic intg_err_q;
+  always_ff @(posedge clk_i or negedge rst_ni) begin
+    if (!rst_ni) begin
+      intg_err_q <= '0;
+    end else if (intg_error_i) begin
+      intg_err_q <= 1'b1;
+    end
+  end
+
+  prim_buf u_intg_err_out (
+    .in_i(intg_error_i | intg_err_q),
+    .out_o(intg_error_o)
+  );
+
   /////////////////////////////////////////
   // Pending Write and Address Registers //
   /////////////////////////////////////////

ParseResult:
INS HdlIdDef@@intg_err_q to objs
HdlIdDef: intg_err_q
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

INS HdlStmProcess@@ to objs
HdlStmProcess
    list: sensitivity
        HdlOp: RISING
            list: ops
                HdlValueId: clk_i
        HdlOp: FALLING
            list: ops
                HdlValueId: rst_ni
    HdlStmBlock: SEQ
        list: body
            HdlStmIf
                HdlOp: NEG_LOG
                    list: ops
                        HdlValueId: rst_ni
                HdlStmBlock: SEQ
                    list: body
                        HdlStmAssign
                            HdlValueInt: 0
                            HdlValueId: intg_err_q
                list: elifs
                    tuple
                        HdlValueId: intg_error_i
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmAssign
                                    HdlValueInt: 1
                                    HdlValueId: intg_err_q
    HdlStmProcessTriggerConstrain: FF


CommitId: 12cce14e3355f5df1c1d2c533a9686b88cc84b93
[tlul] Add memory transmission integrity checks
--- a/hw/ip/prim/rtl/prim_ram_1p_scr.sv
+++ b/hw/ip/prim/rtl/prim_ram_1p_scr.sv
@@ -118,8 +142,14 @@ module prim_ram_1p_scr #(
   assign addr_collision_d = read_en & (write_en_q | write_pending_q) & (addr_i == waddr_q);
 
   // Macro requests and write strobe
+  // The macro operation is silenced if an integrity error is seen
   logic macro_req;
-  assign macro_req   = read_en | write_en_q | write_pending_q;
+  logic intg_err_macro_req;
+  prim_buf u_intg_err_macro_req (
+    .in_i(intg_error_i | intg_err_q),
+    .out_o(intg_err_macro_req)
+  );
+  assign macro_req   = ~intg_err_macro_req & (read_en | write_en_q | write_pending_q);
   // We are allowed to write a pending write transaction to the memory if there is no incoming read
   logic macro_write;
   assign macro_write = (write_en_q | write_pending_q) & ~read_en;

ParseResult:
INS HdlIdDef@@intg_err_macro_req to objs
HdlIdDef: intg_err_macro_req
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

UPD HdlStmAssign@@ to 
    MOV HdlOp@@OR to 
    HdlOp: OR
        list: ops
            HdlOp: OR
                list: ops
                    HdlValueId: read_en
                    HdlValueId: write_en_q
            HdlValueId: write_pending_q


CommitId: 12cce14e3355f5df1c1d2c533a9686b88cc84b93
[tlul] Add memory transmission integrity checks
--- a/hw/ip/prim/rtl/prim_ram_1p_scr.sv
+++ b/hw/ip/prim/rtl/prim_ram_1p_scr.sv
@@ -138,18 +168,34 @@ module prim_ram_1p_scr #(
   // This creates a bijective address mapping using a substitution / permutation network.
   logic [AddrWidth-1:0] addr_scr;
   if (NumAddrScrRounds > 0) begin : gen_addr_scr
+
+    // TODO, expand this into copies with another primitive
+    logic intg_err_addr_scr;
+    prim_buf u_intg_err_addr_scr (
+      .in_i(intg_error_i | intg_err_q),
+      .out_o(intg_err_addr_scr)
+    );
+
+    // If there is an intergirty error, the nonce used is reversed
+    logic [AddrWidth-1:0] addr_scr_nonce;
+    for (genvar j = 0; j < AddrWidth; j++) begin : gen_addr_scr_nonce
+      assign addr_scr_nonce[j] = intg_err_addr_scr ?
+                                 nonce_i[NonceWidth - 1 - j] :
+                                 nonce_i[NonceWidth - AddrWidth + j];
+    end
+
     prim_subst_perm #(
       .DataWidth ( AddrWidth        ),
       .NumRounds ( NumAddrScrRounds ),
       .Decrypt   ( 0                )
     ) u_prim_subst_perm (
-      .data_i ( addr_mux ),
+      .data_i ( addr_mux       ),
       // Since the counter mode concatenates {nonce_i[NonceWidth-1-AddrWidth:0], addr_i} to form
       // the IV, the upper AddrWidth bits of the nonce are not used and can be used for address
       // scrambling. In cases where N parallel PRINCE blocks are used due to a data
       // width > 64bit, N*AddrWidth nonce bits are left dangling.
-      .key_i  ( nonce_i[NonceWidth - 1 : NonceWidth - AddrWidth] ),
-      .data_o ( addr_scr )
+      .key_i  ( addr_scr_nonce ),
+      .data_o ( addr_scr       )
     );
   end else begin : gen_no_addr_scr
     assign addr_scr = addr_mux;

ParseResult:
UPD HdlStmAssign@@ to 
    INS HdlOp@@AND to 
    UPD HdlOp@@AND to AND
        INS list@@ops to AND
        INS HdlOp@@NEG to ops
        HdlOp: NEG
            list: ops
                HdlValueId: intg_err_macro_req

INS HdlIdDef@@intg_err_addr_scr to body
HdlIdDef: intg_err_addr_scr
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

INS HdlIdDef@@addr_scr_nonce to body
HdlIdDef: addr_scr_nonce
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlOp: SUB
                        list: ops
                            HdlValueId: AddrWidth
                            HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: INTERNAL

INS HdlStmFor@@ to body

INS HdlStmAssign@@ to body


CommitId: 12cce14e3355f5df1c1d2c533a9686b88cc84b93
[tlul] Add memory transmission integrity checks
--- a/hw/ip/prim/rtl/prim_ram_1p_scr.sv
+++ b/hw/ip/prim/rtl/prim_ram_1p_scr.sv
@@ -166,8 +212,26 @@ module prim_ram_1p_scr #(
   // This encrypts the IV consisting of the nonce and address using the key provided in order to
   // generate the keystream for the data. Note that we instantiate a register halfway within this
   // primitive to balance the delay between request and response side.
+  localparam int DataNonceWidth = 64 - AddrWidth;
   logic [NumParScr*64-1:0] keystream;
+  logic [NumParScr-1:0][DataNonceWidth-1:0] data_scr_nonce;
+
+  // TODO, expand this into copies with another primitive
+  logic intg_err_data_scr;
+  prim_buf u_intg_err_data_scr (
+    .in_i(intg_error_i | intg_err_q),
+    .out_o(intg_err_data_scr)
+  );
+
   for (genvar k = 0; k < NumParScr; k++) begin : gen_par_scr
+
+    for (genvar j = 0; j < DataNonceWidth; j++) begin : gen_data_nonce
+      assign data_scr_nonce[k][j] = intg_err_data_scr ?
+                                    nonce_i[(k + 1) * DataNonceWidth - j] :
+                                    nonce_i[k * DataNonceWidth + j];
+    end
+
+
     prim_prince #(
       .DataWidth      (64),
       .KeyWidth       (128),

ParseResult:
INS HdlIdDef@@DataNonceWidth to objs

INS HdlIdDef@@data_scr_nonce to objs
HdlIdDef: data_scr_nonce
    HdlOp: INDEX
        list: ops
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: logic
                    HdlOp: DOWNTO
                        list: ops
                            HdlOp: SUB
                                list: ops
                                    HdlValueId: NumParScr
                                    HdlValueInt: 1
                            HdlValueInt: 0
            HdlOp: DOWNTO
                list: ops
                    HdlOp: SUB
                        list: ops
                            HdlValueId: DataNonceWidth
                            HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: INTERNAL


CommitId: 479f000f4fd06577ae91d63095a5d886009f7635
[hmac,lint] Use a static cast for RoundWidth in sha2.sv
--- a/hw/ip/hmac/rtl/sha2.sv
+++ b/hw/ip/hmac/rtl/sha2.sv
@@ -27,13 +27,15 @@ module sha2 import hmac_pkg::*; (
   output sha_word_t [7:0] digest
 );
 
+  localparam int unsigned RoundWidth = $clog2(NumRound);
+
   logic msg_feed_complete;
 
   logic      shaf_rready;
   sha_word_t shaf_rdata;
   logic      shaf_rvalid;
 
-  logic [$clog2(NumRound)-1:0] round;
+  logic [RoundWidth-1:0] round;
 
   logic      [3:0]  w_index;
   sha_word_t [15:0] w;

ParseResult:
INS HdlIdDef@@RoundWidth to objs

UPD HdlIdDef@@RoundWidth to RoundWidth
    INS HdlOp@@PARAMETRIZATION to RoundWidth
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: int
            HdlOp: MAP_ASSOCIATION
                list: ops
                    HdlValueId: signed
    INS HdlDirection@@INTERNAL to RoundWidth

UPD HdlIdDef@@round to round
    UPD HdlOp@@PARAMETRIZATION to PARAMETRIZATION
        UPD HdlOp@@DOWNTO to DOWNTO
            UPD HdlOp@@SUB to SUB
                MOV HdlOp@@CALL to ops
                HdlOp: CALL
                    list: ops
                        HdlValueId: $clog2
                        HdlValueId: NumRound

UPD HdlIdDef@@round to round
    UPD HdlOp@@PARAMETRIZATION to PARAMETRIZATION
        UPD HdlOp@@DOWNTO to DOWNTO
            UPD HdlOp@@SUB to SUB
                INS HdlValueId@@RoundWidth to ops


CommitId: 479f000f4fd06577ae91d63095a5d886009f7635
[hmac,lint] Use a static cast for RoundWidth in sha2.sv
--- a/hw/ip/hmac/rtl/sha2.sv
+++ b/hw/ip/hmac/rtl/sha2.sv
@@ -128,7 +130,7 @@ module sha2 import hmac_pkg::*; (
     end else if (!sha_en) begin
       round <= '0;
     end else if (run_hash) begin
-      if (round == (NumRound-1)) begin
+      if (round == RoundWidth'(NumRound-1)) begin
         round <= '0;
       end else begin
         round <= round + 1;
ParseResult:
UPD HdlStmIf@@ to 
    INS HdlOp@@EQ to 
    UPD HdlOp@@EQ to EQ
        INS list@@ops to EQ
        INS HdlValueId@@round to ops

UPD HdlStmIf@@ to 
    UPD HdlOp@@EQ to CALL
    MOV HdlOp@@EQ to 
    HdlOp: EQ
        list: ops
            HdlValueId: round
            HdlOp: SUB
                list: ops
                    HdlValueId: NumRound
                    HdlValueInt: 1
    UPD HdlOp@@EQ to EQ
        UPD HdlValueId@@round to RoundWidth


CommitId: 55fd78e67b61c8ec2a4e9a23277c530eef242eb9
Update lowrisc_ibex to lowRISC/ibex@f025236
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_controller.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_controller.sv
@@ -113,7 +113,7 @@ module ibex_controller (
   logic enter_debug_mode;
   logic handle_irq;
 
-  logic [4:0] mfip_id;
+  logic [3:0] mfip_id;
   logic       unused_csr_mtip;
 
 `ifndef SYNTHESIS

ParseResult:
INS HdlIdDef@@mfip_id to objs
HdlIdDef: mfip_id
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 3
                    HdlValueInt: 0
    HdlDirection: INTERNAL

DEL HdlIdDef@@mfip_id from objs
HdlIdDef: mfip_id
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 4
                    HdlValueInt: 0
    HdlDirection: INTERNAL


CommitId: 55fd78e67b61c8ec2a4e9a23277c530eef242eb9
Update lowrisc_ibex to lowRISC/ibex@f025236
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_controller.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_controller.sv
@@ -215,7 +215,7 @@ module ibex_controller (
     debug_csr_save_o      = 1'b0;
     debug_cause_o         = DBG_CAUSE_EBREAK;
     debug_mode_d          = debug_mode_q;
-    nmi_mode_d            = 1'b0;
+    nmi_mode_d            = nmi_mode_q;
 
     perf_tbranch_o        = 1'b0;
     perf_jump_o           = 1'b0;

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlValueId@@nmi_mode_q to ops

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            DEL HdlValueInt@@0 from ops


CommitId: 55fd78e67b61c8ec2a4e9a23277c530eef242eb9
Update lowrisc_ibex to lowRISC/ibex@f025236
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_controller.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_controller.sv
@@ -360,7 +360,11 @@ module ibex_controller (
             exc_cause_o = EXC_CAUSE_IRQ_NM;
             nmi_mode_d  = 1'b1; // enter NMI mode
           end else if (csr_mfip_i != 15'b0) begin
-            exc_cause_o = exc_cause_e'({1'b1, mfip_id});
+            // generate exception cause ID from fast interrupt ID:
+            // - first bit distinguishes interrupts from exceptions,
+            // - second bit adds 16 to fast interrupt ID
+            // for example EXC_CAUSE_IRQ_FAST_0 = {1'b1, 5'd16}
+            exc_cause_o = exc_cause_e'({2'b11, mfip_id});
           end else if (csr_meip_i) begin
             exc_cause_o = EXC_CAUSE_IRQ_EXTERNAL_M;
           end else if (csr_msip_i) begin
ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlValueId@@nmi_mode_q to ops

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@CALL to CALL
                UPD HdlOp@@CONCAT to CONCAT
                    UPD HdlValueInt@@1 to 11

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            DEL HdlValueInt@@0 from ops


CommitId: 5c323ef52ef42785286da49a3a2919a35dce75d9
[usb] Fix lint errors
--- a/hw/ip/usbuart/rtl/usbuart.sv
+++ b/hw/ip/usbuart/rtl/usbuart.sv
@@ -55,12 +55,9 @@ module usbuart (
     .hw2reg,
 
     .devmode_i  (1'b1)
-    );
+  );
 
-  logic              usb_tx_en_o;
-  assign cio_usb_dp_en_o = usb_tx_en_o;
-  assign cio_usb_dn_en_o = usb_tx_en_o;
-  assign cio_pullup_en_o = 1;
+  assign cio_pullup_o = 1'b1;
 
   usbuart_core usbuart_core (
     .clk_i,

ParseResult:
UPD HdlStmAssign@@ to 
    UPD HdlValueId@@cio_pullup_en_o to cio_pullup_o

DEL HdlIdDef@@usb_tx_en_o from objs
HdlIdDef: usb_tx_en_o
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

DEL HdlStmAssign@@ from objs
HdlStmAssign
    HdlValueId: usb_tx_en_o
    HdlValueId: cio_usb_dp_en_o

DEL HdlStmAssign@@ from objs
HdlStmAssign
    HdlValueId: usb_tx_en_o
    HdlValueId: cio_usb_dn_en_o


CommitId: 548810e191222d071171a2db8499bc4dbf2ccea5
[prim] Avoid an apparent combinatorial loop in prim_secded_*_dec.sv
--- a/hw/ip/prim/rtl/prim_secded_28_22_dec.sv
+++ b/hw/ip/prim/rtl/prim_secded_28_22_dec.sv
@@ -12,6 +12,7 @@ module prim_secded_28_22_dec (
   output logic [1:0] err_o
 );
 
+  logic single_error;
 
   // Syndrome calculation
   assign syndrome_o[0] = ^(in & 28'h07003FF);

ParseResult:
INS HdlIdDef@@single_error to objs
HdlIdDef: single_error
    HdlDirection: INTERNAL


CommitId: 548810e191222d071171a2db8499bc4dbf2ccea5
[prim] Avoid an apparent combinatorial loop in prim_secded_*_dec.sv
--- a/hw/ip/prim/rtl/prim_secded_28_22_dec.sv
+++ b/hw/ip/prim/rtl/prim_secded_28_22_dec.sv
@@ -46,7 +47,8 @@ module prim_secded_28_22_dec (
   assign d_o[21] = (syndrome_o == 6'h1f) ^ in[21];
 
   // err_o calc. bit0: single error, bit1: double error
-  assign err_o[0] = ^syndrome_o;
-  assign err_o[1] = ~err_o[0] & (|syndrome_o);
+  assign single_error = ^syndrome_o;
+  assign err_o[0] = single_error;
+  assign err_o[1] = ~single_error & (|syndrome_o);
 
 endmodule : prim_secded_28_22_dec
ParseResult:
INS HdlStmAssign@@ to objs

UPD HdlStmAssign@@ to 
    MOV HdlOp@@XOR_UNARY to 
    HdlOp: XOR_UNARY
        list: ops
            HdlValueId: syndrome_o

UPD HdlStmAssign@@ to 
    INS HdlValueId@@single_error to 

UPD HdlStmAssign@@ to 
    INS HdlValueId@@single_error to 

UPD HdlStmAssign@@ to 
    UPD HdlOp@@AND to AND
        UPD HdlOp@@NEG to NEG
            UPD HdlOp@@INDEX to INDEX
                MOV list@@ops to INDEX
                list: ops
                    HdlValueId: err_o
                    HdlValueInt: 0
                UPD HdlValueId@@err_o to single_error
                DEL HdlValueInt@@0 from ops
            DEL HdlOp@@INDEX from ops
            DEL list@@ops from NEG


CommitId: fa976d438a9445b5389b8cbb70b972c9c365b883
Update pulp_riscv_dbg to pulp-platform/riscv-dbg@6bef5d8
--- a/hw/vendor/pulp_riscv_dbg/src/dm_mem.sv
+++ b/hw/vendor/pulp_riscv_dbg/src/dm_mem.sv
@@ -137,7 +137,7 @@ module dm_mem #(
     resume           = 1'b0;
     cmdbusy_o        = 1'b1;
 
-    case (state_q)
+    unique case (state_q)
       Idle: begin
         cmdbusy_o = 1'b0;
         if (cmd_valid_i && halted_q_aligned[hartsel] && !unsupported_command) begin

ParseResult:
UPD HdlStmCase@@state_q to state_q
    INS HdlStmCaseUniqConstrain@@UNIQUE to state_q


CommitId: fa976d438a9445b5389b8cbb70b972c9c365b883
Update pulp_riscv_dbg to pulp-platform/riscv-dbg@6bef5d8
--- a/hw/vendor/pulp_riscv_dbg/src/dm_mem.sv
+++ b/hw/vendor/pulp_riscv_dbg/src/dm_mem.sv
@@ -182,6 +182,8 @@ module dm_mem #(
           state_d = Idle;
         end
       end
+
+      default: ;
     endcase
 
     // only signal once that cmd is unsupported so that we can clear cmderr
ParseResult:
INS HdlStmNop@@default to state_q

UPD HdlStmCase@@state_q to state_q
    INS HdlStmCaseUniqConstrain@@UNIQUE to state_q


CommitId: 952b9b822bb017aeea87b47670b179d5a7e3d0a8
[hmac] Meet the Verilog Style Guide
--- a/hw/ip/hmac/rtl/sha2.sv
+++ b/hw/ip/hmac/rtl/sha2.sv
@@ -163,43 +163,43 @@ module sha2 import hmac_pkg::*; (
     FifoWait
   } fifoctl_state_e;
 
-  fifoctl_state_e fifo_st, fifo_st_next;
+  fifoctl_state_e fifo_st_q, fifo_st_d;
 
   always_ff @(posedge clk_i or negedge rst_ni) begin
     if (!rst_ni) begin
-      fifo_st <= FifoIdle;
+      fifo_st_q <= FifoIdle;
     end else begin
-      fifo_st <= fifo_st_next;
+      fifo_st_q <= fifo_st_d;
     end
   end
 
   always_comb begin
-    fifo_st_next = FifoIdle;
+    fifo_st_d = FifoIdle;
     update_w_from_fifo = 1'b0;
     hash_done_next = 1'b0;
 
-    unique case (fifo_st)
+    unique case (fifo_st_q)
       FifoIdle: begin
         if (hash_start) begin
-          fifo_st_next = FifoLoadFromFifo;
+          fifo_st_d = FifoLoadFromFifo;
         end else begin
-          fifo_st_next = FifoIdle;
+          fifo_st_d = FifoIdle;
         end
       end
 
       FifoLoadFromFifo: begin
         if (!sha_en) begin
-          fifo_st_next = FifoIdle;
+          fifo_st_d = FifoIdle;
           update_w_from_fifo = 1'b0;
         end else if (!shaf_rvalid) begin
           // Wait until it is filled
-          fifo_st_next = FifoLoadFromFifo;
+          fifo_st_d = FifoLoadFromFifo;
           update_w_from_fifo = 1'b0;
         end else if (w_index == 4'd 15) begin
-          fifo_st_next = FifoWait;
+          fifo_st_d = FifoWait;
           update_w_from_fifo = 1'b1;
         end else begin
-          fifo_st_next = FifoLoadFromFifo;
+          fifo_st_d = FifoLoadFromFifo;
           update_w_from_fifo = 1'b1;
         end
       end

ParseResult:
UPD HdlIdDef@@fifo_st to fifo_st_q

UPD HdlIdDef@@fifo_st_next to fifo_st_d

UPD HdlStmCase@@fifo_st to fifo_st_q

UPD HdlStmCase@@fifo_st to fifo_st
    UPD HdlValueId@@fifo_st to fifo_st_q
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@fifo_st_next to fifo_st_d

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@fifo_st_next to fifo_st_d

UPD HdlStmAssign@@ to 
    UPD HdlValueId@@fifo_st to fifo_st_q

UPD HdlStmAssign@@ to 
    UPD HdlValueId@@fifo_st_next to fifo_st_d
    UPD HdlValueId@@fifo_st to fifo_st_q

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@fifo_st_next to fifo_st_d
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@fifo_st_next to fifo_st_d

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@fifo_st_next to fifo_st_d
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@fifo_st_next to fifo_st_d
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@fifo_st_next to fifo_st_d
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@fifo_st_next to fifo_st_d


CommitId: 952b9b822bb017aeea87b47670b179d5a7e3d0a8
[hmac] Meet the Verilog Style Guide
--- a/hw/ip/hmac/rtl/sha2.sv
+++ b/hw/ip/hmac/rtl/sha2.sv
@@ -209,21 +209,21 @@ module sha2 import hmac_pkg::*; (
         // TODO: Detect at the end of the message
         if (msg_feed_complete && complete_one_chunk) begin
           // TODO: Should we wait until round hits 63?
-          fifo_st_next = FifoIdle;
+          fifo_st_d = FifoIdle;
 
           hash_done_next = 1'b1;
         // TODO: make below FIFO feeding logic concrete.
         //       currently, with below commented logic, it doesn't fill FIFO correctly.
         //end else if (!in_end_chunk && round == 6'd47) begin
         end else if (complete_one_chunk) begin
-          fifo_st_next = FifoLoadFromFifo;
+          fifo_st_d = FifoLoadFromFifo;
         end else begin
-          fifo_st_next = FifoWait;
+          fifo_st_d = FifoWait;
         end
       end
 
       default: begin
-        fifo_st_next = FifoIdle;
+        fifo_st_d = FifoIdle;
       end
     endcase
   end

ParseResult:
UPD HdlStmCase@@fifo_st to fifo_st_q

UPD HdlStmCase@@fifo_st to fifo_st
    UPD HdlValueId@@fifo_st to fifo_st_q
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@fifo_st_next to fifo_st_d

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@fifo_st_next to fifo_st_d

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@fifo_st_next to fifo_st_d
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@fifo_st_next to fifo_st_d
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@fifo_st_next to fifo_st_d


CommitId: 952b9b822bb017aeea87b47670b179d5a7e3d0a8
[hmac] Meet the Verilog Style Guide
--- a/hw/ip/hmac/rtl/sha2.sv
+++ b/hw/ip/hmac/rtl/sha2.sv
@@ -235,13 +235,13 @@ module sha2 import hmac_pkg::*; (
     ShaUpdateDigest
   } sha_st_t;
 
-  sha_st_t sha_st, sha_st_next;
+  sha_st_t sha_st_q, sha_st_d;
 
   always_ff @(posedge clk_i or negedge rst_ni) begin
     if (!rst_ni) begin
-      sha_st <= ShaIdle;
+      sha_st_q <= ShaIdle;
     end else begin
-      sha_st <= sha_st_next;
+      sha_st_q <= sha_st_d;
     end
   end
 

ParseResult:
UPD HdlIdDef@@sha_st to sha_st_q

UPD HdlIdDef@@sha_st_next to sha_st_d

UPD HdlStmAssign@@ to 
    UPD HdlValueId@@sha_st to sha_st_q

UPD HdlStmAssign@@ to 
    UPD HdlValueId@@sha_st_next to sha_st_d
    UPD HdlValueId@@sha_st to sha_st_q


CommitId: 952b9b822bb017aeea87b47670b179d5a7e3d0a8
[hmac] Meet the Verilog Style Guide
--- a/hw/ip/hmac/rtl/sha2.sv
+++ b/hw/ip/hmac/rtl/sha2.sv
@@ -254,13 +254,13 @@ module sha2 import hmac_pkg::*; (
     init_hash        = 1'b0;
     run_hash         = 1'b0;
 
-    unique case (sha_st)
+    unique case (sha_st_q)
       ShaIdle: begin
-        if (fifo_st == FifoWait) begin
+        if (fifo_st_q == FifoWait) begin
           init_hash = 1'b1;
-          sha_st_next = ShaCompress;
+          sha_st_d = ShaCompress;
         end else begin
-          sha_st_next = ShaIdle;
+          sha_st_d = ShaIdle;
         end
       end
 

ParseResult:
UPD HdlStmCase@@sha_st to sha_st_q

UPD HdlStmCase@@sha_st to sha_st
    UPD HdlValueId@@sha_st to sha_st_q
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@sha_st_next to sha_st_d

UPD HdlStmIf@@ to 
    UPD HdlOp@@EQ to EQ
        UPD HdlValueId@@fifo_st to fifo_st_q
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@sha_st_next to sha_st_d
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@sha_st_next to sha_st_d


CommitId: 952b9b822bb017aeea87b47670b179d5a7e3d0a8
[hmac] Meet the Verilog Style Guide
--- a/hw/ip/hmac/rtl/sha2.sv
+++ b/hw/ip/hmac/rtl/sha2.sv
@@ -272,24 +272,24 @@ module sha2 import hmac_pkg::*; (
         end
 
         if (complete_one_chunk) begin
-          sha_st_next = ShaUpdateDigest;
+          sha_st_d = ShaUpdateDigest;
         end else begin
-          sha_st_next = ShaCompress;
+          sha_st_d = ShaCompress;
         end
       end
 
       ShaUpdateDigest: begin
         update_digest = 1'b1;
-        if (fifo_st == FifoWait) begin
+        if (fifo_st_q == FifoWait) begin
           init_hash = 1'b1;
-          sha_st_next = ShaCompress;
+          sha_st_d = ShaCompress;
         end else begin
-          sha_st_next = ShaIdle;
+          sha_st_d = ShaIdle;
         end
       end
 
       default: begin
-        sha_st_next = ShaIdle;
+        sha_st_d = ShaIdle;
       end
     endcase
   end
ParseResult:
UPD HdlStmCase@@sha_st to sha_st_q

UPD HdlStmCase@@sha_st to sha_st
    UPD HdlValueId@@sha_st to sha_st_q
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@sha_st_next to sha_st_d

UPD HdlStmIf@@ to 
    UPD HdlOp@@EQ to EQ
        UPD HdlValueId@@fifo_st to fifo_st_q
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@sha_st_next to sha_st_d
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@sha_st_next to sha_st_d

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@sha_st_next to sha_st_d
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@sha_st_next to sha_st_d


CommitId: 1b5fa9f1ebf0a9520ef6ea6faf1f1a2397a349c1
[verible/style] This corrects several style linter warnings/errors
--- a/hw/ip/prim/rtl/prim_flop_2sync.sv
+++ b/hw/ip/prim/rtl/prim_flop_2sync.sv
@@ -5,7 +5,7 @@
 // Generic double-synchronizer flop
 
 module prim_flop_2sync #(
-  parameter Width = 16,
+  parameter int Width      = 16,
   parameter bit ResetValue = 0
 ) (
   input                    clk_i,    // receive clock
ParseResult:
UPD HdlIdDef@@Width to Width
    INS HdlValueId@@int to Width


CommitId: 17e9624c452e05f71f4ad2b7c75bf6bbb071c324
Update lowrisc_ibex to lowRISC/ibex@ee1098f
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_controller.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_controller.sv
@@ -74,6 +74,8 @@ module ibex_controller (
     output logic                  csr_restore_mret_id_o,
     output logic                  csr_save_cause_o,
     output logic [31:0]           csr_mtval_o,
+    input  ibex_pkg::priv_lvl_e   priv_mode_i,
+    input  logic                  csr_mstatus_tw_i,
 
     // stall signals
     input  logic                  stall_lsu_i,

ParseResult:
INS HdlIdDef@@priv_mode_i to ports
HdlIdDef: priv_mode_i
    HdlOp: DOUBLE_COLON
        list: ops
            HdlValueId: ibex_pkg
            HdlValueId: priv_lvl_e
    HdlDirection: IN

INS HdlIdDef@@csr_mstatus_tw_i to ports
HdlIdDef: csr_mstatus_tw_i
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: IN


CommitId: 17e9624c452e05f71f4ad2b7c75bf6bbb071c324
Update lowrisc_ibex to lowRISC/ibex@ee1098f
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_controller.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_controller.sv
@@ -101,13 +103,14 @@ module ibex_controller (
   logic debug_mode_q, debug_mode_d;
   logic load_err_q, load_err_d;
   logic store_err_q, store_err_d;
+  logic exc_req_q, exc_req_d;
+  logic illegal_insn_q, illegal_insn_d;
 
   logic stall;
   logic halt_if;
-  logic halt_id;
+  logic flush_id;
   logic illegal_dret;
-  logic illegal_insn;
-  logic exc_req;
+  logic illegal_umode;
   logic exc_req_lsu;
   logic special_req;
   logic enter_debug_mode;

ParseResult:
MOV HdlIdDef@@illegal_dret to objs
HdlIdDef: illegal_dret
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

MOV HdlIdDef@@halt_id to objs
HdlIdDef: halt_id
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

MOV HdlIdDef@@exc_req to objs
HdlIdDef: exc_req
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

INS HdlIdDef@@exc_req_q to objs
HdlIdDef: exc_req_q
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

INS HdlIdDef@@exc_req_d to objs
HdlIdDef: exc_req_d
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

INS HdlIdDef@@illegal_insn_q to objs
HdlIdDef: illegal_insn_q
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

INS HdlIdDef@@illegal_insn_d to objs
HdlIdDef: illegal_insn_d
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

UPD HdlIdDef@@illegal_insn to flush_id

UPD HdlIdDef@@halt_id to illegal_umode

UPD HdlIdDef@@exc_req to ecall_insn


CommitId: 17e9624c452e05f71f4ad2b7c75bf6bbb071c324
Update lowrisc_ibex to lowRISC/ibex@ee1098f
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_controller.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_controller.sv
@@ -116,13 +119,21 @@ module ibex_controller (
   logic [3:0] mfip_id;
   logic       unused_csr_mtip;
 
+  logic ecall_insn;
+  logic mret_insn;
+  logic dret_insn;
+  logic wfi_insn;
+  logic ebrk_insn;
+  logic csr_pipe_flush;
+  logic instr_fetch_err;
+
 `ifndef SYNTHESIS
   // synopsys translate_off
   // make sure we are called later so that we do not generate messages for
   // glitches
   always_ff @(negedge clk_i) begin
     // print warning in case of decoding errors
-    if ((ctrl_fsm_cs == DECODE) && instr_valid_i && illegal_insn) begin
+    if ((ctrl_fsm_cs == DECODE) && instr_valid_i && !instr_fetch_err_i && illegal_insn_d) begin
       $display("%t: Illegal instruction (hart %0x) at PC 0x%h: 0x%h", $time, ibex_core.hart_id_i,
                ibex_id_stage.pc_id_i, ibex_id_stage.instr_rdata_i);
     end

ParseResult:
INS HdlIdDef@@mret_insn to objs
HdlIdDef: mret_insn
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

INS HdlIdDef@@dret_insn to objs
HdlIdDef: dret_insn
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

INS HdlIdDef@@wfi_insn to objs
HdlIdDef: wfi_insn
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

INS HdlIdDef@@ebrk_insn to objs
HdlIdDef: ebrk_insn
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

INS HdlIdDef@@csr_pipe_flush to objs
HdlIdDef: csr_pipe_flush
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

INS HdlIdDef@@instr_fetch_err to objs
HdlIdDef: instr_fetch_err
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

UPD HdlStmIf@@ to 
    MOV HdlOp@@AND_LOG to 
    HdlOp: AND_LOG
        list: ops
            HdlOp: AND_LOG
                list: ops
                    HdlOp: EQ
                        list: ops
                            HdlValueId: ctrl_fsm_cs
                            HdlValueId: DECODE
                    HdlValueId: instr_valid_i
            HdlValueId: illegal_insn
    UPD HdlOp@@AND_LOG to AND_LOG
        UPD HdlValueId@@illegal_insn to instr_fetch_err_i
        MOV HdlValueId@@illegal_insn to ops
        HdlValueId: illegal_insn


CommitId: 17e9624c452e05f71f4ad2b7c75bf6bbb071c324
Update lowrisc_ibex to lowRISC/ibex@ee1098f
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_controller.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_controller.sv
@@ -210,7 +244,7 @@ module ibex_controller (
     first_fetch_o         = 1'b0;
 
     halt_if               = 1'b0;
-    halt_id               = 1'b0;
+    flush_id              = 1'b0;
 
     debug_csr_save_o      = 1'b0;
     debug_cause_o         = DBG_CAUSE_EBREAK;

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@halt_id to flush_id


CommitId: 17e9624c452e05f71f4ad2b7c75bf6bbb071c324
Update lowrisc_ibex to lowRISC/ibex@ee1098f
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_controller.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_controller.sv
@@ -244,7 +278,7 @@ module ibex_controller (
         ctrl_busy_o   = 1'b0;
         instr_req_o   = 1'b0;
         halt_if       = 1'b1;
-        halt_id       = 1'b1;
+        flush_id      = 1'b1;
         ctrl_fsm_ns   = SLEEP;
       end
 

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@halt_id to flush_id

UPD HdlStmCase@@ctrl_fsm_cs to ctrl_fsm_cs
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@halt_id to flush_id
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@halt_id to flush_id
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@halt_id to flush_id


CommitId: 17e9624c452e05f71f4ad2b7c75bf6bbb071c324
Update lowrisc_ibex to lowRISC/ibex@ee1098f
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_controller.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_controller.sv
@@ -254,7 +288,7 @@ module ibex_controller (
         ctrl_busy_o   = 1'b0;
         instr_req_o   = 1'b0;
         halt_if       = 1'b1;
-        halt_id       = 1'b1;
+        flush_id      = 1'b1;
 
         // normal execution flow
         // in debug mode or single step mode we leave immediately (wfi=nop)

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@halt_id to flush_id

UPD HdlStmCase@@ctrl_fsm_cs to ctrl_fsm_cs
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@halt_id to flush_id
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@halt_id to flush_id
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@halt_id to flush_id


CommitId: 17e9624c452e05f71f4ad2b7c75bf6bbb071c324
Update lowrisc_ibex to lowRISC/ibex@ee1098f
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_controller.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_controller.sv
@@ -276,14 +310,14 @@ module ibex_controller (
           // going to sleep.
           ctrl_fsm_ns = IRQ_TAKEN;
           halt_if     = 1'b1;
-          halt_id     = 1'b1;
+          flush_id    = 1'b1;
         end
 
         // enter debug mode
         if (enter_debug_mode) begin
           ctrl_fsm_ns = DBG_TAKEN_IF;
           halt_if     = 1'b1;
-          halt_id     = 1'b1;
+          flush_id    = 1'b1;
         end
       end
 

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@halt_id to flush_id

UPD HdlStmCase@@ctrl_fsm_cs to ctrl_fsm_cs
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@halt_id to flush_id
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@halt_id to flush_id
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@halt_id to flush_id

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@halt_id to flush_id

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@halt_id to flush_id


CommitId: 17e9624c452e05f71f4ad2b7c75bf6bbb071c324
Update lowrisc_ibex to lowRISC/ibex@ee1098f
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_controller.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_controller.sv
@@ -296,21 +330,23 @@ module ibex_controller (
 
         if (instr_valid_i) begin
 
+          // get ready for special instructions, exceptions, pipeline flushes
+          if (special_req) begin
+            // Halt IF but don't flush ID. This leaves a valid instruction in
+            // ID so controller can determine appropriate action in the
+            // FLUSH state.
+            ctrl_fsm_ns = FLUSH;
+            halt_if     = 1'b1;
           // set PC in IF stage to branch or jump target
-          if (branch_set_i || jump_set_i) begin
+          end else if (branch_set_i || jump_set_i) begin
             pc_mux_o       = PC_JUMP;
             pc_set_o       = 1'b1;
 
             perf_tbranch_o = branch_set_i;
             perf_jump_o    = jump_set_i;
-
-          // get ready for special instructions, exceptions, pipeline flushes
-          end else if (special_req) begin
-            ctrl_fsm_ns = FLUSH;
-            halt_if     = 1'b1;
-            halt_id     = 1'b1;
           end
 
+
           // stall IF stage to not starve debug and interrupt requests, these just
           // need to wait until after the current (multicycle) instruction
           if ((enter_debug_mode || handle_irq) && stall) begin

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@halt_id to flush_id

UPD HdlStmCase@@ctrl_fsm_cs to ctrl_fsm_cs
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@halt_id to flush_id
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@halt_id to flush_id
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@halt_id to flush_id

UPD HdlStmIf@@ to 
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: ctrl_fsm_ns
                    HdlValueId: FLUSH
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: halt_if
                    HdlValueInt: 1
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: halt_id
                    HdlValueInt: 1
    MOV HdlOp@@OR_LOG to 
    HdlOp: OR_LOG
        list: ops
            HdlValueId: branch_set_i
            HdlValueId: jump_set_i
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: pc_mux_o
                    HdlValueId: PC_JUMP
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: pc_set_o
                    HdlValueInt: 1
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: perf_tbranch_o
                    HdlValueId: branch_set_i
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: perf_jump_o
                    HdlValueId: jump_set_i
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: halt_id
                HdlValueInt: 1
    DEL HdlValueId@@special_req from 


CommitId: 17e9624c452e05f71f4ad2b7c75bf6bbb071c324
Update lowrisc_ibex to lowRISC/ibex@ee1098f
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_controller.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_controller.sv
@@ -334,13 +370,13 @@ module ibex_controller (
             // enter debug mode
             ctrl_fsm_ns = DBG_TAKEN_IF;
             halt_if     = 1'b1;
-            halt_id     = 1'b1;
+            flush_id    = 1'b1;
 
           end else if (handle_irq) begin
             // handle interrupt (not in debug mode)
             ctrl_fsm_ns = IRQ_TAKEN;
             halt_if     = 1'b1;
-            halt_id     = 1'b1;
+            flush_id    = 1'b1;
           end
         end
 

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@halt_id to flush_id

UPD HdlStmCase@@ctrl_fsm_cs to ctrl_fsm_cs
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@halt_id to flush_id
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@halt_id to flush_id
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@halt_id to flush_id

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@halt_id to flush_id
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@halt_id to flush_id


CommitId: 17e9624c452e05f71f4ad2b7c75bf6bbb071c324
Update lowrisc_ibex to lowRISC/ibex@ee1098f
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_controller.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_controller.sv
@@ -410,7 +446,7 @@ module ibex_controller (
         //
         // for 1. do not update dcsr and dpc, for 2. do so [Debug Spec v0.13.2, p.39]
         // jump to debug exception handler in debug memory
-        if (ebrk_insn_i) begin
+        if (ebrk_insn) begin
           pc_mux_o     = PC_EXC;
           pc_set_o     = 1'b1;
           exc_pc_mux_o = EXC_PC_DBD;

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@halt_id to flush_id

UPD HdlStmIf@@ to 
    UPD HdlValueId@@ebrk_insn_i to ebrk_insn

UPD HdlStmCase@@ctrl_fsm_cs to ctrl_fsm_cs
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@halt_id to flush_id
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@halt_id to flush_id
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@halt_id to flush_id


CommitId: 17e9624c452e05f71f4ad2b7c75bf6bbb071c324
Update lowrisc_ibex to lowRISC/ibex@ee1098f
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_controller.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_controller.sv
@@ -437,12 +473,12 @@ module ibex_controller (
       FLUSH: begin
         // flush the pipeline
         halt_if     = 1'b1;
-        halt_id     = 1'b1;
+        flush_id    = 1'b1;
         ctrl_fsm_ns = DECODE;
 
         // exceptions: set exception PC, save PC and exception cause
         // exc_req_lsu is high for one clock cycle only (in DECODE)
-        if (exc_req || store_err_q || load_err_q) begin
+        if (exc_req_q || store_err_q || load_err_q) begin
           pc_set_o         = 1'b1;
           pc_mux_o         = PC_EXC;
           exc_pc_mux_o     = debug_mode_q ? EXC_PC_DBG_EXC : EXC_PC_EXC;

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@halt_id to flush_id

UPD HdlStmCase@@ctrl_fsm_cs to ctrl_fsm_cs
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@halt_id to flush_id
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@halt_id to flush_id
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@halt_id to flush_id

UPD HdlStmIf@@ to 
    UPD HdlOp@@OR_LOG to OR_LOG
        UPD HdlOp@@OR_LOG to OR_LOG
            UPD HdlValueId@@exc_req to exc_req_q


CommitId: 17e9624c452e05f71f4ad2b7c75bf6bbb071c324
Update lowrisc_ibex to lowRISC/ibex@ee1098f
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_controller.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_controller.sv
@@ -450,18 +486,19 @@ module ibex_controller (
           csr_save_cause_o = 1'b1;
 
           // set exception registers, priorities according to Table 3.7 of Privileged Spec v1.11
-          if (instr_fetch_err_i) begin
+          if (instr_fetch_err) begin
             exc_cause_o = EXC_CAUSE_INSTR_ACCESS_FAULT;
             csr_mtval_o = pc_id_i;
 
-          end else if (illegal_insn) begin
+          end else if (illegal_insn_q) begin
             exc_cause_o = EXC_CAUSE_ILLEGAL_INSN;
             csr_mtval_o = instr_is_compressed_i ? {16'b0, instr_compressed_i} : instr_i;
 
-          end else if (ecall_insn_i) begin
-            exc_cause_o = EXC_CAUSE_ECALL_MMODE;
+          end else if (ecall_insn) begin
+            exc_cause_o = (priv_mode_i == PRIV_LVL_M) ? EXC_CAUSE_ECALL_MMODE :
+                                                        EXC_CAUSE_ECALL_UMODE;
 
-          end else if (ebrk_insn_i) begin
+          end else if (ebrk_insn) begin
             if (debug_mode_q) begin
               /*
                * EBREAK in debug mode re-enters debug mode

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@halt_id to flush_id

UPD HdlStmCase@@ctrl_fsm_cs to ctrl_fsm_cs
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@halt_id to flush_id
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@halt_id to flush_id
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@halt_id to flush_id

UPD HdlStmIf@@ to 
    UPD HdlValueId@@instr_fetch_err_i to instr_fetch_err
    UPD HdlValueId@@illegal_insn to illegal_insn_q
    UPD HdlValueId@@ecall_insn_i to ecall_insn
    UPD HdlValueId@@ebrk_insn_i to ebrk_insn
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            MOV HdlValueId@@EXC_CAUSE_ECALL_MMODE to ops
            HdlValueId: EXC_CAUSE_ECALL_MMODE

UPD HdlStmIf@@ to 
    UPD HdlOp@@OR_LOG to OR_LOG
        UPD HdlOp@@OR_LOG to OR_LOG
            UPD HdlValueId@@exc_req to exc_req_q


CommitId: 17e9624c452e05f71f4ad2b7c75bf6bbb071c324
Update lowrisc_ibex to lowRISC/ibex@ee1098f
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_controller.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_controller.sv
@@ -508,24 +545,24 @@ module ibex_controller (
 
         end else begin
           // special instructions and pipeline flushes
-          if (mret_insn_i) begin
+          if (mret_insn) begin
             pc_mux_o              = PC_ERET;
             pc_set_o              = 1'b1;
             csr_restore_mret_id_o = 1'b1;
             if (nmi_mode_q) begin
               nmi_mode_d          = 1'b0; // exit NMI mode
             end
-          end else if (dret_insn_i) begin
+          end else if (dret_insn) begin
             pc_mux_o              = PC_DRET;
             pc_set_o              = 1'b1;
             debug_mode_d          = 1'b0;
-          end else if (wfi_insn_i) begin
+          end else if (wfi_insn) begin
             ctrl_fsm_ns           = WAIT_SLEEP;
-          end else if (csr_pipe_flush_i && handle_irq) begin
+          end else if (csr_pipe_flush && handle_irq) begin
             // start handling IRQs when doing CSR-related pipeline flushes
             ctrl_fsm_ns           = IRQ_TAKEN;
           end
-        end // exc_req
+        end // exc_req_q
 
         // single stepping
         // set exception registers, but do not jump into handler [Debug Spec v0.13.2, p.44]

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@halt_id to flush_id

UPD HdlStmCase@@ctrl_fsm_cs to ctrl_fsm_cs
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@halt_id to flush_id
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@halt_id to flush_id
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@halt_id to flush_id

UPD HdlStmIf@@ to 
    UPD HdlValueId@@mret_insn_i to mret_insn
    UPD HdlValueId@@dret_insn_i to dret_insn
    UPD HdlValueId@@wfi_insn_i to wfi_insn
    UPD HdlOp@@AND_LOG to AND_LOG
        UPD HdlValueId@@csr_pipe_flush_i to csr_pipe_flush

UPD HdlStmIf@@ to 
    UPD HdlOp@@OR_LOG to OR_LOG
        UPD HdlOp@@OR_LOG to OR_LOG
            UPD HdlValueId@@exc_req to exc_req_q

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlOp@@TERNARY to ops
            UPD HdlOp@@TERNARY to TERNARY
                INS list@@ops to TERNARY
                INS HdlOp@@EQ to ops
                HdlOp: EQ
                    list: ops
                        HdlValueId: priv_mode_i
                        HdlValueId: PRIV_LVL_M
                INS HdlValueId@@EXC_CAUSE_ECALL_UMODE to ops


CommitId: 17e9624c452e05f71f4ad2b7c75bf6bbb071c324
Update lowrisc_ibex to lowRISC/ibex@ee1098f
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_controller.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_controller.sv
@@ -559,22 +596,29 @@ module ibex_controller (
 
   // kill instr in IF-ID pipeline reg that are done, or if a
   // multicycle instr causes an exception for example
-  assign instr_valid_clear_o = ~stall |  halt_id;
+  // halt_if is another kind of stall, where the instr_valid bit must remain
+  // set (unless flush_id is set also). It cannot be factored directly into
+  // stall as this causes a combinational loop.
+  assign instr_valid_clear_o = ~(stall | halt_if) | flush_id;
 
   // update registers
   always_ff @(posedge clk_i or negedge rst_ni) begin : update_regs
     if (!rst_ni) begin
-      ctrl_fsm_cs  <= RESET;
-      nmi_mode_q   <= 1'b0;
-      debug_mode_q <= 1'b0;
-      load_err_q   <= 1'b0;
-      store_err_q  <= 1'b0;
+      ctrl_fsm_cs    <= RESET;
+      nmi_mode_q     <= 1'b0;
+      debug_mode_q   <= 1'b0;
+      load_err_q     <= 1'b0;
+      store_err_q    <= 1'b0;
+      exc_req_q      <= 1'b0;
+      illegal_insn_q <= 1'b0;
     end else begin
-      ctrl_fsm_cs  <= ctrl_fsm_ns;
-      nmi_mode_q   <= nmi_mode_d;
-      debug_mode_q <= debug_mode_d;
-      load_err_q   <= load_err_d;
-      store_err_q  <= store_err_d;
+      ctrl_fsm_cs    <= ctrl_fsm_ns;
+      nmi_mode_q     <= nmi_mode_d;
+      debug_mode_q   <= debug_mode_d;
+      load_err_q     <= load_err_d;
+      store_err_q    <= store_err_d;
+      exc_req_q      <= exc_req_d;
+      illegal_insn_q <= illegal_insn_d;
     end
   end
 
ParseResult:
INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: OR
        list: ops
            HdlOp: NEG
                list: ops
                    HdlOp: OR
                        list: ops
                            HdlValueId: stall
                            HdlValueId: halt_if
            HdlValueId: flush_id
    HdlValueId: instr_valid_clear_o

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: exc_req_q

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: illegal_insn_q

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueId: exc_req_d
    HdlValueId: exc_req_q

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueId: illegal_insn_d
    HdlValueId: illegal_insn_q

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlOp@@TERNARY to ops
            UPD HdlOp@@TERNARY to TERNARY
                INS list@@ops to TERNARY
                INS HdlOp@@EQ to ops
                HdlOp: EQ
                    list: ops
                        HdlValueId: priv_mode_i
                        HdlValueId: PRIV_LVL_M
                INS HdlValueId@@EXC_CAUSE_ECALL_UMODE to ops

DEL HdlStmAssign@@ from objs
HdlStmAssign
    HdlOp: OR
        list: ops
            HdlOp: NEG
                list: ops
                    HdlValueId: stall
            HdlValueId: halt_id
    HdlValueId: instr_valid_clear_o


CommitId: 548810e191222d071171a2db8499bc4dbf2ccea5
[prim] Avoid an apparent combinatorial loop in prim_secded_*_dec.sv
--- a/hw/ip/prim/rtl/prim_secded_22_16_dec.sv
+++ b/hw/ip/prim/rtl/prim_secded_22_16_dec.sv
@@ -12,6 +12,7 @@ module prim_secded_22_16_dec (
   output logic [1:0] err_o
 );
 
+  logic single_error;
 
   // Syndrome calculation
   assign syndrome_o[0] = ^(in & 22'h01C5C6);

ParseResult:
INS HdlIdDef@@single_error to objs
HdlIdDef: single_error
    HdlDirection: INTERNAL


CommitId: 548810e191222d071171a2db8499bc4dbf2ccea5
[prim] Avoid an apparent combinatorial loop in prim_secded_*_dec.sv
--- a/hw/ip/prim/rtl/prim_secded_22_16_dec.sv
+++ b/hw/ip/prim/rtl/prim_secded_22_16_dec.sv
@@ -40,7 +41,8 @@ module prim_secded_22_16_dec (
   assign d_o[15] = (syndrome_o == 6'h15) ^ in[15];
 
   // err_o calc. bit0: single error, bit1: double error
-  assign err_o[0] = ^syndrome_o;
-  assign err_o[1] = ~err_o[0] & (|syndrome_o);
+  assign single_error = ^syndrome_o;
+  assign err_o[0] = single_error;
+  assign err_o[1] = ~single_error & (|syndrome_o);
 
 endmodule : prim_secded_22_16_dec
ParseResult:
INS HdlStmAssign@@ to objs

UPD HdlStmAssign@@ to 
    MOV HdlOp@@XOR_UNARY to 
    HdlOp: XOR_UNARY
        list: ops
            HdlValueId: syndrome_o

UPD HdlStmAssign@@ to 
    INS HdlValueId@@single_error to 

UPD HdlStmAssign@@ to 
    INS HdlValueId@@single_error to 

UPD HdlStmAssign@@ to 
    UPD HdlOp@@AND to AND
        UPD HdlOp@@NEG to NEG
            UPD HdlOp@@INDEX to INDEX
                MOV list@@ops to INDEX
                list: ops
                    HdlValueId: err_o
                    HdlValueInt: 0
                UPD HdlValueId@@err_o to single_error
                DEL HdlValueInt@@0 from ops
            DEL HdlOp@@INDEX from ops
            DEL list@@ops from NEG


CommitId: 0c1f18073378c1da7d2bbf23ae404e4b8049c198
[csrng/rtl] lifecycle input to support aes mode
--- a/hw/ip/csrng/rtl/csrng_core.sv
+++ b/hw/ip/csrng/rtl/csrng_core.sv
@@ -19,6 +19,9 @@ module csrng_core import csrng_pkg::*; #(
   // Efuse Interface
   input efuse_sw_app_enable_i,
 
+  // Lifecycle broadcast inputs
+  input  lc_ctrl_pkg::lc_tx_t  lc_dft_en_i,
+
   // Entropy Interface
   output entropy_src_pkg::entropy_src_hw_if_req_t entropy_src_hw_if_o,
   input  entropy_src_pkg::entropy_src_hw_if_rsp_t entropy_src_hw_if_i,

ParseResult:
INS HdlIdDef@@lc_dft_en_i to ports
HdlIdDef: lc_dft_en_i
    HdlOp: DOUBLE_COLON
        list: ops
            HdlValueId: lc_ctrl_pkg
            HdlValueId: lc_tx_t
    HdlDirection: IN


CommitId: 0c1f18073378c1da7d2bbf23ae404e4b8049c198
[csrng/rtl] lifecycle input to support aes mode
--- a/hw/ip/csrng/rtl/csrng_core.sv
+++ b/hw/ip/csrng/rtl/csrng_core.sv
@@ -417,20 +420,20 @@ module csrng_core import csrng_pkg::*; #(
  // set the err code type bits
   assign hw2reg.err_code.fifo_write_err.d = 1'b1;
   assign hw2reg.err_code.fifo_write_err.de =
-         block_encrypt_sfifo_blkenc_err[0] ||
-         ctr_drbg_gen_sfifo_ggenbits_err[0] ||
-         ctr_drbg_gen_sfifo_gadstage_err[0] ||
-         ctr_drbg_gen_sfifo_ggenreq_err[0] ||
-         ctr_drbg_gen_sfifo_grcstage_err[0] ||
-         ctr_drbg_gen_sfifo_gbencack_err[0] ||
-         ctr_drbg_upd_sfifo_final_err[0] ||
-         ctr_drbg_upd_sfifo_pdata_err[0] ||
-         ctr_drbg_upd_sfifo_bencack_err[0] ||
-         ctr_drbg_upd_sfifo_bencreq_err[0] ||
-         ctr_drbg_upd_sfifo_updreq_err[0] ||
-         ctr_drbg_cmd_sfifo_keyvrc_err[0] ||
-         ctr_drbg_cmd_sfifo_rcstage_err[0] ||
-         ctr_drbg_cmd_sfifo_cmdreq_err[0] ||
+         block_encrypt_sfifo_blkenc_err[2] ||
+         ctr_drbg_gen_sfifo_ggenbits_err[2] ||
+         ctr_drbg_gen_sfifo_gadstage_err[2] ||
+         ctr_drbg_gen_sfifo_ggenreq_err[2] ||
+         ctr_drbg_gen_sfifo_grcstage_err[2] ||
+         ctr_drbg_gen_sfifo_gbencack_err[2] ||
+         ctr_drbg_upd_sfifo_final_err[2] ||
+         ctr_drbg_upd_sfifo_pdata_err[2] ||
+         ctr_drbg_upd_sfifo_bencack_err[2] ||
+         ctr_drbg_upd_sfifo_bencreq_err[2] ||
+         ctr_drbg_upd_sfifo_updreq_err[2] ||
+         ctr_drbg_cmd_sfifo_keyvrc_err[2] ||
+         ctr_drbg_cmd_sfifo_rcstage_err[2] ||
+         ctr_drbg_cmd_sfifo_cmdreq_err[2] ||
          (|cmd_stage_sfifo_genbits_err_wr) ||
          (|cmd_stage_sfifo_cmd_err_wr);
 

ParseResult:
MOV HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: OR_LOG
        list: ops
            HdlOp: OR_LOG
                list: ops
                    HdlOp: OR_LOG
                        list: ops
                            HdlOp: OR_LOG
                                list: ops
                                    HdlOp: OR_LOG
                                        list: ops
                                            HdlOp: OR_LOG
                                                list: ops
                                                    HdlOp: OR_LOG
                                                        list: ops
                                                            HdlOp: OR_LOG
                                                                list: ops
                                                                    HdlOp: OR_LOG
                                                                        list: ops
                                                                            HdlOp: OR_LOG
                                                                                list: ops
                                                                                    HdlOp: OR_LOG
                                                                                        list: ops
                                                                                            HdlOp: OR_LOG
                                                                                                list: ops
                                                                                                    HdlOp: OR_LOG
                                                                                                        list: ops
                                                                                                            HdlOp: OR_LOG
                                                                                                                list: ops
                                                                                                                    HdlOp: OR_LOG
                                                                                                                        list: ops
                                                                                                                            HdlOp: INDEX
                                                                                                                                list: ops
                                                                                                                                    HdlValueId: block_encrypt_sfifo_blkenc_err
                                                                                                                                    HdlValueInt: 0
                                                                                                                            HdlOp: INDEX
                                                                                                                                list: ops
                                                                                                                                    HdlValueId: ctr_drbg_gen_sfifo_ggenbits_err
                                                                                                                                    HdlValueInt: 0
                                                                                                                    HdlOp: INDEX
                                                                                                                        list: ops
                                                                                                                            HdlValueId: ctr_drbg_gen_sfifo_gadstage_err
                                                                                                                            HdlValueInt: 0
                                                                                                            HdlOp: INDEX
                                                                                                                list: ops
                                                                                                                    HdlValueId: ctr_drbg_gen_sfifo_ggenreq_err
                                                                                                                    HdlValueInt: 0
                                                                                                    HdlOp: INDEX
                                                                                                        list: ops
                                                                                                            HdlValueId: ctr_drbg_gen_sfifo_grcstage_err
                                                                                                            HdlValueInt: 0
                                                                                            HdlOp: INDEX
                                                                                                list: ops
                                                                                                    HdlValueId: ctr_drbg_gen_sfifo_gbencack_err
                                                                                                    HdlValueInt: 0
                                                                                    HdlOp: INDEX
                                                                                        list: ops
                                                                                            HdlValueId: ctr_drbg_upd_sfifo_final_err
                                                                                            HdlValueInt: 0
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlValueId: ctr_drbg_upd_sfifo_pdata_err
                                                                                    HdlValueInt: 0
                                                                    HdlOp: INDEX
                                                                        list: ops
                                                                            HdlValueId: ctr_drbg_upd_sfifo_bencack_err
                                                                            HdlValueInt: 0
                                                            HdlOp: INDEX
                                                                list: ops
                                                                    HdlValueId: ctr_drbg_upd_sfifo_bencreq_err
                                                                    HdlValueInt: 0
                                                    HdlOp: INDEX
                                                        list: ops
                                                            HdlValueId: ctr_drbg_upd_sfifo_updreq_err
                                                            HdlValueInt: 0
                                            HdlOp: INDEX
                                                list: ops
                                                    HdlValueId: ctr_drbg_cmd_sfifo_keyvrc_err
                                                    HdlValueInt: 0
                                    HdlOp: INDEX
                                        list: ops
                                            HdlValueId: ctr_drbg_cmd_sfifo_rcstage_err
                                            HdlValueInt: 0
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: ctr_drbg_cmd_sfifo_cmdreq_err
                                    HdlValueInt: 0
                    HdlOp: OR_UNARY
                        list: ops
                            HdlValueId: cmd_stage_sfifo_genbits_err_wr
            HdlOp: OR_UNARY
                list: ops
                    HdlValueId: cmd_stage_sfifo_cmd_err_wr
    HdlValueId: hw2reg

UPD HdlStmAssign@@ to 
    UPD HdlOp@@OR_LOG to OR_LOG
        MOV HdlOp@@OR_UNARY to ops
        HdlOp: OR_UNARY
            list: ops
                HdlValueId: cmd_stage_sfifo_cmd_err_wr
        UPD HdlOp@@OR_LOG to OR_LOG
            MOV HdlOp@@OR_UNARY to ops
            HdlOp: OR_UNARY
                list: ops
                    HdlValueId: cmd_stage_sfifo_genbits_err_wr


CommitId: 0c1f18073378c1da7d2bbf23ae404e4b8049c198
[csrng/rtl] lifecycle input to support aes mode
--- a/hw/ip/csrng/rtl/csrng_core.sv
+++ b/hw/ip/csrng/rtl/csrng_core.sv
@@ -455,20 +458,20 @@ module csrng_core import csrng_pkg::*; #(
 
   assign hw2reg.err_code.fifo_state_err.d = 1'b1;
   assign hw2reg.err_code.fifo_state_err.de =
-         block_encrypt_sfifo_blkenc_err[2] ||
-         ctr_drbg_gen_sfifo_ggenbits_err[2] ||
-         ctr_drbg_gen_sfifo_gadstage_err[2] ||
-         ctr_drbg_gen_sfifo_ggenreq_err[2] ||
-         ctr_drbg_gen_sfifo_grcstage_err[2] ||
-         ctr_drbg_gen_sfifo_gbencack_err[2] ||
-         ctr_drbg_upd_sfifo_final_err[2] ||
-         ctr_drbg_upd_sfifo_pdata_err[2] ||
-         ctr_drbg_upd_sfifo_bencack_err[2] ||
-         ctr_drbg_upd_sfifo_bencreq_err[2] ||
-         ctr_drbg_upd_sfifo_updreq_err[2] ||
-         ctr_drbg_cmd_sfifo_keyvrc_err[2] ||
-         ctr_drbg_cmd_sfifo_rcstage_err[2] ||
-         ctr_drbg_cmd_sfifo_cmdreq_err[2] ||
+         block_encrypt_sfifo_blkenc_err[0] ||
+         ctr_drbg_gen_sfifo_ggenbits_err[0] ||
+         ctr_drbg_gen_sfifo_gadstage_err[0] ||
+         ctr_drbg_gen_sfifo_ggenreq_err[0] ||
+         ctr_drbg_gen_sfifo_grcstage_err[0] ||
+         ctr_drbg_gen_sfifo_gbencack_err[0] ||
+         ctr_drbg_upd_sfifo_final_err[0] ||
+         ctr_drbg_upd_sfifo_pdata_err[0] ||
+         ctr_drbg_upd_sfifo_bencack_err[0] ||
+         ctr_drbg_upd_sfifo_bencreq_err[0] ||
+         ctr_drbg_upd_sfifo_updreq_err[0] ||
+         ctr_drbg_cmd_sfifo_keyvrc_err[0] ||
+         ctr_drbg_cmd_sfifo_rcstage_err[0] ||
+         ctr_drbg_cmd_sfifo_cmdreq_err[0] ||
          (|cmd_stage_sfifo_genbits_err_st) ||
          (|cmd_stage_sfifo_cmd_err_st);
 

ParseResult:
MOV HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: OR_LOG
        list: ops
            HdlOp: OR_LOG
                list: ops
                    HdlOp: OR_LOG
                        list: ops
                            HdlOp: OR_LOG
                                list: ops
                                    HdlOp: OR_LOG
                                        list: ops
                                            HdlOp: OR_LOG
                                                list: ops
                                                    HdlOp: OR_LOG
                                                        list: ops
                                                            HdlOp: OR_LOG
                                                                list: ops
                                                                    HdlOp: OR_LOG
                                                                        list: ops
                                                                            HdlOp: OR_LOG
                                                                                list: ops
                                                                                    HdlOp: OR_LOG
                                                                                        list: ops
                                                                                            HdlOp: OR_LOG
                                                                                                list: ops
                                                                                                    HdlOp: OR_LOG
                                                                                                        list: ops
                                                                                                            HdlOp: OR_LOG
                                                                                                                list: ops
                                                                                                                    HdlOp: OR_LOG
                                                                                                                        list: ops
                                                                                                                            HdlOp: INDEX
                                                                                                                                list: ops
                                                                                                                                    HdlValueId: block_encrypt_sfifo_blkenc_err
                                                                                                                                    HdlValueInt: 2
                                                                                                                            HdlOp: INDEX
                                                                                                                                list: ops
                                                                                                                                    HdlValueId: ctr_drbg_gen_sfifo_ggenbits_err
                                                                                                                                    HdlValueInt: 2
                                                                                                                    HdlOp: INDEX
                                                                                                                        list: ops
                                                                                                                            HdlValueId: ctr_drbg_gen_sfifo_gadstage_err
                                                                                                                            HdlValueInt: 2
                                                                                                            HdlOp: INDEX
                                                                                                                list: ops
                                                                                                                    HdlValueId: ctr_drbg_gen_sfifo_ggenreq_err
                                                                                                                    HdlValueInt: 2
                                                                                                    HdlOp: INDEX
                                                                                                        list: ops
                                                                                                            HdlValueId: ctr_drbg_gen_sfifo_grcstage_err
                                                                                                            HdlValueInt: 2
                                                                                            HdlOp: INDEX
                                                                                                list: ops
                                                                                                    HdlValueId: ctr_drbg_gen_sfifo_gbencack_err
                                                                                                    HdlValueInt: 2
                                                                                    HdlOp: INDEX
                                                                                        list: ops
                                                                                            HdlValueId: ctr_drbg_upd_sfifo_final_err
                                                                                            HdlValueInt: 2
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlValueId: ctr_drbg_upd_sfifo_pdata_err
                                                                                    HdlValueInt: 2
                                                                    HdlOp: INDEX
                                                                        list: ops
                                                                            HdlValueId: ctr_drbg_upd_sfifo_bencack_err
                                                                            HdlValueInt: 2
                                                            HdlOp: INDEX
                                                                list: ops
                                                                    HdlValueId: ctr_drbg_upd_sfifo_bencreq_err
                                                                    HdlValueInt: 2
                                                    HdlOp: INDEX
                                                        list: ops
                                                            HdlValueId: ctr_drbg_upd_sfifo_updreq_err
                                                            HdlValueInt: 2
                                            HdlOp: INDEX
                                                list: ops
                                                    HdlValueId: ctr_drbg_cmd_sfifo_keyvrc_err
                                                    HdlValueInt: 2
                                    HdlOp: INDEX
                                        list: ops
                                            HdlValueId: ctr_drbg_cmd_sfifo_rcstage_err
                                            HdlValueInt: 2
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: ctr_drbg_cmd_sfifo_cmdreq_err
                                    HdlValueInt: 2
                    HdlOp: OR_UNARY
                        list: ops
                            HdlValueId: cmd_stage_sfifo_genbits_err_st
            HdlOp: OR_UNARY
                list: ops
                    HdlValueId: cmd_stage_sfifo_cmd_err_st
    HdlValueId: hw2reg

UPD HdlStmAssign@@ to 
    UPD HdlOp@@OR_LOG to OR_LOG
        MOV HdlOp@@OR_UNARY to ops
        HdlOp: OR_UNARY
            list: ops
                HdlValueId: cmd_stage_sfifo_cmd_err_st
        UPD HdlOp@@OR_LOG to OR_LOG
            MOV HdlOp@@OR_UNARY to ops
            HdlOp: OR_UNARY
                list: ops
                    HdlValueId: cmd_stage_sfifo_genbits_err_st


CommitId: efaa97eb056324fec332981139a3370db290679a
[ast] AscenLint fixes and new analog typedef
--- a/hw/top_earlgrey/ip/ast/rtl/aon_osc.sv
+++ b/hw/top_earlgrey/ip/ast/rtl/aon_osc.sv
@@ -5,22 +5,25 @@
 // *Name: aon_osc
 // *Module Description: AON Clock Oscilator
 //############################################################################
+`ifndef SYNTHESIS
 `timescale 1ns / 10ps
-
-module aon_osc #(
-`ifndef VERILATOR
-// synopsys translate_off
-  parameter time AON_EN_RDLY = 5us
-// synopsys translate_on
+`else
+`ifndef PRIM_DEFAULT_IMPL
+`define PRIM_DEFAULT_IMPL prim_pkg::ImplGeneric
+`endif
 `endif
-) (
+
+module aon_osc (
   input vcore_pok_h_i,     // VCORE POK @3.3V
   input aon_en_i,          // AON Source Clock Enable
   output logic aon_clk_o   // AON Clock Output
 );
 
-`ifndef VERILATOR
-// synopsys translate_off
+`ifndef SYNTHESIS
+import ast_bhv_pkg::* ;
+
+// Behavioral Model
+////////////////////////////////////////
 localparam time AonClkPeriod = 5000ns; // 5000ns (200Khz)
 logic clk, en_dly, en_osc, en_osc_re, en_osc_fe;
 

ParseResult:
UPD HdlModuleDef@@aon_osc to aon_osc
    INS HdlImport@@ to objs
    HdlImport
        list: path
            HdlValueId: ast_bhv_pkg
            HdlAll

DEL HdlIdDef@@AON_EN_RDLY from params
HdlIdDef: AON_EN_RDLY
    HdlValueId: time
    HdlExprNotImplemented: value
    HdlDirection: INTERNAL


CommitId: efaa97eb056324fec332981139a3370db290679a
[ast] AscenLint fixes and new analog typedef
--- a/hw/top_earlgrey/ip/ast/rtl/aon_osc.sv
+++ b/hw/top_earlgrey/ip/ast/rtl/aon_osc.sv
@@ -28,7 +31,7 @@ initial begin
   clk = 1'b0;
   $display("\nAON Clock Period: %0dns", AonClkPeriod);
   en_dly = 1'b0;  // to block init X
-  #(AON_EN_RDLY+1) en_dly = 1'b1;
+  #(AON_EN_RDLY + VCAON_POK_RDLY +1) en_dly = 1'b1;
 end
 
 // Enable 5us RC Delay

ParseResult:
UPD HdlModuleDef@@aon_osc to aon_osc
    INS HdlImport@@ to objs
    HdlImport
        list: path
            HdlValueId: ast_bhv_pkg
            HdlAll

UPD HdlStmWait@@[{'__class__': 'HdlOp',  'fn': 'ADD',  'ops': ['AON_EN_RDLY', {'__class__': 'HdlValueInt', 'base': 10, 'val': '1'}]} ] to [{'__class__': 'HdlOp',  'fn': 'ADD',  'ops': [{'__class__': 'HdlOp',           'fn': 'ADD',           'ops': ['AON_EN_RDLY', 'VCAON_POK_RDLY']},          {'__class__': 'HdlValueInt', 'base': 10, 'val': '1'}]} ]

UPD HdlStmWait@@[{'__class__': 'HdlOp',  'fn': 'ADD',  'ops': [{'__class__': 'HdlOp',           'fn': 'ADD',           'ops': ['AON_EN_RDLY', 'VCAON_POK_RDLY']},          {'__class__': 'HdlValueInt', 'base': 10, 'val': '1'}]} ] to [{'__class__': 'HdlOp',  'fn': 'ADD',  'ops': [{'__class__': 'HdlOp',           'fn': 'ADD',           'ops': ['AON_EN_RDLY', 'VCAON_POK_RDLY']},          {'__class__': 'HdlValueInt', 'base': 10, 'val': '1'}]} ]
    UPD HdlOp@@ADD to ADD
        INS HdlOp@@ADD to ops
        UPD HdlOp@@ADD to ADD
            INS list@@ops to ADD
            INS HdlValueId@@VCAON_POK_RDLY to ops

UPD HdlStmWait@@[{'__class__': 'HdlOp',  'fn': 'ADD',  'ops': ['AON_EN_RDLY', {'__class__': 'HdlValueInt', 'base': 10, 'val': '1'}]} ] to [{'__class__': 'HdlOp',  'fn': 'ADD',  'ops': ['AON_EN_RDLY', {'__class__': 'HdlValueInt', 'base': 10, 'val': '1'}]} ]
    UPD HdlOp@@ADD to ADD
        MOV HdlValueId@@AON_EN_RDLY to ops
        HdlValueId: AON_EN_RDLY


CommitId: efaa97eb056324fec332981139a3370db290679a
[ast] AscenLint fixes and new analog typedef
--- a/hw/top_earlgrey/ip/ast/rtl/aon_osc.sv
+++ b/hw/top_earlgrey/ip/ast/rtl/aon_osc.sv
@@ -38,8 +41,11 @@ assign en_osc_re = vcore_pok_h_i && aon_en_i && (aon_en_dly && en_dly);
 
 // Syncronize en_osc_fe to clk FE for glitch free disable
 always_ff @( negedge clk or negedge vcore_pok_h_i ) begin
-  if ( !vcore_pok_h_i ) en_osc_fe <= 1'b0;
-  else                  en_osc_fe <= en_osc_re;
+  if ( !vcore_pok_h_i ) begin
+    en_osc_fe <= 1'b0;
+  end else begin
+    en_osc_fe <= en_osc_re;
+  end
 end
 
 assign en_osc = en_osc_re || en_osc_fe;  // EN -> 1 || EN -> 0

ParseResult:
UPD HdlModuleDef@@aon_osc to aon_osc
    INS HdlImport@@ to objs
    HdlImport
        list: path
            HdlValueId: ast_bhv_pkg
            HdlAll

UPD HdlStmIf@@ to 
    INS HdlStmBlock@@SEQ to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmAssign@@if_true to 

MOV HdlStmAssign@@if_true to 
HdlStmAssign: if_true
    HdlValueInt: 0
    HdlValueId: en_osc_fe

UPD HdlStmAssign@@if_false to 

MOV HdlStmAssign@@if_false to 
HdlStmAssign: if_false
    HdlValueId: en_osc_re
    HdlValueId: en_osc_fe


CommitId: 74a39e3e147145596fbcc25b0720662c2f417e54
Update lowrisc_ibex to lowRISC/ibex@7e22830
--- a/hw/vendor/lowrisc_ibex/examples/simple_system/rtl/ibex_simple_system.sv
+++ b/hw/vendor/lowrisc_ibex/examples/simple_system/rtl/ibex_simple_system.sv
@@ -21,10 +21,7 @@ module ibex_simple_system (
   parameter bit RV32E = 0;
   parameter bit RV32M = 1;
 
-  logic clk_sys, rst_sys_n;
-
-  assign clk_sys = IO_CLK;
-  assign rst_sys_n = IO_RST_N;
+  logic clk_sys = 1'b0, rst_sys_n;
 
   typedef enum {
     CoreD,

ParseResult:
UPD HdlModuleDef@@ibex_simple_system to ibex_simple_system
    INS HdlStmBlock@@SEQ to objs
    HdlStmBlock: SEQ
        list: body
            HdlStmProcess
                HdlStmBlock: SEQ
                    list: body
                        HdlStmWait:
                            list: val
                                HdlValueInt: 1
                        HdlOp: ASSIGN
                            list: ops
                                HdlValueId: clk_sys
                                HdlValueInt: 0
            HdlStmProcess
                HdlStmBlock: SEQ
                    list: body
                        HdlStmWait:
                            list: val
                                HdlValueInt: 1
                        HdlOp: ASSIGN
                            list: ops
                                HdlValueId: clk_sys
                                HdlValueInt: 1

UPD HdlIdDef@@clk_sys to clk_sys
    INS HdlValueInt@@0 to clk_sys

DEL HdlStmAssign@@ from objs
HdlStmAssign
    HdlValueId: IO_CLK
    HdlValueId: clk_sys

DEL HdlStmAssign@@ from objs
HdlStmAssign
    HdlValueId: IO_RST_N
    HdlValueId: rst_sys_n


CommitId: 74a39e3e147145596fbcc25b0720662c2f417e54
Update lowrisc_ibex to lowRISC/ibex@7e22830
--- a/hw/vendor/lowrisc_ibex/examples/simple_system/rtl/ibex_simple_system.sv
+++ b/hw/vendor/lowrisc_ibex/examples/simple_system/rtl/ibex_simple_system.sv
@@ -69,6 +66,22 @@ module ibex_simple_system (
   assign cfg_device_addr_mask[SimCtrl] = ~32'h3FF; // 1 kB
 
 
+  `ifdef VERILATOR
+    assign clk_sys = IO_CLK;
+    assign rst_sys_n = IO_RST_N;
+  `else
+    initial begin
+      rst_sys_n = 1'b0;
+      device_err = '{default:1'b0};
+      #8
+      rst_sys_n = 1'b1;
+    end
+    always begin
+      #1 clk_sys = 1'b0;
+      #1 clk_sys = 1'b1;
+    end
+  `endif
+
   bus #(
     .NrDevices   (NrDevices),
     .NrHosts     (NrHosts  ),
ParseResult:
INS HdlStmProcess@@ to objs
HdlStmProcess
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: rst_sys_n
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: device_err
                    list
                        HdlOp: MAP_ASSOCIATION
                            list: ops
                                HdlValueId: default
                                HdlValueInt: 0
            HdlStmProcess
                HdlStmBlock: SEQ
                    list: body
                        HdlStmWait:
                            list: val
                                HdlValueInt: 8
                        HdlOp: ASSIGN
                            list: ops
                                HdlValueId: rst_sys_n
                                HdlValueInt: 1
            HdlStmWait:
                list: val

UPD HdlModuleDef@@ibex_simple_system to ibex_simple_system
    INS HdlStmBlock@@SEQ to objs
    HdlStmBlock: SEQ
        list: body
            HdlStmProcess
                HdlStmBlock: SEQ
                    list: body
                        HdlStmWait:
                            list: val
                                HdlValueInt: 1
                        HdlOp: ASSIGN
                            list: ops
                                HdlValueId: clk_sys
                                HdlValueInt: 0
            HdlStmProcess
                HdlStmBlock: SEQ
                    list: body
                        HdlStmWait:
                            list: val
                                HdlValueInt: 1
                        HdlOp: ASSIGN
                            list: ops
                                HdlValueId: clk_sys
                                HdlValueInt: 1


CommitId: 53ef2ec43c1c1eb00b771e17fc157f5bb1103ed5
Update lowrisc_ibex to lowRISC/ibex@d14312c
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_core.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_core.sv
@@ -29,6 +11,9 @@
  * Top level module of the ibex RISC-V core
  */
 module ibex_core #(
+    parameter bit          PMPEnable        = 0,
+    parameter int unsigned PMPGranularity   = 0,
+    parameter int unsigned PMPNumRegions    = 4,
     parameter int unsigned MHPMCounterNum   = 0,
     parameter int unsigned MHPMCounterWidth = 40,
     parameter bit RV32E                     = 0,

ParseResult:
INS HdlIdDef@@PMPEnable to params
HdlIdDef: PMPEnable
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: bit
    HdlValueInt: 0
    HdlDirection: INTERNAL

INS HdlIdDef@@PMPGranularity to params
HdlIdDef: PMPGranularity
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: int
            HdlOp: MAP_ASSOCIATION
                list: ops
                    HdlValueId: signed
    HdlValueInt: 0
    HdlDirection: INTERNAL

INS HdlIdDef@@PMPNumRegions to params
HdlIdDef: PMPNumRegions
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: int
            HdlOp: MAP_ASSOCIATION
                list: ops
                    HdlValueId: signed
    HdlValueInt: 4
    HdlDirection: INTERNAL


CommitId: 53ef2ec43c1c1eb00b771e17fc157f5bb1103ed5
Update lowrisc_ibex to lowRISC/ibex@d14312c
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_core.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_core.sv
@@ -42,9 +27,7 @@ module ibex_core #(
 
     input  logic        test_en_i,     // enable all clock gates for testing
 
-    // Core ID, Cluster ID and boot address are considered more or less static
-    input  logic [ 3:0] core_id_i,
-    input  logic [ 5:0] cluster_id_i,
+    input  logic [31:0] hart_id_i,
     input  logic [31:0] boot_addr_i,
 
     // Instruction memory interface

ParseResult:
UPD HdlIdDef@@core_id_i to hart_id_i

UPD HdlIdDef@@core_id_i to core_id_i
    UPD HdlOp@@PARAMETRIZATION to PARAMETRIZATION
        UPD HdlOp@@DOWNTO to DOWNTO
            UPD HdlValueInt@@3 to 31

DEL HdlIdDef@@cluster_id_i from ports
HdlIdDef: cluster_id_i
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 5
                    HdlValueInt: 0
    HdlDirection: IN


CommitId: 53ef2ec43c1c1eb00b771e17fc157f5bb1103ed5
Update lowrisc_ibex to lowRISC/ibex@d14312c
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_core.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_core.sv
@@ -53,6 +36,7 @@ module ibex_core #(
     input  logic        instr_rvalid_i,
     output logic [31:0] instr_addr_o,
     input  logic [31:0] instr_rdata_i,
+    input  logic        instr_err_i,
 
     // Data memory interface
     output logic        data_req_o,

ParseResult:
INS HdlIdDef@@instr_err_i to ports
HdlIdDef: instr_err_i
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: IN


CommitId: 53ef2ec43c1c1eb00b771e17fc157f5bb1103ed5
Update lowrisc_ibex to lowRISC/ibex@d14312c
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_core.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_core.sv
@@ -173,7 +160,6 @@ module ibex_core #(
   logic        data_we_ex;
   logic [1:0]  data_type_ex;
   logic        data_sign_ext_ex;
-  logic [1:0]  data_reg_offset_ex;
   logic        data_req_ex;
   logic [31:0] data_wdata_ex;
   logic [31:0] regfile_wdata_lsu;

ParseResult:
INS HdlIdDef@@csr_pmp_addr to objs
HdlIdDef: csr_pmp_addr
    HdlOp: INDEX
        list: ops
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: logic
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 33
                            HdlValueInt: 0
            HdlValueId: PMPNumRegions
    HdlDirection: INTERNAL

INS HdlIdDef@@csr_pmp_cfg to objs
HdlIdDef: csr_pmp_cfg
    HdlOp: INDEX
        list: ops
            type
            HdlValueId: PMPNumRegions
    HdlDirection: INTERNAL

INS HdlIdDef@@pmp_req_err to objs
HdlIdDef: pmp_req_err
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlValueId: PMP_NUM_CHAN
    HdlDirection: INTERNAL


CommitId: 53ef2ec43c1c1eb00b771e17fc157f5bb1103ed5
Update lowrisc_ibex to lowRISC/ibex@d14312c
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_core.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_core.sv
@@ -553,15 +556,17 @@ module ibex_core #(
   ibex_cs_registers #(
       .MHPMCounterNum   ( MHPMCounterNum   ),
       .MHPMCounterWidth ( MHPMCounterWidth ),
+      .PMPGranularity   ( PMPGranularity   ),
+      .PMPNumRegions    ( PMPNumRegions    ),
       .RV32E            ( RV32E            ),
       .RV32M            ( RV32M            )
   ) cs_registers_i (
       .clk_i                   ( clk                    ),
       .rst_ni                  ( rst_ni                 ),
 
-      // Core and Cluster ID from outside
-      .core_id_i               ( core_id_i              ),
-      .cluster_id_i            ( cluster_id_i           ),
+      // Hart ID from outside
+      .hart_id_i               ( hart_id_i              ),
+      .priv_mode_o             ( priv_mode              ),
 
       // mtvec
       .csr_mtvec_o             ( csr_mtvec              ),

ParseResult:
INS HdlStmIf@@ to objs
HdlStmIf
    HdlValueId: PMPEnable
    HdlStmBlock: SEQ
        list: body
            HdlIdDef: pmp_req_addr
                HdlOp: INDEX
                    list: ops
                        HdlOp: PARAMETRIZATION
                            list: ops
                                HdlValueId: logic
                                HdlOp: DOWNTO
                                    list: ops
                                        HdlValueInt: 33
                                        HdlValueInt: 0
                        HdlValueId: PMP_NUM_CHAN
                HdlDirection: INTERNAL
            HdlIdDef: pmp_req_type
                HdlOp: INDEX
                    list: ops
                        type
                        HdlValueId: PMP_NUM_CHAN
                HdlDirection: INTERNAL
            HdlStmAssign
                HdlOp: CONCAT
                    list: ops
                        HdlValueInt: 00
                        HdlOp: INDEX
                            list: ops
                                HdlValueId: instr_addr_o
                                HdlOp: DOWNTO
                                    list: ops
                                        HdlValueInt: 31
                                        HdlValueInt: 0
                HdlOp: INDEX
                    list: ops
                        HdlValueId: pmp_req_addr
                        HdlValueId: PMP_I
            HdlStmAssign
                HdlValueId: PMP_ACC_EXEC
                HdlOp: INDEX
                    list: ops
                        HdlValueId: pmp_req_type
                        HdlValueId: PMP_I
            HdlStmAssign
                HdlOp: CONCAT
                    list: ops
                        HdlValueInt: 00
                        HdlOp: INDEX
                            list: ops
                                HdlValueId: data_addr_o
                                HdlOp: DOWNTO
                                    list: ops
                                        HdlValueInt: 31
                                        HdlValueInt: 0
                HdlOp: INDEX
                    list: ops
                        HdlValueId: pmp_req_addr
                        HdlValueId: PMP_D
            HdlStmAssign
                HdlOp: TERNARY
                    list: ops
                        HdlValueId: data_we_o
                        HdlValueId: PMP_ACC_WRITE
                        HdlValueId: PMP_ACC_READ
                HdlOp: INDEX
                    list: ops
                        HdlValueId: pmp_req_type
                        HdlValueId: PMP_D
            HdlCompInst: ibex_pmp-pmp_i
                list: param_map
                    HdlOp: MAP_ASSOCIATION
                        list: ops
                            HdlValueId: PMPGranularity
                            HdlValueId: PMPGranularity
                    HdlOp: MAP_ASSOCIATION
                        list: ops
                            HdlValueId: PMPNumChan
                            HdlValueId: PMP_NUM_CHAN
                    HdlOp: MAP_ASSOCIATION
                        list: ops
                            HdlValueId: PMPNumRegions
                            HdlValueId: PMPNumRegions
                list: port_map
                    HdlOp: MAP_ASSOCIATION
                        list: ops
                            HdlValueId: clk_i
                            HdlValueId: clk
                    HdlOp: MAP_ASSOCIATION
                        list: ops
                            HdlValueId: rst_ni
                            HdlValueId: rst_ni
                    HdlOp: MAP_ASSOCIATION
                        list: ops
                            HdlValueId: csr_pmp_cfg_i
                            HdlValueId: csr_pmp_cfg
                    HdlOp: MAP_ASSOCIATION
                        list: ops
                            HdlValueId: csr_pmp_addr_i
                            HdlValueId: csr_pmp_addr
                    HdlOp: MAP_ASSOCIATION
                        list: ops
                            HdlValueId: priv_mode_i
                            HdlValueId: priv_mode
                    HdlOp: MAP_ASSOCIATION
                        list: ops
                            HdlValueId: pmp_req_addr_i
                            HdlValueId: pmp_req_addr
                    HdlOp: MAP_ASSOCIATION
                        list: ops
                            HdlValueId: pmp_req_type_i
                            HdlValueId: pmp_req_type
                    HdlOp: MAP_ASSOCIATION
                        list: ops
                            HdlValueId: pmp_req_err_o
                            HdlValueId: pmp_req_err
    list: elifs
    HdlStmBlock: SEQ
        list: body
            HdlStmAssign
                HdlValueInt: 0
                HdlOp: INDEX
                    list: ops
                        HdlValueId: pmp_req_err
                        HdlValueId: PMP_I
            HdlStmAssign
                HdlValueInt: 0
                HdlOp: INDEX
                    list: ops
                        HdlValueId: pmp_req_err
                        HdlValueId: PMP_D


CommitId: 53ef2ec43c1c1eb00b771e17fc157f5bb1103ed5
Update lowrisc_ibex to lowRISC/ibex@d14312c
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_core.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_core.sv
@@ -588,8 +593,13 @@ module ibex_core #(
       .csr_mstatus_mie_o       ( csr_mstatus_mie        ),
       .csr_mepc_o              ( csr_mepc               ),
 
+      // PMP
+      .csr_pmp_cfg_o           ( csr_pmp_cfg            ),
+      .csr_pmp_addr_o          ( csr_pmp_addr           ),
+
       // debug
       .csr_depc_o              ( csr_depc               ),
+      .debug_mode_i            ( debug_mode             ),
       .debug_cause_i           ( debug_cause            ),
       .debug_csr_save_i        ( debug_csr_save         ),
       .debug_single_step_o     ( debug_single_step      ),

ParseResult:
INS HdlStmIf@@ to objs
HdlStmIf
    HdlValueId: PMPEnable
    HdlStmBlock: SEQ
        list: body
            HdlIdDef: pmp_req_addr
                HdlOp: INDEX
                    list: ops
                        HdlOp: PARAMETRIZATION
                            list: ops
                                HdlValueId: logic
                                HdlOp: DOWNTO
                                    list: ops
                                        HdlValueInt: 33
                                        HdlValueInt: 0
                        HdlValueId: PMP_NUM_CHAN
                HdlDirection: INTERNAL
            HdlIdDef: pmp_req_type
                HdlOp: INDEX
                    list: ops
                        type
                        HdlValueId: PMP_NUM_CHAN
                HdlDirection: INTERNAL
            HdlStmAssign
                HdlOp: CONCAT
                    list: ops
                        HdlValueInt: 00
                        HdlOp: INDEX
                            list: ops
                                HdlValueId: instr_addr_o
                                HdlOp: DOWNTO
                                    list: ops
                                        HdlValueInt: 31
                                        HdlValueInt: 0
                HdlOp: INDEX
                    list: ops
                        HdlValueId: pmp_req_addr
                        HdlValueId: PMP_I
            HdlStmAssign
                HdlValueId: PMP_ACC_EXEC
                HdlOp: INDEX
                    list: ops
                        HdlValueId: pmp_req_type
                        HdlValueId: PMP_I
            HdlStmAssign
                HdlOp: CONCAT
                    list: ops
                        HdlValueInt: 00
                        HdlOp: INDEX
                            list: ops
                                HdlValueId: data_addr_o
                                HdlOp: DOWNTO
                                    list: ops
                                        HdlValueInt: 31
                                        HdlValueInt: 0
                HdlOp: INDEX
                    list: ops
                        HdlValueId: pmp_req_addr
                        HdlValueId: PMP_D
            HdlStmAssign
                HdlOp: TERNARY
                    list: ops
                        HdlValueId: data_we_o
                        HdlValueId: PMP_ACC_WRITE
                        HdlValueId: PMP_ACC_READ
                HdlOp: INDEX
                    list: ops
                        HdlValueId: pmp_req_type
                        HdlValueId: PMP_D
            HdlCompInst: ibex_pmp-pmp_i
                list: param_map
                    HdlOp: MAP_ASSOCIATION
                        list: ops
                            HdlValueId: PMPGranularity
                            HdlValueId: PMPGranularity
                    HdlOp: MAP_ASSOCIATION
                        list: ops
                            HdlValueId: PMPNumChan
                            HdlValueId: PMP_NUM_CHAN
                    HdlOp: MAP_ASSOCIATION
                        list: ops
                            HdlValueId: PMPNumRegions
                            HdlValueId: PMPNumRegions
                list: port_map
                    HdlOp: MAP_ASSOCIATION
                        list: ops
                            HdlValueId: clk_i
                            HdlValueId: clk
                    HdlOp: MAP_ASSOCIATION
                        list: ops
                            HdlValueId: rst_ni
                            HdlValueId: rst_ni
                    HdlOp: MAP_ASSOCIATION
                        list: ops
                            HdlValueId: csr_pmp_cfg_i
                            HdlValueId: csr_pmp_cfg
                    HdlOp: MAP_ASSOCIATION
                        list: ops
                            HdlValueId: csr_pmp_addr_i
                            HdlValueId: csr_pmp_addr
                    HdlOp: MAP_ASSOCIATION
                        list: ops
                            HdlValueId: priv_mode_i
                            HdlValueId: priv_mode
                    HdlOp: MAP_ASSOCIATION
                        list: ops
                            HdlValueId: pmp_req_addr_i
                            HdlValueId: pmp_req_addr
                    HdlOp: MAP_ASSOCIATION
                        list: ops
                            HdlValueId: pmp_req_type_i
                            HdlValueId: pmp_req_type
                    HdlOp: MAP_ASSOCIATION
                        list: ops
                            HdlValueId: pmp_req_err_o
                            HdlValueId: pmp_req_err
    list: elifs
    HdlStmBlock: SEQ
        list: body
            HdlStmAssign
                HdlValueInt: 0
                HdlOp: INDEX
                    list: ops
                        HdlValueId: pmp_req_err
                        HdlValueId: PMP_I
            HdlStmAssign
                HdlValueInt: 0
                HdlOp: INDEX
                    list: ops
                        HdlValueId: pmp_req_err
                        HdlValueId: PMP_D


CommitId: 21167d2118874f62091feb8b71926052de0a77a2
[i2c, rtl] Initial incomplete implementation of i2c target mode
--- a/hw/ip/i2c/rtl/i2c_core.sv
+++ b/hw/ip/i2c/rtl/i2c_core.sv
@@ -25,7 +25,12 @@ module  i2c_core (
   output logic                     intr_sda_interference_o,
   output logic                     intr_stretch_timeout_o,
   output logic                     intr_sda_unstable_o,
-  output logic                     intr_trans_complete_o
+  output logic                     intr_trans_complete_o,
+  output logic                     intr_tx_empty_o,
+  output logic                     intr_tx_nonempty_o,
+  output logic                     intr_tx_overflow_o,
+  output logic                     intr_acq_overflow_o,
+  output logic                     intr_ack_stop_o
 );
 
   logic [15:0] thigh;

ParseResult:
INS HdlIdDef@@intr_tx_empty_o to ports
HdlIdDef: intr_tx_empty_o
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: OUT

INS HdlIdDef@@intr_tx_nonempty_o to ports
HdlIdDef: intr_tx_nonempty_o
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: OUT

INS HdlIdDef@@intr_tx_overflow_o to ports
HdlIdDef: intr_tx_overflow_o
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: OUT

INS HdlIdDef@@intr_acq_overflow_o to ports
HdlIdDef: intr_acq_overflow_o
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: OUT

INS HdlIdDef@@intr_ack_stop_o to ports
HdlIdDef: intr_ack_stop_o
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: OUT


CommitId: 21167d2118874f62091feb8b71926052de0a77a2
[i2c, rtl] Initial incomplete implementation of i2c target mode
--- a/hw/ip/i2c/rtl/i2c_core.sv
+++ b/hw/ip/i2c/rtl/i2c_core.sv
@@ -54,6 +59,11 @@ module  i2c_core (
   logic event_stretch_timeout;
   logic event_sda_unstable;
   logic event_trans_complete;
+  logic event_tx_empty;
+  logic event_tx_nonempty;
+  logic event_tx_overflow;
+  logic event_acq_overflow;
+  logic event_ack_stop;
 
   logic [15:0] scl_rx_val;
   logic [15:0] sda_rx_val;

ParseResult:
INS HdlIdDef@@event_tx_empty to objs
HdlIdDef: event_tx_empty
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

INS HdlIdDef@@event_tx_nonempty to objs
HdlIdDef: event_tx_nonempty
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

INS HdlIdDef@@event_tx_overflow to objs
HdlIdDef: event_tx_overflow
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

INS HdlIdDef@@event_acq_overflow to objs
HdlIdDef: event_acq_overflow
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

INS HdlIdDef@@event_ack_stop to objs
HdlIdDef: event_ack_stop
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL


CommitId: 21167d2118874f62091feb8b71926052de0a77a2
[i2c, rtl] Initial incomplete implementation of i2c target mode
--- a/hw/ip/i2c/rtl/i2c_core.sv
+++ b/hw/ip/i2c/rtl/i2c_core.sv
@@ -117,12 +151,27 @@ module  i2c_core (
   assign hw2reg.val.scl_rx.d = scl_rx_val;
   assign hw2reg.val.sda_rx.d = sda_rx_val;
 
+  assign hw2reg.status.txfull.d = ~tx_fifo_wready;
+  assign hw2reg.status.acqfull.d = ~acq_fifo_wready;
+  assign hw2reg.status.txempty.d = ~tx_fifo_rvalid;
+  assign hw2reg.status.acqempty.d = ~acq_fifo_rvalid;
+  assign hw2reg.fifo_status.txlvl.d = tx_fifo_depth;
+  assign hw2reg.fifo_status.acqlvl.d = acq_fifo_depth;
+  assign hw2reg.acqdata.abyte.d = acq_fifo_rdata[7:0];
+  assign hw2reg.acqdata.signal.d = acq_fifo_rdata[9:8];
+
   assign override = reg2hw.ovrd.txovrden;
 
   assign scl_o = override ? reg2hw.ovrd.sclval : scl_out_fsm;
   assign sda_o = override ? reg2hw.ovrd.sdaval : sda_out_fsm;
 
-  assign host_enable = reg2hw.ctrl.q;
+  assign host_enable = reg2hw.ctrl.enablehost.q;
+  assign target_enable = reg2hw.ctrl.enabletarget.q;
+
+  assign target_address0 = reg2hw.target_id.address0.q;
+  assign target_mask0 = reg2hw.target_id.mask0.q;
+  assign target_address1 = reg2hw.target_id.address1.q;
+  assign target_mask1 = reg2hw.target_id.mask1.q;
 
   // Sample scl_i and sda_i at system clock
   always_ff @ (posedge clk_i or negedge rst_ni) begin : rx_oversampling

ParseResult:
INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: NEG
        list: ops
            HdlValueId: tx_fifo_wready
    HdlValueId: hw2reg

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: NEG
        list: ops
            HdlValueId: acq_fifo_wready
    HdlValueId: hw2reg

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: NEG
        list: ops
            HdlValueId: tx_fifo_rvalid
    HdlValueId: hw2reg

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: NEG
        list: ops
            HdlValueId: acq_fifo_rvalid
    HdlValueId: hw2reg

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlValueId: tx_fifo_depth
    HdlValueId: hw2reg

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlValueId: acq_fifo_depth
    HdlValueId: hw2reg

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: INDEX
        list: ops
            HdlValueId: acq_fifo_rdata
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 7
                    HdlValueInt: 0
    HdlValueId: hw2reg

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: INDEX
        list: ops
            HdlValueId: acq_fifo_rdata
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 9
                    HdlValueInt: 8
    HdlValueId: hw2reg

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: DOT
        list: ops
            HdlOp: DOT
                list: ops
                    HdlOp: DOT
                        list: ops
                            HdlValueId: reg2hw
                            HdlValueId: ctrl
                    HdlValueId: enabletarget
            HdlValueId: q
    HdlValueId: target_enable

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: DOT
        list: ops
            HdlOp: DOT
                list: ops
                    HdlOp: DOT
                        list: ops
                            HdlValueId: reg2hw
                            HdlValueId: target_id
                    HdlValueId: address0
            HdlValueId: q
    HdlValueId: target_address0

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: DOT
        list: ops
            HdlOp: DOT
                list: ops
                    HdlOp: DOT
                        list: ops
                            HdlValueId: reg2hw
                            HdlValueId: target_id
                    HdlValueId: mask0
            HdlValueId: q
    HdlValueId: target_mask0

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: DOT
        list: ops
            HdlOp: DOT
                list: ops
                    HdlOp: DOT
                        list: ops
                            HdlValueId: reg2hw
                            HdlValueId: target_id
                    HdlValueId: address1
            HdlValueId: q
    HdlValueId: target_address1

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: DOT
        list: ops
            HdlOp: DOT
                list: ops
                    HdlOp: DOT
                        list: ops
                            HdlValueId: reg2hw
                            HdlValueId: target_id
                    HdlValueId: mask1
            HdlValueId: q
    HdlValueId: target_mask1

UPD HdlStmAssign@@ to 
    MOV HdlOp@@DOT to 
    HdlOp: DOT
        list: ops
            HdlOp: DOT
                list: ops
                    HdlValueId: reg2hw
                    HdlValueId: ctrl
            HdlValueId: q
    UPD HdlOp@@DOT to DOT
        UPD HdlValueId@@q to enablehost


CommitId: 21167d2118874f62091feb8b71926052de0a77a2
[i2c, rtl] Initial incomplete implementation of i2c target mode
--- a/hw/ip/i2c/rtl/i2c_core.sv
+++ b/hw/ip/i2c/rtl/i2c_core.sv
@@ -153,6 +202,9 @@ module  i2c_core (
   assign i2c_fifo_rxilvl  = reg2hw.fifo_ctrl.rxilvl.q;
   assign i2c_fifo_fmtilvl = reg2hw.fifo_ctrl.fmtilvl.q;
 
+  assign i2c_fifo_txrst   = reg2hw.fifo_ctrl.txrst.q & reg2hw.fifo_ctrl.txrst.qe;
+  assign i2c_fifo_acqrst  = reg2hw.fifo_ctrl.acqrst.q & reg2hw.fifo_ctrl.acqrst.qe;
+
   always_ff @ (posedge clk_i or negedge rst_ni) begin : watermark_transition
     if (!rst_ni) begin
       fmt_watermark_q <= 1'b1; // true by default

ParseResult:
INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: AND
        list: ops
            HdlOp: DOT
                list: ops
                    HdlOp: DOT
                        list: ops
                            HdlOp: DOT
                                list: ops
                                    HdlValueId: reg2hw
                                    HdlValueId: fifo_ctrl
                            HdlValueId: txrst
                    HdlValueId: q
            HdlOp: DOT
                list: ops
                    HdlOp: DOT
                        list: ops
                            HdlOp: DOT
                                list: ops
                                    HdlValueId: reg2hw
                                    HdlValueId: fifo_ctrl
                            HdlValueId: txrst
                    HdlValueId: qe
    HdlValueId: i2c_fifo_txrst

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: AND
        list: ops
            HdlOp: DOT
                list: ops
                    HdlOp: DOT
                        list: ops
                            HdlOp: DOT
                                list: ops
                                    HdlValueId: reg2hw
                                    HdlValueId: fifo_ctrl
                            HdlValueId: acqrst
                    HdlValueId: q
            HdlOp: DOT
                list: ops
                    HdlOp: DOT
                        list: ops
                            HdlOp: DOT
                                list: ops
                                    HdlValueId: reg2hw
                                    HdlValueId: fifo_ctrl
                            HdlValueId: acqrst
                    HdlValueId: qe
    HdlValueId: i2c_fifo_acqrst


CommitId: 21167d2118874f62091feb8b71926052de0a77a2
[i2c, rtl] Initial incomplete implementation of i2c target mode
--- a/hw/ip/i2c/rtl/i2c_core.sv
+++ b/hw/ip/i2c/rtl/i2c_core.sv
@@ -217,6 +269,8 @@ module  i2c_core (
   assign unused_fifo_ctrl_rxilvl_qe  = reg2hw.fifo_ctrl.rxilvl.qe;
   assign unused_fifo_ctrl_fmtilvl_qe = reg2hw.fifo_ctrl.fmtilvl.qe;
   assign unused_rx_fifo_rdata_q = reg2hw.rdata.q;
+  assign unused_acq_fifo_adata_q = reg2hw.acqdata.abyte.q;
+  assign unused_acq_fifo_signal_q = reg2hw.acqdata.signal.q;
 
   prim_fifo_sync #(
     .Width   (13),

ParseResult:
INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: DOT
        list: ops
            HdlOp: DOT
                list: ops
                    HdlOp: DOT
                        list: ops
                            HdlValueId: reg2hw
                            HdlValueId: acqdata
                    HdlValueId: abyte
            HdlValueId: q
    HdlValueId: unused_acq_fifo_adata_q

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: DOT
        list: ops
            HdlOp: DOT
                list: ops
                    HdlOp: DOT
                        list: ops
                            HdlValueId: reg2hw
                            HdlValueId: acqdata
                    HdlValueId: signal
            HdlValueId: q
    HdlValueId: unused_acq_fifo_signal_q


CommitId: 4f735bc6e72691152b3a87dd7d29bb394be5c785
Update lowrisc_ibex to lowRISC/ibex@dd39ec0
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_prefetch_buffer.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_prefetch_buffer.sv
@@ -16,6 +16,7 @@ module ibex_prefetch_buffer (
     input  logic        req_i,
 
     input  logic        branch_i,
+    input  logic        branch_spec_i,
     input  logic [31:0] addr_i,
 
 

ParseResult:
INS HdlIdDef@@branch_spec_i to ports
HdlIdDef: branch_spec_i
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: IN


CommitId: 4f735bc6e72691152b3a87dd7d29bb394be5c785
Update lowrisc_ibex to lowRISC/ibex@dd39ec0
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_prefetch_buffer.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_prefetch_buffer.sv
@@ -42,6 +43,7 @@ module ibex_prefetch_buffer (
 
   localparam int unsigned NUM_REQS  = 2;
 
+  logic                branch_suppress;
   logic                valid_new_req, valid_req;
   logic                valid_req_d, valid_req_q;
   logic                discard_req_d, discard_req_q;

ParseResult:
INS HdlIdDef@@branch_suppress to objs
HdlIdDef: branch_suppress
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL


CommitId: 4f735bc6e72691152b3a87dd7d29bb394be5c785
Update lowrisc_ibex to lowRISC/ibex@dd39ec0
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_prefetch_buffer.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_prefetch_buffer.sv
@@ -107,8 +109,13 @@ module ibex_prefetch_buffer (
   // Requests //
   //////////////
 
+  // Suppress a new request on a not-taken branch (as the external address will be incorrect)
+  assign branch_suppress = branch_spec_i & ~branch_i;
+
   // Make a new request any time there is space in the FIFO, and space in the request queue
-  assign valid_new_req = req_i & (fifo_ready | branch_i) & ~rdata_outstanding_q[NUM_REQS-1];
+  assign valid_new_req = ~branch_suppress & req_i & (fifo_ready | branch_i) &
+                         ~rdata_outstanding_q[NUM_REQS-1];
+
   assign valid_req = valid_req_q | valid_new_req;
 
   // If a request address triggers a PMP error, the external bus request is suppressed. We might

ParseResult:
INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: AND
        list: ops
            HdlValueId: branch_spec_i
            HdlOp: NEG
                list: ops
                    HdlValueId: branch_i
    HdlValueId: branch_suppress

UPD HdlStmAssign@@ to 
    UPD HdlOp@@AND to AND
        UPD HdlOp@@AND to AND
            INS HdlOp@@AND to ops
            UPD HdlOp@@AND to AND
                INS list@@ops to AND
                INS HdlOp@@NEG to ops
                HdlOp: NEG
                    list: ops
                        HdlValueId: branch_suppress

UPD HdlStmAssign@@ to 
    UPD HdlOp@@AND to AND
        UPD HdlOp@@AND to AND
            MOV HdlValueId@@req_i to ops
            HdlValueId: req_i


CommitId: 4f735bc6e72691152b3a87dd7d29bb394be5c785
Update lowrisc_ibex to lowRISC/ibex@dd39ec0
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_prefetch_buffer.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_prefetch_buffer.sv
@@ -171,9 +178,9 @@ module ibex_prefetch_buffer (
   end
 
   // Address mux
-  assign instr_addr = valid_req_q ? stored_addr_q :
-                      branch_i    ? addr_i :
-                                    fetch_addr_q;
+  assign instr_addr = valid_req_q   ? stored_addr_q :
+                      branch_spec_i ? addr_i :
+                                      fetch_addr_q;
 
   assign instr_addr_w_aligned = {instr_addr[31:2], 2'b00};
 
ParseResult:
UPD HdlStmAssign@@ to 
    UPD HdlOp@@TERNARY to TERNARY
        UPD HdlOp@@TERNARY to TERNARY
            UPD HdlValueId@@branch_i to branch_spec_i


CommitId: 1b5fa9f1ebf0a9520ef6ea6faf1f1a2397a349c1
[verible/style] This corrects several style linter warnings/errors
--- a/hw/ip/prim/rtl/prim_intr_hw.sv
+++ b/hw/ip/prim/rtl/prim_intr_hw.sv
@@ -7,7 +7,7 @@
 // This module can be instantiated once per interrupt field, or
 // "bussified" with all fields of the interrupt vector.
 
-module prim_intr_hw #(parameter Width = 1) (
+module prim_intr_hw #(parameter int unsigned Width = 1) (
   // event
   input  [Width-1:0]  event_intr_i,
 
ParseResult:
UPD HdlIdDef@@Width to Width
    INS HdlOp@@PARAMETRIZATION to Width
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: int
            HdlOp: MAP_ASSOCIATION
                list: ops
                    HdlValueId: signed


CommitId: 23fc302c917d460d8d351256a2c23e000b74c4d7
[top] Fix lint issues due to ports tied to Z
--- a/hw/top_earlgrey/rtl/top_earlgrey_asic.sv
+++ b/hw/top_earlgrey/rtl/top_earlgrey_asic.sv
@@ -60,6 +60,11 @@ module top_earlgrey_asic (
   logic [padctrl_reg_pkg::NDioPads-1:0] dio_oe_core, dio_oe_padring;
   logic [padctrl_reg_pkg::NDioPads-1:0] dio_in_core, dio_in_padring;
 
+  // unused pad signals. need to hook these wires up since lint does not like module ports that are
+  // tied to 1'bz.
+  wire unused_usbdev_se0, unused_usbdev_tx_mode, unused_usbdev_suspend, unused_usbdev_d;
+  wire [11:0] unused_mio;
+
   padring #(
     // MIOs 31:20 are currently not
     // connected to pads and hence tied off

ParseResult:
INS HdlIdDef@@unused_usbdev_se0 to objs
HdlIdDef: unused_usbdev_se0
    HdlDirection: INTERNAL

INS HdlIdDef@@unused_usbdev_tx_mode to objs
HdlIdDef: unused_usbdev_tx_mode
    HdlDirection: INTERNAL

INS HdlIdDef@@unused_usbdev_suspend to objs
HdlIdDef: unused_usbdev_suspend
    HdlDirection: INTERNAL

INS HdlIdDef@@unused_usbdev_d to objs
HdlIdDef: unused_usbdev_d
    HdlDirection: INTERNAL

INS HdlIdDef@@unused_mio to objs
HdlIdDef: unused_mio
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: wire
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 11
                    HdlValueInt: 0
    HdlDirection: INTERNAL


CommitId: 4e7114e85a61e4a3814ee56bb689cd3e8c4292a2
[sram_ctrl] Absorb prim_ram_1p_scr
--- a/hw/ip/prim/rtl/prim_ram_1p_scr.sv
+++ b/hw/ip/prim/rtl/prim_ram_1p_scr.sv
@@ -45,11 +45,6 @@ module prim_ram_1p_scr import prim_ram_1p_pkg::*; #(
   // If set to 0, the cipher primitive is replicated, and together with a wider nonce input,
   // a unique keystream is generated for the full data width.
   parameter  bit ReplicateKeyStream  = 1'b0,
-  // Width of lfsr seed used for random init
-  parameter  int LfsrWidth           = 8,
-  parameter logic [LfsrWidth-1:0][$clog2(LfsrWidth)-1:0] StatePerm = {
-    24'h988eab
-  },
   // Derived parameters
   localparam int AddrWidth           = prim_util_pkg::vbits(Depth),
   // Depending on the data width, we need to instantiate multiple parallel cipher primitives to

ParseResult:
DEL HdlIdDef@@init_seed_i from ports
HdlIdDef: init_seed_i
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: wire
            HdlOp: DOWNTO
                list: ops
                    HdlOp: SUB
                        list: ops
                            HdlValueId: LfsrWidth
                            HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: IN

DEL HdlIdDef@@init_req_i from ports
HdlIdDef: init_req_i
    HdlValueId: wire
    HdlDirection: IN


CommitId: 4e7114e85a61e4a3814ee56bb689cd3e8c4292a2
[sram_ctrl] Absorb prim_ram_1p_scr
--- a/hw/ip/prim/rtl/prim_ram_1p_scr.sv
+++ b/hw/ip/prim/rtl/prim_ram_1p_scr.sv
@@ -69,9 +64,6 @@ module prim_ram_1p_scr import prim_ram_1p_pkg::*; #(
   input                             key_valid_i,
   input        [DataKeyWidth-1:0]   key_i,
   input        [NonceWidth-1:0]     nonce_i,
-  input        [LfsrWidth-1:0]      init_seed_i,
-  input                             init_req_i,
-  output logic                      init_ack_o,
 
   // Interface to TL-UL SRAM adapter
   input                             req_i,

ParseResult:
DEL HdlIdDef@@intg_error_o from ports
HdlIdDef: intg_error_o
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: OUT


CommitId: 4e7114e85a61e4a3814ee56bb689cd3e8c4292a2
[sram_ctrl] Absorb prim_ram_1p_scr
--- a/hw/ip/prim/rtl/prim_ram_1p_scr.sv
+++ b/hw/ip/prim/rtl/prim_ram_1p_scr.sv
@@ -207,22 +109,22 @@ module prim_ram_1p_scr import prim_ram_1p_pkg::*; #(
 
   // Read / write strobes
   logic read_en, write_en_d, write_en_q;
-  assign gnt_o = req_i & key_valid_i & ~init_sel;
+  assign gnt_o = req_i & key_valid_i;
 
   assign read_en = gnt_o & ~write_i;
-  assign write_en_d = gnt_o & write_i | init_sel;
+  assign write_en_d = gnt_o & write_i;
 
   logic write_pending_q;
   logic addr_collision_d, addr_collision_q;
   logic [AddrWidth-1:0] waddr_q;
-  assign addr_collision_d = read_en & (write_en_q | write_pending_q) & (addr == waddr_q);
+  assign addr_collision_d = read_en & (write_en_q | write_pending_q) & (addr_i == waddr_q);
 
   // Macro requests and write strobe
   // The macro operation is silenced if an integrity error is seen
   logic macro_req;
   logic intg_err_macro_req;
   prim_buf u_intg_err_macro_req (
-    .in_i(intg_error_i | intg_err_q),
+    .in_i(intg_error_i),
     .out_o(intg_err_macro_req)
   );
   assign macro_req   = ~intg_err_macro_req & (read_en | write_en_q | write_pending_q);

ParseResult:
DEL HdlStmAssign@@ from objs
HdlStmAssign
    HdlOp: AND_LOG
        list: ops
            HdlValueId: init_req_q
            HdlOp: EQ
                list: ops
                    HdlValueId: addr_cnt_q
                    HdlOp: SUB
                        list: ops
                            HdlValueId: Depth
                            HdlValueInt: 1
    HdlValueId: init_ack_o

DEL HdlStmProcess@@ from objs
HdlStmProcess
    list: sensitivity
        HdlOp: RISING
            list: ops
                HdlValueId: clk_i
        HdlOp: FALLING
            list: ops
                HdlValueId: rst_ni
    HdlStmBlock: SEQ
        list: body
            HdlStmIf
                HdlOp: NEG_LOG
                    list: ops
                        HdlValueId: rst_ni
                HdlStmBlock: SEQ
                    list: body
                        HdlStmAssign
                            HdlValueInt: 0
                            HdlValueId: addr_cnt_q
                list: elifs
                    tuple
                        HdlValueId: init_ack_o
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmAssign
                                    HdlValueInt: 0
                                    HdlValueId: addr_cnt_q
                    tuple
                        HdlOp: AND_LOG
                            list: ops
                                HdlValueId: init_req_q
                                HdlOp: LT
                                    list: ops
                                        HdlValueId: addr_cnt_q
                                        HdlOp: SUB
                                            list: ops
                                                HdlValueId: Depth
                                                HdlValueInt: 1
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmAssign
                                    HdlOp: ADD
                                        list: ops
                                            HdlValueId: addr_cnt_q
                                            HdlOp: CALL
                                                list: ops
                                                    HdlValueId: AddrWidth
                                                    HdlValueInt: 1
                                    HdlValueId: addr_cnt_q
    HdlStmProcessTriggerConstrain: FF


CommitId: 4e7114e85a61e4a3814ee56bb689cd3e8c4292a2
[sram_ctrl] Absorb prim_ram_1p_scr
--- a/hw/ip/prim/rtl/prim_ram_1p_scr.sv
+++ b/hw/ip/prim/rtl/prim_ram_1p_scr.sv
@@ -239,16 +141,15 @@ module prim_ram_1p_scr import prim_ram_1p_pkg::*; #(
 
   // We only select the pending write address in case there is no incoming read transaction.
   logic [AddrWidth-1:0] addr_mux;
-  assign addr_mux = (read_en) ? addr : waddr_q;
+  assign addr_mux = (read_en) ? addr_i : waddr_q;
 
   // This creates a bijective address mapping using a substitution / permutation network.
   logic [AddrWidth-1:0] addr_scr;
   if (NumAddrScrRounds > 0) begin : gen_addr_scr
 
-    // TODO, expand this into copies with another primitive
     logic intg_err_addr_scr;
     prim_buf u_intg_err_addr_scr (
-      .in_i(intg_error_i | intg_err_q),
+      .in_i(intg_error_i),
       .out_o(intg_err_addr_scr)
     );
 

ParseResult:
DEL HdlIdDef@@rand_val from objs
HdlIdDef: rand_val
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlOp: SUB
                        list: ops
                            HdlValueId: FullRandWidth
                            HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: INTERNAL

DEL HdlStmAssign@@ from objs
HdlStmAssign
    HdlOp: REPL_CONCAT
        list: ops
            HdlValueId: LfsrMult
            HdlValueId: lfsr_out
    HdlValueId: rand_val

DEL HdlStmIf@@ from objs
HdlStmIf
    HdlOp: GT
        list: ops
            HdlOp: MUL
                list: ops
                    HdlValueId: LfsrMult
                    HdlValueId: LfsrWidth
            HdlValueId: Width
    HdlStmBlock: SEQ
        list: body
            HdlIdDef: unused_rand
                HdlOp: PARAMETRIZATION
                    list: ops
                        HdlValueId: logic
                HdlDirection: INTERNAL
            HdlStmAssign
                HdlOp: XOR_UNARY
                    list: ops
                        HdlOp: INDEX
                            list: ops
                                HdlValueId: rand_val
                                HdlOp: DOWNTO
                                    list: ops
                                        HdlOp: SUB
                                            list: ops
                                                HdlValueId: FullRandWidth
                                                HdlValueInt: 1
                                        HdlValueId: Width
                HdlValueId: unused_rand
    list: elifs

DEL HdlStmAssign@@ from objs
HdlStmAssign
    HdlValueId: init_req_q
    HdlValueId: init_sel

DEL HdlStmAssign@@ from objs
HdlStmAssign
    HdlOp: TERNARY
        list: ops
            HdlValueId: init_sel
            HdlValueId: addr_cnt_q
            HdlValueId: addr_i
    HdlValueId: addr


CommitId: 597dea829296a9563ae6dfbf79a38fbb3ecbabc0
[ast] Fix ast.core file
--- a/hw/top_earlgrey/ip/ast/rtl/sys_clk.sv
+++ b/hw/top_earlgrey/ip/ast/rtl/sys_clk.sv
@@ -14,14 +14,15 @@ module sys_clk (
   input vcore_pok_h_i,                     // VCORE POK @3.3V (for OSC)
   input scan_mode_i,                       // Scan Mode
   input scan_reset_ni,                     // Scan Reset
+`ifdef AST_BYPASS_CLK
   input clk_sys_ext_i,                     // FPGA/VERILATOR Clock input
+`endif
   output logic clk_src_sys_o,              // System Source Clock
   output logic clk_src_sys_val_o           // System Source Clock Valid
 );
 
-logic clk, osc_en, sys_clk_en, rst_n;
+logic clk, osc_en, sys_clk_en;
 
-assign rst_n = rst_sys_clk_ni;  // scan enabled
 assign osc_en = (clk_src_sys_en_i && clk_sys_pd_ni && rst_sys_clk_ni);
 assign sys_clk_en = scan_mode_i || osc_en;
 

ParseResult:
DEL HdlIdDef@@clk_sys_ext_i from ports
HdlIdDef: clk_sys_ext_i
    HdlValueId: wire
    HdlDirection: IN

DEL HdlIdDef@@rst_n from objs
HdlIdDef: rst_n
    HdlDirection: INTERNAL

DEL HdlStmAssign@@ from objs
HdlStmAssign
    HdlValueId: rst_sys_clk_ni
    HdlValueId: rst_n


CommitId: 597dea829296a9563ae6dfbf79a38fbb3ecbabc0
[ast] Fix ast.core file
--- a/hw/top_earlgrey/ip/ast/rtl/sys_clk.sv
+++ b/hw/top_earlgrey/ip/ast/rtl/sys_clk.sv
@@ -44,7 +47,7 @@ prim_clock_buf u_clk_sys_buf(
 
 // 2-stage de-assertion
 logic rst_val_n;
-assign rst_val_n = scan_mode_i ? scan_reset_ni : rst_n && sys_clk_en;
+assign rst_val_n = scan_mode_i ? scan_reset_ni : sys_clk_en;
 
 prim_flop_2sync #(
   .Width ( 1 ),
ParseResult:
UPD HdlStmAssign@@ to 
    UPD HdlOp@@TERNARY to TERNARY
        UPD HdlOp@@AND_LOG to AND_LOG
            MOV HdlValueId@@sys_clk_en to ops
            HdlValueId: sys_clk_en
            DEL HdlValueId@@rst_n from ops
            DEL list@@ops from AND_LOG
        DEL HdlOp@@AND_LOG from ops


CommitId: e9fd2bfcd09ba6aff9e5dca868407751a4cd23a5
[aes] Use sparse encodings for additional control signals
--- a/hw/ip/aes/rtl/aes_reg_status.sv
+++ b/hw/ip/aes/rtl/aes_reg_status.sv
@@ -16,16 +17,16 @@ module aes_reg_status #(
   input  logic             use_i,
   input  logic             clear_i,
   input  logic             arm_i,
-  output logic             new_o,
-  output logic             clean_o
+  output sp2v_e            new_o,
+  output sp2v_e            clean_o
 );
 
   logic [Width-1:0] we_d, we_q;
   logic             armed_d, armed_q;
-  logic             all_written;
-  logic             none_written;
-  logic             new_d, new_q;
-  logic             clean_d, clean_q;
+  sp2v_e            all_written;
+  sp2v_e            none_written;
+  sp2v_e            new_d, new_q;
+  sp2v_e            clean_d, clean_q;
 
   // Collect write operations. Upon clear or use, we start over. If armed, the next write will
   // restart the tracking.

ParseResult:
UPD HdlIdDef@@new_o to new_o
    UPD HdlOp@@PARAMETRIZATION to PARAMETRIZATION
        UPD HdlValueId@@logic to sp2v_e
        MOV HdlValueId@@logic to ops
        HdlValueId: logic
        DEL list@@ops from PARAMETRIZATION
    DEL HdlOp@@PARAMETRIZATION from new_o

UPD HdlIdDef@@clean_o to clean_o
    UPD HdlOp@@PARAMETRIZATION to PARAMETRIZATION
        UPD HdlValueId@@logic to sp2v_e
        MOV HdlValueId@@logic to ops
        HdlValueId: logic
        DEL list@@ops from PARAMETRIZATION
    DEL HdlOp@@PARAMETRIZATION from clean_o

UPD HdlIdDef@@all_written to all_written
    DEL HdlOp@@PARAMETRIZATION from all_written
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic

UPD HdlIdDef@@none_written to none_written
    DEL HdlOp@@PARAMETRIZATION from none_written
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic

UPD HdlIdDef@@new_d to new_d
    DEL HdlOp@@PARAMETRIZATION from new_d
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic

UPD HdlIdDef@@new_q to new_q
    DEL HdlOp@@PARAMETRIZATION from new_q
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic

UPD HdlIdDef@@clean_d to clean_d
    DEL HdlOp@@PARAMETRIZATION from clean_d
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic

UPD HdlIdDef@@clean_q to clean_q
    DEL HdlOp@@PARAMETRIZATION from clean_q
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic


CommitId: e9fd2bfcd09ba6aff9e5dca868407751a4cd23a5
[aes] Use sparse encodings for additional control signals
--- a/hw/ip/aes/rtl/aes_reg_status.sv
+++ b/hw/ip/aes/rtl/aes_reg_status.sv
@@ -45,11 +46,11 @@ module aes_reg_status #(
   end
 
   // Status tracking
-  assign all_written  =  &we_d;
-  assign none_written = ~|we_d;
+  assign all_written  =  &we_d ? SP2V_HIGH : SP2V_LOW;
+  assign none_written = ~|we_d ? SP2V_HIGH : SP2V_LOW;
 
   // We have a complete new value if all registers have been written at least once.
-  assign new_d   = (clear_i || use_i) ? 1'b0 : all_written;
+  assign new_d   = (clear_i || use_i) ? SP2V_LOW : all_written;
 
   // We have a clean value, if either:
   // - all registers have been written at least once, or

ParseResult:
UPD HdlStmAssign@@ to 
    INS HdlOp@@TERNARY to 
    UPD HdlOp@@TERNARY to TERNARY
        INS list@@ops to TERNARY
        INS HdlValueId@@SP2V_HIGH to ops
        INS HdlValueId@@SP2V_LOW to ops

UPD HdlStmAssign@@ to 
    INS HdlOp@@TERNARY to 
    UPD HdlOp@@TERNARY to TERNARY
        INS list@@ops to TERNARY
        INS HdlValueId@@SP2V_HIGH to ops
        INS HdlValueId@@SP2V_LOW to ops

UPD HdlStmAssign@@ to 
    MOV HdlOp@@AND_UNARY to 
    HdlOp: AND_UNARY
        list: ops
            HdlValueId: we_d

UPD HdlStmAssign@@ to 
    MOV HdlOp@@NOR_UNARY to 
    HdlOp: NOR_UNARY
        list: ops
            HdlValueId: we_d

UPD HdlStmAssign@@ to 
    UPD HdlOp@@TERNARY to TERNARY
        INS HdlValueId@@SP2V_LOW to ops

UPD HdlStmAssign@@ to 
    UPD HdlOp@@TERNARY to TERNARY
        DEL HdlValueInt@@0 from ops


CommitId: 91a2335db7c362ea12962a6d0ccc6f589c1d01a3
[sysrst_ctrl] cleaned up unused lint errors
--- a/hw/ip/sysrst_ctrl/rtl/sysrst_ctrl_keyfsm.sv
+++ b/hw/ip/sysrst_ctrl/rtl/sysrst_ctrl_keyfsm.sv
@@ -20,7 +20,7 @@ module sysrst_ctrl_keyfsm #(
 
   logic trigger_q;
   logic trigger_h2l, trigger_l2h, trigger_l2l, trigger_h2h;
-  logic trigger_tgl, trigger_sty;
+  //logic trigger_tgl, trigger_sty;
 
   logic [TIMERBIT-1:0] timer_cnt_d, timer_cnt_q;
   logic timer_cnt_clr, timer_cnt_en;

ParseResult:
DEL HdlIdDef@@trigger_tgl from objs
HdlIdDef: trigger_tgl
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

DEL HdlIdDef@@trigger_sty from objs
HdlIdDef: trigger_sty
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL


CommitId: 91a2335db7c362ea12962a6d0ccc6f589c1d01a3
[sysrst_ctrl] cleaned up unused lint errors
--- a/hw/ip/sysrst_ctrl/rtl/sysrst_ctrl_keyfsm.sv
+++ b/hw/ip/sysrst_ctrl/rtl/sysrst_ctrl_keyfsm.sv
@@ -37,8 +37,8 @@ module sysrst_ctrl_keyfsm #(
   assign trigger_l2h = (trigger_q == 1'b0) && (trigger_i == 1'b1);
   assign trigger_l2l = (trigger_q == 1'b0) && (trigger_i == 1'b0);
   assign trigger_h2h = (trigger_q == 1'b1) && (trigger_i == 1'b1);
-  assign trigger_tgl = trigger_q != trigger_i;
-  assign trigger_sty = trigger_q == trigger_i;
+  //assign trigger_tgl = trigger_q != trigger_i;
+  //assign trigger_sty = trigger_q == trigger_i;
 
   //five-state FSM
   //IDLE->WAITH2L->DONEH2L->WAITL2H->DONEL2H or
ParseResult:
DEL HdlStmAssign@@ from objs
HdlStmAssign
    HdlOp: NE
        list: ops
            HdlValueId: trigger_q
            HdlValueId: trigger_i
    HdlValueId: trigger_tgl

DEL HdlStmAssign@@ from objs
HdlStmAssign
    HdlOp: EQ
        list: ops
            HdlValueId: trigger_q
            HdlValueId: trigger_i
    HdlValueId: trigger_sty


CommitId: bc7f6d6cde2259f2741e40112f2ff4c6871d0d75
Update lowrisc_ibex to lowRISC/ibex@6d9e1ac
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_tracer.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_tracer.sv
@@ -759,17 +759,17 @@ module ibex_tracer (
     if (rvfi_insn[1:0] != 2'b11) begin
       insn_is_compressed = 1;
       // Separate case to avoid overlapping decoding
-      if (rvfi_insn[15:13] == 3'b100 && rvfi_insn[1:0] == 2'b10) begin
-        if (rvfi_insn[12]) begin
-          if (rvfi_insn[11:2] == 10'h0) begin
+      if (rvfi_insn[15:13] == INSN_CMV[15:13] && rvfi_insn[1:0] == OPCODE_C2) begin
+        if (rvfi_insn[12] == INSN_CADD[12]) begin
+          if (rvfi_insn[11:2] == INSN_CEBREAK[11:2]) begin
             decode_mnemonic("c.ebreak");
-          end else if (rvfi_insn[6:2] == 5'b0) begin
+          end else if (rvfi_insn[6:2] == INSN_CJALR[6:2]) begin
             decode_cr_insn("c.jalr");
           end else begin
             decode_cr_insn("c.add");
           end
         end else begin
-          if (rvfi_insn[6:2] == 5'h0) begin
+          if (rvfi_insn[6:2] == INSN_CJR[6:2]) begin
             decode_cr_insn("c.jr");
           end else begin
             decode_cr_insn("c.mv");
ParseResult:
UPD HdlStmProcess@@ to 
    INS HdlStmProcessTriggerConstrain@@COMB to 

UPD HdlStmIf@@ to 
    INS list@@elifs to 

UPD HdlStmIf@@ to 
    INS HdlOp@@EQ to 
    UPD HdlOp@@EQ to EQ
        INS list@@ops to EQ
        INS HdlOp@@INDEX to ops
        HdlOp: INDEX
            list: ops
                HdlValueId: INSN_CADD
                HdlValueInt: 12

UPD HdlStmIf@@ to 
    UPD HdlOp@@AND_LOG to AND_LOG
        UPD HdlOp@@EQ to EQ
            INS HdlOp@@INDEX to ops
            UPD HdlOp@@INDEX to INDEX
                INS list@@ops to INDEX
                INS HdlValueId@@INSN_CMV to ops
                INS HdlOp@@DOWNTO to ops
                UPD HdlOp@@DOWNTO to DOWNTO
                    INS list@@ops to DOWNTO
                    INS HdlValueInt@@13 to ops
        UPD HdlOp@@EQ to EQ
            INS HdlValueId@@OPCODE_C2 to ops

UPD HdlStmIf@@ to 
    MOV HdlOp@@INDEX to 
    HdlOp: INDEX
        list: ops
            HdlValueId: rvfi_insn
            HdlValueInt: 12

UPD HdlStmIf@@ to 
    UPD HdlOp@@AND_LOG to AND_LOG
        UPD HdlOp@@EQ to EQ
            UPD HdlValueInt@@100 to 15
            MOV HdlValueInt@@100 to ops
            HdlValueInt: 100
        UPD HdlOp@@EQ to EQ
            DEL HdlValueInt@@10 from ops

UPD HdlStmIf@@ to 
    UPD HdlOp@@EQ to EQ
        INS HdlOp@@INDEX to ops
        UPD HdlOp@@INDEX to INDEX
            INS list@@ops to INDEX
            INS HdlValueId@@INSN_CEBREAK to ops
            INS HdlOp@@DOWNTO to ops
            UPD HdlOp@@DOWNTO to DOWNTO
                INS list@@ops to DOWNTO
                INS HdlValueInt@@2 to ops
    UPD HdlOp@@EQ to EQ
        INS HdlOp@@INDEX to ops
        UPD HdlOp@@INDEX to INDEX
            INS list@@ops to INDEX
            INS HdlValueId@@INSN_CJALR to ops
            INS HdlOp@@DOWNTO to ops
            UPD HdlOp@@DOWNTO to DOWNTO
                INS list@@ops to DOWNTO
                INS HdlValueInt@@2 to ops

UPD HdlStmIf@@ to 
    UPD HdlOp@@EQ to EQ
        INS HdlOp@@INDEX to ops
        UPD HdlOp@@INDEX to INDEX
            INS list@@ops to INDEX
            INS HdlValueId@@INSN_CJR to ops
            INS HdlOp@@DOWNTO to ops
            UPD HdlOp@@DOWNTO to DOWNTO
                INS list@@ops to DOWNTO
                INS HdlValueInt@@2 to ops

UPD HdlStmIf@@ to 
    UPD HdlOp@@EQ to EQ
        UPD HdlValueInt@@0 to 11
        MOV HdlValueInt@@0 to ops
        HdlValueInt: 0
    UPD HdlOp@@EQ to EQ
        UPD HdlValueInt@@0 to 6
        MOV HdlValueInt@@0 to ops
        HdlValueInt: 0

UPD HdlStmIf@@ to 
    UPD HdlOp@@EQ to EQ
        UPD HdlValueInt@@0 to 6
        MOV HdlValueInt@@0 to ops
        HdlValueInt: 0

UPD HdlStmIf@@ to 
    DEL list@@elifs from 

UPD HdlStmProcess@@ to 
    DEL HdlStmProcessTriggerConstrain@@COMB from 


CommitId: 488707873168bd72fba44d8de8cd4df45d70e106
[usb] Fix lint errors
--- a/hw/ip/usbuart/rtl/usb_serial_ctrl_ep.sv
+++ b/hw/ip/usbuart/rtl/usb_serial_ctrl_ep.sv
@@ -82,7 +82,7 @@ module usb_serial_ctrl_ep  #(
   logic [7:0] bmRequestType, raw_setup_data [8];
   // Alias for the setup bytes using names from USB spec
   usb_setup_request_e bRequest;
-  logic [15:0] wValue, wLength; //wIndex
+  logic [15:0] wValue, wLength, wIndex;
 
   logic setup_pkt_start, has_data_stage, out_data_stage, in_data_stage;
   assign setup_pkt_start = pkt_start && out_ep_setup_i;

ParseResult:
INS HdlIdDef@@wIndex to objs
HdlIdDef: wIndex
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 15
                    HdlValueInt: 0
    HdlDirection: INTERNAL


CommitId: 488707873168bd72fba44d8de8cd4df45d70e106
[usb] Fix lint errors
--- a/hw/ip/usbuart/rtl/usb_serial_ctrl_ep.sv
+++ b/hw/ip/usbuart/rtl/usb_serial_ctrl_ep.sv
@@ -209,13 +209,15 @@ module usb_serial_ctrl_ep  #(
   assign bmRequestType = raw_setup_data[0];
   assign bRequest = usb_setup_request_e'(raw_setup_data[1]);
   assign wValue = {raw_setup_data[3][7:0], raw_setup_data[2][7:0]};
-//assign wIndex = {raw_setup_data[5][7:0], raw_setup_data[4][7:0]};
+  assign wIndex = {raw_setup_data[5][7:0], raw_setup_data[4][7:0]};
   assign wLength = {raw_setup_data[7][7:0], raw_setup_data[6][7:0]};
   // suppress warning
   logic [6:0]  unused_bmR;
   logic        unused_wValue;
+  logic [15:0] unused_wIndex;
   assign unused_bmR = bmRequestType[6:0];
   assign unused_wValue = wValue[7];
+  assign unused_wIndex = wIndex;
 
   // Check of upper put_addr bits needed because CRC will be sent (10 bytes total)
   always_ff @(posedge clk_i) begin

ParseResult:
INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: CONCAT
        list: ops
            HdlOp: INDEX
                list: ops
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: raw_setup_data
                            HdlValueInt: 5
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 7
                            HdlValueInt: 0
            HdlOp: INDEX
                list: ops
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: raw_setup_data
                            HdlValueInt: 4
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 7
                            HdlValueInt: 0
    HdlValueId: wIndex

INS HdlIdDef@@unused_wIndex to objs
HdlIdDef: unused_wIndex
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 15
                    HdlValueInt: 0
    HdlDirection: INTERNAL

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlValueId: wIndex
    HdlValueId: unused_wIndex


CommitId: 488707873168bd72fba44d8de8cd4df45d70e106
[usb] Fix lint errors
--- a/hw/ip/usbuart/rtl/usb_serial_ctrl_ep.sv
+++ b/hw/ip/usbuart/rtl/usb_serial_ctrl_ep.sv
@@ -227,7 +229,7 @@ module usb_serial_ctrl_ep  #(
   // Send setup data (which will be empty in case of a SET operation and
   // come from the ROM in the case of a GET)
   usb_dscr_type_e dscr_type;
-  assign dcsr_type = usb_dscr_type_e'(wValue[15:8]);
+  assign dscr_type = usb_dscr_type_e'(wValue[15:8]);
   always_ff @(posedge clk_i or negedge rst_ni) begin
     if (!rst_ni) begin
       dev_addr_int <= '0;

ParseResult:
UPD HdlStmAssign@@ to 
    UPD HdlValueId@@dcsr_type to dscr_type


CommitId: 488707873168bd72fba44d8de8cd4df45d70e106
[usb] Fix lint errors
--- a/hw/ip/usbuart/rtl/usb_serial_ctrl_ep.sv
+++ b/hw/ip/usbuart/rtl/usb_serial_ctrl_ep.sv
@@ -239,7 +241,7 @@ module usb_serial_ctrl_ep  #(
         // Command (bRequest) and sub-command (wValue) come from USB spec
         unique case (bRequest)
           SetupGetDescriptor: begin
-            unique case (dcsr_type)
+            unique case (dscr_type)
               DscrTypeDevice: begin
                 in_ep_stall_o <= 1'b0;
                 rom_addr      <= 7'h00;
ParseResult:
UPD HdlStmCase@@dcsr_type to dscr_type

UPD HdlStmCase@@dcsr_type to dcsr_type
    UPD HdlValueId@@dcsr_type to dscr_type


CommitId: 1d046cee10b7d152a623379f603964fa049cca94
[pwm] Minor lint fix
--- a/hw/ip/pwm/rtl/pwm_cdc.sv
+++ b/hw/ip/pwm/rtl/pwm_cdc.sv
@@ -26,6 +26,7 @@ module pwm_cdc #(
 
   // Regen field does not need syncing, but assign it a value for completeness.
   assign reg2hw_sync.regen.q = 1'b0;
+  assign reg2hw_sync.alert_test = '0;
 
   reg [31:0] common_sync_q;
 

ParseResult:
INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: reg2hw_sync


CommitId: 1d046cee10b7d152a623379f603964fa049cca94
[pwm] Minor lint fix
--- a/hw/ip/pwm/rtl/pwm_cdc.sv
+++ b/hw/ip/pwm/rtl/pwm_cdc.sv
@@ -104,9 +105,13 @@ module pwm_cdc #(
 
   end : gen_chan_cdc
 
-  // All fields in reg2hw are synced across the CDC except REGEN (the register write enable).
-  // Explicitly waive that here.
+  // All fields in reg2hw are synced across the CDC except REGEN (the register write enable)
+  // and ALERT_TEST. Explicitly waive them here.
   logic unused_regen;
   assign unused_regen = reg2hw.regen;
 
+  // unused register configuration
+  logic unused_reg;
+  assign unused_reg = ^reg2hw.alert_test;
+
 endmodule : pwm_cdc
ParseResult:
INS HdlIdDef@@unused_reg to objs
HdlIdDef: unused_reg
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: XOR_UNARY
        list: ops
            HdlOp: DOT
                list: ops
                    HdlValueId: reg2hw
                    HdlValueId: alert_test
    HdlValueId: unused_reg


CommitId: eef49a584162a29737680efa7101b19c63f8fb88
Update pulp_riscv_dbg to pulp-platform/riscv-dbg@e67a0a7
--- a/hw/vendor/pulp_riscv_dbg/debug_rom/debug_rom.sv
+++ b/hw/vendor/pulp_riscv_dbg/debug_rom/debug_rom.sv
@@ -23,7 +23,8 @@ module debug_rom (
 
   localparam int unsigned RomSize = 19;
 
-  const logic [RomSize-1:0][63:0] mem = {
+  logic [RomSize-1:0][63:0] mem;
+  assign mem = {
     64'h00000000_7b200073,
     64'h7b202473_7b302573,
     64'h10852423_f1402473,
ParseResult:
INS HdlIdDef@@mem to objs

INS HdlStmAssign@@ to objs

UPD HdlIdDef@@mem to mem
    MOV HdlOp@@INDEX to mem
    HdlOp: INDEX
        list: ops
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: logic
                    HdlOp: DOWNTO
                        list: ops
                            HdlOp: SUB
                                list: ops
                                    HdlValueId: RomSize
                                    HdlValueInt: 1
                            HdlValueInt: 0
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 63
                    HdlValueInt: 0
    MOV HdlOp@@CONCAT to mem
    HdlOp: CONCAT
        list: ops
            HdlOp: CONCAT
                list: ops
                    HdlOp: CONCAT
                        list: ops
                            HdlOp: CONCAT
                                list: ops
                                    HdlOp: CONCAT
                                        list: ops
                                            HdlOp: CONCAT
                                                list: ops
                                                    HdlOp: CONCAT
                                                        list: ops
                                                            HdlOp: CONCAT
                                                                list: ops
                                                                    HdlOp: CONCAT
                                                                        list: ops
                                                                            HdlOp: CONCAT
                                                                                list: ops
                                                                                    HdlOp: CONCAT
                                                                                        list: ops
                                                                                            HdlOp: CONCAT
                                                                                                list: ops
                                                                                                    HdlOp: CONCAT
                                                                                                        list: ops
                                                                                                            HdlOp: CONCAT
                                                                                                                list: ops
                                                                                                                    HdlOp: CONCAT
                                                                                                                        list: ops
                                                                                                                            HdlOp: CONCAT
                                                                                                                                list: ops
                                                                                                                                    HdlOp: CONCAT
                                                                                                                                        list: ops
                                                                                                                                            HdlOp: CONCAT
                                                                                                                                                list: ops
                                                                                                                                                    HdlValueInt: 000000007b200073
                                                                                                                                                    HdlValueInt: 7b2024737b302573
                                                                                                                                            HdlValueInt: 10852423f1402473
                                                                                                                                    HdlValueInt: a85ff06f7b202473
                                                                                                                            HdlValueInt: 7b30257310052223
                                                                                                                    HdlValueInt: 001000737b202473
                                                                                                            HdlValueInt: 7b30257310052623
                                                                                                    HdlValueInt: 00c5151300c55513
                                                                                            HdlValueInt: 00000517fd5ff06f
                                                                                    HdlValueInt: fa041ce300247413
                                                                            HdlValueInt: 4004440300a40433
                                                                    HdlValueInt: f140247302041c63
                                                            HdlValueInt: 0014741340044403
                                                    HdlValueInt: 00a4043310852023
                                            HdlValueInt: f140247300c51513
                                    HdlValueInt: 00c5551300000517
                            HdlValueInt: 7b3510737b241073
                    HdlValueInt: 0ff0000f04c0006f
            HdlValueInt: 07c0006f00c0006f
    DEL HdlDirection@@INTERNAL from mem

UPD HdlIdDef@@mem to mem
    INS HdlDirection@@INTERNAL to mem

UPD HdlStmAssign@@ to 
    INS HdlValueId@@mem to 

DEL HdlIdDef@@mem from objs


CommitId: d2e1184308b9582551252d1135a126ea558a6ab8
Revert "[usbdev] Fixes for I/O modes and expand their tests"
--- a/hw/ip/usb_fs_nb_pe/rtl/usb_fs_rx.sv
+++ b/hw/ip/usb_fs_nb_pe/rtl/usb_fs_rx.sv
@@ -10,14 +10,12 @@ module usb_fs_rx (
   input  logic rst_ni,
   input  logic link_reset_i,
 
-  // configuration
+  // EOP configuration
   input  logic cfg_eop_single_bit_i,
-  input  logic cfg_rx_differential_i,
 
   // USB data+ and data- lines (synchronous)
   input  logic usb_d_i,
-  input  logic usb_dp_i,
-  input  logic usb_dn_i,
+  input  logic usb_se0_i,
 
   // Transmit enable disables the receier
   input  logic tx_en_i,

ParseResult:
UPD HdlIdDef@@usb_dp_i to usb_se0_i

DEL HdlIdDef@@cfg_rx_differential_i from ports
HdlIdDef: cfg_rx_differential_i
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: IN

DEL HdlIdDef@@usb_dn_i from ports
HdlIdDef: usb_dn_i
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: IN


CommitId: d2e1184308b9582551252d1135a126ea558a6ab8
Revert "[usbdev] Fixes for I/O modes and expand their tests"
--- a/hw/ip/usb_fs_nb_pe/rtl/usb_fs_rx.sv
+++ b/hw/ip/usb_fs_nb_pe/rtl/usb_fs_rx.sv
@@ -44,10 +42,6 @@ module usb_fs_rx (
   // Most recent packet passes PID and CRC checks
   output logic valid_packet_o,
 
-  // line status for the status detection (actual rx bits after clock recovery)
-  output logic rx_se0_det_o,
-  output logic rx_jjj_det_o,
-
   // Error detection
   output logic crc_error_o,
   output logic pid_error_o,

ParseResult:
DEL HdlIdDef@@rx_se0_det_o from ports
HdlIdDef: rx_se0_det_o
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: OUT

DEL HdlIdDef@@rx_jjj_det_o from ports
HdlIdDef: rx_jjj_det_o
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: OUT


CommitId: d2e1184308b9582551252d1135a126ea558a6ab8
Revert "[usbdev] Fixes for I/O modes and expand their tests"
--- a/hw/ip/usb_fs_nb_pe/rtl/usb_fs_rx.sv
+++ b/hw/ip/usb_fs_nb_pe/rtl/usb_fs_rx.sv
@@ -226,7 +137,7 @@ module usb_fs_rx (
   assign bit_strobe_o     = (bit_phase_q == 2'd2);
 
   // keep track of phase within each bit
-  assign bit_phase_d = (line_state_rx == DT) ? 0 : bit_phase_q + 1;
+  assign bit_phase_d = (line_state_q == DT) ? 0 : bit_phase_q + 1;
 
   always_ff @(posedge clk_i or negedge rst_ni) begin : proc_bit_phase_q
     if (!rst_ni) begin

ParseResult:
INS HdlStmAssign@@ to objs

UPD HdlStmAssign@@ to 
    UPD HdlOp@@TERNARY to TERNARY
        MOV HdlOp@@ADD to ops
        HdlOp: ADD
            list: ops
                HdlValueId: bit_phase_q
                HdlValueInt: 1
        DEL HdlOp@@EQ from ops
        HdlOp: EQ
            list: ops
                HdlValueId: line_state_rx
                HdlValueId: DT
        DEL HdlValueInt@@0 from ops
        DEL list@@ops from TERNARY
    DEL HdlOp@@TERNARY from 
    DEL HdlValueId@@bit_phase_d from 

DEL HdlStmAssign@@ from objs


CommitId: d2e1184308b9582551252d1135a126ea558a6ab8
Revert "[usbdev] Fixes for I/O modes and expand their tests"
--- a/hw/ip/usb_fs_nb_pe/rtl/usb_fs_rx.sv
+++ b/hw/ip/usb_fs_nb_pe/rtl/usb_fs_rx.sv
@@ -282,7 +193,7 @@ module usb_fs_rx (
   end
 
   // keep a history of the last two states on the line
-  assign line_history_d = line_state_valid ? {line_history_q[9:0], line_state_rx[1:0]} :
+  assign line_history_d = line_state_valid ? {line_history_q[9:0], line_state_q[1:0]} :
                                               line_history_q;
 
   always_ff @(posedge clk_i or negedge rst_ni) begin : proc_reg_pkt_line

ParseResult:
UPD HdlStmAssign@@ to 
    UPD HdlOp@@TERNARY to TERNARY
        UPD HdlOp@@CONCAT to CONCAT
            UPD HdlOp@@INDEX to INDEX
                UPD HdlValueId@@line_state_rx to line_state_q


CommitId: d2e1184308b9582551252d1135a126ea558a6ab8
Revert "[usbdev] Fixes for I/O modes and expand their tests"
--- a/hw/ip/usb_fs_nb_pe/rtl/usb_fs_rx.sv
+++ b/hw/ip/usb_fs_nb_pe/rtl/usb_fs_rx.sv
@@ -300,9 +211,6 @@ module usb_fs_rx (
     end
   end
 
-  // mask out jjj detection when transmitting (because rx is forced to J)
-  assign rx_se0_det_o = line_history_q[5:0] == 6'b000000; // three SE0s
-  assign rx_jjj_det_o = ~tx_en_i & (line_history_q[5:0] == 6'b101010); // three Js
 
   /////////////////
   // NRZI decode //
ParseResult:
DEL HdlStmAssign@@ from objs
HdlStmAssign
    HdlOp: EQ
        list: ops
            HdlOp: INDEX
                list: ops
                    HdlValueId: line_history_q
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 5
                            HdlValueInt: 0
            HdlValueInt: 000000
    HdlValueId: rx_se0_det_o

DEL HdlStmAssign@@ from objs
HdlStmAssign
    HdlOp: AND
        list: ops
            HdlOp: NEG
                list: ops
                    HdlValueId: tx_en_i
            HdlOp: EQ
                list: ops
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: line_history_q
                            HdlOp: DOWNTO
                                list: ops
                                    HdlValueInt: 5
                                    HdlValueInt: 0
                    HdlValueInt: 101010
    HdlValueId: rx_jjj_det_o


CommitId: 098128c9003b1ab226ff17001ac59845a6755f24
Revert "Revert "[usbdev] Fixes for I/O modes and expand their tests""
--- a/hw/ip/usbdev/rtl/usbdev_linkstate.sv
+++ b/hw/ip/usbdev/rtl/usbdev_linkstate.sv
@@ -10,8 +10,8 @@ module usbdev_linkstate (
   input  logic rst_ni,
   input  logic us_tick_i,
   input  logic usb_sense_i,
-  input  logic usb_rx_d_i,
-  input  logic usb_rx_se0_i,
+  input  logic rx_se0_det_i,
+  input  logic rx_jjj_det_i,
   input  logic sof_valid_i,
   output logic link_disconnect_o,  // level
   output logic link_connect_o,     // level

ParseResult:
UPD HdlIdDef@@usb_rx_d_i to rx_se0_det_i

UPD HdlIdDef@@usb_rx_se0_i to rx_jjj_det_i


CommitId: 098128c9003b1ab226ff17001ac59845a6755f24
Revert "Revert "[usbdev] Fixes for I/O modes and expand their tests""
--- a/hw/ip/usbdev/rtl/usbdev_linkstate.sv
+++ b/hw/ip/usbdev/rtl/usbdev_linkstate.sv
@@ -51,8 +52,7 @@ module usbdev_linkstate (
   } link_inac_state_e;
 
   link_state_e  link_state_d, link_state_q;
-  logic         line_se0_raw, line_idle_raw;
-  logic         see_se0, see_idle, see_pwr_sense;
+  logic         see_pwr_sense;
 
   // Reset FSM
   logic [2:0]      link_rst_timer_d, link_rst_timer_q;

ParseResult:
DEL HdlIdDef@@line_se0_raw from objs
HdlIdDef: line_se0_raw
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

DEL HdlIdDef@@line_idle_raw from objs
HdlIdDef: line_idle_raw
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

DEL HdlIdDef@@see_se0 from objs
HdlIdDef: see_se0
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

DEL HdlIdDef@@see_idle from objs
HdlIdDef: see_idle
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL


CommitId: 098128c9003b1ab226ff17001ac59845a6755f24
Revert "Revert "[usbdev] Fixes for I/O modes and expand their tests""
--- a/hw/ip/usbdev/rtl/usbdev_linkstate.sv
+++ b/hw/ip/usbdev/rtl/usbdev_linkstate.sv
@@ -110,13 +89,14 @@ module usbdev_linkstate (
   );
 
   // Simple events
-  assign ev_bus_active = !see_idle;
+  assign ev_bus_active = !rx_jjj_det_i;
+
+  assign monitor_inac = see_pwr_sense ? ((link_state_q == LinkPowered) | link_active_o) :
+                        1'b0;
 
   always_comb begin
     link_state_d = link_state_q;
     link_resume_o = 0;
-    monitor_inac = see_pwr_sense ? ((link_state_q == LinkPowered) | (link_state_q == LinkActive)) :
-                                   1'b0;
 
     // If VBUS ever goes away the link has disconnected
     if (!see_pwr_sense) begin

ParseResult:
INS HdlStmAssign@@ to objs

INS HdlStmAssign@@ to objs

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            MOV HdlOp@@TERNARY to ops
            HdlOp: TERNARY
                list: ops
                    HdlValueId: see_pwr_sense
                    HdlOp: OR
                        list: ops
                            HdlOp: EQ
                                list: ops
                                    HdlValueId: link_state_q
                                    HdlValueId: LinkPowered
                            HdlOp: EQ
                                list: ops
                                    HdlValueId: link_state_q
                                    HdlValueId: LinkActive
                    HdlValueInt: 0
            UPD HdlOp@@TERNARY to TERNARY
                UPD HdlOp@@OR to OR
                    UPD HdlOp@@EQ to EQ
                        UPD HdlValueId@@link_state_q to link_active_o
                        MOV HdlValueId@@link_state_q to ops
                        HdlValueId: link_state_q
                        DEL HdlValueId@@LinkActive from ops
                        DEL list@@ops from EQ
                    DEL HdlOp@@EQ from ops
            DEL HdlValueId@@monitor_inac from ops
            DEL list@@ops from ASSIGN
        DEL HdlOp@@ASSIGN from body

UPD HdlStmAssign@@ to 
    UPD HdlOp@@NEG_LOG to NEG_LOG
        UPD HdlValueId@@see_idle to monitor_inac
        MOV HdlValueId@@see_idle to ops
        HdlValueId: see_idle
        DEL list@@ops from NEG_LOG
    DEL HdlOp@@NEG_LOG from 
    DEL HdlValueId@@ev_bus_active from 

UPD HdlStmCase@@link_state_q to link_state_q
    INS tuple@@ to cases
    INS HdlValueId@@LinkActiveNoSOF to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmIf@@ to 
    INS HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: link_state_d
                    HdlValueId: LinkActiveNoSOF

DEL HdlStmAssign@@ from objs


CommitId: 098128c9003b1ab226ff17001ac59845a6755f24
Revert "Revert "[usbdev] Fixes for I/O modes and expand their tests""
--- a/hw/ip/usbdev/rtl/usbdev_linkstate.sv
+++ b/hw/ip/usbdev/rtl/usbdev_linkstate.sv
@@ -132,7 +112,7 @@ module usbdev_linkstate (
 
         LinkPowered: begin
           if (ev_reset) begin
-            link_state_d = LinkActive;
+            link_state_d = LinkActiveNoSOF;
           end else if (ev_bus_inactive) begin
             link_state_d = LinkPoweredSuspend;
           end

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            MOV HdlOp@@TERNARY to ops
            HdlOp: TERNARY
                list: ops
                    HdlValueId: see_pwr_sense
                    HdlOp: OR
                        list: ops
                            HdlOp: EQ
                                list: ops
                                    HdlValueId: link_state_q
                                    HdlValueId: LinkPowered
                            HdlOp: EQ
                                list: ops
                                    HdlValueId: link_state_q
                                    HdlValueId: LinkActive
                    HdlValueInt: 0
            UPD HdlOp@@TERNARY to TERNARY
                UPD HdlOp@@OR to OR
                    UPD HdlOp@@EQ to EQ
                        UPD HdlValueId@@link_state_q to link_active_o
                        MOV HdlValueId@@link_state_q to ops
                        HdlValueId: link_state_q
                        DEL HdlValueId@@LinkActive from ops
                        DEL list@@ops from EQ
                    DEL HdlOp@@EQ from ops
            DEL HdlValueId@@monitor_inac from ops
            DEL list@@ops from ASSIGN
        DEL HdlOp@@ASSIGN from body

UPD HdlStmCase@@link_state_q to link_state_q
    INS tuple@@ to cases
    INS HdlValueId@@LinkActiveNoSOF to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmIf@@ to 
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: link_state_d
                    HdlValueId: LinkActive


CommitId: 098128c9003b1ab226ff17001ac59845a6755f24
Revert "Revert "[usbdev] Fixes for I/O modes and expand their tests""
--- a/hw/ip/usbdev/rtl/usbdev_linkstate.sv
+++ b/hw/ip/usbdev/rtl/usbdev_linkstate.sv
@@ -140,22 +120,39 @@ module usbdev_linkstate (
 
         LinkPoweredSuspend: begin
           if (ev_reset) begin
-            link_state_d = LinkActive;
+            link_state_d = LinkActiveNoSOF;
           end else if (ev_bus_active) begin
             link_resume_o = 1;
             link_state_d  = LinkPowered;
           end
         end
 
+        // Active but not yet seen a frame
+        // One reason for getting stuck here is the host thinks it is a LS link
+        // which could happen if the flipped bit does not match the actual pins
+        // Annother is the SI is bad so good data is not recovered from the link
+        LinkActiveNoSOF: begin
+          if (ev_bus_inactive) begin
+            link_state_d = LinkSuspend;
+          end else if (sof_valid_i) begin
+            link_state_d = LinkActive;
+          end
+        end
+
         // Active (USB spec: Default / Address / Configured)
         LinkActive: begin
           if (ev_bus_inactive) begin
             link_state_d = LinkSuspend;
+          end else if (ev_reset) begin
+            link_state_d = LinkActiveNoSOF;
           end
         end
 
         LinkSuspend: begin
-          if (ev_reset || ev_bus_active) begin
+          if (ev_reset) begin
+            link_resume_o = 1;
+            link_state_d  = LinkActiveNoSOF;
+          end else if (ev_bus_active) begin
             link_resume_o = 1;
             link_state_d  = LinkActive;
           end

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            MOV HdlOp@@TERNARY to ops
            HdlOp: TERNARY
                list: ops
                    HdlValueId: see_pwr_sense
                    HdlOp: OR
                        list: ops
                            HdlOp: EQ
                                list: ops
                                    HdlValueId: link_state_q
                                    HdlValueId: LinkPowered
                            HdlOp: EQ
                                list: ops
                                    HdlValueId: link_state_q
                                    HdlValueId: LinkActive
                    HdlValueInt: 0
            UPD HdlOp@@TERNARY to TERNARY
                UPD HdlOp@@OR to OR
                    UPD HdlOp@@EQ to EQ
                        UPD HdlValueId@@link_state_q to link_active_o
                        MOV HdlValueId@@link_state_q to ops
                        HdlValueId: link_state_q
                        DEL HdlValueId@@LinkActive from ops
                        DEL list@@ops from EQ
                    DEL HdlOp@@EQ from ops
            DEL HdlValueId@@monitor_inac from ops
            DEL list@@ops from ASSIGN
        DEL HdlOp@@ASSIGN from body

UPD HdlStmCase@@link_state_q to link_state_q
    INS tuple@@ to cases
    INS HdlValueId@@LinkActiveNoSOF to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

INS HdlStmIf@@ to body

UPD HdlStmIf@@ to 
    INS HdlValueId@@ev_bus_inactive to 
    INS HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: link_state_d
                    HdlValueId: LinkSuspend
    INS list@@elifs to 
    INS tuple@@ to elifs
    INS HdlValueId@@sof_valid_i to 

UPD HdlStmIf@@ to 
    INS HdlValueId@@ev_reset to 
    INS HdlStmBlock@@SEQ to 
    INS list@@elifs to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: link_resume_o
                HdlValueInt: 1
    INS tuple@@ to elifs
    INS HdlValueId@@ev_bus_active to 

UPD HdlStmIf@@ to 
    INS tuple@@ to elifs
    tuple
        HdlValueId: ev_reset
        HdlStmBlock: SEQ
            list: body
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: link_state_d
                        HdlValueId: LinkActiveNoSOF

UPD HdlStmIf@@ to 
    UPD HdlOp@@OR_LOG to ASSIGN
    MOV HdlOp@@OR_LOG to 
    HdlOp: OR_LOG
        list: ops
            HdlValueId: ev_reset
            HdlValueId: ev_bus_active
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: link_resume_o
                    HdlValueInt: 1
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: link_state_d
                    HdlValueId: LinkActive
    UPD HdlOp@@OR_LOG to OR_LOG
        UPD HdlValueId@@ev_reset to link_state_d
        UPD HdlValueId@@ev_bus_active to LinkActiveNoSOF
    DEL list@@elifs from 

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@LinkActive to LinkActiveNoSOF


CommitId: 098128c9003b1ab226ff17001ac59845a6755f24
Revert "Revert "[usbdev] Fixes for I/O modes and expand their tests""
--- a/hw/ip/usbdev/rtl/usbdev_linkstate.sv
+++ b/hw/ip/usbdev/rtl/usbdev_linkstate.sv
@@ -191,7 +188,7 @@ module usbdev_linkstate (
     unique case (link_rst_state_q)
       // No reset signal detected
       NoRst: begin
-        if (see_se0) begin
+        if (rx_se0_det_i) begin
           link_rst_state_d = RstCnt;
           link_rst_timer_d = 0;
         end

ParseResult:
UPD HdlStmIf@@ to 
    UPD HdlValueId@@see_se0 to rx_se0_det_i


CommitId: 098128c9003b1ab226ff17001ac59845a6755f24
Revert "Revert "[usbdev] Fixes for I/O modes and expand their tests""
--- a/hw/ip/usbdev/rtl/usbdev_linkstate.sv
+++ b/hw/ip/usbdev/rtl/usbdev_linkstate.sv
@@ -199,7 +196,7 @@ module usbdev_linkstate (
 
       // Reset signal detected -> counting
       RstCnt: begin
-        if (!see_se0) begin
+        if (!rx_se0_det_i) begin
           link_rst_state_d = NoRst;
         end else begin
           if (us_tick_i) begin

ParseResult:
UPD HdlStmIf@@ to 
    UPD HdlOp@@NEG_LOG to NEG_LOG
        UPD HdlValueId@@see_se0 to rx_se0_det_i


CommitId: 098128c9003b1ab226ff17001ac59845a6755f24
Revert "Revert "[usbdev] Fixes for I/O modes and expand their tests""
--- a/hw/ip/usbdev/rtl/usbdev_linkstate.sv
+++ b/hw/ip/usbdev/rtl/usbdev_linkstate.sv
@@ -214,7 +211,7 @@ module usbdev_linkstate (
 
       // Detected reset -> wait for falling edge
       RstPend: begin
-        if (!see_se0) begin
+        if (!rx_se0_det_i) begin
           link_rst_state_d = NoRst;
           ev_reset = 1'b1;
         end

ParseResult:
UPD HdlStmIf@@ to 
    UPD HdlOp@@NEG_LOG to NEG_LOG
        UPD HdlValueId@@see_se0 to rx_se0_det_i


CommitId: 098128c9003b1ab226ff17001ac59845a6755f24
Revert "Revert "[usbdev] Fixes for I/O modes and expand their tests""
--- a/hw/ip/usbdev/rtl/usbdev_linkstate.sv
+++ b/hw/ip/usbdev/rtl/usbdev_linkstate.sv
@@ -251,14 +248,14 @@ module usbdev_linkstate (
       // Active or disabled
       Active: begin
         link_inac_timer_d = 0;
-        if (see_idle && monitor_inac) begin
+        if (!ev_bus_active && monitor_inac) begin
           link_inac_state_d = InactCnt;
         end
       end
 
       // Got an inactivity signal -> count duration
       InactCnt: begin
-        if (!see_idle || !monitor_inac) begin
+        if (ev_bus_active || !monitor_inac) begin
           link_inac_state_d  = Active;
         end else if (us_tick_i) begin
           if (link_inac_timer_q == SUSPEND_TIMEOUT) begin

ParseResult:
UPD HdlStmIf@@ to 
    UPD HdlOp@@AND_LOG to AND_LOG
        INS HdlOp@@NEG_LOG to ops
        UPD HdlOp@@NEG_LOG to NEG_LOG
            INS list@@ops to NEG_LOG

UPD HdlStmIf@@ to 
    UPD HdlOp@@OR_LOG to OR_LOG
        UPD HdlOp@@NEG_LOG to NEG_LOG
            UPD HdlValueId@@see_idle to ev_bus_active
            MOV HdlValueId@@see_idle to ops
            HdlValueId: see_idle
            DEL list@@ops from NEG_LOG
        DEL HdlOp@@NEG_LOG from ops

UPD HdlStmIf@@ to 
    UPD HdlOp@@AND_LOG to AND_LOG
        UPD HdlValueId@@see_idle to ev_bus_active
        MOV HdlValueId@@see_idle to ops
        HdlValueId: see_idle


CommitId: 098128c9003b1ab226ff17001ac59845a6755f24
Revert "Revert "[usbdev] Fixes for I/O modes and expand their tests""
--- a/hw/ip/usbdev/rtl/usbdev_linkstate.sv
+++ b/hw/ip/usbdev/rtl/usbdev_linkstate.sv
@@ -272,7 +269,7 @@ module usbdev_linkstate (
 
       // Counter expired & event sent, wait here
       InactPend: begin
-        if (!see_idle || !monitor_inac) begin
+        if (ev_bus_active || !monitor_inac) begin
           link_inac_state_d  = Active;
         end
       end
ParseResult:
UPD HdlStmIf@@ to 
    UPD HdlOp@@OR_LOG to OR_LOG
        UPD HdlOp@@NEG_LOG to NEG_LOG
            UPD HdlValueId@@see_idle to ev_bus_active
            MOV HdlValueId@@see_idle to ops
            HdlValueId: see_idle
            DEL list@@ops from NEG_LOG
        DEL HdlOp@@NEG_LOG from ops


CommitId: 2af73a7463ea51ad4e18f954d6b6135c88a5adaf
[top] Fixes for optimized modules
--- a/hw/top_earlgrey/ip/ast/rtl/aon_osc.sv
+++ b/hw/top_earlgrey/ip/ast/rtl/aon_osc.sv
@@ -53,7 +53,6 @@ always begin
   #(AonClkPeriod/2) clk = ~clk && en_osc;
 end
 
-assign aon_clk_o = clk;
 `else  // of SYNTHESIS
 localparam prim_pkg::impl_e Impl = `PRIM_DEFAULT_IMPL;
 

ParseResult:
UPD HdlStmAssign@@ to 
    MOV HdlValueId@@clk to 
    HdlValueId: clk
    MOV HdlValueId@@aon_clk_o to 
    HdlValueId: aon_clk_o

DEL HdlStmAssign@@ from objs


CommitId: 33e387ff92df07f8a334ab97a02becf08505a130
[csrng/rtl] Split cmd_sts into two registers
--- a/hw/ip/csrng/rtl/csrng_cmd_stage.sv
+++ b/hw/ip/csrng/rtl/csrng_cmd_stage.sv
@@ -6,9 +6,9 @@
 //
 
 module csrng_cmd_stage import csrng_pkg::*; #(
-  parameter int unsigned CmdFifoWidth = 32,
-  parameter int unsigned CmdFifoDepth = 16,
-  parameter int unsigned StateId = 4
+  parameter int CmdFifoWidth = 32,
+  parameter int CmdFifoDepth = 16,
+  parameter int StateId = 4
 ) (
   input logic                        clk_i,
   input logic                        rst_ni,

ParseResult:
UPD HdlIdDef@@CmdFifoWidth to CmdFifoWidth
    UPD HdlOp@@PARAMETRIZATION to PARAMETRIZATION
        MOV HdlValueId@@int to ops
        HdlValueId: int
        DEL HdlOp@@MAP_ASSOCIATION from ops
        HdlOp: MAP_ASSOCIATION
            list: ops
                HdlValueId: signed
        DEL list@@ops from PARAMETRIZATION
    DEL HdlOp@@PARAMETRIZATION from CmdFifoWidth

UPD HdlIdDef@@CmdFifoDepth to CmdFifoDepth
    UPD HdlOp@@PARAMETRIZATION to PARAMETRIZATION
        MOV HdlValueId@@int to ops
        HdlValueId: int
        DEL HdlOp@@MAP_ASSOCIATION from ops
        HdlOp: MAP_ASSOCIATION
            list: ops
                HdlValueId: signed
        DEL list@@ops from PARAMETRIZATION
    DEL HdlOp@@PARAMETRIZATION from CmdFifoDepth

UPD HdlIdDef@@StateId to StateId
    UPD HdlOp@@PARAMETRIZATION to PARAMETRIZATION
        MOV HdlValueId@@int to ops
        HdlValueId: int
        DEL HdlOp@@MAP_ASSOCIATION from ops
        HdlOp: MAP_ASSOCIATION
            list: ops
                HdlValueId: signed
        DEL list@@ops from PARAMETRIZATION
    DEL HdlOp@@PARAMETRIZATION from StateId


CommitId: 33e387ff92df07f8a334ab97a02becf08505a130
[csrng/rtl] Split cmd_sts into two registers
--- a/hw/ip/csrng/rtl/csrng_cmd_stage.sv
+++ b/hw/ip/csrng/rtl/csrng_cmd_stage.sv
@@ -45,8 +45,8 @@ module csrng_cmd_stage import csrng_pkg::*; #(
   output logic [2:0]                 cmd_stage_sfifo_genbits_err_o
 );
 
-  localparam int unsigned GenBitsFifoWidth = 1+128;
-  localparam int unsigned GenBitsFifoDepth = 1;
+  localparam int GenBitsFifoWidth = 1+128;
+  localparam int GenBitsFifoDepth = 1;
 
   // signals
   // command fifo

ParseResult:
UPD HdlIdDef@@GenBitsFifoWidth to GenBitsFifoWidth
    UPD HdlOp@@PARAMETRIZATION to PARAMETRIZATION
        MOV HdlValueId@@int to ops
        HdlValueId: int
        DEL HdlOp@@MAP_ASSOCIATION from ops
        HdlOp: MAP_ASSOCIATION
            list: ops
                HdlValueId: signed
        DEL list@@ops from PARAMETRIZATION
    DEL HdlOp@@PARAMETRIZATION from GenBitsFifoWidth

UPD HdlIdDef@@GenBitsFifoDepth to GenBitsFifoDepth
    UPD HdlOp@@PARAMETRIZATION to PARAMETRIZATION
        MOV HdlValueId@@int to ops
        HdlValueId: int
        DEL HdlOp@@MAP_ASSOCIATION from ops
        HdlOp: MAP_ASSOCIATION
            list: ops
                HdlValueId: signed
        DEL list@@ops from PARAMETRIZATION
    DEL HdlOp@@PARAMETRIZATION from GenBitsFifoDepth


CommitId: 33e387ff92df07f8a334ab97a02becf08505a130
[csrng/rtl] Split cmd_sts into two registers
--- a/hw/ip/csrng/rtl/csrng_cmd_stage.sv
+++ b/hw/ip/csrng/rtl/csrng_cmd_stage.sv
@@ -196,9 +196,9 @@ module csrng_cmd_stage import csrng_pkg::*; #(
     GenReq    = 6'b111000  // process gen requests
   } state_e;
 
-  state_e state_d;
+  state_e state_d, state_q;
 
-  logic [StateWidth-1:0] state_q;
+  logic [StateWidth-1:0] state_raw_q;
 
   // This primitive is used to place a size-only constraint on the
   // flops in order to prevent FSM state encoding optimizations.

ParseResult:
INS HdlIdDef@@state_q to objs
HdlIdDef: state_q
    HdlDirection: INTERNAL

UPD HdlIdDef@@state_q to state_raw_q


CommitId: 33e387ff92df07f8a334ab97a02becf08505a130
[csrng/rtl] Split cmd_sts into two registers
--- a/hw/ip/csrng/rtl/csrng_cmd_stage.sv
+++ b/hw/ip/csrng/rtl/csrng_cmd_stage.sv
@@ -209,11 +209,13 @@ module csrng_cmd_stage import csrng_pkg::*; #(
     .clk_i,
     .rst_ni,
     .d_i ( state_d ),
-    .q_o ( state_q )
+    .q_o ( state_raw_q )
   );
 
+  assign state_q = state_e'(state_raw_q);
+
   always_comb begin
-    state_d = state_e'(state_q);
+    state_d = state_q;
     cmd_fifo_pop = 1'b0;
     cmd_len_dec = 1'b0;
     cmd_gen_cnt_dec= 1'b0;
ParseResult:
INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: CALL
        list: ops
            HdlValueId: state_e
            HdlValueId: state_raw_q
    HdlValueId: state_q

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@CALL to CALL
                MOV HdlValueId@@state_q to ops
                HdlValueId: state_q
                DEL HdlValueId@@state_e from ops
                DEL list@@ops from CALL
            DEL HdlOp@@CALL from ops


CommitId: d29e918f6bf1d8a395e9357f2cdae70e68f41a22
[i2c, rtl] Various FSM fixes and improvements
--- a/hw/ip/i2c/rtl/i2c_core.sv
+++ b/hw/ip/i2c/rtl/i2c_core.sv
@@ -204,12 +204,12 @@ module  i2c_core (
   assign fmt_fifo_wdata[11]  = reg2hw.fdata.rcont.q;
   assign fmt_fifo_wdata[12]  = reg2hw.fdata.nakok.q;
 
-  assign fmt_byte               = fmt_fifo_rdata[7:0];
-  assign fmt_flag_start_before  = fmt_fifo_rdata[8];
-  assign fmt_flag_stop_after    = fmt_fifo_rdata[9];
-  assign fmt_flag_read_bytes    = fmt_fifo_rdata[10];
-  assign fmt_flag_read_continue = fmt_fifo_rdata[11];
-  assign fmt_flag_nak_ok        = fmt_fifo_rdata[12];
+  assign fmt_byte               = fmt_fifo_rvalid ? fmt_fifo_rdata[7:0] : '0;
+  assign fmt_flag_start_before  = fmt_fifo_rvalid ? fmt_fifo_rdata[8] : '0;
+  assign fmt_flag_stop_after    = fmt_fifo_rvalid ? fmt_fifo_rdata[9] : '0;
+  assign fmt_flag_read_bytes    = fmt_fifo_rvalid ? fmt_fifo_rdata[10] : '0;
+  assign fmt_flag_read_continue = fmt_fifo_rvalid ? fmt_fifo_rdata[11] : '0;
+  assign fmt_flag_nak_ok        = fmt_fifo_rvalid ? fmt_fifo_rdata[12] : '0;
 
   // Unused parts of exposed bits
   assign unused_fifo_ctrl_rxilvl_qe  = reg2hw.fifo_ctrl.rxilvl.qe;
ParseResult:
UPD HdlStmAssign@@ to 
    INS HdlOp@@TERNARY to 
    UPD HdlOp@@TERNARY to TERNARY
        INS list@@ops to TERNARY
        INS HdlValueId@@fmt_fifo_rvalid to ops
        INS HdlValueInt@@0 to ops

UPD HdlStmAssign@@ to 
    INS HdlOp@@TERNARY to 
    UPD HdlOp@@TERNARY to TERNARY
        INS list@@ops to TERNARY
        INS HdlValueId@@fmt_fifo_rvalid to ops
        INS HdlValueInt@@0 to ops

UPD HdlStmAssign@@ to 
    INS HdlOp@@TERNARY to 
    UPD HdlOp@@TERNARY to TERNARY
        INS list@@ops to TERNARY
        INS HdlValueId@@fmt_fifo_rvalid to ops
        INS HdlValueInt@@0 to ops

UPD HdlStmAssign@@ to 
    INS HdlOp@@TERNARY to 
    UPD HdlOp@@TERNARY to TERNARY
        INS list@@ops to TERNARY
        INS HdlValueId@@fmt_fifo_rvalid to ops
        INS HdlValueInt@@0 to ops

UPD HdlStmAssign@@ to 
    INS HdlOp@@TERNARY to 
    UPD HdlOp@@TERNARY to TERNARY
        INS list@@ops to TERNARY
        INS HdlValueId@@fmt_fifo_rvalid to ops
        INS HdlValueInt@@0 to ops

UPD HdlStmAssign@@ to 
    INS HdlOp@@TERNARY to 
    UPD HdlOp@@TERNARY to TERNARY
        INS list@@ops to TERNARY
        INS HdlValueId@@fmt_fifo_rvalid to ops
        INS HdlValueInt@@0 to ops

UPD HdlStmAssign@@ to 
    MOV HdlOp@@INDEX to 
    HdlOp: INDEX
        list: ops
            HdlValueId: fmt_fifo_rdata
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 7
                    HdlValueInt: 0

UPD HdlStmAssign@@ to 
    MOV HdlOp@@INDEX to 
    HdlOp: INDEX
        list: ops
            HdlValueId: fmt_fifo_rdata
            HdlValueInt: 8

UPD HdlStmAssign@@ to 
    MOV HdlOp@@INDEX to 
    HdlOp: INDEX
        list: ops
            HdlValueId: fmt_fifo_rdata
            HdlValueInt: 9

UPD HdlStmAssign@@ to 
    MOV HdlOp@@INDEX to 
    HdlOp: INDEX
        list: ops
            HdlValueId: fmt_fifo_rdata
            HdlValueInt: 10

UPD HdlStmAssign@@ to 
    MOV HdlOp@@INDEX to 
    HdlOp: INDEX
        list: ops
            HdlValueId: fmt_fifo_rdata
            HdlValueInt: 11

UPD HdlStmAssign@@ to 
    MOV HdlOp@@INDEX to 
    HdlOp: INDEX
        list: ops
            HdlValueId: fmt_fifo_rdata
            HdlValueInt: 12


CommitId: 4ba02d0ab82e8b7e95c5002daafe2ac1e88122dc
Minor fix to the ibex wrapper
--- a/hw/ip/rv_core_ibex/rtl/rv_core_ibex.sv
+++ b/hw/ip/rv_core_ibex/rtl/rv_core_ibex.sv
@@ -56,6 +56,7 @@ module rv_core_ibex #(
   // if pipeline is 0, passthrough the fifo completely
   localparam int FifoPass = PipeLine ? 1'b0 : 1'b1;
   localparam int FifoDepth = PipeLine ? 4'h2 : 4'h0;
+  localparam int WordSize = $clog2(TL_DW / 8);
 
   // Inst interface (internal)
   logic        instr_req_o;

ParseResult:
INS HdlIdDef@@WordSize to objs
HdlIdDef: WordSize
    HdlValueId: int
    HdlOp: CALL
        list: ops
            HdlValueId: $clog2
            HdlOp: DIV
                list: ops
                    HdlValueId: TL_DW
                    HdlValueInt: 8
    HdlDirection: INTERNAL


CommitId: 4ba02d0ab82e8b7e95c5002daafe2ac1e88122dc
Minor fix to the ibex wrapper
--- a/hw/ip/rv_core_ibex/rtl/rv_core_ibex.sv
+++ b/hw/ip/rv_core_ibex/rtl/rv_core_ibex.sv
@@ -190,14 +189,15 @@ module rv_core_ibex #(
   end
 
   // Convert core instruction interface to TL-UL
+  // The outgoing address is always word aligned
   assign tl_i_ibex2fifo = '{
     a_valid:   instr_req_o,
     a_opcode:  tlul_pkg::Get,
     a_param:   3'h0,
-    a_size:    2'h2,
+    a_size:    2'(WordSize),
     a_mask:    {TL_DBW{1'b1}},
     a_source:  TL_AIW'(tl_i_source),
-    a_address: {instr_addr_o[31:TlWordBit], {TlWordBit{1'b0}}},
+    a_address: {instr_addr_o[31:WordSize], {WordSize{1'b0}}},
     a_data:    {TL_DW{1'b0}},
     a_user:    {TL_AUW{1'b0}},
 

ParseResult:
UPD HdlStmAssign@@ to 
    UPD HdlOp@@MAP_ASSOCIATION to MAP_ASSOCIATION
        INS HdlOp@@CALL to ops
        UPD HdlOp@@CALL to CALL
            INS list@@ops to CALL
            INS HdlValueInt@@2 to ops

DEL HdlStmProcess@@ from objs
HdlStmProcess
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: data_be_countones
                    HdlValueInt: 0
            HdlStmFor
                HdlStmBlock: SEQ
                    list: body
                        HdlIdDef: i
                            HdlValueId: int
                            HdlValueInt: 0
                            HdlDirection: INTERNAL
                HdlOp: LT
                    list: ops
                        HdlValueId: i
                        HdlValueInt: 4
                HdlStmBlock: SEQ
                    list: body
                        HdlOp: INCR_POST
                            list: ops
                                HdlValueId: i
                HdlStmBlock: SEQ
                    list: body
                        HdlOp: PLUS_ASSIGN
                            list: ops
                                HdlValueId: data_be_countones
                                HdlOp: INDEX
                                    list: ops
                                        HdlValueId: data_be_o
                                        HdlValueId: i
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: data_size
                    HdlValueInt: 0
            HdlStmFor
                HdlStmBlock: SEQ
                    list: body
                        HdlIdDef: i
                            HdlValueId: int
                            HdlValueInt: 0
                            HdlDirection: INTERNAL
                HdlOp: LT
                    list: ops
                        HdlValueId: i
                        HdlValueInt: 3
                HdlStmBlock: SEQ
                    list: body
                        HdlOp: INCR_POST
                            list: ops
                                HdlValueId: i
                HdlStmBlock: SEQ
                    list: body
                        HdlStmIf
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: data_be_countones
                                    HdlValueId: i
                            HdlOp: ASSIGN
                                list: ops
                                    HdlValueId: data_size
                                    HdlOp: CALL
                                        list: ops
                                            HdlValueInt: 2
                                            HdlValueId: i
                            list: elifs
    HdlStmProcessTriggerConstrain: COMB


CommitId: a3a2d8632c4456018f0281819d9e0ceb2ccaa862
[prim] slicer lint fix
--- a/hw/ip/prim/rtl/prim_slicer.sv
+++ b/hw/ip/prim/rtl/prim_slicer.sv
@@ -18,13 +18,11 @@ module prim_slicer #(
   output logic [OutW-1:0]   data_o
 );
 
-  logic [(2**IndexW)*OutW-1:0] unrolled_data;
+  localparam int UnrollW = OutW*(2**IndexW);
 
-  if (InW < OutW*(2**IndexW)) begin : gen_biggerwidth
-    assign unrolled_data = {'0, data_i};
-  end else if (InW == OutW*(2**IndexW)) begin : gen_samewidth
-    assign unrolled_data = data_i;
-  end
+  logic [UnrollW-1:0] unrolled_data;
+
+  assign unrolled_data = UnrollW'(data_i);
 
   assign data_o = unrolled_data[sel_i*OutW+:OutW];
 
ParseResult:
UPD HdlStmAssign@@ to 
    UPD HdlOp@@CALL to CALL
        INS HdlValueId@@UnrollW to ops


CommitId: 19044edfb0b9485031557705595840bea41fb33d
[prim_secded] Use _i/_o suffix for port names
--- a/hw/ip/prim/rtl/prim_secded_72_64_enc.sv
+++ b/hw/ip/prim/rtl/prim_secded_72_64_enc.sv
@@ -5,20 +5,20 @@
 // SECDED encoder generated by util/design/secded_gen.py
 
 module prim_secded_72_64_enc (
-  input        [63:0] in,
-  output logic [71:0] out
+  input        [63:0] data_i,
+  output logic [71:0] data_o
 );
 
   always_comb begin : p_encode
-    out = 72'(in);
-    out[64] = ^(out & 72'h00B9000000001FFFFF);
-    out[65] = ^(out & 72'h005E00000FFFE0003F);
-    out[66] = ^(out & 72'h0067003FF003E007C1);
-    out[67] = ^(out & 72'h00CD0FC0F03C207842);
-    out[68] = ^(out & 72'h00B671C711C4438884);
-    out[69] = ^(out & 72'h00B5B65926488C9108);
-    out[70] = ^(out & 72'h00CBDAAA4A91152210);
-    out[71] = ^(out & 72'h007AED348D221A4420);
+    data_o = 72'(data_i);
+    data_o[64] = ^(data_o & 72'h00B9000000001FFFFF);
+    data_o[65] = ^(data_o & 72'h005E00000FFFE0003F);
+    data_o[66] = ^(data_o & 72'h0067003FF003E007C1);
+    data_o[67] = ^(data_o & 72'h00CD0FC0F03C207842);
+    data_o[68] = ^(data_o & 72'h00B671C711C4438884);
+    data_o[69] = ^(data_o & 72'h00B5B65926488C9108);
+    data_o[70] = ^(data_o & 72'h00CBDAAA4A91152210);
+    data_o[71] = ^(data_o & 72'h007AED348D221A4420);
   end
 
 endmodule : prim_secded_72_64_enc
ParseResult:
UPD HdlIdDef@@in to data_i

UPD HdlIdDef@@out to data_o

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@out to data_o
            UPD HdlOp@@CALL to CALL
                UPD HdlValueId@@in to data_i
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@INDEX to INDEX
                UPD HdlValueId@@out to data_o
            UPD HdlOp@@XOR_UNARY to XOR_UNARY
                UPD HdlOp@@AND to AND
                    UPD HdlValueId@@out to data_o
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@INDEX to INDEX
                UPD HdlValueId@@out to data_o
            UPD HdlOp@@XOR_UNARY to XOR_UNARY
                UPD HdlOp@@AND to AND
                    UPD HdlValueId@@out to data_o
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@INDEX to INDEX
                UPD HdlValueId@@out to data_o
            UPD HdlOp@@XOR_UNARY to XOR_UNARY
                UPD HdlOp@@AND to AND
                    UPD HdlValueId@@out to data_o
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@INDEX to INDEX
                UPD HdlValueId@@out to data_o
            UPD HdlOp@@XOR_UNARY to XOR_UNARY
                UPD HdlOp@@AND to AND
                    UPD HdlValueId@@out to data_o
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@INDEX to INDEX
                UPD HdlValueId@@out to data_o
            UPD HdlOp@@XOR_UNARY to XOR_UNARY
                UPD HdlOp@@AND to AND
                    UPD HdlValueId@@out to data_o
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@INDEX to INDEX
                UPD HdlValueId@@out to data_o
            UPD HdlOp@@XOR_UNARY to XOR_UNARY
                UPD HdlOp@@AND to AND
                    UPD HdlValueId@@out to data_o
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@INDEX to INDEX
                UPD HdlValueId@@out to data_o
            UPD HdlOp@@XOR_UNARY to XOR_UNARY
                UPD HdlOp@@AND to AND
                    UPD HdlValueId@@out to data_o
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@INDEX to INDEX
                UPD HdlValueId@@out to data_o
            UPD HdlOp@@XOR_UNARY to XOR_UNARY
                UPD HdlOp@@AND to AND
                    UPD HdlValueId@@out to data_o


CommitId: ebe4e36b2ff115d5ec3223cc73499718c23ccd41
[usbdev] Fixes for pin config sims to pass
--- a/hw/dv/dpi/usbdpi/usbdpi.sv
+++ b/hw/dv/dpi/usbdpi/usbdpi.sv
@@ -64,10 +64,15 @@ module usbdpi #(
   logic       unused_clk = clk_i;
   logic       unused_rst = rst_ni;
   logic       dp_int, dn_int, d_int;
+  logic       flip_detect, pullup_detect;
+
+  // Detect a request to flip pins by the DN resistor being applied
+  assign flip_detect = pullupdn_d2p && pullupdn_en_d2p;
+  assign pullup_detect = (pullupdp_d2p && pullupdp_en_d2p) || (pullupdn_d2p && pullupdn_en_d2p);
 
   assign d2p = {dp_d2p, dp_en_d2p, dn_d2p, dn_en_d2p, d_d2p, d_en_d2p, se0_d2p, se0_en_d2p, pullupdp_d2p & pullupdp_en_d2p, pullupdn_d2p & pullupdn_en_d2p, txmode_d2p & txmode_en_d2p};
   always_ff @(posedge clk_48MHz_i) begin
-    if ((pullupdp_d2p && pullupdp_en_d2p) || (pullupdn_d2p && pullupdn_en_d2p)) begin
+    if (pullup_detect) begin
       automatic byte p2d = usbdpi_host_to_device(ctx, d2p);
       d_int <= p2d[3];
       dp_int <= p2d[2];

ParseResult:
INS HdlIdDef@@flip_detect to objs
HdlIdDef: flip_detect
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

INS HdlIdDef@@pullup_detect to objs
HdlIdDef: pullup_detect
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: AND_LOG
        list: ops
            HdlValueId: pullupdn_d2p
            HdlValueId: pullupdn_en_d2p
    HdlValueId: flip_detect

INS HdlStmAssign@@ to objs

UPD HdlStmIf@@ to 
    MOV HdlOp@@OR_LOG to 
    HdlOp: OR_LOG
        list: ops
            HdlOp: AND_LOG
                list: ops
                    HdlValueId: pullupdp_d2p
                    HdlValueId: pullupdp_en_d2p
            HdlOp: AND_LOG
                list: ops
                    HdlValueId: pullupdn_d2p
                    HdlValueId: pullupdn_en_d2p

UPD HdlStmAssign@@ to 
    INS HdlValueId@@pullup_detect to 


CommitId: ebe4e36b2ff115d5ec3223cc73499718c23ccd41
[usbdev] Fixes for pin config sims to pass
--- a/hw/dv/dpi/usbdpi/usbdpi.sv
+++ b/hw/dv/dpi/usbdpi/usbdpi.sv
@@ -93,12 +98,20 @@ module usbdpi #(
       d_p2d = d_int;
     end
     if (dp_en_d2p) begin
-      dp_p2d = dp_d2p;
+      if (txmode_d2p) begin
+        dp_p2d = dp_d2p;
+      end else begin // decode differential and flip
+        dp_p2d = se0_d2p ? 1'b0 : flip_detect ^ d_d2p;
+      end
     end else begin
       dp_p2d = dp_int;
     end
     if (dn_en_d2p) begin
-      dn_p2d = dn_d2p;
+      if (txmode_d2p) begin
+        dn_p2d = dn_d2p;
+      end else begin // decode differential and flip
+        dn_p2d = se0_d2p ? 1'b0 : flip_detect ^ ~d_d2p;
+      end
     end else begin
       dn_p2d = dn_int;
     end
ParseResult:
UPD HdlStmIf@@ to 
    INS HdlValueId@@pullup_detect to 

INS HdlStmIf@@ to body

INS HdlStmIf@@ to body

UPD HdlStmIf@@ to 
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: dp_p2d
                    HdlValueId: dp_d2p
    MOV list@@elifs to 
    list: elifs

UPD HdlStmIf@@ to 
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: dn_p2d
                    HdlValueId: dn_d2p
    MOV list@@elifs to 
    list: elifs


CommitId: b35a340e8939d51bac1842b5edd72782286a8c04
[flash] Design updates and clean-up
--- a/hw/ip/flash_ctrl/rtl/flash_phy.sv
+++ b/hw/ip/flash_ctrl/rtl/flash_phy.sv
@@ -14,7 +14,7 @@ module flash_phy import flash_ctrl_pkg::*; (
   input clk_i,
   input rst_ni,
   input host_req_i,
-  input [AddrW-1:0] host_addr_i,
+  input [BusAddrW-1:0] host_addr_i,
   output logic host_req_rdy_o,
   output logic host_req_done_o,
   output logic [BusWidth-1:0] host_rdata_o,

ParseResult:
UPD HdlIdDef@@host_addr_i to host_addr_i
    UPD HdlOp@@PARAMETRIZATION to PARAMETRIZATION
        UPD HdlOp@@DOWNTO to DOWNTO
            UPD HdlOp@@SUB to SUB
                UPD HdlValueId@@AddrW to BusAddrW


CommitId: b35a340e8939d51bac1842b5edd72782286a8c04
[flash] Design updates and clean-up
--- a/hw/ip/flash_ctrl/rtl/flash_phy.sv
+++ b/hw/ip/flash_ctrl/rtl/flash_phy.sv
@@ -62,8 +62,8 @@ module flash_phy import flash_ctrl_pkg::*; (
   logic [BusWidth-1:0] rd_data [NumBanks];
 
   // select which bank each is operating on
-  assign host_bank_sel = host_req_i ? host_addr_i[BankAddrW +: BankW] : '0;
-  assign ctrl_bank_sel = flash_ctrl_i.addr[BankAddrW +: BankW];
+  assign host_bank_sel = host_req_i ? host_addr_i[BusAddrW-1 -: BankW] : '0;
+  assign ctrl_bank_sel = flash_ctrl_i.addr[BusAddrW-1 -: BankW];
 
   // accept transaction if bank is ready and previous response NOT pending
   assign host_req_rdy_o = host_req_rdy[host_bank_sel] & host_rsp_avail[host_bank_sel] &

ParseResult:
UPD HdlStmAssign@@ to 
    UPD HdlOp@@INDEX to INDEX
        UPD HdlOp@@PART_SELECT_POST to PART_SELECT_PRE
        UPD HdlOp@@PART_SELECT_POST to PART_SELECT_POST
            UPD HdlValueId@@BankAddrW to BusAddrW
            MOV HdlValueId@@BankAddrW to ops
            HdlValueId: BankAddrW

UPD HdlStmAssign@@ to 
    UPD HdlOp@@TERNARY to TERNARY
        UPD HdlOp@@INDEX to INDEX
            UPD HdlOp@@PART_SELECT_POST to PART_SELECT_PRE
            UPD HdlOp@@PART_SELECT_POST to PART_SELECT_POST
                UPD HdlValueId@@BankAddrW to BusAddrW
                MOV HdlValueId@@BankAddrW to ops
                HdlValueId: BankAddrW

UPD HdlStmAssign@@ to 
    UPD HdlOp@@INDEX to INDEX
        UPD HdlOp@@PART_SELECT_PRE to PART_SELECT_PRE
            INS HdlOp@@SUB to ops
            UPD HdlOp@@SUB to SUB
                INS list@@ops to SUB
                INS HdlValueInt@@1 to ops

UPD HdlStmAssign@@ to 
    UPD HdlOp@@TERNARY to TERNARY
        UPD HdlOp@@INDEX to INDEX
            UPD HdlOp@@PART_SELECT_PRE to PART_SELECT_PRE
                INS HdlOp@@SUB to ops
                UPD HdlOp@@SUB to SUB
                    INS list@@ops to SUB
                    INS HdlValueInt@@1 to ops


CommitId: 59d0872f458f27383e9de2745961517a60cf84f9
Update lowrisc_ibex to lowRISC/ibex@ae547c8
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_register_file_latch.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_register_file_latch.sv
@@ -109,11 +109,11 @@ module ibex_register_file #(
 
   // Actual write operation:
   // Generate the sequential process for the NUM_WORDS words of the memory.
-  // The process is synchronized with the clocks mem_clocks[k], k = 1, ..., NUM_WORDS-1.
-  always_latch begin : latch_wdata
-    for (int k = 1; k < NUM_WORDS; k++) begin : latch_wdata_word_iter
-      if (mem_clocks[k]) begin
-        mem[k] = wdata_a_q;
+  // The process is synchronized with the clocks mem_clocks[i], i = 1, ..., NUM_WORDS-1.
+  for (genvar i = 1; i < NUM_WORDS; i++) begin : g_rf_latches
+    always_latch begin
+      if (mem_clocks[i]) begin
+        mem[i] = wdata_a_q;
       end
     end
   end
ParseResult:
INS HdlStmFor@@ to objs

UPD HdlStmFor@@ to 
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlIdDef: k
                HdlValueId: int
                HdlValueInt: 1
                HdlDirection: INTERNAL
    MOV HdlOp@@LT to 
    HdlOp: LT
        list: ops
            HdlValueId: k
            HdlValueId: NUM_WORDS
    UPD HdlStmBlock@@SEQ to SEQ
        MOV HdlOp@@INCR_POST to body
        HdlOp: INCR_POST
            list: ops
                HdlValueId: k
        UPD HdlOp@@INCR_POST to INCR_POST
            UPD HdlValueId@@k to i
        DEL list@@body from SEQ
    UPD HdlOp@@LT to LT
        UPD HdlValueId@@k to i
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlStmIf
                HdlOp: INDEX
                    list: ops
                        HdlValueId: mem_clocks
                        HdlValueId: k
                HdlStmBlock: SEQ
                    list: body
                        HdlOp: ASSIGN
                            list: ops
                                HdlOp: INDEX
                                    list: ops
                                        HdlValueId: mem
                                        HdlValueId: k
                                HdlValueId: wdata_a_q
                list: elifs
    DEL HdlStmBlock@@SEQ from 

UPD HdlStmFor@@ to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlIdDef@@k to i

INS HdlStmProcess@@ to body

UPD HdlStmProcess@@ to 
    MOV HdlStmProcessTriggerConstrain@@LATCH to 
    HdlStmProcessTriggerConstrain: LATCH
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 

UPD HdlStmIf@@ to 
    UPD HdlOp@@INDEX to INDEX
        UPD HdlValueId@@k to i
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@INDEX to INDEX
                UPD HdlValueId@@k to i

UPD HdlIdDef@@k to k
    DEL HdlValueId@@int from k

DEL HdlStmFor@@ from body

DEL HdlStmProcess@@ from objs


CommitId: e96730f7612a3fb85637d8d91645355806752c8a
[flash_ctrl] Add ECC to program / erase datapaths
--- a/hw/ip/prim_generic/rtl/prim_generic_flash.sv
+++ b/hw/ip/prim_generic/rtl/prim_generic_flash.sv
@@ -10,6 +10,7 @@ module prim_generic_flash #(
   parameter int PagesPerBank = 256, // data pages per bank
   parameter int WordsPerPage = 256, // words per page
   parameter int DataWidth   = 32,   // bits per word
+  parameter int MetaDataWidth = 12, // this is a temporary parameter to work around ECC issues
   parameter bit SkipInit = 1,       // this is an option to reset flash to all F's at reset
 
   // Derived parameters

ParseResult:
INS HdlIdDef@@MetaDataWidth to params
HdlIdDef: MetaDataWidth
    HdlValueId: int
    HdlValueInt: 12
    HdlDirection: INTERNAL


CommitId: a17530f0a51524486c59b0c8d5295d6ded247ec2
[usbdev] USB device update from ETH repo
--- a/hw/ip/usbdev/rtl/usbdev_usbif.sv
+++ b/hw/ip/usbdev/rtl/usbdev_usbif.sv
@@ -8,32 +8,33 @@
 
 // This module runs on the 48MHz USB clock
 module usbdev_usbif  #(
-  parameter  int AVFifoWidth = 4,
-  parameter  int RXFifoWidth = 4,
-  parameter  int MaxPktSizeByte = 64,
-  parameter  int NBuf = 4,
-  parameter  int SramAw = 4,
+  parameter int NEndpoints = 12,
+  parameter int AVFifoWidth = 4,
+  parameter int RXFifoWidth = 4,
+  parameter int MaxPktSizeByte = 64,
+  parameter int NBuf = 4,
+  parameter int SramAw = 4,
   localparam int NBufWidth = $clog2(NBuf), // derived parameter
   localparam int PktW = $clog2(MaxPktSizeByte) // derived parameter
 ) (
   input                            clk_48mhz_i, // 48MHz USB clock
   input                            rst_ni,
 
-  // Pins
-  input                            usb_dp_i,
-  output logic                     usb_dp_o,
-  output logic                     usb_dp_en_o,
-  input                            usb_dn_i,
-  output logic                     usb_dn_o,
-  output logic                     usb_dn_en_o,
-  input                            usb_sense_i,
-  output logic                     usb_pullup_o,
+  // Pins (synchronous)
+  input  logic                     usb_d_i,
+  input  logic                     usb_se0_i,
+
+  output logic                     usb_d_o,
+  output logic                     usb_se0_o,
+  output logic                     usb_oe_o,
+
   output logic                     usb_pullup_en_o,
+  input                            usb_sense_i,
 
   // receive (OUT or SETUP) side
-  input [11:0]                     rx_setup_i,
-  input [11:0]                     rx_out_i,
-  input [11:0]                     rx_stall_i,
+  input [NEndpoints-1:0]           rx_setup_i,
+  input [NEndpoints-1:0]           rx_out_i,
+  input [NEndpoints-1:0]           rx_stall_i,
   input                            av_rvalid_i,
   output logic                     av_rready_o,
   input [AVFifoWidth - 1: 0]       av_rdata_i,

ParseResult:
MOV HdlIdDef@@usb_pullup_o to ports
HdlIdDef: usb_pullup_o
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: OUT

MOV HdlIdDef@@usb_dn_en_o to ports
HdlIdDef: usb_dn_en_o
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: OUT

MOV HdlIdDef@@usb_sense_i to ports
HdlIdDef: usb_sense_i
    HdlValueId: wire
    HdlDirection: IN

INS HdlIdDef@@NEndpoints to params
HdlIdDef: NEndpoints
    HdlValueId: int
    HdlValueInt: 12
    HdlDirection: INTERNAL

UPD HdlIdDef@@usb_pullup_o to usb_d_i

UPD HdlIdDef@@usb_dp_o to usb_se0_i

UPD HdlIdDef@@usb_dn_en_o to usb_d_o

UPD HdlIdDef@@usb_dp_en_o to usb_se0_o

UPD HdlIdDef@@usb_dn_o to usb_oe_o

UPD HdlIdDef@@usb_pullup_o to usb_pullup_o
    UPD HdlDirection@@OUT to IN

UPD HdlIdDef@@usb_dp_o to usb_dp_o
    UPD HdlDirection@@OUT to IN

UPD HdlIdDef@@rx_setup_i to rx_setup_i
    UPD HdlOp@@PARAMETRIZATION to PARAMETRIZATION
        UPD HdlOp@@DOWNTO to DOWNTO
            INS HdlOp@@SUB to ops
            UPD HdlOp@@SUB to SUB
                INS list@@ops to SUB
                INS HdlValueId@@NEndpoints to ops

UPD HdlIdDef@@rx_out_i to rx_out_i
    UPD HdlOp@@PARAMETRIZATION to PARAMETRIZATION
        UPD HdlOp@@DOWNTO to DOWNTO
            INS HdlOp@@SUB to ops
            UPD HdlOp@@SUB to SUB
                INS list@@ops to SUB
                INS HdlValueId@@NEndpoints to ops

UPD HdlIdDef@@rx_stall_i to rx_stall_i
    UPD HdlOp@@PARAMETRIZATION to PARAMETRIZATION
        UPD HdlOp@@DOWNTO to DOWNTO
            INS HdlOp@@SUB to ops
            UPD HdlOp@@SUB to SUB
                INS list@@ops to SUB
                INS HdlValueId@@NEndpoints to ops

UPD HdlIdDef@@rx_setup_i to rx_setup_i
    UPD HdlOp@@PARAMETRIZATION to PARAMETRIZATION
        UPD HdlOp@@DOWNTO to DOWNTO
            UPD HdlValueInt@@11 to 1
            MOV HdlValueInt@@11 to ops
            HdlValueInt: 11

UPD HdlIdDef@@rx_out_i to rx_out_i
    UPD HdlOp@@PARAMETRIZATION to PARAMETRIZATION
        UPD HdlOp@@DOWNTO to DOWNTO
            UPD HdlValueInt@@11 to 1
            MOV HdlValueInt@@11 to ops
            HdlValueInt: 11

UPD HdlIdDef@@rx_stall_i to rx_stall_i
    UPD HdlOp@@PARAMETRIZATION to PARAMETRIZATION
        UPD HdlOp@@DOWNTO to DOWNTO
            UPD HdlValueInt@@11 to 1
            MOV HdlValueInt@@11 to ops
            HdlValueInt: 11

DEL HdlIdDef@@usb_dp_i from ports
HdlIdDef: usb_dp_i
    HdlValueId: wire
    HdlDirection: IN

DEL HdlIdDef@@usb_dn_i from ports
HdlIdDef: usb_dn_i
    HdlValueId: wire
    HdlDirection: IN


CommitId: a17530f0a51524486c59b0c8d5295d6ded247ec2
[usbdev] USB device update from ETH repo
--- a/hw/ip/usbdev/rtl/usbdev_usbif.sv
+++ b/hw/ip/usbdev/rtl/usbdev_usbif.sv
@@ -43,14 +44,14 @@ module usbdev_usbif  #(
   input                            rx_wready_i,
   output logic [RXFifoWidth - 1:0] rx_wdata_o,
   output logic                     event_rx_full_o,
-  output logic                     out_clear_rdy_o,
+  output logic                     setup_received_o,
   output [3:0]                     out_endpoint_o,
 
   // transmit (IN) side
   input [NBufWidth - 1:0]          in_buf_i,
   input [PktW:0]                   in_size_i,
-  input [11:0]                     in_stall_i,
-  input [11:0]                     in_rdy_i,
+  input [NEndpoints-1:0]           in_stall_i,
+  input [NEndpoints-1:0]           in_rdy_i,
   output logic                     set_sent_o,
   output [3:0]                     in_endpoint_o,
 

ParseResult:
UPD HdlIdDef@@out_clear_rdy_o to setup_received_o

UPD HdlIdDef@@in_stall_i to in_stall_i
    UPD HdlOp@@PARAMETRIZATION to PARAMETRIZATION
        UPD HdlOp@@DOWNTO to DOWNTO
            INS HdlOp@@SUB to ops
            UPD HdlOp@@SUB to SUB
                INS list@@ops to SUB
                INS HdlValueId@@NEndpoints to ops

UPD HdlIdDef@@in_rdy_i to in_rdy_i
    UPD HdlOp@@PARAMETRIZATION to PARAMETRIZATION
        UPD HdlOp@@DOWNTO to DOWNTO
            INS HdlOp@@SUB to ops
            UPD HdlOp@@SUB to SUB
                INS list@@ops to SUB
                INS HdlValueId@@NEndpoints to ops

UPD HdlIdDef@@in_stall_i to in_stall_i
    UPD HdlOp@@PARAMETRIZATION to PARAMETRIZATION
        UPD HdlOp@@DOWNTO to DOWNTO
            UPD HdlValueInt@@11 to 1
            MOV HdlValueInt@@11 to ops
            HdlValueInt: 11

UPD HdlIdDef@@in_rdy_i to in_rdy_i
    UPD HdlOp@@PARAMETRIZATION to PARAMETRIZATION
        UPD HdlOp@@DOWNTO to DOWNTO
            UPD HdlValueInt@@11 to 1
            MOV HdlValueInt@@11 to ops
            HdlValueInt: 11


CommitId: a17530f0a51524486c59b0c8d5295d6ded247ec2
[usbdev] USB device update from ETH repo
--- a/hw/ip/usbdev/rtl/usbdev_usbif.sv
+++ b/hw/ip/usbdev/rtl/usbdev_usbif.sv
@@ -65,27 +66,28 @@ module usbdev_usbif  #(
   input                            enable_i,
   input [6:0]                      devaddr_i,
   output                           clr_devaddr_o,
+  input  logic [NEndpoints-1:0]    ep_iso_i,
+  input  logic                     cfg_eop_single_bit_i, // 1: detect a single SE0 bit as EOP
+  input  logic                     tx_osc_test_mode_i, // Oscillator test mode (constantly output JK)
+  input  logic [NEndpoints-1:0]    data_toggle_clear_i, // Clear the data toggles for an EP
 
   // status
+  output logic                     frame_start_o,
   output logic [10:0]              frame_o,
-  output logic [1:0]               link_state_o,
+  output logic [2:0]               link_state_o,
   output logic                     link_disconnect_o,
   output logic                     link_reset_o,
   output logic                     link_suspend_o,
   output logic                     link_resume_o,
-  output logic                     host_lost_o
+  output logic                     link_in_err_o,
+  output logic                     host_lost_o,
+  output logic                     rx_crc_err_o,
+  output logic                     rx_pid_err_o,
+  output logic                     rx_bitstuff_err_o
 );
 
-  logic                              usb_tx_en;
-
-  // Enable -- This is working but should these be swapped so there is no active pull down?
-  assign usb_pullup_o = enable_i;
-  assign usb_pullup_en_o = 1'b1;
-
-  assign usb_dp_en_o = usb_tx_en;
-  assign usb_dn_en_o = usb_tx_en;
+  assign usb_pullup_en_o = enable_i;
 
-  assign clr_devaddr_o = ~enable_i | link_reset_o;
 
   // OUT or SETUP direction
   logic [PktW:0]                     out_max_used_next, out_max_used;

ParseResult:
MOV HdlIdDef@@usb_tx_en to objs
HdlIdDef: usb_tx_en
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

MOV HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: OR
        list: ops
            HdlOp: NEG
                list: ops
                    HdlValueId: enable_i
            HdlValueId: link_reset_o
    HdlValueId: clr_devaddr_o

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlValueId: enable_i
    HdlValueId: usb_pullup_en_o

UPD HdlIdDef@@usb_tx_en to link_reset

INS HdlIdDef@@ep_iso_i to ports
HdlIdDef: ep_iso_i
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlOp: SUB
                        list: ops
                            HdlValueId: NEndpoints
                            HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: IN

INS HdlIdDef@@cfg_eop_single_bit_i to ports
HdlIdDef: cfg_eop_single_bit_i
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: IN

INS HdlIdDef@@tx_osc_test_mode_i to ports
HdlIdDef: tx_osc_test_mode_i
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: IN

INS HdlIdDef@@data_toggle_clear_i to ports
HdlIdDef: data_toggle_clear_i
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlOp: SUB
                        list: ops
                            HdlValueId: NEndpoints
                            HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: IN

INS HdlIdDef@@frame_start_o to ports
HdlIdDef: frame_start_o
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: OUT

INS HdlIdDef@@link_in_err_o to ports
HdlIdDef: link_in_err_o
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: OUT

INS HdlIdDef@@rx_crc_err_o to ports
HdlIdDef: rx_crc_err_o
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: OUT

INS HdlIdDef@@rx_pid_err_o to ports
HdlIdDef: rx_pid_err_o
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: OUT

INS HdlIdDef@@rx_bitstuff_err_o to ports
HdlIdDef: rx_bitstuff_err_o
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: OUT

UPD HdlStmAssign@@ to 
    UPD HdlOp@@OR to OR
        UPD HdlValueId@@link_reset_o to link_reset

UPD HdlIdDef@@link_state_o to link_state_o
    UPD HdlOp@@PARAMETRIZATION to PARAMETRIZATION
        UPD HdlOp@@DOWNTO to DOWNTO
            UPD HdlValueInt@@1 to 2

DEL HdlStmAssign@@ from objs
HdlStmAssign
    HdlValueId: enable_i
    HdlValueId: usb_pullup_o

DEL HdlStmAssign@@ from objs
HdlStmAssign
    HdlValueInt: 1
    HdlValueId: usb_pullup_en_o

DEL HdlStmAssign@@ from objs
HdlStmAssign
    HdlValueId: usb_tx_en
    HdlValueId: usb_dp_en_o

DEL HdlStmAssign@@ from objs
HdlStmAssign
    HdlValueId: usb_tx_en
    HdlValueId: usb_dn_en_o


CommitId: a17530f0a51524486c59b0c8d5295d6ded247ec2
[usbdev] USB device update from ETH repo
--- a/hw/ip/usbdev/rtl/usbdev_usbif.sv
+++ b/hw/ip/usbdev/rtl/usbdev_usbif.sv
@@ -95,13 +97,18 @@ module usbdev_usbif  #(
   logic [3:0]                        out_ep_current;
   logic                              out_ep_data_put, out_ep_acked, out_ep_rollback;
   logic                              current_setup, all_out_blocked, out_ep_newpkt;
-  logic [11:0]                       out_ep_setup, out_ep_full, out_ep_stall;
-  logic [11:0]                       setup_blocked, out_blocked;
+  logic [NEndpoints-1:0]             out_ep_setup, out_ep_full, out_ep_stall;
+  logic [NEndpoints-1:0]             setup_blocked, out_blocked;
   logic [31:0]                       wdata;
   logic                              std_write, mem_read;
   logic [SramAw-1:0]                 mem_waddr, mem_raddr;
+  logic                              link_reset;
+  logic                              sof_valid;
 
   assign out_endpoint_o = out_ep_current;
+  assign link_reset_o   = link_reset;
+  assign clr_devaddr_o  = ~enable_i | link_reset;
+  assign frame_start_o  = sof_valid;
 
   always_comb begin
     if (out_ep_acked || out_ep_rollback) begin

ParseResult:
INS HdlIdDef@@out_ep_setup to objs
HdlIdDef: out_ep_setup
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlOp: SUB
                        list: ops
                            HdlValueId: NEndpoints
                            HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: INTERNAL

INS HdlIdDef@@out_ep_full to objs
HdlIdDef: out_ep_full
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlOp: SUB
                        list: ops
                            HdlValueId: NEndpoints
                            HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: INTERNAL

INS HdlIdDef@@out_ep_stall to objs
HdlIdDef: out_ep_stall
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlOp: SUB
                        list: ops
                            HdlValueId: NEndpoints
                            HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: INTERNAL

INS HdlIdDef@@setup_blocked to objs
HdlIdDef: setup_blocked
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlOp: SUB
                        list: ops
                            HdlValueId: NEndpoints
                            HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: INTERNAL

INS HdlIdDef@@out_blocked to objs
HdlIdDef: out_blocked
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlOp: SUB
                        list: ops
                            HdlValueId: NEndpoints
                            HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: INTERNAL

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlValueId: link_reset
    HdlValueId: link_reset_o

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlValueId: sof_valid
    HdlValueId: frame_start_o

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@TERNARY to TERNARY
                MOV HdlValueInt@@0 to ops
                HdlValueInt: 0

DEL HdlIdDef@@out_ep_setup from objs
HdlIdDef: out_ep_setup
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 11
                    HdlValueInt: 0
    HdlDirection: INTERNAL

DEL HdlIdDef@@out_ep_full from objs
HdlIdDef: out_ep_full
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 11
                    HdlValueInt: 0
    HdlDirection: INTERNAL

DEL HdlIdDef@@out_ep_stall from objs
HdlIdDef: out_ep_stall
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 11
                    HdlValueInt: 0
    HdlDirection: INTERNAL

DEL HdlIdDef@@setup_blocked from objs
HdlIdDef: setup_blocked
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 11
                    HdlValueInt: 0
    HdlDirection: INTERNAL

DEL HdlIdDef@@out_blocked from objs
HdlIdDef: out_blocked
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 11
                    HdlValueInt: 0
    HdlDirection: INTERNAL


CommitId: a17530f0a51524486c59b0c8d5295d6ded247ec2
[usbdev] USB device update from ETH repo
--- a/hw/ip/usbdev/rtl/usbdev_usbif.sv
+++ b/hw/ip/usbdev/rtl/usbdev_usbif.sv
@@ -110,8 +117,11 @@ module usbdev_usbif  #(
       // In the normal case <MaxPktSizeByte this is out_max_used <= out_ep_put_addr
       // Following all ones out_max_used will get 1,00..00 and 1,00..01 to cover
       // one and two bytes of the CRC overflowing, then stick at 1,00..01
+
+      // TODO: This code should be re-written to be more human-readable, in the
+      // current state is hard to understand or verify
       out_max_used_next[0] = (out_max_used[PktW] & out_max_used[0]) ? 1'b1 : out_ep_put_addr[0];
-      out_max_used_next[PktW - 1: 1] = out_max_used[PktW] ? '0 : out_ep_put_addr[PktW - 1:1];
+      out_max_used_next[PktW - 1: 1] = out_max_used[PktW] ? {PktW{1'b0}} : out_ep_put_addr[PktW - 1:1];
       out_max_used_next[PktW] = (&out_max_used[PktW - 1:0]) | out_max_used[PktW];
     end else begin
       out_max_used_next = out_max_used;

ParseResult:
UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@TERNARY to TERNARY
                INS HdlOp@@REPL_CONCAT to ops
                UPD HdlOp@@REPL_CONCAT to REPL_CONCAT
                    INS list@@ops to REPL_CONCAT
                    INS HdlValueId@@PktW to ops

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@TERNARY to TERNARY
                MOV HdlValueInt@@0 to ops
                HdlValueInt: 0


CommitId: a17530f0a51524486c59b0c8d5295d6ded247ec2
[usbdev] USB device update from ETH repo
--- a/hw/ip/usbdev/rtl/usbdev_usbif.sv
+++ b/hw/ip/usbdev/rtl/usbdev_usbif.sv
@@ -120,8 +130,8 @@ module usbdev_usbif  #(
 
   always_ff @(posedge clk_48mhz_i or negedge rst_ni) begin
     if (!rst_ni) begin
-      out_max_used <= '0;
-      wdata        <= '0;
+      out_max_used <= {PktW+1{1'b0}};
+      wdata        <= {32{1'b0}};
       std_write    <= 1'b0;
     end else begin
       out_max_used <= out_max_used_next;

ParseResult:
UPD HdlStmAssign@@ to 
    MOV HdlValueInt@@0 to 
    HdlValueInt: 0

UPD HdlStmAssign@@ to 
    MOV HdlValueInt@@0 to 
    HdlValueInt: 0

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@TERNARY to TERNARY
                INS HdlOp@@REPL_CONCAT to ops
                UPD HdlOp@@REPL_CONCAT to REPL_CONCAT
                    INS list@@ops to REPL_CONCAT
                    INS HdlValueId@@PktW to ops


CommitId: a17530f0a51524486c59b0c8d5295d6ded247ec2
[usbdev] USB device update from ETH repo
--- a/hw/ip/usbdev/rtl/usbdev_usbif.sv
+++ b/hw/ip/usbdev/rtl/usbdev_usbif.sv
@@ -190,15 +200,17 @@ module usbdev_usbif  #(
   assign event_av_empty_o = out_ep_newpkt & (~av_rvalid_i);
   assign event_rx_full_o = out_ep_newpkt & (~rx_wready_i);
 
-  assign out_ep_full = {12{all_out_blocked}} | setup_blocked | out_blocked;
+  assign out_ep_full = {NEndpoints{all_out_blocked}} | setup_blocked | out_blocked;
   assign out_ep_stall = rx_stall_i;
 
   // Need to clear IN read if a SETUP is received because it may use the IN channel
-  assign out_clear_rdy_o = current_setup & rx_wvalid_o;
+  // This will not trigger, if the AV Buffer is empty, in that case we have replied
+  // with a NAK, which is illegal anyway
+  assign setup_received_o = current_setup & rx_wvalid_o;
 
   // IN (device to host) transfers
   logic in_ep_acked, in_ep_data_get, in_data_done, in_ep_newpkt, pkt_start_rd;
-  logic [11:0] in_ep_data_done;
+  logic [NEndpoints-1:0] in_ep_data_done;
   logic [PktW-1:0] in_ep_get_addr;
   logic [7:0]      in_ep_data;
 

ParseResult:
INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: OR
        list: ops
            HdlOp: OR
                list: ops
                    HdlOp: REPL_CONCAT
                        list: ops
                            HdlValueId: NEndpoints
                            HdlValueId: all_out_blocked
                    HdlValueId: setup_blocked
            HdlValueId: out_blocked
    HdlValueId: out_ep_full

INS HdlIdDef@@in_ep_data_done to objs
HdlIdDef: in_ep_data_done
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlOp: SUB
                        list: ops
                            HdlValueId: NEndpoints
                            HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: INTERNAL

UPD HdlStmAssign@@ to 
    UPD HdlValueId@@out_clear_rdy_o to setup_received_o

DEL HdlStmAssign@@ from objs
HdlStmAssign
    HdlOp: OR
        list: ops
            HdlOp: OR
                list: ops
                    HdlOp: REPL_CONCAT
                        list: ops
                            HdlValueInt: 12
                            HdlValueId: all_out_blocked
                    HdlValueId: setup_blocked
            HdlValueId: out_blocked
    HdlValueId: out_ep_full

DEL HdlIdDef@@in_ep_data_done from objs
HdlIdDef: in_ep_data_done
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 11
                    HdlValueInt: 0
    HdlDirection: INTERNAL


CommitId: a17530f0a51524486c59b0c8d5295d6ded247ec2
[usbdev] USB device update from ETH repo
--- a/hw/ip/usbdev/rtl/usbdev_usbif.sv
+++ b/hw/ip/usbdev/rtl/usbdev_usbif.sv
@@ -206,7 +218,7 @@ module usbdev_usbif  #(
   // Note: this does the correct thing for sending zero length packets
   assign in_data_done = {1'b0, in_ep_get_addr} == in_size_i;
   always_comb begin
-    in_ep_data_done = '0;
+    in_ep_data_done = {NEndpoints{1'b0}};
     in_ep_data_done[in_endpoint_o] = in_data_done;  // lint: in_endpoint_o range was checked
   end
 

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            MOV HdlValueInt@@0 to ops
            HdlValueInt: 0


CommitId: 9d8296088804792c6ac9d8726285cf7a5459515a
[dv] various updates to dv for divided clocks
--- a/hw/top_earlgrey/ip/ast/rtl/aon_osc.sv
+++ b/hw/top_earlgrey/ip/ast/rtl/aon_osc.sv
@@ -24,9 +24,9 @@ module aon_osc #(
 
 // localparam real AON_CLK_PERIOD = 5000; // 5000ns (200Khz)
 // TBD
-// This is a temporary work-around until the design fully supports
-// async clocks as part of a different PR.
-localparam real AON_CLK_PERIOD = 20;
+// sped up to 200ns by default.
+// There should be a DV hook here so that the test can choose the actual frequency
+   localparam real AON_CLK_PERIOD = 200;
 
 logic init_start, clk;
 
ParseResult:
UPD HdlIdDef@@AON_CLK_PERIOD to AON_CLK_PERIOD
    UPD HdlValueInt@@20 to 200


CommitId: efaa97eb056324fec332981139a3370db290679a
[ast] AscenLint fixes and new analog typedef
--- a/hw/top_earlgrey/ip/ast/rtl/usb_osc.sv
+++ b/hw/top_earlgrey/ip/ast/rtl/usb_osc.sv
@@ -5,27 +5,26 @@
 // *Name: usb_osc
 // *Module Description: USB Clock Oscilator
 //############################################################################
+`ifndef SYNTHESIS
 `timescale 1ns / 1ps
-
-module usb_osc #(
-`ifndef VERILATOR
-// synopsys translate_off
-  parameter time USB_EN_RDLY = 5us,
-  parameter time USB_VAL_RDLY = 80ns,
-  parameter time USB_VAL_FDLY = 80ns
-// synopsys translate_on
+`else
+`ifndef PRIM_DEFAULT_IMPL
+`define PRIM_DEFAULT_IMPL prim_pkg::ImplGeneric
+`endif
 `endif
-) (
+
+module usb_osc (
   input vcore_pok_h_i,     // VCORE POK @3.3V
   input usb_en_i,          // USB Source Clock Enable
   input usb_ref_val_i,     // USB Reference Valid
   output logic usb_clk_o   // USB Clock Output
 );
 
-// Behavioral Model
+`ifndef SYNTHESIS
+import ast_bhv_pkg::* ;
 
-`ifndef VERILATOR
-// synopsys translate_off
+// Behavioral Model
+////////////////////////////////////////
 localparam real UsbClkPeriod = 1000000/48;  // ~20833.33333ps (48Mhz)
 logic clk, en_dly, en_osc, en_osc_re, en_osc_fe;
 shortreal drift;

ParseResult:
UPD HdlModuleDef@@usb_osc to usb_osc
    INS HdlImport@@ to objs
    HdlImport
        list: path
            HdlValueId: ast_bhv_pkg
            HdlAll

UPD HdlStmWait@@[{'__class__': 'HdlOp',  'fn': 'ADD',  'ops': [{'__class__': 'HdlOp',           'fn': 'ADD',           'ops': ['USB_EN_RDLY', 'VCAON_POK_RDLY']},          {'__class__': 'HdlValueInt', 'base': 10, 'val': '1'}]} ] to [{'__class__': 'HdlOp',  'fn': 'ADD',  'ops': [{'__class__': 'HdlOp',           'fn': 'ADD',           'ops': ['USB_EN_RDLY', 'VCAON_POK_RDLY']},          {'__class__': 'HdlValueInt', 'base': 10, 'val': '1'}]} ]
    UPD HdlOp@@ADD to ADD
        INS HdlOp@@ADD to ops
        UPD HdlOp@@ADD to ADD
            INS list@@ops to ADD
            INS HdlValueId@@VCAON_POK_RDLY to ops

DEL HdlIdDef@@USB_EN_RDLY from params
HdlIdDef: USB_EN_RDLY
    HdlValueId: time
    HdlExprNotImplemented: value
    HdlDirection: INTERNAL

DEL HdlIdDef@@USB_VAL_RDLY from params
HdlIdDef: USB_VAL_RDLY
    HdlValueId: time
    HdlExprNotImplemented: value
    HdlDirection: INTERNAL

DEL HdlIdDef@@USB_VAL_FDLY from params
HdlIdDef: USB_VAL_FDLY
    HdlValueId: time
    HdlExprNotImplemented: value
    HdlDirection: INTERNAL


CommitId: efaa97eb056324fec332981139a3370db290679a
[ast] AscenLint fixes and new analog typedef
--- a/hw/top_earlgrey/ip/ast/rtl/usb_osc.sv
+++ b/hw/top_earlgrey/ip/ast/rtl/usb_osc.sv
@@ -37,7 +36,7 @@ initial begin
   rand32 = $urandom_range((9'd416), -(9'd416));  // +/-416ps (+/-2% max)
   $display("USB Clock Drift: %0dps", rand32);
   en_dly = 1'b0;  // to block init X
-  #(USB_EN_RDLY+1) en_dly = 1'b1;
+  #(USB_EN_RDLY + VCAON_POK_RDLY + 1) en_dly = 1'b1;
 end
 
 // Enable 5us RC Delay

ParseResult:
UPD HdlModuleDef@@usb_osc to usb_osc
    INS HdlImport@@ to objs
    HdlImport
        list: path
            HdlValueId: ast_bhv_pkg
            HdlAll

UPD HdlStmIf@@ to 
    INS HdlStmBlock@@SEQ to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmWait@@[{'__class__': 'HdlOp',  'fn': 'ADD',  'ops': ['USB_EN_RDLY', {'__class__': 'HdlValueInt', 'base': 10, 'val': '1'}]} ] to [{'__class__': 'HdlOp',  'fn': 'ADD',  'ops': [{'__class__': 'HdlOp',           'fn': 'ADD',           'ops': ['USB_EN_RDLY', 'VCAON_POK_RDLY']},          {'__class__': 'HdlValueInt', 'base': 10, 'val': '1'}]} ]

UPD HdlStmWait@@[{'__class__': 'HdlOp',  'fn': 'ADD',  'ops': ['USB_EN_RDLY', {'__class__': 'HdlValueInt', 'base': 10, 'val': '1'}]} ] to [{'__class__': 'HdlOp',  'fn': 'ADD',  'ops': ['USB_EN_RDLY', {'__class__': 'HdlValueInt', 'base': 10, 'val': '1'}]} ]
    UPD HdlOp@@ADD to ADD
        MOV HdlValueId@@USB_EN_RDLY to ops
        HdlValueId: USB_EN_RDLY


CommitId: efaa97eb056324fec332981139a3370db290679a
[ast] AscenLint fixes and new analog typedef
--- a/hw/top_earlgrey/ip/ast/rtl/usb_osc.sv
+++ b/hw/top_earlgrey/ip/ast/rtl/usb_osc.sv
@@ -47,8 +46,11 @@ assign en_osc_re = vcore_pok_h_i && usb_en_i && (usb_en_dly && en_dly);
 
 // Syncronize en_osc to clk FE for glitch free disable
 always_ff @( negedge clk or negedge vcore_pok_h_i ) begin
-  if ( !vcore_pok_h_i ) en_osc_fe <= 1'b0;
-  else                  en_osc_fe <= en_osc_re;
+  if ( !vcore_pok_h_i ) begin
+    en_osc_fe <= 1'b0;
+  end else begin
+    en_osc_fe <= en_osc_re;
+  end
 end
 
 assign en_osc = en_osc_re || en_osc_fe;  // EN -> 1 || EN -> 0

ParseResult:
UPD HdlModuleDef@@usb_osc to usb_osc
    INS HdlImport@@ to objs
    HdlImport
        list: path
            HdlValueId: ast_bhv_pkg
            HdlAll

UPD HdlStmIf@@ to 
    INS HdlStmBlock@@SEQ to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmAssign@@if_true to 

MOV HdlStmAssign@@if_true to 
HdlStmAssign: if_true
    HdlValueInt: 0
    HdlValueId: en_osc_fe

UPD HdlStmAssign@@if_false to 

MOV HdlStmAssign@@if_false to 
HdlStmAssign: if_false
    HdlValueId: en_osc_re
    HdlValueId: en_osc_fe


CommitId: 12cce14e3355f5df1c1d2c533a9686b88cc84b93
[tlul] Add memory transmission integrity checks
--- a/hw/ip/sram_ctrl/dv/sram_ctrl_wrapper.sv
+++ b/hw/ip/sram_ctrl/dv/sram_ctrl_wrapper.sv
@@ -50,6 +50,7 @@ module sram_ctrl_wrapper
   wire [DataWidth-1:0]  wmask;
   wire [DataWidth-1:0]  rdata;
   wire                  rvalid;
+  wire                  intg_error;
 
   // SRAM Controller
   sram_ctrl u_sram_ctrl (

ParseResult:
INS HdlIdDef@@intg_error to objs
HdlIdDef: intg_error
    HdlDirection: INTERNAL


CommitId: 50599af63fa4fcf3c04da4d939cd3d8d9b4ae76c
[i2c, rtl] Transaction Complete Fix
--- a/hw/ip/i2c/rtl/i2c_fsm.sv
+++ b/hw/ip/i2c/rtl/i2c_fsm.sv
@@ -75,7 +75,7 @@ module i2c_fsm (
   logic [7:0]  read_byte;     // register for reads from target
   logic        read_byte_clr; // clear read_byte contents
   logic        shift_data_en; // indicates data must be shifted in from the bus
-  logic        start_unpaired;// indicates unpaired start has been issued
+  logic        no_stop;       // indicates no stop has been issued before start
   logic        log_start;     // indicates start is been issued
   logic        log_stop;      // indicates stop is been issued
   logic        restart;       // indicates repeated start state is entered into

ParseResult:
UPD HdlIdDef@@start_unpaired to no_stop


CommitId: 50599af63fa4fcf3c04da4d939cd3d8d9b4ae76c
[i2c, rtl] Transaction Complete Fix
--- a/hw/ip/i2c/rtl/i2c_fsm.sv
+++ b/hw/ip/i2c/rtl/i2c_fsm.sv
@@ -186,16 +186,16 @@ module i2c_fsm (
     end
   end
 
-  // Start unpaired by Stop
-  always_ff @ (posedge clk_i or negedge rst_ni) begin : start_state
+  // Stop issued before
+  always_ff @ (posedge clk_i or negedge rst_ni) begin : stop_state
     if (!rst_ni) begin
-      start_unpaired <= 1'b0;
-    end else if (log_start) begin
-      start_unpaired <= 1'b1;
+      no_stop <= 1'b0;
     end else if (log_stop) begin
-      start_unpaired <= 1'b0;
+      no_stop <= 1'b0;
+    end else if (log_start) begin
+      no_stop <= 1'b1;
     end else begin
-      start_unpaired <= start_unpaired;
+      no_stop <= no_stop;
     end
   end
 

ParseResult:
INS HdlStmProcess@@ to objs

UPD HdlStmProcess@@ to 
    MOV list@@sensitivity to 
    list: sensitivity
        HdlOp: RISING
            list: ops
                HdlValueId: clk_i
        HdlOp: FALLING
            list: ops
                HdlValueId: rst_ni
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL HdlStmProcessTriggerConstrain@@FF from 

UPD HdlStmProcess@@ to 
    INS HdlStmBlock@@SEQ to 
    INS HdlStmProcessTriggerConstrain@@FF to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

INS HdlStmIf@@ to body

UPD HdlStmIf@@ to 
    MOV HdlOp@@NEG_LOG to 
    HdlOp: NEG_LOG
        list: ops
            HdlValueId: rst_ni
    DEL HdlStmBlock@@SEQ from 
    HdlStmBlock: SEQ
        list: body
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: start_unpaired
    DEL list@@elifs from 
    list: elifs
        tuple
            HdlValueId: log_start
            HdlStmBlock: SEQ
                list: body
                    HdlStmAssign
                        HdlValueInt: 1
                        HdlValueId: start_unpaired
        tuple
            HdlValueId: log_stop
            HdlStmBlock: SEQ
                list: body
                    HdlStmAssign
                        HdlValueInt: 0
                        HdlValueId: start_unpaired
    DEL HdlStmBlock@@SEQ from 
    HdlStmBlock: SEQ
        list: body
            HdlStmAssign
                HdlValueId: start_unpaired
                HdlValueId: start_unpaired

UPD HdlStmIf@@ to 
    INS HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: no_stop
    INS list@@elifs to 
    list: elifs
        tuple
            HdlValueId: log_stop
            HdlStmBlock: SEQ
                list: body
                    HdlStmAssign
                        HdlValueInt: 0
                        HdlValueId: no_stop
        tuple
            HdlValueId: log_start
            HdlStmBlock: SEQ
                list: body
                    HdlStmAssign
                        HdlValueInt: 1
                        HdlValueId: no_stop
    INS HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlStmAssign
                HdlValueId: no_stop
                HdlValueId: no_stop

DEL HdlStmIf@@ from body

DEL HdlStmProcess@@ from objs


CommitId: 50599af63fa4fcf3c04da4d939cd3d8d9b4ae76c
[i2c, rtl] Transaction Complete Fix
--- a/hw/ip/i2c/rtl/i2c_fsm.sv
+++ b/hw/ip/i2c/rtl/i2c_fsm.sv
@@ -689,8 +691,6 @@ module i2c_fsm (
           state_d = SetupStart;
           load_tcount = 1'b1;
           tcount_sel = tSetupStart;
-          log_start = 1'b1;
-          if (start_unpaired) restart = 1'b1;
         end else begin
           state_d = ClockLow;
           load_tcount = 1'b1;
ParseResult:
MOV HdlStmIf@@ to body
HdlStmIf
    HdlValueId: start_unpaired
    HdlOp: ASSIGN
        list: ops
            HdlValueId: restart
            HdlValueInt: 1
    list: elifs

UPD HdlStmIf@@ to 
    UPD HdlValueId@@start_unpaired to no_stop

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: log_start
                HdlValueInt: 1


CommitId: 6cc1abc5bbd78431d3d465cb9bdcfc3839dfd3ea
[fpv/csr_assert] add csr support for regwen
--- a/hw/ip/spi_device/dv/sva/spi_device_bind.sv
+++ b/hw/ip/spi_device/dv/sva/spi_device_bind.sv
@@ -13,14 +13,14 @@ module spi_device_bind;
     .d2h  (tl_o)
   );
 
-  // import spi_device_reg_pkg::*;
-  // bind spi_device spi_device_csr_assert_fpv spi_device_csr_assert (
-  //   .clk_i,
-  //   .rst_ni,
-  //   .h2d    (tl_i),
-  //   .d2h    (tl_o),
-  //   .reg2hw (reg2hw),
-  //   .hw2reg (hw2reg)
-  // );
+  import spi_device_reg_pkg::*;
+  bind spi_device spi_device_csr_assert_fpv spi_device_csr_assert (
+    .clk_i,
+    .rst_ni,
+    .h2d    (tl_i),
+    .d2h    (tl_o),
+    .reg2hw (reg2hw),
+    .hw2reg (hw2reg)
+  );
 
 endmodule
ParseResult:
UPD HdlModuleDef@@spi_device_bind to spi_device_bind
    INS HdlImport@@ to objs
    HdlImport
        list: path
            HdlValueId: spi_device_reg_pkg
            HdlAll


CommitId: d593f3cd5c12a7f419dff4eecf7b05ccbdb5079c
[secded_gen] Fix template bug that results in lint error
--- a/hw/ip/prim/rtl/prim_secded_28_22_dec.sv
+++ b/hw/ip/prim/rtl/prim_secded_28_22_dec.sv
@@ -12,7 +12,6 @@ module prim_secded_28_22_dec (
   output logic [1:0] err_o
 );
 
-  logic single_error;
 
   // Syndrome calculation
   assign syndrome_o[0] = ^(in & 28'h07003FF);

ParseResult:
DEL HdlIdDef@@single_error from objs
HdlIdDef: single_error
    HdlDirection: INTERNAL


CommitId: d593f3cd5c12a7f419dff4eecf7b05ccbdb5079c
[secded_gen] Fix template bug that results in lint error
--- a/hw/ip/prim/rtl/prim_secded_28_22_dec.sv
+++ b/hw/ip/prim/rtl/prim_secded_28_22_dec.sv
@@ -47,8 +46,7 @@ module prim_secded_28_22_dec (
   assign d_o[21] = (syndrome_o == 6'h1f) ^ in[21];
 
   // err_o calc. bit0: single error, bit1: double error
-  assign single_error = ^syndrome_o;
-  assign err_o[0] =  single_error;
-  assign err_o[1] = ~single_error & (|syndrome_o);
+  assign err_o[0] = ^syndrome_o;
+  assign err_o[1] = ~err_o[0] & (|syndrome_o);
 
 endmodule : prim_secded_28_22_dec
ParseResult:
UPD HdlStmAssign@@ to 
    MOV HdlOp@@INDEX to 
    HdlOp: INDEX
        list: ops
            HdlValueId: err_o
            HdlValueInt: 0
    DEL HdlValueId@@single_error from 

UPD HdlStmAssign@@ to 
    UPD HdlOp@@AND to AND
        UPD HdlOp@@NEG to NEG
            INS list@@ops to NEG
            INS HdlOp@@INDEX to ops
            UPD HdlOp@@INDEX to INDEX
                INS HdlValueInt@@0 to ops

UPD HdlStmAssign@@ to 
    UPD HdlOp@@AND to AND
        UPD HdlOp@@NEG to NEG
            MOV list@@ops to NEG
            list: ops
                HdlValueId: single_error
            UPD HdlValueId@@single_error to err_o

UPD HdlStmAssign@@ to 
    DEL HdlValueId@@single_error from 

DEL HdlStmAssign@@ from objs


CommitId: 5c323ef52ef42785286da49a3a2919a35dce75d9
[usb] Fix lint errors
--- a/hw/ip/usbdev/rtl/usbdev_iomux.sv
+++ b/hw/ip/usbdev/rtl/usbdev_iomux.sv
@@ -17,12 +17,7 @@ module usbdev_iomux
   input  logic                          clk_usb_48mhz_i, // use usb_ prefix for signals in this clk
   input  logic                          rst_usb_48mhz_ni,
 
-  // Configuration (quasi-static)
-  input  logic                          rx_differential_mode_i,
-  input  logic                          tx_differential_mode_i,
-  input  logic                          pinflip_i,
-
-  // Register interface (system clk)
+  // Register interface (system clk, quasi-static)
   input  usbdev_reg2hw_phy_config_reg_t sys_reg2hw_config_i,
   output logic                          sys_usb_sense_o,
 

ParseResult:
UPD HdlIdDef@@pinflip_i to pinflip

MOV HdlIdDef@@pinflip_i to ports
HdlIdDef: pinflip_i
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: IN

UPD HdlIdDef@@tx_differential_mode_i to unused_eop_single_bit

MOV HdlIdDef@@tx_differential_mode_i to ports
HdlIdDef: tx_differential_mode_i
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: IN

UPD HdlIdDef@@pinflip_i to pinflip_i
    UPD HdlDirection@@IN to INTERNAL

UPD HdlIdDef@@tx_differential_mode_i to tx_differential_mode_i
    UPD HdlDirection@@IN to INTERNAL

DEL HdlIdDef@@rx_differential_mode_i from ports
HdlIdDef: rx_differential_mode_i
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: IN


CommitId: 5c323ef52ef42785286da49a3a2919a35dce75d9
[usb] Fix lint errors
--- a/hw/ip/usbdev/rtl/usbdev_iomux.sv
+++ b/hw/ip/usbdev/rtl/usbdev_iomux.sv
@@ -59,6 +54,10 @@ module usbdev_iomux
   logic async_pwr_sense, sys_usb_sense;
   logic cio_usb_dp, cio_usb_dn, cio_usb_d;
   logic usb_rx_dp, usb_rx_dn, usb_rx_d;
+  logic pinflip;
+  logic unused_eop_single_bit;
+
+  assign unused_eop_single_bit = sys_reg2hw_config_i.eop_single_bit.q;
 
   //////////
   // CDCs //

ParseResult:
INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: DOT
        list: ops
            HdlOp: DOT
                list: ops
                    HdlValueId: sys_reg2hw_config_i
                    HdlValueId: eop_single_bit
            HdlValueId: q
    HdlValueId: unused_eop_single_bit


CommitId: 5c323ef52ef42785286da49a3a2919a35dce75d9
[usb] Fix lint errors
--- a/hw/ip/usbdev/rtl/usbdev_iomux.sv
+++ b/hw/ip/usbdev/rtl/usbdev_iomux.sv
@@ -97,9 +96,11 @@ module usbdev_iomux
   ////////////////////////
 
   // D+/D- can be swapped based on a config register.
-  assign cio_usb_d_o            = pinflip_i ? ~usb_tx_d_i     : usb_tx_d_i;
-  assign cio_usb_dp_pullup_en_o = pinflip_i ? 1'b0            : usb_pullup_en_i;
-  assign cio_usb_dn_pullup_en_o = pinflip_i ? usb_pullup_en_i : 1'b0;
+  assign pinflip = sys_reg2hw_config_i.pinflip.q;
+
+  assign cio_usb_d_o            = pinflip ? ~usb_tx_d_i     : usb_tx_d_i;
+  assign cio_usb_dp_pullup_en_o = pinflip ? 1'b0            : usb_pullup_en_i;
+  assign cio_usb_dn_pullup_en_o = pinflip ? usb_pullup_en_i : 1'b0;
 
   always_comb begin : proc_diff_se_mux_out
     // Defaults

ParseResult:
INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: DOT
        list: ops
            HdlOp: DOT
                list: ops
                    HdlValueId: sys_reg2hw_config_i
                    HdlValueId: pinflip
            HdlValueId: q
    HdlValueId: pinflip

UPD HdlStmAssign@@ to 
    UPD HdlOp@@TERNARY to TERNARY
        UPD HdlValueId@@pinflip_i to pinflip

UPD HdlStmAssign@@ to 
    UPD HdlOp@@TERNARY to TERNARY
        UPD HdlValueId@@pinflip_i to pinflip

UPD HdlStmAssign@@ to 
    UPD HdlOp@@TERNARY to TERNARY
        UPD HdlValueId@@pinflip_i to pinflip


CommitId: 5c323ef52ef42785286da49a3a2919a35dce75d9
[usb] Fix lint errors
--- a/hw/ip/usbdev/rtl/usbdev_iomux.sv
+++ b/hw/ip/usbdev/rtl/usbdev_iomux.sv
@@ -107,7 +108,7 @@ module usbdev_iomux
     cio_usb_dp_o           = 1'b0;
 
     // The single-ended signals are only driven in single-ended mode.
-    if (tx_differential_mode_i) begin
+    if (sys_reg2hw_config_i.tx_differential_mode.q) begin
       // Differential TX mode
       cio_usb_tx_mode_se_o   = 1'b0;
 

ParseResult:
UPD HdlStmIf@@ to 
    INS HdlOp@@DOT to 
    UPD HdlOp@@DOT to DOT
        INS list@@ops to DOT
        INS HdlOp@@DOT to ops
        INS HdlValueId@@q to ops
        UPD HdlOp@@DOT to DOT
            INS list@@ops to DOT
            INS HdlValueId@@sys_reg2hw_config_i to ops

UPD HdlStmIf@@ to 
    UPD HdlValueId@@tx_differential_mode_i to tx_differential_mode
    MOV HdlValueId@@tx_differential_mode_i to 
    HdlValueId: tx_differential_mode_i


CommitId: 5c323ef52ef42785286da49a3a2919a35dce75d9
[usb] Fix lint errors
--- a/hw/ip/usbdev/rtl/usbdev_iomux.sv
+++ b/hw/ip/usbdev/rtl/usbdev_iomux.sv
@@ -118,8 +119,8 @@ module usbdev_iomux
         cio_usb_dp_o = 1'b0;
         cio_usb_dn_o = 1'b0;
       end else begin
-        cio_usb_dp_o = pinflip_i ? ~usb_tx_d_i :  usb_tx_d_i;
-        cio_usb_dn_o = pinflip_i ?  usb_tx_d_i : ~usb_tx_d_i;
+        cio_usb_dp_o = pinflip ? ~usb_tx_d_i :  usb_tx_d_i;
+        cio_usb_dn_o = pinflip ?  usb_tx_d_i : ~usb_tx_d_i;
       end
     end
   end

ParseResult:
UPD HdlStmIf@@ to 
    INS HdlOp@@DOT to 
    UPD HdlOp@@DOT to DOT
        INS list@@ops to DOT
        INS HdlOp@@DOT to ops
        INS HdlValueId@@q to ops
        UPD HdlOp@@DOT to DOT
            INS list@@ops to DOT
            INS HdlValueId@@sys_reg2hw_config_i to ops

UPD HdlStmIf@@ to 
    UPD HdlValueId@@tx_differential_mode_i to tx_differential_mode
    MOV HdlValueId@@tx_differential_mode_i to 
    HdlValueId: tx_differential_mode_i

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@TERNARY to TERNARY
                UPD HdlValueId@@pinflip_i to pinflip
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@TERNARY to TERNARY
                UPD HdlValueId@@pinflip_i to pinflip


CommitId: 5c323ef52ef42785286da49a3a2919a35dce75d9
[usb] Fix lint errors
--- a/hw/ip/usbdev/rtl/usbdev_iomux.sv
+++ b/hw/ip/usbdev/rtl/usbdev_iomux.sv
@@ -138,14 +139,14 @@ module usbdev_iomux
   // we are trying to regenerate the bit clock from the bit clock we are regenerating, rather than
   // just holding the phase.
   // D+/D- can be swapped based on a config register.
-  assign usb_rx_dp = usb_tx_oe_i ? 1'b1 : (pinflip_i ?  cio_usb_dn : cio_usb_dp);
-  assign usb_rx_dn = usb_tx_oe_i ? 1'b0 : (pinflip_i ?  cio_usb_dp : cio_usb_dn);
-  assign usb_rx_d  = usb_tx_oe_i ? 1'b1 : (pinflip_i ? ~cio_usb_d  : cio_usb_d);
+  assign usb_rx_dp = usb_tx_oe_i ? 1'b1 : (pinflip ?  cio_usb_dn : cio_usb_dp);
+  assign usb_rx_dn = usb_tx_oe_i ? 1'b0 : (pinflip ?  cio_usb_dp : cio_usb_dn);
+  assign usb_rx_d  = usb_tx_oe_i ? 1'b1 : (pinflip ? ~cio_usb_d  : cio_usb_d);
 
   always_comb begin : proc_diff_se_mux_in
     usb_rx_se0_o = ~usb_rx_dp & ~usb_rx_dn;
 
-    if (rx_differential_mode_i) begin
+    if (sys_reg2hw_config_i.rx_differential_mode.q) begin
       // Differential RX mode
       usb_rx_d_o = usb_rx_d;
 
ParseResult:
UPD HdlStmIf@@ to 
    INS HdlOp@@DOT to 
    UPD HdlOp@@DOT to DOT
        INS list@@ops to DOT
        INS HdlOp@@DOT to ops
        INS HdlValueId@@q to ops
        UPD HdlOp@@DOT to DOT
            INS list@@ops to DOT
            INS HdlValueId@@sys_reg2hw_config_i to ops

UPD HdlStmAssign@@ to 
    UPD HdlOp@@TERNARY to TERNARY
        UPD HdlOp@@TERNARY to TERNARY
            UPD HdlValueId@@pinflip_i to pinflip

UPD HdlStmAssign@@ to 
    UPD HdlOp@@TERNARY to TERNARY
        UPD HdlOp@@TERNARY to TERNARY
            UPD HdlValueId@@pinflip_i to pinflip

UPD HdlStmAssign@@ to 
    UPD HdlOp@@TERNARY to TERNARY
        UPD HdlOp@@TERNARY to TERNARY
            UPD HdlValueId@@pinflip_i to pinflip

UPD HdlStmIf@@ to 
    UPD HdlValueId@@rx_differential_mode_i to rx_differential_mode
    MOV HdlValueId@@rx_differential_mode_i to 
    HdlValueId: rx_differential_mode_i


CommitId: 37eec2cbcb02ab1639382d3dbb8ab2bc5b3b904d
[flash_ctrl] Various clean-up and updates
--- a/hw/ip/flash_ctrl/rtl/flash_ctrl_erase.sv
+++ b/hw/ip/flash_ctrl/rtl/flash_ctrl_erase.sv
@@ -12,14 +12,16 @@ module flash_ctrl_erase import flash_ctrl_pkg::*; (
   input [BusAddrW-1:0]        op_addr_i,
   input                       op_addr_oob_i,
   output logic                op_done_o,
-  output logic                op_err_o,
+  output flash_ctrl_err_t     op_err_o,
+  output logic [BusAddrW-1:0] op_err_addr_o,
 
   // Flash Macro Interface
   output logic                flash_req_o,
   output logic [BusAddrW-1:0] flash_addr_o,
   output flash_erase_e        flash_op_o,
   input                       flash_done_i,
-  input                       flash_error_i
+  input                       flash_mp_err_i,
+  input                       flash_phy_err_i
 );
 
   import flash_ctrl_pkg::*;

ParseResult:
INS HdlIdDef@@op_err_o to ports
HdlIdDef: op_err_o
    HdlValueId: flash_ctrl_err_t
    HdlDirection: OUT

UPD HdlIdDef@@op_err_o to op_err_addr_o

UPD HdlIdDef@@flash_error_i to flash_mp_err_i

INS HdlIdDef@@flash_phy_err_i to ports
HdlIdDef: flash_phy_err_i
    HdlValueId: wire
    HdlDirection: IN

UPD HdlIdDef@@op_err_addr_o to op_err_addr_o
    UPD HdlOp@@PARAMETRIZATION to PARAMETRIZATION
        INS HdlOp@@DOWNTO to ops
        HdlOp: DOWNTO
            list: ops
                HdlOp: SUB
                    list: ops
                        HdlValueId: BusAddrW
                        HdlValueInt: 1
                HdlValueInt: 0


CommitId: 37eec2cbcb02ab1639382d3dbb8ab2bc5b3b904d
[flash_ctrl] Various clean-up and updates
--- a/hw/ip/flash_ctrl/rtl/flash_ctrl_erase.sv
+++ b/hw/ip/flash_ctrl/rtl/flash_ctrl_erase.sv
@@ -42,8 +44,15 @@ module flash_ctrl_erase import flash_ctrl_pkg::*; (
   assign oob_err = op_start_i & op_addr_oob_i;
 
   // IO assignments
-  assign op_done_o = flash_req_o & flash_done_i | oob_err;
-  assign op_err_o = flash_req_o & flash_error_i | oob_err;
+  assign op_done_o = flash_req_o & (flash_done_i | oob_err);
+
+  always_comb begin
+    op_err_o = '0;
+    op_err_o.oob_err = op_done_o & oob_err;
+    op_err_o.mp_err = op_done_o & flash_mp_err_i;
+    op_err_o.phy_err = op_done_o & flash_phy_err_i;
+  end
+
 
   // Flash Interface assignments
   assign flash_req_o = op_start_i & ~op_addr_oob_i;

ParseResult:
INS HdlStmProcess@@ to objs

UPD HdlStmAssign@@ to 
    UPD HdlOp@@OR to AND
    UPD HdlOp@@OR to OR
        UPD HdlOp@@AND to AND
            MOV HdlValueId@@flash_req_o to ops
            HdlValueId: flash_req_o
            MOV HdlValueId@@flash_done_i to ops
            HdlValueId: flash_done_i
            DEL list@@ops from AND
        MOV HdlValueId@@oob_err to ops
        HdlValueId: oob_err
        DEL HdlOp@@AND from ops

UPD HdlStmProcess@@ to 
    INS HdlStmBlock@@SEQ to 
    INS HdlStmProcessTriggerConstrain@@COMB to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: op_err_o
                HdlValueInt: 0
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: op_err_o
                HdlOp: AND
                    list: ops
                        HdlValueId: op_done_o
                        HdlValueId: oob_err
        INS HdlOp@@ASSIGN to body
        UPD HdlOp@@ASSIGN to ASSIGN
            INS list@@ops to ASSIGN
            INS HdlOp@@AND to ops
            HdlOp: AND
                list: ops
                    HdlValueId: op_done_o
                    HdlValueId: flash_phy_err_i
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlValueId@@op_err_o to ops

UPD HdlStmAssign@@ to 
    UPD HdlOp@@AND to AND
        INS HdlOp@@OR to ops
        UPD HdlOp@@OR to OR
            INS list@@ops to OR

UPD HdlStmAssign@@ to 
    UPD HdlOp@@OR to ASSIGN
    MOV HdlOp@@OR to 
    HdlOp: OR
        list: ops
            HdlOp: AND
                list: ops
                    HdlValueId: flash_req_o
                    HdlValueId: flash_error_i
            HdlValueId: oob_err
    MOV HdlValueId@@op_err_o to 
    HdlValueId: op_err_o
    UPD HdlOp@@OR to OR
        UPD HdlOp@@AND to AND
            UPD HdlValueId@@flash_req_o to op_done_o
            UPD HdlValueId@@flash_error_i to flash_mp_err_i
        DEL HdlValueId@@oob_err from ops

DEL HdlStmAssign@@ from objs


CommitId: 37eec2cbcb02ab1639382d3dbb8ab2bc5b3b904d
[flash_ctrl] Various clean-up and updates
--- a/hw/ip/flash_ctrl/rtl/flash_ctrl_erase.sv
+++ b/hw/ip/flash_ctrl/rtl/flash_ctrl_erase.sv
@@ -52,6 +61,8 @@ module flash_ctrl_erase import flash_ctrl_pkg::*; (
                         op_addr_i & PageAddrMask :
                         op_addr_i & BankAddrMask;
 
+  assign op_err_addr_o = flash_addr_o;
+
   // unused bus
   logic [WordsBitWidth-1:0] unused_addr_i;
   assign unused_addr_i = op_addr_i[WordsBitWidth-1:0];
ParseResult:
INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlValueId: flash_addr_o
    HdlValueId: op_err_addr_o

UPD HdlStmProcess@@ to 
    INS HdlStmBlock@@SEQ to 
    INS HdlStmProcessTriggerConstrain@@COMB to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: op_err_o
                HdlValueInt: 0
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: op_err_o
                HdlOp: AND
                    list: ops
                        HdlValueId: op_done_o
                        HdlValueId: oob_err
        INS HdlOp@@ASSIGN to body
        UPD HdlOp@@ASSIGN to ASSIGN
            INS list@@ops to ASSIGN
            INS HdlOp@@AND to ops
            HdlOp: AND
                list: ops
                    HdlValueId: op_done_o
                    HdlValueId: flash_phy_err_i
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlValueId@@op_err_o to ops


CommitId: 7cc3654ef26fe1930cada7d879e754f8e96ea874
[entropy_src/rtl] bug fixes for rng interface FIFO
--- a/hw/ip/entropy_src/rtl/entropy_src_core.sv
+++ b/hw/ip/entropy_src/rtl/entropy_src_core.sv
@@ -86,6 +86,7 @@ module entropy_src_core import entropy_src_pkg::*; #(
   logic       es_enable_early;
   logic       es_enable_lfsr;
   logic       es_enable_rng;
+  logic       es_rng_rdy;
   logic       rng_bit_en;
   logic [1:0] rng_bit_sel;
   logic       lfsr_incr;

ParseResult:
INS HdlIdDef@@es_rng_rdy to objs
HdlIdDef: es_rng_rdy
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL


CommitId: 7cc3654ef26fe1930cada7d879e754f8e96ea874
[entropy_src/rtl] bug fixes for rng interface FIFO
--- a/hw/ip/entropy_src/rtl/entropy_src_core.sv
+++ b/hw/ip/entropy_src/rtl/entropy_src_core.sv
@@ -378,6 +379,7 @@ module entropy_src_core import entropy_src_pkg::*; #(
   logic                    sha3_err_q, sha3_err_d;
   logic        cs_aes_halt_q, cs_aes_halt_d;
   logic [1:0]  es_enable_q, es_enable_d;
+  logic        rng_rdy_q, rng_rdy_d;
 
   always_ff @(posedge clk_i or negedge rst_ni)
     if (!rst_ni) begin

ParseResult:
INS HdlIdDef@@rng_rdy_q to objs
HdlIdDef: rng_rdy_q
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

INS HdlIdDef@@rng_rdy_d to objs
HdlIdDef: rng_rdy_d
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL


CommitId: 7cc3654ef26fe1930cada7d879e754f8e96ea874
[entropy_src/rtl] bug fixes for rng interface FIFO
--- a/hw/ip/entropy_src/rtl/entropy_src_core.sv
+++ b/hw/ip/entropy_src/rtl/entropy_src_core.sv
@@ -393,6 +395,7 @@ module entropy_src_core import entropy_src_pkg::*; #(
       sha3_err_q            <= '0;
       cs_aes_halt_q         <= '0;
       es_enable_q           <= '0;
+      rng_rdy_q             <= '0;
     end else begin
       es_rate_cntr_q        <= es_rate_cntr_d;
       lfsr_incr_dly_q       <= lfsr_incr_dly_d;

ParseResult:
INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: rng_rdy_q


CommitId: 7cc3654ef26fe1930cada7d879e754f8e96ea874
[entropy_src/rtl] bug fixes for rng interface FIFO
--- a/hw/ip/entropy_src/rtl/entropy_src_core.sv
+++ b/hw/ip/entropy_src/rtl/entropy_src_core.sv
@@ -406,6 +409,7 @@ module entropy_src_core import entropy_src_pkg::*; #(
       sha3_err_q            <= sha3_err_d;
       cs_aes_halt_q         <= cs_aes_halt_d;
       es_enable_q           <= es_enable_d;
+      rng_rdy_q             <= rng_rdy_d;
     end
 
   assign es_enable_d = reg2hw.conf.enable.q;

ParseResult:
INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueId: rng_rdy_d
    HdlValueId: rng_rdy_q


CommitId: 7cc3654ef26fe1930cada7d879e754f8e96ea874
[entropy_src/rtl] bug fixes for rng interface FIFO
--- a/hw/ip/entropy_src/rtl/entropy_src_core.sv
+++ b/hw/ip/entropy_src/rtl/entropy_src_core.sv
@@ -425,7 +429,7 @@ module entropy_src_core import entropy_src_pkg::*; #(
   assign fw_ov_fifo_wr_pulse = reg2hw.fw_ov_wr_data.qe;
   assign fw_ov_wr_data = reg2hw.fw_ov_wr_data.q;
 
-  assign entropy_src_rng_o.rng_enable = es_enable_rng;
+  assign entropy_src_rng_o.rng_enable = es_enable_rng && es_rng_rdy;
 
   assign es_rng_src_valid = entropy_src_rng_i.rng_valid;
   assign es_rng_bus = entropy_src_rng_i.rng_b;

ParseResult:
INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: AND_LOG
        list: ops
            HdlValueId: es_enable_rng
            HdlValueId: es_rng_rdy
    HdlValueId: entropy_src_rng_o

DEL HdlStmAssign@@ from objs
HdlStmAssign
    HdlValueId: es_enable_rng
    HdlValueId: entropy_src_rng_o


CommitId: 7cc3654ef26fe1930cada7d879e754f8e96ea874
[entropy_src/rtl] bug fixes for rng interface FIFO
--- a/hw/ip/entropy_src/rtl/entropy_src_core.sv
+++ b/hw/ip/entropy_src/rtl/entropy_src_core.sv
@@ -670,14 +674,11 @@ module entropy_src_core import entropy_src_pkg::*; #(
   );
 
   // fifo controls
-  assign sfifo_esrng_push =
-         (es_enable_rng && es_rng_src_valid);
+  assign sfifo_esrng_push = (es_enable_rng && es_rng_src_valid && es_rng_rdy);
 
   assign sfifo_esrng_clr  = !es_enable;
   assign sfifo_esrng_wdata = es_rng_bus;
-  assign sfifo_esrng_pop = es_enable_rng && es_rng_src_valid && sfifo_esrng_not_empty;
-
-  // note: allow input rng raw entropy to drop
+  assign sfifo_esrng_pop = es_enable_rng && sfifo_esrng_not_empty;
 
   // fifo err
   assign sfifo_esrng_err =

ParseResult:
MOV HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: AND_LOG
        list: ops
            HdlOp: AND_LOG
                list: ops
                    HdlValueId: es_enable_rng
                    HdlValueId: es_rng_src_valid
            HdlValueId: sfifo_esrng_not_empty
    HdlValueId: sfifo_esrng_pop

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: AND_LOG
        list: ops
            HdlValueId: es_enable_rng
            HdlValueId: sfifo_esrng_not_empty
    HdlValueId: sfifo_esrng_pop

UPD HdlStmAssign@@ to 
    UPD HdlValueId@@sfifo_esrng_pop to sfifo_esrng_push
    UPD HdlOp@@AND_LOG to AND_LOG
        UPD HdlValueId@@sfifo_esrng_not_empty to es_rng_rdy

DEL HdlStmAssign@@ from objs
HdlStmAssign
    HdlOp: AND_LOG
        list: ops
            HdlValueId: es_enable_rng
            HdlValueId: es_rng_src_valid
    HdlValueId: sfifo_esrng_push


CommitId: 7cc3654ef26fe1930cada7d879e754f8e96ea874
[entropy_src/rtl] bug fixes for rng interface FIFO
--- a/hw/ip/entropy_src/rtl/entropy_src_core.sv
+++ b/hw/ip/entropy_src/rtl/entropy_src_core.sv
@@ -686,6 +687,12 @@ module entropy_src_core import entropy_src_pkg::*; #(
          (sfifo_esrng_full && !sfifo_esrng_not_empty)};
 
 
+  // rng pacer for back-to-back streams of input
+  assign rng_rdy_d = !sfifo_esrng_push;
+
+  assign es_rng_rdy = rng_rdy_q;
+
+
   // pack esrng bus into signal bit packer
 
   assign rng_bit_en = reg2hw.conf.rng_bit_en.q;
ParseResult:
INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: NEG_LOG
        list: ops
            HdlValueId: sfifo_esrng_push
    HdlValueId: rng_rdy_d

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlValueId: rng_rdy_q
    HdlValueId: es_rng_rdy


CommitId: ff80736b44398742c53650eefe7b2293be3093cb
[top_earlgrey/rtl] adding csrng and edn blocks
new mode 100644
index 9c04dbde8..2338b5be1
@@ -532,7 +532,7 @@ module edn_core import edn_pkg::*; #(
   //--------------------------------------------
 
   assign     hw2reg.sum_sts.internal_use.de = !edn_enable;
-  assign     hw2reg.sum_sts.internal_use.d  = reg2hw.regen;
+  assign     hw2reg.sum_sts.internal_use.d  = 1'b0 && reg2hw.regen;
 
 
 endmodule
ParseResult:
UPD HdlStmAssign@@ to 
    INS HdlOp@@AND_LOG to 
    UPD HdlOp@@AND_LOG to AND_LOG
        INS list@@ops to AND_LOG
        INS HdlValueInt@@0 to ops

UPD HdlStmAssign@@ to 
    MOV HdlOp@@DOT to 
    HdlOp: DOT
        list: ops
            HdlValueId: reg2hw
            HdlValueId: regen


CommitId: 1a1b94d01fd7022438e2bd651e48ad2d99e3abca
Update lowrisc_ibex to lowRISC/ibex@6b9165f
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_tracer.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_tracer.sv
@@ -85,11 +85,11 @@ module ibex_tracer (
   logic        insn_is_compressed;
 
   // Data items accessed during this instruction
-  localparam RS1 = (1 << 0);
-  localparam RS2 = (1 << 1);
-  localparam RS3 = (1 << 2);
-  localparam RD  = (1 << 3);
-  localparam MEM = (1 << 4);
+  localparam logic [4:0] RS1 = (1 << 0);
+  localparam logic [4:0] RS2 = (1 << 1);
+  localparam logic [4:0] RS3 = (1 << 2);
+  localparam logic [4:0] RD  = (1 << 3);
+  localparam logic [4:0] MEM = (1 << 4);
   logic [4:0] data_accessed;
 
   function automatic void printbuffer_dumpline();

ParseResult:
INS HdlIdDef@@RS1 to objs

INS HdlIdDef@@RS2 to objs

INS HdlIdDef@@RS3 to objs

INS HdlIdDef@@RD to objs

INS HdlIdDef@@MEM to objs

UPD HdlIdDef@@RS1 to RS1
    INS HdlOp@@PARAMETRIZATION to RS1
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 4
                    HdlValueInt: 0
    INS HdlDirection@@INTERNAL to RS1

UPD HdlIdDef@@RS1 to RS1
    MOV HdlOp@@SLL to RS1
    HdlOp: SLL
        list: ops
            HdlValueInt: 1
            HdlValueInt: 0
    DEL HdlDirection@@INTERNAL from RS1

UPD HdlIdDef@@RS2 to RS2
    INS HdlOp@@PARAMETRIZATION to RS2
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 4
                    HdlValueInt: 0
    INS HdlDirection@@INTERNAL to RS2

UPD HdlIdDef@@RS2 to RS2
    MOV HdlOp@@SLL to RS2
    HdlOp: SLL
        list: ops
            HdlValueInt: 1
            HdlValueInt: 1
    DEL HdlDirection@@INTERNAL from RS2

UPD HdlIdDef@@RS3 to RS3
    INS HdlOp@@PARAMETRIZATION to RS3
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 4
                    HdlValueInt: 0
    INS HdlDirection@@INTERNAL to RS3

UPD HdlIdDef@@RS3 to RS3
    MOV HdlOp@@SLL to RS3
    HdlOp: SLL
        list: ops
            HdlValueInt: 1
            HdlValueInt: 2
    DEL HdlDirection@@INTERNAL from RS3

UPD HdlIdDef@@RD to RD
    INS HdlOp@@PARAMETRIZATION to RD
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 4
                    HdlValueInt: 0
    INS HdlDirection@@INTERNAL to RD

UPD HdlIdDef@@RD to RD
    MOV HdlOp@@SLL to RD
    HdlOp: SLL
        list: ops
            HdlValueInt: 1
            HdlValueInt: 3
    DEL HdlDirection@@INTERNAL from RD

UPD HdlIdDef@@MEM to MEM
    INS HdlOp@@PARAMETRIZATION to MEM
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 4
                    HdlValueInt: 0
    INS HdlDirection@@INTERNAL to MEM

UPD HdlIdDef@@MEM to MEM
    MOV HdlOp@@SLL to MEM
    HdlOp: SLL
        list: ops
            HdlValueInt: 1
            HdlValueInt: 4
    DEL HdlDirection@@INTERNAL from MEM

DEL HdlIdDef@@RS1 from objs

DEL HdlIdDef@@RS2 from objs

DEL HdlIdDef@@RS3 from objs

DEL HdlIdDef@@RD from objs

DEL HdlIdDef@@MEM from objs


CommitId: 1a1b94d01fd7022438e2bd651e48ad2d99e3abca
Update lowrisc_ibex to lowRISC/ibex@6b9165f
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_tracer.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_tracer.sv
@@ -130,10 +130,10 @@ module ibex_tracer (
     if ((data_accessed & MEM) != 0) begin
       $fwrite(file_handle, " PA:0x%08x", rvfi_mem_addr);
 
-      if (rvfi_mem_rmask != 4'b000) begin
+      if (rvfi_mem_rmask != 4'b0000) begin
         $fwrite(file_handle, " store:0x%08x", rvfi_mem_wdata);
       end
-      if (rvfi_mem_wmask != 4'b000) begin
+      if (rvfi_mem_wmask != 4'b0000) begin
         $fwrite(file_handle, " load:0x%08x", rvfi_mem_rdata);
       end
     end
ParseResult:
UPD HdlStmIf@@ to 
    UPD HdlOp@@NE to NE
        UPD HdlValueInt@@000 to 0000

UPD HdlStmIf@@ to 
    UPD HdlOp@@NE to NE
        UPD HdlValueInt@@000 to 0000


CommitId: a37bcfa3d83c2eeed22726be66a1e7b26dcc7c3a
[prim] Make ROM_INIT_FILE a parameter
--- a/hw/top_earlgrey/rtl/top_earlgrey_artys7.sv
+++ b/hw/top_earlgrey/rtl/top_earlgrey_artys7.sv
@@ -2,7 +2,11 @@
 // Licensed under the Apache License, Version 2.0, see LICENSE for details.
 // SPDX-License-Identifier: Apache-2.0
 
-module top_earlgrey_artys7 (
+module top_earlgrey_artys7  #(
+  // Path to a VMEM file containing the contents of the boot ROM, which will be
+  // baked into the FPGA bitstream.
+  parameter BootRomInitFile = "boot_rom_fpga_artys7.32.vmem"
+) (
   // Clock and Reset
   inout               IO_CLK,
   inout               IO_RST_N,

ParseResult:
INS HdlIdDef@@BootRomInitFile to params
HdlIdDef: BootRomInitFile
    HdlDirection: INTERNAL


CommitId: 5b548d5645334578da42e06c8539c57a2a8bffaf
[csrng/rtl] Two csrng app interfaces working
--- a/hw/ip/csrng/rtl/csrng_main_sm.sv
+++ b/hw/ip/csrng/rtl/csrng_main_sm.sv
@@ -13,6 +13,7 @@ module csrng_main_sm import csrng_pkg::*; (
    // ins req interface
   input logic                acmd_avail_i,
   output logic               acmd_accept_o,
+  output logic               acmd_hdr_capt_o,
   input logic [2:0]          acmd_i,
   input logic                acmd_eop_i,
   input logic                ctr_drbg_cmd_req_rdy_i,

ParseResult:
INS HdlIdDef@@acmd_hdr_capt_o to ports
HdlIdDef: acmd_hdr_capt_o
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: OUT


CommitId: 5b548d5645334578da42e06c8539c57a2a8bffaf
[csrng/rtl] Two csrng app interfaces working
--- a/hw/ip/csrng/rtl/csrng_main_sm.sv
+++ b/hw/ip/csrng/rtl/csrng_main_sm.sv
@@ -24,25 +25,26 @@ module csrng_main_sm import csrng_pkg::*; (
   output logic               generate_req_o,
   output logic               update_req_o,
   output logic               uninstant_req_o,
+  input logic                cmd_complete_i,
   input logic                halt_main_sm_i,
   output logic               main_sm_halted_o,
   output logic               main_sm_err_o
 );
 
 // Encoding generated with:
-// $ ./util/design/sparse-fsm-encode.py -d 3 -m 11 -n 8 \
-//      -s 2773294212 --language=sv
+// $ ./util/design/sparse-fsm-encode.py -d 3 -m 12 -n 8 \
+//      -s 3745111623 --language=sv
 //
 // Hamming distance histogram:
 //
 //  0: --
 //  1: --
 //  2: --
-//  3: |||||||||||||||| (29.09%)
-//  4: |||||||||||||||||||| (34.55%)
-//  5: |||||||||| (18.18%)
-//  6: |||||||| (14.55%)
-//  7: || (3.64%)
+//  3: ||||||||||||| (25.76%)
+//  4: |||||||||||||||||||| (37.88%)
+//  5: ||||||||||||| (25.76%)
+//  6: |||| (7.58%)
+//  7: | (3.03%)
 //  8: --
 //
 // Minimum Hamming distance: 3

ParseResult:
INS HdlIdDef@@cmd_complete_i to ports
HdlIdDef: cmd_complete_i
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: IN


CommitId: 5b548d5645334578da42e06c8539c57a2a8bffaf
[csrng/rtl] Two csrng app interfaces working
--- a/hw/ip/csrng/rtl/csrng_main_sm.sv
+++ b/hw/ip/csrng/rtl/csrng_main_sm.sv
@@ -105,19 +109,24 @@ module csrng_main_sm import csrng_pkg::*; (
               acmd_accept_o = 1'b1;
               if (acmd_i == INS) begin
                 if (acmd_eop_i) begin
+                  acmd_hdr_capt_o = 1'b1;
                   state_d = InstantPrep;
                 end
               end else if (acmd_i == RES) begin
                 if (acmd_eop_i) begin
+                  acmd_hdr_capt_o = 1'b1;
                   state_d = ReseedPrep;
                 end
               end else if (acmd_i == GEN) begin
+                acmd_hdr_capt_o = 1'b1;
                 state_d = GenerateReq;
               end else if (acmd_i == UPD) begin
                 if (acmd_eop_i) begin
+                  acmd_hdr_capt_o = 1'b1;
                   state_d = UpdatePrep;
                 end
               end else if (acmd_i == UNI) begin
+                acmd_hdr_capt_o = 1'b1;
                 state_d = UninstantReq;
               end
             end

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: acmd_hdr_capt_o
                HdlValueInt: 0

UPD HdlStmCase@@state_q to state_q
    MOV tuple@@ to cases
    tuple
        HdlValueId: InstantReq
        HdlStmBlock: SEQ
            list: body
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: instant_req_o
                        HdlValueInt: 1
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: state_d
                        HdlValueId: Idle
    UPD HdlValueId@@InstantReq to CmdCompWait
    UPD HdlStmBlock@@SEQ to SEQ
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: instant_req_o
                HdlValueInt: 1
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: instant_req_o
                    HdlValueInt: 1
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: state_d
                    HdlValueId: Idle
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@Idle to CmdCompWait
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@Idle to CmdCompWait
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: acmd_accept_o
                HdlValueInt: 1
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@Idle to CmdCompWait
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@Idle to CmdCompWait
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: acmd_accept_o
                HdlValueInt: 1
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: acmd_accept_o
                HdlValueInt: 1

UPD HdlStmCase@@state_q to state_q
    INS tuple@@ to cases
    INS HdlValueId@@InstantReq to 
    INS HdlStmBlock@@SEQ to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: state_d
                HdlValueId: CmdCompWait
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: acmd_hdr_capt_o
                HdlValueInt: 1
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: acmd_hdr_capt_o
                HdlValueInt: 1

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: acmd_hdr_capt_o
                HdlValueInt: 1

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: acmd_hdr_capt_o
                HdlValueInt: 1


CommitId: 5b548d5645334578da42e06c8539c57a2a8bffaf
[csrng/rtl] Two csrng app interfaces working
--- a/hw/ip/csrng/rtl/csrng_main_sm.sv
+++ b/hw/ip/csrng/rtl/csrng_main_sm.sv
@@ -138,10 +147,9 @@ module csrng_main_sm import csrng_pkg::*; (
       end
       InstantReq: begin
         instant_req_o = 1'b1;
-        state_d = Idle;
+        state_d = CmdCompWait;
       end
       ReseedPrep: begin
-        acmd_accept_o = 1'b1;
         cmd_entropy_req_o = 1'b1;
         // assumes all adata is present now
         if (cmd_entropy_avail_i) begin

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: acmd_hdr_capt_o
                HdlValueInt: 0

UPD HdlStmCase@@state_q to state_q
    MOV tuple@@ to cases
    tuple
        HdlValueId: InstantReq
        HdlStmBlock: SEQ
            list: body
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: instant_req_o
                        HdlValueInt: 1
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: state_d
                        HdlValueId: Idle
    UPD HdlValueId@@InstantReq to CmdCompWait
    UPD HdlStmBlock@@SEQ to SEQ
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: instant_req_o
                HdlValueInt: 1
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: instant_req_o
                    HdlValueInt: 1
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: state_d
                    HdlValueId: Idle
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@Idle to CmdCompWait
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@Idle to CmdCompWait
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: acmd_accept_o
                HdlValueInt: 1
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@Idle to CmdCompWait
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@Idle to CmdCompWait
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: acmd_accept_o
                HdlValueInt: 1
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: acmd_accept_o
                HdlValueInt: 1

UPD HdlStmCase@@state_q to state_q
    INS tuple@@ to cases
    INS HdlValueId@@InstantReq to 
    INS HdlStmBlock@@SEQ to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: state_d
                HdlValueId: CmdCompWait
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ


CommitId: 5b548d5645334578da42e06c8539c57a2a8bffaf
[csrng/rtl] Two csrng app interfaces working
--- a/hw/ip/csrng/rtl/csrng_main_sm.sv
+++ b/hw/ip/csrng/rtl/csrng_main_sm.sv
@@ -150,25 +158,28 @@ module csrng_main_sm import csrng_pkg::*; (
       end
       ReseedReq: begin
         reseed_req_o = 1'b1;
-        state_d = Idle;
+        state_d = CmdCompWait;
       end
       GenerateReq: begin
-        acmd_accept_o = 1'b1;
         generate_req_o = 1'b1;
-        state_d = Idle;
+        state_d = CmdCompWait;
       end
       UpdatePrep: begin
         // assumes all adata is present now
-        acmd_accept_o = 1'b1;
         state_d = UpdateReq;
       end
       UpdateReq: begin
         update_req_o = 1'b1;
-        state_d = Idle;
+        state_d = CmdCompWait;
       end
       UninstantReq: begin
         uninstant_req_o = 1'b1;
-        state_d = Idle;
+        state_d = CmdCompWait;
+      end
+      CmdCompWait: begin
+        if (cmd_complete_i) begin
+          state_d = Idle;
+        end
       end
       SMHalted: begin
         main_sm_halted_o = 1'b1;
ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: acmd_hdr_capt_o
                HdlValueInt: 0

UPD HdlStmCase@@state_q to state_q
    MOV tuple@@ to cases
    tuple
        HdlValueId: InstantReq
        HdlStmBlock: SEQ
            list: body
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: instant_req_o
                        HdlValueInt: 1
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: state_d
                        HdlValueId: Idle
    UPD HdlValueId@@InstantReq to CmdCompWait
    UPD HdlStmBlock@@SEQ to SEQ
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: instant_req_o
                HdlValueInt: 1
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: instant_req_o
                    HdlValueInt: 1
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: state_d
                    HdlValueId: Idle
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@Idle to CmdCompWait
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@Idle to CmdCompWait
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: acmd_accept_o
                HdlValueInt: 1
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@Idle to CmdCompWait
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@Idle to CmdCompWait
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: acmd_accept_o
                HdlValueInt: 1
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: acmd_accept_o
                HdlValueInt: 1

UPD HdlStmCase@@state_q to state_q
    INS tuple@@ to cases
    INS HdlValueId@@InstantReq to 
    INS HdlStmBlock@@SEQ to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: state_d
                HdlValueId: CmdCompWait
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

INS HdlStmIf@@ to body


CommitId: 66c509296798cdd9dbeba4deeb381d0cecf3b429
[usbdev] Fixes for I/O modes and expand their tests
--- a/hw/ip/usb_fs_nb_pe/rtl/usb_fs_nb_pe.sv
+++ b/hw/ip/usb_fs_nb_pe/rtl/usb_fs_nb_pe.sv
@@ -26,6 +26,7 @@ module usb_fs_nb_pe #(
   input  logic [6:0]             dev_addr_i,
 
   input  logic                   cfg_eop_single_bit_i, // 1: detect a single SE0 bit as EOP
+  input  logic                   cfg_rx_differential_i, // 1: use differential rx data on usb_d_i
   input  logic                   tx_osc_test_mode_i, // Oscillator test mode (constantly output JK)
   input  logic [NumOutEps-1:0]   data_toggle_clear_i, // Clear the data toggles for an EP
 

ParseResult:
INS HdlIdDef@@cfg_rx_differential_i to ports
HdlIdDef: cfg_rx_differential_i
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: IN


CommitId: 66c509296798cdd9dbeba4deeb381d0cecf3b429
[usbdev] Fixes for I/O modes and expand their tests
--- a/hw/ip/usb_fs_nb_pe/rtl/usb_fs_nb_pe.sv
+++ b/hw/ip/usb_fs_nb_pe/rtl/usb_fs_nb_pe.sv
@@ -66,17 +67,25 @@ module usb_fs_nb_pe #(
   output logic                   sof_valid_o,
   output logic [10:0]            frame_index_o,
 
+  // RX line status
+  output logic                   rx_se0_det_o,
+  output logic                   rx_jjj_det_o,
+
   // RX errors
   output logic                   rx_crc_err_o,
   output logic                   rx_pid_err_o,
   output logic                   rx_bitstuff_err_o,
 
   ///////////////////////////////////////
-  // USB TX/RX Interface (synchronous) //
+  // USB RX Interface (synchronous)    //
   ///////////////////////////////////////
   input  logic                   usb_d_i,
-  input  logic                   usb_se0_i,
+  input  logic                   usb_dp_i,
+  input  logic                   usb_dn_i,
 
+  ///////////////////////////////////////
+  // USB TX Interface (synchronous)    //
+  ///////////////////////////////////////
   output logic                   usb_d_o,
   output logic                   usb_se0_o,
   output logic                   usb_oe_o

ParseResult:
INS HdlIdDef@@rx_se0_det_o to ports
HdlIdDef: rx_se0_det_o
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: OUT

INS HdlIdDef@@rx_jjj_det_o to ports
HdlIdDef: rx_jjj_det_o
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: OUT

INS HdlIdDef@@usb_dp_i to ports
HdlIdDef: usb_dp_i
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: IN

UPD HdlIdDef@@usb_se0_i to usb_dn_i


CommitId: e1b4f635d6f30811b7892c7eae8e7686dc07c98f
[prim] - Fix generic flash enum reference
--- a/hw/ip/prim_generic/rtl/prim_generic_flash.sv
+++ b/hw/ip/prim_generic/rtl/prim_generic_flash.sv
@@ -102,7 +102,7 @@ module prim_generic_flash #(
   always_ff @(posedge clk_i or negedge rst_ni) begin
     if (!rst_ni) begin
       held_addr <= '0;
-      held_part <= '0;
+      held_part <= flash_ctrl_pkg::DataPart;
       held_wdata <= '0;
     end else if (hold_cmd) begin
       held_addr <= rd_q ? addr_q : addr_i;
ParseResult:
UPD HdlStmAssign@@ to 
    INS HdlOp@@DOUBLE_COLON to 
    HdlOp: DOUBLE_COLON
        list: ops
            HdlValueId: flash_ctrl_pkg
            HdlValueId: DataPart

UPD HdlStmAssign@@ to 
    DEL HdlValueInt@@0 from 


CommitId: c8ee5cbfb99ee4aadd774e425d63dfc57e026608
[prim_ram] Rearrange parity bit packing and fix wrong wmask settings
--- a/hw/ip/prim/rtl/prim_ram_1p_adv.sv
+++ b/hw/ip/prim/rtl/prim_ram_1p_adv.sv
@@ -66,6 +61,13 @@ module prim_ram_1p_adv #(
                              (Width <= 120) ? 8 : 8 ;
   localparam int TotalWidth = Width + ParWidth;
 
+  // If byte parity is enabled, the write enable bits are used to write memory colums
+  // with 8 + 1 = 9 bit width (data plus corresponding parity bit).
+  // If ECC is enabled, the DataBitsPerMask is ignored.
+  localparam int LocalDataBitsPerMask = (EnableParity) ? 9          :
+                                        (EnableECC)    ? TotalWidth :
+                                                         DataBitsPerMask;
+
   ////////////////////////////
   // RAM Primitive Instance //
   ////////////////////////////

ParseResult:
DEL HdlIdDef@@LocalDataBitsPerMask from objs
HdlIdDef: LocalDataBitsPerMask
    HdlValueId: int
    HdlOp: TERNARY
        list: ops
            HdlValueId: EnableParity
            HdlValueInt: 1
            HdlValueId: DataBitsPerMask
    HdlDirection: INTERNAL


CommitId: 098128c9003b1ab226ff17001ac59845a6755f24
Revert "Revert "[usbdev] Fixes for I/O modes and expand their tests""
--- a/hw/ip/usb_fs_nb_pe/rtl/usb_fs_rx.sv
+++ b/hw/ip/usb_fs_nb_pe/rtl/usb_fs_rx.sv
@@ -10,12 +10,14 @@ module usb_fs_rx (
   input  logic rst_ni,
   input  logic link_reset_i,
 
-  // EOP configuration
+  // configuration
   input  logic cfg_eop_single_bit_i,
+  input  logic cfg_rx_differential_i,
 
   // USB data+ and data- lines (synchronous)
   input  logic usb_d_i,
-  input  logic usb_se0_i,
+  input  logic usb_dp_i,
+  input  logic usb_dn_i,
 
   // Transmit enable disables the receier
   input  logic tx_en_i,

ParseResult:
INS HdlIdDef@@cfg_rx_differential_i to ports
HdlIdDef: cfg_rx_differential_i
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: IN

UPD HdlIdDef@@usb_se0_i to usb_dp_i

INS HdlIdDef@@usb_dn_i to ports
HdlIdDef: usb_dn_i
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: IN


CommitId: 098128c9003b1ab226ff17001ac59845a6755f24
Revert "Revert "[usbdev] Fixes for I/O modes and expand their tests""
--- a/hw/ip/usb_fs_nb_pe/rtl/usb_fs_rx.sv
+++ b/hw/ip/usb_fs_nb_pe/rtl/usb_fs_rx.sv
@@ -42,6 +44,10 @@ module usb_fs_rx (
   // Most recent packet passes PID and CRC checks
   output logic valid_packet_o,
 
+  // line status for the status detection (actual rx bits after clock recovery)
+  output logic rx_se0_det_o,
+  output logic rx_jjj_det_o,
+
   // Error detection
   output logic crc_error_o,
   output logic pid_error_o,

ParseResult:
INS HdlIdDef@@rx_se0_det_o to ports
HdlIdDef: rx_se0_det_o
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: OUT

INS HdlIdDef@@rx_jjj_det_o to ports
HdlIdDef: rx_jjj_det_o
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: OUT


CommitId: 098128c9003b1ab226ff17001ac59845a6755f24
Revert "Revert "[usbdev] Fixes for I/O modes and expand their tests""
--- a/hw/ip/usb_fs_nb_pe/rtl/usb_fs_rx.sv
+++ b/hw/ip/usb_fs_nb_pe/rtl/usb_fs_rx.sv
@@ -137,7 +226,7 @@ module usb_fs_rx (
   assign bit_strobe_o     = (bit_phase_q == 2'd2);
 
   // keep track of phase within each bit
-  assign bit_phase_d = (line_state_q == DT) ? 0 : bit_phase_q + 1;
+  assign bit_phase_d = (line_state_rx == DT) ? 0 : bit_phase_q + 1;
 
   always_ff @(posedge clk_i or negedge rst_ni) begin : proc_bit_phase_q
     if (!rst_ni) begin

ParseResult:
INS HdlStmAssign@@ to objs

UPD HdlStmAssign@@ to 
    UPD HdlOp@@TERNARY to TERNARY
        MOV HdlOp@@ADD to ops
        HdlOp: ADD
            list: ops
                HdlValueId: bit_phase_q
                HdlValueInt: 1
        MOV HdlOp@@EQ to ops
        HdlOp: EQ
            list: ops
                HdlValueId: line_state_q
                HdlValueId: DT
        DEL HdlValueInt@@0 from ops
        DEL list@@ops from TERNARY
    DEL HdlOp@@TERNARY from 
    DEL HdlValueId@@bit_phase_d from 

DEL HdlStmAssign@@ from objs


CommitId: 098128c9003b1ab226ff17001ac59845a6755f24
Revert "Revert "[usbdev] Fixes for I/O modes and expand their tests""
--- a/hw/ip/usb_fs_nb_pe/rtl/usb_fs_rx.sv
+++ b/hw/ip/usb_fs_nb_pe/rtl/usb_fs_rx.sv
@@ -193,7 +282,7 @@ module usb_fs_rx (
   end
 
   // keep a history of the last two states on the line
-  assign line_history_d = line_state_valid ? {line_history_q[9:0], line_state_q[1:0]} :
+  assign line_history_d = line_state_valid ? {line_history_q[9:0], line_state_rx[1:0]} :
                                               line_history_q;
 
   always_ff @(posedge clk_i or negedge rst_ni) begin : proc_reg_pkt_line

ParseResult:
UPD HdlStmAssign@@ to 
    UPD HdlOp@@TERNARY to TERNARY
        UPD HdlOp@@CONCAT to CONCAT
            UPD HdlOp@@INDEX to INDEX
                UPD HdlValueId@@line_state_q to line_state_rx


CommitId: 098128c9003b1ab226ff17001ac59845a6755f24
Revert "Revert "[usbdev] Fixes for I/O modes and expand their tests""
--- a/hw/ip/usb_fs_nb_pe/rtl/usb_fs_rx.sv
+++ b/hw/ip/usb_fs_nb_pe/rtl/usb_fs_rx.sv
@@ -211,6 +300,9 @@ module usb_fs_rx (
     end
   end
 
+  // mask out jjj detection when transmitting (because rx is forced to J)
+  assign rx_se0_det_o = line_history_q[5:0] == 6'b000000; // three SE0s
+  assign rx_jjj_det_o = ~tx_en_i & (line_history_q[5:0] == 6'b101010); // three Js
 
   /////////////////
   // NRZI decode //
ParseResult:
INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: EQ
        list: ops
            HdlOp: INDEX
                list: ops
                    HdlValueId: line_history_q
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 5
                            HdlValueInt: 0
            HdlValueInt: 000000
    HdlValueId: rx_se0_det_o

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: AND
        list: ops
            HdlOp: NEG
                list: ops
                    HdlValueId: tx_en_i
            HdlOp: EQ
                list: ops
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: line_history_q
                            HdlOp: DOWNTO
                                list: ops
                                    HdlValueInt: 5
                                    HdlValueInt: 0
                    HdlValueInt: 101010
    HdlValueId: rx_jjj_det_o


CommitId: 3e6d1bbeb6b81055b0493d20cd012ab7a292d534
[i2c, rtl] Issue #1662 fix and FIFO watermarks cleared after reset
--- a/hw/ip/i2c/rtl/i2c_fsm.sv
+++ b/hw/ip/i2c/rtl/i2c_fsm.sv
@@ -365,7 +366,13 @@ module i2c_fsm (
         scl_temp = 1'b1;
         if (sda_i == 0) event_sda_interference_o = 1'b1;
       end
-      // PopFmtFifo: populates fmt_fifo
+      // PopFmtFifoCont: populates fmt_fifo and continues
+      PopFmtFifoCont : begin
+        host_idle_o = 1'b0;
+        scl_temp = 1'b0;
+        fmt_fifo_rready_o = 1'b1;
+      end
+      // PopFmtFifo: populates fmt_fifo and goes to idle
       PopFmtFifo : begin
         host_idle_o = 1'b0;
         fmt_fifo_rready_o = 1'b1;

ParseResult:
UPD HdlStmCase@@state_q to state_q
    INS tuple@@ to cases
    tuple
        HdlValueId: PopFmtFifoCont
        HdlStmBlock: SEQ
            list: body
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: host_idle_o
                        HdlValueInt: 0
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: scl_temp
                        HdlValueInt: 0
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: fmt_fifo_rready_o
                        HdlValueInt: 1


CommitId: 3e6d1bbeb6b81055b0493d20cd012ab7a292d534
[i2c, rtl] Issue #1662 fix and FIFO watermarks cleared after reset
--- a/hw/ip/i2c/rtl/i2c_fsm.sv
+++ b/hw/ip/i2c/rtl/i2c_fsm.sv
@@ -508,7 +515,7 @@ module i2c_fsm (
             load_tcount = 1'b1;
             tcount_sel = tSetupStop;
           end else begin
-            state_d = PopFmtFifo;
+            state_d = PopFmtFifoCont;
             load_tcount = 1'b1;
             tcount_sel = tNoDelay;
           end

ParseResult:
UPD HdlStmCase@@state_q to state_q
    INS tuple@@ to cases
    tuple
        HdlValueId: PopFmtFifoCont
        HdlStmBlock: SEQ
            list: body
                HdlStmIf
                    HdlOp: NEG_LOG
                        list: ops
                            HdlValueId: host_enable_i
                    HdlStmBlock: SEQ
                        list: body
                            HdlOp: ASSIGN
                                list: ops
                                    HdlValueId: state_d
                                    HdlValueId: Idle
                            HdlOp: ASSIGN
                                list: ops
                                    HdlValueId: load_tcount
                                    HdlValueInt: 1
                            HdlOp: ASSIGN
                                list: ops
                                    HdlValueId: tcount_sel
                                    HdlValueId: tNoDelay
                    list: elifs
                        tuple
                            HdlOp: NEG_LOG
                                list: ops
                                    HdlValueId: fmt_fifo_rvalid_i
                            HdlStmBlock: SEQ
                                list: body
                                    HdlOp: ASSIGN
                                        list: ops
                                            HdlValueId: state_d
                                            HdlValueId: Idle
                                    HdlOp: ASSIGN
                                        list: ops
                                            HdlValueId: load_tcount
                                            HdlValueInt: 1
                                    HdlOp: ASSIGN
                                        list: ops
                                            HdlValueId: tcount_sel
                                            HdlValueId: tNoDelay
                        tuple
                            HdlValueId: fmt_flag_read_bytes_i
                            HdlStmBlock: SEQ
                                list: body
                                    HdlOp: ASSIGN
                                        list: ops
                                            HdlValueId: byte_clr
                                            HdlValueInt: 1
                                    HdlOp: ASSIGN
                                        list: ops
                                            HdlValueId: state_d
                                            HdlValueId: ReadClockLow
                                    HdlOp: ASSIGN
                                        list: ops
                                            HdlValueId: load_tcount
                                            HdlValueInt: 1
                                    HdlOp: ASSIGN
                                        list: ops
                                            HdlValueId: tcount_sel
                                            HdlValueId: tClockLow
                        tuple
                            HdlValueId: fmt_flag_start_before_i
                            HdlStmBlock: SEQ
                                list: body
                                    HdlOp: ASSIGN
                                        list: ops
                                            HdlValueId: state_d
                                            HdlValueId: SetupStart
                                    HdlOp: ASSIGN
                                        list: ops
                                            HdlValueId: load_tcount
                                            HdlValueInt: 1
                                    HdlOp: ASSIGN
                                        list: ops
                                            HdlValueId: tcount_sel
                                            HdlValueId: tSetupStart
                    HdlStmBlock: SEQ
                        list: body
                            HdlOp: ASSIGN
                                list: ops
                                    HdlValueId: state_d
                                    HdlValueId: ClockLow
                            HdlOp: ASSIGN
                                list: ops
                                    HdlValueId: load_tcount
                                    HdlValueInt: 1
                            HdlOp: ASSIGN
                                list: ops
                                    HdlValueId: tcount_sel
                                    HdlValueId: tClockLow

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@PopFmtFifo to PopFmtFifoCont


CommitId: 3e6d1bbeb6b81055b0493d20cd012ab7a292d534
[i2c, rtl] Issue #1662 fix and FIFO watermarks cleared after reset
--- a/hw/ip/i2c/rtl/i2c_fsm.sv
+++ b/hw/ip/i2c/rtl/i2c_fsm.sv
@@ -589,7 +596,7 @@ module i2c_fsm (
               load_tcount = 1'b1;
               tcount_sel = tSetupStop;
             end else begin
-              state_d = PopFmtFifo;
+              state_d = PopFmtFifoCont;
               load_tcount = 1'b1;
               tcount_sel = tNoDelay;
             end

ParseResult:
UPD HdlStmCase@@state_q to state_q
    INS tuple@@ to cases
    tuple
        HdlValueId: PopFmtFifoCont
        HdlStmBlock: SEQ
            list: body
                HdlStmIf
                    HdlOp: NEG_LOG
                        list: ops
                            HdlValueId: host_enable_i
                    HdlStmBlock: SEQ
                        list: body
                            HdlOp: ASSIGN
                                list: ops
                                    HdlValueId: state_d
                                    HdlValueId: Idle
                            HdlOp: ASSIGN
                                list: ops
                                    HdlValueId: load_tcount
                                    HdlValueInt: 1
                            HdlOp: ASSIGN
                                list: ops
                                    HdlValueId: tcount_sel
                                    HdlValueId: tNoDelay
                    list: elifs
                        tuple
                            HdlOp: NEG_LOG
                                list: ops
                                    HdlValueId: fmt_fifo_rvalid_i
                            HdlStmBlock: SEQ
                                list: body
                                    HdlOp: ASSIGN
                                        list: ops
                                            HdlValueId: state_d
                                            HdlValueId: Idle
                                    HdlOp: ASSIGN
                                        list: ops
                                            HdlValueId: load_tcount
                                            HdlValueInt: 1
                                    HdlOp: ASSIGN
                                        list: ops
                                            HdlValueId: tcount_sel
                                            HdlValueId: tNoDelay
                        tuple
                            HdlValueId: fmt_flag_read_bytes_i
                            HdlStmBlock: SEQ
                                list: body
                                    HdlOp: ASSIGN
                                        list: ops
                                            HdlValueId: byte_clr
                                            HdlValueInt: 1
                                    HdlOp: ASSIGN
                                        list: ops
                                            HdlValueId: state_d
                                            HdlValueId: ReadClockLow
                                    HdlOp: ASSIGN
                                        list: ops
                                            HdlValueId: load_tcount
                                            HdlValueInt: 1
                                    HdlOp: ASSIGN
                                        list: ops
                                            HdlValueId: tcount_sel
                                            HdlValueId: tClockLow
                        tuple
                            HdlValueId: fmt_flag_start_before_i
                            HdlStmBlock: SEQ
                                list: body
                                    HdlOp: ASSIGN
                                        list: ops
                                            HdlValueId: state_d
                                            HdlValueId: SetupStart
                                    HdlOp: ASSIGN
                                        list: ops
                                            HdlValueId: load_tcount
                                            HdlValueInt: 1
                                    HdlOp: ASSIGN
                                        list: ops
                                            HdlValueId: tcount_sel
                                            HdlValueId: tSetupStart
                    HdlStmBlock: SEQ
                        list: body
                            HdlOp: ASSIGN
                                list: ops
                                    HdlValueId: state_d
                                    HdlValueId: ClockLow
                            HdlOp: ASSIGN
                                list: ops
                                    HdlValueId: load_tcount
                                    HdlValueInt: 1
                            HdlOp: ASSIGN
                                list: ops
                                    HdlValueId: tcount_sel
                                    HdlValueId: tClockLow

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@PopFmtFifo to PopFmtFifoCont


CommitId: 990de69f857ebb68a6aeb7a14159845827182b8c
[i2c, rtl] Fix to a case when Stop is issued after Write
--- a/hw/ip/i2c/rtl/i2c_fsm.sv
+++ b/hw/ip/i2c/rtl/i2c_fsm.sv
@@ -366,15 +366,16 @@ module i2c_fsm (
         scl_temp = 1'b1;
         if (sda_i == 0) event_sda_interference_o = 1'b1;
       end
-      // PopFmtFifoCont: populates fmt_fifo and continues
-      PopFmtFifoCont : begin
+      // Continue: continue while keeping SCL low
+      Continue : begin
         host_idle_o = 1'b0;
         scl_temp = 1'b0;
-        fmt_fifo_rready_o = 1'b1;
       end
-      // PopFmtFifo: populates fmt_fifo and goes to idle
+      // PopFmtFifo: populate fmt_fifo
       PopFmtFifo : begin
         host_idle_o = 1'b0;
+        if (fmt_flag_stop_after_i) scl_temp = 1'b1;
+        else scl_temp = 1'b0;
         fmt_fifo_rready_o = 1'b1;
       end
       // default

ParseResult:
UPD HdlStmCase@@state_q to state_q
    UPD HdlValueId@@PopFmtFifoCont to Continue
    UPD HdlStmBlock@@SEQ to SEQ
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: fmt_fifo_rready_o
                HdlValueInt: 1
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: fmt_fifo_rready_o
                HdlValueInt: 1

INS HdlStmIf@@ to body
HdlStmIf
    HdlValueId: fmt_flag_stop_after_i
    HdlOp: ASSIGN
        list: ops
            HdlValueId: scl_temp
            HdlValueInt: 1
    list: elifs
    HdlOp: ASSIGN
        list: ops
            HdlValueId: scl_temp
            HdlValueInt: 0


CommitId: 990de69f857ebb68a6aeb7a14159845827182b8c
[i2c, rtl] Fix to a case when Stop is issued after Write
--- a/hw/ip/i2c/rtl/i2c_fsm.sv
+++ b/hw/ip/i2c/rtl/i2c_fsm.sv
@@ -515,7 +516,7 @@ module i2c_fsm (
             load_tcount = 1'b1;
             tcount_sel = tSetupStop;
           end else begin
-            state_d = PopFmtFifoCont;
+            state_d = PopFmtFifo;
             load_tcount = 1'b1;
             tcount_sel = tNoDelay;
           end

ParseResult:
UPD HdlStmCase@@state_q to state_q
    MOV tuple@@ to cases
    tuple
        HdlValueId: HoldStop
        HdlStmBlock: SEQ
            list: body
                HdlStmIf
                    HdlOp: EQ
                        list: ops
                            HdlValueId: tcount_q
                            HdlValueInt: 0
                    HdlStmBlock: SEQ
                        list: body
                            HdlOp: ASSIGN
                                list: ops
                                    HdlValueId: state_d
                                    HdlValueId: PopFmtFifo
                            HdlOp: ASSIGN
                                list: ops
                                    HdlValueId: load_tcount
                                    HdlValueInt: 1
                            HdlOp: ASSIGN
                                list: ops
                                    HdlValueId: tcount_sel
                                    HdlValueId: tNoDelay
                    list: elifs
    UPD HdlValueId@@HoldStop to HoldDevAck
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlStmIf
                HdlOp: EQ
                    list: ops
                        HdlValueId: tcount_q
                        HdlValueInt: 0
                HdlStmBlock: SEQ
                    list: body
                        HdlStmIf
                            HdlValueId: fmt_flag_stop_after_i
                            HdlStmBlock: SEQ
                                list: body
                                    HdlOp: ASSIGN
                                        list: ops
                                            HdlValueId: state_d
                                            HdlValueId: SetupStop
                                    HdlOp: ASSIGN
                                        list: ops
                                            HdlValueId: load_tcount
                                            HdlValueInt: 1
                                    HdlOp: ASSIGN
                                        list: ops
                                            HdlValueId: tcount_sel
                                            HdlValueId: tSetupStop
                            list: elifs
                            HdlStmBlock: SEQ
                                list: body
                                    HdlOp: ASSIGN
                                        list: ops
                                            HdlValueId: state_d
                                            HdlValueId: PopFmtFifoCont
                                    HdlOp: ASSIGN
                                        list: ops
                                            HdlValueId: load_tcount
                                            HdlValueInt: 1
                                    HdlOp: ASSIGN
                                        list: ops
                                            HdlValueId: tcount_sel
                                            HdlValueId: tNoDelay
                list: elifs
    UPD HdlValueId@@PopFmtFifoCont to Continue
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlStmIf
                HdlOp: EQ
                    list: ops
                        HdlValueId: tcount_q
                        HdlValueInt: 0
                HdlStmBlock: SEQ
                    list: body
                        HdlOp: ASSIGN
                            list: ops
                                HdlValueId: state_d
                                HdlValueId: PopFmtFifo
                        HdlOp: ASSIGN
                            list: ops
                                HdlValueId: load_tcount
                                HdlValueInt: 1
                        HdlOp: ASSIGN
                            list: ops
                                HdlValueId: tcount_sel
                                HdlValueId: tNoDelay
                list: elifs
    DEL HdlValueId@@HoldDevAck from 
    DEL tuple@@ from cases
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL tuple@@ from cases
    tuple
        HdlValueId: PopFmtFifo
        HdlStmBlock: SEQ
            list: body
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: state_d
                        HdlValueId: Idle
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: load_tcount
                        HdlValueInt: 1
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: tcount_sel
                        HdlValueId: tNoDelay

UPD HdlStmCase@@state_q to state_q
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS HdlValueId@@HoldStop to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@PopFmtFifo to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmIf@@ to 
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: state_d
                    HdlValueId: PopFmtFifoCont
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: load_tcount
                    HdlValueInt: 1
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: tcount_sel
                    HdlValueId: tNoDelay
    MOV HdlValueId@@fmt_flag_stop_after_i to 
    HdlValueId: fmt_flag_stop_after_i
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: state_d
                    HdlValueId: SetupStop
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: load_tcount
                    HdlValueInt: 1
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: tcount_sel
                    HdlValueId: tSetupStop
    MOV list@@elifs to 
    list: elifs
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@PopFmtFifoCont to Continue

DEL HdlStmIf@@ from body

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL list@@elifs from 


CommitId: 990de69f857ebb68a6aeb7a14159845827182b8c
[i2c, rtl] Fix to a case when Stop is issued after Write
--- a/hw/ip/i2c/rtl/i2c_fsm.sv
+++ b/hw/ip/i2c/rtl/i2c_fsm.sv
@@ -596,7 +597,7 @@ module i2c_fsm (
               load_tcount = 1'b1;
               tcount_sel = tSetupStop;
             end else begin
-              state_d = PopFmtFifoCont;
+              state_d = PopFmtFifo;
               load_tcount = 1'b1;
               tcount_sel = tNoDelay;
             end

ParseResult:
UPD HdlStmCase@@state_q to state_q
    MOV tuple@@ to cases
    tuple
        HdlValueId: HoldStop
        HdlStmBlock: SEQ
            list: body
                HdlStmIf
                    HdlOp: EQ
                        list: ops
                            HdlValueId: tcount_q
                            HdlValueInt: 0
                    HdlStmBlock: SEQ
                        list: body
                            HdlOp: ASSIGN
                                list: ops
                                    HdlValueId: state_d
                                    HdlValueId: PopFmtFifo
                            HdlOp: ASSIGN
                                list: ops
                                    HdlValueId: load_tcount
                                    HdlValueInt: 1
                            HdlOp: ASSIGN
                                list: ops
                                    HdlValueId: tcount_sel
                                    HdlValueId: tNoDelay
                    list: elifs
    UPD HdlValueId@@HoldStop to HoldDevAck
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlStmIf
                HdlOp: EQ
                    list: ops
                        HdlValueId: tcount_q
                        HdlValueInt: 0
                HdlStmBlock: SEQ
                    list: body
                        HdlStmIf
                            HdlValueId: fmt_flag_stop_after_i
                            HdlStmBlock: SEQ
                                list: body
                                    HdlOp: ASSIGN
                                        list: ops
                                            HdlValueId: state_d
                                            HdlValueId: SetupStop
                                    HdlOp: ASSIGN
                                        list: ops
                                            HdlValueId: load_tcount
                                            HdlValueInt: 1
                                    HdlOp: ASSIGN
                                        list: ops
                                            HdlValueId: tcount_sel
                                            HdlValueId: tSetupStop
                            list: elifs
                            HdlStmBlock: SEQ
                                list: body
                                    HdlOp: ASSIGN
                                        list: ops
                                            HdlValueId: state_d
                                            HdlValueId: PopFmtFifoCont
                                    HdlOp: ASSIGN
                                        list: ops
                                            HdlValueId: load_tcount
                                            HdlValueInt: 1
                                    HdlOp: ASSIGN
                                        list: ops
                                            HdlValueId: tcount_sel
                                            HdlValueId: tNoDelay
                list: elifs
    UPD HdlValueId@@PopFmtFifoCont to Continue
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlStmIf
                HdlOp: EQ
                    list: ops
                        HdlValueId: tcount_q
                        HdlValueInt: 0
                HdlStmBlock: SEQ
                    list: body
                        HdlOp: ASSIGN
                            list: ops
                                HdlValueId: state_d
                                HdlValueId: PopFmtFifo
                        HdlOp: ASSIGN
                            list: ops
                                HdlValueId: load_tcount
                                HdlValueInt: 1
                        HdlOp: ASSIGN
                            list: ops
                                HdlValueId: tcount_sel
                                HdlValueId: tNoDelay
                list: elifs
    DEL HdlValueId@@HoldDevAck from 
    DEL tuple@@ from cases
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL tuple@@ from cases
    tuple
        HdlValueId: PopFmtFifo
        HdlStmBlock: SEQ
            list: body
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: state_d
                        HdlValueId: Idle
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: load_tcount
                        HdlValueInt: 1
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: tcount_sel
                        HdlValueId: tNoDelay

UPD HdlStmCase@@state_q to state_q
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS HdlValueId@@HoldStop to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@PopFmtFifo to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@PopFmtFifoCont to PopFmtFifo


CommitId: 990de69f857ebb68a6aeb7a14159845827182b8c
[i2c, rtl] Fix to a case when Stop is issued after Write
--- a/hw/ip/i2c/rtl/i2c_fsm.sv
+++ b/hw/ip/i2c/rtl/i2c_fsm.sv
@@ -620,23 +621,21 @@ module i2c_fsm (
       // HoldStop: SDA and SCL are released
       HoldStop : begin
         if (tcount_q == 0) begin
-          state_d = PopFmtFifo;
-          load_tcount = 1'b1;
-          tcount_sel = tNoDelay;
+           if (!host_enable_i) begin
+             state_d = Idle;
+             load_tcount = 1'b1;
+             tcount_sel = tNoDelay;
+          end else begin
+             state_d = PopFmtFifo;
+             load_tcount = 1'b1;
+             tcount_sel = tNoDelay;
+          end
         end
       end
 
-      // PopFmtFifoCont: populates fmt_fifo and continues
-      PopFmtFifoCont : begin
-        if (!host_enable_i) begin
-          state_d = Idle;
-          load_tcount = 1'b1;
-          tcount_sel = tNoDelay;
-        end else if (!fmt_fifo_rvalid_i) begin
-          state_d = Idle;
-          load_tcount = 1'b1;
-          tcount_sel = tNoDelay;
-        end else if (fmt_flag_read_bytes_i) begin
+      // Continue: continue while keeping SCL low
+      Continue : begin
+        if (fmt_flag_read_bytes_i) begin
           byte_clr = 1'b1;
           state_d = ReadClockLow;
           load_tcount = 1'b1;

ParseResult:
UPD HdlStmCase@@state_q to state_q
    MOV tuple@@ to cases
    tuple
        HdlValueId: HoldStop
        HdlStmBlock: SEQ
            list: body
                HdlStmIf
                    HdlOp: EQ
                        list: ops
                            HdlValueId: tcount_q
                            HdlValueInt: 0
                    HdlStmBlock: SEQ
                        list: body
                            HdlOp: ASSIGN
                                list: ops
                                    HdlValueId: state_d
                                    HdlValueId: PopFmtFifo
                            HdlOp: ASSIGN
                                list: ops
                                    HdlValueId: load_tcount
                                    HdlValueInt: 1
                            HdlOp: ASSIGN
                                list: ops
                                    HdlValueId: tcount_sel
                                    HdlValueId: tNoDelay
                    list: elifs
    UPD HdlValueId@@HoldStop to HoldDevAck
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlStmIf
                HdlOp: EQ
                    list: ops
                        HdlValueId: tcount_q
                        HdlValueInt: 0
                HdlStmBlock: SEQ
                    list: body
                        HdlStmIf
                            HdlValueId: fmt_flag_stop_after_i
                            HdlStmBlock: SEQ
                                list: body
                                    HdlOp: ASSIGN
                                        list: ops
                                            HdlValueId: state_d
                                            HdlValueId: SetupStop
                                    HdlOp: ASSIGN
                                        list: ops
                                            HdlValueId: load_tcount
                                            HdlValueInt: 1
                                    HdlOp: ASSIGN
                                        list: ops
                                            HdlValueId: tcount_sel
                                            HdlValueId: tSetupStop
                            list: elifs
                            HdlStmBlock: SEQ
                                list: body
                                    HdlOp: ASSIGN
                                        list: ops
                                            HdlValueId: state_d
                                            HdlValueId: PopFmtFifoCont
                                    HdlOp: ASSIGN
                                        list: ops
                                            HdlValueId: load_tcount
                                            HdlValueInt: 1
                                    HdlOp: ASSIGN
                                        list: ops
                                            HdlValueId: tcount_sel
                                            HdlValueId: tNoDelay
                list: elifs
    UPD HdlValueId@@PopFmtFifoCont to Continue
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlStmIf
                HdlOp: EQ
                    list: ops
                        HdlValueId: tcount_q
                        HdlValueInt: 0
                HdlStmBlock: SEQ
                    list: body
                        HdlOp: ASSIGN
                            list: ops
                                HdlValueId: state_d
                                HdlValueId: PopFmtFifo
                        HdlOp: ASSIGN
                            list: ops
                                HdlValueId: load_tcount
                                HdlValueInt: 1
                        HdlOp: ASSIGN
                            list: ops
                                HdlValueId: tcount_sel
                                HdlValueId: tNoDelay
                list: elifs
    DEL HdlValueId@@HoldDevAck from 
    DEL tuple@@ from cases
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL tuple@@ from cases
    tuple
        HdlValueId: PopFmtFifo
        HdlStmBlock: SEQ
            list: body
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: state_d
                        HdlValueId: Idle
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: load_tcount
                        HdlValueInt: 1
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: tcount_sel
                        HdlValueId: tNoDelay

UPD HdlStmCase@@state_q to state_q
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS HdlValueId@@HoldStop to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@PopFmtFifo to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmIf@@ to 
    UPD list@@elifs to body
    MOV list@@elifs to 
    list: elifs
        tuple
            HdlOp: NEG_LOG
                list: ops
                    HdlValueId: fmt_fifo_rvalid_i
            HdlStmBlock: SEQ
                list: body
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: state_d
                            HdlValueId: Idle
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: load_tcount
                            HdlValueInt: 1
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: tcount_sel
                            HdlValueId: tNoDelay
        tuple
            HdlValueId: fmt_flag_read_bytes_i
            HdlStmBlock: SEQ
                list: body
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: byte_clr
                            HdlValueInt: 1
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: state_d
                            HdlValueId: ReadClockLow
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: load_tcount
                            HdlValueInt: 1
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: tcount_sel
                            HdlValueId: tClockLow
        tuple
            HdlValueId: fmt_flag_start_before_i
            HdlStmBlock: SEQ
                list: body
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: state_d
                            HdlValueId: SetupStart
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: load_tcount
                            HdlValueInt: 1
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: tcount_sel
                            HdlValueId: tSetupStart
    MOV HdlValueId@@fmt_flag_read_bytes_i to 
    HdlValueId: fmt_flag_read_bytes_i
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: byte_clr
                    HdlValueInt: 1
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: state_d
                    HdlValueId: ReadClockLow
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: load_tcount
                    HdlValueInt: 1
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: tcount_sel
                    HdlValueId: tClockLow
    MOV HdlOp@@NEG_LOG to 
    HdlOp: NEG_LOG
        list: ops
            HdlValueId: host_enable_i
    MOV tuple@@ to elifs
    tuple
        HdlValueId: fmt_flag_start_before_i
        HdlStmBlock: SEQ
            list: body
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: state_d
                        HdlValueId: SetupStart
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: load_tcount
                        HdlValueInt: 1
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: tcount_sel
                        HdlValueId: tSetupStart
    MOV tuple@@ to elifs
    tuple
        HdlOp: NEG_LOG
            list: ops
                HdlValueId: fmt_fifo_rvalid_i
        HdlStmBlock: SEQ
            list: body
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: state_d
                        HdlValueId: Idle
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: load_tcount
                        HdlValueInt: 1
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: tcount_sel
                        HdlValueId: tNoDelay
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: state_d
                    HdlValueId: Idle
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: load_tcount
                    HdlValueInt: 1
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: tcount_sel
                    HdlValueId: tNoDelay
    DEL tuple@@ from elifs

INS HdlStmIf@@ to body

MOV HdlStmIf@@ to body
HdlStmIf
    HdlOp: NEG_LOG
        list: ops
            HdlValueId: host_enable_i
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: state_d
                    HdlValueId: Idle
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: load_tcount
                    HdlValueInt: 1
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: tcount_sel
                    HdlValueId: tNoDelay
    list: elifs
        tuple
            HdlOp: NEG_LOG
                list: ops
                    HdlValueId: fmt_fifo_rvalid_i
            HdlStmBlock: SEQ
                list: body
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: state_d
                            HdlValueId: Idle
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: load_tcount
                            HdlValueInt: 1
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: tcount_sel
                            HdlValueId: tNoDelay
        tuple
            HdlValueId: fmt_flag_read_bytes_i
            HdlStmBlock: SEQ
                list: body
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: byte_clr
                            HdlValueInt: 1
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: state_d
                            HdlValueId: ReadClockLow
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: load_tcount
                            HdlValueInt: 1
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: tcount_sel
                            HdlValueId: tClockLow
        tuple
            HdlValueId: fmt_flag_start_before_i
            HdlStmBlock: SEQ
                list: body
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: state_d
                            HdlValueId: SetupStart
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: load_tcount
                            HdlValueInt: 1
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: tcount_sel
                            HdlValueId: tSetupStart
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: state_d
                    HdlValueId: ClockLow
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: load_tcount
                    HdlValueInt: 1
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: tcount_sel
                    HdlValueId: tClockLow

UPD HdlStmIf@@ to 
    MOV list@@elifs to 
    list: elifs
    MOV HdlOp@@EQ to 
    HdlOp: EQ
        list: ops
            HdlValueId: tcount_q
            HdlValueInt: 0

UPD HdlStmIf@@ to 
    INS HdlStmBlock@@SEQ to 
    INS list@@elifs to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmIf@@ to 
    INS list@@elifs to 

INS HdlStmIf@@ to body

UPD HdlStmIf@@ to 
    INS HdlOp@@NEG_LOG to 
    HdlOp: NEG_LOG
        list: ops
            HdlValueId: host_enable_i
    INS list@@elifs to 
    INS HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: state_d
                    HdlValueId: PopFmtFifo
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: load_tcount
                    HdlValueInt: 1
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: tcount_sel
                    HdlValueId: tNoDelay


CommitId: 990de69f857ebb68a6aeb7a14159845827182b8c
[i2c, rtl] Fix to a case when Stop is issued after Write
--- a/hw/ip/i2c/rtl/i2c_fsm.sv
+++ b/hw/ip/i2c/rtl/i2c_fsm.sv
@@ -652,11 +651,21 @@ module i2c_fsm (
         end
       end
 
-      // PopFmtFifo: populates fmt_fifo and goes to idle
+      // PopFmtFifo: populate fmt_fifo
       PopFmtFifo : begin
-        state_d = Idle;
-        load_tcount = 1'b1;
-        tcount_sel = tNoDelay;
+        if (!host_enable_i) begin
+          state_d = SetupStop;
+          load_tcount = 1'b1;
+          tcount_sel = tSetupStop;
+        end else if (!fmt_fifo_rvalid_i) begin
+          state_d = Idle;
+          load_tcount = 1'b1;
+          tcount_sel = tNoDelay;
+        end else begin
+          state_d = Continue;
+          load_tcount = 1'b1;
+          tcount_sel = tNoDelay;
+        end
       end
 
       // default
ParseResult:
UPD HdlStmCase@@state_q to state_q
    MOV tuple@@ to cases
    tuple
        HdlValueId: HoldStop
        HdlStmBlock: SEQ
            list: body
                HdlStmIf
                    HdlOp: EQ
                        list: ops
                            HdlValueId: tcount_q
                            HdlValueInt: 0
                    HdlStmBlock: SEQ
                        list: body
                            HdlOp: ASSIGN
                                list: ops
                                    HdlValueId: state_d
                                    HdlValueId: PopFmtFifo
                            HdlOp: ASSIGN
                                list: ops
                                    HdlValueId: load_tcount
                                    HdlValueInt: 1
                            HdlOp: ASSIGN
                                list: ops
                                    HdlValueId: tcount_sel
                                    HdlValueId: tNoDelay
                    list: elifs
    UPD HdlValueId@@HoldStop to HoldDevAck
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlStmIf
                HdlOp: EQ
                    list: ops
                        HdlValueId: tcount_q
                        HdlValueInt: 0
                HdlStmBlock: SEQ
                    list: body
                        HdlStmIf
                            HdlValueId: fmt_flag_stop_after_i
                            HdlStmBlock: SEQ
                                list: body
                                    HdlOp: ASSIGN
                                        list: ops
                                            HdlValueId: state_d
                                            HdlValueId: SetupStop
                                    HdlOp: ASSIGN
                                        list: ops
                                            HdlValueId: load_tcount
                                            HdlValueInt: 1
                                    HdlOp: ASSIGN
                                        list: ops
                                            HdlValueId: tcount_sel
                                            HdlValueId: tSetupStop
                            list: elifs
                            HdlStmBlock: SEQ
                                list: body
                                    HdlOp: ASSIGN
                                        list: ops
                                            HdlValueId: state_d
                                            HdlValueId: PopFmtFifoCont
                                    HdlOp: ASSIGN
                                        list: ops
                                            HdlValueId: load_tcount
                                            HdlValueInt: 1
                                    HdlOp: ASSIGN
                                        list: ops
                                            HdlValueId: tcount_sel
                                            HdlValueId: tNoDelay
                list: elifs
    UPD HdlValueId@@PopFmtFifoCont to Continue
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlStmIf
                HdlOp: EQ
                    list: ops
                        HdlValueId: tcount_q
                        HdlValueInt: 0
                HdlStmBlock: SEQ
                    list: body
                        HdlOp: ASSIGN
                            list: ops
                                HdlValueId: state_d
                                HdlValueId: PopFmtFifo
                        HdlOp: ASSIGN
                            list: ops
                                HdlValueId: load_tcount
                                HdlValueInt: 1
                        HdlOp: ASSIGN
                            list: ops
                                HdlValueId: tcount_sel
                                HdlValueId: tNoDelay
                list: elifs
    DEL HdlValueId@@HoldDevAck from 
    DEL tuple@@ from cases
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL tuple@@ from cases
    tuple
        HdlValueId: PopFmtFifo
        HdlStmBlock: SEQ
            list: body
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: state_d
                        HdlValueId: Idle
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: load_tcount
                        HdlValueInt: 1
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: tcount_sel
                        HdlValueId: tNoDelay

UPD HdlStmCase@@state_q to state_q
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS HdlValueId@@HoldStop to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@PopFmtFifo to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmIf@@ to 
    UPD list@@elifs to body
    MOV list@@elifs to 
    list: elifs
        tuple
            HdlOp: NEG_LOG
                list: ops
                    HdlValueId: fmt_fifo_rvalid_i
            HdlStmBlock: SEQ
                list: body
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: state_d
                            HdlValueId: Idle
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: load_tcount
                            HdlValueInt: 1
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: tcount_sel
                            HdlValueId: tNoDelay
        tuple
            HdlValueId: fmt_flag_read_bytes_i
            HdlStmBlock: SEQ
                list: body
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: byte_clr
                            HdlValueInt: 1
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: state_d
                            HdlValueId: ReadClockLow
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: load_tcount
                            HdlValueInt: 1
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: tcount_sel
                            HdlValueId: tClockLow
        tuple
            HdlValueId: fmt_flag_start_before_i
            HdlStmBlock: SEQ
                list: body
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: state_d
                            HdlValueId: SetupStart
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: load_tcount
                            HdlValueInt: 1
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: tcount_sel
                            HdlValueId: tSetupStart
    MOV HdlValueId@@fmt_flag_read_bytes_i to 
    HdlValueId: fmt_flag_read_bytes_i
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: byte_clr
                    HdlValueInt: 1
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: state_d
                    HdlValueId: ReadClockLow
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: load_tcount
                    HdlValueInt: 1
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: tcount_sel
                    HdlValueId: tClockLow
    MOV HdlOp@@NEG_LOG to 
    HdlOp: NEG_LOG
        list: ops
            HdlValueId: host_enable_i
    MOV tuple@@ to elifs
    tuple
        HdlValueId: fmt_flag_start_before_i
        HdlStmBlock: SEQ
            list: body
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: state_d
                        HdlValueId: SetupStart
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: load_tcount
                        HdlValueInt: 1
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: tcount_sel
                        HdlValueId: tSetupStart
    MOV tuple@@ to elifs
    tuple
        HdlOp: NEG_LOG
            list: ops
                HdlValueId: fmt_fifo_rvalid_i
        HdlStmBlock: SEQ
            list: body
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: state_d
                        HdlValueId: Idle
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: load_tcount
                        HdlValueInt: 1
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: tcount_sel
                        HdlValueId: tNoDelay
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: state_d
                    HdlValueId: Idle
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: load_tcount
                    HdlValueInt: 1
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: tcount_sel
                    HdlValueId: tNoDelay
    DEL tuple@@ from elifs

MOV HdlStmIf@@ to body
HdlStmIf
    HdlOp: NEG_LOG
        list: ops
            HdlValueId: host_enable_i
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: state_d
                    HdlValueId: Idle
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: load_tcount
                    HdlValueInt: 1
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: tcount_sel
                    HdlValueId: tNoDelay
    list: elifs
        tuple
            HdlOp: NEG_LOG
                list: ops
                    HdlValueId: fmt_fifo_rvalid_i
            HdlStmBlock: SEQ
                list: body
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: state_d
                            HdlValueId: Idle
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: load_tcount
                            HdlValueInt: 1
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: tcount_sel
                            HdlValueId: tNoDelay
        tuple
            HdlValueId: fmt_flag_read_bytes_i
            HdlStmBlock: SEQ
                list: body
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: byte_clr
                            HdlValueInt: 1
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: state_d
                            HdlValueId: ReadClockLow
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: load_tcount
                            HdlValueInt: 1
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: tcount_sel
                            HdlValueId: tClockLow
        tuple
            HdlValueId: fmt_flag_start_before_i
            HdlStmBlock: SEQ
                list: body
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: state_d
                            HdlValueId: SetupStart
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: load_tcount
                            HdlValueInt: 1
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: tcount_sel
                            HdlValueId: tSetupStart
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: state_d
                    HdlValueId: ClockLow
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: load_tcount
                    HdlValueInt: 1
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: tcount_sel
                    HdlValueId: tClockLow

INS HdlStmIf@@ to body

UPD HdlStmIf@@ to 
    INS HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: state_d
                    HdlValueId: SetupStop
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: load_tcount
                    HdlValueInt: 1
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: tcount_sel
                    HdlValueId: tSetupStop
    INS list@@elifs to 


CommitId: 4c583deabbfc7ffa8a74a37c0ebfaef84ce1f59e
[top] Connect RomCtrlSkipCheck
--- a/hw/top_earlgrey/rtl/autogen/chip_earlgrey_nexysvideo.sv
+++ b/hw/top_earlgrey/rtl/autogen/chip_earlgrey_nexysvideo.sv
@@ -15,7 +15,9 @@ module chip_earlgrey_nexysvideo #(
   parameter BootRomInitFile = "boot_rom_fpga_nexysvideo.32.vmem",
   // Path to a VMEM file containing the contents of the emulated OTP, which will be
   // baked into the FPGA bitstream.
-  parameter OtpCtrlMemInitFile = "otp_img_fpga_nexysvideo.vmem"
+  parameter OtpCtrlMemInitFile = "otp_img_fpga_nexysvideo.vmem",
+  // TODO: Remove this 0 once infra is ready
+  parameter bit RomCtrlSkipCheck = 1
 ) (
   // Dedicated Pads
   inout POR_N, // Manual Pad
ParseResult:
INS HdlIdDef@@RomCtrlSkipCheck to params
HdlIdDef: RomCtrlSkipCheck
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: bit
    HdlValueInt: 1
    HdlDirection: INTERNAL


CommitId: de6e479401510aed7041bd8581d29b7980624958
[entropy_src/rtl] IO changes updated
--- a/hw/ip/entropy_src/rtl/entropy_src_adaptp_ht.sv
+++ b/hw/ip/entropy_src/rtl/entropy_src_adaptp_ht.sv
@@ -54,11 +54,10 @@ module entropy_src_adaptp_ht #(
 
 
   // Number of ones per column
-//  assign column_cnt =  {{RngBusWidth{1'b0}},entropy_bit_i[3]};
-  assign column_cnt =  {{(RngBusWidth-1){1'b0}},entropy_bit_i[3]} +
-                       {{(RngBusWidth-1){1'b0}},entropy_bit_i[2]} +
-                       {{(RngBusWidth-1){1'b0}},entropy_bit_i[1]} +
-                       {{(RngBusWidth-1){1'b0}},entropy_bit_i[0]};
+  assign column_cnt =  RngBusWidth'(entropy_bit_i[3]) +
+                       RngBusWidth'(entropy_bit_i[2]) +
+                       RngBusWidth'(entropy_bit_i[1]) +
+                       RngBusWidth'(entropy_bit_i[0]);
 
   // Window wrap condition
   assign window_cntr_wrap = (window_cntr_q == window_i);
ParseResult:
UPD HdlStmAssign@@ to 
    UPD HdlOp@@ADD to ADD
        UPD HdlOp@@CONCAT to CALL
        UPD HdlOp@@ADD to ADD
            UPD HdlOp@@CONCAT to CALL
            UPD HdlOp@@ADD to ADD
                UPD HdlOp@@CONCAT to CALL
                UPD HdlOp@@CONCAT to CALL
                UPD HdlOp@@CONCAT to CONCAT
                    UPD HdlOp@@REPL_CONCAT to REPL_CONCAT
                        UPD HdlOp@@SUB to SUB
                            MOV HdlValueId@@RngBusWidth to ops
                            HdlValueId: RngBusWidth
                            DEL HdlValueInt@@1 from ops
                            DEL list@@ops from SUB
                        DEL HdlOp@@SUB from ops
                        DEL HdlValueInt@@0 from ops
                        DEL list@@ops from REPL_CONCAT
                    DEL HdlOp@@REPL_CONCAT from ops
                UPD HdlOp@@CONCAT to CONCAT
                    UPD HdlOp@@REPL_CONCAT to REPL_CONCAT
                        UPD HdlOp@@SUB to SUB
                            MOV HdlValueId@@RngBusWidth to ops
                            HdlValueId: RngBusWidth
                            DEL HdlValueInt@@1 from ops
                            DEL list@@ops from SUB
                        DEL HdlOp@@SUB from ops
                        DEL HdlValueInt@@0 from ops
                        DEL list@@ops from REPL_CONCAT
                    DEL HdlOp@@REPL_CONCAT from ops
            UPD HdlOp@@CONCAT to CONCAT
                UPD HdlOp@@REPL_CONCAT to REPL_CONCAT
                    UPD HdlOp@@SUB to SUB
                        MOV HdlValueId@@RngBusWidth to ops
                        HdlValueId: RngBusWidth
                        DEL HdlValueInt@@1 from ops
                        DEL list@@ops from SUB
                    DEL HdlOp@@SUB from ops
                    DEL HdlValueInt@@0 from ops
                    DEL list@@ops from REPL_CONCAT
                DEL HdlOp@@REPL_CONCAT from ops
        UPD HdlOp@@CONCAT to CONCAT
            UPD HdlOp@@REPL_CONCAT to REPL_CONCAT
                UPD HdlOp@@SUB to SUB
                    MOV HdlValueId@@RngBusWidth to ops
                    HdlValueId: RngBusWidth
                    DEL HdlValueInt@@1 from ops
                    DEL list@@ops from SUB
                DEL HdlOp@@SUB from ops
                DEL HdlValueInt@@0 from ops
                DEL list@@ops from REPL_CONCAT
            DEL HdlOp@@REPL_CONCAT from ops


CommitId: 57f926bed17ce0c265e4b23535613238160c8afe
[i2c, rtl] Various FSM fixes and improvements
--- a/hw/ip/i2c/rtl/i2c_fsm.sv
+++ b/hw/ip/i2c/rtl/i2c_fsm.sv
@@ -16,6 +16,8 @@ module i2c_fsm (
   input        host_enable_i, // enable host functionality
 
   input        fmt_fifo_rvalid_i, // indicates there is valid data in fmt_fifo
+  input        fmt_fifo_wvalid_i, // indicates data is being put into fmt_fifo
+  input [5:0]  fmt_fifo_depth_i,  // fmt_fifo_depth
   output logic fmt_fifo_rready_o, // populates fmt_fifo
   input [7:0]  fmt_byte_i,        // byte in fmt_fifo to be sent to target
   input        fmt_flag_start_before_i, // issue start before sending byte

ParseResult:
INS HdlIdDef@@fmt_fifo_wvalid_i to ports
HdlIdDef: fmt_fifo_wvalid_i
    HdlValueId: wire
    HdlDirection: IN

INS HdlIdDef@@fmt_fifo_depth_i to ports
HdlIdDef: fmt_fifo_depth_i
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: wire
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 5
                    HdlValueInt: 0
    HdlDirection: IN


CommitId: 57f926bed17ce0c265e4b23535613238160c8afe
[i2c, rtl] Various FSM fixes and improvements
--- a/hw/ip/i2c/rtl/i2c_fsm.sv
+++ b/hw/ip/i2c/rtl/i2c_fsm.sv
@@ -93,8 +95,8 @@ module i2c_fsm (
         tHoldBit    : tcount_d = t_f_i + thd_dat_i;
         tSetupStop  : tcount_d = t_r_i + tsu_sto_i;
         tHoldStop   : tcount_d = t_r_i + t_buf_i - tsu_sta_i;
-        tNoDelay    : tcount_d = '0;
-        default     : tcount_d = '0;
+        tNoDelay    : tcount_d = 20'b1;
+        default     : tcount_d = 20'b1;
       endcase
     end else if (stretch == 0) begin
       tcount_d = tcount_q - 1'b1;

ParseResult:
UPD HdlStmCase@@tcount_sel to tcount_sel
    UPD HdlOp@@ASSIGN to ASSIGN
        UPD HdlValueInt@@0 to 1
    UPD HdlOp@@ASSIGN to ASSIGN
        UPD HdlValueInt@@0 to 1


CommitId: 57f926bed17ce0c265e4b23535613238160c8afe
[i2c, rtl] Various FSM fixes and improvements
--- a/hw/ip/i2c/rtl/i2c_fsm.sv
+++ b/hw/ip/i2c/rtl/i2c_fsm.sv
@@ -105,7 +107,7 @@ module i2c_fsm (
 
   always_ff @ (posedge clk_i or negedge rst_ni) begin : clk_counter
     if (!rst_ni) begin
-      tcount_q <= '0;
+      tcount_q <= '1;
     end else begin
       tcount_q <= tcount_d;
     end

ParseResult:
UPD HdlStmAssign@@ to 
    UPD HdlValueInt@@0 to 1


CommitId: 57f926bed17ce0c265e4b23535613238160c8afe
[i2c, rtl] Various FSM fixes and improvements
--- a/hw/ip/i2c/rtl/i2c_fsm.sv
+++ b/hw/ip/i2c/rtl/i2c_fsm.sv
@@ -310,7 +312,7 @@ module i2c_fsm (
       ReadHoldBit : begin
         host_idle_o = 1'b0;
         scl_temp = 1'b0;
-        if (bit_index == 0 && tcount_q == 0) begin
+        if (bit_index == 0 && tcount_q == 1) begin
           rx_fifo_wdata_o = read_byte;  // transfer read data to rx_fifo
           rx_fifo_wvalid_o = 1'b1;      // assert that rx_fifo has valid data
         end

ParseResult:
UPD HdlStmCase@@state_q to state_q
    UPD HdlValueId@@Continue to Active

UPD HdlStmIf@@ to 
    UPD HdlOp@@AND_LOG to AND_LOG
        UPD HdlOp@@EQ to EQ
            UPD HdlValueInt@@0 to 1


CommitId: 57f926bed17ce0c265e4b23535613238160c8afe
[i2c, rtl] Various FSM fixes and improvements
--- a/hw/ip/i2c/rtl/i2c_fsm.sv
+++ b/hw/ip/i2c/rtl/i2c_fsm.sv
@@ -324,18 +326,18 @@ module i2c_fsm (
       // HostSetupBitAck: Shift Ack/Nack bit onto SDA
       HostSetupBitAck : begin
         host_idle_o = 1'b0;
-        if (fmt_flag_stop_after_i && byte_index == 0) sda_temp = 1'b1;
-        else if (fmt_flag_read_continue_i) sda_temp = 1'b0;
-        else sda_temp = 1'b1;
+        if (fmt_flag_read_continue_i) sda_temp = 1'b0;
+        else if (byte_index == 1) sda_temp = 1'b1;
+        else sda_temp = 1'b0;
         scl_temp = 1'b0;
         if (sda_temp == 1 && sda_i == 0) event_sda_interference_o = 1'b1;
       end
       // HostClockPulseAck: SCL is released
       HostClockPulseAck : begin
         host_idle_o = 1'b0;
-        if (fmt_flag_stop_after_i && byte_index == 0) sda_temp = 1'b1;
-        else if (fmt_flag_read_continue_i) sda_temp = 1'b0;
-        else sda_temp = 1'b1;
+        if (fmt_flag_read_continue_i) sda_temp = 1'b0;
+        else if (byte_index == 1) sda_temp = 1'b1;
+        else sda_temp = 1'b0;
         scl_temp = 1'b1;
         if ((stretch > stretch_timeout_i) && timeout_enable_i) begin
           event_stretch_timeout_o = 1'b1;

ParseResult:
UPD HdlStmCase@@state_q to state_q
    UPD HdlValueId@@Continue to Active

UPD HdlStmIf@@ to 
    UPD HdlOp@@AND_LOG to AND_LOG
        UPD HdlValueId@@fmt_flag_stop_after_i to fmt_flag_read_continue_i
        MOV HdlValueId@@fmt_flag_stop_after_i to ops
        HdlValueId: fmt_flag_stop_after_i
        DEL HdlOp@@EQ from ops
        HdlOp: EQ
            list: ops
                HdlValueId: byte_index
                HdlValueInt: 0
        DEL list@@ops from AND_LOG
    MOV HdlOp@@ASSIGN to 
    HdlOp: ASSIGN
        list: ops
            HdlValueId: sda_temp
            HdlValueInt: 0
    MOV HdlOp@@ASSIGN to 
    HdlOp: ASSIGN
        list: ops
            HdlValueId: sda_temp
            HdlValueInt: 1
    MOV HdlOp@@ASSIGN to 
    HdlOp: ASSIGN
        list: ops
            HdlValueId: sda_temp
            HdlValueInt: 1
    DEL HdlOp@@AND_LOG from 
    DEL HdlValueId@@fmt_flag_read_continue_i from 
    DEL tuple@@ from elifs
    DEL list@@elifs from 

UPD HdlStmIf@@ to 
    INS list@@elifs to 
    INS tuple@@ to elifs
    INS HdlOp@@EQ to 
    HdlOp: EQ
        list: ops
            HdlValueId: byte_index
            HdlValueInt: 1

UPD HdlStmIf@@ to 
    UPD HdlOp@@AND_LOG to AND_LOG
        UPD HdlValueId@@fmt_flag_stop_after_i to fmt_flag_read_continue_i
        MOV HdlValueId@@fmt_flag_stop_after_i to ops
        HdlValueId: fmt_flag_stop_after_i
        DEL HdlOp@@EQ from ops
        HdlOp: EQ
            list: ops
                HdlValueId: byte_index
                HdlValueInt: 0
        DEL list@@ops from AND_LOG
    MOV HdlOp@@ASSIGN to 
    HdlOp: ASSIGN
        list: ops
            HdlValueId: sda_temp
            HdlValueInt: 0
    UPD HdlOp@@ASSIGN to EQ
    MOV HdlOp@@ASSIGN to 
    HdlOp: ASSIGN
        list: ops
            HdlValueId: sda_temp
            HdlValueInt: 1
    MOV HdlOp@@ASSIGN to 
    HdlOp: ASSIGN
        list: ops
            HdlValueId: sda_temp
            HdlValueInt: 1
    UPD HdlOp@@ASSIGN to ASSIGN
        UPD HdlValueId@@sda_temp to byte_index
    DEL HdlOp@@AND_LOG from 
    DEL HdlValueId@@fmt_flag_read_continue_i from 
    DEL tuple@@ from elifs
    DEL list@@elifs from 

UPD HdlStmIf@@ to 
    INS list@@elifs to 
    INS HdlOp@@ASSIGN to 
    HdlOp: ASSIGN
        list: ops
            HdlValueId: sda_temp
            HdlValueInt: 0
    INS tuple@@ to elifs


CommitId: 57f926bed17ce0c265e4b23535613238160c8afe
[i2c, rtl] Various FSM fixes and improvements
--- a/hw/ip/i2c/rtl/i2c_fsm.sv
+++ b/hw/ip/i2c/rtl/i2c_fsm.sv
@@ -347,9 +349,9 @@ module i2c_fsm (
       // HostHoldBitAck: SCL is pulled low
       HostHoldBitAck : begin
         host_idle_o = 1'b0;
-        if (fmt_flag_stop_after_i && byte_index == 0) sda_temp = 1'b1;
-        else if (fmt_flag_read_continue_i) sda_temp = 1'b0;
-        else sda_temp = 1'b1;
+        if (fmt_flag_read_continue_i) sda_temp = 1'b0;
+        else if (byte_index == 1) sda_temp = 1'b1;
+        else sda_temp = 1'b0;
         scl_temp = 1'b0;
         if (sda_temp == 1 && sda_i == 0) event_sda_interference_o = 1'b1;
       end

ParseResult:
UPD HdlStmCase@@state_q to state_q
    UPD HdlValueId@@Continue to Active

UPD HdlStmIf@@ to 
    MOV HdlOp@@ASSIGN to 
    HdlOp: ASSIGN
        list: ops
            HdlValueId: sda_temp
            HdlValueInt: 0
    UPD HdlOp@@AND_LOG to AND_LOG
        UPD HdlValueId@@fmt_flag_stop_after_i to fmt_flag_read_continue_i
        MOV HdlValueId@@fmt_flag_stop_after_i to ops
        HdlValueId: fmt_flag_stop_after_i
        UPD HdlOp@@EQ to ASSIGN
        MOV HdlOp@@EQ to ops
        HdlOp: EQ
            list: ops
                HdlValueId: byte_index
                HdlValueInt: 0
        UPD HdlOp@@EQ to EQ
            UPD HdlValueId@@byte_index to sda_temp
        DEL list@@ops from AND_LOG
    UPD HdlOp@@ASSIGN to EQ
    MOV HdlOp@@ASSIGN to 
    HdlOp: ASSIGN
        list: ops
            HdlValueId: sda_temp
            HdlValueInt: 1
    UPD HdlOp@@ASSIGN to ASSIGN
        UPD HdlValueInt@@1 to 0
    UPD HdlOp@@ASSIGN to ASSIGN
        UPD HdlValueId@@sda_temp to byte_index
    DEL HdlOp@@AND_LOG from 
    DEL HdlValueId@@fmt_flag_read_continue_i from 
    DEL tuple@@ from elifs
    DEL list@@elifs from 

UPD HdlStmIf@@ to 
    INS list@@elifs to 
    INS tuple@@ to elifs


CommitId: 57f926bed17ce0c265e4b23535613238160c8afe
[i2c, rtl] Various FSM fixes and improvements
--- a/hw/ip/i2c/rtl/i2c_fsm.sv
+++ b/hw/ip/i2c/rtl/i2c_fsm.sv
@@ -366,8 +368,8 @@ module i2c_fsm (
         scl_temp = 1'b1;
         if (sda_i == 0) event_sda_interference_o = 1'b1;
       end
-      // Continue: continue while keeping SCL low
-      Continue : begin
+      // Active: Hold SCL low
+      Active : begin
         host_idle_o = 1'b0;
         scl_temp = 1'b0;
       end

ParseResult:
UPD HdlStmCase@@state_q to state_q
    UPD HdlValueId@@Continue to Active


CommitId: 57f926bed17ce0c265e4b23535613238160c8afe
[i2c, rtl] Various FSM fixes and improvements
--- a/hw/ip/i2c/rtl/i2c_fsm.sv
+++ b/hw/ip/i2c/rtl/i2c_fsm.sv
@@ -430,7 +432,7 @@ module i2c_fsm (
 
       // SetupStart: SDA and SCL are released
       SetupStart : begin
-        if (tcount_q == 0) begin
+        if (tcount_q == 1) begin
           state_d = HoldStart;
           load_tcount = 1'b1;
           tcount_sel = tHoldStart;

ParseResult:
UPD HdlStmCase@@state_q to state_q
    UPD HdlValueId@@Continue to Active

UPD HdlStmIf@@ to 
    UPD HdlOp@@EQ to EQ
        UPD HdlValueInt@@0 to 1


CommitId: 57f926bed17ce0c265e4b23535613238160c8afe
[i2c, rtl] Various FSM fixes and improvements
--- a/hw/ip/i2c/rtl/i2c_fsm.sv
+++ b/hw/ip/i2c/rtl/i2c_fsm.sv
@@ -438,7 +440,7 @@ module i2c_fsm (
       end
       // HoldStart: SDA is pulled low, SCL is released
       HoldStart : begin
-        if (tcount_q == 0) begin
+        if (tcount_q == 1) begin
           state_d = ClockLow;
           load_tcount = 1'b1;
           tcount_sel = tClockLow;

ParseResult:
UPD HdlStmCase@@state_q to state_q
    UPD HdlValueId@@Continue to Active

UPD HdlStmIf@@ to 
    UPD HdlOp@@EQ to EQ
        UPD HdlValueInt@@0 to 1


CommitId: 57f926bed17ce0c265e4b23535613238160c8afe
[i2c, rtl] Various FSM fixes and improvements
--- a/hw/ip/i2c/rtl/i2c_fsm.sv
+++ b/hw/ip/i2c/rtl/i2c_fsm.sv
@@ -447,7 +449,7 @@ module i2c_fsm (
 
       // ClockLow: SCL is pulled low, SDA stays low
       ClockLow : begin
-        if (tcount_q == 0) begin
+        if (tcount_q == 1) begin
           state_d = SetupBit;
           load_tcount = 1'b1;
           tcount_sel = tSetupBit;

ParseResult:
UPD HdlStmCase@@state_q to state_q
    UPD HdlValueId@@Continue to Active

UPD HdlStmIf@@ to 
    UPD HdlOp@@EQ to EQ
        UPD HdlValueInt@@0 to 1


CommitId: 57f926bed17ce0c265e4b23535613238160c8afe
[i2c, rtl] Various FSM fixes and improvements
--- a/hw/ip/i2c/rtl/i2c_fsm.sv
+++ b/hw/ip/i2c/rtl/i2c_fsm.sv
@@ -455,7 +457,7 @@ module i2c_fsm (
       end
       // SetupBit: Shift indexed bit onto SDA, SCL stays low
       SetupBit : begin
-        if (tcount_q == 0) begin
+        if (tcount_q == 1) begin
           state_d = ClockPulse;
           load_tcount = 1'b1;
           tcount_sel = tClockPulse;

ParseResult:
UPD HdlStmCase@@state_q to state_q
    UPD HdlValueId@@Continue to Active

UPD HdlStmIf@@ to 
    UPD HdlOp@@EQ to EQ
        UPD HdlValueInt@@0 to 1


CommitId: 57f926bed17ce0c265e4b23535613238160c8afe
[i2c, rtl] Various FSM fixes and improvements
--- a/hw/ip/i2c/rtl/i2c_fsm.sv
+++ b/hw/ip/i2c/rtl/i2c_fsm.sv
@@ -463,7 +465,7 @@ module i2c_fsm (
       end
       // ClockPulse: SCL is released, SDA keeps the indexed bit value
       ClockPulse : begin
-        if (tcount_q == 0) begin
+        if (tcount_q == 1) begin
           state_d = HoldBit;
           load_tcount = 1'b1;
           tcount_sel = tHoldBit;

ParseResult:
UPD HdlStmCase@@state_q to state_q
    UPD HdlValueId@@Continue to Active

UPD HdlStmIf@@ to 
    UPD HdlOp@@EQ to EQ
        UPD HdlValueInt@@0 to 1


CommitId: 57f926bed17ce0c265e4b23535613238160c8afe
[i2c, rtl] Various FSM fixes and improvements
--- a/hw/ip/i2c/rtl/i2c_fsm.sv
+++ b/hw/ip/i2c/rtl/i2c_fsm.sv
@@ -471,7 +473,7 @@ module i2c_fsm (
       end
       // HoldBit: SCL is pulled low
       HoldBit : begin
-        if (tcount_q == 0) begin
+        if (tcount_q == 1) begin
           load_tcount = 1'b1;
           tcount_sel = tClockLow;
           if (bit_index == 0) begin

ParseResult:
UPD HdlStmCase@@state_q to state_q
    UPD HdlValueId@@Continue to Active

UPD HdlStmIf@@ to 
    UPD HdlOp@@EQ to EQ
        UPD HdlValueInt@@0 to 1


CommitId: 57f926bed17ce0c265e4b23535613238160c8afe
[i2c, rtl] Various FSM fixes and improvements
--- a/hw/ip/i2c/rtl/i2c_fsm.sv
+++ b/hw/ip/i2c/rtl/i2c_fsm.sv
@@ -486,7 +488,7 @@ module i2c_fsm (
 
       // ClockLowAck: SCL and SDA are pulled low
       ClockLowAck : begin
-        if (tcount_q == 0) begin
+        if (tcount_q == 1) begin
           state_d = SetupDevAck;
           load_tcount = 1'b1;
           tcount_sel = tSetupBit;

ParseResult:
UPD HdlStmCase@@state_q to state_q
    UPD HdlValueId@@Continue to Active

UPD HdlStmIf@@ to 
    UPD HdlOp@@EQ to EQ
        UPD HdlValueInt@@0 to 1


CommitId: 57f926bed17ce0c265e4b23535613238160c8afe
[i2c, rtl] Various FSM fixes and improvements
--- a/hw/ip/i2c/rtl/i2c_fsm.sv
+++ b/hw/ip/i2c/rtl/i2c_fsm.sv
@@ -494,7 +496,7 @@ module i2c_fsm (
       end
       // SetupDevAck: SDA is released, waiting for target to pull it low
       SetupDevAck : begin
-        if (tcount_q == 0) begin
+        if (tcount_q == 1) begin
           state_d = ClockPulseAck;
           load_tcount = 1'b1;
           tcount_sel = tClockPulse;

ParseResult:
UPD HdlStmCase@@state_q to state_q
    UPD HdlValueId@@Continue to Active

UPD HdlStmIf@@ to 
    UPD HdlOp@@EQ to EQ
        UPD HdlValueInt@@0 to 1


CommitId: 57f926bed17ce0c265e4b23535613238160c8afe
[i2c, rtl] Various FSM fixes and improvements
--- a/hw/ip/i2c/rtl/i2c_fsm.sv
+++ b/hw/ip/i2c/rtl/i2c_fsm.sv
@@ -502,7 +504,7 @@ module i2c_fsm (
       end
       // ClockPulseAck: SCL is released
       ClockPulseAck : begin
-        if (tcount_q == 0) begin
+        if (tcount_q == 1) begin
           state_d = HoldDevAck;
           load_tcount = 1'b1;
           tcount_sel = tHoldBit;

ParseResult:
UPD HdlStmCase@@state_q to state_q
    UPD HdlValueId@@Continue to Active

UPD HdlStmIf@@ to 
    UPD HdlOp@@EQ to EQ
        UPD HdlValueInt@@0 to 1


CommitId: 57f926bed17ce0c265e4b23535613238160c8afe
[i2c, rtl] Various FSM fixes and improvements
--- a/hw/ip/i2c/rtl/i2c_fsm.sv
+++ b/hw/ip/i2c/rtl/i2c_fsm.sv
@@ -510,7 +512,7 @@ module i2c_fsm (
       end
       // HoldDevAck: SCL is pulled low
       HoldDevAck : begin
-        if (tcount_q == 0) begin
+        if (tcount_q == 1) begin
           if (fmt_flag_stop_after_i) begin
             state_d = SetupStop;
             load_tcount = 1'b1;

ParseResult:
UPD HdlStmCase@@state_q to state_q
    UPD HdlValueId@@Continue to Active

UPD HdlStmIf@@ to 
    UPD HdlOp@@EQ to EQ
        UPD HdlValueInt@@0 to 1


CommitId: 57f926bed17ce0c265e4b23535613238160c8afe
[i2c, rtl] Various FSM fixes and improvements
--- a/hw/ip/i2c/rtl/i2c_fsm.sv
+++ b/hw/ip/i2c/rtl/i2c_fsm.sv
@@ -525,7 +527,7 @@ module i2c_fsm (
 
       // ReadClockLow: SCL is pulled low, SDA stays low
       ReadClockLow : begin
-        if (tcount_q == 0) begin
+        if (tcount_q == 1) begin
           state_d = ReadSetupBit;
           load_tcount = 1'b1;
           tcount_sel = tSetupBit;

ParseResult:
UPD HdlStmCase@@state_q to state_q
    UPD HdlValueId@@Continue to Active

UPD HdlStmIf@@ to 
    UPD HdlOp@@EQ to EQ
        UPD HdlValueInt@@0 to 1


CommitId: 57f926bed17ce0c265e4b23535613238160c8afe
[i2c, rtl] Various FSM fixes and improvements
--- a/hw/ip/i2c/rtl/i2c_fsm.sv
+++ b/hw/ip/i2c/rtl/i2c_fsm.sv
@@ -533,7 +535,7 @@ module i2c_fsm (
       end
       // ReadSetupBit: Shift indexed bit onto SDA, SCL stays low
       ReadSetupBit : begin
-        if (tcount_q == 0) begin
+        if (tcount_q == 1) begin
           state_d = ReadClockPulse;
           load_tcount = 1'b1;
           tcount_sel = tClockPulse;

ParseResult:
UPD HdlStmCase@@state_q to state_q
    UPD HdlValueId@@Continue to Active

UPD HdlStmIf@@ to 
    UPD HdlOp@@EQ to EQ
        UPD HdlValueInt@@0 to 1


CommitId: 57f926bed17ce0c265e4b23535613238160c8afe
[i2c, rtl] Various FSM fixes and improvements
--- a/hw/ip/i2c/rtl/i2c_fsm.sv
+++ b/hw/ip/i2c/rtl/i2c_fsm.sv
@@ -541,7 +543,7 @@ module i2c_fsm (
       end
       // ReadClockPulse: SCL is released, the indexed bit value is read off SDA
       ReadClockPulse : begin
-        if (tcount_q == 0) begin
+        if (tcount_q == 1) begin
           state_d = ReadHoldBit;
           load_tcount = 1'b1;
           tcount_sel = tHoldBit;

ParseResult:
UPD HdlStmCase@@state_q to state_q
    UPD HdlValueId@@Continue to Active

UPD HdlStmIf@@ to 
    UPD HdlOp@@EQ to EQ
        UPD HdlValueInt@@0 to 1


CommitId: 57f926bed17ce0c265e4b23535613238160c8afe
[i2c, rtl] Various FSM fixes and improvements
--- a/hw/ip/i2c/rtl/i2c_fsm.sv
+++ b/hw/ip/i2c/rtl/i2c_fsm.sv
@@ -550,7 +552,7 @@ module i2c_fsm (
       end
       // ReadHoldBit: SCL is pulled low
       ReadHoldBit : begin
-        if (tcount_q == 0) begin
+        if (tcount_q == 1) begin
           load_tcount = 1'b1;
           tcount_sel = tClockLow;
           if (bit_index == 0) begin

ParseResult:
UPD HdlStmCase@@state_q to state_q
    UPD HdlValueId@@Continue to Active

UPD HdlStmIf@@ to 
    UPD HdlOp@@EQ to EQ
        UPD HdlValueInt@@0 to 1


CommitId: 57f926bed17ce0c265e4b23535613238160c8afe
[i2c, rtl] Various FSM fixes and improvements
--- a/hw/ip/i2c/rtl/i2c_fsm.sv
+++ b/hw/ip/i2c/rtl/i2c_fsm.sv
@@ -566,7 +568,7 @@ module i2c_fsm (
 
       // HostClockLowAck: SCL and SDA are pulled low
       HostClockLowAck : begin
-        if (tcount_q == 0) begin
+        if (tcount_q == 1) begin
           state_d = HostSetupBitAck;
           load_tcount = 1'b1;
           tcount_sel = tSetupBit;

ParseResult:
UPD HdlStmCase@@state_q to state_q
    UPD HdlValueId@@Continue to Active

UPD HdlStmIf@@ to 
    UPD HdlOp@@EQ to EQ
        UPD HdlValueInt@@0 to 1


CommitId: 57f926bed17ce0c265e4b23535613238160c8afe
[i2c, rtl] Various FSM fixes and improvements
--- a/hw/ip/i2c/rtl/i2c_fsm.sv
+++ b/hw/ip/i2c/rtl/i2c_fsm.sv
@@ -574,7 +576,7 @@ module i2c_fsm (
       end
       // HostSetupBitAck: Shift Ack/Nack bit onto SDA
       HostSetupBitAck : begin
-        if (tcount_q == 0) begin
+        if (tcount_q == 1) begin
           state_d = HostClockPulseAck;
           load_tcount = 1'b1;
           tcount_sel = tClockPulse;

ParseResult:
UPD HdlStmCase@@state_q to state_q
    UPD HdlValueId@@Continue to Active

UPD HdlStmIf@@ to 
    UPD HdlOp@@EQ to EQ
        UPD HdlValueInt@@0 to 1


CommitId: 57f926bed17ce0c265e4b23535613238160c8afe
[i2c, rtl] Various FSM fixes and improvements
--- a/hw/ip/i2c/rtl/i2c_fsm.sv
+++ b/hw/ip/i2c/rtl/i2c_fsm.sv
@@ -582,7 +584,7 @@ module i2c_fsm (
       end
       // HostClockPulseAck: SCL is released
       HostClockPulseAck : begin
-        if (tcount_q == 0) begin
+        if (tcount_q == 1) begin
           state_d = HostHoldBitAck;
           load_tcount = 1'b1;
           tcount_sel = tHoldBit;

ParseResult:
UPD HdlStmCase@@state_q to state_q
    UPD HdlValueId@@Continue to Active

UPD HdlStmIf@@ to 
    UPD HdlOp@@EQ to EQ
        UPD HdlValueInt@@0 to 1


CommitId: 57f926bed17ce0c265e4b23535613238160c8afe
[i2c, rtl] Various FSM fixes and improvements
--- a/hw/ip/i2c/rtl/i2c_fsm.sv
+++ b/hw/ip/i2c/rtl/i2c_fsm.sv
@@ -590,8 +592,8 @@ module i2c_fsm (
       end
       // HostHoldBitAck: SCL is pulled low
       HostHoldBitAck : begin
-        if (tcount_q == 0) begin
-          if (byte_index == 0) begin
+        if (tcount_q == 1) begin
+          if (byte_index == 1) begin
             if (fmt_flag_stop_after_i) begin
               state_d = SetupStop;
               load_tcount = 1'b1;

ParseResult:
UPD HdlStmCase@@state_q to state_q
    UPD HdlValueId@@Continue to Active

UPD HdlStmIf@@ to 
    UPD HdlOp@@EQ to EQ
        UPD HdlValueInt@@0 to 1

UPD HdlStmIf@@ to 
    UPD HdlOp@@EQ to EQ
        UPD HdlValueInt@@0 to 1


CommitId: 57f926bed17ce0c265e4b23535613238160c8afe
[i2c, rtl] Various FSM fixes and improvements
--- a/hw/ip/i2c/rtl/i2c_fsm.sv
+++ b/hw/ip/i2c/rtl/i2c_fsm.sv
@@ -612,7 +614,7 @@ module i2c_fsm (
 
       // SetupStop: SDA is pulled low, SCL is released
       SetupStop : begin
-        if (tcount_q == 0) begin
+        if (tcount_q == 1) begin
           state_d = HoldStop;
           load_tcount = 1'b1;
           tcount_sel = tHoldStop;

ParseResult:
UPD HdlStmCase@@state_q to state_q
    UPD HdlValueId@@Continue to Active

UPD HdlStmIf@@ to 
    UPD HdlOp@@EQ to EQ
        UPD HdlValueInt@@0 to 1


CommitId: 57f926bed17ce0c265e4b23535613238160c8afe
[i2c, rtl] Various FSM fixes and improvements
--- a/hw/ip/i2c/rtl/i2c_fsm.sv
+++ b/hw/ip/i2c/rtl/i2c_fsm.sv
@@ -620,8 +622,8 @@ module i2c_fsm (
       end
       // HoldStop: SDA and SCL are released
       HoldStop : begin
-        if (tcount_q == 0) begin
-           if (!host_enable_i) begin
+        if (tcount_q == 1) begin
+          if (!host_enable_i) begin
              state_d = Idle;
              load_tcount = 1'b1;
              tcount_sel = tNoDelay;

ParseResult:
UPD HdlStmCase@@state_q to state_q
    UPD HdlValueId@@Continue to Active

UPD HdlStmIf@@ to 
    UPD HdlOp@@EQ to EQ
        UPD HdlValueInt@@0 to 1


CommitId: 57f926bed17ce0c265e4b23535613238160c8afe
[i2c, rtl] Various FSM fixes and improvements
--- a/hw/ip/i2c/rtl/i2c_fsm.sv
+++ b/hw/ip/i2c/rtl/i2c_fsm.sv
@@ -633,8 +635,8 @@ module i2c_fsm (
         end
       end
 
-      // Continue: continue while keeping SCL low
-      Continue : begin
+      // Active: Hold SCL low
+      Active : begin
         if (fmt_flag_read_bytes_i) begin
           byte_clr = 1'b1;
           state_d = ReadClockLow;

ParseResult:
UPD HdlStmCase@@state_q to state_q
    UPD HdlValueId@@Continue to Active

UPD HdlStmIf@@ to 
    UPD HdlOp@@EQ to EQ
        UPD HdlValueInt@@0 to 1


CommitId: 57f926bed17ce0c265e4b23535613238160c8afe
[i2c, rtl] Various FSM fixes and improvements
--- a/hw/ip/i2c/rtl/i2c_fsm.sv
+++ b/hw/ip/i2c/rtl/i2c_fsm.sv
@@ -657,12 +659,12 @@ module i2c_fsm (
           state_d = SetupStop;
           load_tcount = 1'b1;
           tcount_sel = tSetupStop;
-        end else if (!fmt_fifo_rvalid_i) begin
+        end else if (fmt_fifo_depth_i == 1 && !fmt_fifo_wvalid_i) begin
           state_d = Idle;
           load_tcount = 1'b1;
           tcount_sel = tNoDelay;
         end else begin
-          state_d = Continue;
+          state_d = Active;
           load_tcount = 1'b1;
           tcount_sel = tNoDelay;
         end
ParseResult:
UPD HdlStmCase@@state_q to state_q
    UPD HdlValueId@@Continue to Active

UPD HdlStmIf@@ to 
    INS HdlOp@@AND_LOG to 
    UPD HdlOp@@AND_LOG to AND_LOG
        INS list@@ops to AND_LOG
        INS HdlOp@@EQ to ops
        HdlOp: EQ
            list: ops
                HdlValueId: fmt_fifo_depth_i
                HdlValueInt: 1

UPD HdlStmIf@@ to 
    MOV HdlOp@@NEG_LOG to 
    HdlOp: NEG_LOG
        list: ops
            HdlValueId: fmt_fifo_rvalid_i
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@Continue to Active
    UPD HdlOp@@NEG_LOG to NEG_LOG
        UPD HdlValueId@@fmt_fifo_rvalid_i to fmt_fifo_wvalid_i


CommitId: b35a340e8939d51bac1842b5edd72782286a8c04
[flash] Design updates and clean-up
--- a/hw/ip/flash_ctrl/rtl/flash_phy_rd_buffers.sv
+++ b/hw/ip/flash_ctrl/rtl/flash_phy_rd_buffers.sv
@@ -25,7 +25,7 @@ module flash_phy_rd_buffers import flash_phy_pkg::*; (
   input alloc_i,
   input update_i,
   input wipe_i,
-  input [PrimFlashAddrW-1:0] addr_i,
+  input [BankAddrW-1:0] addr_i,
   input part_i,
   input [DataWidth-1:0] data_i,
   output rd_buf_t out_o
ParseResult:
UPD HdlIdDef@@addr_i to addr_i
    UPD HdlOp@@PARAMETRIZATION to PARAMETRIZATION
        UPD HdlOp@@DOWNTO to DOWNTO
            UPD HdlOp@@SUB to SUB
                UPD HdlValueId@@PrimFlashAddrW to BankAddrW


CommitId: 5649c2a7681569cad34ed269e7d7ac81f051a479
[top] Ast updates
--- a/hw/ip/flash_ctrl/rtl/flash_phy.sv
+++ b/hw/ip/flash_ctrl/rtl/flash_phy.sv
@@ -21,7 +21,7 @@ module flash_phy import flash_ctrl_pkg::*; (
   output logic host_rderr_o,
   input flash_req_t flash_ctrl_i,
   output flash_rsp_t flash_ctrl_o,
-  input scanmode_i,
+  input lc_ctrl_pkg::lc_tx_t scanmode_i,
   input scan_en_i,
   input scan_rst_ni,
   input flash_power_ready_h_i,
ParseResult:
UPD HdlIdDef@@scanmode_i to scanmode_i
    INS HdlOp@@DOUBLE_COLON to scanmode_i
    UPD HdlOp@@DOUBLE_COLON to DOUBLE_COLON
        INS list@@ops to DOUBLE_COLON
        INS HdlValueId@@lc_tx_t to ops

UPD HdlIdDef@@scanmode_i to scanmode_i
    UPD HdlValueId@@wire to lc_ctrl_pkg
    MOV HdlValueId@@wire to scanmode_i
    HdlValueId: wire


CommitId: 3519dd2a391a001bb2dae2ed2bc37789b59b97ad
[csrng/rtl] instantiate and generate bug fixes
--- a/hw/ip/csrng/rtl/csrng_core.sv
+++ b/hw/ip/csrng/rtl/csrng_core.sv
@@ -101,6 +101,7 @@ module csrng_core import csrng_pkg::*; #(
   logic [Cmd-1:0]         cmd_result_ccmd;
   logic                   cmd_result_ack_rdy;
   logic [StateId-1:0]     cmd_result_inst_id;
+  logic                   cmd_result_glast;
   logic                   cmd_result_fips;
   logic [SeedLen-1:0]     cmd_result_adata;
   logic [KeyLen-1:0]      cmd_result_key;

ParseResult:
INS HdlIdDef@@cmd_result_glast to objs
HdlIdDef: cmd_result_glast
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL


CommitId: 3519dd2a391a001bb2dae2ed2bc37789b59b97ad
[csrng/rtl] instantiate and generate bug fixes
--- a/hw/ip/csrng/rtl/csrng_core.sv
+++ b/hw/ip/csrng/rtl/csrng_core.sv
@@ -114,6 +115,7 @@ module csrng_core import csrng_pkg::*; #(
   logic                   gen_result_wr_req;
   logic                   gen_result_ack_sts;
   logic                   gen_result_ack_rdy;
+  logic [Cmd-1:0]         gen_result_ccmd;
   logic [StateId-1:0]     gen_result_inst_id;
   logic                   gen_result_fips;
   logic [KeyLen-1:0]      gen_result_key;

ParseResult:
INS HdlIdDef@@gen_result_ccmd to objs
HdlIdDef: gen_result_ccmd
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlOp: SUB
                        list: ops
                            HdlValueId: Cmd
                            HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: INTERNAL


CommitId: 3519dd2a391a001bb2dae2ed2bc37789b59b97ad
[csrng/rtl] instantiate and generate bug fixes
--- a/hw/ip/csrng/rtl/csrng_core.sv
+++ b/hw/ip/csrng/rtl/csrng_core.sv
@@ -183,6 +185,7 @@ module csrng_core import csrng_pkg::*; #(
   logic                   state_db_rd_fips;
   logic [2:0]             acmd_hold;
   logic [3:0]             shid;
+  logic                   gen_last;
   logic                   flag0;
 
   // blk encrypt arbiter

ParseResult:
INS HdlIdDef@@gen_last to objs
HdlIdDef: gen_last
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL


CommitId: 3519dd2a391a001bb2dae2ed2bc37789b59b97ad
[csrng/rtl] instantiate and generate bug fixes
--- a/hw/ip/csrng/rtl/csrng_core.sv
+++ b/hw/ip/csrng/rtl/csrng_core.sv
@@ -320,6 +323,7 @@ module csrng_core import csrng_pkg::*; #(
   // flops
   logic [2:0]  acmd_q, acmd_d;
   logic [3:0]  shid_q, shid_d;
+  logic        gen_last_q, gen_last_d;
   logic        flag0_q, flag0_d;
   logic        statedb_wr_select_q, statedb_wr_select_d;
   logic        genbits_stage_fips_sw_q, genbits_stage_fips_sw_d;

ParseResult:
INS HdlIdDef@@gen_last_q to objs
HdlIdDef: gen_last_q
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

INS HdlIdDef@@gen_last_d to objs
HdlIdDef: gen_last_d
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL


CommitId: 3519dd2a391a001bb2dae2ed2bc37789b59b97ad
[csrng/rtl] instantiate and generate bug fixes
--- a/hw/ip/csrng/rtl/csrng_core.sv
+++ b/hw/ip/csrng/rtl/csrng_core.sv
@@ -336,6 +340,7 @@ module csrng_core import csrng_pkg::*; #(
     if (!rst_ni) begin
       acmd_q  <= '0;
       shid_q  <= '0;
+      gen_last_q <= '0;
       flag0_q <= '0;
       statedb_wr_select_q <= '0;
       genbits_stage_fips_sw_q <= '0;

ParseResult:
INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: gen_last_q


CommitId: 3519dd2a391a001bb2dae2ed2bc37789b59b97ad
[csrng/rtl] instantiate and generate bug fixes
--- a/hw/ip/csrng/rtl/csrng_core.sv
+++ b/hw/ip/csrng/rtl/csrng_core.sv
@@ -350,6 +355,7 @@ module csrng_core import csrng_pkg::*; #(
     end else begin
       acmd_q  <= acmd_d;
       shid_q  <= shid_d;
+      gen_last_q <= gen_last_d;
       flag0_q <= flag0_d;
       statedb_wr_select_q <= statedb_wr_select_d;
       genbits_stage_fips_sw_q <= genbits_stage_fips_sw_d;

ParseResult:
INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueId: gen_last_d
    HdlValueId: gen_last_q


CommitId: 3519dd2a391a001bb2dae2ed2bc37789b59b97ad
[csrng/rtl] instantiate and generate bug fixes
--- a/hw/ip/csrng/rtl/csrng_core.sv
+++ b/hw/ip/csrng/rtl/csrng_core.sv
@@ -817,6 +823,7 @@ module csrng_core import csrng_pkg::*; #(
   assign acmd_hold = acmd_sop ? acmd_bus[2:0] : acmd_q;
   assign flag0 = acmd_bus[8];
   assign shid = acmd_bus[15:12];
+  assign gen_last = acmd_bus[16];
 
   assign acmd_d =
          (!cs_enable) ? '0 :

ParseResult:
INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: INDEX
        list: ops
            HdlValueId: acmd_bus
            HdlValueInt: 16
    HdlValueId: gen_last


CommitId: 3519dd2a391a001bb2dae2ed2bc37789b59b97ad
[csrng/rtl] instantiate and generate bug fixes
--- a/hw/ip/csrng/rtl/csrng_core.sv
+++ b/hw/ip/csrng/rtl/csrng_core.sv
@@ -829,6 +836,11 @@ module csrng_core import csrng_pkg::*; #(
          state_db_reg_rd_id_pulse ? state_db_reg_rd_id :
          shid_q;
 
+  assign gen_last_d =
+         (!cs_enable) ? '0 :
+         acmd_sop ? gen_last :
+         gen_last_q;
+
   assign flag0_d =
          (!cs_enable) ? '0 :
          acmd_sop ? flag0 :

ParseResult:
INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: TERNARY
        list: ops
            HdlOp: NEG_LOG
                list: ops
                    HdlValueId: cs_enable
            HdlValueInt: 0
            HdlOp: TERNARY
                list: ops
                    HdlValueId: acmd_sop
                    HdlValueId: gen_last
                    HdlValueId: gen_last_q
    HdlValueId: gen_last_d


CommitId: 3519dd2a391a001bb2dae2ed2bc37789b59b97ad
[csrng/rtl] instantiate and generate bug fixes
--- a/hw/ip/csrng/rtl/csrng_core.sv
+++ b/hw/ip/csrng/rtl/csrng_core.sv
@@ -974,8 +986,8 @@ module csrng_core import csrng_pkg::*; #(
   // muxes for statedb block inputs
   assign state_db_wr_req = gen_blk_select ? gen_result_wr_req : cmd_result_wr_req;
   assign state_db_wr_inst_id = gen_blk_select ? gen_result_inst_id : cmd_result_inst_id;
-  assign state_db_wr_fips = cmd_result_fips;
-  assign state_db_wr_ccmd = cmd_result_ccmd;
+  assign state_db_wr_fips = gen_blk_select ? gen_result_fips : cmd_result_fips;
+  assign state_db_wr_ccmd = gen_blk_select ?  gen_result_ccmd : cmd_result_ccmd;
   assign state_db_wr_key = gen_blk_select ? gen_result_key : cmd_result_key;
   assign state_db_wr_v = gen_blk_select ? gen_result_v : cmd_result_v;
   assign state_db_wr_rc = gen_blk_select ? gen_result_rc : cmd_result_rc;

ParseResult:
INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: TERNARY
        list: ops
            HdlValueId: gen_blk_select
            HdlValueId: gen_result_fips
            HdlValueId: cmd_result_fips
    HdlValueId: state_db_wr_fips

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: TERNARY
        list: ops
            HdlValueId: gen_blk_select
            HdlValueId: gen_result_ccmd
            HdlValueId: cmd_result_ccmd
    HdlValueId: state_db_wr_ccmd

DEL HdlStmAssign@@ from objs
HdlStmAssign
    HdlValueId: cmd_result_fips
    HdlValueId: state_db_wr_fips

DEL HdlStmAssign@@ from objs
HdlStmAssign
    HdlValueId: cmd_result_ccmd
    HdlValueId: state_db_wr_ccmd


CommitId: 548810e191222d071171a2db8499bc4dbf2ccea5
[prim] Avoid an apparent combinatorial loop in prim_secded_*_dec.sv
--- a/hw/ip/prim/rtl/prim_secded_72_64_dec.sv
+++ b/hw/ip/prim/rtl/prim_secded_72_64_dec.sv
@@ -12,6 +12,7 @@ module prim_secded_72_64_dec (
   output logic [1:0] err_o
 );
 
+  logic single_error;
 
   // Syndrome calculation
   assign syndrome_o[0] = ^(in & 72'h019B000000001FFFFF);

ParseResult:
INS HdlIdDef@@single_error to objs
HdlIdDef: single_error
    HdlDirection: INTERNAL


CommitId: 548810e191222d071171a2db8499bc4dbf2ccea5
[prim] Avoid an apparent combinatorial loop in prim_secded_*_dec.sv
--- a/hw/ip/prim/rtl/prim_secded_72_64_dec.sv
+++ b/hw/ip/prim/rtl/prim_secded_72_64_dec.sv
@@ -90,7 +91,8 @@ module prim_secded_72_64_dec (
   assign d_o[63] = (syndrome_o == 8'hd5) ^ in[63];
 
   // err_o calc. bit0: single error, bit1: double error
-  assign err_o[0] = ^syndrome_o;
-  assign err_o[1] = ~err_o[0] & (|syndrome_o);
+  assign single_error = ^syndrome_o;
+  assign err_o[0] = single_error;
+  assign err_o[1] = ~single_error & (|syndrome_o);
 
 endmodule : prim_secded_72_64_dec
ParseResult:
INS HdlStmAssign@@ to objs

UPD HdlStmAssign@@ to 
    MOV HdlOp@@XOR_UNARY to 
    HdlOp: XOR_UNARY
        list: ops
            HdlValueId: syndrome_o

UPD HdlStmAssign@@ to 
    INS HdlValueId@@single_error to 

UPD HdlStmAssign@@ to 
    INS HdlValueId@@single_error to 

UPD HdlStmAssign@@ to 
    UPD HdlOp@@AND to AND
        UPD HdlOp@@NEG to NEG
            UPD HdlOp@@INDEX to INDEX
                MOV list@@ops to INDEX
                list: ops
                    HdlValueId: err_o
                    HdlValueInt: 0
                UPD HdlValueId@@err_o to single_error
                DEL HdlValueInt@@0 from ops
            DEL HdlOp@@INDEX from ops
            DEL list@@ops from NEG


CommitId: c8ea251bc0ca31c452d18ea4659719293f2a7ac1
[ast] ast changes to enable top_earlgrey
--- a/hw/top_earlgrey/ip/ast/rtl/gen_pok.sv
+++ b/hw/top_earlgrey/ip/ast/rtl/gen_pok.sv
@@ -21,21 +21,21 @@ module gen_pok #(
 );
 // synopsys translate_off
 // Behavioral Model
-logic supp_a; 
+logic supp_a;
+
 
 // The initial is needed to clear the X of the delays at the start
 // Also to force a power-up effect at the bgining.
-logic init_start; 
+logic init_start;
 
 initial begin
    init_start = 1'b1; #1;
    init_start = 1'b0;
 end
 
-always_ff @( init_start, 
-	     posedge gen_supp_a, negedge gen_supp_a ) begin
+always_ff @( init_start, posedge gen_supp_a, negedge gen_supp_a ) begin
     if ( init_start )
-       supp_a = 1'b0;
+       supp_a <= 1'b0;
     else if ( !init_start && gen_supp_a )
        supp_a <= #(POK_RDLY) gen_supp_a;
     else if ( !init_start && !gen_supp_a )
ParseResult:
INS HdlStmAssign@@if_true to 

UPD HdlStmAssign@@if_true to if_true
    INS HdlValueInt@@0 to if_true

UPD HdlStmIf@@ to 
    UPD HdlOp@@ASSIGN to ASSIGN
        MOV HdlValueId@@supp_a to ops
        HdlValueId: supp_a
        DEL HdlValueInt@@0 from ops
        DEL list@@ops from ASSIGN
    DEL HdlOp@@ASSIGN from 


CommitId: 1b5fa9f1ebf0a9520ef6ea6faf1f1a2397a349c1
[verible/style] This corrects several style linter warnings/errors
--- a/hw/ip/usbuart/rtl/usb_serial_ctrl_ep.sv
+++ b/hw/ip/usbuart/rtl/usb_serial_ctrl_ep.sv
@@ -3,9 +3,9 @@
 // -- conform to lowRISC coding style
 
 module usb_serial_ctrl_ep  #(
-  parameter MaxPktSizeByte = 32,
+  parameter int unsigned MaxPktSizeByte = 32,
   // localparam below here
-  parameter PktW = $clog2(MaxPktSizeByte)
+  parameter int unsigned PktW = $clog2(MaxPktSizeByte)
 ) (
   input              clk_i,
   input              rst_ni,
ParseResult:
UPD HdlIdDef@@MaxPktSizeByte to MaxPktSizeByte
    INS HdlOp@@PARAMETRIZATION to MaxPktSizeByte
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: int
            HdlOp: MAP_ASSOCIATION
                list: ops
                    HdlValueId: signed

UPD HdlIdDef@@PktW to PktW
    INS HdlOp@@PARAMETRIZATION to PktW
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: int
            HdlOp: MAP_ASSOCIATION
                list: ops
                    HdlValueId: signed


CommitId: 2de46f6dd9a3db8d3425364c0b834d63d0b7a3b6
[entropy_src/rtl] fixes to address issue #3511
--- a/hw/ip/entropy_src/rtl/entropy_src_bucket_ht.sv
+++ b/hw/ip/entropy_src/rtl/entropy_src_bucket_ht.sv
@@ -6,11 +6,11 @@
 //
 
 module entropy_src_bucket_ht #(
-  parameter int unsigned RegWidth = 16,
-  parameter int unsigned RngBusWidth = 4
+  parameter int RegWidth = 16,
+  parameter int RngBusWidth = 4
 ) (
-  input                  clk_i,
-  input                  rst_ni,
+  input logic clk_i,
+  input logic rst_ni,
 
    // ins req interface
   input logic [RngBusWidth-1:0] entropy_bit_i,

ParseResult:
UPD HdlIdDef@@RegWidth to RegWidth
    UPD HdlOp@@PARAMETRIZATION to PARAMETRIZATION
        MOV HdlValueId@@int to ops
        HdlValueId: int
        DEL HdlOp@@MAP_ASSOCIATION from ops
        HdlOp: MAP_ASSOCIATION
            list: ops
                HdlValueId: signed
        DEL list@@ops from PARAMETRIZATION
    DEL HdlOp@@PARAMETRIZATION from RegWidth

UPD HdlIdDef@@RngBusWidth to RngBusWidth
    UPD HdlOp@@PARAMETRIZATION to PARAMETRIZATION
        MOV HdlValueId@@int to ops
        HdlValueId: int
        DEL HdlOp@@MAP_ASSOCIATION from ops
        HdlOp: MAP_ASSOCIATION
            list: ops
                HdlValueId: signed
        DEL list@@ops from PARAMETRIZATION
    DEL HdlOp@@PARAMETRIZATION from RngBusWidth

UPD HdlIdDef@@clk_i to clk_i
    INS HdlOp@@PARAMETRIZATION to clk_i
    UPD HdlOp@@PARAMETRIZATION to PARAMETRIZATION
        INS list@@ops to PARAMETRIZATION

UPD HdlIdDef@@clk_i to clk_i
    UPD HdlValueId@@wire to logic
    MOV HdlValueId@@wire to clk_i
    HdlValueId: wire

UPD HdlIdDef@@rst_ni to rst_ni
    DEL HdlValueId@@wire from rst_ni


CommitId: 2de46f6dd9a3db8d3425364c0b834d63d0b7a3b6
[entropy_src/rtl] fixes to address issue #3511
--- a/hw/ip/entropy_src/rtl/entropy_src_bucket_ht.sv
+++ b/hw/ip/entropy_src/rtl/entropy_src_bucket_ht.sv
@@ -18,31 +18,26 @@ module entropy_src_bucket_ht #(
   input logic                   clear_i,
   input logic                   active_i,
   input logic [RegWidth-1:0]    thresh_i,
-  input logic [RegWidth-1:0]    window_i,
+  input logic                   window_wrap_pulse_i,
   output logic [RegWidth-1:0]   test_cnt_o,
-  output logic                  test_done_pulse_o,
   output logic                  test_fail_pulse_o
 );
 
   localparam int NUM_BINS = 2**RngBusWidth;
 
   // signals
-  logic        window_cntr_wrap;
   logic [NUM_BINS-1:0] bin_incr;
   logic [NUM_BINS-1:0] bin_cnt_exceeds_thresh;
 
   // flops
-  logic [RegWidth-1:0] window_cntr_q, window_cntr_d;
   logic [RegWidth-1:0] test_cnt_q, test_cnt_d;
   logic [RegWidth-1:0] bin_cntr_q[NUM_BINS], bin_cntr_d[NUM_BINS];
 
   always_ff @(posedge clk_i or negedge rst_ni)
     if (!rst_ni) begin
-      window_cntr_q    <= '0;
       test_cnt_q       <= '0;
       bin_cntr_q       <= '{default:0};
     end else begin
-      window_cntr_q    <= window_cntr_d;
       test_cnt_q       <= test_cnt_d;
       bin_cntr_q       <= bin_cntr_d;
     end

ParseResult:
MOV HdlIdDef@@test_cnt_o to ports
HdlIdDef: test_cnt_o
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlOp: SUB
                        list: ops
                            HdlValueId: RegWidth
                            HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: OUT

UPD HdlIdDef@@test_done_pulse_o to window_wrap_pulse_i

UPD HdlIdDef@@window_cntr_wrap to window_cntr_wrap
    MOV HdlOp@@PARAMETRIZATION to window_cntr_wrap
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    DEL HdlDirection@@INTERNAL from window_cntr_wrap

UPD HdlIdDef@@test_done_pulse_o to test_done_pulse_o
    UPD HdlDirection@@OUT to IN

DEL HdlIdDef@@window_i from ports
HdlIdDef: window_i
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlOp: SUB
                        list: ops
                            HdlValueId: RegWidth
                            HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: IN

DEL HdlIdDef@@window_cntr_wrap from objs

DEL HdlIdDef@@window_cntr_q from objs
HdlIdDef: window_cntr_q
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlOp: SUB
                        list: ops
                            HdlValueId: RegWidth
                            HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: INTERNAL

DEL HdlIdDef@@window_cntr_d from objs
HdlIdDef: window_cntr_d
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlOp: SUB
                        list: ops
                            HdlValueId: RegWidth
                            HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: INTERNAL

DEL HdlStmAssign@@ from body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: window_cntr_q

DEL HdlStmAssign@@ from body
HdlStmAssign
    HdlValueId: window_cntr_d
    HdlValueId: window_cntr_q


CommitId: 2de46f6dd9a3db8d3425364c0b834d63d0b7a3b6
[entropy_src/rtl] fixes to address issue #3511
--- a/hw/ip/entropy_src/rtl/entropy_src_bucket_ht.sv
+++ b/hw/ip/entropy_src/rtl/entropy_src_bucket_ht.sv
@@ -63,33 +58,21 @@ module entropy_src_bucket_ht #(
     // set the bin incrementer if the symbol matches that bin
     assign bin_incr[i] = entropy_bit_vld_i && (entropy_bit_i == i);
     // use the bin incrementer to increase the bin total count
-    assign bin_cntr_d[i] = window_cntr_wrap ? '0 :
+    assign bin_cntr_d[i] = window_wrap_pulse_i ? '0 :
            ((active_i && bin_incr[i]) ? (bin_cntr_q[i]+1) : bin_cntr_q[i]);
     // use the bin incrementer to increase the bin total count
     assign bin_cnt_exceeds_thresh[i] = (bin_cntr_q[i] > thresh_i);
   end : gen_symbol_match
 
-
-  // Window wrap condition
-  assign window_cntr_wrap = (window_cntr_q == window_i);
-
-  // Window counter
-  assign window_cntr_d =
-         clear_i ? '0 :
-         window_cntr_wrap ? '0  :
-         entropy_bit_vld_i ? (window_cntr_q+1) :
-         window_cntr_q;
-
   // Test event counter
   assign test_cnt_d =
          (!active_i || clear_i) ? '0 :
-         window_cntr_wrap ? '0 :
+         window_wrap_pulse_i ? '0 :
          entropy_bit_vld_i && (|bin_cnt_exceeds_thresh) ? (test_cnt_q+1) :
          test_cnt_q;
 
   // the pulses will be only one clock in length
-  assign test_fail_pulse_o = active_i && window_cntr_wrap && (test_cnt_q > '0);
-  assign test_done_pulse_o = window_cntr_wrap;
+  assign test_fail_pulse_o = active_i && window_wrap_pulse_i && (test_cnt_q > '0);
   assign test_cnt_o = test_cnt_q;
 
 
ParseResult:
UPD HdlStmAssign@@ to 
    UPD HdlOp@@TERNARY to TERNARY
        UPD HdlOp@@TERNARY to TERNARY
            UPD HdlValueId@@window_cntr_wrap to window_wrap_pulse_i

UPD HdlStmAssign@@ to 
    UPD HdlOp@@AND_LOG to AND_LOG
        UPD HdlOp@@AND_LOG to AND_LOG
            UPD HdlValueId@@window_cntr_wrap to window_wrap_pulse_i

UPD HdlStmAssign@@ to 
    UPD HdlOp@@TERNARY to TERNARY
        UPD HdlValueId@@window_cntr_wrap to window_wrap_pulse_i

DEL HdlStmAssign@@ from objs
HdlStmAssign
    HdlOp: EQ
        list: ops
            HdlValueId: window_cntr_q
            HdlValueId: window_i
    HdlValueId: window_cntr_wrap

DEL HdlStmAssign@@ from objs
HdlStmAssign
    HdlOp: TERNARY
        list: ops
            HdlValueId: clear_i
            HdlValueInt: 0
            HdlOp: TERNARY
                list: ops
                    HdlValueId: window_cntr_wrap
                    HdlValueInt: 0
                    HdlOp: TERNARY
                        list: ops
                            HdlValueId: entropy_bit_vld_i
                            HdlOp: ADD
                                list: ops
                                    HdlValueId: window_cntr_q
                                    HdlValueInt: 1
                            HdlValueId: window_cntr_q
    HdlValueId: window_cntr_d

DEL HdlStmAssign@@ from objs
HdlStmAssign
    HdlValueId: window_cntr_wrap
    HdlValueId: test_done_pulse_o


CommitId: 4bee429d0160d74d3d2166193b1e8dbbae62d892
[clkmgr] Allow software to control clock stepdown
--- a/hw/ip/clkmgr/rtl/clkmgr_byp.sv
+++ b/hw/ip/clkmgr/rtl/clkmgr_byp.sv
@@ -10,7 +10,8 @@ module clkmgr_byp import clkmgr_pkg::*; import lc_ctrl_pkg::lc_tx_t; # (
   input                   clk_i,
   input                   rst_ni,
   input  lc_tx_t          en_i,
-  input  lc_tx_t          byp_req,
+  input  lc_tx_t          byp_req_i,
+  input  lc_tx_t          step_down_req_i,
   output lc_tx_t          ast_clk_byp_req_o,
   input  lc_tx_t          ast_clk_byp_ack_i,
   input  lc_tx_t          lc_clk_byp_req_i,

ParseResult:
UPD HdlIdDef@@byp_req to byp_req_i

INS HdlIdDef@@step_down_req_i to ports
HdlIdDef: step_down_req_i
    HdlValueId: lc_tx_t
    HdlDirection: IN


CommitId: 4bee429d0160d74d3d2166193b1e8dbbae62d892
[clkmgr] Allow software to control clock stepdown
--- a/hw/ip/clkmgr/rtl/clkmgr_byp.sv
+++ b/hw/ip/clkmgr/rtl/clkmgr_byp.sv
@@ -48,13 +49,20 @@ module clkmgr_byp import clkmgr_pkg::*; import lc_ctrl_pkg::lc_tx_t; # (
    .lc_en_o(ast_clk_byp_req_o)
   );
 
+  lc_tx_t ast_clk_byp_ack;
   prim_lc_sync u_rcv (
     .clk_i,
     .rst_ni,
     .lc_en_i(ast_clk_byp_ack_i),
-    .lc_en_o(step_down_req_o)
+    .lc_en_o(ast_clk_byp_ack)
   );
 
+  // if switch request came from software, let software dictate whether to step down
+  assign step_down_req_o =
+    lc_clk_byp_req_i == lc_ctrl_pkg::On ? ast_clk_byp_ack :
+    reg_clk_byp_req == lc_ctrl_pkg::On  ? ast_clk_byp_ack & step_down_req_i :
+                                          lc_ctrl_pkg::Off;
+
   // only ack the lc_ctrl if it made a request.
   prim_lc_sender u_send (
    .clk_i,
ParseResult:
INS HdlIdDef@@ast_clk_byp_ack to objs
HdlIdDef: ast_clk_byp_ack
    HdlDirection: INTERNAL

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: TERNARY
        list: ops
            HdlOp: EQ
                list: ops
                    HdlValueId: lc_clk_byp_req_i
                    HdlOp: DOUBLE_COLON
                        list: ops
                            HdlValueId: lc_ctrl_pkg
                            HdlValueId: On
            HdlValueId: ast_clk_byp_ack
            HdlOp: TERNARY
                list: ops
                    HdlOp: EQ
                        list: ops
                            HdlValueId: reg_clk_byp_req
                            HdlOp: DOUBLE_COLON
                                list: ops
                                    HdlValueId: lc_ctrl_pkg
                                    HdlValueId: On
                    HdlOp: AND
                        list: ops
                            HdlValueId: ast_clk_byp_ack
                            HdlValueId: step_down_req_i
                    HdlOp: DOUBLE_COLON
                        list: ops
                            HdlValueId: lc_ctrl_pkg
                            HdlValueId: Off
    HdlValueId: step_down_req_o


CommitId: 3776f5beb152ff954cf02d9ac0613ea3111ab275
[fpga] Add a clock buffer to the JTAG clock obtained from pinmux/padring
--- a/hw/top_earlgrey/rtl/top_earlgrey_nexysvideo.sv
+++ b/hw/top_earlgrey/rtl/top_earlgrey_nexysvideo.sv
@@ -140,7 +140,7 @@ module top_earlgrey_nexysvideo #(
   //////////////////////
 
   logic jtag_trst_n, jtag_srst_n;
-  logic jtag_tck, jtag_tms, jtag_tdi, jtag_tdo;
+  logic jtag_tck, jtag_tck_buf, jtag_tms, jtag_tdi, jtag_tdo;
 
   localparam int NumIOs = padctrl_reg_pkg::NMioPads +
                           padctrl_reg_pkg::NDioPads;

ParseResult:
INS HdlIdDef@@jtag_tck_buf to objs
HdlIdDef: jtag_tck_buf
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL


CommitId: 3ff4287a86b120d9effe1ae4c250a9e04b7f49fa
[csrng/rtl] internal state observed from TLUL register
--- a/hw/ip/csrng/rtl/csrng_core.sv
+++ b/hw/ip/csrng/rtl/csrng_core.sv
@@ -258,6 +258,11 @@ module csrng_core import csrng_pkg::*; #(
 
   logic [14:0]             hw_exception_sts;
   logic                    lc_hw_debug_not_on;
+  logic                    lc_hw_debug_on;
+  logic                    state_db_reg_rd_sel;
+  logic                    state_db_reg_rd_id_pulse;
+  logic [StateId-1:0]      state_db_reg_rd_id;
+  logic [31:0]             state_db_reg_rd_val;
 
   // flops
   logic [2:0]  acmd_q, acmd_d;

ParseResult:
INS HdlIdDef@@lc_hw_debug_on to objs
HdlIdDef: lc_hw_debug_on
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

INS HdlIdDef@@state_db_reg_rd_sel to objs
HdlIdDef: state_db_reg_rd_sel
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

INS HdlIdDef@@state_db_reg_rd_id_pulse to objs
HdlIdDef: state_db_reg_rd_id_pulse
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

INS HdlIdDef@@state_db_reg_rd_id to objs
HdlIdDef: state_db_reg_rd_id
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlOp: SUB
                        list: ops
                            HdlValueId: StateId
                            HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: INTERNAL

INS HdlIdDef@@state_db_reg_rd_val to objs
HdlIdDef: state_db_reg_rd_val
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 31
                    HdlValueInt: 0
    HdlDirection: INTERNAL


CommitId: 3ff4287a86b120d9effe1ae4c250a9e04b7f49fa
[csrng/rtl] internal state observed from TLUL register
--- a/hw/ip/csrng/rtl/csrng_core.sv
+++ b/hw/ip/csrng/rtl/csrng_core.sv
@@ -349,7 +354,7 @@ module csrng_core import csrng_pkg::*; #(
   );
 
   // set the interrupt sources
-  assign event_cs_fifo_err =
+  assign event_cs_fifo_err = cs_enable  && (
          (|cmd_stage_sfifo_cmd_err_sum) ||
          (|cmd_stage_sfifo_genbits_err_sum) ||
          (|ctr_drbg_cmd_sfifo_cmdreq_err) ||

ParseResult:
UPD HdlStmAssign@@ to 
    MOV HdlOp@@OR_LOG to 
    HdlOp: OR_LOG
        list: ops
            HdlOp: OR_LOG
                list: ops
                    HdlOp: OR_LOG
                        list: ops
                            HdlOp: OR_LOG
                                list: ops
                                    HdlOp: OR_LOG
                                        list: ops
                                            HdlOp: OR_LOG
                                                list: ops
                                                    HdlOp: OR_LOG
                                                        list: ops
                                                            HdlOp: OR_LOG
                                                                list: ops
                                                                    HdlOp: OR_LOG
                                                                        list: ops
                                                                            HdlOp: OR_LOG
                                                                                list: ops
                                                                                    HdlOp: OR_LOG
                                                                                        list: ops
                                                                                            HdlOp: OR_LOG
                                                                                                list: ops
                                                                                                    HdlOp: OR_LOG
                                                                                                        list: ops
                                                                                                            HdlOp: OR_LOG
                                                                                                                list: ops
                                                                                                                    HdlOp: OR_LOG
                                                                                                                        list: ops
                                                                                                                            HdlOp: OR_UNARY
                                                                                                                                list: ops
                                                                                                                                    HdlValueId: cmd_stage_sfifo_cmd_err_sum
                                                                                                                            HdlOp: OR_UNARY
                                                                                                                                list: ops
                                                                                                                                    HdlValueId: cmd_stage_sfifo_genbits_err_sum
                                                                                                                    HdlOp: OR_UNARY
                                                                                                                        list: ops
                                                                                                                            HdlValueId: ctr_drbg_cmd_sfifo_cmdreq_err
                                                                                                            HdlOp: OR_UNARY
                                                                                                                list: ops
                                                                                                                    HdlValueId: ctr_drbg_cmd_sfifo_rcstage_err
                                                                                                    HdlOp: OR_UNARY
                                                                                                        list: ops
                                                                                                            HdlValueId: ctr_drbg_cmd_sfifo_keyvrc_err
                                                                                            HdlOp: OR_UNARY
                                                                                                list: ops
                                                                                                    HdlValueId: ctr_drbg_upd_sfifo_updreq_err
                                                                                    HdlOp: OR_UNARY
                                                                                        list: ops
                                                                                            HdlValueId: ctr_drbg_upd_sfifo_bencreq_err
                                                                            HdlOp: OR_UNARY
                                                                                list: ops
                                                                                    HdlValueId: ctr_drbg_upd_sfifo_bencack_err
                                                                    HdlOp: OR_UNARY
                                                                        list: ops
                                                                            HdlValueId: ctr_drbg_upd_sfifo_pdata_err
                                                            HdlOp: OR_UNARY
                                                                list: ops
                                                                    HdlValueId: ctr_drbg_upd_sfifo_final_err
                                                    HdlOp: OR_UNARY
                                                        list: ops
                                                            HdlValueId: ctr_drbg_gen_sfifo_gbencack_err
                                            HdlOp: OR_UNARY
                                                list: ops
                                                    HdlValueId: ctr_drbg_gen_sfifo_grcstage_err
                                    HdlOp: OR_UNARY
                                        list: ops
                                            HdlValueId: ctr_drbg_gen_sfifo_ggenreq_err
                            HdlOp: OR_UNARY
                                list: ops
                                    HdlValueId: ctr_drbg_gen_sfifo_gadstage_err
                    HdlOp: OR_UNARY
                        list: ops
                            HdlValueId: ctr_drbg_gen_sfifo_ggenbits_err
            HdlOp: OR_UNARY
                list: ops
                    HdlValueId: block_encrypt_sfifo_blkenc_err


CommitId: 3ff4287a86b120d9effe1ae4c250a9e04b7f49fa
[csrng/rtl] internal state observed from TLUL register
--- a/hw/ip/csrng/rtl/csrng_core.sv
+++ b/hw/ip/csrng/rtl/csrng_core.sv
@@ -365,7 +370,7 @@ module csrng_core import csrng_pkg::*; #(
          (|ctr_drbg_gen_sfifo_ggenreq_err) ||
          (|ctr_drbg_gen_sfifo_gadstage_err) ||
          (|ctr_drbg_gen_sfifo_ggenbits_err) ||
-         (|block_encrypt_sfifo_blkenc_err);
+         (|block_encrypt_sfifo_blkenc_err));
 
   // set the err code source bits
   assign hw2reg.err_code.sfifo_cmd_err.d = 1'b1;

ParseResult:
MOV HdlStmAssign@@ to objs
HdlStmAssign
    HdlValueInt: 1
    HdlValueId: hw2reg

UPD HdlStmAssign@@ to 
    INS HdlOp@@AND_LOG to 
    UPD HdlOp@@AND_LOG to AND_LOG
        INS list@@ops to AND_LOG
        INS HdlValueId@@cs_enable to ops

UPD HdlStmAssign@@ to 
    MOV HdlOp@@OR_LOG to 
    HdlOp: OR_LOG
        list: ops
            HdlOp: OR_LOG
                list: ops
                    HdlOp: OR_LOG
                        list: ops
                            HdlOp: OR_LOG
                                list: ops
                                    HdlOp: OR_LOG
                                        list: ops
                                            HdlOp: OR_LOG
                                                list: ops
                                                    HdlOp: OR_LOG
                                                        list: ops
                                                            HdlOp: OR_LOG
                                                                list: ops
                                                                    HdlOp: OR_LOG
                                                                        list: ops
                                                                            HdlOp: OR_LOG
                                                                                list: ops
                                                                                    HdlOp: OR_LOG
                                                                                        list: ops
                                                                                            HdlOp: OR_LOG
                                                                                                list: ops
                                                                                                    HdlOp: OR_LOG
                                                                                                        list: ops
                                                                                                            HdlOp: OR_LOG
                                                                                                                list: ops
                                                                                                                    HdlOp: OR_LOG
                                                                                                                        list: ops
                                                                                                                            HdlOp: OR_UNARY
                                                                                                                                list: ops
                                                                                                                                    HdlValueId: cmd_stage_sfifo_cmd_err_sum
                                                                                                                            HdlOp: OR_UNARY
                                                                                                                                list: ops
                                                                                                                                    HdlValueId: cmd_stage_sfifo_genbits_err_sum
                                                                                                                    HdlOp: OR_UNARY
                                                                                                                        list: ops
                                                                                                                            HdlValueId: ctr_drbg_cmd_sfifo_cmdreq_err
                                                                                                            HdlOp: OR_UNARY
                                                                                                                list: ops
                                                                                                                    HdlValueId: ctr_drbg_cmd_sfifo_rcstage_err
                                                                                                    HdlOp: OR_UNARY
                                                                                                        list: ops
                                                                                                            HdlValueId: ctr_drbg_cmd_sfifo_keyvrc_err
                                                                                            HdlOp: OR_UNARY
                                                                                                list: ops
                                                                                                    HdlValueId: ctr_drbg_upd_sfifo_updreq_err
                                                                                    HdlOp: OR_UNARY
                                                                                        list: ops
                                                                                            HdlValueId: ctr_drbg_upd_sfifo_bencreq_err
                                                                            HdlOp: OR_UNARY
                                                                                list: ops
                                                                                    HdlValueId: ctr_drbg_upd_sfifo_bencack_err
                                                                    HdlOp: OR_UNARY
                                                                        list: ops
                                                                            HdlValueId: ctr_drbg_upd_sfifo_pdata_err
                                                            HdlOp: OR_UNARY
                                                                list: ops
                                                                    HdlValueId: ctr_drbg_upd_sfifo_final_err
                                                    HdlOp: OR_UNARY
                                                        list: ops
                                                            HdlValueId: ctr_drbg_gen_sfifo_gbencack_err
                                            HdlOp: OR_UNARY
                                                list: ops
                                                    HdlValueId: ctr_drbg_gen_sfifo_grcstage_err
                                    HdlOp: OR_UNARY
                                        list: ops
                                            HdlValueId: ctr_drbg_gen_sfifo_ggenreq_err
                            HdlOp: OR_UNARY
                                list: ops
                                    HdlValueId: ctr_drbg_gen_sfifo_gadstage_err
                    HdlOp: OR_UNARY
                        list: ops
                            HdlValueId: ctr_drbg_gen_sfifo_ggenbits_err
            HdlOp: OR_UNARY
                list: ops
                    HdlValueId: block_encrypt_sfifo_blkenc_err


CommitId: 3ff4287a86b120d9effe1ae4c250a9e04b7f49fa
[csrng/rtl] internal state observed from TLUL register
--- a/hw/ip/csrng/rtl/csrng_core.sv
+++ b/hw/ip/csrng/rtl/csrng_core.sv
@@ -722,6 +727,12 @@ module csrng_core import csrng_pkg::*; #(
 
   assign cmd_result_wr_req = cmd_result_ack && (cmd_result_ccmd != GEN);
 
+  // register read access
+  assign state_db_reg_rd_sel = reg2hw.int_state_val.re;
+  assign state_db_reg_rd_id = reg2hw.int_state_num.q;
+  assign state_db_reg_rd_id_pulse = reg2hw.int_state_num.qe;
+  assign hw2reg.int_state_val.d = cs_enable ? state_db_reg_rd_val : '0;
+
   csrng_state_db #(
     .NApps(NApps),
     .StateId(StateId),

ParseResult:
INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: DOT
        list: ops
            HdlOp: DOT
                list: ops
                    HdlValueId: reg2hw
                    HdlValueId: int_state_val
            HdlValueId: re
    HdlValueId: state_db_reg_rd_sel

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: DOT
        list: ops
            HdlOp: DOT
                list: ops
                    HdlValueId: reg2hw
                    HdlValueId: int_state_num
            HdlValueId: q
    HdlValueId: state_db_reg_rd_id

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: DOT
        list: ops
            HdlOp: DOT
                list: ops
                    HdlValueId: reg2hw
                    HdlValueId: int_state_num
            HdlValueId: qe
    HdlValueId: state_db_reg_rd_id_pulse

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: TERNARY
        list: ops
            HdlValueId: cs_enable
            HdlValueId: state_db_reg_rd_val
            HdlValueInt: 0
    HdlValueId: hw2reg


CommitId: 3ff4287a86b120d9effe1ae4c250a9e04b7f49fa
[csrng/rtl] internal state observed from TLUL register
--- a/hw/ip/csrng/rtl/csrng_core.sv
+++ b/hw/ip/csrng/rtl/csrng_core.sv
@@ -972,10 +988,10 @@ module csrng_core import csrng_pkg::*; #(
   // provide control logic to determine
   // how certain debug features are controlled.
 
-  lc_ctrl_pkg::lc_tx_t lc_hw_debug_en_out;
+  lc_ctrl_pkg::lc_tx_t [1:0] lc_hw_debug_en_out;
 
   prim_lc_sync #(
-    .NumCopies(1)
+    .NumCopies(2)
   ) u_prim_lc_sync (
     .clk_i,
     .rst_ni,

ParseResult:
UPD HdlIdDef@@lc_hw_debug_en_out to lc_hw_debug_en_out
    MOV HdlOp@@DOUBLE_COLON to lc_hw_debug_en_out
    HdlOp: DOUBLE_COLON
        list: ops
            HdlValueId: lc_ctrl_pkg
            HdlValueId: lc_tx_t


CommitId: 3ff4287a86b120d9effe1ae4c250a9e04b7f49fa
[csrng/rtl] internal state observed from TLUL register
--- a/hw/ip/csrng/rtl/csrng_core.sv
+++ b/hw/ip/csrng/rtl/csrng_core.sv
@@ -983,7 +999,8 @@ module csrng_core import csrng_pkg::*; #(
     .lc_en_o(lc_hw_debug_en_out)
   );
 
-  assign      lc_hw_debug_not_on = (lc_hw_debug_en_out != lc_ctrl_pkg::On);
+  assign      lc_hw_debug_not_on = (lc_hw_debug_en_out[0] != lc_ctrl_pkg::On);
+  assign      lc_hw_debug_on = (lc_hw_debug_en_out[1] == lc_ctrl_pkg::On);
 
 
   //-------------------------------------

ParseResult:
INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: EQ
        list: ops
            HdlOp: INDEX
                list: ops
                    HdlValueId: lc_hw_debug_en_out
                    HdlValueInt: 1
            HdlOp: DOUBLE_COLON
                list: ops
                    HdlValueId: lc_ctrl_pkg
                    HdlValueId: On
    HdlValueId: lc_hw_debug_on

UPD HdlStmAssign@@ to 
    UPD HdlOp@@NE to NE
        MOV HdlValueId@@lc_hw_debug_en_out to ops
        HdlValueId: lc_hw_debug_en_out


CommitId: 3ff4287a86b120d9effe1ae4c250a9e04b7f49fa
[csrng/rtl] internal state observed from TLUL register
--- a/hw/ip/csrng/rtl/csrng_core.sv
+++ b/hw/ip/csrng/rtl/csrng_core.sv
@@ -1148,7 +1165,8 @@ module csrng_core import csrng_pkg::*; #(
   assign hw2reg.sum_sts.diag.de = !cs_enable;
   assign hw2reg.sum_sts.diag.d  =
          (reg2hw.regen.q)        && // not used
-         (|reg2hw.genbits.q);       // not used
+         (|reg2hw.genbits.q)     && // not used
+         (|reg2hw.int_state_val.q); // not used
 
 
 
ParseResult:
UPD HdlStmAssign@@ to 
    MOV HdlOp@@AND_LOG to 
    HdlOp: AND_LOG
        list: ops
            HdlOp: DOT
                list: ops
                    HdlOp: DOT
                        list: ops
                            HdlValueId: reg2hw
                            HdlValueId: regen
                    HdlValueId: q
            HdlOp: OR_UNARY
                list: ops
                    HdlOp: DOT
                        list: ops
                            HdlOp: DOT
                                list: ops
                                    HdlValueId: reg2hw
                                    HdlValueId: genbits
                            HdlValueId: q


CommitId: 39b1434029d5d1fda2687bc7863c403988788b5c
[fpv] fix otp_ctrl and lc_ctrl syntax error
--- a/hw/ip/flash_ctrl/rtl/flash_ctrl_lcmgr.sv
+++ b/hw/ip/flash_ctrl/rtl/flash_ctrl_lcmgr.sv
@@ -194,7 +194,7 @@ module flash_ctrl_lcmgr import flash_ctrl_pkg::*; #(
 
   // synchronize inputs
   logic init_q;
-  lc_ctrl_pkg::lc_tx_t rma_req;
+  lc_ctrl_pkg::lc_tx_t [0:0] rma_req;
 
   prim_flop_2sync #(
     .Width(1),

ParseResult:
UPD HdlIdDef@@rma_req to rma_req
    INS HdlOp@@INDEX to rma_req
    UPD HdlOp@@INDEX to INDEX
        INS list@@ops to INDEX
        INS HdlOp@@DOWNTO to ops
        HdlOp: DOWNTO
            list: ops
                HdlValueInt: 0
                HdlValueInt: 0

UPD HdlIdDef@@rma_req to rma_req
    MOV HdlOp@@DOUBLE_COLON to rma_req
    HdlOp: DOUBLE_COLON
        list: ops
            HdlValueId: lc_ctrl_pkg
            HdlValueId: lc_tx_t


CommitId: 39b1434029d5d1fda2687bc7863c403988788b5c
[fpv] fix otp_ctrl and lc_ctrl syntax error
--- a/hw/ip/flash_ctrl/rtl/flash_ctrl_lcmgr.sv
+++ b/hw/ip/flash_ctrl/rtl/flash_ctrl_lcmgr.sv
@@ -377,7 +377,7 @@ module flash_ctrl_lcmgr import flash_ctrl_pkg::*; #(
       // Waiting for an rma entry command
       StWait: begin
         rd_buf_en_o = 1'b1;
-        if (rma_req == lc_ctrl_pkg::On) begin
+        if (rma_req[0] == lc_ctrl_pkg::On) begin
           state_d = StEntropyReseed;
         end
       end
ParseResult:
UPD HdlStmIf@@ to 
    UPD HdlOp@@EQ to EQ
        INS HdlOp@@INDEX to ops
        UPD HdlOp@@INDEX to INDEX
            INS list@@ops to INDEX
            INS HdlValueInt@@0 to ops

UPD HdlStmIf@@ to 
    UPD HdlOp@@EQ to EQ
        MOV HdlValueId@@rma_req to ops
        HdlValueId: rma_req


CommitId: e713373136eea9da328367c1828fbcd3fed23882
[csrng] Fix Verilator lint warning, replace inline AscentLint waiver
--- a/hw/ip/csrng/rtl/csrng_ctr_drbg_upd.sv
+++ b/hw/ip/csrng/rtl/csrng_ctr_drbg_upd.sv
@@ -493,6 +493,10 @@ module csrng_ctr_drbg_upd #(
          concat_outblk_shift ? concat_outblk_shifted_value[SeedLen-1:0] :
          concat_outblk_q;
 
+  // The following signal is used to avoid possible lint errors.
+  logic [BlkLen-1:0] unused_concat_outblk_shifted_value;
+  assign unused_concat_outblk_shifted_value = concat_outblk_shifted_value[SeedLen+BlkLen-1:SeedLen];
+
   // concatination counter
   assign concat_ctr_d =
          concat_ctr_done ? '0 :
ParseResult:
INS HdlIdDef@@unused_concat_outblk_shifted_value to objs
HdlIdDef: unused_concat_outblk_shifted_value
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlOp: SUB
                        list: ops
                            HdlValueId: BlkLen
                            HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: INTERNAL

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: INDEX
        list: ops
            HdlValueId: concat_outblk_shifted_value
            HdlOp: DOWNTO
                list: ops
                    HdlOp: SUB
                        list: ops
                            HdlOp: ADD
                                list: ops
                                    HdlValueId: SeedLen
                                    HdlValueId: BlkLen
                            HdlValueInt: 1
                    HdlValueId: SeedLen
    HdlValueId: unused_concat_outblk_shifted_value


CommitId: 9296764836d131990642d5f646737a54a78ce097
[flash] Add scrambling primitive and hook-up to program / read pipelines
--- a/hw/ip/flash_ctrl/rtl/flash_phy.sv
+++ b/hw/ip/flash_ctrl/rtl/flash_phy.sv
@@ -118,13 +118,27 @@ module flash_phy import flash_ctrl_pkg::*; (
       .rdata  (host_rsp_data[bank])
     );
 
+    logic host_req;
+    logic ctrl_req;
+    logic host_scramble_en;
+    logic ctrl_scramble_en;
+
+    assign host_req = host_req_i & (host_bank_sel == bank) & host_rsp_avail[bank];
+    assign ctrl_req = flash_ctrl_i.req & (ctrl_bank_sel == bank);
+
+    // #2630: Temporary scramble enable logic on one of the banks until register configuration
+    // is setup.
+    assign host_scramble_en = host_req & host_addr_i[BusAddrW-1 -: BankW] == 1;
+    assign ctrl_scramble_en = ctrl_req & flash_ctrl_i.addr[BusAddrW-1 -: BankW] == 1;
+
     flash_phy_core i_core (
       .clk_i,
       .rst_ni,
-      .req_i(flash_ctrl_i.req & (ctrl_bank_sel == bank)),
+      .scramble_en_i(flash_ctrl_i.scramble_en & (host_scramble_en | ctrl_scramble_en)),
+      .req_i(ctrl_req),
       // host request must be suppressed if response fifo cannot hold more
       // otherwise the flash_phy_core and flash_phy will get out of sync
-      .host_req_i(host_req_i & (host_bank_sel == bank) & host_rsp_avail[bank]),
+      .host_req_i(host_req),
       .host_addr_i(host_addr_i[0 +: BusBankAddrW]),
       .rd_i(flash_ctrl_i.rd),
       .prog_i(flash_ctrl_i.prog),

ParseResult:
INS HdlIdDef@@host_req to body
HdlIdDef: host_req
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

INS HdlIdDef@@ctrl_req to body
HdlIdDef: ctrl_req
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

INS HdlIdDef@@host_scramble_en to body
HdlIdDef: host_scramble_en
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

INS HdlIdDef@@ctrl_scramble_en to body
HdlIdDef: ctrl_scramble_en
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

INS HdlStmAssign@@ to body

INS HdlStmAssign@@ to body

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlOp: AND
        list: ops
            HdlValueId: host_req
            HdlOp: EQ
                list: ops
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: host_addr_i
                            HdlOp: PART_SELECT_PRE
                                list: ops
                                    HdlOp: SUB
                                        list: ops
                                            HdlValueId: BusAddrW
                                            HdlValueInt: 1
                                    HdlValueId: BankW
                    HdlValueInt: 1
    HdlValueId: host_scramble_en

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlOp: AND
        list: ops
            HdlValueId: ctrl_req
            HdlOp: EQ
                list: ops
                    HdlOp: INDEX
                        list: ops
                            HdlOp: DOT
                                list: ops
                                    HdlValueId: flash_ctrl_i
                                    HdlValueId: addr
                            HdlOp: PART_SELECT_PRE
                                list: ops
                                    HdlOp: SUB
                                        list: ops
                                            HdlValueId: BusAddrW
                                            HdlValueInt: 1
                                    HdlValueId: BankW
                    HdlValueInt: 1
    HdlValueId: ctrl_scramble_en

UPD HdlStmAssign@@ to 
    INS HdlValueId@@host_req to 

UPD HdlStmAssign@@ to 
    INS HdlValueId@@ctrl_req to 


CommitId: 53ef2ec43c1c1eb00b771e17fc157f5bb1103ed5
Update lowrisc_ibex to lowRISC/ibex@d14312c
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_tracer.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_tracer.sv
@@ -37,8 +23,7 @@ module ibex_tracer #(
     input  logic                      rst_ni,
 
     input  logic                      fetch_enable_i,
-    input  logic [3:0]                core_id_i,
-    input  logic [5:0]                cluster_id_i,
+    input  logic [31:0]               hart_id_i,
 
     input  logic                      valid_i,
     input  logic [31:0]               pc_i,

ParseResult:
UPD HdlIdDef@@core_id_i to hart_id_i

UPD HdlIdDef@@core_id_i to core_id_i
    UPD HdlOp@@PARAMETRIZATION to PARAMETRIZATION
        UPD HdlOp@@DOWNTO to DOWNTO
            UPD HdlValueInt@@3 to 31

DEL HdlIdDef@@cluster_id_i from ports
HdlIdDef: cluster_id_i
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 5
                    HdlValueInt: 0
    HdlDirection: IN


CommitId: 53ef2ec43c1c1eb00b771e17fc157f5bb1103ed5
Update lowrisc_ibex to lowRISC/ibex@d14312c
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_tracer.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_tracer.sv
@@ -304,7 +289,7 @@ module ibex_tracer #(
   initial begin
     wait(rst_ni == 1'b1);
     wait(fetch_enable_i == 1'b1);
-    $sformat(fn, "trace_core_%h_%h.log", cluster_id_i, core_id_i);
+    $sformat(fn, "trace_core_%h.log", hart_id_i);
     $display("[TRACER] Output filename is: %s", fn);
     f = $fopen(fn, "w");
     $fwrite(f, "                Time          Cycles PC       Instr    Mnemonic\n");
ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@CALL to CALL
            UPD HdlValueId@@core_id_i to hart_id_i
            DEL HdlValueId@@cluster_id_i from ops


CommitId: 614ac71a9c4d39ddcd18d762736c3fbe6abda9e7
[lc_ctrl] Do not latch new LC state in register
--- a/hw/ip/lc_ctrl/rtl/lc_ctrl_state_transition.sv
+++ b/hw/ip/lc_ctrl/rtl/lc_ctrl_state_transition.sv
@@ -39,7 +39,7 @@ module lc_ctrl_state_transition
     trans_cnt_oflw_error_o = 1'b0;
     trans_invalid_error_o = 1'b0;
 
-    if (fsm_state_i == CntIncrSt) begin
+    if (fsm_state_i inside {CntIncrSt, CntProgSt}) begin
       // In this state, the life cycle counter is incremented.
       // Throw an error if the counter is already maxed out.
       unique case (lc_cnt_i)

ParseResult:
UPD HdlStmIf@@ to 
    INS HdlExprNotImplemented@@cond to 

UPD HdlStmIf@@ to 
    DEL HdlOp@@EQ from 
    HdlOp: EQ
        list: ops
            HdlValueId: fsm_state_i
            HdlValueId: CntIncrSt


CommitId: 614ac71a9c4d39ddcd18d762736c3fbe6abda9e7
[lc_ctrl] Do not latch new LC state in register
--- a/hw/ip/lc_ctrl/rtl/lc_ctrl_state_transition.sv
+++ b/hw/ip/lc_ctrl/rtl/lc_ctrl_state_transition.sv
@@ -64,7 +64,7 @@ module lc_ctrl_state_transition
       endcase // lc_cnt_i
     end
 
-    if (fsm_state_i inside {TransCheckSt, TokenCheck0St, TokenCheck1St}) begin
+    if (fsm_state_i inside {TransCheckSt, TokenCheck0St, TokenCheck1St, TransProgSt}) begin
       // Check that the decoded transition indexes are valid
       // before indexing the state transition matrix.
       if (dec_lc_state_i <= DecLcStScrap ||

ParseResult:
UPD HdlStmIf@@ to 
    INS HdlExprNotImplemented@@cond to 

UPD HdlStmIf@@ to 
    DEL HdlOp@@EQ from 
    HdlOp: EQ
        list: ops
            HdlValueId: fsm_state_i
            HdlValueId: CntIncrSt


CommitId: a72c4dcb1b163142deca98967965afdb25bc6db0
[top] Hook-up ibex reset bypass
--- a/hw/ip/rv_core_ibex/rtl/rv_core_ibex.sv
+++ b/hw/ip/rv_core_ibex/rtl/rv_core_ibex.sv
@@ -36,7 +36,6 @@ module rv_core_ibex #(
   input  logic        clk_esc_i,
   input  logic        rst_esc_ni,
 
-  input  logic        test_en_i,     // enable all clock gates for testing
   input  prim_ram_1p_pkg::ram_1p_cfg_t ram_cfg_i,
 
   input  logic [31:0] hart_id_i,

ParseResult:
DEL HdlIdDef@@test_en_i from ports
HdlIdDef: test_en_i
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: IN


CommitId: a72c4dcb1b163142deca98967965afdb25bc6db0
[top] Hook-up ibex reset bypass
--- a/hw/ip/rv_core_ibex/rtl/rv_core_ibex.sv
+++ b/hw/ip/rv_core_ibex/rtl/rv_core_ibex.sv
@@ -68,7 +67,11 @@ module rv_core_ibex #(
   // CPU Control Signals
   input lc_ctrl_pkg::lc_tx_t lc_cpu_en_i,
   input lc_ctrl_pkg::lc_tx_t pwrmgr_cpu_en_i,
-  output logic        core_sleep_o
+  output logic        core_sleep_o,
+
+  // dft bypass
+  input scan_rst_ni,
+  input lc_ctrl_pkg::lc_tx_t scanmode_i
 );
 
   import top_pkg::*;

ParseResult:
INS HdlIdDef@@scan_rst_ni to ports
HdlIdDef: scan_rst_ni
    HdlValueId: wire
    HdlDirection: IN

INS HdlIdDef@@scanmode_i to ports
HdlIdDef: scanmode_i
    HdlOp: DOUBLE_COLON
        list: ops
            HdlValueId: lc_ctrl_pkg
            HdlValueId: lc_tx_t
    HdlDirection: IN


CommitId: 2af73a7463ea51ad4e18f954d6b6135c88a5adaf
[top] Fixes for optimized modules
--- a/hw/top_earlgrey/ip/ast/rtl/usb_osc.sv
+++ b/hw/top_earlgrey/ip/ast/rtl/usb_osc.sv
@@ -63,7 +63,6 @@ always begin
   #((UsbClkPeriod + drift)/2000) clk = ~clk && en_osc;
 end
 
-assign usb_clk_o = clk;
 `else  // of SYNTHESIS
 localparam prim_pkg::impl_e Impl = `PRIM_DEFAULT_IMPL;
 

ParseResult:
UPD HdlStmAssign@@ to 
    MOV HdlValueId@@clk to 
    HdlValueId: clk
    MOV HdlValueId@@usb_clk_o to 
    HdlValueId: usb_clk_o

DEL HdlStmAssign@@ from objs


CommitId: eef49a584162a29737680efa7101b19c63f8fb88
Update pulp_riscv_dbg to pulp-platform/riscv-dbg@e67a0a7
--- a/hw/vendor/pulp_riscv_dbg/src/dm_mem.sv
+++ b/hw/vendor/pulp_riscv_dbg/src/dm_mem.sv
@@ -355,7 +355,7 @@ module dm_mem #(
       dm::AccessRegister: begin
         if (32'(ac_ar.aarsize) < MaxAar && ac_ar.transfer && ac_ar.write) begin
           // store a0 in dscratch1
-          abstract_cmd[0][31:0] = HasSndScratch ? dm::csrr(dm::CSR_DSCRATCH1, 5'd10) : dm::nop();
+          abstract_cmd[0][31:0] = HasSndScratch ? dm::csrw(dm::CSR_DSCRATCH1, 5'd10) : dm::nop();
           // this range is reserved
           if (ac_ar.regno[15:14] != '0) begin
             abstract_cmd[0][31:0] = dm::ebreak(); // we leave asap

ParseResult:
UPD HdlStmProcess@@ to 
    INS HdlStmProcessTriggerConstrain@@COMB to 

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@TERNARY to TERNARY
                UPD HdlOp@@CALL to CALL
                    UPD HdlOp@@DOUBLE_COLON to DOUBLE_COLON
                        UPD HdlValueId@@csrr to csrw
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@TERNARY to TERNARY
                UPD HdlOp@@CALL to CALL
                    UPD HdlOp@@DOUBLE_COLON to DOUBLE_COLON
                        UPD HdlValueId@@csrr to csrw

UPD HdlStmProcess@@ to 
    DEL HdlStmProcessTriggerConstrain@@COMB from 


CommitId: eef49a584162a29737680efa7101b19c63f8fb88
Update pulp_riscv_dbg to pulp-platform/riscv-dbg@e67a0a7
--- a/hw/vendor/pulp_riscv_dbg/src/dm_mem.sv
+++ b/hw/vendor/pulp_riscv_dbg/src/dm_mem.sv
@@ -397,7 +397,7 @@ module dm_mem #(
         end else if (32'(ac_ar.aarsize) < MaxAar && ac_ar.transfer && !ac_ar.write) begin
           // store a0 in dscratch1
           abstract_cmd[0][31:0]  = HasSndScratch ?
-                                   dm::csrr(dm::CSR_DSCRATCH1, LoadBaseAddr) :
+                                   dm::csrw(dm::CSR_DSCRATCH1, LoadBaseAddr) :
                                    dm::nop();
           // this range is reserved
           if (ac_ar.regno[15:14] != '0) begin
ParseResult:
UPD HdlStmProcess@@ to 
    INS HdlStmProcessTriggerConstrain@@COMB to 

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@TERNARY to TERNARY
                UPD HdlOp@@CALL to CALL
                    UPD HdlOp@@DOUBLE_COLON to DOUBLE_COLON
                        UPD HdlValueId@@csrr to csrw
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@TERNARY to TERNARY
                UPD HdlOp@@CALL to CALL
                    UPD HdlOp@@DOUBLE_COLON to DOUBLE_COLON
                        UPD HdlValueId@@csrr to csrw

UPD HdlStmProcess@@ to 
    DEL HdlStmProcessTriggerConstrain@@COMB from 


CommitId: 5649c2a7681569cad34ed269e7d7ac81f051a479
[top] Ast updates
--- a/hw/top_earlgrey/rtl/top_earlgrey_asic.sv
+++ b/hw/top_earlgrey/rtl/top_earlgrey_asic.sv
@@ -253,6 +253,9 @@ module top_earlgrey_asic (
   logic scan_en;
   lc_ctrl_pkg::lc_tx_t scanmode;
 
+  // Jitter enable
+  logic jen;
+
   // Alert connections
   import sensor_ctrl_reg_pkg::AsSel;
   import sensor_ctrl_reg_pkg::CgSel;

ParseResult:
INS HdlIdDef@@jen to objs
HdlIdDef: jen
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL


CommitId: 8643b74ebd5a99db79288d3bb270c0e4e8942e22
[entropy_src] Fix width mismatch in entropy_src_core.sv
--- a/hw/ip/entropy_src/rtl/entropy_src_core.sv
+++ b/hw/ip/entropy_src/rtl/entropy_src_core.sv
@@ -1893,8 +1893,10 @@ module entropy_src_core import entropy_src_pkg::*; #(
 
   assign sfifo_observe_wdata = pfifo_postht_rdata;
 
-  assign sfifo_observe_pop = fw_ov_mode &&
-         (fw_ov_fifo_rd_pulse || ((ObserveFifoDepth-1) == sfifo_observe_depth));
+  assign sfifo_observe_pop =
+         (fw_ov_mode &&
+          (fw_ov_fifo_rd_pulse ||
+           ((Clog2ObserveFifoDepth+1)'(ObserveFifoDepth-1) == sfifo_observe_depth)));
 
   // fifo err
   assign sfifo_observe_err =
ParseResult:
UPD HdlStmAssign@@ to 
    INS HdlOp@@AND_LOG to 
    UPD HdlOp@@AND_LOG to AND_LOG
        INS list@@ops to AND_LOG
        UPD HdlOp@@OR_LOG to OR_LOG
            UPD HdlOp@@EQ to EQ
                UPD HdlOp@@CALL to CALL
                    INS HdlOp@@ADD to ops
                    HdlOp: ADD
                        list: ops
                            HdlValueId: Clog2ObserveFifoDepth
                            HdlValueInt: 1

UPD HdlStmAssign@@ to 
    UPD HdlOp@@AND_LOG to AND_LOG
        MOV HdlValueId@@fw_ov_mode to ops
        HdlValueId: fw_ov_mode
        UPD HdlOp@@OR_LOG to OR_LOG
            MOV HdlValueId@@fw_ov_fifo_rd_pulse to ops
            HdlValueId: fw_ov_fifo_rd_pulse
            UPD HdlOp@@EQ to CALL
            UPD HdlOp@@EQ to EQ
                MOV HdlValueId@@sfifo_observe_depth to ops
                HdlValueId: sfifo_observe_depth
        UPD HdlOp@@OR_LOG to EQ
    UPD HdlOp@@AND_LOG to OR_LOG
    MOV HdlOp@@AND_LOG to 
    HdlOp: AND_LOG
        list: ops
            HdlValueId: fw_ov_mode
            HdlOp: OR_LOG
                list: ops
                    HdlValueId: fw_ov_fifo_rd_pulse
                    HdlOp: EQ
                        list: ops
                            HdlOp: SUB
                                list: ops
                                    HdlValueId: ObserveFifoDepth
                                    HdlValueInt: 1
                            HdlValueId: sfifo_observe_depth


CommitId: 103b4cb2da07f5b826955691f28aa6b5a3bdd1ac
[flash_ctrl] Support the notion of a 'program-repair'.
--- a/hw/ip/flash_ctrl/rtl/flash_ctrl_lcmgr.sv
+++ b/hw/ip/flash_ctrl/rtl/flash_ctrl_lcmgr.sv
@@ -162,12 +162,14 @@ module flash_ctrl_lcmgr import flash_ctrl_pkg::*; (
 
   logic start;
   flash_op_e op;
+  flash_prog_e prog_type;
   flash_erase_e erase_type;
   flash_part_e part_sel;
   logic [11:0] num_words;
   logic [BusAddrW-1:0] addr;
   logic [BusWidth-1:0] rsp_mask;
 
+  assign prog_type = FlashProgNormal;
   assign erase_type = FlashErasePage;
   // seed phase is always read
   // rma phase is erase unless we are validating

ParseResult:
INS HdlIdDef@@prog_type to objs
HdlIdDef: prog_type
    HdlDirection: INTERNAL

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlValueId: FlashProgNormal
    HdlValueId: prog_type


CommitId: 103b4cb2da07f5b826955691f28aa6b5a3bdd1ac
[flash_ctrl] Support the notion of a 'program-repair'.
--- a/hw/ip/flash_ctrl/rtl/flash_ctrl_lcmgr.sv
+++ b/hw/ip/flash_ctrl/rtl/flash_ctrl_lcmgr.sv
@@ -332,6 +334,7 @@ module flash_ctrl_lcmgr import flash_ctrl_pkg::*; (
   assign rma_token_o = rsp_token[0] ^ rsp_token[1] ^ rsp_mask;
   assign ctrl_o.start.q = start;
   assign ctrl_o.op.q = op;
+  assign ctrl_o.prog_sel.q = prog_type;
   assign ctrl_o.erase_sel.q = erase_type;
   assign ctrl_o.partition_sel.q = part_sel;
   assign ctrl_o.num = num_words;
ParseResult:
INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlValueId: prog_type
    HdlValueId: ctrl_o


CommitId: 628b577fd2f0edb9bfbd46350930dcfc721d8a8a
[csrng/rtl] gen cmd additional data for multiple channels
--- a/hw/ip/csrng/rtl/csrng_ctr_drbg_gen.sv
+++ b/hw/ip/csrng/rtl/csrng_ctr_drbg_gen.sv
@@ -9,6 +9,7 @@
 // ctr_drbg cmd module.
 
 module csrng_ctr_drbg_gen import csrng_pkg::*; #(
+  parameter int NApps = 4,
   parameter int Cmd = 3,
   parameter int StateId = 4,
   parameter int BlkLen = 128,

ParseResult:
INS HdlIdDef@@NApps to params
HdlIdDef: NApps
    HdlValueId: int
    HdlValueInt: 4
    HdlDirection: INTERNAL


CommitId: 628b577fd2f0edb9bfbd46350930dcfc721d8a8a
[csrng/rtl] gen cmd additional data for multiple channels
--- a/hw/ip/csrng/rtl/csrng_ctr_drbg_gen.sv
+++ b/hw/ip/csrng/rtl/csrng_ctr_drbg_gen.sv
@@ -88,7 +89,7 @@ module csrng_ctr_drbg_gen import csrng_pkg::*; #(
   localparam int BlkEncAckFifoDepth = 1;
   localparam int BlkEncAckFifoWidth = BlkLen+StateId+Cmd;
   localparam int AdstageFifoDepth = 1;
-  localparam int AdstageFifoWidth = KeyLen+BlkLen+CtrLen+1+SeedLen+1;
+  localparam int AdstageFifoWidth = KeyLen+BlkLen+CtrLen+1+1;
   localparam int RCStageFifoDepth = 1;
   localparam int RCStageFifoWidth = KeyLen+BlkLen+BlkLen+CtrLen+1+1+StateId+Cmd;
   localparam int GenbitsFifoDepth = 1;

ParseResult:
UPD HdlIdDef@@AdstageFifoWidth to AdstageFifoWidth
    UPD HdlOp@@ADD to ADD
        MOV HdlOp@@ADD to ops
        HdlOp: ADD
            list: ops
                HdlOp: ADD
                    list: ops
                        HdlOp: ADD
                            list: ops
                                HdlOp: ADD
                                    list: ops
                                        HdlValueId: KeyLen
                                        HdlValueId: BlkLen
                                HdlValueId: CtrLen
                        HdlValueInt: 1
                HdlValueId: SeedLen
        MOV HdlValueInt@@1 to ops
        HdlValueInt: 1
        UPD HdlOp@@ADD to ADD
            DEL HdlValueId@@SeedLen from ops
        DEL list@@ops from ADD
    DEL HdlOp@@ADD from AdstageFifoWidth


CommitId: 628b577fd2f0edb9bfbd46350930dcfc721d8a8a
[csrng/rtl] gen cmd additional data for multiple channels
--- a/hw/ip/csrng/rtl/csrng_ctr_drbg_gen.sv
+++ b/hw/ip/csrng/rtl/csrng_ctr_drbg_gen.sv
@@ -175,11 +176,14 @@ module csrng_ctr_drbg_gen import csrng_pkg::*; #(
   logic                        v_ctr_inc;
   logic                        interate_ctr_done;
   logic                        interate_ctr_inc;
+  logic [NApps-1:0]            capt_adata;
+  logic [SeedLen-1:0]          update_adata[NApps];
 
   // flops
   logic [CtrLen-1:0]           v_ctr_q, v_ctr_d;
   logic [1:0]                  interate_ctr_q, interate_ctr_d;
-  logic [SeedLen-1:0]          update_adata_q, update_adata_d;
+  logic [SeedLen-1:0]          update_adata_q[NApps], update_adata_d[NApps];
+  logic [NApps-1:0]            update_adata_vld_q, update_adata_vld_d;
 
 // Encoding generated with:
 // $ ./util/design/sparse-fsm-encode.py -d 3 -m 4 -n 5 \

ParseResult:
INS HdlIdDef@@capt_adata to objs
HdlIdDef: capt_adata
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlOp: SUB
                        list: ops
                            HdlValueId: NApps
                            HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: INTERNAL

INS HdlIdDef@@update_adata to objs
HdlIdDef: update_adata
    HdlOp: INDEX
        list: ops
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: logic
                    HdlOp: DOWNTO
                        list: ops
                            HdlOp: SUB
                                list: ops
                                    HdlValueId: SeedLen
                                    HdlValueInt: 1
                            HdlValueInt: 0
            HdlValueId: NApps
    HdlDirection: INTERNAL

INS HdlIdDef@@update_adata_vld_q to objs
HdlIdDef: update_adata_vld_q
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlOp: SUB
                        list: ops
                            HdlValueId: NApps
                            HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: INTERNAL

INS HdlIdDef@@update_adata_vld_d to objs
HdlIdDef: update_adata_vld_d
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlOp: SUB
                        list: ops
                            HdlValueId: NApps
                            HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: INTERNAL

UPD HdlIdDef@@update_adata_q to update_adata_q
    INS HdlOp@@INDEX to update_adata_q
    UPD HdlOp@@INDEX to INDEX
        INS list@@ops to INDEX
        INS HdlValueId@@NApps to ops

UPD HdlIdDef@@update_adata_q to update_adata_q
    MOV HdlOp@@PARAMETRIZATION to update_adata_q
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlOp: SUB
                        list: ops
                            HdlValueId: SeedLen
                            HdlValueInt: 1
                    HdlValueInt: 0

UPD HdlIdDef@@update_adata_d to update_adata_d
    MOV HdlOp@@PARAMETRIZATION to update_adata_d
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlOp: SUB
                        list: ops
                            HdlValueId: SeedLen
                            HdlValueInt: 1
                    HdlValueInt: 0


CommitId: 628b577fd2f0edb9bfbd46350930dcfc721d8a8a
[csrng/rtl] gen cmd additional data for multiple channels
--- a/hw/ip/csrng/rtl/csrng_ctr_drbg_gen.sv
+++ b/hw/ip/csrng/rtl/csrng_ctr_drbg_gen.sv
@@ -230,11 +234,13 @@ module csrng_ctr_drbg_gen import csrng_pkg::*; #(
     if (!rst_ni) begin
       v_ctr_q            <= '0;
       interate_ctr_q     <= '0;
-      update_adata_q     <= '0;
+      update_adata_q     <= '{default:0};
+      update_adata_vld_q <= '{default:0};
     end else begin
       v_ctr_q            <= v_ctr_d;
       interate_ctr_q     <= interate_ctr_d;
       update_adata_q     <= update_adata_d;
+      update_adata_vld_q <= update_adata_vld_d;
     end
 
 

ParseResult:
INS HdlStmAssign@@ to body
HdlStmAssign
    list: src
        HdlOp: MAP_ASSOCIATION
            list: ops
                HdlValueId: default
                HdlValueInt: 0
    HdlValueId: update_adata_vld_q

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueId: update_adata_vld_d
    HdlValueId: update_adata_vld_q

UPD HdlStmAssign@@ to 
    MOV HdlValueInt@@0 to 
    HdlValueInt: 0


CommitId: 628b577fd2f0edb9bfbd46350930dcfc721d8a8a
[csrng/rtl] gen cmd additional data for multiple channels
--- a/hw/ip/csrng/rtl/csrng_ctr_drbg_gen.sv
+++ b/hw/ip/csrng/rtl/csrng_ctr_drbg_gen.sv
@@ -392,10 +398,9 @@ module csrng_ctr_drbg_gen import csrng_pkg::*; #(
     .depth_o        ()
   );
 
-  assign sfifo_adstage_wdata = {genreq_key,v_sized,genreq_rc,genreq_fips,genreq_adata,genreq_glast};
+  assign sfifo_adstage_wdata = {genreq_key,v_sized,genreq_rc,genreq_fips,genreq_glast};
   assign sfifo_adstage_pop = sfifo_adstage_not_empty && sfifo_bencack_pop;
-  assign {adstage_key,adstage_v,adstage_rc,adstage_fips,
-          adstage_adata,adstage_glast} = sfifo_adstage_rdata;
+  assign {adstage_key,adstage_v,adstage_rc,adstage_fips,adstage_glast} = sfifo_adstage_rdata;
 
   assign ctr_drbg_gen_sfifo_gadstage_err_o =
          {(sfifo_adstage_push && sfifo_adstage_full),

ParseResult:
UPD HdlStmAssign@@ to 
    UPD HdlOp@@CONCAT to CONCAT
        MOV HdlOp@@CONCAT to ops
        HdlOp: CONCAT
            list: ops
                HdlOp: CONCAT
                    list: ops
                        HdlOp: CONCAT
                            list: ops
                                HdlOp: CONCAT
                                    list: ops
                                        HdlValueId: genreq_key
                                        HdlValueId: v_sized
                                HdlValueId: genreq_rc
                        HdlValueId: genreq_fips
                HdlValueId: genreq_adata
        UPD HdlOp@@CONCAT to CONCAT
            UPD HdlValueId@@genreq_adata to genreq_glast
        DEL HdlValueId@@genreq_glast from ops
        DEL list@@ops from CONCAT
    DEL HdlOp@@CONCAT from 

UPD HdlStmAssign@@ to 
    UPD HdlOp@@CONCAT to CONCAT
        MOV HdlOp@@CONCAT to ops
        HdlOp: CONCAT
            list: ops
                HdlOp: CONCAT
                    list: ops
                        HdlOp: CONCAT
                            list: ops
                                HdlOp: CONCAT
                                    list: ops
                                        HdlValueId: adstage_key
                                        HdlValueId: adstage_v
                                HdlValueId: adstage_rc
                        HdlValueId: adstage_fips
                HdlValueId: adstage_adata
        UPD HdlOp@@CONCAT to CONCAT
            UPD HdlValueId@@adstage_adata to adstage_glast
        DEL HdlValueId@@adstage_glast from ops
        DEL list@@ops from CONCAT
    DEL HdlOp@@CONCAT from 


CommitId: 628b577fd2f0edb9bfbd46350930dcfc721d8a8a
[csrng/rtl] gen cmd additional data for multiple channels
--- a/hw/ip/csrng/rtl/csrng_ctr_drbg_gen.sv
+++ b/hw/ip/csrng/rtl/csrng_ctr_drbg_gen.sv
@@ -458,7 +480,7 @@ module csrng_ctr_drbg_gen import csrng_pkg::*; #(
   assign gen_upd_req_o = sfifo_bencack_not_empty && adstage_glast;
   assign gen_upd_ccmd_o = sfifo_bencack_ccmd;
   assign gen_upd_inst_id_o = sfifo_bencack_inst_id;
-  assign gen_upd_pdata_o = update_adata_q;
+  assign gen_upd_pdata_o = adstage_adata;
   assign gen_upd_key_o = adstage_key;
   assign gen_upd_v_o = adstage_v;
 
ParseResult:
INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlValueId: adstage_adata
    HdlValueId: gen_upd_pdata_o

DEL HdlStmAssign@@ from objs
HdlStmAssign
    HdlValueId: update_adata_q
    HdlValueId: gen_upd_pdata_o


CommitId: cded0b6ab8097b1b4d06895ab0a3aa70bb97450c
[i2c, rtl] Style Lint fixes
--- a/hw/ip/i2c/rtl/i2c_fsm.sv
+++ b/hw/ip/i2c/rtl/i2c_fsm.sv
@@ -97,8 +97,8 @@ module i2c_fsm (
         tClockStop  : tcount_d = t_f_i + tlow_i - thd_dat_i;
         tSetupStop  : tcount_d = t_r_i + tsu_sto_i;
         tHoldStop   : tcount_d = t_r_i + t_buf_i - tsu_sta_i;
-        tNoDelay    : tcount_d = 20'b1;
-        default     : tcount_d = 20'b1;
+        tNoDelay    : tcount_d = 20'h00001;
+        default     : tcount_d = 20'h00001;
       endcase
     end else if (stretch == 0) begin
       tcount_d = tcount_q - 1'b1;
ParseResult:
UPD HdlStmCase@@tcount_sel to tcount_sel
    UPD HdlOp@@ASSIGN to ASSIGN
        UPD HdlValueInt@@1 to 00001
    UPD HdlOp@@ASSIGN to ASSIGN
        UPD HdlValueInt@@1 to 00001


CommitId: 952b9b822bb017aeea87b47670b179d5a7e3d0a8
[hmac] Meet the Verilog Style Guide
--- a/hw/ip/hmac/rtl/hmac_core.sv
+++ b/hw/ip/hmac/rtl/hmac_core.sv
@@ -79,7 +79,7 @@ module hmac_core import hmac_pkg::*; (
   } round_t ;
 
   logic update_round ;
-  round_t round, round_next;
+  round_t round_q, round_d;
 
   typedef enum logic [2:0] {
     StIdle,

ParseResult:
UPD HdlIdDef@@round to round_q

UPD HdlIdDef@@round_next to round_d


CommitId: 952b9b822bb017aeea87b47670b179d5a7e3d0a8
[hmac] Meet the Verilog Style Guide
--- a/hw/ip/hmac/rtl/hmac_core.sv
+++ b/hw/ip/hmac/rtl/hmac_core.sv
@@ -91,7 +91,7 @@ module hmac_core import hmac_pkg::*; (
     StDone              // hmac_done
   } st_e ;
 
-  st_e st, st_next;
+  st_e st_q, st_d;
 
   logic clr_fifo_wdata_sel;
   logic txcnt_eq_blksz ;

ParseResult:
UPD HdlIdDef@@st to st_q

UPD HdlIdDef@@st_next to st_d


CommitId: 952b9b822bb017aeea87b47670b179d5a7e3d0a8
[hmac] Meet the Verilog Style Guide
--- a/hw/ip/hmac/rtl/hmac_core.sv
+++ b/hw/ip/hmac/rtl/hmac_core.sv
@@ -108,7 +108,7 @@ module hmac_core import hmac_pkg::*; (
   assign o_pad = {secret_key, {(BlockSize-256){1'b0}}} ^ {(BlockSize/8){8'h5c}};
 
 
-  assign fifo_rready  = (hmac_en) ? (st == StMsg) & sha_rready : sha_rready ;
+  assign fifo_rready  = (hmac_en) ? (st_q == StMsg) & sha_rready : sha_rready ;
   // sha_rvalid is controlled by State Machine below.
   assign sha_rvalid = (!hmac_en) ? fifo_rvalid : hmac_sha_rvalid ;
   assign sha_rdata =

ParseResult:
UPD HdlStmAssign@@ to 
    UPD HdlOp@@TERNARY to TERNARY
        UPD HdlOp@@AND to AND
            UPD HdlOp@@EQ to EQ
                UPD HdlValueId@@st to st_q


CommitId: 952b9b822bb017aeea87b47670b179d5a7e3d0a8
[hmac] Meet the Verilog Style Guide
--- a/hw/ip/hmac/rtl/hmac_core.sv
+++ b/hw/ip/hmac/rtl/hmac_core.sv
@@ -157,9 +157,9 @@ module hmac_core import hmac_pkg::*; (
 
   always_ff @(posedge clk_i or negedge rst_ni) begin
     if (!rst_ni) begin
-      round <= Inner;
+      round_q <= Inner;
     end else if (update_round) begin
-      round <= round_next;
+      round_q <= round_d;
     end
   end
 

ParseResult:
UPD HdlStmAssign@@ to 
    UPD HdlValueId@@round to round_q

UPD HdlStmAssign@@ to 
    UPD HdlValueId@@round_next to round_d
    UPD HdlValueId@@round to round_q


CommitId: 952b9b822bb017aeea87b47670b179d5a7e3d0a8
[hmac] Meet the Verilog Style Guide
--- a/hw/ip/hmac/rtl/hmac_core.sv
+++ b/hw/ip/hmac/rtl/hmac_core.sv
@@ -173,11 +173,11 @@ module hmac_core import hmac_pkg::*; (
     end
   end
 
-  assign sel_msglen = (round == Inner) ? SelIPadMsg : SelOPadMsg ;
+  assign sel_msglen = (round_q == Inner) ? SelIPadMsg : SelOPadMsg ;
 
   always_ff @(posedge clk_i or negedge rst_ni) begin : state_ff
-    if (!rst_ni) st <= StIdle;
-    else         st <= st_next;
+    if (!rst_ni) st_q <= StIdle;
+    else         st_q <= st_d;
   end
 
   always_comb begin : next_state

ParseResult:
UPD HdlStmAssign@@ to 
    UPD HdlOp@@TERNARY to TERNARY
        UPD HdlOp@@EQ to EQ
            UPD HdlValueId@@round to round_q

UPD HdlStmAssign@@if_true to if_true
    UPD HdlValueId@@st to st_q

UPD HdlStmAssign@@if_false to if_false
    UPD HdlValueId@@st_next to st_d
    UPD HdlValueId@@st to st_q

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@round_next to round_d


CommitId: 952b9b822bb017aeea87b47670b179d5a7e3d0a8
[hmac] Meet the Verilog Style Guide
--- a/hw/ip/hmac/rtl/hmac_core.sv
+++ b/hw/ip/hmac/rtl/hmac_core.sv
@@ -187,7 +187,7 @@ module hmac_core import hmac_pkg::*; (
     clr_txcount = 1'b0;
 
     update_round = 1'b0;
-    round_next = Inner;
+    round_d      = Inner;
 
     fifo_wsel    = 1'b0;   // from register
     fifo_wvalid  = 1'b0;

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@round_next to round_d


CommitId: 952b9b822bb017aeea87b47670b179d5a7e3d0a8
[hmac] Meet the Verilog Style Guide
--- a/hw/ip/hmac/rtl/hmac_core.sv
+++ b/hw/ip/hmac/rtl/hmac_core.sv
@@ -196,20 +196,20 @@ module hmac_core import hmac_pkg::*; (
 
     sel_rdata = SelFifo;
 
-    hash_start = 1'b0;
+    hash_start   = 1'b0;
     hash_process = 1'b0;
 
-    unique case (st)
+    unique case (st_q)
       StIdle: begin
         if (hmac_en && reg_hash_start) begin
-          st_next = StIPad;
+          st_d = StIPad;
 
-          clr_txcount = 1'b1;
+          clr_txcount  = 1'b1;
           update_round = 1'b1;
-          round_next = Inner;
-          hash_start = 1'b1;
+          round_d      = Inner;
+          hash_start   = 1'b1;
         end else begin
-          st_next = StIdle;
+          st_d = StIdle;
         end
       end
 

ParseResult:
UPD HdlStmCase@@st to st_q

UPD HdlStmCase@@st to st
    UPD HdlValueId@@st to st_q
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@st_next to st_d
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@st_next to st_d

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@round_next to round_d

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@st_next to st_d
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@round_next to round_d
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@st_next to st_d


CommitId: 952b9b822bb017aeea87b47670b179d5a7e3d0a8
[hmac] Meet the Verilog Style Guide
--- a/hw/ip/hmac/rtl/hmac_core.sv
+++ b/hw/ip/hmac/rtl/hmac_core.sv
@@ -217,11 +217,11 @@ module hmac_core import hmac_pkg::*; (
         sel_rdata = SelIPad;
 
         if (txcnt_eq_blksz) begin
-          st_next = StMsg;
+          st_d = StMsg;
 
           hmac_sha_rvalid = 1'b0; // block new read request
         end else begin
-          st_next = StIPad;
+          st_d = StIPad;
 
           hmac_sha_rvalid = 1'b1;
         end

ParseResult:
UPD HdlStmCase@@st to st_q

UPD HdlStmCase@@st to st
    UPD HdlValueId@@st to st_q
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@st_next to st_d
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@st_next to st_d

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@round_next to round_d

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@st_next to st_d
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@st_next to st_d


CommitId: 952b9b822bb017aeea87b47670b179d5a7e3d0a8
[hmac] Meet the Verilog Style Guide
--- a/hw/ip/hmac/rtl/hmac_core.sv
+++ b/hw/ip/hmac/rtl/hmac_core.sv
@@ -230,14 +230,14 @@ module hmac_core import hmac_pkg::*; (
       StMsg: begin
         sel_rdata = SelFifo;
 
-        if ( (((round == Inner) && reg_hash_process_flag) || (round == Outer))
+        if ( (((round_q == Inner) && reg_hash_process_flag) || (round_q == Outer))
             && (txcount >= sha_message_length)) begin
-          st_next = StWaitResp;
+          st_d = StWaitResp;
 
           hmac_sha_rvalid = 1'b0; // block
-          hash_process = (round == Outer);
+          hash_process = (round_q == Outer);
         end else begin
-          st_next = StMsg;
+          st_d = StMsg;
 
           hmac_sha_rvalid = fifo_rvalid;
         end

ParseResult:
UPD HdlStmCase@@st to st_q

UPD HdlStmCase@@st to st
    UPD HdlValueId@@st to st_q
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@st_next to st_d
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@st_next to st_d

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@round_next to round_d

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@st_next to st_d
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@EQ to EQ
                UPD HdlValueId@@round to round_q
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@st_next to st_d
    UPD HdlOp@@AND_LOG to AND_LOG
        UPD HdlOp@@OR_LOG to OR_LOG
            UPD HdlOp@@EQ to EQ
                UPD HdlValueId@@round to round_q
            UPD HdlOp@@AND_LOG to AND_LOG
                UPD HdlOp@@EQ to EQ
                    UPD HdlValueId@@round to round_q


CommitId: 952b9b822bb017aeea87b47670b179d5a7e3d0a8
[hmac] Meet the Verilog Style Guide
--- a/hw/ip/hmac/rtl/hmac_core.sv
+++ b/hw/ip/hmac/rtl/hmac_core.sv
@@ -247,32 +247,32 @@ module hmac_core import hmac_pkg::*; (
         hmac_sha_rvalid = 1'b0;
 
         if (sha_hash_done) begin
-          if (round == Outer) begin
-            st_next = StDone;
-          end else begin // round == Inner
-            st_next = StPushToMsgFifo;
+          if (round_q == Outer) begin
+            st_d = StDone;
+          end else begin // round_q == Inner
+            st_d = StPushToMsgFifo;
           end
         end else begin
-          st_next = StWaitResp;
+          st_d = StWaitResp;
         end
       end
 
       StPushToMsgFifo: begin
         // TODO: Accelerate by parallel process of PushToMsgFifo and OPad hash
-        hmac_sha_rvalid = 1'b0;
-        fifo_wsel = 1'b1;
-        fifo_wvalid  = 1'b1;
+        hmac_sha_rvalid    = 1'b0;
+        fifo_wsel          = 1'b1;
+        fifo_wvalid        = 1'b1;
         clr_fifo_wdata_sel = 1'b0;
 
         if (fifo_wready && fifo_wdata_sel == 3'h7) begin
-          st_next = StOPad;
+          st_d = StOPad;
 
-          clr_txcount = 1'b1;
+          clr_txcount  = 1'b1;
           update_round = 1'b1;
-          round_next = Outer;
-          hash_start = 1'b1;
+          round_d      = Outer;
+          hash_start   = 1'b1;
         end else begin
-          st_next = StPushToMsgFifo;
+          st_d = StPushToMsgFifo;
 
         end
       end

ParseResult:
UPD HdlStmCase@@st to st_q

UPD HdlStmCase@@st to st
    UPD HdlValueId@@st to st_q
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@st_next to st_d
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@st_next to st_d

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@round_next to round_d

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@st_next to st_d

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@st_next to st_d
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@round_next to round_d
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@st_next to st_d

UPD HdlStmIf@@ to 
    UPD HdlOp@@EQ to EQ
        UPD HdlValueId@@round to round_q
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@st_next to st_d
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@st_next to st_d


CommitId: 952b9b822bb017aeea87b47670b179d5a7e3d0a8
[hmac] Meet the Verilog Style Guide
--- a/hw/ip/hmac/rtl/hmac_core.sv
+++ b/hw/ip/hmac/rtl/hmac_core.sv
@@ -281,11 +281,11 @@ module hmac_core import hmac_pkg::*; (
         sel_rdata = SelOPad;
 
         if (txcnt_eq_blksz) begin
-          st_next = StMsg;
+          st_d = StMsg;
 
           hmac_sha_rvalid = 1'b0; // block new read request
         end else begin
-          st_next = StOPad;
+          st_d = StOPad;
 
           hmac_sha_rvalid = 1'b1;
         end

ParseResult:
UPD HdlStmCase@@st to st_q

UPD HdlStmCase@@st to st
    UPD HdlValueId@@st to st_q
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@st_next to st_d
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@st_next to st_d

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@round_next to round_d

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@st_next to st_d
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@st_next to st_d


CommitId: 952b9b822bb017aeea87b47670b179d5a7e3d0a8
[hmac] Meet the Verilog Style Guide
--- a/hw/ip/hmac/rtl/hmac_core.sv
+++ b/hw/ip/hmac/rtl/hmac_core.sv
@@ -293,13 +293,13 @@ module hmac_core import hmac_pkg::*; (
 
       StDone: begin
         // raise interrupt (hash_done)
-        st_next = StIdle;
+        st_d = StIdle;
 
         hmac_hash_done = 1'b1;
       end
 
       default: begin
-        st_next = StIdle;
+        st_d = StIdle;
       end
 
     endcase
ParseResult:
UPD HdlStmCase@@st to st_q

UPD HdlStmCase@@st to st
    UPD HdlValueId@@st to st_q
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@st_next to st_d
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@st_next to st_d

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@round_next to round_d


CommitId: cabf26f33f6964caba640d9638873d681ba4a6a5
[prim] Restore ability to select default implementation
--- a/hw/ip/prim/abstract/prim_clock_gating.sv
+++ b/hw/ip/prim/abstract/prim_clock_gating.sv
@@ -6,11 +6,11 @@
 // "abstract module". This module is to be replaced by generated code.
 
 `ifndef PRIM_DEFAULT_IMPL
-  `define PRIM_DEFAULT_IMPL generic
+  `define PRIM_DEFAULT_IMPL integer'(prim_pkg::ImplGeneric)
 `endif
 
 module prim_clock_gating #(
-  parameter Impl = "generic"
+  parameter integer Impl = `PRIM_DEFAULT_IMPL
 ) (
   input        clk_i,
   input        en_i,

ParseResult:
UPD HdlModuleDef@@prim_clock_gating to prim_clock_gating
    INS HdlImport@@ to objs
    HdlImport
        list: path
            HdlValueId: prim_pkg
            HdlAll

UPD HdlIdDef@@Impl to Impl
    INS HdlValueId@@integer to Impl
    INS HdlExprNotImplemented@@value to Impl


CommitId: cabf26f33f6964caba640d9638873d681ba4a6a5
[prim] Restore ability to select default implementation
--- a/hw/ip/prim/abstract/prim_clock_gating.sv
+++ b/hw/ip/prim/abstract/prim_clock_gating.sv
@@ -18,14 +18,16 @@ module prim_clock_gating #(
   output logic clk_o
 );
 
-  if (Impl == "generic") begin : gen_generic
+  import prim_pkg::*;
+
+  if (impl_e'(Impl) == ImplGeneric) begin : gen_generic
     prim_generic_clock_gating u_impl_generic (
       .clk_i,
       .en_i,
       .test_en_i,
       .clk_o
     );
-  end else if (Impl == "xilinx") begin : gen_xilinx
+  end else if (impl_e'(Impl) == ImplXilinx) begin : gen_xilinx
     prim_xilinx_clock_gating u_impl_xilinx (
       .clk_i,
       .en_i,
ParseResult:
UPD HdlModuleDef@@prim_clock_gating to prim_clock_gating
    INS HdlImport@@ to objs
    HdlImport
        list: path
            HdlValueId: prim_pkg
            HdlAll

UPD HdlIdDef@@clk_o to clk_o
    INS HdlOp@@PARAMETRIZATION to clk_o
    UPD HdlOp@@PARAMETRIZATION to PARAMETRIZATION
        INS list@@ops to PARAMETRIZATION

UPD HdlStmIf@@ to 
    UPD HdlOp@@EQ to EQ
        INS list@@ops to EQ
        INS HdlOp@@CALL to ops
        INS HdlValueId@@ImplGeneric to ops
        UPD HdlOp@@CALL to CALL
            INS HdlValueId@@impl_e to ops
    UPD HdlOp@@EQ to EQ
        INS list@@ops to EQ
        INS HdlOp@@CALL to ops
        INS HdlValueId@@ImplXilinx to ops
        UPD HdlOp@@CALL to CALL
            INS HdlValueId@@impl_e to ops

UPD HdlIdDef@@clk_o to clk_o
    MOV HdlValueId@@logic to clk_o
    HdlValueId: logic

UPD HdlStmIf@@ to 
    UPD HdlOp@@EQ to EQ
        MOV list@@ops to EQ
        list: ops
            HdlValueId: Impl
            str
        DEL str@@ from ops
    UPD HdlOp@@EQ to EQ
        MOV list@@ops to EQ
        list: ops
            HdlValueId: Impl
            str
        DEL str@@ from ops


CommitId: 6d4436f7fdc1a818849f9a7969ab30973c173f36
[csrng/sec] remove AES bypass, clean register debug
--- a/hw/ip/csrng/rtl/csrng_block_encrypt.sv
+++ b/hw/ip/csrng/rtl/csrng_block_encrypt.sv
@@ -16,9 +16,7 @@ module csrng_block_encrypt import csrng_pkg::*; #(
   input logic                rst_ni,
 
    // update interface
-  input logic                block_encrypt_bypass_i,
   input logic                block_encrypt_enable_i,
-  input logic                block_encrypt_lc_hw_debug_not_on_i,
   input logic                block_encrypt_req_i,
   output logic               block_encrypt_rdy_o,
   input logic [KeyLen-1:0]   block_encrypt_key_i,

ParseResult:
DEL HdlIdDef@@block_encrypt_bypass_i from ports
HdlIdDef: block_encrypt_bypass_i
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: IN

DEL HdlIdDef@@block_encrypt_lc_hw_debug_not_on_i from ports
HdlIdDef: block_encrypt_lc_hw_debug_not_on_i
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: IN


CommitId: 6d4436f7fdc1a818849f9a7969ab30973c173f36
[csrng/sec] remove AES bypass, clean register debug
--- a/hw/ip/csrng/rtl/csrng_block_encrypt.sv
+++ b/hw/ip/csrng/rtl/csrng_block_encrypt.sv
@@ -36,7 +34,7 @@ module csrng_block_encrypt import csrng_pkg::*; #(
 );
 
   localparam int BlkEncFifoDepth = 1;
-  localparam int BlkEncFifoWidth = BlkLen+StateId+Cmd;
+  localparam int BlkEncFifoWidth = StateId+Cmd;
   localparam int NumShares = 1;
 
   // signals

ParseResult:
UPD HdlIdDef@@BlkEncFifoWidth to BlkEncFifoWidth
    UPD HdlOp@@ADD to ADD
        UPD HdlOp@@ADD to ADD
            MOV HdlValueId@@StateId to ops
            HdlValueId: StateId
            DEL HdlValueId@@BlkLen from ops
            DEL list@@ops from ADD
        DEL HdlOp@@ADD from ops


CommitId: 6d4436f7fdc1a818849f9a7969ab30973c173f36
[csrng/sec] remove AES bypass, clean register debug
--- a/hw/ip/csrng/rtl/csrng_block_encrypt.sv
+++ b/hw/ip/csrng/rtl/csrng_block_encrypt.sv
@@ -50,7 +48,6 @@ module csrng_block_encrypt import csrng_pkg::*; #(
   // breakout
   logic [Cmd-1:0]             sfifo_blkenc_cmd;
   logic [StateId-1:0]         sfifo_blkenc_id;
-  logic [BlkLen-1:0]          sfifo_blkenc_v;
 
   aes_pkg::sp2v_e       cipher_in_valid;
   aes_pkg::sp2v_e       cipher_in_ready;

ParseResult:
DEL HdlIdDef@@sfifo_blkenc_v from objs
HdlIdDef: sfifo_blkenc_v
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlOp: SUB
                        list: ops
                            HdlValueId: BlkLen
                            HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: INTERNAL


CommitId: 6d4436f7fdc1a818849f9a7969ab30973c173f36
[csrng/sec] remove AES bypass, clean register debug
--- a/hw/ip/csrng/rtl/csrng_block_encrypt.sv
+++ b/hw/ip/csrng/rtl/csrng_block_encrypt.sv
@@ -81,7 +78,7 @@ module csrng_block_encrypt import csrng_pkg::*; #(
   // aes cipher core lifecycle enable
   //--------------------------------------------
 
-  assign aes_cipher_core_enable = (!block_encrypt_bypass_i) || block_encrypt_lc_hw_debug_not_on_i;
+  assign     aes_cipher_core_enable = block_encrypt_enable_i;
 
   //--------------------------------------------
   // aes cipher core

ParseResult:
UPD HdlStmAssign@@ to 
    UPD HdlOp@@OR_LOG to OR_LOG
        UPD HdlOp@@NEG_LOG to NEG_LOG
            UPD HdlValueId@@block_encrypt_bypass_i to block_encrypt_enable_i
            MOV HdlValueId@@block_encrypt_bypass_i to ops
            HdlValueId: block_encrypt_bypass_i
            DEL list@@ops from NEG_LOG
        DEL HdlOp@@NEG_LOG from ops
        DEL HdlValueId@@block_encrypt_lc_hw_debug_not_on_i from ops
        DEL list@@ops from OR_LOG
    DEL HdlOp@@OR_LOG from 


CommitId: 6d4436f7fdc1a818849f9a7969ab30973c173f36
[csrng/sec] remove AES bypass, clean register debug
--- a/hw/ip/csrng/rtl/csrng_block_encrypt.sv
+++ b/hw/ip/csrng/rtl/csrng_block_encrypt.sv
@@ -150,24 +147,20 @@ module csrng_block_encrypt import csrng_pkg::*; #(
   );
 
   assign sfifo_blkenc_push = block_encrypt_req_i && !sfifo_blkenc_full;
-  assign sfifo_blkenc_wdata = {block_encrypt_v_i,block_encrypt_id_i,block_encrypt_cmd_i};
+  assign sfifo_blkenc_wdata = {block_encrypt_id_i,block_encrypt_cmd_i};
 
-  assign block_encrypt_rdy_o = !aes_cipher_core_enable ? !sfifo_blkenc_full :
-               (cipher_in_ready == aes_pkg::SP2V_HIGH) ? 1'b1               : 1'b0;
+  assign block_encrypt_rdy_o = (cipher_in_ready == aes_pkg::SP2V_HIGH);
 
   assign sfifo_blkenc_pop = block_encrypt_ack_o;
-  assign {sfifo_blkenc_v,sfifo_blkenc_id,sfifo_blkenc_cmd} = sfifo_blkenc_rdata;
+  assign {sfifo_blkenc_id,sfifo_blkenc_cmd} = sfifo_blkenc_rdata;
 
-  assign block_encrypt_ack_o = block_encrypt_rdy_i &&
-         (!aes_cipher_core_enable                  ? sfifo_blkenc_not_empty :
-          (cipher_out_valid == aes_pkg::SP2V_HIGH) ? 1'b1                   : 1'b0);
+  assign block_encrypt_ack_o = block_encrypt_rdy_i && (cipher_out_valid == aes_pkg::SP2V_HIGH);
 
   assign block_encrypt_cmd_o = sfifo_blkenc_cmd;
   assign block_encrypt_id_o = sfifo_blkenc_id;
-  assign block_encrypt_v_o = !aes_cipher_core_enable ? sfifo_blkenc_v : cipher_data_out;
-  assign cipher_out_ready =
-         block_encrypt_rdy_i ? aes_pkg::SP2V_HIGH :
-         aes_pkg::SP2V_LOW;
+  assign block_encrypt_v_o = cipher_data_out;
+
+  assign cipher_out_ready = block_encrypt_rdy_i ? aes_pkg::SP2V_HIGH : aes_pkg::SP2V_LOW;
 
   assign block_encrypt_sfifo_blkenc_err_o =
          {(sfifo_blkenc_push && sfifo_blkenc_full),
ParseResult:
UPD HdlStmAssign@@ to 
    UPD HdlOp@@TERNARY to TERNARY
        UPD HdlOp@@TERNARY to TERNARY
            MOV HdlOp@@EQ to ops
            HdlOp: EQ
                list: ops
                    HdlValueId: cipher_in_ready
                    HdlOp: DOUBLE_COLON
                        list: ops
                            HdlValueId: aes_pkg
                            HdlValueId: SP2V_HIGH
            DEL HdlValueInt@@1 from ops
            DEL HdlValueInt@@0 from ops
            DEL list@@ops from TERNARY
        DEL HdlOp@@NEG_LOG from ops
        HdlOp: NEG_LOG
            list: ops
                HdlValueId: aes_cipher_core_enable
        DEL HdlOp@@NEG_LOG from ops
        HdlOp: NEG_LOG
            list: ops
                HdlValueId: sfifo_blkenc_full
        DEL HdlOp@@TERNARY from ops
        DEL list@@ops from TERNARY
    DEL HdlOp@@TERNARY from 

UPD HdlStmAssign@@ to 
    UPD HdlOp@@AND_LOG to AND_LOG
        UPD HdlOp@@TERNARY to TERNARY
            UPD HdlOp@@TERNARY to AND_LOG
            MOV HdlOp@@TERNARY to ops
            HdlOp: TERNARY
                list: ops
                    HdlOp: EQ
                        list: ops
                            HdlValueId: cipher_out_valid
                            HdlOp: DOUBLE_COLON
                                list: ops
                                    HdlValueId: aes_pkg
                                    HdlValueId: SP2V_HIGH
                    HdlValueInt: 1
                    HdlValueInt: 0
            UPD HdlOp@@TERNARY to TERNARY
                DEL HdlValueInt@@1 from ops
                DEL HdlValueInt@@0 from ops
            DEL HdlOp@@NEG_LOG from ops
            HdlOp: NEG_LOG
                list: ops
                    HdlValueId: aes_cipher_core_enable
            DEL HdlValueId@@sfifo_blkenc_not_empty from ops
            DEL list@@ops from TERNARY
        MOV HdlValueId@@block_encrypt_rdy_i to ops
        HdlValueId: block_encrypt_rdy_i
        DEL HdlOp@@TERNARY from ops
        DEL list@@ops from AND_LOG
    DEL HdlOp@@AND_LOG from 

UPD HdlStmAssign@@ to 
    UPD HdlOp@@TERNARY to TERNARY
        MOV HdlValueId@@cipher_data_out to ops
        HdlValueId: cipher_data_out
        DEL HdlOp@@NEG_LOG from ops
        HdlOp: NEG_LOG
            list: ops
                HdlValueId: aes_cipher_core_enable
        DEL HdlValueId@@sfifo_blkenc_v from ops
        DEL list@@ops from TERNARY
    DEL HdlOp@@TERNARY from 

UPD HdlStmAssign@@ to 
    UPD HdlOp@@CONCAT to CONCAT
        UPD HdlOp@@CONCAT to CONCAT
            MOV HdlValueId@@block_encrypt_id_i to ops
            HdlValueId: block_encrypt_id_i
            DEL HdlValueId@@block_encrypt_v_i from ops
            DEL list@@ops from CONCAT
        DEL HdlOp@@CONCAT from ops

UPD HdlStmAssign@@ to 
    UPD HdlOp@@CONCAT to CONCAT
        UPD HdlOp@@CONCAT to CONCAT
            MOV HdlValueId@@sfifo_blkenc_id to ops
            HdlValueId: sfifo_blkenc_id
            DEL HdlValueId@@sfifo_blkenc_v from ops
            DEL list@@ops from CONCAT
        DEL HdlOp@@CONCAT from ops


CommitId: efaa97eb056324fec332981139a3370db290679a
[ast] AscenLint fixes and new analog typedef
--- a/hw/top_earlgrey/ip/ast/rtl/io_osc.sv
+++ b/hw/top_earlgrey/ip/ast/rtl/io_osc.sv
@@ -5,24 +5,25 @@
 // *Name: io_osc
 // *Module Description: IO Clock Oscilator
 //############################################################################
-`timescale 1ns / 10ps
-
-module io_osc #(
-`ifndef VERILATOR
-// synopsys translate_off
-  parameter time IO_EN_RDLY = 5us
-// synopsys translate_on
+`ifndef SYNTHESIS
+`timescale 1ns / 1ps
+`else
+`ifndef PRIM_DEFAULT_IMPL
+`define PRIM_DEFAULT_IMPL prim_pkg::ImplGeneric
+`endif
 `endif
-) (
+
+module io_osc (
   input vcore_pok_h_i,   // VCORE POK @3.3V
   input io_en_i,         // IO Source Clock Enable
   output logic io_clk_o  // IO Clock Output
 );
 
-// Behavioral Model
+`ifndef SYNTHESIS
+import ast_bhv_pkg::* ;
 
-`ifndef VERILATOR
-// synopsys translate_off
+// Behavioral Model
+////////////////////////////////////////
 localparam real IoClkPeriod = 1000000/96;  // ~10416.666667ps (96Mhz)
 logic clk, en_dly, en_osc, en_osc_re, en_osc_fe;
 

ParseResult:
UPD HdlModuleDef@@io_osc to io_osc
    INS HdlImport@@ to objs
    HdlImport
        list: path
            HdlValueId: ast_bhv_pkg
            HdlAll

DEL HdlIdDef@@IO_EN_RDLY from params
HdlIdDef: IO_EN_RDLY
    HdlValueId: time
    HdlExprNotImplemented: value
    HdlDirection: INTERNAL


CommitId: efaa97eb056324fec332981139a3370db290679a
[ast] AscenLint fixes and new analog typedef
--- a/hw/top_earlgrey/ip/ast/rtl/io_osc.sv
+++ b/hw/top_earlgrey/ip/ast/rtl/io_osc.sv
@@ -30,7 +31,7 @@ initial begin
   clk = 1'b0;
   $display("\nIO Clock Period: %0dps", IoClkPeriod);
   en_dly = 1'b0;  // to block init X
-  #(IO_EN_RDLY+1) en_dly = 1'b1;
+  #(IO_EN_RDLY + VCAON_POK_RDLY + 1) en_dly = 1'b1;
 end
 
 // Enable 5us RC Delay

ParseResult:
UPD HdlModuleDef@@io_osc to io_osc
    INS HdlImport@@ to objs
    HdlImport
        list: path
            HdlValueId: ast_bhv_pkg
            HdlAll

UPD HdlStmWait@@[{'__class__': 'HdlOp',  'fn': 'ADD',  'ops': ['IO_EN_RDLY', {'__class__': 'HdlValueInt', 'base': 10, 'val': '1'}]} ] to [{'__class__': 'HdlOp',  'fn': 'ADD',  'ops': [{'__class__': 'HdlOp',           'fn': 'ADD',           'ops': ['IO_EN_RDLY', 'VCAON_POK_RDLY']},          {'__class__': 'HdlValueInt', 'base': 10, 'val': '1'}]} ]

UPD HdlStmWait@@[{'__class__': 'HdlOp',  'fn': 'ADD',  'ops': [{'__class__': 'HdlOp',           'fn': 'ADD',           'ops': ['IO_EN_RDLY', 'VCAON_POK_RDLY']},          {'__class__': 'HdlValueInt', 'base': 10, 'val': '1'}]} ] to [{'__class__': 'HdlOp',  'fn': 'ADD',  'ops': [{'__class__': 'HdlOp',           'fn': 'ADD',           'ops': ['IO_EN_RDLY', 'VCAON_POK_RDLY']},          {'__class__': 'HdlValueInt', 'base': 10, 'val': '1'}]} ]
    UPD HdlOp@@ADD to ADD
        INS HdlOp@@ADD to ops
        UPD HdlOp@@ADD to ADD
            INS list@@ops to ADD
            INS HdlValueId@@VCAON_POK_RDLY to ops

UPD HdlStmWait@@[{'__class__': 'HdlOp',  'fn': 'ADD',  'ops': ['IO_EN_RDLY', {'__class__': 'HdlValueInt', 'base': 10, 'val': '1'}]} ] to [{'__class__': 'HdlOp',  'fn': 'ADD',  'ops': ['IO_EN_RDLY', {'__class__': 'HdlValueInt', 'base': 10, 'val': '1'}]} ]
    UPD HdlOp@@ADD to ADD
        MOV HdlValueId@@IO_EN_RDLY to ops
        HdlValueId: IO_EN_RDLY


CommitId: efaa97eb056324fec332981139a3370db290679a
[ast] AscenLint fixes and new analog typedef
--- a/hw/top_earlgrey/ip/ast/rtl/io_osc.sv
+++ b/hw/top_earlgrey/ip/ast/rtl/io_osc.sv
@@ -40,8 +41,11 @@ assign en_osc_re = vcore_pok_h_i && io_en_i && (io_en_dly && en_dly);
 
 // Syncronize en_osc to clk FE for glitch free disable
 always_ff @( negedge clk or negedge vcore_pok_h_i ) begin
-  if ( !vcore_pok_h_i ) en_osc_fe <= 1'b0;
-  else                  en_osc_fe <= en_osc_re;
+  if ( !vcore_pok_h_i ) begin
+    en_osc_fe <= 1'b0;
+  end else begin
+    en_osc_fe <= en_osc_re;
+  end
 end
 
 assign en_osc = en_osc_re || en_osc_fe;  // EN -> 1 || EN -> 0

ParseResult:
UPD HdlModuleDef@@io_osc to io_osc
    INS HdlImport@@ to objs
    HdlImport
        list: path
            HdlValueId: ast_bhv_pkg
            HdlAll

UPD HdlStmIf@@ to 
    INS HdlStmBlock@@SEQ to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmAssign@@if_true to 

MOV HdlStmAssign@@if_true to 
HdlStmAssign: if_true
    HdlValueInt: 0
    HdlValueId: en_osc_fe

UPD HdlStmAssign@@if_false to 

MOV HdlStmAssign@@if_false to 
HdlStmAssign: if_false
    HdlValueId: en_osc_re
    HdlValueId: en_osc_fe


CommitId: ee11011fe057a188e3d2ce61182ddb10e0521685
[entropy_src/rtl] fixes #5800
--- a/hw/ip/entropy_src/rtl/entropy_src_core.sv
+++ b/hw/ip/entropy_src/rtl/entropy_src_core.sv
@@ -577,7 +577,7 @@ module entropy_src_core import entropy_src_pkg::*; #(
 
   assign sfifo_esrng_clr  = !es_enable;
   assign sfifo_esrng_wdata = es_rng_bus;
-  assign sfifo_esrng_pop = es_enable && es_rate_entropy_pulse && sfifo_esrng_not_empty;
+  assign sfifo_esrng_pop = es_enable_rng && es_rng_src_valid && sfifo_esrng_not_empty;
 
   // note: allow input rng raw entropy to drop
 
ParseResult:
INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: AND_LOG
        list: ops
            HdlOp: AND_LOG
                list: ops
                    HdlValueId: es_enable_rng
                    HdlValueId: es_rng_src_valid
            HdlValueId: sfifo_esrng_not_empty
    HdlValueId: sfifo_esrng_pop

DEL HdlStmAssign@@ from objs
HdlStmAssign
    HdlOp: AND_LOG
        list: ops
            HdlOp: AND_LOG
                list: ops
                    HdlValueId: es_enable
                    HdlValueId: es_rate_entropy_pulse
            HdlValueId: sfifo_esrng_not_empty
    HdlValueId: sfifo_esrng_pop


CommitId: 387ba86c54fb4ac7c6c9b326c3d04288bf499df3
[padctrl] Fix lint errors due to recent changes
--- a/hw/ip/padctrl/rtl/padctrl.sv
+++ b/hw/ip/padctrl/rtl/padctrl.sv
@@ -72,13 +72,13 @@ module padctrl #(
       // dedicated pads
       for (int kk = 0; kk < padctrl_reg_pkg::NDioPads; kk++) begin
         if (reg2hw.dio_pads[kk].qe) begin
-          dio_attr_q[kk] <= (reg2hw.dio_pads[kk].q & warl_mask);
+          dio_attr_q[kk] <= reg2hw.dio_pads[kk].q;
         end
       end
       // muxed pads
       for (int kk = 0; kk < padctrl_reg_pkg::NMioPads; kk++) begin
         if (reg2hw.mio_pads[kk].qe) begin
-          mio_attr_q[kk] <= (reg2hw.mio_pads[kk].q & warl_mask);
+          mio_attr_q[kk] <= reg2hw.mio_pads[kk].q;
         end
       end
     end

ParseResult:
UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        MOV list@@body to SEQ
        list: body
            HdlStmAssign
                HdlOp: AND
                    list: ops
                        HdlOp: DOT
                            list: ops
                                HdlOp: INDEX
                                    list: ops
                                        HdlOp: DOT
                                            list: ops
                                                HdlValueId: reg2hw
                                                HdlValueId: dio_pads
                                        HdlValueId: kk
                                HdlValueId: q
                        HdlValueId: warl_mask
                HdlOp: INDEX
                    list: ops
                        HdlValueId: dio_attr_q
                        HdlValueId: kk

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        MOV list@@body to SEQ
        list: body
            HdlStmAssign
                HdlOp: AND
                    list: ops
                        HdlOp: DOT
                            list: ops
                                HdlOp: INDEX
                                    list: ops
                                        HdlOp: DOT
                                            list: ops
                                                HdlValueId: reg2hw
                                                HdlValueId: mio_pads
                                        HdlValueId: kk
                                HdlValueId: q
                        HdlValueId: warl_mask
                HdlOp: INDEX
                    list: ops
                        HdlValueId: mio_attr_q
                        HdlValueId: kk

MOV HdlStmIf@@ to body
HdlStmIf
    HdlOp: DOT
        list: ops
            HdlOp: INDEX
                list: ops
                    HdlOp: DOT
                        list: ops
                            HdlValueId: reg2hw
                            HdlValueId: dio_pads
                    HdlValueId: kk
            HdlValueId: qe
    HdlStmBlock: SEQ
        list: body
            HdlStmAssign
                HdlOp: AND
                    list: ops
                        HdlOp: DOT
                            list: ops
                                HdlOp: INDEX
                                    list: ops
                                        HdlOp: DOT
                                            list: ops
                                                HdlValueId: reg2hw
                                                HdlValueId: dio_pads
                                        HdlValueId: kk
                                HdlValueId: q
                        HdlValueId: warl_mask
                HdlOp: INDEX
                    list: ops
                        HdlValueId: dio_attr_q
                        HdlValueId: kk
    list: elifs

MOV HdlStmIf@@ to body
HdlStmIf
    HdlOp: DOT
        list: ops
            HdlOp: INDEX
                list: ops
                    HdlOp: DOT
                        list: ops
                            HdlValueId: reg2hw
                            HdlValueId: mio_pads
                    HdlValueId: kk
            HdlValueId: qe
    HdlStmBlock: SEQ
        list: body
            HdlStmAssign
                HdlOp: AND
                    list: ops
                        HdlOp: DOT
                            list: ops
                                HdlOp: INDEX
                                    list: ops
                                        HdlOp: DOT
                                            list: ops
                                                HdlValueId: reg2hw
                                                HdlValueId: mio_pads
                                        HdlValueId: kk
                                HdlValueId: q
                        HdlValueId: warl_mask
                HdlOp: INDEX
                    list: ops
                        HdlValueId: mio_attr_q
                        HdlValueId: kk
    list: elifs

UPD HdlStmAssign@@ to 
    UPD HdlOp@@AND to AND
        UPD list@@ops to body
        MOV list@@ops to AND
        list: ops
            HdlOp: DOT
                list: ops
                    HdlOp: INDEX
                        list: ops
                            HdlOp: DOT
                                list: ops
                                    HdlValueId: reg2hw
                                    HdlValueId: dio_pads
                            HdlValueId: kk
                    HdlValueId: q
            HdlValueId: warl_mask
        MOV HdlOp@@DOT to ops
        HdlOp: DOT
            list: ops
                HdlOp: INDEX
                    list: ops
                        HdlOp: DOT
                            list: ops
                                HdlValueId: reg2hw
                                HdlValueId: dio_pads
                        HdlValueId: kk
                HdlValueId: q
        DEL HdlValueId@@warl_mask from ops
    DEL HdlOp@@AND from 

UPD HdlStmAssign@@ to 
    UPD HdlOp@@AND to AND
        UPD list@@ops to body
        MOV list@@ops to AND
        list: ops
            HdlOp: DOT
                list: ops
                    HdlOp: INDEX
                        list: ops
                            HdlOp: DOT
                                list: ops
                                    HdlValueId: reg2hw
                                    HdlValueId: mio_pads
                            HdlValueId: kk
                    HdlValueId: q
            HdlValueId: warl_mask
        MOV HdlOp@@DOT to ops
        HdlOp: DOT
            list: ops
                HdlOp: INDEX
                    list: ops
                        HdlOp: DOT
                            list: ops
                                HdlValueId: reg2hw
                                HdlValueId: mio_pads
                        HdlValueId: kk
                HdlValueId: q
        DEL HdlValueId@@warl_mask from ops
    DEL HdlOp@@AND from 

MOV HdlStmAssign@@ to body
HdlStmAssign
    HdlOp: AND
        list: ops
            HdlOp: DOT
                list: ops
                    HdlOp: INDEX
                        list: ops
                            HdlOp: DOT
                                list: ops
                                    HdlValueId: reg2hw
                                    HdlValueId: dio_pads
                            HdlValueId: kk
                    HdlValueId: q
            HdlValueId: warl_mask
    HdlOp: INDEX
        list: ops
            HdlValueId: dio_attr_q
            HdlValueId: kk

MOV HdlStmAssign@@ to body
HdlStmAssign
    HdlOp: AND
        list: ops
            HdlOp: DOT
                list: ops
                    HdlOp: INDEX
                        list: ops
                            HdlOp: DOT
                                list: ops
                                    HdlValueId: reg2hw
                                    HdlValueId: mio_pads
                            HdlValueId: kk
                    HdlValueId: q
            HdlValueId: warl_mask
    HdlOp: INDEX
        list: ops
            HdlValueId: mio_attr_q
            HdlValueId: kk

UPD HdlStmFor@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ

UPD HdlStmFor@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ


CommitId: 387ba86c54fb4ac7c6c9b326c3d04288bf499df3
[padctrl] Fix lint errors due to recent changes
--- a/hw/ip/padctrl/rtl/padctrl.sv
+++ b/hw/ip/padctrl/rtl/padctrl.sv
@@ -88,15 +88,16 @@ module padctrl #(
   // Connect attributes
   //////////////////////////////////////////////////////
 
+  // using the warl_mask here instead instead of in the register assignment above
+  // avoids lint errors. the unused registers can be removed automatically by most tools.
   for (genvar k = 0; k < padctrl_reg_pkg::NDioPads; k++) begin : gen_dio_attr
-    assign dio_attr_o[k]        = dio_attr_q[k];
-    assign hw2reg.dio_pads[k].d = dio_attr_q[k];
+    assign dio_attr_o[k]        = dio_attr_q[k] & warl_mask;
+    assign hw2reg.dio_pads[k].d = dio_attr_q[k] & warl_mask;
   end
 
   for (genvar k = 0; k < padctrl_reg_pkg::NMioPads; k++) begin : gen_mio_attr
-    assign mio_attr_o[k]        = mio_attr_q[k];
-    assign hw2reg.mio_pads[k].d = mio_attr_q[k];
+    assign mio_attr_o[k]        = mio_attr_q[k] & warl_mask;
+    assign hw2reg.mio_pads[k].d = mio_attr_q[k] & warl_mask;
   end
 
-
 endmodule : padctrl
ParseResult:
MOV HdlStmAssign@@ to body
HdlStmAssign
    HdlOp: INDEX
        list: ops
            HdlValueId: dio_attr_q
            HdlValueId: k
    HdlOp: INDEX
        list: ops
            HdlValueId: dio_attr_o
            HdlValueId: k

MOV HdlStmAssign@@ to body
HdlStmAssign
    HdlOp: INDEX
        list: ops
            HdlValueId: mio_attr_q
            HdlValueId: k
    HdlOp: INDEX
        list: ops
            HdlValueId: mio_attr_o
            HdlValueId: k

UPD HdlStmAssign@@ to 
    INS HdlOp@@AND to 
    UPD HdlOp@@AND to AND
        INS list@@ops to AND

UPD HdlStmAssign@@ to 
    MOV HdlOp@@INDEX to 
    HdlOp: INDEX
        list: ops
            HdlValueId: dio_attr_o
            HdlValueId: k
    MOV HdlOp@@INDEX to 
    HdlOp: INDEX
        list: ops
            HdlValueId: dio_attr_q
            HdlValueId: k

UPD HdlStmAssign@@ to 
    INS HdlOp@@AND to 
    INS HdlValueId@@hw2reg to 
    UPD HdlOp@@AND to AND
        INS list@@ops to AND
        INS HdlValueId@@warl_mask to ops

UPD HdlStmAssign@@ to 
    MOV HdlOp@@INDEX to 
    HdlOp: INDEX
        list: ops
            HdlValueId: mio_attr_o
            HdlValueId: k
    MOV HdlOp@@INDEX to 
    HdlOp: INDEX
        list: ops
            HdlValueId: mio_attr_q
            HdlValueId: k

UPD HdlStmAssign@@ to 
    MOV HdlOp@@INDEX to 
    HdlOp: INDEX
        list: ops
            HdlValueId: dio_attr_q
            HdlValueId: k
    UPD HdlValueId@@hw2reg to warl_mask
    MOV HdlValueId@@hw2reg to 
    HdlValueId: hw2reg

UPD HdlStmAssign@@ to 
    MOV HdlOp@@INDEX to 
    HdlOp: INDEX
        list: ops
            HdlValueId: mio_attr_q
            HdlValueId: k
    UPD HdlValueId@@hw2reg to warl_mask
    MOV HdlValueId@@hw2reg to 
    HdlValueId: hw2reg


CommitId: 4e7114e85a61e4a3814ee56bb689cd3e8c4292a2
[sram_ctrl] Absorb prim_ram_1p_scr
--- a/hw/top_earlgrey/ip/xbar_peri/rtl/autogen/xbar_peri.sv
+++ b/hw/top_earlgrey/ip/xbar_peri/rtl/autogen/xbar_peri.sv
@@ -86,8 +86,6 @@ module xbar_peri (
   input  tlul_pkg::tl_d2h_t tl_clkmgr_aon_i,
   output tlul_pkg::tl_h2d_t tl_pinmux_aon_o,
   input  tlul_pkg::tl_d2h_t tl_pinmux_aon_i,
-  output tlul_pkg::tl_h2d_t tl_ram_ret_aon_o,
-  input  tlul_pkg::tl_d2h_t tl_ram_ret_aon_i,
   output tlul_pkg::tl_h2d_t tl_otp_ctrl__core_o,
   input  tlul_pkg::tl_d2h_t tl_otp_ctrl__core_i,
   output tlul_pkg::tl_h2d_t tl_otp_ctrl__prim_o,

ParseResult:
MOV HdlIdDef@@tl_ram_ret_aon_o to ports
HdlIdDef: tl_ram_ret_aon_o
    HdlOp: DOUBLE_COLON
        list: ops
            HdlValueId: tlul_pkg
            HdlValueId: tl_h2d_t
    HdlDirection: OUT

MOV HdlIdDef@@tl_ram_ret_aon_i to ports
HdlIdDef: tl_ram_ret_aon_i
    HdlOp: DOUBLE_COLON
        list: ops
            HdlValueId: tlul_pkg
            HdlValueId: tl_d2h_t
    HdlDirection: IN

UPD HdlIdDef@@tl_ram_ret_aon_o to tl_sram_ctrl_ret_aon__regs_o

UPD HdlIdDef@@tl_ram_ret_aon_i to tl_sram_ctrl_ret_aon__regs_i


CommitId: 4e7114e85a61e4a3814ee56bb689cd3e8c4292a2
[sram_ctrl] Absorb prim_ram_1p_scr
--- a/hw/top_earlgrey/ip/xbar_peri/rtl/autogen/xbar_peri.sv
+++ b/hw/top_earlgrey/ip/xbar_peri/rtl/autogen/xbar_peri.sv
@@ -98,8 +96,10 @@ module xbar_peri (
   input  tlul_pkg::tl_d2h_t tl_sensor_ctrl_aon_i,
   output tlul_pkg::tl_h2d_t tl_alert_handler_o,
   input  tlul_pkg::tl_d2h_t tl_alert_handler_i,
-  output tlul_pkg::tl_h2d_t tl_sram_ctrl_ret_aon_o,
-  input  tlul_pkg::tl_d2h_t tl_sram_ctrl_ret_aon_i,
+  output tlul_pkg::tl_h2d_t tl_sram_ctrl_ret_aon__regs_o,
+  input  tlul_pkg::tl_d2h_t tl_sram_ctrl_ret_aon__regs_i,
+  output tlul_pkg::tl_h2d_t tl_sram_ctrl_ret_aon__ram_o,
+  input  tlul_pkg::tl_d2h_t tl_sram_ctrl_ret_aon__ram_i,
   output tlul_pkg::tl_h2d_t tl_aon_timer_aon_o,
   input  tlul_pkg::tl_d2h_t tl_aon_timer_aon_i,
   output tlul_pkg::tl_h2d_t tl_sysrst_ctrl_aon_o,

ParseResult:
UPD HdlIdDef@@tl_sram_ctrl_ret_aon_o to tl_sram_ctrl_ret_aon__ram_o

UPD HdlIdDef@@tl_sram_ctrl_ret_aon_i to tl_sram_ctrl_ret_aon__ram_i


CommitId: 4e7114e85a61e4a3814ee56bb689cd3e8c4292a2
[sram_ctrl] Absorb prim_ram_1p_scr
--- a/hw/top_earlgrey/ip/xbar_peri/rtl/autogen/xbar_peri.sv
+++ b/hw/top_earlgrey/ip/xbar_peri/rtl/autogen/xbar_peri.sv
@@ -186,29 +186,29 @@ module xbar_peri (
   assign tl_pinmux_aon_o = tl_s1n_31_ds_h2d[17];
   assign tl_s1n_31_ds_d2h[17] = tl_pinmux_aon_i;
 
-  assign tl_ram_ret_aon_o = tl_s1n_31_ds_h2d[18];
-  assign tl_s1n_31_ds_d2h[18] = tl_ram_ret_aon_i;
+  assign tl_otp_ctrl__core_o = tl_s1n_31_ds_h2d[18];
+  assign tl_s1n_31_ds_d2h[18] = tl_otp_ctrl__core_i;
 
-  assign tl_otp_ctrl__core_o = tl_s1n_31_ds_h2d[19];
-  assign tl_s1n_31_ds_d2h[19] = tl_otp_ctrl__core_i;
+  assign tl_otp_ctrl__prim_o = tl_s1n_31_ds_h2d[19];
+  assign tl_s1n_31_ds_d2h[19] = tl_otp_ctrl__prim_i;
 
-  assign tl_otp_ctrl__prim_o = tl_s1n_31_ds_h2d[20];
-  assign tl_s1n_31_ds_d2h[20] = tl_otp_ctrl__prim_i;
+  assign tl_lc_ctrl_o = tl_s1n_31_ds_h2d[20];
+  assign tl_s1n_31_ds_d2h[20] = tl_lc_ctrl_i;
 
-  assign tl_lc_ctrl_o = tl_s1n_31_ds_h2d[21];
-  assign tl_s1n_31_ds_d2h[21] = tl_lc_ctrl_i;
+  assign tl_sensor_ctrl_aon_o = tl_s1n_31_ds_h2d[21];
+  assign tl_s1n_31_ds_d2h[21] = tl_sensor_ctrl_aon_i;
 
-  assign tl_sensor_ctrl_aon_o = tl_s1n_31_ds_h2d[22];
-  assign tl_s1n_31_ds_d2h[22] = tl_sensor_ctrl_aon_i;
+  assign tl_alert_handler_o = tl_s1n_31_ds_h2d[22];
+  assign tl_s1n_31_ds_d2h[22] = tl_alert_handler_i;
 
-  assign tl_alert_handler_o = tl_s1n_31_ds_h2d[23];
-  assign tl_s1n_31_ds_d2h[23] = tl_alert_handler_i;
+  assign tl_ast_o = tl_s1n_31_ds_h2d[23];
+  assign tl_s1n_31_ds_d2h[23] = tl_ast_i;
 
-  assign tl_ast_o = tl_s1n_31_ds_h2d[24];
-  assign tl_s1n_31_ds_d2h[24] = tl_ast_i;
+  assign tl_sram_ctrl_ret_aon__ram_o = tl_s1n_31_ds_h2d[24];
+  assign tl_s1n_31_ds_d2h[24] = tl_sram_ctrl_ret_aon__ram_i;
 
-  assign tl_sram_ctrl_ret_aon_o = tl_s1n_31_ds_h2d[25];
-  assign tl_s1n_31_ds_d2h[25] = tl_sram_ctrl_ret_aon_i;
+  assign tl_sram_ctrl_ret_aon__regs_o = tl_s1n_31_ds_h2d[25];
+  assign tl_s1n_31_ds_d2h[25] = tl_sram_ctrl_ret_aon__regs_i;
 
   assign tl_aon_timer_aon_o = tl_s1n_31_ds_h2d[26];
   assign tl_s1n_31_ds_d2h[26] = tl_aon_timer_aon_i;

ParseResult:
UPD HdlStmAssign@@ to 
    UPD HdlValueId@@tl_ram_ret_aon_o to tl_otp_ctrl__core_o

UPD HdlStmAssign@@ to 
    UPD HdlValueId@@tl_ram_ret_aon_i to tl_otp_ctrl__core_i

UPD HdlStmAssign@@ to 
    UPD HdlValueId@@tl_otp_ctrl__core_o to tl_otp_ctrl__prim_o

UPD HdlStmAssign@@ to 
    UPD HdlValueId@@tl_otp_ctrl__core_i to tl_otp_ctrl__prim_i

UPD HdlStmAssign@@ to 
    UPD HdlValueId@@tl_otp_ctrl__prim_o to tl_lc_ctrl_o

UPD HdlStmAssign@@ to 
    UPD HdlValueId@@tl_otp_ctrl__prim_i to tl_lc_ctrl_i

UPD HdlStmAssign@@ to 
    UPD HdlValueId@@tl_lc_ctrl_o to tl_sensor_ctrl_aon_o

UPD HdlStmAssign@@ to 
    UPD HdlValueId@@tl_lc_ctrl_i to tl_sensor_ctrl_aon_i

UPD HdlStmAssign@@ to 
    UPD HdlValueId@@tl_sensor_ctrl_aon_o to tl_alert_handler_o

UPD HdlStmAssign@@ to 
    UPD HdlValueId@@tl_sensor_ctrl_aon_i to tl_alert_handler_i

UPD HdlStmAssign@@ to 
    UPD HdlValueId@@tl_alert_handler_o to tl_ast_o

UPD HdlStmAssign@@ to 
    UPD HdlValueId@@tl_alert_handler_i to tl_ast_i

UPD HdlStmAssign@@ to 
    UPD HdlValueId@@tl_ast_o to tl_sram_ctrl_ret_aon__ram_o

UPD HdlStmAssign@@ to 
    UPD HdlValueId@@tl_ast_i to tl_sram_ctrl_ret_aon__ram_i

UPD HdlStmAssign@@ to 
    UPD HdlValueId@@tl_sram_ctrl_ret_aon_o to tl_sram_ctrl_ret_aon__regs_o

UPD HdlStmAssign@@ to 
    UPD HdlValueId@@tl_sram_ctrl_ret_aon_i to tl_sram_ctrl_ret_aon__regs_i


CommitId: 4e7114e85a61e4a3814ee56bb689cd3e8c4292a2
[sram_ctrl] Absorb prim_ram_1p_scr
--- a/hw/top_earlgrey/ip/xbar_peri/rtl/autogen/xbar_peri.sv
+++ b/hw/top_earlgrey/ip/xbar_peri/rtl/autogen/xbar_peri.sv
@@ -301,35 +301,35 @@ module xbar_peri (
       dev_sel_s1n_31 = 5'd17;
 
     end else if ((tl_s1n_31_us_h2d.a_address &
-                  ~(ADDR_MASK_RAM_RET_AON)) == ADDR_SPACE_RAM_RET_AON) begin
+                  ~(ADDR_MASK_OTP_CTRL__CORE)) == ADDR_SPACE_OTP_CTRL__CORE) begin
       dev_sel_s1n_31 = 5'd18;
 
     end else if ((tl_s1n_31_us_h2d.a_address &
-                  ~(ADDR_MASK_OTP_CTRL__CORE)) == ADDR_SPACE_OTP_CTRL__CORE) begin
+                  ~(ADDR_MASK_OTP_CTRL__PRIM)) == ADDR_SPACE_OTP_CTRL__PRIM) begin
       dev_sel_s1n_31 = 5'd19;
 
     end else if ((tl_s1n_31_us_h2d.a_address &
-                  ~(ADDR_MASK_OTP_CTRL__PRIM)) == ADDR_SPACE_OTP_CTRL__PRIM) begin
+                  ~(ADDR_MASK_LC_CTRL)) == ADDR_SPACE_LC_CTRL) begin
       dev_sel_s1n_31 = 5'd20;
 
     end else if ((tl_s1n_31_us_h2d.a_address &
-                  ~(ADDR_MASK_LC_CTRL)) == ADDR_SPACE_LC_CTRL) begin
+                  ~(ADDR_MASK_SENSOR_CTRL_AON)) == ADDR_SPACE_SENSOR_CTRL_AON) begin
       dev_sel_s1n_31 = 5'd21;
 
     end else if ((tl_s1n_31_us_h2d.a_address &
-                  ~(ADDR_MASK_SENSOR_CTRL_AON)) == ADDR_SPACE_SENSOR_CTRL_AON) begin
+                  ~(ADDR_MASK_ALERT_HANDLER)) == ADDR_SPACE_ALERT_HANDLER) begin
       dev_sel_s1n_31 = 5'd22;
 
     end else if ((tl_s1n_31_us_h2d.a_address &
-                  ~(ADDR_MASK_ALERT_HANDLER)) == ADDR_SPACE_ALERT_HANDLER) begin
+                  ~(ADDR_MASK_AST)) == ADDR_SPACE_AST) begin
       dev_sel_s1n_31 = 5'd23;
 
     end else if ((tl_s1n_31_us_h2d.a_address &
-                  ~(ADDR_MASK_AST)) == ADDR_SPACE_AST) begin
+                  ~(ADDR_MASK_SRAM_CTRL_RET_AON__RAM)) == ADDR_SPACE_SRAM_CTRL_RET_AON__RAM) begin
       dev_sel_s1n_31 = 5'd24;
 
     end else if ((tl_s1n_31_us_h2d.a_address &
-                  ~(ADDR_MASK_SRAM_CTRL_RET_AON)) == ADDR_SPACE_SRAM_CTRL_RET_AON) begin
+                  ~(ADDR_MASK_SRAM_CTRL_RET_AON__REGS)) == ADDR_SPACE_SRAM_CTRL_RET_AON__REGS) begin
       dev_sel_s1n_31 = 5'd25;
 
     end else if ((tl_s1n_31_us_h2d.a_address &
ParseResult:
UPD HdlStmIf@@ to 
    MOV tuple@@ to elifs
    tuple
        HdlOp: EQ
            list: ops
                HdlOp: AND
                    list: ops
                        HdlOp: DOT
                            list: ops
                                HdlValueId: tl_s1n_31_us_h2d
                                HdlValueId: a_address
                        HdlOp: NEG
                            list: ops
                                HdlValueId: ADDR_MASK_RAM_RET_AON
                HdlValueId: ADDR_SPACE_RAM_RET_AON
        HdlStmBlock: SEQ
            list: body
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: dev_sel_s1n_31
                        HdlValueInt: 18
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: dev_sel_s1n_31
                    HdlValueInt: 18
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: dev_sel_s1n_31
                    HdlValueInt: 19
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: dev_sel_s1n_31
                    HdlValueInt: 20
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: dev_sel_s1n_31
                    HdlValueInt: 21
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: dev_sel_s1n_31
                    HdlValueInt: 22
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: dev_sel_s1n_31
                    HdlValueInt: 23
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: dev_sel_s1n_31
                    HdlValueInt: 24
    UPD HdlOp@@EQ to EQ
        UPD HdlValueId@@ADDR_SPACE_RAM_RET_AON to ADDR_SPACE_SRAM_CTRL_RET_AON__RAM
        UPD HdlOp@@AND to AND
            UPD HdlOp@@NEG to NEG
                UPD HdlValueId@@ADDR_MASK_RAM_RET_AON to ADDR_MASK_SRAM_CTRL_RET_AON__RAM
    UPD HdlOp@@EQ to EQ
        UPD HdlValueId@@ADDR_SPACE_SRAM_CTRL_RET_AON to ADDR_SPACE_SRAM_CTRL_RET_AON__REGS
        UPD HdlOp@@AND to AND
            UPD HdlOp@@NEG to NEG
                UPD HdlValueId@@ADDR_MASK_SRAM_CTRL_RET_AON to ADDR_MASK_SRAM_CTRL_RET_AON__REGS


CommitId: 309a47974f0ce84cab3d559a85975448dfbd7e2f
[prim] Use prim_pkg::impl_e instead of int for Impl
--- a/hw/ip/prim/abstract/prim_pad_wrapper.sv
+++ b/hw/ip/prim/abstract/prim_pad_wrapper.sv
@@ -7,11 +7,11 @@
 
 
 `ifndef PRIM_DEFAULT_IMPL
-  `define PRIM_DEFAULT_IMPL integer'(prim_pkg::ImplGeneric)
+  `define PRIM_DEFAULT_IMPL prim_pkg::ImplGeneric
 `endif
 
 module prim_pad_wrapper #(
-  parameter int          Impl   = `PRIM_DEFAULT_IMPL,
+  parameter prim_pkg::impl_e Impl = `PRIM_DEFAULT_IMPL,
   parameter int unsigned AttrDw = 6
 ) (
   inout  wire        inout_io, // bidirectional pad

ParseResult:
UPD HdlIdDef@@Impl to Impl
    INS HdlOp@@DOUBLE_COLON to Impl
    INS HdlOp@@DOUBLE_COLON to Impl
    HdlOp: DOUBLE_COLON
        list: ops
            HdlValueId: prim_pkg
            HdlValueId: ImplGeneric
    UPD HdlOp@@DOUBLE_COLON to DOUBLE_COLON
        INS list@@ops to DOUBLE_COLON
        INS HdlValueId@@prim_pkg to ops

UPD HdlIdDef@@Impl to Impl
    UPD HdlValueId@@int to impl_e
    MOV HdlValueId@@int to Impl
    HdlValueId: int
    DEL HdlExprNotImplemented@@value from Impl


CommitId: 309a47974f0ce84cab3d559a85975448dfbd7e2f
[prim] Use prim_pkg::impl_e instead of int for Impl
--- a/hw/ip/prim/abstract/prim_pad_wrapper.sv
+++ b/hw/ip/prim/abstract/prim_pad_wrapper.sv
@@ -25,7 +25,7 @@ module prim_pad_wrapper #(
   import prim_pkg::*;
 
   // The generic implementation is NOT synthesizable
-  if (impl_e'(Impl) == ImplGeneric) begin : gen_pad_generic
+  if (Impl == ImplGeneric) begin : gen_pad_generic
     prim_generic_pad_wrapper #(
       .AttrDw(AttrDw)
     ) i_pad_wrapper (

ParseResult:
UPD HdlStmIf@@ to 
    UPD HdlOp@@EQ to EQ
        UPD HdlOp@@CALL to CALL
            MOV HdlValueId@@Impl to ops
            HdlValueId: Impl
            DEL HdlValueId@@impl_e from ops
            DEL list@@ops from CALL
        DEL HdlOp@@CALL from ops
    UPD HdlOp@@EQ to EQ
        UPD HdlOp@@CALL to CALL
            MOV HdlValueId@@Impl to ops
            HdlValueId: Impl
            DEL HdlValueId@@impl_e from ops
            DEL list@@ops from CALL
        DEL HdlOp@@CALL from ops


CommitId: 309a47974f0ce84cab3d559a85975448dfbd7e2f
[prim] Use prim_pkg::impl_e instead of int for Impl
--- a/hw/ip/prim/abstract/prim_pad_wrapper.sv
+++ b/hw/ip/prim/abstract/prim_pad_wrapper.sv
@@ -35,7 +35,7 @@ module prim_pad_wrapper #(
       .oe_i,
       .attr_i
     );
-  end else if (impl_e'(Impl) == ImplXilinx) begin : gen_pad_xilinx
+  end else if (Impl == ImplXilinx) begin : gen_pad_xilinx
     prim_xilinx_pad_wrapper #(
       .AttrDw(AttrDw)
     ) i_pad_wrapper (
ParseResult:
UPD HdlStmIf@@ to 
    UPD HdlOp@@EQ to EQ
        UPD HdlOp@@CALL to CALL
            MOV HdlValueId@@Impl to ops
            HdlValueId: Impl
            DEL HdlValueId@@impl_e from ops
            DEL list@@ops from CALL
        DEL HdlOp@@CALL from ops
    UPD HdlOp@@EQ to EQ
        UPD HdlOp@@CALL to CALL
            MOV HdlValueId@@Impl to ops
            HdlValueId: Impl
            DEL HdlValueId@@impl_e from ops
            DEL list@@ops from CALL
        DEL HdlOp@@CALL from ops


CommitId: 36ebb51dbee52b34e515f69d84c7759b98c2c561
[csrng/rtl] update for health test phases
--- a/hw/ip/entropy_src/rtl/entropy_src_core.sv
+++ b/hw/ip/entropy_src/rtl/entropy_src_core.sv
@@ -136,8 +136,10 @@ module entropy_src_core import entropy_src_pkg::*; #(
   logic                   any_fail_pulse;
   logic                   main_stage_pop;
   logic                   bypass_stage_pop;
-  logic [FullRegWidth-1:0] any_fail_count;
-  logic [FullRegWidth-1:0] alert_threshold;
+  logic [HalfRegWidth-1:0] any_fail_count;
+  logic                    alert_threshold_fail;
+  logic [HalfRegWidth-1:0] alert_threshold;
+  logic [HalfRegWidth-1:0] alert_threshold_inv;
   logic                     recov_alert_event;
   logic [Clog2ObserveFifoDepth:0] observe_fifo_thresh;
   logic                     observe_fifo_thresh_met;

ParseResult:
INS HdlIdDef@@any_fail_count to objs
HdlIdDef: any_fail_count
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlOp: SUB
                        list: ops
                            HdlValueId: HalfRegWidth
                            HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: INTERNAL

INS HdlIdDef@@alert_threshold_fail to objs
HdlIdDef: alert_threshold_fail
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

INS HdlIdDef@@alert_threshold to objs
HdlIdDef: alert_threshold
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlOp: SUB
                        list: ops
                            HdlValueId: HalfRegWidth
                            HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: INTERNAL

INS HdlIdDef@@alert_threshold_inv to objs
HdlIdDef: alert_threshold_inv
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlOp: SUB
                        list: ops
                            HdlValueId: HalfRegWidth
                            HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: INTERNAL

DEL HdlIdDef@@any_fail_count from objs
HdlIdDef: any_fail_count
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlOp: SUB
                        list: ops
                            HdlValueId: FullRegWidth
                            HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: INTERNAL

DEL HdlIdDef@@alert_threshold from objs
HdlIdDef: alert_threshold
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlOp: SUB
                        list: ops
                            HdlValueId: FullRegWidth
                            HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: INTERNAL


CommitId: 36ebb51dbee52b34e515f69d84c7759b98c2c561
[csrng/rtl] update for health test phases
--- a/hw/ip/entropy_src/rtl/entropy_src_core.sv
+++ b/hw/ip/entropy_src/rtl/entropy_src_core.sv
@@ -338,6 +340,7 @@ module entropy_src_core import entropy_src_pkg::*; #(
   logic                     es_ack_sm_err;
   logic                     es_main_sm_err_sum;
   logic                     es_main_sm_err;
+  logic                     es_main_sm_alert;
   logic                     es_main_sm_idle;
   logic [7:0]               es_main_sm_state;
   logic                     fifo_write_err_sum;

ParseResult:
INS HdlIdDef@@es_main_sm_alert to objs
HdlIdDef: es_main_sm_alert
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL


CommitId: 36ebb51dbee52b34e515f69d84c7759b98c2c561
[csrng/rtl] update for health test phases
--- a/hw/ip/entropy_src/rtl/entropy_src_core.sv
+++ b/hw/ip/entropy_src/rtl/entropy_src_core.sv
@@ -374,6 +377,8 @@ module entropy_src_core import entropy_src_pkg::*; #(
   logic        ht_esbus_vld_dly2_q, ht_esbus_vld_dly2_d;
   logic        boot_bypass_q, boot_bypass_d;
   logic        ht_failed_q, ht_failed_d;
+  logic        ht_failed_pulse_q, ht_failed_pulse_d;
+  logic        ht_done_pulse_q, ht_done_pulse_d;
   logic [HalfRegWidth-1:0] window_cntr_q, window_cntr_d;
   logic                    sha3_msg_rdy_q, sha3_msg_rdy_d;
   logic                    sha3_err_q, sha3_err_d;

ParseResult:
INS HdlIdDef@@ht_failed_pulse_q to objs
HdlIdDef: ht_failed_pulse_q
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

INS HdlIdDef@@ht_failed_pulse_d to objs
HdlIdDef: ht_failed_pulse_d
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

INS HdlIdDef@@ht_done_pulse_q to objs
HdlIdDef: ht_done_pulse_q
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

INS HdlIdDef@@ht_done_pulse_d to objs
HdlIdDef: ht_done_pulse_d
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL


CommitId: 36ebb51dbee52b34e515f69d84c7759b98c2c561
[csrng/rtl] update for health test phases
--- a/hw/ip/entropy_src/rtl/entropy_src_core.sv
+++ b/hw/ip/entropy_src/rtl/entropy_src_core.sv
@@ -387,6 +392,8 @@ module entropy_src_core import entropy_src_pkg::*; #(
       lfsr_incr_dly_q       <= '0;
       boot_bypass_q         <= 1'b1;
       ht_failed_q           <= '0;
+      ht_failed_pulse_q     <= '0;
+      ht_done_pulse_q       <= '0;
       ht_esbus_dly_q        <= '0;
       ht_esbus_vld_dly_q    <= '0;
       ht_esbus_vld_dly2_q   <= '0;

ParseResult:
INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: ht_failed_pulse_q

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: ht_done_pulse_q


CommitId: 36ebb51dbee52b34e515f69d84c7759b98c2c561
[csrng/rtl] update for health test phases
--- a/hw/ip/entropy_src/rtl/entropy_src_core.sv
+++ b/hw/ip/entropy_src/rtl/entropy_src_core.sv
@@ -401,6 +408,8 @@ module entropy_src_core import entropy_src_pkg::*; #(
       lfsr_incr_dly_q       <= lfsr_incr_dly_d;
       boot_bypass_q         <= boot_bypass_d;
       ht_failed_q           <= ht_failed_d;
+      ht_failed_pulse_q     <= ht_failed_pulse_d;
+      ht_done_pulse_q       <= ht_done_pulse_d;
       ht_esbus_dly_q        <= ht_esbus_dly_d;
       ht_esbus_vld_dly_q    <= ht_esbus_vld_dly_d;
       ht_esbus_vld_dly2_q   <= ht_esbus_vld_dly2_d;

ParseResult:
INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueId: ht_failed_pulse_d
    HdlValueId: ht_failed_pulse_q

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueId: ht_done_pulse_d
    HdlValueId: ht_done_pulse_q


CommitId: 36ebb51dbee52b34e515f69d84c7759b98c2c561
[csrng/rtl] update for health test phases
--- a/hw/ip/entropy_src/rtl/entropy_src_core.sv
+++ b/hw/ip/entropy_src/rtl/entropy_src_core.sv
@@ -1673,19 +1682,30 @@ module entropy_src_core import entropy_src_pkg::*; #(
          markov_hi_fail_pulse ||markov_lo_fail_pulse ||
          extht_hi_fail_pulse || extht_lo_fail_pulse;
 
-
   assign ht_failed_d =
          (!es_enable) ? 1'b0 :
          sfifo_esfinal_push ? 1'b0 :
          (any_fail_pulse && health_test_done_pulse) ? 1'b1 :
          ht_failed_q;
 
+
+  // delay health pulse and fail pulse so that main_sm will
+  // get the correct threshold value comparisons
+  assign ht_done_pulse_d = health_test_done_pulse;
+  assign ht_failed_pulse_d = any_fail_pulse;
+
   assign hw2reg.alert_summary_fail_counts.d = any_fail_count;
 
   // signal an alert
-  assign alert_threshold = reg2hw.alert_threshold.q;
+  assign alert_threshold = reg2hw.alert_threshold.alert_threshold.q;
+  assign alert_threshold_inv = reg2hw.alert_threshold.alert_threshold_inv.q;
+
+  assign alert_threshold_fail =
+         ((any_fail_count >= ~alert_threshold_inv) && (~alert_threshold_inv != '0)) ||
+         (any_fail_count >= alert_threshold) && (alert_threshold != '0);
+
+  assign recov_alert_event = es_main_sm_alert;
 
-  assign recov_alert_event = (any_fail_count >= alert_threshold) && (alert_threshold != '0);
   assign recov_alert_o = recov_alert_event;
 
 

ParseResult:
INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlValueId: health_test_done_pulse
    HdlValueId: ht_done_pulse_d

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlValueId: any_fail_pulse
    HdlValueId: ht_failed_pulse_d

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: DOT
        list: ops
            HdlOp: DOT
                list: ops
                    HdlOp: DOT
                        list: ops
                            HdlValueId: reg2hw
                            HdlValueId: alert_threshold
                    HdlValueId: alert_threshold_inv
            HdlValueId: q
    HdlValueId: alert_threshold_inv

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlValueId: es_main_sm_alert
    HdlValueId: recov_alert_event

UPD HdlStmAssign@@ to 
    UPD HdlValueId@@recov_alert_event to alert_threshold_fail
    MOV HdlOp@@AND_LOG to 
    HdlOp: AND_LOG
        list: ops
            HdlOp: GE
                list: ops
                    HdlValueId: any_fail_count
                    HdlValueId: alert_threshold
            HdlOp: NE
                list: ops
                    HdlValueId: alert_threshold
                    HdlValueInt: 0

UPD HdlStmAssign@@ to 
    MOV HdlOp@@DOT to 
    HdlOp: DOT
        list: ops
            HdlOp: DOT
                list: ops
                    HdlValueId: reg2hw
                    HdlValueId: alert_threshold
            HdlValueId: q
    UPD HdlOp@@DOT to DOT
        UPD HdlValueId@@q to alert_threshold


CommitId: d593f3cd5c12a7f419dff4eecf7b05ccbdb5079c
[secded_gen] Fix template bug that results in lint error
--- a/hw/ip/prim/rtl/prim_secded_39_32_dec.sv
+++ b/hw/ip/prim/rtl/prim_secded_39_32_dec.sv
@@ -12,7 +12,6 @@ module prim_secded_39_32_dec (
   output logic [1:0] err_o
 );
 
-  logic single_error;
 
   // Syndrome calculation
   assign syndrome_o[0] = ^(in & 39'h01432358F1);

ParseResult:
DEL HdlIdDef@@single_error from objs
HdlIdDef: single_error
    HdlDirection: INTERNAL


CommitId: d593f3cd5c12a7f419dff4eecf7b05ccbdb5079c
[secded_gen] Fix template bug that results in lint error
--- a/hw/ip/prim/rtl/prim_secded_39_32_dec.sv
+++ b/hw/ip/prim/rtl/prim_secded_39_32_dec.sv
@@ -58,8 +57,7 @@ module prim_secded_39_32_dec (
   assign d_o[31] = (syndrome_o == 7'h1a) ^ in[31];
 
   // err_o calc. bit0: single error, bit1: double error
-  assign single_error = ^syndrome_o;
-  assign err_o[0] =  single_error;
-  assign err_o[1] = ~single_error & (|syndrome_o);
+  assign err_o[0] = ^syndrome_o;
+  assign err_o[1] = ~err_o[0] & (|syndrome_o);
 
 endmodule : prim_secded_39_32_dec
ParseResult:
UPD HdlStmAssign@@ to 
    MOV HdlOp@@INDEX to 
    HdlOp: INDEX
        list: ops
            HdlValueId: err_o
            HdlValueInt: 0
    DEL HdlValueId@@single_error from 

UPD HdlStmAssign@@ to 
    UPD HdlOp@@AND to AND
        UPD HdlOp@@NEG to NEG
            INS list@@ops to NEG
            INS HdlOp@@INDEX to ops
            UPD HdlOp@@INDEX to INDEX
                INS HdlValueInt@@0 to ops

UPD HdlStmAssign@@ to 
    UPD HdlOp@@AND to AND
        UPD HdlOp@@NEG to NEG
            MOV list@@ops to NEG
            list: ops
                HdlValueId: single_error
            UPD HdlValueId@@single_error to err_o

UPD HdlStmAssign@@ to 
    DEL HdlValueId@@single_error from 

DEL HdlStmAssign@@ from objs


CommitId: 163050b9c89b00dbac598f9b8ea68d2e99883a05
[pwrmgr] - pwrmgr integration into top_earlgrey
--- a/hw/top_earlgrey/ip/xbar_peri/rtl/autogen/xbar_peri.sv
+++ b/hw/top_earlgrey/ip/xbar_peri/rtl/autogen/xbar_peri.sv
@@ -33,6 +34,8 @@ module xbar_peri (
   input  tlul_pkg::tl_d2h_t tl_rv_timer_i,
   output tlul_pkg::tl_h2d_t tl_usbdev_o,
   input  tlul_pkg::tl_d2h_t tl_usbdev_i,
+  output tlul_pkg::tl_h2d_t tl_pwrmgr_o,
+  input  tlul_pkg::tl_d2h_t tl_pwrmgr_i,
 
   input scanmode_i
 );

ParseResult:
INS HdlIdDef@@tl_pwrmgr_o to ports
HdlIdDef: tl_pwrmgr_o
    HdlOp: DOUBLE_COLON
        list: ops
            HdlValueId: tlul_pkg
            HdlValueId: tl_h2d_t
    HdlDirection: OUT

INS HdlIdDef@@tl_pwrmgr_i to ports
HdlIdDef: tl_pwrmgr_i
    HdlOp: DOUBLE_COLON
        list: ops
            HdlValueId: tlul_pkg
            HdlValueId: tl_d2h_t
    HdlDirection: IN


CommitId: 163050b9c89b00dbac598f9b8ea68d2e99883a05
[pwrmgr] - pwrmgr integration into top_earlgrey
--- a/hw/top_earlgrey/ip/xbar_peri/rtl/autogen/xbar_peri.sv
+++ b/hw/top_earlgrey/ip/xbar_peri/rtl/autogen/xbar_peri.sv
@@ -100,17 +109,17 @@ end
   tlul_socket_1n #(
     .HReqDepth (4'h0),
     .HRspDepth (4'h0),
-    .DReqDepth ({5{4'h0}}),
-    .DRspDepth ({5{4'h0}}),
-    .N         (5)
-  ) u_s1n_6 (
+    .DReqDepth ({6{4'h0}}),
+    .DRspDepth ({6{4'h0}}),
+    .N         (6)
+  ) u_s1n_7 (
     .clk_i        (clk_peri_i),
     .rst_ni       (rst_peri_ni),
-    .tl_h_i       (tl_s1n_6_us_h2d),
-    .tl_h_o       (tl_s1n_6_us_d2h),
-    .tl_d_o       (tl_s1n_6_ds_h2d),
-    .tl_d_i       (tl_s1n_6_ds_d2h),
-    .dev_select   (dev_sel_s1n_6)
+    .tl_h_i       (tl_s1n_7_us_h2d),
+    .tl_h_o       (tl_s1n_7_us_d2h),
+    .tl_d_o       (tl_s1n_7_ds_h2d),
+    .tl_d_i       (tl_s1n_7_ds_d2h),
+    .dev_select   (dev_sel_s1n_7)
   );
 
 endmodule
ParseResult:
UPD HdlStmIf@@ to 
    INS tuple@@ to elifs
    tuple
        HdlOp: EQ
            list: ops
                HdlOp: AND
                    list: ops
                        HdlOp: DOT
                            list: ops
                                HdlValueId: tl_s1n_7_us_h2d
                                HdlValueId: a_address
                        HdlOp: NEG
                            list: ops
                                HdlValueId: ADDR_MASK_PWRMGR
                HdlValueId: ADDR_SPACE_PWRMGR
        HdlStmBlock: SEQ
            list: body
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: dev_sel_s1n_7
                        HdlValueInt: 5


CommitId: 7b7e47aa403930ab8566b7ca74ffccaa5fb183ae
[style-lint] Fix a couple of nitty style errors
--- a/hw/ip/prim/rtl/prim_filter.sv
+++ b/hw/ip/prim/rtl/prim_filter.sv
@@ -10,7 +10,7 @@
 //   new input must be opposite value from stored value for
 //   #Cycles before switching to new value.
 
-module prim_filter #(parameter Cycles = 4) (
+module prim_filter #(parameter int Cycles = 4) (
   input  clk_i,
   input  rst_ni,
   input  enable_i,
ParseResult:
UPD HdlIdDef@@Cycles to Cycles
    INS HdlValueId@@int to Cycles


CommitId: de7eba3d7af1f55b7bda8104152b4240f3d37456
[csrng/entropy_src] fix for #4601
--- a/hw/ip/csrng/rtl/csrng_ctr_drbg_gen.sv
+++ b/hw/ip/csrng/rtl/csrng_ctr_drbg_gen.sv
@@ -41,6 +41,11 @@ module csrng_ctr_drbg_gen import csrng_pkg::*; #(
   output logic [CtrLen-1:0]  ctr_drbg_gen_rc_o,
   output logic [BlkLen-1:0]  ctr_drbg_gen_bits_o,
   output logic               ctr_drbg_gen_fips_o,
+
+   // es_req/ack
+  input logic                ctr_drbg_gen_es_req_i,
+  output logic               ctr_drbg_gen_es_ack_o,
+
   // update interface
   output logic               gen_upd_req_o,
   input logic                upd_gen_rdy_i,

ParseResult:
INS HdlIdDef@@ctr_drbg_gen_es_req_i to ports
HdlIdDef: ctr_drbg_gen_es_req_i
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: IN

INS HdlIdDef@@ctr_drbg_gen_es_ack_o to ports
HdlIdDef: ctr_drbg_gen_es_ack_o
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: OUT


CommitId: de7eba3d7af1f55b7bda8104152b4240f3d37456
[csrng/entropy_src] fix for #4601
--- a/hw/ip/csrng/rtl/csrng_ctr_drbg_gen.sv
+++ b/hw/ip/csrng/rtl/csrng_ctr_drbg_gen.sv
@@ -311,10 +317,13 @@ module csrng_ctr_drbg_gen import csrng_pkg::*; #(
     block_encrypt_req_o = 1'b0;
     sfifo_genreq_pop = 1'b0;
     ctr_drbg_gen_sm_err_o = 1'b0;
+    ctr_drbg_gen_es_ack_o = 1'b0;
     unique case (state_q)
       // ReqIdle: increment v this cycle, push in next
       ReqIdle: begin
-        if (sfifo_genreq_not_empty && !sfifo_adstage_full) begin
+        if (ctr_drbg_gen_es_req_i) begin
+          state_d = ESHalt;
+        end else if (sfifo_genreq_not_empty && !sfifo_adstage_full) begin
           v_ctr_load = 1'b1;
           sfifo_adstage_push = 1'b1;
           state_d = ReqSend;

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: ctr_drbg_gen_es_ack_o
                HdlValueInt: 0

UPD HdlStmCase@@state_q to state_q
    INS tuple@@ to cases
    INS tuple@@ to cases
    tuple
        HdlValueId: ESHalt
        HdlStmBlock: SEQ
            list: body
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: ctr_drbg_gen_es_ack_o
                        HdlValueInt: 1
                HdlStmIf
                    HdlOp: NEG_LOG
                        list: ops
                            HdlValueId: ctr_drbg_gen_es_req_i
                    HdlStmBlock: SEQ
                        list: body
                            HdlOp: ASSIGN
                                list: ops
                                    HdlValueId: state_d
                                    HdlValueId: ReqIdle
                    list: elifs
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmCase@@state_q to state_q
    MOV HdlValueId@@ReqIdle to 
    HdlValueId: ReqIdle
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlStmIf
                HdlOp: AND_LOG
                    list: ops
                        HdlValueId: sfifo_genreq_not_empty
                        HdlOp: NEG_LOG
                            list: ops
                                HdlValueId: sfifo_adstage_full
                HdlStmBlock: SEQ
                    list: body
                        HdlOp: ASSIGN
                            list: ops
                                HdlValueId: v_ctr_load
                                HdlValueInt: 1
                        HdlOp: ASSIGN
                            list: ops
                                HdlValueId: sfifo_adstage_push
                                HdlValueInt: 1
                        HdlOp: ASSIGN
                            list: ops
                                HdlValueId: state_d
                                HdlValueId: ReqSend
                list: elifs
    UPD HdlStmBlock@@SEQ to SEQ
        UPD list@@body to elifs
        MOV list@@body to SEQ
        list: body
            HdlStmIf
                HdlOp: AND_LOG
                    list: ops
                        HdlValueId: sfifo_genreq_not_empty
                        HdlOp: NEG_LOG
                            list: ops
                                HdlValueId: sfifo_adstage_full
                HdlStmBlock: SEQ
                    list: body
                        HdlOp: ASSIGN
                            list: ops
                                HdlValueId: v_ctr_load
                                HdlValueInt: 1
                        HdlOp: ASSIGN
                            list: ops
                                HdlValueId: sfifo_adstage_push
                                HdlValueInt: 1
                        HdlOp: ASSIGN
                            list: ops
                                HdlValueId: state_d
                                HdlValueId: ReqSend
                list: elifs
    MOV tuple@@ to cases
    tuple
        HdlValueId: ReqIdle
        HdlStmBlock: SEQ
            list: body
                HdlStmIf
                    HdlOp: AND_LOG
                        list: ops
                            HdlValueId: sfifo_genreq_not_empty
                            HdlOp: NEG_LOG
                                list: ops
                                    HdlValueId: sfifo_adstage_full
                    HdlStmBlock: SEQ
                        list: body
                            HdlOp: ASSIGN
                                list: ops
                                    HdlValueId: v_ctr_load
                                    HdlValueInt: 1
                            HdlOp: ASSIGN
                                list: ops
                                    HdlValueId: sfifo_adstage_push
                                    HdlValueInt: 1
                            HdlOp: ASSIGN
                                list: ops
                                    HdlValueId: state_d
                                    HdlValueId: ReqSend
                    list: elifs

MOV HdlStmIf@@ to body
HdlStmIf
    HdlOp: AND_LOG
        list: ops
            HdlValueId: sfifo_genreq_not_empty
            HdlOp: NEG_LOG
                list: ops
                    HdlValueId: sfifo_adstage_full
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: v_ctr_load
                    HdlValueInt: 1
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: sfifo_adstage_push
                    HdlValueInt: 1
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: state_d
                    HdlValueId: ReqSend
    list: elifs

UPD HdlStmIf@@ to 
    MOV HdlOp@@AND_LOG to 
    HdlOp: AND_LOG
        list: ops
            HdlValueId: sfifo_genreq_not_empty
            HdlOp: NEG_LOG
                list: ops
                    HdlValueId: sfifo_adstage_full
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: v_ctr_load
                    HdlValueInt: 1
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: sfifo_adstage_push
                    HdlValueInt: 1
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: state_d
                    HdlValueId: ReqSend
    DEL list@@elifs from 


CommitId: de7eba3d7af1f55b7bda8104152b4240f3d37456
[csrng/entropy_src] fix for #4601
--- a/hw/ip/csrng/rtl/csrng_ctr_drbg_gen.sv
+++ b/hw/ip/csrng/rtl/csrng_ctr_drbg_gen.sv
@@ -332,6 +341,12 @@ module csrng_ctr_drbg_gen import csrng_pkg::*; #(
           state_d = ReqIdle;
         end
       end
+      ESHalt: begin
+        ctr_drbg_gen_es_ack_o = 1'b1;
+        if (!ctr_drbg_gen_es_req_i) begin
+          state_d = ReqIdle;
+        end
+      end
       ReqError: begin
         ctr_drbg_gen_sm_err_o = 1'b1;
       end
ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: ctr_drbg_gen_es_ack_o
                HdlValueInt: 0

UPD HdlStmCase@@state_q to state_q
    INS tuple@@ to cases
    INS tuple@@ to cases
    tuple
        HdlValueId: ESHalt
        HdlStmBlock: SEQ
            list: body
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: ctr_drbg_gen_es_ack_o
                        HdlValueInt: 1
                HdlStmIf
                    HdlOp: NEG_LOG
                        list: ops
                            HdlValueId: ctr_drbg_gen_es_req_i
                    HdlStmBlock: SEQ
                        list: body
                            HdlOp: ASSIGN
                                list: ops
                                    HdlValueId: state_d
                                    HdlValueId: ReqIdle
                    list: elifs
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmCase@@state_q to state_q
    MOV HdlValueId@@ReqIdle to 
    HdlValueId: ReqIdle
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlStmIf
                HdlOp: AND_LOG
                    list: ops
                        HdlValueId: sfifo_genreq_not_empty
                        HdlOp: NEG_LOG
                            list: ops
                                HdlValueId: sfifo_adstage_full
                HdlStmBlock: SEQ
                    list: body
                        HdlOp: ASSIGN
                            list: ops
                                HdlValueId: v_ctr_load
                                HdlValueInt: 1
                        HdlOp: ASSIGN
                            list: ops
                                HdlValueId: sfifo_adstage_push
                                HdlValueInt: 1
                        HdlOp: ASSIGN
                            list: ops
                                HdlValueId: state_d
                                HdlValueId: ReqSend
                list: elifs
    UPD HdlStmBlock@@SEQ to SEQ
        UPD list@@body to elifs
        MOV list@@body to SEQ
        list: body
            HdlStmIf
                HdlOp: AND_LOG
                    list: ops
                        HdlValueId: sfifo_genreq_not_empty
                        HdlOp: NEG_LOG
                            list: ops
                                HdlValueId: sfifo_adstage_full
                HdlStmBlock: SEQ
                    list: body
                        HdlOp: ASSIGN
                            list: ops
                                HdlValueId: v_ctr_load
                                HdlValueInt: 1
                        HdlOp: ASSIGN
                            list: ops
                                HdlValueId: sfifo_adstage_push
                                HdlValueInt: 1
                        HdlOp: ASSIGN
                            list: ops
                                HdlValueId: state_d
                                HdlValueId: ReqSend
                list: elifs
    MOV tuple@@ to cases
    tuple
        HdlValueId: ReqIdle
        HdlStmBlock: SEQ
            list: body
                HdlStmIf
                    HdlOp: AND_LOG
                        list: ops
                            HdlValueId: sfifo_genreq_not_empty
                            HdlOp: NEG_LOG
                                list: ops
                                    HdlValueId: sfifo_adstage_full
                    HdlStmBlock: SEQ
                        list: body
                            HdlOp: ASSIGN
                                list: ops
                                    HdlValueId: v_ctr_load
                                    HdlValueInt: 1
                            HdlOp: ASSIGN
                                list: ops
                                    HdlValueId: sfifo_adstage_push
                                    HdlValueInt: 1
                            HdlOp: ASSIGN
                                list: ops
                                    HdlValueId: state_d
                                    HdlValueId: ReqSend
                    list: elifs


CommitId: 098128c9003b1ab226ff17001ac59845a6755f24
Revert "Revert "[usbdev] Fixes for I/O modes and expand their tests""
--- a/hw/ip/usb_fs_nb_pe/rtl/usb_fs_nb_pe.sv
+++ b/hw/ip/usb_fs_nb_pe/rtl/usb_fs_nb_pe.sv
@@ -26,6 +26,7 @@ module usb_fs_nb_pe #(
   input  logic [6:0]             dev_addr_i,
 
   input  logic                   cfg_eop_single_bit_i, // 1: detect a single SE0 bit as EOP
+  input  logic                   cfg_rx_differential_i, // 1: use differential rx data on usb_d_i
   input  logic                   tx_osc_test_mode_i, // Oscillator test mode (constantly output JK)
   input  logic [NumOutEps-1:0]   data_toggle_clear_i, // Clear the data toggles for an EP
 

ParseResult:
INS HdlIdDef@@cfg_rx_differential_i to ports
HdlIdDef: cfg_rx_differential_i
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: IN


CommitId: 098128c9003b1ab226ff17001ac59845a6755f24
Revert "Revert "[usbdev] Fixes for I/O modes and expand their tests""
--- a/hw/ip/usb_fs_nb_pe/rtl/usb_fs_nb_pe.sv
+++ b/hw/ip/usb_fs_nb_pe/rtl/usb_fs_nb_pe.sv
@@ -66,17 +67,25 @@ module usb_fs_nb_pe #(
   output logic                   sof_valid_o,
   output logic [10:0]            frame_index_o,
 
+  // RX line status
+  output logic                   rx_se0_det_o,
+  output logic                   rx_jjj_det_o,
+
   // RX errors
   output logic                   rx_crc_err_o,
   output logic                   rx_pid_err_o,
   output logic                   rx_bitstuff_err_o,
 
   ///////////////////////////////////////
-  // USB TX/RX Interface (synchronous) //
+  // USB RX Interface (synchronous)    //
   ///////////////////////////////////////
   input  logic                   usb_d_i,
-  input  logic                   usb_se0_i,
+  input  logic                   usb_dp_i,
+  input  logic                   usb_dn_i,
 
+  ///////////////////////////////////////
+  // USB TX Interface (synchronous)    //
+  ///////////////////////////////////////
   output logic                   usb_d_o,
   output logic                   usb_se0_o,
   output logic                   usb_oe_o

ParseResult:
INS HdlIdDef@@rx_se0_det_o to ports
HdlIdDef: rx_se0_det_o
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: OUT

INS HdlIdDef@@rx_jjj_det_o to ports
HdlIdDef: rx_jjj_det_o
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: OUT

INS HdlIdDef@@usb_dp_i to ports
HdlIdDef: usb_dp_i
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: IN

UPD HdlIdDef@@usb_se0_i to usb_dn_i


CommitId: acd1795fa894600b5f9e05579d62cbd8bc867bb6
[lc] fix decode state_invalid_error
--- a/hw/ip/lc_ctrl/rtl/lc_ctrl_state_decode.sv
+++ b/hw/ip/lc_ctrl/rtl/lc_ctrl_state_decode.sv
@@ -99,7 +99,7 @@ module lc_ctrl_state_decode
 
         // Require that any non-raw state has a valid, nonzero
         // transition count.
-        if (lc_state_i != LcStRaw && lc_cnt_i != LcCntRaw) begin
+        if (lc_state_i != LcStRaw && lc_cnt_i == LcCntRaw) begin
           state_invalid_error_o = 1'b1;
         end
 
ParseResult:
UPD HdlStmIf@@ to 
    UPD HdlOp@@AND_LOG to AND_LOG
        UPD HdlOp@@NE to EQ


CommitId: 4c02377aab617e3f40ae2a19d2884e47532b2f7b
[ spi_host ] Fix Lint Errors
--- a/hw/ip/spi_host/rtl/spi_host_data_cdc.sv
+++ b/hw/ip/spi_host/rtl/spi_host_data_cdc.sv
@@ -116,12 +116,12 @@ module spi_host_data_cdc #(
     assign tx_data_be_async_fifo = tx_data_be;
     assign tx_valid_async_fifo   = tx_valid_i;
     assign tx_ready_o            = tx_ready_async_fifo;
-    assign tx_depth_total        = byte'(tx_depth_async_fifo);
+    assign tx_depth_total        = 8'(tx_depth_async_fifo);
 
   end else begin : gen_tx_async_plus_sync
 
     logic [TxSyncDepthW-1:0] tx_depth_sync_fifo;
-    assign tx_depth_total = byte'(tx_depth_async_fifo) + byte'(tx_depth_sync_fifo);
+    assign tx_depth_total = 8'(tx_depth_async_fifo) + 8'(tx_depth_sync_fifo);
 
     prim_fifo_sync #(
       .Width(36),

ParseResult:
UPD HdlStmAssign@@ to 
    UPD HdlOp@@CALL to CALL
        INS HdlValueInt@@8 to ops

UPD HdlStmAssign@@ to 
    UPD HdlOp@@ADD to ADD
        UPD HdlOp@@CALL to CALL
            INS HdlValueInt@@8 to ops
        UPD HdlOp@@CALL to CALL
            INS HdlValueInt@@8 to ops

UPD HdlStmAssign@@ to 
    UPD HdlOp@@CALL to CALL
        DEL HdlValueId@@byte from ops

UPD HdlStmAssign@@ to 
    UPD HdlOp@@ADD to ADD
        UPD HdlOp@@CALL to CALL
            DEL HdlValueId@@byte from ops
        UPD HdlOp@@CALL to CALL
            DEL HdlValueId@@byte from ops


CommitId: 4c02377aab617e3f40ae2a19d2884e47532b2f7b
[ spi_host ] Fix Lint Errors
--- a/hw/ip/spi_host/rtl/spi_host_data_cdc.sv
+++ b/hw/ip/spi_host/rtl/spi_host_data_cdc.sv
@@ -187,12 +187,12 @@ module spi_host_data_cdc #(
     assign rx_data_unordered   = rx_data_async_fifo;
     assign rx_valid_o          = rx_valid_async_fifo;
     assign rx_ready_async_fifo = rx_ready_i;
-    assign rx_depth_total      = byte'(rx_depth_async_fifo);
+    assign rx_depth_total      = 8'(rx_depth_async_fifo);
 
   end else begin : gen_rx_async_plus_sync
 
     logic [RxSyncDepthW-1:0] rx_depth_sync_fifo;
-    assign rx_depth_total = byte'(rx_depth_async_fifo) + byte'(rx_depth_sync_fifo);
+    assign rx_depth_total = 8'(rx_depth_async_fifo) + 8'(rx_depth_sync_fifo);
 
     prim_fifo_sync #(
       .Width(32),
ParseResult:
UPD HdlStmAssign@@ to 
    UPD HdlOp@@CALL to CALL
        INS HdlValueInt@@8 to ops

UPD HdlStmAssign@@ to 
    UPD HdlOp@@ADD to ADD
        UPD HdlOp@@CALL to CALL
            INS HdlValueInt@@8 to ops
        UPD HdlOp@@CALL to CALL
            INS HdlValueInt@@8 to ops

UPD HdlStmAssign@@ to 
    UPD HdlOp@@CALL to CALL
        DEL HdlValueId@@byte from ops

UPD HdlStmAssign@@ to 
    UPD HdlOp@@ADD to ADD
        UPD HdlOp@@CALL to CALL
            DEL HdlValueId@@byte from ops
        UPD HdlOp@@CALL to CALL
            DEL HdlValueId@@byte from ops


CommitId: 890cf7cf47ebc49ba839ab9e69ef10df552f27bf
[dv, verilator] Simulation memory prototype impl
--- a/hw/ip/rv_core_ibex/rtl/rv_core_ibex.sv
+++ b/hw/ip/rv_core_ibex/rtl/rv_core_ibex.sv
@@ -96,6 +96,11 @@ module rv_core_ibex #(
   tl_h2d_t tl_d_ibex2fifo;
   tl_d2h_t tl_d_fifo2ibex;
 
+  // Intermediate TL signals to connect an sram used in simulations.
+  tlul_pkg::tl_h2d_t tl_d_o_int;
+  tlul_pkg::tl_d2h_t tl_d_i_int;
+
+
 `ifdef RVFI
   logic        rvfi_valid;
   logic [63:0] rvfi_order;

ParseResult:
INS HdlIdDef@@tl_d_o_int to objs
HdlIdDef: tl_d_o_int
    HdlOp: DOUBLE_COLON
        list: ops
            HdlValueId: tlul_pkg
            HdlValueId: tl_h2d_t
    HdlDirection: INTERNAL

INS HdlIdDef@@tl_d_i_int to objs
HdlIdDef: tl_d_i_int
    HdlOp: DOUBLE_COLON
        list: ops
            HdlValueId: tlul_pkg
            HdlValueId: tl_d2h_t
    HdlDirection: INTERNAL


CommitId: 17e9624c452e05f71f4ad2b7c75bf6bbb071c324
Update lowrisc_ibex to lowRISC/ibex@ee1098f
--- a/hw/vendor/lowrisc_ibex/dv/riscv_compliance/rtl/bus.sv
+++ b/hw/vendor/lowrisc_ibex/dv/riscv_compliance/rtl/bus.sv
@@ -104,12 +104,13 @@ module bus #(
 
   always_comb begin
     for (integer host = 0; host < NrHosts; host = host + 1) begin
+      host_gnt_o[host] = 1'b0;
+
       if ($clog2(NrHosts)'(host) == host_sel_resp) begin
         host_rvalid_o[host] = device_rvalid_i[device_sel_resp];
         host_err_o[host]    = device_err_i[device_sel_resp];
         host_rdata_o[host]  = device_rdata_i[device_sel_resp];
       end else begin
-        host_gnt_o[host]    = 1'b0;
         host_rvalid_o[host] = 1'b0;
         host_err_o[host]    = 1'b0;
         host_rdata_o[host]  = 'b0;
ParseResult:
UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlOp: INDEX
                    list: ops
                        HdlValueId: host_gnt_o
                        HdlValueId: host
                HdlValueInt: 0


CommitId: 597dea829296a9563ae6dfbf79a38fbb3ecbabc0
[ast] Fix ast.core file
--- a/hw/top_earlgrey/ip/ast/rtl/io_osc.sv
+++ b/hw/top_earlgrey/ip/ast/rtl/io_osc.sv
@@ -9,11 +9,13 @@
 module io_osc (
   input vcore_pok_h_i,    // VCORE POK @3.3V
   input io_en_i,          // IO Source Clock Enable
+`ifdef AST_BYPASS_CLK
   input clk_io_ext_i,     // FPGA/VERILATOR Clock input
+`endif
   output logic io_clk_o   // IO Clock Output
 );
 
-`ifndef SYNTHESIS
+`ifndef AST_BYPASS_CLK
 // Behavioral Model
 ////////////////////////////////////////
 timeunit 1ns / 1ps;

ParseResult:
DEL HdlIdDef@@clk_io_ext_i from ports
HdlIdDef: clk_io_ext_i
    HdlValueId: wire
    HdlDirection: IN


CommitId: d2ca7cfa5686dfde5564ab5fe42770226f83df58
[spi_device] Waivers and fixes for SPI_DEVICE
--- a/hw/ip/spi_device/rtl/spi_fwm_txf_ctrl.sv
+++ b/hw/ip/spi_device/rtl/spi_fwm_txf_ctrl.sv
@@ -227,7 +227,7 @@ module spi_fwm_txf_ctrl #(
 
   always_comb begin
     fifo_wdata = '0;
-    for (int i = 0 ; i < NumBytes ; i++) begin
+    for (int unsigned i = 0 ; i < NumBytes ; i++) begin
       if (pos == i[SDW-1:0]) fifo_wdata = fifo_wdata_d[8*i+:8];
     end
   end
ParseResult:
UPD HdlIdDef@@i to i
    INS HdlOp@@PARAMETRIZATION to i
    UPD HdlOp@@PARAMETRIZATION to PARAMETRIZATION
        INS list@@ops to PARAMETRIZATION
        INS HdlOp@@MAP_ASSOCIATION to ops
        HdlOp: MAP_ASSOCIATION
            list: ops
                HdlValueId: signed

UPD HdlIdDef@@i to i
    MOV HdlValueId@@int to i
    HdlValueId: int


CommitId: 6c05c51dade3ec12fb60e6a342450cbae96e740a
[spi_device] Remove latches
--- a/hw/ip/spi_device/rtl/spi_fwm_txf_ctrl.sv
+++ b/hw/ip/spi_device/rtl/spi_fwm_txf_ctrl.sv
@@ -84,6 +84,7 @@ module spi_fwm_txf_ctrl #(
   // State Machine next , output logic
   always_comb begin
     // default output value
+    st_next     = StIdle;
     sram_req_d  = 1'b0;
     update_rptr = 1'b0;
     latch_wptr  = 1'b0;

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: st_next
                HdlValueId: StIdle


CommitId: 6c05c51dade3ec12fb60e6a342450cbae96e740a
[spi_device] Remove latches
--- a/hw/ip/spi_device/rtl/spi_fwm_txf_ctrl.sv
+++ b/hw/ip/spi_device/rtl/spi_fwm_txf_ctrl.sv
@@ -134,7 +135,7 @@ module spi_fwm_txf_ctrl #(
           fifo_valid = 1'b1;
           txf_sel = 1'b1; // select sram_rdata_q
           cnt_incr = 1'b1;
-        end else if (fifo_ready && cnt_eq_end) begin
+        end else begin //if (fifo_ready && cnt_eq_end) begin
           // current SRAM word is written to FIFO
           st_next = StUpdate;
         end
ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: st_next
                HdlValueId: StIdle

UPD HdlStmIf@@ to 
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: st_next
                    HdlValueId: StUpdate
    DEL HdlOp@@AND_LOG from 
    HdlOp: AND_LOG
        list: ops
            HdlValueId: fifo_ready
            HdlValueId: cnt_eq_end
    DEL tuple@@ from elifs


CommitId: efaa97eb056324fec332981139a3370db290679a
[ast] AscenLint fixes and new analog typedef
--- a/hw/top_earlgrey/ip/ast/rtl/sys_osc.sv
+++ b/hw/top_earlgrey/ip/ast/rtl/sys_osc.sv
@@ -5,25 +5,26 @@
 // *Name: sys_osc
 // *Module Description: System Clock Oscilator
 //############################################################################
+`ifndef SYNTHESIS
 `timescale 1ns / 1ps
-
-module sys_osc #(
-`ifndef VERILATOR
-// synopsys translate_off
-  parameter time SYS_EN_RDLY = 5us
-// synopsys translate_on
+`else
+`ifndef PRIM_DEFAULT_IMPL
+`define PRIM_DEFAULT_IMPL prim_pkg::ImplGeneric
+`endif
 `endif
-) (
+
+module sys_osc (
   input vcore_pok_h_i,    // VCORE POK @3.3V
   input sys_en_i,         // System Source Clock Enable
   input sys_jen_i,        // System Source Clock Jitter Enable
   output logic sys_clk_o  // System Clock Output
 );
 
-// Behavioral Model
+`ifndef SYNTHESIS
+import ast_bhv_pkg::* ;
 
-`ifndef VERILATOR
-// synopsys translate_off
+// Behavioral Model
+////////////////////////////////////////
 localparam real SysClkPeriod = 10000; // 10000ps (100Mhz)
 
 logic clk, en_dly, en_osc, en_osc_re, en_osc_fe;

ParseResult:
UPD HdlModuleDef@@sys_osc to sys_osc
    INS HdlImport@@ to objs
    HdlImport
        list: path
            HdlValueId: ast_bhv_pkg
            HdlAll

DEL HdlIdDef@@SYS_EN_RDLY from params
HdlIdDef: SYS_EN_RDLY
    HdlValueId: time
    HdlExprNotImplemented: value
    HdlDirection: INTERNAL


CommitId: efaa97eb056324fec332981139a3370db290679a
[ast] AscenLint fixes and new analog typedef
--- a/hw/top_earlgrey/ip/ast/rtl/sys_osc.sv
+++ b/hw/top_earlgrey/ip/ast/rtl/sys_osc.sv
@@ -33,7 +34,7 @@ initial begin
   clk  = 1'b0;
   $display("\nSYS Clock Period: %0dps", SysClkPeriod);
   en_dly = 1'b0;  // to block init X
-  #(SYS_EN_RDLY+1) en_dly = 1'b1;
+  #(SYS_EN_RDLY + VCAON_POK_RDLY + 1) en_dly = 1'b1;
 end
 
 // Enable 5us RC Delay

ParseResult:
UPD HdlModuleDef@@sys_osc to sys_osc
    INS HdlImport@@ to objs
    HdlImport
        list: path
            HdlValueId: ast_bhv_pkg
            HdlAll

UPD HdlStmWait@@[{'__class__': 'HdlOp',  'fn': 'ADD',  'ops': ['SYS_EN_RDLY', {'__class__': 'HdlValueInt', 'base': 10, 'val': '1'}]} ] to [{'__class__': 'HdlOp',  'fn': 'ADD',  'ops': [{'__class__': 'HdlOp',           'fn': 'ADD',           'ops': ['SYS_EN_RDLY', 'VCAON_POK_RDLY']},          {'__class__': 'HdlValueInt', 'base': 10, 'val': '1'}]} ]

UPD HdlStmWait@@[{'__class__': 'HdlOp',  'fn': 'ADD',  'ops': [{'__class__': 'HdlOp',           'fn': 'ADD',           'ops': ['SYS_EN_RDLY', 'VCAON_POK_RDLY']},          {'__class__': 'HdlValueInt', 'base': 10, 'val': '1'}]} ] to [{'__class__': 'HdlOp',  'fn': 'ADD',  'ops': [{'__class__': 'HdlOp',           'fn': 'ADD',           'ops': ['SYS_EN_RDLY', 'VCAON_POK_RDLY']},          {'__class__': 'HdlValueInt', 'base': 10, 'val': '1'}]} ]
    UPD HdlOp@@ADD to ADD
        INS HdlOp@@ADD to ops
        UPD HdlOp@@ADD to ADD
            INS list@@ops to ADD
            INS HdlValueId@@VCAON_POK_RDLY to ops

UPD HdlStmWait@@[{'__class__': 'HdlOp',  'fn': 'ADD',  'ops': ['SYS_EN_RDLY', {'__class__': 'HdlValueInt', 'base': 10, 'val': '1'}]} ] to [{'__class__': 'HdlOp',  'fn': 'ADD',  'ops': ['SYS_EN_RDLY', {'__class__': 'HdlValueInt', 'base': 10, 'val': '1'}]} ]
    UPD HdlOp@@ADD to ADD
        MOV HdlValueId@@SYS_EN_RDLY to ops
        HdlValueId: SYS_EN_RDLY


CommitId: efaa97eb056324fec332981139a3370db290679a
[ast] AscenLint fixes and new analog typedef
--- a/hw/top_earlgrey/ip/ast/rtl/sys_osc.sv
+++ b/hw/top_earlgrey/ip/ast/rtl/sys_osc.sv
@@ -43,8 +44,11 @@ assign en_osc_re = vcore_pok_h_i && sys_en_i && (sys_en_dly && en_dly);
 
 // Syncronize en_osc to clk FE for glitch free disable
 always_ff @( negedge clk or negedge vcore_pok_h_i ) begin
-  if ( !vcore_pok_h_i ) en_osc_fe <= 1'b0;
-  else                  en_osc_fe <= en_osc_re;
+  if ( !vcore_pok_h_i ) begin
+    en_osc_fe <= 1'b0;
+  end else begin
+    en_osc_fe <= en_osc_re;
+  end
 end
 
 assign en_osc = en_osc_re || en_osc_fe;  // EN -> 1 || EN -> 0

ParseResult:
UPD HdlModuleDef@@sys_osc to sys_osc
    INS HdlImport@@ to objs
    HdlImport
        list: path
            HdlValueId: ast_bhv_pkg
            HdlAll

UPD HdlStmIf@@ to 
    INS HdlStmBlock@@SEQ to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmAssign@@if_true to 

MOV HdlStmAssign@@if_true to 
HdlStmAssign: if_true
    HdlValueInt: 0
    HdlValueId: en_osc_fe

UPD HdlStmAssign@@if_false to 

MOV HdlStmAssign@@if_false to 
HdlStmAssign: if_false
    HdlValueId: en_osc_re
    HdlValueId: en_osc_fe


CommitId: 92e9ebb031c9c90db52a3f3985afa352285c8497
[aes] Use fresh, random intermediate masks in "noreuse" Canright S-Box
--- a/hw/ip/aes/rtl/aes_sbox.sv
+++ b/hw/ip/aes/rtl/aes_sbox.sv
@@ -8,11 +8,12 @@ module aes_sbox import aes_pkg::*;
 #(
   parameter sbox_impl_e SBoxImpl = SBoxImplLut
 ) (
-  input  ciph_op_e   op_i,
-  input  logic [7:0] data_i,
-  input  logic [7:0] in_mask_i,
-  input  logic [7:0] out_mask_i,
-  output logic [7:0] data_o
+  input  ciph_op_e                op_i,
+  input  logic              [7:0] data_i,
+  input  logic              [7:0] in_mask_i,
+  input  logic              [7:0] out_mask_i,
+  input  logic [WidthPRDSBox-1:0] prd_masking_i,
+  output logic              [7:0] data_o
 );
 
   import aes_pkg::*;

ParseResult:
INS HdlIdDef@@prd_masking_i to ports
HdlIdDef: prd_masking_i
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlOp: SUB
                        list: ops
                            HdlValueId: WidthPRDSBox
                            HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: IN


CommitId: 92e9ebb031c9c90db52a3f3985afa352285c8497
[aes] Use fresh, random intermediate masks in "noreuse" Canright S-Box
--- a/hw/ip/aes/rtl/aes_sbox.sv
+++ b/hw/ip/aes/rtl/aes_sbox.sv
@@ -20,9 +21,11 @@ module aes_sbox import aes_pkg::*;
                                SBoxImpl == SBoxImplCanrightMaskedNoreuse) ? 1'b1 : 1'b0;
 
   if (!SBoxMasked) begin : gen_sbox_unmasked
-    // Tie off unused mask inputs.
-    logic [15:0] unused_masks;
+    // Tie off unused mask and PRD inputs.
+    logic             [15:0] unused_masks;
+    logic [WidthPRDSBox-1:0] unused_prd;
     assign unused_masks = {in_mask_i, out_mask_i};
+    assign unused_prd   = prd_masking_i;
 
     if (SBoxImpl == SBoxImplCanright) begin : gen_sbox_canright
       aes_sbox_canright u_aes_sbox (

ParseResult:
INS HdlIdDef@@unused_prd to body
HdlIdDef: unused_prd
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlOp: SUB
                        list: ops
                            HdlValueId: WidthPRDSBox
                            HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: INTERNAL

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueId: prd_masking_i
    HdlValueId: unused_prd


CommitId: 92e9ebb031c9c90db52a3f3985afa352285c8497
[aes] Use fresh, random intermediate masks in "noreuse" Canright S-Box
--- a/hw/ip/aes/rtl/aes_sbox.sv
+++ b/hw/ip/aes/rtl/aes_sbox.sv
@@ -45,9 +48,14 @@ module aes_sbox import aes_pkg::*;
         .data_i,
         .in_mask_i,
         .out_mask_i,
+        .prd_masking_i,
         .data_o
       );
     end else begin : gen_sbox_canright_masked // SBoxImpl == SBoxImplCanrightMasked
+      // Tie of unused PRD inputs.
+      logic [WidthPRDSBox-1:0] unused_prd;
+      assign unused_prd = prd_masking_i;
+
       aes_sbox_canright_masked u_aes_sbox (
         .op_i,
         .data_i,
ParseResult:
INS HdlIdDef@@unused_prd to body
HdlIdDef: unused_prd
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlOp: SUB
                        list: ops
                            HdlValueId: WidthPRDSBox
                            HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: INTERNAL

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueId: prd_masking_i
    HdlValueId: unused_prd


CommitId: 1c3b1606289312db6a7e85a98ddaea97bcfc7cb5
[csrng/rtl] switch to lc_hw_debug_en for lifecycle input
--- a/hw/ip/csrng/rtl/csrng_core.sv
+++ b/hw/ip/csrng/rtl/csrng_core.sv
@@ -20,7 +20,7 @@ module csrng_core import csrng_pkg::*; #(
   input efuse_sw_app_enable_i,
 
   // Lifecycle broadcast inputs
-  input  lc_ctrl_pkg::lc_tx_t  lc_dft_en_i,
+  input  lc_ctrl_pkg::lc_tx_t  lc_hw_debug_en_i,
 
   // Entropy Interface
   output entropy_src_pkg::entropy_src_hw_if_req_t entropy_src_hw_if_o,

ParseResult:
UPD HdlIdDef@@lc_dft_en_i to lc_hw_debug_en_i


CommitId: 1c3b1606289312db6a7e85a98ddaea97bcfc7cb5
[csrng/rtl] switch to lc_hw_debug_en for lifecycle input
--- a/hw/ip/csrng/rtl/csrng_core.sv
+++ b/hw/ip/csrng/rtl/csrng_core.sv
@@ -257,6 +257,7 @@ module csrng_core import csrng_pkg::*; #(
   logic                    genbits_stage_fips_sw;
 
   logic [14:0]             hw_exception_sts;
+  logic                    lc_hw_debug_not_on;
 
   // flops
   logic [2:0]  acmd_q, acmd_d;

ParseResult:
INS HdlIdDef@@lc_hw_debug_not_on to objs
HdlIdDef: lc_hw_debug_not_on
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL


CommitId: 009d38d4a8cf751682976f4921dd1df0c88baff3
[aes/rtl] Fix clearing of key and output registers
--- a/hw/ip/aes/rtl/aes_control.sv
+++ b/hw/ip/aes/rtl/aes_control.sv
@@ -180,10 +180,12 @@ module aes_control #(
             key_full_we_o  = 1'b1;
             key_dec_sel_o  = KEY_DEC_CLEAR;
             key_dec_we_o   = 1'b1;
-            key_clear_we_o = 1'b0;
+            key_clear_we_o = 1'b1;
           end
           if (data_out_clear_i) begin
-            state_sel_o         = STATE_CLEAR;
+            add_rk_sel_o        = ADD_RK_INIT;
+            key_words_sel_o     = KEY_WORDS_ZERO;
+            round_key_sel_o     = ROUND_KEY_DIRECT;
             data_out_we_o       = 1'b1;
             data_out_clear_we_o = 1'b1;
           end

ParseResult:
UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: key_words_sel_o
                HdlValueId: KEY_WORDS_ZERO
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: round_key_sel_o
                HdlValueId: ROUND_KEY_DIRECT

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueInt@@0 to 1

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@state_sel_o to add_rk_sel_o
            UPD HdlValueId@@STATE_CLEAR to ADD_RK_INIT


CommitId: 009d38d4a8cf751682976f4921dd1df0c88baff3
[aes/rtl] Fix clearing of key and output registers
--- a/hw/ip/aes/rtl/aes_control.sv
+++ b/hw/ip/aes/rtl/aes_control.sv
@@ -389,9 +391,9 @@ module aes_control #(
     end
   end
 
-  // Clear once all output regs have been read
-  assign output_valid_o    = data_out_we_o;
-  assign output_valid_we_o = data_out_we_o | data_out_read;
+  // Clear once all output regs have been read, or when output is cleared
+  assign output_valid_o    = data_out_we_o & ~data_out_clear_we_o;
+  assign output_valid_we_o = data_out_we_o | data_out_read | data_out_clear_we_o;
 
   always_ff @(posedge clk_i or negedge rst_ni) begin : reg_output_valid
     if (!rst_ni) begin
ParseResult:
INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: AND
        list: ops
            HdlValueId: data_out_we_o
            HdlOp: NEG
                list: ops
                    HdlValueId: data_out_clear_we_o
    HdlValueId: output_valid_o

UPD HdlStmAssign@@ to 
    INS HdlOp@@OR to 
    UPD HdlOp@@OR to OR
        INS list@@ops to OR
        INS HdlValueId@@data_out_clear_we_o to ops

UPD HdlStmAssign@@ to 
    MOV HdlOp@@OR to 
    HdlOp: OR
        list: ops
            HdlValueId: data_out_we_o
            HdlValueId: data_out_read

DEL HdlStmAssign@@ from objs
HdlStmAssign
    HdlValueId: data_out_we_o
    HdlValueId: output_valid_o


CommitId: 44fe217af660b1abbe22fa00e70583482f096871
[csrng] Fix some width mismatches
--- a/hw/ip/csrng/rtl/csrng_ctr_drbg_gen.sv
+++ b/hw/ip/csrng/rtl/csrng_ctr_drbg_gen.sv
@@ -291,7 +291,7 @@ module csrng_ctr_drbg_gen import csrng_pkg::*; #(
          interate_ctr_q;
 
   // Supporting only 128b requests
-  assign interate_ctr_done = (interate_ctr_q >= (BlkLen/BlkLen));
+  assign interate_ctr_done = (interate_ctr_q >= 2'(BlkLen/BlkLen));
 
   //--------------------------------------------
   // state machine to send values to block_encrypt
ParseResult:
UPD HdlStmAssign@@ to 
    INS HdlOp@@GE to 
    UPD HdlOp@@GE to GE
        INS list@@ops to GE
        UPD HdlOp@@CALL to CALL
            INS HdlValueInt@@2 to ops

UPD HdlStmAssign@@ to 
    UPD HdlOp@@GE to GE
        MOV HdlValueId@@interate_ctr_q to ops
        HdlValueId: interate_ctr_q
    UPD HdlOp@@GE to CALL
    MOV HdlOp@@GE to 
    HdlOp: GE
        list: ops
            HdlValueId: interate_ctr_q
            HdlOp: DIV
                list: ops
                    HdlValueId: BlkLen
                    HdlValueId: BlkLen


CommitId: 597dea829296a9563ae6dfbf79a38fbb3ecbabc0
[ast] Fix ast.core file
--- a/hw/top_earlgrey/ip/ast/rtl/io_clk.sv
+++ b/hw/top_earlgrey/ip/ast/rtl/io_clk.sv
@@ -13,14 +13,15 @@ module io_clk (
   input clk_src_io_en_i,                   // IO Source Clock Enable
   input scan_mode_i,                       // Scan Mode
   input scan_reset_ni,                     // Scan Reset
+`ifdef AST_BYPASS_CLK
   input clk_io_ext_i,                      // FPGA/VERILATOR Clock input
+`endif
   output logic clk_src_io_o,               // IO Source Clock
   output logic clk_src_io_val_o            // IO Source Clock Valid
 );
 
-logic clk, osc_en, io_clk_en, rst_n;
+logic clk, osc_en, io_clk_en;
 
-assign rst_n = rst_io_clk_ni;  // Scan enabled
 assign osc_en = (clk_src_io_en_i && clk_io_pd_ni && rst_io_clk_ni);
 assign io_clk_en = scan_mode_i || osc_en;
 

ParseResult:
DEL HdlIdDef@@clk_io_ext_i from ports
HdlIdDef: clk_io_ext_i
    HdlValueId: wire
    HdlDirection: IN

DEL HdlIdDef@@rst_n from objs
HdlIdDef: rst_n
    HdlDirection: INTERNAL

DEL HdlStmAssign@@ from objs
HdlStmAssign
    HdlValueId: rst_io_clk_ni
    HdlValueId: rst_n


CommitId: 597dea829296a9563ae6dfbf79a38fbb3ecbabc0
[ast] Fix ast.core file
--- a/hw/top_earlgrey/ip/ast/rtl/io_clk.sv
+++ b/hw/top_earlgrey/ip/ast/rtl/io_clk.sv
@@ -42,7 +45,7 @@ prim_clock_buf u_clk_io_buf(
 
 // 2-stage de-assertion
 logic rst_val_n;
-assign rst_val_n = scan_mode_i ? scan_reset_ni : rst_n && io_clk_en;
+assign rst_val_n = scan_mode_i ? scan_reset_ni : io_clk_en;
 
 prim_flop_2sync #(
   .Width ( 1 ),
ParseResult:
UPD HdlStmAssign@@ to 
    UPD HdlOp@@TERNARY to TERNARY
        UPD HdlOp@@AND_LOG to AND_LOG
            MOV HdlValueId@@io_clk_en to ops
            HdlValueId: io_clk_en
            DEL HdlValueId@@rst_n from ops
            DEL list@@ops from AND_LOG
        DEL HdlOp@@AND_LOG from ops


CommitId: e5213f7bc4d71345fc2060aa770209e74ae0c395
[prim_packer_fifo/rtl] reset to disable output controls
--- a/hw/ip/prim/rtl/prim_packer_fifo.sv
+++ b/hw/ip/prim/rtl/prim_packer_fifo.sv
@@ -72,24 +71,30 @@ module prim_packer_fifo #(
   // flops
   logic [DepthW:0] depth_q, depth_d;
   logic [MaxW-1:0] data_q, data_d;
+  logic            clr_q, clr_d;
 
   always_ff @(posedge clk_i or negedge rst_ni) begin
     if (!rst_ni) begin
       depth_q <= '0;
       data_q  <= '0;
+      clr_q   <= 1'b1;
     end else begin
       depth_q <= depth_d;
       data_q  <= data_d;
+      clr_q   <= clr_d;
     end
   end
 
+  // flop for handling reset case for clr
+  assign clr_d = clr_i;
+
   assign depth_o = depth_q;
 
   if (InW < OutW) begin : gen_pack_mode
     logic [MaxW-1:0] wdata_shifted;
 
     assign wdata_shifted = wdata_i << (depth_q*InW);
-    assign clear_data = (rready_i && rvalid_o) || clr_i;
+    assign clear_data = (rready_i && rvalid_o) || clr_q;
     assign load_data = wvalid_i && wready_o;
 
     assign depth_d =  clear_data ? '0 :

ParseResult:
INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlValueId: clr_i
    HdlValueId: clr_d

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueInt: 1
    HdlValueId: clr_q

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueId: clr_d
    HdlValueId: clr_q

UPD HdlStmAssign@@ to 
    UPD HdlOp@@OR_LOG to OR_LOG
        UPD HdlValueId@@clr_i to clr_q


CommitId: e5213f7bc4d71345fc2060aa770209e74ae0c395
[prim_packer_fifo/rtl] reset to disable output controls
--- a/hw/ip/prim/rtl/prim_packer_fifo.sv
+++ b/hw/ip/prim/rtl/prim_packer_fifo.sv
@@ -123,7 +128,7 @@ module prim_packer_fifo #(
     assign lsb_is_one = {{DepthW{1'b0}},1'b1}; // ri lint_check_waive ZERO_REP
     assign   max_value = (MaxW/MinW);
     assign rdata_shifted = data_q >> ptr_q*OutW;
-    assign clear_data = (rready_i && (depth_q == lsb_is_one)) || clr_i;
+    assign clear_data = (rready_i && (depth_q == lsb_is_one)) || clr_q;
     assign load_data = wvalid_i && wready_o;
     assign pull_data = rvalid_o && rready_i;
 

ParseResult:
UPD HdlStmAssign@@ to 
    INS HdlOp@@AND_LOG to 
    UPD HdlOp@@AND_LOG to AND_LOG
        INS list@@ops to AND_LOG
        INS HdlOp@@NEG_LOG to ops
        HdlOp: NEG_LOG
            list: ops
                HdlValueId: clr_q

UPD HdlStmAssign@@ to 
    INS HdlOp@@AND_LOG to 
    UPD HdlOp@@AND_LOG to AND_LOG
        INS list@@ops to AND_LOG
        INS HdlOp@@NEG_LOG to ops
        HdlOp: NEG_LOG
            list: ops
                HdlValueId: clr_q

UPD HdlStmAssign@@ to 
    MOV HdlOp@@EQ to 
    HdlOp: EQ
        list: ops
            HdlValueId: depth_q
            HdlOp: DIV
                list: ops
                    HdlValueId: MaxW
                    HdlValueId: MinW


CommitId: 19044edfb0b9485031557705595840bea41fb33d
[prim_secded] Use _i/_o suffix for port names
--- a/hw/ip/prim/rtl/prim_secded_hamming_72_64_enc.sv
+++ b/hw/ip/prim/rtl/prim_secded_hamming_72_64_enc.sv
@@ -5,20 +5,20 @@
 // SECDED encoder generated by util/design/secded_gen.py
 
 module prim_secded_hamming_72_64_enc (
-  input        [63:0] in,
-  output logic [71:0] out
+  input        [63:0] data_i,
+  output logic [71:0] data_o
 );
 
   always_comb begin : p_encode
-    out = 72'(in);
-    out[64] = ^(out & 72'h00AB55555556AAAD5B);
-    out[65] = ^(out & 72'h00CD9999999B33366D);
-    out[66] = ^(out & 72'h00F1E1E1E1E3C3C78E);
-    out[67] = ^(out & 72'h0001FE01FE03FC07F0);
-    out[68] = ^(out & 72'h0001FFFE0003FFF800);
-    out[69] = ^(out & 72'h0001FFFFFFFC000000);
-    out[70] = ^(out & 72'h00FE00000000000000);
-    out[71] = ^(out & 72'h7FFFFFFFFFFFFFFFFF);
+    data_o = 72'(data_i);
+    data_o[64] = ^(data_o & 72'h00AB55555556AAAD5B);
+    data_o[65] = ^(data_o & 72'h00CD9999999B33366D);
+    data_o[66] = ^(data_o & 72'h00F1E1E1E1E3C3C78E);
+    data_o[67] = ^(data_o & 72'h0001FE01FE03FC07F0);
+    data_o[68] = ^(data_o & 72'h0001FFFE0003FFF800);
+    data_o[69] = ^(data_o & 72'h0001FFFFFFFC000000);
+    data_o[70] = ^(data_o & 72'h00FE00000000000000);
+    data_o[71] = ^(data_o & 72'h7FFFFFFFFFFFFFFFFF);
   end
 
 endmodule : prim_secded_hamming_72_64_enc
ParseResult:
UPD HdlIdDef@@in to data_i

UPD HdlIdDef@@out to data_o

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@out to data_o
            UPD HdlOp@@CALL to CALL
                UPD HdlValueId@@in to data_i
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@INDEX to INDEX
                UPD HdlValueId@@out to data_o
            UPD HdlOp@@XOR_UNARY to XOR_UNARY
                UPD HdlOp@@AND to AND
                    UPD HdlValueId@@out to data_o
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@INDEX to INDEX
                UPD HdlValueId@@out to data_o
            UPD HdlOp@@XOR_UNARY to XOR_UNARY
                UPD HdlOp@@AND to AND
                    UPD HdlValueId@@out to data_o
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@INDEX to INDEX
                UPD HdlValueId@@out to data_o
            UPD HdlOp@@XOR_UNARY to XOR_UNARY
                UPD HdlOp@@AND to AND
                    UPD HdlValueId@@out to data_o
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@INDEX to INDEX
                UPD HdlValueId@@out to data_o
            UPD HdlOp@@XOR_UNARY to XOR_UNARY
                UPD HdlOp@@AND to AND
                    UPD HdlValueId@@out to data_o
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@INDEX to INDEX
                UPD HdlValueId@@out to data_o
            UPD HdlOp@@XOR_UNARY to XOR_UNARY
                UPD HdlOp@@AND to AND
                    UPD HdlValueId@@out to data_o
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@INDEX to INDEX
                UPD HdlValueId@@out to data_o
            UPD HdlOp@@XOR_UNARY to XOR_UNARY
                UPD HdlOp@@AND to AND
                    UPD HdlValueId@@out to data_o
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@INDEX to INDEX
                UPD HdlValueId@@out to data_o
            UPD HdlOp@@XOR_UNARY to XOR_UNARY
                UPD HdlOp@@AND to AND
                    UPD HdlValueId@@out to data_o
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@INDEX to INDEX
                UPD HdlValueId@@out to data_o
            UPD HdlOp@@XOR_UNARY to XOR_UNARY
                UPD HdlOp@@AND to AND
                    UPD HdlValueId@@out to data_o


CommitId: 33e387ff92df07f8a334ab97a02becf08505a130
[csrng/rtl] Split cmd_sts into two registers
--- a/hw/ip/csrng/rtl/csrng_ctr_drbg_gen.sv
+++ b/hw/ip/csrng/rtl/csrng_ctr_drbg_gen.sv
@@ -9,12 +9,12 @@
 // ctr_drbg cmd module.
 
 module csrng_ctr_drbg_gen import csrng_pkg::*; #(
-  parameter int unsigned Cmd = 3,
-  parameter int unsigned StateId = 4,
-  parameter int unsigned BlkLen = 128,
-  parameter int unsigned KeyLen = 256,
-  parameter int unsigned SeedLen = 384,
-  parameter int unsigned CtrLen  = 32
+  parameter int Cmd = 3,
+  parameter int StateId = 4,
+  parameter int BlkLen = 128,
+  parameter int KeyLen = 256,
+  parameter int SeedLen = 384,
+  parameter int CtrLen  = 32
 ) (
   input logic                clk_i,
   input logic                rst_ni,

ParseResult:
UPD HdlIdDef@@Cmd to Cmd
    UPD HdlOp@@PARAMETRIZATION to PARAMETRIZATION
        MOV HdlValueId@@int to ops
        HdlValueId: int
        DEL HdlOp@@MAP_ASSOCIATION from ops
        HdlOp: MAP_ASSOCIATION
            list: ops
                HdlValueId: signed
        DEL list@@ops from PARAMETRIZATION
    DEL HdlOp@@PARAMETRIZATION from Cmd

UPD HdlIdDef@@StateId to StateId
    UPD HdlOp@@PARAMETRIZATION to PARAMETRIZATION
        MOV HdlValueId@@int to ops
        HdlValueId: int
        DEL HdlOp@@MAP_ASSOCIATION from ops
        HdlOp: MAP_ASSOCIATION
            list: ops
                HdlValueId: signed
        DEL list@@ops from PARAMETRIZATION
    DEL HdlOp@@PARAMETRIZATION from StateId

UPD HdlIdDef@@BlkLen to BlkLen
    UPD HdlOp@@PARAMETRIZATION to PARAMETRIZATION
        MOV HdlValueId@@int to ops
        HdlValueId: int
        DEL HdlOp@@MAP_ASSOCIATION from ops
        HdlOp: MAP_ASSOCIATION
            list: ops
                HdlValueId: signed
        DEL list@@ops from PARAMETRIZATION
    DEL HdlOp@@PARAMETRIZATION from BlkLen

UPD HdlIdDef@@KeyLen to KeyLen
    UPD HdlOp@@PARAMETRIZATION to PARAMETRIZATION
        MOV HdlValueId@@int to ops
        HdlValueId: int
        DEL HdlOp@@MAP_ASSOCIATION from ops
        HdlOp: MAP_ASSOCIATION
            list: ops
                HdlValueId: signed
        DEL list@@ops from PARAMETRIZATION
    DEL HdlOp@@PARAMETRIZATION from KeyLen

UPD HdlIdDef@@SeedLen to SeedLen
    UPD HdlOp@@PARAMETRIZATION to PARAMETRIZATION
        MOV HdlValueId@@int to ops
        HdlValueId: int
        DEL HdlOp@@MAP_ASSOCIATION from ops
        HdlOp: MAP_ASSOCIATION
            list: ops
                HdlValueId: signed
        DEL list@@ops from PARAMETRIZATION
    DEL HdlOp@@PARAMETRIZATION from SeedLen

UPD HdlIdDef@@CtrLen to CtrLen
    UPD HdlOp@@PARAMETRIZATION to PARAMETRIZATION
        MOV HdlValueId@@int to ops
        HdlValueId: int
        DEL HdlOp@@MAP_ASSOCIATION from ops
        HdlOp: MAP_ASSOCIATION
            list: ops
                HdlValueId: signed
        DEL list@@ops from PARAMETRIZATION
    DEL HdlOp@@PARAMETRIZATION from CtrLen


CommitId: 33e387ff92df07f8a334ab97a02becf08505a130
[csrng/rtl] Split cmd_sts into two registers
--- a/hw/ip/csrng/rtl/csrng_ctr_drbg_gen.sv
+++ b/hw/ip/csrng/rtl/csrng_ctr_drbg_gen.sv
@@ -76,16 +76,16 @@ module csrng_ctr_drbg_gen import csrng_pkg::*; #(
   output logic [2:0]         ctr_drbg_gen_sfifo_ggenbits_err_o
 );
 
-  localparam int unsigned GenreqFifoDepth = 1;
-  localparam int unsigned GenreqFifoWidth = KeyLen+BlkLen+CtrLen+1+SeedLen+StateId+Cmd;
-  localparam int unsigned BlkEncAckFifoDepth = 1;
-  localparam int unsigned BlkEncAckFifoWidth = BlkLen+StateId+Cmd;
-  localparam int unsigned AdstageFifoDepth = 1;
-  localparam int unsigned AdstageFifoWidth = KeyLen+BlkLen+CtrLen+1+SeedLen;
-  localparam int unsigned RCStageFifoDepth = 1;
-  localparam int unsigned RCStageFifoWidth = BlkLen+CtrLen+1;
-  localparam int unsigned GenbitsFifoDepth = 1;
-  localparam int unsigned GenbitsFifoWidth = 1+BlkLen+KeyLen+BlkLen+CtrLen+StateId+Cmd;
+  localparam int GenreqFifoDepth = 1;
+  localparam int GenreqFifoWidth = KeyLen+BlkLen+CtrLen+1+SeedLen+StateId+Cmd;
+  localparam int BlkEncAckFifoDepth = 1;
+  localparam int BlkEncAckFifoWidth = BlkLen+StateId+Cmd;
+  localparam int AdstageFifoDepth = 1;
+  localparam int AdstageFifoWidth = KeyLen+BlkLen+CtrLen+1+SeedLen;
+  localparam int RCStageFifoDepth = 1;
+  localparam int RCStageFifoWidth = BlkLen+CtrLen+1;
+  localparam int GenbitsFifoDepth = 1;
+  localparam int GenbitsFifoWidth = 1+BlkLen+KeyLen+BlkLen+CtrLen+StateId+Cmd;
 
   // signals
   logic [Cmd-1:0]     genreq_ccmd;

ParseResult:
INS HdlIdDef@@GenreqFifoDepth to objs
HdlIdDef: GenreqFifoDepth
    HdlValueId: int
    HdlValueInt: 1
    HdlDirection: INTERNAL

INS HdlIdDef@@BlkEncAckFifoDepth to objs
HdlIdDef: BlkEncAckFifoDepth
    HdlValueId: int
    HdlValueInt: 1
    HdlDirection: INTERNAL

INS HdlIdDef@@AdstageFifoDepth to objs
HdlIdDef: AdstageFifoDepth
    HdlValueId: int
    HdlValueInt: 1
    HdlDirection: INTERNAL

INS HdlIdDef@@RCStageFifoDepth to objs
HdlIdDef: RCStageFifoDepth
    HdlValueId: int
    HdlValueInt: 1
    HdlDirection: INTERNAL

INS HdlIdDef@@GenbitsFifoDepth to objs
HdlIdDef: GenbitsFifoDepth
    HdlValueId: int
    HdlValueInt: 1
    HdlDirection: INTERNAL

UPD HdlIdDef@@GenreqFifoWidth to GenreqFifoWidth
    UPD HdlOp@@PARAMETRIZATION to PARAMETRIZATION
        MOV HdlValueId@@int to ops
        HdlValueId: int
        DEL HdlOp@@MAP_ASSOCIATION from ops
        HdlOp: MAP_ASSOCIATION
            list: ops
                HdlValueId: signed
        DEL list@@ops from PARAMETRIZATION
    DEL HdlOp@@PARAMETRIZATION from GenreqFifoWidth

UPD HdlIdDef@@BlkEncAckFifoWidth to BlkEncAckFifoWidth
    UPD HdlOp@@PARAMETRIZATION to PARAMETRIZATION
        MOV HdlValueId@@int to ops
        HdlValueId: int
        DEL HdlOp@@MAP_ASSOCIATION from ops
        HdlOp: MAP_ASSOCIATION
            list: ops
                HdlValueId: signed
        DEL list@@ops from PARAMETRIZATION
    DEL HdlOp@@PARAMETRIZATION from BlkEncAckFifoWidth

UPD HdlIdDef@@AdstageFifoWidth to AdstageFifoWidth
    UPD HdlOp@@PARAMETRIZATION to PARAMETRIZATION
        MOV HdlValueId@@int to ops
        HdlValueId: int
        DEL HdlOp@@MAP_ASSOCIATION from ops
        HdlOp: MAP_ASSOCIATION
            list: ops
                HdlValueId: signed
        DEL list@@ops from PARAMETRIZATION
    DEL HdlOp@@PARAMETRIZATION from AdstageFifoWidth

UPD HdlIdDef@@RCStageFifoWidth to RCStageFifoWidth
    UPD HdlOp@@PARAMETRIZATION to PARAMETRIZATION
        MOV HdlValueId@@int to ops
        HdlValueId: int
        DEL HdlOp@@MAP_ASSOCIATION from ops
        HdlOp: MAP_ASSOCIATION
            list: ops
                HdlValueId: signed
        DEL list@@ops from PARAMETRIZATION
    DEL HdlOp@@PARAMETRIZATION from RCStageFifoWidth

UPD HdlIdDef@@GenbitsFifoWidth to GenbitsFifoWidth
    UPD HdlOp@@PARAMETRIZATION to PARAMETRIZATION
        MOV HdlValueId@@int to ops
        HdlValueId: int
        DEL HdlOp@@MAP_ASSOCIATION from ops
        HdlOp: MAP_ASSOCIATION
            list: ops
                HdlValueId: signed
        DEL list@@ops from PARAMETRIZATION
    DEL HdlOp@@PARAMETRIZATION from GenbitsFifoWidth

DEL HdlIdDef@@GenreqFifoDepth from objs
HdlIdDef: GenreqFifoDepth
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: int
            HdlOp: MAP_ASSOCIATION
                list: ops
                    HdlValueId: signed
    HdlValueInt: 1
    HdlDirection: INTERNAL

DEL HdlIdDef@@BlkEncAckFifoDepth from objs
HdlIdDef: BlkEncAckFifoDepth
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: int
            HdlOp: MAP_ASSOCIATION
                list: ops
                    HdlValueId: signed
    HdlValueInt: 1
    HdlDirection: INTERNAL

DEL HdlIdDef@@AdstageFifoDepth from objs
HdlIdDef: AdstageFifoDepth
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: int
            HdlOp: MAP_ASSOCIATION
                list: ops
                    HdlValueId: signed
    HdlValueInt: 1
    HdlDirection: INTERNAL

DEL HdlIdDef@@RCStageFifoDepth from objs
HdlIdDef: RCStageFifoDepth
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: int
            HdlOp: MAP_ASSOCIATION
                list: ops
                    HdlValueId: signed
    HdlValueInt: 1
    HdlDirection: INTERNAL

DEL HdlIdDef@@GenbitsFifoDepth from objs
HdlIdDef: GenbitsFifoDepth
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: int
            HdlOp: MAP_ASSOCIATION
                list: ops
                    HdlValueId: signed
    HdlValueInt: 1
    HdlDirection: INTERNAL


CommitId: 33e387ff92df07f8a334ab97a02becf08505a130
[csrng/rtl] Split cmd_sts into two registers
--- a/hw/ip/csrng/rtl/csrng_ctr_drbg_gen.sv
+++ b/hw/ip/csrng/rtl/csrng_ctr_drbg_gen.sv
@@ -184,10 +184,9 @@ module csrng_ctr_drbg_gen import csrng_pkg::*; #(
     ReqSend = 4'b0101
 } state_e;
 
+  state_e state_d, state_q;
 
-  state_e state_d;
-
-  logic [StateWidth-1:0] state_q;
+  logic [StateWidth-1:0] state_raw_q;
 
   // This primitive is used to place a size-only constraint on the
   // flops in order to prevent FSM state encoding optimizations.

ParseResult:
INS HdlIdDef@@state_q to objs
HdlIdDef: state_q
    HdlDirection: INTERNAL

UPD HdlIdDef@@state_q to state_raw_q


CommitId: 33e387ff92df07f8a334ab97a02becf08505a130
[csrng/rtl] Split cmd_sts into two registers
--- a/hw/ip/csrng/rtl/csrng_ctr_drbg_gen.sv
+++ b/hw/ip/csrng/rtl/csrng_ctr_drbg_gen.sv
@@ -198,9 +197,11 @@ module csrng_ctr_drbg_gen import csrng_pkg::*; #(
     .clk_i,
     .rst_ni,
     .d_i ( state_d ),
-    .q_o ( state_q )
+    .q_o ( state_raw_q )
   );
 
+  assign state_q = state_e'(state_raw_q);
+
   always_ff @(posedge clk_i or negedge rst_ni)
     if (!rst_ni) begin
       v_ctr_q            <= '0;

ParseResult:
INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: CALL
        list: ops
            HdlValueId: state_e
            HdlValueId: state_raw_q
    HdlValueId: state_q


CommitId: 33e387ff92df07f8a334ab97a02becf08505a130
[csrng/rtl] Split cmd_sts into two registers
--- a/hw/ip/csrng/rtl/csrng_ctr_drbg_gen.sv
+++ b/hw/ip/csrng/rtl/csrng_ctr_drbg_gen.sv
@@ -291,7 +292,7 @@ module csrng_ctr_drbg_gen import csrng_pkg::*; #(
   assign block_encrypt_v_o = v_sized;
 
   always_comb begin
-    state_d = state_e'(state_q);
+    state_d = state_q;
     v_ctr_load = 1'b0;
     v_ctr_inc  = 1'b0;
     interate_ctr_inc  = 1'b0;
ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@CALL to CALL
                MOV HdlValueId@@state_q to ops
                HdlValueId: state_q
                DEL HdlValueId@@state_e from ops
                DEL list@@ops from CALL
            DEL HdlOp@@CALL from ops


CommitId: e1e0fd6c024b64705702f85e7285f48fa9f5e79f
[flash_ctrl] update intergrity error handling
--- a/hw/ip/flash_ctrl/rtl/flash_phy.sv
+++ b/hw/ip/flash_ctrl/rtl/flash_phy.sv
@@ -14,6 +14,7 @@ module flash_phy import flash_ctrl_pkg::*; (
   input clk_i,
   input rst_ni,
   input host_req_i,
+  input host_intg_err_i,
   input tlul_pkg::tl_type_e host_req_type_i,
   input [BusAddrW-1:0] host_addr_i,
   output logic host_req_rdy_o,

ParseResult:
INS HdlIdDef@@host_intg_err_i to ports
HdlIdDef: host_intg_err_i
    HdlValueId: wire
    HdlDirection: IN


CommitId: e1e0fd6c024b64705702f85e7285f48fa9f5e79f
[flash_ctrl] update intergrity error handling
--- a/hw/ip/flash_ctrl/rtl/flash_phy.sv
+++ b/hw/ip/flash_ctrl/rtl/flash_phy.sv
@@ -94,6 +95,8 @@ module flash_phy import flash_ctrl_pkg::*; (
   assign flash_ctrl_o.rd_data = rd_data[ctrl_bank_sel];
   assign flash_ctrl_o.rd_err = rd_err[ctrl_bank_sel];
   assign flash_ctrl_o.init_busy = init_busy;
+  // feed through host integrity error directly
+  assign flash_ctrl_o.intg_err = host_intg_err_i;
 
   // This fifo holds the expected return order
   prim_fifo_sync #(

ParseResult:
INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlValueId: host_intg_err_i
    HdlValueId: flash_ctrl_o


CommitId: 9e28a059674c4db9097aeec49fb86b186201626f
[DV/DPI] Add logic type to IO declaration
--- a/hw/dv/dpi/gpiodpi/gpiodpi.sv
+++ b/hw/dv/dpi/gpiodpi/gpiodpi.sv
@@ -7,12 +7,12 @@ module gpiodpi
   parameter string NAME = "gpio0",
   parameter        N_GPIO = 32
 )(
-  input               clk_i,
-  input               rst_ni,
+  input  logic              clk_i,
+  input  logic              rst_ni,
 
-  output [N_GPIO-1:0] gpio_p2d,
-  input [N_GPIO-1:0]  gpio_d2p,
-  input [N_GPIO-1:0]  gpio_en_d2p
+  output logic [N_GPIO-1:0] gpio_p2d,
+  input  logic [N_GPIO-1:0] gpio_d2p,
+  input  logic [N_GPIO-1:0] gpio_en_d2p
 );
    import "DPI-C" function
      chandle gpiodpi_create(input string name, input int n_bits);
ParseResult:
UPD HdlIdDef@@clk_i to clk_i
    INS HdlOp@@PARAMETRIZATION to clk_i
    UPD HdlOp@@PARAMETRIZATION to PARAMETRIZATION
        INS list@@ops to PARAMETRIZATION

UPD HdlIdDef@@rst_ni to rst_ni
    INS HdlOp@@PARAMETRIZATION to rst_ni
    UPD HdlOp@@PARAMETRIZATION to PARAMETRIZATION
        INS list@@ops to PARAMETRIZATION

UPD HdlIdDef@@clk_i to clk_i
    UPD HdlValueId@@wire to logic
    MOV HdlValueId@@wire to clk_i
    HdlValueId: wire

UPD HdlIdDef@@rst_ni to rst_ni
    UPD HdlValueId@@wire to logic
    MOV HdlValueId@@wire to rst_ni
    HdlValueId: wire

UPD HdlIdDef@@gpio_p2d to gpio_p2d
    UPD HdlOp@@PARAMETRIZATION to PARAMETRIZATION
        UPD HdlValueId@@wire to logic

UPD HdlIdDef@@gpio_d2p to gpio_d2p
    UPD HdlOp@@PARAMETRIZATION to PARAMETRIZATION
        UPD HdlValueId@@wire to logic

UPD HdlIdDef@@gpio_en_d2p to gpio_en_d2p
    UPD HdlOp@@PARAMETRIZATION to PARAMETRIZATION
        UPD HdlValueId@@wire to logic


CommitId: 723c05e4c8394caff8c079a0a5a4410c94e2fde3
[flash_ctrl,lint] Fix various bit width mismatches
--- a/hw/ip/flash_ctrl/rtl/flash_ctrl_lcmgr.sv
+++ b/hw/ip/flash_ctrl/rtl/flash_ctrl_lcmgr.sv
@@ -76,13 +76,14 @@ module flash_ctrl_lcmgr import flash_ctrl_pkg::*; #(
 );
 
   // total number of pages to be wiped during RMA entry
-  localparam int WipeIdxWidth = prim_util_pkg::vbits(WipeEntries);
+  localparam int unsigned WipeIdxWidth = prim_util_pkg::vbits(WipeEntries);
+  localparam int unsigned MaxWipeEntry = WipeEntries - 1;
 
   // seed related local params
-  localparam int SeedReads = SeedWidth / BusWidth;
-  localparam int SeedRdsWidth = $clog2(SeedReads);
-  localparam int SeedCntWidth = $clog2(NumSeeds+1);
-  localparam int NumSeedWidth = $clog2(NumSeeds);
+  localparam int unsigned SeedReads = SeedWidth / BusWidth;
+  localparam int unsigned SeedRdsWidth = $clog2(SeedReads);
+  localparam int unsigned SeedCntWidth = $clog2(NumSeeds+1);
+  localparam int unsigned NumSeedWidth = $clog2(NumSeeds);
 
   // the various seed outputs
   logic [NumSeeds-1:0][SeedReads-1:0][BusWidth-1:0] seeds_q;

ParseResult:
INS HdlIdDef@@MaxWipeEntry to objs

INS HdlIdDef@@SeedReads to objs

INS HdlIdDef@@SeedRdsWidth to objs

INS HdlIdDef@@NumSeedWidth to objs

UPD HdlIdDef@@WipeIdxWidth to WipeIdxWidth
    INS HdlOp@@PARAMETRIZATION to WipeIdxWidth
    UPD HdlOp@@PARAMETRIZATION to PARAMETRIZATION
        INS list@@ops to PARAMETRIZATION
        INS HdlOp@@MAP_ASSOCIATION to ops
        HdlOp: MAP_ASSOCIATION
            list: ops
                HdlValueId: signed

UPD HdlIdDef@@MaxWipeEntry to MaxWipeEntry
    INS HdlOp@@PARAMETRIZATION to MaxWipeEntry
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: int
            HdlOp: MAP_ASSOCIATION
                list: ops
                    HdlValueId: signed
    INS HdlDirection@@INTERNAL to MaxWipeEntry

UPD HdlIdDef@@SeedReads to SeedReads
    INS HdlOp@@PARAMETRIZATION to SeedReads
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: int
            HdlOp: MAP_ASSOCIATION
                list: ops
                    HdlValueId: signed
    INS HdlDirection@@INTERNAL to SeedReads

UPD HdlIdDef@@SeedReads to SeedReads
    MOV HdlOp@@DIV to SeedReads
    HdlOp: DIV
        list: ops
            HdlValueId: SeedWidth
            HdlValueId: BusWidth
    DEL HdlValueId@@int from SeedReads
    DEL HdlDirection@@INTERNAL from SeedReads

UPD HdlIdDef@@SeedRdsWidth to SeedRdsWidth
    INS HdlOp@@PARAMETRIZATION to SeedRdsWidth
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: int
            HdlOp: MAP_ASSOCIATION
                list: ops
                    HdlValueId: signed
    INS HdlDirection@@INTERNAL to SeedRdsWidth

UPD HdlIdDef@@SeedRdsWidth to SeedRdsWidth
    MOV HdlOp@@CALL to SeedRdsWidth
    HdlOp: CALL
        list: ops
            HdlValueId: $clog2
            HdlValueId: SeedReads
    DEL HdlValueId@@int from SeedRdsWidth
    DEL HdlDirection@@INTERNAL from SeedRdsWidth

UPD HdlIdDef@@SeedCntWidth to SeedCntWidth
    INS HdlOp@@PARAMETRIZATION to SeedCntWidth
    UPD HdlOp@@PARAMETRIZATION to PARAMETRIZATION
        INS list@@ops to PARAMETRIZATION
        INS HdlOp@@MAP_ASSOCIATION to ops
        HdlOp: MAP_ASSOCIATION
            list: ops
                HdlValueId: signed

UPD HdlIdDef@@NumSeedWidth to NumSeedWidth
    INS HdlOp@@PARAMETRIZATION to NumSeedWidth
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: int
            HdlOp: MAP_ASSOCIATION
                list: ops
                    HdlValueId: signed
    INS HdlDirection@@INTERNAL to NumSeedWidth

UPD HdlIdDef@@NumSeedWidth to NumSeedWidth
    MOV HdlOp@@CALL to NumSeedWidth
    HdlOp: CALL
        list: ops
            HdlValueId: $clog2
            HdlValueId: NumSeeds
    DEL HdlValueId@@int from NumSeedWidth
    DEL HdlDirection@@INTERNAL from NumSeedWidth

UPD HdlIdDef@@WipeIdxWidth to WipeIdxWidth
    MOV HdlValueId@@int to WipeIdxWidth
    HdlValueId: int

UPD HdlIdDef@@SeedCntWidth to SeedCntWidth
    MOV HdlValueId@@int to SeedCntWidth
    HdlValueId: int

DEL HdlIdDef@@SeedReads from objs

DEL HdlIdDef@@SeedRdsWidth from objs

DEL HdlIdDef@@NumSeedWidth from objs


CommitId: 723c05e4c8394caff8c079a0a5a4410c94e2fde3
[flash_ctrl,lint] Fix various bit width mismatches
--- a/hw/ip/flash_ctrl/rtl/flash_ctrl_lcmgr.sv
+++ b/hw/ip/flash_ctrl/rtl/flash_ctrl_lcmgr.sv
@@ -284,7 +285,7 @@ module flash_ctrl_lcmgr import flash_ctrl_pkg::*; #(
     addr = '0;
     part_sel = FlashPartInfo;
     info_sel = 0;
-    num_words = SeedReads - 1'b1;
+    num_words = SeedReads[11:0] - 12'd1;
 
     // seed status
     seed_err_o = 1'b0;

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@SUB to SUB
                INS HdlOp@@INDEX to ops
                UPD HdlOp@@INDEX to INDEX
                    INS list@@ops to INDEX
                    INS HdlOp@@DOWNTO to ops
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 11
                            HdlValueInt: 0

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@SUB to SUB
                MOV HdlValueId@@SeedReads to ops
                HdlValueId: SeedReads


CommitId: 723c05e4c8394caff8c079a0a5a4410c94e2fde3
[flash_ctrl,lint] Fix various bit width mismatches
--- a/hw/ip/flash_ctrl/rtl/flash_ctrl_lcmgr.sv
+++ b/hw/ip/flash_ctrl/rtl/flash_ctrl_lcmgr.sv
@@ -350,7 +351,7 @@ module flash_ctrl_lcmgr import flash_ctrl_pkg::*; #(
         info_sel = seed_info_sel;
 
         // we have checked all seeds, proceed
-        if (seed_cnt_q == NumSeeds) begin
+        if (seed_cnt_q == NumSeeds[SeedCntWidth-1:0]) begin
           start = 1'b0;
           state_d = StWait;
 

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@SUB to SUB
                INS HdlOp@@INDEX to ops
                UPD HdlOp@@INDEX to INDEX
                    INS list@@ops to INDEX
                    INS HdlOp@@DOWNTO to ops
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 11
                            HdlValueInt: 0

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@SUB to SUB
                MOV HdlValueId@@SeedReads to ops
                HdlValueId: SeedReads

UPD HdlStmIf@@ to 
    UPD HdlOp@@EQ to EQ
        MOV HdlValueId@@NumSeeds to ops
        HdlValueId: NumSeeds


CommitId: 723c05e4c8394caff8c079a0a5a4410c94e2fde3
[flash_ctrl,lint] Fix various bit width mismatches
--- a/hw/ip/flash_ctrl/rtl/flash_ctrl_lcmgr.sv
+++ b/hw/ip/flash_ctrl/rtl/flash_ctrl_lcmgr.sv
@@ -399,7 +400,7 @@ module flash_ctrl_lcmgr import flash_ctrl_pkg::*; #(
         lfsr_en_o = 1'b1;
         rma_wipe_req = 1'b1;
 
-        if (rma_wipe_idx == WipeEntries-1 && rma_wipe_done) begin
+        if (rma_wipe_idx == MaxWipeEntry[WipeIdxWidth-1:0] && rma_wipe_done) begin
           // first check for error status
           // If error status is set, go directly to invalid terminal state
           // If error status is good, go to second check

ParseResult:
UPD HdlStmIf@@ to 
    UPD HdlOp@@AND_LOG to AND_LOG
        UPD HdlOp@@EQ to EQ
            MOV HdlOp@@SUB to ops
            HdlOp: SUB
                list: ops
                    HdlValueId: WipeEntries
                    HdlValueInt: 1

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@SUB to SUB
                INS HdlOp@@INDEX to ops
                UPD HdlOp@@INDEX to INDEX
                    INS list@@ops to INDEX
                    INS HdlOp@@DOWNTO to ops
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 11
                            HdlValueInt: 0

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@SUB to SUB
                MOV HdlValueId@@SeedReads to ops
                HdlValueId: SeedReads

UPD HdlStmIf@@ to 
    UPD HdlOp@@AND_LOG to AND_LOG
        UPD HdlOp@@EQ to EQ
            INS HdlOp@@INDEX to ops
            HdlOp: INDEX
                list: ops
                    HdlValueId: MaxWipeEntry
                    HdlOp: DOWNTO
                        list: ops
                            HdlOp: SUB
                                list: ops
                                    HdlValueId: WipeIdxWidth
                                    HdlValueInt: 1
                            HdlValueInt: 0


CommitId: 723c05e4c8394caff8c079a0a5a4410c94e2fde3
[flash_ctrl,lint] Fix various bit width mismatches
--- a/hw/ip/flash_ctrl/rtl/flash_ctrl_lcmgr.sv
+++ b/hw/ip/flash_ctrl/rtl/flash_ctrl_lcmgr.sv
@@ -438,9 +439,10 @@ module flash_ctrl_lcmgr import flash_ctrl_pkg::*; #(
   // RMA wiping Mechanism
   ///////////////////////////////
 
-  localparam int PageCntWidth = prim_util_pkg::vbits(PagesPerBank + 1);
-  localparam int WordCntWidth = prim_util_pkg::vbits(BusWordsPerPage + 1);
-  localparam int BeatCntWidth = prim_util_pkg::vbits(WidthMultiple);
+  localparam int unsigned PageCntWidth = prim_util_pkg::vbits(PagesPerBank + 1);
+  localparam int unsigned WordCntWidth = prim_util_pkg::vbits(BusWordsPerPage + 1);
+  localparam int unsigned BeatCntWidth = prim_util_pkg::vbits(WidthMultiple);
+  localparam int unsigned MaxBeatCnt = WidthMultiple - 1;
 
   logic page_cnt_ld;
   logic page_cnt_incr;

ParseResult:
INS HdlIdDef@@MaxBeatCnt to objs

UPD HdlIdDef@@PageCntWidth to PageCntWidth
    INS HdlOp@@PARAMETRIZATION to PageCntWidth
    UPD HdlOp@@PARAMETRIZATION to PARAMETRIZATION
        INS list@@ops to PARAMETRIZATION
        INS HdlOp@@MAP_ASSOCIATION to ops
        HdlOp: MAP_ASSOCIATION
            list: ops
                HdlValueId: signed

UPD HdlIdDef@@WordCntWidth to WordCntWidth
    INS HdlOp@@PARAMETRIZATION to WordCntWidth
    UPD HdlOp@@PARAMETRIZATION to PARAMETRIZATION
        INS list@@ops to PARAMETRIZATION
        INS HdlOp@@MAP_ASSOCIATION to ops
        HdlOp: MAP_ASSOCIATION
            list: ops
                HdlValueId: signed

UPD HdlIdDef@@PageCntWidth to PageCntWidth
    MOV HdlValueId@@int to PageCntWidth
    HdlValueId: int

UPD HdlIdDef@@WordCntWidth to WordCntWidth
    MOV HdlValueId@@int to WordCntWidth
    HdlValueId: int

UPD HdlIdDef@@BeatCntWidth to BeatCntWidth
    MOV HdlValueId@@int to BeatCntWidth
    HdlValueId: int

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@SUB to SUB
                INS HdlOp@@INDEX to ops
                UPD HdlOp@@INDEX to INDEX
                    INS list@@ops to INDEX
                    INS HdlOp@@DOWNTO to ops
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 11
                            HdlValueInt: 0


CommitId: 723c05e4c8394caff8c079a0a5a4410c94e2fde3
[flash_ctrl,lint] Fix various bit width mismatches
--- a/hw/ip/flash_ctrl/rtl/flash_ctrl_lcmgr.sv
+++ b/hw/ip/flash_ctrl/rtl/flash_ctrl_lcmgr.sv
@@ -496,7 +498,7 @@ module flash_ctrl_lcmgr import flash_ctrl_pkg::*; #(
     end else if (word_cnt_clr) begin
       word_cnt <= '0;
     end else if (word_cnt_incr) begin
-      word_cnt <= word_cnt + WidthMultiple;
+      word_cnt <= word_cnt + WidthMultiple[WordCntWidth-1:0];
     end
   end
 

ParseResult:
UPD HdlStmAssign@@ to 
    UPD HdlOp@@ADD to ADD
        MOV HdlValueId@@WidthMultiple to ops
        HdlValueId: WidthMultiple


CommitId: 723c05e4c8394caff8c079a0a5a4410c94e2fde3
[flash_ctrl,lint] Fix various bit width mismatches
--- a/hw/ip/flash_ctrl/rtl/flash_ctrl_lcmgr.sv
+++ b/hw/ip/flash_ctrl/rtl/flash_ctrl_lcmgr.sv
@@ -555,7 +557,7 @@ module flash_ctrl_lcmgr import flash_ctrl_pkg::*; #(
 
   assign rma_part_sel = RmaWipeEntries[rma_wipe_idx].part;
   assign rma_info_sel = RmaWipeEntries[rma_wipe_idx].info_sel;
-  assign rma_num_words = WidthMultiple - 1;
+  assign rma_num_words = WidthMultiple[11:0] - 1;
 
 
   //fsm for handling the actual wipe

ParseResult:
INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: SUB
        list: ops
            HdlOp: INDEX
                list: ops
                    HdlValueId: WidthMultiple
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 11
                            HdlValueInt: 0
            HdlValueInt: 1
    HdlValueId: rma_num_words

UPD HdlStmAssign@@ to 
    MOV HdlOp@@SUB to 
    HdlOp: SUB
        list: ops
            HdlValueId: WidthMultiple
            HdlValueInt: 1
    DEL HdlValueId@@rma_num_words from 

DEL HdlStmAssign@@ from objs


CommitId: 723c05e4c8394caff8c079a0a5a4410c94e2fde3
[flash_ctrl,lint] Fix various bit width mismatches
--- a/hw/ip/flash_ctrl/rtl/flash_ctrl_lcmgr.sv
+++ b/hw/ip/flash_ctrl/rtl/flash_ctrl_lcmgr.sv
@@ -603,7 +605,7 @@ module flash_ctrl_lcmgr import flash_ctrl_pkg::*; #(
       end
 
       StRmaWordSel: begin
-        if (word_cnt < BusWordsPerPage) begin
+        if (word_cnt < BusWordsPerPage[WordCntWidth-1:0]) begin
           rma_state_d = StRmaProgram;
         end else begin
           word_cnt_clr = 1'b1;

ParseResult:
UPD HdlStmIf@@ to 
    UPD HdlOp@@LT to LT
        MOV HdlValueId@@BusWordsPerPage to ops
        HdlValueId: BusWordsPerPage


CommitId: 723c05e4c8394caff8c079a0a5a4410c94e2fde3
[flash_ctrl,lint] Fix various bit width mismatches
--- a/hw/ip/flash_ctrl/rtl/flash_ctrl_lcmgr.sv
+++ b/hw/ip/flash_ctrl/rtl/flash_ctrl_lcmgr.sv
@@ -617,7 +619,7 @@ module flash_ctrl_lcmgr import flash_ctrl_pkg::*; #(
         rma_op = FlashOpProgram;
         prog_cnt_en = 1'b1;
 
-        if ((beat_cnt == WidthMultiple-1) && wready_i) begin
+        if ((beat_cnt == MaxBeatCnt[BeatCntWidth-1:0]) && wready_i) begin
           rma_state_d = StRmaProgramWait;
         end
       end

ParseResult:
UPD HdlStmIf@@ to 
    UPD HdlOp@@LT to LT
        INS HdlOp@@INDEX to ops
        UPD HdlOp@@INDEX to INDEX
            INS list@@ops to INDEX
            INS HdlOp@@DOWNTO to ops
            HdlOp: DOWNTO
                list: ops
                    HdlOp: SUB
                        list: ops
                            HdlValueId: WordCntWidth
                            HdlValueInt: 1
                    HdlValueInt: 0

UPD HdlStmIf@@ to 
    UPD HdlOp@@AND_LOG to AND_LOG
        UPD HdlOp@@EQ to EQ
            MOV HdlOp@@SUB to ops
            HdlOp: SUB
                list: ops
                    HdlValueId: WidthMultiple
                    HdlValueInt: 1
            UPD HdlOp@@SUB to SUB
                UPD HdlValueId@@WidthMultiple to BeatCntWidth


CommitId: 723c05e4c8394caff8c079a0a5a4410c94e2fde3
[flash_ctrl,lint] Fix various bit width mismatches
--- a/hw/ip/flash_ctrl/rtl/flash_ctrl_lcmgr.sv
+++ b/hw/ip/flash_ctrl/rtl/flash_ctrl_lcmgr.sv
@@ -638,7 +640,7 @@ module flash_ctrl_lcmgr import flash_ctrl_pkg::*; #(
         rma_op = FlashOpRead;
         rd_cnt_en = 1'b1;
 
-        if ((beat_cnt == WidthMultiple-1) && done_i) begin
+        if ((beat_cnt == MaxBeatCnt[BeatCntWidth-1:0]) && done_i) begin
           beat_cnt_clr = 1'b1;
           word_cnt_incr = 1'b1;
           rma_state_d = StRmaWordSel;
ParseResult:
UPD HdlStmIf@@ to 
    UPD HdlOp@@AND_LOG to AND_LOG
        UPD HdlOp@@EQ to EQ
            MOV HdlOp@@SUB to ops
            HdlOp: SUB
                list: ops
                    HdlValueId: WidthMultiple
                    HdlValueInt: 1
            UPD HdlOp@@SUB to SUB
                UPD HdlValueId@@WidthMultiple to BeatCntWidth


CommitId: 535275b313975bfb95a6acb15684004bc641a62a
[csrng/rtl] generate cmd bug fixes
--- a/hw/ip/csrng/rtl/csrng_ctr_drbg_cmd.sv
+++ b/hw/ip/csrng/rtl/csrng_ctr_drbg_cmd.sv
@@ -66,7 +66,7 @@ module csrng_ctr_drbg_cmd import csrng_pkg::*; #(
   localparam int CmdreqFifoDepth = 1;
   localparam int CmdreqFifoWidth = KeyLen+BlkLen+CtrLen+1+2*SeedLen+StateId+Cmd;
   localparam int RCStageFifoDepth = 1;
-  localparam int RCStageFifoWidth = CtrLen+1+SeedLen+Cmd;
+  localparam int RCStageFifoWidth = KeyLen+BlkLen+StateId+CtrLen+1+SeedLen+Cmd;
   localparam int KeyVRCFifoDepth = 1;
   localparam int KeyVRCFifoWidth = KeyLen+BlkLen+CtrLen+1+SeedLen+StateId+Cmd;
 

ParseResult:
INS HdlIdDef@@RCStageFifoWidth to objs
HdlIdDef: RCStageFifoWidth
    HdlValueId: int
    HdlOp: ADD
        list: ops
            HdlOp: ADD
                list: ops
                    HdlOp: ADD
                        list: ops
                            HdlOp: ADD
                                list: ops
                                    HdlOp: ADD
                                        list: ops
                                            HdlOp: ADD
                                                list: ops
                                                    HdlValueId: KeyLen
                                                    HdlValueId: BlkLen
                                            HdlValueId: StateId
                                    HdlValueId: CtrLen
                            HdlValueInt: 1
                    HdlValueId: SeedLen
            HdlValueId: Cmd
    HdlDirection: INTERNAL

DEL HdlIdDef@@RCStageFifoWidth from objs
HdlIdDef: RCStageFifoWidth
    HdlValueId: int
    HdlOp: ADD
        list: ops
            HdlOp: ADD
                list: ops
                    HdlOp: ADD
                        list: ops
                            HdlValueId: CtrLen
                            HdlValueInt: 1
                    HdlValueId: SeedLen
            HdlValueId: Cmd
    HdlDirection: INTERNAL


CommitId: 535275b313975bfb95a6acb15684004bc641a62a
[csrng/rtl] generate cmd bug fixes
--- a/hw/ip/csrng/rtl/csrng_ctr_drbg_cmd.sv
+++ b/hw/ip/csrng/rtl/csrng_ctr_drbg_cmd.sv
@@ -85,6 +85,10 @@ module csrng_ctr_drbg_cmd import csrng_pkg::*; #(
   logic [KeyLen-1:0]  prep_key;
   logic [BlkLen-1:0]  prep_v;
   logic [CtrLen-1:0]  prep_rc;
+  logic               prep_gen_adata_null;
+  logic [KeyLen-1:0]  rcstage_key;
+  logic [BlkLen-1:0]  rcstage_v;
+  logic [StateId-1:0] rcstage_id;
   logic [CtrLen-1:0]  rcstage_rc;
   logic [Cmd-1:0]     rcstage_ccmd;
   logic [SeedLen-1:0] rcstage_adata;

ParseResult:
INS HdlIdDef@@prep_gen_adata_null to objs
HdlIdDef: prep_gen_adata_null
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

INS HdlIdDef@@rcstage_key to objs
HdlIdDef: rcstage_key
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlOp: SUB
                        list: ops
                            HdlValueId: KeyLen
                            HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: INTERNAL

INS HdlIdDef@@rcstage_v to objs
HdlIdDef: rcstage_v
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlOp: SUB
                        list: ops
                            HdlValueId: BlkLen
                            HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: INTERNAL

INS HdlIdDef@@rcstage_id to objs
HdlIdDef: rcstage_id
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlOp: SUB
                        list: ops
                            HdlValueId: StateId
                            HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: INTERNAL


CommitId: 535275b313975bfb95a6acb15684004bc641a62a
[csrng/rtl] generate cmd bug fixes
--- a/hw/ip/csrng/rtl/csrng_ctr_drbg_cmd.sv
+++ b/hw/ip/csrng/rtl/csrng_ctr_drbg_cmd.sv
@@ -115,6 +119,16 @@ module csrng_ctr_drbg_cmd import csrng_pkg::*; #(
   logic                        sfifo_keyvrc_full;
   logic                        sfifo_keyvrc_not_empty;
 
+  // flops
+  logic                        gen_adata_null_q, gen_adata_null_d;
+
+  always_ff @(posedge clk_i or negedge rst_ni) begin
+    if (!rst_ni) begin
+      gen_adata_null_q  <= '0;
+    end else begin
+      gen_adata_null_q  <= gen_adata_null_d;
+    end
+  end
 
   //--------------------------------------------
   // input request fifo for staging cmd request

ParseResult:
INS HdlIdDef@@gen_adata_null_q to objs
HdlIdDef: gen_adata_null_q
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

INS HdlIdDef@@gen_adata_null_d to objs
HdlIdDef: gen_adata_null_d
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

INS HdlStmProcess@@ to objs
HdlStmProcess
    list: sensitivity
        HdlOp: RISING
            list: ops
                HdlValueId: clk_i
        HdlOp: FALLING
            list: ops
                HdlValueId: rst_ni
    HdlStmBlock: SEQ
        list: body
            HdlStmIf
                HdlOp: NEG_LOG
                    list: ops
                        HdlValueId: rst_ni
                HdlStmBlock: SEQ
                    list: body
                        HdlStmAssign
                            HdlValueInt: 0
                            HdlValueId: gen_adata_null_q
                list: elifs
                HdlStmBlock: SEQ
                    list: body
                        HdlStmAssign
                            HdlValueId: gen_adata_null_d
                            HdlValueId: gen_adata_null_q
    HdlStmProcessTriggerConstrain: FF


CommitId: 535275b313975bfb95a6acb15684004bc641a62a
[csrng/rtl] generate cmd bug fixes
--- a/hw/ip/csrng/rtl/csrng_ctr_drbg_cmd.sv
+++ b/hw/ip/csrng/rtl/csrng_ctr_drbg_cmd.sv
@@ -149,7 +163,8 @@ module csrng_ctr_drbg_cmd import csrng_pkg::*; #(
 
   assign sfifo_cmdreq_push = ctr_drbg_cmd_enable_i && ctr_drbg_cmd_req_i;
 
-  assign sfifo_cmdreq_pop = ctr_drbg_cmd_enable_i && upd_cmd_rdy_i && sfifo_cmdreq_not_empty;
+  assign sfifo_cmdreq_pop = ctr_drbg_cmd_enable_i &&
+         (upd_cmd_rdy_i || gen_adata_null_q) && sfifo_cmdreq_not_empty;
 
   assign {cmdreq_key,cmdreq_v,cmdreq_rc,
           cmdreq_entropy_fips,cmdreq_entropy,cmdreq_adata,

ParseResult:
INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: AND_LOG
        list: ops
            HdlOp: AND_LOG
                list: ops
                    HdlValueId: ctr_drbg_cmd_enable_i
                    HdlOp: OR_LOG
                        list: ops
                            HdlValueId: upd_cmd_rdy_i
                            HdlValueId: gen_adata_null_q
            HdlValueId: sfifo_cmdreq_not_empty
    HdlValueId: sfifo_cmdreq_pop

DEL HdlStmAssign@@ from objs
HdlStmAssign
    HdlOp: AND_LOG
        list: ops
            HdlOp: AND_LOG
                list: ops
                    HdlValueId: ctr_drbg_cmd_enable_i
                    HdlValueId: upd_cmd_rdy_i
            HdlValueId: sfifo_cmdreq_not_empty
    HdlValueId: sfifo_cmdreq_pop


CommitId: 535275b313975bfb95a6acb15684004bc641a62a
[csrng/rtl] generate cmd bug fixes
--- a/hw/ip/csrng/rtl/csrng_ctr_drbg_cmd.sv
+++ b/hw/ip/csrng/rtl/csrng_ctr_drbg_cmd.sv
@@ -195,8 +210,13 @@ module csrng_ctr_drbg_cmd import csrng_pkg::*; #(
          (cmdreq_ccmd == UPD) ? cmdreq_rc :
          '0;
 
+  assign prep_gen_adata_null = (cmdreq_ccmd == GEN) && (cmdreq_adata == '0) &&
+                               sfifo_cmdreq_not_empty;
+
+  assign gen_adata_null_d = prep_gen_adata_null;
+
   // send to the update block
-  assign cmd_upd_req_o = sfifo_cmdreq_not_empty;
+  assign cmd_upd_req_o = sfifo_cmdreq_not_empty && !prep_gen_adata_null;
   assign cmd_upd_ccmd_o = cmdreq_ccmd;
   assign cmd_upd_inst_id_o = cmdreq_id;
   assign cmd_upd_pdata_o = prep_seed_material;

ParseResult:
INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: AND_LOG
        list: ops
            HdlOp: AND_LOG
                list: ops
                    HdlOp: EQ
                        list: ops
                            HdlValueId: cmdreq_ccmd
                            HdlValueId: GEN
                    HdlOp: EQ
                        list: ops
                            HdlValueId: cmdreq_adata
                            HdlValueInt: 0
            HdlValueId: sfifo_cmdreq_not_empty
    HdlValueId: prep_gen_adata_null

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlValueId: prep_gen_adata_null
    HdlValueId: gen_adata_null_d

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: AND_LOG
        list: ops
            HdlValueId: sfifo_cmdreq_not_empty
            HdlOp: NEG_LOG
                list: ops
                    HdlValueId: prep_gen_adata_null
    HdlValueId: cmd_upd_req_o

DEL HdlStmAssign@@ from objs
HdlStmAssign
    HdlValueId: sfifo_cmdreq_not_empty
    HdlValueId: cmd_upd_req_o


CommitId: 535275b313975bfb95a6acb15684004bc641a62a
[csrng/rtl] generate cmd bug fixes
--- a/hw/ip/csrng/rtl/csrng_ctr_drbg_cmd.sv
+++ b/hw/ip/csrng/rtl/csrng_ctr_drbg_cmd.sv
@@ -229,9 +249,11 @@ module csrng_ctr_drbg_cmd import csrng_pkg::*; #(
   );
 
   assign sfifo_rcstage_push = sfifo_cmdreq_pop;
-  assign sfifo_rcstage_wdata = {prep_rc,cmdreq_entropy_fips,cmdreq_adata,cmdreq_ccmd};
-  assign sfifo_rcstage_pop = sfifo_rcstage_not_empty && upd_cmd_ack_i;
-  assign {rcstage_rc,rcstage_fips,rcstage_adata,rcstage_ccmd} = sfifo_rcstage_rdata;
+  assign sfifo_rcstage_wdata = {prep_key,prep_v,cmdreq_id,prep_rc,cmdreq_entropy_fips,
+                                cmdreq_adata,cmdreq_ccmd};
+  assign sfifo_rcstage_pop = sfifo_rcstage_not_empty && (upd_cmd_ack_i || gen_adata_null_q);
+  assign {rcstage_key,rcstage_v,rcstage_id,rcstage_rc,rcstage_fips,
+          rcstage_adata,rcstage_ccmd} = sfifo_rcstage_rdata;
 
 
   assign ctr_drbg_cmd_sfifo_rcstage_err_o =

ParseResult:
INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: CONCAT
        list: ops
            HdlOp: CONCAT
                list: ops
                    HdlOp: CONCAT
                        list: ops
                            HdlOp: CONCAT
                                list: ops
                                    HdlOp: CONCAT
                                        list: ops
                                            HdlOp: CONCAT
                                                list: ops
                                                    HdlValueId: prep_key
                                                    HdlValueId: prep_v
                                            HdlValueId: cmdreq_id
                                    HdlValueId: prep_rc
                            HdlValueId: cmdreq_entropy_fips
                    HdlValueId: cmdreq_adata
            HdlValueId: cmdreq_ccmd
    HdlValueId: sfifo_rcstage_wdata

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: AND_LOG
        list: ops
            HdlValueId: sfifo_rcstage_not_empty
            HdlOp: OR_LOG
                list: ops
                    HdlValueId: upd_cmd_ack_i
                    HdlValueId: gen_adata_null_q
    HdlValueId: sfifo_rcstage_pop

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlValueId: sfifo_rcstage_rdata
    HdlOp: CONCAT
        list: ops
            HdlOp: CONCAT
                list: ops
                    HdlOp: CONCAT
                        list: ops
                            HdlOp: CONCAT
                                list: ops
                                    HdlOp: CONCAT
                                        list: ops
                                            HdlOp: CONCAT
                                                list: ops
                                                    HdlValueId: rcstage_key
                                                    HdlValueId: rcstage_v
                                            HdlValueId: rcstage_id
                                    HdlValueId: rcstage_rc
                            HdlValueId: rcstage_fips
                    HdlValueId: rcstage_adata
            HdlValueId: rcstage_ccmd

DEL HdlStmAssign@@ from objs
HdlStmAssign
    HdlOp: CONCAT
        list: ops
            HdlOp: CONCAT
                list: ops
                    HdlOp: CONCAT
                        list: ops
                            HdlValueId: prep_rc
                            HdlValueId: cmdreq_entropy_fips
                    HdlValueId: cmdreq_adata
            HdlValueId: cmdreq_ccmd
    HdlValueId: sfifo_rcstage_wdata

DEL HdlStmAssign@@ from objs
HdlStmAssign
    HdlOp: AND_LOG
        list: ops
            HdlValueId: sfifo_rcstage_not_empty
            HdlValueId: upd_cmd_ack_i
    HdlValueId: sfifo_rcstage_pop

DEL HdlStmAssign@@ from objs
HdlStmAssign
    HdlValueId: sfifo_rcstage_rdata
    HdlOp: CONCAT
        list: ops
            HdlOp: CONCAT
                list: ops
                    HdlOp: CONCAT
                        list: ops
                            HdlValueId: rcstage_rc
                            HdlValueId: rcstage_fips
                    HdlValueId: rcstage_adata
            HdlValueId: rcstage_ccmd


CommitId: 535275b313975bfb95a6acb15684004bc641a62a
[csrng/rtl] generate cmd bug fixes
--- a/hw/ip/csrng/rtl/csrng_ctr_drbg_cmd.sv
+++ b/hw/ip/csrng/rtl/csrng_ctr_drbg_cmd.sv
@@ -269,6 +291,9 @@ module csrng_ctr_drbg_cmd import csrng_pkg::*; #(
   // if a UNI command, reset the state values
   assign sfifo_keyvrc_wdata = (rcstage_ccmd == UNI) ?
          {{(KeyLen+BlkLen+CtrLen+1+SeedLen){1'b0}},upd_cmd_inst_id_i,upd_cmd_ccmd_i} :
+         gen_adata_null_q ?
+         {rcstage_key,rcstage_v,rcstage_rc,rcstage_fips,
+          rcstage_adata,rcstage_id,rcstage_ccmd} :
          {upd_cmd_key_i,upd_cmd_v_i,rcstage_rc,rcstage_fips,
           rcstage_adata,upd_cmd_inst_id_i,upd_cmd_ccmd_i};
 
ParseResult:
UPD HdlStmAssign@@ to 
    UPD HdlOp@@TERNARY to TERNARY
        MOV HdlOp@@CONCAT to ops
        HdlOp: CONCAT
            list: ops
                HdlOp: CONCAT
                    list: ops
                        HdlOp: CONCAT
                            list: ops
                                HdlOp: CONCAT
                                    list: ops
                                        HdlOp: CONCAT
                                            list: ops
                                                HdlOp: CONCAT
                                                    list: ops
                                                        HdlValueId: upd_cmd_key_i
                                                        HdlValueId: upd_cmd_v_i
                                                HdlValueId: rcstage_rc
                                        HdlValueId: rcstage_fips
                                HdlValueId: rcstage_adata
                        HdlValueId: upd_cmd_inst_id_i
                HdlValueId: upd_cmd_ccmd_i


CommitId: c5ed91c1045689000b0a9de05dc84217e5badbad
[synthesis] Several small fixes to make DC synthesis run
--- a/hw/ip/prim/rtl/prim_filter_ctr.sv
+++ b/hw/ip/prim/rtl/prim_filter_ctr.sv
@@ -21,7 +21,7 @@ module prim_filter_ctr #(parameter Cycles = 4) (
 );
 
   localparam CTR_WIDTH = $clog2(Cycles);
-  localparam [CTR_WIDTH-1:0] CYCLESM1 = Cycles-1;
+  localparam [CTR_WIDTH-1:0] CYCLESM1 = (CTR_WIDTH)'(Cycles-1);
 
   logic [CTR_WIDTH-1:0] diff_ctr_q, diff_ctr_d;
   logic filter_q, stored_value_q, update_stored_value;
ParseResult:
UPD HdlIdDef@@CYCLESM1 to CYCLESM1
    INS HdlOp@@CALL to CYCLESM1
    UPD HdlOp@@CALL to CALL
        INS list@@ops to CALL
        INS HdlValueId@@CTR_WIDTH to ops

UPD HdlIdDef@@CYCLESM1 to CYCLESM1
    MOV HdlOp@@SUB to CYCLESM1
    HdlOp: SUB
        list: ops
            HdlValueId: Cycles
            HdlValueInt: 1


CommitId: 597dea829296a9563ae6dfbf79a38fbb3ecbabc0
[ast] Fix ast.core file
--- a/hw/top_earlgrey/ip/ast/rtl/aon_clk.sv
+++ b/hw/top_earlgrey/ip/ast/rtl/aon_clk.sv
@@ -13,14 +13,15 @@ module aon_clk (
   input clk_src_aon_en_i,                  // AON Source Clock Enable
   input scan_mode_i,                       // Scan Mode
   input scan_reset_ni,                     // Scan Reset
+`ifdef AST_BYPASS_CLK
   input clk_aon_ext_i,                     // FPGA/VERILATOR Clock input
+`endif
   output logic clk_src_aon_o,              // AON Source Clock
   output logic clk_src_aon_val_o           // AON Source Clock Valid
 );
 
-logic clk, osc_en, aon_clk_en, rst_n;
+logic clk, osc_en, aon_clk_en;
 
-assign rst_n = rst_aon_clk_ni;  // Scan enabled
 assign osc_en = (clk_src_aon_en_i && clk_aon_pd_ni && rst_aon_clk_ni);
 assign aon_clk_en = scan_mode_i || osc_en;
 

ParseResult:
DEL HdlIdDef@@clk_aon_ext_i from ports
HdlIdDef: clk_aon_ext_i
    HdlValueId: wire
    HdlDirection: IN

DEL HdlIdDef@@rst_n from objs
HdlIdDef: rst_n
    HdlDirection: INTERNAL

DEL HdlStmAssign@@ from objs
HdlStmAssign
    HdlValueId: rst_aon_clk_ni
    HdlValueId: rst_n


CommitId: 597dea829296a9563ae6dfbf79a38fbb3ecbabc0
[ast] Fix ast.core file
--- a/hw/top_earlgrey/ip/ast/rtl/aon_clk.sv
+++ b/hw/top_earlgrey/ip/ast/rtl/aon_clk.sv
@@ -42,7 +45,7 @@ prim_clock_buf u_clk_aon_buf(
 
 // 2-stage de-assertion
 logic rst_val_n;
-assign rst_val_n = scan_mode_i ? scan_reset_ni : rst_n && clk_aon_pd_ni;
+assign rst_val_n = scan_mode_i ? scan_reset_ni : aon_clk_en;
 
 prim_flop_2sync #(
   .Width ( 1 ),
ParseResult:
UPD HdlStmAssign@@ to 
    UPD HdlOp@@TERNARY to TERNARY
        UPD HdlOp@@AND_LOG to AND_LOG
            UPD HdlValueId@@clk_aon_pd_ni to aon_clk_en
            MOV HdlValueId@@clk_aon_pd_ni to ops
            HdlValueId: clk_aon_pd_ni
            DEL HdlValueId@@rst_n from ops
            DEL list@@ops from AND_LOG
        DEL HdlOp@@AND_LOG from ops


CommitId: 2de46f6dd9a3db8d3425364c0b834d63d0b7a3b6
[entropy_src/rtl] fixes to address issue #3511
--- a/hw/ip/entropy_src/rtl/entropy_src_main_sm.sv
+++ b/hw/ip/entropy_src/rtl/entropy_src_main_sm.sv
@@ -50,9 +50,9 @@ module entropy_src_main_sm (
     NormalMode        = 8'b11001000  // in normal mode
   } state_e;
 
-  state_e state_d;
+  state_e state_d, state_q;
 
-  logic [StateWidth-1:0] state_q;
+  logic [StateWidth-1:0] state_raw_q;
 
   // This primitive is used to place a size-only constraint on the
   // flops in order to prevent FSM state encoding optimizations.

ParseResult:
INS HdlIdDef@@state_q to objs
HdlIdDef: state_q
    HdlDirection: INTERNAL

UPD HdlIdDef@@state_q to state_raw_q


CommitId: 2de46f6dd9a3db8d3425364c0b834d63d0b7a3b6
[entropy_src/rtl] fixes to address issue #3511
--- a/hw/ip/entropy_src/rtl/entropy_src_main_sm.sv
+++ b/hw/ip/entropy_src/rtl/entropy_src_main_sm.sv
@@ -63,11 +63,13 @@ module entropy_src_main_sm (
     .clk_i,
     .rst_ni,
     .d_i ( state_d ),
-    .q_o ( state_q )
+    .q_o ( state_raw_q )
   );
 
+  assign state_q = state_e'(state_raw_q);
+
   always_comb begin
-    state_d = state_e'(state_q);
+    state_d = state_q;
     rst_bypass_mode_o = 1'b0;
     rst_alert_cntr_o = 1'b0;
     main_stage_pop_o = 1'b0;
ParseResult:
INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: CALL
        list: ops
            HdlValueId: state_e
            HdlValueId: state_raw_q
    HdlValueId: state_q

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@CALL to CALL
                MOV HdlValueId@@state_q to ops
                HdlValueId: state_q
                DEL HdlValueId@@state_e from ops
                DEL list@@ops from CALL
            DEL HdlOp@@CALL from ops


CommitId: 0a14f39c0ff66dc50f1a80de109559886645e3e4
[spi_device] Fix assorted width mismatches
--- a/hw/ip/spi_device/rtl/spi_fwm_txf_ctrl.sv
+++ b/hw/ip/spi_device/rtl/spi_fwm_txf_ctrl.sv
@@ -228,7 +228,7 @@ module spi_fwm_txf_ctrl #(
   always_comb begin
     fifo_wdata = '0;
     for (int i = 0 ; i < NumBytes ; i++) begin
-      if (pos == i) fifo_wdata = fifo_wdata_d[8*i+:8];
+      if (pos == i[SDW-1:0]) fifo_wdata = fifo_wdata_d[8*i+:8];
     end
   end
 
ParseResult:
UPD HdlStmIf@@ to 
    UPD HdlOp@@EQ to EQ
        INS HdlOp@@INDEX to ops
        UPD HdlOp@@INDEX to INDEX
            INS list@@ops to INDEX
            INS HdlOp@@DOWNTO to ops
            HdlOp: DOWNTO
                list: ops
                    HdlOp: SUB
                        list: ops
                            HdlValueId: SDW
                            HdlValueInt: 1
                    HdlValueInt: 0

UPD HdlStmIf@@ to 
    UPD HdlOp@@EQ to EQ
        MOV HdlValueId@@i to ops
        HdlValueId: i


CommitId: 9218949e99117d720ae3ee3d7f27d63b47077a5d
[lint] Fix minor lint warnings
--- a/hw/ip/prim/rtl/prim_filter_ctr.sv
+++ b/hw/ip/prim/rtl/prim_filter_ctr.sv
@@ -12,7 +12,7 @@
 //   new input must be opposite value from stored value for
 //   #Cycles before switching to new value.
 
-module prim_filter_ctr #(parameter Cycles = 4) (
+module prim_filter_ctr #(parameter int unsigned Cycles = 4) (
   input  clk_i,
   input  rst_ni,
   input  enable_i,

ParseResult:
UPD HdlIdDef@@Cycles to Cycles
    INS HdlOp@@PARAMETRIZATION to Cycles
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: int
            HdlOp: MAP_ASSOCIATION
                list: ops
                    HdlValueId: signed


CommitId: 9218949e99117d720ae3ee3d7f27d63b47077a5d
[lint] Fix minor lint warnings
--- a/hw/ip/prim/rtl/prim_filter_ctr.sv
+++ b/hw/ip/prim/rtl/prim_filter_ctr.sv
@@ -20,8 +20,8 @@ module prim_filter_ctr #(parameter Cycles = 4) (
   output filter_o
 );
 
-  localparam CTR_WIDTH = $clog2(Cycles);
-  localparam [CTR_WIDTH-1:0] CYCLESM1 = (CTR_WIDTH)'(Cycles-1);
+  localparam int unsigned CTR_WIDTH = $clog2(Cycles);
+  localparam logic [CTR_WIDTH-1:0] CYCLESM1 = (CTR_WIDTH)'(Cycles-1);
 
   logic [CTR_WIDTH-1:0] diff_ctr_q, diff_ctr_d;
   logic filter_q, stored_value_q, update_stored_value;
ParseResult:
UPD HdlIdDef@@CTR_WIDTH to CTR_WIDTH
    INS HdlOp@@PARAMETRIZATION to CTR_WIDTH
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: int
            HdlOp: MAP_ASSOCIATION
                list: ops
                    HdlValueId: signed

UPD HdlIdDef@@CYCLESM1 to CYCLESM1
    UPD HdlOp@@PARAMETRIZATION to PARAMETRIZATION
        UPD HdlValueId@@wire to logic


CommitId: 4f735bc6e72691152b3a87dd7d29bb394be5c785
Update lowrisc_ibex to lowRISC/ibex@dd39ec0
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_register_file_ff.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_register_file_ff.sv
@@ -11,14 +11,16 @@
  * targeting FPGA synthesis or Verilator simulation.
  */
 module ibex_register_file #(
-    parameter bit RV32E              = 0,
-    parameter int unsigned DataWidth = 32
+    parameter bit          RV32E             = 0,
+    parameter int unsigned DataWidth         = 32,
+    parameter bit          DummyInstructions = 0
 ) (
     // Clock and Reset
     input  logic                 clk_i,
     input  logic                 rst_ni,
 
     input  logic                 test_en_i,
+    input  logic                 dummy_instr_id_i,
 
     //Read port R1
     input  logic [4:0]           raddr_a_i,

ParseResult:
INS HdlIdDef@@DummyInstructions to params
HdlIdDef: DummyInstructions
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: bit
    HdlValueInt: 0
    HdlDirection: INTERNAL

INS HdlIdDef@@dummy_instr_id_i to ports
HdlIdDef: dummy_instr_id_i
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: IN


CommitId: ef348c9995b53217479ebda6af8f7501042ecb72
[reggen] Add naming check for REGWEN and standardize on RW0C accesses
--- a/hw/ip/entropy_src/rtl/entropy_src_core.sv
+++ b/hw/ip/entropy_src/rtl/entropy_src_core.sv
@@ -1499,7 +1499,7 @@ module entropy_src_core import entropy_src_pkg::*; #(
   //--------------------------------------------
 
   assign hw2reg.debug_status.diag.d  =
-         reg2hw.regen.q &&
+         reg2hw.regwen.q &&
          (&reg2hw.entropy_data.q) &&
          (&reg2hw.fw_ov_rd_data.q);
 
ParseResult:
UPD HdlStmAssign@@ to 
    UPD HdlOp@@AND_LOG to AND_LOG
        UPD HdlOp@@AND_LOG to AND_LOG
            UPD HdlOp@@DOT to DOT
                UPD HdlOp@@DOT to DOT
                    UPD HdlValueId@@regen to regwen


CommitId: 207b1a678932f3c9ae1ada1fe2db5377c2ddeb1d
[usbdev] ISO endpoint fixes, add out_err interrupt
--- a/hw/ip/usb_fs_nb_pe/rtl/usb_fs_nb_pe.sv
+++ b/hw/ip/usb_fs_nb_pe/rtl/usb_fs_nb_pe.sv
@@ -53,7 +53,7 @@ module usb_fs_nb_pe #(
   // in endpoint interfaces
   output logic [3:0]             in_ep_current_o, // Other signals addressed to this ep
   output logic                   in_ep_rollback_o, // Bad termination, rollback transaction
-  output logic                   in_ep_acked_o, // good termination, transaction complete
+  output logic                   in_ep_xfr_end_o, // good termination, transaction complete
   output logic [PktW - 1:0]      in_ep_get_addr_o, // Offset requested (0..pktlen)
   output logic                   in_ep_data_get_o, // Accept data (get_addr advances too)
   output logic                   in_ep_newpkt_o, // New IN pkt start (with in_ep_current_o update)

ParseResult:
UPD HdlIdDef@@in_ep_acked_o to in_ep_xfr_end_o


CommitId: c71e1689d71ba3b822fd143dde6841ad489850e2
[spi_host] Minor lint fixes
--- a/hw/ip/spi_host/rtl/spi_host_window.sv
+++ b/hw/ip/spi_host/rtl/spi_host_window.sv
@@ -23,8 +23,9 @@ module spi_host_window (
   logic [AW-1:0] addr;
 
   // Only support reads/writes to the data fifo window
-  logic win_error = (tx_valid_o || rx_ready_o) &&
-                    (addr != spi_host_reg_pkg::SPI_HOST_DATA_OFFSET);
+  logic win_error;
+  assign win_error = (tx_valid_o || rx_ready_o) &&
+                     (addr != spi_host_reg_pkg::SPI_HOST_DATA_OFFSET);
 
   tlul_adapter_reg #(
     .RegAw(AW),
ParseResult:
INS HdlIdDef@@win_error to objs
HdlIdDef: win_error
    HdlDirection: INTERNAL

INS HdlStmAssign@@ to objs

UPD HdlIdDef@@win_error to win_error
    MOV HdlOp@@AND_LOG to win_error
    HdlOp: AND_LOG
        list: ops
            HdlOp: OR_LOG
                list: ops
                    HdlValueId: tx_valid_o
                    HdlValueId: rx_ready_o
            HdlOp: NE
                list: ops
                    HdlValueId: addr
                    HdlOp: DOUBLE_COLON
                        list: ops
                            HdlValueId: spi_host_reg_pkg
                            HdlValueId: SPI_HOST_DATA_OFFSET
    DEL HdlDirection@@INTERNAL from win_error

UPD HdlStmAssign@@ to 
    INS HdlValueId@@win_error to 

DEL HdlIdDef@@win_error from objs


CommitId: 9b113e5b48464000aaf0b8e38766a40571a7716c
[flash_ctrl] Add support for program resolution in flash
--- a/hw/ip/flash_ctrl/rtl/flash_ctrl_prog.sv
+++ b/hw/ip/flash_ctrl/rtl/flash_ctrl_prog.sv
@@ -63,6 +63,18 @@ module flash_ctrl_prog import flash_ctrl_pkg::*; (
   logic prog_type_avail;
   assign prog_type_avail = type_avail_i[op_type_i];
 
+  // program resolution check
+  // if the incoming beat is larger than the maximum program resolution, error
+  // immediately and do not allow it to start.
+  localparam int WindowWidth = BusAddrW - BusPgmResWidth;
+  logic [WindowWidth-1:0] start_window, end_window;
+  logic [BusAddrW-1:0] end_addr;
+  logic win_err;
+  assign end_addr = op_addr_i + BusAddrW'(op_num_words_i);
+  assign start_window = op_addr_i[BusAddrW-1:BusPgmResWidth];
+  assign end_window = end_addr[BusAddrW-1:BusPgmResWidth];
+  assign win_err = start_window != end_window;
+
   // when error'd, continue to drain all program fifo contents like normal operation
   // if this is not done, software may fill up the fifo without anyone
   // draining the contents, leading to a lockup

ParseResult:
INS HdlIdDef@@WindowWidth to objs
HdlIdDef: WindowWidth
    HdlValueId: int
    HdlOp: SUB
        list: ops
            HdlValueId: BusAddrW
            HdlValueId: BusPgmResWidth
    HdlDirection: INTERNAL

INS HdlIdDef@@start_window to objs
HdlIdDef: start_window
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlOp: SUB
                        list: ops
                            HdlValueId: WindowWidth
                            HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: INTERNAL

INS HdlIdDef@@end_window to objs
HdlIdDef: end_window
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlOp: SUB
                        list: ops
                            HdlValueId: WindowWidth
                            HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: INTERNAL

INS HdlIdDef@@end_addr to objs
HdlIdDef: end_addr
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlOp: SUB
                        list: ops
                            HdlValueId: BusAddrW
                            HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: INTERNAL

INS HdlIdDef@@win_err to objs
HdlIdDef: win_err
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: ADD
        list: ops
            HdlValueId: op_addr_i
            HdlOp: CALL
                list: ops
                    HdlValueId: BusAddrW
                    HdlValueId: op_num_words_i
    HdlValueId: end_addr

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: INDEX
        list: ops
            HdlValueId: op_addr_i
            HdlOp: DOWNTO
                list: ops
                    HdlOp: SUB
                        list: ops
                            HdlValueId: BusAddrW
                            HdlValueInt: 1
                    HdlValueId: BusPgmResWidth
    HdlValueId: start_window

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: INDEX
        list: ops
            HdlValueId: end_addr
            HdlOp: DOWNTO
                list: ops
                    HdlOp: SUB
                        list: ops
                            HdlValueId: BusAddrW
                            HdlValueInt: 1
                    HdlValueId: BusPgmResWidth
    HdlValueId: end_window

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: NE
        list: ops
            HdlValueId: start_window
            HdlValueId: end_window
    HdlValueId: win_err


CommitId: 9b113e5b48464000aaf0b8e38766a40571a7716c
[flash_ctrl] Add support for program resolution in flash
--- a/hw/ip/flash_ctrl/rtl/flash_ctrl_prog.sv
+++ b/hw/ip/flash_ctrl/rtl/flash_ctrl_prog.sv
@@ -77,7 +89,7 @@ module flash_ctrl_prog import flash_ctrl_pkg::*; (
     unique case (st)
       StNorm: begin
         // if the select operation type is not available, error
-        if (op_start_i && prog_type_avail) begin
+        if (op_start_i && prog_type_avail && !win_err) begin
           flash_req_o = data_rdy_i;
 
           if(txn_done && cnt_hit) begin

ParseResult:
UPD HdlStmIf@@ to 
    MOV HdlOp@@AND_LOG to 
    HdlOp: AND_LOG
        list: ops
            HdlValueId: op_start_i
            HdlValueId: prog_type_avail
    UPD HdlOp@@AND_LOG to AND_LOG
        MOV HdlValueId@@op_start_i to ops
        HdlValueId: op_start_i
    UPD HdlOp@@AND_LOG to OR_LOG
    MOV HdlOp@@AND_LOG to 
    HdlOp: AND_LOG
        list: ops
            HdlValueId: op_start_i
            HdlOp: NEG_LOG
                list: ops
                    HdlValueId: prog_type_avail


CommitId: 9b113e5b48464000aaf0b8e38766a40571a7716c
[flash_ctrl] Add support for program resolution in flash
--- a/hw/ip/flash_ctrl/rtl/flash_ctrl_prog.sv
+++ b/hw/ip/flash_ctrl/rtl/flash_ctrl_prog.sv
@@ -90,7 +102,7 @@ module flash_ctrl_prog import flash_ctrl_pkg::*; (
             data_rd_o = 1'b1;
             st_nxt = flash_error_i ? StErr : StNorm;
           end
-        end else if (op_start_i && !prog_type_avail) begin
+        end else if (op_start_i && (!prog_type_avail || win_err)) begin
           st_nxt = StErr;
         end
       end

ParseResult:
UPD HdlStmIf@@ to 
    MOV HdlOp@@AND_LOG to 
    HdlOp: AND_LOG
        list: ops
            HdlValueId: op_start_i
            HdlValueId: prog_type_avail
    UPD HdlOp@@AND_LOG to AND_LOG
        MOV HdlValueId@@op_start_i to ops
        HdlValueId: op_start_i
    UPD HdlOp@@AND_LOG to OR_LOG
    MOV HdlOp@@AND_LOG to 
    HdlOp: AND_LOG
        list: ops
            HdlValueId: op_start_i
            HdlOp: NEG_LOG
                list: ops
                    HdlValueId: prog_type_avail


CommitId: 9b113e5b48464000aaf0b8e38766a40571a7716c
[flash_ctrl] Add support for program resolution in flash
--- a/hw/ip/flash_ctrl/rtl/flash_ctrl_prog.sv
+++ b/hw/ip/flash_ctrl/rtl/flash_ctrl_prog.sv
@@ -117,4 +129,8 @@ module flash_ctrl_prog import flash_ctrl_pkg::*; (
   assign flash_last_o = flash_req_o & cnt_hit;
   assign flash_type_o = op_type_i;
 
+  // unused signals
+  logic [BusPgmResWidth-1:0] unused_end_addr;
+  assign unused_end_addr = end_addr[BusPgmResWidth-1:0];
+
 endmodule // flash_ctrl_prog
ParseResult:
INS HdlIdDef@@unused_end_addr to objs
HdlIdDef: unused_end_addr
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlOp: SUB
                        list: ops
                            HdlValueId: BusPgmResWidth
                            HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: INTERNAL

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: INDEX
        list: ops
            HdlValueId: end_addr
            HdlOp: DOWNTO
                list: ops
                    HdlOp: SUB
                        list: ops
                            HdlValueId: BusPgmResWidth
                            HdlValueInt: 1
                    HdlValueInt: 0
    HdlValueId: unused_end_addr

UPD HdlStmIf@@ to 
    INS HdlOp@@AND_LOG to 
    UPD HdlOp@@AND_LOG to AND_LOG
        INS list@@ops to AND_LOG
        INS HdlOp@@NEG_LOG to ops
        HdlOp: NEG_LOG
            list: ops
                HdlValueId: win_err
    INS HdlOp@@AND_LOG to 
    UPD HdlOp@@AND_LOG to AND_LOG
        INS list@@ops to AND_LOG
        UPD HdlOp@@OR_LOG to OR_LOG
            INS HdlValueId@@win_err to ops


CommitId: 1b5fa9f1ebf0a9520ef6ea6faf1f1a2397a349c1
[verible/style] This corrects several style linter warnings/errors
--- a/hw/ip/flash_ctrl/rtl/flash_phy.sv
+++ b/hw/ip/flash_ctrl/rtl/flash_phy.sv
@@ -36,8 +36,8 @@ module flash_phy #(
   // Flash macro outstanding refers to how many reads we allow a macro to move ahead of an
   // in order blocking read. Since the data cannot be returned out of order, this simply
   // does the reads in advance and store them in a FIFO
-  localparam FlashMacroOustanding = 1;
-  localparam SeqFifoDepth = FlashMacroOustanding * NumBanks;
+  localparam int FlashMacroOustanding = 1;
+  localparam int SeqFifoDepth = FlashMacroOustanding * NumBanks;
 
   // flash_phy forwards incoming host transactions to the appropriate bank but is not aware of
   // any controller / host arbitration within the bank.  This means it is possible for
ParseResult:
UPD HdlIdDef@@FlashMacroOustanding to FlashMacroOustanding
    INS HdlValueId@@int to FlashMacroOustanding

UPD HdlIdDef@@SeqFifoDepth to SeqFifoDepth
    INS HdlValueId@@int to SeqFifoDepth


CommitId: 4791da5f71cb7c93104059fe6ffd120091cf9622
[pwrmgr / usbdev] Minor fixes for low power entry / exit
--- a/hw/ip/usbdev/rtl/usbdev_aon_wake.sv
+++ b/hw/ip/usbdev/rtl/usbdev_aon_wake.sv
@@ -44,7 +44,7 @@ module usbdev_aon_wake import usbdev_pkg::*;(
   // note the _upwr signals are only valid when usb_out_of_rst_upwr_i is set
   assign suspend_req_async = usb_aon_wake_en_upwr_i & usb_suspended_upwr_i & usb_out_of_rst_upwr_i;
   assign wake_ack_async = usb_aon_woken_upwr_i & usb_out_of_rst_upwr_i;
-  assign low_power_async = low_power_alw_i & usb_out_of_rst_upwr_i;
+  assign low_power_async = low_power_alw_i & ~usb_out_of_rst_upwr_i;
 
   // The suspend_req / wake ack / low power construction come from multiple clock domains.
   // As a result the 2 flop sync could glitch for up to 1 cycle.  Place a filter after
ParseResult:
UPD HdlStmAssign@@ to 
    UPD HdlOp@@AND to AND
        INS HdlOp@@NEG to ops
        UPD HdlOp@@NEG to NEG
            INS list@@ops to NEG

UPD HdlStmAssign@@ to 
    UPD HdlOp@@AND to AND
        MOV HdlValueId@@usb_out_of_rst_upwr_i to ops
        HdlValueId: usb_out_of_rst_upwr_i


CommitId: 2b7cd93b0fd33aeefbf2159641b8cd0e1bfdf5e4
[fpv/usbuart] Fix compile error
--- a/hw/ip/usbuart/rtl/usbuart_core.sv
+++ b/hw/ip/usbuart/rtl/usbuart_core.sv
@@ -9,7 +9,7 @@ module usbuart_core (
   input        clk_i,
   input        rst_ni,
   input        clk_usb_48mhz_i,
-  input        rst_usb_ni,
+  input        rst_usb_48mhz_ni,
 
   input        usbuart_reg_pkg::usbuart_reg2hw_t reg2hw,
   output       usbuart_reg_pkg::usbuart_hw2reg_t hw2reg,

ParseResult:
UPD HdlIdDef@@rst_usb_ni to rst_usb_48mhz_ni


CommitId: 2b7cd93b0fd33aeefbf2159641b8cd0e1bfdf5e4
[fpv/usbuart] Fix compile error
--- a/hw/ip/usbuart/rtl/usbuart_core.sv
+++ b/hw/ip/usbuart/rtl/usbuart_core.sv
@@ -152,7 +152,7 @@ module usbuart_core (
   //////////////
 
   // TODO: This is not a safe way to create a reset signal
-  assign tx_fifo_rst_n = rst_usb_ni & ~uart_fifo_txrst;
+  assign tx_fifo_rst_n = rst_usb_48mhz_ni & ~uart_fifo_txrst;
 
   // Character fifo also crosses to USB clock domain
   //`$dfifo_uart_tx->mname()`

ParseResult:
UPD HdlStmAssign@@ to 
    UPD HdlOp@@AND to AND
        UPD HdlValueId@@rst_usb_ni to rst_usb_48mhz_ni


CommitId: 2b7cd93b0fd33aeefbf2159641b8cd0e1bfdf5e4
[fpv/usbuart] Fix compile error
--- a/hw/ip/usbuart/rtl/usbuart_core.sv
+++ b/hw/ip/usbuart/rtl/usbuart_core.sv
@@ -182,7 +182,7 @@ module usbuart_core (
   logic              usb_rx_oflw;
 
   // TODO: This is not a safe way to create a reset signal
-  assign rx_fifo_rst_n = rst_usb_ni & ~uart_fifo_rxrst;
+  assign rx_fifo_rst_n = rst_usb_48mhz_ni & ~uart_fifo_rxrst;
 
   //`$dfifo_uart_rx->mname()`
   prim_fifo_async #(

ParseResult:
UPD HdlStmAssign@@ to 
    UPD HdlOp@@AND to AND
        UPD HdlValueId@@rst_usb_ni to rst_usb_48mhz_ni


CommitId: ff99eb976ebeda0dcba1e9f47e55e5051db86b1b
[aes/rtl] Fix lint errors and warnings
--- a/hw/ip/aes/rtl/aes_sbox_lut.sv
+++ b/hw/ip/aes/rtl/aes_sbox_lut.sv
@@ -13,7 +13,7 @@ module aes_sbox_lut (
   import aes_pkg::*;
 
   // Define the LUTs
-  const logic [7:0] sbox_fwd [256] = '{
+  localparam logic [7:0] SBOX_FWD [256] = '{
     8'h63, 8'h7C, 8'h77, 8'h7B, 8'hF2, 8'h6B, 8'h6F, 8'hC5,
     8'h30, 8'h01, 8'h67, 8'h2B, 8'hFE, 8'hD7, 8'hAB, 8'h76,
 

ParseResult:
UPD HdlIdDef@@sbox_fwd to SBOX_FWD

UPD HdlIdDef@@sbox_fwd to sbox_fwd
    UPD HdlOp@@INDEX to INDEX
        MOV HdlOp@@PARAMETRIZATION to ops
        HdlOp: PARAMETRIZATION
            list: ops
                HdlValueId: logic
                HdlOp: DOWNTO
                    list: ops
                        HdlValueInt: 7
                        HdlValueInt: 0
        DEL HdlValueInt@@256 from ops
        DEL list@@ops from INDEX
    DEL HdlOp@@INDEX from sbox_fwd


CommitId: ff99eb976ebeda0dcba1e9f47e55e5051db86b1b
[aes/rtl] Fix lint errors and warnings
--- a/hw/ip/aes/rtl/aes_sbox_lut.sv
+++ b/hw/ip/aes/rtl/aes_sbox_lut.sv
@@ -63,7 +63,7 @@ module aes_sbox_lut (
     8'h41, 8'h99, 8'h2D, 8'h0F, 8'hB0, 8'h54, 8'hBB, 8'h16
   };
 
-  const logic [7:0] sbox_inv [256] = '{
+  localparam logic [7:0] SBOX_INV [256] = '{
     8'h52, 8'h09, 8'h6a, 8'hd5, 8'h30, 8'h36, 8'ha5, 8'h38,
     8'hbf, 8'h40, 8'ha3, 8'h9e, 8'h81, 8'hf3, 8'hd7, 8'hfb,
 

ParseResult:
UPD HdlIdDef@@sbox_fwd to SBOX_FWD

UPD HdlIdDef@@sbox_inv to SBOX_INV

UPD HdlIdDef@@sbox_fwd to sbox_fwd
    UPD HdlOp@@INDEX to INDEX
        MOV HdlOp@@PARAMETRIZATION to ops
        HdlOp: PARAMETRIZATION
            list: ops
                HdlValueId: logic
                HdlOp: DOWNTO
                    list: ops
                        HdlValueInt: 7
                        HdlValueInt: 0
        DEL HdlValueInt@@256 from ops
        DEL list@@ops from INDEX
    DEL HdlOp@@INDEX from sbox_fwd

UPD HdlIdDef@@sbox_inv to sbox_inv
    UPD HdlOp@@INDEX to INDEX
        MOV HdlOp@@PARAMETRIZATION to ops
        HdlOp: PARAMETRIZATION
            list: ops
                HdlValueId: logic
                HdlOp: DOWNTO
                    list: ops
                        HdlValueInt: 7
                        HdlValueInt: 0
        DEL HdlValueInt@@256 from ops
        DEL list@@ops from INDEX
    DEL HdlOp@@INDEX from sbox_inv


CommitId: ff99eb976ebeda0dcba1e9f47e55e5051db86b1b
[aes/rtl] Fix lint errors and warnings
--- a/hw/ip/aes/rtl/aes_sbox_lut.sv
+++ b/hw/ip/aes/rtl/aes_sbox_lut.sv
@@ -114,6 +114,6 @@ module aes_sbox_lut (
   };
 
   // Drive output
-  assign data_o = (op_i == CIPH_FWD) ? sbox_fwd[data_i] : sbox_inv[data_i];
+  assign data_o = (op_i == CIPH_FWD) ? SBOX_FWD[data_i] : SBOX_INV[data_i];
 
 endmodule
ParseResult:
UPD HdlIdDef@@sbox_inv to SBOX_INV

UPD HdlIdDef@@sbox_inv to sbox_inv
    UPD HdlOp@@INDEX to INDEX
        MOV HdlOp@@PARAMETRIZATION to ops
        HdlOp: PARAMETRIZATION
            list: ops
                HdlValueId: logic
                HdlOp: DOWNTO
                    list: ops
                        HdlValueInt: 7
                        HdlValueInt: 0
        DEL HdlValueInt@@256 from ops
        DEL list@@ops from INDEX
    DEL HdlOp@@INDEX from sbox_inv

UPD HdlStmAssign@@ to 
    UPD HdlOp@@TERNARY to TERNARY
        UPD HdlOp@@INDEX to INDEX
            UPD HdlValueId@@sbox_fwd to SBOX_FWD
        UPD HdlOp@@INDEX to INDEX
            UPD HdlValueId@@sbox_inv to SBOX_INV


CommitId: 289d2659175f85d8ea74a8d86800eba1bc6fb149
[csrng/rtl] fix for dif test
--- a/hw/ip/csrng/rtl/csrng_core.sv
+++ b/hw/ip/csrng/rtl/csrng_core.sv
@@ -1005,10 +1005,12 @@ module csrng_core import csrng_pkg::*; #(
 
   // Capture entropy from entropy_src
   assign entropy_src_seed_d =
+         cmd_req_dly_q ? '0 :                  // reset after every cmd
          (cmd_entropy_avail && flag0_q) ? '0 : // special case where zero is used
          cmd_entropy_avail ? (entropy_src_hw_if_i.es_bits ^ seed_diversification) :
          entropy_src_seed_q;
   assign entropy_src_fips_d =
+         cmd_req_dly_q ? '0 :                  // reset after every cmd
          (cmd_entropy_avail && flag0_q) ? '0 : // special case where zero is used
          cmd_entropy_avail ? entropy_src_hw_if_i.es_fips :
          entropy_src_fips_q;
ParseResult:
UPD HdlStmAssign@@ to 
    INS HdlOp@@TERNARY to 
    UPD HdlOp@@TERNARY to TERNARY
        INS list@@ops to TERNARY
        INS HdlValueId@@cmd_req_dly_q to ops
        INS HdlValueInt@@0 to ops

UPD HdlStmAssign@@ to 
    INS HdlOp@@TERNARY to 
    UPD HdlOp@@TERNARY to TERNARY
        INS list@@ops to TERNARY
        INS HdlValueId@@cmd_req_dly_q to ops
        INS HdlValueInt@@0 to ops

UPD HdlStmAssign@@ to 
    MOV HdlOp@@TERNARY to 
    HdlOp: TERNARY
        list: ops
            HdlOp: AND_LOG
                list: ops
                    HdlValueId: cmd_entropy_avail
                    HdlValueId: flag0_q
            HdlValueInt: 0
            HdlOp: TERNARY
                list: ops
                    HdlValueId: cmd_entropy_avail
                    HdlOp: XOR
                        list: ops
                            HdlOp: DOT
                                list: ops
                                    HdlValueId: entropy_src_hw_if_i
                                    HdlValueId: es_bits
                            HdlValueId: seed_diversification
                    HdlValueId: entropy_src_seed_q

UPD HdlStmAssign@@ to 
    MOV HdlOp@@TERNARY to 
    HdlOp: TERNARY
        list: ops
            HdlOp: AND_LOG
                list: ops
                    HdlValueId: cmd_entropy_avail
                    HdlValueId: flag0_q
            HdlValueInt: 0
            HdlOp: TERNARY
                list: ops
                    HdlValueId: cmd_entropy_avail
                    HdlOp: DOT
                        list: ops
                            HdlValueId: entropy_src_hw_if_i
                            HdlValueId: es_fips
                    HdlValueId: entropy_src_fips_q


CommitId: d2e1184308b9582551252d1135a126ea558a6ab8
Revert "[usbdev] Fixes for I/O modes and expand their tests"
--- a/hw/ip/usbdev/rtl/usbdev_linkstate.sv
+++ b/hw/ip/usbdev/rtl/usbdev_linkstate.sv
@@ -10,8 +10,8 @@ module usbdev_linkstate (
   input  logic rst_ni,
   input  logic us_tick_i,
   input  logic usb_sense_i,
-  input  logic rx_se0_det_i,
-  input  logic rx_jjj_det_i,
+  input  logic usb_rx_d_i,
+  input  logic usb_rx_se0_i,
   input  logic sof_valid_i,
   output logic link_disconnect_o,  // level
   output logic link_connect_o,     // level

ParseResult:
UPD HdlIdDef@@rx_se0_det_i to usb_rx_d_i

UPD HdlIdDef@@rx_jjj_det_i to usb_rx_se0_i


CommitId: d2e1184308b9582551252d1135a126ea558a6ab8
Revert "[usbdev] Fixes for I/O modes and expand their tests"
--- a/hw/ip/usbdev/rtl/usbdev_linkstate.sv
+++ b/hw/ip/usbdev/rtl/usbdev_linkstate.sv
@@ -52,7 +51,8 @@ module usbdev_linkstate (
   } link_inac_state_e;
 
   link_state_e  link_state_d, link_state_q;
-  logic         see_pwr_sense;
+  logic         line_se0_raw, line_idle_raw;
+  logic         see_se0, see_idle, see_pwr_sense;
 
   // Reset FSM
   logic [2:0]      link_rst_timer_d, link_rst_timer_q;

ParseResult:
INS HdlIdDef@@line_se0_raw to objs
HdlIdDef: line_se0_raw
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

INS HdlIdDef@@line_idle_raw to objs
HdlIdDef: line_idle_raw
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

INS HdlIdDef@@see_se0 to objs
HdlIdDef: see_se0
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

INS HdlIdDef@@see_idle to objs
HdlIdDef: see_idle
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL


CommitId: d2e1184308b9582551252d1135a126ea558a6ab8
Revert "[usbdev] Fixes for I/O modes and expand their tests"
--- a/hw/ip/usbdev/rtl/usbdev_linkstate.sv
+++ b/hw/ip/usbdev/rtl/usbdev_linkstate.sv
@@ -89,14 +110,13 @@ module usbdev_linkstate (
   );
 
   // Simple events
-  assign ev_bus_active = !rx_jjj_det_i;
-
-  assign monitor_inac = see_pwr_sense ? ((link_state_q == LinkPowered) | link_active_o) :
-                        1'b0;
+  assign ev_bus_active = !see_idle;
 
   always_comb begin
     link_state_d = link_state_q;
     link_resume_o = 0;
+    monitor_inac = see_pwr_sense ? ((link_state_q == LinkPowered) | (link_state_q == LinkActive)) :
+                                   1'b0;
 
     // If VBUS ever goes away the link has disconnected
     if (!see_pwr_sense) begin

ParseResult:
INS HdlStmAssign@@ to objs

UPD HdlStmAssign@@ to 
    UPD HdlOp@@NEG_LOG to MAP_ASSOCIATION
    MOV HdlOp@@NEG_LOG to 
    HdlOp: NEG_LOG
        list: ops
            HdlValueId: rx_jjj_det_i
    UPD HdlOp@@NEG_LOG to NEG_LOG
        UPD HdlValueId@@rx_jjj_det_i to clk_i
    UPD HdlValueId@@ev_bus_active to enable_i
    MOV HdlValueId@@ev_bus_active to 
    HdlValueId: ev_bus_active

UPD HdlStmAssign@@ to 
    UPD HdlValueId@@monitor_inac to see_idle
    MOV HdlValueId@@monitor_inac to 
    HdlValueId: monitor_inac
    MOV HdlOp@@TERNARY to 
    HdlOp: TERNARY
        list: ops
            HdlValueId: see_pwr_sense
            HdlOp: OR
                list: ops
                    HdlOp: EQ
                        list: ops
                            HdlValueId: link_state_q
                            HdlValueId: LinkPowered
                    HdlValueId: link_active_o
            HdlValueInt: 0
    UPD HdlOp@@TERNARY to TERNARY
        UPD HdlOp@@OR to OR
            UPD HdlValueId@@link_active_o to link_state_q
            MOV HdlValueId@@link_active_o to ops
            HdlValueId: link_active_o

DEL HdlStmAssign@@ from objs

DEL HdlStmAssign@@ from objs


CommitId: d2e1184308b9582551252d1135a126ea558a6ab8
Revert "[usbdev] Fixes for I/O modes and expand their tests"
--- a/hw/ip/usbdev/rtl/usbdev_linkstate.sv
+++ b/hw/ip/usbdev/rtl/usbdev_linkstate.sv
@@ -112,7 +132,7 @@ module usbdev_linkstate (
 
         LinkPowered: begin
           if (ev_reset) begin
-            link_state_d = LinkActiveNoSOF;
+            link_state_d = LinkActive;
           end else if (ev_bus_inactive) begin
             link_state_d = LinkPoweredSuspend;
           end

ParseResult:
UPD HdlStmAssign@@ to 
    INS HdlOp@@NEG_LOG to 
    INS HdlValueId@@ev_bus_active to 
    UPD HdlOp@@NEG_LOG to NEG_LOG
        INS list@@ops to NEG_LOG

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        UPD HdlOp@@ASSIGN to ASSIGN
            INS list@@ops to ASSIGN
            INS HdlValueId@@monitor_inac to ops
            UPD HdlOp@@TERNARY to TERNARY
                UPD HdlOp@@OR to OR
                    INS HdlOp@@EQ to ops
                    UPD HdlOp@@EQ to EQ
                        INS list@@ops to EQ
                        INS HdlValueId@@LinkActive to ops

UPD HdlStmCase@@link_state_q to link_state_q
    MOV HdlValueId@@LinkSuspend to 
    HdlValueId: LinkSuspend
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlStmIf
                HdlValueId: ev_reset
                HdlStmBlock: SEQ
                    list: body
                        HdlOp: ASSIGN
                            list: ops
                                HdlValueId: link_resume_o
                                HdlValueInt: 1
                        HdlOp: ASSIGN
                            list: ops
                                HdlValueId: link_state_d
                                HdlValueId: LinkActiveNoSOF
                list: elifs
                    tuple
                        HdlValueId: ev_bus_active
                        HdlStmBlock: SEQ
                            list: body
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: link_resume_o
                                        HdlValueInt: 1
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: link_state_d
                                        HdlValueId: LinkActive
    DEL HdlValueId@@LinkActiveNoSOF from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL tuple@@ from cases

UPD HdlStmIf@@ to 
    DEL HdlStmBlock@@SEQ from 
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: link_state_d
                    HdlValueId: LinkActiveNoSOF


CommitId: d2e1184308b9582551252d1135a126ea558a6ab8
Revert "[usbdev] Fixes for I/O modes and expand their tests"
--- a/hw/ip/usbdev/rtl/usbdev_linkstate.sv
+++ b/hw/ip/usbdev/rtl/usbdev_linkstate.sv
@@ -188,7 +191,7 @@ module usbdev_linkstate (
     unique case (link_rst_state_q)
       // No reset signal detected
       NoRst: begin
-        if (rx_se0_det_i) begin
+        if (see_se0) begin
           link_rst_state_d = RstCnt;
           link_rst_timer_d = 0;
         end

ParseResult:
UPD HdlStmIf@@ to 
    UPD HdlValueId@@rx_se0_det_i to see_se0


CommitId: d2e1184308b9582551252d1135a126ea558a6ab8
Revert "[usbdev] Fixes for I/O modes and expand their tests"
--- a/hw/ip/usbdev/rtl/usbdev_linkstate.sv
+++ b/hw/ip/usbdev/rtl/usbdev_linkstate.sv
@@ -196,7 +199,7 @@ module usbdev_linkstate (
 
       // Reset signal detected -> counting
       RstCnt: begin
-        if (!rx_se0_det_i) begin
+        if (!see_se0) begin
           link_rst_state_d = NoRst;
         end else begin
           if (us_tick_i) begin

ParseResult:
UPD HdlStmIf@@ to 
    UPD HdlOp@@NEG_LOG to NEG_LOG
        UPD HdlValueId@@rx_se0_det_i to see_se0


CommitId: d2e1184308b9582551252d1135a126ea558a6ab8
Revert "[usbdev] Fixes for I/O modes and expand their tests"
--- a/hw/ip/usbdev/rtl/usbdev_linkstate.sv
+++ b/hw/ip/usbdev/rtl/usbdev_linkstate.sv
@@ -211,7 +214,7 @@ module usbdev_linkstate (
 
       // Detected reset -> wait for falling edge
       RstPend: begin
-        if (!rx_se0_det_i) begin
+        if (!see_se0) begin
           link_rst_state_d = NoRst;
           ev_reset = 1'b1;
         end

ParseResult:
UPD HdlStmIf@@ to 
    UPD HdlOp@@NEG_LOG to NEG_LOG
        UPD HdlValueId@@rx_se0_det_i to see_se0


CommitId: d2e1184308b9582551252d1135a126ea558a6ab8
Revert "[usbdev] Fixes for I/O modes and expand their tests"
--- a/hw/ip/usbdev/rtl/usbdev_linkstate.sv
+++ b/hw/ip/usbdev/rtl/usbdev_linkstate.sv
@@ -248,14 +251,14 @@ module usbdev_linkstate (
       // Active or disabled
       Active: begin
         link_inac_timer_d = 0;
-        if (!ev_bus_active && monitor_inac) begin
+        if (see_idle && monitor_inac) begin
           link_inac_state_d = InactCnt;
         end
       end
 
       // Got an inactivity signal -> count duration
       InactCnt: begin
-        if (ev_bus_active || !monitor_inac) begin
+        if (!see_idle || !monitor_inac) begin
           link_inac_state_d  = Active;
         end else if (us_tick_i) begin
           if (link_inac_timer_q == SUSPEND_TIMEOUT) begin

ParseResult:
UPD HdlStmIf@@ to 
    UPD HdlOp@@AND_LOG to AND_LOG
        UPD HdlOp@@NEG_LOG to NEG_LOG
            UPD HdlValueId@@ev_bus_active to see_idle
            MOV HdlValueId@@ev_bus_active to ops
            HdlValueId: ev_bus_active
            DEL list@@ops from NEG_LOG
        DEL HdlOp@@NEG_LOG from ops

UPD HdlStmIf@@ to 
    UPD HdlOp@@OR_LOG to OR_LOG
        INS HdlOp@@NEG_LOG to ops
        UPD HdlOp@@NEG_LOG to NEG_LOG
            INS list@@ops to NEG_LOG

UPD HdlStmIf@@ to 
    UPD HdlOp@@OR_LOG to OR_LOG
        UPD HdlValueId@@ev_bus_active to see_idle
        MOV HdlValueId@@ev_bus_active to ops
        HdlValueId: ev_bus_active


CommitId: d2e1184308b9582551252d1135a126ea558a6ab8
Revert "[usbdev] Fixes for I/O modes and expand their tests"
--- a/hw/ip/usbdev/rtl/usbdev_linkstate.sv
+++ b/hw/ip/usbdev/rtl/usbdev_linkstate.sv
@@ -269,7 +272,7 @@ module usbdev_linkstate (
 
       // Counter expired & event sent, wait here
       InactPend: begin
-        if (ev_bus_active || !monitor_inac) begin
+        if (!see_idle || !monitor_inac) begin
           link_inac_state_d  = Active;
         end
       end
ParseResult:
UPD HdlStmIf@@ to 
    UPD HdlOp@@OR_LOG to OR_LOG
        INS HdlOp@@NEG_LOG to ops
        UPD HdlOp@@NEG_LOG to NEG_LOG
            INS list@@ops to NEG_LOG

UPD HdlStmIf@@ to 
    UPD HdlOp@@OR_LOG to OR_LOG
        UPD HdlValueId@@ev_bus_active to see_idle
        MOV HdlValueId@@ev_bus_active to ops
        HdlValueId: ev_bus_active


CommitId: fc4be79eb98289715875bb598fd0e89acf084f4e
[prim_flash] - Breakup large input fanout
--- a/hw/ip/prim_generic/rtl/prim_generic_flash.sv
+++ b/hw/ip/prim_generic/rtl/prim_generic_flash.sv
@@ -75,7 +97,7 @@ module prim_generic_flash #(
       held_addr <= '0;
       held_wdata <= '0;
     end else if (hold_cmd) begin
-      held_addr <= addr_i;
+      held_addr <= rd_q ? addr_q : addr_i;
       held_wdata <= prog_data_i;
     end
   end

ParseResult:
UPD HdlStmAssign@@ to 
    MOV HdlValueId@@addr_i to 
    HdlValueId: addr_i


CommitId: fc4be79eb98289715875bb598fd0e89acf084f4e
[prim_flash] - Breakup large input fanout
--- a/hw/ip/prim_generic/rtl/prim_generic_flash.sv
+++ b/hw/ip/prim_generic/rtl/prim_generic_flash.sv
@@ -159,10 +181,10 @@ module prim_generic_flash #(
         end
       end
       StIdle: begin
-        if (rd_i) begin
+        if (rd_q) begin
           // reads begin immediately
           hold_cmd = 1'b1;
-          mem_addr = addr_i;
+          mem_addr = addr_q;
           mem_req = 1'b1;
           time_cnt_inc = 1'b1;
           st_d = StRead;

ParseResult:
UPD HdlStmIf@@ to 
    UPD HdlValueId@@rd_i to rd_q
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@addr_i to addr_q


CommitId: fc4be79eb98289715875bb598fd0e89acf084f4e
[prim_flash] - Breakup large input fanout
--- a/hw/ip/prim_generic/rtl/prim_generic_flash.sv
+++ b/hw/ip/prim_generic/rtl/prim_generic_flash.sv
@@ -191,9 +213,9 @@ module prim_generic_flash #(
           ack_o = 1'b1; //finish up transaction
 
           // if another request already pending
-          if (rd_i) begin
+          if (rd_q) begin
             hold_cmd = 1'b1;
-            mem_addr = addr_i;
+            mem_addr = addr_q;
             mem_req = 1'b1;
             time_cnt_set1 = 1'b1;
             st_d = StRead;
ParseResult:
UPD HdlStmIf@@ to 
    UPD HdlValueId@@rd_i to rd_q
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@addr_i to addr_q


CommitId: e0c529504746b61ef2494c4a74a3f9aef507f225
[i2c, rtl] Lint fixes
--- a/hw/ip/i2c/rtl/i2c_core.sv
+++ b/hw/ip/i2c/rtl/i2c_core.sv
@@ -150,6 +150,8 @@ module  i2c_core (
   logic [7:0]  unused_rx_fifo_rdata_q;
   logic [7:0]  unused_acq_fifo_adata_q;
   logic [1:0]  unused_acq_fifo_signal_q;
+  logic        unused_alert_test_qe;
+  logic        unused_alert_test_q;
 
   assign hw2reg.status.fmtfull.d = ~fmt_fifo_wready;
   assign hw2reg.status.rxfull.d = ~rx_fifo_wready;

ParseResult:
INS HdlIdDef@@unused_alert_test_qe to objs
HdlIdDef: unused_alert_test_qe
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

INS HdlIdDef@@unused_alert_test_q to objs
HdlIdDef: unused_alert_test_q
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL


CommitId: e0c529504746b61ef2494c4a74a3f9aef507f225
[i2c, rtl] Lint fixes
--- a/hw/ip/i2c/rtl/i2c_core.sv
+++ b/hw/ip/i2c/rtl/i2c_core.sv
@@ -295,6 +297,8 @@ module  i2c_core (
   assign unused_rx_fifo_rdata_q = reg2hw.rdata.q;
   assign unused_acq_fifo_adata_q = reg2hw.acqdata.abyte.q;
   assign unused_acq_fifo_signal_q = reg2hw.acqdata.signal.q;
+  assign unused_alert_test_qe = reg2hw.alert_test.qe;
+  assign unused_alert_test_q = reg2hw.alert_test.q;
 
   prim_fifo_sync #(
     .Width   (13),
ParseResult:
INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: DOT
        list: ops
            HdlOp: DOT
                list: ops
                    HdlValueId: reg2hw
                    HdlValueId: alert_test
            HdlValueId: qe
    HdlValueId: unused_alert_test_qe

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: DOT
        list: ops
            HdlOp: DOT
                list: ops
                    HdlValueId: reg2hw
                    HdlValueId: alert_test
            HdlValueId: q
    HdlValueId: unused_alert_test_q


CommitId: e38146466c337a0a5c9114e2fa90f7fe98ab93e9
Update lowrisc_ibex to lowRISC/ibex@f30e84b
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_register_file_ff.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_register_file_ff.sv
@@ -10,7 +10,7 @@
  * This register file is based on flip flops. Use this register file when
  * targeting FPGA synthesis or Verilator simulation.
  */
-module ibex_register_file #(
+module ibex_register_file_ff #(
     parameter bit          RV32E             = 0,
     parameter int unsigned DataWidth         = 32,
     parameter bit          DummyInstructions = 0
ParseResult:
UPD HdlModuleDef@@ibex_register_file to ibex_register_file_ff

UPD HdlModuleDec@@ibex_register_file to ibex_register_file_ff


CommitId: 5e8560788d4bb1fd2bf5978e20dc259a3403f832
[flash_ctrl] Fix error handling in rma response
--- a/hw/ip/flash_ctrl/rtl/flash_ctrl_lcmgr.sv
+++ b/hw/ip/flash_ctrl/rtl/flash_ctrl_lcmgr.sv
@@ -286,7 +286,7 @@ module flash_ctrl_lcmgr import flash_ctrl_pkg::*; #(
     seed_err_o = 1'b0;
 
     state_d = state_q;
-    rma_ack_d = rma_ack_q;
+    rma_ack_d = lc_ctrl_pkg::Off;
     validate_d = validate_q;
 
     // read buffer enable

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: rma_ack_d
                HdlValueId: rma_ack_q


CommitId: 5e8560788d4bb1fd2bf5978e20dc259a3403f832
[flash_ctrl] Fix error handling in rma response
--- a/hw/ip/flash_ctrl/rtl/flash_ctrl_lcmgr.sv
+++ b/hw/ip/flash_ctrl/rtl/flash_ctrl_lcmgr.sv
@@ -306,7 +306,7 @@ module flash_ctrl_lcmgr import flash_ctrl_pkg::*; #(
     edn_req_o = 1'b0;
     lfsr_en_o = 1'b0;
 
-    // rma realted
+    // rma related
     rma_wipe_req = 1'b0;
     rma_wipe_idx_incr = 1'b0;
 

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: rma_ack_d
                HdlValueId: rma_ack_q


CommitId: 5e8560788d4bb1fd2bf5978e20dc259a3403f832
[flash_ctrl] Fix error handling in rma response
--- a/hw/ip/flash_ctrl/rtl/flash_ctrl_lcmgr.sv
+++ b/hw/ip/flash_ctrl/rtl/flash_ctrl_lcmgr.sv
@@ -396,18 +396,26 @@ module flash_ctrl_lcmgr import flash_ctrl_pkg::*; #(
         rma_wipe_req = 1'b1;
 
         if (rma_wipe_idx == WipeEntries-1 && rma_wipe_done) begin
-          state_d = StRmaRsp;
+          // first check for error status
+          // If error status is set, go directly to invalid terminal state
+          // If error status is good, go to second check
+          state_d = (err_sts != lc_ctrl_pkg::On) ? StInvalid : StRmaRsp;
         end else if (rma_wipe_done) begin
           rma_wipe_idx_incr = 1;
         end
       end
 
       // response to rma request
+      // Second check for error status:
+      // If error status indicates error, jump to invalid terminal state
+      // Otherwise assign output to error status;
+      // TODO: consider lengthening the check
       StRmaRsp: begin
         phase = PhaseRma;
         if (err_sts != lc_ctrl_pkg::On) begin
-          rma_ack_d = lc_ctrl_pkg::Off;
           state_d = StInvalid;
+        end else begin
+          rma_ack_d = err_sts;
         end
       end
 

ParseResult:
UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: rma_ack_d
                HdlOp: DOUBLE_COLON
                    list: ops
                        HdlValueId: lc_ctrl_pkg
                        HdlValueId: Off

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlOp@@TERNARY to ops
            UPD HdlOp@@TERNARY to TERNARY
                INS list@@ops to TERNARY
                INS HdlOp@@NE to ops
                HdlOp: NE
                    list: ops
                        HdlValueId: err_sts
                        HdlOp: DOUBLE_COLON
                            list: ops
                                HdlValueId: lc_ctrl_pkg
                                HdlValueId: On
                INS HdlValueId@@StInvalid to ops

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            MOV HdlValueId@@StRmaRsp to ops
            HdlValueId: StRmaRsp

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: rma_ack_d
                HdlValueId: rma_ack_q


CommitId: 5e8560788d4bb1fd2bf5978e20dc259a3403f832
[flash_ctrl] Fix error handling in rma response
--- a/hw/ip/flash_ctrl/rtl/flash_ctrl_lcmgr.sv
+++ b/hw/ip/flash_ctrl/rtl/flash_ctrl_lcmgr.sv
@@ -520,10 +528,12 @@ module flash_ctrl_lcmgr import flash_ctrl_pkg::*; #(
   end
 
   // once error is set to off, it cannot be unset without a reboot
+  // On - no errors
+  // Off - errors were observed
   always_ff @(posedge clk_i or negedge rst_ni) begin
     if (!rst_ni) begin
       err_sts <= lc_ctrl_pkg::On;
-    end else if (err_sts_set) begin
+    end else if (err_sts_set && (err_sts != lc_ctrl_pkg::Off)) begin
       err_sts <= lc_ctrl_pkg::Off;
     end
   end
ParseResult:
UPD HdlStmIf@@ to 
    MOV HdlValueId@@err_sts_set to 
    HdlValueId: err_sts_set


CommitId: 55fd78e67b61c8ec2a4e9a23277c530eef242eb9
Update lowrisc_ibex to lowRISC/ibex@f025236
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_core.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_core.sv
@@ -66,7 +66,6 @@ module ibex_core #(
     output logic        rvfi_valid,
     output logic [63:0] rvfi_order,
     output logic [31:0] rvfi_insn,
-    output logic [31:0] rvfi_insn_uncompressed,
     output logic        rvfi_trap,
     output logic        rvfi_halt,
     output logic        rvfi_intr,

ParseResult:
INS HdlIdDef@@core_sleep_o to ports
HdlIdDef: core_sleep_o
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: OUT


CommitId: f9e43d46044356517824155381b4091792db1b28
[chiplevel/padring] Correct mio_in_raw connection width for FPGA targets
--- a/hw/top_earlgrey/rtl/autogen/chip_earlgrey_nexysvideo.sv
+++ b/hw/top_earlgrey/rtl/autogen/chip_earlgrey_nexysvideo.sv
@@ -259,44 +259,62 @@ module chip_earlgrey_nexysvideo #(
   assign dio_in[DioSpiDeviceSd3] = 1'b0;
   assign unused_sig[18] = dio_out[DioSpiDeviceSd3] ^ dio_oe[DioSpiDeviceSd3];
   assign mio_in[19] = 1'b0;
+  assign mio_in_raw[19] = 1'b0;
   assign unused_sig[40] = mio_out[19] ^ mio_oe[19];
   assign mio_in[20] = 1'b0;
+  assign mio_in_raw[20] = 1'b0;
   assign unused_sig[41] = mio_out[20] ^ mio_oe[20];
   assign mio_in[21] = 1'b0;
+  assign mio_in_raw[21] = 1'b0;
   assign unused_sig[42] = mio_out[21] ^ mio_oe[21];
   assign mio_in[22] = 1'b0;
+  assign mio_in_raw[22] = 1'b0;
   assign unused_sig[43] = mio_out[22] ^ mio_oe[22];
   assign mio_in[23] = 1'b0;
+  assign mio_in_raw[23] = 1'b0;
   assign unused_sig[44] = mio_out[23] ^ mio_oe[23];
   assign mio_in[34] = 1'b0;
+  assign mio_in_raw[34] = 1'b0;
   assign unused_sig[55] = mio_out[34] ^ mio_oe[34];
   assign mio_in[35] = 1'b0;
+  assign mio_in_raw[35] = 1'b0;
   assign unused_sig[56] = mio_out[35] ^ mio_oe[35];
   assign mio_in[36] = 1'b0;
+  assign mio_in_raw[36] = 1'b0;
   assign unused_sig[57] = mio_out[36] ^ mio_oe[36];
   assign mio_in[37] = 1'b0;
+  assign mio_in_raw[37] = 1'b0;
   assign unused_sig[58] = mio_out[37] ^ mio_oe[37];
   assign mio_in[38] = 1'b0;
+  assign mio_in_raw[38] = 1'b0;
   assign unused_sig[59] = mio_out[38] ^ mio_oe[38];
   assign mio_in[39] = 1'b0;
+  assign mio_in_raw[39] = 1'b0;
   assign unused_sig[60] = mio_out[39] ^ mio_oe[39];
   assign mio_in[40] = 1'b0;
+  assign mio_in_raw[40] = 1'b0;
   assign unused_sig[61] = mio_out[40] ^ mio_oe[40];
   assign mio_in[41] = 1'b0;
+  assign mio_in_raw[41] = 1'b0;
   assign unused_sig[62] = mio_out[41] ^ mio_oe[41];
   assign mio_in[42] = 1'b0;
+  assign mio_in_raw[42] = 1'b0;
   assign unused_sig[63] = mio_out[42] ^ mio_oe[42];
   assign dio_in[DioSysrstCtrlAonEcRstOutL] = 1'b0;
   assign unused_sig[64] = dio_out[DioSysrstCtrlAonEcRstOutL] ^ dio_oe[DioSysrstCtrlAonEcRstOutL];
   assign dio_in[DioSysrstCtrlAonPwrbOut] = 1'b0;
   assign unused_sig[65] = dio_out[DioSysrstCtrlAonPwrbOut] ^ dio_oe[DioSysrstCtrlAonPwrbOut];
   assign mio_in[43] = 1'b0;
+  assign mio_in_raw[43] = 1'b0;
   assign unused_sig[66] = mio_out[43] ^ mio_oe[43];
   assign mio_in[44] = 1'b0;
+  assign mio_in_raw[44] = 1'b0;
   assign unused_sig[67] = mio_out[44] ^ mio_oe[44];
   assign mio_in[45] = 1'b0;
+  assign mio_in_raw[45] = 1'b0;
   assign unused_sig[68] = mio_out[45] ^ mio_oe[45];
   assign mio_in[46] = 1'b0;
+  assign mio_in_raw[46] = 1'b0;
   assign unused_sig[69] = mio_out[46] ^ mio_oe[46];
 
   //////////////////////

ParseResult:
INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlValueInt: 0
    HdlOp: INDEX
        list: ops
            HdlValueId: mio_in_raw
            HdlValueInt: 19

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlValueInt: 0
    HdlOp: INDEX
        list: ops
            HdlValueId: mio_in_raw
            HdlValueInt: 20

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlValueInt: 0
    HdlOp: INDEX
        list: ops
            HdlValueId: mio_in_raw
            HdlValueInt: 21

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlValueInt: 0
    HdlOp: INDEX
        list: ops
            HdlValueId: mio_in_raw
            HdlValueInt: 22

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlValueInt: 0
    HdlOp: INDEX
        list: ops
            HdlValueId: mio_in_raw
            HdlValueInt: 23

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlValueInt: 0
    HdlOp: INDEX
        list: ops
            HdlValueId: mio_in_raw
            HdlValueInt: 34

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlValueInt: 0
    HdlOp: INDEX
        list: ops
            HdlValueId: mio_in_raw
            HdlValueInt: 35

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlValueInt: 0
    HdlOp: INDEX
        list: ops
            HdlValueId: mio_in_raw
            HdlValueInt: 36

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlValueInt: 0
    HdlOp: INDEX
        list: ops
            HdlValueId: mio_in_raw
            HdlValueInt: 37

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlValueInt: 0
    HdlOp: INDEX
        list: ops
            HdlValueId: mio_in_raw
            HdlValueInt: 38

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlValueInt: 0
    HdlOp: INDEX
        list: ops
            HdlValueId: mio_in_raw
            HdlValueInt: 39

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlValueInt: 0
    HdlOp: INDEX
        list: ops
            HdlValueId: mio_in_raw
            HdlValueInt: 40

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlValueInt: 0
    HdlOp: INDEX
        list: ops
            HdlValueId: mio_in_raw
            HdlValueInt: 41

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlValueInt: 0
    HdlOp: INDEX
        list: ops
            HdlValueId: mio_in_raw
            HdlValueInt: 42

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlValueInt: 0
    HdlOp: INDEX
        list: ops
            HdlValueId: mio_in_raw
            HdlValueInt: 43

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlValueInt: 0
    HdlOp: INDEX
        list: ops
            HdlValueId: mio_in_raw
            HdlValueInt: 44

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlValueInt: 0
    HdlOp: INDEX
        list: ops
            HdlValueId: mio_in_raw
            HdlValueInt: 45

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlValueInt: 0
    HdlOp: INDEX
        list: ops
            HdlValueId: mio_in_raw
            HdlValueInt: 46


CommitId: 50a83bedd4d6e3af8ef3c3696cf12fdbce53aaad
[csrng/rtl] internal state read timing improvements
--- a/hw/ip/csrng/rtl/csrng_core.sv
+++ b/hw/ip/csrng/rtl/csrng_core.sv
@@ -125,7 +125,6 @@ module csrng_core import csrng_pkg::*; #(
   logic                   update_req;
   logic                   uninstant_req;
   logic [3:0]             fifo_sel;
-  logic                   state_db_rd_req;
   logic                   ctr_drbg_cmd_req;
   logic                   ctr_drbg_gen_req;
   logic                   ctr_drbg_gen_req_rdy;

ParseResult:
MOV HdlIdDef@@state_db_rd_req to objs
HdlIdDef: state_db_rd_req
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

UPD HdlIdDef@@state_db_rd_req to halt_main_sm


CommitId: 50a83bedd4d6e3af8ef3c3696cf12fdbce53aaad
[csrng/rtl] internal state read timing improvements
--- a/hw/ip/csrng/rtl/csrng_core.sv
+++ b/hw/ip/csrng/rtl/csrng_core.sv
@@ -297,6 +296,8 @@ module csrng_core import csrng_pkg::*; #(
   logic                    state_db_reg_rd_id_pulse;
   logic [StateId-1:0]      state_db_reg_rd_id;
   logic [31:0]             state_db_reg_rd_val;
+  logic                    halt_main_sm;
+  logic                    main_sm_sts;
 
   logic [30:0]             err_code_test_bit;
 

ParseResult:
INS HdlIdDef@@main_sm_sts to objs
HdlIdDef: main_sm_sts
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL


CommitId: 50a83bedd4d6e3af8ef3c3696cf12fdbce53aaad
[csrng/rtl] internal state read timing improvements
--- a/hw/ip/csrng/rtl/csrng_core.sv
+++ b/hw/ip/csrng/rtl/csrng_core.sv
@@ -306,6 +307,9 @@ module csrng_core import csrng_pkg::*; #(
   logic        flag0_q, flag0_d;
   logic        statedb_wr_select_q, statedb_wr_select_d;
   logic        genbits_stage_fips_sw_q, genbits_stage_fips_sw_d;
+  logic        lc_hw_debug_not_on_q, lc_hw_debug_not_on_d;
+  logic        lc_hw_debug_on_q, lc_hw_debug_on_d;
+  logic        cmd_req_dly_q, cmd_req_dly_d;
 
   always_ff @(posedge clk_i or negedge rst_ni)
     if (!rst_ni) begin

ParseResult:
INS HdlIdDef@@lc_hw_debug_not_on_q to objs
HdlIdDef: lc_hw_debug_not_on_q
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

INS HdlIdDef@@lc_hw_debug_not_on_d to objs
HdlIdDef: lc_hw_debug_not_on_d
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

INS HdlIdDef@@lc_hw_debug_on_q to objs
HdlIdDef: lc_hw_debug_on_q
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

INS HdlIdDef@@lc_hw_debug_on_d to objs
HdlIdDef: lc_hw_debug_on_d
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

INS HdlIdDef@@cmd_req_dly_q to objs
HdlIdDef: cmd_req_dly_q
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

INS HdlIdDef@@cmd_req_dly_d to objs
HdlIdDef: cmd_req_dly_d
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL


CommitId: 50a83bedd4d6e3af8ef3c3696cf12fdbce53aaad
[csrng/rtl] internal state read timing improvements
--- a/hw/ip/csrng/rtl/csrng_core.sv
+++ b/hw/ip/csrng/rtl/csrng_core.sv
@@ -314,12 +318,18 @@ module csrng_core import csrng_pkg::*; #(
       flag0_q <= '0;
       statedb_wr_select_q <= '0;
       genbits_stage_fips_sw_q <= '0;
+      lc_hw_debug_not_on_q <= '0;
+      lc_hw_debug_on_q <= '0;
+      cmd_req_dly_q <= '0;
     end else begin
       acmd_q  <= acmd_d;
       shid_q  <= shid_d;
       flag0_q <= flag0_d;
       statedb_wr_select_q <= statedb_wr_select_d;
       genbits_stage_fips_sw_q <= genbits_stage_fips_sw_d;
+      lc_hw_debug_not_on_q <= lc_hw_debug_not_on_d;
+      lc_hw_debug_on_q <= lc_hw_debug_on_d;
+      cmd_req_dly_q <= cmd_req_dly_d;
     end
 
   //--------------------------------------------

ParseResult:
INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: lc_hw_debug_not_on_q

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: lc_hw_debug_on_q

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: cmd_req_dly_q

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueId: lc_hw_debug_not_on_d
    HdlValueId: lc_hw_debug_not_on_q

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueId: lc_hw_debug_on_d
    HdlValueId: lc_hw_debug_on_q

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueId: cmd_req_dly_d
    HdlValueId: cmd_req_dly_q


CommitId: 50a83bedd4d6e3af8ef3c3696cf12fdbce53aaad
[csrng/rtl] internal state read timing improvements
--- a/hw/ip/csrng/rtl/csrng_core.sv
+++ b/hw/ip/csrng/rtl/csrng_core.sv
@@ -776,7 +786,9 @@ module csrng_core import csrng_pkg::*; #(
   assign shid = acmd_bus[15:12];
 
   assign acmd_d = acmd_sop ? acmd_bus[2:0] : acmd_q;
-  assign shid_d = acmd_sop ? shid : shid_q;
+  assign shid_d = acmd_sop ? shid :
+         state_db_reg_rd_id_pulse ? state_db_reg_rd_id :
+         shid_q;
   assign flag0_d = acmd_sop ? flag0 : flag0_q;
 
   // sm to process all instantiation requests

ParseResult:
INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: TERNARY
        list: ops
            HdlValueId: acmd_sop
            HdlValueId: shid
            HdlOp: TERNARY
                list: ops
                    HdlValueId: state_db_reg_rd_id_pulse
                    HdlValueId: state_db_reg_rd_id
                    HdlValueId: shid_q
    HdlValueId: shid_d

DEL HdlStmAssign@@ from objs
HdlStmAssign
    HdlOp: TERNARY
        list: ops
            HdlValueId: acmd_sop
            HdlValueId: shid
            HdlValueId: shid_q
    HdlValueId: shid_d


CommitId: 50a83bedd4d6e3af8ef3c3696cf12fdbce53aaad
[csrng/rtl] internal state read timing improvements
--- a/hw/ip/csrng/rtl/csrng_core.sv
+++ b/hw/ip/csrng/rtl/csrng_core.sv
@@ -850,15 +863,19 @@ module csrng_core import csrng_pkg::*; #(
   // of each csrng instance. The state
   // is updated after each command.
 
-  assign state_db_rd_req = reseed_req || generate_req || update_req;
-
   assign cmd_result_wr_req = cmd_result_ack && (cmd_result_ccmd != GEN);
 
   // register read access
   assign state_db_reg_rd_sel = reg2hw.int_state_val.re;
   assign state_db_reg_rd_id = reg2hw.int_state_num.q;
   assign state_db_reg_rd_id_pulse = reg2hw.int_state_num.qe;
-  assign hw2reg.int_state_val.d = cs_enable ? state_db_reg_rd_val : '0;
+  assign hw2reg.int_state_val.d = state_db_reg_rd_val;
+
+  // main sm control
+  assign halt_main_sm = reg2hw.halt_main_sm.q;
+  assign hw2reg.main_sm_sts.de = 1'b1;
+  assign hw2reg.main_sm_sts.d = main_sm_sts;
+
 
   csrng_state_db #(
     .NApps(NApps),

ParseResult:
INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlValueId: state_db_reg_rd_val
    HdlValueId: hw2reg

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: DOT
        list: ops
            HdlOp: DOT
                list: ops
                    HdlValueId: reg2hw
                    HdlValueId: halt_main_sm
            HdlValueId: q
    HdlValueId: halt_main_sm

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlValueInt: 1
    HdlValueId: hw2reg

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlValueId: main_sm_sts
    HdlValueId: hw2reg

DEL HdlStmAssign@@ from objs
HdlStmAssign
    HdlOp: OR_LOG
        list: ops
            HdlOp: OR_LOG
                list: ops
                    HdlValueId: reseed_req
                    HdlValueId: generate_req
            HdlValueId: update_req
    HdlValueId: state_db_rd_req

DEL HdlStmAssign@@ from objs
HdlStmAssign
    HdlOp: TERNARY
        list: ops
            HdlValueId: cs_enable
            HdlValueId: state_db_reg_rd_val
            HdlValueInt: 0
    HdlValueId: hw2reg


CommitId: 50a83bedd4d6e3af8ef3c3696cf12fdbce53aaad
[csrng/rtl] internal state read timing improvements
--- a/hw/ip/csrng/rtl/csrng_core.sv
+++ b/hw/ip/csrng/rtl/csrng_core.sv
@@ -960,9 +975,10 @@ module csrng_core import csrng_pkg::*; #(
 
 
 
-  assign ctr_drbg_cmd_req =
+  assign cmd_req_dly_d =
          instant_req || reseed_req || generate_req || update_req || uninstant_req;
 
+  assign ctr_drbg_cmd_req = cmd_req_dly_q;
 
   csrng_ctr_drbg_cmd #(
     .Cmd(Cmd),

ParseResult:
INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlValueId: cmd_req_dly_q
    HdlValueId: ctr_drbg_cmd_req

UPD HdlStmAssign@@ to 
    UPD HdlValueId@@ctr_drbg_cmd_req to cmd_req_dly_d


CommitId: 50a83bedd4d6e3af8ef3c3696cf12fdbce53aaad
[csrng/rtl] internal state read timing improvements
--- a/hw/ip/csrng/rtl/csrng_core.sv
+++ b/hw/ip/csrng/rtl/csrng_core.sv
@@ -1131,6 +1147,9 @@ module csrng_core import csrng_pkg::*; #(
   assign      lc_hw_debug_not_on = (lc_hw_debug_en_out[0] != lc_ctrl_pkg::On);
   assign      lc_hw_debug_on = (lc_hw_debug_en_out[1] == lc_ctrl_pkg::On);
 
+  // flop for better timing
+  assign      lc_hw_debug_not_on_d = lc_hw_debug_not_on;
+  assign      lc_hw_debug_on_d = lc_hw_debug_on;
 
   //-------------------------------------
   // csrng_block_encrypt instantiation

ParseResult:
INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlValueId: lc_hw_debug_not_on
    HdlValueId: lc_hw_debug_not_on_d

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlValueId: lc_hw_debug_on
    HdlValueId: lc_hw_debug_on_d


CommitId: 3519dd2a391a001bb2dae2ed2bc37789b59b97ad
[csrng/rtl] instantiate and generate bug fixes
--- a/hw/ip/csrng/rtl/csrng_cmd_stage.sv
+++ b/hw/ip/csrng/rtl/csrng_cmd_stage.sv
@@ -48,6 +48,7 @@ module csrng_cmd_stage import csrng_pkg::*; #(
 
   localparam int GenBitsFifoWidth = 1+128;
   localparam int GenBitsFifoDepth = 1;
+  localparam int GenBitsCntrWidth = 19;
 
   // signals
   // command fifo

ParseResult:
INS HdlIdDef@@GenBitsCntrWidth to objs
HdlIdDef: GenBitsCntrWidth
    HdlValueId: int
    HdlValueInt: 19
    HdlDirection: INTERNAL


CommitId: 3519dd2a391a001bb2dae2ed2bc37789b59b97ad
[csrng/rtl] instantiate and generate bug fixes
--- a/hw/ip/csrng/rtl/csrng_cmd_stage.sv
+++ b/hw/ip/csrng/rtl/csrng_cmd_stage.sv
@@ -76,6 +77,7 @@ module csrng_cmd_stage import csrng_pkg::*; #(
   logic                    cmd_gen_cnt_dec;
   logic                    cmd_gen_1st_req;
   logic                    cmd_gen_inc_req;
+  logic                    cmd_gen_cnt_last;
   logic                    cmd_final_ack;
 
   // flops

ParseResult:
INS HdlIdDef@@cmd_gen_cnt_last to objs
HdlIdDef: cmd_gen_cnt_last
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL


CommitId: 3519dd2a391a001bb2dae2ed2bc37789b59b97ad
[csrng/rtl] instantiate and generate bug fixes
--- a/hw/ip/csrng/rtl/csrng_cmd_stage.sv
+++ b/hw/ip/csrng/rtl/csrng_cmd_stage.sv
@@ -83,7 +85,7 @@ module csrng_cmd_stage import csrng_pkg::*; #(
   logic                    cmd_ack_sts_q, cmd_ack_sts_d;
   logic [3:0]              cmd_len_q, cmd_len_d;
   logic                    cmd_gen_flag_q, cmd_gen_flag_d;
-  logic [18:0]             cmd_gen_cnt_q, cmd_gen_cnt_d; // max_nuber_of_bits_per_request = 2^19
+  logic [GenBitsCntrWidth-1:0] cmd_gen_cnt_q, cmd_gen_cnt_d; // max_nuber_of_bits_per_request = 2^19
   logic [11:0]             cmd_gen_cmd_q, cmd_gen_cmd_d;
 
 

ParseResult:
INS HdlIdDef@@cmd_gen_cnt_q to objs
HdlIdDef: cmd_gen_cnt_q
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlOp: SUB
                        list: ops
                            HdlValueId: GenBitsCntrWidth
                            HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: INTERNAL

INS HdlIdDef@@cmd_gen_cnt_d to objs
HdlIdDef: cmd_gen_cnt_d
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlOp: SUB
                        list: ops
                            HdlValueId: GenBitsCntrWidth
                            HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: INTERNAL

DEL HdlIdDef@@cmd_gen_cnt_q from objs
HdlIdDef: cmd_gen_cnt_q
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 18
                    HdlValueInt: 0
    HdlDirection: INTERNAL

DEL HdlIdDef@@cmd_gen_cnt_d from objs
HdlIdDef: cmd_gen_cnt_d
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 18
                    HdlValueInt: 0
    HdlDirection: INTERNAL


CommitId: 3519dd2a391a001bb2dae2ed2bc37789b59b97ad
[csrng/rtl] instantiate and generate bug fixes
--- a/hw/ip/csrng/rtl/csrng_cmd_stage.sv
+++ b/hw/ip/csrng/rtl/csrng_cmd_stage.sv
@@ -137,10 +139,11 @@ module csrng_cmd_stage import csrng_pkg::*; #(
   assign sfifo_cmd_pop = cs_enable_i && cmd_fifo_pop;
 
   assign cmd_arb_bus_o =
-         cmd_gen_inc_req ? {16'b0,cmd_stage_shid_i,cmd_gen_cmd_q} :
-         cmd_gen_1st_req ? {16'b0,cmd_stage_shid_i,sfifo_cmd_rdata[11:0]} :  // pad,id,f,clen,cmd
-         cmd_arb_mop_o   ? sfifo_cmd_rdata :
-         '0;
+         cmd_gen_inc_req ? {15'b0,cmd_gen_cnt_last,cmd_stage_shid_i,cmd_gen_cmd_q} :
+        // pad,glast,id,f,clen,cmd
+        cmd_gen_1st_req ? {15'b0,cmd_gen_cnt_last,cmd_stage_shid_i,sfifo_cmd_rdata[11:0]} :
+        cmd_arb_mop_o   ? sfifo_cmd_rdata :
+        '0;
 
   assign cmd_stage_rdy_o = !sfifo_cmd_full;
 

ParseResult:
UPD HdlStmAssign@@ to 
    UPD HdlOp@@TERNARY to TERNARY
        UPD HdlOp@@CONCAT to CONCAT
            UPD HdlOp@@CONCAT to CONCAT
                INS HdlOp@@CONCAT to ops
                UPD HdlOp@@CONCAT to CONCAT
                    INS list@@ops to CONCAT
                    INS HdlValueId@@cmd_gen_cnt_last to ops
        UPD HdlOp@@TERNARY to TERNARY
            UPD HdlOp@@CONCAT to CONCAT
                UPD HdlOp@@CONCAT to CONCAT
                    INS HdlOp@@CONCAT to ops
                    UPD HdlOp@@CONCAT to CONCAT
                        INS list@@ops to CONCAT
                        INS HdlValueId@@cmd_gen_cnt_last to ops

UPD HdlStmAssign@@ to 
    UPD HdlOp@@TERNARY to TERNARY
        UPD HdlOp@@CONCAT to CONCAT
            UPD HdlOp@@CONCAT to CONCAT
                MOV HdlValueInt@@0 to ops
                HdlValueInt: 0
        UPD HdlOp@@TERNARY to TERNARY
            UPD HdlOp@@CONCAT to CONCAT
                UPD HdlOp@@CONCAT to CONCAT
                    MOV HdlValueInt@@0 to ops
                    HdlValueInt: 0


CommitId: 3519dd2a391a001bb2dae2ed2bc37789b59b97ad
[csrng/rtl] instantiate and generate bug fixes
--- a/hw/ip/csrng/rtl/csrng_cmd_stage.sv
+++ b/hw/ip/csrng/rtl/csrng_cmd_stage.sv
@@ -239,6 +242,7 @@ module csrng_cmd_stage import csrng_pkg::*; #(
     cmd_gen_cnt_dec= 1'b0;
     cmd_gen_1st_req = 1'b0;
     cmd_gen_inc_req = 1'b0;
+    cmd_gen_cnt_last = 1'b0;
     cmd_final_ack = 1'b0;
     cmd_arb_req_o = 1'b0;
     cmd_arb_sop_o = 1'b0;

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: cmd_gen_cnt_last
                HdlValueInt: 0


CommitId: 3519dd2a391a001bb2dae2ed2bc37789b59b97ad
[csrng/rtl] instantiate and generate bug fixes
--- a/hw/ip/csrng/rtl/csrng_cmd_stage.sv
+++ b/hw/ip/csrng/rtl/csrng_cmd_stage.sv
@@ -257,6 +261,9 @@ module csrng_cmd_stage import csrng_pkg::*; #(
           cmd_gen_1st_req = 1'b1;
           cmd_arb_sop_o = 1'b1;
           cmd_fifo_pop = 1'b1;
+          if (sfifo_cmd_rdata[30:12] == 20'h00001) begin
+            cmd_gen_cnt_last = 1'b1;
+          end
           if (cmd_len == '0) begin
             cmd_arb_eop_o = 1'b1;
             state_d = GenCmdChk;

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: cmd_gen_cnt_last
                HdlValueInt: 0

INS HdlStmIf@@ to body
HdlStmIf
    HdlOp: EQ
        list: ops
            HdlOp: INDEX
                list: ops
                    HdlValueId: sfifo_cmd_rdata
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 30
                            HdlValueInt: 12
            HdlValueInt: 00001
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: cmd_gen_cnt_last
                    HdlValueInt: 1
    list: elifs


CommitId: 3519dd2a391a001bb2dae2ed2bc37789b59b97ad
[csrng/rtl] instantiate and generate bug fixes
--- a/hw/ip/csrng/rtl/csrng_cmd_stage.sv
+++ b/hw/ip/csrng/rtl/csrng_cmd_stage.sv
@@ -306,6 +313,10 @@ module csrng_cmd_stage import csrng_pkg::*; #(
                 cmd_arb_eop_o = 1'b1;
                 cmd_gen_inc_req = 1'b1;
                 state_d = GenCmdChk;
+                // check for final genbits beat
+                if (cmd_gen_cnt_q == GenBitsCntrWidth'(1)) begin
+                  cmd_gen_cnt_last = 1'b1;
+                end
               end
             end
           end
ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: cmd_gen_cnt_last
                HdlValueInt: 0

INS HdlStmIf@@ to body
HdlStmIf
    HdlOp: EQ
        list: ops
            HdlValueId: cmd_gen_cnt_q
            HdlOp: CALL
                list: ops
                    HdlValueId: GenBitsCntrWidth
                    HdlValueInt: 1
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: cmd_gen_cnt_last
                    HdlValueInt: 1
    list: elifs


CommitId: fa976d438a9445b5389b8cbb70b972c9c365b883
Update pulp_riscv_dbg to pulp-platform/riscv-dbg@6bef5d8
--- a/hw/vendor/pulp_riscv_dbg/src/dmi_jtag.sv
+++ b/hw/vendor/pulp_riscv_dbg/src/dmi_jtag.sv
@@ -98,7 +98,7 @@ module dmi_jtag #(
 
     dmi_req_valid = 1'b0;
 
-    case (state_q)
+    unique case (state_q)
       Idle: begin
         // make sure that no error is sticky
         if (dmi_access && update_dr && (error_q == DMINoError)) begin
ParseResult:
UPD HdlStmCase@@state_q to state_q
    INS HdlStmCaseUniqConstrain@@UNIQUE to state_q


CommitId: 17e9624c452e05f71f4ad2b7c75bf6bbb071c324
Update lowrisc_ibex to lowRISC/ibex@ee1098f
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_fetch_fifo.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_fetch_fifo.sv
@@ -9,7 +9,9 @@
  * input port: send address and data to the FIFO
  * clear_i clears the FIFO for the following cycle, including any new request
  */
-module ibex_fetch_fifo (
+module ibex_fetch_fifo #(
+  parameter int unsigned NUM_REQS = 2
+) (
     input  logic        clk_i,
     input  logic        rst_ni,
 

ParseResult:
INS HdlIdDef@@NUM_REQS to params
HdlIdDef: NUM_REQS
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: int
            HdlOp: MAP_ASSOCIATION
                list: ops
                    HdlValueId: signed
    HdlValueInt: 2
    HdlDirection: INTERNAL


CommitId: 17e9624c452e05f71f4ad2b7c75bf6bbb071c324
Update lowrisc_ibex to lowRISC/ibex@ee1098f
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_fetch_fifo.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_fetch_fifo.sv
@@ -31,10 +33,9 @@ module ibex_fetch_fifo (
     output logic        out_err_o
 );
 
-  localparam int unsigned DEPTH = 3; // must be 3 or greater
+  localparam int unsigned DEPTH = NUM_REQS+1;
 
   // index 0 is used for output
-  logic [DEPTH-1:0] [31:2]  addr_d,    addr_q;
   logic [DEPTH-1:0] [31:0]  rdata_d,   rdata_q;
   logic [DEPTH-1:0]         err_d,     err_q;
   logic [DEPTH-1:0]         valid_d,   valid_q;

ParseResult:
UPD HdlIdDef@@addr_d to addr_d
    UPD HdlOp@@INDEX to INDEX
        UPD HdlOp@@PARAMETRIZATION to PARAMETRIZATION
            UPD HdlOp@@DOWNTO to DOWNTO
                UPD HdlOp@@SUB to ADD
                MOV HdlOp@@SUB to ops
                HdlOp: SUB
                    list: ops
                        HdlValueId: DEPTH
                        HdlValueInt: 1
                UPD HdlOp@@SUB to SUB
                    UPD HdlValueId@@DEPTH to NUM_REQS
                    DEL HdlValueInt@@1 from ops
                DEL HdlValueInt@@0 from ops
                DEL list@@ops from DOWNTO
            DEL HdlValueId@@logic from ops
            DEL HdlOp@@DOWNTO from ops
            DEL list@@ops from PARAMETRIZATION
        DEL HdlOp@@PARAMETRIZATION from ops
        DEL HdlOp@@DOWNTO from ops
        HdlOp: DOWNTO
            list: ops
                HdlValueInt: 31
                HdlValueInt: 2
        DEL list@@ops from INDEX
    DEL HdlOp@@INDEX from addr_d
    DEL HdlDirection@@INTERNAL from addr_d

UPD HdlIdDef@@DEPTH to DEPTH
    UPD HdlValueInt@@3 to 1
    MOV HdlValueInt@@3 to DEPTH
    HdlValueInt: 3

DEL HdlIdDef@@addr_d from objs

DEL HdlIdDef@@addr_q from objs
HdlIdDef: addr_q
    HdlOp: INDEX
        list: ops
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: logic
                    HdlOp: DOWNTO
                        list: ops
                            HdlOp: SUB
                                list: ops
                                    HdlValueId: DEPTH
                                    HdlValueInt: 1
                            HdlValueInt: 0
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 31
                    HdlValueInt: 2
    HdlDirection: INTERNAL


CommitId: 17e9624c452e05f71f4ad2b7c75bf6bbb071c324
Update lowrisc_ibex to lowRISC/ibex@ee1098f
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_fetch_fifo.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_fetch_fifo.sv
@@ -47,9 +48,11 @@ module ibex_fetch_fifo (
   logic                     err,   err_unaligned;
   logic                     valid, valid_unaligned;
 
-  logic                     entry0_unaligned_d, entry0_unaligned_q;
   logic                     aligned_is_compressed, unaligned_is_compressed;
-  
+
+  logic                     addr_incr_two;
+  logic [31:1]              instr_addr_d, instr_addr_q;
+  logic                     instr_addr_en;
   logic                     unused_addr_in;
 
   /////////////////

ParseResult:
MOV HdlIdDef@@entry0_unaligned_d to objs
HdlIdDef: entry0_unaligned_d
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

MOV HdlIdDef@@entry0_unaligned_q to objs
HdlIdDef: entry0_unaligned_q
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

UPD HdlIdDef@@entry0_unaligned_d to addr_incr_two

INS HdlIdDef@@instr_addr_d to objs
HdlIdDef: instr_addr_d
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 31
                    HdlValueInt: 1
    HdlDirection: INTERNAL

INS HdlIdDef@@instr_addr_q to objs
HdlIdDef: instr_addr_q
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 31
                    HdlValueInt: 1
    HdlDirection: INTERNAL

UPD HdlIdDef@@entry0_unaligned_q to instr_addr_en


CommitId: 17e9624c452e05f71f4ad2b7c75bf6bbb071c324
Update lowrisc_ibex to lowRISC/ibex@ee1098f
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_fetch_fifo.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_fetch_fifo.sv
@@ -70,21 +73,6 @@ module ibex_fetch_fifo (
   // The FIFO also has a direct bypass path, so a complete instruction might be made up of data
   // from the FIFO and new incoming data.
   //
-  // Additionally, branches can cause a fetch from an unaligned address. The full data word will be
-  // fetched, but the FIFO must output the unaligned instruction as the first valid data.
-
-  // Alignment is tracked with a flag, this records whether entry[0] of the FIFO has become unaligned.
-  // The flag is set once any compressed instruction enters the FIFO and is only cleared once a
-  // a compressed instruction realigns the FIFO, or the FIFO is cleared.
-
-                              // New incoming unaligned request (must be a branch) or already unaligned
-  assign entry0_unaligned_d = ((((in_valid_i & in_addr_i[1]) | entry0_unaligned_q) &
-                                // cleared by a compressed unaligned instruction
-                                ~(out_ready_i & unaligned_is_compressed)) |
-                               // Also set when a new aligned compressed instruction is driven
-                               (valid & out_ready_i & ~out_addr_o[1] & aligned_is_compressed)) &
-                              // reset by a FIFO clear
-                              ~clear_i;
 
   // Construct the output data for an unaligned instruction
   assign rdata_unaligned = valid_q[1] ? {rdata_q[1][15:0], rdata[31:16]} :

ParseResult:
DEL HdlStmAssign@@ from objs
HdlStmAssign
    HdlOp: AND
        list: ops
            HdlOp: OR
                list: ops
                    HdlOp: AND
                        list: ops
                            HdlOp: OR
                                list: ops
                                    HdlOp: AND
                                        list: ops
                                            HdlValueId: in_valid_i
                                            HdlOp: INDEX
                                                list: ops
                                                    HdlValueId: in_addr_i
                                                    HdlValueInt: 1
                                    HdlValueId: entry0_unaligned_q
                            HdlOp: NEG
                                list: ops
                                    HdlOp: AND
                                        list: ops
                                            HdlValueId: out_ready_i
                                            HdlValueId: unaligned_is_compressed
                    HdlOp: AND
                        list: ops
                            HdlOp: AND
                                list: ops
                                    HdlOp: AND
                                        list: ops
                                            HdlValueId: valid
                                            HdlValueId: out_ready_i
                                    HdlOp: NEG
                                        list: ops
                                            HdlOp: INDEX
                                                list: ops
                                                    HdlValueId: out_addr_o
                                                    HdlValueInt: 1
                            HdlValueId: aligned_is_compressed
            HdlOp: NEG
                list: ops
                    HdlValueId: clear_i
    HdlValueId: entry0_unaligned_d


CommitId: 17e9624c452e05f71f4ad2b7c75bf6bbb071c324
Update lowrisc_ibex to lowRISC/ibex@ee1098f
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_fetch_fifo.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_fetch_fifo.sv
@@ -140,10 +149,10 @@ module ibex_fetch_fifo (
   // input port //
   ////////////////
 
-  // we accept data as long as our FIFO is not full
-  // we don't care about clear here as the data will be received one cycle
-  // later anyway
-  assign in_ready_o = ~valid_q[DEPTH-2];
+  // Accept data as long as our FIFO has space to accept the maximum number of outstanding
+  // requests. Note that the prefetch buffer does not count how many requests are actually
+  // outstanding, so space must be reserved for the maximum number.
+  assign in_ready_o = ~valid_q[DEPTH-NUM_REQS];
 
   /////////////////////
   // FIFO management //

ParseResult:
MOV HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: NEG
        list: ops
            HdlOp: INDEX
                list: ops
                    HdlValueId: valid_q
                    HdlOp: SUB
                        list: ops
                            HdlValueId: DEPTH
                            HdlValueInt: 2
    HdlValueId: in_ready_o

INS HdlStmAssign@@ to objs

UPD HdlStmAssign@@ to 
    MOV HdlValueId@@in_ready_o to 
    HdlValueId: in_ready_o
    UPD HdlOp@@NEG to AND


CommitId: 17e9624c452e05f71f4ad2b7c75bf6bbb071c324
Update lowrisc_ibex to lowRISC/ibex@ee1098f
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_fetch_fifo.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_fetch_fifo.sv
@@ -157,7 +166,7 @@ module ibex_fetch_fifo (
     if (i == 0) begin : g_ent0
       assign lowest_free_entry[i] = ~valid_q[i];
     end else begin : g_ent_others
-      assign lowest_free_entry[i] = ~valid_q[i] & (&valid_q[i-1:0]);
+      assign lowest_free_entry[i] = ~valid_q[i] & valid_q[i-1];
     end
 
     // An entry is set when an incoming request chooses the lowest available entry

ParseResult:
UPD HdlStmAssign@@ to 
    UPD HdlOp@@AND to AND
        UPD HdlOp@@AND_UNARY to AND_UNARY
            UPD list@@ops to body
            MOV list@@ops to AND_UNARY
            list: ops
                HdlOp: INDEX
                    list: ops
                        HdlValueId: valid_q
                        HdlOp: DOWNTO
                            list: ops
                                HdlOp: SUB
                                    list: ops
                                        HdlValueId: i
                                        HdlValueInt: 1
                                HdlValueInt: 0
            UPD HdlOp@@INDEX to AND
            MOV HdlOp@@INDEX to ops
            HdlOp: INDEX
                list: ops
                    HdlValueId: valid_q
                    HdlOp: DOWNTO
                        list: ops
                            HdlOp: SUB
                                list: ops
                                    HdlValueId: i
                                    HdlValueInt: 1
                            HdlValueInt: 0
            UPD HdlOp@@INDEX to INDEX
                UPD HdlOp@@DOWNTO to INDEX
                MOV HdlValueId@@valid_q to ops
                HdlValueId: valid_q
                UPD HdlOp@@DOWNTO to DOWNTO
                    DEL HdlValueInt@@0 from ops
        MOV HdlOp@@NEG to ops
        HdlOp: NEG
            list: ops
                HdlOp: INDEX
                    list: ops
                        HdlValueId: valid_q
                        HdlValueId: i
        DEL HdlOp@@AND_UNARY from ops
        DEL list@@ops from AND
    DEL HdlOp@@AND from 

MOV HdlStmAssign@@ to body
HdlStmAssign
    HdlOp: AND
        list: ops
            HdlOp: NEG
                list: ops
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: valid_q
                            HdlValueId: i
            HdlOp: AND_UNARY
                list: ops
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: valid_q
                            HdlOp: DOWNTO
                                list: ops
                                    HdlOp: SUB
                                        list: ops
                                            HdlValueId: i
                                            HdlValueInt: 1
                                    HdlValueInt: 0
    HdlOp: INDEX
        list: ops
            HdlValueId: lowest_free_entry
            HdlValueId: i

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ


CommitId: 17e9624c452e05f71f4ad2b7c75bf6bbb071c324
Update lowrisc_ibex to lowRISC/ibex@ee1098f
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_fetch_fifo.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_fetch_fifo.sv
@@ -174,17 +183,15 @@ module ibex_fetch_fifo (
                          (in_valid_i & lowest_free_entry[i] & ~pop_fifo);
 
     // take the next entry or the incoming data
-    assign addr_d [i]  = valid_q[i+1] ? addr_q [i+1] : in_addr_i[31:2];
     assign rdata_d[i]  = valid_q[i+1] ? rdata_q[i+1] : in_rdata_i;
     assign err_d  [i]  = valid_q[i+1] ? err_q  [i+1] : in_err_i;
   end
   // The top entry is similar but with simpler muxing
-  assign lowest_free_entry[DEPTH-1] = ~valid_q[DEPTH-1] & (&valid_q[DEPTH-2:0]);
+  assign lowest_free_entry[DEPTH-1] = ~valid_q[DEPTH-1] & valid_q[DEPTH-2];
   assign valid_pushed     [DEPTH-1] = valid_q[DEPTH-1] | (in_valid_i & lowest_free_entry[DEPTH-1]);
   assign valid_popped     [DEPTH-1] = pop_fifo ? 1'b0 : valid_pushed[DEPTH-1];
   assign valid_d [DEPTH-1]          = valid_popped[DEPTH-1] & ~clear_i;
   assign entry_en[DEPTH-1]          = in_valid_i & lowest_free_entry[DEPTH-1];
-  assign addr_d  [DEPTH-1]          = in_addr_i[31:2];
   assign rdata_d [DEPTH-1]          = in_rdata_i;
   assign err_d   [DEPTH-1]          = in_err_i;
 

ParseResult:
UPD HdlStmAssign@@ to 
    MOV HdlOp@@INDEX to 
    HdlOp: INDEX
        list: ops
            HdlValueId: lowest_free_entry
            HdlOp: SUB
                list: ops
                    HdlValueId: DEPTH
                    HdlValueInt: 1
    UPD HdlOp@@AND to AND
        MOV HdlOp@@NEG to ops
        HdlOp: NEG
            list: ops
                HdlOp: INDEX
                    list: ops
                        HdlValueId: valid_q
                        HdlOp: SUB
                            list: ops
                                HdlValueId: DEPTH
                                HdlValueInt: 1
        DEL HdlOp@@AND_UNARY from ops
        HdlOp: AND_UNARY
            list: ops
                HdlOp: INDEX
                    list: ops
                        HdlValueId: valid_q
                        HdlOp: DOWNTO
                            list: ops
                                HdlOp: SUB
                                    list: ops
                                        HdlValueId: DEPTH
                                        HdlValueInt: 2
                                HdlValueInt: 0
        DEL list@@ops from AND
    DEL HdlOp@@AND from 

DEL HdlStmAssign@@ from body
HdlStmAssign
    HdlOp: TERNARY
        list: ops
            HdlOp: INDEX
                list: ops
                    HdlValueId: valid_q
                    HdlOp: ADD
                        list: ops
                            HdlValueId: i
                            HdlValueInt: 1
            HdlOp: INDEX
                list: ops
                    HdlValueId: addr_q
                    HdlOp: ADD
                        list: ops
                            HdlValueId: i
                            HdlValueInt: 1
            HdlOp: INDEX
                list: ops
                    HdlValueId: in_addr_i
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 31
                            HdlValueInt: 2
    HdlOp: INDEX
        list: ops
            HdlValueId: addr_d
            HdlValueId: i

DEL HdlStmAssign@@ from objs

DEL HdlStmAssign@@ from objs
HdlStmAssign
    HdlOp: INDEX
        list: ops
            HdlValueId: in_addr_i
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 31
                    HdlValueInt: 2
    HdlOp: INDEX
        list: ops
            HdlValueId: addr_d
            HdlOp: SUB
                list: ops
                    HdlValueId: DEPTH
                    HdlValueInt: 1


CommitId: 17e9624c452e05f71f4ad2b7c75bf6bbb071c324
Update lowrisc_ibex to lowRISC/ibex@ee1098f
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_fetch_fifo.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_fetch_fifo.sv
@@ -194,18 +201,15 @@ module ibex_fetch_fifo (
 
   always_ff @(posedge clk_i or negedge rst_ni) begin
     if (!rst_ni) begin
-      valid_q            <= '0;
-      entry0_unaligned_q <= '0;
+      valid_q <= '0;
     end else begin
-      valid_q            <= valid_d;
-      entry0_unaligned_q <= entry0_unaligned_d;
+      valid_q <= valid_d;
     end
   end
 
   for (genvar i = 0; i < DEPTH; i++) begin : g_fifo_regs
     always_ff @(posedge clk_i) begin
       if (entry_en[i]) begin
-        addr_q[i]    <= addr_d[i];
         rdata_q[i]   <= rdata_d[i];
         err_q[i]     <= err_d[i];
       end
ParseResult:
DEL HdlStmAssign@@ from body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: entry0_unaligned_q

DEL HdlStmAssign@@ from body
HdlStmAssign
    HdlValueId: entry0_unaligned_d
    HdlValueId: entry0_unaligned_q

DEL HdlStmAssign@@ from body
HdlStmAssign
    HdlOp: INDEX
        list: ops
            HdlValueId: addr_d
            HdlValueId: i
    HdlOp: INDEX
        list: ops
            HdlValueId: addr_q
            HdlValueId: i


CommitId: 44fe217af660b1abbe22fa00e70583482f096871
[csrng] Fix some width mismatches
--- a/hw/ip/csrng/rtl/csrng_ctr_drbg_cmd.sv
+++ b/hw/ip/csrng/rtl/csrng_ctr_drbg_cmd.sv
@@ -268,7 +268,7 @@ module csrng_ctr_drbg_cmd import csrng_pkg::*; #(
 
   // if a UNI command, reset the state values
   assign sfifo_keyvrc_wdata = (rcstage_ccmd == UNI) ?
-         {{(KeyLen+BlkLen+CtrLen+16){1'b0}},upd_cmd_inst_id_i,upd_cmd_ccmd_i} :
+         {{(KeyLen+BlkLen+CtrLen+1+SeedLen){1'b0}},upd_cmd_inst_id_i,upd_cmd_ccmd_i} :
          {upd_cmd_key_i,upd_cmd_v_i,rcstage_rc,rcstage_fips,
           rcstage_adata,upd_cmd_inst_id_i,upd_cmd_ccmd_i};
 
ParseResult:
UPD HdlStmAssign@@ to 
    UPD HdlOp@@TERNARY to TERNARY
        INS HdlOp@@CONCAT to ops
        UPD HdlOp@@CONCAT to CONCAT
            INS list@@ops to CONCAT
            INS HdlValueId@@upd_cmd_ccmd_i to ops
            UPD HdlOp@@CONCAT to CONCAT
                UPD HdlOp@@REPL_CONCAT to REPL_CONCAT
                    UPD HdlOp@@ADD to ADD
                        INS HdlValueId@@SeedLen to ops

UPD HdlStmAssign@@ to 
    UPD HdlOp@@TERNARY to TERNARY
        MOV HdlOp@@CONCAT to ops
        HdlOp: CONCAT
            list: ops
                HdlOp: CONCAT
                    list: ops
                        HdlOp: REPL_CONCAT
                            list: ops
                                HdlOp: ADD
                                    list: ops
                                        HdlOp: ADD
                                            list: ops
                                                HdlOp: ADD
                                                    list: ops
                                                        HdlValueId: KeyLen
                                                        HdlValueId: BlkLen
                                                HdlValueId: CtrLen
                                        HdlValueInt: 16
                                HdlValueInt: 0
                        HdlValueId: upd_cmd_inst_id_i
                HdlValueId: upd_cmd_ccmd_i
        UPD HdlOp@@CONCAT to CONCAT
            UPD HdlOp@@CONCAT to REPL_CONCAT
            UPD HdlValueId@@upd_cmd_ccmd_i to upd_cmd_inst_id_i
            UPD HdlOp@@CONCAT to CONCAT
                UPD HdlOp@@REPL_CONCAT to ADD
                UPD HdlOp@@REPL_CONCAT to REPL_CONCAT
                    MOV HdlValueInt@@0 to ops
                    HdlValueInt: 0
                    UPD HdlOp@@ADD to ADD
                        UPD HdlValueInt@@16 to 1
                DEL HdlValueId@@upd_cmd_inst_id_i from ops


CommitId: 74a39e3e147145596fbcc25b0720662c2f417e54
Update lowrisc_ibex to lowRISC/ibex@7e22830
--- a/hw/vendor/lowrisc_ibex/shared/rtl/sim/simulator_ctrl.sv
+++ b/hw/vendor/lowrisc_ibex/shared/rtl/sim/simulator_ctrl.sv
@@ -36,7 +36,7 @@ module simulator_ctrl #(
   localparam SIM_CTRL_ADDR = 1;
 
   logic [7:0] ctrl_addr;
-  logic [2:0] sim_finish;
+  logic [2:0] sim_finish = 3'b000;
 
   integer log_fd;
 

ParseResult:
UPD HdlIdDef@@sim_finish to sim_finish
    INS HdlValueInt@@000 to sim_finish


CommitId: 74a39e3e147145596fbcc25b0720662c2f417e54
Update lowrisc_ibex to lowRISC/ibex@7e22830
--- a/hw/vendor/lowrisc_ibex/shared/rtl/sim/simulator_ctrl.sv
+++ b/hw/vendor/lowrisc_ibex/shared/rtl/sim/simulator_ctrl.sv
@@ -78,9 +78,7 @@ module simulator_ctrl #(
         endcase
       end
     end
-  end
 
-  always_ff @(posedge clk_i or negedge rst_ni) begin
     if (sim_finish != 'b0) begin
       sim_finish <= sim_finish + 1;
     end

ParseResult:
MOV HdlStmIf@@ to body
HdlStmIf
    HdlOp: NE
        list: ops
            HdlValueId: sim_finish
            HdlValueInt: 0
    HdlStmBlock: SEQ
        list: body
            HdlStmAssign
                HdlOp: ADD
                    list: ops
                        HdlValueId: sim_finish
                        HdlValueInt: 1
                HdlValueId: sim_finish
    list: elifs

UPD HdlStmProcess@@ to 
    DEL list@@sensitivity from 
    list: sensitivity
        HdlOp: RISING
            list: ops
                HdlValueId: clk_i
        HdlOp: FALLING
            list: ops
                HdlValueId: rst_ni
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL HdlStmProcessTriggerConstrain@@FF from 

DEL HdlStmProcess@@ from objs


CommitId: 74a39e3e147145596fbcc25b0720662c2f417e54
Update lowrisc_ibex to lowRISC/ibex@7e22830
--- a/hw/vendor/lowrisc_ibex/shared/rtl/sim/simulator_ctrl.sv
+++ b/hw/vendor/lowrisc_ibex/shared/rtl/sim/simulator_ctrl.sv
@@ -88,6 +86,7 @@ module simulator_ctrl #(
       $finish;
     end
   end
+
   assign rdata_o = '0;
 endmodule
 
ParseResult:
MOV HdlStmIf@@ to body
HdlStmIf
    HdlOp: GE
        list: ops
            HdlValueId: sim_finish
            HdlValueInt: 010
    HdlStmBlock: SEQ
        list: body
            HdlOp: CALL
                list: ops
                    HdlValueId: $finish
    list: elifs

UPD HdlStmProcess@@ to 
    DEL list@@sensitivity from 
    list: sensitivity
        HdlOp: RISING
            list: ops
                HdlValueId: clk_i
        HdlOp: FALLING
            list: ops
                HdlValueId: rst_ni
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL HdlStmProcessTriggerConstrain@@FF from 

DEL HdlStmProcess@@ from objs


CommitId: d65d139663d32e8b509e5aa5af2b848daab74a6b
[csrng/rtl] added fatal alert
--- a/hw/ip/csrng/rtl/csrng_block_encrypt.sv
+++ b/hw/ip/csrng/rtl/csrng_block_encrypt.sv
@@ -30,6 +30,7 @@ module csrng_block_encrypt #(
   output logic [Cmd-1:0]     block_encrypt_cmd_o,
   output logic [StateId-1:0] block_encrypt_id_o,
   output logic [BlkLen-1:0]  block_encrypt_v_o,
+  output logic               block_encrypt_aes_cipher_sm_err_o,
   output logic [2:0]         block_encrypt_sfifo_blkenc_err_o
 );
 

ParseResult:
INS HdlIdDef@@block_encrypt_aes_cipher_sm_err_o to ports
HdlIdDef: block_encrypt_aes_cipher_sm_err_o
    HdlValueId: logic
    HdlDirection: OUT


CommitId: d65d139663d32e8b509e5aa5af2b848daab74a6b
[csrng/rtl] added fatal alert
--- a/hw/ip/csrng/rtl/csrng_block_encrypt.sv
+++ b/hw/ip/csrng/rtl/csrng_block_encrypt.sv
@@ -43,7 +44,7 @@ module csrng_block_encrypt #(
   logic                       sfifo_blkenc_push;
   logic [BlkEncFifoWidth-1:0] sfifo_blkenc_wdata;
   logic                       sfifo_blkenc_pop;
-  logic                       sfifo_blkenc_not_full;
+  logic                       sfifo_blkenc_full;
   logic                       sfifo_blkenc_not_empty;
   // breakout
   logic [Cmd-1:0]             sfifo_blkenc_cmd;

ParseResult:
UPD HdlIdDef@@sfifo_blkenc_not_full to sfifo_blkenc_full


CommitId: d65d139663d32e8b509e5aa5af2b848daab74a6b
[csrng/rtl] added fatal alert
--- a/hw/ip/csrng/rtl/csrng_block_encrypt.sv
+++ b/hw/ip/csrng/rtl/csrng_block_encrypt.sv
@@ -132,19 +133,19 @@ module csrng_block_encrypt #(
     .rst_ni   (rst_ni),
     .clr_i    (!block_encrypt_enable_i),
     .wvalid_i (sfifo_blkenc_push),
-    .wready_o (sfifo_blkenc_not_full),
+    .wready_o (),
     .wdata_i  (sfifo_blkenc_wdata),
     .rvalid_o (sfifo_blkenc_not_empty),
     .rready_i (sfifo_blkenc_pop),
     .rdata_o  (sfifo_blkenc_rdata),
-    .full_o   (),
+    .full_o   (sfifo_blkenc_full),
     .depth_o  ()
   );
 
-  assign sfifo_blkenc_push = block_encrypt_req_i && sfifo_blkenc_not_full;
+  assign sfifo_blkenc_push = block_encrypt_req_i && !sfifo_blkenc_full;
   assign sfifo_blkenc_wdata = {block_encrypt_v_i,block_encrypt_id_i,block_encrypt_cmd_i};
 
-  assign block_encrypt_rdy_o = !aes_cipher_core_enable ? sfifo_blkenc_not_full : cipher_in_ready;
+  assign block_encrypt_rdy_o = !aes_cipher_core_enable ? !sfifo_blkenc_full : cipher_in_ready;
 
   assign sfifo_blkenc_pop = block_encrypt_ack_o;
   assign {sfifo_blkenc_v,sfifo_blkenc_id,sfifo_blkenc_cmd} = sfifo_blkenc_rdata;

ParseResult:
UPD HdlStmAssign@@ to 
    UPD HdlOp@@AND_LOG to AND_LOG
        INS HdlOp@@NEG_LOG to ops
        UPD HdlOp@@NEG_LOG to NEG_LOG
            INS list@@ops to NEG_LOG

UPD HdlStmAssign@@ to 
    UPD HdlOp@@TERNARY to TERNARY
        INS HdlOp@@NEG_LOG to ops
        UPD HdlOp@@NEG_LOG to NEG_LOG
            INS list@@ops to NEG_LOG

UPD HdlStmAssign@@ to 
    UPD HdlOp@@AND_LOG to AND_LOG
        UPD HdlValueId@@sfifo_blkenc_not_full to sfifo_blkenc_full
        MOV HdlValueId@@sfifo_blkenc_not_full to ops
        HdlValueId: sfifo_blkenc_not_full

UPD HdlStmAssign@@ to 
    UPD HdlOp@@TERNARY to TERNARY
        UPD HdlValueId@@sfifo_blkenc_not_full to sfifo_blkenc_full
        MOV HdlValueId@@sfifo_blkenc_not_full to ops
        HdlValueId: sfifo_blkenc_not_full


CommitId: d65d139663d32e8b509e5aa5af2b848daab74a6b
[csrng/rtl] added fatal alert
--- a/hw/ip/csrng/rtl/csrng_block_encrypt.sv
+++ b/hw/ip/csrng/rtl/csrng_block_encrypt.sv
@@ -158,8 +159,8 @@ module csrng_block_encrypt #(
   assign cipher_out_ready = block_encrypt_rdy_i;
 
   assign block_encrypt_sfifo_blkenc_err_o =
-         {(sfifo_blkenc_push && !sfifo_blkenc_not_full),
+         {(sfifo_blkenc_push && sfifo_blkenc_full),
           (sfifo_blkenc_pop && !sfifo_blkenc_not_empty),
-          (!sfifo_blkenc_not_full && !sfifo_blkenc_not_empty)};
+          (sfifo_blkenc_full && !sfifo_blkenc_not_empty)};
 
 endmodule
ParseResult:
UPD HdlStmAssign@@ to 
    UPD HdlOp@@CONCAT to CONCAT
        UPD HdlOp@@AND_LOG to AND_LOG
            UPD HdlOp@@NEG_LOG to NEG_LOG
                UPD HdlValueId@@sfifo_blkenc_not_full to sfifo_blkenc_full
                MOV HdlValueId@@sfifo_blkenc_not_full to ops
                HdlValueId: sfifo_blkenc_not_full
                DEL list@@ops from NEG_LOG
            DEL HdlOp@@NEG_LOG from ops
        UPD HdlOp@@CONCAT to CONCAT
            UPD HdlOp@@AND_LOG to AND_LOG
                UPD HdlOp@@NEG_LOG to NEG_LOG
                    UPD HdlValueId@@sfifo_blkenc_not_full to sfifo_blkenc_full
                    MOV HdlValueId@@sfifo_blkenc_not_full to ops
                    HdlValueId: sfifo_blkenc_not_full
                    DEL list@@ops from NEG_LOG
                DEL HdlOp@@NEG_LOG from ops


CommitId: 4f735bc6e72691152b3a87dd7d29bb394be5c785
Update lowrisc_ibex to lowRISC/ibex@dd39ec0
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_pmp.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_pmp.sv
@@ -72,12 +72,13 @@ module ibex_pmp #(
   for (genvar c = 0; c < PMPNumChan; c++) begin : g_access_check
     for (genvar r = 0; r < PMPNumRegions; r++) begin : g_regions
       // TOR Region high/low matching is reused for all match types
-      assign region_match_low[c][r]     = (pmp_req_addr_i[c][33:PMPGranularity+2] >=
-                                           // Comparators are sized according to granularity
-                                           (region_start_addr[r][33:PMPGranularity+2] &
-                                            region_addr_mask[r]));
-      assign region_match_high[c][r]    = (pmp_req_addr_i[c][33:PMPGranularity+2] <=
-                                           csr_pmp_addr_i[r][33:PMPGranularity+2]);
+      // Comparators are sized according to granularity
+      assign region_match_low[c][r]     = pmp_req_addr_i[c][33:PMPGranularity+2] >=
+                                          (region_start_addr[r][33:PMPGranularity+2] &
+                                           region_addr_mask[r]);
+      assign region_match_high[c][r]    = (pmp_req_addr_i[c][33:PMPGranularity+2] &
+                                           region_addr_mask[r]) <
+                                          csr_pmp_addr_i[r][33:PMPGranularity+2];
       assign region_match_both[c][r]    = region_match_low[c][r] & region_match_high[c][r] &
                                           (csr_pmp_cfg_i[r].mode != PMP_MODE_OFF);
       // Check specific required permissions
ParseResult:
UPD HdlStmAssign@@ to 
    UPD HdlOp@@LE to LT
    UPD HdlOp@@LE to LE
        MOV HdlOp@@INDEX to ops
        HdlOp: INDEX
            list: ops
                HdlOp: INDEX
                    list: ops
                        HdlValueId: pmp_req_addr_i
                        HdlValueId: c
                HdlOp: DOWNTO
                    list: ops
                        HdlValueInt: 33
                        HdlOp: ADD
                            list: ops
                                HdlValueId: PMPGranularity
                                HdlValueInt: 2

UPD HdlStmAssign@@ to 
    UPD HdlOp@@LT to LT
        INS HdlOp@@AND to ops
        UPD HdlOp@@AND to AND
            INS list@@ops to AND
            INS HdlOp@@INDEX to ops
            HdlOp: INDEX
                list: ops
                    HdlValueId: region_addr_mask
                    HdlValueId: r


CommitId: 8484ee48059293e41bb8fa87bf8ecf3061af9159
[csrng/rtl] fix for app command arbiter
--- a/hw/ip/csrng/rtl/csrng_core.sv
+++ b/hw/ip/csrng/rtl/csrng_core.sv
@@ -277,6 +277,7 @@ module csrng_core import csrng_pkg::*; #(
   logic [NApps-1:0]       cmd_stage_rdy;
   logic [NApps-1:0]       cmd_arb_req;
   logic [NApps-1:0]       cmd_arb_gnt;
+  logic [$clog2(NApps)-1:0] cmd_arb_idx;
   logic [NApps-1:0]       cmd_arb_sop;
   logic [NApps-1:0]       cmd_arb_mop;
   logic [NApps-1:0]       cmd_arb_eop;

ParseResult:
INS HdlIdDef@@cmd_arb_idx to objs
HdlIdDef: cmd_arb_idx
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlOp: SUB
                        list: ops
                            HdlOp: CALL
                                list: ops
                                    HdlValueId: $clog2
                                    HdlValueId: NApps
                            HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: INTERNAL


CommitId: 8484ee48059293e41bb8fa87bf8ecf3061af9159
[csrng/rtl] fix for app command arbiter
--- a/hw/ip/csrng/rtl/csrng_core.sv
+++ b/hw/ip/csrng/rtl/csrng_core.sv
@@ -322,6 +323,7 @@ module csrng_core import csrng_pkg::*; #(
   logic [3:0]  shid_q, shid_d;
   logic        gen_last_q, gen_last_d;
   logic        flag0_q, flag0_d;
+  logic [$clog2(NApps)-1:0] cmd_arb_idx_q, cmd_arb_idx_d;
   logic        statedb_wr_select_q, statedb_wr_select_d;
   logic        genbits_stage_fips_sw_q, genbits_stage_fips_sw_d;
   logic        cmd_req_dly_q, cmd_req_dly_d;

ParseResult:
INS HdlIdDef@@cmd_arb_idx_q to objs
HdlIdDef: cmd_arb_idx_q
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlOp: SUB
                        list: ops
                            HdlOp: CALL
                                list: ops
                                    HdlValueId: $clog2
                                    HdlValueId: NApps
                            HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: INTERNAL

INS HdlIdDef@@cmd_arb_idx_d to objs
HdlIdDef: cmd_arb_idx_d
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlOp: SUB
                        list: ops
                            HdlOp: CALL
                                list: ops
                                    HdlValueId: $clog2
                                    HdlValueId: NApps
                            HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: INTERNAL


CommitId: 8484ee48059293e41bb8fa87bf8ecf3061af9159
[csrng/rtl] fix for app command arbiter
--- a/hw/ip/csrng/rtl/csrng_core.sv
+++ b/hw/ip/csrng/rtl/csrng_core.sv
@@ -337,6 +339,7 @@ module csrng_core import csrng_pkg::*; #(
       shid_q  <= '0;
       gen_last_q <= '0;
       flag0_q <= '0;
+      cmd_arb_idx_q <= '0;
       statedb_wr_select_q <= '0;
       genbits_stage_fips_sw_q <= '0;
       cmd_req_dly_q <= '0;

ParseResult:
INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: cmd_arb_idx_q


CommitId: 8484ee48059293e41bb8fa87bf8ecf3061af9159
[csrng/rtl] fix for app command arbiter
--- a/hw/ip/csrng/rtl/csrng_core.sv
+++ b/hw/ip/csrng/rtl/csrng_core.sv
@@ -350,6 +353,7 @@ module csrng_core import csrng_pkg::*; #(
       shid_q  <= shid_d;
       gen_last_q <= gen_last_d;
       flag0_q <= flag0_d;
+      cmd_arb_idx_q <= cmd_arb_idx_d;
       statedb_wr_select_q <= statedb_wr_select_d;
       genbits_stage_fips_sw_q <= genbits_stage_fips_sw_d;
       cmd_req_dly_q <= cmd_req_dly_d;

ParseResult:
INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueId: cmd_arb_idx_d
    HdlValueId: cmd_arb_idx_q


CommitId: 8484ee48059293e41bb8fa87bf8ecf3061af9159
[csrng/rtl] fix for app command arbiter
--- a/hw/ip/csrng/rtl/csrng_core.sv
+++ b/hw/ip/csrng/rtl/csrng_core.sv
@@ -786,25 +790,27 @@ module csrng_core import csrng_pkg::*; #(
   // and processed by the main state machine
   // logic block.
 
+  assign cmd_arb_idx_d = (acmd_avail && acmd_accept) ? cmd_arb_idx : cmd_arb_idx_q;
 
-  // create control bus for commands
-  assign acmd_sop = (|cmd_arb_sop);
-  assign acmd_mop = (|cmd_arb_mop);
-  assign acmd_eop = (|cmd_arb_eop);
+  assign acmd_sop = cmd_arb_sop[cmd_arb_idx_q];
+  assign acmd_mop = cmd_arb_mop[cmd_arb_idx_q];
+  assign acmd_eop = cmd_arb_eop[cmd_arb_idx_q];
+  assign acmd_bus = cmd_arb_bus[cmd_arb_idx_q];
 
   prim_arbiter_ppc #(
+    .EnDataPort(0),    // Ignore data port
     .N(NApps),  // Number of request ports
-    .DW(AppCmdWidth) // Data width
+    .DW(1) // Data width
   ) u_prim_arbiter_ppc_acmd (
     .clk_i(clk_i),
     .rst_ni(rst_ni),
     .req_chk_i(1'b1),
     .req_i(cmd_arb_req),
-    .data_i(cmd_arb_bus),
+    .data_i('{default: 1'b0}),
     .gnt_o(cmd_arb_gnt),
-    .idx_o(), // NC
+    .idx_o(cmd_arb_idx),
     .valid_o(acmd_avail), // 1 req
-    .data_o(acmd_bus), // info with req
+    .data_o(), //NC
     .ready_i(acmd_accept) // 1 fsm rdy
   );
 
ParseResult:
INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: TERNARY
        list: ops
            HdlOp: AND_LOG
                list: ops
                    HdlValueId: acmd_avail
                    HdlValueId: acmd_accept
            HdlValueId: cmd_arb_idx
            HdlValueId: cmd_arb_idx_q
    HdlValueId: cmd_arb_idx_d

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: INDEX
        list: ops
            HdlValueId: cmd_arb_sop
            HdlValueId: cmd_arb_idx_q
    HdlValueId: acmd_sop

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: INDEX
        list: ops
            HdlValueId: cmd_arb_mop
            HdlValueId: cmd_arb_idx_q
    HdlValueId: acmd_mop

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: INDEX
        list: ops
            HdlValueId: cmd_arb_eop
            HdlValueId: cmd_arb_idx_q
    HdlValueId: acmd_eop

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: INDEX
        list: ops
            HdlValueId: cmd_arb_bus
            HdlValueId: cmd_arb_idx_q
    HdlValueId: acmd_bus

DEL HdlStmAssign@@ from objs
HdlStmAssign
    HdlOp: OR_UNARY
        list: ops
            HdlValueId: cmd_arb_sop
    HdlValueId: acmd_sop

DEL HdlStmAssign@@ from objs
HdlStmAssign
    HdlOp: OR_UNARY
        list: ops
            HdlValueId: cmd_arb_mop
    HdlValueId: acmd_mop

DEL HdlStmAssign@@ from objs
HdlStmAssign
    HdlOp: OR_UNARY
        list: ops
            HdlValueId: cmd_arb_eop
    HdlValueId: acmd_eop


CommitId: 695b0289e9b8fe1e144b1dbb1ea123a7462b2dd7
[usb/top] Remove AND gates on non-AON domain and rename 3.3V signal
--- a/hw/top_earlgrey/rtl/autogen/chip_earlgrey_asic.sv
+++ b/hw/top_earlgrey/rtl/autogen/chip_earlgrey_asic.sv
@@ -728,11 +728,11 @@ module chip_earlgrey_asic (
 
   // Pullups
   logic usb_pullup_p_en, usb_pullup_n_en;
-  assign usb_pullup_p_en = dio_out[DioUsbdevDpPullup] & dio_oe[DioUsbdevDpPullup];
-  assign usb_pullup_n_en = dio_out[DioUsbdevDnPullup] & dio_oe[DioUsbdevDnPullup];
+  assign usb_pullup_p_en = dio_out[DioUsbdevDpPullup];
+  assign usb_pullup_n_en = dio_out[DioUsbdevDnPullup];
 
   logic usb_rx_enable;
-  assign usb_rx_enable = dio_out[DioUsbdevRxEnable] & dio_oe[DioUsbdevRxEnable];
+  assign usb_rx_enable = dio_out[DioUsbdevRxEnable];
 
   logic [ast_pkg::UsbCalibWidth-1:0] usb_io_pu_cal;
 

ParseResult:
UPD HdlStmAssign@@ to 
    UPD HdlOp@@AND to AND
        MOV HdlOp@@INDEX to ops
        HdlOp: INDEX
            list: ops
                HdlValueId: dio_out
                HdlValueId: DioUsbdevDpPullup
        MOV HdlOp@@INDEX to ops
        HdlOp: INDEX
            list: ops
                HdlValueId: dio_oe
                HdlValueId: DioUsbdevDpPullup
        DEL list@@ops from AND
    DEL HdlOp@@AND from 

UPD HdlStmAssign@@ to 
    UPD HdlOp@@AND to AND
        MOV HdlOp@@INDEX to ops
        HdlOp: INDEX
            list: ops
                HdlValueId: dio_out
                HdlValueId: DioUsbdevDnPullup
        MOV HdlOp@@INDEX to ops
        HdlOp: INDEX
            list: ops
                HdlValueId: dio_oe
                HdlValueId: DioUsbdevDnPullup
        DEL list@@ops from AND
    DEL HdlOp@@AND from 

UPD HdlStmAssign@@ to 
    UPD HdlOp@@AND to AND
        MOV HdlOp@@INDEX to ops
        HdlOp: INDEX
            list: ops
                HdlValueId: dio_out
                HdlValueId: DioUsbdevRxEnable
        MOV HdlOp@@INDEX to ops
        HdlOp: INDEX
            list: ops
                HdlValueId: dio_oe
                HdlValueId: DioUsbdevRxEnable
        DEL list@@ops from AND
    DEL HdlOp@@AND from 


CommitId: 695b0289e9b8fe1e144b1dbb1ea123a7462b2dd7
[usb/top] Remove AND gates on non-AON domain and rename 3.3V signal
--- a/hw/top_earlgrey/rtl/autogen/chip_earlgrey_asic.sv
+++ b/hw/top_earlgrey/rtl/autogen/chip_earlgrey_asic.sv
@@ -781,12 +781,15 @@ module chip_earlgrey_asic (
     dio_oe[DioUsbdevSuspend],
     dio_attr[DioUsbdevSuspend],
     // Rx enable
+    dio_oe[DioUsbdevRxEnable],
     dio_attr[DioUsbdevRxEnable],
     // D is used as an input only
     dio_out[DioUsbdevD],
     dio_oe[DioUsbdevD],
     dio_attr[DioUsbdevD],
     // Pullup/down
+    dio_oe[DioUsbdevDpPullup],
+    dio_oe[DioUsbdevDnPullup],
     dio_attr[DioUsbdevDpPullup],
     dio_attr[DioUsbdevDnPullup]
   };
ParseResult:
UPD HdlStmAssign@@ to 
    UPD HdlOp@@XOR_UNARY to XOR_UNARY
        UPD HdlOp@@CONCAT to CONCAT
            INS HdlOp@@CONCAT to ops
            UPD HdlOp@@CONCAT to CONCAT
                INS list@@ops to CONCAT
                INS HdlOp@@CONCAT to ops
                UPD HdlOp@@CONCAT to CONCAT
                    INS list@@ops to CONCAT
                    UPD HdlOp@@CONCAT to CONCAT
                        UPD HdlOp@@CONCAT to CONCAT
                            UPD HdlOp@@CONCAT to CONCAT
                                UPD HdlOp@@CONCAT to CONCAT
                                    UPD HdlOp@@CONCAT to CONCAT
                                        INS HdlOp@@CONCAT to ops
                                        UPD HdlOp@@CONCAT to CONCAT
                                            INS list@@ops to CONCAT

UPD HdlStmAssign@@ to 
    UPD HdlOp@@XOR_UNARY to XOR_UNARY
        UPD HdlOp@@CONCAT to CONCAT
            UPD HdlOp@@CONCAT to CONCAT
                MOV HdlOp@@INDEX to ops
                HdlOp: INDEX
                    list: ops
                        HdlValueId: dio_attr
                        HdlValueId: DioUsbdevDpPullup
                UPD HdlOp@@CONCAT to CONCAT
                    UPD HdlOp@@CONCAT to CONCAT
                        UPD HdlOp@@CONCAT to CONCAT
                            UPD HdlOp@@CONCAT to CONCAT
                                MOV HdlOp@@CONCAT to ops
                                HdlOp: CONCAT
                                    list: ops
                                        HdlOp: CONCAT
                                            list: ops
                                                HdlOp: CONCAT
                                                    list: ops
                                                        HdlOp: CONCAT
                                                            list: ops
                                                                HdlOp: CONCAT
                                                                    list: ops
                                                                        HdlOp: CONCAT
                                                                            list: ops
                                                                                HdlOp: CONCAT
                                                                                    list: ops
                                                                                        HdlOp: CONCAT
                                                                                            list: ops
                                                                                                HdlOp: CONCAT
                                                                                                    list: ops
                                                                                                        HdlOp: CONCAT
                                                                                                            list: ops
                                                                                                                HdlOp: CONCAT
                                                                                                                    list: ops
                                                                                                                        HdlOp: INDEX
                                                                                                                            list: ops
                                                                                                                                HdlValueId: dio_out
                                                                                                                                HdlValueId: DioUsbdevSense
                                                                                                                        HdlOp: INDEX
                                                                                                                            list: ops
                                                                                                                                HdlValueId: dio_oe
                                                                                                                                HdlValueId: DioUsbdevSense
                                                                                                                HdlOp: INDEX
                                                                                                                    list: ops
                                                                                                                        HdlValueId: dio_attr
                                                                                                                        HdlValueId: DioUsbdevSense
                                                                                                        HdlOp: INDEX
                                                                                                            list: ops
                                                                                                                HdlValueId: dio_out
                                                                                                                HdlValueId: DioUsbdevSe0
                                                                                                HdlOp: INDEX
                                                                                                    list: ops
                                                                                                        HdlValueId: dio_oe
                                                                                                        HdlValueId: DioUsbdevSe0
                                                                                        HdlOp: INDEX
                                                                                            list: ops
                                                                                                HdlValueId: dio_attr
                                                                                                HdlValueId: DioUsbdevSe0
                                                                                HdlOp: INDEX
                                                                                    list: ops
                                                                                        HdlValueId: dio_out
                                                                                        HdlValueId: DioUsbdevTxModeSe
                                                                        HdlOp: INDEX
                                                                            list: ops
                                                                                HdlValueId: dio_oe
                                                                                HdlValueId: DioUsbdevTxModeSe
                                                                HdlOp: INDEX
                                                                    list: ops
                                                                        HdlValueId: dio_attr
                                                                        HdlValueId: DioUsbdevTxModeSe
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlValueId: dio_out
                                                                HdlValueId: DioUsbdevSuspend
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: dio_oe
                                                        HdlValueId: DioUsbdevSuspend
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: dio_attr
                                                HdlValueId: DioUsbdevSuspend
            MOV HdlOp@@CONCAT to ops
            HdlOp: CONCAT
                list: ops
                    HdlOp: CONCAT
                        list: ops
                            HdlOp: CONCAT
                                list: ops
                                    HdlOp: CONCAT
                                        list: ops
                                            HdlOp: CONCAT
                                                list: ops
                                                    HdlOp: CONCAT
                                                        list: ops
                                                            HdlOp: CONCAT
                                                                list: ops
                                                                    HdlOp: CONCAT
                                                                        list: ops
                                                                            HdlOp: CONCAT
                                                                                list: ops
                                                                                    HdlOp: CONCAT
                                                                                        list: ops
                                                                                            HdlOp: CONCAT
                                                                                                list: ops
                                                                                                    HdlOp: CONCAT
                                                                                                        list: ops
                                                                                                            HdlOp: CONCAT
                                                                                                                list: ops
                                                                                                                    HdlOp: CONCAT
                                                                                                                        list: ops
                                                                                                                            HdlOp: CONCAT
                                                                                                                                list: ops
                                                                                                                                    HdlOp: CONCAT
                                                                                                                                        list: ops
                                                                                                                                            HdlOp: INDEX
                                                                                                                                                list: ops
                                                                                                                                                    HdlValueId: dio_out
                                                                                                                                                    HdlValueId: DioUsbdevSense
                                                                                                                                            HdlOp: INDEX
                                                                                                                                                list: ops
                                                                                                                                                    HdlValueId: dio_oe
                                                                                                                                                    HdlValueId: DioUsbdevSense
                                                                                                                                    HdlOp: INDEX
                                                                                                                                        list: ops
                                                                                                                                            HdlValueId: dio_attr
                                                                                                                                            HdlValueId: DioUsbdevSense
                                                                                                                            HdlOp: INDEX
                                                                                                                                list: ops
                                                                                                                                    HdlValueId: dio_out
                                                                                                                                    HdlValueId: DioUsbdevSe0
                                                                                                                    HdlOp: INDEX
                                                                                                                        list: ops
                                                                                                                            HdlValueId: dio_oe
                                                                                                                            HdlValueId: DioUsbdevSe0
                                                                                                            HdlOp: INDEX
                                                                                                                list: ops
                                                                                                                    HdlValueId: dio_attr
                                                                                                                    HdlValueId: DioUsbdevSe0
                                                                                                    HdlOp: INDEX
                                                                                                        list: ops
                                                                                                            HdlValueId: dio_out
                                                                                                            HdlValueId: DioUsbdevTxModeSe
                                                                                            HdlOp: INDEX
                                                                                                list: ops
                                                                                                    HdlValueId: dio_oe
                                                                                                    HdlValueId: DioUsbdevTxModeSe
                                                                                    HdlOp: INDEX
                                                                                        list: ops
                                                                                            HdlValueId: dio_attr
                                                                                            HdlValueId: DioUsbdevTxModeSe
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlValueId: dio_out
                                                                                    HdlValueId: DioUsbdevSuspend
                                                                    HdlOp: INDEX
                                                                        list: ops
                                                                            HdlValueId: dio_oe
                                                                            HdlValueId: DioUsbdevSuspend
                                                            HdlOp: INDEX
                                                                list: ops
                                                                    HdlValueId: dio_attr
                                                                    HdlValueId: DioUsbdevSuspend
                                                    HdlOp: INDEX
                                                        list: ops
                                                            HdlValueId: dio_attr
                                                            HdlValueId: DioUsbdevRxEnable
                                            HdlOp: INDEX
                                                list: ops
                                                    HdlValueId: dio_out
                                                    HdlValueId: DioUsbdevD
                                    HdlOp: INDEX
                                        list: ops
                                            HdlValueId: dio_oe
                                            HdlValueId: DioUsbdevD
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: dio_attr
                                    HdlValueId: DioUsbdevD
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: dio_attr
                            HdlValueId: DioUsbdevDpPullup


CommitId: d2e1184308b9582551252d1135a126ea558a6ab8
Revert "[usbdev] Fixes for I/O modes and expand their tests"
--- a/hw/ip/usbdev/rtl/usbdev_iomux.sv
+++ b/hw/ip/usbdev/rtl/usbdev_iomux.sv
@@ -40,11 +40,12 @@ module usbdev_iomux
 
   // Internal USB Interface (usb clk)
   output logic                          usb_rx_d_o,
-  output logic                          usb_rx_dp_o,
-  output logic                          usb_rx_dn_o,
+  output logic                          usb_rx_se0_o,
+
   input  logic                          usb_tx_d_i,
   input  logic                          usb_tx_se0_i,
   input  logic                          usb_tx_oe_i,
+
   output logic                          usb_pwr_sense_o,
   input  logic                          usb_pullup_en_i,
   input  logic                          usb_suspend_i

ParseResult:
UPD HdlIdDef@@usb_rx_dp_o to usb_rx_dn

MOV HdlIdDef@@usb_rx_dp_o to ports
HdlIdDef: usb_rx_dp_o
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: OUT

UPD HdlIdDef@@usb_rx_dn_o to usb_rx_se0_o

UPD HdlIdDef@@usb_rx_dp_o to usb_rx_dp_o
    UPD HdlDirection@@OUT to INTERNAL


CommitId: d2e1184308b9582551252d1135a126ea558a6ab8
Revert "[usbdev] Fixes for I/O modes and expand their tests"
--- a/hw/ip/usbdev/rtl/usbdev_iomux.sv
+++ b/hw/ip/usbdev/rtl/usbdev_iomux.sv
@@ -52,16 +53,15 @@ module usbdev_iomux
 
   logic async_pwr_sense, sys_usb_sense;
   logic cio_usb_dp, cio_usb_dn, cio_usb_d;
+  logic usb_rx_dp, usb_rx_dn, usb_rx_d;
   logic pinflip;
   logic unused_eop_single_bit;
-  logic unused_rx_differential_mode;
   logic unused_usb_ref_disable;
   logic unused_tx_osc_test_mode;
 
-  assign unused_eop_single_bit       = sys_reg2hw_config_i.eop_single_bit.q;
-  assign unused_usb_ref_disable      = sys_reg2hw_config_i.usb_ref_disable.q;
-  assign unused_tx_osc_test_mode     = sys_reg2hw_config_i.tx_osc_test_mode.q;
-  assign unused_rx_differential_mode = sys_reg2hw_config_i.rx_differential_mode.q;
+  assign unused_eop_single_bit   = sys_reg2hw_config_i.eop_single_bit.q;
+  assign unused_usb_ref_disable  = sys_reg2hw_config_i.usb_ref_disable.q;
+  assign unused_tx_osc_test_mode = sys_reg2hw_config_i.tx_osc_test_mode.q;
 
   //////////
   // CDCs //

ParseResult:
MOV HdlIdDef@@unused_rx_differential_mode to objs
HdlIdDef: unused_rx_differential_mode
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

INS HdlIdDef@@usb_rx_dp to objs
HdlIdDef: usb_rx_dp
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

UPD HdlIdDef@@unused_rx_differential_mode to usb_rx_d

UPD HdlStmAssign@@ to 
    MOV HdlOp@@DOT to 
    HdlOp: DOT
        list: ops
            HdlOp: DOT
                list: ops
                    HdlValueId: sys_reg2hw_config_i
                    HdlValueId: rx_differential_mode
            HdlValueId: q
    DEL HdlValueId@@unused_rx_differential_mode from 

DEL HdlStmAssign@@ from objs


CommitId: d2e1184308b9582551252d1135a126ea558a6ab8
Revert "[usbdev] Fixes for I/O modes and expand their tests"
--- a/hw/ip/usbdev/rtl/usbdev_iomux.sv
+++ b/hw/ip/usbdev/rtl/usbdev_iomux.sv
@@ -140,10 +139,26 @@ module usbdev_iomux
   // USB input pin mux //
   ///////////////////////
 
+  // Note that while transmitting, we fix the receive line to 1. If the receive line isn't fixed,
+  // we are trying to regenerate the bit clock from the bit clock we are regenerating, rather than
+  // just holding the phase.
   // D+/D- can be swapped based on a config register.
-  assign usb_rx_dp_o = pinflip ?  cio_usb_dn : cio_usb_dp;
-  assign usb_rx_dn_o = pinflip ?  cio_usb_dp : cio_usb_dn;
-  assign usb_rx_d_o  = pinflip ? ~cio_usb_d  : cio_usb_d;
+  assign usb_rx_dp = usb_tx_oe_i ? 1'b1 : (pinflip ?  cio_usb_dn : cio_usb_dp);
+  assign usb_rx_dn = usb_tx_oe_i ? 1'b0 : (pinflip ?  cio_usb_dp : cio_usb_dn);
+  assign usb_rx_d  = usb_tx_oe_i ? 1'b1 : (pinflip ? ~cio_usb_d  : cio_usb_d);
+
+  always_comb begin : proc_diff_se_mux_in
+    usb_rx_se0_o = ~usb_rx_dp & ~usb_rx_dn;
+
+    if (sys_reg2hw_config_i.rx_differential_mode.q) begin
+      // Differential RX mode
+      usb_rx_d_o = usb_rx_d;
+
+    end else begin
+      // Single-ended RX mode
+      usb_rx_d_o = usb_rx_dp; // SE1 is interpreted as differential 1
+    end
+  end
 
   // Power sense mux
   always_comb begin : proc_mux_pwr_sense
ParseResult:
INS HdlStmProcess@@ to objs

UPD HdlStmAssign@@ to 
    INS HdlOp@@TERNARY to 
    UPD HdlOp@@TERNARY to TERNARY
        INS list@@ops to TERNARY
        INS HdlValueId@@usb_tx_oe_i to ops
        INS HdlValueInt@@1 to ops

UPD HdlStmAssign@@ to 
    UPD HdlValueId@@usb_rx_dp_o to usb_rx_dp
    MOV HdlOp@@TERNARY to 
    HdlOp: TERNARY
        list: ops
            HdlValueId: pinflip
            HdlValueId: cio_usb_dn
            HdlValueId: cio_usb_dp

UPD HdlStmAssign@@ to 
    INS HdlOp@@TERNARY to 
    UPD HdlOp@@TERNARY to TERNARY
        INS list@@ops to TERNARY
        INS HdlValueId@@usb_tx_oe_i to ops
        INS HdlValueInt@@0 to ops

UPD HdlStmAssign@@ to 
    UPD HdlValueId@@usb_rx_dn_o to usb_rx_dn
    MOV HdlOp@@TERNARY to 
    HdlOp: TERNARY
        list: ops
            HdlValueId: pinflip
            HdlValueId: cio_usb_dp
            HdlValueId: cio_usb_dn

UPD HdlStmAssign@@ to 
    INS HdlOp@@TERNARY to 
    UPD HdlOp@@TERNARY to TERNARY
        INS list@@ops to TERNARY
        INS HdlValueId@@usb_tx_oe_i to ops
        INS HdlValueInt@@1 to ops

UPD HdlStmAssign@@ to 
    UPD HdlValueId@@usb_rx_d_o to usb_rx_d
    MOV HdlOp@@TERNARY to 
    HdlOp: TERNARY
        list: ops
            HdlValueId: pinflip
            HdlOp: NEG
                list: ops
                    HdlValueId: cio_usb_d
            HdlValueId: cio_usb_d

UPD HdlStmProcess@@ to 
    INS HdlStmBlock@@SEQ to 
    INS HdlStmProcessTriggerConstrain@@COMB to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: usb_rx_se0_o
                HdlOp: AND
                    list: ops
                        HdlOp: NEG
                            list: ops
                                HdlValueId: usb_rx_dp
                        HdlOp: NEG
                            list: ops
                                HdlValueId: usb_rx_dn

INS HdlStmIf@@ to body


CommitId: d6cca470fc37b7755480cfb61016854a6b3835b4
[entropy_src/rtl] fix for bypass mode
--- a/hw/ip/entropy_src/rtl/entropy_src_main_sm.sv
+++ b/hw/ip/entropy_src/rtl/entropy_src_main_sm.sv
@@ -152,6 +152,8 @@ module entropy_src_main_sm #(
       StartupHTStart: begin
         if (!enable_i || sfifo_esfinal_full_i) begin
           state_d = Idle;
+        end else if (bypass_mode_i) begin
+          state_d = BootHTRunning;
         end else begin
           sha3_start_o = 1'b1;
           state_d = StartupPhase1;
ParseResult:
UPD HdlStmIf@@ to 
    INS tuple@@ to elifs
    tuple
        HdlValueId: bypass_mode_i
        HdlStmBlock: SEQ
            list: body
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: state_d
                        HdlValueId: BootHTRunning


CommitId: 17e9624c452e05f71f4ad2b7c75bf6bbb071c324
Update lowrisc_ibex to lowRISC/ibex@ee1098f
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_pmp.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_pmp.sv
@@ -19,8 +19,7 @@ module ibex_pmp #(
     input  ibex_pkg::pmp_cfg_t      csr_pmp_cfg_i  [PMPNumRegions],
     input  logic [33:0]             csr_pmp_addr_i [PMPNumRegions],
 
-    input  ibex_pkg::priv_lvl_e     priv_mode_i,    // Current priv mode, assumed to
-                                                    // be the same for all channels
+    input  ibex_pkg::priv_lvl_e     priv_mode_i    [PMPNumChan],
     // Access checking channels
     input  logic [33:0]             pmp_req_addr_i [PMPNumChan],
     input  ibex_pkg::pmp_req_e      pmp_req_type_i [PMPNumChan],

ParseResult:
UPD HdlIdDef@@priv_mode_i to priv_mode_i
    INS HdlOp@@INDEX to priv_mode_i
    UPD HdlOp@@INDEX to INDEX
        INS list@@ops to INDEX
        INS HdlValueId@@PMPNumChan to ops

UPD HdlIdDef@@priv_mode_i to priv_mode_i
    MOV HdlOp@@DOUBLE_COLON to priv_mode_i
    HdlOp: DOUBLE_COLON
        list: ops
            HdlValueId: ibex_pkg
            HdlValueId: priv_lvl_e


CommitId: 17e9624c452e05f71f4ad2b7c75bf6bbb071c324
Update lowrisc_ibex to lowRISC/ibex@ee1098f
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_pmp.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_pmp.sv
@@ -36,7 +35,6 @@ module ibex_pmp #(
   logic [PMPNumChan-1:0][PMPNumRegions-1:0]   region_match_high;
   logic [PMPNumChan-1:0][PMPNumRegions-1:0]   region_match_low;
   logic [PMPNumChan-1:0][PMPNumRegions-1:0]   region_match_both;
-  logic [PMPNumChan-1:0][PMPNumRegions-1:0]   region_match_partial;
   logic [PMPNumChan-1:0][PMPNumRegions-1:0]   region_perm_check;
   logic [PMPNumChan-1:0][PMPNumRegions-1:0]   machine_access_fault;
   logic [PMPNumChan-1:0][PMPNumRegions-1:0]   user_access_allowed;

ParseResult:
DEL HdlIdDef@@region_match_partial from objs
HdlIdDef: region_match_partial
    HdlOp: INDEX
        list: ops
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: logic
                    HdlOp: DOWNTO
                        list: ops
                            HdlOp: SUB
                                list: ops
                                    HdlValueId: PMPNumChan
                                    HdlValueInt: 1
                            HdlValueInt: 0
            HdlOp: DOWNTO
                list: ops
                    HdlOp: SUB
                        list: ops
                            HdlValueId: PMPNumRegions
                            HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: INTERNAL


CommitId: 17e9624c452e05f71f4ad2b7c75bf6bbb071c324
Update lowrisc_ibex to lowRISC/ibex@ee1098f
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_pmp.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_pmp.sv
@@ -81,12 +79,9 @@ module ibex_pmp #(
                                            (region_start_addr[r][33:PMPGranularity+2] &
                                             region_addr_mask[r]));
       assign region_match_high[c][r]    = (pmp_req_addr_i[c][33:PMPGranularity+2] <=
-                                           (csr_pmp_addr_i[r][33:PMPGranularity+2] &
-                                            region_addr_mask[r]));
+                                           csr_pmp_addr_i[r][33:PMPGranularity+2]);
       assign region_match_both[c][r]    = region_match_low[c][r] & region_match_high[c][r] &
                                           (csr_pmp_cfg_i[r].mode != PMP_MODE_OFF);
-      assign region_match_partial[c][r] = (region_match_low[c][r] ^ region_match_high[c][r]) &
-                                          (csr_pmp_cfg_i[r].mode != PMP_MODE_OFF);
       // Check specific required permissions
       assign region_perm_check[c][r] =
           ((pmp_req_type_i[c] == PMP_ACC_EXEC)  & csr_pmp_cfg_i[r].exec) |

ParseResult:
UPD HdlStmAssign@@ to 
    UPD HdlOp@@LE to LE
        UPD HdlOp@@AND to LE
        MOV HdlOp@@AND to ops
        HdlOp: AND
            list: ops
                HdlOp: INDEX
                    list: ops
                        HdlOp: INDEX
                            list: ops
                                HdlValueId: csr_pmp_addr_i
                                HdlValueId: r
                        HdlOp: DOWNTO
                            list: ops
                                HdlValueInt: 33
                                HdlOp: ADD
                                    list: ops
                                        HdlValueId: PMPGranularity
                                        HdlValueInt: 2
                HdlOp: INDEX
                    list: ops
                        HdlValueId: region_addr_mask
                        HdlValueId: r
        MOV HdlOp@@INDEX to ops
        HdlOp: INDEX
            list: ops
                HdlOp: INDEX
                    list: ops
                        HdlValueId: pmp_req_addr_i
                        HdlValueId: c
                HdlOp: DOWNTO
                    list: ops
                        HdlValueInt: 33
                        HdlOp: ADD
                            list: ops
                                HdlValueId: PMPGranularity
                                HdlValueInt: 2
        UPD HdlOp@@AND to AND
            DEL HdlOp@@INDEX from ops
            HdlOp: INDEX
                list: ops
                    HdlValueId: region_addr_mask
                    HdlValueId: r
        DEL list@@ops from LE
    DEL HdlOp@@LE from 

DEL HdlStmAssign@@ from body
HdlStmAssign
    HdlOp: AND
        list: ops
            HdlOp: XOR
                list: ops
                    HdlOp: INDEX
                        list: ops
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: region_match_low
                                    HdlValueId: c
                            HdlValueId: r
                    HdlOp: INDEX
                        list: ops
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: region_match_high
                                    HdlValueId: c
                            HdlValueId: r
            HdlOp: NE
                list: ops
                    HdlOp: DOT
                        list: ops
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: csr_pmp_cfg_i
                                    HdlValueId: r
                            HdlValueId: mode
                    HdlValueId: PMP_MODE_OFF
    HdlOp: INDEX
        list: ops
            HdlOp: INDEX
                list: ops
                    HdlValueId: region_match_partial
                    HdlValueId: c
            HdlValueId: r


CommitId: 17e9624c452e05f71f4ad2b7c75bf6bbb071c324
Update lowrisc_ibex to lowRISC/ibex@ee1098f
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_pmp.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_pmp.sv
@@ -95,17 +90,11 @@ module ibex_pmp #(
       // In machine mode, any match to a locked region without sufficient permissions is a fault
       assign machine_access_fault[c][r] = region_match_both[c][r] & csr_pmp_cfg_i[r].lock &
                                           ~region_perm_check[c][r];
-      if (r == 0) begin : g_region0
-        // In any other mode, any access should fault unless is matches a region
-        assign user_access_allowed[c][r]  = region_match_both[c][r] & region_perm_check[c][r];
-      end else begin : g_oth_regions
-        assign user_access_allowed[c][r]  = region_match_both[c][r] & region_perm_check[c][r] &
-        // any higher priority (lower region number) partial match should also cause a fault
-                                            ~|region_match_partial[c][r-1:0];
-      end
+      // In any other mode, any access should fault unless is matches a region
+      assign user_access_allowed[c][r]  = region_match_both[c][r] & region_perm_check[c][r];
     end
-    assign access_fault[c] = (priv_mode_i == PRIV_LVL_M) ? |machine_access_fault[c] :
-                                                           ~|user_access_allowed[c];
+    assign access_fault[c] = (priv_mode_i[c] == PRIV_LVL_M) ? |machine_access_fault[c] :
+                                                              ~|user_access_allowed[c];
 
     assign pmp_req_err_o[c] = access_fault[c];
   end
ParseResult:
MOV HdlStmAssign@@ to body
HdlStmAssign
    HdlOp: AND
        list: ops
            HdlOp: INDEX
                list: ops
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: region_match_both
                            HdlValueId: c
                    HdlValueId: r
            HdlOp: INDEX
                list: ops
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: region_perm_check
                            HdlValueId: c
                    HdlValueId: r
    HdlOp: INDEX
        list: ops
            HdlOp: INDEX
                list: ops
                    HdlValueId: user_access_allowed
                    HdlValueId: c
            HdlValueId: r

UPD HdlStmAssign@@ to 
    UPD HdlOp@@TERNARY to TERNARY
        UPD HdlOp@@EQ to EQ
            INS HdlOp@@INDEX to ops
            UPD HdlOp@@INDEX to INDEX
                INS list@@ops to INDEX
                INS HdlValueId@@c to ops

UPD HdlStmAssign@@ to 
    UPD HdlOp@@TERNARY to TERNARY
        UPD HdlOp@@EQ to EQ
            MOV HdlValueId@@priv_mode_i to ops
            HdlValueId: priv_mode_i

UPD HdlStmIf@@ to 
    DEL HdlOp@@EQ from 
    HdlOp: EQ
        list: ops
            HdlValueId: r
            HdlValueInt: 0
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL list@@elifs from 
    DEL HdlStmBlock@@SEQ from 
    HdlStmBlock: SEQ
        list: body
            HdlStmAssign
                HdlOp: AND
                    list: ops
                        HdlOp: AND
                            list: ops
                                HdlOp: INDEX
                                    list: ops
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: region_match_both
                                                HdlValueId: c
                                        HdlValueId: r
                                HdlOp: INDEX
                                    list: ops
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: region_perm_check
                                                HdlValueId: c
                                        HdlValueId: r
                        HdlOp: NOR_UNARY
                            list: ops
                                HdlOp: INDEX
                                    list: ops
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: region_match_partial
                                                HdlValueId: c
                                        HdlOp: DOWNTO
                                            list: ops
                                                HdlOp: SUB
                                                    list: ops
                                                        HdlValueId: r
                                                        HdlValueInt: 1
                                                HdlValueInt: 0
                HdlOp: INDEX
                    list: ops
                        HdlOp: INDEX
                            list: ops
                                HdlValueId: user_access_allowed
                                HdlValueId: c
                        HdlValueId: r

DEL HdlStmIf@@ from body


CommitId: dc0c1e9734bafcb7e31e127935b75610fc269a27
[top/lc_ctrl] connect CPU_EN and KEYMGR_EN signals
--- a/hw/ip/rv_core_ibex/rtl/rv_core_ibex.sv
+++ b/hw/ip/rv_core_ibex/rtl/rv_core_ibex.sv
@@ -65,7 +65,7 @@ module rv_core_ibex #(
   output ibex_pkg::crash_dump_t crash_dump_o,
 
   // CPU Control Signals
-  input lc_ctrl_pkg::lc_tx_t fetch_enable_i,
+  input lc_ctrl_pkg::lc_tx_t lc_cpu_en_i,
   output logic        core_sleep_o
 );
 

ParseResult:
UPD HdlIdDef@@fetch_enable_i to lc_cpu_en_i


CommitId: 1f6bec296f226172962bdd9f5df08a46366a8859
[sysrst_ctrl] Rename FSM states to fix lint issues
--- a/hw/ip/sysrst_ctrl/rtl/sysrst_ctrl_ulpfsm.sv
+++ b/hw/ip/sysrst_ctrl/rtl/sysrst_ctrl_ulpfsm.sv
@@ -46,23 +46,23 @@ module sysrst_ctrl_ulpfsm #(
   end
 
   //three-state FSM
-  //IDLE->WAIT->DONE
+  //IDLE_ST->WAIT_ST->DONE_ST
   //The input signals can be inverted. Hence, both paths
   //FSM will detect a L2H or H2L transition or level H to enter the wait state
   //debounce timer defines the time to wait for input to stablize
   //FSM will check the input after the debounce period
   //FSM will stay in the DONEXXX state until SW uses cfg_fsm_rst to clear it
   typedef enum logic [1:0] {
-                            IDLE = 2'h0,
-                            WAIT = 2'h1,
-                            DONE = 2'h2
+                            IDLE_ST = 2'h0,
+                            WAIT_ST = 2'h1,
+                            DONE_ST = 2'h2
                             } timer_state_e;
 
   timer_state_e timer_state_q, timer_state_d;
 
   always_ff @(posedge clk_aon_i or negedge rst_aon_ni) begin: i_timer_state_reg
     if (!rst_aon_ni) begin
-      timer_state_q    <= IDLE;
+      timer_state_q    <= IDLE_ST;
     end
     else begin
       timer_state_q    <= timer_state_d;

ParseResult:
UPD HdlStmAssign@@ to 
    UPD HdlValueId@@IDLE to IDLE_ST


CommitId: 1f6bec296f226172962bdd9f5df08a46366a8859
[sysrst_ctrl] Rename FSM states to fix lint issues
--- a/hw/ip/sysrst_ctrl/rtl/sysrst_ctrl_ulpfsm.sv
+++ b/hw/ip/sysrst_ctrl/rtl/sysrst_ctrl_ulpfsm.sv
@@ -90,22 +90,22 @@ module sysrst_ctrl_ulpfsm #(
     timer_cnt_en = 1'b0;
 
     unique case (timer_state_q)
-      IDLE: begin
+      IDLE_ST: begin
         if (cfg_en_i &&  trigger) begin
           timer_cnt_clr = 1'b1;
-          timer_state_d = WAIT;
+          timer_state_d = WAIT_ST;
         end
       end
 
-      WAIT: begin
+      WAIT_ST: begin
         // timer has expired
         if (timer_cnt_q == cfg_timer_i) begin
           // if the trigger is stable as defined above, we are done
           if (trigger_stable) begin
-            timer_state_d = DONE;
-          // otherwise go back to idle
+            timer_state_d = DONE_ST;
+          // otherwise go back to IDLE_ST
           end else begin
-            timer_state_d = IDLE;
+            timer_state_d = IDLE_ST;
           end
         // else continue counting
         end else begin

ParseResult:
UPD HdlStmCase@@timer_state_q to timer_state_q
    UPD HdlValueId@@IDLE to IDLE_ST
    UPD HdlValueId@@WAIT to WAIT_ST
    UPD HdlValueId@@DONE to DONE_ST
    UPD HdlOp@@ASSIGN to ASSIGN
        UPD HdlValueId@@IDLE to IDLE_ST

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@WAIT to WAIT_ST

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@DONE to DONE_ST
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@IDLE to IDLE_ST


CommitId: 1f6bec296f226172962bdd9f5df08a46366a8859
[sysrst_ctrl] Rename FSM states to fix lint issues
--- a/hw/ip/sysrst_ctrl/rtl/sysrst_ctrl_ulpfsm.sv
+++ b/hw/ip/sysrst_ctrl/rtl/sysrst_ctrl_ulpfsm.sv
@@ -113,13 +113,13 @@ module sysrst_ctrl_ulpfsm #(
         end
       end
 
-      DONE: timer_cond_met_o = 1'b1;
+      DONE_ST: timer_cond_met_o = 1'b1;
 
-      default: timer_state_d = IDLE;
+      default: timer_state_d = IDLE_ST;
     endcase
-    // Force the state into IDLE if FSM is disabled
+    // Force the state into IDLE_ST if FSM is disabled
     if (!cfg_en_i) begin
-      timer_state_d = IDLE;
+      timer_state_d = IDLE_ST;
     end
   end
 
ParseResult:
UPD HdlStmCase@@timer_state_q to timer_state_q
    UPD HdlValueId@@IDLE to IDLE_ST
    UPD HdlValueId@@WAIT to WAIT_ST
    UPD HdlValueId@@DONE to DONE_ST
    UPD HdlOp@@ASSIGN to ASSIGN
        UPD HdlValueId@@IDLE to IDLE_ST

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@IDLE to IDLE_ST


CommitId: 3a5fdd65bfd8e71701c7e019ae980ec39610b474
Update lowrisc_ibex to lowRISC/ibex@5826af8
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_register_file_ff.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_register_file_ff.sv
@@ -95,4 +95,8 @@ module ibex_register_file_ff #(
   assign rdata_a_o = rf_reg[raddr_a_i];
   assign rdata_b_o = rf_reg[raddr_b_i];
 
+  // Signal not used in FF register file
+  logic unused_test_en;
+  assign unused_test_en = test_en_i;
+
 endmodule
ParseResult:
INS HdlIdDef@@unused_test_en to objs
HdlIdDef: unused_test_en
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlValueId: test_en_i
    HdlValueId: unused_test_en


CommitId: dcbb54da015402db10bff092bd4291ece1fddc6d
[prim_lc_combine] Fix parameterization error
--- a/hw/ip/prim/rtl/prim_lc_combine.sv
+++ b/hw/ip/prim/rtl/prim_lc_combine.sv
@@ -63,8 +63,8 @@ module prim_lc_combine #(
   // different from the active value.
   //
   for (genvar k = 0; k < $bits(ActiveValue); k++) begin : gen_loop
-    if (ActiveLow && ActiveValue[k] ||
-       (!ActiveLow && !ActiveValue[k])) begin : gen_and_gate
+    if (CombineMode && ActiveValue[k] ||
+       (!CombineMode && !ActiveValue[k])) begin : gen_and_gate
       assign lc_en_o[k] = lc_en_a_i[k] && lc_en_b_i[k];
     end else begin : gen_or_gate
       assign lc_en_o[k] = lc_en_a_i[k] || lc_en_b_i[k];
ParseResult:
UPD HdlStmIf@@ to 
    UPD HdlOp@@OR_LOG to OR_LOG
        UPD HdlOp@@AND_LOG to AND_LOG
            UPD HdlValueId@@ActiveLow to CombineMode
        UPD HdlOp@@AND_LOG to AND_LOG
            UPD HdlOp@@NEG_LOG to NEG_LOG
                UPD HdlValueId@@ActiveLow to CombineMode


CommitId: 0c1f18073378c1da7d2bbf23ae404e4b8049c198
[csrng/rtl] lifecycle input to support aes mode
--- a/hw/ip/csrng/rtl/csrng_block_encrypt.sv
+++ b/hw/ip/csrng/rtl/csrng_block_encrypt.sv
@@ -18,6 +18,7 @@ module csrng_block_encrypt #(
    // update interface
   input logic                block_encrypt_bypass_i,
   input logic                block_encrypt_enable_i,
+  input lc_ctrl_pkg::lc_tx_t block_encrypt_lc_dft_en_i,
   input logic                block_encrypt_req_i,
   output logic               block_encrypt_rdy_o,
   input logic [KeyLen-1:0]   block_encrypt_key_i,

ParseResult:
INS HdlIdDef@@block_encrypt_lc_dft_en_i to ports
HdlIdDef: block_encrypt_lc_dft_en_i
    HdlOp: DOUBLE_COLON
        list: ops
            HdlValueId: lc_ctrl_pkg
            HdlValueId: lc_tx_t
    HdlDirection: IN


CommitId: 0c1f18073378c1da7d2bbf23ae404e4b8049c198
[csrng/rtl] lifecycle input to support aes mode
--- a/hw/ip/csrng/rtl/csrng_block_encrypt.sv
+++ b/hw/ip/csrng/rtl/csrng_block_encrypt.sv
@@ -54,6 +55,7 @@ module csrng_block_encrypt #(
   logic                 cipher_out_valid;
   logic                 cipher_out_ready;
   logic [BlkLen-1:0]    cipher_data_out;
+  logic                 aes_cipher_core_enable;
 
   logic [3:0][3:0][7:0] state_init[NumShares];
 

ParseResult:
INS HdlIdDef@@aes_cipher_core_enable to objs
HdlIdDef: aes_cipher_core_enable
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL


CommitId: 0c1f18073378c1da7d2bbf23ae404e4b8049c198
[csrng/rtl] lifecycle input to support aes mode
--- a/hw/ip/csrng/rtl/csrng_block_encrypt.sv
+++ b/hw/ip/csrng/rtl/csrng_block_encrypt.sv
@@ -134,17 +155,17 @@ module csrng_block_encrypt #(
   assign sfifo_blkenc_push = block_encrypt_req_i && sfifo_blkenc_not_full;
   assign sfifo_blkenc_wdata = {block_encrypt_v_i,block_encrypt_id_i,block_encrypt_cmd_i};
 
-  assign block_encrypt_rdy_o = block_encrypt_bypass_i ? sfifo_blkenc_not_full : cipher_in_ready;
+  assign block_encrypt_rdy_o = aes_cipher_core_enable ? sfifo_blkenc_not_full : cipher_in_ready;
 
   assign sfifo_blkenc_pop = block_encrypt_ack_o;
   assign {sfifo_blkenc_v,sfifo_blkenc_id,sfifo_blkenc_cmd} = sfifo_blkenc_rdata;
 
   assign block_encrypt_ack_o = block_encrypt_rdy_i &&
-         (block_encrypt_bypass_i ? sfifo_blkenc_not_empty : cipher_out_valid);
+         (!aes_cipher_core_enable ? sfifo_blkenc_not_empty : cipher_out_valid);
 
   assign block_encrypt_cmd_o = sfifo_blkenc_cmd;
   assign block_encrypt_id_o = sfifo_blkenc_id;
-  assign block_encrypt_v_o = block_encrypt_bypass_i ? sfifo_blkenc_v : cipher_data_out;
+  assign block_encrypt_v_o = !aes_cipher_core_enable ? sfifo_blkenc_v : cipher_data_out;
   assign cipher_out_ready = block_encrypt_rdy_i;
 
   assign block_encrypt_sfifo_blkenc_err_o =
ParseResult:
UPD HdlStmAssign@@ to 
    UPD HdlOp@@TERNARY to TERNARY
        UPD HdlValueId@@block_encrypt_bypass_i to aes_cipher_core_enable

UPD HdlStmAssign@@ to 
    UPD HdlOp@@TERNARY to TERNARY
        UPD HdlValueId@@block_encrypt_bypass_i to aes_cipher_core_enable
        MOV HdlValueId@@block_encrypt_bypass_i to ops
        HdlValueId: block_encrypt_bypass_i

UPD HdlStmAssign@@ to 
    UPD HdlOp@@AND_LOG to AND_LOG
        UPD HdlOp@@TERNARY to TERNARY
            UPD HdlValueId@@block_encrypt_bypass_i to aes_cipher_core_enable
            MOV HdlValueId@@block_encrypt_bypass_i to ops
            HdlValueId: block_encrypt_bypass_i


CommitId: 3776f5beb152ff954cf02d9ac0613ea3111ab275
[fpga] Add a clock buffer to the JTAG clock obtained from pinmux/padring
--- a/hw/top_earlgrey/rtl/top_earlgrey_artys7.sv
+++ b/hw/top_earlgrey/rtl/top_earlgrey_artys7.sv
@@ -133,11 +133,12 @@ module top_earlgrey_artys7  #(
   // Unlike nexysvideo, there is currently no dedicated
   // JTAG port available, hence tie off.
   logic jtag_trst_n, jtag_srst_n;
-  logic jtag_tck, jtag_tms, jtag_tdi, jtag_tdo;
+  logic jtag_tck, jtag_tck_buf, jtag_tms, jtag_tdi, jtag_tdo;
 
   assign jtag_trst_n = 1'b1;
   assign jtag_srst_n = 1'b1;
   assign jtag_tck = 1'b0;
+  assign jtag_tck_buf = 1'b0;
   assign jtag_tms = 1'b0;
   assign jtag_tdi = 1'b0;
 

ParseResult:
INS HdlIdDef@@jtag_tck_buf to objs
HdlIdDef: jtag_tck_buf
    HdlDirection: INTERNAL

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: jtag_tck_buf


CommitId: b3d45f602377f136115e1f782d49beeb95e2ca3b
[top] Various top level lint fixes
--- a/hw/top_earlgrey/rtl/autogen/chip_earlgrey_asic.sv
+++ b/hw/top_earlgrey/rtl/autogen/chip_earlgrey_asic.sv
@@ -868,6 +868,10 @@ module chip_earlgrey_asic (
   assign manual_out_cc2 = 1'b0;
   assign manual_oe_cc2 = 1'b0;
 
+  assign manual_out_flash_test_mode0 = 1'b0;
+  assign manual_oe_flash_test_mode0 = 1'b0;
+  assign manual_out_flash_test_mode1 = 1'b0;
+  assign manual_oe_flash_test_mode1 = 1'b0;
   assign manual_out_flash_test_volt = 1'b0;
   assign manual_oe_flash_test_volt = 1'b0;
 

ParseResult:
INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: manual_out_flash_test_mode0

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: manual_oe_flash_test_mode0

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: manual_out_flash_test_mode1

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: manual_oe_flash_test_mode1


CommitId: b3d45f602377f136115e1f782d49beeb95e2ca3b
[top] Various top level lint fixes
--- a/hw/top_earlgrey/rtl/autogen/chip_earlgrey_asic.sv
+++ b/hw/top_earlgrey/rtl/autogen/chip_earlgrey_asic.sv
@@ -880,6 +884,8 @@ module chip_earlgrey_asic (
   assign manual_attr_por_n = '0;
   assign manual_attr_cc1 = '0;
   assign manual_attr_cc2 = '0;
+  assign manual_attr_flash_test_mode0 = '0;
+  assign manual_attr_flash_test_mode1 = '0;
   assign manual_attr_flash_test_volt = '0;
   assign manual_attr_flash_test_mode0 = '0;
   assign manual_attr_flash_test_mode1 = '0;

ParseResult:
MOV HdlStmAssign@@ to objs
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: manual_attr_flash_test_volt

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: manual_attr_flash_test_mode0

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: manual_attr_flash_test_mode1


CommitId: b3d45f602377f136115e1f782d49beeb95e2ca3b
[top] Various top level lint fixes
--- a/hw/top_earlgrey/rtl/autogen/chip_earlgrey_asic.sv
+++ b/hw/top_earlgrey/rtl/autogen/chip_earlgrey_asic.sv
@@ -941,6 +947,8 @@ module chip_earlgrey_asic (
   // Tie-off unused signals
   assign dio_in[DioUsbdevSense] = 1'b0;
   assign dio_in[DioUsbdevSe0] = 1'b0;
+  assign dio_in[DioUsbdevDpPullup] = 1'b0;
+  assign dio_in[DioUsbdevDnPullup] = 1'b0;
   assign dio_in[DioUsbdevTxModeSe] = 1'b0;
   assign dio_in[DioUsbdevSuspend] = 1'b0;
 

ParseResult:
INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlValueInt: 0
    HdlOp: INDEX
        list: ops
            HdlValueId: dio_in
            HdlValueId: DioUsbdevDpPullup

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlValueInt: 0
    HdlOp: INDEX
        list: ops
            HdlValueId: dio_in
            HdlValueId: DioUsbdevDnPullup


CommitId: b3d45f602377f136115e1f782d49beeb95e2ca3b
[top] Various top level lint fixes
--- a/hw/top_earlgrey/rtl/autogen/chip_earlgrey_asic.sv
+++ b/hw/top_earlgrey/rtl/autogen/chip_earlgrey_asic.sv
@@ -993,9 +1001,8 @@ module chip_earlgrey_asic (
   logic usb_ref_val;
 
   // adc
-  // The adc package definition should eventually be moved to the adc module
-  ast_pkg::adc_ast_req_t adc_i;
-  ast_pkg::adc_ast_rsp_t adc_o;
+  ast_pkg::adc_ast_req_t adc_req;
+  ast_pkg::adc_ast_rsp_t adc_rsp;
 
   // entropy source interface
   // The entropy source pacakge definition should eventually be moved to es

ParseResult:
DEL HdlIdDef@@adc_i from objs
HdlIdDef: adc_i
    HdlOp: DOUBLE_COLON
        list: ops
            HdlValueId: ast_pkg
            HdlValueId: adc_ast_req_t
    HdlDirection: INTERNAL

DEL HdlIdDef@@adc_o from objs
HdlIdDef: adc_o
    HdlOp: DOUBLE_COLON
        list: ops
            HdlValueId: ast_pkg
            HdlValueId: adc_ast_rsp_t
    HdlDirection: INTERNAL


CommitId: b3d45f602377f136115e1f782d49beeb95e2ca3b
[top] Various top level lint fixes
--- a/hw/top_earlgrey/rtl/autogen/chip_earlgrey_asic.sv
+++ b/hw/top_earlgrey/rtl/autogen/chip_earlgrey_asic.sv
@@ -1056,10 +1063,6 @@ module chip_earlgrey_asic (
   import rstmgr_pkg::DomainAonSel;
   import rstmgr_pkg::Domain0Sel;
 
-  // adc connections
-  ast_pkg::adc_ast_req_t adc_req;
-  ast_pkg::adc_ast_rsp_t adc_rsp;
-
   // external clock comes in at a fixed position
   logic ext_clk;
   assign ext_clk = mio_in_raw[MioPadIoc6];
ParseResult:
MOV HdlIdDef@@adc_req to objs
HdlIdDef: adc_req
    HdlOp: DOUBLE_COLON
        list: ops
            HdlValueId: ast_pkg
            HdlValueId: adc_ast_req_t
    HdlDirection: INTERNAL

MOV HdlIdDef@@adc_rsp to objs
HdlIdDef: adc_rsp
    HdlOp: DOUBLE_COLON
        list: ops
            HdlValueId: ast_pkg
            HdlValueId: adc_ast_rsp_t
    HdlDirection: INTERNAL


CommitId: 82c9e5bbc34d7d35352310c0925e0c6cb18ef39d
[hmac] Lint fix
--- a/hw/ip/hmac/rtl/sha2.sv
+++ b/hw/ip/hmac/rtl/sha2.sv
@@ -132,7 +132,7 @@ module sha2 import hmac_pkg::*; (
     end else if (!sha_en) begin
       round <= '0;
     end else if (run_hash) begin
-      if (round == RoundWidth'(NumRound-1)) begin
+      if (round == RoundWidth'(unsigned'(NumRound-1))) begin
         round <= '0;
       end else begin
         round <= round + 1;
ParseResult:
UPD HdlStmIf@@ to 
    UPD HdlOp@@EQ to EQ
        UPD HdlOp@@CALL to CALL
            INS HdlExprNotImplemented@@ to ops

UPD HdlStmIf@@ to 
    UPD HdlOp@@EQ to EQ
        UPD HdlOp@@CALL to CALL
            DEL HdlOp@@SUB from ops
            HdlOp: SUB
                list: ops
                    HdlValueId: NumRound
                    HdlValueInt: 1


CommitId: 91a2335db7c362ea12962a6d0ccc6f589c1d01a3
[sysrst_ctrl] cleaned up unused lint errors
--- a/hw/ip/sysrst_ctrl/rtl/sysrst_ctrl_autoblock.sv
+++ b/hw/ip/sysrst_ctrl/rtl/sysrst_ctrl_autoblock.sv
@@ -39,8 +39,8 @@ module sysrst_ctrl_autoblock import sysrst_ctrl_reg_pkg::*; (
   logic ab_cond_met;
   logic pwrb_int_i;
 
-  //nc_ means no connect
-  logic nc_auto_block_enable;
+  //unused_ means no connect
+  logic unused_auto_block_enable;
 
   //synchronize between cfg(24MHz) and always-on(200KHz)
   prim_flop_2sync # (

ParseResult:
UPD HdlIdDef@@nc_auto_block_enable to unused_auto_block_enable


CommitId: 91a2335db7c362ea12962a6d0ccc6f589c1d01a3
[sysrst_ctrl] cleaned up unused lint errors
--- a/hw/ip/sysrst_ctrl/rtl/sysrst_ctrl_autoblock.sv
+++ b/hw/ip/sysrst_ctrl/rtl/sysrst_ctrl_autoblock.sv
@@ -52,7 +52,7 @@ module sysrst_ctrl_autoblock import sysrst_ctrl_reg_pkg::*; (
     .q_o(cfg_auto_block_en)
   );
 
-  assign nc_auto_block_enable = auto_block_debounce_ctl_i.auto_block_enable.qe;
+  assign unused_auto_block_enable = auto_block_debounce_ctl_i.auto_block_enable.qe;
 
   prim_fifo_async #(
     .Width(16),
ParseResult:
UPD HdlStmAssign@@ to 
    UPD HdlValueId@@nc_auto_block_enable to unused_auto_block_enable


CommitId: e9c1be61bb30bf804d7d31a2d492b08946ea6554
[csrng/rtl] es seed capture timing fixed
--- a/hw/ip/csrng/rtl/csrng_core.sv
+++ b/hw/ip/csrng/rtl/csrng_core.sv
@@ -325,6 +325,8 @@ module csrng_core import csrng_pkg::*; #(
   logic [Cmd-1:0] cmd_req_ccmd_dly_q, cmd_req_ccmd_dly_d;
   logic           cs_aes_halt_q, cs_aes_halt_d;
   logic           packer_adata_pop_q, packer_adata_pop_d;
+  logic [SeedLen-1:0] entropy_src_seed_q, entropy_src_seed_d;
+  logic               entropy_src_fips_q, entropy_src_fips_d;
 
   always_ff @(posedge clk_i or negedge rst_ni)
     if (!rst_ni) begin

ParseResult:
INS HdlIdDef@@entropy_src_seed_q to objs
HdlIdDef: entropy_src_seed_q
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlOp: SUB
                        list: ops
                            HdlValueId: SeedLen
                            HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: INTERNAL

INS HdlIdDef@@entropy_src_seed_d to objs
HdlIdDef: entropy_src_seed_d
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlOp: SUB
                        list: ops
                            HdlValueId: SeedLen
                            HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: INTERNAL

INS HdlIdDef@@entropy_src_fips_q to objs
HdlIdDef: entropy_src_fips_q
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

INS HdlIdDef@@entropy_src_fips_d to objs
HdlIdDef: entropy_src_fips_d
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL


CommitId: e9c1be61bb30bf804d7d31a2d492b08946ea6554
[csrng/rtl] es seed capture timing fixed
--- a/hw/ip/csrng/rtl/csrng_core.sv
+++ b/hw/ip/csrng/rtl/csrng_core.sv
@@ -339,6 +341,8 @@ module csrng_core import csrng_pkg::*; #(
       cmd_req_ccmd_dly_q <= '0;
       cs_aes_halt_q <= '0;
       packer_adata_pop_q <= '0;
+      entropy_src_seed_q <= '0;
+      entropy_src_fips_q <= '0;
     end else begin
       acmd_q  <= acmd_d;
       shid_q  <= shid_d;

ParseResult:
INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: entropy_src_seed_q

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: entropy_src_fips_q


CommitId: e9c1be61bb30bf804d7d31a2d492b08946ea6554
[csrng/rtl] es seed capture timing fixed
--- a/hw/ip/csrng/rtl/csrng_core.sv
+++ b/hw/ip/csrng/rtl/csrng_core.sv
@@ -351,6 +355,8 @@ module csrng_core import csrng_pkg::*; #(
       cmd_req_ccmd_dly_q <= cmd_req_ccmd_dly_d;
       cs_aes_halt_q <= cs_aes_halt_d;
       packer_adata_pop_q <= packer_adata_pop_d;
+      entropy_src_seed_q <= entropy_src_seed_d;
+      entropy_src_fips_q <= entropy_src_fips_d;
     end
 
   //--------------------------------------------

ParseResult:
INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueId: entropy_src_seed_d
    HdlValueId: entropy_src_seed_q

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueId: entropy_src_fips_d
    HdlValueId: entropy_src_fips_q


CommitId: e9c1be61bb30bf804d7d31a2d492b08946ea6554
[csrng/rtl] es seed capture timing fixed
--- a/hw/ip/csrng/rtl/csrng_core.sv
+++ b/hw/ip/csrng/rtl/csrng_core.sv
@@ -979,13 +985,19 @@ module csrng_core import csrng_pkg::*; #(
   assign entropy_src_hw_if_o.es_req = cs_enable &&
          cmd_entropy_req;
 
-  assign cmd_entropy =
-         (instant_req && !flag0_q) ? entropy_src_hw_if_i.es_bits :
-         reseed_req ? entropy_src_hw_if_i.es_bits :
-         update_req ? entropy_src_hw_if_i.es_bits :
-         '0;
+  // Capture entropy from entropy_src
+  assign entropy_src_seed_d =
+         (cmd_entropy_avail && flag0_q) ? '0 : // special case where zero is used
+         cmd_entropy_avail ? entropy_src_hw_if_i.es_bits :
+         entropy_src_seed_q;
+  assign entropy_src_fips_d =
+         (cmd_entropy_avail && flag0_q) ? '0 : // special case where zero is used
+         cmd_entropy_avail ? entropy_src_hw_if_i.es_fips :
+         entropy_src_fips_q;
 
-  assign cmd_entropy_fips = (instant_req && !flag0_q) ? entropy_src_hw_if_i.es_fips : 1'b0;
+  assign cmd_entropy = entropy_src_seed_q;
+
+  assign cmd_entropy_fips = entropy_src_fips_q;
 
   //-------------------------------------
   // csrng_ctr_drbg_cmd instantiation
ParseResult:
INS HdlStmAssign@@ to objs

INS HdlStmAssign@@ to objs

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlValueId: entropy_src_seed_q
    HdlValueId: cmd_entropy

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlValueId: entropy_src_fips_q
    HdlValueId: cmd_entropy_fips

UPD HdlStmAssign@@ to 
    INS HdlOp@@TERNARY to 
    INS HdlValueId@@entropy_src_seed_d to 
    UPD HdlOp@@TERNARY to TERNARY
        INS list@@ops to TERNARY
        INS HdlOp@@AND_LOG to ops
        HdlOp: AND_LOG
            list: ops
                HdlValueId: cmd_entropy_avail
                HdlValueId: flag0_q
        INS HdlValueInt@@0 to ops
        INS HdlOp@@TERNARY to ops
        UPD HdlOp@@TERNARY to TERNARY
            INS list@@ops to TERNARY
            INS HdlValueId@@cmd_entropy_avail to ops
            INS HdlValueId@@entropy_src_seed_q to ops

UPD HdlStmAssign@@ to 
    UPD HdlOp@@TERNARY to TERNARY
        UPD HdlOp@@TERNARY to TERNARY
            MOV HdlOp@@DOT to ops
            HdlOp: DOT
                list: ops
                    HdlValueId: entropy_src_hw_if_i
                    HdlValueId: es_bits
            DEL HdlValueId@@reseed_req from ops
            DEL HdlOp@@TERNARY from ops
            HdlOp: TERNARY
                list: ops
                    HdlValueId: update_req
                    HdlOp: DOT
                        list: ops
                            HdlValueId: entropy_src_hw_if_i
                            HdlValueId: es_bits
                    HdlValueInt: 0
            DEL list@@ops from TERNARY
        DEL HdlOp@@AND_LOG from ops
        HdlOp: AND_LOG
            list: ops
                HdlValueId: instant_req
                HdlOp: NEG_LOG
                    list: ops
                        HdlValueId: flag0_q
        DEL HdlOp@@DOT from ops
        HdlOp: DOT
            list: ops
                HdlValueId: entropy_src_hw_if_i
                HdlValueId: es_bits
        DEL HdlOp@@TERNARY from ops
        DEL list@@ops from TERNARY
    DEL HdlOp@@TERNARY from 
    DEL HdlValueId@@cmd_entropy from 

UPD HdlStmAssign@@ to 
    UPD HdlOp@@TERNARY to TERNARY
        MOV HdlOp@@DOT to ops
        HdlOp: DOT
            list: ops
                HdlValueId: entropy_src_hw_if_i
                HdlValueId: es_fips
        DEL HdlOp@@AND_LOG from ops
        HdlOp: AND_LOG
            list: ops
                HdlValueId: instant_req
                HdlOp: NEG_LOG
                    list: ops
                        HdlValueId: flag0_q
        DEL HdlValueInt@@0 from ops
        DEL list@@ops from TERNARY
    DEL HdlOp@@TERNARY from 
    DEL HdlValueId@@cmd_entropy_fips from 

DEL HdlStmAssign@@ from objs

DEL HdlStmAssign@@ from objs


CommitId: 56ab9e456b36fc8a85b3df41770dab0901c7d38b
[prim] Fix lint errors
--- a/hw/ip/prim/rtl/prim_filter.sv
+++ b/hw/ip/prim/rtl/prim_filter.sv
@@ -20,6 +20,7 @@ module prim_filter #(parameter int Cycles = 4) (
 
   logic [Cycles-1:0] stored_vector_q, stored_vector_d;
   logic stored_value_q, update_stored_value;
+  logic unused_stored_vector_q_msb;
 
   always_ff @(posedge clk_i or negedge rst_ni) begin
     if (!rst_ni) begin

ParseResult:
INS HdlIdDef@@unused_stored_vector_q_msb to objs
HdlIdDef: unused_stored_vector_q_msb
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL


CommitId: 56ab9e456b36fc8a85b3df41770dab0901c7d38b
[prim] Fix lint errors
--- a/hw/ip/prim/rtl/prim_filter.sv
+++ b/hw/ip/prim/rtl/prim_filter.sv
@@ -30,6 +31,7 @@ module prim_filter #(parameter int Cycles = 4) (
   end
 
   assign stored_vector_d = {stored_vector_q[Cycles-2:0],filter_i};
+  assign unused_stored_vector_q_msb = stored_vector_q[Cycles-1];
 
   always_ff @(posedge clk_i or negedge rst_ni) begin
     if (!rst_ni) begin
ParseResult:
INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: INDEX
        list: ops
            HdlValueId: stored_vector_q
            HdlOp: SUB
                list: ops
                    HdlValueId: Cycles
                    HdlValueInt: 1
    HdlValueId: unused_stored_vector_q_msb


CommitId: 44fe217af660b1abbe22fa00e70583482f096871
[csrng] Fix some width mismatches
--- a/hw/ip/csrng/rtl/csrng_ctr_drbg_upd.sv
+++ b/hw/ip/csrng/rtl/csrng_ctr_drbg_upd.sv
@@ -316,7 +316,7 @@ module csrng_ctr_drbg_upd #(
              interate_ctr_inc ? (interate_ctr_q + 1) :
              interate_ctr_q;
 
-  assign interate_ctr_done = (interate_ctr_q >= (SeedLen/BlkLen));
+  assign interate_ctr_done = (int'(interate_ctr_q) >= SeedLen/BlkLen);
 
   //--------------------------------------------
   // state machine to send values to block_encrypt

ParseResult:
UPD HdlStmAssign@@ to 
    UPD HdlOp@@GE to GE
        INS HdlExprNotImplemented@@ to ops

UPD HdlStmAssign@@ to 
    UPD HdlOp@@GE to GE
        DEL HdlValueId@@interate_ctr_q from ops


CommitId: 44fe217af660b1abbe22fa00e70583482f096871
[csrng] Fix some width mismatches
--- a/hw/ip/csrng/rtl/csrng_ctr_drbg_upd.sv
+++ b/hw/ip/csrng/rtl/csrng_ctr_drbg_upd.sv
@@ -471,7 +471,7 @@ module csrng_ctr_drbg_upd #(
   // shifting logic to receive values from block_encrypt
   //--------------------------------------------
 
-  assign concat_outblk_shifted_value = (concat_outblk_q << BlkLen);
+  assign concat_outblk_shifted_value = {concat_outblk_q, {BlkLen{1'b0}}};
 
   assign concat_outblk_d =
          sfifo_bencack_pop ? {concat_outblk_q[SeedLen-1:BlkLen],sfifo_bencack_v} :

ParseResult:
INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: CONCAT
        list: ops
            HdlValueId: concat_outblk_q
            HdlOp: REPL_CONCAT
                list: ops
                    HdlValueId: BlkLen
                    HdlValueInt: 0
    HdlValueId: concat_outblk_shifted_value

DEL HdlStmAssign@@ from objs
HdlStmAssign
    HdlOp: SLL
        list: ops
            HdlValueId: concat_outblk_q
            HdlValueId: BlkLen
    HdlValueId: concat_outblk_shifted_value


CommitId: 44fe217af660b1abbe22fa00e70583482f096871
[csrng] Fix some width mismatches
--- a/hw/ip/csrng/rtl/csrng_ctr_drbg_upd.sv
+++ b/hw/ip/csrng/rtl/csrng_ctr_drbg_upd.sv
@@ -484,7 +484,7 @@ module csrng_ctr_drbg_upd #(
          concat_ctr_inc ? (concat_ctr_q + 1) :
          concat_ctr_q;
 
-  assign concat_ctr_done = (concat_ctr_q >= (SeedLen/BlkLen));
+  assign concat_ctr_done = (int'(concat_ctr_q) >= (SeedLen/BlkLen));
 
   assign concat_inst_id_d = sfifo_bencack_pop ? sfifo_bencack_inst_id : concat_inst_id_q;
   assign concat_ccmd_d = sfifo_bencack_pop ? sfifo_bencack_ccmd : concat_ccmd_q;
ParseResult:
UPD HdlStmAssign@@ to 
    UPD HdlOp@@GE to GE
        INS HdlExprNotImplemented@@ to ops

UPD HdlStmAssign@@ to 
    UPD HdlOp@@GE to GE
        DEL HdlValueId@@concat_ctr_q from ops


CommitId: e1e0fd6c024b64705702f85e7285f48fa9f5e79f
[flash_ctrl] update intergrity error handling
--- a/hw/ip/flash_ctrl/rtl/flash_phy_scramble.sv
+++ b/hw/ip/flash_ctrl/rtl/flash_phy_scramble.sv
@@ -12,6 +12,7 @@
 module flash_phy_scramble import flash_phy_pkg::*; (
   input clk_i,
   input rst_ni,
+  input intg_err_i,
   input calc_req_i, // calculate galois multiplier mask
   input op_req_i,   // request primitive operation
   input cipher_ops_e op_type_i,  // sramble or de-scramble

ParseResult:
INS HdlIdDef@@intg_err_i to ports
HdlIdDef: intg_err_i
    HdlValueId: wire
    HdlDirection: IN


CommitId: e1e0fd6c024b64705702f85e7285f48fa9f5e79f
[flash_ctrl] update intergrity error handling
--- a/hw/ip/flash_ctrl/rtl/flash_phy_scramble.sv
+++ b/hw/ip/flash_ctrl/rtl/flash_phy_scramble.sv
@@ -20,6 +21,8 @@ module flash_phy_scramble import flash_phy_pkg::*; (
   input [DataWidth-1:0] scrambled_data_i,
   input [KeySize-1:0] addr_key_i,
   input [KeySize-1:0] data_key_i,
+  input [KeySize-1:0] rand_addr_key_i,
+  input [KeySize-1:0] rand_data_key_i,
   output logic calc_ack_o,
   output logic op_ack_o,
   output logic [DataWidth-1:0] mask_o,

ParseResult:
INS HdlIdDef@@rand_addr_key_i to ports
HdlIdDef: rand_addr_key_i
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: wire
            HdlOp: DOWNTO
                list: ops
                    HdlOp: SUB
                        list: ops
                            HdlValueId: KeySize
                            HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: IN

INS HdlIdDef@@rand_data_key_i to ports
HdlIdDef: rand_data_key_i
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: wire
            HdlOp: DOWNTO
                list: ops
                    HdlOp: SUB
                        list: ops
                            HdlValueId: KeySize
                            HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: IN


CommitId: e1e0fd6c024b64705702f85e7285f48fa9f5e79f
[flash_ctrl] update intergrity error handling
--- a/hw/ip/flash_ctrl/rtl/flash_phy_scramble.sv
+++ b/hw/ip/flash_ctrl/rtl/flash_phy_scramble.sv
@@ -31,8 +34,11 @@ module flash_phy_scramble import flash_phy_pkg::*; (
   localparam int UnusedWidth = KeySize - AddrPadWidth;
 
   // unused portion of addr_key
+  logic [KeySize-1:0] muxed_addr_key;
+  assign muxed_addr_key = intg_err_i ? rand_addr_key_i : addr_key_i;
+
   logic [UnusedWidth-1:0] unused_key;
-  assign unused_key = addr_key_i[KeySize-1 -: UnusedWidth];
+  assign unused_key = muxed_addr_key[KeySize-1 -: UnusedWidth];
 
   // Galois Multiply portion
   prim_gf_mult # (

ParseResult:
INS HdlIdDef@@muxed_addr_key to objs
HdlIdDef: muxed_addr_key
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlOp: SUB
                        list: ops
                            HdlValueId: KeySize
                            HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: INTERNAL

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: TERNARY
        list: ops
            HdlValueId: intg_err_i
            HdlValueId: rand_addr_key_i
            HdlValueId: addr_key_i
    HdlValueId: muxed_addr_key

UPD HdlStmAssign@@ to 
    UPD HdlOp@@INDEX to INDEX
        UPD HdlValueId@@addr_key_i to muxed_addr_key


CommitId: 1b5fa9f1ebf0a9520ef6ea6faf1f1a2397a349c1
[verible/style] This corrects several style linter warnings/errors
--- a/hw/ip/usbdev/rtl/usbdev_linkstate.sv
+++ b/hw/ip/usbdev/rtl/usbdev_linkstate.sv
@@ -23,8 +23,8 @@ module usbdev_linkstate (
   output logic [2:0] link_state_o
 );
 
-  localparam SUSPEND_TIMEOUT = 12'd3000; // 3ms by spec
-  localparam RESET_TIMEOUT   = 3'd3;    // 3us. Can be 2.5us - 10ms by spec
+  localparam logic [11:0] SUSPEND_TIMEOUT = 12'd3000; // 3ms by spec
+  localparam logic [2:0]  RESET_TIMEOUT   = 3'd3;     // 3us. Can be 2.5us - 10ms by spec
 
   typedef enum logic [2:0] {
     // Unpowered state

ParseResult:
UPD HdlIdDef@@SUSPEND_TIMEOUT to SUSPEND_TIMEOUT
    INS HdlOp@@PARAMETRIZATION to SUSPEND_TIMEOUT
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 11
                    HdlValueInt: 0

UPD HdlIdDef@@RESET_TIMEOUT to RESET_TIMEOUT
    INS HdlOp@@PARAMETRIZATION to RESET_TIMEOUT
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 2
                    HdlValueInt: 0


CommitId: 2b8ef7625242cd4d1f3bc6eb5294037d94192057
[aon_timer] Minor fixes and updates for integration
--- a/hw/top_earlgrey/ip/xbar_peri/rtl/autogen/xbar_peri.sv
+++ b/hw/top_earlgrey/ip/xbar_peri/rtl/autogen/xbar_peri.sv
@@ -92,8 +92,8 @@ module xbar_peri (
   input  tlul_pkg::tl_d2h_t tl_alert_handler_i,
   output tlul_pkg::tl_h2d_t tl_sram_ctrl_ret_aon_o,
   input  tlul_pkg::tl_d2h_t tl_sram_ctrl_ret_aon_i,
-  output tlul_pkg::tl_h2d_t tl_nmi_gen_o,
-  input  tlul_pkg::tl_d2h_t tl_nmi_gen_i,
+  output tlul_pkg::tl_h2d_t tl_aon_timer_aon_o,
+  input  tlul_pkg::tl_d2h_t tl_aon_timer_aon_i,
   output tlul_pkg::tl_h2d_t tl_ast_wrapper_o,
   input  tlul_pkg::tl_d2h_t tl_ast_wrapper_i,
 

ParseResult:
UPD HdlIdDef@@tl_nmi_gen_o to tl_aon_timer_aon_o

UPD HdlIdDef@@tl_nmi_gen_i to tl_aon_timer_aon_i


CommitId: 2b8ef7625242cd4d1f3bc6eb5294037d94192057
[aon_timer] Minor fixes and updates for integration
--- a/hw/top_earlgrey/ip/xbar_peri/rtl/autogen/xbar_peri.sv
+++ b/hw/top_earlgrey/ip/xbar_peri/rtl/autogen/xbar_peri.sv
@@ -195,8 +195,8 @@ module xbar_peri (
   assign tl_sram_ctrl_ret_aon_o = tl_s1n_27_ds_h2d[24];
   assign tl_s1n_27_ds_d2h[24] = tl_sram_ctrl_ret_aon_i;
 
-  assign tl_nmi_gen_o = tl_s1n_27_ds_h2d[25];
-  assign tl_s1n_27_ds_d2h[25] = tl_nmi_gen_i;
+  assign tl_aon_timer_aon_o = tl_s1n_27_ds_h2d[25];
+  assign tl_s1n_27_ds_d2h[25] = tl_aon_timer_aon_i;
 
   assign tl_s1n_27_us_h2d = tl_main_i;
   assign tl_main_o = tl_s1n_27_us_d2h;

ParseResult:
UPD HdlStmAssign@@ to 
    UPD HdlValueId@@tl_nmi_gen_o to tl_aon_timer_aon_o

UPD HdlStmAssign@@ to 
    UPD HdlValueId@@tl_nmi_gen_i to tl_aon_timer_aon_i


CommitId: 2b8ef7625242cd4d1f3bc6eb5294037d94192057
[aon_timer] Minor fixes and updates for integration
--- a/hw/top_earlgrey/ip/xbar_peri/rtl/autogen/xbar_peri.sv
+++ b/hw/top_earlgrey/ip/xbar_peri/rtl/autogen/xbar_peri.sv
@@ -279,7 +279,7 @@ module xbar_peri (
     end else if ((tl_s1n_27_us_h2d.a_address & ~(ADDR_MASK_SRAM_CTRL_RET_AON)) == ADDR_SPACE_SRAM_CTRL_RET_AON) begin
       dev_sel_s1n_27 = 5'd24;
 
-    end else if ((tl_s1n_27_us_h2d.a_address & ~(ADDR_MASK_NMI_GEN)) == ADDR_SPACE_NMI_GEN) begin
+    end else if ((tl_s1n_27_us_h2d.a_address & ~(ADDR_MASK_AON_TIMER_AON)) == ADDR_SPACE_AON_TIMER_AON) begin
       dev_sel_s1n_27 = 5'd25;
 end
   end
ParseResult:
UPD HdlStmIf@@ to 
    UPD HdlOp@@EQ to EQ
        UPD HdlValueId@@ADDR_SPACE_NMI_GEN to ADDR_SPACE_AON_TIMER_AON
        UPD HdlOp@@AND to AND
            UPD HdlOp@@NEG to NEG
                UPD HdlValueId@@ADDR_MASK_NMI_GEN to ADDR_MASK_AON_TIMER_AON


CommitId: 37eec2cbcb02ab1639382d3dbb8ab2bc5b3b904d
[flash_ctrl] Various clean-up and updates
--- a/hw/ip/flash_ctrl/rtl/flash_ctrl_prog.sv
+++ b/hw/ip/flash_ctrl/rtl/flash_ctrl_prog.sv
@@ -13,11 +13,12 @@ module flash_ctrl_prog import flash_ctrl_pkg::*; (
   input                    op_start_i,
   input  [11:0]            op_num_words_i,
   output logic             op_done_o,
-  output logic             op_err_o,
+  output flash_ctrl_err_t  op_err_o,
   input [BusAddrW-1:0]     op_addr_i,
   input                    op_addr_oob_i,
   input flash_prog_e       op_type_i,
   input [ProgTypes-1:0]    type_avail_i,
+  output logic [BusAddrW-1:0] op_err_addr_o,
 
   // FIFO Interface
   input                    data_rdy_i,

ParseResult:
UPD HdlIdDef@@op_err_o to pgm_res_err

MOV HdlIdDef@@op_err_o to ports
HdlIdDef: op_err_o
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: OUT

INS HdlIdDef@@op_err_o to ports
HdlIdDef: op_err_o
    HdlValueId: flash_ctrl_err_t
    HdlDirection: OUT

INS HdlIdDef@@op_err_addr_o to ports
HdlIdDef: op_err_addr_o
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlOp: SUB
                        list: ops
                            HdlValueId: BusAddrW
                            HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: OUT

UPD HdlIdDef@@op_err_o to op_err_o
    UPD HdlDirection@@OUT to INTERNAL


CommitId: 37eec2cbcb02ab1639382d3dbb8ab2bc5b3b904d
[flash_ctrl] Various clean-up and updates
--- a/hw/ip/flash_ctrl/rtl/flash_ctrl_prog.sv
+++ b/hw/ip/flash_ctrl/rtl/flash_ctrl_prog.sv
@@ -32,7 +33,8 @@ module flash_ctrl_prog import flash_ctrl_pkg::*; (
   output logic             flash_last_o, // last beat of prog data
   output flash_prog_e      flash_type_o,
   input                    flash_done_i,
-  input                    flash_error_i
+  input                    flash_phy_err_i,
+  input                    flash_mp_err_i
 );
 
   typedef enum logic {

ParseResult:
INS HdlIdDef@@flash_phy_err_i to ports
HdlIdDef: flash_phy_err_i
    HdlValueId: wire
    HdlDirection: IN

UPD HdlIdDef@@flash_error_i to flash_mp_err_i


CommitId: 37eec2cbcb02ab1639382d3dbb8ab2bc5b3b904d
[flash_ctrl] Various clean-up and updates
--- a/hw/ip/flash_ctrl/rtl/flash_ctrl_prog.sv
+++ b/hw/ip/flash_ctrl/rtl/flash_ctrl_prog.sv
@@ -129,6 +163,7 @@ module flash_ctrl_prog import flash_ctrl_pkg::*; (
   assign flash_ovfl_o = int_addr[BusAddrW];
   assign flash_last_o = flash_req_o & cnt_hit;
   assign flash_type_o = op_type_i;
+  assign op_err_o = op_err_q | op_err_d;
 
   // unused signals
   logic [BusPgmResWidth-1:0] unused_end_addr;
ParseResult:
INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: OR
        list: ops
            HdlValueId: op_err_q
            HdlValueId: op_err_d
    HdlValueId: op_err_o

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlValueId@@op_err_q to ops

UPD HdlStmIf@@ to 
    INS HdlValueId@@txn_done to 
    INS HdlStmBlock@@SEQ to 
    INS list@@elifs to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlValueId@@flash_phy_err_i to ops

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: op_err_d
                HdlValueId: op_addr_oob_i
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: op_err_d
                HdlOp: NEG_LOG
                    list: ops
                        HdlValueId: prog_type_avail
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: op_err_d
                HdlValueId: pgm_res_err

UPD HdlStmIf@@ to 
    INS HdlValueId@@cnt_hit to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@TERNARY to TERNARY
                INS HdlOp@@OR_UNARY to ops
                UPD HdlOp@@OR_UNARY to OR_UNARY
                    INS list@@ops to OR_UNARY


CommitId: 53ef2ec43c1c1eb00b771e17fc157f5bb1103ed5
Update lowrisc_ibex to lowRISC/ibex@d14312c
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_load_store_unit.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_load_store_unit.sv
@@ -35,6 +18,7 @@ module ibex_load_store_unit (
     input  logic         data_gnt_i,
     input  logic         data_rvalid_i,
     input  logic         data_err_i,
+    input  logic         data_pmp_err_i,
 
     output logic [31:0]  data_addr_o,
     output logic         data_we_o,

ParseResult:
INS HdlIdDef@@data_pmp_err_i to ports
HdlIdDef: data_pmp_err_i
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: IN


CommitId: 53ef2ec43c1c1eb00b771e17fc157f5bb1103ed5
Update lowrisc_ibex to lowRISC/ibex@d14312c
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_load_store_unit.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_load_store_unit.sv
@@ -46,7 +30,6 @@ module ibex_load_store_unit (
     input  logic         data_we_ex_i,         // write enable                     -> from ID/EX
     input  logic [1:0]   data_type_ex_i,       // data type: word, half word, byte -> from ID/EX
     input  logic [31:0]  data_wdata_ex_i,      // data to write to memory          -> from ID/EX
-    input  logic [1:0]   data_reg_offset_ex_i, // register byte offset for stores  -> from ID/EX
     input  logic         data_sign_ext_ex_i,   // sign extension                   -> from ID/EX
 
     output logic [31:0]  data_rdata_ex_o,      // requested data                   -> to ID/EX

ParseResult:
DEL HdlIdDef@@data_reg_offset_ex_i from ports
HdlIdDef: data_reg_offset_ex_i
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: IN


CommitId: 53ef2ec43c1c1eb00b771e17fc157f5bb1103ed5
Update lowrisc_ibex to lowRISC/ibex@d14312c
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_load_store_unit.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_load_store_unit.sv
@@ -72,6 +55,7 @@ module ibex_load_store_unit (
   logic [31:0]  data_addr_w_aligned;
   logic [31:0]  addr_last_q, addr_last_d;
 
+  logic         data_update;
   logic [31:0]  rdata_q, rdata_d;
   logic [1:0]   rdata_offset_q, rdata_offset_d;
   logic [1:0]   data_type_q, data_type_d;

ParseResult:
INS HdlIdDef@@data_update to objs
HdlIdDef: data_update
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL


CommitId: 53ef2ec43c1c1eb00b771e17fc157f5bb1103ed5
Update lowrisc_ibex to lowRISC/ibex@d14312c
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_load_store_unit.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_load_store_unit.sv
@@ -92,6 +76,8 @@ module ibex_load_store_unit (
   logic         split_misaligned_access;
   logic         handle_misaligned_q, handle_misaligned_d; // high after receiving grant for first
                                                           // part of a misaligned access
+  logic         pmp_err_q;
+  logic         data_or_pmp_err;
 
   typedef enum logic [2:0]  {
     IDLE, WAIT_GNT_MIS, WAIT_RVALID_MIS, WAIT_GNT, WAIT_RVALID

ParseResult:
INS HdlIdDef@@pmp_err_q to objs
HdlIdDef: pmp_err_q
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

INS HdlIdDef@@data_or_pmp_err to objs
HdlIdDef: data_or_pmp_err
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL


CommitId: 53ef2ec43c1c1eb00b771e17fc157f5bb1103ed5
Update lowrisc_ibex to lowRISC/ibex@d14312c
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_load_store_unit.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_load_store_unit.sv
@@ -161,9 +147,8 @@ module ibex_load_store_unit (
   /////////////////////
 
   // prepare data to be written to the memory
-  // we handle misaligned accesses, half word and byte accesses and
-  // register offsets here
-  assign wdata_offset = data_addr[1:0] - data_reg_offset_ex_i[1:0];
+  // we handle misaligned accesses, half word and byte accesses here
+  assign wdata_offset = data_addr[1:0];
   always_comb begin
     unique case (wdata_offset)
       2'b00:   data_wdata =  data_wdata_ex_i[31:0];

ParseResult:
UPD HdlStmAssign@@ to 
    UPD HdlOp@@SUB to SUB
        MOV HdlOp@@INDEX to ops
        HdlOp: INDEX
            list: ops
                HdlValueId: data_addr
                HdlOp: DOWNTO
                    list: ops
                        HdlValueInt: 1
                        HdlValueInt: 0
        DEL HdlOp@@INDEX from ops
        HdlOp: INDEX
            list: ops
                HdlValueId: data_reg_offset_ex_i
                HdlOp: DOWNTO
                    list: ops
                        HdlValueInt: 1
                        HdlValueInt: 0
        DEL list@@ops from SUB
    DEL HdlOp@@SUB from 


CommitId: 53ef2ec43c1c1eb00b771e17fc157f5bb1103ed5
Update lowrisc_ibex to lowRISC/ibex@d14312c
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_load_store_unit.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_load_store_unit.sv
@@ -187,10 +172,16 @@ module ibex_load_store_unit (
   end
 
   // update control signals for next read data upon receiving grant
-  assign rdata_offset_d  = data_gnt_i ? data_addr[1:0]     : rdata_offset_q;
-  assign data_type_d     = data_gnt_i ? data_type_ex_i     : data_type_q;
-  assign data_sign_ext_d = data_gnt_i ? data_sign_ext_ex_i : data_sign_ext_q;
-  assign data_we_d       = data_gnt_i ? data_we_ex_i       : data_we_q;
+  // This must also be set for a pmp error (which might not actually be granted) to force
+  // data_we_q to update in order to signal the correct exception type (load or store)
+  // Note that we can use the registered pmp_err_q here since we will always take an
+  // extra cycle to progress to the RVALID state
+  assign data_update = data_gnt_i | pmp_err_q;
+
+  assign rdata_offset_d  = data_update ? data_addr[1:0]     : rdata_offset_q;
+  assign data_type_d     = data_update ? data_type_ex_i     : data_type_q;
+  assign data_sign_ext_d = data_update ? data_sign_ext_ex_i : data_sign_ext_q;
+  assign data_we_d       = data_update ? data_we_ex_i       : data_we_q;
 
   // registers for rdata alignment and sign-extension
   always_ff @(posedge clk_i or negedge rst_ni) begin

ParseResult:
INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: OR
        list: ops
            HdlValueId: data_gnt_i
            HdlValueId: pmp_err_q
    HdlValueId: data_update

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: TERNARY
        list: ops
            HdlValueId: data_update
            HdlValueId: data_type_ex_i
            HdlValueId: data_type_q
    HdlValueId: data_type_d

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: TERNARY
        list: ops
            HdlValueId: data_update
            HdlValueId: data_sign_ext_ex_i
            HdlValueId: data_sign_ext_q
    HdlValueId: data_sign_ext_d

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: TERNARY
        list: ops
            HdlValueId: data_update
            HdlValueId: data_we_ex_i
            HdlValueId: data_we_q
    HdlValueId: data_we_d

UPD HdlStmAssign@@ to 
    UPD HdlOp@@TERNARY to TERNARY
        UPD HdlValueId@@data_gnt_i to data_update

DEL HdlStmAssign@@ from objs
HdlStmAssign
    HdlOp: TERNARY
        list: ops
            HdlValueId: data_gnt_i
            HdlValueId: data_type_ex_i
            HdlValueId: data_type_q
    HdlValueId: data_type_d

DEL HdlStmAssign@@ from objs
HdlStmAssign
    HdlOp: TERNARY
        list: ops
            HdlValueId: data_gnt_i
            HdlValueId: data_sign_ext_ex_i
            HdlValueId: data_sign_ext_q
    HdlValueId: data_sign_ext_d

DEL HdlStmAssign@@ from objs
HdlStmAssign
    HdlOp: TERNARY
        list: ops
            HdlValueId: data_gnt_i
            HdlValueId: data_we_ex_i
            HdlValueId: data_we_q
    HdlValueId: data_we_d


CommitId: 53ef2ec43c1c1eb00b771e17fc157f5bb1103ed5
Update lowrisc_ibex to lowRISC/ibex@d14312c
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_load_store_unit.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_load_store_unit.sv
@@ -329,6 +320,7 @@ module ibex_load_store_unit (
     data_valid_o        = 1'b0;
     addr_incr_req_o     = 1'b0;
     handle_misaligned_d = handle_misaligned_q;
+    data_or_pmp_err     = 1'b0;
 
     unique case (ls_fsm_cs)
 

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: data_or_pmp_err
                HdlValueInt: 0


CommitId: 53ef2ec43c1c1eb00b771e17fc157f5bb1103ed5
Update lowrisc_ibex to lowRISC/ibex@d14312c
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_load_store_unit.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_load_store_unit.sv
@@ -346,7 +338,7 @@ module ibex_load_store_unit (
 
       WAIT_GNT_MIS: begin
         data_req_o = 1'b1;
-        if (data_gnt_i) begin
+        if (data_gnt_i || pmp_err_q) begin
           handle_misaligned_d = 1'b1;
           ls_fsm_ns           = WAIT_RVALID_MIS;
         end

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: data_or_pmp_err
                HdlValueInt: 0

UPD HdlStmIf@@ to 
    INS HdlOp@@OR_LOG to 
    UPD HdlOp@@OR_LOG to OR_LOG
        INS list@@ops to OR_LOG
        INS HdlValueId@@pmp_err_q to ops

UPD HdlStmIf@@ to 
    MOV HdlValueId@@data_gnt_i to 
    HdlValueId: data_gnt_i

UPD HdlStmIf@@ to 
    INS HdlOp@@OR_LOG to 
    UPD HdlOp@@OR_LOG to OR_LOG
        INS list@@ops to OR_LOG
        INS HdlValueId@@pmp_err_q to ops
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: data_or_pmp_err
                HdlValueInt: 1


CommitId: 53ef2ec43c1c1eb00b771e17fc157f5bb1103ed5
Update lowrisc_ibex to lowRISC/ibex@d14312c
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_load_store_unit.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_load_store_unit.sv
@@ -355,11 +347,14 @@ module ibex_load_store_unit (
       WAIT_RVALID_MIS: begin
         // tell ID/EX stage to update the address
         addr_incr_req_o = 1'b1;
-        if (data_rvalid_i) begin
-          // first part rvalid is received
-          if (data_err_i) begin
+        // first part rvalid is received, or gets a pmp error
+        // pmp_err_i will hold stable until the address is updated, and
+        // therefore pmp_err_q is valid in both WAIT_GNT_MIS and WAIT_RVALID_MIS states
+        if (data_rvalid_i || pmp_err_q) begin
+          if (pmp_err_q || data_err_i) begin
             // first part created an error, abort transaction
             data_valid_o        = 1'b1;
+            data_or_pmp_err     = 1'b1;
             handle_misaligned_d = 1'b0;
             ls_fsm_ns           = IDLE;
           end else begin

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: data_or_pmp_err
                HdlValueInt: 0

UPD HdlStmIf@@ to 
    INS HdlOp@@OR_LOG to 
    UPD HdlOp@@OR_LOG to OR_LOG
        INS list@@ops to OR_LOG
        INS HdlValueId@@pmp_err_q to ops

UPD HdlStmIf@@ to 
    INS HdlOp@@OR_LOG to 
    UPD HdlOp@@OR_LOG to OR_LOG
        INS list@@ops to OR_LOG
        INS HdlValueId@@pmp_err_q to ops

UPD HdlStmIf@@ to 
    MOV HdlValueId@@data_rvalid_i to 
    HdlValueId: data_rvalid_i

UPD HdlStmIf@@ to 
    INS HdlOp@@OR_LOG to 
    UPD HdlOp@@OR_LOG to OR_LOG
        INS list@@ops to OR_LOG
        INS HdlValueId@@pmp_err_q to ops
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: data_or_pmp_err
                HdlValueInt: 1

UPD HdlStmIf@@ to 
    MOV HdlValueId@@data_err_i to 
    HdlValueId: data_err_i


CommitId: 53ef2ec43c1c1eb00b771e17fc157f5bb1103ed5
Update lowrisc_ibex to lowRISC/ibex@d14312c
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_load_store_unit.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_load_store_unit.sv
@@ -383,15 +378,18 @@ module ibex_load_store_unit (
         // tell ID/EX stage to update the address
         addr_incr_req_o = handle_misaligned_q;
         data_req_o      = 1'b1;
-        if (data_gnt_i) begin
+        if (data_gnt_i || pmp_err_q) begin
           ls_fsm_ns = WAIT_RVALID;
         end
       end
 
       WAIT_RVALID: begin
         data_req_o = 1'b0;
-        if (data_rvalid_i) begin
+        // pmp_err_i will hold stable until the address is updated, and
+        // therefore pmp_err_q is valid in both WAIT_GNT and WAIT_RVALID states
+        if (data_rvalid_i || pmp_err_q) begin
           data_valid_o        = 1'b1;
+          data_or_pmp_err     = data_err_i | pmp_err_q;
           handle_misaligned_d = 1'b0;
           ls_fsm_ns           = IDLE;
         end else begin

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: data_or_pmp_err
                HdlValueInt: 0

UPD HdlStmIf@@ to 
    INS HdlOp@@OR_LOG to 
    UPD HdlOp@@OR_LOG to OR_LOG
        INS list@@ops to OR_LOG
        INS HdlValueId@@pmp_err_q to ops
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: data_or_pmp_err
                HdlOp: OR
                    list: ops
                        HdlValueId: data_err_i
                        HdlValueId: pmp_err_q

UPD HdlStmIf@@ to 
    MOV HdlValueId@@data_gnt_i to 
    HdlValueId: data_gnt_i

UPD HdlStmIf@@ to 
    MOV HdlValueId@@data_rvalid_i to 
    HdlValueId: data_rvalid_i


CommitId: 53ef2ec43c1c1eb00b771e17fc157f5bb1103ed5
Update lowrisc_ibex to lowRISC/ibex@d14312c
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_load_store_unit.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_load_store_unit.sv
@@ -421,10 +419,12 @@ module ibex_load_store_unit (
       ls_fsm_cs           <= IDLE;
       addr_last_q         <= '0;
       handle_misaligned_q <= '0;
+      pmp_err_q           <= '0;
     end else begin
       ls_fsm_cs           <= ls_fsm_ns;
       addr_last_q         <= addr_last_d;
       handle_misaligned_q <= handle_misaligned_d;
+      pmp_err_q           <= data_pmp_err_i;
     end
   end
 

ParseResult:
INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: pmp_err_q

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueId: data_pmp_err_i
    HdlValueId: pmp_err_q


CommitId: 53ef2ec43c1c1eb00b771e17fc157f5bb1103ed5
Update lowrisc_ibex to lowRISC/ibex@d14312c
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_load_store_unit.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_load_store_unit.sv
@@ -447,10 +447,9 @@ module ibex_load_store_unit (
   // output to ID stage: mtval + AGU for misaligned transactions
   assign addr_last_o   = addr_last_q;
 
-  // to know what kind of error to signal, we need to know the type of the transaction to which
-  // the outsanding rvalid belongs.
-  assign load_err_o    = data_err_i & data_rvalid_i & ~data_we_q;
-  assign store_err_o   = data_err_i & data_rvalid_i &  data_we_q;
+  // Signal a load or store error depending on the transaction type outstanding
+  assign load_err_o    = data_or_pmp_err & ~data_we_q;
+  assign store_err_o   = data_or_pmp_err &  data_we_q;
 
   assign busy_o = (ls_fsm_cs == WAIT_RVALID) | (data_req_o == 1'b1);
 
ParseResult:
INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: AND
        list: ops
            HdlValueId: data_or_pmp_err
            HdlValueId: data_we_q
    HdlValueId: store_err_o

UPD HdlStmAssign@@ to 
    UPD HdlOp@@AND to AND
        UPD HdlOp@@AND to AND
            UPD HdlValueId@@data_err_i to data_or_pmp_err
            MOV HdlValueId@@data_err_i to ops
            HdlValueId: data_err_i
            DEL HdlValueId@@data_rvalid_i from ops
            DEL list@@ops from AND
        DEL HdlOp@@AND from ops

DEL HdlStmAssign@@ from objs
HdlStmAssign
    HdlOp: AND
        list: ops
            HdlOp: AND
                list: ops
                    HdlValueId: data_err_i
                    HdlValueId: data_rvalid_i
            HdlValueId: data_we_q
    HdlValueId: store_err_o


CommitId: de6e479401510aed7041bd8581d29b7980624958
[entropy_src/rtl] IO changes updated
--- a/hw/ip/entropy_src/rtl/entropy_src_core.sv
+++ b/hw/ip/entropy_src/rtl/entropy_src_core.sv
@@ -26,11 +26,16 @@ module entropy_src_core import entropy_src_pkg::*; #(
   output entropy_src_rng_req_t entropy_src_rng_o,
   input  entropy_src_rng_rsp_t entropy_src_rng_i,
 
+  // External Health Test Interface
+  output entropy_src_xht_req_t entropy_src_xht_o,
+  input  entropy_src_xht_rsp_t entropy_src_xht_i,
+
   output logic           alert_event_o,
+  output logic           alert_test_o,
 
-  output logic           es_entropy_valid_o,
-  output logic           es_health_test_failed_o,
-  output logic           es_fifo_err_o
+  output logic           intr_es_entropy_valid_o,
+  output logic           intr_es_health_test_failed_o,
+  output logic           intr_es_fifo_err_o
 );
 
   import entropy_src_reg_pkg::*;

ParseResult:
INS HdlIdDef@@entropy_src_xht_o to ports
HdlIdDef: entropy_src_xht_o
    HdlValueId: entropy_src_xht_req_t
    HdlDirection: OUT

INS HdlIdDef@@entropy_src_xht_i to ports
HdlIdDef: entropy_src_xht_i
    HdlValueId: entropy_src_xht_rsp_t
    HdlDirection: IN

UPD HdlIdDef@@es_entropy_valid_o to alert_test_o

INS HdlIdDef@@intr_es_entropy_valid_o to ports
HdlIdDef: intr_es_entropy_valid_o
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: OUT

UPD HdlIdDef@@es_health_test_failed_o to intr_es_health_test_failed_o

UPD HdlIdDef@@es_fifo_err_o to intr_es_fifo_err_o


CommitId: de6e479401510aed7041bd8581d29b7980624958
[entropy_src/rtl] IO changes updated
--- a/hw/ip/entropy_src/rtl/entropy_src_core.sv
+++ b/hw/ip/entropy_src/rtl/entropy_src_core.sv
@@ -59,7 +64,7 @@ module entropy_src_core import entropy_src_pkg::*; #(
   logic       event_es_fifo_err;
   logic [15:0] es_rate;
   logic        es_rate_entropy_pulse;
-  logic        es_rng_src_ok;
+  logic        es_rng_src_valid;
   logic [RngBusWidth-1:0] es_rng_bus;
 
   logic [RngBusWidth-1:0] sfifo_esrng_wdata;

ParseResult:
UPD HdlIdDef@@es_rng_src_ok to es_rng_src_valid


CommitId: de6e479401510aed7041bd8581d29b7980624958
[entropy_src/rtl] IO changes updated
--- a/hw/ip/entropy_src/rtl/entropy_src_core.sv
+++ b/hw/ip/entropy_src/rtl/entropy_src_core.sv
@@ -93,6 +98,7 @@ module entropy_src_core import entropy_src_pkg::*; #(
   logic                     adaptp_active;
   logic                     bucket_active;
   logic                     markov_active;
+  logic                     extht_active;
   logic                     alert_cntrs_clr;
   logic                     health_test_clr;
   logic                     health_test_done_pulse;

ParseResult:
INS HdlIdDef@@extht_active to objs
HdlIdDef: extht_active
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL


CommitId: de6e479401510aed7041bd8581d29b7980624958
[entropy_src/rtl] IO changes updated
--- a/hw/ip/entropy_src/rtl/entropy_src_core.sv
+++ b/hw/ip/entropy_src/rtl/entropy_src_core.sv
@@ -157,6 +163,25 @@ module entropy_src_core import entropy_src_pkg::*; #(
   logic [EigthRegWidth-1:0] markov_fail_count;
   logic                     markov_fail_pulse;
 
+  logic [HalfRegWidth-1:0] extht_hi_fips_threshold;
+  logic [HalfRegWidth-1:0] extht_hi_bypass_threshold;
+  logic [HalfRegWidth-1:0] extht_hi_threshold;
+  logic [HalfRegWidth-1:0] extht_lo_fips_threshold;
+  logic [HalfRegWidth-1:0] extht_lo_bypass_threshold;
+  logic [HalfRegWidth-1:0] extht_lo_threshold;
+  logic [HalfRegWidth-1:0] extht_event_cnt;
+  logic [HalfRegWidth-1:0] extht_hi_event_hwm_fips;
+  logic [HalfRegWidth-1:0] extht_hi_event_hwm_bypass;
+  logic [HalfRegWidth-1:0] extht_lo_event_hwm_fips;
+  logic [HalfRegWidth-1:0] extht_lo_event_hwm_bypass;
+  logic [FullRegWidth-1:0] extht_hi_total_fails;
+  logic [FullRegWidth-1:0] extht_lo_total_fails;
+  logic [EigthRegWidth-1:0] extht_hi_fail_count;
+  logic [EigthRegWidth-1:0] extht_lo_fail_count;
+  logic                     extht_hi_fail_pulse;
+  logic                     extht_lo_fail_pulse;
+
+
   logic                     pfifo_esbit_wdata;
   logic [RngBusWidth-1:0]   pfifo_esbit_rdata;
   logic                     pfifo_esbit_not_empty;

ParseResult:
INS HdlIdDef@@extht_hi_fips_threshold to objs
HdlIdDef: extht_hi_fips_threshold
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlOp: SUB
                        list: ops
                            HdlValueId: HalfRegWidth
                            HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: INTERNAL

INS HdlIdDef@@extht_hi_bypass_threshold to objs
HdlIdDef: extht_hi_bypass_threshold
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlOp: SUB
                        list: ops
                            HdlValueId: HalfRegWidth
                            HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: INTERNAL

INS HdlIdDef@@extht_hi_threshold to objs
HdlIdDef: extht_hi_threshold
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlOp: SUB
                        list: ops
                            HdlValueId: HalfRegWidth
                            HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: INTERNAL

INS HdlIdDef@@extht_lo_fips_threshold to objs
HdlIdDef: extht_lo_fips_threshold
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlOp: SUB
                        list: ops
                            HdlValueId: HalfRegWidth
                            HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: INTERNAL

INS HdlIdDef@@extht_lo_bypass_threshold to objs
HdlIdDef: extht_lo_bypass_threshold
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlOp: SUB
                        list: ops
                            HdlValueId: HalfRegWidth
                            HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: INTERNAL

INS HdlIdDef@@extht_lo_threshold to objs
HdlIdDef: extht_lo_threshold
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlOp: SUB
                        list: ops
                            HdlValueId: HalfRegWidth
                            HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: INTERNAL

INS HdlIdDef@@extht_event_cnt to objs
HdlIdDef: extht_event_cnt
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlOp: SUB
                        list: ops
                            HdlValueId: HalfRegWidth
                            HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: INTERNAL

INS HdlIdDef@@extht_hi_event_hwm_fips to objs
HdlIdDef: extht_hi_event_hwm_fips
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlOp: SUB
                        list: ops
                            HdlValueId: HalfRegWidth
                            HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: INTERNAL

INS HdlIdDef@@extht_hi_event_hwm_bypass to objs
HdlIdDef: extht_hi_event_hwm_bypass
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlOp: SUB
                        list: ops
                            HdlValueId: HalfRegWidth
                            HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: INTERNAL

INS HdlIdDef@@extht_lo_event_hwm_fips to objs
HdlIdDef: extht_lo_event_hwm_fips
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlOp: SUB
                        list: ops
                            HdlValueId: HalfRegWidth
                            HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: INTERNAL

INS HdlIdDef@@extht_lo_event_hwm_bypass to objs
HdlIdDef: extht_lo_event_hwm_bypass
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlOp: SUB
                        list: ops
                            HdlValueId: HalfRegWidth
                            HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: INTERNAL

INS HdlIdDef@@extht_hi_total_fails to objs
HdlIdDef: extht_hi_total_fails
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlOp: SUB
                        list: ops
                            HdlValueId: FullRegWidth
                            HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: INTERNAL

INS HdlIdDef@@extht_lo_total_fails to objs
HdlIdDef: extht_lo_total_fails
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlOp: SUB
                        list: ops
                            HdlValueId: FullRegWidth
                            HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: INTERNAL

INS HdlIdDef@@extht_hi_fail_count to objs
HdlIdDef: extht_hi_fail_count
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlOp: SUB
                        list: ops
                            HdlValueId: EigthRegWidth
                            HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: INTERNAL

INS HdlIdDef@@extht_lo_fail_count to objs
HdlIdDef: extht_lo_fail_count
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlOp: SUB
                        list: ops
                            HdlValueId: EigthRegWidth
                            HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: INTERNAL

INS HdlIdDef@@extht_hi_fail_pulse to objs
HdlIdDef: extht_hi_fail_pulse
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

INS HdlIdDef@@extht_lo_fail_pulse to objs
HdlIdDef: extht_lo_fail_pulse
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL


CommitId: de6e479401510aed7041bd8581d29b7980624958
[entropy_src/rtl] IO changes updated
--- a/hw/ip/entropy_src/rtl/entropy_src_core.sv
+++ b/hw/ip/entropy_src/rtl/entropy_src_core.sv
@@ -233,7 +258,7 @@ module entropy_src_core import entropy_src_pkg::*; #(
 
   assign entropy_src_rng_o.rng_enable = es_enable_rng;
 
-  assign es_rng_src_ok = entropy_src_rng_i.rng_ok;
+  assign es_rng_src_valid = entropy_src_rng_i.rng_valid;
   assign es_rng_bus = entropy_src_rng_i.rng_b;
 
 

ParseResult:
INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: DOT
        list: ops
            HdlValueId: entropy_src_rng_i
            HdlValueId: rng_valid
    HdlValueId: es_rng_src_valid

DEL HdlStmAssign@@ from objs
HdlStmAssign
    HdlOp: DOT
        list: ops
            HdlValueId: entropy_src_rng_i
            HdlValueId: rng_ok
    HdlValueId: es_rng_src_ok


CommitId: de6e479401510aed7041bd8581d29b7980624958
[entropy_src/rtl] IO changes updated
--- a/hw/ip/entropy_src/rtl/entropy_src_core.sv
+++ b/hw/ip/entropy_src/rtl/entropy_src_core.sv
@@ -365,7 +390,9 @@ module entropy_src_core import entropy_src_pkg::*; #(
   );
 
   // fifo controls
-  assign sfifo_esrng_push = es_enable_rng && es_rng_src_ok && es_rate_entropy_pulse;
+  assign sfifo_esrng_push =
+         (es_enable_rng && es_rng_src_valid);
+
   assign sfifo_esrng_clr  = !es_enable;
   assign sfifo_esrng_wdata = es_rng_bus;
   assign sfifo_esrng_pop = es_enable && es_rate_entropy_pulse && sfifo_esrng_not_empty;

ParseResult:
INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: AND_LOG
        list: ops
            HdlValueId: es_enable_rng
            HdlValueId: es_rng_src_valid
    HdlValueId: sfifo_esrng_push

DEL HdlStmAssign@@ from objs
HdlStmAssign
    HdlOp: AND_LOG
        list: ops
            HdlOp: AND_LOG
                list: ops
                    HdlValueId: es_enable_rng
                    HdlValueId: es_rng_src_ok
            HdlValueId: es_rate_entropy_pulse
    HdlValueId: sfifo_esrng_push


CommitId: de6e479401510aed7041bd8581d29b7980624958
[entropy_src/rtl] IO changes updated
--- a/hw/ip/entropy_src/rtl/entropy_src_core.sv
+++ b/hw/ip/entropy_src/rtl/entropy_src_core.sv
@@ -422,10 +449,11 @@ module entropy_src_core import entropy_src_pkg::*; #(
   assign ht_esbus_dly_d     = health_test_esbus;
   assign ht_esbus_vld_dly2_d = ht_esbus_vld_dly_q;
 
-  assign repcnt_active = !reg2hw.conf.repcnt_disable.q;
-  assign adaptp_active = !reg2hw.conf.adaptp_disable.q;
-  assign bucket_active = !reg2hw.conf.bucket_disable.q;
-  assign markov_active = !reg2hw.conf.markov_disable.q;
+  assign repcnt_active = !reg2hw.conf.repcnt_disable.q && es_enable;
+  assign adaptp_active = !reg2hw.conf.adaptp_disable.q && es_enable;
+  assign bucket_active = !reg2hw.conf.bucket_disable.q && es_enable;
+  assign markov_active = !reg2hw.conf.markov_disable.q && es_enable;
+  assign extht_active = reg2hw.conf.extht_enable.q && es_enable;
 
   assign health_test_clr = reg2hw.conf.health_test_clr.q;
   assign health_test_fips_window = reg2hw.health_test_windows.fips_window.q;

ParseResult:
INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: AND_LOG
        list: ops
            HdlOp: DOT
                list: ops
                    HdlOp: DOT
                        list: ops
                            HdlOp: DOT
                                list: ops
                                    HdlValueId: reg2hw
                                    HdlValueId: conf
                            HdlValueId: extht_enable
                    HdlValueId: q
            HdlValueId: es_enable
    HdlValueId: extht_active

UPD HdlStmAssign@@ to 
    MOV HdlOp@@NEG_LOG to 
    HdlOp: NEG_LOG
        list: ops
            HdlOp: DOT
                list: ops
                    HdlOp: DOT
                        list: ops
                            HdlOp: DOT
                                list: ops
                                    HdlValueId: reg2hw
                                    HdlValueId: conf
                            HdlValueId: repcnt_disable
                    HdlValueId: q

UPD HdlStmAssign@@ to 
    MOV HdlOp@@NEG_LOG to 
    HdlOp: NEG_LOG
        list: ops
            HdlOp: DOT
                list: ops
                    HdlOp: DOT
                        list: ops
                            HdlOp: DOT
                                list: ops
                                    HdlValueId: reg2hw
                                    HdlValueId: conf
                            HdlValueId: adaptp_disable
                    HdlValueId: q

UPD HdlStmAssign@@ to 
    MOV HdlOp@@NEG_LOG to 
    HdlOp: NEG_LOG
        list: ops
            HdlOp: DOT
                list: ops
                    HdlOp: DOT
                        list: ops
                            HdlOp: DOT
                                list: ops
                                    HdlValueId: reg2hw
                                    HdlValueId: conf
                            HdlValueId: bucket_disable
                    HdlValueId: q

UPD HdlStmAssign@@ to 
    MOV HdlOp@@NEG_LOG to 
    HdlOp: NEG_LOG
        list: ops
            HdlOp: DOT
                list: ops
                    HdlOp: DOT
                        list: ops
                            HdlOp: DOT
                                list: ops
                                    HdlValueId: reg2hw
                                    HdlValueId: conf
                            HdlValueId: markov_disable
                    HdlValueId: q


CommitId: de6e479401510aed7041bd8581d29b7980624958
[entropy_src/rtl] IO changes updated
--- a/hw/ip/entropy_src/rtl/entropy_src_core.sv
+++ b/hw/ip/entropy_src/rtl/entropy_src_core.sv
@@ -445,6 +473,14 @@ module entropy_src_core import entropy_src_pkg::*; #(
 
   assign markov_fips_threshold = reg2hw.markov_thresholds.fips_markov_thresh.q;
   assign markov_bypass_threshold = reg2hw.markov_thresholds.bypass_markov_thresh.q;
+
+  assign extht_hi_fips_threshold = reg2hw.extht_hi_thresholds.fips_extht_hi_thresh.q;
+  assign extht_hi_bypass_threshold = reg2hw.extht_hi_thresholds.bypass_extht_hi_thresh.q;
+
+  assign extht_lo_fips_threshold = reg2hw.extht_lo_thresholds.fips_extht_lo_thresh.q;
+  assign extht_lo_bypass_threshold = reg2hw.extht_lo_thresholds.bypass_extht_lo_thresh.q;
+
+
   assign health_test_window = es_bypass_mode ? health_test_bypass_window : health_test_fips_window;
   assign repcnt_threshold = es_bypass_mode ? repcnt_bypass_threshold : repcnt_fips_threshold;
   assign adaptp_hi_threshold = es_bypass_mode ? adaptp_hi_bypass_threshold :

ParseResult:
INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: DOT
        list: ops
            HdlOp: DOT
                list: ops
                    HdlOp: DOT
                        list: ops
                            HdlValueId: reg2hw
                            HdlValueId: extht_hi_thresholds
                    HdlValueId: fips_extht_hi_thresh
            HdlValueId: q
    HdlValueId: extht_hi_fips_threshold

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: DOT
        list: ops
            HdlOp: DOT
                list: ops
                    HdlOp: DOT
                        list: ops
                            HdlValueId: reg2hw
                            HdlValueId: extht_hi_thresholds
                    HdlValueId: bypass_extht_hi_thresh
            HdlValueId: q
    HdlValueId: extht_hi_bypass_threshold

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: DOT
        list: ops
            HdlOp: DOT
                list: ops
                    HdlOp: DOT
                        list: ops
                            HdlValueId: reg2hw
                            HdlValueId: extht_lo_thresholds
                    HdlValueId: fips_extht_lo_thresh
            HdlValueId: q
    HdlValueId: extht_lo_fips_threshold

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: DOT
        list: ops
            HdlOp: DOT
                list: ops
                    HdlOp: DOT
                        list: ops
                            HdlValueId: reg2hw
                            HdlValueId: extht_lo_thresholds
                    HdlValueId: bypass_extht_lo_thresh
            HdlValueId: q
    HdlValueId: extht_lo_bypass_threshold

UPD HdlStmAssign@@ to 
    INS HdlOp@@AND_LOG to 
    UPD HdlOp@@AND_LOG to AND_LOG
        INS list@@ops to AND_LOG
        INS HdlValueId@@es_enable to ops

UPD HdlStmAssign@@ to 
    INS HdlOp@@AND_LOG to 
    UPD HdlOp@@AND_LOG to AND_LOG
        INS list@@ops to AND_LOG
        INS HdlValueId@@es_enable to ops

UPD HdlStmAssign@@ to 
    INS HdlOp@@AND_LOG to 
    UPD HdlOp@@AND_LOG to AND_LOG
        INS list@@ops to AND_LOG
        INS HdlValueId@@es_enable to ops

UPD HdlStmAssign@@ to 
    INS HdlOp@@AND_LOG to 
    UPD HdlOp@@AND_LOG to AND_LOG
        INS list@@ops to AND_LOG
        INS HdlValueId@@es_enable to ops


CommitId: de6e479401510aed7041bd8581d29b7980624958
[entropy_src/rtl] IO changes updated
--- a/hw/ip/entropy_src/rtl/entropy_src_core.sv
+++ b/hw/ip/entropy_src/rtl/entropy_src_core.sv
@@ -453,6 +489,10 @@ module entropy_src_core import entropy_src_pkg::*; #(
          adaptp_lo_fips_threshold;
   assign bucket_threshold = es_bypass_mode ? bucket_bypass_threshold : bucket_fips_threshold;
   assign markov_threshold = es_bypass_mode ? markov_bypass_threshold : markov_fips_threshold;
+  assign extht_hi_threshold = es_bypass_mode ? extht_hi_bypass_threshold :
+         extht_hi_fips_threshold;
+  assign extht_lo_threshold = es_bypass_mode ? extht_lo_bypass_threshold :
+         extht_lo_fips_threshold;
 
   assign event_es_health_test_failed = alert_event;
 

ParseResult:
INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: TERNARY
        list: ops
            HdlValueId: es_bypass_mode
            HdlValueId: extht_hi_bypass_threshold
            HdlValueId: extht_hi_fips_threshold
    HdlValueId: extht_hi_threshold

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: TERNARY
        list: ops
            HdlValueId: es_bypass_mode
            HdlValueId: extht_lo_bypass_threshold
            HdlValueId: extht_lo_fips_threshold
    HdlValueId: extht_lo_threshold


CommitId: de6e479401510aed7041bd8581d29b7980624958
[entropy_src/rtl] IO changes updated
--- a/hw/ip/entropy_src/rtl/entropy_src_core.sv
+++ b/hw/ip/entropy_src/rtl/entropy_src_core.sv
@@ -797,7 +942,11 @@ module entropy_src_core import entropy_src_pkg::*; #(
   assign alert_event = (any_fail_count >= alert_threshold) && (alert_threshold != '0);
   assign alert_event_o = alert_event;
 
+  // alert test
+  assign alert_test_o = reg2hw.alert_test.qe && reg2hw.alert_test.q;
 
+
+  // repcnt fail counter
   entropy_src_cntr_reg #(
     .RegWidth(EigthRegWidth)
   ) u_entropy_src_cntr_reg_repcnt_alert_fails (

ParseResult:
INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: AND_LOG
        list: ops
            HdlOp: DOT
                list: ops
                    HdlOp: DOT
                        list: ops
                            HdlValueId: reg2hw
                            HdlValueId: alert_test
                    HdlValueId: qe
            HdlOp: DOT
                list: ops
                    HdlOp: DOT
                        list: ops
                            HdlValueId: reg2hw
                            HdlValueId: alert_test
                    HdlValueId: q
    HdlValueId: alert_test_o


CommitId: 2de46f6dd9a3db8d3425364c0b834d63d0b7a3b6
[entropy_src/rtl] fixes to address issue #3511
--- a/hw/ip/entropy_src/rtl/entropy_src_cntr_reg.sv
+++ b/hw/ip/entropy_src/rtl/entropy_src_cntr_reg.sv
@@ -6,7 +6,7 @@
 //
 
 module entropy_src_cntr_reg #(
-  parameter int unsigned RegWidth = 16
+  parameter int RegWidth = 16
 ) (
   input logic                   clk_i,
   input logic                   rst_ni,
ParseResult:
UPD HdlIdDef@@RegWidth to RegWidth
    UPD HdlOp@@PARAMETRIZATION to PARAMETRIZATION
        MOV HdlValueId@@int to ops
        HdlValueId: int
        DEL HdlOp@@MAP_ASSOCIATION from ops
        HdlOp: MAP_ASSOCIATION
            list: ops
                HdlValueId: signed
        DEL list@@ops from PARAMETRIZATION
    DEL HdlOp@@PARAMETRIZATION from RegWidth


CommitId: c41bfe1043449bfdbd15c5d21230c279f556ddc7
[top] Review and update of clock / reset settings for all modules
--- a/hw/top_earlgrey/rtl/autogen/chip_earlgrey_asic.sv
+++ b/hw/top_earlgrey/rtl/autogen/chip_earlgrey_asic.sv
@@ -934,27 +934,24 @@ module chip_earlgrey_asic (
   assign unused_usb_clk_io_div4 = clks_ast.clk_ast_usbdev_io_div4_peri;
   assign unused_adc_clk_aon = clks_ast.clk_ast_adc_ctrl_aon_aon_peri;
 
-  logic unused_usb_usb_rst;
-  logic [PowerDomains-1:0] unused_usb_sys_io_div4_rst;
+  logic [PowerDomains-1:0] unused_usb_rst;
+  logic [PowerDomains-1:0] unused_usb_usbif_rst;
   logic [PowerDomains-1:0] unused_usb_sys_aon_rst;
   logic [PowerDomains-1:0] unused_adc_ctrl_sys_aon_rst;
-  logic unused_ast_sys_io_div4_rst;
-  logic unused_sensor_ctrl_sys_io_div4_rst;
-  logic unused_adc_ctrl_sys_io_div4_rst;
-  logic unused_entropy_sys_rst;
-  logic unused_edn_sys_rst;
-  assign unused_usb_usb_rst = rsts_ast.rst_ast_usbdev_usb_n[DomainAonSel];
-  assign unused_usb_sys_io_div4_rst = rsts_ast.rst_ast_usbdev_sys_io_div4_n;
+  logic [PowerDomains-1:0] unused_ast_rst;
+  logic [PowerDomains-1:0] unused_sensor_ctrl_rst;
+  logic [PowerDomains-1:0] unused_adc_ctrl_rst;
+  logic [PowerDomains-1:0] unused_entropy_sys_rst;
+  logic [PowerDomains-1:0] unused_edn_sys_rst;
+  assign unused_usb_rst = rsts_ast.rst_ast_usbdev_usb_n;
   assign unused_usb_sys_aon_rst = rsts_ast.rst_ast_usbdev_sys_aon_n;
+  assign unused_usb_usbif_rst = rsts_ast.rst_ast_usbdev_usbif_n;
   assign unused_adc_ctrl_sys_aon_rst = rsts_ast.rst_ast_adc_ctrl_aon_sys_aon_n;
-  assign unused_ast_sys_io_div4_rst =
-    rsts_ast.rst_ast_ast_sys_io_div4_n[Domain0Sel];
-  assign unused_sensor_ctrl_sys_io_div4_rst =
-    rsts_ast.rst_ast_sensor_ctrl_aon_sys_io_div4_n[Domain0Sel];
-  assign unused_adc_ctrl_sys_io_div4_rst =
-    rsts_ast.rst_ast_adc_ctrl_aon_sys_io_div4_n[Domain0Sel];
-  assign unused_entropy_sys_rst = rsts_ast.rst_ast_entropy_src_sys_n[DomainAonSel];
-  assign unused_edn_sys_rst = rsts_ast.rst_ast_edn0_sys_n[DomainAonSel];
+  assign unused_ast_rst = rsts_ast.rst_ast_ast_lc_io_div4_n;
+  assign unused_sensor_ctrl_rst = rsts_ast.rst_ast_sensor_ctrl_aon_lc_io_div4_n;
+  assign unused_adc_ctrl_rst = rsts_ast.rst_ast_adc_ctrl_aon_sys_io_div4_n;
+  assign unused_entropy_sys_rst = rsts_ast.rst_ast_entropy_src_sys_n;
+  assign unused_edn_sys_rst = rsts_ast.rst_ast_edn0_sys_n;
 
   logic unused_pwr_clamp;
   assign unused_pwr_clamp = base_ast_pwr.pwr_clamp;

ParseResult:
INS HdlIdDef@@unused_usb_rst to objs
HdlIdDef: unused_usb_rst
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlOp: SUB
                        list: ops
                            HdlValueId: PowerDomains
                            HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: INTERNAL

UPD HdlIdDef@@unused_usb_sys_io_div4_rst to unused_usb_usbif_rst

INS HdlIdDef@@unused_ast_rst to objs
HdlIdDef: unused_ast_rst
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlOp: SUB
                        list: ops
                            HdlValueId: PowerDomains
                            HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: INTERNAL

INS HdlIdDef@@unused_sensor_ctrl_rst to objs
HdlIdDef: unused_sensor_ctrl_rst
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlOp: SUB
                        list: ops
                            HdlValueId: PowerDomains
                            HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: INTERNAL

INS HdlIdDef@@unused_adc_ctrl_rst to objs
HdlIdDef: unused_adc_ctrl_rst
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlOp: SUB
                        list: ops
                            HdlValueId: PowerDomains
                            HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: INTERNAL

INS HdlIdDef@@unused_entropy_sys_rst to objs
HdlIdDef: unused_entropy_sys_rst
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlOp: SUB
                        list: ops
                            HdlValueId: PowerDomains
                            HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: INTERNAL

INS HdlIdDef@@unused_edn_sys_rst to objs
HdlIdDef: unused_edn_sys_rst
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlOp: SUB
                        list: ops
                            HdlValueId: PowerDomains
                            HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: INTERNAL

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: DOT
        list: ops
            HdlValueId: rsts_ast
            HdlValueId: rst_ast_usbdev_usbif_n
    HdlValueId: unused_usb_usbif_rst

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: DOT
        list: ops
            HdlValueId: rsts_ast
            HdlValueId: rst_ast_ast_lc_io_div4_n
    HdlValueId: unused_ast_rst

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: DOT
        list: ops
            HdlValueId: rsts_ast
            HdlValueId: rst_ast_sensor_ctrl_aon_lc_io_div4_n
    HdlValueId: unused_sensor_ctrl_rst

UPD HdlStmAssign@@ to 
    UPD HdlOp@@INDEX to INDEX
        MOV HdlOp@@DOT to ops
        HdlOp: DOT
            list: ops
                HdlValueId: rsts_ast
                HdlValueId: rst_ast_usbdev_usb_n
        DEL HdlValueId@@DomainAonSel from ops
        DEL list@@ops from INDEX
    UPD HdlValueId@@unused_usb_usb_rst to unused_usb_rst
    DEL HdlOp@@INDEX from 

UPD HdlStmAssign@@ to 
    UPD HdlOp@@INDEX to INDEX
        MOV HdlOp@@DOT to ops
        HdlOp: DOT
            list: ops
                HdlValueId: rsts_ast
                HdlValueId: rst_ast_adc_ctrl_aon_sys_io_div4_n
        DEL HdlValueId@@Domain0Sel from ops
        DEL list@@ops from INDEX
    UPD HdlValueId@@unused_adc_ctrl_sys_io_div4_rst to unused_adc_ctrl_rst
    DEL HdlOp@@INDEX from 

UPD HdlStmAssign@@ to 
    UPD HdlOp@@INDEX to INDEX
        MOV HdlOp@@DOT to ops
        HdlOp: DOT
            list: ops
                HdlValueId: rsts_ast
                HdlValueId: rst_ast_entropy_src_sys_n
        DEL HdlValueId@@DomainAonSel from ops
        DEL list@@ops from INDEX
    DEL HdlOp@@INDEX from 

UPD HdlStmAssign@@ to 
    UPD HdlOp@@INDEX to INDEX
        MOV HdlOp@@DOT to ops
        HdlOp: DOT
            list: ops
                HdlValueId: rsts_ast
                HdlValueId: rst_ast_edn0_sys_n
        DEL HdlValueId@@DomainAonSel from ops
        DEL list@@ops from INDEX
    DEL HdlOp@@INDEX from 

DEL HdlIdDef@@unused_usb_usb_rst from objs
HdlIdDef: unused_usb_usb_rst
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

DEL HdlIdDef@@unused_ast_sys_io_div4_rst from objs
HdlIdDef: unused_ast_sys_io_div4_rst
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

DEL HdlIdDef@@unused_sensor_ctrl_sys_io_div4_rst from objs
HdlIdDef: unused_sensor_ctrl_sys_io_div4_rst
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

DEL HdlIdDef@@unused_adc_ctrl_sys_io_div4_rst from objs
HdlIdDef: unused_adc_ctrl_sys_io_div4_rst
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

DEL HdlIdDef@@unused_entropy_sys_rst from objs
HdlIdDef: unused_entropy_sys_rst
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

DEL HdlIdDef@@unused_edn_sys_rst from objs
HdlIdDef: unused_edn_sys_rst
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

DEL HdlStmAssign@@ from objs
HdlStmAssign
    HdlOp: DOT
        list: ops
            HdlValueId: rsts_ast
            HdlValueId: rst_ast_usbdev_sys_io_div4_n
    HdlValueId: unused_usb_sys_io_div4_rst

DEL HdlStmAssign@@ from objs
HdlStmAssign
    HdlOp: INDEX
        list: ops
            HdlOp: DOT
                list: ops
                    HdlValueId: rsts_ast
                    HdlValueId: rst_ast_ast_sys_io_div4_n
            HdlValueId: Domain0Sel
    HdlValueId: unused_ast_sys_io_div4_rst

DEL HdlStmAssign@@ from objs
HdlStmAssign
    HdlOp: INDEX
        list: ops
            HdlOp: DOT
                list: ops
                    HdlValueId: rsts_ast
                    HdlValueId: rst_ast_sensor_ctrl_aon_sys_io_div4_n
            HdlValueId: Domain0Sel
    HdlValueId: unused_sensor_ctrl_sys_io_div4_rst


CommitId: c15f33a720280f5c7f1609d1630049b1676d6628
[rtl, dv] Fix top_earlgrey_asic, dv updates
--- a/hw/top_earlgrey/rtl/top_earlgrey_asic.sv
+++ b/hw/top_earlgrey/rtl/top_earlgrey_asic.sv
@@ -8,11 +8,14 @@ module top_earlgrey_asic (
   input               IO_RST_N,
   input               IO_CLK_USB_48MHZ,
   // JTAG interface
-  input               IO_JTCK,
-  input               IO_JTMS,
-  input               IO_JTDI,
-  input               IO_JTRST_N,
-  output              IO_JTDO,
+  input               IO_DPS0, // IO_JTCK,    IO_SDCK
+  input               IO_DPS3, // IO_JTMS,    IO_SDCSB
+  input               IO_DPS1, // IO_JTDI,    IO_SDMOSI
+  input               IO_DPS4, // IO_JTRST_N,
+  input               IO_DPS5, // IO_JSRST_N,
+  output              IO_DPS2, // IO_JTDO,    IO_MISO
+  input               IO_DPS6, // JTAG=0,     SPI=1
+  input               IO_DPS7, // BOOTSTRAP=1
   // UART interface
   input               IO_URX,
   output              IO_UTX,

ParseResult:
UPD HdlIdDef@@IO_JTCK to IO_DPS0

UPD HdlIdDef@@IO_JTMS to IO_DPS3

UPD HdlIdDef@@IO_JTDI to IO_DPS1

UPD HdlIdDef@@IO_JTRST_N to IO_DPS4

INS HdlIdDef@@IO_DPS5 to ports
HdlIdDef: IO_DPS5
    HdlValueId: wire
    HdlDirection: IN

UPD HdlIdDef@@IO_JTDO to IO_DPS2

INS HdlIdDef@@IO_DPS6 to ports
HdlIdDef: IO_DPS6
    HdlValueId: wire
    HdlDirection: IN

INS HdlIdDef@@IO_DPS7 to ports
HdlIdDef: IO_DPS7
    HdlValueId: wire
    HdlDirection: IN


CommitId: 66c509296798cdd9dbeba4deeb381d0cecf3b429
[usbdev] Fixes for I/O modes and expand their tests
--- a/hw/top_earlgrey/rtl/top_earlgrey_nexysvideo.sv
+++ b/hw/top_earlgrey/rtl/top_earlgrey_nexysvideo.sv
@@ -60,9 +60,9 @@ module top_earlgrey_nexysvideo #(
   logic [padctrl_reg_pkg::NMioPads-1:0] mio_out_core, mio_out_padring;
   logic [padctrl_reg_pkg::NMioPads-1:0] mio_oe_core, mio_oe_padring;
   logic [padctrl_reg_pkg::NMioPads-1:0] mio_in_core, mio_in_padring;
-  logic [padctrl_reg_pkg::NDioPads-1:0] dio_out_core, dio_out_padring;
-  logic [padctrl_reg_pkg::NDioPads-1:0] dio_oe_core, dio_oe_padring;
-  logic [padctrl_reg_pkg::NDioPads-1:0] dio_in_core, dio_in_padring;
+  logic [padctrl_reg_pkg::NDioPads-1:0] dio_out_core, dio_out_umux, dio_out_padring;
+  logic [padctrl_reg_pkg::NDioPads-1:0] dio_oe_core, dio_oe_umux, dio_oe_padring;
+  logic [padctrl_reg_pkg::NDioPads-1:0] dio_in_core, dio_in_umux, dio_in_padring;
 
   padring #(
     // MIOs 31:20 are currently not

ParseResult:
INS HdlIdDef@@dio_out_umux to objs
HdlIdDef: dio_out_umux
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlOp: SUB
                        list: ops
                            HdlOp: DOUBLE_COLON
                                list: ops
                                    HdlValueId: padctrl_reg_pkg
                                    HdlValueId: NDioPads
                            HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: INTERNAL

INS HdlIdDef@@dio_oe_umux to objs
HdlIdDef: dio_oe_umux
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlOp: SUB
                        list: ops
                            HdlOp: DOUBLE_COLON
                                list: ops
                                    HdlValueId: padctrl_reg_pkg
                                    HdlValueId: NDioPads
                            HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: INTERNAL

INS HdlIdDef@@dio_in_umux to objs
HdlIdDef: dio_in_umux
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlOp: SUB
                        list: ops
                            HdlOp: DOUBLE_COLON
                                list: ops
                                    HdlValueId: padctrl_reg_pkg
                                    HdlValueId: NDioPads
                            HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: INTERNAL


CommitId: 53ef2ec43c1c1eb00b771e17fc157f5bb1103ed5
Update lowrisc_ibex to lowRISC/ibex@d14312c
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_cs_registers.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_cs_registers.sv
@@ -1,24 +1,8 @@
 // Copyright lowRISC contributors.
-// Copyright 2018 ETH Zurich and University of Bologna.
+// Copyright 2018 ETH Zurich and University of Bologna, see also CREDITS.md.
 // Licensed under the Apache License, Version 2.0, see LICENSE for details.
 // SPDX-License-Identifier: Apache-2.0
 
-////////////////////////////////////////////////////////////////////////////////
-// Engineer:       Sven Stucki - svstucki@student.ethz.ch                     //
-//                                                                            //
-// Additional contributions by:                                               //
-//                 Andreas Traber - atraber@iis.ee.ethz.ch                    //
-//                 Davide Schiavone - pschiavo@iis.ee.ethz.ch                 //
-//                                                                            //
-// Design Name:    Control and Status Registers                               //
-// Project Name:   ibex                                                       //
-// Language:       SystemVerilog                                              //
-//                                                                            //
-// Description:    Control and Status Registers (CSRs) following the RISC-V   //
-//                 Privileged Specification, draft version 1.11               //
-//                                                                            //
-////////////////////////////////////////////////////////////////////////////////
-
 /**
  * Control and Status Registers
  *

ParseResult:
UPD HdlIdDef@@priv_mode_o to priv_mode_o
    UPD HdlOp@@DOUBLE_COLON to DOUBLE_COLON
        INS HdlValueId@@priv_lvl_e to ops


CommitId: 53ef2ec43c1c1eb00b771e17fc157f5bb1103ed5
Update lowrisc_ibex to lowRISC/ibex@d14312c
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_cs_registers.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_cs_registers.sv
@@ -28,6 +12,9 @@
 module ibex_cs_registers #(
     parameter int unsigned MHPMCounterNum   = 8,
     parameter int unsigned MHPMCounterWidth = 40,
+    parameter bit          PMPEnable        = 0,
+    parameter int unsigned PMPGranularity   = 0,
+    parameter int unsigned PMPNumRegions    = 4,
     parameter bit RV32E                     = 0,
     parameter bit RV32M                     = 0
 ) (

ParseResult:
INS HdlIdDef@@PMPEnable to params
HdlIdDef: PMPEnable
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: bit
    HdlValueInt: 0
    HdlDirection: INTERNAL

INS HdlIdDef@@PMPGranularity to params
HdlIdDef: PMPGranularity
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: int
            HdlOp: MAP_ASSOCIATION
                list: ops
                    HdlValueId: signed
    HdlValueInt: 0
    HdlDirection: INTERNAL

INS HdlIdDef@@PMPNumRegions to params
HdlIdDef: PMPNumRegions
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: int
            HdlOp: MAP_ASSOCIATION
                list: ops
                    HdlValueId: signed
    HdlValueInt: 4
    HdlDirection: INTERNAL


CommitId: 53ef2ec43c1c1eb00b771e17fc157f5bb1103ed5
Update lowrisc_ibex to lowRISC/ibex@d14312c
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_cs_registers.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_cs_registers.sv
@@ -35,9 +22,9 @@ module ibex_cs_registers #(
     input  logic                 clk_i,
     input  logic                 rst_ni,
 
-    // Core and Cluster ID
-    input  logic  [3:0]          core_id_i,
-    input  logic  [5:0]          cluster_id_i,
+    // Hart ID
+    input  logic [31:0]          hart_id_i,
+    output ibex_pkg::priv_lvl_e  priv_mode_o,
 
     // mtvec
     output logic [31:0]          csr_mtvec_o,

ParseResult:
UPD HdlIdDef@@core_id_i to hart_id_i

UPD HdlIdDef@@cluster_id_i to priv_mode_o

UPD HdlIdDef@@cluster_id_i to cluster_id_i
    UPD HdlOp@@PARAMETRIZATION to DOUBLE_COLON
    UPD HdlDirection@@IN to OUT
    UPD HdlOp@@PARAMETRIZATION to PARAMETRIZATION
        UPD HdlValueId@@logic to ibex_pkg
        DEL HdlOp@@DOWNTO from ops
        HdlOp: DOWNTO
            list: ops
                HdlValueInt: 5
                HdlValueInt: 0

UPD HdlIdDef@@core_id_i to core_id_i
    UPD HdlOp@@PARAMETRIZATION to PARAMETRIZATION
        UPD HdlOp@@DOWNTO to DOWNTO
            UPD HdlValueInt@@3 to 31


CommitId: 53ef2ec43c1c1eb00b771e17fc157f5bb1103ed5
Update lowrisc_ibex to lowRISC/ibex@d14312c
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_cs_registers.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_cs_registers.sv
@@ -64,7 +51,12 @@ module ibex_cs_registers #(
     output logic                 csr_mstatus_mie_o,
     output logic [31:0]          csr_mepc_o,
 
+    // PMP
+    output ibex_pkg::pmp_cfg_t   csr_pmp_cfg_o  [PMPNumRegions],
+    output logic [33:0]          csr_pmp_addr_o [PMPNumRegions],
+
     // debug
+    input  logic                 debug_mode_i,
     input  ibex_pkg::dbg_cause_e debug_cause_i,
     input  logic                 debug_csr_save_i,
     output logic [31:0]          csr_depc_o,

ParseResult:
INS HdlIdDef@@csr_pmp_cfg_o to ports
HdlIdDef: csr_pmp_cfg_o
    HdlOp: INDEX
        list: ops
            HdlOp: DOUBLE_COLON
                list: ops
                    HdlValueId: ibex_pkg
                    HdlValueId: pmp_cfg_t
            HdlValueId: PMPNumRegions
    HdlDirection: OUT

INS HdlIdDef@@csr_pmp_addr_o to ports
HdlIdDef: csr_pmp_addr_o
    HdlOp: INDEX
        list: ops
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: logic
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 33
                            HdlValueInt: 0
            HdlValueId: PMPNumRegions
    HdlDirection: OUT

INS HdlIdDef@@debug_mode_i to ports
HdlIdDef: debug_mode_i
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: IN


CommitId: 53ef2ec43c1c1eb00b771e17fc157f5bb1103ed5
Update lowrisc_ibex to lowRISC/ibex@d14312c
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_cs_registers.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_cs_registers.sv
@@ -172,6 +164,10 @@ module ibex_cs_registers #(
   logic [31:0] mstack_epc_q, mstack_epc_d;
   logic  [5:0] mstack_cause_q, mstack_cause_d;
 
+  // PMP Signals
+  logic [31:0]                 pmp_addr_rdata  [PMP_MAX_REGIONS];
+  logic [PMP_CFG_W-1:0]        pmp_cfg_rdata   [PMP_MAX_REGIONS];
+
   // Hardware performance monitor signals
   logic [31:0] mcountinhibit_d, mcountinhibit_q, mcountinhibit;
   logic [31:0] mcountinhibit_force;

ParseResult:
INS HdlIdDef@@pmp_addr_rdata to objs
HdlIdDef: pmp_addr_rdata
    HdlOp: INDEX
        list: ops
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: logic
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 31
                            HdlValueInt: 0
            HdlValueId: PMP_MAX_REGIONS
    HdlDirection: INTERNAL

INS HdlIdDef@@pmp_cfg_rdata to objs
HdlIdDef: pmp_cfg_rdata
    HdlOp: INDEX
        list: ops
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: logic
                    HdlOp: DOWNTO
                        list: ops
                            HdlOp: SUB
                                list: ops
                                    HdlValueId: PMP_CFG_W
                                    HdlValueInt: 1
                            HdlValueInt: 0
            HdlValueId: PMP_MAX_REGIONS
    HdlDirection: INTERNAL


CommitId: 53ef2ec43c1c1eb00b771e17fc157f5bb1103ed5
Update lowrisc_ibex to lowRISC/ibex@d14312c
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_cs_registers.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_cs_registers.sv
@@ -225,7 +221,7 @@ module ibex_cs_registers #(
 
     unique case (csr_addr_i)
       // mhartid: unique hardware thread id
-      CSR_MHARTID: csr_rdata_int = {21'b0, cluster_id_i[5:0], 1'b0, core_id_i[3:0]};
+      CSR_MHARTID: csr_rdata_int = hart_id_i;
 
       // mstatus: always M-mode, contains IE bit
       CSR_MSTATUS: begin

ParseResult:
UPD HdlStmCase@@csr_addr_i to csr_addr_i
    INS tuple@@ to cases
    tuple
        HdlValueId: CSR_PMPCFG0
        HdlOp: ASSIGN
            list: ops
                HdlValueId: csr_rdata_int
                HdlOp: CONCAT
                    list: ops
                        HdlOp: CONCAT
                            list: ops
                                HdlOp: CONCAT
                                    list: ops
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: pmp_cfg_rdata
                                                HdlValueInt: 3
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: pmp_cfg_rdata
                                                HdlValueInt: 2
                                HdlOp: INDEX
                                    list: ops
                                        HdlValueId: pmp_cfg_rdata
                                        HdlValueInt: 1
                        HdlOp: INDEX
                            list: ops
                                HdlValueId: pmp_cfg_rdata
                                HdlValueInt: 0
    INS tuple@@ to cases
    tuple
        HdlValueId: CSR_PMPCFG1
        HdlOp: ASSIGN
            list: ops
                HdlValueId: csr_rdata_int
                HdlOp: CONCAT
                    list: ops
                        HdlOp: CONCAT
                            list: ops
                                HdlOp: CONCAT
                                    list: ops
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: pmp_cfg_rdata
                                                HdlValueInt: 7
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: pmp_cfg_rdata
                                                HdlValueInt: 6
                                HdlOp: INDEX
                                    list: ops
                                        HdlValueId: pmp_cfg_rdata
                                        HdlValueInt: 5
                        HdlOp: INDEX
                            list: ops
                                HdlValueId: pmp_cfg_rdata
                                HdlValueInt: 4
    INS tuple@@ to cases
    tuple
        HdlValueId: CSR_PMPCFG2
        HdlOp: ASSIGN
            list: ops
                HdlValueId: csr_rdata_int
                HdlOp: CONCAT
                    list: ops
                        HdlOp: CONCAT
                            list: ops
                                HdlOp: CONCAT
                                    list: ops
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: pmp_cfg_rdata
                                                HdlValueInt: 11
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: pmp_cfg_rdata
                                                HdlValueInt: 10
                                HdlOp: INDEX
                                    list: ops
                                        HdlValueId: pmp_cfg_rdata
                                        HdlValueInt: 9
                        HdlOp: INDEX
                            list: ops
                                HdlValueId: pmp_cfg_rdata
                                HdlValueInt: 8
    INS tuple@@ to cases
    tuple
        HdlValueId: CSR_PMPCFG3
        HdlOp: ASSIGN
            list: ops
                HdlValueId: csr_rdata_int
                HdlOp: CONCAT
                    list: ops
                        HdlOp: CONCAT
                            list: ops
                                HdlOp: CONCAT
                                    list: ops
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: pmp_cfg_rdata
                                                HdlValueInt: 15
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: pmp_cfg_rdata
                                                HdlValueInt: 14
                                HdlOp: INDEX
                                    list: ops
                                        HdlValueId: pmp_cfg_rdata
                                        HdlValueInt: 13
                        HdlOp: INDEX
                            list: ops
                                HdlValueId: pmp_cfg_rdata
                                HdlValueInt: 12
    INS tuple@@ to cases
    tuple
        HdlValueId: CSR_PMPADDR0
        HdlOp: ASSIGN
            list: ops
                HdlValueId: csr_rdata_int
                HdlOp: INDEX
                    list: ops
                        HdlValueId: pmp_addr_rdata
                        HdlValueInt: 0
    INS tuple@@ to cases
    tuple
        HdlValueId: CSR_PMPADDR1
        HdlOp: ASSIGN
            list: ops
                HdlValueId: csr_rdata_int
                HdlOp: INDEX
                    list: ops
                        HdlValueId: pmp_addr_rdata
                        HdlValueInt: 1
    INS tuple@@ to cases
    tuple
        HdlValueId: CSR_PMPADDR2
        HdlOp: ASSIGN
            list: ops
                HdlValueId: csr_rdata_int
                HdlOp: INDEX
                    list: ops
                        HdlValueId: pmp_addr_rdata
                        HdlValueInt: 2
    INS tuple@@ to cases
    tuple
        HdlValueId: CSR_PMPADDR3
        HdlOp: ASSIGN
            list: ops
                HdlValueId: csr_rdata_int
                HdlOp: INDEX
                    list: ops
                        HdlValueId: pmp_addr_rdata
                        HdlValueInt: 3
    INS tuple@@ to cases
    tuple
        HdlValueId: CSR_PMPADDR4
        HdlOp: ASSIGN
            list: ops
                HdlValueId: csr_rdata_int
                HdlOp: INDEX
                    list: ops
                        HdlValueId: pmp_addr_rdata
                        HdlValueInt: 4
    INS tuple@@ to cases
    tuple
        HdlValueId: CSR_PMPADDR5
        HdlOp: ASSIGN
            list: ops
                HdlValueId: csr_rdata_int
                HdlOp: INDEX
                    list: ops
                        HdlValueId: pmp_addr_rdata
                        HdlValueInt: 5
    INS tuple@@ to cases
    tuple
        HdlValueId: CSR_PMPADDR6
        HdlOp: ASSIGN
            list: ops
                HdlValueId: csr_rdata_int
                HdlOp: INDEX
                    list: ops
                        HdlValueId: pmp_addr_rdata
                        HdlValueInt: 6
    INS tuple@@ to cases
    tuple
        HdlValueId: CSR_PMPADDR7
        HdlOp: ASSIGN
            list: ops
                HdlValueId: csr_rdata_int
                HdlOp: INDEX
                    list: ops
                        HdlValueId: pmp_addr_rdata
                        HdlValueInt: 7
    INS tuple@@ to cases
    tuple
        HdlValueId: CSR_PMPADDR8
        HdlOp: ASSIGN
            list: ops
                HdlValueId: csr_rdata_int
                HdlOp: INDEX
                    list: ops
                        HdlValueId: pmp_addr_rdata
                        HdlValueInt: 8
    INS tuple@@ to cases
    tuple
        HdlValueId: CSR_PMPADDR9
        HdlOp: ASSIGN
            list: ops
                HdlValueId: csr_rdata_int
                HdlOp: INDEX
                    list: ops
                        HdlValueId: pmp_addr_rdata
                        HdlValueInt: 9
    INS tuple@@ to cases
    tuple
        HdlValueId: CSR_PMPADDR10
        HdlOp: ASSIGN
            list: ops
                HdlValueId: csr_rdata_int
                HdlOp: INDEX
                    list: ops
                        HdlValueId: pmp_addr_rdata
                        HdlValueInt: 10
    INS tuple@@ to cases
    tuple
        HdlValueId: CSR_PMPADDR11
        HdlOp: ASSIGN
            list: ops
                HdlValueId: csr_rdata_int
                HdlOp: INDEX
                    list: ops
                        HdlValueId: pmp_addr_rdata
                        HdlValueInt: 11
    INS tuple@@ to cases
    tuple
        HdlValueId: CSR_PMPADDR12
        HdlOp: ASSIGN
            list: ops
                HdlValueId: csr_rdata_int
                HdlOp: INDEX
                    list: ops
                        HdlValueId: pmp_addr_rdata
                        HdlValueInt: 12
    INS tuple@@ to cases
    tuple
        HdlValueId: CSR_PMPADDR13
        HdlOp: ASSIGN
            list: ops
                HdlValueId: csr_rdata_int
                HdlOp: INDEX
                    list: ops
                        HdlValueId: pmp_addr_rdata
                        HdlValueInt: 13
    INS tuple@@ to cases
    tuple
        HdlValueId: CSR_PMPADDR14
        HdlOp: ASSIGN
            list: ops
                HdlValueId: csr_rdata_int
                HdlOp: INDEX
                    list: ops
                        HdlValueId: pmp_addr_rdata
                        HdlValueInt: 14
    INS tuple@@ to cases
    tuple
        HdlValueId: CSR_PMPADDR15
        HdlOp: ASSIGN
            list: ops
                HdlValueId: csr_rdata_int
                HdlOp: INDEX
                    list: ops
                        HdlValueId: pmp_addr_rdata
                        HdlValueInt: 15
    INS HdlStmBlock@@SEQ to 
    INS HdlStmBlock@@SEQ to 
    INS HdlStmBlock@@SEQ to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: illegal_csr
                HdlOp: NEG
                    list: ops
                        HdlValueId: debug_mode_i
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: illegal_csr
                HdlOp: NEG
                    list: ops
                        HdlValueId: debug_mode_i
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: illegal_csr
                HdlOp: NEG
                    list: ops
                        HdlValueId: debug_mode_i
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: illegal_csr
                HdlOp: NEG
                    list: ops
                        HdlValueId: debug_mode_i

UPD HdlStmCase@@csr_addr_i to csr_addr_i
    UPD HdlOp@@ASSIGN to ASSIGN
        UPD HdlOp@@CONCAT to CONCAT
            UPD HdlOp@@INDEX to INDEX
                UPD HdlValueId@@core_id_i to hart_id_i
                MOV HdlValueId@@core_id_i to ops
                HdlValueId: core_id_i
                DEL HdlOp@@DOWNTO from ops
                HdlOp: DOWNTO
                    list: ops
                        HdlValueInt: 3
                        HdlValueInt: 0
                DEL list@@ops from INDEX
            DEL HdlOp@@CONCAT from ops
            HdlOp: CONCAT
                list: ops
                    HdlOp: CONCAT
                        list: ops
                            HdlValueInt: 0
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: cluster_id_i
                                    HdlOp: DOWNTO
                                        list: ops
                                            HdlValueInt: 5
                                            HdlValueInt: 0
                    HdlValueInt: 0
            DEL HdlOp@@INDEX from ops
            DEL list@@ops from CONCAT
        DEL HdlOp@@CONCAT from ops
    MOV HdlOp@@ASSIGN to 
    HdlOp: ASSIGN
        list: ops
            HdlValueId: csr_rdata_int
            HdlValueId: dcsr_q
    MOV HdlOp@@ASSIGN to 
    HdlOp: ASSIGN
        list: ops
            HdlValueId: csr_rdata_int
            HdlValueId: depc_q
    MOV HdlOp@@ASSIGN to 
    HdlOp: ASSIGN
        list: ops
            HdlValueId: csr_rdata_int
            HdlValueId: dscratch0_q
    MOV HdlOp@@ASSIGN to 
    HdlOp: ASSIGN
        list: ops
            HdlValueId: csr_rdata_int
            HdlValueId: dscratch1_q


CommitId: 53ef2ec43c1c1eb00b771e17fc157f5bb1103ed5
Update lowrisc_ibex to lowRISC/ibex@d14312c
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_cs_registers.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_cs_registers.sv
@@ -527,7 +561,7 @@ module ibex_cs_registers #(
   end
 
   // only write CSRs during one clock cycle
-  assign csr_we_int  = csr_wreq & instr_new_id_i;
+  assign csr_we_int  = csr_wreq & ~illegal_csr_priv & instr_new_id_i;
 
   assign csr_rdata_o = csr_rdata_int;
 

ParseResult:
INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: AND
        list: ops
            HdlOp: AND
                list: ops
                    HdlValueId: csr_wreq
                    HdlOp: NEG
                        list: ops
                            HdlValueId: illegal_csr_priv
            HdlValueId: instr_new_id_i
    HdlValueId: csr_we_int

DEL HdlStmAssign@@ from objs
HdlStmAssign
    HdlOp: AND
        list: ops
            HdlValueId: csr_wreq
            HdlValueId: instr_new_id_i
    HdlValueId: csr_we_int


CommitId: c07b007b417ba543560e6214a2fa47b5413ea114
[prim_esc_rxtx/rv_core_ibex] Add default values and NMI synchronization
--- a/hw/ip/rv_core_ibex/rtl/rv_core_ibex.sv
+++ b/hw/ip/rv_core_ibex/rtl/rv_core_ibex.sv
@@ -32,6 +32,9 @@ module rv_core_ibex #(
   // Clock and Reset
   input  logic        clk_i,
   input  logic        rst_ni,
+  // Clock domain for escalation receiver
+  input  logic        clk_esc_i,
+  input  logic        rst_esc_ni,
 
   input  logic        test_en_i,     // enable all clock gates for testing
 

ParseResult:
INS HdlIdDef@@clk_esc_i to ports
HdlIdDef: clk_esc_i
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: IN

INS HdlIdDef@@rst_esc_ni to ports
HdlIdDef: rst_esc_ni
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: IN


CommitId: 7e60eca10f23f5a4fcdc3723fc571599f8e00178
[csrng/rtl] bug fix for gen cmd with additional data
--- a/hw/ip/csrng/rtl/csrng_ctr_drbg_gen.sv
+++ b/hw/ip/csrng/rtl/csrng_ctr_drbg_gen.sv
@@ -179,6 +179,7 @@ module csrng_ctr_drbg_gen import csrng_pkg::*; #(
   // flops
   logic [CtrLen-1:0]           v_ctr_q, v_ctr_d;
   logic [1:0]                  interate_ctr_q, interate_ctr_d;
+  logic [SeedLen-1:0]          update_adata_q, update_adata_d;
 
 // Encoding generated with:
 // $ ./util/design/sparse-fsm-encode.py -d 3 -m 4 -n 5 \

ParseResult:
INS HdlIdDef@@update_adata_q to objs
HdlIdDef: update_adata_q
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlOp: SUB
                        list: ops
                            HdlValueId: SeedLen
                            HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: INTERNAL

INS HdlIdDef@@update_adata_d to objs
HdlIdDef: update_adata_d
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlOp: SUB
                        list: ops
                            HdlValueId: SeedLen
                            HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: INTERNAL


CommitId: 7e60eca10f23f5a4fcdc3723fc571599f8e00178
[csrng/rtl] bug fix for gen cmd with additional data
--- a/hw/ip/csrng/rtl/csrng_ctr_drbg_gen.sv
+++ b/hw/ip/csrng/rtl/csrng_ctr_drbg_gen.sv
@@ -229,9 +230,11 @@ module csrng_ctr_drbg_gen import csrng_pkg::*; #(
     if (!rst_ni) begin
       v_ctr_q            <= '0;
       interate_ctr_q     <= '0;
+      update_adata_q     <= '0;
     end else begin
       v_ctr_q            <= v_ctr_d;
       interate_ctr_q     <= interate_ctr_d;
+      update_adata_q     <= update_adata_d;
     end
 
 

ParseResult:
INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: update_adata_q

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueId: update_adata_d
    HdlValueId: update_adata_q


CommitId: 7e60eca10f23f5a4fcdc3723fc571599f8e00178
[csrng/rtl] bug fix for gen cmd with additional data
--- a/hw/ip/csrng/rtl/csrng_ctr_drbg_gen.sv
+++ b/hw/ip/csrng/rtl/csrng_ctr_drbg_gen.sv
@@ -400,6 +403,12 @@ module csrng_ctr_drbg_gen import csrng_pkg::*; #(
           (sfifo_adstage_full && !sfifo_adstage_not_empty)};
 
 
+  // store adata for use on the final genbit command
+  assign update_adata_d =
+         (sfifo_genbits_push && adstage_glast) ? SeedLen'(0) :
+         (update_adata_q != SeedLen'(0)) ? update_adata_q :
+         (sfifo_adstage_pop && !adstage_glast) ? adstage_adata :
+         update_adata_q;
 
   //--------------------------------------------
   // block_encrypt response fifo from block encrypt

ParseResult:
INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: TERNARY
        list: ops
            HdlOp: AND_LOG
                list: ops
                    HdlValueId: sfifo_genbits_push
                    HdlValueId: adstage_glast
            HdlOp: CALL
                list: ops
                    HdlValueId: SeedLen
                    HdlValueInt: 0
            HdlOp: TERNARY
                list: ops
                    HdlOp: NE
                        list: ops
                            HdlValueId: update_adata_q
                            HdlOp: CALL
                                list: ops
                                    HdlValueId: SeedLen
                                    HdlValueInt: 0
                    HdlValueId: update_adata_q
                    HdlOp: TERNARY
                        list: ops
                            HdlOp: AND_LOG
                                list: ops
                                    HdlValueId: sfifo_adstage_pop
                                    HdlOp: NEG_LOG
                                        list: ops
                                            HdlValueId: adstage_glast
                            HdlValueId: adstage_adata
                            HdlValueId: update_adata_q
    HdlValueId: update_adata_d


CommitId: 7e60eca10f23f5a4fcdc3723fc571599f8e00178
[csrng/rtl] bug fix for gen cmd with additional data
--- a/hw/ip/csrng/rtl/csrng_ctr_drbg_gen.sv
+++ b/hw/ip/csrng/rtl/csrng_ctr_drbg_gen.sv
@@ -449,7 +458,7 @@ module csrng_ctr_drbg_gen import csrng_pkg::*; #(
   assign gen_upd_req_o = sfifo_bencack_not_empty && adstage_glast;
   assign gen_upd_ccmd_o = sfifo_bencack_ccmd;
   assign gen_upd_inst_id_o = sfifo_bencack_inst_id;
-  assign gen_upd_pdata_o = adstage_adata;
+  assign gen_upd_pdata_o = update_adata_q;
   assign gen_upd_key_o = adstage_key;
   assign gen_upd_v_o = adstage_v;
 
ParseResult:
INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlValueId: update_adata_q
    HdlValueId: gen_upd_pdata_o

DEL HdlStmAssign@@ from objs
HdlStmAssign
    HdlValueId: adstage_adata
    HdlValueId: gen_upd_pdata_o


CommitId: a17530f0a51524486c59b0c8d5295d6ded247ec2
[usbdev] USB device update from ETH repo
--- a/hw/ip/usb_fs_nb_pe/rtl/usb_fs_rx.sv
+++ b/hw/ip/usb_fs_nb_pe/rtl/usb_fs_rx.sv
@@ -10,9 +10,15 @@ module usb_fs_rx (
   input  logic rst_ni,
   input  logic link_reset_i,
 
-  // USB data+ and data- lines.
-  input  logic dp_i,
-  input  logic dn_i,
+  // EOP configuration
+  input  logic cfg_eop_single_bit_i,
+
+  // USB data+ and data- lines (synchronous)
+  input  logic usb_d_i,
+  input  logic usb_se0_i,
+
+  // Transmit enable disables the receier
+  input  logic tx_en_i,
 
   // pulse on every bit transition.
   output logic bit_strobe_o,

ParseResult:
INS HdlIdDef@@cfg_eop_single_bit_i to ports
HdlIdDef: cfg_eop_single_bit_i
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: IN

UPD HdlIdDef@@dp_i to usb_d_i

UPD HdlIdDef@@dn_i to usb_se0_i

INS HdlIdDef@@tx_en_i to ports
HdlIdDef: tx_en_i
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: IN


CommitId: a17530f0a51524486c59b0c8d5295d6ded247ec2
[usbdev] USB device update from ETH repo
--- a/hw/ip/usb_fs_nb_pe/rtl/usb_fs_rx.sv
+++ b/hw/ip/usb_fs_nb_pe/rtl/usb_fs_rx.sv
@@ -93,7 +81,14 @@ module usb_fs_rx (
 
   // Mute the input if we're transmitting
   logic [1:0] dpair;
-  assign dpair = dpair_q[3:2];
+  always_comb begin : proc_dpair_mute
+    if (tx_en_i) begin
+      dpair = 2'b10; // J
+    end else begin
+      dpair = (usb_se0_i) ? 2'b00 : {usb_d_i, !usb_d_i};
+      // dpair = dpair_q[3:2];
+    end
+  end
 
   always_ff @(posedge clk_i or negedge rst_ni) begin : proc_line_state_q
     if(!rst_ni) begin

ParseResult:
INS HdlStmProcess@@ to objs
HdlStmProcess
    HdlStmBlock: SEQ
        list: body
            HdlStmIf
                HdlValueId: tx_en_i
                HdlStmBlock: SEQ
                    list: body
                        HdlOp: ASSIGN
                            list: ops
                                HdlValueId: dpair
                                HdlValueInt: 10
                list: elifs
                HdlStmBlock: SEQ
                    list: body
                        HdlOp: ASSIGN
                            list: ops
                                HdlValueId: dpair
                                HdlOp: TERNARY
                                    list: ops
                                        HdlValueId: usb_se0_i
                                        HdlValueInt: 00
                                        HdlOp: CONCAT
                                            list: ops
                                                HdlValueId: usb_d_i
                                                HdlOp: NEG_LOG
                                                    list: ops
                                                        HdlValueId: usb_d_i
    HdlStmProcessTriggerConstrain: COMB

DEL HdlStmAssign@@ from objs
HdlStmAssign
    HdlOp: INDEX
        list: ops
            HdlValueId: dpair_q
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 3
                    HdlValueInt: 2
    HdlValueId: dpair


CommitId: a17530f0a51524486c59b0c8d5295d6ded247ec2
[usbdev] USB device update from ETH repo
--- a/hw/ip/usb_fs_nb_pe/rtl/usb_fs_rx.sv
+++ b/hw/ip/usb_fs_nb_pe/rtl/usb_fs_rx.sv
@@ -177,21 +172,28 @@ module usb_fs_rx (
     denote the end of a packet.  this state machine recognizes the beginning and
     end of packets for subsequent layers to process.
   */
-  logic [5:0] line_history_q, line_history_d;
+  logic [11:0] line_history_q, line_history_d;
   logic packet_valid_q, packet_valid_d;
+  logic see_eop;
   
   wire packet_start = packet_valid_d && !packet_valid_q;
   wire packet_end = !packet_valid_d && packet_valid_q;
 
+  // EOP detection is configurable for 1/2 bit periods of SE0.
+  // The standard (Table 7-7) mandates min = 82 ns = 1 bit period.
+  // We also trigger an EOP on seeing a bitstuff error.
+  assign see_eop = (cfg_eop_single_bit_i && line_history_q[1:0] == 2'b00) 
+    || (line_history_q[3:0] == 4'b0000) || bitstuff_error_q;
+
   always_comb begin : proc_packet_valid_d
     if (line_state_valid) begin
-      // check for packet start: KJKJKK
-      if (!packet_valid_q && line_history_q[5:0] == 6'b100101) begin
+      // check for packet start: KJKJKK, we use the last 6 bits
+      if (!packet_valid_q && line_history_q[11:0] == 12'b011001100101) begin
         packet_valid_d = 1;
       end
  
       // check for packet end: SE0 SE0
-      else if (packet_valid_q && line_history_q[3:0] == 4'b0000) begin
+      else if (packet_valid_q && see_eop) begin
         packet_valid_d = 0;
 
       end else begin

ParseResult:
INS HdlIdDef@@line_history_q to objs
HdlIdDef: line_history_q
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 11
                    HdlValueInt: 0
    HdlDirection: INTERNAL

INS HdlIdDef@@line_history_d to objs
HdlIdDef: line_history_d
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 11
                    HdlValueInt: 0
    HdlDirection: INTERNAL

INS HdlIdDef@@see_eop to objs
HdlIdDef: see_eop
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

INS HdlStmProcess@@ to objs

UPD HdlStmAssign@@ to 
    INS HdlOp@@OR_LOG to 
    UPD HdlOp@@OR_LOG to OR_LOG
        UPD HdlOp@@OR_LOG to OR_LOG
            UPD HdlOp@@AND_LOG to AND_LOG
                UPD HdlOp@@EQ to EQ
                    INS HdlValueInt@@00 to ops

UPD HdlStmProcess@@ to 
    INS HdlStmBlock@@SEQ to 
    INS HdlStmProcessTriggerConstrain@@COMB to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmIf@@ to 
    UPD list@@elifs to ops
    MOV list@@elifs to 
    list: elifs
        tuple
            HdlOp: AND_LOG
                list: ops
                    HdlValueId: packet_valid_q
                    HdlOp: EQ
                        list: ops
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: line_history_q
                                    HdlOp: DOWNTO
                                        list: ops
                                            HdlValueInt: 3
                                            HdlValueInt: 0
                            HdlValueInt: 0000
            HdlStmBlock: SEQ
                list: body
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: packet_valid_d
                            HdlValueInt: 0
    UPD HdlOp@@AND_LOG to OR_LOG
    MOV HdlOp@@AND_LOG to 
    HdlOp: AND_LOG
        list: ops
            HdlValueId: packet_valid_q
            HdlOp: EQ
                list: ops
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: line_history_q
                            HdlOp: DOWNTO
                                list: ops
                                    HdlValueInt: 3
                                    HdlValueInt: 0
                    HdlValueInt: 0000
    UPD HdlOp@@AND_LOG to AND_LOG
        UPD HdlValueId@@packet_valid_q to cfg_eop_single_bit_i
        MOV HdlValueId@@packet_valid_q to ops
        HdlValueId: packet_valid_q
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: packet_valid_d
                    HdlValueInt: 1
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: packet_valid_d
                    HdlValueId: packet_valid_q
    UPD HdlOp@@AND_LOG to ASSIGN
    MOV HdlOp@@AND_LOG to 
    HdlOp: AND_LOG
        list: ops
            HdlOp: NEG_LOG
                list: ops
                    HdlValueId: packet_valid_q
            HdlOp: EQ
                list: ops
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: line_history_q
                            HdlOp: DOWNTO
                                list: ops
                                    HdlValueInt: 5
                                    HdlValueInt: 0
                    HdlValueInt: 100101
    UPD HdlOp@@AND_LOG to AND_LOG
        MOV HdlOp@@NEG_LOG to ops
        HdlOp: NEG_LOG
            list: ops
                HdlValueId: packet_valid_q
        UPD HdlOp@@EQ to CONCAT
        UPD HdlOp@@EQ to EQ
            UPD HdlOp@@INDEX to INDEX
                UPD HdlValueId@@line_history_q to bitstuff_history_q
            DEL HdlValueInt@@100101 from ops
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: packet_valid_d
                    HdlValueInt: 0
    DEL tuple@@ from elifs

INS HdlStmIf@@ to body

UPD HdlStmIf@@ to 
    INS HdlValueId@@line_state_valid to 
    INS HdlStmBlock@@SEQ to 
    INS list@@elifs to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmIf@@ to 
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: packet_valid_d
                    HdlValueId: packet_valid_q
    DEL HdlValueId@@line_state_valid from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL list@@elifs from 

INS HdlStmIf@@ to body

UPD HdlStmIf@@ to 
    INS HdlOp@@AND_LOG to 
    INS list@@elifs to 
    UPD HdlOp@@AND_LOG to AND_LOG
        INS list@@ops to AND_LOG
        INS HdlOp@@EQ to ops
        HdlOp: EQ
            list: ops
                HdlOp: INDEX
                    list: ops
                        HdlValueId: line_history_q
                        HdlOp: DOWNTO
                            list: ops
                                HdlValueInt: 11
                                HdlValueInt: 0
                HdlValueInt: 011001100101
    INS tuple@@ to elifs
    INS HdlOp@@AND_LOG to 
    HdlOp: AND_LOG
        list: ops
            HdlValueId: packet_valid_q
            HdlValueId: see_eop

UPD HdlIdDef@@line_history_q to line_history_q
    UPD HdlOp@@PARAMETRIZATION to INDEX
    MOV HdlOp@@PARAMETRIZATION to line_history_q
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 5
                    HdlValueInt: 0
    UPD HdlOp@@PARAMETRIZATION to PARAMETRIZATION
        UPD HdlValueId@@logic to bitstuff_history_q
    DEL HdlDirection@@INTERNAL from line_history_q

DEL HdlIdDef@@line_history_q from objs

DEL HdlIdDef@@line_history_d from objs
HdlIdDef: line_history_d
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 5
                    HdlValueInt: 0
    HdlDirection: INTERNAL

DEL HdlStmIf@@ from body

DEL HdlStmIf@@ from body

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL HdlStmProcessTriggerConstrain@@COMB from 

DEL HdlStmProcess@@ from objs


CommitId: a17530f0a51524486c59b0c8d5295d6ded247ec2
[usbdev] USB device update from ETH repo
--- a/hw/ip/usb_fs_nb_pe/rtl/usb_fs_rx.sv
+++ b/hw/ip/usb_fs_nb_pe/rtl/usb_fs_rx.sv
@@ -203,16 +205,16 @@ module usb_fs_rx (
   end
 
   // keep a history of the last two states on the line
-  assign line_history_d = line_state_valid ? {line_history_q[3:0], line_state_q[1:0]} : line_history_q;
+  assign line_history_d = line_state_valid ? {line_history_q[9:0], line_state_q[1:0]} : line_history_q;
 
   always_ff @(posedge clk_i or negedge rst_ni) begin : proc_reg_pkt_line
     if(!rst_ni) begin
       packet_valid_q <= 0;
-      line_history_q <= 6'b101010;
+      line_history_q <= 12'b101010101010; // all K
     end else begin
       if (link_reset_i) begin
         packet_valid_q <= 0;
-        line_history_q <= 6'b101010;
+        line_history_q <= 12'b101010101010; // all K
       end else begin
         packet_valid_q <= packet_valid_d;
         line_history_q <= line_history_d;

ParseResult:
INS HdlStmProcess@@ to objs

UPD HdlStmProcess@@ to 
    INS HdlStmBlock@@SEQ to 
    INS HdlStmProcessTriggerConstrain@@COMB to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmIf@@ to 
    INS HdlValueId@@line_state_valid to 
    INS HdlStmBlock@@SEQ to 
    INS list@@elifs to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmIf@@ to 
    INS HdlOp@@AND_LOG to 
    INS list@@elifs to 
    UPD HdlOp@@AND_LOG to AND_LOG
        INS list@@ops to AND_LOG
        INS HdlOp@@EQ to ops
        HdlOp: EQ
            list: ops
                HdlOp: INDEX
                    list: ops
                        HdlValueId: line_history_q
                        HdlOp: DOWNTO
                            list: ops
                                HdlValueInt: 11
                                HdlValueInt: 0
                HdlValueInt: 011001100101
    INS tuple@@ to elifs
    INS HdlOp@@AND_LOG to 
    HdlOp: AND_LOG
        list: ops
            HdlValueId: packet_valid_q
            HdlValueId: see_eop

UPD HdlStmAssign@@ to 
    UPD HdlValueInt@@101010 to 101010101010

UPD HdlStmAssign@@ to 
    UPD HdlOp@@TERNARY to TERNARY
        UPD HdlOp@@CONCAT to CONCAT
            UPD HdlOp@@INDEX to INDEX
                UPD HdlOp@@DOWNTO to DOWNTO
                    UPD HdlValueInt@@3 to 9

UPD HdlStmAssign@@ to 
    UPD HdlValueInt@@101010 to 101010101010

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL HdlStmProcessTriggerConstrain@@COMB from 

DEL HdlStmProcess@@ from objs


CommitId: a17530f0a51524486c59b0c8d5295d6ded247ec2
[usbdev] USB device update from ETH repo
--- a/hw/ip/usb_fs_nb_pe/rtl/usb_fs_rx.sv
+++ b/hw/ip/usb_fs_nb_pe/rtl/usb_fs_rx.sv
@@ -254,13 +256,14 @@ module usb_fs_rx (
     end
   end
 
-  logic [5:0] bitstuff_history_q, bitstuff_history_d;
+  ////////////////////////////////////////////////////////////////////////////////
+  // Undo bit stuffing and detect bit stuffing errors
 
   always_comb begin : proc_bitstuff_history_d
     if (packet_end) begin
       bitstuff_history_d = '0;
     end else if (dvalid_raw) begin
-      bitstuff_history_d = {bitstuff_history_q[4:0], din};
+      bitstuff_history_d = {bitstuff_history_q[5:0], din};
     end else begin
       bitstuff_history_d = bitstuff_history_q;
     end  

ParseResult:
INS HdlStmProcess@@ to objs

UPD HdlStmProcess@@ to 
    INS HdlStmBlock@@SEQ to 
    INS HdlStmProcessTriggerConstrain@@COMB to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

INS HdlStmIf@@ to body

UPD HdlStmIf@@ to 
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: bitstuff_history_d
                    HdlValueInt: 0
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: bitstuff_history_d
                    HdlValueId: bitstuff_history_q
    DEL HdlValueId@@packet_end from 
    DEL list@@elifs from 
    list: elifs
        tuple
            HdlValueId: dvalid_raw
            HdlStmBlock: SEQ
                list: body
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: bitstuff_history_d
                            HdlOp: CONCAT
                                list: ops
                                    HdlOp: INDEX
                                        list: ops
                                            HdlValueId: bitstuff_history_q
                                            HdlOp: DOWNTO
                                                list: ops
                                                    HdlValueInt: 4
                                                    HdlValueInt: 0
                                    HdlValueId: din

DEL HdlIdDef@@bitstuff_history_q from objs
HdlIdDef: bitstuff_history_q
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 5
                    HdlValueInt: 0
    HdlDirection: INTERNAL

DEL HdlIdDef@@bitstuff_history_d from objs
HdlIdDef: bitstuff_history_d
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 5
                    HdlValueInt: 0
    HdlDirection: INTERNAL

DEL HdlStmIf@@ from body

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL HdlStmProcessTriggerConstrain@@COMB from 

DEL HdlStmProcess@@ from objs


CommitId: a17530f0a51524486c59b0c8d5295d6ded247ec2
[usbdev] USB device update from ETH repo
--- a/hw/ip/usb_fs_nb_pe/rtl/usb_fs_rx.sv
+++ b/hw/ip/usb_fs_nb_pe/rtl/usb_fs_rx.sv
@@ -366,12 +395,18 @@ module usb_fs_rx (
 
 
   // TODO: need to check for data packet babble
-  // TODO: do i need to check for bitstuff error?
-  assign valid_packet_o = pid_valid && (
-    (pkt_is_handshake) || 
+  assign valid_packet_o = pid_valid && !bitstuff_error_q &&
+    ((pkt_is_handshake) || 
     (pkt_is_data && crc16_valid) ||
     (pkt_is_token && crc5_valid)
   );
+
+  // Detect CRC errors
+  assign crc_error_o = ((pkt_is_data && !crc16_valid) ||
+    (pkt_is_token && !crc5_valid)) && packet_end;
+
+  // Detect PID errors
+  assign pid_error_o = !pid_valid && packet_end;
   
   logic [11:0] token_payload_q, token_payload_d;
   wire token_payload_done = token_payload_q[0];
ParseResult:
INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: AND_LOG
        list: ops
            HdlOp: OR_LOG
                list: ops
                    HdlOp: AND_LOG
                        list: ops
                            HdlValueId: pkt_is_data
                            HdlOp: NEG_LOG
                                list: ops
                                    HdlValueId: crc16_valid
                    HdlOp: AND_LOG
                        list: ops
                            HdlValueId: pkt_is_token
                            HdlOp: NEG_LOG
                                list: ops
                                    HdlValueId: crc5_valid
            HdlValueId: packet_end
    HdlValueId: crc_error_o

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: AND_LOG
        list: ops
            HdlOp: NEG_LOG
                list: ops
                    HdlValueId: pid_valid
            HdlValueId: packet_end
    HdlValueId: pid_error_o

UPD HdlStmAssign@@ to 
    UPD HdlOp@@AND_LOG to AND_LOG
        MOV HdlValueId@@pid_valid to ops
        HdlValueId: pid_valid


CommitId: 33e387ff92df07f8a334ab97a02becf08505a130
[csrng/rtl] Split cmd_sts into two registers
--- a/hw/ip/csrng/rtl/csrng_main_sm.sv
+++ b/hw/ip/csrng/rtl/csrng_main_sm.sv
@@ -19,7 +19,6 @@ module csrng_main_sm import csrng_pkg::*; (
   input logic                flag0_i,
   output logic               cmd_entropy_req_o,
   input logic                cmd_entropy_avail_i,
-  input logic                cmd_adata_avail_i,
   output logic               instant_req_o,
   output logic               reseed_req_o,
   output logic               generate_req_o,

ParseResult:
DEL HdlIdDef@@cmd_adata_avail_i from ports
HdlIdDef: cmd_adata_avail_i
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: IN


CommitId: 33e387ff92df07f8a334ab97a02becf08505a130
[csrng/rtl] Split cmd_sts into two registers
--- a/hw/ip/csrng/rtl/csrng_main_sm.sv
+++ b/hw/ip/csrng/rtl/csrng_main_sm.sv
@@ -57,9 +56,9 @@ module csrng_main_sm import csrng_pkg::*; (
     UninstantReq = 8'b00101000  // uninstantiate request (no input)
   } state_e;
 
- state_e state_d;
+  state_e state_d, state_q;
 
-  logic [StateWidth-1:0] state_q;
+  logic [StateWidth-1:0] state_raw_q;
 
   // This primitive is used to place a size-only constraint on the
   // flops in order to prevent FSM state encoding optimizations.

ParseResult:
INS HdlIdDef@@state_q to objs
HdlIdDef: state_q
    HdlDirection: INTERNAL

UPD HdlIdDef@@state_q to state_raw_q


CommitId: 33e387ff92df07f8a334ab97a02becf08505a130
[csrng/rtl] Split cmd_sts into two registers
--- a/hw/ip/csrng/rtl/csrng_main_sm.sv
+++ b/hw/ip/csrng/rtl/csrng_main_sm.sv
@@ -70,11 +69,13 @@ module csrng_main_sm import csrng_pkg::*; (
     .clk_i,
     .rst_ni,
     .d_i ( state_d ),
-    .q_o ( state_q )
+    .q_o ( state_raw_q )
   );
 
+  assign state_q = state_e'(state_raw_q);
+
   always_comb begin
-    state_d = state_e'(state_q);
+    state_d = state_q;
     acmd_accept_o = 1'b0;
     cmd_entropy_req_o = 1'b0;
     instant_req_o = 1'b0;

ParseResult:
INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: CALL
        list: ops
            HdlValueId: state_e
            HdlValueId: state_raw_q
    HdlValueId: state_q

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@CALL to CALL
                MOV HdlValueId@@state_q to ops
                HdlValueId: state_q
                DEL HdlValueId@@state_e from ops
                DEL list@@ops from CALL
            DEL HdlOp@@CALL from ops


CommitId: 33e387ff92df07f8a334ab97a02becf08505a130
[csrng/rtl] Split cmd_sts into two registers
--- a/hw/ip/csrng/rtl/csrng_main_sm.sv
+++ b/hw/ip/csrng/rtl/csrng_main_sm.sv
@@ -109,10 +110,8 @@ module csrng_main_sm import csrng_pkg::*; (
       end
       InstantPrep: begin
         if (flag0_i) begin
-          acmd_accept_o = 1'b1;
-          if (cmd_adata_avail_i) begin
-            state_d = InstantReq;
-          end
+          // assumes all adata is present now
+          state_d = InstantReq;
         end else begin
           // delay one clock to fix timing issue
           cmd_entropy_req_o = 1'b1;

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@CALL to CALL
                MOV HdlValueId@@state_q to ops
                HdlValueId: state_q
                DEL HdlValueId@@state_e from ops
                DEL list@@ops from CALL
            DEL HdlOp@@CALL from ops

UPD HdlStmCase@@state_q to state_q
    UPD HdlStmBlock@@SEQ to SEQ
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: acmd_accept_o
                HdlValueInt: 1
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 

UPD HdlStmIf@@ to 
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: state_d
                    HdlValueId: InstantReq
    MOV list@@elifs to 
    list: elifs
    DEL HdlValueId@@cmd_adata_avail_i from 

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: acmd_accept_o
                HdlValueInt: 1
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL list@@elifs from 

DEL HdlStmIf@@ from body


CommitId: 33e387ff92df07f8a334ab97a02becf08505a130
[csrng/rtl] Split cmd_sts into two registers
--- a/hw/ip/csrng/rtl/csrng_main_sm.sv
+++ b/hw/ip/csrng/rtl/csrng_main_sm.sv
@@ -128,7 +127,8 @@ module csrng_main_sm import csrng_pkg::*; (
       ReseedPrep: begin
         acmd_accept_o = 1'b1;
         cmd_entropy_req_o = 1'b1;
-        if (cmd_adata_avail_i && cmd_entropy_avail_i) begin
+        // assumes all adata is present now
+        if (cmd_entropy_avail_i) begin
           state_d = ReseedReq;
         end
       end

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@CALL to CALL
                MOV HdlValueId@@state_q to ops
                HdlValueId: state_q
                DEL HdlValueId@@state_e from ops
                DEL list@@ops from CALL
            DEL HdlOp@@CALL from ops

UPD HdlStmCase@@state_q to state_q
    UPD HdlStmBlock@@SEQ to SEQ
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: acmd_accept_o
                HdlValueInt: 1
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 

UPD HdlStmIf@@ to 
    UPD HdlOp@@AND_LOG to AND_LOG
        MOV HdlValueId@@cmd_entropy_avail_i to ops
        HdlValueId: cmd_entropy_avail_i
        DEL HdlValueId@@cmd_adata_avail_i from ops
        DEL list@@ops from AND_LOG
    DEL HdlOp@@AND_LOG from 


CommitId: 33e387ff92df07f8a334ab97a02becf08505a130
[csrng/rtl] Split cmd_sts into two registers
--- a/hw/ip/csrng/rtl/csrng_main_sm.sv
+++ b/hw/ip/csrng/rtl/csrng_main_sm.sv
@@ -142,10 +142,9 @@ module csrng_main_sm import csrng_pkg::*; (
         state_d = Idle;
       end
       UpdatePrep: begin
+        // assumes all adata is present now
         acmd_accept_o = 1'b1;
-        if (cmd_adata_avail_i) begin
-          state_d = UpdateReq;
-        end
+        state_d = UpdateReq;
       end
       UpdateReq: begin
         update_req_o = 1'b1;
ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@CALL to CALL
                MOV HdlValueId@@state_q to ops
                HdlValueId: state_q
                DEL HdlValueId@@state_e from ops
                DEL list@@ops from CALL
            DEL HdlOp@@CALL from ops

UPD HdlStmIf@@ to 
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: state_d
                    HdlValueId: UpdateReq
    DEL HdlValueId@@cmd_adata_avail_i from 
    DEL list@@elifs from 

UPD HdlStmCase@@state_q to state_q
    UPD HdlStmBlock@@SEQ to SEQ
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: acmd_accept_o
                HdlValueInt: 1
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 

DEL HdlStmIf@@ from body


CommitId: c88e97fe0634880a8e617a8594e1a3e883394569
[ibex] Connect up crash dump output
--- a/hw/ip/rv_core_ibex/rtl/rv_core_ibex.sv
+++ b/hw/ip/rv_core_ibex/rtl/rv_core_ibex.sv
@@ -62,7 +62,7 @@ module rv_core_ibex import rv_core_ibex_pkg::*; #(
   input  logic        debug_req_i,
 
   // Crash dump information
-  output crashdump_t  crash_dump_o,
+  output ibex_pkg::crash_dump_t crash_dump_o,
 
   // CPU Control Signals
   input lc_ctrl_pkg::lc_tx_t fetch_enable_i,

ParseResult:
UPD HdlIdDef@@crash_dump_o to crash_dump_o
    INS HdlOp@@DOUBLE_COLON to crash_dump_o
    UPD HdlOp@@DOUBLE_COLON to DOUBLE_COLON
        INS list@@ops to DOUBLE_COLON
        INS HdlValueId@@ibex_pkg to ops

UPD HdlIdDef@@crash_dump_o to crash_dump_o
    UPD HdlValueId@@crashdump_t to crash_dump_t
    MOV HdlValueId@@crashdump_t to crash_dump_o
    HdlValueId: crashdump_t


CommitId: 50a83bedd4d6e3af8ef3c3696cf12fdbce53aaad
[csrng/rtl] internal state read timing improvements
--- a/hw/ip/csrng/rtl/csrng_main_sm.sv
+++ b/hw/ip/csrng/rtl/csrng_main_sm.sv
@@ -162,6 +170,12 @@ module csrng_main_sm import csrng_pkg::*; (
         uninstant_req_o = 1'b1;
         state_d = Idle;
       end
+      SMHalted: begin
+        main_sm_halted_o = 1'b1;
+        if (!halt_main_sm_i) begin
+          state_d = Idle;
+        end
+      end
       Error: begin
         main_sm_err_o = 1'b1;
       end
ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: main_sm_halted_o
                HdlValueInt: 0

UPD HdlStmCase@@state_q to state_q
    INS tuple@@ to cases
    tuple
        HdlValueId: SMHalted
        HdlStmBlock: SEQ
            list: body
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: main_sm_halted_o
                        HdlValueInt: 1
                HdlStmIf
                    HdlOp: NEG_LOG
                        list: ops
                            HdlValueId: halt_main_sm_i
                    HdlStmBlock: SEQ
                        list: body
                            HdlOp: ASSIGN
                                list: ops
                                    HdlValueId: state_d
                                    HdlValueId: Idle
                    list: elifs
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmCase@@state_q to state_q
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlStmIf
                HdlValueId: ctr_drbg_cmd_req_rdy_i
                HdlStmBlock: SEQ
                    list: body
                        HdlStmIf
                            HdlValueId: acmd_avail_i
                            HdlStmBlock: SEQ
                                list: body
                                    HdlOp: ASSIGN
                                        list: ops
                                            HdlValueId: acmd_accept_o
                                            HdlValueInt: 1
                                    HdlStmIf
                                        HdlOp: EQ
                                            list: ops
                                                HdlValueId: acmd_i
                                                HdlValueId: INS
                                        HdlStmBlock: SEQ
                                            list: body
                                                HdlStmIf
                                                    HdlValueId: acmd_eop_i
                                                    HdlStmBlock: SEQ
                                                        list: body
                                                            HdlOp: ASSIGN
                                                                list: ops
                                                                    HdlValueId: state_d
                                                                    HdlValueId: InstantPrep
                                                    list: elifs
                                        list: elifs
                                            tuple
                                                HdlOp: EQ
                                                    list: ops
                                                        HdlValueId: acmd_i
                                                        HdlValueId: RES
                                                HdlStmBlock: SEQ
                                                    list: body
                                                        HdlStmIf
                                                            HdlValueId: acmd_eop_i
                                                            HdlStmBlock: SEQ
                                                                list: body
                                                                    HdlOp: ASSIGN
                                                                        list: ops
                                                                            HdlValueId: state_d
                                                                            HdlValueId: ReseedPrep
                                                            list: elifs
                                            tuple
                                                HdlOp: EQ
                                                    list: ops
                                                        HdlValueId: acmd_i
                                                        HdlValueId: GEN
                                                HdlStmBlock: SEQ
                                                    list: body
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: state_d
                                                                HdlValueId: GenerateReq
                                            tuple
                                                HdlOp: EQ
                                                    list: ops
                                                        HdlValueId: acmd_i
                                                        HdlValueId: UPD
                                                HdlStmBlock: SEQ
                                                    list: body
                                                        HdlStmIf
                                                            HdlValueId: acmd_eop_i
                                                            HdlStmBlock: SEQ
                                                                list: body
                                                                    HdlOp: ASSIGN
                                                                        list: ops
                                                                            HdlValueId: state_d
                                                                            HdlValueId: UpdatePrep
                                                            list: elifs
                                            tuple
                                                HdlOp: EQ
                                                    list: ops
                                                        HdlValueId: acmd_i
                                                        HdlValueId: UNI
                                                HdlStmBlock: SEQ
                                                    list: body
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: state_d
                                                                HdlValueId: UninstantReq
                            list: elifs
                list: elifs


CommitId: 1674110022d3f3c6c89828d9f8f139447afd925c
[flash_ctrl / top] Various functional updates to flash
--- a/hw/ip/flash_ctrl/rtl/flash_phy.sv
+++ b/hw/ip/flash_ctrl/rtl/flash_phy.sv
@@ -27,7 +27,7 @@ module flash_phy import flash_ctrl_pkg::*; (
   input flash_power_down_h_i,
   input [1:0] flash_test_mode_a_i,
   input flash_test_voltage_h_i,
-  input flash_bist_enable_i,
+  input lc_ctrl_pkg::lc_tx_t flash_bist_enable_i,
   input lc_ctrl_pkg::lc_tx_t lc_nvm_debug_en_i,
   input jtag_pkg::jtag_req_t jtag_req_i,
   output jtag_pkg::jtag_rsp_t jtag_rsp_o

ParseResult:
UPD HdlIdDef@@flash_bist_enable_i to flash_bist_enable_i
    INS HdlOp@@DOUBLE_COLON to flash_bist_enable_i
    UPD HdlOp@@DOUBLE_COLON to DOUBLE_COLON
        INS list@@ops to DOUBLE_COLON
        INS HdlValueId@@lc_tx_t to ops

UPD HdlIdDef@@flash_bist_enable_i to flash_bist_enable_i
    UPD HdlValueId@@wire to lc_ctrl_pkg
    MOV HdlValueId@@wire to flash_bist_enable_i
    HdlValueId: wire


CommitId: 1674110022d3f3c6c89828d9f8f139447afd925c
[flash_ctrl / top] Various functional updates to flash
--- a/hw/ip/flash_ctrl/rtl/flash_phy.sv
+++ b/hw/ip/flash_ctrl/rtl/flash_phy.sv
@@ -145,6 +145,13 @@ module flash_phy import flash_ctrl_pkg::*; (
   // Prim flash to flash_phy_core connections
   flash_phy_pkg::flash_phy_prim_flash_req_t [NumBanks-1:0] prim_flash_req;
   flash_phy_pkg::flash_phy_prim_flash_rsp_t [NumBanks-1:0] prim_flash_rsp;
+  logic [NumBanks-1:0] ecc_single_err;
+  logic [NumBanks-1:0] ecc_multi_err;
+  logic [NumBanks-1:0][BusAddrW-1:0] ecc_addr;
+
+  assign flash_ctrl_o.ecc_single_err = ecc_single_err;
+  assign flash_ctrl_o.ecc_multi_err = ecc_multi_err;
+  assign flash_ctrl_o.ecc_addr = ecc_addr;
 
   for (genvar bank = 0; bank < NumBanks; bank++) begin : gen_flash_cores
 

ParseResult:
INS HdlIdDef@@ecc_single_err to objs
HdlIdDef: ecc_single_err
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlOp: SUB
                        list: ops
                            HdlValueId: NumBanks
                            HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: INTERNAL

INS HdlIdDef@@ecc_multi_err to objs
HdlIdDef: ecc_multi_err
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlOp: SUB
                        list: ops
                            HdlValueId: NumBanks
                            HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: INTERNAL

INS HdlIdDef@@ecc_addr to objs
HdlIdDef: ecc_addr
    HdlOp: INDEX
        list: ops
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: logic
                    HdlOp: DOWNTO
                        list: ops
                            HdlOp: SUB
                                list: ops
                                    HdlValueId: NumBanks
                                    HdlValueInt: 1
                            HdlValueInt: 0
            HdlOp: DOWNTO
                list: ops
                    HdlOp: SUB
                        list: ops
                            HdlValueId: BusAddrW
                            HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: INTERNAL

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlValueId: ecc_single_err
    HdlValueId: flash_ctrl_o

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlValueId: ecc_multi_err
    HdlValueId: flash_ctrl_o

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlValueId: ecc_addr
    HdlValueId: flash_ctrl_o


CommitId: 1674110022d3f3c6c89828d9f8f139447afd925c
[flash_ctrl / top] Various functional updates to flash
--- a/hw/ip/flash_ctrl/rtl/flash_phy.sv
+++ b/hw/ip/flash_ctrl/rtl/flash_phy.sv
@@ -172,6 +179,7 @@ module flash_phy import flash_ctrl_pkg::*; (
     logic ctrl_req;
     assign host_req = host_req_i & (host_bank_sel == bank) & host_rsp_avail[bank];
     assign ctrl_req = flash_ctrl_i.req & (ctrl_bank_sel == bank);
+    assign ecc_addr[bank][BusBankAddrW +: BankW] = bank;
 
     flash_phy_core u_core (
       .clk_i,

ParseResult:
INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueId: bank
    HdlOp: INDEX
        list: ops
            HdlOp: INDEX
                list: ops
                    HdlValueId: ecc_addr
                    HdlValueId: bank
            HdlOp: PART_SELECT_POST
                list: ops
                    HdlValueId: BusBankAddrW
                    HdlValueId: BankW


CommitId: de7eba3d7af1f55b7bda8104152b4240f3d37456
[csrng/entropy_src] fix for #4601
--- a/hw/ip/csrng/rtl/csrng_ctr_drbg_upd.sv
+++ b/hw/ip/csrng/rtl/csrng_ctr_drbg_upd.sv
@@ -32,6 +32,11 @@ module csrng_ctr_drbg_upd #(
   output logic [BlkLen-1:0]  ctr_drbg_upd_v_o,
   output logic               ctr_drbg_upd_ack_o, // final ack when update process has been completed
   input logic                ctr_drbg_upd_rdy_i, // readu to process the ack above
+
+   // es_req/ack
+  input logic                ctr_drbg_upd_es_req_i,
+  output logic               ctr_drbg_upd_es_ack_o,
+
    // block encrypt interface
   output logic               block_encrypt_req_o,
   input logic                block_encrypt_rdy_i,

ParseResult:
INS HdlIdDef@@ctr_drbg_upd_es_req_i to ports
HdlIdDef: ctr_drbg_upd_es_req_i
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: IN

INS HdlIdDef@@ctr_drbg_upd_es_ack_o to ports
HdlIdDef: ctr_drbg_upd_es_ack_o
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: OUT


CommitId: de7eba3d7af1f55b7bda8104152b4240f3d37456
[csrng/entropy_src] fix for #4601
--- a/hw/ip/csrng/rtl/csrng_ctr_drbg_upd.sv
+++ b/hw/ip/csrng/rtl/csrng_ctr_drbg_upd.sv
@@ -331,10 +337,13 @@ module csrng_ctr_drbg_upd #(
     sfifo_bencreq_push = 1'b0;
     sfifo_updreq_pop = 1'b0;
     ctr_drbg_updbe_sm_err_o = 1'b0;
+    ctr_drbg_upd_es_ack_o = 1'b0;
     unique case (blk_enc_state_q)
       // ReqIdle: increment v this cycle, push in next
       ReqIdle: begin
-        if (sfifo_updreq_not_empty && !sfifo_bencreq_full && !sfifo_pdata_full) begin
+        if (ctr_drbg_upd_es_req_i) begin
+          blk_enc_state_d = ESHalt;
+        end else if (sfifo_updreq_not_empty && !sfifo_bencreq_full && !sfifo_pdata_full) begin
           v_ctr_load = 1'b1;
           sfifo_pdata_push = 1'b1;
           blk_enc_state_d = ReqSend;

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: ctr_drbg_upd_es_ack_o
                HdlValueInt: 0

UPD HdlStmCase@@blk_enc_state_q to blk_enc_state_q
    INS tuple@@ to cases
    INS tuple@@ to cases
    tuple
        HdlValueId: ESHalt
        HdlStmBlock: SEQ
            list: body
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: ctr_drbg_upd_es_ack_o
                        HdlValueInt: 1
                HdlStmIf
                    HdlOp: NEG_LOG
                        list: ops
                            HdlValueId: ctr_drbg_upd_es_req_i
                    HdlStmBlock: SEQ
                        list: body
                            HdlOp: ASSIGN
                                list: ops
                                    HdlValueId: blk_enc_state_d
                                    HdlValueId: ReqIdle
                    list: elifs
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmCase@@blk_enc_state_q to blk_enc_state_q
    MOV HdlValueId@@ReqIdle to 
    HdlValueId: ReqIdle
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlStmIf
                HdlOp: AND_LOG
                    list: ops
                        HdlOp: AND_LOG
                            list: ops
                                HdlValueId: sfifo_updreq_not_empty
                                HdlOp: NEG_LOG
                                    list: ops
                                        HdlValueId: sfifo_bencreq_full
                        HdlOp: NEG_LOG
                            list: ops
                                HdlValueId: sfifo_pdata_full
                HdlStmBlock: SEQ
                    list: body
                        HdlOp: ASSIGN
                            list: ops
                                HdlValueId: v_ctr_load
                                HdlValueInt: 1
                        HdlOp: ASSIGN
                            list: ops
                                HdlValueId: sfifo_pdata_push
                                HdlValueInt: 1
                        HdlOp: ASSIGN
                            list: ops
                                HdlValueId: blk_enc_state_d
                                HdlValueId: ReqSend
                list: elifs
    UPD HdlStmBlock@@SEQ to SEQ
        UPD list@@body to elifs
        MOV list@@body to SEQ
        list: body
            HdlStmIf
                HdlOp: AND_LOG
                    list: ops
                        HdlOp: AND_LOG
                            list: ops
                                HdlValueId: sfifo_updreq_not_empty
                                HdlOp: NEG_LOG
                                    list: ops
                                        HdlValueId: sfifo_bencreq_full
                        HdlOp: NEG_LOG
                            list: ops
                                HdlValueId: sfifo_pdata_full
                HdlStmBlock: SEQ
                    list: body
                        HdlOp: ASSIGN
                            list: ops
                                HdlValueId: v_ctr_load
                                HdlValueInt: 1
                        HdlOp: ASSIGN
                            list: ops
                                HdlValueId: sfifo_pdata_push
                                HdlValueInt: 1
                        HdlOp: ASSIGN
                            list: ops
                                HdlValueId: blk_enc_state_d
                                HdlValueId: ReqSend
                list: elifs
    MOV tuple@@ to cases
    tuple
        HdlValueId: ReqIdle
        HdlStmBlock: SEQ
            list: body
                HdlStmIf
                    HdlOp: AND_LOG
                        list: ops
                            HdlOp: AND_LOG
                                list: ops
                                    HdlValueId: sfifo_updreq_not_empty
                                    HdlOp: NEG_LOG
                                        list: ops
                                            HdlValueId: sfifo_bencreq_full
                            HdlOp: NEG_LOG
                                list: ops
                                    HdlValueId: sfifo_pdata_full
                    HdlStmBlock: SEQ
                        list: body
                            HdlOp: ASSIGN
                                list: ops
                                    HdlValueId: v_ctr_load
                                    HdlValueInt: 1
                            HdlOp: ASSIGN
                                list: ops
                                    HdlValueId: sfifo_pdata_push
                                    HdlValueInt: 1
                            HdlOp: ASSIGN
                                list: ops
                                    HdlValueId: blk_enc_state_d
                                    HdlValueId: ReqSend
                    list: elifs

MOV HdlStmIf@@ to body
HdlStmIf
    HdlOp: AND_LOG
        list: ops
            HdlOp: AND_LOG
                list: ops
                    HdlValueId: sfifo_updreq_not_empty
                    HdlOp: NEG_LOG
                        list: ops
                            HdlValueId: sfifo_bencreq_full
            HdlOp: NEG_LOG
                list: ops
                    HdlValueId: sfifo_pdata_full
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: v_ctr_load
                    HdlValueInt: 1
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: sfifo_pdata_push
                    HdlValueInt: 1
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: blk_enc_state_d
                    HdlValueId: ReqSend
    list: elifs

UPD HdlStmIf@@ to 
    MOV HdlOp@@AND_LOG to 
    HdlOp: AND_LOG
        list: ops
            HdlOp: AND_LOG
                list: ops
                    HdlValueId: sfifo_updreq_not_empty
                    HdlOp: NEG_LOG
                        list: ops
                            HdlValueId: sfifo_bencreq_full
            HdlOp: NEG_LOG
                list: ops
                    HdlValueId: sfifo_pdata_full
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: v_ctr_load
                    HdlValueInt: 1
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: sfifo_pdata_push
                    HdlValueInt: 1
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: blk_enc_state_d
                    HdlValueId: ReqSend
    DEL list@@elifs from 


CommitId: de7eba3d7af1f55b7bda8104152b4240f3d37456
[csrng/entropy_src] fix for #4601
--- a/hw/ip/csrng/rtl/csrng_ctr_drbg_upd.sv
+++ b/hw/ip/csrng/rtl/csrng_ctr_drbg_upd.sv
@@ -352,6 +361,12 @@ module csrng_ctr_drbg_upd #(
           blk_enc_state_d = ReqIdle;
         end
       end
+      ESHalt: begin
+        ctr_drbg_upd_es_ack_o = 1'b1;
+        if (!ctr_drbg_upd_es_req_i) begin
+          blk_enc_state_d = ReqIdle;
+        end
+      end
       BEError: begin
         ctr_drbg_updbe_sm_err_o = 1'b1;
       end
ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: ctr_drbg_upd_es_ack_o
                HdlValueInt: 0

UPD HdlStmCase@@blk_enc_state_q to blk_enc_state_q
    INS tuple@@ to cases
    INS tuple@@ to cases
    tuple
        HdlValueId: ESHalt
        HdlStmBlock: SEQ
            list: body
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: ctr_drbg_upd_es_ack_o
                        HdlValueInt: 1
                HdlStmIf
                    HdlOp: NEG_LOG
                        list: ops
                            HdlValueId: ctr_drbg_upd_es_req_i
                    HdlStmBlock: SEQ
                        list: body
                            HdlOp: ASSIGN
                                list: ops
                                    HdlValueId: blk_enc_state_d
                                    HdlValueId: ReqIdle
                    list: elifs
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmCase@@blk_enc_state_q to blk_enc_state_q
    MOV HdlValueId@@ReqIdle to 
    HdlValueId: ReqIdle
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlStmIf
                HdlOp: AND_LOG
                    list: ops
                        HdlOp: AND_LOG
                            list: ops
                                HdlValueId: sfifo_updreq_not_empty
                                HdlOp: NEG_LOG
                                    list: ops
                                        HdlValueId: sfifo_bencreq_full
                        HdlOp: NEG_LOG
                            list: ops
                                HdlValueId: sfifo_pdata_full
                HdlStmBlock: SEQ
                    list: body
                        HdlOp: ASSIGN
                            list: ops
                                HdlValueId: v_ctr_load
                                HdlValueInt: 1
                        HdlOp: ASSIGN
                            list: ops
                                HdlValueId: sfifo_pdata_push
                                HdlValueInt: 1
                        HdlOp: ASSIGN
                            list: ops
                                HdlValueId: blk_enc_state_d
                                HdlValueId: ReqSend
                list: elifs
    UPD HdlStmBlock@@SEQ to SEQ
        UPD list@@body to elifs
        MOV list@@body to SEQ
        list: body
            HdlStmIf
                HdlOp: AND_LOG
                    list: ops
                        HdlOp: AND_LOG
                            list: ops
                                HdlValueId: sfifo_updreq_not_empty
                                HdlOp: NEG_LOG
                                    list: ops
                                        HdlValueId: sfifo_bencreq_full
                        HdlOp: NEG_LOG
                            list: ops
                                HdlValueId: sfifo_pdata_full
                HdlStmBlock: SEQ
                    list: body
                        HdlOp: ASSIGN
                            list: ops
                                HdlValueId: v_ctr_load
                                HdlValueInt: 1
                        HdlOp: ASSIGN
                            list: ops
                                HdlValueId: sfifo_pdata_push
                                HdlValueInt: 1
                        HdlOp: ASSIGN
                            list: ops
                                HdlValueId: blk_enc_state_d
                                HdlValueId: ReqSend
                list: elifs
    MOV tuple@@ to cases
    tuple
        HdlValueId: ReqIdle
        HdlStmBlock: SEQ
            list: body
                HdlStmIf
                    HdlOp: AND_LOG
                        list: ops
                            HdlOp: AND_LOG
                                list: ops
                                    HdlValueId: sfifo_updreq_not_empty
                                    HdlOp: NEG_LOG
                                        list: ops
                                            HdlValueId: sfifo_bencreq_full
                            HdlOp: NEG_LOG
                                list: ops
                                    HdlValueId: sfifo_pdata_full
                    HdlStmBlock: SEQ
                        list: body
                            HdlOp: ASSIGN
                                list: ops
                                    HdlValueId: v_ctr_load
                                    HdlValueInt: 1
                            HdlOp: ASSIGN
                                list: ops
                                    HdlValueId: sfifo_pdata_push
                                    HdlValueInt: 1
                            HdlOp: ASSIGN
                                list: ops
                                    HdlValueId: blk_enc_state_d
                                    HdlValueId: ReqSend
                    list: elifs


CommitId: 86144f7033cb38171990fb9bd5f5f0f8f85f0c5d
[usbdev] Fix issues discovered with linter
--- a/hw/ip/usb_fs_nb_pe/rtl/usb_fs_rx.sv
+++ b/hw/ip/usb_fs_nb_pe/rtl/usb_fs_rx.sv
@@ -281,6 +281,7 @@ module usb_fs_rx (
     end
   end
 
+  logic dvalid;
   assign dvalid = dvalid_raw && !(bitstuff_history_q[5:0] == 6'b111111);
 
   // 7 consecutive ones should not be seen on the bus
ParseResult:
INS HdlIdDef@@dvalid to objs
HdlIdDef: dvalid
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL


CommitId: 4f735bc6e72691152b3a87dd7d29bb394be5c785
Update lowrisc_ibex to lowRISC/ibex@dd39ec0
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_tracer.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_tracer.sv
@@ -46,6 +46,7 @@ module ibex_tracer (
   input logic        rvfi_halt,
   input logic        rvfi_intr,
   input logic [ 1:0] rvfi_mode,
+  input logic [ 1:0] rvfi_ixl,
   input logic [ 4:0] rvfi_rs1_addr,
   input logic [ 4:0] rvfi_rs2_addr,
   input logic [ 4:0] rvfi_rs3_addr,

ParseResult:
INS HdlIdDef@@rvfi_ixl to ports
HdlIdDef: rvfi_ixl
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: IN


CommitId: 4f735bc6e72691152b3a87dd7d29bb394be5c785
Update lowrisc_ibex to lowRISC/ibex@dd39ec0
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_tracer.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_tracer.sv
@@ -72,6 +73,7 @@ module ibex_tracer (
   logic        unused_rvfi_halt = rvfi_halt;
   logic        unused_rvfi_intr = rvfi_intr;
   logic [ 1:0] unused_rvfi_mode = rvfi_mode;
+  logic [ 1:0] unused_rvfi_ixl = rvfi_ixl;
 
   import ibex_tracer_pkg::*;
 

ParseResult:
INS HdlIdDef@@unused_rvfi_ixl to objs
HdlIdDef: unused_rvfi_ixl
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 1
                    HdlValueInt: 0
    HdlValueId: rvfi_ixl
    HdlDirection: INTERNAL


CommitId: 4f735bc6e72691152b3a87dd7d29bb394be5c785
Update lowrisc_ibex to lowRISC/ibex@dd39ec0
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_tracer.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_tracer.sv
@@ -832,7 +834,16 @@ module ibex_tracer (
         INSN_SLTIU:      decode_i_insn("sltiu");
         INSN_XORI:       decode_i_insn("xori");
         INSN_ORI:        decode_i_insn("ori");
+        // Version 0.92 of the Bitmanip Extension defines the pseudo-instruction
+        // zext.b rd rs = andi rd, rs, 255.
+        // Currently instruction set simulators don't output this pseudo-instruction.
         INSN_ANDI:       decode_i_insn("andi");
+        // INSN_ANDI:begin
+          // casez (rvfi_insn)
+            // INSN_ZEXTB:  decode_r1_insn("zext.b");
+            // default:     decode_i_insn("andi");
+          // endcase
+        // end
         INSN_SLLI:       decode_i_shift_insn("slli");
         INSN_SRLI:       decode_i_shift_insn("srli");
         INSN_SRAI:       decode_i_shift_insn("srai");

ParseResult:
UPD HdlStmProcess@@ to 
    INS HdlStmProcessTriggerConstrain@@COMB to 

UPD HdlStmIf@@ to 
    INS list@@elifs to 

UPD HdlStmCase@@rvfi_insn to rvfi_insn
    INS tuple@@ to cases
    tuple
        HdlValueId: INSN_SEXTB
        HdlOp: CALL
            list: ops
                HdlValueId: decode_r1_insn
                str
    INS tuple@@ to cases
    tuple
        HdlValueId: INSN_SEXTH
        HdlOp: CALL
            list: ops
                HdlValueId: decode_r1_insn
                str
    INS tuple@@ to cases
    tuple
        HdlValueId: INSN_BDEP
        HdlOp: CALL
            list: ops
                HdlValueId: decode_r_insn
                str
    INS tuple@@ to cases
    tuple
        HdlValueId: INSN_BEXT
        HdlOp: CALL
            list: ops
                HdlValueId: decode_r_insn
                str
    INS tuple@@ to cases
    tuple
        HdlValueId: INSN_BFP
        HdlOp: CALL
            list: ops
                HdlValueId: decode_r_insn
                str
    INS tuple@@ to cases
    tuple
        HdlValueId: INSN_CLMUL
        HdlOp: CALL
            list: ops
                HdlValueId: decode_r_insn
                str
    INS tuple@@ to cases
    tuple
        HdlValueId: INSN_CLMULR
        HdlOp: CALL
            list: ops
                HdlValueId: decode_r_insn
                str
    INS tuple@@ to cases
    tuple
        HdlValueId: INSN_CLMULH
        HdlOp: CALL
            list: ops
                HdlValueId: decode_r_insn
                str
    INS tuple@@ to cases
    tuple
        HdlValueId: INSN_CRC32_B
        HdlOp: CALL
            list: ops
                HdlValueId: decode_r1_insn
                str
    INS tuple@@ to cases
    tuple
        HdlValueId: INSN_CRC32_H
        HdlOp: CALL
            list: ops
                HdlValueId: decode_r1_insn
                str
    INS tuple@@ to cases
    tuple
        HdlValueId: INSN_CRC32_W
        HdlOp: CALL
            list: ops
                HdlValueId: decode_r1_insn
                str
    INS tuple@@ to cases
    tuple
        HdlValueId: INSN_CRC32C_B
        HdlOp: CALL
            list: ops
                HdlValueId: decode_r1_insn
                str
    INS tuple@@ to cases
    tuple
        HdlValueId: INSN_CRC32C_H
        HdlOp: CALL
            list: ops
                HdlValueId: decode_r1_insn
                str
    INS tuple@@ to cases
    tuple
        HdlValueId: INSN_CRC32C_W
        HdlOp: CALL
            list: ops
                HdlValueId: decode_r1_insn
                str

UPD HdlStmIf@@ to 
    DEL list@@elifs from 

UPD HdlStmProcess@@ to 
    DEL HdlStmProcessTriggerConstrain@@COMB from 


CommitId: 4f735bc6e72691152b3a87dd7d29bb394be5c785
Update lowrisc_ibex to lowRISC/ibex@dd39ec0
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_tracer.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_tracer.sv
@@ -890,12 +901,23 @@ module ibex_tracer (
         INSN_XNOR:       decode_r_insn("xnor");
         INSN_ORN:        decode_r_insn("orn");
         INSN_ANDN:       decode_r_insn("andn");
+        // Version 0.92 of the Bitmanip Extension defines the pseudo-instruction
+        // zext.h rd rs = pack rd, rs, zero.
+        // Currently instruction set simulators don't output this pseudo-instruction.
         INSN_PACK:       decode_r_insn("pack");
+        // INSN_PACK: begin
+          // casez (rvfi_insn)
+            // INSN_ZEXTH:  decode_r1_insn("zext.h");
+            // default:     decode_r_insn("pack");
+          // endcase
+        // end
         INSN_PACKH:      decode_r_insn("packh");
         INSN_PACKU:      decode_r_insn("packu");
         INSN_CLZ:        decode_r1_insn("clz");
         INSN_CTZ:        decode_r1_insn("ctz");
         INSN_PCNT:       decode_r1_insn("pcnt");
+        INSN_SEXTB:      decode_r1_insn("sext.b");
+        INSN_SEXTH:      decode_r1_insn("sext.h");
         // RV32B - ZBS
         INSN_SBCLRI:     decode_i_insn("sbclri");
         INSN_SBSETI:     decode_i_insn("sbseti");

ParseResult:
UPD HdlStmProcess@@ to 
    INS HdlStmProcessTriggerConstrain@@COMB to 

UPD HdlStmIf@@ to 
    INS list@@elifs to 

UPD HdlStmCase@@rvfi_insn to rvfi_insn
    INS tuple@@ to cases
    tuple
        HdlValueId: INSN_SEXTB
        HdlOp: CALL
            list: ops
                HdlValueId: decode_r1_insn
                str
    INS tuple@@ to cases
    tuple
        HdlValueId: INSN_SEXTH
        HdlOp: CALL
            list: ops
                HdlValueId: decode_r1_insn
                str
    INS tuple@@ to cases
    tuple
        HdlValueId: INSN_BDEP
        HdlOp: CALL
            list: ops
                HdlValueId: decode_r_insn
                str
    INS tuple@@ to cases
    tuple
        HdlValueId: INSN_BEXT
        HdlOp: CALL
            list: ops
                HdlValueId: decode_r_insn
                str
    INS tuple@@ to cases
    tuple
        HdlValueId: INSN_BFP
        HdlOp: CALL
            list: ops
                HdlValueId: decode_r_insn
                str
    INS tuple@@ to cases
    tuple
        HdlValueId: INSN_CLMUL
        HdlOp: CALL
            list: ops
                HdlValueId: decode_r_insn
                str
    INS tuple@@ to cases
    tuple
        HdlValueId: INSN_CLMULR
        HdlOp: CALL
            list: ops
                HdlValueId: decode_r_insn
                str
    INS tuple@@ to cases
    tuple
        HdlValueId: INSN_CLMULH
        HdlOp: CALL
            list: ops
                HdlValueId: decode_r_insn
                str
    INS tuple@@ to cases
    tuple
        HdlValueId: INSN_CRC32_B
        HdlOp: CALL
            list: ops
                HdlValueId: decode_r1_insn
                str
    INS tuple@@ to cases
    tuple
        HdlValueId: INSN_CRC32_H
        HdlOp: CALL
            list: ops
                HdlValueId: decode_r1_insn
                str
    INS tuple@@ to cases
    tuple
        HdlValueId: INSN_CRC32_W
        HdlOp: CALL
            list: ops
                HdlValueId: decode_r1_insn
                str
    INS tuple@@ to cases
    tuple
        HdlValueId: INSN_CRC32C_B
        HdlOp: CALL
            list: ops
                HdlValueId: decode_r1_insn
                str
    INS tuple@@ to cases
    tuple
        HdlValueId: INSN_CRC32C_H
        HdlOp: CALL
            list: ops
                HdlValueId: decode_r1_insn
                str
    INS tuple@@ to cases
    tuple
        HdlValueId: INSN_CRC32C_W
        HdlOp: CALL
            list: ops
                HdlValueId: decode_r1_insn
                str

UPD HdlStmIf@@ to 
    DEL list@@elifs from 

UPD HdlStmProcess@@ to 
    DEL HdlStmProcessTriggerConstrain@@COMB from 


CommitId: 4f735bc6e72691152b3a87dd7d29bb394be5c785
Update lowrisc_ibex to lowRISC/ibex@dd39ec0
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_tracer.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_tracer.sv
@@ -905,6 +927,9 @@ module ibex_tracer (
         INSN_SBSET:      decode_r_insn("sbset");
         INSN_SBINV:      decode_r_insn("sbinv");
         INSN_SBEXT:      decode_r_insn("sbext");
+        // RV32B - ZBE
+        INSN_BDEP:       decode_r_insn("bdep");
+        INSN_BEXT:       decode_r_insn("bext");
         // RV32B - ZBP
         INSN_GREV:       decode_r_insn("grev");
         INSN_GREVI: begin

ParseResult:
UPD HdlStmProcess@@ to 
    INS HdlStmProcessTriggerConstrain@@COMB to 

UPD HdlStmIf@@ to 
    INS list@@elifs to 

UPD HdlStmCase@@rvfi_insn to rvfi_insn
    INS tuple@@ to cases
    tuple
        HdlValueId: INSN_SEXTB
        HdlOp: CALL
            list: ops
                HdlValueId: decode_r1_insn
                str
    INS tuple@@ to cases
    tuple
        HdlValueId: INSN_SEXTH
        HdlOp: CALL
            list: ops
                HdlValueId: decode_r1_insn
                str
    INS tuple@@ to cases
    tuple
        HdlValueId: INSN_BDEP
        HdlOp: CALL
            list: ops
                HdlValueId: decode_r_insn
                str
    INS tuple@@ to cases
    tuple
        HdlValueId: INSN_BEXT
        HdlOp: CALL
            list: ops
                HdlValueId: decode_r_insn
                str
    INS tuple@@ to cases
    tuple
        HdlValueId: INSN_BFP
        HdlOp: CALL
            list: ops
                HdlValueId: decode_r_insn
                str
    INS tuple@@ to cases
    tuple
        HdlValueId: INSN_CLMUL
        HdlOp: CALL
            list: ops
                HdlValueId: decode_r_insn
                str
    INS tuple@@ to cases
    tuple
        HdlValueId: INSN_CLMULR
        HdlOp: CALL
            list: ops
                HdlValueId: decode_r_insn
                str
    INS tuple@@ to cases
    tuple
        HdlValueId: INSN_CLMULH
        HdlOp: CALL
            list: ops
                HdlValueId: decode_r_insn
                str
    INS tuple@@ to cases
    tuple
        HdlValueId: INSN_CRC32_B
        HdlOp: CALL
            list: ops
                HdlValueId: decode_r1_insn
                str
    INS tuple@@ to cases
    tuple
        HdlValueId: INSN_CRC32_H
        HdlOp: CALL
            list: ops
                HdlValueId: decode_r1_insn
                str
    INS tuple@@ to cases
    tuple
        HdlValueId: INSN_CRC32_W
        HdlOp: CALL
            list: ops
                HdlValueId: decode_r1_insn
                str
    INS tuple@@ to cases
    tuple
        HdlValueId: INSN_CRC32C_B
        HdlOp: CALL
            list: ops
                HdlValueId: decode_r1_insn
                str
    INS tuple@@ to cases
    tuple
        HdlValueId: INSN_CRC32C_H
        HdlOp: CALL
            list: ops
                HdlValueId: decode_r1_insn
                str
    INS tuple@@ to cases
    tuple
        HdlValueId: INSN_CRC32C_W
        HdlOp: CALL
            list: ops
                HdlValueId: decode_r1_insn
                str

UPD HdlStmIf@@ to 
    DEL list@@elifs from 

UPD HdlStmProcess@@ to 
    DEL HdlStmProcessTriggerConstrain@@COMB from 


CommitId: 4f735bc6e72691152b3a87dd7d29bb394be5c785
Update lowrisc_ibex to lowRISC/ibex@dd39ec0
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_tracer.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_tracer.sv
@@ -988,6 +1013,22 @@ module ibex_tracer (
         INSN_FSL:        decode_r_funnelshift_insn("fsl");
         INSN_FSRI:       decode_i_funnelshift_insn("fsri");
 
+        // RV32B - ZBF
+        INSN_BFP:        decode_r_insn("bfp");
+
+        // RV32B - ZBC
+        INSN_CLMUL:      decode_r_insn("clmul");
+        INSN_CLMULR:     decode_r_insn("clmulr");
+        INSN_CLMULH:     decode_r_insn("clmulh");
+
+        // RV32B - ZBR
+        INSN_CRC32_B:    decode_r1_insn("crc32.b");
+        INSN_CRC32_H:    decode_r1_insn("crc32.h");
+        INSN_CRC32_W:    decode_r1_insn("crc32.w");
+        INSN_CRC32C_B:   decode_r1_insn("crc32c.b");
+        INSN_CRC32C_H:   decode_r1_insn("crc32c.h");
+        INSN_CRC32C_W:   decode_r1_insn("crc32c.w");
+
         default:         decode_mnemonic("INVALID");
       endcase
     end
ParseResult:
UPD HdlStmProcess@@ to 
    INS HdlStmProcessTriggerConstrain@@COMB to 

UPD HdlStmIf@@ to 
    INS list@@elifs to 

UPD HdlStmCase@@rvfi_insn to rvfi_insn
    INS tuple@@ to cases
    tuple
        HdlValueId: INSN_SEXTB
        HdlOp: CALL
            list: ops
                HdlValueId: decode_r1_insn
                str
    INS tuple@@ to cases
    tuple
        HdlValueId: INSN_SEXTH
        HdlOp: CALL
            list: ops
                HdlValueId: decode_r1_insn
                str
    INS tuple@@ to cases
    tuple
        HdlValueId: INSN_BDEP
        HdlOp: CALL
            list: ops
                HdlValueId: decode_r_insn
                str
    INS tuple@@ to cases
    tuple
        HdlValueId: INSN_BEXT
        HdlOp: CALL
            list: ops
                HdlValueId: decode_r_insn
                str
    INS tuple@@ to cases
    tuple
        HdlValueId: INSN_BFP
        HdlOp: CALL
            list: ops
                HdlValueId: decode_r_insn
                str
    INS tuple@@ to cases
    tuple
        HdlValueId: INSN_CLMUL
        HdlOp: CALL
            list: ops
                HdlValueId: decode_r_insn
                str
    INS tuple@@ to cases
    tuple
        HdlValueId: INSN_CLMULR
        HdlOp: CALL
            list: ops
                HdlValueId: decode_r_insn
                str
    INS tuple@@ to cases
    tuple
        HdlValueId: INSN_CLMULH
        HdlOp: CALL
            list: ops
                HdlValueId: decode_r_insn
                str
    INS tuple@@ to cases
    tuple
        HdlValueId: INSN_CRC32_B
        HdlOp: CALL
            list: ops
                HdlValueId: decode_r1_insn
                str
    INS tuple@@ to cases
    tuple
        HdlValueId: INSN_CRC32_H
        HdlOp: CALL
            list: ops
                HdlValueId: decode_r1_insn
                str
    INS tuple@@ to cases
    tuple
        HdlValueId: INSN_CRC32_W
        HdlOp: CALL
            list: ops
                HdlValueId: decode_r1_insn
                str
    INS tuple@@ to cases
    tuple
        HdlValueId: INSN_CRC32C_B
        HdlOp: CALL
            list: ops
                HdlValueId: decode_r1_insn
                str
    INS tuple@@ to cases
    tuple
        HdlValueId: INSN_CRC32C_H
        HdlOp: CALL
            list: ops
                HdlValueId: decode_r1_insn
                str
    INS tuple@@ to cases
    tuple
        HdlValueId: INSN_CRC32C_W
        HdlOp: CALL
            list: ops
                HdlValueId: decode_r1_insn
                str

UPD HdlStmIf@@ to 
    DEL list@@elifs from 

UPD HdlStmProcess@@ to 
    DEL HdlStmProcessTriggerConstrain@@COMB from 


CommitId: b7248ba84ecafbc3cdd2feb824b68dda767fa232
[i2c, rtl] Lint errors due to full_o
--- a/hw/ip/i2c/rtl/i2c_core.sv
+++ b/hw/ip/i2c/rtl/i2c_core.sv
@@ -84,7 +84,6 @@ module  i2c_core (
   logic        fmt_fifo_rvalid;
   logic        fmt_fifo_rready;
   logic [12:0] fmt_fifo_rdata;
-  logic        fmt_fifo_full;
   logic [7:0]  fmt_byte;
   logic        fmt_flag_start_before;
   logic        fmt_flag_stop_after;

ParseResult:
DEL HdlIdDef@@fmt_fifo_full from objs
HdlIdDef: fmt_fifo_full
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL


CommitId: b7248ba84ecafbc3cdd2feb824b68dda767fa232
[i2c, rtl] Lint errors due to full_o
--- a/hw/ip/i2c/rtl/i2c_core.sv
+++ b/hw/ip/i2c/rtl/i2c_core.sv
@@ -104,7 +103,6 @@ module  i2c_core (
   logic        rx_fifo_rvalid;
   logic        rx_fifo_rready;
   logic [7:0]  rx_fifo_rdata;
-  logic        rx_fifo_full;
 
   logic        fmt_watermark_d;
   logic        fmt_watermark_q;

ParseResult:
DEL HdlIdDef@@rx_fifo_full from objs
HdlIdDef: rx_fifo_full
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL


CommitId: b7248ba84ecafbc3cdd2feb824b68dda767fa232
[i2c, rtl] Lint errors due to full_o
--- a/hw/ip/i2c/rtl/i2c_core.sv
+++ b/hw/ip/i2c/rtl/i2c_core.sv
@@ -118,7 +116,6 @@ module  i2c_core (
   logic        tx_fifo_rvalid;
   logic        tx_fifo_rready;
   logic [7:0]  tx_fifo_rdata;
-  logic        tx_fifo_full;
 
   logic        acq_fifo_wvalid;
   logic        acq_fifo_wready;

ParseResult:
DEL HdlIdDef@@tx_fifo_full from objs
HdlIdDef: tx_fifo_full
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL


CommitId: b7248ba84ecafbc3cdd2feb824b68dda767fa232
[i2c, rtl] Lint errors due to full_o
--- a/hw/ip/i2c/rtl/i2c_core.sv
+++ b/hw/ip/i2c/rtl/i2c_core.sv
@@ -127,7 +124,6 @@ module  i2c_core (
   logic        acq_fifo_rvalid;
   logic        acq_fifo_rready;
   logic [9:0]  acq_fifo_rdata;
-  logic        acq_fifo_full;
 
   logic        i2c_fifo_txrst;
   logic        i2c_fifo_acqrst;

ParseResult:
DEL HdlIdDef@@acq_fifo_full from objs
HdlIdDef: acq_fifo_full
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL


CommitId: cd5a6a4d0aa32fa90ca9073533bf327b5c83ab30
[spi_device] Extract serial-to-parallel from fwmode
--- a/hw/ip/spi_device/rtl/spi_fwmode.sv
+++ b/hw/ip/spi_device/rtl/spi_fwmode.sv
@@ -16,22 +18,26 @@ module spi_fwmode (
 
   // Configurations
   // No sync logic. Configuration should be static when SPI operating
-  input                             cpha_i,
-  input                             cfg_rxorder_i, // 1: 0->7 , 0:7->0
-  input                             cfg_txorder_i, // 1: 0->7 , 0:7->0
-  input  spi_device_pkg::spi_mode_e mode_i, // Only works at mode_i == FwMode
+  input             cpha_i,
+  input             cfg_txorder_i, // 1: 0->7 , 0:7->0
+  input  spi_mode_e mode_i, // Only works at mode_i == FwMode
 
   // RX, TX FIFO interface
-  output logic                      rx_wvalid_o,
-  input                             rx_wready_i,
-  output spi_device_pkg::spi_byte_t rx_data_o,
+  output logic      rx_wvalid_o,
+  input             rx_wready_i,
+  output spi_byte_t rx_data_o,
+
+  input             tx_rvalid_i,
+  output logic      tx_rready_o,
+  input  spi_byte_t tx_data_i,
 
-  input                             tx_rvalid_i,
-  output logic                      tx_rready_o,
-  input  spi_device_pkg::spi_byte_t tx_data_i,
+  output logic      rx_overflow_o,
+  output logic      tx_underflow_o,
 
-  output logic                      rx_overflow_o,
-  output logic                      tx_underflow_o,
+  // Serial to Parallel
+  input             rx_data_valid_i,
+  input  spi_byte_t rx_data_i,
+  output io_mode_e  io_mode_o,
 
   // SPI Interface: clock is given (ckl_in_i, clk_out_i)
   input        csb_i,

ParseResult:
INS HdlIdDef@@rx_data_valid_i to ports
HdlIdDef: rx_data_valid_i
    HdlValueId: wire
    HdlDirection: IN

INS HdlIdDef@@rx_data_i to ports
HdlIdDef: rx_data_i
    HdlValueId: spi_byte_t
    HdlDirection: IN

INS HdlIdDef@@io_mode_o to ports
HdlIdDef: io_mode_o
    HdlValueId: io_mode_e
    HdlDirection: OUT

UPD HdlIdDef@@mode_i to mode_i
    UPD HdlOp@@DOUBLE_COLON to DOUBLE_COLON
        MOV HdlValueId@@spi_mode_e to ops
        HdlValueId: spi_mode_e
        DEL HdlValueId@@spi_device_pkg from ops
        DEL list@@ops from DOUBLE_COLON
    DEL HdlOp@@DOUBLE_COLON from mode_i

UPD HdlIdDef@@rx_data_o to rx_data_o
    UPD HdlOp@@DOUBLE_COLON to DOUBLE_COLON
        MOV HdlValueId@@spi_byte_t to ops
        HdlValueId: spi_byte_t
        DEL HdlValueId@@spi_device_pkg from ops
        DEL list@@ops from DOUBLE_COLON
    DEL HdlOp@@DOUBLE_COLON from rx_data_o

UPD HdlIdDef@@tx_data_i to tx_data_i
    UPD HdlOp@@DOUBLE_COLON to DOUBLE_COLON
        MOV HdlValueId@@spi_byte_t to ops
        HdlValueId: spi_byte_t
        DEL HdlValueId@@spi_device_pkg from ops
        DEL list@@ops from DOUBLE_COLON
    DEL HdlOp@@DOUBLE_COLON from tx_data_i

DEL HdlIdDef@@cfg_rxorder_i from ports
HdlIdDef: cfg_rxorder_i
    HdlValueId: wire
    HdlDirection: IN


CommitId: 204d98d1d7d42247de8225cf46f47525f61adf63
[vsg] fix _i/_o for several modules
--- a/hw/ip/usbdev/rtl/usbdev_flop_2syncpulse.sv
+++ b/hw/ip/usbdev/rtl/usbdev_flop_2syncpulse.sv
@@ -9,8 +9,8 @@ module usbdev_flop_2syncpulse #(
 ) (
   input  logic             clk_i,    // receive clock
   input  logic             rst_ni,
-  input  logic [Width-1:0] d,
-  output logic [Width-1:0] q
+  input  logic [Width-1:0] d_i,
+  output logic [Width-1:0] q_o
 );
 
   // double-flop synchronizer cell

ParseResult:
UPD HdlIdDef@@d to d_i

UPD HdlIdDef@@q to q_o


CommitId: 204d98d1d7d42247de8225cf46f47525f61adf63
[vsg] fix _i/_o for several modules
--- a/hw/ip/usbdev/rtl/usbdev_flop_2syncpulse.sv
+++ b/hw/ip/usbdev/rtl/usbdev_flop_2syncpulse.sv
@@ -33,6 +33,6 @@ module usbdev_flop_2syncpulse #(
   end
 
   // rising edge detection
-  assign q = d_sync & ~d_sync_q;
+  assign q_o = d_sync & ~d_sync_q;
 
 endmodule
ParseResult:
UPD HdlStmAssign@@ to 
    UPD HdlValueId@@q to q_o


CommitId: 4f735bc6e72691152b3a87dd7d29bb394be5c785
Update lowrisc_ibex to lowRISC/ibex@dd39ec0
--- a/hw/vendor/lowrisc_ibex/examples/simple_system/rtl/ibex_simple_system.sv
+++ b/hw/vendor/lowrisc_ibex/examples/simple_system/rtl/ibex_simple_system.sv
@@ -19,6 +19,9 @@ module ibex_simple_system (
   input IO_RST_N
 );
 
+  parameter bit          PMPEnable       = 1'b0;
+  parameter int unsigned PMPGranularity  = 0;
+  parameter int unsigned PMPNumRegions   = 4;
   parameter bit RV32E                    = 1'b0;
   parameter bit RV32M                    = 1'b1;
   parameter bit RV32B                    = 1'b0;

ParseResult:
INS HdlIdDef@@PMPEnable to params
HdlIdDef: PMPEnable
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: bit
    HdlValueInt: 0
    HdlDirection: INTERNAL

INS HdlIdDef@@PMPGranularity to params
HdlIdDef: PMPGranularity
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: int
            HdlOp: MAP_ASSOCIATION
                list: ops
                    HdlValueId: signed
    HdlValueInt: 0
    HdlDirection: INTERNAL

INS HdlIdDef@@PMPNumRegions to params
HdlIdDef: PMPNumRegions
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: int
            HdlOp: MAP_ASSOCIATION
                list: ops
                    HdlValueId: signed
    HdlValueInt: 4
    HdlDirection: INTERNAL


CommitId: 4f735bc6e72691152b3a87dd7d29bb394be5c785
Update lowrisc_ibex to lowRISC/ibex@dd39ec0
--- a/hw/vendor/lowrisc_ibex/examples/simple_system/rtl/ibex_simple_system.sv
+++ b/hw/vendor/lowrisc_ibex/examples/simple_system/rtl/ibex_simple_system.sv
@@ -243,12 +249,10 @@ module ibex_simple_system (
       .timer_intr_o   (timer_irq)
     );
 
-  // Expose the performance counter array so it's easy to access in
-  // a verilator siumulation
-  logic [63:0] mhpmcounter_vals [32] /*verilator public_flat*/;
+  export "DPI-C" function mhpmcounter_get;
 
-  for(genvar i = 0;i < 32; i = i + 1) begin
-      assign mhpmcounter_vals[i] = u_core.u_ibex_core.cs_registers_i.mhpmcounter[i];
-  end
-endmodule
+  function automatic longint mhpmcounter_get(int index);
+    return u_core.u_ibex_core.cs_registers_i.mhpmcounter[index];
+  endfunction
 
+endmodule
ParseResult:
INS HdlFunctionDef@@mhpmcounter_get to objs

UPD HdlIdDef@@mhpmcounter_vals to mhpmcounter_vals
    UPD HdlOp@@INDEX to INDEX
        UPD HdlOp@@PARAMETRIZATION to PARAMETRIZATION
            UPD HdlValueId@@logic to longint
            MOV HdlValueId@@logic to ops
            HdlValueId: logic
            DEL HdlOp@@DOWNTO from ops
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 63
                    HdlValueInt: 0
            DEL list@@ops from PARAMETRIZATION
        DEL HdlOp@@PARAMETRIZATION from ops
        DEL HdlValueInt@@32 from ops
        DEL list@@ops from INDEX
    DEL HdlOp@@INDEX from mhpmcounter_vals
    DEL HdlDirection@@INTERNAL from mhpmcounter_vals

UPD HdlStmFor@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD list@@body to params
        MOV list@@body to SEQ
        list: body
            HdlIdDef: i
                HdlValueInt: 0
                HdlDirection: INTERNAL
    UPD HdlStmBlock@@SEQ to SEQ
        MOV list@@body to SEQ
        list: body
            HdlStmAssign
                HdlOp: INDEX
                    list: ops
                        HdlOp: DOT
                            list: ops
                                HdlOp: DOT
                                    list: ops
                                        HdlOp: DOT
                                            list: ops
                                                HdlValueId: u_core
                                                HdlValueId: u_ibex_core
                                        HdlValueId: cs_registers_i
                                HdlValueId: mhpmcounter
                        HdlValueId: i
                HdlOp: INDEX
                    list: ops
                        HdlValueId: mhpmcounter_vals
                        HdlValueId: i
    DEL HdlStmBlock@@SEQ from 
    DEL HdlOp@@LT from 
    HdlOp: LT
        list: ops
            HdlValueId: i
            HdlValueInt: 32
    DEL HdlOp@@ASSIGN from 
    HdlOp: ASSIGN
        list: ops
            HdlValueId: i
            HdlOp: ADD
                list: ops
                    HdlValueId: i
                    HdlValueInt: 1
    DEL HdlStmBlock@@SEQ from 

UPD HdlIdDef@@i to index

INS HdlStmReturn@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': [{'__class__': 'HdlOp',           'fn': 'DOT',           'ops': [{'__class__': 'HdlOp',                    'fn': 'DOT',                    'ops': [{'__class__': 'HdlOp',                             'fn': 'DOT',                             'ops': ['u_core', 'u_ibex_core']},                            'cs_registers_i']},                   'mhpmcounter']},          'index']}  to body

UPD HdlIdDef@@i to i
    UPD HdlDirection@@INTERNAL to IN
    DEL HdlValueInt@@0 from i

UPD HdlStmAssign@@ to 
    MOV HdlOp@@INDEX to 
    HdlOp: INDEX
        list: ops
            HdlOp: DOT
                list: ops
                    HdlOp: DOT
                        list: ops
                            HdlOp: DOT
                                list: ops
                                    HdlValueId: u_core
                                    HdlValueId: u_ibex_core
                            HdlValueId: cs_registers_i
                    HdlValueId: mhpmcounter
            HdlValueId: i
    UPD HdlOp@@INDEX to INDEX
        UPD HdlValueId@@i to index
    DEL HdlOp@@INDEX from 
    HdlOp: INDEX
        list: ops
            HdlValueId: mhpmcounter_vals
            HdlValueId: i

DEL HdlStmAssign@@ from body

DEL HdlIdDef@@mhpmcounter_vals from objs

DEL HdlStmFor@@ from objs


CommitId: 2af73a7463ea51ad4e18f954d6b6135c88a5adaf
[top] Fixes for optimized modules
--- a/hw/top_earlgrey/ip/ast/rtl/io_osc.sv
+++ b/hw/top_earlgrey/ip/ast/rtl/io_osc.sv
@@ -53,7 +53,6 @@ always begin
    #(IoClkPeriod/2000) clk = ~clk && en_osc;
 end
 
-assign io_clk_o = clk;
 `else  // of SYNTHESIS
 localparam prim_pkg::impl_e Impl = `PRIM_DEFAULT_IMPL;
 

ParseResult:
UPD HdlStmAssign@@ to 
    MOV HdlValueId@@clk to 
    HdlValueId: clk
    MOV HdlValueId@@io_clk_o to 
    HdlValueId: io_clk_o

DEL HdlStmAssign@@ from objs


CommitId: 63851ac4c88bf17af9711c4a8137bfd2fdd11de2
[ast] Rewrite assignment leading to syntax error in Verible
--- a/hw/top_earlgrey/ip/ast/rtl/usb_osc.sv
+++ b/hw/top_earlgrey/ip/ast/rtl/usb_osc.sv
@@ -52,7 +52,8 @@ end
 
 assign en_osc = en_osc_re || en_osc_fe;  // EN -> 1 || EN -> 0
 
-wire #(USB_VAL_RDLY, USB_VAL_FDLY) ref_val = usb_ref_val_i;
+wire ref_val;
+assign #(USB_VAL_RDLY, USB_VAL_FDLY) ref_val = usb_ref_val_i;
 assign drift = ref_val ? 0 : rand32;
 
 always begin
ParseResult:
INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlValueId: usb_ref_val_i
    HdlValueId: ref_val

UPD HdlIdDef@@ref_val to ref_val
    DEL HdlValueId@@usb_ref_val_i from ref_val


CommitId: 66c509296798cdd9dbeba4deeb381d0cecf3b429
[usbdev] Fixes for I/O modes and expand their tests
--- a/hw/ip/usbdev/rtl/usbdev_linkstate.sv
+++ b/hw/ip/usbdev/rtl/usbdev_linkstate.sv
@@ -10,8 +10,8 @@ module usbdev_linkstate (
   input  logic rst_ni,
   input  logic us_tick_i,
   input  logic usb_sense_i,
-  input  logic usb_rx_d_i,
-  input  logic usb_rx_se0_i,
+  input  logic rx_se0_det_i,
+  input  logic rx_jjj_det_i,
   input  logic sof_valid_i,
   output logic link_disconnect_o,  // level
   output logic link_connect_o,     // level

ParseResult:
UPD HdlIdDef@@usb_rx_d_i to rx_se0_det_i

UPD HdlIdDef@@usb_rx_se0_i to rx_jjj_det_i


CommitId: 66c509296798cdd9dbeba4deeb381d0cecf3b429
[usbdev] Fixes for I/O modes and expand their tests
--- a/hw/ip/usbdev/rtl/usbdev_linkstate.sv
+++ b/hw/ip/usbdev/rtl/usbdev_linkstate.sv
@@ -51,8 +52,7 @@ module usbdev_linkstate (
   } link_inac_state_e;
 
   link_state_e  link_state_d, link_state_q;
-  logic         line_se0_raw, line_idle_raw;
-  logic         see_se0, see_idle, see_pwr_sense;
+  logic         see_pwr_sense;
 
   // Reset FSM
   logic [2:0]      link_rst_timer_d, link_rst_timer_q;

ParseResult:
DEL HdlIdDef@@line_se0_raw from objs
HdlIdDef: line_se0_raw
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

DEL HdlIdDef@@line_idle_raw from objs
HdlIdDef: line_idle_raw
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

DEL HdlIdDef@@see_se0 from objs
HdlIdDef: see_se0
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

DEL HdlIdDef@@see_idle from objs
HdlIdDef: see_idle
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL


CommitId: 66c509296798cdd9dbeba4deeb381d0cecf3b429
[usbdev] Fixes for I/O modes and expand their tests
--- a/hw/ip/usbdev/rtl/usbdev_linkstate.sv
+++ b/hw/ip/usbdev/rtl/usbdev_linkstate.sv
@@ -110,13 +89,14 @@ module usbdev_linkstate (
   );
 
   // Simple events
-  assign ev_bus_active = !see_idle;
+  assign ev_bus_active = !rx_jjj_det_i;
+
+  assign monitor_inac = see_pwr_sense ? ((link_state_q == LinkPowered) | link_active_o) :
+                        1'b0;
 
   always_comb begin
     link_state_d = link_state_q;
     link_resume_o = 0;
-    monitor_inac = see_pwr_sense ? ((link_state_q == LinkPowered) | (link_state_q == LinkActive)) :
-                                   1'b0;
 
     // If VBUS ever goes away the link has disconnected
     if (!see_pwr_sense) begin

ParseResult:
INS HdlStmAssign@@ to objs

INS HdlStmAssign@@ to objs

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            MOV HdlOp@@TERNARY to ops
            HdlOp: TERNARY
                list: ops
                    HdlValueId: see_pwr_sense
                    HdlOp: OR
                        list: ops
                            HdlOp: EQ
                                list: ops
                                    HdlValueId: link_state_q
                                    HdlValueId: LinkPowered
                            HdlOp: EQ
                                list: ops
                                    HdlValueId: link_state_q
                                    HdlValueId: LinkActive
                    HdlValueInt: 0
            UPD HdlOp@@TERNARY to TERNARY
                UPD HdlOp@@OR to OR
                    UPD HdlOp@@EQ to EQ
                        UPD HdlValueId@@link_state_q to link_active_o
                        MOV HdlValueId@@link_state_q to ops
                        HdlValueId: link_state_q
                        DEL HdlValueId@@LinkActive from ops
                        DEL list@@ops from EQ
                    DEL HdlOp@@EQ from ops
            DEL HdlValueId@@monitor_inac from ops
            DEL list@@ops from ASSIGN
        DEL HdlOp@@ASSIGN from body

UPD HdlStmAssign@@ to 
    UPD HdlOp@@NEG_LOG to NEG_LOG
        UPD HdlValueId@@see_idle to monitor_inac
        MOV HdlValueId@@see_idle to ops
        HdlValueId: see_idle
        DEL list@@ops from NEG_LOG
    DEL HdlOp@@NEG_LOG from 
    DEL HdlValueId@@ev_bus_active from 

UPD HdlStmCase@@link_state_q to link_state_q
    INS tuple@@ to cases
    INS HdlValueId@@LinkActiveNoSOF to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmIf@@ to 
    INS HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: link_state_d
                    HdlValueId: LinkActiveNoSOF

DEL HdlStmAssign@@ from objs


CommitId: 66c509296798cdd9dbeba4deeb381d0cecf3b429
[usbdev] Fixes for I/O modes and expand their tests
--- a/hw/ip/usbdev/rtl/usbdev_linkstate.sv
+++ b/hw/ip/usbdev/rtl/usbdev_linkstate.sv
@@ -132,7 +112,7 @@ module usbdev_linkstate (
 
         LinkPowered: begin
           if (ev_reset) begin
-            link_state_d = LinkActive;
+            link_state_d = LinkActiveNoSOF;
           end else if (ev_bus_inactive) begin
             link_state_d = LinkPoweredSuspend;
           end

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            MOV HdlOp@@TERNARY to ops
            HdlOp: TERNARY
                list: ops
                    HdlValueId: see_pwr_sense
                    HdlOp: OR
                        list: ops
                            HdlOp: EQ
                                list: ops
                                    HdlValueId: link_state_q
                                    HdlValueId: LinkPowered
                            HdlOp: EQ
                                list: ops
                                    HdlValueId: link_state_q
                                    HdlValueId: LinkActive
                    HdlValueInt: 0
            UPD HdlOp@@TERNARY to TERNARY
                UPD HdlOp@@OR to OR
                    UPD HdlOp@@EQ to EQ
                        UPD HdlValueId@@link_state_q to link_active_o
                        MOV HdlValueId@@link_state_q to ops
                        HdlValueId: link_state_q
                        DEL HdlValueId@@LinkActive from ops
                        DEL list@@ops from EQ
                    DEL HdlOp@@EQ from ops
            DEL HdlValueId@@monitor_inac from ops
            DEL list@@ops from ASSIGN
        DEL HdlOp@@ASSIGN from body

UPD HdlStmCase@@link_state_q to link_state_q
    INS tuple@@ to cases
    INS HdlValueId@@LinkActiveNoSOF to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmIf@@ to 
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: link_state_d
                    HdlValueId: LinkActive


CommitId: 66c509296798cdd9dbeba4deeb381d0cecf3b429
[usbdev] Fixes for I/O modes and expand their tests
--- a/hw/ip/usbdev/rtl/usbdev_linkstate.sv
+++ b/hw/ip/usbdev/rtl/usbdev_linkstate.sv
@@ -140,22 +120,39 @@ module usbdev_linkstate (
 
         LinkPoweredSuspend: begin
           if (ev_reset) begin
-            link_state_d = LinkActive;
+            link_state_d = LinkActiveNoSOF;
           end else if (ev_bus_active) begin
             link_resume_o = 1;
             link_state_d  = LinkPowered;
           end
         end
 
+        // Active but not yet seen a frame
+        // One reason for getting stuck here is the host thinks it is a LS link
+        // which could happen if the flipped bit does not match the actual pins
+        // Annother is the SI is bad so good data is not recovered from the link
+        LinkActiveNoSOF: begin
+          if (ev_bus_inactive) begin
+            link_state_d = LinkSuspend;
+          end else if (sof_valid_i) begin
+            link_state_d = LinkActive;
+          end
+        end
+
         // Active (USB spec: Default / Address / Configured)
         LinkActive: begin
           if (ev_bus_inactive) begin
             link_state_d = LinkSuspend;
+          end else if (ev_reset) begin
+            link_state_d = LinkActiveNoSOF;
           end
         end
 
         LinkSuspend: begin
-          if (ev_reset || ev_bus_active) begin
+          if (ev_reset) begin
+            link_resume_o = 1;
+            link_state_d  = LinkActiveNoSOF;
+          end else if (ev_bus_active) begin
             link_resume_o = 1;
             link_state_d  = LinkActive;
           end

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            MOV HdlOp@@TERNARY to ops
            HdlOp: TERNARY
                list: ops
                    HdlValueId: see_pwr_sense
                    HdlOp: OR
                        list: ops
                            HdlOp: EQ
                                list: ops
                                    HdlValueId: link_state_q
                                    HdlValueId: LinkPowered
                            HdlOp: EQ
                                list: ops
                                    HdlValueId: link_state_q
                                    HdlValueId: LinkActive
                    HdlValueInt: 0
            UPD HdlOp@@TERNARY to TERNARY
                UPD HdlOp@@OR to OR
                    UPD HdlOp@@EQ to EQ
                        UPD HdlValueId@@link_state_q to link_active_o
                        MOV HdlValueId@@link_state_q to ops
                        HdlValueId: link_state_q
                        DEL HdlValueId@@LinkActive from ops
                        DEL list@@ops from EQ
                    DEL HdlOp@@EQ from ops
            DEL HdlValueId@@monitor_inac from ops
            DEL list@@ops from ASSIGN
        DEL HdlOp@@ASSIGN from body

UPD HdlStmCase@@link_state_q to link_state_q
    INS tuple@@ to cases
    INS HdlValueId@@LinkActiveNoSOF to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

INS HdlStmIf@@ to body

UPD HdlStmIf@@ to 
    INS HdlValueId@@ev_bus_inactive to 
    INS HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: link_state_d
                    HdlValueId: LinkSuspend
    INS list@@elifs to 
    INS tuple@@ to elifs
    INS HdlValueId@@sof_valid_i to 

UPD HdlStmIf@@ to 
    INS HdlValueId@@ev_reset to 
    INS HdlStmBlock@@SEQ to 
    INS list@@elifs to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: link_resume_o
                HdlValueInt: 1
    INS tuple@@ to elifs
    INS HdlValueId@@ev_bus_active to 

UPD HdlStmIf@@ to 
    INS tuple@@ to elifs
    tuple
        HdlValueId: ev_reset
        HdlStmBlock: SEQ
            list: body
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: link_state_d
                        HdlValueId: LinkActiveNoSOF

UPD HdlStmIf@@ to 
    UPD HdlOp@@OR_LOG to ASSIGN
    MOV HdlOp@@OR_LOG to 
    HdlOp: OR_LOG
        list: ops
            HdlValueId: ev_reset
            HdlValueId: ev_bus_active
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: link_resume_o
                    HdlValueInt: 1
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: link_state_d
                    HdlValueId: LinkActive
    UPD HdlOp@@OR_LOG to OR_LOG
        UPD HdlValueId@@ev_reset to link_state_d
        UPD HdlValueId@@ev_bus_active to LinkActiveNoSOF
    DEL list@@elifs from 

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@LinkActive to LinkActiveNoSOF


CommitId: 66c509296798cdd9dbeba4deeb381d0cecf3b429
[usbdev] Fixes for I/O modes and expand their tests
--- a/hw/ip/usbdev/rtl/usbdev_linkstate.sv
+++ b/hw/ip/usbdev/rtl/usbdev_linkstate.sv
@@ -191,7 +188,7 @@ module usbdev_linkstate (
     unique case (link_rst_state_q)
       // No reset signal detected
       NoRst: begin
-        if (see_se0) begin
+        if (rx_se0_det_i) begin
           link_rst_state_d = RstCnt;
           link_rst_timer_d = 0;
         end

ParseResult:
UPD HdlStmIf@@ to 
    UPD HdlValueId@@see_se0 to rx_se0_det_i


CommitId: 66c509296798cdd9dbeba4deeb381d0cecf3b429
[usbdev] Fixes for I/O modes and expand their tests
--- a/hw/ip/usbdev/rtl/usbdev_linkstate.sv
+++ b/hw/ip/usbdev/rtl/usbdev_linkstate.sv
@@ -199,7 +196,7 @@ module usbdev_linkstate (
 
       // Reset signal detected -> counting
       RstCnt: begin
-        if (!see_se0) begin
+        if (!rx_se0_det_i) begin
           link_rst_state_d = NoRst;
         end else begin
           if (us_tick_i) begin

ParseResult:
UPD HdlStmIf@@ to 
    UPD HdlOp@@NEG_LOG to NEG_LOG
        UPD HdlValueId@@see_se0 to rx_se0_det_i


CommitId: 66c509296798cdd9dbeba4deeb381d0cecf3b429
[usbdev] Fixes for I/O modes and expand their tests
--- a/hw/ip/usbdev/rtl/usbdev_linkstate.sv
+++ b/hw/ip/usbdev/rtl/usbdev_linkstate.sv
@@ -214,7 +211,7 @@ module usbdev_linkstate (
 
       // Detected reset -> wait for falling edge
       RstPend: begin
-        if (!see_se0) begin
+        if (!rx_se0_det_i) begin
           link_rst_state_d = NoRst;
           ev_reset = 1'b1;
         end

ParseResult:
UPD HdlStmIf@@ to 
    UPD HdlOp@@NEG_LOG to NEG_LOG
        UPD HdlValueId@@see_se0 to rx_se0_det_i


CommitId: 66c509296798cdd9dbeba4deeb381d0cecf3b429
[usbdev] Fixes for I/O modes and expand their tests
--- a/hw/ip/usbdev/rtl/usbdev_linkstate.sv
+++ b/hw/ip/usbdev/rtl/usbdev_linkstate.sv
@@ -251,14 +248,14 @@ module usbdev_linkstate (
       // Active or disabled
       Active: begin
         link_inac_timer_d = 0;
-        if (see_idle && monitor_inac) begin
+        if (!ev_bus_active && monitor_inac) begin
           link_inac_state_d = InactCnt;
         end
       end
 
       // Got an inactivity signal -> count duration
       InactCnt: begin
-        if (!see_idle || !monitor_inac) begin
+        if (ev_bus_active || !monitor_inac) begin
           link_inac_state_d  = Active;
         end else if (us_tick_i) begin
           if (link_inac_timer_q == SUSPEND_TIMEOUT) begin

ParseResult:
UPD HdlStmIf@@ to 
    UPD HdlOp@@AND_LOG to AND_LOG
        INS HdlOp@@NEG_LOG to ops
        UPD HdlOp@@NEG_LOG to NEG_LOG
            INS list@@ops to NEG_LOG

UPD HdlStmIf@@ to 
    UPD HdlOp@@OR_LOG to OR_LOG
        UPD HdlOp@@NEG_LOG to NEG_LOG
            UPD HdlValueId@@see_idle to ev_bus_active
            MOV HdlValueId@@see_idle to ops
            HdlValueId: see_idle
            DEL list@@ops from NEG_LOG
        DEL HdlOp@@NEG_LOG from ops

UPD HdlStmIf@@ to 
    UPD HdlOp@@AND_LOG to AND_LOG
        UPD HdlValueId@@see_idle to ev_bus_active
        MOV HdlValueId@@see_idle to ops
        HdlValueId: see_idle


CommitId: 66c509296798cdd9dbeba4deeb381d0cecf3b429
[usbdev] Fixes for I/O modes and expand their tests
--- a/hw/ip/usbdev/rtl/usbdev_linkstate.sv
+++ b/hw/ip/usbdev/rtl/usbdev_linkstate.sv
@@ -272,7 +269,7 @@ module usbdev_linkstate (
 
       // Counter expired & event sent, wait here
       InactPend: begin
-        if (!see_idle || !monitor_inac) begin
+        if (ev_bus_active || !monitor_inac) begin
           link_inac_state_d  = Active;
         end
       end
ParseResult:
UPD HdlStmIf@@ to 
    UPD HdlOp@@OR_LOG to OR_LOG
        UPD HdlOp@@NEG_LOG to NEG_LOG
            UPD HdlValueId@@see_idle to ev_bus_active
            MOV HdlValueId@@see_idle to ops
            HdlValueId: see_idle
            DEL list@@ops from NEG_LOG
        DEL HdlOp@@NEG_LOG from ops


CommitId: d14b37a8c2a7f7faa351587c7a3489fa58db0790
Update lowrisc_ibex to lowRISC/ibex@a3a1f9f
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_ex_block.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_ex_block.sv
@@ -21,6 +21,7 @@ module ibex_ex_block #(
     input  ibex_pkg::alu_op_e     alu_operator_i,
     input  logic [31:0]           alu_operand_a_i,
     input  logic [31:0]           alu_operand_b_i,
+    input  logic                  alu_instr_first_cycle_i,
 
     // Branch Target ALU
     // All of these signals are unusued when BranchTargetALU == 0

ParseResult:
INS HdlIdDef@@alu_instr_first_cycle_i to ports
HdlIdDef: alu_instr_first_cycle_i
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: IN


CommitId: d14b37a8c2a7f7faa351587c7a3489fa58db0790
Update lowrisc_ibex to lowRISC/ibex@a3a1f9f
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_ex_block.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_ex_block.sv
@@ -37,6 +38,11 @@ module ibex_ex_block #(
     input  logic [31:0]           multdiv_operand_b_i,
     input  logic                  multdiv_ready_id_i,
 
+    // intermediate val reg
+    output logic                  imd_val_we_o,
+    output logic [33:0]           imd_val_d_o,
+    input  logic [33:0]           imd_val_q_i,
+
     // Outputs
     output logic [31:0]           alu_adder_result_ex_o, // to LSU
     output logic [31:0]           result_ex_o,

ParseResult:
INS HdlIdDef@@imd_val_we_o to ports
HdlIdDef: imd_val_we_o
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: OUT

INS HdlIdDef@@imd_val_d_o to ports
HdlIdDef: imd_val_d_o
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 33
                    HdlValueInt: 0
    HdlDirection: OUT

INS HdlIdDef@@imd_val_q_i to ports
HdlIdDef: imd_val_q_i
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 33
                    HdlValueInt: 0
    HdlDirection: IN


CommitId: d14b37a8c2a7f7faa351587c7a3489fa58db0790
Update lowrisc_ibex to lowRISC/ibex@a3a1f9f
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_ex_block.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_ex_block.sv
@@ -55,6 +61,14 @@ module ibex_ex_block #(
   logic        alu_cmp_result, alu_is_equal_result;
   logic        multdiv_valid;
   logic        multdiv_en;
+  logic [31:0] alu_imd_val_d;
+  logic        alu_imd_val_we;
+  logic [33:0] multdiv_imd_val_d;
+  logic        multdiv_imd_val_we;
+
+  // Intermediate Value Register Mux
+  assign imd_val_d_o  = multdiv_sel_i ? multdiv_imd_val_d : {2'b0, alu_imd_val_d};
+  assign imd_val_we_o = multdiv_sel_i ? multdiv_imd_val_we : alu_imd_val_we;
 
   /*
     The multdiv_i output is never selected if RV32M=0

ParseResult:
INS HdlIdDef@@alu_imd_val_d to objs
HdlIdDef: alu_imd_val_d
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 31
                    HdlValueInt: 0
    HdlDirection: INTERNAL

INS HdlIdDef@@alu_imd_val_we to objs
HdlIdDef: alu_imd_val_we
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

INS HdlIdDef@@multdiv_imd_val_d to objs
HdlIdDef: multdiv_imd_val_d
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 33
                    HdlValueInt: 0
    HdlDirection: INTERNAL

INS HdlIdDef@@multdiv_imd_val_we to objs
HdlIdDef: multdiv_imd_val_we
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: TERNARY
        list: ops
            HdlValueId: multdiv_sel_i
            HdlValueId: multdiv_imd_val_d
            HdlOp: CONCAT
                list: ops
                    HdlValueInt: 0
                    HdlValueId: alu_imd_val_d
    HdlValueId: imd_val_d_o

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: TERNARY
        list: ops
            HdlValueId: multdiv_sel_i
            HdlValueId: multdiv_imd_val_we
            HdlValueId: alu_imd_val_we
    HdlValueId: imd_val_we_o


CommitId: d65d139663d32e8b509e5aa5af2b848daab74a6b
[csrng/rtl] added fatal alert
--- a/hw/ip/csrng/rtl/csrng_cmd_stage.sv
+++ b/hw/ip/csrng/rtl/csrng_cmd_stage.sv
@@ -42,7 +42,8 @@ module csrng_cmd_stage import csrng_pkg::*; #(
   output logic                       genbits_fips_o,
   // error indication
   output logic [2:0]                 cmd_stage_sfifo_cmd_err_o,
-  output logic [2:0]                 cmd_stage_sfifo_genbits_err_o
+  output logic [2:0]                 cmd_stage_sfifo_genbits_err_o,
+  output logic                       cmd_stage_sm_err_o
 );
 
   localparam int GenBitsFifoWidth = 1+128;

ParseResult:
INS HdlIdDef@@cmd_stage_sm_err_o to ports
HdlIdDef: cmd_stage_sm_err_o
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: OUT


CommitId: d65d139663d32e8b509e5aa5af2b848daab74a6b
[csrng/rtl] added fatal alert
--- a/hw/ip/csrng/rtl/csrng_cmd_stage.sv
+++ b/hw/ip/csrng/rtl/csrng_cmd_stage.sv
@@ -56,7 +57,7 @@ module csrng_cmd_stage import csrng_pkg::*; #(
   logic [CmdFifoWidth-1:0] sfifo_cmd_wdata;
   logic                    sfifo_cmd_pop;
   logic [2:0]              sfifo_cmd_err;
-  logic                    sfifo_cmd_not_full;
+  logic                    sfifo_cmd_full;
   logic                    sfifo_cmd_not_empty;
 
   // genbits fifo

ParseResult:
UPD HdlIdDef@@sfifo_cmd_not_full to sfifo_cmd_full


CommitId: d65d139663d32e8b509e5aa5af2b848daab74a6b
[csrng/rtl] added fatal alert
--- a/hw/ip/csrng/rtl/csrng_cmd_stage.sv
+++ b/hw/ip/csrng/rtl/csrng_cmd_stage.sv
@@ -65,7 +66,7 @@ module csrng_cmd_stage import csrng_pkg::*; #(
   logic [GenBitsFifoWidth-1:0] sfifo_genbits_wdata;
   logic                        sfifo_genbits_pop;
   logic [2:0]                  sfifo_genbits_err;
-  logic                        sfifo_genbits_not_full;
+  logic                        sfifo_genbits_full;
   logic                        sfifo_genbits_not_empty;
 
   logic [3:0]              cmd_len;

ParseResult:
UPD HdlIdDef@@sfifo_genbits_not_full to sfifo_genbits_full


CommitId: d65d139663d32e8b509e5aa5af2b848daab74a6b
[csrng/rtl] added fatal alert
--- a/hw/ip/csrng/rtl/csrng_cmd_stage.sv
+++ b/hw/ip/csrng/rtl/csrng_cmd_stage.sv
@@ -139,12 +140,12 @@ module csrng_cmd_stage import csrng_pkg::*; #(
          cmd_gen_1st_req ? {16'b0,cmd_stage_shid_i,sfifo_cmd_rdata[11:0]} :  // pad,id,f,clen,cmd
          sfifo_cmd_rdata;
 
-  assign cmd_stage_rdy_o = sfifo_cmd_not_full;
+  assign cmd_stage_rdy_o = !sfifo_cmd_full;
 
   assign sfifo_cmd_err =
-         {(sfifo_cmd_push && !sfifo_cmd_not_full),
+         {(sfifo_cmd_push && sfifo_cmd_full),
           (sfifo_cmd_pop && !sfifo_cmd_not_empty),
-          (!sfifo_cmd_not_full && !sfifo_cmd_not_empty)};
+          (sfifo_cmd_full && !sfifo_cmd_not_empty)};
 
 
   // state machine controls

ParseResult:
UPD HdlStmAssign@@ to 
    INS HdlOp@@NEG_LOG to 
    UPD HdlOp@@NEG_LOG to NEG_LOG
        INS list@@ops to NEG_LOG

UPD HdlStmAssign@@ to 
    UPD HdlValueId@@sfifo_cmd_not_full to sfifo_cmd_full
    MOV HdlValueId@@sfifo_cmd_not_full to 
    HdlValueId: sfifo_cmd_not_full

UPD HdlStmAssign@@ to 
    UPD HdlOp@@CONCAT to CONCAT
        UPD HdlOp@@AND_LOG to AND_LOG
            UPD HdlOp@@NEG_LOG to NEG_LOG
                UPD HdlValueId@@sfifo_cmd_not_full to sfifo_cmd_full
                MOV HdlValueId@@sfifo_cmd_not_full to ops
                HdlValueId: sfifo_cmd_not_full
                DEL list@@ops from NEG_LOG
            DEL HdlOp@@NEG_LOG from ops
        UPD HdlOp@@CONCAT to CONCAT
            UPD HdlOp@@AND_LOG to AND_LOG
                UPD HdlOp@@NEG_LOG to NEG_LOG
                    UPD HdlValueId@@sfifo_cmd_not_full to sfifo_cmd_full
                    MOV HdlValueId@@sfifo_cmd_not_full to ops
                    HdlValueId: sfifo_cmd_not_full
                    DEL list@@ops from NEG_LOG
                DEL HdlOp@@NEG_LOG from ops


CommitId: d65d139663d32e8b509e5aa5af2b848daab74a6b
[csrng/rtl] added fatal alert
--- a/hw/ip/csrng/rtl/csrng_cmd_stage.sv
+++ b/hw/ip/csrng/rtl/csrng_cmd_stage.sv
@@ -227,6 +235,7 @@ module csrng_cmd_stage import csrng_pkg::*; #(
     cmd_arb_sop_o = 1'b0;
     cmd_arb_mop_o = 1'b0;
     cmd_arb_eop_o = 1'b0;
+    cmd_stage_sm_err_o = 1'b0;
     unique case (state_q)
       Idle: begin
         if (!cmd_fifo_zero) begin

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: cmd_stage_sm_err_o
                HdlValueInt: 0

UPD HdlStmCase@@state_q to state_q
    UPD HdlOp@@ASSIGN to ASSIGN
        UPD HdlValueId@@Idle to Error


CommitId: d65d139663d32e8b509e5aa5af2b848daab74a6b
[csrng/rtl] added fatal alert
--- a/hw/ip/csrng/rtl/csrng_cmd_stage.sv
+++ b/hw/ip/csrng/rtl/csrng_cmd_stage.sv
@@ -276,7 +285,7 @@ module csrng_cmd_stage import csrng_pkg::*; #(
         // flag set if a gen request
         if (cmd_gen_flag_q) begin
           // must stall if genbits fifo is not clear
-          if (sfifo_genbits_not_full) begin
+          if (!sfifo_genbits_full) begin
             if (cmd_gen_cnt_q == '0) begin
               cmd_final_ack = 1'b1;
               state_d = Idle;

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: cmd_stage_sm_err_o
                HdlValueInt: 0

UPD HdlStmCase@@state_q to state_q
    INS tuple@@ to cases
    tuple
        HdlValueId: Error
        HdlStmBlock: SEQ
            list: body
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: cmd_stage_sm_err_o
                        HdlValueInt: 1

UPD HdlStmCase@@state_q to state_q
    UPD HdlOp@@ASSIGN to ASSIGN
        UPD HdlValueId@@Idle to Error

UPD HdlStmIf@@ to 
    UPD HdlValueId@@sfifo_genbits_not_full to sfifo_genbits_full
    MOV HdlValueId@@sfifo_genbits_not_full to 
    HdlValueId: sfifo_genbits_not_full


CommitId: d65d139663d32e8b509e5aa5af2b848daab74a6b
[csrng/rtl] added fatal alert
--- a/hw/ip/csrng/rtl/csrng_cmd_stage.sv
+++ b/hw/ip/csrng/rtl/csrng_cmd_stage.sv
@@ -297,7 +306,10 @@ module csrng_cmd_stage import csrng_pkg::*; #(
           state_d = Idle;
         end
       end
-      default: state_d = Idle;
+      Error: begin
+        cmd_stage_sm_err_o = 1'b1;
+      end
+      default: state_d = Error;
     endcase
   end
 

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: cmd_stage_sm_err_o
                HdlValueInt: 0

UPD HdlStmCase@@state_q to state_q
    INS tuple@@ to cases
    tuple
        HdlValueId: Error
        HdlStmBlock: SEQ
            list: body
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: cmd_stage_sm_err_o
                        HdlValueInt: 1

UPD HdlStmCase@@state_q to state_q
    UPD HdlOp@@ASSIGN to ASSIGN
        UPD HdlValueId@@Idle to Error

UPD HdlStmIf@@ to 
    INS HdlOp@@NEG_LOG to 
    UPD HdlOp@@NEG_LOG to NEG_LOG
        INS list@@ops to NEG_LOG


CommitId: d65d139663d32e8b509e5aa5af2b848daab74a6b
[csrng/rtl] added fatal alert
--- a/hw/ip/csrng/rtl/csrng_cmd_stage.sv
+++ b/hw/ip/csrng/rtl/csrng_cmd_stage.sv
@@ -334,9 +346,9 @@ module csrng_cmd_stage import csrng_pkg::*; #(
 
 
   assign sfifo_genbits_err =
-         {(sfifo_genbits_push && !sfifo_genbits_not_full),
+         {(sfifo_genbits_push && sfifo_genbits_full),
           (sfifo_genbits_pop && !sfifo_genbits_not_empty),
-          (!sfifo_genbits_not_full && !sfifo_genbits_not_empty)};
+          (sfifo_genbits_full && !sfifo_genbits_not_empty)};
 
   //---------------------------------------------------------
   // ack logic
ParseResult:
UPD HdlStmAssign@@ to 
    UPD HdlOp@@CONCAT to CONCAT
        UPD HdlOp@@AND_LOG to AND_LOG
            UPD HdlOp@@NEG_LOG to NEG_LOG
                UPD HdlValueId@@sfifo_genbits_not_full to sfifo_genbits_full
                MOV HdlValueId@@sfifo_genbits_not_full to ops
                HdlValueId: sfifo_genbits_not_full
                DEL list@@ops from NEG_LOG
            DEL HdlOp@@NEG_LOG from ops
        UPD HdlOp@@CONCAT to CONCAT
            UPD HdlOp@@AND_LOG to AND_LOG
                UPD HdlOp@@NEG_LOG to NEG_LOG
                    UPD HdlValueId@@sfifo_genbits_not_full to sfifo_genbits_full
                    MOV HdlValueId@@sfifo_genbits_not_full to ops
                    HdlValueId: sfifo_genbits_not_full
                    DEL list@@ops from NEG_LOG
                DEL HdlOp@@NEG_LOG from ops


CommitId: 36c41307619b529bc53ae495cc8416f8c237c753
[rtl] Fix for #2235
--- a/hw/top_earlgrey/rtl/top_earlgrey_nexysvideo.sv
+++ b/hw/top_earlgrey/rtl/top_earlgrey_nexysvideo.sv
@@ -43,6 +43,7 @@ module top_earlgrey_nexysvideo (
   inout               IO_GP15
 );
 
+  import top_earlgrey_pkg::*;
 
   //////////////////////
   // Padring Instance //

ParseResult:
UPD HdlModuleDef@@top_earlgrey_nexysvideo to top_earlgrey_nexysvideo
    INS HdlImport@@ to objs
    HdlImport
        list: path
            HdlValueId: top_earlgrey_pkg
            HdlAll


CommitId: 36c41307619b529bc53ae495cc8416f8c237c753
[rtl] Fix for #2235
--- a/hw/top_earlgrey/rtl/top_earlgrey_nexysvideo.sv
+++ b/hw/top_earlgrey/rtl/top_earlgrey_nexysvideo.sv
@@ -141,9 +142,9 @@ module top_earlgrey_nexysvideo (
                           padctrl_reg_pkg::NDioPads;
 
   // This specifies the tie-off values of the muxed MIO/DIOs
-  // when the JTAG is active. SPI CSB sits on DIO 12, and is active low.
-  localparam logic [NumIOs-1:0] TieOffValues =
-      NumIOs'(1'b1 << (padctrl_reg_pkg::NMioPads + 12));
+  // when the JTAG is active. SPI CSB is active low.
+  localparam logic [NumIOs-1:0] TieOffValues = NumIOs'(1'b1 << (
+      padctrl_reg_pkg::NMioPads + top_earlgrey_pkg::TopEarlgreyDioPinSpiDeviceCsb));
 
   // TODO: this is a temporary solution. JTAG will eventually be selected and
   // qualified inside the pinmux, based on strap and lifecycle state.

ParseResult:
UPD HdlModuleDef@@top_earlgrey_nexysvideo to top_earlgrey_nexysvideo
    INS HdlImport@@ to objs
    HdlImport
        list: path
            HdlValueId: top_earlgrey_pkg
            HdlAll

UPD HdlIdDef@@TieOffValues to TieOffValues
    UPD HdlOp@@INDEX to PARAMETRIZATION
    UPD HdlOp@@CALL to CALL
        UPD HdlOp@@SLL to SLL
            UPD HdlOp@@ADD to ADD
                DEL HdlValueInt@@12 from ops

UPD HdlIdDef@@TieOffValues to TieOffValues
    UPD HdlOp@@CALL to CALL
        UPD HdlOp@@SLL to SLL
            UPD HdlOp@@ADD to ADD
                INS HdlOp@@DOUBLE_COLON to ops
                HdlOp: DOUBLE_COLON
                    list: ops
                        HdlValueId: top_earlgrey_pkg
                        HdlValueId: TopEarlgreyDioPinSpiDeviceCsb


CommitId: 36c41307619b529bc53ae495cc8416f8c237c753
[rtl] Fix for #2235
--- a/hw/top_earlgrey/rtl/top_earlgrey_nexysvideo.sv
+++ b/hw/top_earlgrey/rtl/top_earlgrey_nexysvideo.sv
@@ -154,12 +155,16 @@ module top_earlgrey_nexysvideo (
     .TieOffValues   (                   TieOffValues ),
     .JtagEnIdx      (                             16 ), // MIO 16
     .JtagEnPolarity (                              1 ),
-    .TckIdx         ( padctrl_reg_pkg::NMioPads + 13 ), // DIO 13
-    .TmsIdx         ( padctrl_reg_pkg::NMioPads + 12 ), // DIO 12
+    .TckIdx         ( padctrl_reg_pkg::NMioPads +
+                      top_earlgrey_pkg::TopEarlgreyDioPinSpiDeviceSck ),
+    .TmsIdx         ( padctrl_reg_pkg::NMioPads +
+                      top_earlgrey_pkg::TopEarlgreyDioPinSpiDeviceCsb ),
     .TrstIdx        (                             18 ), // MIO 18
     .SrstIdx        (                             19 ), // MIO 19
-    .TdiIdx         ( padctrl_reg_pkg::NMioPads + 11 ), // DIO 11
-    .TdoIdx         ( padctrl_reg_pkg::NMioPads + 10 )  // DIO 10
+    .TdiIdx         ( padctrl_reg_pkg::NMioPads +
+                      top_earlgrey_pkg::TopEarlgreyDioPinSpiDeviceMosi ),
+    .TdoIdx         ( padctrl_reg_pkg::NMioPads +
+                      top_earlgrey_pkg::TopEarlgreyDioPinSpiDeviceMiso )
   ) jtag_mux (
     // To JTAG inside core
     .jtag_tck_o   ( jtag_tck        ),
ParseResult:
UPD HdlModuleDef@@top_earlgrey_nexysvideo to top_earlgrey_nexysvideo
    INS HdlImport@@ to objs
    HdlImport
        list: path
            HdlValueId: top_earlgrey_pkg
            HdlAll


CommitId: 30d23802d054518738cbaa78393995274d5602ac
[top] Re-align top_englishbreakfast with top_earlgrey
--- a/hw/top_englishbreakfast/rtl/top_englishbreakfast_cw305.sv
+++ b/hw/top_englishbreakfast/rtl/top_englishbreakfast_cw305.sv
@@ -233,12 +233,14 @@ module top_englishbreakfast_cw305 #(
                                        n: 1'b1
                                      };
   assign ast_base_alerts.alerts = {ast_pkg::NumAlerts{silent_alert}};
-  assign ast_base_status.io_pok    = {ast_pkg::NumIoRails{1'b1}};
+  assign ast_base_status.io_pok = {ast_pkg::NumIoRails{1'b1}};
 
   // the rst_ni pin only goes to AST
   // the rest of the logic generates reset based on the 'pok' signal.
   // for verilator purposes, make these two the same.
   assign ast_base_rst.aon_pok      = rst_n;
+  lc_ctrl_pkg::lc_tx_t lc_clk_bypass;
+
   top_englishbreakfast #(
     .AesMasking(1'b1),
     .AesSBoxImpl(aes_pkg::SBoxImplDom),

ParseResult:
INS HdlIdDef@@lc_clk_bypass to objs
HdlIdDef: lc_clk_bypass
    HdlOp: DOUBLE_COLON
        list: ops
            HdlValueId: lc_ctrl_pkg
            HdlValueId: lc_tx_t
    HdlDirection: INTERNAL


CommitId: 30d23802d054518738cbaa78393995274d5602ac
[top] Re-align top_englishbreakfast with top_earlgrey
--- a/hw/top_englishbreakfast/rtl/top_englishbreakfast_cw305.sv
+++ b/hw/top_englishbreakfast/rtl/top_englishbreakfast_cw305.sv
@@ -326,6 +331,6 @@ module top_englishbreakfast_cw305 #(
   assign TIO_CLKOUT = IO_CLK;
 
   // UART Tx for debugging. The UART itself is connected to the capture board.
-  assign IO_UTX_DEBUG = top_englishbreakfast.cio_uart_tx_d2p;
+  assign IO_UTX_DEBUG = top_englishbreakfast.cio_uart0_tx_d2p;
 
 endmodule : top_englishbreakfast_cw305
ParseResult:
INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: DOT
        list: ops
            HdlValueId: top_englishbreakfast
            HdlValueId: cio_uart0_tx_d2p
    HdlValueId: IO_UTX_DEBUG

DEL HdlStmAssign@@ from objs
HdlStmAssign
    HdlOp: DOT
        list: ops
            HdlValueId: top_englishbreakfast
            HdlValueId: cio_uart_tx_d2p
    HdlValueId: IO_UTX_DEBUG


CommitId: de7eba3d7af1f55b7bda8104152b4240f3d37456
[csrng/entropy_src] fix for #4601
--- a/hw/ip/csrng/rtl/csrng_core.sv
+++ b/hw/ip/csrng/rtl/csrng_core.sv
@@ -26,6 +26,10 @@ module csrng_core import csrng_pkg::*; #(
   output entropy_src_pkg::entropy_src_hw_if_req_t entropy_src_hw_if_o,
   input  entropy_src_pkg::entropy_src_hw_if_rsp_t entropy_src_hw_if_i,
 
+  // Entropy Interface
+  input  entropy_src_pkg::cs_aes_halt_req_t cs_aes_halt_i,
+  output entropy_src_pkg::cs_aes_halt_rsp_t cs_aes_halt_o,
+
   // Application Interfaces
   input  csrng_req_t  [NHwApps-1:0] csrng_cmd_i,
   output csrng_rsp_t  [NHwApps-1:0] csrng_cmd_o,

ParseResult:
INS HdlIdDef@@cs_aes_halt_i to ports
HdlIdDef: cs_aes_halt_i
    HdlOp: DOUBLE_COLON
        list: ops
            HdlValueId: entropy_src_pkg
            HdlValueId: cs_aes_halt_req_t
    HdlDirection: IN

INS HdlIdDef@@cs_aes_halt_o to ports
HdlIdDef: cs_aes_halt_o
    HdlOp: DOUBLE_COLON
        list: ops
            HdlValueId: entropy_src_pkg
            HdlValueId: cs_aes_halt_rsp_t
    HdlDirection: OUT


CommitId: de7eba3d7af1f55b7bda8104152b4240f3d37456
[csrng/entropy_src] fix for #4601
--- a/hw/ip/csrng/rtl/csrng_core.sv
+++ b/hw/ip/csrng/rtl/csrng_core.sv
@@ -300,6 +304,9 @@ module csrng_core import csrng_pkg::*; #(
   logic                    main_sm_sts;
 
   logic [30:0]             err_code_test_bit;
+  logic                    ctr_drbg_upd_es_ack;
+  logic                    ctr_drbg_gen_es_ack;
+  logic                    block_encrypt_quiet;
 
   // flops
   logic [2:0]  acmd_q, acmd_d;

ParseResult:
INS HdlIdDef@@ctr_drbg_upd_es_ack to objs
HdlIdDef: ctr_drbg_upd_es_ack
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

INS HdlIdDef@@ctr_drbg_gen_es_ack to objs
HdlIdDef: ctr_drbg_gen_es_ack
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

INS HdlIdDef@@block_encrypt_quiet to objs
HdlIdDef: block_encrypt_quiet
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL


CommitId: de7eba3d7af1f55b7bda8104152b4240f3d37456
[csrng/entropy_src] fix for #4601
--- a/hw/ip/csrng/rtl/csrng_core.sv
+++ b/hw/ip/csrng/rtl/csrng_core.sv
@@ -310,6 +317,7 @@ module csrng_core import csrng_pkg::*; #(
   logic        lc_hw_debug_not_on_q, lc_hw_debug_not_on_d;
   logic        lc_hw_debug_on_q, lc_hw_debug_on_d;
   logic        cmd_req_dly_q, cmd_req_dly_d;
+  logic        cs_aes_halt_q, cs_aes_halt_d;
 
   always_ff @(posedge clk_i or negedge rst_ni)
     if (!rst_ni) begin

ParseResult:
INS HdlIdDef@@cs_aes_halt_q to objs
HdlIdDef: cs_aes_halt_q
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

INS HdlIdDef@@cs_aes_halt_d to objs
HdlIdDef: cs_aes_halt_d
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL


CommitId: de7eba3d7af1f55b7bda8104152b4240f3d37456
[csrng/entropy_src] fix for #4601
--- a/hw/ip/csrng/rtl/csrng_core.sv
+++ b/hw/ip/csrng/rtl/csrng_core.sv
@@ -321,6 +329,7 @@ module csrng_core import csrng_pkg::*; #(
       lc_hw_debug_not_on_q <= '0;
       lc_hw_debug_on_q <= '0;
       cmd_req_dly_q <= '0;
+      cs_aes_halt_q <= '0;
     end else begin
       acmd_q  <= acmd_d;
       shid_q  <= shid_d;

ParseResult:
INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: cs_aes_halt_q


CommitId: de7eba3d7af1f55b7bda8104152b4240f3d37456
[csrng/entropy_src] fix for #4601
--- a/hw/ip/csrng/rtl/csrng_core.sv
+++ b/hw/ip/csrng/rtl/csrng_core.sv
@@ -330,6 +339,7 @@ module csrng_core import csrng_pkg::*; #(
       lc_hw_debug_not_on_q <= lc_hw_debug_not_on_d;
       lc_hw_debug_on_q <= lc_hw_debug_on_d;
       cmd_req_dly_q <= cmd_req_dly_d;
+      cs_aes_halt_q <= cs_aes_halt_d;
     end
 
   //--------------------------------------------

ParseResult:
INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueId: cs_aes_halt_d
    HdlValueId: cs_aes_halt_q


CommitId: de7eba3d7af1f55b7bda8104152b4240f3d37456
[csrng/entropy_src] fix for #4601
--- a/hw/ip/csrng/rtl/csrng_core.sv
+++ b/hw/ip/csrng/rtl/csrng_core.sv
@@ -1297,6 +1316,9 @@ module csrng_core import csrng_pkg::*; #(
   );
 
 
+  // es to cs halt request to reduce power spikes
+  assign cs_aes_halt_d = ctr_drbg_upd_es_ack && ctr_drbg_gen_es_ack && block_encrypt_quiet;
+  assign cs_aes_halt_o.cs_aes_halt_ack = cs_aes_halt_q;
 
   //--------------------------------------------
   // report csrng request summary
ParseResult:
INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: AND_LOG
        list: ops
            HdlOp: AND_LOG
                list: ops
                    HdlValueId: ctr_drbg_upd_es_ack
                    HdlValueId: ctr_drbg_gen_es_ack
            HdlValueId: block_encrypt_quiet
    HdlValueId: cs_aes_halt_d

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlValueId: cs_aes_halt_q
    HdlValueId: cs_aes_halt_o


CommitId: 74a39e3e147145596fbcc25b0720662c2f417e54
Update lowrisc_ibex to lowRISC/ibex@7e22830
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_core.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_core.sv
@@ -19,6 +19,7 @@ module ibex_core #(
     parameter bit          RV32E                    = 1'b0,
     parameter bit          RV32M                    = 1'b1,
     parameter              MultiplierImplementation = "fast",
+    parameter bit          DbgTriggerEn             = 1'b0,
     parameter int unsigned DmHaltAddr               = 32'h1A110800,
     parameter int unsigned DmExceptionAddr          = 32'h1A110808
 ) (

ParseResult:
INS HdlIdDef@@DbgTriggerEn to params
HdlIdDef: DbgTriggerEn
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: bit
    HdlValueInt: 0
    HdlDirection: INTERNAL


CommitId: c2af874c2b3f2c81a12d861357f8825fc6771fac
[prim_esc_receiver] Assert escalation in case of sigint error
--- a/hw/ip/prim/rtl/prim_esc_receiver.sv
+++ b/hw/ip/prim/rtl/prim_esc_receiver.sv
@@ -239,14 +240,16 @@ module prim_esc_receiver
   `ASSERT_KNOWN(RespPKnownO_A, esc_rx_o)
 
   `ASSERT(SigIntCheck0_A, esc_tx_i.esc_p == esc_tx_i.esc_n |=>
-      esc_rx_o.resp_p == esc_rx_o.resp_n, clk_i, !rst_ni)
+      esc_rx_o.resp_p == esc_rx_o.resp_n)
   `ASSERT(SigIntCheck1_A, esc_tx_i.esc_p == esc_tx_i.esc_n |=> state_q == SigInt)
+  // auto-escalate in case of signal integrity issue
+  `ASSERT(SigIntCheck2_A, esc_tx_i.esc_p == esc_tx_i.esc_n |=> esc_req_o)
   // correct diff encoding
   `ASSERT(DiffEncCheck_A, esc_tx_i.esc_p ^ esc_tx_i.esc_n |=>
       esc_rx_o.resp_p ^ esc_rx_o.resp_n)
-  // disable in case of ping integrity issue
-  `ASSERT(PingRespCheck_A, $rose(esc_tx_i.esc_p) |=> $fell(esc_tx_i.esc_p) |->
-      $rose(esc_rx_o.resp_p) |=> $fell(esc_rx_o.resp_p),
+  // disable in case of signal integrity issue
+  `ASSERT(PingRespCheck_A, state_q == Idle ##1 $rose(esc_tx_i.esc_p) ##1 $fell(esc_tx_i.esc_p) |->
+      $rose(esc_rx_o.resp_p) ##1 $fell(esc_rx_o.resp_p),
       clk_i, !rst_ni || (esc_tx_i.esc_p == esc_tx_i.esc_n))
   // escalation response needs to continuously toggle
   `ASSERT(EscRespCheck_A, esc_tx_i.esc_p && $past(esc_tx_i.esc_p) &&

ParseResult:
UPD HdlStmCase@@state_q to state_q
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: esc_req
                HdlValueInt: 1


CommitId: c2af874c2b3f2c81a12d861357f8825fc6771fac
[prim_esc_receiver] Assert escalation in case of sigint error
--- a/hw/ip/prim/rtl/prim_esc_receiver.sv
+++ b/hw/ip/prim/rtl/prim_esc_receiver.sv
@@ -254,7 +257,7 @@ module prim_esc_receiver
       |=> esc_rx_o.resp_p != $past(esc_rx_o.resp_p))
   // detect escalation pulse
   `ASSERT(EscEnCheck_A, esc_tx_i.esc_p && (esc_tx_i.esc_p ^ esc_tx_i.esc_n) && state_q != SigInt
-      |=> esc_tx_i.esc_p && (esc_tx_i.esc_p ^ esc_tx_i.esc_n) |-> esc_req_o)
+      ##1 esc_tx_i.esc_p && (esc_tx_i.esc_p ^ esc_tx_i.esc_n) |-> esc_req_o)
   // make sure the counter does not wrap around
   `ASSERT(EscCntWrap_A, &cnt_q[0] |=> cnt_q[0] != 0)
   // if the counter expires, escalation should be asserted
ParseResult:
UPD HdlStmCase@@state_q to state_q
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: esc_req
                HdlValueInt: 1


CommitId: 19be7e21350737e08cfe20e56bf4e1f06d37df45
[i2c, rtl] Loopback test and other changes
--- a/hw/ip/i2c/rtl/i2c_core.sv
+++ b/hw/ip/i2c/rtl/i2c_core.sv
@@ -50,8 +50,11 @@ module  i2c_core (
   logic        stretch_en_tx;
   logic        stretch_en_acq;
   logic        stretch_stop;
+  logic        stretch_stop_clr;
   logic [31:0] host_timeout;
 
+  logic scl_sync;
+  logic sda_sync;
   logic scl_out_fsm;
   logic sda_out_fsm;
 

ParseResult:
INS HdlIdDef@@stretch_stop_clr to objs
HdlIdDef: stretch_stop_clr
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

INS HdlIdDef@@scl_sync to objs
HdlIdDef: scl_sync
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

INS HdlIdDef@@sda_sync to objs
HdlIdDef: sda_sync
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL


CommitId: 19be7e21350737e08cfe20e56bf4e1f06d37df45
[i2c, rtl] Loopback test and other changes
--- a/hw/ip/i2c/rtl/i2c_core.sv
+++ b/hw/ip/i2c/rtl/i2c_core.sv
@@ -133,6 +136,7 @@ module  i2c_core (
 
   logic        host_enable;
   logic        target_enable;
+  logic        line_loopback;
 
   logic [6:0]  target_address0;
   logic [6:0]  target_mask0;

ParseResult:
INS HdlIdDef@@line_loopback to objs
HdlIdDef: line_loopback
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL


CommitId: 19be7e21350737e08cfe20e56bf4e1f06d37df45
[i2c, rtl] Loopback test and other changes
--- a/hw/ip/i2c/rtl/i2c_core.sv
+++ b/hw/ip/i2c/rtl/i2c_core.sv
@@ -152,7 +156,7 @@ module  i2c_core (
   assign hw2reg.status.hostidle.d = host_idle;
   assign hw2reg.status.targetidle.d = target_idle;
   assign hw2reg.status.rxempty.d = ~rx_fifo_rvalid;
-  assign hw2reg.rdata.d = rx_fifo_rdata;
+  assign hw2reg.rdata.d = line_loopback ? 8'hff : rx_fifo_rdata;
   assign hw2reg.fifo_status.fmtlvl.d = fmt_fifo_depth;
   assign hw2reg.fifo_status.rxlvl.d = rx_fifo_depth;
   assign hw2reg.val.scl_rx.d = scl_rx_val;

ParseResult:
INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: TERNARY
        list: ops
            HdlValueId: line_loopback
            HdlValueInt: ff
            HdlValueId: rx_fifo_rdata
    HdlValueId: hw2reg

DEL HdlStmAssign@@ from objs
HdlStmAssign
    HdlValueId: rx_fifo_rdata
    HdlValueId: hw2reg


CommitId: 19be7e21350737e08cfe20e56bf4e1f06d37df45
[i2c, rtl] Loopback test and other changes
--- a/hw/ip/i2c/rtl/i2c_core.sv
+++ b/hw/ip/i2c/rtl/i2c_core.sv
@@ -164,8 +168,10 @@ module  i2c_core (
   assign hw2reg.status.acqempty.d = ~acq_fifo_rvalid;
   assign hw2reg.fifo_status.txlvl.d = tx_fifo_depth;
   assign hw2reg.fifo_status.acqlvl.d = acq_fifo_depth;
-  assign hw2reg.acqdata.abyte.d = acq_fifo_rdata[7:0];
-  assign hw2reg.acqdata.signal.d = acq_fifo_rdata[9:8];
+  assign hw2reg.acqdata.abyte.d = line_loopback ? 8'hff : acq_fifo_rdata[7:0];
+  assign hw2reg.acqdata.signal.d = line_loopback ? 2'b11 : acq_fifo_rdata[9:8];
+  assign hw2reg.stretch_ctrl.stop.d = 1'b0;
+  assign hw2reg.stretch_ctrl.stop.de = stretch_stop_clr;
 
   assign override = reg2hw.ovrd.txovrden;
 

ParseResult:
INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: hw2reg

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlValueId: stretch_stop_clr
    HdlValueId: hw2reg

UPD HdlStmAssign@@ to 
    INS HdlOp@@TERNARY to 
    UPD HdlOp@@TERNARY to TERNARY
        INS list@@ops to TERNARY
        INS HdlValueId@@line_loopback to ops
        INS HdlValueInt@@ff to ops

UPD HdlStmAssign@@ to 
    MOV HdlOp@@INDEX to 
    HdlOp: INDEX
        list: ops
            HdlValueId: acq_fifo_rdata
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 7
                    HdlValueInt: 0

UPD HdlStmAssign@@ to 
    MOV HdlOp@@INDEX to 
    HdlOp: INDEX
        list: ops
            HdlValueId: acq_fifo_rdata
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 9
                    HdlValueInt: 8


CommitId: 19be7e21350737e08cfe20e56bf4e1f06d37df45
[i2c, rtl] Loopback test and other changes
--- a/hw/ip/i2c/rtl/i2c_core.sv
+++ b/hw/ip/i2c/rtl/i2c_core.sv
@@ -174,6 +180,7 @@ module  i2c_core (
 
   assign host_enable = reg2hw.ctrl.enablehost.q;
   assign target_enable = reg2hw.ctrl.enabletarget.q;
+  assign line_loopback = reg2hw.ctrl.llpbk.q;
 
   assign target_address0 = reg2hw.target_id.address0.q;
   assign target_mask0 = reg2hw.target_id.mask0.q;

ParseResult:
INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: DOT
        list: ops
            HdlOp: DOT
                list: ops
                    HdlOp: DOT
                        list: ops
                            HdlValueId: reg2hw
                            HdlValueId: ctrl
                    HdlValueId: llpbk
            HdlValueId: q
    HdlValueId: line_loopback

UPD HdlStmAssign@@ to 
    INS HdlOp@@TERNARY to 
    UPD HdlOp@@TERNARY to TERNARY
        INS list@@ops to TERNARY
        INS HdlValueId@@line_loopback to ops
        INS HdlValueInt@@11 to ops


CommitId: 19be7e21350737e08cfe20e56bf4e1f06d37df45
[i2c, rtl] Loopback test and other changes
--- a/hw/ip/i2c/rtl/i2c_core.sv
+++ b/hw/ip/i2c/rtl/i2c_core.sv
@@ -257,18 +264,19 @@ module  i2c_core (
   // The fifo write enable is controlled by fbyte, start, stop, read, rcont,
   // and nakok field qe bits.
   // When all qe bits are asserted, fdata is injected into the fifo.
-  assign fmt_fifo_wvalid     = reg2hw.fdata.fbyte.qe &
+  assign fmt_fifo_wvalid     = line_loopback ? 1'b1 :
+                               reg2hw.fdata.fbyte.qe &
                                reg2hw.fdata.start.qe &
                                reg2hw.fdata.stop.qe  &
                                reg2hw.fdata.read.qe  &
                                reg2hw.fdata.rcont.qe &
                                reg2hw.fdata.nakok.qe;
-  assign fmt_fifo_wdata[7:0] = reg2hw.fdata.fbyte.q;
-  assign fmt_fifo_wdata[8]   = reg2hw.fdata.start.q;
-  assign fmt_fifo_wdata[9]   = reg2hw.fdata.stop.q;
-  assign fmt_fifo_wdata[10]  = reg2hw.fdata.read.q;
-  assign fmt_fifo_wdata[11]  = reg2hw.fdata.rcont.q;
-  assign fmt_fifo_wdata[12]  = reg2hw.fdata.nakok.q;
+  assign fmt_fifo_wdata[7:0] = line_loopback ? rx_fifo_rdata : reg2hw.fdata.fbyte.q;
+  assign fmt_fifo_wdata[8]   = line_loopback ? 1'b0 : reg2hw.fdata.start.q;
+  assign fmt_fifo_wdata[9]   = line_loopback ? 1'b0 : reg2hw.fdata.stop.q;
+  assign fmt_fifo_wdata[10]  = line_loopback ? 1'b0 : reg2hw.fdata.read.q;
+  assign fmt_fifo_wdata[11]  = line_loopback ? 1'b0 : reg2hw.fdata.rcont.q;
+  assign fmt_fifo_wdata[12]  = line_loopback ? 1'b1 : reg2hw.fdata.nakok.q;
 
   assign fmt_byte               = fmt_fifo_rvalid ? fmt_fifo_rdata[7:0] : '0;
   assign fmt_flag_start_before  = fmt_fifo_rvalid ? fmt_fifo_rdata[8] : '0;

ParseResult:
UPD HdlStmAssign@@ to 
    INS HdlOp@@TERNARY to 
    UPD HdlOp@@TERNARY to TERNARY
        INS list@@ops to TERNARY
        INS HdlValueId@@line_loopback to ops
        INS HdlValueInt@@1 to ops

UPD HdlStmAssign@@ to 
    INS HdlOp@@TERNARY to 
    UPD HdlOp@@TERNARY to TERNARY
        INS list@@ops to TERNARY
        INS HdlValueId@@line_loopback to ops
        INS HdlValueId@@rx_fifo_rdata to ops

UPD HdlStmAssign@@ to 
    INS HdlOp@@TERNARY to 
    UPD HdlOp@@TERNARY to TERNARY
        INS list@@ops to TERNARY
        INS HdlValueId@@line_loopback to ops
        INS HdlValueInt@@0 to ops

UPD HdlStmAssign@@ to 
    MOV HdlOp@@AND to 
    HdlOp: AND
        list: ops
            HdlOp: AND
                list: ops
                    HdlOp: AND
                        list: ops
                            HdlOp: AND
                                list: ops
                                    HdlOp: AND
                                        list: ops
                                            HdlOp: DOT
                                                list: ops
                                                    HdlOp: DOT
                                                        list: ops
                                                            HdlOp: DOT
                                                                list: ops
                                                                    HdlValueId: reg2hw
                                                                    HdlValueId: fdata
                                                            HdlValueId: fbyte
                                                    HdlValueId: qe
                                            HdlOp: DOT
                                                list: ops
                                                    HdlOp: DOT
                                                        list: ops
                                                            HdlOp: DOT
                                                                list: ops
                                                                    HdlValueId: reg2hw
                                                                    HdlValueId: fdata
                                                            HdlValueId: start
                                                    HdlValueId: qe
                                    HdlOp: DOT
                                        list: ops
                                            HdlOp: DOT
                                                list: ops
                                                    HdlOp: DOT
                                                        list: ops
                                                            HdlValueId: reg2hw
                                                            HdlValueId: fdata
                                                    HdlValueId: stop
                                            HdlValueId: qe
                            HdlOp: DOT
                                list: ops
                                    HdlOp: DOT
                                        list: ops
                                            HdlOp: DOT
                                                list: ops
                                                    HdlValueId: reg2hw
                                                    HdlValueId: fdata
                                            HdlValueId: read
                                    HdlValueId: qe
                    HdlOp: DOT
                        list: ops
                            HdlOp: DOT
                                list: ops
                                    HdlOp: DOT
                                        list: ops
                                            HdlValueId: reg2hw
                                            HdlValueId: fdata
                                    HdlValueId: rcont
                            HdlValueId: qe
            HdlOp: DOT
                list: ops
                    HdlOp: DOT
                        list: ops
                            HdlOp: DOT
                                list: ops
                                    HdlValueId: reg2hw
                                    HdlValueId: fdata
                            HdlValueId: nakok
                    HdlValueId: qe

UPD HdlStmAssign@@ to 
    MOV HdlOp@@DOT to 
    HdlOp: DOT
        list: ops
            HdlOp: DOT
                list: ops
                    HdlOp: DOT
                        list: ops
                            HdlValueId: reg2hw
                            HdlValueId: fdata
                    HdlValueId: fbyte
            HdlValueId: q

UPD HdlStmAssign@@ to 
    MOV HdlOp@@DOT to 
    HdlOp: DOT
        list: ops
            HdlOp: DOT
                list: ops
                    HdlOp: DOT
                        list: ops
                            HdlValueId: reg2hw
                            HdlValueId: fdata
                    HdlValueId: start
            HdlValueId: q

UPD HdlStmAssign@@ to 
    MOV HdlOp@@DOT to 
    HdlOp: DOT
        list: ops
            HdlOp: DOT
                list: ops
                    HdlOp: DOT
                        list: ops
                            HdlValueId: reg2hw
                            HdlValueId: fdata
                    HdlValueId: stop
            HdlValueId: q

UPD HdlStmAssign@@ to 
    MOV HdlOp@@DOT to 
    HdlOp: DOT
        list: ops
            HdlOp: DOT
                list: ops
                    HdlOp: DOT
                        list: ops
                            HdlValueId: reg2hw
                            HdlValueId: fdata
                    HdlValueId: read
            HdlValueId: q

UPD HdlStmAssign@@ to 
    MOV HdlOp@@DOT to 
    HdlOp: DOT
        list: ops
            HdlOp: DOT
                list: ops
                    HdlOp: DOT
                        list: ops
                            HdlValueId: reg2hw
                            HdlValueId: fdata
                    HdlValueId: rcont
            HdlValueId: q

UPD HdlStmAssign@@ to 
    MOV HdlOp@@DOT to 
    HdlOp: DOT
        list: ops
            HdlOp: DOT
                list: ops
                    HdlOp: DOT
                        list: ops
                            HdlValueId: reg2hw
                            HdlValueId: fdata
                    HdlValueId: nakok
            HdlValueId: q


CommitId: 19be7e21350737e08cfe20e56bf4e1f06d37df45
[i2c, rtl] Loopback test and other changes
--- a/hw/ip/i2c/rtl/i2c_core.sv
+++ b/hw/ip/i2c/rtl/i2c_core.sv
@@ -326,13 +334,13 @@ module  i2c_core (
   assign event_tx_overflow = tx_fifo_wvalid & ~tx_fifo_wready;
   assign event_acq_overflow = acq_fifo_wvalid & ~acq_fifo_wready;
 
-  assign tx_fifo_wvalid = reg2hw.txdata.qe;
-  assign tx_fifo_wdata  = reg2hw.txdata.q;
+  assign tx_fifo_wvalid = line_loopback ? 1'b1 : reg2hw.txdata.qe;
+  assign tx_fifo_wdata  = line_loopback ? acq_fifo_rdata[7:0] : reg2hw.txdata.q;
 
   prim_fifo_sync #(
     .Width(8),
     .Pass(1'b1),
-    .Depth(32)
+    .Depth(64)
   ) u_i2c_txfifo (
     .clk_i,
     .rst_ni,

ParseResult:
UPD HdlStmAssign@@ to 
    MOV HdlOp@@DOT to 
    HdlOp: DOT
        list: ops
            HdlOp: DOT
                list: ops
                    HdlValueId: reg2hw
                    HdlValueId: txdata
            HdlValueId: qe

UPD HdlStmAssign@@ to 
    MOV HdlOp@@DOT to 
    HdlOp: DOT
        list: ops
            HdlOp: DOT
                list: ops
                    HdlValueId: reg2hw
                    HdlValueId: txdata
            HdlValueId: q


CommitId: 19be7e21350737e08cfe20e56bf4e1f06d37df45
[i2c, rtl] Loopback test and other changes
--- a/hw/ip/i2c/rtl/i2c_core.sv
+++ b/hw/ip/i2c/rtl/i2c_core.sv
@@ -352,7 +360,7 @@ module  i2c_core (
   prim_fifo_sync #(
     .Width(10),
     .Pass(1'b0),
-    .Depth(32)
+    .Depth(64)
   ) u_i2c_acqfifo (
     .clk_i,
     .rst_ni,

ParseResult:
UPD HdlStmAssign@@ to 
    INS HdlOp@@TERNARY to 
    UPD HdlOp@@TERNARY to TERNARY
        INS list@@ops to TERNARY
        INS HdlValueId@@line_loopback to ops
        INS HdlValueInt@@1 to ops

UPD HdlStmAssign@@ to 
    INS HdlOp@@TERNARY to 
    UPD HdlOp@@TERNARY to TERNARY
        INS list@@ops to TERNARY
        INS HdlValueId@@line_loopback to ops
        INS HdlOp@@INDEX to ops
        HdlOp: INDEX
            list: ops
                HdlValueId: acq_fifo_rdata
                HdlOp: DOWNTO
                    list: ops
                        HdlValueInt: 7
                        HdlValueInt: 0


CommitId: 9fe94508e27130df2f408a587b5e5fdf7ca3c81f
[usbuart] Fix driver conflict
--- a/hw/ip/usbuart/rtl/usbuart_core.sv
+++ b/hw/ip/usbuart/rtl/usbuart_core.sv
@@ -458,7 +458,7 @@ module usbuart_core (
     .usb_suspend_i          (                        )
   );
 
-  assign cio_usb_dp_o = cio_oe;
-  assign cio_usb_dn_o = cio_oe;
+  assign cio_usb_dp_en_o = cio_oe;
+  assign cio_usb_dn_en_o = cio_oe;
 
 endmodule
ParseResult:
INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlValueId: cio_oe
    HdlValueId: cio_usb_dp_en_o

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlValueId: cio_oe
    HdlValueId: cio_usb_dn_en_o

DEL HdlStmAssign@@ from objs
HdlStmAssign
    HdlValueId: cio_oe
    HdlValueId: cio_usb_dp_o

DEL HdlStmAssign@@ from objs
HdlStmAssign
    HdlValueId: cio_oe
    HdlValueId: cio_usb_dn_o


CommitId: a17530f0a51524486c59b0c8d5295d6ded247ec2
[usbdev] USB device update from ETH repo
--- a/hw/ip/usb_fs_nb_pe/rtl/usb_fs_nb_in_pe.sv
+++ b/hw/ip/usb_fs_nb_pe/rtl/usb_fs_nb_in_pe.sv
@@ -25,16 +25,19 @@ module usb_fs_nb_in_pe #(
   ////////////////////
   // endpoint interface
   ////////////////////
-  output logic [3:0]        in_ep_current_o, // Other signals addressed to this ep
-  output logic              in_ep_rollback_o, // Bad termination, rollback transaction
-  output logic              in_ep_acked_o, // good termination, transaction complete
-  output logic [PktW - 1:0] in_ep_get_addr_o, // Offset requested (0..pktlen)
-  output logic              in_ep_data_get_o, // Accept data (get_addr advances too)
-  output logic              in_ep_newpkt_o, // New IN packet starting (with in_ep_current_o update)
-  input [NumInEps-1:0]      in_ep_stall_i, // Endpoint in a stall state
-  input [NumInEps-1:0]      in_ep_has_data_i, // Endpoint has data to supply
-  input [7:0]               in_ep_data_i, // Data for current get_addr
-  input [NumInEps-1:0]      in_ep_data_done_i, // Set when out of data
+  output logic [3:0]            in_ep_current_o, // Other signals addressed to this ep
+  output logic                  in_ep_rollback_o, // Bad termination, rollback transaction
+  output logic                  in_ep_acked_o, // good termination, transaction complete
+  output logic [PktW - 1:0]     in_ep_get_addr_o, // Offset requested (0..pktlen)
+  output logic                  in_ep_data_get_o, // Accept data (get_addr advances too)
+  output logic                  in_ep_newpkt_o, // New IN packet starting (with in_ep_current_o update)
+  input [NumInEps-1:0]          in_ep_stall_i, // Endpoint in a stall state
+  input [NumInEps-1:0]          in_ep_has_data_i, // Endpoint has data to supply
+  input [7:0]                   in_ep_data_i, // Data for current get_addr
+  input [NumInEps-1:0]          in_ep_data_done_i, // Set when out of data
+  input  logic [NumInEps-1:0]   in_ep_iso_i, // Configure endpoint in isochronous mode
+
+  input  logic [NumInEps-1:0]   data_toggle_clear_i, // Clear the data toggles for an EP
 
   ////////////////////
   // rx path

ParseResult:
INS HdlIdDef@@in_ep_iso_i to ports
HdlIdDef: in_ep_iso_i
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlOp: SUB
                        list: ops
                            HdlValueId: NumInEps
                            HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: IN

INS HdlIdDef@@data_toggle_clear_i to ports
HdlIdDef: data_toggle_clear_i
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlOp: SUB
                        list: ops
                            HdlValueId: NumInEps
                            HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: IN


CommitId: a17530f0a51524486c59b0c8d5295d6ded247ec2
[usbdev] USB device update from ETH repo
--- a/hw/ip/usb_fs_nb_pe/rtl/usb_fs_nb_in_pe.sv
+++ b/hw/ip/usb_fs_nb_pe/rtl/usb_fs_nb_in_pe.sv
@@ -91,7 +94,7 @@ module usb_fs_nb_in_pe #(
   assign in_ep_acked_o = in_xfr_end;
 
   // data toggle state
-  logic [NumInEps - 1:0] data_toggle;
+  logic [NumInEps - 1:0] data_toggle_q, data_toggle_d;
 
   // endpoint data buffer
   logic                    token_received, setup_token_received, in_token_received, ack_received;

ParseResult:
INS HdlIdDef@@data_toggle_q to objs
HdlIdDef: data_toggle_q
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlOp: SUB
                        list: ops
                            HdlValueId: NumInEps
                            HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: INTERNAL

UPD HdlIdDef@@data_toggle to data_toggle_d


CommitId: a17530f0a51524486c59b0c8d5295d6ded247ec2
[usbdev] USB device update from ETH repo
--- a/hw/ip/usb_fs_nb_pe/rtl/usb_fs_nb_in_pe.sv
+++ b/hw/ip/usb_fs_nb_pe/rtl/usb_fs_nb_in_pe.sv
@@ -127,7 +130,7 @@ module usb_fs_nb_in_pe #(
     rx_pkt_valid_i &&
     rx_pid == UsbPidAck;
 
-  assign more_data_to_send = ~in_ep_data_done_i[in_ep_index];  // lint: in_ep_index range was checked
+  assign more_data_to_send = in_ep_has_data_i && ~in_ep_data_done_i[in_ep_index];  // lint: in_ep_index range was checked
 
   assign tx_data_avail_o = (in_xfr_state == StSendData) && more_data_to_send;
 

ParseResult:
UPD HdlStmAssign@@ to 
    MOV HdlOp@@NEG to 
    HdlOp: NEG
        list: ops
            HdlOp: INDEX
                list: ops
                    HdlValueId: in_ep_data_done_i
                    HdlValueId: in_ep_index


CommitId: a17530f0a51524486c59b0c8d5295d6ded247ec2
[usbdev] USB device update from ETH repo
--- a/hw/ip/usb_fs_nb_pe/rtl/usb_fs_nb_in_pe.sv
+++ b/hw/ip/usb_fs_nb_pe/rtl/usb_fs_nb_in_pe.sv
@@ -158,9 +161,16 @@ module usb_fs_nb_in_pe #(
         if (in_ep_stall_i[in_ep_index]) begin  // lint: in_ep_index range was checked
           in_xfr_state_next = StIdle;
           tx_pid_o = {UsbPidStall}; // STALL
+        end else if (in_ep_iso_i[in_ep_index]) begin
+          // ISO endpoint
+          // We always need to transmit. When no data is available, we send
+          // a zero-length packet
+          in_xfr_state_next = StSendData;
+          tx_pid_o = {data_toggle_q[in_ep_index], 1'b0, {UsbPidTypeData}}; // DATA0/1 lint: checked
+
         end else if (in_ep_has_data_i[in_ep_index]) begin  // lint: in_ep_index range was checked
           in_xfr_state_next = StSendData;
-          tx_pid_o = {data_toggle[in_ep_index], 1'b0, {UsbPidTypeData}}; // DATA0/1 lint: checked
+          tx_pid_o = {data_toggle_q[in_ep_index], 1'b0, {UsbPidTypeData}}; // DATA0/1 lint: checked
         end else begin
           in_xfr_state_next = StIdle;
           tx_pid_o = {UsbPidNak}; // NAK

ParseResult:
UPD HdlStmIf@@ to 
    INS tuple@@ to elifs
    INS HdlOp@@INDEX to 
    HdlOp: INDEX
        list: ops
            HdlValueId: in_ep_iso_i
            HdlValueId: in_ep_index
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: tx_pid_o
                HdlOp: CONCAT
                    list: ops
                        HdlOp: CONCAT
                            list: ops
                                HdlOp: INDEX
                                    list: ops
                                        HdlValueId: data_toggle_q
                                        HdlValueId: in_ep_index
                                HdlValueInt: 0
                        HdlValueId: UsbPidTypeData
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: in_xfr_state_next
                HdlValueId: StSendData

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: in_xfr_state_next
                HdlValueId: StSendData
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@CONCAT to CONCAT
                UPD HdlOp@@CONCAT to CONCAT
                    UPD HdlOp@@INDEX to INDEX
                        UPD HdlValueId@@data_toggle to data_toggle_q


CommitId: a17530f0a51524486c59b0c8d5295d6ded247ec2
[usbdev] USB device update from ETH repo
--- a/hw/ip/usb_fs_nb_pe/rtl/usb_fs_nb_in_pe.sv
+++ b/hw/ip/usb_fs_nb_pe/rtl/usb_fs_nb_in_pe.sv
@@ -170,7 +180,11 @@ module usb_fs_nb_in_pe #(
       StSendData: begin
         // Use &in_ep_get_addr so width can vary, looking for all ones
         if ((!more_data_to_send) || ((&in_ep_get_addr_o) && tx_data_get_i)) begin
-          in_xfr_state_next = StWaitAck;
+          if (in_ep_iso_i[in_ep_index]) begin
+            in_xfr_state_next = StIdle; // no ACK for ISO EPs
+          end else begin
+            in_xfr_state_next = StWaitAck;
+          end
         end else begin
           in_xfr_state_next = StSendData;
         end

ParseResult:
UPD HdlStmIf@@ to 
    INS tuple@@ to elifs
    INS HdlOp@@INDEX to 
    HdlOp: INDEX
        list: ops
            HdlValueId: in_ep_iso_i
            HdlValueId: in_ep_index
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: tx_pid_o
                HdlOp: CONCAT
                    list: ops
                        HdlOp: CONCAT
                            list: ops
                                HdlOp: INDEX
                                    list: ops
                                        HdlValueId: data_toggle_q
                                        HdlValueId: in_ep_index
                                HdlValueInt: 0
                        HdlValueId: UsbPidTypeData
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: in_xfr_state_next
                HdlValueId: StSendData

INS HdlStmIf@@ to body

UPD HdlStmIf@@ to 
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: in_xfr_state_next
                    HdlValueId: StWaitAck


CommitId: a17530f0a51524486c59b0c8d5295d6ded247ec2
[usbdev] USB device update from ETH repo
--- a/hw/ip/usb_fs_nb_pe/rtl/usb_fs_nb_in_pe.sv
+++ b/hw/ip/usb_fs_nb_pe/rtl/usb_fs_nb_in_pe.sv
@@ -218,10 +232,10 @@ module usb_fs_nb_in_pe #(
 
   always_ff @(posedge clk_48mhz_i or negedge rst_ni) begin
     if (!rst_ni) begin
-      in_ep_get_addr_o <= '0;
+      in_ep_get_addr_o <= {PktW{1'b0}};
     end else begin
       if (in_xfr_state == StIdle) begin
-        in_ep_get_addr_o <= '0;
+        in_ep_get_addr_o <= {PktW{1'b0}};
       end else if ((in_xfr_state == StSendData) && tx_data_get_i) begin
         in_ep_get_addr_o <= in_ep_get_addr_o + 1'b1;
       end

ParseResult:
UPD HdlStmAssign@@ to 
    MOV HdlValueInt@@0 to 
    HdlValueInt: 0

UPD HdlStmAssign@@ to 
    MOV HdlValueInt@@0 to 
    HdlValueInt: 0


CommitId: a17530f0a51524486c59b0c8d5295d6ded247ec2
[usbdev] USB device update from ETH repo
--- a/hw/ip/usb_fs_nb_pe/rtl/usb_fs_nb_in_pe.sv
+++ b/hw/ip/usb_fs_nb_pe/rtl/usb_fs_nb_in_pe.sv
@@ -242,18 +256,26 @@ module usb_fs_nb_in_pe #(
     end
   end
 
+  always_comb begin : proc_data_toggle_d
+    data_toggle_d = data_toggle_q;
+
+    if (setup_token_received) begin
+      // Ok because token_recieved only triggers if rx_endp_i is in range
+      data_toggle_d[rx_endp_i[0 +: InEpW]] = 1'b1;
+    end else if ((in_xfr_state == StWaitAck) && ack_received) begin
+      data_toggle_d[in_ep_index] = ~data_toggle_q[in_ep_index]; // lint: range was checked
+    end
+
+    data_toggle_d = data_toggle_d & ~data_toggle_clear_i;
+  end
+
   always_ff @(posedge clk_48mhz_i or negedge rst_ni) begin
     if (!rst_ni) begin
-      data_toggle <= '0; // Clear for all endpoints
+      data_toggle_q <= {NumInEps{1'b0}}; // Clear for all endpoints
     end else if (link_reset_i) begin
-      data_toggle <= '0; // Clear for all endpoints
+      data_toggle_q <= {NumInEps{1'b0}}; // Clear for all endpoints
     end else begin
-      if (setup_token_received) begin
-        // Ok because token_recieved only triggers if rx_endp_i is in range
-        data_toggle[rx_endp_i[0 +: InEpW]] <= 1'b1;
-      end else if ((in_xfr_state == StWaitAck) && ack_received) begin
-        data_toggle[in_ep_index] <= ~data_toggle[in_ep_index]; // lint: range was checked
-      end
+      data_toggle_q <= data_toggle_d;
     end
   end
 
ParseResult:
INS HdlStmProcess@@ to objs

UPD HdlStmIf@@ to 
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlStmIf
                HdlValueId: setup_token_received
                HdlStmBlock: SEQ
                    list: body
                        HdlStmAssign
                            HdlValueInt: 1
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: data_toggle
                                    HdlOp: INDEX
                                        list: ops
                                            HdlValueId: rx_endp_i
                                            HdlOp: PART_SELECT_POST
                                                list: ops
                                                    HdlValueInt: 0
                                                    HdlValueId: InEpW
                list: elifs
                    tuple
                        HdlOp: AND_LOG
                            list: ops
                                HdlOp: EQ
                                    list: ops
                                        HdlValueId: in_xfr_state
                                        HdlValueId: StWaitAck
                                HdlValueId: ack_received
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmAssign
                                    HdlOp: NEG
                                        list: ops
                                            HdlOp: INDEX
                                                list: ops
                                                    HdlValueId: data_toggle
                                                    HdlValueId: in_ep_index
                                    HdlOp: INDEX
                                        list: ops
                                            HdlValueId: data_toggle
                                            HdlValueId: in_ep_index
    MOV HdlOp@@NEG_LOG to 
    HdlOp: NEG_LOG
        list: ops
            HdlValueId: rst_ni
    DEL HdlStmBlock@@SEQ from 
    HdlStmBlock: SEQ
        list: body
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: data_toggle
    DEL list@@elifs from 
    list: elifs
        tuple
            HdlValueId: link_reset_i
            HdlStmBlock: SEQ
                list: body
                    HdlStmAssign
                        HdlValueInt: 0
                        HdlValueId: data_toggle

UPD HdlStmProcess@@ to 
    UPD HdlStmProcessTriggerConstrain@@FF to COMB
    MOV list@@sensitivity to 
    list: sensitivity
        HdlOp: RISING
            list: ops
                HdlValueId: clk_48mhz_i
        HdlOp: FALLING
            list: ops
                HdlValueId: rst_ni
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 

INS HdlStmIf@@ to body

UPD HdlStmAssign@@ to 
    INS HdlOp@@REPL_CONCAT to 
    UPD HdlOp@@REPL_CONCAT to REPL_CONCAT
        INS list@@ops to REPL_CONCAT
        INS HdlValueId@@PktW to ops

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD list@@body to ops
        MOV list@@body to SEQ
        list: body
            HdlStmAssign
                HdlValueInt: 1
                HdlOp: INDEX
                    list: ops
                        HdlValueId: data_toggle
                        HdlOp: INDEX
                            list: ops
                                HdlValueId: rx_endp_i
                                HdlOp: PART_SELECT_POST
                                    list: ops
                                        HdlValueInt: 0
                                        HdlValueId: InEpW

UPD HdlStmAssign@@ to 
    MOV HdlOp@@INDEX to 
    HdlOp: INDEX
        list: ops
            HdlValueId: data_toggle
            HdlOp: INDEX
                list: ops
                    HdlValueId: rx_endp_i
                    HdlOp: PART_SELECT_POST
                        list: ops
                            HdlValueInt: 0
                            HdlValueId: InEpW
    UPD HdlOp@@INDEX to INDEX
        UPD HdlValueId@@data_toggle to data_toggle_d
    DEL HdlValueInt@@1 from 

UPD HdlStmAssign@@ to 
    INS HdlOp@@REPL_CONCAT to 
    UPD HdlOp@@REPL_CONCAT to REPL_CONCAT
        INS list@@ops to REPL_CONCAT
        INS HdlValueId@@PktW to ops

UPD HdlStmAssign@@ to 
    UPD HdlOp@@NEG to NEG
        MOV HdlOp@@INDEX to ops
        HdlOp: INDEX
            list: ops
                HdlValueId: data_toggle
                HdlValueId: in_ep_index
        UPD HdlOp@@INDEX to INDEX
            UPD HdlValueId@@data_toggle to data_toggle_d
        DEL list@@ops from NEG
    MOV HdlOp@@INDEX to 
    HdlOp: INDEX
        list: ops
            HdlValueId: data_toggle
            HdlValueId: in_ep_index
    UPD HdlOp@@INDEX to INDEX
        UPD HdlValueId@@data_toggle to data_toggle_q
    DEL HdlOp@@NEG from 

DEL HdlStmAssign@@ from body

DEL HdlStmAssign@@ from body

DEL HdlStmIf@@ from body


CommitId: 3dfbfea94164ff8553a3051cb6cbdd399301fe23
[pwm, rtl] RTL update for issue #6044 pare down PWM CDC
--- a/hw/ip/pwm/rtl/pwm_core.sv
+++ b/hw/ip/pwm/rtl/pwm_core.sv
@@ -52,16 +91,16 @@ module pwm_core #(
   logic        unused_regen;
 
   // TODO: implement register locking
-  assign unused_regen = reg2hw_sync.regen.q;
+  assign unused_regen = reg2hw.regen.q;
 
-  assign cntr_en_sync = reg2hw_sync.cfg.cntr_en.q;
-  assign dc_resn_sync = reg2hw_sync.cfg.dc_resn.q;
-  assign clk_div_sync = reg2hw_sync.cfg.clk_div.q;
+  assign cntr_en = reg2hw.cfg.cntr_en.q;
+  assign dc_resn = reg2hw.cfg.dc_resn.q;
+  assign clk_div = reg2hw.cfg.clk_div.q;
 
   assign beat_ctr_d = (clr_phase_cntr) ? 27'h0 :
-                      (beat_ctr_q == clk_div_sync) ? 27'h0 : (beat_ctr_q + 27'h1);
-  assign beat_ctr_en = clr_phase_cntr | cntr_en_sync;
-  assign beat_end = (beat_ctr_q == clk_div_sync);
+                      (beat_ctr_q == clk_div) ? 27'h0 : (beat_ctr_q + 27'h1);
+  assign beat_ctr_en = clr_phase_cntr | cntr_en;
+  assign beat_end = (beat_ctr_q == clk_div);
 
   always_ff @(posedge clk_core_i or negedge rst_core_ni) begin
     if (!rst_core_ni) begin

ParseResult:
UPD HdlStmFor@@ to 
    INS HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlIdDef: ii
                HdlValueInt: 0
                HdlDirection: INTERNAL
    INS HdlOp@@LT to 
    HdlOp: LT
        list: ops
            HdlValueId: ii
            HdlValueId: NOutputs
    INS HdlOp@@INCR_POST to 
    HdlOp: INCR_POST
        list: ops
            HdlValueId: ii
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmAssign@@ to 
    UPD HdlValueId@@cntr_en_sync to cntr_en
    UPD HdlOp@@DOT to DOT
        UPD HdlOp@@DOT to DOT
            UPD HdlOp@@DOT to DOT
                UPD HdlValueId@@reg2hw_sync to reg2hw

UPD HdlStmAssign@@ to 
    UPD HdlValueId@@dc_resn_sync to dc_resn
    UPD HdlOp@@DOT to DOT
        UPD HdlOp@@DOT to DOT
            UPD HdlOp@@DOT to DOT
                UPD HdlValueId@@reg2hw_sync to reg2hw

UPD HdlStmAssign@@ to 
    UPD HdlValueId@@clk_div_sync to clk_div
    UPD HdlOp@@DOT to DOT
        UPD HdlOp@@DOT to DOT
            UPD HdlOp@@DOT to DOT
                UPD HdlValueId@@reg2hw_sync to reg2hw

UPD HdlStmAssign@@ to 
    UPD HdlOp@@OR to OR
        UPD HdlValueId@@cntr_en_sync to cntr_en

UPD HdlStmAssign@@ to 
    UPD HdlOp@@EQ to EQ
        UPD HdlValueId@@clk_div_sync to clk_div

UPD HdlStmAssign@@ to 
    INS HdlOp@@CONCAT to 
    INS HdlValueId@@chan_param_d to 
    UPD HdlOp@@CONCAT to CONCAT
        INS list@@ops to CONCAT
        INS HdlOp@@CONCAT to ops
        INS HdlOp@@DOT to ops
        HdlOp: DOT
            list: ops
                HdlOp: DOT
                    list: ops
                        HdlOp: INDEX
                            list: ops
                                HdlOp: DOT
                                    list: ops
                                        HdlValueId: reg2hw
                                        HdlValueId: blink_param
                                HdlValueId: ii
                        HdlValueId: y
                HdlValueId: q
        UPD HdlOp@@CONCAT to CONCAT
            INS list@@ops to CONCAT
            INS HdlOp@@CONCAT to ops
            INS HdlOp@@DOT to ops
            HdlOp: DOT
                list: ops
                    HdlOp: DOT
                        list: ops
                            HdlOp: INDEX
                                list: ops
                                    HdlOp: DOT
                                        list: ops
                                            HdlValueId: reg2hw
                                            HdlValueId: blink_param
                                    HdlValueId: ii
                            HdlValueId: x
                    HdlValueId: q
            UPD HdlOp@@CONCAT to CONCAT
                INS list@@ops to CONCAT
                INS HdlOp@@CONCAT to ops
                INS HdlOp@@DOT to ops
                HdlOp: DOT
                    list: ops
                        HdlOp: DOT
                            list: ops
                                HdlOp: INDEX
                                    list: ops
                                        HdlOp: DOT
                                            list: ops
                                                HdlValueId: reg2hw
                                                HdlValueId: duty_cycle
                                        HdlValueId: ii
                                HdlValueId: b
                        HdlValueId: q
                UPD HdlOp@@CONCAT to CONCAT
                    INS list@@ops to CONCAT
                    INS HdlOp@@CONCAT to ops
                    INS HdlOp@@DOT to ops
                    HdlOp: DOT
                        list: ops
                            HdlOp: DOT
                                list: ops
                                    HdlOp: INDEX
                                        list: ops
                                            HdlOp: DOT
                                                list: ops
                                                    HdlValueId: reg2hw
                                                    HdlValueId: duty_cycle
                                            HdlValueId: ii
                                    HdlValueId: a
                            HdlValueId: q
                    UPD HdlOp@@CONCAT to CONCAT
                        INS list@@ops to CONCAT
                        INS HdlOp@@CONCAT to ops
                        INS HdlOp@@DOT to ops
                        HdlOp: DOT
                            list: ops
                                HdlOp: DOT
                                    list: ops
                                        HdlOp: INDEX
                                            list: ops
                                                HdlOp: DOT
                                                    list: ops
                                                        HdlValueId: reg2hw
                                                        HdlValueId: pwm_param
                                                HdlValueId: ii
                                        HdlValueId: blink_en
                                HdlValueId: q
                        UPD HdlOp@@CONCAT to CONCAT
                            INS list@@ops to CONCAT
                            INS HdlOp@@CONCAT to ops
                            INS HdlOp@@DOT to ops
                            HdlOp: DOT
                                list: ops
                                    HdlOp: DOT
                                        list: ops
                                            HdlOp: INDEX
                                                list: ops
                                                    HdlOp: DOT
                                                        list: ops
                                                            HdlValueId: reg2hw
                                                            HdlValueId: pwm_param
                                                    HdlValueId: ii
                                            HdlValueId: htbt_en
                                    HdlValueId: q
                            UPD HdlOp@@CONCAT to CONCAT
                                INS list@@ops to CONCAT
                                INS HdlOp@@CONCAT to ops
                                INS HdlOp@@DOT to ops
                                UPD HdlOp@@CONCAT to CONCAT
                                    INS list@@ops to CONCAT
                                    INS HdlOp@@DOT to ops
                                    HdlOp: DOT
                                        list: ops
                                            HdlOp: INDEX
                                                list: ops
                                                    HdlOp: DOT
                                                        list: ops
                                                            HdlValueId: reg2hw
                                                            HdlValueId: pwm_en
                                                    HdlValueId: ii
                                            HdlValueId: q
                                    INS HdlOp@@DOT to ops
                                    UPD HdlOp@@DOT to DOT
                                        INS list@@ops to DOT
                                        INS HdlOp@@INDEX to ops
                                        INS HdlValueId@@q to ops
                                        UPD HdlOp@@INDEX to INDEX
                                            INS list@@ops to INDEX
                                            INS HdlValueId@@ii to ops
                                            UPD HdlOp@@DOT to DOT
                                                INS HdlValueId@@invert to ops
                                UPD HdlOp@@DOT to DOT
                                    INS list@@ops to DOT
                                    INS HdlOp@@DOT to ops
                                    INS HdlValueId@@q to ops
                                    UPD HdlOp@@DOT to DOT
                                        INS list@@ops to DOT
                                        INS HdlOp@@INDEX to ops
                                        INS HdlValueId@@phase_delay to ops
                                        UPD HdlOp@@INDEX to INDEX
                                            INS list@@ops to INDEX
                                            INS HdlValueId@@ii to ops
                                            UPD HdlOp@@DOT to DOT
                                                INS HdlValueId@@pwm_param to ops

UPD HdlIdDef@@chan_param_q to chan_param_q
    INS HdlDirection@@INTERNAL to chan_param_q
    UPD HdlOp@@PARAMETRIZATION to PARAMETRIZATION
        INS HdlOp@@DOWNTO to ops
        HdlOp: DOWNTO
            list: ops
                HdlValueInt: 83
                HdlValueInt: 0

UPD HdlStmAssign@@ to 
    UPD HdlOp@@DOT to DOT
        UPD HdlOp@@DOT to DOT
            UPD HdlValueId@@reg2hw_sync to reg2hw

UPD HdlStmAssign@@ to 
    UPD HdlOp@@TERNARY to TERNARY
        UPD HdlOp@@TERNARY to TERNARY
            UPD HdlOp@@EQ to EQ
                UPD HdlValueId@@clk_div_sync to clk_div


CommitId: 3dfbfea94164ff8553a3051cb6cbdd399301fe23
[pwm, rtl] RTL update for issue #6044 pare down PWM CDC
--- a/hw/ip/pwm/rtl/pwm_core.sv
+++ b/hw/ip/pwm/rtl/pwm_core.sv
@@ -73,8 +112,8 @@ module pwm_core #(
 
   // Only update phase_ctr at the end of each beat
   // Exception: allow reset to zero whenever not enabled
-  assign phase_ctr_en = beat_end & (clr_phase_cntr | cntr_en_sync);
-  assign phase_ctr_incr =  16'h1 << (15 - dc_resn_sync);
+  assign phase_ctr_en = beat_end & (clr_phase_cntr | cntr_en);
+  assign phase_ctr_incr =  16'h1 << (15 -dc_resn);
   assign {phase_ctr_overflow, phase_ctr_next} = phase_ctr_q + phase_ctr_incr;
   assign phase_ctr_d = clr_phase_cntr ? 16'h0 : phase_ctr_next;
   assign cycle_end = beat_end & phase_ctr_overflow;

ParseResult:
UPD HdlStmFor@@ to 
    INS HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlIdDef: ii
                HdlValueInt: 0
                HdlDirection: INTERNAL
    INS HdlOp@@LT to 
    HdlOp: LT
        list: ops
            HdlValueId: ii
            HdlValueId: NOutputs
    INS HdlOp@@INCR_POST to 
    HdlOp: INCR_POST
        list: ops
            HdlValueId: ii
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmAssign@@ to 
    INS HdlOp@@NE to 
    HdlOp: NE
        list: ops
            HdlValueId: chan_param_q
            HdlValueId: chan_param_d
    UPD HdlOp@@INDEX to INDEX
        INS HdlValueId@@ii to ops

UPD HdlStmAssign@@ to 
    UPD HdlOp@@AND to AND
        UPD HdlOp@@OR to OR
            UPD HdlValueId@@cntr_en_sync to cntr_en

UPD HdlStmAssign@@ to 
    UPD HdlOp@@SLL to SLL
        UPD HdlOp@@SUB to SUB
            UPD HdlValueId@@dc_resn_sync to dc_resn


CommitId: 3dfbfea94164ff8553a3051cb6cbdd399301fe23
[pwm, rtl] RTL update for issue #6044 pare down PWM CDC
--- a/hw/ip/pwm/rtl/pwm_core.sv
+++ b/hw/ip/pwm/rtl/pwm_core.sv
@@ -116,6 +155,6 @@ module pwm_core #(
 
   // unused register configuration
   logic unused_reg;
-  assign unused_reg = ^reg2hw.alert_test | ^reg2hw_sync.alert_test;
+  assign unused_reg = ^reg2hw.alert_test;
 
 endmodule : pwm_core
ParseResult:
UPD HdlStmAssign@@ to 
    UPD HdlOp@@OR to OR
        MOV HdlOp@@XOR_UNARY to ops
        HdlOp: XOR_UNARY
            list: ops
                HdlOp: DOT
                    list: ops
                        HdlValueId: reg2hw
                        HdlValueId: alert_test
        DEL HdlOp@@XOR_UNARY from ops
        HdlOp: XOR_UNARY
            list: ops
                HdlOp: DOT
                    list: ops
                        HdlValueId: reg2hw_sync
                        HdlValueId: alert_test
        DEL list@@ops from OR
    DEL HdlOp@@OR from 


CommitId: 4f735bc6e72691152b3a87dd7d29bb394be5c785
Update lowrisc_ibex to lowRISC/ibex@dd39ec0
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_register_file_latch.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_register_file_latch.sv
@@ -12,14 +12,16 @@
  * register file when targeting ASIC synthesis or event-based simulators.
  */
 module ibex_register_file #(
-    parameter bit RV32E              = 0,
-    parameter int unsigned DataWidth = 32
+    parameter bit          RV32E             = 0,
+    parameter int unsigned DataWidth         = 32,
+    parameter bit          DummyInstructions = 0
 ) (
     // Clock and Reset
     input  logic                 clk_i,
     input  logic                 rst_ni,
 
     input  logic                 test_en_i,
+    input  logic                 dummy_instr_id_i,
 
     //Read port R1
     input  logic [4:0]           raddr_a_i,

ParseResult:
INS HdlIdDef@@DummyInstructions to params
HdlIdDef: DummyInstructions
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: bit
    HdlValueInt: 0
    HdlDirection: INTERNAL

INS HdlIdDef@@dummy_instr_id_i to ports
HdlIdDef: dummy_instr_id_i
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: IN


CommitId: 4f735bc6e72691152b3a87dd7d29bb394be5c785
Update lowrisc_ibex to lowRISC/ibex@dd39ec0
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_register_file_latch.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_register_file_latch.sv
@@ -87,7 +89,7 @@ module ibex_register_file #(
   // Write address decoding
   always_comb begin : wad
     for (int i = 1; i < NUM_WORDS; i++) begin : wad_word_iter
-      if (we_a_i && (waddr_a_int == i)) begin
+      if (we_a_i && (waddr_a_int == 5'(i))) begin
         waddr_onehot_a[i] = 1'b1;
       end else begin
         waddr_onehot_a[i] = 1'b0;

ParseResult:
UPD HdlStmIf@@ to 
    UPD HdlOp@@AND_LOG to AND_LOG
        UPD HdlOp@@EQ to EQ
            INS HdlOp@@CALL to ops
            UPD HdlOp@@CALL to CALL
                INS list@@ops to CALL
                INS HdlValueInt@@5 to ops

UPD HdlStmIf@@ to 
    UPD HdlOp@@AND_LOG to AND_LOG
        UPD HdlOp@@EQ to EQ
            MOV HdlValueId@@i to ops
            HdlValueId: i


CommitId: 4f735bc6e72691152b3a87dd7d29bb394be5c785
Update lowrisc_ibex to lowRISC/ibex@dd39ec0
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_register_file_latch.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_register_file_latch.sv
@@ -109,7 +111,6 @@ module ibex_register_file #(
   // Generate the sequential process for the NUM_WORDS words of the memory.
   // The process is synchronized with the clocks mem_clocks[k], k = 1, ..., NUM_WORDS-1.
   always_latch begin : latch_wdata
-    mem[0] = '0;
     for (int k = 1; k < NUM_WORDS; k++) begin : latch_wdata_word_iter
       if (mem_clocks[k]) begin
         mem[k] = wdata_a_q;

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            MOV HdlOp@@INDEX to ops
            HdlOp: INDEX
                list: ops
                    HdlValueId: mem
                    HdlValueInt: 0
            DEL HdlValueInt@@0 from ops
            DEL list@@ops from ASSIGN
        DEL HdlOp@@ASSIGN from body


CommitId: 1a1b94d01fd7022438e2bd651e48ad2d99e3abca
Update lowrisc_ibex to lowRISC/ibex@6b9165f
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_dummy_instr.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_dummy_instr.sv
@@ -54,10 +54,21 @@ module ibex_dummy_instr (
   logic [6:0]               dummy_set;
   logic [2:0]               dummy_opcode;
   logic [31:0]              dummy_instr;
+  logic [31:0]              dummy_instr_seed_q, dummy_instr_seed_d;
 
   // Shift the LFSR every time we insert an instruction
   assign lfsr_en = insert_dummy_instr & id_in_ready_i;
 
+  assign dummy_instr_seed_d = dummy_instr_seed_q ^ dummy_instr_seed_i;
+
+  always_ff @(posedge clk_i or negedge rst_ni) begin
+    if (!rst_ni) begin
+      dummy_instr_seed_q <= '0;
+    end else if (dummy_instr_seed_en_i) begin
+      dummy_instr_seed_q <= dummy_instr_seed_d;
+    end
+  end
+
   prim_lfsr #(
       .LfsrDw      ( 32         ),
       .StateOutDw  ( LFSR_OUT_W )

ParseResult:
INS HdlIdDef@@dummy_instr_seed_q to objs
HdlIdDef: dummy_instr_seed_q
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 31
                    HdlValueInt: 0
    HdlDirection: INTERNAL

INS HdlIdDef@@dummy_instr_seed_d to objs
HdlIdDef: dummy_instr_seed_d
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 31
                    HdlValueInt: 0
    HdlDirection: INTERNAL

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: XOR
        list: ops
            HdlValueId: dummy_instr_seed_q
            HdlValueId: dummy_instr_seed_i
    HdlValueId: dummy_instr_seed_d

INS HdlStmProcess@@ to objs
HdlStmProcess
    list: sensitivity
        HdlOp: RISING
            list: ops
                HdlValueId: clk_i
        HdlOp: FALLING
            list: ops
                HdlValueId: rst_ni
    HdlStmBlock: SEQ
        list: body
            HdlStmIf
                HdlOp: NEG_LOG
                    list: ops
                        HdlValueId: rst_ni
                HdlStmBlock: SEQ
                    list: body
                        HdlStmAssign
                            HdlValueInt: 0
                            HdlValueId: dummy_instr_seed_q
                list: elifs
                    tuple
                        HdlValueId: dummy_instr_seed_en_i
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmAssign
                                    HdlValueId: dummy_instr_seed_d
                                    HdlValueId: dummy_instr_seed_q
    HdlStmProcessTriggerConstrain: FF


CommitId: 33e387ff92df07f8a334ab97a02becf08505a130
[csrng/rtl] Split cmd_sts into two registers
--- a/hw/ip/csrng/rtl/csrng_state_db.sv
+++ b/hw/ip/csrng/rtl/csrng_state_db.sv
@@ -8,12 +8,12 @@
 //    working state for a given drbg instance.
 
 module csrng_state_db import csrng_pkg::*; #(
-  parameter int unsigned NApps = 4,
-  parameter int unsigned StateId = 4,
-  parameter int unsigned BlkLen = 128,
-  parameter int unsigned KeyLen = 256,
-  parameter int unsigned CtrLen  = 32,
-  parameter int unsigned Cmd     = 3
+  parameter int NApps = 4,
+  parameter int StateId = 4,
+  parameter int BlkLen = 128,
+  parameter int KeyLen = 256,
+  parameter int CtrLen  = 32,
+  parameter int Cmd     = 3
 ) (
   input logic                clk_i,
   input logic                rst_ni,

ParseResult:
UPD HdlIdDef@@NApps to NApps
    UPD HdlOp@@PARAMETRIZATION to PARAMETRIZATION
        MOV HdlValueId@@int to ops
        HdlValueId: int
        DEL HdlOp@@MAP_ASSOCIATION from ops
        HdlOp: MAP_ASSOCIATION
            list: ops
                HdlValueId: signed
        DEL list@@ops from PARAMETRIZATION
    DEL HdlOp@@PARAMETRIZATION from NApps

UPD HdlIdDef@@StateId to StateId
    UPD HdlOp@@PARAMETRIZATION to PARAMETRIZATION
        MOV HdlValueId@@int to ops
        HdlValueId: int
        DEL HdlOp@@MAP_ASSOCIATION from ops
        HdlOp: MAP_ASSOCIATION
            list: ops
                HdlValueId: signed
        DEL list@@ops from PARAMETRIZATION
    DEL HdlOp@@PARAMETRIZATION from StateId

UPD HdlIdDef@@BlkLen to BlkLen
    UPD HdlOp@@PARAMETRIZATION to PARAMETRIZATION
        MOV HdlValueId@@int to ops
        HdlValueId: int
        DEL HdlOp@@MAP_ASSOCIATION from ops
        HdlOp: MAP_ASSOCIATION
            list: ops
                HdlValueId: signed
        DEL list@@ops from PARAMETRIZATION
    DEL HdlOp@@PARAMETRIZATION from BlkLen

UPD HdlIdDef@@KeyLen to KeyLen
    UPD HdlOp@@PARAMETRIZATION to PARAMETRIZATION
        MOV HdlValueId@@int to ops
        HdlValueId: int
        DEL HdlOp@@MAP_ASSOCIATION from ops
        HdlOp: MAP_ASSOCIATION
            list: ops
                HdlValueId: signed
        DEL list@@ops from PARAMETRIZATION
    DEL HdlOp@@PARAMETRIZATION from KeyLen

UPD HdlIdDef@@CtrLen to CtrLen
    UPD HdlOp@@PARAMETRIZATION to PARAMETRIZATION
        MOV HdlValueId@@int to ops
        HdlValueId: int
        DEL HdlOp@@MAP_ASSOCIATION from ops
        HdlOp: MAP_ASSOCIATION
            list: ops
                HdlValueId: signed
        DEL list@@ops from PARAMETRIZATION
    DEL HdlOp@@PARAMETRIZATION from CtrLen

UPD HdlIdDef@@Cmd to Cmd
    UPD HdlOp@@PARAMETRIZATION to PARAMETRIZATION
        MOV HdlValueId@@int to ops
        HdlValueId: int
        DEL HdlOp@@MAP_ASSOCIATION from ops
        HdlOp: MAP_ASSOCIATION
            list: ops
                HdlValueId: signed
        DEL list@@ops from PARAMETRIZATION
    DEL HdlOp@@PARAMETRIZATION from Cmd


CommitId: 33e387ff92df07f8a334ab97a02becf08505a130
[csrng/rtl] Split cmd_sts into two registers
--- a/hw/ip/csrng/rtl/csrng_state_db.sv
+++ b/hw/ip/csrng/rtl/csrng_state_db.sv
@@ -43,7 +43,7 @@ module csrng_state_db import csrng_pkg::*; #(
   output logic [StateId-1:0] state_db_sts_id_o
 );
 
-  localparam int unsigned InternalStateWidth = 2+KeyLen+BlkLen+CtrLen;
+  localparam int InternalStateWidth = 2+KeyLen+BlkLen+CtrLen;
 
   logic [StateId-1:0]              state_db_id;
   logic [KeyLen-1:0]               state_db_key;
ParseResult:
UPD HdlIdDef@@InternalStateWidth to InternalStateWidth
    UPD HdlOp@@PARAMETRIZATION to PARAMETRIZATION
        MOV HdlValueId@@int to ops
        HdlValueId: int
        DEL HdlOp@@MAP_ASSOCIATION from ops
        HdlOp: MAP_ASSOCIATION
            list: ops
                HdlValueId: signed
        DEL list@@ops from PARAMETRIZATION
    DEL HdlOp@@PARAMETRIZATION from InternalStateWidth


CommitId: 55fd78e67b61c8ec2a4e9a23277c530eef242eb9
Update lowrisc_ibex to lowRISC/ibex@f025236
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_fetch_fifo.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_fetch_fifo.sv
@@ -72,22 +98,19 @@ module ibex_fetch_fifo (
   assign err_unaligned   = valid_q[1] ? ((err_q[1] & ~unaligned_is_compressed) | err_q[0]) :
                                         ((valid_q[0] & err_q[0]) |
                                          (in_err_i & (~valid_q[0] | ~unaligned_is_compressed)));
+
   // An uncompressed unaligned instruction is only valid if both parts are available
   assign valid_unaligned = valid_q[1] ? 1'b1 :
                                         (valid_q[0] & in_valid_i);
 
   assign unaligned_is_compressed    = rdata[17:16] != 2'b11;
   assign aligned_is_compressed      = rdata[ 1: 0] != 2'b11;
-  assign unaligned_is_compressed_st = rdata_q[0][17:16] != 2'b11;
 
   ////////////////////////////////////////
   // Instruction aligner (if unaligned) //
   ////////////////////////////////////////
 
   always_comb begin
-    // serve the aligned case even though the output address is unaligned when
-    // the next instruction will be from a hardware loop target
-    // in this case the current instruction is already prealigned in element 0
     if (out_addr_o[1]) begin
       // unaligned case
       out_rdata_o = rdata_unaligned;

ParseResult:
DEL HdlStmAssign@@ from objs
HdlStmAssign
    HdlOp: NE
        list: ops
            HdlOp: INDEX
                list: ops
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: rdata_q
                            HdlValueInt: 0
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 17
                            HdlValueInt: 16
            HdlValueInt: 11
    HdlValueId: unaligned_is_compressed_st


CommitId: 55fd78e67b61c8ec2a4e9a23277c530eef242eb9
Update lowrisc_ibex to lowRISC/ibex@f025236
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_fetch_fifo.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_fetch_fifo.sv
@@ -106,29 +129,18 @@ module ibex_fetch_fifo (
     end
   end
 
-  assign out_addr_o = valid_q[0] ? addr_q[0] : in_addr_i;
-
-  // this valid signal must not depend on signals from outside!
-  always_comb begin
-    out_valid_stored_o = 1'b1;
-
-    if (out_addr_o[1]) begin
-      if (unaligned_is_compressed_st) begin
-        out_valid_stored_o = 1'b1;
-      end else begin
-        out_valid_stored_o = valid_q[1];
-      end
-    end else begin
-      out_valid_stored_o = valid_q[0];
-    end
-  end
+  assign out_addr_o[31:2] = valid_q[0] ? addr_q[0]          : in_addr_i[31:2];
+  assign out_addr_o[1]    = valid_q[0] ? entry0_unaligned_q : in_addr_i[1];
+  assign out_addr_o[0]    = 1'b0;
 
+  // The LSB of the address is unused, since all addresses are halfword aligned
+  assign unused_addr_in = in_addr_i[0];
 
   ////////////////
   // input port //
   ////////////////
 
-  // we accept data as long as our fifo is not full
+  // we accept data as long as our FIFO is not full
   // we don't care about clear here as the data will be received one cycle
   // later anyway
   assign in_ready_o = ~valid_q[DEPTH-2];

ParseResult:
INS HdlStmAssign@@ to objs

INS HdlStmAssign@@ to objs

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: INDEX
        list: ops
            HdlValueId: in_addr_i
            HdlValueInt: 0
    HdlValueId: unused_addr_in

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to TERNARY
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: out_valid_stored_o
                HdlOp: INDEX
                    list: ops
                        HdlValueId: valid_q
                        HdlValueInt: 0
        UPD HdlOp@@ASSIGN to ASSIGN
            DEL HdlValueId@@out_valid_stored_o from ops
        DEL list@@body from SEQ
    MOV HdlOp@@INDEX to 
    HdlOp: INDEX
        list: ops
            HdlValueId: out_addr_o
            HdlValueInt: 1
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL list@@elifs from 
    DEL HdlStmBlock@@SEQ from 

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            MOV HdlOp@@INDEX to ops
            HdlOp: INDEX
                list: ops
                    HdlValueId: valid_q
                    HdlValueInt: 1
            UPD HdlOp@@INDEX to INDEX
                UPD HdlValueId@@valid_q to out_addr_o
                UPD HdlValueInt@@1 to 0
            DEL HdlValueId@@out_valid_stored_o from ops
            DEL list@@ops from ASSIGN
        DEL HdlOp@@ASSIGN from body
        DEL list@@body from SEQ
    DEL HdlValueId@@unaligned_is_compressed_st from 
    DEL HdlStmBlock@@SEQ from 
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: out_valid_stored_o
                    HdlValueInt: 1
    DEL list@@elifs from 
    DEL HdlStmBlock@@SEQ from 

UPD HdlStmAssign@@ to 
    MOV HdlValueId@@out_addr_o to 
    HdlValueId: out_addr_o
    UPD HdlOp@@TERNARY to TERNARY
        MOV HdlValueId@@in_addr_i to ops
        HdlValueId: in_addr_i

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: out_valid_stored_o
                HdlValueInt: 1
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL HdlStmProcessTriggerConstrain@@COMB from 

DEL HdlStmIf@@ from body

DEL HdlStmIf@@ from body

DEL HdlStmProcess@@ from objs


CommitId: 55fd78e67b61c8ec2a4e9a23277c530eef242eb9
Update lowrisc_ibex to lowRISC/ibex@f025236
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_fetch_fifo.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_fetch_fifo.sv
@@ -218,6 +217,7 @@ module ibex_fetch_fifo (
   ////////////////
 `ifndef VERILATOR
   assert property (
-    @(posedge clk_i) (in_valid_i) |-> ((valid_q[DEPTH-1] == 1'b0) || (clear_i == 1'b1)) );
+    @(posedge clk_i) disable iff (!rst_ni)
+    (in_valid_i) |-> ((valid_q[DEPTH-1] == 1'b0) || (clear_i == 1'b1)) );
 `endif
 endmodule
ParseResult:
UPD HdlStmFor@@ to 
    INS HdlOp@@INCR_POST to 
    HdlOp: INCR_POST
        list: ops
            HdlValueId: i
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlOp@@LT to LT
        INS HdlOp@@SUB to ops
        UPD HdlOp@@SUB to SUB
            INS list@@ops to SUB
            INS HdlValueInt@@1 to ops

UPD HdlStmAssign@@ to 
    INS HdlOp@@OR to 
    INS HdlOp@@INDEX to 
    HdlOp: INDEX
        list: ops
            HdlValueId: entry_en
            HdlValueId: i
    UPD HdlOp@@OR to OR
        INS list@@ops to OR
        INS HdlOp@@AND to ops
        INS HdlOp@@AND to ops
        UPD HdlOp@@AND to AND
            INS list@@ops to AND
            INS HdlOp@@INDEX to ops
            INS HdlValueId@@pop_fifo to ops
            UPD HdlOp@@INDEX to INDEX
                INS list@@ops to INDEX
                INS HdlValueId@@valid_pushed to ops
                INS HdlOp@@ADD to ops
                UPD HdlOp@@ADD to ADD
                    INS HdlValueId@@i to ops
                    INS HdlValueInt@@1 to ops
        UPD HdlOp@@AND to AND
            INS list@@ops to AND
            INS HdlOp@@AND to ops
            INS HdlOp@@NEG to ops
            HdlOp: NEG
                list: ops
                    HdlValueId: pop_fifo
            UPD HdlOp@@AND to AND
                INS list@@ops to AND
                INS HdlValueId@@in_valid_i to ops
                UPD HdlOp@@INDEX to INDEX
                    INS HdlValueId@@i to ops


CommitId: 8a9e1ff4d5a778a75a21a8f0adef0ecd6644b9f2
[csrng] Fix width of hex constant
--- a/hw/ip/csrng/rtl/csrng_cmd_stage.sv
+++ b/hw/ip/csrng/rtl/csrng_cmd_stage.sv
@@ -261,7 +261,7 @@ module csrng_cmd_stage import csrng_pkg::*; #(
           cmd_gen_1st_req = 1'b1;
           cmd_arb_sop_o = 1'b1;
           cmd_fifo_pop = 1'b1;
-          if (sfifo_cmd_rdata[30:12] == 20'h00001) begin
+          if (sfifo_cmd_rdata[30:12] == GenBitsCntrWidth'(1)) begin
             cmd_gen_cnt_last = 1'b1;
           end
           if (cmd_len == '0) begin
ParseResult:
UPD HdlStmIf@@ to 
    UPD HdlOp@@EQ to EQ
        INS HdlOp@@CALL to ops
        UPD HdlOp@@CALL to CALL
            INS list@@ops to CALL
            INS HdlValueId@@GenBitsCntrWidth to ops

UPD HdlStmIf@@ to 
    UPD HdlOp@@EQ to EQ
        UPD HdlValueInt@@00001 to 1
        MOV HdlValueInt@@00001 to ops
        HdlValueInt: 00001


CommitId: f083eb5acb12f551bb5771b41715cd5bb4084724
[prim_ram*_adv] Qualify error output signals with rvalid
--- a/hw/ip/prim/rtl/prim_ram_2p_async_adv.sv
+++ b/hw/ip/prim/rtl/prim_ram_2p_async_adv.sv
@@ -86,7 +86,7 @@ module prim_ram_2p_async_adv #(
   logic [Aw-1:0]           a_addr_q,   a_addr_d ;
   logic [TotalWidth-1:0]   a_wdata_q,  a_wdata_d ;
   logic [TotalWidth-1:0]   a_wmask_q,  a_wmask_d ;
-  logic                    a_rvalid_q, a_rvalid_d, a_rvalid_sram ;
+  logic                    a_rvalid_q, a_rvalid_d, a_rvalid_sram_q ;
   logic [Width-1:0]        a_rdata_q,  a_rdata_d ;
   logic [TotalWidth-1:0]   a_rdata_sram ;
   logic [1:0]              a_rerror_q, a_rerror_d ;

ParseResult:
UPD HdlIdDef@@a_rvalid_sram to a_rvalid_sram_q

UPD HdlStmAssign@@ to 
    INS HdlOp@@AND to 
    UPD HdlOp@@AND to AND
        INS list@@ops to AND
        INS HdlOp@@REPL_CONCAT to ops
        HdlOp: REPL_CONCAT
            list: ops
                HdlValueInt: 2
                HdlValueId: a_rvalid_d

UPD HdlStmAssign@@ to 
    INS HdlOp@@AND to 
    UPD HdlOp@@AND to AND
        INS list@@ops to AND
        INS HdlOp@@REPL_CONCAT to ops
        HdlOp: REPL_CONCAT
            list: ops
                HdlValueInt: 2
                HdlValueId: b_rvalid_d

UPD HdlStmAssign@@ to 
    MOV HdlValueId@@a_rerror_d to 
    HdlValueId: a_rerror_d

UPD HdlStmAssign@@ to 
    MOV HdlValueId@@b_rerror_d to 
    HdlValueId: b_rerror_d


CommitId: f083eb5acb12f551bb5771b41715cd5bb4084724
[prim_ram*_adv] Qualify error output signals with rvalid
--- a/hw/ip/prim/rtl/prim_ram_2p_async_adv.sv
+++ b/hw/ip/prim/rtl/prim_ram_2p_async_adv.sv
@@ -304,17 +302,20 @@ module prim_ram_2p_async_adv #(
       end else begin
         b_rvalid_q <= b_rvalid_d;
         b_rdata_q  <= b_rdata_d;
-        b_rerror_q <= b_rerror_d;
+        // tie to zero if the read data is not valid
+        b_rerror_q <= b_rerror_d & {2{b_rvalid_d}};
       end
     end
   end else begin : gen_dirconnect_output
     assign a_rvalid_q = a_rvalid_d;
     assign a_rdata_q  = a_rdata_d;
-    assign a_rerror_q = a_rerror_d;
+    // tie to zero if the read data is not valid
+    assign a_rerror_q = a_rerror_d & {2{a_rvalid_d}};
 
     assign b_rvalid_q = b_rvalid_d;
     assign b_rdata_q  = b_rdata_d;
-    assign b_rerror_q = b_rerror_d;
+    // tie to zero if the read data is not valid
+    assign b_rerror_q = b_rerror_d & {2{b_rvalid_d}};
   end
 
 endmodule : prim_ram_2p_async_adv
ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@AND_ASSIGN from body
        HdlOp: AND_ASSIGN
            list: ops
                HdlValueId: a_rerror_d
                HdlOp: REPL_CONCAT
                    list: ops
                        HdlValueInt: 2
                        HdlValueId: a_rvalid_sram
        DEL HdlOp@@AND_ASSIGN from body
        HdlOp: AND_ASSIGN
            list: ops
                HdlValueId: b_rerror_d
                HdlOp: REPL_CONCAT
                    list: ops
                        HdlValueInt: 2
                        HdlValueId: b_rvalid_sram


CommitId: a17530f0a51524486c59b0c8d5295d6ded247ec2
[usbdev] USB device update from ETH repo
--- a/hw/ip/usb_fs_nb_pe/rtl/usb_fs_tx.sv
+++ b/hw/ip/usb_fs_nb_pe/rtl/usb_fs_tx.sv
@@ -11,13 +11,16 @@ module usb_fs_tx (
   input  logic rst_ni,  // asyc reset
   input  logic link_reset_i, // USB reset, sync to 48 MHz, active high
 
+  // Oscillator test mode (constantly output JK)
+  input  logic tx_osc_test_mode_i,
+
   // bit strobe from rx to align with senders clock
   input  logic bit_strobe_i,
 
   // output enable to take ownership of bus and data out
-  output logic oe_o,
-  output logic dp_o,
-  output logic dn_o,
+  output logic usb_oe_o,
+  output logic usb_d_o,
+  output logic usb_se0_o,
 
   // pulse to initiate new packet transmission
   input  logic pkt_start_i,

ParseResult:
MOV HdlIdDef@@bit_strobe_i to ports
HdlIdDef: bit_strobe_i
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: IN

UPD HdlIdDef@@oe_o to tx_osc_test_mode_i

UPD HdlIdDef@@dp_o to usb_oe_o

UPD HdlIdDef@@dn_o to usb_d_o

INS HdlIdDef@@usb_se0_o to ports
HdlIdDef: usb_se0_o
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: OUT

UPD HdlIdDef@@oe_o to oe_o
    UPD HdlDirection@@OUT to IN


CommitId: a17530f0a51524486c59b0c8d5295d6ded247ec2
[usbdev] USB device update from ETH repo
--- a/hw/ip/usb_fs_nb_pe/rtl/usb_fs_tx.sv
+++ b/hw/ip/usb_fs_nb_pe/rtl/usb_fs_tx.sv
@@ -33,7 +36,8 @@ module usb_fs_tx (
 );
 
 
-  typedef enum {IDLE, SYNC, PID, DATA_OR_CRC16_0, CRC16_1, EOP} state_t;
+  typedef enum {IDLE, SYNC, PID, DATA_OR_CRC16_0, CRC16_1, EOP, OSC_TEST} state_e;
+  typedef enum {Idle, WaitByte, Transmit} out_state_e;
 
     
   // -------------------------------------------------

ParseResult:
INS HdlIdDef@@state_e to objs
HdlIdDef: state_e
    HdlExprNotImplemented: value
    HdlDirection: INTERNAL

INS HdlIdDef@@out_state_e to objs
HdlIdDef: out_state_e
    HdlExprNotImplemented: value
    HdlDirection: INTERNAL

DEL HdlIdDef@@state_t from objs
HdlIdDef: state_t
    HdlExprNotImplemented: value
    HdlDirection: INTERNAL


CommitId: a17530f0a51524486c59b0c8d5295d6ded247ec2
[usbdev] USB device update from ETH repo
--- a/hw/ip/usb_fs_nb_pe/rtl/usb_fs_tx.sv
+++ b/hw/ip/usb_fs_nb_pe/rtl/usb_fs_tx.sv
@@ -48,7 +52,8 @@ module usb_fs_tx (
 
   logic [5:0] bit_history;
 
-  state_t state_d, state_q;
+  state_e      state_d, state_q;
+  out_state_e  out_state_d, out_state_q;
 
 
   logic [7:0] data_shift_reg_q, data_shift_reg_d;

ParseResult:
INS HdlIdDef@@out_state_d to objs
HdlIdDef: out_state_d
    HdlDirection: INTERNAL

INS HdlIdDef@@out_state_q to objs
HdlIdDef: out_state_q
    HdlDirection: INTERNAL


CommitId: a17530f0a51524486c59b0c8d5295d6ded247ec2
[usbdev] USB device update from ETH repo
--- a/hw/ip/usb_fs_nb_pe/rtl/usb_fs_tx.sv
+++ b/hw/ip/usb_fs_nb_pe/rtl/usb_fs_tx.sv
@@ -63,14 +68,17 @@ module usb_fs_tx (
   logic [15:0] crc16_d, crc16_q;
 
   logic oe_q, oe_d;
-  logic dp_q, dp_d;
-  logic dn_q, dn_d;
+  logic usb_d_q, usb_d_d;
+  logic usb_se0_q, usb_se0_d;
   logic [2:0] dp_eop_q, dp_eop_d;
 
+  logic test_mode_start;
   logic serial_tx_data;
   logic serial_tx_oe;
   logic serial_tx_se0;
   logic crc16_invert;
+  logic pkt_end;
+  logic out_nrzi_en;
 
   // save packet parameters at pkt_start_i
   always_ff @(posedge clk_i or negedge rst_ni) begin : proc_pid

ParseResult:
MOV HdlIdDef@@dn_d to objs
HdlIdDef: dn_d
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

INS HdlIdDef@@usb_d_q to objs
HdlIdDef: usb_d_q
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

UPD HdlIdDef@@dp_q to usb_d_d

UPD HdlIdDef@@dp_d to usb_se0_q

UPD HdlIdDef@@dn_q to usb_se0_d

UPD HdlIdDef@@dn_d to test_mode_start

INS HdlIdDef@@pkt_end to objs
HdlIdDef: pkt_end
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

INS HdlIdDef@@out_nrzi_en to objs
HdlIdDef: out_nrzi_en
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL


CommitId: a17530f0a51524486c59b0c8d5295d6ded247ec2
[usbdev] USB device update from ETH repo
--- a/hw/ip/usb_fs_nb_pe/rtl/usb_fs_tx.sv
+++ b/hw/ip/usb_fs_nb_pe/rtl/usb_fs_tx.sv
@@ -118,7 +126,8 @@ module usb_fs_tx (
     end
   end
 
-  assign pkt_end_o = bit_strobe_i && se0_shift_reg_q[1:0] == 2'b01;
+  assign pkt_end   = bit_strobe_i && se0_shift_reg_q[1:0] == 2'b01;
+  assign pkt_end_o = pkt_end;
 
 
   // -------------------------------------------------

ParseResult:
INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlValueId: pkt_end
    HdlValueId: pkt_end_o

UPD HdlStmAssign@@ to 
    UPD HdlValueId@@pkt_end_o to pkt_end


CommitId: a17530f0a51524486c59b0c8d5295d6ded247ec2
[usbdev] USB device update from ETH repo
--- a/hw/ip/usb_fs_nb_pe/rtl/usb_fs_tx.sv
+++ b/hw/ip/usb_fs_nb_pe/rtl/usb_fs_tx.sv
@@ -134,11 +143,15 @@ module usb_fs_tx (
     tx_data_get_d    = tx_data_get_q;
     bit_history_d    = bit_history_q;
     bit_count_d      = bit_count_q;
+    test_mode_start  = 0;
 
 
     case (state_q)
       IDLE : begin
-        if (pkt_start_i) begin
+        if (tx_osc_test_mode_i) begin
+          state_d         = OSC_TEST;
+          test_mode_start = 1;
+        end else if (pkt_start_i) begin
           state_d = SYNC;
         end
       end

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: test_mode_start
                HdlValueInt: 0

UPD HdlStmCase@@state_q to state_q
    MOV HdlValueId@@IDLE to 
    HdlValueId: IDLE
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlStmIf
                HdlValueId: pkt_start_i
                HdlStmBlock: SEQ
                    list: body
                        HdlOp: ASSIGN
                            list: ops
                                HdlValueId: state_d
                                HdlValueId: SYNC
                list: elifs
    UPD HdlStmBlock@@SEQ to SEQ
        UPD list@@body to elifs
        MOV list@@body to SEQ
        list: body
            HdlStmIf
                HdlValueId: pkt_start_i
                HdlStmBlock: SEQ
                    list: body
                        HdlOp: ASSIGN
                            list: ops
                                HdlValueId: state_d
                                HdlValueId: SYNC
                list: elifs
    MOV tuple@@ to cases
    tuple
        HdlValueId: IDLE
        HdlStmBlock: SEQ
            list: body
                HdlStmIf
                    HdlValueId: pkt_start_i
                    HdlStmBlock: SEQ
                        list: body
                            HdlOp: ASSIGN
                                list: ops
                                    HdlValueId: state_d
                                    HdlValueId: SYNC
                    list: elifs

MOV HdlStmIf@@ to body
HdlStmIf
    HdlValueId: pkt_start_i
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: state_d
                    HdlValueId: SYNC
    list: elifs

UPD HdlStmIf@@ to 
    MOV HdlValueId@@pkt_start_i to 
    HdlValueId: pkt_start_i
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: state_d
                    HdlValueId: SYNC
    DEL list@@elifs from 


CommitId: a17530f0a51524486c59b0c8d5295d6ded247ec2
[usbdev] USB device update from ETH repo
--- a/hw/ip/usb_fs_nb_pe/rtl/usb_fs_tx.sv
+++ b/hw/ip/usb_fs_nb_pe/rtl/usb_fs_tx.sv
@@ -204,11 +217,27 @@ module usb_fs_tx (
           se0_shift_reg_d = 8'b00000111;
         end
       end
+
+      OSC_TEST: begin
+        // Oscillator test mode: toggle constantly
+        if (!tx_osc_test_mode_i && byte_strobe_q) begin
+          oe_shift_reg_d   = 8'b00000000;
+          state_d = IDLE;          
+        end else if (byte_strobe_q) begin
+          data_shift_reg_d = 8'b00000000;
+          oe_shift_reg_d   = 8'b11111111;
+          se0_shift_reg_d  = 8'b00000000;
+        end
+      end
     endcase
 
     // Logic closely coupled to the FSM
     if (pkt_start_i) begin
-      bit_count_d   = 1;
+      // We need to have a inter-packed delay between
+      // 2 and 6.5 bit times (see USB 2.0 spec / 7.1.18.1)
+      // The latency in the rest of the system is approximately (measured)
+      // 3.68 bit-times, so we only introduce 1 bit-time here
+      bit_count_d   = 7; // 8-7 = 1
       bit_history_d = 0;
 
     end else if (bit_strobe_i) begin

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: test_mode_start
                HdlValueInt: 0

UPD HdlStmCase@@state_q to state_q
    INS tuple@@ to cases
    INS tuple@@ to cases
    tuple
        HdlValueId: OSC_TEST
        HdlStmBlock: SEQ
            list: body
                HdlStmIf
                    HdlOp: AND_LOG
                        list: ops
                            HdlOp: NEG_LOG
                                list: ops
                                    HdlValueId: tx_osc_test_mode_i
                            HdlValueId: byte_strobe_q
                    HdlStmBlock: SEQ
                        list: body
                            HdlOp: ASSIGN
                                list: ops
                                    HdlValueId: oe_shift_reg_d
                                    HdlValueInt: 00000000
                            HdlOp: ASSIGN
                                list: ops
                                    HdlValueId: state_d
                                    HdlValueId: IDLE
                    list: elifs
                        tuple
                            HdlValueId: byte_strobe_q
                            HdlStmBlock: SEQ
                                list: body
                                    HdlOp: ASSIGN
                                        list: ops
                                            HdlValueId: data_shift_reg_d
                                            HdlValueInt: 00000000
                                    HdlOp: ASSIGN
                                        list: ops
                                            HdlValueId: oe_shift_reg_d
                                            HdlValueInt: 11111111
                                    HdlOp: ASSIGN
                                        list: ops
                                            HdlValueId: se0_shift_reg_d
                                            HdlValueInt: 00000000
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmCase@@state_q to state_q
    MOV HdlValueId@@IDLE to 
    HdlValueId: IDLE
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlStmIf
                HdlValueId: pkt_start_i
                HdlStmBlock: SEQ
                    list: body
                        HdlOp: ASSIGN
                            list: ops
                                HdlValueId: state_d
                                HdlValueId: SYNC
                list: elifs
    UPD HdlStmBlock@@SEQ to SEQ
        UPD list@@body to elifs
        MOV list@@body to SEQ
        list: body
            HdlStmIf
                HdlValueId: pkt_start_i
                HdlStmBlock: SEQ
                    list: body
                        HdlOp: ASSIGN
                            list: ops
                                HdlValueId: state_d
                                HdlValueId: SYNC
                list: elifs
    MOV tuple@@ to cases
    tuple
        HdlValueId: IDLE
        HdlStmBlock: SEQ
            list: body
                HdlStmIf
                    HdlValueId: pkt_start_i
                    HdlStmBlock: SEQ
                        list: body
                            HdlOp: ASSIGN
                                list: ops
                                    HdlValueId: state_d
                                    HdlValueId: SYNC
                    list: elifs

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueInt@@1 to 7


CommitId: a17530f0a51524486c59b0c8d5295d6ded247ec2
[usbdev] USB device update from ETH repo
--- a/hw/ip/usb_fs_nb_pe/rtl/usb_fs_tx.sv
+++ b/hw/ip/usb_fs_nb_pe/rtl/usb_fs_tx.sv
@@ -231,7 +260,7 @@ module usb_fs_tx (
   end
 
   always_comb begin : proc_byte_str
-    if (bit_strobe_i && !bitstuff) begin
+    if (bit_strobe_i && !bitstuff && !pkt_start_i) begin
       byte_strobe_d = (bit_count_q == 3'b000);
     end else begin
       byte_strobe_d = 0;

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: test_mode_start
                HdlValueInt: 0

UPD HdlStmCase@@state_q to state_q
    INS tuple@@ to cases
    INS tuple@@ to cases
    tuple
        HdlValueId: OSC_TEST
        HdlStmBlock: SEQ
            list: body
                HdlStmIf
                    HdlOp: AND_LOG
                        list: ops
                            HdlOp: NEG_LOG
                                list: ops
                                    HdlValueId: tx_osc_test_mode_i
                            HdlValueId: byte_strobe_q
                    HdlStmBlock: SEQ
                        list: body
                            HdlOp: ASSIGN
                                list: ops
                                    HdlValueId: oe_shift_reg_d
                                    HdlValueInt: 00000000
                            HdlOp: ASSIGN
                                list: ops
                                    HdlValueId: state_d
                                    HdlValueId: IDLE
                    list: elifs
                        tuple
                            HdlValueId: byte_strobe_q
                            HdlStmBlock: SEQ
                                list: body
                                    HdlOp: ASSIGN
                                        list: ops
                                            HdlValueId: data_shift_reg_d
                                            HdlValueInt: 00000000
                                    HdlOp: ASSIGN
                                        list: ops
                                            HdlValueId: oe_shift_reg_d
                                            HdlValueInt: 11111111
                                    HdlOp: ASSIGN
                                        list: ops
                                            HdlValueId: se0_shift_reg_d
                                            HdlValueInt: 00000000
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmIf@@ to 
    MOV HdlOp@@AND_LOG to 
    HdlOp: AND_LOG
        list: ops
            HdlValueId: bit_strobe_i
            HdlOp: NEG_LOG
                list: ops
                    HdlValueId: bitstuff


CommitId: a17530f0a51524486c59b0c8d5295d6ded247ec2
[usbdev] USB device update from ETH repo
--- a/hw/ip/usb_fs_nb_pe/rtl/usb_fs_tx.sv
+++ b/hw/ip/usb_fs_nb_pe/rtl/usb_fs_tx.sv
@@ -282,7 +311,6 @@ module usb_fs_tx (
       data_shift_reg_q  <= 0;
       oe_shift_reg_q    <= 0;
       se0_shift_reg_q   <= 0;
-      data_payload_q    <= 0;
       tx_data_get_q     <= 0;
       byte_strobe_q     <= 0;
       bit_history_q     <= 0;

ParseResult:
DEL HdlStmAssign@@ from body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: data_payload_q


CommitId: a17530f0a51524486c59b0c8d5295d6ded247ec2
[usbdev] USB device update from ETH repo
--- a/hw/ip/usb_fs_nb_pe/rtl/usb_fs_tx.sv
+++ b/hw/ip/usb_fs_nb_pe/rtl/usb_fs_tx.sv
@@ -295,7 +323,6 @@ module usb_fs_tx (
         data_shift_reg_q  <= 0;
         oe_shift_reg_q    <= 0;
         se0_shift_reg_q   <= 0;
-        data_payload_q    <= 0;
         tx_data_get_q     <= 0;
         byte_strobe_q     <= 0;
         bit_history_q     <= 0;

ParseResult:
DEL HdlStmAssign@@ from body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: data_payload_q


CommitId: a17530f0a51524486c59b0c8d5295d6ded247ec2
[usbdev] USB device update from ETH repo
--- a/hw/ip/usb_fs_nb_pe/rtl/usb_fs_tx.sv
+++ b/hw/ip/usb_fs_nb_pe/rtl/usb_fs_tx.sv
@@ -307,7 +334,6 @@ module usb_fs_tx (
         data_shift_reg_q  <= data_shift_reg_d;
         oe_shift_reg_q    <= oe_shift_reg_d;
         se0_shift_reg_q   <= se0_shift_reg_d;
-        data_payload_q    <= data_payload_d;
         tx_data_get_q     <= tx_data_get_d;
         byte_strobe_q     <= byte_strobe_d;
         bit_history_q     <= bit_history_d;

ParseResult:
DEL HdlStmAssign@@ from body
HdlStmAssign
    HdlValueId: data_payload_d
    HdlValueId: data_payload_q


CommitId: a17530f0a51524486c59b0c8d5295d6ded247ec2
[usbdev] USB device update from ETH repo
--- a/hw/ip/usb_fs_nb_pe/rtl/usb_fs_tx.sv
+++ b/hw/ip/usb_fs_nb_pe/rtl/usb_fs_tx.sv
@@ -355,27 +421,30 @@ module usb_fs_tx (
 
   always_ff @(posedge clk_i or negedge rst_ni) begin : proc_diff_reg
     if(!rst_ni) begin
-      dp_eop_q  <= 0;
-      oe_q      <= 0;
-      dp_q      <= 0;
-      dn_q      <= 0;
+      dp_eop_q             <= 0;
+      oe_q                 <= 0;
+      usb_d_q              <= 1; // J state = idle state
+      usb_se0_q            <= 0;
+      out_state_q          <= Idle;
     end else begin
       if (link_reset_i) begin
-        dp_eop_q  <= 0;
-        oe_q      <= 0;
-        dp_q      <= 0;
-        dn_q      <= 0;        
+        dp_eop_q             <= 0;
+        oe_q                 <= 0;
+        usb_d_q              <= 1;
+        usb_se0_q            <= 0;
+        out_state_q          <= Idle;
       end else begin
-        dp_eop_q  <= dp_eop_d;
-        oe_q      <= oe_d;
-        dp_q      <= dp_d;
-        dn_q      <= dn_d;
+        dp_eop_q             <= dp_eop_d;
+        oe_q                 <= oe_d;
+        usb_d_q              <= usb_d_d;
+        usb_se0_q            <= usb_se0_d;
+        out_state_q          <= out_state_d;
       end
     end
   end
 
-  assign oe_o = oe_q;
-  assign dp_o = dp_q;
-  assign dn_o = dn_q;
+  assign usb_oe_o  = oe_q;
+  assign usb_d_o   = usb_d_q;
+  assign usb_se0_o = usb_se0_q;
 
 endmodule
ParseResult:
INS HdlStmProcess@@ to objs

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlValueId: oe_q
    HdlValueId: usb_oe_o

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlValueId: usb_d_q
    HdlValueId: usb_d_o

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlValueId: usb_se0_q
    HdlValueId: usb_se0_o

UPD HdlStmProcess@@ to 
    MOV list@@sensitivity to 
    list: sensitivity
        HdlOp: RISING
            list: ops
                HdlValueId: clk_i
        HdlOp: FALLING
            list: ops
                HdlValueId: rst_ni
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL HdlStmProcessTriggerConstrain@@FF from 

INS HdlStmIf@@ to body

UPD HdlStmIf@@ to 
    MOV HdlOp@@NEG_LOG to 
    HdlOp: NEG_LOG
        list: ops
            HdlValueId: rst_ni
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL list@@elifs from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 

MOV HdlStmAssign@@ to body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: dp_eop_q

MOV HdlStmAssign@@ to body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: oe_q

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueInt: 1
    HdlValueId: usb_d_q

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: usb_se0_q

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueId: Idle
    HdlValueId: out_state_q

INS HdlStmIf@@ to body

MOV HdlStmAssign@@ to body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: dp_eop_q

MOV HdlStmAssign@@ to body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: oe_q

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueInt: 1
    HdlValueId: usb_d_q

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: usb_se0_q

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueId: Idle
    HdlValueId: out_state_q

MOV HdlStmAssign@@ to body
HdlStmAssign
    HdlValueId: dp_eop_d
    HdlValueId: dp_eop_q

MOV HdlStmAssign@@ to body
HdlStmAssign
    HdlValueId: oe_d
    HdlValueId: oe_q

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueId: usb_d_d
    HdlValueId: usb_d_q

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueId: usb_se0_d
    HdlValueId: usb_se0_q

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueId: out_state_d
    HdlValueId: out_state_q

DEL HdlStmAssign@@ from body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: dp_q

DEL HdlStmAssign@@ from body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: dn_q

UPD HdlStmIf@@ to 
    DEL HdlValueId@@link_reset_i from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL list@@elifs from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 

DEL HdlStmAssign@@ from body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: dp_q

DEL HdlStmAssign@@ from body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: dn_q

DEL HdlStmAssign@@ from body
HdlStmAssign
    HdlValueId: dp_d
    HdlValueId: dp_q

DEL HdlStmAssign@@ from body
HdlStmAssign
    HdlValueId: dn_d
    HdlValueId: dn_q

DEL HdlStmIf@@ from body

DEL HdlStmIf@@ from body

DEL HdlStmProcess@@ from objs

DEL HdlStmAssign@@ from objs
HdlStmAssign
    HdlValueId: oe_q
    HdlValueId: oe_o

DEL HdlStmAssign@@ from objs
HdlStmAssign
    HdlValueId: dp_q
    HdlValueId: dp_o

DEL HdlStmAssign@@ from objs
HdlStmAssign
    HdlValueId: dn_q
    HdlValueId: dn_o


CommitId: 5c323ef52ef42785286da49a3a2919a35dce75d9
[usb] Fix lint errors
--- a/hw/ip/usbdev/rtl/usbdev.sv
+++ b/hw/ip/usbdev/rtl/usbdev.sv
@@ -135,6 +135,7 @@ module usbdev (
   logic              usb_enable;
   logic [6:0]        usb_device_addr;
 
+  logic                  data_toggle_clear_qe;
   logic                  usb_data_toggle_clear_en;
   logic [NEndpoints-1:0] usb_data_toggle_clear;
 

ParseResult:
INS HdlIdDef@@data_toggle_clear_qe to objs
HdlIdDef: data_toggle_clear_qe
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL


CommitId: 5c323ef52ef42785286da49a3a2919a35dce75d9
[usb] Fix lint errors
--- a/hw/ip/usbdev/rtl/usbdev.sv
+++ b/hw/ip/usbdev/rtl/usbdev.sv
@@ -214,8 +219,11 @@ module usbdev (
   assign hw2reg.rxfifo.size.d = rx_rdata[11:5];
   assign hw2reg.rxfifo.buffer.d = rx_rdata[4:0];
   assign event_pkt_received = rx_fifo_rvalid;
-  logic [2:0]               unused_re;
-  assign unused_re = {reg2hw.rxfifo.ep.re, reg2hw.rxfifo.setup.re, reg2hw.rxfifo.size.re};
+
+  // The rxfifo register is hrw, but we just need the read enables.
+  logic [3:0] unused_rxfifo_q;
+  assign unused_rxfifo_q = {reg2hw.rxfifo.ep.q, reg2hw.rxfifo.setup.q,
+                            reg2hw.rxfifo.size.q, reg2hw.rxfifo.buffer.q};
 
   ////////////////////////////////////
   // IN (Transmit) interface config //

ParseResult:
MOV HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: CONCAT
        list: ops
            HdlOp: CONCAT
                list: ops
                    HdlOp: DOT
                        list: ops
                            HdlOp: DOT
                                list: ops
                                    HdlOp: DOT
                                        list: ops
                                            HdlValueId: reg2hw
                                            HdlValueId: rxfifo
                                    HdlValueId: ep
                            HdlValueId: re
                    HdlOp: DOT
                        list: ops
                            HdlOp: DOT
                                list: ops
                                    HdlOp: DOT
                                        list: ops
                                            HdlValueId: reg2hw
                                            HdlValueId: rxfifo
                                    HdlValueId: setup
                            HdlValueId: re
            HdlOp: DOT
                list: ops
                    HdlOp: DOT
                        list: ops
                            HdlOp: DOT
                                list: ops
                                    HdlValueId: reg2hw
                                    HdlValueId: rxfifo
                            HdlValueId: size
                    HdlValueId: re
    HdlValueId: unused_re

INS HdlIdDef@@unused_rxfifo_q to objs
HdlIdDef: unused_rxfifo_q
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 3
                    HdlValueInt: 0
    HdlDirection: INTERNAL

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: CONCAT
        list: ops
            HdlOp: CONCAT
                list: ops
                    HdlOp: CONCAT
                        list: ops
                            HdlOp: DOT
                                list: ops
                                    HdlOp: DOT
                                        list: ops
                                            HdlOp: DOT
                                                list: ops
                                                    HdlValueId: reg2hw
                                                    HdlValueId: rxfifo
                                            HdlValueId: ep
                                    HdlValueId: q
                            HdlOp: DOT
                                list: ops
                                    HdlOp: DOT
                                        list: ops
                                            HdlOp: DOT
                                                list: ops
                                                    HdlValueId: reg2hw
                                                    HdlValueId: rxfifo
                                            HdlValueId: setup
                                    HdlValueId: q
                    HdlOp: DOT
                        list: ops
                            HdlOp: DOT
                                list: ops
                                    HdlOp: DOT
                                        list: ops
                                            HdlValueId: reg2hw
                                            HdlValueId: rxfifo
                                    HdlValueId: size
                            HdlValueId: q
            HdlOp: DOT
                list: ops
                    HdlOp: DOT
                        list: ops
                            HdlOp: DOT
                                list: ops
                                    HdlValueId: reg2hw
                                    HdlValueId: rxfifo
                            HdlValueId: buffer
                    HdlValueId: q
    HdlValueId: unused_rxfifo_q

UPD HdlStmAssign@@ to 
    UPD HdlOp@@CONCAT to OR
    MOV HdlOp@@CONCAT to 
    HdlOp: CONCAT
        list: ops
            HdlOp: CONCAT
                list: ops
                    HdlOp: DOT
                        list: ops
                            HdlOp: DOT
                                list: ops
                                    HdlOp: DOT
                                        list: ops
                                            HdlValueId: reg2hw
                                            HdlValueId: rxfifo
                                    HdlValueId: ep
                            HdlValueId: re
                    HdlOp: DOT
                        list: ops
                            HdlOp: DOT
                                list: ops
                                    HdlOp: DOT
                                        list: ops
                                            HdlValueId: reg2hw
                                            HdlValueId: rxfifo
                                    HdlValueId: setup
                            HdlValueId: re
            HdlOp: DOT
                list: ops
                    HdlOp: DOT
                        list: ops
                            HdlOp: DOT
                                list: ops
                                    HdlValueId: reg2hw
                                    HdlValueId: rxfifo
                            HdlValueId: size
                    HdlValueId: re
    UPD HdlOp@@CONCAT to CONCAT
        UPD HdlOp@@CONCAT to OR
    DEL HdlValueId@@unused_re from 

DEL HdlIdDef@@unused_re from objs
HdlIdDef: unused_re
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 2
                    HdlValueInt: 0
    HdlDirection: INTERNAL


CommitId: 5c323ef52ef42785286da49a3a2919a35dce75d9
[usb] Fix lint errors
--- a/hw/ip/usbdev/rtl/usbdev.sv
+++ b/hw/ip/usbdev/rtl/usbdev.sv
@@ -288,12 +296,19 @@ module usbdev (
 
   // CDC: We synchronize the qe (write pulse) and assume that the
   // rest of the register remains stable
+  always_comb begin : proc_data_toggle_clear_qe
+    data_toggle_clear_qe = 1'b0;
+    for (int i = 0; i < NEndpoints; i++) begin
+      data_toggle_clear_qe |= reg2hw.data_toggle_clear[i].qe;
+    end
+  end
+
   prim_pulse_sync usbdev_data_toggle_clear (
     .clk_src_i   (clk_i),
     .clk_dst_i   (clk_usb_48mhz_i),
     .rst_src_ni  (rst_ni),
     .rst_dst_ni  (rst_usb_48mhz_ni),
-    .src_pulse_i (reg2hw.data_toggle_clear[0].qe),
+    .src_pulse_i (data_toggle_clear_qe),
     .dst_pulse_o (usb_data_toggle_clear_en)
   );
 

ParseResult:
INS HdlStmProcess@@ to objs

INS HdlStmFor@@ to body


CommitId: 5c323ef52ef42785286da49a3a2919a35dce75d9
[usb] Fix lint errors
--- a/hw/ip/usbdev/rtl/usbdev.sv
+++ b/hw/ip/usbdev/rtl/usbdev.sv
@@ -599,7 +614,7 @@ module usbdev (
   always_comb begin : proc_stall_tieoff
     for (int i = 0; i < NEndpoints; i++) begin
       hw2reg.stall[i].d  = 1'b0;
-      if (setup_received && usb_out_endpoint == 4'(i)) begin
+      if (setup_received && usb_out_endpoint == 4'(unsigned'(i))) begin
         hw2reg.stall[i].de = 1'b1;
       end else begin
         hw2reg.stall[i].de = 1'b0;

ParseResult:
UPD HdlStmIf@@ to 
    UPD HdlOp@@AND_LOG to AND_LOG
        UPD HdlOp@@EQ to EQ
            UPD HdlOp@@CALL to CALL
                DEL HdlValueId@@i from ops


CommitId: 5c323ef52ef42785286da49a3a2919a35dce75d9
[usb] Fix lint errors
--- a/hw/ip/usbdev/rtl/usbdev.sv
+++ b/hw/ip/usbdev/rtl/usbdev.sv
@@ -607,8 +622,6 @@ module usbdev (
     end
   end
 
-  logic        unused_mem_a_rerror_d;
-
   // TL-UL to SRAM adapter
   tlul_adapter_sram #(
     .SramAw(SramAw),

ParseResult:
MOV HdlIdDef@@unused_mem_a_rerror_d to objs
HdlIdDef: unused_mem_a_rerror_d
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

UPD HdlIdDef@@unused_mem_a_rerror_d to rx_fifo_re


CommitId: 5c323ef52ef42785286da49a3a2919a35dce75d9
[usb] Fix lint errors
--- a/hw/ip/usbdev/rtl/usbdev.sv
+++ b/hw/ip/usbdev/rtl/usbdev.sv
@@ -631,8 +644,6 @@ module usbdev (
     .rerror_i (mem_a_rerror)
   );
 
-  assign unused_mem_a_rerror_d = mem_a_rerror[1] ; // Only uncorrectable error
-
   // SRAM Wrapper
   prim_ram_2p_async_adv #(
     .Depth (SramDepth),

ParseResult:
DEL HdlStmAssign@@ from objs
HdlStmAssign
    HdlOp: INDEX
        list: ops
            HdlValueId: mem_a_rerror
            HdlValueInt: 1
    HdlValueId: unused_mem_a_rerror_d


CommitId: 488707873168bd72fba44d8de8cd4df45d70e106
[usb] Fix lint errors
--- a/hw/ip/usbuart/rtl/usbuart_core.sv
+++ b/hw/ip/usbuart/rtl/usbuart_core.sv
@@ -63,14 +63,16 @@ module usbuart_core (
   logic          event_tx_watermark, event_rx_watermark, event_tx_overflow, event_rx_overflow;
   logic          event_rx_frame_err, event_rx_break_err, event_rx_timeout, event_rx_parity_err;
   logic          host_lost, host_timeout;
-  logic          unused_usb_pullup;
+  logic          usb_pullup_en;
 
-  assign tx_enable        = reg2hw.ctrl.tx.q;
-  assign rx_enable        = reg2hw.ctrl.rx.q;
-  assign sys_loopback     = reg2hw.ctrl.slpbk.q;
-  assign unused_usb_pullup = tx_enable | rx_enable;
+  assign tx_enable     = reg2hw.ctrl.tx.q;
+  assign rx_enable     = reg2hw.ctrl.rx.q;
+  assign sys_loopback  = reg2hw.ctrl.slpbk.q;
+  assign usb_pullup_en = tx_enable | rx_enable;
 
-// assign line_loopback    = reg2hw.ctrl.llpbk.q;
+  logic [3:0]    unused_ctrl_q;
+  assign unused_ctrl_q = {reg2hw.ctrl.nf.q, reg2hw.ctrl.llpbk.q, reg2hw.ctrl.parity_en.q,
+                          reg2hw.ctrl.parity_odd.q};
 
   // 4 cycle reset pulse
   logic [2:0]    rxres_cnt;

ParseResult:
UPD HdlIdDef@@unused_usb_pullup to usb_pullup_en

INS HdlIdDef@@unused_ctrl_q to objs
HdlIdDef: unused_ctrl_q
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 3
                    HdlValueInt: 0
    HdlDirection: INTERNAL

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: CONCAT
        list: ops
            HdlOp: CONCAT
                list: ops
                    HdlOp: CONCAT
                        list: ops
                            HdlOp: DOT
                                list: ops
                                    HdlOp: DOT
                                        list: ops
                                            HdlOp: DOT
                                                list: ops
                                                    HdlValueId: reg2hw
                                                    HdlValueId: ctrl
                                            HdlValueId: nf
                                    HdlValueId: q
                            HdlOp: DOT
                                list: ops
                                    HdlOp: DOT
                                        list: ops
                                            HdlOp: DOT
                                                list: ops
                                                    HdlValueId: reg2hw
                                                    HdlValueId: ctrl
                                            HdlValueId: llpbk
                                    HdlValueId: q
                    HdlOp: DOT
                        list: ops
                            HdlOp: DOT
                                list: ops
                                    HdlOp: DOT
                                        list: ops
                                            HdlValueId: reg2hw
                                            HdlValueId: ctrl
                                    HdlValueId: parity_en
                            HdlValueId: q
            HdlOp: DOT
                list: ops
                    HdlOp: DOT
                        list: ops
                            HdlOp: DOT
                                list: ops
                                    HdlValueId: reg2hw
                                    HdlValueId: ctrl
                            HdlValueId: parity_odd
                    HdlValueId: q
    HdlValueId: unused_ctrl_q

UPD HdlStmAssign@@ to 
    UPD HdlValueId@@unused_usb_pullup to usb_pullup_en


CommitId: 488707873168bd72fba44d8de8cd4df45d70e106
[usb] Fix lint errors
--- a/hw/ip/usbuart/rtl/usbuart_core.sv
+++ b/hw/ip/usbuart/rtl/usbuart_core.sv
@@ -103,13 +105,20 @@ module usbuart_core (
 
   assign uart_fifo_rxilvl = reg2hw.fifo_ctrl.rxilvl.q;
   assign uart_fifo_txilvl = reg2hw.fifo_ctrl.txilvl.q;
-  // assign ovrd_tx_en       = reg2hw.ovrd.txen.q;
-  // assign ovrd_tx_val      = reg2hw.ovrd.txval.q;
+
+  logic [1:0]    unused_fifo_ctrl_qe;
+  assign unused_fifo_ctrl_qe = {reg2hw.fifo_ctrl.rxilvl.qe, reg2hw.fifo_ctrl.txilvl.qe};
+
+  logic          unused_ovrd_tx_en, unused_ovrd_tx_val;
+  assign unused_ovrd_tx_en  = reg2hw.ovrd.txen.q;
+  assign unused_ovrd_tx_val = reg2hw.ovrd.txval.q;
 
   // VAL register not used at the moment
   assign hw2reg.val.d  = 16'b0;
 
   assign hw2reg.rdata.d = uart_rdata;
+  logic [7:0]    unused_rdata_q;
+  assign unused_rdata_q = reg2hw.rdata.q;
 
   assign hw2reg.status.rxempty.d     = ~rx_fifo_rvalid;
   assign hw2reg.status.rxidle.d      = ~rx_fifo_rvalid; // TODO

ParseResult:
MOV HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: NEG
        list: ops
            HdlValueId: rx_fifo_rvalid
    HdlValueId: hw2reg

INS HdlIdDef@@unused_fifo_ctrl_qe to objs
HdlIdDef: unused_fifo_ctrl_qe
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: INTERNAL

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: CONCAT
        list: ops
            HdlOp: DOT
                list: ops
                    HdlOp: DOT
                        list: ops
                            HdlOp: DOT
                                list: ops
                                    HdlValueId: reg2hw
                                    HdlValueId: fifo_ctrl
                            HdlValueId: rxilvl
                    HdlValueId: qe
            HdlOp: DOT
                list: ops
                    HdlOp: DOT
                        list: ops
                            HdlOp: DOT
                                list: ops
                                    HdlValueId: reg2hw
                                    HdlValueId: fifo_ctrl
                            HdlValueId: txilvl
                    HdlValueId: qe
    HdlValueId: unused_fifo_ctrl_qe

INS HdlIdDef@@unused_ovrd_tx_en to objs
HdlIdDef: unused_ovrd_tx_en
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

INS HdlIdDef@@unused_ovrd_tx_val to objs
HdlIdDef: unused_ovrd_tx_val
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: DOT
        list: ops
            HdlOp: DOT
                list: ops
                    HdlOp: DOT
                        list: ops
                            HdlValueId: reg2hw
                            HdlValueId: ovrd
                    HdlValueId: txen
            HdlValueId: q
    HdlValueId: unused_ovrd_tx_en

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: DOT
        list: ops
            HdlOp: DOT
                list: ops
                    HdlOp: DOT
                        list: ops
                            HdlValueId: reg2hw
                            HdlValueId: ovrd
                    HdlValueId: txval
            HdlValueId: q
    HdlValueId: unused_ovrd_tx_val

INS HdlIdDef@@unused_rdata_q to objs
HdlIdDef: unused_rdata_q
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 7
                    HdlValueInt: 0
    HdlDirection: INTERNAL

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: DOT
        list: ops
            HdlOp: DOT
                list: ops
                    HdlValueId: reg2hw
                    HdlValueId: rdata
            HdlValueId: q
    HdlValueId: unused_rdata_q


CommitId: 488707873168bd72fba44d8de8cd4df45d70e106
[usb] Fix lint errors
--- a/hw/ip/usbuart/rtl/usbuart_core.sv
+++ b/hw/ip/usbuart/rtl/usbuart_core.sv
@@ -179,8 +188,7 @@ module usbuart_core (
   //////////////
   // RX Logic //
   //////////////
-  logic [5:0]        usb_rx_wdepth;
-  logic              usb_rx_oflw;
+  logic usb_rx_oflw;
 
   // TODO: This is not a safe way to create a reset signal
   assign rx_fifo_rst_n = rst_usb_48mhz_ni & ~uart_fifo_rxrst;

ParseResult:
DEL HdlIdDef@@usb_rx_wdepth from objs
HdlIdDef: usb_rx_wdepth
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 5
                    HdlValueInt: 0
    HdlDirection: INTERNAL


CommitId: 488707873168bd72fba44d8de8cd4df45d70e106
[usb] Fix lint errors
--- a/hw/ip/usbuart/rtl/usbuart_core.sv
+++ b/hw/ip/usbuart/rtl/usbuart_core.sv
@@ -421,6 +428,7 @@ module usbuart_core (
   assign usb_phy_config.eop_single_bit.q         = 1'b1;
   assign usb_phy_config.override_pwr_sense_en.q  = 1'b0;
   assign usb_phy_config.override_pwr_sense_val.q = 1'b0;
+  assign usb_phy_config.usb_ref_disable.q        = 1'b0;
 
   usbdev_iomux i_usbdev_iomux (
     .clk_i                  ( clk_i                  ),

ParseResult:
INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: usb_phy_config


CommitId: bc7f6d6cde2259f2741e40112f2ff4c6871d0d75
Update lowrisc_ibex to lowRISC/ibex@6d9e1ac
--- a/hw/vendor/lowrisc_ibex/examples/simple_system/rtl/ibex_simple_system.sv
+++ b/hw/vendor/lowrisc_ibex/examples/simple_system/rtl/ibex_simple_system.sv
@@ -279,7 +280,7 @@ module ibex_simple_system (
 
   export "DPI-C" function mhpmcounter_get;
 
-  function automatic longint mhpmcounter_get(int index);
+  function automatic longint unsigned mhpmcounter_get(int index);
     return u_core.u_ibex_core.cs_registers_i.mhpmcounter[index];
   endfunction
 
ParseResult:
UPD HdlFunctionDef@@mhpmcounter_get to mhpmcounter_get
    INS HdlOp@@PARAMETRIZATION to mhpmcounter_get
    UPD HdlOp@@PARAMETRIZATION to PARAMETRIZATION
        INS list@@ops to PARAMETRIZATION
        INS HdlOp@@MAP_ASSOCIATION to ops
        HdlOp: MAP_ASSOCIATION
            list: ops
                HdlValueId: signed

UPD HdlFunctionDef@@mhpmcounter_get to mhpmcounter_get
    MOV HdlValueId@@longint to mhpmcounter_get
    HdlValueId: longint


CommitId: 66c509296798cdd9dbeba4deeb381d0cecf3b429
[usbdev] Fixes for I/O modes and expand their tests
--- a/hw/ip/usb_fs_nb_pe/rtl/usb_fs_rx.sv
+++ b/hw/ip/usb_fs_nb_pe/rtl/usb_fs_rx.sv
@@ -10,12 +10,14 @@ module usb_fs_rx (
   input  logic rst_ni,
   input  logic link_reset_i,
 
-  // EOP configuration
+  // configuration
   input  logic cfg_eop_single_bit_i,
+  input  logic cfg_rx_differential_i,
 
   // USB data+ and data- lines (synchronous)
   input  logic usb_d_i,
-  input  logic usb_se0_i,
+  input  logic usb_dp_i,
+  input  logic usb_dn_i,
 
   // Transmit enable disables the receier
   input  logic tx_en_i,

ParseResult:
INS HdlIdDef@@cfg_rx_differential_i to ports
HdlIdDef: cfg_rx_differential_i
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: IN

UPD HdlIdDef@@usb_se0_i to usb_dp_i

INS HdlIdDef@@usb_dn_i to ports
HdlIdDef: usb_dn_i
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: IN


CommitId: 66c509296798cdd9dbeba4deeb381d0cecf3b429
[usbdev] Fixes for I/O modes and expand their tests
--- a/hw/ip/usb_fs_nb_pe/rtl/usb_fs_rx.sv
+++ b/hw/ip/usb_fs_nb_pe/rtl/usb_fs_rx.sv
@@ -42,6 +44,10 @@ module usb_fs_rx (
   // Most recent packet passes PID and CRC checks
   output logic valid_packet_o,
 
+  // line status for the status detection (actual rx bits after clock recovery)
+  output logic rx_se0_det_o,
+  output logic rx_jjj_det_o,
+
   // Error detection
   output logic crc_error_o,
   output logic pid_error_o,

ParseResult:
INS HdlIdDef@@rx_se0_det_o to ports
HdlIdDef: rx_se0_det_o
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: OUT

INS HdlIdDef@@rx_jjj_det_o to ports
HdlIdDef: rx_jjj_det_o
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: OUT


CommitId: 66c509296798cdd9dbeba4deeb381d0cecf3b429
[usbdev] Fixes for I/O modes and expand their tests
--- a/hw/ip/usb_fs_nb_pe/rtl/usb_fs_rx.sv
+++ b/hw/ip/usb_fs_nb_pe/rtl/usb_fs_rx.sv
@@ -137,7 +226,7 @@ module usb_fs_rx (
   assign bit_strobe_o     = (bit_phase_q == 2'd2);
 
   // keep track of phase within each bit
-  assign bit_phase_d = (line_state_q == DT) ? 0 : bit_phase_q + 1;
+  assign bit_phase_d = (line_state_rx == DT) ? 0 : bit_phase_q + 1;
 
   always_ff @(posedge clk_i or negedge rst_ni) begin : proc_bit_phase_q
     if (!rst_ni) begin

ParseResult:
INS HdlStmAssign@@ to objs

UPD HdlStmAssign@@ to 
    UPD HdlOp@@TERNARY to TERNARY
        MOV HdlOp@@ADD to ops
        HdlOp: ADD
            list: ops
                HdlValueId: bit_phase_q
                HdlValueInt: 1
        MOV HdlOp@@EQ to ops
        HdlOp: EQ
            list: ops
                HdlValueId: line_state_q
                HdlValueId: DT
        DEL HdlValueInt@@0 from ops
        DEL list@@ops from TERNARY
    DEL HdlOp@@TERNARY from 
    DEL HdlValueId@@bit_phase_d from 

DEL HdlStmAssign@@ from objs


CommitId: 66c509296798cdd9dbeba4deeb381d0cecf3b429
[usbdev] Fixes for I/O modes and expand their tests
--- a/hw/ip/usb_fs_nb_pe/rtl/usb_fs_rx.sv
+++ b/hw/ip/usb_fs_nb_pe/rtl/usb_fs_rx.sv
@@ -193,7 +282,7 @@ module usb_fs_rx (
   end
 
   // keep a history of the last two states on the line
-  assign line_history_d = line_state_valid ? {line_history_q[9:0], line_state_q[1:0]} :
+  assign line_history_d = line_state_valid ? {line_history_q[9:0], line_state_rx[1:0]} :
                                               line_history_q;
 
   always_ff @(posedge clk_i or negedge rst_ni) begin : proc_reg_pkt_line

ParseResult:
UPD HdlStmAssign@@ to 
    UPD HdlOp@@TERNARY to TERNARY
        UPD HdlOp@@CONCAT to CONCAT
            UPD HdlOp@@INDEX to INDEX
                UPD HdlValueId@@line_state_q to line_state_rx


CommitId: 66c509296798cdd9dbeba4deeb381d0cecf3b429
[usbdev] Fixes for I/O modes and expand their tests
--- a/hw/ip/usb_fs_nb_pe/rtl/usb_fs_rx.sv
+++ b/hw/ip/usb_fs_nb_pe/rtl/usb_fs_rx.sv
@@ -211,6 +300,9 @@ module usb_fs_rx (
     end
   end
 
+  // mask out jjj detection when transmitting (because rx is forced to J)
+  assign rx_se0_det_o = line_history_q[5:0] == 6'b000000; // three SE0s
+  assign rx_jjj_det_o = ~tx_en_i & (line_history_q[5:0] == 6'b101010); // three Js
 
   /////////////////
   // NRZI decode //
ParseResult:
INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: EQ
        list: ops
            HdlOp: INDEX
                list: ops
                    HdlValueId: line_history_q
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 5
                            HdlValueInt: 0
            HdlValueInt: 000000
    HdlValueId: rx_se0_det_o

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: AND
        list: ops
            HdlOp: NEG
                list: ops
                    HdlValueId: tx_en_i
            HdlOp: EQ
                list: ops
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: line_history_q
                            HdlOp: DOWNTO
                                list: ops
                                    HdlValueInt: 5
                                    HdlValueInt: 0
                    HdlValueInt: 101010
    HdlValueId: rx_jjj_det_o


CommitId: df96e0c2a6cc99652e459b22c1bcb2c1ce5f59f1
[AST] AscentLint, HJSON fixes, and rgn_fips_i port
--- a/hw/top_earlgrey/ip/ast/rtl/rng.sv
+++ b/hw/top_earlgrey/ip/ast/rtl/rng.sv
@@ -26,6 +26,8 @@ logic clk, rng_clk_en, rng_clk;
 
 // clock Oschilator
 ////////////////////////////////////////
+logic rng_clk_o;
+
 // For FPGA, it can be replace with clk_src_aon_o/4 (200K/4=50K)
 rng_osc u_rng_osc (
   .vcaon_pok_i ( vcaon_pok_i ),
ParseResult:
INS HdlIdDef@@rng_clk_o to objs
HdlIdDef: rng_clk_o
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL


CommitId: cabf26f33f6964caba640d9638873d681ba4a6a5
[prim] Restore ability to select default implementation
--- a/hw/ip/prim/abstract/prim_flash.sv
+++ b/hw/ip/prim/abstract/prim_flash.sv
@@ -6,14 +6,15 @@
 // "abstract module". This module is to be replaced by generated code.
 
 `ifndef PRIM_DEFAULT_IMPL
-  `define PRIM_DEFAULT_IMPL generic
+  `define PRIM_DEFAULT_IMPL integer'(prim_pkg::ImplGeneric)
 `endif
 
 module prim_flash #(
+  parameter integer Impl = `PRIM_DEFAULT_IMPL,
+
   parameter int PagesPerBank = 256, // pages per bank
   parameter int WordsPerPage = 256, // words per page
   parameter int DataWidth   = 32, // bits per word
-  parameter Impl = "generic",
 
   //Do not touch - Derived parameters
   parameter int PageW = $clog2(PagesPerBank),

ParseResult:
UPD HdlModuleDef@@prim_flash to prim_flash
    INS HdlImport@@ to objs
    HdlImport
        list: path
            HdlValueId: prim_pkg
            HdlAll

INS HdlIdDef@@Impl to params
HdlIdDef: Impl
    HdlValueId: integer
    HdlExprNotImplemented: value
    HdlDirection: INTERNAL

DEL HdlIdDef@@Impl from params
HdlIdDef: Impl
    HdlDirection: INTERNAL


CommitId: cabf26f33f6964caba640d9638873d681ba4a6a5
[prim] Restore ability to select default implementation
--- a/hw/ip/prim/abstract/prim_flash.sv
+++ b/hw/ip/prim/abstract/prim_flash.sv
@@ -40,7 +41,9 @@ module prim_flash #(
   output logic                 init_busy_o
 );
 
-  if (Impl == "generic" || Impl == "xilinx") begin : gen_flash
+  import prim_pkg::*;
+
+  if (impl_e'(Impl) == ImplGeneric || impl_e'(Impl) == ImplXilinx) begin : gen_flash
     prim_generic_flash #(
       .PagesPerBank(PagesPerBank),
       .WordsPerPage(WordsPerPage),
ParseResult:
UPD HdlModuleDef@@prim_flash to prim_flash
    INS HdlImport@@ to objs
    HdlImport
        list: path
            HdlValueId: prim_pkg
            HdlAll

UPD HdlIdDef@@init_busy_o to init_busy_o
    INS HdlOp@@PARAMETRIZATION to init_busy_o
    UPD HdlOp@@PARAMETRIZATION to PARAMETRIZATION
        INS list@@ops to PARAMETRIZATION

UPD HdlIdDef@@init_busy_o to init_busy_o
    MOV HdlValueId@@logic to init_busy_o
    HdlValueId: logic

UPD HdlStmIf@@ to 
    UPD HdlOp@@OR_LOG to OR_LOG
        UPD HdlOp@@EQ to EQ
            INS list@@ops to EQ
            INS HdlOp@@CALL to ops
            INS HdlValueId@@ImplGeneric to ops
            UPD HdlOp@@CALL to CALL
                INS HdlValueId@@impl_e to ops
        UPD HdlOp@@EQ to EQ
            INS list@@ops to EQ
            INS HdlOp@@CALL to ops
            INS HdlValueId@@ImplXilinx to ops
            UPD HdlOp@@CALL to CALL
                INS HdlValueId@@impl_e to ops

UPD HdlStmIf@@ to 
    UPD HdlOp@@OR_LOG to OR_LOG
        UPD HdlOp@@EQ to EQ
            MOV list@@ops to EQ
            list: ops
                HdlValueId: Impl
                str
            DEL str@@ from ops
        UPD HdlOp@@EQ to EQ
            MOV list@@ops to EQ
            list: ops
                HdlValueId: Impl
                str
            DEL str@@ from ops


CommitId: 9d75b80410f2801600353336a06354719171b6e7
[uart] Minor lint fix
--- a/hw/ip/uart/rtl/uart_core.sv
+++ b/hw/ip/uart/rtl/uart_core.sv
@@ -489,4 +489,8 @@ module uart_core (
     .intr_o                 (intr_rx_parity_err_o)
   );
 
+  // unused registers
+  logic unused_reg;
+  assign unused_reg = ^reg2hw.alert_test;
+
 endmodule
ParseResult:
INS HdlIdDef@@unused_reg to objs
HdlIdDef: unused_reg
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: XOR_UNARY
        list: ops
            HdlOp: DOT
                list: ops
                    HdlValueId: reg2hw
                    HdlValueId: alert_test
    HdlValueId: unused_reg


CommitId: de6e479401510aed7041bd8581d29b7980624958
[entropy_src/rtl] IO changes updated
--- a/hw/ip/entropy_src/rtl/entropy_src_main_sm.sv
+++ b/hw/ip/entropy_src/rtl/entropy_src_main_sm.sv
@@ -50,7 +50,9 @@ module entropy_src_main_sm (
     NormalMode        = 8'b11001000  // in normal mode
   } state_e;
 
-  state_e state_q, state_d;
+  state_e state_d;
+
+  logic [StateWidth-1:0] state_q;
 
   // This primitive is used to place a size-only constraint on the
   // flops in order to prevent FSM state encoding optimizations.

ParseResult:
INS HdlIdDef@@state_q to objs
HdlIdDef: state_q
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlOp: SUB
                        list: ops
                            HdlValueId: StateWidth
                            HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: INTERNAL

DEL HdlIdDef@@state_q from objs
HdlIdDef: state_q
    HdlDirection: INTERNAL


CommitId: de6e479401510aed7041bd8581d29b7980624958
[entropy_src/rtl] IO changes updated
--- a/hw/ip/entropy_src/rtl/entropy_src_main_sm.sv
+++ b/hw/ip/entropy_src/rtl/entropy_src_main_sm.sv
@@ -65,7 +67,7 @@ module entropy_src_main_sm (
   );
 
   always_comb begin
-    state_d = state_q;
+    state_d = state_e'(state_q);
     rst_bypass_mode_o = 1'b0;
     rst_alert_cntr_o = 1'b0;
     main_stage_pop_o = 1'b0;
ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlOp@@CALL to ops
            UPD HdlOp@@CALL to CALL
                INS list@@ops to CALL
                INS HdlValueId@@state_e to ops

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            MOV HdlValueId@@state_q to ops
            HdlValueId: state_q


CommitId: 535275b313975bfb95a6acb15684004bc641a62a
[csrng/rtl] generate cmd bug fixes
--- a/hw/ip/csrng/rtl/csrng_ctr_drbg_gen.sv
+++ b/hw/ip/csrng/rtl/csrng_ctr_drbg_gen.sv
@@ -328,13 +328,13 @@ module csrng_ctr_drbg_gen import csrng_pkg::*; #(
           state_d = ESHalt;
         end else if (sfifo_genreq_not_empty && !sfifo_adstage_full) begin
           v_ctr_load = 1'b1;
-          sfifo_adstage_push = 1'b1;
           state_d = ReqSend;
         end
       end
       ReqSend: begin
         if (!interate_ctr_done) begin
           block_encrypt_req_o = 1'b1;
+          sfifo_adstage_push = 1'b1;
           if (block_encrypt_rdy_i) begin
             v_ctr_inc  = 1'b1;
             interate_ctr_inc  = 1'b1;

ParseResult:
UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: sfifo_adstage_push
                HdlValueInt: 1


CommitId: 535275b313975bfb95a6acb15684004bc641a62a
[csrng/rtl] generate cmd bug fixes
--- a/hw/ip/csrng/rtl/csrng_ctr_drbg_gen.sv
+++ b/hw/ip/csrng/rtl/csrng_ctr_drbg_gen.sv
@@ -381,7 +381,7 @@ module csrng_ctr_drbg_gen import csrng_pkg::*; #(
     .depth_o        ()
   );
 
-  assign sfifo_adstage_wdata = {genreq_key,genreq_v,genreq_rc,genreq_fips,genreq_adata};
+  assign sfifo_adstage_wdata = {genreq_key,v_sized,genreq_rc,genreq_fips,genreq_adata};
   assign sfifo_adstage_pop = sfifo_adstage_not_empty && sfifo_bencack_pop;
   assign {adstage_key,adstage_v,adstage_rc,adstage_fips,adstage_adata} = sfifo_adstage_rdata;
 
ParseResult:
INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: CONCAT
        list: ops
            HdlOp: CONCAT
                list: ops
                    HdlOp: CONCAT
                        list: ops
                            HdlOp: CONCAT
                                list: ops
                                    HdlValueId: genreq_key
                                    HdlValueId: v_sized
                            HdlValueId: genreq_rc
                    HdlValueId: genreq_fips
            HdlValueId: genreq_adata
    HdlValueId: sfifo_adstage_wdata

DEL HdlStmAssign@@ from objs
HdlStmAssign
    HdlOp: CONCAT
        list: ops
            HdlOp: CONCAT
                list: ops
                    HdlOp: CONCAT
                        list: ops
                            HdlOp: CONCAT
                                list: ops
                                    HdlValueId: genreq_key
                                    HdlValueId: genreq_v
                            HdlValueId: genreq_rc
                    HdlValueId: genreq_fips
            HdlValueId: genreq_adata
    HdlValueId: sfifo_adstage_wdata


CommitId: e7c1cb51710858bea0e70c2e16f8dca8abafcdf0
[usbdev] Workaround to fix dead loop due to tool issue
--- a/hw/ip/usbdev/rtl/usbdev_linkstate.sv
+++ b/hw/ip/usbdev/rtl/usbdev_linkstate.sv
@@ -115,7 +115,8 @@ module usbdev_linkstate (
   always_comb begin
     link_state_d = link_state_q;
     link_resume_o = 0;
-    monitor_inac = 0;
+    monitor_inac = see_pwr_sense ? ((link_state_q == LinkPowered) | (link_state_q == LinkActive)) :
+                                   1'b0;
 
     // If VBUS ever goes away the link has disconnected
     if (!see_pwr_sense) begin

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlOp@@TERNARY to ops
            UPD HdlOp@@TERNARY to TERNARY
                INS list@@ops to TERNARY
                INS HdlValueId@@see_pwr_sense to ops
                INS HdlOp@@OR to ops
                HdlOp: OR
                    list: ops
                        HdlOp: EQ
                            list: ops
                                HdlValueId: link_state_q
                                HdlValueId: LinkPowered
                        HdlOp: EQ
                            list: ops
                                HdlValueId: link_state_q
                                HdlValueId: LinkActive

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            MOV HdlValueInt@@0 to ops
            HdlValueInt: 0


CommitId: e7c1cb51710858bea0e70c2e16f8dca8abafcdf0
[usbdev] Workaround to fix dead loop due to tool issue
--- a/hw/ip/usbdev/rtl/usbdev_linkstate.sv
+++ b/hw/ip/usbdev/rtl/usbdev_linkstate.sv
@@ -130,7 +131,6 @@ module usbdev_linkstate (
         end
 
         LinkPowered: begin
-          monitor_inac = 1;
           if (ev_reset) begin
             link_state_d = LinkActive;
           end else if (ev_bus_inactive) begin

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlOp@@TERNARY to ops
            UPD HdlOp@@TERNARY to TERNARY
                INS list@@ops to TERNARY
                INS HdlValueId@@see_pwr_sense to ops
                INS HdlOp@@OR to ops
                HdlOp: OR
                    list: ops
                        HdlOp: EQ
                            list: ops
                                HdlValueId: link_state_q
                                HdlValueId: LinkPowered
                        HdlOp: EQ
                            list: ops
                                HdlValueId: link_state_q
                                HdlValueId: LinkActive

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            MOV HdlValueInt@@0 to ops
            HdlValueInt: 0

UPD HdlStmCase@@link_state_q to link_state_q
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: monitor_inac
                HdlValueInt: 1
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: monitor_inac
                HdlValueInt: 1


CommitId: e7c1cb51710858bea0e70c2e16f8dca8abafcdf0
[usbdev] Workaround to fix dead loop due to tool issue
--- a/hw/ip/usbdev/rtl/usbdev_linkstate.sv
+++ b/hw/ip/usbdev/rtl/usbdev_linkstate.sv
@@ -149,7 +149,6 @@ module usbdev_linkstate (
 
         // Active (USB spec: Default / Address / Configured)
         LinkActive: begin
-          monitor_inac = 1;
           if (ev_bus_inactive) begin
             link_state_d = LinkSuspend;
           end
ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlOp@@TERNARY to ops
            UPD HdlOp@@TERNARY to TERNARY
                INS list@@ops to TERNARY
                INS HdlValueId@@see_pwr_sense to ops
                INS HdlOp@@OR to ops
                HdlOp: OR
                    list: ops
                        HdlOp: EQ
                            list: ops
                                HdlValueId: link_state_q
                                HdlValueId: LinkPowered
                        HdlOp: EQ
                            list: ops
                                HdlValueId: link_state_q
                                HdlValueId: LinkActive

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            MOV HdlValueInt@@0 to ops
            HdlValueInt: 0

UPD HdlStmCase@@link_state_q to link_state_q
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: monitor_inac
                HdlValueInt: 1
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: monitor_inac
                HdlValueInt: 1


CommitId: 5c323ef52ef42785286da49a3a2919a35dce75d9
[usb] Fix lint errors
--- a/hw/ip/usbuart/rtl/usbuart_core.sv
+++ b/hw/ip/usbuart/rtl/usbuart_core.sv
@@ -63,11 +63,12 @@ module usbuart_core (
   logic          event_tx_watermark, event_rx_watermark, event_tx_overflow, event_rx_overflow;
   logic          event_rx_frame_err, event_rx_break_err, event_rx_timeout, event_rx_parity_err;
   logic          host_lost, host_timeout;
+  logic          unused_usb_pullup;
 
   assign tx_enable        = reg2hw.ctrl.tx.q;
   assign rx_enable        = reg2hw.ctrl.rx.q;
   assign sys_loopback     = reg2hw.ctrl.slpbk.q;
-  assign usb_pullup_o     = tx_enable | rx_enable;
+  assign unused_usb_pullup = tx_enable | rx_enable;
 
 // assign line_loopback    = reg2hw.ctrl.llpbk.q;
 

ParseResult:
INS HdlIdDef@@unused_usb_pullup to objs
HdlIdDef: unused_usb_pullup
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

UPD HdlStmAssign@@ to 
    UPD HdlValueId@@usb_pullup_o to unused_usb_pullup


CommitId: 5c323ef52ef42785286da49a3a2919a35dce75d9
[usb] Fix lint errors
--- a/hw/ip/usbuart/rtl/usbuart_core.sv
+++ b/hw/ip/usbuart/rtl/usbuart_core.sv
@@ -409,9 +411,10 @@ module usbuart_core (
   /////////////////////////////////
   // USB IO Muxing               //
   /////////////////////////////////
+  logic cio_oe;
 
   // Static configuration
-  usbdev_reg_pkg::usbdev_reg2hw_phy_config_reg_t     usb_phy_config;
+  usbdev_reg_pkg::usbdev_reg2hw_phy_config_reg_t usb_phy_config;
   assign usb_phy_config.rx_differential_mode.q   = 1'b0;
   assign usb_phy_config.tx_differential_mode.q   = 1'b0;
   assign usb_phy_config.pinflip.q                = 1'b0;

ParseResult:
MOV HdlStmAssign@@ to objs
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: usb_phy_config

MOV HdlStmAssign@@ to objs
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: usb_phy_config

INS HdlIdDef@@cio_oe to objs
HdlIdDef: cio_oe
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL


CommitId: 5c323ef52ef42785286da49a3a2919a35dce75d9
[usb] Fix lint errors
--- a/hw/ip/usbuart/rtl/usbuart_core.sv
+++ b/hw/ip/usbuart/rtl/usbuart_core.sv
@@ -454,4 +458,7 @@ module usbuart_core (
     .usb_suspend_i          (                        )
   );
 
+  assign cio_usb_dp_o = cio_oe;
+  assign cio_usb_dn_o = cio_oe;
+
 endmodule
ParseResult:
INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlValueId: cio_oe
    HdlValueId: cio_usb_dp_o

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlValueId: cio_oe
    HdlValueId: cio_usb_dn_o


CommitId: 19044edfb0b9485031557705595840bea41fb33d
[prim_secded] Use _i/_o suffix for port names
--- a/hw/ip/prim/rtl/prim_secded_22_16_enc.sv
+++ b/hw/ip/prim/rtl/prim_secded_22_16_enc.sv
@@ -5,18 +5,18 @@
 // SECDED encoder generated by util/design/secded_gen.py
 
 module prim_secded_22_16_enc (
-  input        [15:0] in,
-  output logic [21:0] out
+  input        [15:0] data_i,
+  output logic [21:0] data_o
 );
 
   always_comb begin : p_encode
-    out = 22'(in);
-    out[16] = ^(out & 22'h00496E);
-    out[17] = ^(out & 22'h00F20B);
-    out[18] = ^(out & 22'h008ED8);
-    out[19] = ^(out & 22'h007714);
-    out[20] = ^(out & 22'h00ACA5);
-    out[21] = ^(out & 22'h0011F3);
+    data_o = 22'(data_i);
+    data_o[16] = ^(data_o & 22'h00496E);
+    data_o[17] = ^(data_o & 22'h00F20B);
+    data_o[18] = ^(data_o & 22'h008ED8);
+    data_o[19] = ^(data_o & 22'h007714);
+    data_o[20] = ^(data_o & 22'h00ACA5);
+    data_o[21] = ^(data_o & 22'h0011F3);
   end
 
 endmodule : prim_secded_22_16_enc
ParseResult:
UPD HdlIdDef@@in to data_i

UPD HdlIdDef@@out to data_o

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@out to data_o
            UPD HdlOp@@CALL to CALL
                UPD HdlValueId@@in to data_i
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@INDEX to INDEX
                UPD HdlValueId@@out to data_o
            UPD HdlOp@@XOR_UNARY to XOR_UNARY
                UPD HdlOp@@AND to AND
                    UPD HdlValueId@@out to data_o
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@INDEX to INDEX
                UPD HdlValueId@@out to data_o
            UPD HdlOp@@XOR_UNARY to XOR_UNARY
                UPD HdlOp@@AND to AND
                    UPD HdlValueId@@out to data_o
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@INDEX to INDEX
                UPD HdlValueId@@out to data_o
            UPD HdlOp@@XOR_UNARY to XOR_UNARY
                UPD HdlOp@@AND to AND
                    UPD HdlValueId@@out to data_o
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@INDEX to INDEX
                UPD HdlValueId@@out to data_o
            UPD HdlOp@@XOR_UNARY to XOR_UNARY
                UPD HdlOp@@AND to AND
                    UPD HdlValueId@@out to data_o
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@INDEX to INDEX
                UPD HdlValueId@@out to data_o
            UPD HdlOp@@XOR_UNARY to XOR_UNARY
                UPD HdlOp@@AND to AND
                    UPD HdlValueId@@out to data_o
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@INDEX to INDEX
                UPD HdlValueId@@out to data_o
            UPD HdlOp@@XOR_UNARY to XOR_UNARY
                UPD HdlOp@@AND to AND
                    UPD HdlValueId@@out to data_o


CommitId: 1b5fa9f1ebf0a9520ef6ea6faf1f1a2397a349c1
[verible/style] This corrects several style linter warnings/errors
--- a/hw/ip/tlul/rtl/tlul_assert_multiple.sv
+++ b/hw/ip/tlul/rtl/tlul_assert_multiple.sv
@@ -5,7 +5,7 @@
 // Protocol checker for multiple TL-UL ports
 
 module tlul_assert_multiple #(
-  parameter N = 2,
+  parameter int unsigned N = 2,
   parameter EndpointType = "Device" // can be "Device" or "Host"
 ) (
   input clk_i,
ParseResult:
UPD HdlIdDef@@N to N
    INS HdlOp@@PARAMETRIZATION to N
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: int
            HdlOp: MAP_ASSOCIATION
                list: ops
                    HdlValueId: signed


CommitId: 9e28a059674c4db9097aeec49fb86b186201626f
[DV/DPI] Add logic type to IO declaration
--- a/hw/dv/dpi/spidpi/spidpi.sv
+++ b/hw/dv/dpi/spidpi/spidpi.sv
@@ -14,13 +14,13 @@ module spidpi
   parameter MODE = 0,
   parameter LOG_LEVEL = 9
   )(
-  input  clk_i,
-  input  rst_ni,
-  output spi_device_sck_o,
-  output spi_device_csb_o,
-  output spi_device_mosi_o,
-  input  spi_device_miso_i,
-  input  spi_device_miso_en_i
+  input  logic clk_i,
+  input  logic rst_ni,
+  output logic spi_device_sck_o,
+  output logic spi_device_csb_o,
+  output logic spi_device_mosi_o,
+  input  logic spi_device_miso_i,
+  input  logic spi_device_miso_en_i
 
 );
   import "DPI-C" function
ParseResult:
UPD HdlIdDef@@clk_i to clk_i
    INS HdlOp@@PARAMETRIZATION to clk_i
    UPD HdlOp@@PARAMETRIZATION to PARAMETRIZATION
        INS list@@ops to PARAMETRIZATION

UPD HdlIdDef@@rst_ni to rst_ni
    INS HdlOp@@PARAMETRIZATION to rst_ni
    UPD HdlOp@@PARAMETRIZATION to PARAMETRIZATION
        INS list@@ops to PARAMETRIZATION

UPD HdlIdDef@@spi_device_sck_o to spi_device_sck_o
    INS HdlOp@@PARAMETRIZATION to spi_device_sck_o
    UPD HdlOp@@PARAMETRIZATION to PARAMETRIZATION
        INS list@@ops to PARAMETRIZATION

UPD HdlIdDef@@spi_device_csb_o to spi_device_csb_o
    INS HdlOp@@PARAMETRIZATION to spi_device_csb_o
    UPD HdlOp@@PARAMETRIZATION to PARAMETRIZATION
        INS list@@ops to PARAMETRIZATION

UPD HdlIdDef@@spi_device_mosi_o to spi_device_mosi_o
    INS HdlOp@@PARAMETRIZATION to spi_device_mosi_o
    UPD HdlOp@@PARAMETRIZATION to PARAMETRIZATION
        INS list@@ops to PARAMETRIZATION

UPD HdlIdDef@@spi_device_miso_i to spi_device_miso_i
    INS HdlOp@@PARAMETRIZATION to spi_device_miso_i
    UPD HdlOp@@PARAMETRIZATION to PARAMETRIZATION
        INS list@@ops to PARAMETRIZATION

UPD HdlIdDef@@spi_device_miso_en_i to spi_device_miso_en_i
    INS HdlOp@@PARAMETRIZATION to spi_device_miso_en_i
    UPD HdlOp@@PARAMETRIZATION to PARAMETRIZATION
        INS list@@ops to PARAMETRIZATION

UPD HdlIdDef@@clk_i to clk_i
    UPD HdlValueId@@wire to logic
    MOV HdlValueId@@wire to clk_i
    HdlValueId: wire

UPD HdlIdDef@@rst_ni to rst_ni
    UPD HdlValueId@@wire to logic
    MOV HdlValueId@@wire to rst_ni
    HdlValueId: wire

UPD HdlIdDef@@spi_device_sck_o to spi_device_sck_o
    UPD HdlValueId@@wire to logic
    MOV HdlValueId@@wire to spi_device_sck_o
    HdlValueId: wire

UPD HdlIdDef@@spi_device_csb_o to spi_device_csb_o
    UPD HdlValueId@@wire to logic
    MOV HdlValueId@@wire to spi_device_csb_o
    HdlValueId: wire

UPD HdlIdDef@@spi_device_mosi_o to spi_device_mosi_o
    UPD HdlValueId@@wire to logic
    MOV HdlValueId@@wire to spi_device_mosi_o
    HdlValueId: wire

UPD HdlIdDef@@spi_device_miso_i to spi_device_miso_i
    UPD HdlValueId@@wire to logic
    MOV HdlValueId@@wire to spi_device_miso_i
    HdlValueId: wire

UPD HdlIdDef@@spi_device_miso_en_i to spi_device_miso_en_i
    UPD HdlValueId@@wire to logic
    MOV HdlValueId@@wire to spi_device_miso_en_i
    HdlValueId: wire


CommitId: e38146466c337a0a5c9114e2fa90f7fe98ab93e9
Update lowrisc_ibex to lowRISC/ibex@f30e84b
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_ex_block.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_ex_block.sv
@@ -9,10 +9,9 @@
  * Execution block: Hosts ALU and MUL/DIV unit
  */
 module ibex_ex_block #(
-    parameter bit               RV32M                    = 1,
-    parameter ibex_pkg::rv32b_e RV32B                    = ibex_pkg::RV32BNone,
-    parameter bit               BranchTargetALU          = 0,
-    parameter                   MultiplierImplementation = "fast"
+    parameter ibex_pkg::rv32m_e RV32M           = ibex_pkg::RV32MFast,
+    parameter ibex_pkg::rv32b_e RV32B           = ibex_pkg::RV32BNone,
+    parameter bit               BranchTargetALU = 0
 ) (
     input  logic                  clk_i,
     input  logic                  rst_ni,

ParseResult:
UPD HdlIdDef@@RV32M to RV32M
    INS HdlOp@@DOUBLE_COLON to RV32M
    HdlOp: DOUBLE_COLON
        list: ops
            HdlValueId: ibex_pkg
            HdlValueId: rv32m_e
    UPD HdlOp@@DOUBLE_COLON to DOUBLE_COLON
        INS HdlValueId@@ibex_pkg to ops

UPD HdlIdDef@@RV32M to RV32M
    UPD HdlOp@@PARAMETRIZATION to DOUBLE_COLON
    UPD HdlOp@@PARAMETRIZATION to PARAMETRIZATION
        UPD HdlValueId@@bit to RV32MFast
    DEL HdlValueInt@@1 from RV32M

DEL HdlIdDef@@MultiplierImplementation from params
HdlIdDef: MultiplierImplementation
    HdlDirection: INTERNAL


CommitId: e38146466c337a0a5c9114e2fa90f7fe98ab93e9
Update lowrisc_ibex to lowRISC/ibex@f30e84b
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_ex_block.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_ex_block.sv
@@ -70,11 +69,11 @@ module ibex_ex_block #(
   logic [ 1:0] multdiv_imd_val_we;
 
   /*
-    The multdiv_i output is never selected if RV32M=0
+    The multdiv_i output is never selected if RV32M=RV32MNone
     At synthesis time, all the combinational and sequential logic
     from the multdiv_i module are eliminated
   */
-  if (RV32M) begin : gen_multdiv_m
+  if (RV32M != RV32MNone) begin : gen_multdiv_m
     assign multdiv_sel = mult_sel_i | div_sel_i;
   end else begin : gen_multdiv_no_m
     assign multdiv_sel = 1'b0;

ParseResult:
UPD HdlStmIf@@ to 
    INS HdlOp@@NE to 
    UPD HdlOp@@NE to NE
        INS list@@ops to NE
        INS HdlValueId@@RV32MNone to ops

UPD HdlStmIf@@ to 
    MOV HdlValueId@@RV32M to 
    HdlValueId: RV32M


CommitId: e38146466c337a0a5c9114e2fa90f7fe98ab93e9
Update lowrisc_ibex to lowRISC/ibex@f30e84b
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_ex_block.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_ex_block.sv
@@ -138,7 +137,7 @@ module ibex_ex_block #(
   // Multiplier //
   ////////////////
 
-  if (MultiplierImplementation == "slow") begin : gen_multdiv_slow
+  if (RV32M == RV32MSlow) begin : gen_multdiv_slow
     ibex_multdiv_slow multdiv_i (
         .clk_i              ( clk_i                 ),
         .rst_ni             ( rst_ni                ),

ParseResult:
UPD HdlStmIf@@ to 
    UPD HdlOp@@EQ to EQ
        UPD HdlValueId@@MultiplierImplementation to RV32M
        DEL str@@ from ops
    MOV HdlOp@@EQ to 
    HdlOp: EQ
        list: ops
            HdlValueId: MultiplierImplementation
            str
    UPD HdlOp@@EQ to EQ
        UPD HdlValueId@@MultiplierImplementation to RV32M
        DEL str@@ from ops
    DEL tuple@@ from elifs
    tuple
        HdlOp: EQ
            list: ops
                HdlValueId: MultiplierImplementation
                str
        HdlStmBlock: SEQ
            list: body
                HdlCompInst: ibex_multdiv_fast-multdiv_i
                    list: param_map
                        HdlOp: MAP_ASSOCIATION
                            list: ops
                                HdlValueId: SingleCycleMultiply
                                HdlValueInt: 1
                    list: port_map
                        HdlOp: MAP_ASSOCIATION
                            list: ops
                                HdlValueId: clk_i
                                HdlValueId: clk_i
                        HdlOp: MAP_ASSOCIATION
                            list: ops
                                HdlValueId: rst_ni
                                HdlValueId: rst_ni
                        HdlOp: MAP_ASSOCIATION
                            list: ops
                                HdlValueId: mult_en_i
                                HdlValueId: mult_en_i
                        HdlOp: MAP_ASSOCIATION
                            list: ops
                                HdlValueId: div_en_i
                                HdlValueId: div_en_i
                        HdlOp: MAP_ASSOCIATION
                            list: ops
                                HdlValueId: mult_sel_i
                                HdlValueId: mult_sel_i
                        HdlOp: MAP_ASSOCIATION
                            list: ops
                                HdlValueId: div_sel_i
                                HdlValueId: div_sel_i
                        HdlOp: MAP_ASSOCIATION
                            list: ops
                                HdlValueId: operator_i
                                HdlValueId: multdiv_operator_i
                        HdlOp: MAP_ASSOCIATION
                            list: ops
                                HdlValueId: signed_mode_i
                                HdlValueId: multdiv_signed_mode_i
                        HdlOp: MAP_ASSOCIATION
                            list: ops
                                HdlValueId: op_a_i
                                HdlValueId: multdiv_operand_a_i
                        HdlOp: MAP_ASSOCIATION
                            list: ops
                                HdlValueId: op_b_i
                                HdlValueId: multdiv_operand_b_i
                        HdlOp: MAP_ASSOCIATION
                            list: ops
                                HdlValueId: alu_operand_a_o
                                HdlValueId: multdiv_alu_operand_a
                        HdlOp: MAP_ASSOCIATION
                            list: ops
                                HdlValueId: alu_operand_b_o
                                HdlValueId: multdiv_alu_operand_b
                        HdlOp: MAP_ASSOCIATION
                            list: ops
                                HdlValueId: alu_adder_ext_i
                                HdlValueId: alu_adder_result_ext
                        HdlOp: MAP_ASSOCIATION
                            list: ops
                                HdlValueId: alu_adder_i
                                HdlValueId: alu_adder_result_ex_o
                        HdlOp: MAP_ASSOCIATION
                            list: ops
                                HdlValueId: equal_to_zero_i
                                HdlValueId: alu_is_equal_result
                        HdlOp: MAP_ASSOCIATION
                            list: ops
                                HdlValueId: data_ind_timing_i
                                HdlValueId: data_ind_timing_i
                        HdlOp: MAP_ASSOCIATION
                            list: ops
                                HdlValueId: imd_val_q_i
                                HdlValueId: imd_val_q_i
                        HdlOp: MAP_ASSOCIATION
                            list: ops
                                HdlValueId: imd_val_d_o
                                HdlValueId: multdiv_imd_val_d
                        HdlOp: MAP_ASSOCIATION
                            list: ops
                                HdlValueId: imd_val_we_o
                                HdlValueId: multdiv_imd_val_we
                        HdlOp: MAP_ASSOCIATION
                            list: ops
                                HdlValueId: multdiv_ready_id_i
                                HdlValueId: multdiv_ready_id_i
                        HdlOp: MAP_ASSOCIATION
                            list: ops
                                HdlValueId: valid_o
                                HdlValueId: multdiv_valid
                        HdlOp: MAP_ASSOCIATION
                            list: ops
                                HdlValueId: multdiv_result_o
                                HdlValueId: multdiv_result

UPD HdlStmIf@@ to 
    UPD HdlOp@@EQ to EQ
        INS HdlValueId@@RV32MSlow to ops
    INS HdlOp@@OR_LOG to 
    UPD HdlOp@@OR_LOG to OR_LOG
        INS list@@ops to OR_LOG
        INS HdlOp@@EQ to ops
        HdlOp: EQ
            list: ops
                HdlValueId: RV32M
                HdlValueId: RV32MSingleCycle
        UPD HdlOp@@EQ to EQ
            INS HdlValueId@@RV32MFast to ops


CommitId: 1b5fa9f1ebf0a9520ef6ea6faf1f1a2397a349c1
[verible/style] This corrects several style linter warnings/errors
--- a/hw/ip/usb_fs_nb_pe/rtl/usb_fs_nb_out_pe.sv
+++ b/hw/ip/usb_fs_nb_pe/rtl/usb_fs_nb_out_pe.sv
@@ -12,10 +12,10 @@
 // this version contains no packet buffers
 
 module usb_fs_nb_out_pe #(
-  parameter NumOutEps = 1,
-  parameter MaxOutPktSizeByte = 32,
-  parameter PktW = $clog2(MaxOutPktSizeByte),
-  parameter OutEpW = $clog2(NumOutEps)
+  parameter int unsigned NumOutEps = 1,
+  parameter int unsigned MaxOutPktSizeByte = 32,
+  parameter int unsigned PktW = $clog2(MaxOutPktSizeByte),
+  parameter int unsigned OutEpW = $clog2(NumOutEps)
 ) (
   input  logic                   clk_48mhz_i,
   input  logic                   rst_ni,
ParseResult:
UPD HdlIdDef@@NumOutEps to NumOutEps
    INS HdlOp@@PARAMETRIZATION to NumOutEps
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: int
            HdlOp: MAP_ASSOCIATION
                list: ops
                    HdlValueId: signed

UPD HdlIdDef@@MaxOutPktSizeByte to MaxOutPktSizeByte
    INS HdlOp@@PARAMETRIZATION to MaxOutPktSizeByte
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: int
            HdlOp: MAP_ASSOCIATION
                list: ops
                    HdlValueId: signed

UPD HdlIdDef@@PktW to PktW
    INS HdlOp@@PARAMETRIZATION to PktW
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: int
            HdlOp: MAP_ASSOCIATION
                list: ops
                    HdlValueId: signed

UPD HdlIdDef@@OutEpW to OutEpW
    INS HdlOp@@PARAMETRIZATION to OutEpW
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: int
            HdlOp: MAP_ASSOCIATION
                list: ops
                    HdlValueId: signed


CommitId: 37eec2cbcb02ab1639382d3dbb8ab2bc5b3b904d
[flash_ctrl] Various clean-up and updates
--- a/hw/ip/flash_ctrl/rtl/flash_ctrl_rd.sv
+++ b/hw/ip/flash_ctrl/rtl/flash_ctrl_rd.sv
@@ -13,9 +13,10 @@ module flash_ctrl_rd import flash_ctrl_pkg::*; (
   input                    op_start_i,
   input  [11:0]            op_num_words_i,
   output logic             op_done_o,
-  output logic             op_err_o,
+  flash_ctrl_err_t         op_err_o,
   input [BusAddrW-1:0]     op_addr_i,
   input                    op_addr_oob_i,
+  output logic [BusAddrW-1:0] op_err_addr_o,
 
   // FIFO Interface
   input                    data_rdy_i,

ParseResult:
INS HdlIdDef@@op_err_addr_o to ports
HdlIdDef: op_err_addr_o
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlOp: SUB
                        list: ops
                            HdlValueId: BusAddrW
                            HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: OUT

UPD HdlIdDef@@op_err_o to op_err_o
    UPD HdlOp@@PARAMETRIZATION to PARAMETRIZATION
        UPD HdlValueId@@logic to flash_ctrl_err_t
        MOV HdlValueId@@logic to ops
        HdlValueId: logic
        DEL list@@ops from PARAMETRIZATION
    DEL HdlOp@@PARAMETRIZATION from op_err_o


CommitId: 37eec2cbcb02ab1639382d3dbb8ab2bc5b3b904d
[flash_ctrl] Various clean-up and updates
--- a/hw/ip/flash_ctrl/rtl/flash_ctrl_rd.sv
+++ b/hw/ip/flash_ctrl/rtl/flash_ctrl_rd.sv
@@ -28,7 +29,9 @@ module flash_ctrl_rd import flash_ctrl_pkg::*; (
   output logic             flash_ovfl_o,
   input [BusWidth-1:0]     flash_data_i,
   input                    flash_done_i,
-  input                    flash_error_i
+  input                    flash_phy_err_i,
+  input                    flash_rd_err_i,
+  input                    flash_mp_err_i
 );
 
   typedef enum logic [1:0] {

ParseResult:
INS HdlIdDef@@flash_phy_err_i to ports
HdlIdDef: flash_phy_err_i
    HdlValueId: wire
    HdlDirection: IN

UPD HdlIdDef@@flash_error_i to flash_rd_err_i

INS HdlIdDef@@flash_mp_err_i to ports
HdlIdDef: flash_mp_err_i
    HdlValueId: wire
    HdlDirection: IN


CommitId: 37eec2cbcb02ab1639382d3dbb8ab2bc5b3b904d
[flash_ctrl] Various clean-up and updates
--- a/hw/ip/flash_ctrl/rtl/flash_ctrl_rd.sv
+++ b/hw/ip/flash_ctrl/rtl/flash_ctrl_rd.sv
@@ -117,7 +145,9 @@ module flash_ctrl_rd import flash_ctrl_pkg::*; (
   assign flash_addr_o = int_addr[0 +: BusAddrW];
   assign flash_ovfl_o = int_addr[BusAddrW];
   // if error, return "empty" data
+  assign err_sel = data_wr_o & |op_err_o;
   assign data_o = err_sel ? {BusWidth{1'b1}} : flash_data_i;
+  assign op_err_o = op_err_q | op_err_d;
 
 
 endmodule // flash_ctrl_rd
ParseResult:
INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: AND
        list: ops
            HdlValueId: data_wr_o
            HdlOp: OR_UNARY
                list: ops
                    HdlValueId: op_err_o
    HdlValueId: err_sel

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: OR
        list: ops
            HdlValueId: op_err_q
            HdlValueId: op_err_d
    HdlValueId: op_err_o

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlValueId@@op_err_q to ops

UPD HdlStmIf@@ to 
    INS HdlStmBlock@@SEQ to 
    INS list@@elifs to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: op_err_d
                HdlValueId: flash_rd_err_i
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlValueId@@flash_mp_err_i to ops

UPD HdlStmIf@@ to 
    INS HdlValueId@@cnt_hit to 
    INS HdlStmBlock@@SEQ to 
    INS list@@elifs to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@TERNARY to TERNARY
                INS HdlOp@@OR_UNARY to ops
                UPD HdlOp@@OR_UNARY to OR_UNARY
                    INS list@@ops to OR_UNARY


CommitId: 2b7cd93b0fd33aeefbf2159641b8cd0e1bfdf5e4
[fpv/usbuart] Fix compile error
--- a/hw/ip/usbuart/rtl/usbuart.sv
+++ b/hw/ip/usbuart/rtl/usbuart.sv
@@ -8,8 +8,8 @@
 module usbuart (
   input        clk_i,
   input        rst_ni, // Reset synchronized to clk_i
-  input        clk_48mhz_i,
-  input        rst_usb_ni, // Reset synchronized to clk_48mhz_i
+  input        clk_usb_48mhz_i,
+  input        rst_usb_48mhz_ni, // Reset synchronized to clk_usb_48mhz_i
 
   // Bus Interface
   input        tlul_pkg::tl_h2d_t tl_i,

ParseResult:
UPD HdlIdDef@@clk_48mhz_i to clk_usb_48mhz_i

UPD HdlIdDef@@rst_usb_ni to rst_usb_48mhz_ni


CommitId: 00c3db05169b7dd7abb2ae525fc3197d25862187
[csrng/rtl] correction for AES quiet equation
--- a/hw/ip/csrng/rtl/csrng_block_encrypt.sv
+++ b/hw/ip/csrng/rtl/csrng_block_encrypt.sv
@@ -178,7 +178,7 @@ module csrng_block_encrypt #(
 
   // simple aes cipher activity detector
   assign block_encrypt_quiet_o =
-         (cipher_in_valid == aes_pkg::SP2V_LOW) && (cipher_in_ready == aes_pkg::SP2V_LOW) ||
+         ((cipher_in_valid == aes_pkg::SP2V_LOW) || (cipher_in_ready == aes_pkg::SP2V_LOW)) &&
          (cipher_crypt_busy == aes_pkg::SP2V_LOW);
 
 endmodule
ParseResult:
UPD HdlStmAssign@@ to 
    UPD HdlOp@@OR_LOG to AND_LOG
    UPD HdlOp@@OR_LOG to OR_LOG
        UPD HdlOp@@AND_LOG to OR_LOG


CommitId: 19044edfb0b9485031557705595840bea41fb33d
[prim_secded] Use _i/_o suffix for port names
--- a/hw/ip/prim/rtl/prim_secded_22_16_dec.sv
+++ b/hw/ip/prim/rtl/prim_secded_22_16_dec.sv
@@ -5,8 +5,8 @@
 // SECDED decoder generated by util/design/secded_gen.py
 
 module prim_secded_22_16_dec (
-  input        [21:0] in,
-  output logic [15:0] d_o,
+  input        [21:0] data_i,
+  output logic [15:0] data_o,
   output logic [5:0] syndrome_o,
   output logic [1:0] err_o
 );

ParseResult:
UPD HdlIdDef@@in to data_i

UPD HdlIdDef@@d_o to data_o


CommitId: aace53c2dc257477eacada57382e7422dfda12da
[entropy_src/rtl] fix for dv sanity test
--- a/hw/ip/entropy_src/rtl/entropy_src_adaptp_ht.sv
+++ b/hw/ip/entropy_src/rtl/entropy_src_adaptp_ht.sv
@@ -54,7 +54,11 @@ module entropy_src_adaptp_ht #(
 
 
   // Number of ones per column
-  assign column_cnt = entropy_bit_i[3]+entropy_bit_i[2]+entropy_bit_i[1]+entropy_bit_i[0];
+//  assign column_cnt =  {{RngBusWidth{1'b0}},entropy_bit_i[3]};
+  assign column_cnt =  {{(RngBusWidth-1){1'b0}},entropy_bit_i[3]} +
+                       {{(RngBusWidth-1){1'b0}},entropy_bit_i[2]} +
+                       {{(RngBusWidth-1){1'b0}},entropy_bit_i[1]} +
+                       {{(RngBusWidth-1){1'b0}},entropy_bit_i[0]};
 
   // Window wrap condition
   assign window_cntr_wrap = (window_cntr_q == window_i);
ParseResult:
UPD HdlStmAssign@@ to 
    UPD HdlOp@@ADD to ADD
        INS HdlOp@@CONCAT to ops
        UPD HdlOp@@CONCAT to CONCAT
            INS list@@ops to CONCAT
            INS HdlOp@@REPL_CONCAT to ops
            HdlOp: REPL_CONCAT
                list: ops
                    HdlOp: SUB
                        list: ops
                            HdlValueId: RngBusWidth
                            HdlValueInt: 1
                    HdlValueInt: 0
        UPD HdlOp@@ADD to ADD
            INS HdlOp@@CONCAT to ops
            UPD HdlOp@@CONCAT to CONCAT
                INS list@@ops to CONCAT
                INS HdlOp@@REPL_CONCAT to ops
                HdlOp: REPL_CONCAT
                    list: ops
                        HdlOp: SUB
                            list: ops
                                HdlValueId: RngBusWidth
                                HdlValueInt: 1
                        HdlValueInt: 0
            UPD HdlOp@@ADD to ADD
                INS HdlOp@@CONCAT to ops
                INS HdlOp@@CONCAT to ops
                UPD HdlOp@@CONCAT to CONCAT
                    INS list@@ops to CONCAT
                    INS HdlOp@@REPL_CONCAT to ops
                    HdlOp: REPL_CONCAT
                        list: ops
                            HdlOp: SUB
                                list: ops
                                    HdlValueId: RngBusWidth
                                    HdlValueInt: 1
                            HdlValueInt: 0
                UPD HdlOp@@CONCAT to CONCAT
                    INS list@@ops to CONCAT
                    INS HdlOp@@REPL_CONCAT to ops
                    HdlOp: REPL_CONCAT
                        list: ops
                            HdlOp: SUB
                                list: ops
                                    HdlValueId: RngBusWidth
                                    HdlValueInt: 1
                            HdlValueInt: 0

UPD HdlStmAssign@@ to 
    UPD HdlOp@@ADD to ADD
        MOV HdlOp@@INDEX to ops
        HdlOp: INDEX
            list: ops
                HdlValueId: entropy_bit_i
                HdlValueInt: 0
        UPD HdlOp@@ADD to ADD
            MOV HdlOp@@INDEX to ops
            HdlOp: INDEX
                list: ops
                    HdlValueId: entropy_bit_i
                    HdlValueInt: 1
            UPD HdlOp@@ADD to ADD
                MOV HdlOp@@INDEX to ops
                HdlOp: INDEX
                    list: ops
                        HdlValueId: entropy_bit_i
                        HdlValueInt: 3
                MOV HdlOp@@INDEX to ops
                HdlOp: INDEX
                    list: ops
                        HdlValueId: entropy_bit_i
                        HdlValueInt: 2


CommitId: 66c509296798cdd9dbeba4deeb381d0cecf3b429
[usbdev] Fixes for I/O modes and expand their tests
--- a/hw/ip/usbdev/rtl/usbdev.sv
+++ b/hw/ip/usbdev/rtl/usbdev.sv
@@ -141,13 +141,20 @@ module usbdev (
 
 
   /////////////////////////////////
-  // USB IO after CDC & muxing   //
+  // USB RX after CDC & muxing   //
   /////////////////////////////////
   logic usb_rx_d;
-  logic usb_rx_se0;
+  logic usb_rx_dp;
+  logic usb_rx_dn;
+  /////////////////////////////////
+  // USB TX after CDC & muxing   //
+  /////////////////////////////////
   logic usb_tx_d;
   logic usb_tx_se0;
   logic usb_tx_oe;
+  /////////////////////////////////
+  // USB contol pins after CDC   //
+  /////////////////////////////////
   logic usb_pwr_sense;
   logic usb_pullup_en;
 

ParseResult:
UPD HdlIdDef@@usb_rx_se0 to usb_rx_dp

INS HdlIdDef@@usb_rx_dn to objs
HdlIdDef: usb_rx_dn
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL


CommitId: cabf26f33f6964caba640d9638873d681ba4a6a5
[prim] Restore ability to select default implementation
--- a/hw/ip/prim/abstract/prim_pad_wrapper.sv
+++ b/hw/ip/prim/abstract/prim_pad_wrapper.sv
@@ -5,8 +5,13 @@
 // TODO: This module is a hard-coded stopgap to select an implementation of an
 // "abstract module". This module is to be replaced by generated code.
 
+
+`ifndef PRIM_DEFAULT_IMPL
+  `define PRIM_DEFAULT_IMPL integer'(prim_pkg::ImplGeneric)
+`endif
+
 module prim_pad_wrapper #(
-  parameter              Impl   = "generic",
+  parameter int          Impl   = `PRIM_DEFAULT_IMPL,
   parameter int unsigned AttrDw = 6
 ) (
   inout  wire        inout_io, // bidirectional pad

ParseResult:
UPD HdlModuleDef@@prim_pad_wrapper to prim_pad_wrapper
    INS HdlImport@@ to objs
    HdlImport
        list: path
            HdlValueId: prim_pkg
            HdlAll

UPD HdlIdDef@@Impl to Impl
    INS HdlValueId@@int to Impl
    INS HdlExprNotImplemented@@value to Impl


CommitId: cabf26f33f6964caba640d9638873d681ba4a6a5
[prim] Restore ability to select default implementation
--- a/hw/ip/prim/abstract/prim_pad_wrapper.sv
+++ b/hw/ip/prim/abstract/prim_pad_wrapper.sv
@@ -17,8 +22,10 @@ module prim_pad_wrapper #(
   input [AttrDw-1:0] attr_i
 );
 
+  import prim_pkg::*;
+
   // The generic implementation is NOT synthesizable
-  if (Impl == "generic") begin : gen_pad_generic
+  if (impl_e'(Impl) == ImplGeneric) begin : gen_pad_generic
     prim_generic_pad_wrapper #(
       .AttrDw(AttrDw)
     ) i_pad_wrapper (

ParseResult:
UPD HdlModuleDef@@prim_pad_wrapper to prim_pad_wrapper
    INS HdlImport@@ to objs
    HdlImport
        list: path
            HdlValueId: prim_pkg
            HdlAll

UPD HdlStmIf@@ to 
    UPD HdlOp@@EQ to EQ
        MOV list@@ops to EQ
        list: ops
            HdlValueId: Impl
            str
        DEL str@@ from ops
    UPD HdlOp@@EQ to EQ
        MOV list@@ops to EQ
        list: ops
            HdlValueId: Impl
            str
        DEL str@@ from ops


CommitId: cabf26f33f6964caba640d9638873d681ba4a6a5
[prim] Restore ability to select default implementation
--- a/hw/ip/prim/abstract/prim_pad_wrapper.sv
+++ b/hw/ip/prim/abstract/prim_pad_wrapper.sv
@@ -28,7 +35,7 @@ module prim_pad_wrapper #(
       .oe_i,
       .attr_i
     );
-  end else if (Impl == "xilinx") begin : gen_pad_xilinx
+  end else if (impl_e'(Impl) == ImplXilinx) begin : gen_pad_xilinx
     prim_xilinx_pad_wrapper #(
       .AttrDw(AttrDw)
     ) i_pad_wrapper (
ParseResult:
UPD HdlModuleDef@@prim_pad_wrapper to prim_pad_wrapper
    INS HdlImport@@ to objs
    HdlImport
        list: path
            HdlValueId: prim_pkg
            HdlAll

UPD HdlStmIf@@ to 
    UPD HdlOp@@EQ to EQ
        INS list@@ops to EQ
        INS HdlOp@@CALL to ops
        INS HdlValueId@@ImplGeneric to ops
        UPD HdlOp@@CALL to CALL
            INS HdlValueId@@impl_e to ops
    UPD HdlOp@@EQ to EQ
        INS list@@ops to EQ
        INS HdlOp@@CALL to ops
        INS HdlValueId@@ImplXilinx to ops
        UPD HdlOp@@CALL to CALL
            INS HdlValueId@@impl_e to ops

UPD HdlStmIf@@ to 
    UPD HdlOp@@EQ to EQ
        MOV list@@ops to EQ
        list: ops
            HdlValueId: Impl
            str
        DEL str@@ from ops
    UPD HdlOp@@EQ to EQ
        MOV list@@ops to EQ
        list: ops
            HdlValueId: Impl
            str
        DEL str@@ from ops


CommitId: e4c3605134b6dedbd3b5e5a32ad8f63de5b8a547
[lint] Fix lint warning
--- a/hw/ip/csrng/rtl/csrng_ctr_drbg_upd.sv
+++ b/hw/ip/csrng/rtl/csrng_ctr_drbg_upd.sv
@@ -51,16 +51,16 @@ module csrng_ctr_drbg_upd #(
   output logic [2:0]         ctr_drbg_upd_sfifo_final_err_o
 );
 
-  localparam UpdReqFifoDepth = 1;
-  localparam UpdReqFifoWidth = KeyLen+BlkLen+SeedLen+StateId+Cmd;
-  localparam BlkEncReqFifoDepth = 1;
-  localparam BlkEncReqFifoWidth = KeyLen+BlkLen+StateId+Cmd;
-  localparam BlkEncAckFifoDepth = 1;
-  localparam BlkEncAckFifoWidth = BlkLen+StateId+Cmd;
-  localparam PDataFifoDepth = 1;
-  localparam PDataFifoWidth = SeedLen;
-  localparam FinalFifoDepth = 1;
-  localparam FinalFifoWidth = KeyLen+BlkLen+StateId+Cmd;
+  localparam int unsigned UpdReqFifoDepth = 1;
+  localparam int unsigned UpdReqFifoWidth = KeyLen+BlkLen+SeedLen+StateId+Cmd;
+  localparam int unsigned BlkEncReqFifoDepth = 1;
+  localparam int unsigned BlkEncReqFifoWidth = KeyLen+BlkLen+StateId+Cmd;
+  localparam int unsigned BlkEncAckFifoDepth = 1;
+  localparam int unsigned BlkEncAckFifoWidth = BlkLen+StateId+Cmd;
+  localparam int unsigned PDataFifoDepth = 1;
+  localparam int unsigned PDataFifoWidth = SeedLen;
+  localparam int unsigned FinalFifoDepth = 1;
+  localparam int unsigned FinalFifoWidth = KeyLen+BlkLen+StateId+Cmd;
 
   // signals
   logic [SeedLen-1:0] updated_key_and_v;
ParseResult:
INS HdlIdDef@@UpdReqFifoDepth to objs
HdlIdDef: UpdReqFifoDepth
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: int
            HdlOp: MAP_ASSOCIATION
                list: ops
                    HdlValueId: signed
    HdlValueInt: 1
    HdlDirection: INTERNAL

INS HdlIdDef@@BlkEncReqFifoDepth to objs
HdlIdDef: BlkEncReqFifoDepth
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: int
            HdlOp: MAP_ASSOCIATION
                list: ops
                    HdlValueId: signed
    HdlValueInt: 1
    HdlDirection: INTERNAL

INS HdlIdDef@@BlkEncAckFifoDepth to objs
HdlIdDef: BlkEncAckFifoDepth
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: int
            HdlOp: MAP_ASSOCIATION
                list: ops
                    HdlValueId: signed
    HdlValueInt: 1
    HdlDirection: INTERNAL

INS HdlIdDef@@PDataFifoDepth to objs
HdlIdDef: PDataFifoDepth
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: int
            HdlOp: MAP_ASSOCIATION
                list: ops
                    HdlValueId: signed
    HdlValueInt: 1
    HdlDirection: INTERNAL

INS HdlIdDef@@PDataFifoWidth to objs
HdlIdDef: PDataFifoWidth
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: int
            HdlOp: MAP_ASSOCIATION
                list: ops
                    HdlValueId: signed
    HdlValueId: SeedLen
    HdlDirection: INTERNAL

INS HdlIdDef@@FinalFifoDepth to objs
HdlIdDef: FinalFifoDepth
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: int
            HdlOp: MAP_ASSOCIATION
                list: ops
                    HdlValueId: signed
    HdlValueInt: 1
    HdlDirection: INTERNAL

UPD HdlIdDef@@UpdReqFifoWidth to UpdReqFifoWidth
    INS HdlOp@@PARAMETRIZATION to UpdReqFifoWidth
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: int
            HdlOp: MAP_ASSOCIATION
                list: ops
                    HdlValueId: signed

UPD HdlIdDef@@BlkEncReqFifoWidth to BlkEncReqFifoWidth
    INS HdlOp@@PARAMETRIZATION to BlkEncReqFifoWidth
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: int
            HdlOp: MAP_ASSOCIATION
                list: ops
                    HdlValueId: signed

UPD HdlIdDef@@BlkEncAckFifoWidth to BlkEncAckFifoWidth
    INS HdlOp@@PARAMETRIZATION to BlkEncAckFifoWidth
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: int
            HdlOp: MAP_ASSOCIATION
                list: ops
                    HdlValueId: signed

DEL HdlIdDef@@UpdReqFifoDepth from objs
HdlIdDef: UpdReqFifoDepth
    HdlValueInt: 1
    HdlDirection: INTERNAL

DEL HdlIdDef@@BlkEncReqFifoDepth from objs
HdlIdDef: BlkEncReqFifoDepth
    HdlValueInt: 1
    HdlDirection: INTERNAL

DEL HdlIdDef@@BlkEncAckFifoDepth from objs
HdlIdDef: BlkEncAckFifoDepth
    HdlValueInt: 1
    HdlDirection: INTERNAL

DEL HdlIdDef@@PDataFifoDepth from objs
HdlIdDef: PDataFifoDepth
    HdlValueInt: 1
    HdlDirection: INTERNAL

DEL HdlIdDef@@PDataFifoWidth from objs
HdlIdDef: PDataFifoWidth
    HdlValueId: SeedLen
    HdlDirection: INTERNAL

DEL HdlIdDef@@FinalFifoDepth from objs
HdlIdDef: FinalFifoDepth
    HdlValueInt: 1
    HdlDirection: INTERNAL


CommitId: eef49a584162a29737680efa7101b19c63f8fb88
Update pulp_riscv_dbg to pulp-platform/riscv-dbg@e67a0a7
--- a/hw/vendor/pulp_riscv_dbg/src/dm_csrs.sv
+++ b/hw/vendor/pulp_riscv_dbg/src/dm_csrs.sv
@@ -205,10 +205,18 @@ module dm_csrs #(
   end
 
   // helper variables
+  dm::dm_csr_e dm_csr_addr;
   dm::sbcs_t sbcs;
   dm::dmcontrol_t dmcontrol;
   dm::abstractcs_t a_abstractcs;
-  logic [4:0] autoexecdata_idx;
+  logic [3:0] autoexecdata_idx; // 0 == Data0 ... 11 == Data11
+
+  // Get the data index, i.e. 0 for dm::Data0 up to 11 for dm::Data11
+  assign dm_csr_addr = dm::dm_csr_e'({1'b0, dmi_req_i.addr});
+  // Xilinx Vivado 2020.1 does not allow subtraction of two enums; do the subtraction with logic
+  // types instead.
+  assign autoexecdata_idx = 4'({dm_csr_addr} - {dm::Data0});
+
   always_comb begin : csr_read_write
     // --------------------
     // Static Values (R/O)

ParseResult:
INS HdlIdDef@@dm_csr_addr to objs
HdlIdDef: dm_csr_addr
    HdlOp: DOUBLE_COLON
        list: ops
            HdlValueId: dm
            HdlValueId: dm_csr_e
    HdlDirection: INTERNAL

INS HdlIdDef@@autoexecdata_idx to objs
HdlIdDef: autoexecdata_idx
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 3
                    HdlValueInt: 0
    HdlDirection: INTERNAL

INS HdlStmAssign@@ to objs

INS HdlStmAssign@@ to objs

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@SUB to SUB
                UPD HdlOp@@CALL to SUB
                MOV HdlOp@@CALL to ops
                HdlOp: CALL
                    list: ops
                        HdlValueInt: 5
                        HdlOp: DOUBLE_COLON
                            list: ops
                                HdlValueId: dm
                                HdlValueId: Data0
                UPD HdlOp@@CALL to CALL
                    DEL HdlValueInt@@5 from ops
                DEL HdlOp@@INDEX from ops
                HdlOp: INDEX
                    list: ops
                        HdlOp: DOT
                            list: ops
                                HdlValueId: dmi_req_i
                                HdlValueId: addr
                        HdlOp: DOWNTO
                            list: ops
                                HdlValueInt: 4
                                HdlValueInt: 0
                DEL list@@ops from SUB
            DEL HdlValueId@@autoexecdata_idx from ops
            DEL HdlOp@@SUB from ops
            DEL list@@ops from ASSIGN
        DEL HdlOp@@ASSIGN from body

DEL HdlIdDef@@autoexecdata_idx from objs
HdlIdDef: autoexecdata_idx
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 4
                    HdlValueInt: 0
    HdlDirection: INTERNAL


CommitId: eef49a584162a29737680efa7101b19c63f8fb88
Update pulp_riscv_dbg to pulp-platform/riscv-dbg@e67a0a7
--- a/hw/vendor/pulp_riscv_dbg/src/dm_csrs.sv
+++ b/hw/vendor/pulp_riscv_dbg/src/dm_csrs.sv
@@ -265,7 +273,7 @@ module dm_csrs #(
     sbaddr_d            = 64'(sbaddress_i);
     sbdata_d            = sbdata_q;
 
-    resp_queue_data         = 32'b0;
+    resp_queue_data         = 32'h0;
     cmd_valid_d             = 1'b0;
     sbaddress_write_valid_o = 1'b0;
     sbdata_read_valid_o     = 1'b0;

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@SUB to SUB
                UPD HdlOp@@CALL to SUB
                MOV HdlOp@@CALL to ops
                HdlOp: CALL
                    list: ops
                        HdlValueInt: 5
                        HdlOp: DOUBLE_COLON
                            list: ops
                                HdlValueId: dm
                                HdlValueId: Data0
                UPD HdlOp@@CALL to CALL
                    DEL HdlValueInt@@5 from ops
                DEL HdlOp@@INDEX from ops
                HdlOp: INDEX
                    list: ops
                        HdlOp: DOT
                            list: ops
                                HdlValueId: dmi_req_i
                                HdlValueId: addr
                        HdlOp: DOWNTO
                            list: ops
                                HdlValueInt: 4
                                HdlValueInt: 0
                DEL list@@ops from SUB
            DEL HdlValueId@@autoexecdata_idx from ops
            DEL HdlOp@@SUB from ops
            DEL list@@ops from ASSIGN
        DEL HdlOp@@ASSIGN from body


CommitId: eef49a584162a29737680efa7101b19c63f8fb88
Update pulp_riscv_dbg to pulp-platform/riscv-dbg@e67a0a7
--- a/hw/vendor/pulp_riscv_dbg/src/dm_csrs.sv
+++ b/hw/vendor/pulp_riscv_dbg/src/dm_csrs.sv
@@ -277,21 +285,17 @@ module dm_csrs #(
     dmcontrol    = '0;
     a_abstractcs = '0;
 
-    autoexecdata_idx    = dmi_req_i.addr[4:0] - 5'(dm::Data0);
-
-    // localparam int unsigned DataCountAlign = $clog2(dm::DataCount);
     // reads
     if (dmi_req_ready_o && dmi_req_valid_i && dtm_op == dm::DTM_READ) begin
-      unique case ({1'b0, dmi_req_i.addr}) inside
+      unique case (dm_csr_addr) inside
         [(dm::Data0):DataEnd]: begin
-          // logic [$clog2(dm::DataCount)-1:0] resp_queue_idx;
-          // resp_queue_idx = dmi_req_i.addr[4:0] - int'(dm::Data0);
           resp_queue_data = data_q[$clog2(dm::DataCount)'(autoexecdata_idx)];
           if (!cmdbusy_i) begin
             // check whether we need to re-execute the command (just give a cmd_valid)
-            if (autoexecdata_idx < $bits(abstractauto_q.autoexecdata)) begin
-              cmd_valid_d = abstractauto_q.autoexecdata[autoexecdata_idx];
-            end
+            cmd_valid_d = abstractauto_q.autoexecdata[autoexecdata_idx];
+          // An abstract command was executing while one of the data registers was read
+          end else if (cmderr_q == dm::CmdErrNone) begin
+            cmderr_d = dm::CmdErrBusy;
           end
         end
         dm::DMControl:    resp_queue_data = dmcontrol_q;

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@SUB to SUB
                UPD HdlOp@@CALL to SUB
                MOV HdlOp@@CALL to ops
                HdlOp: CALL
                    list: ops
                        HdlValueInt: 5
                        HdlOp: DOUBLE_COLON
                            list: ops
                                HdlValueId: dm
                                HdlValueId: Data0
                UPD HdlOp@@CALL to CALL
                    DEL HdlValueInt@@5 from ops
                DEL HdlOp@@INDEX from ops
                HdlOp: INDEX
                    list: ops
                        HdlOp: DOT
                            list: ops
                                HdlValueId: dmi_req_i
                                HdlValueId: addr
                        HdlOp: DOWNTO
                            list: ops
                                HdlValueInt: 4
                                HdlValueInt: 0
                DEL list@@ops from SUB
            DEL HdlValueId@@autoexecdata_idx from ops
            DEL HdlOp@@SUB from ops
            DEL list@@ops from ASSIGN
        DEL HdlOp@@ASSIGN from body

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'CONCAT',  'ops': [{'__class__': 'HdlValueInt', 'base': 2, 'bits': 1, 'val': '0'},          {'__class__': 'HdlOp', 'fn': 'DOT', 'ops': ['dmi_req_i', 'addr']}]}  to dm_csr_addr

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'CONCAT',  'ops': [{'__class__': 'HdlValueInt', 'base': 2, 'bits': 1, 'val': '0'},          {'__class__': 'HdlOp', 'fn': 'DOT', 'ops': ['dmi_req_i', 'addr']}]}  to {'__class__': 'HdlOp',  'fn': 'CONCAT',  'ops': [{'__class__': 'HdlValueInt', 'base': 2, 'bits': 1, 'val': '0'},          {'__class__': 'HdlOp', 'fn': 'DOT', 'ops': ['dmi_req_i', 'addr']}]} 
    UPD HdlOp@@CONCAT to CONCAT
        UPD HdlOp@@DOT to DOT
            UPD HdlValueId@@addr to dm_csr_addr
            MOV HdlValueId@@addr to ops
            HdlValueId: addr
            DEL HdlValueId@@dmi_req_i from ops
            DEL list@@ops from DOT
        DEL HdlValueInt@@0 from ops
        DEL HdlOp@@DOT from ops
        DEL list@@ops from CONCAT
    DEL HdlOp@@CONCAT from {'__class__': 'HdlOp',  'fn': 'CONCAT',  'ops': [{'__class__': 'HdlValueInt', 'base': 2, 'bits': 1, 'val': '0'},          {'__class__': 'HdlOp', 'fn': 'DOT', 'ops': ['dmi_req_i', 'addr']}]} 


CommitId: eef49a584162a29737680efa7101b19c63f8fb88
Update pulp_riscv_dbg to pulp-platform/riscv-dbg@e67a0a7
--- a/hw/vendor/pulp_riscv_dbg/src/dm_csrs.sv
+++ b/hw/vendor/pulp_riscv_dbg/src/dm_csrs.sv
@@ -307,6 +311,10 @@ module dm_csrs #(
             // check whether we need to re-execute the command (just give a cmd_valid)
             // range of autoexecprogbuf is 31:16
             cmd_valid_d = abstractauto_q.autoexecprogbuf[{1'b1, dmi_req_i.addr[3:0]}];
+
+          // An abstract command was executing while one of the progbuf registers was read
+          end else if (cmderr_q == dm::CmdErrNone) begin
+            cmderr_d = dm::CmdErrBusy;
           end
         end
         dm::HaltSum0: resp_queue_data = haltsum0;

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@SUB to SUB
                UPD HdlOp@@CALL to SUB
                MOV HdlOp@@CALL to ops
                HdlOp: CALL
                    list: ops
                        HdlValueInt: 5
                        HdlOp: DOUBLE_COLON
                            list: ops
                                HdlValueId: dm
                                HdlValueId: Data0
                UPD HdlOp@@CALL to CALL
                    DEL HdlValueInt@@5 from ops
                DEL HdlOp@@INDEX from ops
                HdlOp: INDEX
                    list: ops
                        HdlOp: DOT
                            list: ops
                                HdlValueId: dmi_req_i
                                HdlValueId: addr
                        HdlOp: DOWNTO
                            list: ops
                                HdlValueInt: 4
                                HdlValueInt: 0
                DEL list@@ops from SUB
            DEL HdlValueId@@autoexecdata_idx from ops
            DEL HdlOp@@SUB from ops
            DEL list@@ops from ASSIGN
        DEL HdlOp@@ASSIGN from body

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'CONCAT',  'ops': [{'__class__': 'HdlValueInt', 'base': 2, 'bits': 1, 'val': '0'},          {'__class__': 'HdlOp', 'fn': 'DOT', 'ops': ['dmi_req_i', 'addr']}]}  to dm_csr_addr

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'CONCAT',  'ops': [{'__class__': 'HdlValueInt', 'base': 2, 'bits': 1, 'val': '0'},          {'__class__': 'HdlOp', 'fn': 'DOT', 'ops': ['dmi_req_i', 'addr']}]}  to {'__class__': 'HdlOp',  'fn': 'CONCAT',  'ops': [{'__class__': 'HdlValueInt', 'base': 2, 'bits': 1, 'val': '0'},          {'__class__': 'HdlOp', 'fn': 'DOT', 'ops': ['dmi_req_i', 'addr']}]} 
    UPD HdlOp@@CONCAT to CONCAT
        UPD HdlOp@@DOT to DOT
            UPD HdlValueId@@addr to dm_csr_addr
            MOV HdlValueId@@addr to ops
            HdlValueId: addr
            DEL HdlValueId@@dmi_req_i from ops
            DEL list@@ops from DOT
        DEL HdlValueInt@@0 from ops
        DEL HdlOp@@DOT from ops
        DEL list@@ops from CONCAT
    DEL HdlOp@@CONCAT from {'__class__': 'HdlOp',  'fn': 'CONCAT',  'ops': [{'__class__': 'HdlValueInt', 'base': 2, 'bits': 1, 'val': '0'},          {'__class__': 'HdlOp', 'fn': 'DOT', 'ops': ['dmi_req_i', 'addr']}]} 


CommitId: eef49a584162a29737680efa7101b19c63f8fb88
Update pulp_riscv_dbg to pulp-platform/riscv-dbg@e67a0a7
--- a/hw/vendor/pulp_riscv_dbg/src/dm_csrs.sv
+++ b/hw/vendor/pulp_riscv_dbg/src/dm_csrs.sv
@@ -317,24 +325,14 @@ module dm_csrs #(
           resp_queue_data = sbcs_q;
         end
         dm::SBAddress0: begin
-          // access while the SBA was busy
-          if (sbbusy_i) begin
-            sbcs_d.sbbusyerror = 1'b1;
-          end else begin
-            resp_queue_data = sbaddr_q[31:0];
-          end
+          resp_queue_data = sbaddr_q[31:0];
         end
         dm::SBAddress1: begin
-          // access while the SBA was busy
-          if (sbbusy_i) begin
-            sbcs_d.sbbusyerror = 1'b1;
-          end else begin
-            resp_queue_data = sbaddr_q[63:32];
-          end
+          resp_queue_data = sbaddr_q[63:32];
         end
         dm::SBData0: begin
           // access while the SBA was busy
-          if (sbbusy_i) begin
+          if (sbbusy_i || sbcs_q.sbbusyerror) begin
             sbcs_d.sbbusyerror = 1'b1;
           end else begin
             sbdata_read_valid_o = (sbcs_q.sberror == '0);

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@SUB to SUB
                UPD HdlOp@@CALL to SUB
                MOV HdlOp@@CALL to ops
                HdlOp: CALL
                    list: ops
                        HdlValueInt: 5
                        HdlOp: DOUBLE_COLON
                            list: ops
                                HdlValueId: dm
                                HdlValueId: Data0
                UPD HdlOp@@CALL to CALL
                    DEL HdlValueInt@@5 from ops
                DEL HdlOp@@INDEX from ops
                HdlOp: INDEX
                    list: ops
                        HdlOp: DOT
                            list: ops
                                HdlValueId: dmi_req_i
                                HdlValueId: addr
                        HdlOp: DOWNTO
                            list: ops
                                HdlValueInt: 4
                                HdlValueInt: 0
                DEL list@@ops from SUB
            DEL HdlValueId@@autoexecdata_idx from ops
            DEL HdlOp@@SUB from ops
            DEL list@@ops from ASSIGN
        DEL HdlOp@@ASSIGN from body

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'CONCAT',  'ops': [{'__class__': 'HdlValueInt', 'base': 2, 'bits': 1, 'val': '0'},          {'__class__': 'HdlOp', 'fn': 'DOT', 'ops': ['dmi_req_i', 'addr']}]}  to dm_csr_addr

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'CONCAT',  'ops': [{'__class__': 'HdlValueInt', 'base': 2, 'bits': 1, 'val': '0'},          {'__class__': 'HdlOp', 'fn': 'DOT', 'ops': ['dmi_req_i', 'addr']}]}  to {'__class__': 'HdlOp',  'fn': 'CONCAT',  'ops': [{'__class__': 'HdlValueInt', 'base': 2, 'bits': 1, 'val': '0'},          {'__class__': 'HdlOp', 'fn': 'DOT', 'ops': ['dmi_req_i', 'addr']}]} 
    UPD HdlOp@@CONCAT to CONCAT
        UPD HdlOp@@DOT to DOT
            UPD HdlValueId@@addr to dm_csr_addr
            MOV HdlValueId@@addr to ops
            HdlValueId: addr
            DEL HdlValueId@@dmi_req_i from ops
            DEL list@@ops from DOT
        DEL HdlValueInt@@0 from ops
        DEL HdlOp@@DOT from ops
        DEL list@@ops from CONCAT
    DEL HdlOp@@CONCAT from {'__class__': 'HdlOp',  'fn': 'CONCAT',  'ops': [{'__class__': 'HdlValueInt', 'base': 2, 'bits': 1, 'val': '0'},          {'__class__': 'HdlOp', 'fn': 'DOT', 'ops': ['dmi_req_i', 'addr']}]} 


CommitId: eef49a584162a29737680efa7101b19c63f8fb88
Update pulp_riscv_dbg to pulp-platform/riscv-dbg@e67a0a7
--- a/hw/vendor/pulp_riscv_dbg/src/dm_csrs.sv
+++ b/hw/vendor/pulp_riscv_dbg/src/dm_csrs.sv
@@ -343,7 +341,7 @@ module dm_csrs #(
         end
         dm::SBData1: begin
           // access while the SBA was busy
-          if (sbbusy_i) begin
+          if (sbbusy_i || sbcs_q.sbbusyerror) begin
             sbcs_d.sbbusyerror = 1'b1;
           end else begin
             resp_queue_data = sbdata_q[63:32];

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@SUB to SUB
                UPD HdlOp@@CALL to SUB
                MOV HdlOp@@CALL to ops
                HdlOp: CALL
                    list: ops
                        HdlValueInt: 5
                        HdlOp: DOUBLE_COLON
                            list: ops
                                HdlValueId: dm
                                HdlValueId: Data0
                UPD HdlOp@@CALL to CALL
                    DEL HdlValueInt@@5 from ops
                DEL HdlOp@@INDEX from ops
                HdlOp: INDEX
                    list: ops
                        HdlOp: DOT
                            list: ops
                                HdlValueId: dmi_req_i
                                HdlValueId: addr
                        HdlOp: DOWNTO
                            list: ops
                                HdlValueInt: 4
                                HdlValueInt: 0
                DEL list@@ops from SUB
            DEL HdlValueId@@autoexecdata_idx from ops
            DEL HdlOp@@SUB from ops
            DEL list@@ops from ASSIGN
        DEL HdlOp@@ASSIGN from body

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'CONCAT',  'ops': [{'__class__': 'HdlValueInt', 'base': 2, 'bits': 1, 'val': '0'},          {'__class__': 'HdlOp', 'fn': 'DOT', 'ops': ['dmi_req_i', 'addr']}]}  to dm_csr_addr

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'CONCAT',  'ops': [{'__class__': 'HdlValueInt', 'base': 2, 'bits': 1, 'val': '0'},          {'__class__': 'HdlOp', 'fn': 'DOT', 'ops': ['dmi_req_i', 'addr']}]}  to {'__class__': 'HdlOp',  'fn': 'CONCAT',  'ops': [{'__class__': 'HdlValueInt', 'base': 2, 'bits': 1, 'val': '0'},          {'__class__': 'HdlOp', 'fn': 'DOT', 'ops': ['dmi_req_i', 'addr']}]} 
    UPD HdlOp@@CONCAT to CONCAT
        UPD HdlOp@@DOT to DOT
            UPD HdlValueId@@addr to dm_csr_addr
            MOV HdlValueId@@addr to ops
            HdlValueId: addr
            DEL HdlValueId@@dmi_req_i from ops
            DEL list@@ops from DOT
        DEL HdlValueInt@@0 from ops
        DEL HdlOp@@DOT from ops
        DEL list@@ops from CONCAT
    DEL HdlOp@@CONCAT from {'__class__': 'HdlOp',  'fn': 'CONCAT',  'ops': [{'__class__': 'HdlValueInt', 'base': 2, 'bits': 1, 'val': '0'},          {'__class__': 'HdlOp', 'fn': 'DOT', 'ops': ['dmi_req_i', 'addr']}]} 


CommitId: eef49a584162a29737680efa7101b19c63f8fb88
Update pulp_riscv_dbg to pulp-platform/riscv-dbg@e67a0a7
--- a/hw/vendor/pulp_riscv_dbg/src/dm_csrs.sv
+++ b/hw/vendor/pulp_riscv_dbg/src/dm_csrs.sv
@@ -355,14 +353,17 @@ module dm_csrs #(
 
     // write
     if (dmi_req_ready_o && dmi_req_valid_i && dtm_op == dm::DTM_WRITE) begin
-      unique case (dm::dm_csr_e'({1'b0, dmi_req_i.addr})) inside
+      unique case (dm_csr_addr) inside
         [(dm::Data0):DataEnd]: begin
-          // attempts to write them while busy is set does not change their value
-          if (!cmdbusy_i && dm::DataCount > 0) begin
-            data_d[dmi_req_i.addr[$clog2(dm::DataCount)-1:0]] = dmi_req_i.data;
-            // check whether we need to re-execute the command (just give a cmd_valid)
-            if (autoexecdata_idx < $bits(abstractauto_q.autoexecdata)) begin
+          if (dm::DataCount > 0) begin
+            // attempts to write them while busy is set does not change their value
+            if (!cmdbusy_i) begin
+              data_d[dmi_req_i.addr[$clog2(dm::DataCount)-1:0]] = dmi_req_i.data;
+              // check whether we need to re-execute the command (just give a cmd_valid)
               cmd_valid_d = abstractauto_q.autoexecdata[autoexecdata_idx];
+            //An abstract command was executing while one of the data registers was written
+            end else if (cmderr_q == dm::CmdErrNone) begin
+              cmderr_d = dm::CmdErrBusy;
             end
           end
         end

ParseResult:
UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'CALL',  'ops': [{'__class__': 'HdlOp',           'fn': 'DOUBLE_COLON',           'ops': ['dm', 'dm_csr_e']},          {'__class__': 'HdlOp',           'fn': 'CONCAT',           'ops': [{'__class__': 'HdlValueInt',                    'base': 2,                    'bits': 1,                    'val': '0'},                   {'__class__': 'HdlOp',                    'fn': 'DOT',                    'ops': ['dmi_req_i', 'addr']}]}]}  to {'__class__': 'HdlOp',  'fn': 'CALL',  'ops': [{'__class__': 'HdlOp',           'fn': 'DOUBLE_COLON',           'ops': ['dm', 'dm_csr_e']},          {'__class__': 'HdlOp',           'fn': 'CONCAT',           'ops': [{'__class__': 'HdlValueInt',                    'base': 2,                    'bits': 1,                    'val': '0'},                   {'__class__': 'HdlOp',                    'fn': 'DOT',                    'ops': ['dmi_req_i', 'addr']}]}]} 
    MOV HdlOp@@CALL to {'__class__': 'HdlOp',  'fn': 'CALL',  'ops': [{'__class__': 'HdlOp',           'fn': 'DOUBLE_COLON',           'ops': ['dm', 'dm_csr_e']},          {'__class__': 'HdlOp',           'fn': 'CONCAT',           'ops': [{'__class__': 'HdlValueInt',                    'base': 2,                    'bits': 1,                    'val': '0'},                   {'__class__': 'HdlOp',                    'fn': 'DOT',                    'ops': ['dmi_req_i', 'addr']}]}]} 
    HdlOp: CALL
        list: ops
            HdlOp: DOUBLE_COLON
                list: ops
                    HdlValueId: dm
                    HdlValueId: dm_csr_e
            HdlOp: CONCAT
                list: ops
                    HdlValueInt: 0
                    HdlOp: DOT
                        list: ops
                            HdlValueId: dmi_req_i
                            HdlValueId: addr

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@SUB to SUB
                UPD HdlOp@@CALL to SUB
                MOV HdlOp@@CALL to ops
                HdlOp: CALL
                    list: ops
                        HdlValueInt: 5
                        HdlOp: DOUBLE_COLON
                            list: ops
                                HdlValueId: dm
                                HdlValueId: Data0
                UPD HdlOp@@CALL to CALL
                    DEL HdlValueInt@@5 from ops
                DEL HdlOp@@INDEX from ops
                HdlOp: INDEX
                    list: ops
                        HdlOp: DOT
                            list: ops
                                HdlValueId: dmi_req_i
                                HdlValueId: addr
                        HdlOp: DOWNTO
                            list: ops
                                HdlValueInt: 4
                                HdlValueInt: 0
                DEL list@@ops from SUB
            DEL HdlValueId@@autoexecdata_idx from ops
            DEL HdlOp@@SUB from ops
            DEL list@@ops from ASSIGN
        DEL HdlOp@@ASSIGN from body

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'CALL',  'ops': [{'__class__': 'HdlOp',           'fn': 'DOUBLE_COLON',           'ops': ['dm', 'dm_csr_e']},          {'__class__': 'HdlOp',           'fn': 'CONCAT',           'ops': [{'__class__': 'HdlValueInt',                    'base': 2,                    'bits': 1,                    'val': '0'},                   {'__class__': 'HdlOp',                    'fn': 'DOT',                    'ops': ['dmi_req_i', 'addr']}]}]}  to dm_csr_addr

UPD HdlStmCase@@dm_csr_addr to dm_csr_addr
    INS HdlValueId@@dm_csr_addr to dm_csr_addr


CommitId: eef49a584162a29737680efa7101b19c63f8fb88
Update pulp_riscv_dbg to pulp-platform/riscv-dbg@e67a0a7
--- a/hw/vendor/pulp_riscv_dbg/src/dm_csrs.sv
+++ b/hw/vendor/pulp_riscv_dbg/src/dm_csrs.sv
@@ -404,7 +405,7 @@ module dm_csrs #(
         dm::AbstractAuto: begin
           // this field can only be written legally when there is no command executing
           if (!cmdbusy_i) begin
-            abstractauto_d                 = 32'b0;
+            abstractauto_d                 = 32'h0;
             abstractauto_d.autoexecdata    = 12'(dmi_req_i.data[dm::DataCount-1:0]);
             abstractauto_d.autoexecprogbuf = 16'(dmi_req_i.data[dm::ProgBufSize-1+16:16]);
           end else if (cmderr_q == dm::CmdErrNone) begin

ParseResult:
UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'CALL',  'ops': [{'__class__': 'HdlOp',           'fn': 'DOUBLE_COLON',           'ops': ['dm', 'dm_csr_e']},          {'__class__': 'HdlOp',           'fn': 'CONCAT',           'ops': [{'__class__': 'HdlValueInt',                    'base': 2,                    'bits': 1,                    'val': '0'},                   {'__class__': 'HdlOp',                    'fn': 'DOT',                    'ops': ['dmi_req_i', 'addr']}]}]}  to {'__class__': 'HdlOp',  'fn': 'CALL',  'ops': [{'__class__': 'HdlOp',           'fn': 'DOUBLE_COLON',           'ops': ['dm', 'dm_csr_e']},          {'__class__': 'HdlOp',           'fn': 'CONCAT',           'ops': [{'__class__': 'HdlValueInt',                    'base': 2,                    'bits': 1,                    'val': '0'},                   {'__class__': 'HdlOp',                    'fn': 'DOT',                    'ops': ['dmi_req_i', 'addr']}]}]} 
    MOV HdlOp@@CALL to {'__class__': 'HdlOp',  'fn': 'CALL',  'ops': [{'__class__': 'HdlOp',           'fn': 'DOUBLE_COLON',           'ops': ['dm', 'dm_csr_e']},          {'__class__': 'HdlOp',           'fn': 'CONCAT',           'ops': [{'__class__': 'HdlValueInt',                    'base': 2,                    'bits': 1,                    'val': '0'},                   {'__class__': 'HdlOp',                    'fn': 'DOT',                    'ops': ['dmi_req_i', 'addr']}]}]} 
    HdlOp: CALL
        list: ops
            HdlOp: DOUBLE_COLON
                list: ops
                    HdlValueId: dm
                    HdlValueId: dm_csr_e
            HdlOp: CONCAT
                list: ops
                    HdlValueInt: 0
                    HdlOp: DOT
                        list: ops
                            HdlValueId: dmi_req_i
                            HdlValueId: addr

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@SUB to SUB
                UPD HdlOp@@CALL to SUB
                MOV HdlOp@@CALL to ops
                HdlOp: CALL
                    list: ops
                        HdlValueInt: 5
                        HdlOp: DOUBLE_COLON
                            list: ops
                                HdlValueId: dm
                                HdlValueId: Data0
                UPD HdlOp@@CALL to CALL
                    DEL HdlValueInt@@5 from ops
                DEL HdlOp@@INDEX from ops
                HdlOp: INDEX
                    list: ops
                        HdlOp: DOT
                            list: ops
                                HdlValueId: dmi_req_i
                                HdlValueId: addr
                        HdlOp: DOWNTO
                            list: ops
                                HdlValueInt: 4
                                HdlValueInt: 0
                DEL list@@ops from SUB
            DEL HdlValueId@@autoexecdata_idx from ops
            DEL HdlOp@@SUB from ops
            DEL list@@ops from ASSIGN
        DEL HdlOp@@ASSIGN from body

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'CALL',  'ops': [{'__class__': 'HdlOp',           'fn': 'DOUBLE_COLON',           'ops': ['dm', 'dm_csr_e']},          {'__class__': 'HdlOp',           'fn': 'CONCAT',           'ops': [{'__class__': 'HdlValueInt',                    'base': 2,                    'bits': 1,                    'val': '0'},                   {'__class__': 'HdlOp',                    'fn': 'DOT',                    'ops': ['dmi_req_i', 'addr']}]}]}  to dm_csr_addr

UPD HdlStmCase@@dm_csr_addr to dm_csr_addr
    INS HdlValueId@@dm_csr_addr to dm_csr_addr


CommitId: eef49a584162a29737680efa7101b19c63f8fb88
Update pulp_riscv_dbg to pulp-platform/riscv-dbg@e67a0a7
--- a/hw/vendor/pulp_riscv_dbg/src/dm_csrs.sv
+++ b/hw/vendor/pulp_riscv_dbg/src/dm_csrs.sv
@@ -420,6 +421,9 @@ module dm_csrs #(
             // was busy
             // range of autoexecprogbuf is 31:16
             cmd_valid_d = abstractauto_q.autoexecprogbuf[{1'b1, dmi_req_i.addr[3:0]}];
+          //An abstract command was executing while one of the progbuf registers was written
+          end else if (cmderr_q == dm::CmdErrNone) begin
+            cmderr_d = dm::CmdErrBusy;
           end
         end
         dm::SBCS: begin

ParseResult:
UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'CALL',  'ops': [{'__class__': 'HdlOp',           'fn': 'DOUBLE_COLON',           'ops': ['dm', 'dm_csr_e']},          {'__class__': 'HdlOp',           'fn': 'CONCAT',           'ops': [{'__class__': 'HdlValueInt',                    'base': 2,                    'bits': 1,                    'val': '0'},                   {'__class__': 'HdlOp',                    'fn': 'DOT',                    'ops': ['dmi_req_i', 'addr']}]}]}  to {'__class__': 'HdlOp',  'fn': 'CALL',  'ops': [{'__class__': 'HdlOp',           'fn': 'DOUBLE_COLON',           'ops': ['dm', 'dm_csr_e']},          {'__class__': 'HdlOp',           'fn': 'CONCAT',           'ops': [{'__class__': 'HdlValueInt',                    'base': 2,                    'bits': 1,                    'val': '0'},                   {'__class__': 'HdlOp',                    'fn': 'DOT',                    'ops': ['dmi_req_i', 'addr']}]}]} 
    MOV HdlOp@@CALL to {'__class__': 'HdlOp',  'fn': 'CALL',  'ops': [{'__class__': 'HdlOp',           'fn': 'DOUBLE_COLON',           'ops': ['dm', 'dm_csr_e']},          {'__class__': 'HdlOp',           'fn': 'CONCAT',           'ops': [{'__class__': 'HdlValueInt',                    'base': 2,                    'bits': 1,                    'val': '0'},                   {'__class__': 'HdlOp',                    'fn': 'DOT',                    'ops': ['dmi_req_i', 'addr']}]}]} 
    HdlOp: CALL
        list: ops
            HdlOp: DOUBLE_COLON
                list: ops
                    HdlValueId: dm
                    HdlValueId: dm_csr_e
            HdlOp: CONCAT
                list: ops
                    HdlValueInt: 0
                    HdlOp: DOT
                        list: ops
                            HdlValueId: dmi_req_i
                            HdlValueId: addr

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@SUB to SUB
                UPD HdlOp@@CALL to SUB
                MOV HdlOp@@CALL to ops
                HdlOp: CALL
                    list: ops
                        HdlValueInt: 5
                        HdlOp: DOUBLE_COLON
                            list: ops
                                HdlValueId: dm
                                HdlValueId: Data0
                UPD HdlOp@@CALL to CALL
                    DEL HdlValueInt@@5 from ops
                DEL HdlOp@@INDEX from ops
                HdlOp: INDEX
                    list: ops
                        HdlOp: DOT
                            list: ops
                                HdlValueId: dmi_req_i
                                HdlValueId: addr
                        HdlOp: DOWNTO
                            list: ops
                                HdlValueInt: 4
                                HdlValueInt: 0
                DEL list@@ops from SUB
            DEL HdlValueId@@autoexecdata_idx from ops
            DEL HdlOp@@SUB from ops
            DEL list@@ops from ASSIGN
        DEL HdlOp@@ASSIGN from body

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'CALL',  'ops': [{'__class__': 'HdlOp',           'fn': 'DOUBLE_COLON',           'ops': ['dm', 'dm_csr_e']},          {'__class__': 'HdlOp',           'fn': 'CONCAT',           'ops': [{'__class__': 'HdlValueInt',                    'base': 2,                    'bits': 1,                    'val': '0'},                   {'__class__': 'HdlOp',                    'fn': 'DOT',                    'ops': ['dmi_req_i', 'addr']}]}]}  to dm_csr_addr

UPD HdlStmCase@@dm_csr_addr to dm_csr_addr
    INS HdlValueId@@dm_csr_addr to dm_csr_addr


CommitId: eef49a584162a29737680efa7101b19c63f8fb88
Update pulp_riscv_dbg to pulp-platform/riscv-dbg@e67a0a7
--- a/hw/vendor/pulp_riscv_dbg/src/dm_csrs.sv
+++ b/hw/vendor/pulp_riscv_dbg/src/dm_csrs.sv
@@ -436,7 +440,7 @@ module dm_csrs #(
         end
         dm::SBAddress0: begin
           // access while the SBA was busy
-          if (sbbusy_i) begin
+          if (sbbusy_i || sbcs_q.sbbusyerror) begin
             sbcs_d.sbbusyerror = 1'b1;
           end else begin
             sbaddr_d[31:0] = dmi_req_i.data;

ParseResult:
UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'CALL',  'ops': [{'__class__': 'HdlOp',           'fn': 'DOUBLE_COLON',           'ops': ['dm', 'dm_csr_e']},          {'__class__': 'HdlOp',           'fn': 'CONCAT',           'ops': [{'__class__': 'HdlValueInt',                    'base': 2,                    'bits': 1,                    'val': '0'},                   {'__class__': 'HdlOp',                    'fn': 'DOT',                    'ops': ['dmi_req_i', 'addr']}]}]}  to {'__class__': 'HdlOp',  'fn': 'CALL',  'ops': [{'__class__': 'HdlOp',           'fn': 'DOUBLE_COLON',           'ops': ['dm', 'dm_csr_e']},          {'__class__': 'HdlOp',           'fn': 'CONCAT',           'ops': [{'__class__': 'HdlValueInt',                    'base': 2,                    'bits': 1,                    'val': '0'},                   {'__class__': 'HdlOp',                    'fn': 'DOT',                    'ops': ['dmi_req_i', 'addr']}]}]} 
    MOV HdlOp@@CALL to {'__class__': 'HdlOp',  'fn': 'CALL',  'ops': [{'__class__': 'HdlOp',           'fn': 'DOUBLE_COLON',           'ops': ['dm', 'dm_csr_e']},          {'__class__': 'HdlOp',           'fn': 'CONCAT',           'ops': [{'__class__': 'HdlValueInt',                    'base': 2,                    'bits': 1,                    'val': '0'},                   {'__class__': 'HdlOp',                    'fn': 'DOT',                    'ops': ['dmi_req_i', 'addr']}]}]} 
    HdlOp: CALL
        list: ops
            HdlOp: DOUBLE_COLON
                list: ops
                    HdlValueId: dm
                    HdlValueId: dm_csr_e
            HdlOp: CONCAT
                list: ops
                    HdlValueInt: 0
                    HdlOp: DOT
                        list: ops
                            HdlValueId: dmi_req_i
                            HdlValueId: addr

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@SUB to SUB
                UPD HdlOp@@CALL to SUB
                MOV HdlOp@@CALL to ops
                HdlOp: CALL
                    list: ops
                        HdlValueInt: 5
                        HdlOp: DOUBLE_COLON
                            list: ops
                                HdlValueId: dm
                                HdlValueId: Data0
                UPD HdlOp@@CALL to CALL
                    DEL HdlValueInt@@5 from ops
                DEL HdlOp@@INDEX from ops
                HdlOp: INDEX
                    list: ops
                        HdlOp: DOT
                            list: ops
                                HdlValueId: dmi_req_i
                                HdlValueId: addr
                        HdlOp: DOWNTO
                            list: ops
                                HdlValueInt: 4
                                HdlValueInt: 0
                DEL list@@ops from SUB
            DEL HdlValueId@@autoexecdata_idx from ops
            DEL HdlOp@@SUB from ops
            DEL list@@ops from ASSIGN
        DEL HdlOp@@ASSIGN from body

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'CALL',  'ops': [{'__class__': 'HdlOp',           'fn': 'DOUBLE_COLON',           'ops': ['dm', 'dm_csr_e']},          {'__class__': 'HdlOp',           'fn': 'CONCAT',           'ops': [{'__class__': 'HdlValueInt',                    'base': 2,                    'bits': 1,                    'val': '0'},                   {'__class__': 'HdlOp',                    'fn': 'DOT',                    'ops': ['dmi_req_i', 'addr']}]}]}  to dm_csr_addr

UPD HdlStmCase@@dm_csr_addr to dm_csr_addr
    INS HdlValueId@@dm_csr_addr to dm_csr_addr


CommitId: eef49a584162a29737680efa7101b19c63f8fb88
Update pulp_riscv_dbg to pulp-platform/riscv-dbg@e67a0a7
--- a/hw/vendor/pulp_riscv_dbg/src/dm_csrs.sv
+++ b/hw/vendor/pulp_riscv_dbg/src/dm_csrs.sv
@@ -445,7 +449,7 @@ module dm_csrs #(
         end
         dm::SBAddress1: begin
           // access while the SBA was busy
-          if (sbbusy_i) begin
+          if (sbbusy_i || sbcs_q.sbbusyerror) begin
             sbcs_d.sbbusyerror = 1'b1;
           end else begin
             sbaddr_d[63:32] = dmi_req_i.data;

ParseResult:
UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'CALL',  'ops': [{'__class__': 'HdlOp',           'fn': 'DOUBLE_COLON',           'ops': ['dm', 'dm_csr_e']},          {'__class__': 'HdlOp',           'fn': 'CONCAT',           'ops': [{'__class__': 'HdlValueInt',                    'base': 2,                    'bits': 1,                    'val': '0'},                   {'__class__': 'HdlOp',                    'fn': 'DOT',                    'ops': ['dmi_req_i', 'addr']}]}]}  to {'__class__': 'HdlOp',  'fn': 'CALL',  'ops': [{'__class__': 'HdlOp',           'fn': 'DOUBLE_COLON',           'ops': ['dm', 'dm_csr_e']},          {'__class__': 'HdlOp',           'fn': 'CONCAT',           'ops': [{'__class__': 'HdlValueInt',                    'base': 2,                    'bits': 1,                    'val': '0'},                   {'__class__': 'HdlOp',                    'fn': 'DOT',                    'ops': ['dmi_req_i', 'addr']}]}]} 
    MOV HdlOp@@CALL to {'__class__': 'HdlOp',  'fn': 'CALL',  'ops': [{'__class__': 'HdlOp',           'fn': 'DOUBLE_COLON',           'ops': ['dm', 'dm_csr_e']},          {'__class__': 'HdlOp',           'fn': 'CONCAT',           'ops': [{'__class__': 'HdlValueInt',                    'base': 2,                    'bits': 1,                    'val': '0'},                   {'__class__': 'HdlOp',                    'fn': 'DOT',                    'ops': ['dmi_req_i', 'addr']}]}]} 
    HdlOp: CALL
        list: ops
            HdlOp: DOUBLE_COLON
                list: ops
                    HdlValueId: dm
                    HdlValueId: dm_csr_e
            HdlOp: CONCAT
                list: ops
                    HdlValueInt: 0
                    HdlOp: DOT
                        list: ops
                            HdlValueId: dmi_req_i
                            HdlValueId: addr

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@SUB to SUB
                UPD HdlOp@@CALL to SUB
                MOV HdlOp@@CALL to ops
                HdlOp: CALL
                    list: ops
                        HdlValueInt: 5
                        HdlOp: DOUBLE_COLON
                            list: ops
                                HdlValueId: dm
                                HdlValueId: Data0
                UPD HdlOp@@CALL to CALL
                    DEL HdlValueInt@@5 from ops
                DEL HdlOp@@INDEX from ops
                HdlOp: INDEX
                    list: ops
                        HdlOp: DOT
                            list: ops
                                HdlValueId: dmi_req_i
                                HdlValueId: addr
                        HdlOp: DOWNTO
                            list: ops
                                HdlValueInt: 4
                                HdlValueInt: 0
                DEL list@@ops from SUB
            DEL HdlValueId@@autoexecdata_idx from ops
            DEL HdlOp@@SUB from ops
            DEL list@@ops from ASSIGN
        DEL HdlOp@@ASSIGN from body

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'CALL',  'ops': [{'__class__': 'HdlOp',           'fn': 'DOUBLE_COLON',           'ops': ['dm', 'dm_csr_e']},          {'__class__': 'HdlOp',           'fn': 'CONCAT',           'ops': [{'__class__': 'HdlValueInt',                    'base': 2,                    'bits': 1,                    'val': '0'},                   {'__class__': 'HdlOp',                    'fn': 'DOT',                    'ops': ['dmi_req_i', 'addr']}]}]}  to dm_csr_addr

UPD HdlStmCase@@dm_csr_addr to dm_csr_addr
    INS HdlValueId@@dm_csr_addr to dm_csr_addr


CommitId: eef49a584162a29737680efa7101b19c63f8fb88
Update pulp_riscv_dbg to pulp-platform/riscv-dbg@e67a0a7
--- a/hw/vendor/pulp_riscv_dbg/src/dm_csrs.sv
+++ b/hw/vendor/pulp_riscv_dbg/src/dm_csrs.sv
@@ -453,7 +457,7 @@ module dm_csrs #(
         end
         dm::SBData0: begin
           // access while the SBA was busy
-          if (sbbusy_i) begin
+          if (sbbusy_i || sbcs_q.sbbusyerror) begin
            sbcs_d.sbbusyerror = 1'b1;
           end else begin
             sbdata_d[31:0] = dmi_req_i.data;

ParseResult:
UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'CALL',  'ops': [{'__class__': 'HdlOp',           'fn': 'DOUBLE_COLON',           'ops': ['dm', 'dm_csr_e']},          {'__class__': 'HdlOp',           'fn': 'CONCAT',           'ops': [{'__class__': 'HdlValueInt',                    'base': 2,                    'bits': 1,                    'val': '0'},                   {'__class__': 'HdlOp',                    'fn': 'DOT',                    'ops': ['dmi_req_i', 'addr']}]}]}  to {'__class__': 'HdlOp',  'fn': 'CALL',  'ops': [{'__class__': 'HdlOp',           'fn': 'DOUBLE_COLON',           'ops': ['dm', 'dm_csr_e']},          {'__class__': 'HdlOp',           'fn': 'CONCAT',           'ops': [{'__class__': 'HdlValueInt',                    'base': 2,                    'bits': 1,                    'val': '0'},                   {'__class__': 'HdlOp',                    'fn': 'DOT',                    'ops': ['dmi_req_i', 'addr']}]}]} 
    MOV HdlOp@@CALL to {'__class__': 'HdlOp',  'fn': 'CALL',  'ops': [{'__class__': 'HdlOp',           'fn': 'DOUBLE_COLON',           'ops': ['dm', 'dm_csr_e']},          {'__class__': 'HdlOp',           'fn': 'CONCAT',           'ops': [{'__class__': 'HdlValueInt',                    'base': 2,                    'bits': 1,                    'val': '0'},                   {'__class__': 'HdlOp',                    'fn': 'DOT',                    'ops': ['dmi_req_i', 'addr']}]}]} 
    HdlOp: CALL
        list: ops
            HdlOp: DOUBLE_COLON
                list: ops
                    HdlValueId: dm
                    HdlValueId: dm_csr_e
            HdlOp: CONCAT
                list: ops
                    HdlValueInt: 0
                    HdlOp: DOT
                        list: ops
                            HdlValueId: dmi_req_i
                            HdlValueId: addr

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@SUB to SUB
                UPD HdlOp@@CALL to SUB
                MOV HdlOp@@CALL to ops
                HdlOp: CALL
                    list: ops
                        HdlValueInt: 5
                        HdlOp: DOUBLE_COLON
                            list: ops
                                HdlValueId: dm
                                HdlValueId: Data0
                UPD HdlOp@@CALL to CALL
                    DEL HdlValueInt@@5 from ops
                DEL HdlOp@@INDEX from ops
                HdlOp: INDEX
                    list: ops
                        HdlOp: DOT
                            list: ops
                                HdlValueId: dmi_req_i
                                HdlValueId: addr
                        HdlOp: DOWNTO
                            list: ops
                                HdlValueInt: 4
                                HdlValueInt: 0
                DEL list@@ops from SUB
            DEL HdlValueId@@autoexecdata_idx from ops
            DEL HdlOp@@SUB from ops
            DEL list@@ops from ASSIGN
        DEL HdlOp@@ASSIGN from body

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'CALL',  'ops': [{'__class__': 'HdlOp',           'fn': 'DOUBLE_COLON',           'ops': ['dm', 'dm_csr_e']},          {'__class__': 'HdlOp',           'fn': 'CONCAT',           'ops': [{'__class__': 'HdlValueInt',                    'base': 2,                    'bits': 1,                    'val': '0'},                   {'__class__': 'HdlOp',                    'fn': 'DOT',                    'ops': ['dmi_req_i', 'addr']}]}]}  to dm_csr_addr

UPD HdlStmCase@@dm_csr_addr to dm_csr_addr
    INS HdlValueId@@dm_csr_addr to dm_csr_addr


CommitId: eef49a584162a29737680efa7101b19c63f8fb88
Update pulp_riscv_dbg to pulp-platform/riscv-dbg@e67a0a7
--- a/hw/vendor/pulp_riscv_dbg/src/dm_csrs.sv
+++ b/hw/vendor/pulp_riscv_dbg/src/dm_csrs.sv
@@ -462,7 +466,7 @@ module dm_csrs #(
         end
         dm::SBData1: begin
           // access while the SBA was busy
-          if (sbbusy_i) begin
+          if (sbbusy_i || sbcs_q.sbbusyerror) begin
            sbcs_d.sbbusyerror = 1'b1;
           end else begin
             sbdata_d[63:32] = dmi_req_i.data;

ParseResult:
UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'CALL',  'ops': [{'__class__': 'HdlOp',           'fn': 'DOUBLE_COLON',           'ops': ['dm', 'dm_csr_e']},          {'__class__': 'HdlOp',           'fn': 'CONCAT',           'ops': [{'__class__': 'HdlValueInt',                    'base': 2,                    'bits': 1,                    'val': '0'},                   {'__class__': 'HdlOp',                    'fn': 'DOT',                    'ops': ['dmi_req_i', 'addr']}]}]}  to {'__class__': 'HdlOp',  'fn': 'CALL',  'ops': [{'__class__': 'HdlOp',           'fn': 'DOUBLE_COLON',           'ops': ['dm', 'dm_csr_e']},          {'__class__': 'HdlOp',           'fn': 'CONCAT',           'ops': [{'__class__': 'HdlValueInt',                    'base': 2,                    'bits': 1,                    'val': '0'},                   {'__class__': 'HdlOp',                    'fn': 'DOT',                    'ops': ['dmi_req_i', 'addr']}]}]} 
    MOV HdlOp@@CALL to {'__class__': 'HdlOp',  'fn': 'CALL',  'ops': [{'__class__': 'HdlOp',           'fn': 'DOUBLE_COLON',           'ops': ['dm', 'dm_csr_e']},          {'__class__': 'HdlOp',           'fn': 'CONCAT',           'ops': [{'__class__': 'HdlValueInt',                    'base': 2,                    'bits': 1,                    'val': '0'},                   {'__class__': 'HdlOp',                    'fn': 'DOT',                    'ops': ['dmi_req_i', 'addr']}]}]} 
    HdlOp: CALL
        list: ops
            HdlOp: DOUBLE_COLON
                list: ops
                    HdlValueId: dm
                    HdlValueId: dm_csr_e
            HdlOp: CONCAT
                list: ops
                    HdlValueInt: 0
                    HdlOp: DOT
                        list: ops
                            HdlValueId: dmi_req_i
                            HdlValueId: addr

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@SUB to SUB
                UPD HdlOp@@CALL to SUB
                MOV HdlOp@@CALL to ops
                HdlOp: CALL
                    list: ops
                        HdlValueInt: 5
                        HdlOp: DOUBLE_COLON
                            list: ops
                                HdlValueId: dm
                                HdlValueId: Data0
                UPD HdlOp@@CALL to CALL
                    DEL HdlValueInt@@5 from ops
                DEL HdlOp@@INDEX from ops
                HdlOp: INDEX
                    list: ops
                        HdlOp: DOT
                            list: ops
                                HdlValueId: dmi_req_i
                                HdlValueId: addr
                        HdlOp: DOWNTO
                            list: ops
                                HdlValueInt: 4
                                HdlValueInt: 0
                DEL list@@ops from SUB
            DEL HdlValueId@@autoexecdata_idx from ops
            DEL HdlOp@@SUB from ops
            DEL list@@ops from ASSIGN
        DEL HdlOp@@ASSIGN from body

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'CALL',  'ops': [{'__class__': 'HdlOp',           'fn': 'DOUBLE_COLON',           'ops': ['dm', 'dm_csr_e']},          {'__class__': 'HdlOp',           'fn': 'CONCAT',           'ops': [{'__class__': 'HdlValueInt',                    'base': 2,                    'bits': 1,                    'val': '0'},                   {'__class__': 'HdlOp',                    'fn': 'DOT',                    'ops': ['dmi_req_i', 'addr']}]}]}  to dm_csr_addr

UPD HdlStmCase@@dm_csr_addr to dm_csr_addr
    INS HdlValueId@@dm_csr_addr to dm_csr_addr


CommitId: eef49a584162a29737680efa7101b19c63f8fb88
Update pulp_riscv_dbg to pulp-platform/riscv-dbg@e67a0a7
--- a/hw/vendor/pulp_riscv_dbg/src/dm_csrs.sv
+++ b/hw/vendor/pulp_riscv_dbg/src/dm_csrs.sv
@@ -532,7 +536,7 @@ module dm_csrs #(
     // default assignment
     haltreq_o = '0;
     resumereq_o = '0;
-    if (selected_hart < (HartSelLen+1)'(NrHarts)) begin
+    if (selected_hart <= HartSelLen'(NrHarts-1)) begin
       haltreq_o[selected_hart]   = dmcontrol_q.haltreq;
       resumereq_o[selected_hart] = dmcontrol_q.resumereq;
     end

ParseResult:
UPD HdlStmIf@@ to 
    UPD HdlOp@@LT to LE
    UPD HdlOp@@LT to LT
        UPD HdlOp@@CALL to CALL
            UPD HdlOp@@ADD to SUB
            UPD HdlOp@@ADD to ADD
                UPD HdlValueId@@HartSelLen to NrHarts
            DEL HdlValueId@@NrHarts from ops


CommitId: e38146466c337a0a5c9114e2fa90f7fe98ab93e9
Update lowrisc_ibex to lowRISC/ibex@f30e84b
--- a/hw/ip/rv_core_ibex/rtl/rv_core_ibex.sv
+++ b/hw/ip/rv_core_ibex/rtl/rv_core_ibex.sv
@@ -9,23 +9,25 @@
  * Instruction and data bus are 32 bit wide TileLink-UL (TL-UL).
  */
 module rv_core_ibex #(
-  parameter bit          PMPEnable                = 1'b0,
-  parameter int unsigned PMPGranularity           = 0,
-  parameter int unsigned PMPNumRegions            = 4,
-  parameter int unsigned MHPMCounterNum           = 8,
-  parameter int unsigned MHPMCounterWidth         = 40,
-  parameter bit          RV32E                    = 0,
-  parameter bit          RV32M                    = 1,
-  parameter bit          BranchTargetALU          = 1,
-  parameter bit          WritebackStage           = 1,
-  parameter              MultiplierImplementation = "single-cycle",
-  parameter bit          ICache                   = 1'b0,
-  parameter bit          ICacheECC                = 1'b0,
-  parameter bit          DbgTriggerEn             = 1'b1,
-  parameter bit          SecureIbex               = 1'b0,
-  parameter int unsigned DmHaltAddr               = 32'h1A110800,
-  parameter int unsigned DmExceptionAddr          = 32'h1A110808,
-  parameter bit          PipeLine                 = 0
+  parameter bit                 PMPEnable         = 1'b0,
+  parameter int unsigned        PMPGranularity    = 0,
+  parameter int unsigned        PMPNumRegions     = 4,
+  parameter int unsigned        MHPMCounterNum    = 8,
+  parameter int unsigned        MHPMCounterWidth  = 40,
+  parameter bit                 RV32E             = 0,
+  parameter ibex_pkg::rv32m_e   RV32M             = ibex_pkg::RV32MSingleCycle,
+  parameter ibex_pkg::rv32b_e   RV32B             = ibex_pkg::RV32BNone,
+  parameter ibex_pkg::regfile_e RegFile           = ibex_pkg::RegFileFF,
+  parameter bit                 BranchTargetALU   = 1'b1,
+  parameter bit                 WritebackStage    = 1'b1,
+  parameter bit                 ICache            = 1'b0,
+  parameter bit                 ICacheECC         = 1'b0,
+  parameter bit                 BranchPredictor   = 1'b0,
+  parameter bit                 DbgTriggerEn      = 1'b1,
+  parameter bit                 SecureIbex        = 1'b0,
+  parameter int unsigned        DmHaltAddr        = 32'h1A110800,
+  parameter int unsigned        DmExceptionAddr   = 32'h1A110808,
+  parameter bit                 PipeLine          = 1'b0
 ) (
   // Clock and Reset
   input  logic        clk_i,

ParseResult:
MOV HdlIdDef@@RV32M to params
HdlIdDef: RV32M
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: bit
    HdlValueInt: 1
    HdlDirection: INTERNAL

INS HdlIdDef@@RV32M to params
HdlIdDef: RV32M
    HdlOp: DOUBLE_COLON
        list: ops
            HdlValueId: ibex_pkg
            HdlValueId: rv32m_e
    HdlOp: DOUBLE_COLON
        list: ops
            HdlValueId: ibex_pkg
            HdlValueId: RV32MSingleCycle
    HdlDirection: INTERNAL

INS HdlIdDef@@RV32B to params
HdlIdDef: RV32B
    HdlOp: DOUBLE_COLON
        list: ops
            HdlValueId: ibex_pkg
            HdlValueId: rv32b_e
    HdlOp: DOUBLE_COLON
        list: ops
            HdlValueId: ibex_pkg
            HdlValueId: RV32BNone
    HdlDirection: INTERNAL

INS HdlIdDef@@RegFile to params
HdlIdDef: RegFile
    HdlOp: DOUBLE_COLON
        list: ops
            HdlValueId: ibex_pkg
            HdlValueId: regfile_e
    HdlOp: DOUBLE_COLON
        list: ops
            HdlValueId: ibex_pkg
            HdlValueId: RegFileFF
    HdlDirection: INTERNAL

UPD HdlIdDef@@RV32M to BranchPredictor

UPD HdlIdDef@@RV32M to RV32M
    UPD HdlValueInt@@1 to 0

DEL HdlIdDef@@MultiplierImplementation from params
HdlIdDef: MultiplierImplementation
    HdlDirection: INTERNAL


CommitId: 2de46f6dd9a3db8d3425364c0b834d63d0b7a3b6
[entropy_src/rtl] fixes to address issue #3511
--- a/hw/ip/entropy_src/rtl/entropy_src_watermark_reg.sv
+++ b/hw/ip/entropy_src/rtl/entropy_src_watermark_reg.sv
@@ -6,7 +6,7 @@
 //
 
 module entropy_src_watermark_reg #(
-  parameter int unsigned RegWidth = 16,
+  parameter int RegWidth = 16,
   parameter bit HighWatermark = 1
 ) (
   input logic                   clk_i,
ParseResult:
UPD HdlIdDef@@RegWidth to RegWidth
    UPD HdlOp@@PARAMETRIZATION to PARAMETRIZATION
        MOV HdlValueId@@int to ops
        HdlValueId: int
        DEL HdlOp@@MAP_ASSOCIATION from ops
        HdlOp: MAP_ASSOCIATION
            list: ops
                HdlValueId: signed
        DEL list@@ops from PARAMETRIZATION
    DEL HdlOp@@PARAMETRIZATION from RegWidth


CommitId: c920c93586a7002360c878a4ace6c82d61947450
[pwm] Minor fixes
--- a/hw/ip/pwm/rtl/pwm_chan.sv
+++ b/hw/ip/pwm/rtl/pwm_chan.sv
@@ -35,8 +35,11 @@ module pwm_chan (
   logic [15:0] blink_ctr_d;
   logic [15:0] duty_cycle_blink;
 
+  logic unused_sum;
+  logic [15:0] blink_sum;
+  assign {unused_sum, blink_sum} = blink_param_x_i + blink_param_y_i + 16'h1;
   assign blink_ctr_d = (!(blink_en_i && !htbt_en_i) || clr_blink_cntr_i) ? 16'h0 :
-                       ((blink_ctr_q == blink_param_x_i + blink_param_y_i + 16'h1) && cycle_end_i)
+                       ((blink_ctr_q == blink_sum[15:0]) && cycle_end_i)
                        ? 16'h0 : (cycle_end_i) ? blink_ctr_q + 16'h1 : blink_ctr_q;
 
   always_ff @(posedge clk_i or negedge rst_ni) begin

ParseResult:
INS HdlIdDef@@unused_sum to objs
HdlIdDef: unused_sum
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

INS HdlStmAssign@@ to objs

UPD HdlStmAssign@@ to 
    UPD HdlOp@@TERNARY to TERNARY
        UPD HdlOp@@TERNARY to TERNARY
            UPD HdlOp@@AND_LOG to AND_LOG
                UPD HdlOp@@EQ to EQ
                    MOV HdlOp@@ADD to ops
                    HdlOp: ADD
                        list: ops
                            HdlOp: ADD
                                list: ops
                                    HdlValueId: blink_param_x_i
                                    HdlValueId: blink_param_y_i
                            HdlValueInt: 1

UPD HdlStmAssign@@ to 
    INS HdlOp@@CONCAT to 
    HdlOp: CONCAT
        list: ops
            HdlValueId: unused_sum
            HdlValueId: blink_sum

UPD HdlStmAssign@@ to 
    UPD HdlOp@@TERNARY to TERNARY
        UPD HdlOp@@TERNARY to TERNARY
            UPD HdlOp@@AND_LOG to AND_LOG
                UPD HdlOp@@EQ to EQ
                    INS HdlOp@@INDEX to ops
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: blink_sum
                            HdlOp: DOWNTO
                                list: ops
                                    HdlValueInt: 15
                                    HdlValueInt: 0


CommitId: c920c93586a7002360c878a4ace6c82d61947450
[pwm] Minor fixes
--- a/hw/ip/pwm/rtl/pwm_chan.sv
+++ b/hw/ip/pwm/rtl/pwm_chan.sv
@@ -112,7 +115,9 @@ module pwm_chan (
   always_ff @(posedge clk_i or negedge rst_ni) begin
     if (!rst_ni) begin
       dc_htbt_q <= '0;
-    end else if (dc_htbt_q != duty_cycle_a_i) begin
+    end else if (!htbt_en_i && dc_htbt_q != duty_cycle_a_i) begin
+      // the heart beat duty cycle is only changed when the heartbeat is not currently
+      // ticking.
       dc_htbt_q <= duty_cycle_a_i;
     end else begin
       dc_htbt_q <= ((htbt_ctr_q == blink_param_x_i) && cycle_end_i) ? dc_htbt_d : dc_htbt_q;

ParseResult:
UPD HdlStmIf@@ to 
    INS HdlOp@@AND_LOG to 
    UPD HdlOp@@AND_LOG to AND_LOG
        INS list@@ops to AND_LOG
        INS HdlOp@@NEG_LOG to ops
        HdlOp: NEG_LOG
            list: ops
                HdlValueId: htbt_en_i

UPD HdlStmIf@@ to 
    MOV HdlOp@@NE to 
    HdlOp: NE
        list: ops
            HdlValueId: dc_htbt_q
            HdlValueId: duty_cycle_a_i


CommitId: c920c93586a7002360c878a4ace6c82d61947450
[pwm] Minor fixes
--- a/hw/ip/pwm/rtl/pwm_chan.sv
+++ b/hw/ip/pwm/rtl/pwm_chan.sv
@@ -123,14 +128,19 @@ module pwm_chan (
   assign duty_cycle_actual = (blink_en_i && !htbt_en_i) ? duty_cycle_blink :
                              (blink_en_i && htbt_en_i) ? duty_cycle_htbt : duty_cycle_a_i;
 
-  logic [15:0] phase_delay_scaled;
-  logic [15:0] duty_cycle_scaled;
+  logic [30:0] phase_delay_scaled;
+  logic [30:0] duty_cycle_scaled;
+  logic [3:0] lshift;
+  logic unused_shift;
 
-  assign phase_delay_scaled = phase_delay_i << (4'd15 - dc_resn_i);
-  assign duty_cycle_scaled = duty_cycle_actual << (4'd15 - dc_resn_i);
+  assign lshift = 4'd15 - dc_resn_i;
+  assign phase_delay_scaled = phase_delay_i << lshift;
+  assign duty_cycle_scaled = duty_cycle_actual << lshift;
+  assign unused_shift = ^phase_delay_scaled | ^duty_cycle_scaled;
 
-  assign on_phase = phase_delay_scaled;
-  assign {phase_wrap, off_phase} = {1'b0, phase_delay_scaled} + {1'b0, duty_cycle_scaled};
+  assign on_phase = phase_delay_scaled[15:0];
+  assign {phase_wrap, off_phase} = {1'b0, phase_delay_scaled[15:0]} +
+                                   {1'b0, duty_cycle_scaled[15:0]};
 
   logic on_phase_exceeded;
   logic off_phase_exceeded;
ParseResult:
MOV HdlIdDef@@phase_delay_scaled to objs
HdlIdDef: phase_delay_scaled
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 15
                    HdlValueInt: 0
    HdlDirection: INTERNAL

UPD HdlIdDef@@phase_delay_scaled to blink_sum

INS HdlIdDef@@phase_delay_scaled to objs
HdlIdDef: phase_delay_scaled
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 30
                    HdlValueInt: 0
    HdlDirection: INTERNAL

INS HdlIdDef@@lshift to objs

INS HdlIdDef@@unused_shift to objs
HdlIdDef: unused_shift
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: SLL
        list: ops
            HdlValueId: phase_delay_i
            HdlValueId: lshift
    HdlValueId: phase_delay_scaled

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: SLL
        list: ops
            HdlValueId: duty_cycle_actual
            HdlValueId: lshift
    HdlValueId: duty_cycle_scaled

UPD HdlIdDef@@lshift to lshift
    INS HdlOp@@PARAMETRIZATION to lshift
    INS HdlDirection@@INTERNAL to lshift
    UPD HdlOp@@PARAMETRIZATION to PARAMETRIZATION
        INS list@@ops to PARAMETRIZATION
        INS HdlOp@@DOWNTO to ops
        HdlOp: DOWNTO
            list: ops
                HdlValueInt: 3
                HdlValueInt: 0

UPD HdlStmAssign@@ to 
    UPD HdlOp@@SLL to SLL
        MOV HdlOp@@SUB to ops
        HdlOp: SUB
            list: ops
                HdlValueInt: 15
                HdlValueId: dc_resn_i
        UPD HdlValueId@@phase_delay_i to logic
        MOV HdlValueId@@phase_delay_i to ops
        HdlValueId: phase_delay_i
        DEL list@@ops from SLL
    UPD HdlValueId@@phase_delay_scaled to lshift
    DEL HdlOp@@SLL from 

UPD HdlStmAssign@@ to 
    UPD HdlOp@@SLL to OR
    UPD HdlValueId@@duty_cycle_scaled to unused_shift
    UPD HdlOp@@SLL to SLL
        UPD HdlOp@@SUB to XOR_UNARY
        UPD HdlValueId@@duty_cycle_actual to phase_delay_scaled
        MOV HdlValueId@@duty_cycle_actual to ops
        HdlValueId: duty_cycle_actual
        UPD HdlOp@@SUB to SUB
            UPD HdlValueId@@dc_resn_i to duty_cycle_scaled
            DEL HdlValueInt@@15 from ops

UPD HdlStmAssign@@ to 
    MOV HdlValueId@@phase_delay_scaled to 
    HdlValueId: phase_delay_scaled

UPD HdlIdDef@@duty_cycle_scaled to duty_cycle_scaled
    UPD HdlOp@@PARAMETRIZATION to PARAMETRIZATION
        UPD HdlOp@@DOWNTO to DOWNTO
            UPD HdlValueInt@@15 to 30

UPD HdlStmIf@@ to 
    INS HdlOp@@AND_LOG to 
    UPD HdlOp@@AND_LOG to AND_LOG
        INS list@@ops to AND_LOG
        INS HdlOp@@NEG_LOG to ops
        HdlOp: NEG_LOG
            list: ops
                HdlValueId: htbt_en_i

UPD HdlStmAssign@@ to 
    UPD HdlOp@@ADD to ADD
        UPD HdlOp@@CONCAT to CONCAT
            MOV HdlValueId@@phase_delay_scaled to ops
            HdlValueId: phase_delay_scaled
        UPD HdlOp@@CONCAT to CONCAT
            MOV HdlValueId@@duty_cycle_scaled to ops
            HdlValueId: duty_cycle_scaled


CommitId: 2d4e25350239222c3e4c942fef3a13515ff8069f
[uart] Condition of Overflow
--- a/hw/ip/uart/rtl/uart_core.sv
+++ b/hw/ip/uart/rtl/uart_core.sv
@@ -346,7 +346,7 @@ module uart_core (
     end
   end
 
-  assign event_rx_overflow  = rx_valid & ~rx_fifo_wready;
+  assign event_rx_overflow  = rx_fifo_wvalid & ~rx_fifo_wready;
   assign event_tx_overflow  = reg2hw.wdata.qe & ~tx_fifo_wready;
   assign event_rx_break_err = break_err && (break_st == BRK_CHK);
 
ParseResult:
UPD HdlStmAssign@@ to 
    UPD HdlOp@@AND to AND
        UPD HdlValueId@@rx_valid to rx_fifo_wvalid


CommitId: be139be85c3a9bfcba7219f4b8413196949b051e
[pwrmgr] Harden pwrmgr FSM / main_pok handling
--- a/hw/top_earlgrey/rtl/autogen/chip_earlgrey_asic.sv
+++ b/hw/top_earlgrey/rtl/autogen/chip_earlgrey_asic.sv
@@ -1061,11 +1061,13 @@ module chip_earlgrey_asic (
   // Top-level design //
   //////////////////////
 
+  logic [rstmgr_pkg::PowerDomains-1:0] por_n;
+  assign por_n = {ast_pwst.main_pok, ast_pwst.aon_pok};
   top_earlgrey #(
     .PinmuxAonTargetCfg(PinmuxTargetCfg)
   ) top_earlgrey (
     // ast connections
-    .por_n_i                      ( ast_pwst.aon_pok           ),
+    .por_n_i                      ( por_n                      ),
     .clk_main_i                   ( ast_base_clks.clk_sys      ),
     .clk_io_i                     ( ast_base_clks.clk_io       ),
     .clk_usb_i                    ( ast_base_clks.clk_usb      ),
ParseResult:
INS HdlIdDef@@por_n to objs
HdlIdDef: por_n
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlOp: SUB
                        list: ops
                            HdlOp: DOUBLE_COLON
                                list: ops
                                    HdlValueId: rstmgr_pkg
                                    HdlValueId: PowerDomains
                            HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: INTERNAL

INS HdlStmAssign@@ to objs

UPD HdlStmAssign@@ to 
    INS HdlValueId@@por_n to 
    UPD HdlOp@@CONCAT to CONCAT
        INS HdlOp@@DOT to ops
        UPD HdlOp@@DOT to DOT
            INS list@@ops to DOT
            INS HdlValueId@@main_pok to ops


CommitId: 71d98f8e4adf0b1ba851ce096ecc10909327156b
[prim] Update fifo behavior during reset
--- a/hw/ip/prim/rtl/prim_fifo_sync.sv
+++ b/hw/ip/prim/rtl/prim_fifo_sync.sv
@@ -56,6 +59,16 @@ module prim_fifo_sync #(
     logic [PTR_WIDTH-1:0] fifo_wptr, fifo_rptr;
     logic                 fifo_incr_wptr, fifo_incr_rptr, fifo_empty;
 
+    // module under reset flag
+    logic under_rst;
+    always_ff @(posedge clk_i or negedge rst_ni) begin
+      if (!rst_ni) begin
+        under_rst <= 1'b1;
+      end else if (under_rst) begin
+        under_rst <= ~under_rst;
+      end
+    end
+
     // create the write and read pointers
     logic  full, empty;
     logic  wptr_msb;

ParseResult:
INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueId: rready_i
    HdlValueId: full_o


CommitId: 71d98f8e4adf0b1ba851ce096ecc10909327156b
[prim] Update fifo behavior during reset
--- a/hw/ip/prim/rtl/prim_fifo_sync.sv
+++ b/hw/ip/prim/rtl/prim_fifo_sync.sv
@@ -71,11 +84,15 @@ module prim_fifo_sync #(
                      (wptr_msb == rptr_msb) ? DepthW'(wptr_value) - DepthW'(rptr_value) :
                      (DepthW'(Depth) - DepthW'(rptr_value) + DepthW'(wptr_value)) ;
 
-    assign fifo_incr_wptr = wvalid_i & wready_o;
-    assign fifo_incr_rptr = rvalid_o & rready_i;
+    assign fifo_incr_wptr = wvalid_i & wready_o & ~under_rst;
+    assign fifo_incr_rptr = rvalid_o & rready_i & ~under_rst;
 
-    assign wready_o = ~full;
-    assign rvalid_o = ~empty;
+    // full and not ready for write are two different concepts.
+    // The latter can be '0' when under reset, while the former is an indication that no more
+    // entries can be written.
+    assign wready_o = ~full & ~under_rst;
+    assign full_o   = full;
+    assign rvalid_o = ~empty & ~under_rst;
 
     always_ff @(posedge clk_i or negedge rst_ni) begin
       if (!rst_ni) begin
ParseResult:
INS HdlIdDef@@under_rst to body
HdlIdDef: under_rst
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

INS HdlStmProcess@@ to body
HdlStmProcess
    list: sensitivity
        HdlOp: RISING
            list: ops
                HdlValueId: clk_i
        HdlOp: FALLING
            list: ops
                HdlValueId: rst_ni
    HdlStmBlock: SEQ
        list: body
            HdlStmIf
                HdlOp: NEG_LOG
                    list: ops
                        HdlValueId: rst_ni
                HdlStmBlock: SEQ
                    list: body
                        HdlStmAssign
                            HdlValueInt: 1
                            HdlValueId: under_rst
                list: elifs
                    tuple
                        HdlValueId: under_rst
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmAssign
                                    HdlOp: NEG
                                        list: ops
                                            HdlValueId: under_rst
                                    HdlValueId: under_rst
    HdlStmProcessTriggerConstrain: FF


CommitId: 9b875061ded24fbfb38b7820e7d680189abeaa0c
Updates to uartdpi.sv
--- a/hw/dv/dpi/uartdpi/uartdpi.sv
+++ b/hw/dv/dpi/uartdpi/uartdpi.sv
@@ -51,6 +52,7 @@ module uartdpi #(
   int  txcount;
   int  txcyccount;
   reg [9:0] txsymbol;
+  reg seen_reset;
 
   always_ff @(negedge clk_i or negedge rst_ni) begin
     if (!rst_ni) begin

ParseResult:
INS HdlIdDef@@seen_reset to objs
HdlIdDef: seen_reset
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
    HdlDirection: INTERNAL


CommitId: 9b875061ded24fbfb38b7820e7d680189abeaa0c
Updates to uartdpi.sv
--- a/hw/dv/dpi/uartdpi/uartdpi.sv
+++ b/hw/dv/dpi/uartdpi/uartdpi.sv
@@ -69,7 +71,7 @@ module uartdpi #(
       end else begin
         txcyccount <= txcyccount + 1;
         tx_o <= txsymbol[txcount];
-        if (txcyccount == CYCLES_PER_SYMBOL) begin
+        if (txcyccount == CYCLES_PER_SYMBOL - 1) begin
           txcyccount <= 0;
           if (txcount == 9)
             txactive <= 0;

ParseResult:
UPD HdlStmIf@@ to 
    UPD HdlOp@@EQ to EQ
        INS HdlOp@@SUB to ops
        UPD HdlOp@@SUB to SUB
            INS list@@ops to SUB
            INS HdlValueInt@@1 to ops

UPD HdlStmIf@@ to 
    UPD HdlOp@@EQ to EQ
        MOV HdlValueId@@CYCLES_PER_SYMBOL to ops
        HdlValueId: CYCLES_PER_SYMBOL


CommitId: 9b875061ded24fbfb38b7820e7d680189abeaa0c
Updates to uartdpi.sv
--- a/hw/dv/dpi/uartdpi/uartdpi.sv
+++ b/hw/dv/dpi/uartdpi/uartdpi.sv
@@ -80,6 +82,12 @@ module uartdpi #(
     end
   end
 
+
+  initial begin
+    // Prevent falling edges of rx_i before reset causing spurious characters
+    seen_reset = 0;
+  end
+
   // RX
   reg rxactive;
   int rxcount;

ParseResult:
INS HdlStmProcess@@ to objs
HdlStmProcess
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: seen_reset
                    HdlValueInt: 0
            HdlStmWait:
                list: val

UPD HdlStmIf@@ to 
    UPD HdlOp@@EQ to EQ
        INS HdlOp@@SUB to ops
        UPD HdlOp@@SUB to SUB
            INS list@@ops to SUB
            INS HdlValueInt@@1 to ops


CommitId: 9b875061ded24fbfb38b7820e7d680189abeaa0c
Updates to uartdpi.sv
--- a/hw/dv/dpi/uartdpi/uartdpi.sv
+++ b/hw/dv/dpi/uartdpi/uartdpi.sv
@@ -91,16 +99,17 @@ module uartdpi #(
 
     if (!rst_ni) begin
       rxactive <= 0;
+      seen_reset <= 1;
     end else begin
       if (!rxactive) begin
-        if (!rx_i) begin
+        if (!rx_i && seen_reset) begin
           rxactive <= 1;
           rxcount <= 0;
           rxcyccount <= 0;
         end
       end else begin
         if (rxcount == 0) begin
-          if (rxcyccount == CYCLES_PER_SYMBOL/2) begin
+          if (rxcyccount == CYCLES_PER_SYMBOL/2 - 1) begin
             if (rx_i) begin
               rxactive <= 0;
             end else begin

ParseResult:
INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueInt: 1
    HdlValueId: seen_reset

UPD HdlStmIf@@ to 
    INS HdlOp@@AND_LOG to 
    UPD HdlOp@@AND_LOG to AND_LOG
        INS list@@ops to AND_LOG
        INS HdlValueId@@seen_reset to ops

UPD HdlStmIf@@ to 
    MOV HdlOp@@NEG_LOG to 
    HdlOp: NEG_LOG
        list: ops
            HdlValueId: rx_i

UPD HdlStmIf@@ to 
    UPD HdlOp@@EQ to EQ
        MOV HdlValueId@@rxcyccount to ops
        HdlValueId: rxcyccount
    UPD HdlOp@@EQ to SUB
    MOV HdlOp@@EQ to 
    HdlOp: EQ
        list: ops
            HdlValueId: rxcyccount
            HdlOp: DIV
                list: ops
                    HdlValueId: CYCLES_PER_SYMBOL
                    HdlValueInt: 2


CommitId: 9b875061ded24fbfb38b7820e7d680189abeaa0c
Updates to uartdpi.sv
--- a/hw/dv/dpi/uartdpi/uartdpi.sv
+++ b/hw/dv/dpi/uartdpi/uartdpi.sv
@@ -109,13 +118,13 @@ module uartdpi #(
             end
           end
         end else if (rxcount <= 8) begin
-          if (rxcyccount == CYCLES_PER_SYMBOL) begin
+          if (rxcyccount == CYCLES_PER_SYMBOL - 1) begin
             rxsymbol[rxcount-1] <= rx_i;
             rxcount <= rxcount + 1;
             rxcyccount <= 0;
           end
         end else begin
-          if (rxcyccount == CYCLES_PER_SYMBOL) begin
+          if (rxcyccount == CYCLES_PER_SYMBOL - 1) begin
             rxactive <= 0;
             if (rx_i) begin
               uartdpi_write(ctx, rxsymbol);
ParseResult:
UPD HdlStmIf@@ to 
    INS HdlOp@@EQ to 
    UPD HdlOp@@EQ to EQ
        INS list@@ops to EQ
        UPD HdlOp@@SUB to SUB
            INS HdlValueInt@@1 to ops

UPD HdlStmIf@@ to 
    UPD HdlOp@@EQ to EQ
        MOV HdlValueId@@rxcyccount to ops
        HdlValueId: rxcyccount
    UPD HdlOp@@EQ to SUB
    MOV HdlOp@@EQ to 
    HdlOp: EQ
        list: ops
            HdlValueId: rxcyccount
            HdlOp: DIV
                list: ops
                    HdlValueId: CYCLES_PER_SYMBOL
                    HdlValueInt: 2

UPD HdlStmIf@@ to 
    UPD HdlOp@@EQ to EQ
        INS HdlOp@@SUB to ops
        UPD HdlOp@@SUB to SUB
            INS list@@ops to SUB
            INS HdlValueInt@@1 to ops

UPD HdlStmIf@@ to 
    UPD HdlOp@@EQ to EQ
        MOV HdlValueId@@CYCLES_PER_SYMBOL to ops
        HdlValueId: CYCLES_PER_SYMBOL

UPD HdlStmIf@@ to 
    UPD HdlOp@@EQ to EQ
        MOV HdlValueId@@CYCLES_PER_SYMBOL to ops
        HdlValueId: CYCLES_PER_SYMBOL


CommitId: 66c509296798cdd9dbeba4deeb381d0cecf3b429
[usbdev] Fixes for I/O modes and expand their tests
--- a/hw/ip/usbdev/rtl/usbdev_iomux.sv
+++ b/hw/ip/usbdev/rtl/usbdev_iomux.sv
@@ -40,12 +40,11 @@ module usbdev_iomux
 
   // Internal USB Interface (usb clk)
   output logic                          usb_rx_d_o,
-  output logic                          usb_rx_se0_o,
-
+  output logic                          usb_rx_dp_o,
+  output logic                          usb_rx_dn_o,
   input  logic                          usb_tx_d_i,
   input  logic                          usb_tx_se0_i,
   input  logic                          usb_tx_oe_i,
-
   output logic                          usb_pwr_sense_o,
   input  logic                          usb_pullup_en_i,
   input  logic                          usb_suspend_i

ParseResult:
UPD HdlIdDef@@usb_rx_se0_o to usb_rx_dn_o


CommitId: 66c509296798cdd9dbeba4deeb381d0cecf3b429
[usbdev] Fixes for I/O modes and expand their tests
--- a/hw/ip/usbdev/rtl/usbdev_iomux.sv
+++ b/hw/ip/usbdev/rtl/usbdev_iomux.sv
@@ -53,15 +52,16 @@ module usbdev_iomux
 
   logic async_pwr_sense, sys_usb_sense;
   logic cio_usb_dp, cio_usb_dn, cio_usb_d;
-  logic usb_rx_dp, usb_rx_dn, usb_rx_d;
   logic pinflip;
   logic unused_eop_single_bit;
+  logic unused_rx_differential_mode;
   logic unused_usb_ref_disable;
   logic unused_tx_osc_test_mode;
 
-  assign unused_eop_single_bit   = sys_reg2hw_config_i.eop_single_bit.q;
-  assign unused_usb_ref_disable  = sys_reg2hw_config_i.usb_ref_disable.q;
-  assign unused_tx_osc_test_mode = sys_reg2hw_config_i.tx_osc_test_mode.q;
+  assign unused_eop_single_bit       = sys_reg2hw_config_i.eop_single_bit.q;
+  assign unused_usb_ref_disable      = sys_reg2hw_config_i.usb_ref_disable.q;
+  assign unused_tx_osc_test_mode     = sys_reg2hw_config_i.tx_osc_test_mode.q;
+  assign unused_rx_differential_mode = sys_reg2hw_config_i.rx_differential_mode.q;
 
   //////////
   // CDCs //

ParseResult:
MOV HdlIdDef@@usb_rx_d to objs
HdlIdDef: usb_rx_d
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

UPD HdlIdDef@@usb_rx_d to unused_rx_differential_mode

INS HdlStmAssign@@ to objs

UPD HdlIdDef@@usb_rx_dn to usb_rx_dp_o

MOV HdlIdDef@@usb_rx_dn to objs
HdlIdDef: usb_rx_dn
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

UPD HdlIdDef@@usb_rx_dn to usb_rx_dn
    UPD HdlDirection@@INTERNAL to OUT

DEL HdlIdDef@@usb_rx_dp from objs
HdlIdDef: usb_rx_dp
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL


CommitId: 41d4fa5fbd7f5d3fafa6aac85a9f027a7004d684
[hw, rv_core_ibex] Enable hardware breakpoints
--- a/hw/ip/rv_core_ibex/rtl/rv_core_ibex.sv
+++ b/hw/ip/rv_core_ibex/rtl/rv_core_ibex.sv
@@ -16,6 +16,7 @@ module rv_core_ibex #(
   parameter int unsigned MHPMCounterWidth = 40,
   parameter bit          RV32E            = 0,
   parameter bit          RV32M            = 1,
+  parameter bit          DbgTriggerEn     = 1'b1,
   parameter int unsigned DmHaltAddr       = 32'h1A110800,
   parameter int unsigned DmExceptionAddr  = 32'h1A110808,
   parameter bit          PipeLine         = 0

ParseResult:
INS HdlIdDef@@DbgTriggerEn to params
HdlIdDef: DbgTriggerEn
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: bit
    HdlValueInt: 1
    HdlDirection: INTERNAL


CommitId: 03f1af66a5f73f1fdc23bc41864f1e9d5f6502bb
[top] Various top related fixes
--- a/hw/top_englishbreakfast/rtl/top_englishbreakfast_cw305.sv
+++ b/hw/top_englishbreakfast/rtl/top_englishbreakfast_cw305.sv
@@ -309,7 +309,7 @@ module top_englishbreakfast_cw305 #(
       // To obtain a more precise capture trigger for side-channel analysis, we only forward the
       // software-controlled capture trigger when the AES module is actually busy (performing
       // either encryption/decryption or clearing internal registers).
-      assign mio_out[i] = mio_out_core[i] & ~top_englishbreakfast.clkmgr_idle[clkmgr_pkg::Aes];
+      assign mio_out[i] = mio_out_core[i] & ~top_englishbreakfast.clkmgr_aon_idle[clkmgr_pkg::Aes];
     end else begin
       assign mio_out[i] = mio_out_core[i];
     end
ParseResult:
UPD HdlStmAssign@@ to 
    UPD HdlOp@@AND to AND
        UPD HdlOp@@NEG to NEG
            UPD HdlOp@@INDEX to INDEX
                UPD HdlOp@@DOT to DOT
                    UPD HdlValueId@@clkmgr_idle to clkmgr_aon_idle


CommitId: cea5b53e94c5d570e679e2ec72522fd2e8a4ee68
[csrng/rtl] bug fix for cmds with additional data
--- a/hw/ip/csrng/rtl/csrng_main_sm.sv
+++ b/hw/ip/csrng/rtl/csrng_main_sm.sv
@@ -94,6 +98,7 @@ module csrng_main_sm import csrng_pkg::*; (
     generate_req_o = 1'b0;
     update_req_o = 1'b0;
     uninstant_req_o = 1'b0;
+    clr_adata_packer_o = 1'b0;
     main_sm_err_o = 1'b0;
     unique case (state_q)
       Idle: begin

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: clr_adata_packer_o
                HdlValueInt: 0


CommitId: cea5b53e94c5d570e679e2ec72522fd2e8a4ee68
[csrng/rtl] bug fix for cmds with additional data
--- a/hw/ip/csrng/rtl/csrng_main_sm.sv
+++ b/hw/ip/csrng/rtl/csrng_main_sm.sv
@@ -121,16 +126,20 @@ module csrng_main_sm import csrng_pkg::*; (
                 state_d = ReseedPrep;
               end
             end else if (acmd_i == GEN) begin
-              acmd_hdr_capt_o = 1'b1;
-              state_d = GenerateReq;
+              if (acmd_eop_i) begin
+                acmd_hdr_capt_o = 1'b1;
+                state_d = GeneratePrep;
+              end
             end else if (acmd_i == UPD) begin
               if (acmd_eop_i) begin
                 acmd_hdr_capt_o = 1'b1;
                 state_d = UpdatePrep;
               end
             end else if (acmd_i == UNI) begin
-              acmd_hdr_capt_o = 1'b1;
-              state_d = UninstantReq;
+              if (acmd_eop_i) begin
+                acmd_hdr_capt_o = 1'b1;
+                state_d = UninstantPrep;
+              end
             end
           end
         end

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: clr_adata_packer_o
                HdlValueInt: 0

UPD HdlStmCase@@state_q to state_q
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS HdlValueId@@GeneratePrep to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@UninstantPrep to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@ClrAData to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmIf@@ to 
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: acmd_hdr_capt_o
                    HdlValueInt: 1
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: state_d
                    HdlValueId: GenerateReq
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: acmd_hdr_capt_o
                    HdlValueInt: 1
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: state_d
                    HdlValueId: UninstantReq
    UPD HdlStmBlock@@SEQ to SEQ
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: acmd_hdr_capt_o
                HdlValueInt: 1
    UPD HdlStmBlock@@SEQ to SEQ
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: acmd_hdr_capt_o
                HdlValueInt: 1

UPD HdlStmIf@@ to 
    INS HdlStmBlock@@SEQ to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

INS HdlStmIf@@ to body

INS HdlStmIf@@ to body

UPD HdlStmIf@@ to 
    INS HdlValueId@@acmd_eop_i to 
    INS HdlStmBlock@@SEQ to 
    INS list@@elifs to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: state_d
                HdlValueId: GeneratePrep


CommitId: cea5b53e94c5d570e679e2ec72522fd2e8a4ee68
[csrng/rtl] bug fix for cmds with additional data
--- a/hw/ip/csrng/rtl/csrng_main_sm.sv
+++ b/hw/ip/csrng/rtl/csrng_main_sm.sv
@@ -156,7 +165,7 @@ module csrng_main_sm import csrng_pkg::*; (
           state_d = Idle;
         end else begin
           instant_req_o = 1'b1;
-          state_d = CmdCompWait;
+          state_d = ClrAData;
         end
       end
       ReseedPrep: begin

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: clr_adata_packer_o
                HdlValueInt: 0

UPD HdlStmCase@@state_q to state_q
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS HdlValueId@@GeneratePrep to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@UninstantPrep to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@ClrAData to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@CmdCompWait to ClrAData


CommitId: cea5b53e94c5d570e679e2ec72522fd2e8a4ee68
[csrng/rtl] bug fix for cmds with additional data
--- a/hw/ip/csrng/rtl/csrng_main_sm.sv
+++ b/hw/ip/csrng/rtl/csrng_main_sm.sv
@@ -175,7 +184,15 @@ module csrng_main_sm import csrng_pkg::*; (
           state_d = Idle;
         end else begin
           reseed_req_o = 1'b1;
-          state_d = CmdCompWait;
+          state_d = ClrAData;
+        end
+      end
+      GeneratePrep: begin
+        if (!enable_i) begin
+          state_d = Idle;
+        end else begin
+          // assumes all adata is present now
+          state_d = GenerateReq;
         end
       end
       GenerateReq: begin

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: clr_adata_packer_o
                HdlValueInt: 0

UPD HdlStmCase@@state_q to state_q
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS HdlValueId@@GeneratePrep to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@UninstantPrep to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@ClrAData to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

INS HdlStmIf@@ to body

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@CmdCompWait to ClrAData


CommitId: cea5b53e94c5d570e679e2ec72522fd2e8a4ee68
[csrng/rtl] bug fix for cmds with additional data
--- a/hw/ip/csrng/rtl/csrng_main_sm.sv
+++ b/hw/ip/csrng/rtl/csrng_main_sm.sv
@@ -183,7 +200,7 @@ module csrng_main_sm import csrng_pkg::*; (
           state_d = Idle;
         end else begin
           generate_req_o = 1'b1;
-          state_d = CmdCompWait;
+          state_d = ClrAData;
         end
       end
       UpdatePrep: begin

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: clr_adata_packer_o
                HdlValueInt: 0

UPD HdlStmCase@@state_q to state_q
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS HdlValueId@@GeneratePrep to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@UninstantPrep to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@ClrAData to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@CmdCompWait to ClrAData


CommitId: cea5b53e94c5d570e679e2ec72522fd2e8a4ee68
[csrng/rtl] bug fix for cmds with additional data
--- a/hw/ip/csrng/rtl/csrng_main_sm.sv
+++ b/hw/ip/csrng/rtl/csrng_main_sm.sv
@@ -199,7 +216,15 @@ module csrng_main_sm import csrng_pkg::*; (
           state_d = Idle;
         end else begin
           update_req_o = 1'b1;
-          state_d = CmdCompWait;
+          state_d = ClrAData;
+        end
+      end
+      UninstantPrep: begin
+        if (!enable_i) begin
+          state_d = Idle;
+        end else begin
+          // assumes all adata is present now
+          state_d = UninstantReq;
         end
       end
       UninstantReq: begin

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: clr_adata_packer_o
                HdlValueInt: 0

UPD HdlStmCase@@state_q to state_q
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS HdlValueId@@GeneratePrep to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@UninstantPrep to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@ClrAData to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

INS HdlStmIf@@ to body

UPD HdlStmIf@@ to 
    INS HdlOp@@NEG_LOG to 
    HdlOp: NEG_LOG
        list: ops
            HdlValueId: enable_i
    INS HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: state_d
                    HdlValueId: Idle
    INS list@@elifs to 

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@CmdCompWait to ClrAData


CommitId: cea5b53e94c5d570e679e2ec72522fd2e8a4ee68
[csrng/rtl] bug fix for cmds with additional data
--- a/hw/ip/csrng/rtl/csrng_main_sm.sv
+++ b/hw/ip/csrng/rtl/csrng_main_sm.sv
@@ -207,6 +232,14 @@ module csrng_main_sm import csrng_pkg::*; (
           state_d = Idle;
         end else begin
           uninstant_req_o = 1'b1;
+          state_d = ClrAData;
+        end
+      end
+      ClrAData: begin
+        if (!enable_i) begin
+          state_d = Idle;
+        end else begin
+          clr_adata_packer_o = 1'b1;
           state_d = CmdCompWait;
         end
       end
ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: clr_adata_packer_o
                HdlValueInt: 0

UPD HdlStmCase@@state_q to state_q
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS HdlValueId@@GeneratePrep to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@UninstantPrep to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@ClrAData to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

INS HdlStmIf@@ to body

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: state_d
                HdlValueId: CmdCompWait


CommitId: 1b5fa9f1ebf0a9520ef6ea6faf1f1a2397a349c1
[verible/style] This corrects several style linter warnings/errors
--- a/hw/ip/usb_fs_nb_pe/rtl/usb_fs_nb_in_pe.sv
+++ b/hw/ip/usb_fs_nb_pe/rtl/usb_fs_nb_in_pe.sv
@@ -12,9 +12,9 @@
 
 module usb_fs_nb_in_pe #(
   parameter logic [4:0] NumInEps = 11,
-  parameter MaxInPktSizeByte = 32,
-  parameter PktW = $clog2(MaxInPktSizeByte),
-  parameter InEpW = $clog2(NumInEps)
+  parameter int unsigned MaxInPktSizeByte = 32,
+  parameter int unsigned PktW = $clog2(MaxInPktSizeByte),
+  parameter int unsigned InEpW = $clog2(NumInEps)
 ) (
   input  logic               clk_48mhz_i,
   input  logic               rst_ni,

ParseResult:
UPD HdlIdDef@@MaxInPktSizeByte to MaxInPktSizeByte
    INS HdlOp@@PARAMETRIZATION to MaxInPktSizeByte
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: int
            HdlOp: MAP_ASSOCIATION
                list: ops
                    HdlValueId: signed

UPD HdlIdDef@@PktW to PktW
    INS HdlOp@@PARAMETRIZATION to PktW
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: int
            HdlOp: MAP_ASSOCIATION
                list: ops
                    HdlValueId: signed

UPD HdlIdDef@@InEpW to InEpW
    INS HdlOp@@PARAMETRIZATION to InEpW
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: int
            HdlOp: MAP_ASSOCIATION
                list: ops
                    HdlValueId: signed


CommitId: 049c6b2b38767285d7884d728961889c9ea9be9a
[adc_ctrl] Various preparation steps for d2
--- a/hw/ip/adc_ctrl/rtl/adc_ctrl_core.sv
+++ b/hw/ip/adc_ctrl/rtl/adc_ctrl_core.sv
@@ -40,12 +40,12 @@ module adc_ctrl_core import adc_ctrl_reg_pkg::* ; (
   logic cfg_adc_enable;
   logic cfg_oneshot_mode;
   logic cfg_lp_mode;
-  logic load_pwrup_time, load_wakeup_time;
+  logic load_adc_ctl;
   logic load_lp_sample_cnt, load_np_sample_cnt;
-  logic [3:0] cfg_pwrup_time, cfg_pwrup_time_d;
-  logic [23:0] cfg_wakeup_time, cfg_wakeup_time_d;
-  logic [7:0] cfg_lp_sample_cnt, cfg_lp_sample_cnt_d;
-  logic [15:0] cfg_np_sample_cnt, cfg_np_sample_cnt_d;
+  logic [3:0] cfg_pwrup_time;
+  logic [23:0] cfg_wakeup_time;
+  logic [7:0] cfg_lp_sample_cnt;
+  logic [15:0] cfg_np_sample_cnt;
   logic cfg_fsm_rst;
 
   //There are eight filters

ParseResult:
UPD HdlIdDef@@load_wakeup_time to load_adc_ctl

DEL HdlIdDef@@load_pwrup_time from objs
HdlIdDef: load_pwrup_time
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

DEL HdlIdDef@@cfg_pwrup_time_d from objs
HdlIdDef: cfg_pwrup_time_d
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 3
                    HdlValueInt: 0
    HdlDirection: INTERNAL

DEL HdlIdDef@@cfg_wakeup_time_d from objs
HdlIdDef: cfg_wakeup_time_d
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 23
                    HdlValueInt: 0
    HdlDirection: INTERNAL

DEL HdlIdDef@@cfg_lp_sample_cnt_d from objs
HdlIdDef: cfg_lp_sample_cnt_d
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 7
                    HdlValueInt: 0
    HdlDirection: INTERNAL

DEL HdlIdDef@@cfg_np_sample_cnt_d from objs
HdlIdDef: cfg_np_sample_cnt_d
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 15
                    HdlValueInt: 0
    HdlDirection: INTERNAL


CommitId: 049c6b2b38767285d7884d728961889c9ea9be9a
[adc_ctrl] Various preparation steps for d2
--- a/hw/ip/adc_ctrl/rtl/adc_ctrl_core.sv
+++ b/hw/ip/adc_ctrl/rtl/adc_ctrl_core.sv
@@ -54,10 +54,6 @@ module adc_ctrl_core import adc_ctrl_reg_pkg::* ; (
   logic [9:0] cfg_chn0_max_v [NumAdcFilter];
   logic [9:0] cfg_chn1_min_v [NumAdcFilter];
   logic [9:0] cfg_chn1_max_v [NumAdcFilter];
-  logic [9:0] cfg_chn0_min_v_d [NumAdcFilter];
-  logic [9:0] cfg_chn0_max_v_d [NumAdcFilter];
-  logic [9:0] cfg_chn1_min_v_d [NumAdcFilter];
-  logic [9:0] cfg_chn1_max_v_d [NumAdcFilter];
   logic [NumAdcFilter-1:0] cfg_chn0_cond;
   logic [NumAdcFilter-1:0] cfg_chn1_cond;
   logic [NumAdcFilter-1:0] load_chn0_min_v;

ParseResult:
DEL HdlIdDef@@cfg_chn0_min_v_d from objs
HdlIdDef: cfg_chn0_min_v_d
    HdlOp: INDEX
        list: ops
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: logic
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 9
                            HdlValueInt: 0
            HdlValueId: NumAdcFilter
    HdlDirection: INTERNAL

DEL HdlIdDef@@cfg_chn0_max_v_d from objs
HdlIdDef: cfg_chn0_max_v_d
    HdlOp: INDEX
        list: ops
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: logic
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 9
                            HdlValueInt: 0
            HdlValueId: NumAdcFilter
    HdlDirection: INTERNAL

DEL HdlIdDef@@cfg_chn1_min_v_d from objs
HdlIdDef: cfg_chn1_min_v_d
    HdlOp: INDEX
        list: ops
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: logic
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 9
                            HdlValueInt: 0
            HdlValueId: NumAdcFilter
    HdlDirection: INTERNAL

DEL HdlIdDef@@cfg_chn1_max_v_d from objs
HdlIdDef: cfg_chn1_max_v_d
    HdlOp: INDEX
        list: ops
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: logic
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 9
                            HdlValueInt: 0
            HdlValueId: NumAdcFilter
    HdlDirection: INTERNAL


CommitId: 049c6b2b38767285d7884d728961889c9ea9be9a
[adc_ctrl] Various preparation steps for d2
--- a/hw/ip/adc_ctrl/rtl/adc_ctrl_core.sv
+++ b/hw/ip/adc_ctrl/rtl/adc_ctrl_core.sv
@@ -74,9 +70,6 @@ module adc_ctrl_core import adc_ctrl_reg_pkg::* ; (
   logic chn0_val_we, chn1_val_we;//write enable for the latest ADC sample
   logic [9:0] chn0_val, chn1_val;
   logic cfg_chn0_rvalid, cfg_chn1_rvalid;
-  logic [9:0] cfg_chn0_val, cfg_chn1_val;
-  logic cfg_chn0_rvalid_intr, cfg_chn1_rvalid_intr;
-  logic [9:0] cfg_chn0_val_intr, cfg_chn1_val_intr;
 
   logic [NumAdcFilter-1:0] chn0_match, chn1_match, adc_ctrl_match;
   logic [NumAdcFilter-1:0] adc_ctrl_match_pulse;

ParseResult:
MOV HdlIdDef@@cfg_chn1_rvalid_intr to objs
HdlIdDef: cfg_chn1_rvalid_intr
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

UPD HdlIdDef@@cfg_chn1_rvalid_intr to adc_pd_ctl_qe

DEL HdlIdDef@@cfg_chn0_val from objs
HdlIdDef: cfg_chn0_val
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 9
                    HdlValueInt: 0
    HdlDirection: INTERNAL

DEL HdlIdDef@@cfg_chn1_val from objs
HdlIdDef: cfg_chn1_val
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 9
                    HdlValueInt: 0
    HdlDirection: INTERNAL

DEL HdlIdDef@@cfg_chn0_rvalid_intr from objs
HdlIdDef: cfg_chn0_rvalid_intr
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

DEL HdlIdDef@@cfg_chn0_val_intr from objs
HdlIdDef: cfg_chn0_val_intr
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 9
                    HdlValueInt: 0
    HdlDirection: INTERNAL

DEL HdlIdDef@@cfg_chn1_val_intr from objs
HdlIdDef: cfg_chn1_val_intr
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 9
                    HdlValueInt: 0
    HdlDirection: INTERNAL


CommitId: 50f04dc0e4caab130aeb7092b9ff0ffd603615cd
Revert "[clkmgr] Allow software to control clock stepdown"
--- a/hw/ip/clkmgr/rtl/clkmgr_byp.sv
+++ b/hw/ip/clkmgr/rtl/clkmgr_byp.sv
@@ -10,8 +10,7 @@ module clkmgr_byp import clkmgr_pkg::*; import lc_ctrl_pkg::lc_tx_t; # (
   input                   clk_i,
   input                   rst_ni,
   input  lc_tx_t          en_i,
-  input  lc_tx_t          byp_req_i,
-  input  lc_tx_t          step_down_req_i,
+  input  lc_tx_t          byp_req,
   output lc_tx_t          ast_clk_byp_req_o,
   input  lc_tx_t          ast_clk_byp_ack_i,
   input  lc_tx_t          lc_clk_byp_req_i,

ParseResult:
UPD HdlIdDef@@byp_req_i to byp_req

DEL HdlIdDef@@step_down_req_i from ports
HdlIdDef: step_down_req_i
    HdlValueId: lc_tx_t
    HdlDirection: IN


CommitId: 50f04dc0e4caab130aeb7092b9ff0ffd603615cd
Revert "[clkmgr] Allow software to control clock stepdown"
--- a/hw/ip/clkmgr/rtl/clkmgr_byp.sv
+++ b/hw/ip/clkmgr/rtl/clkmgr_byp.sv
@@ -49,20 +48,13 @@ module clkmgr_byp import clkmgr_pkg::*; import lc_ctrl_pkg::lc_tx_t; # (
    .lc_en_o(ast_clk_byp_req_o)
   );
 
-  lc_tx_t ast_clk_byp_ack;
   prim_lc_sync u_rcv (
     .clk_i,
     .rst_ni,
     .lc_en_i(ast_clk_byp_ack_i),
-    .lc_en_o(ast_clk_byp_ack)
+    .lc_en_o(step_down_req_o)
   );
 
-  // if switch request came from software, let software dictate whether to step down
-  assign step_down_req_o =
-    lc_clk_byp_req_i == lc_ctrl_pkg::On ? ast_clk_byp_ack :
-    reg_clk_byp_req == lc_ctrl_pkg::On  ? ast_clk_byp_ack & step_down_req_i :
-                                          lc_ctrl_pkg::Off;
-
   // only ack the lc_ctrl if it made a request.
   prim_lc_sender u_send (
    .clk_i,
ParseResult:
DEL HdlIdDef@@ast_clk_byp_ack from objs
HdlIdDef: ast_clk_byp_ack
    HdlDirection: INTERNAL

DEL HdlStmAssign@@ from objs
HdlStmAssign
    HdlOp: TERNARY
        list: ops
            HdlOp: EQ
                list: ops
                    HdlValueId: lc_clk_byp_req_i
                    HdlOp: DOUBLE_COLON
                        list: ops
                            HdlValueId: lc_ctrl_pkg
                            HdlValueId: On
            HdlValueId: ast_clk_byp_ack
            HdlOp: TERNARY
                list: ops
                    HdlOp: EQ
                        list: ops
                            HdlValueId: reg_clk_byp_req
                            HdlOp: DOUBLE_COLON
                                list: ops
                                    HdlValueId: lc_ctrl_pkg
                                    HdlValueId: On
                    HdlOp: AND
                        list: ops
                            HdlValueId: ast_clk_byp_ack
                            HdlValueId: step_down_req_i
                    HdlOp: DOUBLE_COLON
                        list: ops
                            HdlValueId: lc_ctrl_pkg
                            HdlValueId: Off
    HdlValueId: step_down_req_o


CommitId: 33236363c1584a2e0b92c22fd6a28781932c22a8
[entropy_src/rtl] move fw FIFO out of main flow path
--- a/hw/ip/entropy_src/rtl/entropy_src_core.sv
+++ b/hw/ip/entropy_src/rtl/entropy_src_core.sv
@@ -16,6 +16,7 @@ module entropy_src_core import entropy_src_pkg::*; #(
 
   // Efuse Interface
   input logic efuse_es_sw_reg_en_i,
+  input logic efuse_es_sw_ov_en_i,
 
   // RNG Interface
   output logic rng_fips_o,

ParseResult:
INS HdlIdDef@@efuse_es_sw_ov_en_i to ports
HdlIdDef: efuse_es_sw_ov_en_i
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: IN


CommitId: 33236363c1584a2e0b92c22fd6a28781932c22a8
[entropy_src/rtl] move fw FIFO out of main flow path
--- a/hw/ip/entropy_src/rtl/entropy_src_core.sv
+++ b/hw/ip/entropy_src/rtl/entropy_src_core.sv
@@ -44,6 +45,7 @@ module entropy_src_core import entropy_src_pkg::*; #(
 
   output logic           intr_es_entropy_valid_o,
   output logic           intr_es_health_test_failed_o,
+  output logic           intr_es_observe_fifo_ready_o,
   output logic           intr_es_fatal_err_o
 );
 

ParseResult:
INS HdlIdDef@@intr_es_observe_fifo_ready_o to ports
HdlIdDef: intr_es_observe_fifo_ready_o
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: OUT


CommitId: 33236363c1584a2e0b92c22fd6a28781932c22a8
[entropy_src/rtl] move fw FIFO out of main flow path
--- a/hw/ip/entropy_src/rtl/entropy_src_core.sv
+++ b/hw/ip/entropy_src/rtl/entropy_src_core.sv
@@ -56,10 +58,10 @@ module entropy_src_core import entropy_src_pkg::*; #(
   localparam int FullRegWidth = 32;
   localparam int EighthRegWidth = 4;
   localparam int SeedLen = 384;
-  localparam int PreCondFifoWidth = 32;
-  localparam int PreCondFifoDepth = 64;
+  localparam int ObserveFifoWidth = 32;
+  localparam int ObserveFifoDepth = 64;
   localparam int PreCondWidth = 64;
-  localparam int Clog2PreCondFifoDepth = $clog2(PreCondFifoDepth);
+  localparam int Clog2ObserveFifoDepth = $clog2(ObserveFifoDepth);
 
   //-----------------------
   // SHA3 parameters

ParseResult:
INS HdlIdDef@@ObserveFifoWidth to objs
HdlIdDef: ObserveFifoWidth
    HdlValueId: int
    HdlValueInt: 32
    HdlDirection: INTERNAL

INS HdlIdDef@@ObserveFifoDepth to objs
HdlIdDef: ObserveFifoDepth
    HdlValueId: int
    HdlValueInt: 64
    HdlDirection: INTERNAL

INS HdlIdDef@@Clog2ObserveFifoDepth to objs
HdlIdDef: Clog2ObserveFifoDepth
    HdlValueId: int
    HdlOp: CALL
        list: ops
            HdlValueId: $clog2
            HdlValueId: ObserveFifoDepth
    HdlDirection: INTERNAL

DEL HdlIdDef@@PreCondFifoWidth from objs
HdlIdDef: PreCondFifoWidth
    HdlValueId: int
    HdlValueInt: 32
    HdlDirection: INTERNAL

DEL HdlIdDef@@PreCondFifoDepth from objs
HdlIdDef: PreCondFifoDepth
    HdlValueId: int
    HdlValueInt: 64
    HdlDirection: INTERNAL

DEL HdlIdDef@@Clog2PreCondFifoDepth from objs
HdlIdDef: Clog2PreCondFifoDepth
    HdlValueId: int
    HdlOp: CALL
        list: ops
            HdlValueId: $clog2
            HdlValueId: PreCondFifoDepth
    HdlDirection: INTERNAL


CommitId: 33236363c1584a2e0b92c22fd6a28781932c22a8
[entropy_src/rtl] move fw FIFO out of main flow path
--- a/hw/ip/entropy_src/rtl/entropy_src_core.sv
+++ b/hw/ip/entropy_src/rtl/entropy_src_core.sv
@@ -75,11 +77,9 @@ module entropy_src_core import entropy_src_pkg::*; #(
   logic [RngBusWidth-1:0] lfsr_value;
   logic [RngBusWidth-1:0] seed_value;
   logic       load_seed;
-  logic [6:0] pre_cond_fifo_depth;
   logic       fw_ov_mode;
-  logic       fw_ov_fifo_reg_wr;
-  logic       fw_ov_fifo_reg_rd;
-  logic [PreCondFifoWidth-1:0] fw_ov_wr_data;
+  logic       fw_ov_entropy_insert;
+  logic [ObserveFifoWidth-1:0] fw_ov_wr_data;
   logic       fw_ov_fifo_rd_pulse;
   logic       fw_ov_fifo_wr_pulse;
   logic       es_enable;

ParseResult:
MOV HdlIdDef@@fw_ov_fifo_reg_rd to objs
HdlIdDef: fw_ov_fifo_reg_rd
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

UPD HdlIdDef@@fw_ov_fifo_reg_wr to fw_ov_entropy_insert

INS HdlIdDef@@fw_ov_wr_data to objs
HdlIdDef: fw_ov_wr_data
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlOp: SUB
                        list: ops
                            HdlValueId: ObserveFifoWidth
                            HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: INTERNAL

UPD HdlIdDef@@fw_ov_fifo_reg_rd to event_es_observe_fifo_ready

DEL HdlIdDef@@pre_cond_fifo_depth from objs
HdlIdDef: pre_cond_fifo_depth
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 6
                    HdlValueInt: 0
    HdlDirection: INTERNAL

DEL HdlIdDef@@fw_ov_wr_data from objs
HdlIdDef: fw_ov_wr_data
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlOp: SUB
                        list: ops
                            HdlValueId: PreCondFifoWidth
                            HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: INTERNAL


CommitId: 33236363c1584a2e0b92c22fd6a28781932c22a8
[entropy_src/rtl] move fw FIFO out of main flow path
--- a/hw/ip/entropy_src/rtl/entropy_src_core.sv
+++ b/hw/ip/entropy_src/rtl/entropy_src_core.sv
@@ -107,15 +108,15 @@ module entropy_src_core import entropy_src_pkg::*; #(
   logic                   sfifo_esrng_not_empty;
   logic [2:0]             sfifo_esrng_err;
 
-  logic [PreCondFifoWidth-1:0] sfifo_precon_wdata;
-  logic [PreCondFifoWidth-1:0] sfifo_precon_rdata;
-  logic                    sfifo_precon_push;
-  logic                    sfifo_precon_pop;
-  logic                    sfifo_precon_clr;
-  logic                    sfifo_precon_not_full;
-  logic                    sfifo_precon_not_empty;
-  logic [Clog2PreCondFifoDepth:0] sfifo_precon_depth;
-  logic [2:0]                     sfifo_precon_err;
+  logic [ObserveFifoWidth-1:0] sfifo_observe_wdata;
+  logic [ObserveFifoWidth-1:0] sfifo_observe_rdata;
+  logic                    sfifo_observe_push;
+  logic                    sfifo_observe_pop;
+  logic                    sfifo_observe_full;
+  logic                    sfifo_observe_clr;
+  logic                    sfifo_observe_not_empty;
+  logic [Clog2ObserveFifoDepth:0] sfifo_observe_depth;
+  logic [2:0]                     sfifo_observe_err;
 
   logic [Clog2EsFifoDepth:0] sfifo_esfinal_depth;
   logic [(1+SeedLen)-1:0] sfifo_esfinal_wdata;

ParseResult:
MOV HdlIdDef@@sfifo_precon_not_empty to objs
HdlIdDef: sfifo_precon_not_empty
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

INS HdlIdDef@@sfifo_observe_wdata to objs
HdlIdDef: sfifo_observe_wdata
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlOp: SUB
                        list: ops
                            HdlValueId: ObserveFifoWidth
                            HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: INTERNAL

INS HdlIdDef@@sfifo_observe_rdata to objs
HdlIdDef: sfifo_observe_rdata
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlOp: SUB
                        list: ops
                            HdlValueId: ObserveFifoWidth
                            HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: INTERNAL

UPD HdlIdDef@@sfifo_precon_not_empty to sfifo_observe_push

UPD HdlIdDef@@sfifo_precon_push to sfifo_observe_pop

UPD HdlIdDef@@sfifo_precon_pop to sfifo_observe_full

UPD HdlIdDef@@sfifo_precon_clr to sfifo_observe_clr

UPD HdlIdDef@@sfifo_precon_not_full to sfifo_observe_not_empty

INS HdlIdDef@@sfifo_observe_depth to objs
HdlIdDef: sfifo_observe_depth
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlValueId: Clog2ObserveFifoDepth
                    HdlValueInt: 0
    HdlDirection: INTERNAL

UPD HdlIdDef@@sfifo_precon_err to sfifo_observe_err

DEL HdlIdDef@@sfifo_precon_wdata from objs
HdlIdDef: sfifo_precon_wdata
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlOp: SUB
                        list: ops
                            HdlValueId: PreCondFifoWidth
                            HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: INTERNAL

DEL HdlIdDef@@sfifo_precon_rdata from objs
HdlIdDef: sfifo_precon_rdata
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlOp: SUB
                        list: ops
                            HdlValueId: PreCondFifoWidth
                            HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: INTERNAL

DEL HdlIdDef@@sfifo_precon_depth from objs
HdlIdDef: sfifo_precon_depth
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlValueId: Clog2PreCondFifoDepth
                    HdlValueInt: 0
    HdlDirection: INTERNAL


CommitId: 33236363c1584a2e0b92c22fd6a28781932c22a8
[entropy_src/rtl] move fw FIFO out of main flow path
--- a/hw/ip/entropy_src/rtl/entropy_src_core.sv
+++ b/hw/ip/entropy_src/rtl/entropy_src_core.sv
@@ -137,6 +138,8 @@ module entropy_src_core import entropy_src_pkg::*; #(
   logic [FullRegWidth-1:0] any_fail_count;
   logic [FullRegWidth-1:0] alert_threshold;
   logic                     recov_alert_event;
+  logic [Clog2ObserveFifoDepth:0] observe_fifo_thresh;
+  logic                     observe_fifo_thresh_met;
   logic                     repcnt_active;
   logic                     repcnts_active;
   logic                     adaptp_active;

ParseResult:
INS HdlIdDef@@observe_fifo_thresh to objs
HdlIdDef: observe_fifo_thresh
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlValueId: Clog2ObserveFifoDepth
                    HdlValueInt: 0
    HdlDirection: INTERNAL

INS HdlIdDef@@observe_fifo_thresh_met to objs
HdlIdDef: observe_fifo_thresh_met
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL


CommitId: 33236363c1584a2e0b92c22fd6a28781932c22a8
[entropy_src/rtl] move fw FIFO out of main flow path
--- a/hw/ip/entropy_src/rtl/entropy_src_core.sv
+++ b/hw/ip/entropy_src/rtl/entropy_src_core.sv
@@ -301,7 +304,7 @@ module entropy_src_core import entropy_src_pkg::*; #(
   logic                     pfifo_cond_not_empty;
   logic                     pfifo_cond_push;
 
-  logic [PreCondFifoWidth-1:0] pfifo_precon_wdata;
+  logic [ObserveFifoWidth-1:0] pfifo_precon_wdata;
   logic [PreCondWidth-1:0]     pfifo_precon_rdata;
   logic                        pfifo_precon_not_empty;
   logic                        pfifo_precon_push;

ParseResult:
INS HdlIdDef@@pfifo_precon_wdata to objs
HdlIdDef: pfifo_precon_wdata
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlOp: SUB
                        list: ops
                            HdlValueId: ObserveFifoWidth
                            HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: INTERNAL

DEL HdlIdDef@@pfifo_precon_wdata from objs
HdlIdDef: pfifo_precon_wdata
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlOp: SUB
                        list: ops
                            HdlValueId: PreCondFifoWidth
                            HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: INTERNAL


CommitId: 33236363c1584a2e0b92c22fd6a28781932c22a8
[entropy_src/rtl] move fw FIFO out of main flow path
--- a/hw/ip/entropy_src/rtl/entropy_src_core.sv
+++ b/hw/ip/entropy_src/rtl/entropy_src_core.sv
@@ -328,7 +331,7 @@ module entropy_src_core import entropy_src_pkg::*; #(
   logic                     es_hw_if_ack;
   logic                     es_hw_if_fifo_pop;
   logic                     sfifo_esrng_err_sum;
-  logic                     sfifo_precon_err_sum;
+  logic                     sfifo_observe_err_sum;
   logic                     sfifo_esfinal_err_sum;
   logic                     es_ack_sm_err_sum;
   logic                     es_ack_sm_err;

ParseResult:
UPD HdlIdDef@@sfifo_precon_err_sum to sfifo_observe_err_sum


CommitId: 33236363c1584a2e0b92c22fd6a28781932c22a8
[entropy_src/rtl] move fw FIFO out of main flow path
--- a/hw/ip/entropy_src/rtl/entropy_src_core.sv
+++ b/hw/ip/entropy_src/rtl/entropy_src_core.sv
@@ -412,17 +415,15 @@ module entropy_src_core import entropy_src_pkg::*; #(
   assign es_enable_rng = es_enable_q[0];
   assign load_seed = !es_enable;
   assign hw2reg.regwen.d = !es_enable; // hw reg lock implementation
-  assign pre_cond_fifo_depth = reg2hw.pre_cond_fifo_depth.q;
+  assign observe_fifo_thresh = reg2hw.observe_fifo_thresh.q;
 
   // firmware override controls
-  assign fw_ov_mode = efuse_es_sw_reg_en_i && reg2hw.fw_ov_control.fw_ov_mode.q;
-  assign fw_ov_fifo_reg_rd = reg2hw.fw_ov_control.fw_ov_fifo_reg_rd.q;
-  assign fw_ov_fifo_reg_wr = reg2hw.fw_ov_control.fw_ov_fifo_reg_wr.q;
+  assign fw_ov_mode = efuse_es_sw_ov_en_i && reg2hw.fw_ov_control.fw_ov_mode.q;
+  assign fw_ov_entropy_insert = reg2hw.fw_ov_control.fw_ov_entropy_insert.q;
   assign fw_ov_fifo_rd_pulse = reg2hw.fw_ov_rd_data.re;
-  assign hw2reg.fw_ov_rd_data.d = sfifo_precon_rdata;
+  assign hw2reg.fw_ov_rd_data.d = sfifo_observe_rdata;
   assign fw_ov_fifo_wr_pulse = reg2hw.fw_ov_wr_data.qe;
   assign fw_ov_wr_data = reg2hw.fw_ov_wr_data.q;
-  assign hw2reg.fw_ov_fifo_sts.d = sfifo_precon_depth;
 
   assign entropy_src_rng_o.rng_enable = es_enable_rng;
 

ParseResult:
INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: DOT
        list: ops
            HdlOp: DOT
                list: ops
                    HdlValueId: reg2hw
                    HdlValueId: observe_fifo_thresh
            HdlValueId: q
    HdlValueId: observe_fifo_thresh

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlValueId: sfifo_observe_rdata
    HdlValueId: hw2reg

UPD HdlStmAssign@@ to 
    UPD HdlValueId@@fw_ov_fifo_reg_wr to fw_ov_entropy_insert
    UPD HdlOp@@DOT to DOT
        UPD HdlOp@@DOT to DOT
            UPD HdlValueId@@fw_ov_fifo_reg_wr to fw_ov_entropy_insert

UPD HdlStmAssign@@ to 
    UPD HdlOp@@AND_LOG to AND_LOG
        UPD HdlValueId@@efuse_es_sw_reg_en_i to efuse_es_sw_ov_en_i

DEL HdlStmAssign@@ from objs
HdlStmAssign
    HdlOp: DOT
        list: ops
            HdlOp: DOT
                list: ops
                    HdlValueId: reg2hw
                    HdlValueId: pre_cond_fifo_depth
            HdlValueId: q
    HdlValueId: pre_cond_fifo_depth

DEL HdlStmAssign@@ from objs
HdlStmAssign
    HdlOp: DOT
        list: ops
            HdlOp: DOT
                list: ops
                    HdlOp: DOT
                        list: ops
                            HdlValueId: reg2hw
                            HdlValueId: fw_ov_control
                    HdlValueId: fw_ov_fifo_reg_rd
            HdlValueId: q
    HdlValueId: fw_ov_fifo_reg_rd

DEL HdlStmAssign@@ from objs
HdlStmAssign
    HdlValueId: sfifo_precon_rdata
    HdlValueId: hw2reg

DEL HdlStmAssign@@ from objs
HdlStmAssign
    HdlValueId: sfifo_precon_depth
    HdlValueId: hw2reg


CommitId: 33236363c1584a2e0b92c22fd6a28781932c22a8
[entropy_src/rtl] move fw FIFO out of main flow path
--- a/hw/ip/entropy_src/rtl/entropy_src_core.sv
+++ b/hw/ip/entropy_src/rtl/entropy_src_core.sv
@@ -535,7 +551,7 @@ module entropy_src_core import entropy_src_pkg::*; #(
   // set the interrupt sources
   assign event_es_fatal_err = es_enable && (
          sfifo_esrng_err_sum ||
-         sfifo_precon_err_sum ||
+         sfifo_observe_err_sum ||
          sfifo_esfinal_err_sum ||
          es_ack_sm_err_sum ||
          es_main_sm_err_sum);

ParseResult:
INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: AND_LOG
        list: ops
            HdlValueId: es_enable
            HdlOp: OR_LOG
                list: ops
                    HdlOp: OR_LOG
                        list: ops
                            HdlOp: OR_LOG
                                list: ops
                                    HdlOp: OR_LOG
                                        list: ops
                                            HdlValueId: sfifo_esrng_err_sum
                                            HdlValueId: sfifo_observe_err_sum
                                    HdlValueId: sfifo_esfinal_err_sum
                            HdlValueId: es_ack_sm_err_sum
                    HdlValueId: es_main_sm_err_sum
    HdlValueId: event_es_fatal_err

DEL HdlStmAssign@@ from objs
HdlStmAssign
    HdlOp: AND_LOG
        list: ops
            HdlValueId: es_enable
            HdlOp: OR_LOG
                list: ops
                    HdlOp: OR_LOG
                        list: ops
                            HdlOp: OR_LOG
                                list: ops
                                    HdlOp: OR_LOG
                                        list: ops
                                            HdlValueId: sfifo_esrng_err_sum
                                            HdlValueId: sfifo_precon_err_sum
                                    HdlValueId: sfifo_esfinal_err_sum
                            HdlValueId: es_ack_sm_err_sum
                    HdlValueId: es_main_sm_err_sum
    HdlValueId: event_es_fatal_err


CommitId: 33236363c1584a2e0b92c22fd6a28781932c22a8
[entropy_src/rtl] move fw FIFO out of main flow path
--- a/hw/ip/entropy_src/rtl/entropy_src_core.sv
+++ b/hw/ip/entropy_src/rtl/entropy_src_core.sv
@@ -543,7 +559,7 @@ module entropy_src_core import entropy_src_pkg::*; #(
   // set fifo errors that are single instances of source
   assign sfifo_esrng_err_sum = (|sfifo_esrng_err) ||
          err_code_test_bit[0];
-  assign sfifo_precon_err_sum = (|sfifo_precon_err) ||
+  assign sfifo_observe_err_sum = (|sfifo_observe_err) ||
          err_code_test_bit[1];
   assign sfifo_esfinal_err_sum = (|sfifo_esfinal_err) ||
          err_code_test_bit[2];

ParseResult:
UPD HdlStmAssign@@ to 
    UPD HdlValueId@@sfifo_precon_err_sum to sfifo_observe_err_sum
    UPD HdlOp@@OR_LOG to OR_LOG
        UPD HdlOp@@OR_UNARY to OR_UNARY
            UPD HdlValueId@@sfifo_precon_err to sfifo_observe_err


CommitId: 33236363c1584a2e0b92c22fd6a28781932c22a8
[entropy_src/rtl] move fw FIFO out of main flow path
--- a/hw/ip/entropy_src/rtl/entropy_src_core.sv
+++ b/hw/ip/entropy_src/rtl/entropy_src_core.sv
@@ -553,17 +569,17 @@ module entropy_src_core import entropy_src_pkg::*; #(
          err_code_test_bit[21];
   assign fifo_write_err_sum =
          sfifo_esrng_err[2] ||
-         sfifo_precon_err[2] ||
+         sfifo_observe_err[2] ||
          sfifo_esfinal_err[2] ||
          err_code_test_bit[28];
   assign fifo_read_err_sum =
          sfifo_esrng_err[1] ||
-         sfifo_precon_err[1] ||
+         sfifo_observe_err[1] ||
          sfifo_esfinal_err[1] ||
          err_code_test_bit[29];
   assign fifo_status_err_sum =
          sfifo_esrng_err[0] ||
-         sfifo_precon_err[0] ||
+         sfifo_observe_err[0] ||
          sfifo_esfinal_err[0] ||
          err_code_test_bit[30];
 

ParseResult:
UPD HdlStmAssign@@ to 
    UPD HdlOp@@OR_LOG to OR_LOG
        UPD HdlOp@@OR_LOG to OR_LOG
            UPD HdlOp@@OR_LOG to OR_LOG
                UPD HdlOp@@INDEX to INDEX
                    UPD HdlValueId@@sfifo_precon_err to sfifo_observe_err

UPD HdlStmAssign@@ to 
    UPD HdlOp@@OR_LOG to OR_LOG
        UPD HdlOp@@OR_LOG to OR_LOG
            UPD HdlOp@@OR_LOG to OR_LOG
                UPD HdlOp@@INDEX to INDEX
                    UPD HdlValueId@@sfifo_precon_err to sfifo_observe_err

UPD HdlStmAssign@@ to 
    UPD HdlOp@@OR_LOG to OR_LOG
        UPD HdlOp@@OR_LOG to OR_LOG
            UPD HdlOp@@OR_LOG to OR_LOG
                UPD HdlOp@@INDEX to INDEX
                    UPD HdlValueId@@sfifo_precon_err to sfifo_observe_err


CommitId: 33236363c1584a2e0b92c22fd6a28781932c22a8
[entropy_src/rtl] move fw FIFO out of main flow path
--- a/hw/ip/entropy_src/rtl/entropy_src_core.sv
+++ b/hw/ip/entropy_src/rtl/entropy_src_core.sv
@@ -571,8 +587,8 @@ module entropy_src_core import entropy_src_pkg::*; #(
   assign hw2reg.err_code.sfifo_esrng_err.d = 1'b1;
   assign hw2reg.err_code.sfifo_esrng_err.de =  es_enable && sfifo_esrng_err_sum;
 
-  assign hw2reg.err_code.sfifo_precon_err.d = 1'b1;
-  assign hw2reg.err_code.sfifo_precon_err.de =  es_enable && sfifo_precon_err_sum;
+  assign hw2reg.err_code.sfifo_observe_err.d = 1'b1;
+  assign hw2reg.err_code.sfifo_observe_err.de =  es_enable && sfifo_observe_err_sum;
 
   assign hw2reg.err_code.sfifo_esfinal_err.d = 1'b1;
   assign hw2reg.err_code.sfifo_esfinal_err.de =  es_enable && sfifo_esfinal_err_sum;

ParseResult:
INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: AND_LOG
        list: ops
            HdlValueId: es_enable
            HdlValueId: sfifo_observe_err_sum
    HdlValueId: hw2reg

DEL HdlStmAssign@@ from objs
HdlStmAssign
    HdlOp: AND_LOG
        list: ops
            HdlValueId: es_enable
            HdlValueId: sfifo_precon_err_sum
    HdlValueId: hw2reg


CommitId: 33236363c1584a2e0b92c22fd6a28781932c22a8
[entropy_src/rtl] move fw FIFO out of main flow path
--- a/hw/ip/entropy_src/rtl/entropy_src_core.sv
+++ b/hw/ip/entropy_src/rtl/entropy_src_core.sv
@@ -1089,6 +1105,7 @@ module entropy_src_core import entropy_src_pkg::*; #(
   //------------------------------
 
   assign event_es_health_test_failed = recov_alert_event;
+  assign event_es_observe_fifo_ready = observe_fifo_thresh_met;
 
   assign es_route_to_sw = reg2hw.entropy_control.es_route.q;
   assign es_bypass_to_sw = reg2hw.entropy_control.es_type.q;

ParseResult:
INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlValueId: observe_fifo_thresh_met
    HdlValueId: event_es_observe_fifo_ready


CommitId: 33236363c1584a2e0b92c22fd6a28781932c22a8
[entropy_src/rtl] move fw FIFO out of main flow path
--- a/hw/ip/entropy_src/rtl/entropy_src_core.sv
+++ b/hw/ip/entropy_src/rtl/entropy_src_core.sv
@@ -1814,8 +1831,7 @@ module entropy_src_core import entropy_src_pkg::*; #(
 
   assign pfifo_postht_clr = !es_enable;
   assign pfifo_postht_pop = ht_esbus_vld_dly2_q &&
-         pfifo_postht_not_empty &&
-         sfifo_precon_not_full;
+         pfifo_postht_not_empty;
 
 
   //--------------------------------------------

ParseResult:
UPD HdlStmAssign@@ to 
    UPD HdlOp@@AND_LOG to AND_LOG
        MOV HdlOp@@AND_LOG to ops
        HdlOp: AND_LOG
            list: ops
                HdlValueId: ht_esbus_vld_dly2_q
                HdlValueId: pfifo_postht_not_empty
        DEL HdlValueId@@sfifo_precon_not_full from ops
        DEL list@@ops from AND_LOG
    DEL HdlOp@@AND_LOG from 


CommitId: 33236363c1584a2e0b92c22fd6a28781932c22a8
[entropy_src/rtl] move fw FIFO out of main flow path
--- a/hw/ip/entropy_src/rtl/entropy_src_core.sv
+++ b/hw/ip/entropy_src/rtl/entropy_src_core.sv
@@ -1888,10 +1897,12 @@ module entropy_src_core import entropy_src_pkg::*; #(
   );
 
   assign pfifo_precon_push = fw_ov_mode ?
-         (fw_ov_fifo_reg_rd ?  1'b0 : sfifo_precon_pop) :
-         sfifo_precon_pop;
+         (fw_ov_entropy_insert ? fw_ov_fifo_wr_pulse : pfifo_postht_pop) :
+         pfifo_postht_pop;
 
-  assign pfifo_precon_wdata = sfifo_precon_rdata;
+  assign pfifo_precon_wdata = fw_ov_mode ?
+         (fw_ov_entropy_insert ? fw_ov_wr_data : pfifo_postht_rdata) :
+         pfifo_postht_rdata;
 
   assign pfifo_precon_clr = !es_enable;
   assign pfifo_precon_pop = pfifo_precon_not_empty;

ParseResult:
INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: TERNARY
        list: ops
            HdlValueId: fw_ov_mode
            HdlOp: TERNARY
                list: ops
                    HdlValueId: fw_ov_entropy_insert
                    HdlValueId: fw_ov_fifo_wr_pulse
                    HdlValueId: pfifo_postht_pop
            HdlValueId: pfifo_postht_pop
    HdlValueId: pfifo_precon_push

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: TERNARY
        list: ops
            HdlValueId: fw_ov_mode
            HdlOp: TERNARY
                list: ops
                    HdlValueId: fw_ov_entropy_insert
                    HdlValueId: fw_ov_wr_data
                    HdlValueId: pfifo_postht_rdata
            HdlValueId: pfifo_postht_rdata
    HdlValueId: pfifo_precon_wdata

DEL HdlStmAssign@@ from objs
HdlStmAssign
    HdlOp: TERNARY
        list: ops
            HdlValueId: fw_ov_mode
            HdlOp: TERNARY
                list: ops
                    HdlValueId: fw_ov_fifo_reg_rd
                    HdlValueInt: 0
                    HdlValueId: sfifo_precon_pop
            HdlValueId: sfifo_precon_pop
    HdlValueId: pfifo_precon_push

DEL HdlStmAssign@@ from objs
HdlStmAssign
    HdlValueId: sfifo_precon_rdata
    HdlValueId: pfifo_precon_wdata


CommitId: 33236363c1584a2e0b92c22fd6a28781932c22a8
[entropy_src/rtl] move fw FIFO out of main flow path
--- a/hw/ip/entropy_src/rtl/entropy_src_core.sv
+++ b/hw/ip/entropy_src/rtl/entropy_src_core.sv
@@ -1906,7 +1917,7 @@ module entropy_src_core import entropy_src_pkg::*; #(
 
 
   assign pfifo_cond_push = pfifo_precon_pop && sha3_msgfifo_ready &&
-  !cs_aes_halt_req && !es_bypass_mode && !sfifo_esfinal_full;
+  !cs_aes_halt_req && !es_bypass_mode;
 
   assign pfifo_cond_wdata = pfifo_precon_rdata;
 
ParseResult:
UPD HdlStmAssign@@ to 
    UPD HdlOp@@AND_LOG to AND_LOG
        MOV HdlOp@@AND_LOG to ops
        HdlOp: AND_LOG
            list: ops
                HdlOp: AND_LOG
                    list: ops
                        HdlOp: AND_LOG
                            list: ops
                                HdlValueId: pfifo_precon_pop
                                HdlValueId: sha3_msgfifo_ready
                        HdlOp: NEG_LOG
                            list: ops
                                HdlValueId: cs_aes_halt_req
                HdlOp: NEG_LOG
                    list: ops
                        HdlValueId: es_bypass_mode
        DEL HdlOp@@NEG_LOG from ops
        HdlOp: NEG_LOG
            list: ops
                HdlValueId: sfifo_esfinal_full
        DEL list@@ops from AND_LOG
    DEL HdlOp@@AND_LOG from 


CommitId: 983c6a46bc982d5876ed35be7c4a0f59c26b502b
[i2c] Reg, Core, and FSM Update
--- a/hw/ip/i2c/rtl/i2c_core.sv
+++ b/hw/ip/i2c/rtl/i2c_core.sv
@@ -7,7 +7,6 @@
 module  i2c_core (
   input                            clk_i,
   input                            rst_ni,
-  input                            scanmode_i,
 
   input i2c_reg_pkg::i2c_reg2hw_t  reg2hw,
   output i2c_reg_pkg::i2c_hw2reg_t hw2reg,

ParseResult:
DEL HdlIdDef@@scanmode_i from ports
HdlIdDef: scanmode_i
    HdlValueId: wire
    HdlDirection: IN


CommitId: 983c6a46bc982d5876ed35be7c4a0f59c26b502b
[i2c] Reg, Core, and FSM Update
--- a/hw/ip/i2c/rtl/i2c_core.sv
+++ b/hw/ip/i2c/rtl/i2c_core.sv
@@ -73,8 +72,10 @@ module  i2c_core (
   logic        fmt_flag_read_continue;
   logic        fmt_flag_nak_ok;
 
-  logic [1:0]  i2c_fifo_fmtilvl;
+  logic        i2c_fifo_rxrst;
+  logic        i2c_fifo_fmtrst;
   logic [2:0]  i2c_fifo_rxilvl;
+  logic [1:0]  i2c_fifo_fmtilvl;
 
   logic        rx_fifo_wvalid;
   logic        rx_fifo_wready;

ParseResult:
MOV HdlIdDef@@i2c_fifo_fmtilvl to objs
HdlIdDef: i2c_fifo_fmtilvl
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: INTERNAL

INS HdlIdDef@@i2c_fifo_rxrst to objs
HdlIdDef: i2c_fifo_rxrst
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

INS HdlIdDef@@i2c_fifo_fmtrst to objs
HdlIdDef: i2c_fifo_fmtrst
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL


CommitId: 983c6a46bc982d5876ed35be7c4a0f59c26b502b
[i2c] Reg, Core, and FSM Update
--- a/hw/ip/i2c/rtl/i2c_core.sv
+++ b/hw/ip/i2c/rtl/i2c_core.sv
@@ -87,6 +88,13 @@ module  i2c_core (
   logic        host_idle;
   logic        target_idle;
 
+  logic        host_enable;
+
+  // Unused parts of exposed bits 
+  logic        unused_fifo_ctrl_rxilvl_qe;
+  logic        unused_fifo_ctrl_fmtilvl_qe;
+  logic [7:0]  unused_rx_fifo_rdata_q;
+
    // placeholder: no target functionality yet;
   assign target_idle = 1'b1;
 

ParseResult:
INS HdlIdDef@@host_enable to objs
HdlIdDef: host_enable
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

INS HdlIdDef@@unused_fifo_ctrl_rxilvl_qe to objs
HdlIdDef: unused_fifo_ctrl_rxilvl_qe
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

INS HdlIdDef@@unused_fifo_ctrl_fmtilvl_qe to objs
HdlIdDef: unused_fifo_ctrl_fmtilvl_qe
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

INS HdlIdDef@@unused_rx_fifo_rdata_q to objs
HdlIdDef: unused_rx_fifo_rdata_q
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 7
                    HdlValueInt: 0
    HdlDirection: INTERNAL


CommitId: 983c6a46bc982d5876ed35be7c4a0f59c26b502b
[i2c] Reg, Core, and FSM Update
--- a/hw/ip/i2c/rtl/i2c_core.sv
+++ b/hw/ip/i2c/rtl/i2c_core.sv
@@ -107,6 +115,8 @@ module  i2c_core (
   assign scl_o = override ? reg2hw.ovrd.sclval : scl_out_fsm;
   assign sda_o = override ? reg2hw.ovrd.sdaval : sda_out_fsm;
 
+  assign host_enable = reg2hw.ctrl.q;
+
   // TODO: Establish a sample clock period for scl and sda
   always_ff @(posedge clk_i or negedge rst_ni) begin
     if(!rst_ni) begin

ParseResult:
INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: DOT
        list: ops
            HdlOp: DOT
                list: ops
                    HdlValueId: reg2hw
                    HdlValueId: ctrl
            HdlValueId: q
    HdlValueId: host_enable


CommitId: 983c6a46bc982d5876ed35be7c4a0f59c26b502b
[i2c] Reg, Core, and FSM Update
--- a/hw/ip/i2c/rtl/i2c_core.sv
+++ b/hw/ip/i2c/rtl/i2c_core.sv
@@ -131,8 +141,10 @@ module  i2c_core (
   assign stretch_timeout = reg2hw.timeout_ctrl.val.q;
   assign timeout_enable  = reg2hw.timeout_ctrl.en.q;
 
-  assign i2c_fifo_fmtilvl = reg2hw.fifo_ctrl.fmtilvl.q;
+  assign i2c_fifo_rxrst   = reg2hw.fifo_ctrl.rxrst.q & reg2hw.fifo_ctrl.rxrst.qe;
+  assign i2c_fifo_fmtrst  = reg2hw.fifo_ctrl.fmtrst.q & reg2hw.fifo_ctrl.fmtrst.qe;
   assign i2c_fifo_rxilvl  = reg2hw.fifo_ctrl.rxilvl.q;
+  assign i2c_fifo_fmtilvl = reg2hw.fifo_ctrl.fmtilvl.q;
 
   always_comb begin
     unique case(i2c_fifo_fmtilvl)

ParseResult:
MOV HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: DOT
        list: ops
            HdlOp: DOT
                list: ops
                    HdlOp: DOT
                        list: ops
                            HdlValueId: reg2hw
                            HdlValueId: fifo_ctrl
                    HdlValueId: fmtilvl
            HdlValueId: q
    HdlValueId: i2c_fifo_fmtilvl

INS HdlStmAssign@@ to objs

INS HdlStmAssign@@ to objs


CommitId: 983c6a46bc982d5876ed35be7c4a0f59c26b502b
[i2c] Reg, Core, and FSM Update
--- a/hw/ip/i2c/rtl/i2c_core.sv
+++ b/hw/ip/i2c/rtl/i2c_core.sv
@@ -157,13 +169,15 @@ module  i2c_core (
   assign event_fmt_overflow = fmt_fifo_wvalid & ~fmt_fifo_wready;
   assign event_rx_overflow = rx_fifo_wvalid & ~rx_fifo_wready;
 
-
-
-  // The fifo write enable is controlled entirely
-  // by the fbyte field qe bit.
-  // When all fbyte.qe is asserted the fbyte, and all forma flags
-  // are injected into the fifo. (i.e. the qe bits for the flags have no effect).
-  assign fmt_fifo_wvalid     = reg2hw.fdata.fbyte.qe;
+  // The fifo write enable is controlled by fbyte, start, stop, read, rcont,
+  // and nakok field qe bits.
+  // When all qe bits are asserted, fdata is injected into the fifo.
+  assign fmt_fifo_wvalid     = reg2hw.fdata.fbyte.qe &
+                               reg2hw.fdata.start.qe &
+                               reg2hw.fdata.stop.qe  &
+                               reg2hw.fdata.read.qe  &
+                               reg2hw.fdata.rcont.qe &
+                               reg2hw.fdata.nakok.qe;
   assign fmt_fifo_wdata[7:0] = reg2hw.fdata.fbyte.q;
   assign fmt_fifo_wdata[8]   = reg2hw.fdata.start.q;
   assign fmt_fifo_wdata[9]   = reg2hw.fdata.stop.q;

ParseResult:
INS HdlStmAssign@@ to objs

UPD HdlStmAssign@@ to 
    MOV HdlOp@@DOT to 
    HdlOp: DOT
        list: ops
            HdlOp: DOT
                list: ops
                    HdlOp: DOT
                        list: ops
                            HdlValueId: reg2hw
                            HdlValueId: fdata
                    HdlValueId: fbyte
            HdlValueId: qe
    DEL HdlValueId@@fmt_fifo_wvalid from 

DEL HdlStmAssign@@ from objs


CommitId: 983c6a46bc982d5876ed35be7c4a0f59c26b502b
[i2c] Reg, Core, and FSM Update
--- a/hw/ip/i2c/rtl/i2c_core.sv
+++ b/hw/ip/i2c/rtl/i2c_core.sv
@@ -178,6 +192,11 @@ module  i2c_core (
   assign fmt_flag_read_bytes    = fmt_fifo_rdata[11];
   assign fmt_flag_nak_ok        = fmt_fifo_rdata[12];
 
+  // Unused parts of exposed bits 
+  assign unused_fifo_ctrl_rxilvl_qe  = reg2hw.fifo_ctrl.rxilvl.qe;
+  assign unused_fifo_ctrl_fmtilvl_qe = reg2hw.fifo_ctrl.fmtilvl.qe;
+  assign unused_rx_fifo_rdata_q = reg2hw.rdata.q;
+
   prim_fifo_sync #(
     .Width(13),
     .Pass(1'b1),

ParseResult:
INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: DOT
        list: ops
            HdlOp: DOT
                list: ops
                    HdlOp: DOT
                        list: ops
                            HdlValueId: reg2hw
                            HdlValueId: fifo_ctrl
                    HdlValueId: rxilvl
            HdlValueId: qe
    HdlValueId: unused_fifo_ctrl_rxilvl_qe

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: DOT
        list: ops
            HdlOp: DOT
                list: ops
                    HdlOp: DOT
                        list: ops
                            HdlValueId: reg2hw
                            HdlValueId: fifo_ctrl
                    HdlValueId: fmtilvl
            HdlValueId: qe
    HdlValueId: unused_fifo_ctrl_fmtilvl_qe

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: DOT
        list: ops
            HdlOp: DOT
                list: ops
                    HdlValueId: reg2hw
                    HdlValueId: rdata
            HdlValueId: q
    HdlValueId: unused_rx_fifo_rdata_q

UPD HdlStmAssign@@ to 
    INS HdlOp@@AND to 
    INS HdlValueId@@fmt_fifo_wvalid to 
    UPD HdlOp@@AND to AND
        INS list@@ops to AND
        INS HdlOp@@AND to ops
        INS HdlOp@@DOT to ops
        HdlOp: DOT
            list: ops
                HdlOp: DOT
                    list: ops
                        HdlOp: DOT
                            list: ops
                                HdlValueId: reg2hw
                                HdlValueId: fdata
                        HdlValueId: nakok
                HdlValueId: qe
        UPD HdlOp@@AND to AND
            INS list@@ops to AND
            INS HdlOp@@AND to ops
            INS HdlOp@@DOT to ops
            HdlOp: DOT
                list: ops
                    HdlOp: DOT
                        list: ops
                            HdlOp: DOT
                                list: ops
                                    HdlValueId: reg2hw
                                    HdlValueId: fdata
                            HdlValueId: rcont
                    HdlValueId: qe
            UPD HdlOp@@AND to AND
                INS list@@ops to AND
                INS HdlOp@@AND to ops
                INS HdlOp@@DOT to ops
                HdlOp: DOT
                    list: ops
                        HdlOp: DOT
                            list: ops
                                HdlOp: DOT
                                    list: ops
                                        HdlValueId: reg2hw
                                        HdlValueId: fdata
                                HdlValueId: read
                        HdlValueId: qe
                UPD HdlOp@@AND to AND
                    INS list@@ops to AND
                    INS HdlOp@@AND to ops
                    INS HdlOp@@DOT to ops
                    HdlOp: DOT
                        list: ops
                            HdlOp: DOT
                                list: ops
                                    HdlOp: DOT
                                        list: ops
                                            HdlValueId: reg2hw
                                            HdlValueId: fdata
                                    HdlValueId: stop
                            HdlValueId: qe
                    UPD HdlOp@@AND to AND
                        INS list@@ops to AND
                        INS HdlOp@@DOT to ops
                        HdlOp: DOT
                            list: ops
                                HdlOp: DOT
                                    list: ops
                                        HdlOp: DOT
                                            list: ops
                                                HdlValueId: reg2hw
                                                HdlValueId: fdata
                                        HdlValueId: start
                                HdlValueId: qe


CommitId: 91a2335db7c362ea12962a6d0ccc6f589c1d01a3
[sysrst_ctrl] cleaned up unused lint errors
--- a/hw/ip/sysrst_ctrl/rtl/sysrst_ctrl_combofsm.sv
+++ b/hw/ip/sysrst_ctrl/rtl/sysrst_ctrl_combofsm.sv
@@ -20,7 +20,7 @@ module sysrst_ctrl_combofsm #(
 );
 
   logic trigger_h_q, trigger_l_q;
-  logic trigger_h2l, trigger_l2h, trigger_h2h, trigger_l2l;
+  logic trigger_h2l, trigger_l2h, trigger_l2l;
 
   logic [TIMER1BIT-1:0] timer1_cnt_d, timer1_cnt_q;
   logic timer1_cnt_clr, timer1_cnt_en;

ParseResult:
DEL HdlIdDef@@trigger_h2h from objs
HdlIdDef: trigger_h2h
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL


CommitId: 91a2335db7c362ea12962a6d0ccc6f589c1d01a3
[sysrst_ctrl] cleaned up unused lint errors
--- a/hw/ip/sysrst_ctrl/rtl/sysrst_ctrl_combofsm.sv
+++ b/hw/ip/sysrst_ctrl/rtl/sysrst_ctrl_combofsm.sv
@@ -45,7 +45,7 @@ module sysrst_ctrl_combofsm #(
 
   assign trigger_h2l = (trigger_h_q == 1'b1) && (trigger_l_i == 1'b1);
   assign trigger_l2h = (trigger_l_q == 1'b1) && (trigger_h_i == 1'b1);
-  assign trigger_h2h = (trigger_h_q == 1'b1) && (trigger_h_i == 1'b1);
+  //assign trigger_h2h = (trigger_h_q == 1'b1) && (trigger_h_i == 1'b1);
   assign trigger_l2l = (trigger_l_q == 1'b1) && (trigger_l_i == 1'b1);
 
   //Four-state FSM
ParseResult:
DEL HdlStmAssign@@ from objs
HdlStmAssign
    HdlOp: AND_LOG
        list: ops
            HdlOp: EQ
                list: ops
                    HdlValueId: trigger_h_q
                    HdlValueInt: 1
            HdlOp: EQ
                list: ops
                    HdlValueId: trigger_h_i
                    HdlValueInt: 1
    HdlValueId: trigger_h2h


CommitId: e38146466c337a0a5c9114e2fa90f7fe98ab93e9
Update lowrisc_ibex to lowRISC/ibex@f30e84b
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_register_file_latch.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_register_file_latch.sv
@@ -11,7 +11,7 @@
  * based RF. It requires a target technology-specific clock gating cell. Use this
  * register file when targeting ASIC synthesis or event-based simulators.
  */
-module ibex_register_file #(
+module ibex_register_file_latch #(
     parameter bit          RV32E             = 0,
     parameter int unsigned DataWidth         = 32,
     parameter bit          DummyInstructions = 0
ParseResult:
UPD HdlModuleDef@@ibex_register_file to ibex_register_file_latch

UPD HdlModuleDec@@ibex_register_file to ibex_register_file_latch


CommitId: 4f735bc6e72691152b3a87dd7d29bb394be5c785
Update lowrisc_ibex to lowRISC/ibex@dd39ec0
--- a/hw/vendor/lowrisc_ibex/dv/riscv_compliance/rtl/ibex_riscv_compliance.sv
+++ b/hw/vendor/lowrisc_ibex/dv/riscv_compliance/rtl/ibex_riscv_compliance.sv
@@ -15,6 +15,9 @@ module ibex_riscv_compliance (
   input IO_RST_N
 );
 
+  parameter bit          PMPEnable       = 1'b0;
+  parameter int unsigned PMPGranularity  = 0;
+  parameter int unsigned PMPNumRegions   = 4;
   parameter bit RV32E                    = 1'b0;
   parameter bit RV32M                    = 1'b1;
   parameter bit RV32B                    = 1'b0;

ParseResult:
INS HdlIdDef@@PMPEnable to params
HdlIdDef: PMPEnable
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: bit
    HdlValueInt: 0
    HdlDirection: INTERNAL

INS HdlIdDef@@PMPGranularity to params
HdlIdDef: PMPGranularity
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: int
            HdlOp: MAP_ASSOCIATION
                list: ops
                    HdlValueId: signed
    HdlValueInt: 0
    HdlDirection: INTERNAL

INS HdlIdDef@@PMPNumRegions to params
HdlIdDef: PMPNumRegions
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: int
            HdlOp: MAP_ASSOCIATION
                list: ops
                    HdlValueId: signed
    HdlValueInt: 4
    HdlDirection: INTERNAL


CommitId: 4f735bc6e72691152b3a87dd7d29bb394be5c785
Update lowrisc_ibex to lowRISC/ibex@dd39ec0
--- a/hw/vendor/lowrisc_ibex/dv/riscv_compliance/rtl/ibex_riscv_compliance.sv
+++ b/hw/vendor/lowrisc_ibex/dv/riscv_compliance/rtl/ibex_riscv_compliance.sv
@@ -39,8 +42,10 @@ module ibex_riscv_compliance (
     TestUtilDevice
   } bus_device_e;
 
-  localparam NrDevices = 2;
-  localparam NrHosts = 3;
+  localparam int unsigned NrDevices = 2;
+  localparam int unsigned NrHosts = 3;
+  // 64 kB RAM. Must be a power of 2. Check bus configuration below when changing.
+  localparam int unsigned RamSizeWords = 64*1024/4;
 
   // host and device signals
   logic           host_req    [NrHosts];

ParseResult:
INS HdlIdDef@@RamSizeWords to objs


CommitId: 4f735bc6e72691152b3a87dd7d29bb394be5c785
Update lowrisc_ibex to lowRISC/ibex@dd39ec0
--- a/hw/vendor/lowrisc_ibex/dv/riscv_compliance/rtl/ibex_riscv_compliance.sv
+++ b/hw/vendor/lowrisc_ibex/dv/riscv_compliance/rtl/ibex_riscv_compliance.sv
@@ -67,7 +72,7 @@ module ibex_riscv_compliance (
   logic [31:0] cfg_device_addr_base [NrDevices];
   logic [31:0] cfg_device_addr_mask [NrDevices];
   assign cfg_device_addr_base[Ram] = 32'h0;
-  assign cfg_device_addr_mask[Ram] = ~32'hFFFF; // 64 kB
+  assign cfg_device_addr_mask[Ram] = ~32'(RamSizeWords * 4 - 1);
   assign cfg_device_addr_base[TestUtilDevice] = 32'h20000;
   assign cfg_device_addr_mask[TestUtilDevice] = ~32'h3FF; // 1 kB
 

ParseResult:
UPD HdlStmAssign@@ to 
    UPD HdlOp@@NEG to NEG
        MOV list@@ops to NEG
        list: ops
            HdlValueInt: ffff
        UPD HdlValueInt@@ffff to 4


CommitId: 37eec2cbcb02ab1639382d3dbb8ab2bc5b3b904d
[flash_ctrl] Various clean-up and updates
--- a/hw/ip/flash_ctrl/rtl/flash_ctrl_lcmgr.sv
+++ b/hw/ip/flash_ctrl/rtl/flash_ctrl_lcmgr.sv
@@ -25,7 +25,7 @@ module flash_ctrl_lcmgr import flash_ctrl_pkg::*; #(
   output logic req_o,
   output logic [top_pkg::TL_AW-1:0] addr_o,
   input done_i,
-  input err_i,
+  input flash_ctrl_err_t err_i,
 
   // interface to ctrl_arb data ports
   output logic rready_o,

ParseResult:
UPD HdlIdDef@@err_i to err_i
    UPD HdlValueId@@wire to flash_ctrl_err_t


CommitId: 37eec2cbcb02ab1639382d3dbb8ab2bc5b3b904d
[flash_ctrl] Various clean-up and updates
--- a/hw/ip/flash_ctrl/rtl/flash_ctrl_lcmgr.sv
+++ b/hw/ip/flash_ctrl/rtl/flash_ctrl_lcmgr.sv
@@ -590,7 +590,7 @@ module flash_ctrl_lcmgr import flash_ctrl_pkg::*; #(
         rma_start = 1'b1;
         rma_op = FlashOpErase;
         if (done_i) begin
-          err_sts_set = err_i;
+          err_sts_set = |err_i;
           rma_state_d = StRmaWordSel;
         end
       end

ParseResult:
UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlOp@@OR_UNARY to ops
            UPD HdlOp@@OR_UNARY to OR_UNARY
                INS list@@ops to OR_UNARY

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            MOV HdlValueId@@err_i to ops
            HdlValueId: err_i


CommitId: 37eec2cbcb02ab1639382d3dbb8ab2bc5b3b904d
[flash_ctrl] Various clean-up and updates
--- a/hw/ip/flash_ctrl/rtl/flash_ctrl_lcmgr.sv
+++ b/hw/ip/flash_ctrl/rtl/flash_ctrl_lcmgr.sv
@@ -621,7 +621,7 @@ module flash_ctrl_lcmgr import flash_ctrl_pkg::*; #(
 
         if (done_i) begin
           beat_cnt_clr = 1'b1;
-          err_sts_set = err_i;
+          err_sts_set = |err_i;
           rma_state_d = StRmaRdVerify;
         end
       end
ParseResult:
UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlOp@@OR_UNARY to ops
            UPD HdlOp@@OR_UNARY to OR_UNARY
                INS list@@ops to OR_UNARY

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            MOV HdlValueId@@err_i to ops
            HdlValueId: err_i


CommitId: 597dea829296a9563ae6dfbf79a38fbb3ecbabc0
[ast] Fix ast.core file
--- a/hw/top_earlgrey/ip/ast/rtl/usb_osc.sv
+++ b/hw/top_earlgrey/ip/ast/rtl/usb_osc.sv
@@ -10,11 +10,13 @@ module usb_osc (
   input vcore_pok_h_i,    // VCORE POK @3.3V
   input usb_en_i,         // USB Source Clock Enable
   input usb_ref_val_i,    // USB Reference Valid
+`ifdef AST_BYPASS_CLK
   input clk_usb_ext_i,    // FPGA/VERILATOR Clock input
+`endif
   output logic usb_clk_o  // USB Clock Output
 );
 
-`ifndef SYNTHESIS
+`ifndef AST_BYPASS_CLK
 // Behavioral Model
 ////////////////////////////////////////
 timeunit 1ns / 1ps;

ParseResult:
DEL HdlIdDef@@clk_usb_ext_i from ports
HdlIdDef: clk_usb_ext_i
    HdlValueId: wire
    HdlDirection: IN


CommitId: 151991161cdb9063b5a79d908d33520ec912f14f
[ast] Add Fix AscentLint Errors
--- a/hw/top_earlgrey/ip/ast/rtl/ast_entropy.sv
+++ b/hw/top_earlgrey/ip/ast/rtl/ast_entropy.sv
@@ -44,7 +44,7 @@ always_ff @( posedge clk_ast_es_i, negedge rst_ast_es_ni ) begin
     edn_req <= 1'b0;
     erq_sm  <= ERQ_IDLE;
   end else begin
-    case ( erq_sm )
+    unique case ( erq_sm )
       ERQ_IDLE: begin
         if ( dev0_wready ) begin
           edn_req <= 1'b1;

ParseResult:
UPD HdlStmCase@@erq_sm to erq_sm
    INS HdlStmCaseUniqConstrain@@UNIQUE to erq_sm


CommitId: 151991161cdb9063b5a79d908d33520ec912f14f
[ast] Add Fix AscentLint Errors
--- a/hw/top_earlgrey/ip/ast/rtl/ast_entropy.sv
+++ b/hw/top_earlgrey/ip/ast/rtl/ast_entropy.sv
@@ -109,4 +109,13 @@ dev_entropy #(
 );
 
 
+
+/////////////////////
+// Unused Signals
+/////////////////////
+logic unused_sigs;
+assign unused_sigs = ^{ entropy_rsp_i.edn_fips,
+                        dev0_entropy              // Used in ASIC implementation
+                      };
+
 endmodule : ast_entropy
ParseResult:
INS HdlIdDef@@unused_sigs to objs
HdlIdDef: unused_sigs
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: XOR_UNARY
        list: ops
            HdlOp: CONCAT
                list: ops
                    HdlOp: DOT
                        list: ops
                            HdlValueId: entropy_rsp_i
                            HdlValueId: edn_fips
                    HdlValueId: dev0_entropy
    HdlValueId: unused_sigs


CommitId: 1b5fa9f1ebf0a9520ef6ea6faf1f1a2397a349c1
[verible/style] This corrects several style linter warnings/errors
--- a/hw/ip/usb_fs_nb_pe/rtl/usb_fs_rx.sv
+++ b/hw/ip/usb_fs_nb_pe/rtl/usb_fs_rx.sv
@@ -58,23 +58,23 @@ module usb_fs_rx (
 
   ///////////////////////////////////////
   // line state recovery state machine //
-  ///////////////////////////////////////  
+  ///////////////////////////////////////
 
   // The receive path doesn't currently use a differential reciever.  because of
   // this there is a chance that one of the differential pairs will appear to have
-  // changed to the new state while the other is still in the old state.  the 
+  // changed to the new state while the other is still in the old state.  the
   // following state machine detects transitions and waits an extra sampling clock
-  // before decoding the state on the differential pair.  this transition period 
+  // before decoding the state on the differential pair.  this transition period
   // will only ever last for one clock as long as there is no noise on the line.
   // if there is enough noise on the line then the data may be corrupted and the
   // packet will fail the data integrity checks.
-  
+
   logic [2:0] line_state_q, line_state_d;
-  localparam  DT = 3'b100;
-  localparam  DJ = 3'b010;
-  localparam  DK = 3'b001;
-  localparam SE0 = 3'b000;
-  localparam SE1 = 3'b011;
+  localparam logic [2:0]  DT = 3'b100;
+  localparam logic [2:0]  DJ = 3'b010;
+  localparam logic [2:0]  DK = 3'b001;
+  localparam logic [2:0] SE0 = 3'b000;
+  localparam logic [2:0] SE1 = 3'b011;
 
   // Mute the input if we're transmitting
   logic [1:0] dpair;

ParseResult:
INS HdlIdDef@@DT to objs
HdlIdDef: DT
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 2
                    HdlValueInt: 0
    HdlValueInt: 100
    HdlDirection: INTERNAL

INS HdlIdDef@@DJ to objs
HdlIdDef: DJ
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 2
                    HdlValueInt: 0
    HdlValueInt: 010
    HdlDirection: INTERNAL

INS HdlIdDef@@DK to objs
HdlIdDef: DK
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 2
                    HdlValueInt: 0
    HdlValueInt: 001
    HdlDirection: INTERNAL

INS HdlIdDef@@SE0 to objs
HdlIdDef: SE0
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 2
                    HdlValueInt: 0
    HdlValueInt: 000
    HdlDirection: INTERNAL

INS HdlIdDef@@SE1 to objs
HdlIdDef: SE1
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 2
                    HdlValueInt: 0
    HdlValueInt: 011
    HdlDirection: INTERNAL

DEL HdlIdDef@@DT from objs
HdlIdDef: DT
    HdlValueInt: 100
    HdlDirection: INTERNAL

DEL HdlIdDef@@DJ from objs
HdlIdDef: DJ
    HdlValueInt: 010
    HdlDirection: INTERNAL

DEL HdlIdDef@@DK from objs
HdlIdDef: DK
    HdlValueInt: 001
    HdlDirection: INTERNAL

DEL HdlIdDef@@SE0 from objs
HdlIdDef: SE0
    HdlValueInt: 000
    HdlDirection: INTERNAL

DEL HdlIdDef@@SE1 from objs
HdlIdDef: SE1
    HdlValueInt: 011
    HdlDirection: INTERNAL


CommitId: 151991161cdb9063b5a79d908d33520ec912f14f
[ast] Add Fix AscentLint Errors
--- a/hw/top_earlgrey/ip/ast/rtl/adc.sv
+++ b/hw/top_earlgrey/ip/ast/rtl/adc.sv
@@ -51,23 +51,22 @@ end
 // TODO: Add assertion that channel change always happen on ADC_IDLE!
 assign new_convert = chn_selected && !chn_selected_d && !adc_busy;
 
-// Behavioral Model
+////////////////////////////////////////
+// ADC Analog Model
 ////////////////////////////////////////
 logic [10-1:0] adc_d_ch0, adc_d_ch1;
 
-`ifndef SYNTHESIS
-ast_pkg::awire_t vref;
-ast_pkg::awire_t adc_vi0, adc_vi1;
-assign vref = 2.3;
-assign adc_vi0 = adc_a0_ai;
-assign adc_vi1 = adc_a1_ai;
-assign adc_d_ch0 = $rtoi((adc_vi0/vref) * $itor(10'h3ff));
-assign adc_d_ch1 = $rtoi((adc_vi1/vref) * $itor(10'h3ff));
-`else
-assign adc_d_ch0 = 10'h031 || {9'h000, adc_a0_ai};  // 0.111V
-assign adc_d_ch1 = 10'h21f || {9'h000, adc_a1_ai};  // 1.222V
-`endif
+adc_ana u_adc_ana (
+  .adc_a0_ai ( adc_a0_ai ),
+  .adc_a1_ai ( adc_a1_ai ),
+  .adc_d_ch0_o ( adc_d_ch0[10-1:0] ),
+  .adc_d_ch1_o ( adc_d_ch1[10-1:0] )
+);
+
 
+////////////////////////////////////////
+// ADC Digital Model
+////////////////////////////////////////
 logic [8-1:0] cnv_cyc;
 logic [8-1:0] ConvertCount;
 
ParseResult:
UPD HdlIdDef@@vref to vref
    UPD HdlOp@@DOUBLE_COLON to DOUBLE_COLON
        UPD list@@ops to param_map
        MOV list@@ops to DOUBLE_COLON
        list: ops
            HdlValueId: ast_pkg
            HdlValueId: awire_t
        DEL HdlValueId@@ast_pkg from ops
        DEL HdlValueId@@awire_t from ops
    DEL HdlOp@@DOUBLE_COLON from vref
    DEL HdlDirection@@INTERNAL from vref

UPD HdlIdDef@@adc_vi0 to adc_vi0
    UPD HdlOp@@DOUBLE_COLON to MAP_ASSOCIATION
    MOV HdlOp@@DOUBLE_COLON to adc_vi0
    HdlOp: DOUBLE_COLON
        list: ops
            HdlValueId: ast_pkg
            HdlValueId: awire_t
    UPD HdlOp@@DOUBLE_COLON to DOUBLE_COLON
        UPD HdlValueId@@ast_pkg to adc_a0_ai
        UPD HdlValueId@@awire_t to adc_a0_ai
    DEL HdlDirection@@INTERNAL from adc_vi0

UPD HdlIdDef@@adc_vi1 to adc_vi1
    UPD HdlOp@@DOUBLE_COLON to MAP_ASSOCIATION
    MOV HdlOp@@DOUBLE_COLON to adc_vi1
    HdlOp: DOUBLE_COLON
        list: ops
            HdlValueId: ast_pkg
            HdlValueId: awire_t
    UPD HdlOp@@DOUBLE_COLON to DOUBLE_COLON
        UPD HdlValueId@@ast_pkg to adc_a1_ai
        UPD HdlValueId@@awire_t to adc_a1_ai
    DEL HdlDirection@@INTERNAL from adc_vi1

UPD HdlStmAssign@@ to 
    UPD HdlOp@@CALL to MAP_ASSOCIATION
    MOV HdlOp@@CALL to 
    HdlOp: CALL
        list: ops
            HdlValueId: $rtoi
            HdlOp: MUL
                list: ops
                    HdlOp: DIV
                        list: ops
                            HdlValueId: adc_vi0
                            HdlValueId: vref
                    HdlOp: CALL
                        list: ops
                            HdlValueId: $itor
                            HdlValueInt: 3ff
    UPD HdlOp@@CALL to CALL
        UPD HdlValueId@@$rtoi to adc_d_ch0_o
        UPD HdlOp@@MUL to INDEX
        UPD HdlOp@@MUL to MUL
            UPD HdlOp@@DIV to DIV
                UPD HdlValueId@@adc_vi0 to adc_d_ch0
                MOV HdlValueId@@adc_vi0 to ops
                HdlValueId: adc_vi0
                DEL HdlValueId@@vref from ops
                DEL list@@ops from DIV
            UPD HdlOp@@CALL to SUB
            MOV HdlOp@@CALL to ops
            HdlOp: CALL
                list: ops
                    HdlValueId: $itor
                    HdlValueInt: 3ff
            UPD HdlOp@@CALL to CALL
                UPD HdlValueInt@@3ff to 10
                DEL HdlValueId@@$itor from ops
            DEL HdlOp@@DIV from ops
    UPD HdlValueId@@adc_d_ch0 to adc_d_ch1_o
    MOV HdlValueId@@adc_d_ch0 to 
    HdlValueId: adc_d_ch0

UPD HdlStmAssign@@ to 
    UPD HdlOp@@CALL to INDEX
    MOV HdlOp@@CALL to 
    HdlOp: CALL
        list: ops
            HdlValueId: $rtoi
            HdlOp: MUL
                list: ops
                    HdlOp: DIV
                        list: ops
                            HdlValueId: adc_vi1
                            HdlValueId: vref
                    HdlOp: CALL
                        list: ops
                            HdlValueId: $itor
                            HdlValueInt: 3ff
    UPD HdlOp@@CALL to CALL
        UPD HdlValueId@@$rtoi to adc_d_ch1
        UPD HdlOp@@MUL to DOWNTO
        UPD HdlOp@@MUL to MUL
            UPD HdlOp@@DIV to SUB
            UPD HdlOp@@CALL to CALL
                UPD HdlValueInt@@3ff to 0
                MOV HdlValueInt@@3ff to ops
                HdlValueInt: 3ff
                DEL HdlValueId@@$itor from ops
                DEL list@@ops from CALL
            UPD HdlOp@@DIV to DIV
                DEL HdlValueId@@adc_vi1 from ops
                DEL HdlValueId@@vref from ops
            DEL HdlOp@@CALL from ops
    DEL HdlValueId@@adc_d_ch1 from 

DEL HdlIdDef@@vref from objs

DEL HdlIdDef@@adc_vi0 from objs

DEL HdlIdDef@@adc_vi1 from objs

DEL HdlStmAssign@@ from objs
HdlStmAssign
    HdlValueId: vref

DEL HdlStmAssign@@ from objs
HdlStmAssign
    HdlValueId: adc_a0_ai
    HdlValueId: adc_vi0

DEL HdlStmAssign@@ from objs
HdlStmAssign
    HdlValueId: adc_a1_ai
    HdlValueId: adc_vi1

DEL HdlStmAssign@@ from objs

DEL HdlStmAssign@@ from objs


CommitId: f9e43d46044356517824155381b4091792db1b28
[chiplevel/padring] Correct mio_in_raw connection width for FPGA targets
--- a/hw/top_earlgrey/rtl/autogen/chip_earlgrey_cw310.sv
+++ b/hw/top_earlgrey/rtl/autogen/chip_earlgrey_cw310.sv
@@ -259,44 +259,62 @@ module chip_earlgrey_cw310 #(
   assign dio_in[DioSpiDeviceSd3] = 1'b0;
   assign unused_sig[18] = dio_out[DioSpiDeviceSd3] ^ dio_oe[DioSpiDeviceSd3];
   assign mio_in[19] = 1'b0;
+  assign mio_in_raw[19] = 1'b0;
   assign unused_sig[40] = mio_out[19] ^ mio_oe[19];
   assign mio_in[20] = 1'b0;
+  assign mio_in_raw[20] = 1'b0;
   assign unused_sig[41] = mio_out[20] ^ mio_oe[20];
   assign mio_in[21] = 1'b0;
+  assign mio_in_raw[21] = 1'b0;
   assign unused_sig[42] = mio_out[21] ^ mio_oe[21];
   assign mio_in[22] = 1'b0;
+  assign mio_in_raw[22] = 1'b0;
   assign unused_sig[43] = mio_out[22] ^ mio_oe[22];
   assign mio_in[23] = 1'b0;
+  assign mio_in_raw[23] = 1'b0;
   assign unused_sig[44] = mio_out[23] ^ mio_oe[23];
   assign mio_in[34] = 1'b0;
+  assign mio_in_raw[34] = 1'b0;
   assign unused_sig[55] = mio_out[34] ^ mio_oe[34];
   assign mio_in[35] = 1'b0;
+  assign mio_in_raw[35] = 1'b0;
   assign unused_sig[56] = mio_out[35] ^ mio_oe[35];
   assign mio_in[36] = 1'b0;
+  assign mio_in_raw[36] = 1'b0;
   assign unused_sig[57] = mio_out[36] ^ mio_oe[36];
   assign mio_in[37] = 1'b0;
+  assign mio_in_raw[37] = 1'b0;
   assign unused_sig[58] = mio_out[37] ^ mio_oe[37];
   assign mio_in[38] = 1'b0;
+  assign mio_in_raw[38] = 1'b0;
   assign unused_sig[59] = mio_out[38] ^ mio_oe[38];
   assign mio_in[39] = 1'b0;
+  assign mio_in_raw[39] = 1'b0;
   assign unused_sig[60] = mio_out[39] ^ mio_oe[39];
   assign mio_in[40] = 1'b0;
+  assign mio_in_raw[40] = 1'b0;
   assign unused_sig[61] = mio_out[40] ^ mio_oe[40];
   assign mio_in[41] = 1'b0;
+  assign mio_in_raw[41] = 1'b0;
   assign unused_sig[62] = mio_out[41] ^ mio_oe[41];
   assign mio_in[42] = 1'b0;
+  assign mio_in_raw[42] = 1'b0;
   assign unused_sig[63] = mio_out[42] ^ mio_oe[42];
   assign dio_in[DioSysrstCtrlAonEcRstOutL] = 1'b0;
   assign unused_sig[64] = dio_out[DioSysrstCtrlAonEcRstOutL] ^ dio_oe[DioSysrstCtrlAonEcRstOutL];
   assign dio_in[DioSysrstCtrlAonPwrbOut] = 1'b0;
   assign unused_sig[65] = dio_out[DioSysrstCtrlAonPwrbOut] ^ dio_oe[DioSysrstCtrlAonPwrbOut];
   assign mio_in[43] = 1'b0;
+  assign mio_in_raw[43] = 1'b0;
   assign unused_sig[66] = mio_out[43] ^ mio_oe[43];
   assign mio_in[44] = 1'b0;
+  assign mio_in_raw[44] = 1'b0;
   assign unused_sig[67] = mio_out[44] ^ mio_oe[44];
   assign mio_in[45] = 1'b0;
+  assign mio_in_raw[45] = 1'b0;
   assign unused_sig[68] = mio_out[45] ^ mio_oe[45];
   assign mio_in[46] = 1'b0;
+  assign mio_in_raw[46] = 1'b0;
   assign unused_sig[69] = mio_out[46] ^ mio_oe[46];
 
   //////////////////////

ParseResult:
INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlValueInt: 0
    HdlOp: INDEX
        list: ops
            HdlValueId: mio_in_raw
            HdlValueInt: 19

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlValueInt: 0
    HdlOp: INDEX
        list: ops
            HdlValueId: mio_in_raw
            HdlValueInt: 20

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlValueInt: 0
    HdlOp: INDEX
        list: ops
            HdlValueId: mio_in_raw
            HdlValueInt: 21

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlValueInt: 0
    HdlOp: INDEX
        list: ops
            HdlValueId: mio_in_raw
            HdlValueInt: 22

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlValueInt: 0
    HdlOp: INDEX
        list: ops
            HdlValueId: mio_in_raw
            HdlValueInt: 23

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlValueInt: 0
    HdlOp: INDEX
        list: ops
            HdlValueId: mio_in_raw
            HdlValueInt: 34

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlValueInt: 0
    HdlOp: INDEX
        list: ops
            HdlValueId: mio_in_raw
            HdlValueInt: 35

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlValueInt: 0
    HdlOp: INDEX
        list: ops
            HdlValueId: mio_in_raw
            HdlValueInt: 36

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlValueInt: 0
    HdlOp: INDEX
        list: ops
            HdlValueId: mio_in_raw
            HdlValueInt: 37

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlValueInt: 0
    HdlOp: INDEX
        list: ops
            HdlValueId: mio_in_raw
            HdlValueInt: 38

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlValueInt: 0
    HdlOp: INDEX
        list: ops
            HdlValueId: mio_in_raw
            HdlValueInt: 39

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlValueInt: 0
    HdlOp: INDEX
        list: ops
            HdlValueId: mio_in_raw
            HdlValueInt: 40

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlValueInt: 0
    HdlOp: INDEX
        list: ops
            HdlValueId: mio_in_raw
            HdlValueInt: 41

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlValueInt: 0
    HdlOp: INDEX
        list: ops
            HdlValueId: mio_in_raw
            HdlValueInt: 42

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlValueInt: 0
    HdlOp: INDEX
        list: ops
            HdlValueId: mio_in_raw
            HdlValueInt: 43

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlValueInt: 0
    HdlOp: INDEX
        list: ops
            HdlValueId: mio_in_raw
            HdlValueInt: 44

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlValueInt: 0
    HdlOp: INDEX
        list: ops
            HdlValueId: mio_in_raw
            HdlValueInt: 45

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlValueInt: 0
    HdlOp: INDEX
        list: ops
            HdlValueId: mio_in_raw
            HdlValueInt: 46


CommitId: 151991161cdb9063b5a79d908d33520ec912f14f
[ast] Add Fix AscentLint Errors
--- a/hw/top_earlgrey/ip/ast/rtl/usb_clk.sv
+++ b/hw/top_earlgrey/ip/ast/rtl/usb_clk.sv
@@ -58,4 +59,11 @@ prim_flop_2sync #(
   .q_o ( clk_src_usb_val_o )
 );
 
+
+/////////////////////////
+// Unused Signals
+/////////////////////////
+logic unused_sigs;
+assign unused_sigs = ^{ usb_ref_pulse_i };  // Used in ASIC implementation
+
 endmodule : usb_clk
ParseResult:
INS HdlIdDef@@unused_sigs to objs
HdlIdDef: unused_sigs
    HdlDirection: INTERNAL

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: XOR_UNARY
        list: ops
            HdlValueId: usb_ref_pulse_i
    HdlValueId: unused_sigs


CommitId: 53ef2ec43c1c1eb00b771e17fc157f5bb1103ed5
Update lowrisc_ibex to lowRISC/ibex@d14312c
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_if_stage.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_if_stage.sv
@@ -42,6 +25,8 @@ module ibex_if_stage #(
     input  logic                  instr_gnt_i,
     input  logic                  instr_rvalid_i,
     input  logic [31:0]           instr_rdata_i,
+    input  logic                  instr_err_i,
+    input  logic                  instr_pmp_err_i,
 
     // output of ID stage
     output logic                  instr_valid_id_o,         // instr in IF-ID is valid

ParseResult:
INS HdlIdDef@@instr_err_i to ports
HdlIdDef: instr_err_i
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: IN

INS HdlIdDef@@instr_pmp_err_i to ports
HdlIdDef: instr_pmp_err_i
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: IN


CommitId: 53ef2ec43c1c1eb00b771e17fc157f5bb1103ed5
Update lowrisc_ibex to lowRISC/ibex@d14312c
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_if_stage.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_if_stage.sv
@@ -52,6 +37,7 @@ module ibex_if_stage #(
                                                             // instr_is_compressed_id_o = 1'b1
     output logic                  instr_is_compressed_id_o, // compressed decoder thinks this
                                                             // is a compressed instr
+    output logic                  instr_fetch_err_o,        // bus error on fetch
     output logic                  illegal_c_insn_id_o,      // compressed decoder thinks this
                                                             // is an invalid instr
     output logic [31:0]           pc_if_o,

ParseResult:
INS HdlIdDef@@instr_fetch_err_o to ports
HdlIdDef: instr_fetch_err_o
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: OUT


CommitId: 53ef2ec43c1c1eb00b771e17fc157f5bb1103ed5
Update lowrisc_ibex to lowRISC/ibex@d14312c
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_if_stage.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_if_stage.sv
@@ -97,6 +83,7 @@ module ibex_if_stage #(
   logic              fetch_ready;
   logic       [31:0] fetch_rdata;
   logic       [31:0] fetch_addr;
+  logic              fetch_err;
 
   logic       [31:0] exc_pc;
 

ParseResult:
INS HdlIdDef@@fetch_err to objs
HdlIdDef: fetch_err
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL


CommitId: 53ef2ec43c1c1eb00b771e17fc157f5bb1103ed5
Update lowrisc_ibex to lowRISC/ibex@d14312c
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_if_stage.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_if_stage.sv
@@ -241,6 +231,7 @@ module ibex_if_stage #(
       instr_new_id_o             <= 1'b0;
       instr_valid_id_o           <= 1'b0;
       instr_rdata_id_o           <= '0;
+      instr_fetch_err_o          <= '0;
       instr_rdata_c_id_o         <= '0;
       instr_is_compressed_id_o   <= 1'b0;
       illegal_c_insn_id_o        <= 1'b0;

ParseResult:
INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: instr_fetch_err_o


CommitId: 53ef2ec43c1c1eb00b771e17fc157f5bb1103ed5
Update lowrisc_ibex to lowRISC/ibex@d14312c
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_if_stage.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_if_stage.sv
@@ -250,6 +241,7 @@ module ibex_if_stage #(
       if (if_id_pipe_reg_we) begin
         instr_valid_id_o         <= 1'b1;
         instr_rdata_id_o         <= instr_decompressed;
+        instr_fetch_err_o        <= fetch_err;
         instr_rdata_c_id_o       <= fetch_rdata[15:0];
         instr_is_compressed_id_o <= instr_is_compressed_int;
         illegal_c_insn_id_o      <= illegal_c_insn;
ParseResult:
INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueId: fetch_err
    HdlValueId: instr_fetch_err_o


CommitId: 5e355774aa89fe0ba655efff1390b7adb8b98da9
[uart] Make tick_baud_x16 flexible to NCO Width
--- a/hw/ip/uart/rtl/uart_core.sv
+++ b/hw/ip/uart/rtl/uart_core.sv
@@ -27,6 +27,8 @@ module uart_core (
 
   import uart_reg_pkg::*;
 
+  localparam int NcoWidth = $bits(reg2hw.ctrl.nco.q);
+
   logic   [15:0]  rx_val_q;
   logic   [7:0]   uart_rdata;
   logic           tick_baud_x16, rx_tick_baud;

ParseResult:
INS HdlIdDef@@NcoWidth to objs
HdlIdDef: NcoWidth
    HdlValueId: int
    HdlOp: CALL
        list: ops
            HdlValueId: $bits
            HdlOp: DOT
                list: ops
                    HdlOp: DOT
                        list: ops
                            HdlOp: DOT
                                list: ops
                                    HdlValueId: reg2hw
                                    HdlValueId: ctrl
                            HdlValueId: nco
                    HdlValueId: q
    HdlDirection: INTERNAL


CommitId: 5e355774aa89fe0ba655efff1390b7adb8b98da9
[uart] Make tick_baud_x16 flexible to NCO Width
--- a/hw/ip/uart/rtl/uart_core.sv
+++ b/hw/ip/uart/rtl/uart_core.sv
@@ -148,16 +150,14 @@ module uart_core (
 
   //              NCO 16x Baud Generator
   // output clock rate is:
-  //      Fin * (NCO/2**16)
-  // So, with a 16 bit accumulator, the output clock is
-  //      Fin * (NCO/65536)
-  logic   [16:0]     nco_sum_q; // extra bit to get the carry
+  //      Fin * (NCO/2**NcoWidth)
+  logic   [NcoWidth:0]     nco_sum_q; // extra bit to get the carry
 
   always_ff @(posedge clk_i or negedge rst_ni) begin
     if (!rst_ni) begin
       nco_sum_q <= 17'h0;
     end else if (tx_enable || rx_enable) begin
-      nco_sum_q <= {1'b0,nco_sum_q[15:0]} + {1'b0,reg2hw.ctrl.nco.q};
+      nco_sum_q <= {1'b0,nco_sum_q[NcoWidth-1:0]} + {1'b0,reg2hw.ctrl.nco.q[NcoWidth-1:0]};
     end
   end
 
ParseResult:
INS HdlIdDef@@nco_sum_q to objs
HdlIdDef: nco_sum_q
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlValueId: NcoWidth
                    HdlValueInt: 0
    HdlDirection: INTERNAL

UPD HdlStmAssign@@ to 
    INS HdlOp@@ADD to 
    UPD HdlOp@@ADD to ADD
        INS list@@ops to ADD
        UPD HdlOp@@CONCAT to CONCAT
            INS HdlValueInt@@0 to ops
            UPD HdlOp@@INDEX to INDEX
                UPD HdlOp@@DOWNTO to DOWNTO
                    INS HdlOp@@SUB to ops
                    UPD HdlOp@@SUB to SUB
                        INS list@@ops to SUB
                        INS HdlValueId@@NcoWidth to ops
        UPD HdlOp@@CONCAT to CONCAT
            UPD HdlOp@@INDEX to INDEX
                INS HdlOp@@DOWNTO to ops
                HdlOp: DOWNTO
                    list: ops
                        HdlOp: SUB
                            list: ops
                                HdlValueId: NcoWidth
                                HdlValueInt: 1
                        HdlValueInt: 0

UPD HdlStmAssign@@ to 
    UPD HdlOp@@ADD to ADD
        MOV HdlOp@@CONCAT to ops
        HdlOp: CONCAT
            list: ops
                HdlValueInt: 0
                HdlOp: INDEX
                    list: ops
                        HdlValueId: nco_sum_q
                        HdlOp: DOWNTO
                            list: ops
                                HdlValueInt: 15
                                HdlValueInt: 0
        UPD HdlOp@@CONCAT to CONCAT
            MOV HdlValueInt@@0 to ops
            HdlValueInt: 0
            UPD HdlOp@@INDEX to INDEX
                UPD HdlOp@@DOWNTO to DOWNTO
                    UPD HdlValueInt@@15 to 1
                    MOV HdlValueInt@@15 to ops
                    HdlValueInt: 15
        UPD HdlOp@@CONCAT to INDEX
        UPD HdlOp@@CONCAT to CONCAT
            DEL HdlValueInt@@0 from ops
    UPD HdlOp@@ADD to CONCAT
    MOV HdlOp@@ADD to 
    HdlOp: ADD
        list: ops
            HdlOp: CONCAT
                list: ops
                    HdlValueInt: 0
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: nco_sum_q
                            HdlOp: DOWNTO
                                list: ops
                                    HdlValueInt: 15
                                    HdlValueInt: 0
            HdlOp: CONCAT
                list: ops
                    HdlValueInt: 0
                    HdlOp: DOT
                        list: ops
                            HdlOp: DOT
                                list: ops
                                    HdlOp: DOT
                                        list: ops
                                            HdlValueId: reg2hw
                                            HdlValueId: ctrl
                                    HdlValueId: nco
                            HdlValueId: q

DEL HdlIdDef@@nco_sum_q from objs
HdlIdDef: nco_sum_q
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 16
                    HdlValueInt: 0
    HdlDirection: INTERNAL


CommitId: 3519dd2a391a001bb2dae2ed2bc37789b59b97ad
[csrng/rtl] instantiate and generate bug fixes
--- a/hw/ip/csrng/rtl/csrng_ctr_drbg_gen.sv
+++ b/hw/ip/csrng/rtl/csrng_ctr_drbg_gen.sv
@@ -25,6 +25,7 @@ module csrng_ctr_drbg_gen import csrng_pkg::*; #(
   output logic               ctr_drbg_gen_rdy_o, // ready to process the req above
   input logic [Cmd-1:0]      ctr_drbg_gen_ccmd_i,    // current command
   input logic [StateId-1:0]  ctr_drbg_gen_inst_id_i, // instantance id
+  input logic                ctr_drbg_gen_glast_i,   // gen cmd last beat
   input logic                ctr_drbg_gen_fips_i,    // fips
   input logic [SeedLen-1:0]  ctr_drbg_gen_adata_i,   // additional data
   input logic [KeyLen-1:0]   ctr_drbg_gen_key_i,

ParseResult:
INS HdlIdDef@@ctr_drbg_gen_glast_i to ports
HdlIdDef: ctr_drbg_gen_glast_i
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: IN


CommitId: 3519dd2a391a001bb2dae2ed2bc37789b59b97ad
[csrng/rtl] instantiate and generate bug fixes
--- a/hw/ip/csrng/rtl/csrng_ctr_drbg_gen.sv
+++ b/hw/ip/csrng/rtl/csrng_ctr_drbg_gen.sv
@@ -83,19 +84,20 @@ module csrng_ctr_drbg_gen import csrng_pkg::*; #(
 );
 
   localparam int GenreqFifoDepth = 1;
-  localparam int GenreqFifoWidth = KeyLen+BlkLen+CtrLen+1+SeedLen+StateId+Cmd;
+  localparam int GenreqFifoWidth = KeyLen+BlkLen+CtrLen+1+SeedLen+1+StateId+Cmd;
   localparam int BlkEncAckFifoDepth = 1;
   localparam int BlkEncAckFifoWidth = BlkLen+StateId+Cmd;
   localparam int AdstageFifoDepth = 1;
-  localparam int AdstageFifoWidth = KeyLen+BlkLen+CtrLen+1+SeedLen;
+  localparam int AdstageFifoWidth = KeyLen+BlkLen+CtrLen+1+SeedLen+1;
   localparam int RCStageFifoDepth = 1;
-  localparam int RCStageFifoWidth = BlkLen+CtrLen+1;
+  localparam int RCStageFifoWidth = KeyLen+BlkLen+BlkLen+CtrLen+1+1+StateId+Cmd;
   localparam int GenbitsFifoDepth = 1;
   localparam int GenbitsFifoWidth = 1+BlkLen+KeyLen+BlkLen+CtrLen+StateId+Cmd;
 
   // signals
   logic [Cmd-1:0]     genreq_ccmd;
   logic [StateId-1:0] genreq_id;
+  logic               genreq_glast;
   logic [SeedLen-1:0] genreq_adata;
   logic               genreq_fips;
   logic [KeyLen-1:0]  genreq_key;

ParseResult:
INS HdlIdDef@@RCStageFifoWidth to objs
HdlIdDef: RCStageFifoWidth
    HdlValueId: int
    HdlOp: ADD
        list: ops
            HdlOp: ADD
                list: ops
                    HdlOp: ADD
                        list: ops
                            HdlOp: ADD
                                list: ops
                                    HdlOp: ADD
                                        list: ops
                                            HdlOp: ADD
                                                list: ops
                                                    HdlOp: ADD
                                                        list: ops
                                                            HdlValueId: KeyLen
                                                            HdlValueId: BlkLen
                                                    HdlValueId: BlkLen
                                            HdlValueId: CtrLen
                                    HdlValueInt: 1
                            HdlValueInt: 1
                    HdlValueId: StateId
            HdlValueId: Cmd
    HdlDirection: INTERNAL

INS HdlIdDef@@genreq_glast to objs
HdlIdDef: genreq_glast
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

UPD HdlIdDef@@GenreqFifoWidth to GenreqFifoWidth
    INS HdlOp@@ADD to GenreqFifoWidth
    UPD HdlOp@@ADD to ADD
        INS list@@ops to ADD
        INS HdlValueId@@Cmd to ops
        UPD HdlOp@@ADD to ADD
            UPD HdlOp@@ADD to ADD
                INS HdlValueInt@@1 to ops

UPD HdlIdDef@@AdstageFifoWidth to AdstageFifoWidth
    INS HdlOp@@ADD to AdstageFifoWidth
    UPD HdlOp@@ADD to ADD
        INS list@@ops to ADD
        INS HdlValueInt@@1 to ops

UPD HdlIdDef@@GenreqFifoWidth to GenreqFifoWidth
    MOV HdlOp@@ADD to GenreqFifoWidth
    HdlOp: ADD
        list: ops
            HdlOp: ADD
                list: ops
                    HdlOp: ADD
                        list: ops
                            HdlOp: ADD
                                list: ops
                                    HdlOp: ADD
                                        list: ops
                                            HdlOp: ADD
                                                list: ops
                                                    HdlValueId: KeyLen
                                                    HdlValueId: BlkLen
                                            HdlValueId: CtrLen
                                    HdlValueInt: 1
                            HdlValueId: SeedLen
                    HdlValueId: StateId
            HdlValueId: Cmd
    UPD HdlOp@@ADD to ADD
        UPD HdlValueId@@Cmd to StateId
        UPD HdlOp@@ADD to ADD
            DEL HdlValueId@@StateId from ops

UPD HdlIdDef@@AdstageFifoWidth to AdstageFifoWidth
    MOV HdlOp@@ADD to AdstageFifoWidth
    HdlOp: ADD
        list: ops
            HdlOp: ADD
                list: ops
                    HdlOp: ADD
                        list: ops
                            HdlOp: ADD
                                list: ops
                                    HdlValueId: KeyLen
                                    HdlValueId: BlkLen
                            HdlValueId: CtrLen
                    HdlValueInt: 1
            HdlValueId: SeedLen

DEL HdlIdDef@@RCStageFifoWidth from objs
HdlIdDef: RCStageFifoWidth
    HdlValueId: int
    HdlOp: ADD
        list: ops
            HdlOp: ADD
                list: ops
                    HdlValueId: BlkLen
                    HdlValueId: CtrLen
            HdlValueInt: 1
    HdlDirection: INTERNAL


CommitId: 3519dd2a391a001bb2dae2ed2bc37789b59b97ad
[csrng/rtl] instantiate and generate bug fixes
--- a/hw/ip/csrng/rtl/csrng_ctr_drbg_gen.sv
+++ b/hw/ip/csrng/rtl/csrng_ctr_drbg_gen.sv
@@ -106,12 +108,18 @@ module csrng_ctr_drbg_gen import csrng_pkg::*; #(
   logic [BlkLen-1:0]  adstage_v;
   logic [CtrLen-1:0]  adstage_rc;
   logic               adstage_fips;
+  logic               adstage_glast;
   logic [SeedLen-1:0] adstage_adata;
 
+  logic [KeyLen-1:0]  rcstage_key;
+  logic [BlkLen-1:0]  rcstage_v;
   logic [BlkLen-1:0]  rcstage_bits;
   logic [CtrLen-1:0]  rcstage_rc;
+  logic               rcstage_glast;
   logic               rcstage_fips;
   logic [CtrLen-1:0]  rcstage_rc_plus1;
+  logic [Cmd-1:0]     rcstage_ccmd;
+  logic [StateId-1:0] rcstage_inst_id;
 
   logic [Cmd-1:0]     genreq_ccmd_modified;
   logic [Cmd-1:0]     bencack_ccmd_modified;

ParseResult:
INS HdlIdDef@@adstage_glast to objs
HdlIdDef: adstage_glast
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

INS HdlIdDef@@rcstage_key to objs
HdlIdDef: rcstage_key
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlOp: SUB
                        list: ops
                            HdlValueId: KeyLen
                            HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: INTERNAL

INS HdlIdDef@@rcstage_v to objs
HdlIdDef: rcstage_v
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlOp: SUB
                        list: ops
                            HdlValueId: BlkLen
                            HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: INTERNAL

INS HdlIdDef@@rcstage_glast to objs
HdlIdDef: rcstage_glast
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

INS HdlIdDef@@rcstage_ccmd to objs
HdlIdDef: rcstage_ccmd
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlOp: SUB
                        list: ops
                            HdlValueId: Cmd
                            HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: INTERNAL

INS HdlIdDef@@rcstage_inst_id to objs
HdlIdDef: rcstage_inst_id
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlOp: SUB
                        list: ops
                            HdlValueId: StateId
                            HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: INTERNAL


CommitId: 3519dd2a391a001bb2dae2ed2bc37789b59b97ad
[csrng/rtl] instantiate and generate bug fixes
--- a/hw/ip/csrng/rtl/csrng_ctr_drbg_gen.sv
+++ b/hw/ip/csrng/rtl/csrng_ctr_drbg_gen.sv
@@ -254,13 +262,13 @@ module csrng_ctr_drbg_gen import csrng_pkg::*; #(
   assign genreq_ccmd_modified = (ctr_drbg_gen_ccmd_i == GEN) ? GENB : INV;
 
   assign sfifo_genreq_wdata = {ctr_drbg_gen_key_i,ctr_drbg_gen_v_i,ctr_drbg_gen_rc_i,
-                               ctr_drbg_gen_fips_i,ctr_drbg_gen_adata_i,
+                               ctr_drbg_gen_fips_i,ctr_drbg_gen_adata_i,ctr_drbg_gen_glast_i,
                                ctr_drbg_gen_inst_id_i,genreq_ccmd_modified};
 
   assign sfifo_genreq_push = ctr_drbg_gen_enable_i && ctr_drbg_gen_req_i;
 
   assign {genreq_key,genreq_v,genreq_rc,
-          genreq_fips,genreq_adata,
+          genreq_fips,genreq_adata,genreq_glast,
           genreq_id,genreq_ccmd} = sfifo_genreq_rdata;
 
   assign ctr_drbg_gen_rdy_o = !sfifo_genreq_full;

ParseResult:
UPD HdlStmAssign@@ to 
    INS HdlOp@@CONCAT to 
    UPD HdlOp@@CONCAT to CONCAT
        INS list@@ops to CONCAT
        INS HdlValueId@@genreq_ccmd_modified to ops

UPD HdlStmAssign@@ to 
    MOV HdlOp@@CONCAT to 
    HdlOp: CONCAT
        list: ops
            HdlOp: CONCAT
                list: ops
                    HdlOp: CONCAT
                        list: ops
                            HdlOp: CONCAT
                                list: ops
                                    HdlOp: CONCAT
                                        list: ops
                                            HdlOp: CONCAT
                                                list: ops
                                                    HdlValueId: ctr_drbg_gen_key_i
                                                    HdlValueId: ctr_drbg_gen_v_i
                                            HdlValueId: ctr_drbg_gen_rc_i
                                    HdlValueId: ctr_drbg_gen_fips_i
                            HdlValueId: ctr_drbg_gen_adata_i
                    HdlValueId: ctr_drbg_gen_inst_id_i
            HdlValueId: genreq_ccmd_modified
    UPD HdlOp@@CONCAT to CONCAT
        UPD HdlValueId@@genreq_ccmd_modified to ctr_drbg_gen_inst_id_i
        UPD HdlOp@@CONCAT to CONCAT
            UPD HdlValueId@@ctr_drbg_gen_inst_id_i to ctr_drbg_gen_glast_i

UPD HdlStmAssign@@ to 
    MOV HdlOp@@CONCAT to 
    HdlOp: CONCAT
        list: ops
            HdlOp: CONCAT
                list: ops
                    HdlOp: CONCAT
                        list: ops
                            HdlOp: CONCAT
                                list: ops
                                    HdlOp: CONCAT
                                        list: ops
                                            HdlOp: CONCAT
                                                list: ops
                                                    HdlValueId: genreq_key
                                                    HdlValueId: genreq_v
                                            HdlValueId: genreq_rc
                                    HdlValueId: genreq_fips
                            HdlValueId: genreq_adata
                    HdlValueId: genreq_id
            HdlValueId: genreq_ccmd
    UPD HdlOp@@CONCAT to CONCAT
        UPD HdlValueId@@genreq_ccmd to genreq_id
        UPD HdlOp@@CONCAT to CONCAT
            UPD HdlValueId@@genreq_id to genreq_glast


CommitId: 3519dd2a391a001bb2dae2ed2bc37789b59b97ad
[csrng/rtl] instantiate and generate bug fixes
--- a/hw/ip/csrng/rtl/csrng_ctr_drbg_gen.sv
+++ b/hw/ip/csrng/rtl/csrng_ctr_drbg_gen.sv
@@ -381,9 +389,10 @@ module csrng_ctr_drbg_gen import csrng_pkg::*; #(
     .depth_o        ()
   );
 
-  assign sfifo_adstage_wdata = {genreq_key,v_sized,genreq_rc,genreq_fips,genreq_adata};
+  assign sfifo_adstage_wdata = {genreq_key,v_sized,genreq_rc,genreq_fips,genreq_adata,genreq_glast};
   assign sfifo_adstage_pop = sfifo_adstage_not_empty && sfifo_bencack_pop;
-  assign {adstage_key,adstage_v,adstage_rc,adstage_fips,adstage_adata} = sfifo_adstage_rdata;
+  assign {adstage_key,adstage_v,adstage_rc,adstage_fips,
+          adstage_adata,adstage_glast} = sfifo_adstage_rdata;
 
   assign ctr_drbg_gen_sfifo_gadstage_err_o =
          {(sfifo_adstage_push && sfifo_adstage_full),

ParseResult:
UPD HdlStmAssign@@ to 
    MOV HdlOp@@CONCAT to 
    HdlOp: CONCAT
        list: ops
            HdlOp: CONCAT
                list: ops
                    HdlOp: CONCAT
                        list: ops
                            HdlOp: CONCAT
                                list: ops
                                    HdlValueId: genreq_key
                                    HdlValueId: v_sized
                            HdlValueId: genreq_rc
                    HdlValueId: genreq_fips
            HdlValueId: genreq_adata

UPD HdlStmAssign@@ to 
    MOV HdlOp@@CONCAT to 
    HdlOp: CONCAT
        list: ops
            HdlOp: CONCAT
                list: ops
                    HdlOp: CONCAT
                        list: ops
                            HdlOp: CONCAT
                                list: ops
                                    HdlValueId: adstage_key
                                    HdlValueId: adstage_v
                            HdlValueId: adstage_rc
                    HdlValueId: adstage_fips
            HdlValueId: adstage_adata


CommitId: 3519dd2a391a001bb2dae2ed2bc37789b59b97ad
[csrng/rtl] instantiate and generate bug fixes
--- a/hw/ip/csrng/rtl/csrng_ctr_drbg_gen.sv
+++ b/hw/ip/csrng/rtl/csrng_ctr_drbg_gen.sv
@@ -421,7 +430,8 @@ module csrng_ctr_drbg_gen import csrng_pkg::*; #(
   assign sfifo_bencack_wdata = {block_encrypt_v_i,block_encrypt_inst_id_i,bencack_ccmd_modified};
   assign block_encrypt_rdy_o = !sfifo_bencack_full;
 
-  assign sfifo_bencack_pop = !sfifo_rcstage_full && sfifo_bencack_not_empty && upd_gen_rdy_i;
+  assign sfifo_bencack_pop = !sfifo_rcstage_full && sfifo_bencack_not_empty &&
+                             (upd_gen_rdy_i || !adstage_glast);
 
   assign {sfifo_bencack_bits,sfifo_bencack_inst_id,sfifo_bencack_ccmd} = sfifo_bencack_rdata;
 

ParseResult:
UPD HdlStmAssign@@ to 
    UPD HdlOp@@AND_LOG to AND_LOG
        MOV HdlValueId@@upd_gen_rdy_i to ops
        HdlValueId: upd_gen_rdy_i


CommitId: 3519dd2a391a001bb2dae2ed2bc37789b59b97ad
[csrng/rtl] instantiate and generate bug fixes
--- a/hw/ip/csrng/rtl/csrng_ctr_drbg_gen.sv
+++ b/hw/ip/csrng/rtl/csrng_ctr_drbg_gen.sv
@@ -436,7 +446,7 @@ module csrng_ctr_drbg_gen import csrng_pkg::*; #(
   //--------------------------------------------
 
   // send to the update block
-  assign gen_upd_req_o = sfifo_bencack_not_empty;
+  assign gen_upd_req_o = sfifo_bencack_not_empty && adstage_glast;
   assign gen_upd_ccmd_o = sfifo_bencack_ccmd;
   assign gen_upd_inst_id_o = sfifo_bencack_inst_id;
   assign gen_upd_pdata_o = adstage_adata;

ParseResult:
INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: AND_LOG
        list: ops
            HdlValueId: sfifo_bencack_not_empty
            HdlValueId: adstage_glast
    HdlValueId: gen_upd_req_o

UPD HdlStmAssign@@ to 
    UPD HdlOp@@AND_LOG to AND_LOG
        INS HdlOp@@OR_LOG to ops
        UPD HdlOp@@OR_LOG to OR_LOG
            INS list@@ops to OR_LOG
            INS HdlOp@@NEG_LOG to ops
            HdlOp: NEG_LOG
                list: ops
                    HdlValueId: adstage_glast

DEL HdlStmAssign@@ from objs
HdlStmAssign
    HdlValueId: sfifo_bencack_not_empty
    HdlValueId: gen_upd_req_o


CommitId: 3519dd2a391a001bb2dae2ed2bc37789b59b97ad
[csrng/rtl] instantiate and generate bug fixes
--- a/hw/ip/csrng/rtl/csrng_ctr_drbg_gen.sv
+++ b/hw/ip/csrng/rtl/csrng_ctr_drbg_gen.sv
@@ -469,9 +479,14 @@ module csrng_ctr_drbg_gen import csrng_pkg::*; #(
   );
 
   assign sfifo_rcstage_push = sfifo_adstage_pop;
-  assign sfifo_rcstage_wdata = {sfifo_bencack_bits,adstage_rc,adstage_fips};
-  assign sfifo_rcstage_pop = sfifo_rcstage_not_empty && upd_gen_ack_i;
-  assign {rcstage_bits,rcstage_rc,rcstage_fips} = sfifo_rcstage_rdata;
+  assign sfifo_rcstage_wdata = {adstage_key,adstage_v,sfifo_bencack_bits,
+                                adstage_rc,adstage_fips,adstage_glast,
+                                sfifo_bencack_inst_id,sfifo_bencack_ccmd};
+
+  assign sfifo_rcstage_pop = sfifo_rcstage_not_empty && (upd_gen_ack_i || !rcstage_glast);
+
+  assign {rcstage_key,rcstage_v,rcstage_bits,rcstage_rc,rcstage_fips,rcstage_glast,
+          rcstage_inst_id,rcstage_ccmd} = sfifo_rcstage_rdata;
 
 
   assign ctr_drbg_gen_sfifo_grcstage_err_o =

ParseResult:
INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: CONCAT
        list: ops
            HdlOp: CONCAT
                list: ops
                    HdlOp: CONCAT
                        list: ops
                            HdlOp: CONCAT
                                list: ops
                                    HdlOp: CONCAT
                                        list: ops
                                            HdlOp: CONCAT
                                                list: ops
                                                    HdlOp: CONCAT
                                                        list: ops
                                                            HdlValueId: adstage_key
                                                            HdlValueId: adstage_v
                                                    HdlValueId: sfifo_bencack_bits
                                            HdlValueId: adstage_rc
                                    HdlValueId: adstage_fips
                            HdlValueId: adstage_glast
                    HdlValueId: sfifo_bencack_inst_id
            HdlValueId: sfifo_bencack_ccmd
    HdlValueId: sfifo_rcstage_wdata

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: AND_LOG
        list: ops
            HdlValueId: sfifo_rcstage_not_empty
            HdlOp: OR_LOG
                list: ops
                    HdlValueId: upd_gen_ack_i
                    HdlOp: NEG_LOG
                        list: ops
                            HdlValueId: rcstage_glast
    HdlValueId: sfifo_rcstage_pop

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlValueId: sfifo_rcstage_rdata
    HdlOp: CONCAT
        list: ops
            HdlOp: CONCAT
                list: ops
                    HdlOp: CONCAT
                        list: ops
                            HdlOp: CONCAT
                                list: ops
                                    HdlOp: CONCAT
                                        list: ops
                                            HdlOp: CONCAT
                                                list: ops
                                                    HdlOp: CONCAT
                                                        list: ops
                                                            HdlValueId: rcstage_key
                                                            HdlValueId: rcstage_v
                                                    HdlValueId: rcstage_bits
                                            HdlValueId: rcstage_rc
                                    HdlValueId: rcstage_fips
                            HdlValueId: rcstage_glast
                    HdlValueId: rcstage_inst_id
            HdlValueId: rcstage_ccmd

DEL HdlStmAssign@@ from objs
HdlStmAssign
    HdlOp: CONCAT
        list: ops
            HdlOp: CONCAT
                list: ops
                    HdlValueId: sfifo_bencack_bits
                    HdlValueId: adstage_rc
            HdlValueId: adstage_fips
    HdlValueId: sfifo_rcstage_wdata

DEL HdlStmAssign@@ from objs
HdlStmAssign
    HdlOp: AND_LOG
        list: ops
            HdlValueId: sfifo_rcstage_not_empty
            HdlValueId: upd_gen_ack_i
    HdlValueId: sfifo_rcstage_pop

DEL HdlStmAssign@@ from objs
HdlStmAssign
    HdlValueId: sfifo_rcstage_rdata
    HdlOp: CONCAT
        list: ops
            HdlOp: CONCAT
                list: ops
                    HdlValueId: rcstage_bits
                    HdlValueId: rcstage_rc
            HdlValueId: rcstage_fips


CommitId: 3519dd2a391a001bb2dae2ed2bc37789b59b97ad
[csrng/rtl] instantiate and generate bug fixes
--- a/hw/ip/csrng/rtl/csrng_ctr_drbg_gen.sv
+++ b/hw/ip/csrng/rtl/csrng_ctr_drbg_gen.sv
@@ -509,9 +524,11 @@ module csrng_ctr_drbg_gen import csrng_pkg::*; #(
 
   assign rcstage_rc_plus1 = (rcstage_rc+1);
 
-  assign sfifo_genbits_wdata =
-         {rcstage_fips,rcstage_bits,upd_gen_key_i,upd_gen_v_i,
-          rcstage_rc_plus1,upd_gen_inst_id_i,upd_gen_ccmd_i};
+  assign sfifo_genbits_wdata = rcstage_glast ?
+                               {rcstage_fips,rcstage_bits,upd_gen_key_i,upd_gen_v_i,
+                                rcstage_rc_plus1,upd_gen_inst_id_i,upd_gen_ccmd_i} :
+                               {rcstage_fips,rcstage_bits,rcstage_key,rcstage_v,
+                                rcstage_rc,rcstage_inst_id,rcstage_ccmd};
 
   assign sfifo_genbits_pop = ctr_drbg_gen_rdy_i && sfifo_genbits_not_empty;
   assign {ctr_drbg_gen_fips_o,ctr_drbg_gen_bits_o,
ParseResult:
UPD HdlStmAssign@@ to 
    MOV HdlOp@@CONCAT to 
    HdlOp: CONCAT
        list: ops
            HdlOp: CONCAT
                list: ops
                    HdlOp: CONCAT
                        list: ops
                            HdlOp: CONCAT
                                list: ops
                                    HdlOp: CONCAT
                                        list: ops
                                            HdlOp: CONCAT
                                                list: ops
                                                    HdlValueId: rcstage_fips
                                                    HdlValueId: rcstage_bits
                                            HdlValueId: upd_gen_key_i
                                    HdlValueId: upd_gen_v_i
                            HdlValueId: rcstage_rc_plus1
                    HdlValueId: upd_gen_inst_id_i
            HdlValueId: upd_gen_ccmd_i


CommitId: 947196bbc9844013c4fd9c2456a46a9ba23ce1f0
Update lowrisc_ibex to lowRISC/ibex@5c60b094
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_lockstep.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_lockstep.sv
@@ -88,7 +88,9 @@ module ibex_lockstep import ibex_pkg::*; #(
 
     output logic                         alert_minor_o,
     output logic                         alert_major_o,
-    input  logic                         core_busy_i
+    input  logic                         core_busy_i,
+    input  logic                         test_en_i,
+    input  logic                         scan_rst_ni
 );
 
   localparam int unsigned LockstepOffsetW = $clog2(LockstepOffset);

ParseResult:
INS HdlIdDef@@test_en_i to ports
HdlIdDef: test_en_i
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: IN

INS HdlIdDef@@scan_rst_ni to ports
HdlIdDef: scan_rst_ni
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: IN


CommitId: 947196bbc9844013c4fd9c2456a46a9ba23ce1f0
Update lowrisc_ibex to lowRISC/ibex@5c60b094
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_lockstep.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_lockstep.sv
@@ -118,7 +120,7 @@ module ibex_lockstep import ibex_pkg::*; #(
     end
   end
 
-  assign rst_shadow_n = rst_shadow_set_q;
+  assign rst_shadow_n = test_en_i ? scan_rst_ni : rst_shadow_set_q;
 
   //////////////////
   // Input delays //
ParseResult:
UPD HdlStmAssign@@ to 
    MOV HdlValueId@@rst_shadow_set_q to 
    HdlValueId: rst_shadow_set_q


CommitId: 8d38646ca6df90397e879b7ed8a17be2de8e2cb7
[prim] update prim flash to have ack / done support
--- a/hw/ip/prim_generic/rtl/prim_generic_flash.sv
+++ b/hw/ip/prim_generic/rtl/prim_generic_flash.sv
@@ -31,6 +31,7 @@ module prim_generic_flash #(
   input [DataWidth-1:0]              prog_data_i,
   output logic [flash_ctrl_pkg::ProgTypes-1:0] prog_type_avail_o,
   output logic                       ack_o,
+  output logic                       done_o,
   output logic [DataWidth-1:0]       rd_data_o,
   output logic                       init_busy_o,
 

ParseResult:
INS HdlIdDef@@done_o to ports
HdlIdDef: done_o
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: OUT


CommitId: 8d38646ca6df90397e879b7ed8a17be2de8e2cb7
[prim] update prim flash to have ack / done support
--- a/hw/ip/prim_generic/rtl/prim_generic_flash.sv
+++ b/hw/ip/prim_generic/rtl/prim_generic_flash.sv
@@ -152,9 +206,6 @@ module prim_generic_flash #(
 
       if (index_cnt_inc) index_cnt <= index_cnt + 1'b1;
       else if (index_cnt_clr) index_cnt <= 32'h0;
-
-      if (prog_pend_q) held_rdata <= rd_data_o;
-
     end
   end
 

ParseResult:
UPD HdlStmAssign@@ to 
    INS HdlValueId@@mem_addr to 
    UPD HdlOp@@ADD to ADD
        INS HdlOp@@DOT to ops
        UPD HdlOp@@DOT to DOT
            INS list@@ops to DOT
            INS HdlValueId@@cmd_q to ops

DEL HdlStmIf@@ from body
HdlStmIf
    HdlValueId: prog_pend_q
    HdlStmAssign: if_true
        HdlValueId: rd_data_o
        HdlValueId: held_rdata
    list: elifs


CommitId: 8d38646ca6df90397e879b7ed8a17be2de8e2cb7
[prim] update prim flash to have ack / done support
--- a/hw/ip/prim_generic/rtl/prim_generic_flash.sv
+++ b/hw/ip/prim_generic/rtl/prim_generic_flash.sv
@@ -169,19 +220,17 @@ module prim_generic_flash #(
     prog_pend_d      = prog_pend_q;
     mem_req          = 'h0;
     mem_wr           = 'h0;
-    mem_addr         = 'h0;
-    mem_part         = flash_ctrl_pkg::FlashPartData;
     mem_wdata        = 'h0;
-    time_cnt_inc     = 1'h0;
-    time_cnt_clr     = 1'h0;
-    time_cnt_set1    = 1'h0;
-    index_cnt_inc    = 1'h0;
-    index_cnt_clr    = 1'h0;
-    hold_cmd         = 1'h0;
+    time_cnt_inc     = 'h0;
+    time_cnt_clr     = 'h0;
+    time_cnt_set1    = 'h0;
+    index_cnt_inc    = 'h0;
+    index_cnt_clr    = 'h0;
 
     // i/o
-    init_busy_o      = 1'h0;
-    ack_o            = 1'h0;
+    init_busy_o      = 'h0;
+    pop_cmd          = 'h0;
+    done_o           = 'h0;
 
     unique case (st_q)
       StReset: begin

ParseResult:
UPD HdlStmProcess@@ to 
    INS HdlStmBlock@@SEQ to 
    INS HdlStmProcessTriggerConstrain@@FF to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmIf@@ to 
    INS HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: rd_data_q
    INS list@@elifs to 
    list: elifs
        tuple
            HdlValueId: mem_rd_q
            HdlStmBlock: SEQ
                list: body
                    HdlStmAssign
                        HdlValueId: rd_data_d
                        HdlValueId: rd_data_q

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@ack_o to done_o
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: mem_addr
                HdlValueInt: 0
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: mem_part
                HdlOp: DOUBLE_COLON
                    list: ops
                        HdlValueId: flash_ctrl_pkg
                        HdlValueId: FlashPartData
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: hold_cmd
                HdlValueInt: 0

UPD HdlStmCase@@st_q to st_q
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@AND to AND
                UPD HdlValueId@@held_rdata to rd_data_q
                UPD HdlValueId@@held_wdata to prog_data
                MOV HdlValueId@@held_wdata to ops
                HdlValueId: held_wdata
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: mem_addr
                HdlValueId: held_addr
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: mem_part
                HdlValueId: held_part
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: mem_addr
                HdlValueId: held_addr
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: mem_part
                HdlValueId: held_part


CommitId: 8d38646ca6df90397e879b7ed8a17be2de8e2cb7
[prim] update prim flash to have ack / done support
--- a/hw/ip/prim_generic/rtl/prim_generic_flash.sv
+++ b/hw/ip/prim_generic/rtl/prim_generic_flash.sv
@@ -251,6 +292,7 @@ module prim_generic_flash #(
             time_cnt_clr = 1'b1;
             st_d = StIdle;
           end
+
         end else if (prog_pend_q) begin
           // this is the read performed before a program operation
           prog_pend_d = 1'b0;

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: pop_cmd
                HdlValueInt: 0

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@ack_o to done_o
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: mem_addr
                HdlValueInt: 0
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: mem_part
                HdlOp: DOUBLE_COLON
                    list: ops
                        HdlValueId: flash_ctrl_pkg
                        HdlValueId: FlashPartData
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: hold_cmd
                HdlValueInt: 0

UPD HdlStmCase@@st_q to st_q
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@AND to AND
                INS HdlOp@@DOT to ops
                UPD HdlOp@@DOT to DOT
                    INS list@@ops to DOT
                    INS HdlValueId@@cmd_q to ops

UPD HdlStmCase@@st_q to st_q
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@AND to AND
                UPD HdlValueId@@held_rdata to rd_data_q
                UPD HdlValueId@@held_wdata to prog_data
                MOV HdlValueId@@held_wdata to ops
                HdlValueId: held_wdata
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: mem_addr
                HdlValueId: held_addr
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: mem_part
                HdlValueId: held_part
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: mem_addr
                HdlValueId: held_addr
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: mem_part
                HdlValueId: held_part

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: mem_req
                HdlValueInt: 1
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@ack_o to done_o

UPD HdlStmIf@@ to 
    UPD HdlValueId@@rd_q to rd_req
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@hold_cmd to pop_cmd
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: mem_addr
                HdlValueId: addr_q
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: mem_part
                HdlValueId: part_q


CommitId: 8d38646ca6df90397e879b7ed8a17be2de8e2cb7
[prim] update prim flash to have ack / done support
--- a/hw/ip/prim_generic/rtl/prim_generic_flash.sv
+++ b/hw/ip/prim_generic/rtl/prim_generic_flash.sv
@@ -258,36 +300,34 @@ module prim_generic_flash #(
           st_d = StProg;
         end
       end
-      StProg: begin
-        mem_addr = held_addr;
-        mem_part = held_part;
 
+      StProg: begin
         // if data is already 0, cannot program to 1 without erase
-        mem_wdata = held_wdata & held_rdata;
+        mem_wdata = cmd_q.prog_data & rd_data_q;
         if (time_cnt < ProgCycles) begin
           mem_req = 1'b1;
           mem_wr = 1'b1;
           time_cnt_inc = 1'b1;
         end else begin
           st_d = StIdle;
-          ack_o  = 1'b1;
+          pop_cmd = 1'b1;
+          done_o = 1'b1;
           time_cnt_clr = 1'b1;
         end
       end
+
       StErase: begin
         // Actual erasing of the page
         if (index_cnt < index_limit_q || time_cnt < time_limit_q) begin
           mem_req = 1'b1;
           mem_wr = 1'b1;
           mem_wdata = {DataWidth{1'b1}};
-
-          mem_addr = held_addr + index_cnt[AddrW-1:0];
-          mem_part = held_part;
           time_cnt_inc = (time_cnt < time_limit_q);
           index_cnt_inc = (index_cnt < index_limit_q);
         end else begin
           st_d = StIdle;
-          ack_o = 1'b1;
+          pop_cmd = 1'b1;
+          done_o = 1'b1;
           time_cnt_clr = 1'b1;
           index_cnt_clr = 1'b1;
         end

ParseResult:
UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            MOV HdlOp@@ADD to ops
            HdlOp: ADD
                list: ops
                    HdlValueId: held_addr
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: index_cnt
                            HdlOp: DOWNTO
                                list: ops
                                    HdlOp: SUB
                                        list: ops
                                            HdlValueId: AddrW
                                            HdlValueInt: 1
                                    HdlValueInt: 0
            UPD HdlOp@@ADD to ADD
                UPD HdlValueId@@held_addr to addr
                MOV HdlValueId@@held_addr to ops
                HdlValueId: held_addr
            DEL HdlValueId@@mem_addr from ops
            DEL list@@ops from ASSIGN
        DEL HdlOp@@ASSIGN from body
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: mem_part
                HdlValueId: held_part
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@ack_o to done_o

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: pop_cmd
                HdlValueInt: 0

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@ack_o to done_o
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: mem_addr
                HdlValueInt: 0
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: mem_part
                HdlOp: DOUBLE_COLON
                    list: ops
                        HdlValueId: flash_ctrl_pkg
                        HdlValueId: FlashPartData
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: hold_cmd
                HdlValueInt: 0

UPD HdlStmCase@@st_q to st_q
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@AND to AND
                INS HdlOp@@DOT to ops
                UPD HdlOp@@DOT to DOT
                    INS list@@ops to DOT
                    INS HdlValueId@@cmd_q to ops

UPD HdlStmCase@@st_q to st_q
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@AND to AND
                UPD HdlValueId@@held_rdata to rd_data_q
                UPD HdlValueId@@held_wdata to prog_data
                MOV HdlValueId@@held_wdata to ops
                HdlValueId: held_wdata
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: mem_addr
                HdlValueId: held_addr
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: mem_part
                HdlValueId: held_part
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: mem_addr
                HdlValueId: held_addr
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: mem_part
                HdlValueId: held_part

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: mem_req
                HdlValueInt: 1
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@ack_o to done_o

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@ack_o to done_o


CommitId: 8d38646ca6df90397e879b7ed8a17be2de8e2cb7
[prim] update prim flash to have ack / done support
--- a/hw/ip/prim_generic/rtl/prim_generic_flash.sv
+++ b/hw/ip/prim_generic/rtl/prim_generic_flash.sv
@@ -362,7 +402,7 @@ module prim_generic_flash #(
 
   assign rd_data_main = {rd_meta_data_main, rd_nom_data_main};
   assign rd_data_info = {rd_meta_data_info, rd_nom_data_info};
-  assign rd_data_o = held_part == flash_ctrl_pkg::FlashPartData ? rd_data_main : rd_data_info;
+  assign rd_data_d    = rd_part_q == flash_ctrl_pkg::FlashPartData ? rd_data_main : rd_data_info;
 
   // hard-wire assignment for now
   assign tdo_o = 1'b0;
ParseResult:
UPD HdlStmAssign@@ to 
    UPD HdlValueId@@rd_data_o to rd_data_d
    UPD HdlOp@@TERNARY to TERNARY
        UPD HdlOp@@EQ to EQ
            UPD HdlValueId@@held_part to rd_part_q


CommitId: 9f686738b1d9b1e4c03635927ffb1161a6709682
[hmac,lint] Explicitly convert width of BlockSize in hmac_core.sv
--- a/hw/ip/hmac/rtl/hmac_core.sv
+++ b/hw/ip/hmac/rtl/hmac_core.sv
@@ -45,6 +45,9 @@ module hmac_core import hmac_pkg::*; (
   localparam int unsigned BlockSizeBits = $clog2(BlockSize);
   localparam int unsigned HashWordBits = $clog2($bits(sha_word_t));
 
+  localparam bit [63:0]            BlockSize64 = 64'(BlockSize);
+  localparam bit [BlockSizeBits:0] BlockSizeBSB = BlockSize[BlockSizeBits:0];
+
   logic hash_start; // generated from internal state machine
   logic hash_process; // generated from internal state machine to trigger hash
   logic hmac_hash_done;

ParseResult:
INS HdlIdDef@@BlockSize64 to objs
HdlIdDef: BlockSize64
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: bit
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 63
                    HdlValueInt: 0
    HdlOp: CALL
        list: ops
            HdlValueInt: 64
            HdlValueId: BlockSize
    HdlDirection: INTERNAL

INS HdlIdDef@@BlockSizeBSB to objs
HdlIdDef: BlockSizeBSB
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: bit
            HdlOp: DOWNTO
                list: ops
                    HdlValueId: BlockSizeBits
                    HdlValueInt: 0
    HdlOp: INDEX
        list: ops
            HdlValueId: BlockSize
            HdlOp: DOWNTO
                list: ops
                    HdlValueId: BlockSizeBits
                    HdlValueInt: 0
    HdlDirection: INTERNAL


CommitId: 9f686738b1d9b1e4c03635927ffb1161a6709682
[hmac,lint] Explicitly convert width of BlockSize in hmac_core.sv
--- a/hw/ip/hmac/rtl/hmac_core.sv
+++ b/hw/ip/hmac/rtl/hmac_core.sv
@@ -118,12 +121,12 @@ module hmac_core import hmac_pkg::*; (
     (sel_rdata == SelFifo) ? fifo_rdata                                               :
     '{default: '0};
 
-  assign sha_message_length = (!hmac_en)                 ? message_length             :
-                              (sel_msglen == SelIPadMsg) ? message_length + BlockSize :
-                              (sel_msglen == SelOPadMsg) ? BlockSize + 256            :
+  assign sha_message_length = (!hmac_en)                 ? message_length               :
+                              (sel_msglen == SelIPadMsg) ? message_length + BlockSize64 :
+                              (sel_msglen == SelOPadMsg) ? BlockSize64 + 64'd256        :
                               '0 ;
 
-  assign txcnt_eq_blksz = (txcount[BlockSizeBits:0] == BlockSize);
+  assign txcnt_eq_blksz = (txcount[BlockSizeBits:0] == BlockSizeBSB);
 
   assign inc_txcount = sha_rready && sha_rvalid;
 
ParseResult:
UPD HdlStmAssign@@ to 
    UPD HdlOp@@EQ to EQ
        UPD HdlValueId@@BlockSize to BlockSizeBSB

UPD HdlStmAssign@@ to 
    UPD HdlOp@@TERNARY to TERNARY
        UPD HdlOp@@TERNARY to TERNARY
            UPD HdlOp@@ADD to ADD
                UPD HdlValueId@@BlockSize to BlockSize64
            UPD HdlOp@@TERNARY to TERNARY
                UPD HdlOp@@ADD to ADD
                    UPD HdlValueId@@BlockSize to BlockSize64


CommitId: 548810e191222d071171a2db8499bc4dbf2ccea5
[prim] Avoid an apparent combinatorial loop in prim_secded_*_dec.sv
--- a/hw/ip/prim/rtl/prim_secded_39_32_dec.sv
+++ b/hw/ip/prim/rtl/prim_secded_39_32_dec.sv
@@ -12,6 +12,7 @@ module prim_secded_39_32_dec (
   output logic [1:0] err_o
 );
 
+  logic single_error;
 
   // Syndrome calculation
   assign syndrome_o[0] = ^(in & 39'h01432358F1);

ParseResult:
INS HdlIdDef@@single_error to objs
HdlIdDef: single_error
    HdlDirection: INTERNAL


CommitId: 548810e191222d071171a2db8499bc4dbf2ccea5
[prim] Avoid an apparent combinatorial loop in prim_secded_*_dec.sv
--- a/hw/ip/prim/rtl/prim_secded_39_32_dec.sv
+++ b/hw/ip/prim/rtl/prim_secded_39_32_dec.sv
@@ -57,7 +58,8 @@ module prim_secded_39_32_dec (
   assign d_o[31] = (syndrome_o == 7'h1a) ^ in[31];
 
   // err_o calc. bit0: single error, bit1: double error
-  assign err_o[0] = ^syndrome_o;
-  assign err_o[1] = ~err_o[0] & (|syndrome_o);
+  assign single_error = ^syndrome_o;
+  assign err_o[0] = single_error;
+  assign err_o[1] = ~single_error & (|syndrome_o);
 
 endmodule : prim_secded_39_32_dec
ParseResult:
INS HdlStmAssign@@ to objs

UPD HdlStmAssign@@ to 
    MOV HdlOp@@XOR_UNARY to 
    HdlOp: XOR_UNARY
        list: ops
            HdlValueId: syndrome_o

UPD HdlStmAssign@@ to 
    INS HdlValueId@@single_error to 

UPD HdlStmAssign@@ to 
    INS HdlValueId@@single_error to 

UPD HdlStmAssign@@ to 
    UPD HdlOp@@AND to AND
        UPD HdlOp@@NEG to NEG
            UPD HdlOp@@INDEX to INDEX
                MOV list@@ops to INDEX
                list: ops
                    HdlValueId: err_o
                    HdlValueInt: 0
                UPD HdlValueId@@err_o to single_error
                DEL HdlValueInt@@0 from ops
            DEL HdlOp@@INDEX from ops
            DEL list@@ops from NEG


CommitId: def83fdc48a06a49e6f7eecd8dbb6e0cc50f8816
[prim] Break always_comb block to avoid apparent loop
--- a/hw/ip/prim/rtl/prim_arbiter_tree.sv
+++ b/hw/ip/prim/rtl/prim_arbiter_tree.sv
@@ -140,10 +140,19 @@ module prim_arbiter_tree #(
         end else begin : gen_nodes
           // local helper variable
           logic sel;
-          always_comb begin : p_node
+
+          // TODO: The always_comb code is split into two blocks to allow Verilator to schedule them
+          //       separately (avoiding a spurious UNOPTFLAT warning). The whole lot would probably
+          //       be clearer as a set of continuous assignments, rather than using always_comb
+          //       blocks. Unfortunately, we can't currently do that because of a Vivado bug,
+          //       reported in January 2020. This is tracked with OpenTitan issue #1408. There's
+          //       currently no information about a Vivado version with this fixed.
+          always_comb begin : p_sel
             // forward path (requests and data)
             // each node looks at its two children, and selects the one with higher priority
             sel = ~req_tree[C0] | ~prio_tree[C0] & prio_tree[C1];
+          end
+          always_comb begin : p_node
             // propagate requests
             req_tree[Pa]  = req_tree[C0] | req_tree[C1];
             prio_tree[Pa] = prio_tree[C1] | prio_tree[C0];
ParseResult:
INS HdlStmProcess@@ to body

UPD HdlStmIf@@ to 
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlIdDef: sel
                HdlOp: PARAMETRIZATION
                    list: ops
                        HdlValueId: logic
                HdlDirection: INTERNAL
            HdlStmProcess
                HdlStmBlock: SEQ
                    list: body
                        HdlOp: ASSIGN
                            list: ops
                                HdlValueId: sel
                                HdlOp: OR
                                    list: ops
                                        HdlOp: NEG
                                            list: ops
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: req_tree
                                                        HdlValueId: C0
                                        HdlOp: AND
                                            list: ops
                                                HdlOp: NEG
                                                    list: ops
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlValueId: prio_tree
                                                                HdlValueId: C0
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: prio_tree
                                                        HdlValueId: C1
                        HdlOp: ASSIGN
                            list: ops
                                HdlOp: INDEX
                                    list: ops
                                        HdlValueId: req_tree
                                        HdlValueId: Pa
                                HdlOp: OR
                                    list: ops
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: req_tree
                                                HdlValueId: C0
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: req_tree
                                                HdlValueId: C1
                        HdlOp: ASSIGN
                            list: ops
                                HdlOp: INDEX
                                    list: ops
                                        HdlValueId: prio_tree
                                        HdlValueId: Pa
                                HdlOp: OR
                                    list: ops
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: prio_tree
                                                HdlValueId: C1
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: prio_tree
                                                HdlValueId: C0
                        HdlOp: ASSIGN
                            list: ops
                                HdlOp: INDEX
                                    list: ops
                                        HdlValueId: idx_tree
                                        HdlValueId: Pa
                                HdlOp: TERNARY
                                    list: ops
                                        HdlValueId: sel
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: idx_tree
                                                HdlValueId: C1
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: idx_tree
                                                HdlValueId: C0
                        HdlOp: ASSIGN
                            list: ops
                                HdlOp: INDEX
                                    list: ops
                                        HdlValueId: data_tree
                                        HdlValueId: Pa
                                HdlOp: TERNARY
                                    list: ops
                                        HdlValueId: sel
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: data_tree
                                                HdlValueId: C1
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: data_tree
                                                HdlValueId: C0
                        HdlOp: ASSIGN
                            list: ops
                                HdlOp: INDEX
                                    list: ops
                                        HdlValueId: sel_tree
                                        HdlValueId: C0
                                HdlOp: AND
                                    list: ops
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: sel_tree
                                                HdlValueId: Pa
                                        HdlOp: NEG
                                            list: ops
                                                HdlValueId: sel
                        HdlOp: ASSIGN
                            list: ops
                                HdlOp: INDEX
                                    list: ops
                                        HdlValueId: sel_tree
                                        HdlValueId: C1
                                HdlOp: AND
                                    list: ops
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: sel_tree
                                                HdlValueId: Pa
                                        HdlValueId: sel
                        HdlOp: ASSIGN
                            list: ops
                                HdlOp: INDEX
                                    list: ops
                                        HdlValueId: mask_tree
                                        HdlValueId: C0
                                HdlOp: INDEX
                                    list: ops
                                        HdlValueId: mask_tree
                                        HdlValueId: Pa
                        HdlOp: ASSIGN
                            list: ops
                                HdlOp: INDEX
                                    list: ops
                                        HdlValueId: mask_tree
                                        HdlValueId: C1
                                HdlOp: OR
                                    list: ops
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: mask_tree
                                                HdlValueId: Pa
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: sel_tree
                                                HdlValueId: C0
                HdlStmProcessTriggerConstrain: COMB


CommitId: 3a5fdd65bfd8e71701c7e019ae980ec39610b474
Update lowrisc_ibex to lowRISC/ibex@5826af8
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_register_file_fpga.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_register_file_fpga.sv
@@ -63,5 +63,8 @@ module ibex_register_file_fpga #(
   // Dummy instruction changes not relevant for FPGA implementation
   logic unused_dummy_instr;
   assign unused_dummy_instr = dummy_instr_id_i;
+  // Test enable signal not used in FPGA implementation
+  logic unused_test_en;
+  assign unused_test_en = test_en_i;
 
 endmodule
ParseResult:
INS HdlIdDef@@unused_test_en to objs
HdlIdDef: unused_test_en
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlValueId: test_en_i
    HdlValueId: unused_test_en


CommitId: 90b6c2bd97717bd8bf5f5276ebec49f6b10ecbf6
[fpga] Route UART Tx to second pin on ChipWhisperer board for debugging
--- a/hw/top_earlgrey/rtl/top_earlgrey_cw305.sv
+++ b/hw/top_earlgrey/rtl/top_earlgrey_cw305.sv
@@ -45,8 +45,9 @@ module top_earlgrey_cw305 #(
   inout               IO_GP13,
   inout               IO_GP14,
   inout               IO_GP15,
-  // chipwhisperer IO
-  output              TIO_CLKOUT
+  // ChipWhisperer IO
+  output              TIO_CLKOUT,
+  output              IO_UTX_DEBUG
 );
 
   import top_earlgrey_pkg::*;

ParseResult:
INS HdlIdDef@@IO_UTX_DEBUG to ports
HdlIdDef: IO_UTX_DEBUG
    HdlValueId: wire
    HdlDirection: OUT


CommitId: 90b6c2bd97717bd8bf5f5276ebec49f6b10ecbf6
[fpga] Route UART Tx to second pin on ChipWhisperer board for debugging
--- a/hw/top_earlgrey/rtl/top_earlgrey_cw305.sv
+++ b/hw/top_earlgrey/rtl/top_earlgrey_cw305.sv
@@ -66,8 +67,6 @@ module top_earlgrey_cw305 #(
   logic [padctrl_reg_pkg::NDioPads-1:0] dio_oe_core, dio_oe_padring;
   logic [padctrl_reg_pkg::NDioPads-1:0] dio_in_core, dio_in_padring;
 
-  assign TIO_CLKOUT = IO_CLK;
-
   padring #(
     // MIOs 31:20 are currently not
     // connected to pads and hence tied off

ParseResult:
MOV HdlStmAssign@@ to objs
HdlStmAssign
    HdlValueId: IO_CLK
    HdlValueId: TIO_CLKOUT


CommitId: 90b6c2bd97717bd8bf5f5276ebec49f6b10ecbf6
[fpga] Route UART Tx to second pin on ChipWhisperer board for debugging
--- a/hw/top_earlgrey/rtl/top_earlgrey_cw305.sv
+++ b/hw/top_earlgrey/rtl/top_earlgrey_cw305.sv
@@ -309,4 +308,14 @@ module top_earlgrey_cw305 #(
     end
   end
 
+  //////////////////////
+  // ChipWhisperer IO //
+  //////////////////////
+
+  // Clock ouput to capture board.
+  assign TIO_CLKOUT = IO_CLK;
+
+  // UART Tx for debugging. The UART itself is connected to the capture board.
+  assign IO_UTX_DEBUG = top_earlgrey.cio_uart_tx_d2p;
+
 endmodule : top_earlgrey_cw305
ParseResult:
INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: DOT
        list: ops
            HdlValueId: top_earlgrey
            HdlValueId: cio_uart_tx_d2p
    HdlValueId: IO_UTX_DEBUG


CommitId: 3519dd2a391a001bb2dae2ed2bc37789b59b97ad
[csrng/rtl] instantiate and generate bug fixes
--- a/hw/ip/csrng/rtl/csrng_block_encrypt.sv
+++ b/hw/ip/csrng/rtl/csrng_block_encrypt.sv
@@ -70,11 +70,11 @@ module csrng_block_encrypt #(
 
   assign     prd_clearing[0] = '0;
 
-  assign     state_init[0] = aes_pkg::aes_transpose(block_encrypt_v_i);
+  assign     state_init[0] = aes_pkg::aes_transpose({<<8{block_encrypt_v_i}});
 
-  assign     key_init[0] = block_encrypt_key_i;
+  assign     key_init[0] = {<<8{block_encrypt_key_i}};
   assign     state_out = aes_pkg::aes_transpose(state_done[0]);
-  assign     cipher_data_out =  state_out;
+  assign     cipher_data_out = {<<8{state_out}};
 
 
   //--------------------------------------------
ParseResult:
UPD HdlStmAssign@@ to 
    INS HdlExprNotImplemented@@src to 

UPD HdlStmAssign@@ to 
    INS HdlExprNotImplemented@@src to 

UPD HdlStmAssign@@ to 
    UPD HdlOp@@CALL to CALL
        INS HdlExprNotImplemented@@ to ops

UPD HdlStmAssign@@ to 
    UPD HdlOp@@CALL to CALL
        DEL HdlValueId@@block_encrypt_v_i from ops

UPD HdlStmAssign@@ to 
    DEL HdlValueId@@block_encrypt_key_i from 

UPD HdlStmAssign@@ to 
    DEL HdlValueId@@state_out from 


CommitId: 94432215d3c8918758e87842888b38569652c34f
[top / util] updates to ast generation
--- a/hw/top_earlgrey/rtl/top_earlgrey_asic.sv
+++ b/hw/top_earlgrey/rtl/top_earlgrey_asic.sv
@@ -446,12 +446,15 @@ module top_earlgrey_asic (
   logic unused_usb_usb_rst;
   logic [PowerDomains-1:0] unused_usb_sys_io_div4_rst;
   logic [PowerDomains-1:0] unused_usb_sys_aon_rst;
+  logic unused_ast_sys_io_div4_rst;
   logic unused_sensor_ctrl_sys_io_div4_rst;
   logic unused_entropy_sys_rst;
   logic unused_edn_sys_rst;
   assign unused_usb_usb_rst = rsts_ast.rst_ast_usbdev_usb_n[DomainAonSel];
   assign unused_usb_sys_io_div4_rst = rsts_ast.rst_ast_usbdev_sys_io_div4_n;
   assign unused_usb_sys_aon_rst = rsts_ast.rst_ast_usbdev_sys_aon_n;
+  assign unused_ast_sys_io_div4_rst =
+    rsts_ast.rst_ast_ast_sys_io_div4_n[Domain0Sel];
   assign unused_sensor_ctrl_sys_io_div4_rst =
     rsts_ast.rst_ast_sensor_ctrl_aon_sys_io_div4_n[Domain0Sel];
   assign unused_entropy_sys_rst = rsts_ast.rst_ast_entropy_src_sys_n[DomainAonSel];

ParseResult:
INS HdlIdDef@@unused_ast_sys_io_div4_rst to objs
HdlIdDef: unused_ast_sys_io_div4_rst
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: INDEX
        list: ops
            HdlOp: DOT
                list: ops
                    HdlValueId: rsts_ast
                    HdlValueId: rst_ast_ast_sys_io_div4_n
            HdlValueId: Domain0Sel
    HdlValueId: unused_ast_sys_io_div4_rst


CommitId: 733baf855393dc5ee398388a05b874276a7c47a3
[adc_ctrl] Style updates and bug fix
--- a/hw/ip/adc_ctrl/rtl/adc_ctrl_intr.sv
+++ b/hw/ip/adc_ctrl/rtl/adc_ctrl_intr.sv
@@ -7,14 +7,10 @@
 module adc_ctrl_intr import adc_ctrl_reg_pkg::*; (
   input  clk_i,
   input  rst_ni,
-  input  clk_aon_i,
-  input  rst_slow_ni,
 
-  input  [NumAdcFilter-1:0] cfg_wakeup_en,
-  input  [NumAdcFilter-1:0] cfg_intr_en,
-  input  cfg_oneshot_intr_en,
-  input  [NumAdcFilter-1:0] adc_ctrl_match_pulse,
-  input  cfg_oneshot_done,
+  input  [NumAdcFilter-1:0] aon_filter_status_i,
+  input  [8:0] cfg_intr_en_i,
+  input  cfg_oneshot_done_i,
 
   input  adc_ctrl_reg2hw_intr_state_reg_t intr_state_i,
   input  adc_ctrl_reg2hw_intr_enable_reg_t intr_enable_i,

ParseResult:
UPD HdlIdDef@@cfg_wakeup_en to aon_filter_status_i

UPD HdlIdDef@@cfg_intr_en to cfg_intr_en_i

UPD HdlIdDef@@cfg_oneshot_done to cfg_oneshot_done_i

UPD HdlIdDef@@cfg_intr_en to cfg_intr_en
    UPD HdlOp@@PARAMETRIZATION to PARAMETRIZATION
        UPD HdlOp@@DOWNTO to DOWNTO
            UPD HdlOp@@SUB to SUB
                UPD HdlValueInt@@1 to 8
                MOV HdlValueInt@@1 to ops
                HdlValueInt: 1
                DEL HdlValueId@@NumAdcFilter from ops
                DEL list@@ops from SUB
            DEL HdlOp@@SUB from ops

DEL HdlIdDef@@clk_aon_i from ports
HdlIdDef: clk_aon_i
    HdlValueId: wire
    HdlDirection: IN

DEL HdlIdDef@@rst_slow_ni from ports
HdlIdDef: rst_slow_ni
    HdlValueId: wire
    HdlDirection: IN

DEL HdlIdDef@@cfg_oneshot_intr_en from ports
HdlIdDef: cfg_oneshot_intr_en
    HdlValueId: wire
    HdlDirection: IN

DEL HdlIdDef@@adc_ctrl_match_pulse from ports
HdlIdDef: adc_ctrl_match_pulse
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: wire
            HdlOp: DOWNTO
                list: ops
                    HdlOp: SUB
                        list: ops
                            HdlValueId: NumAdcFilter
                            HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: IN


CommitId: 733baf855393dc5ee398388a05b874276a7c47a3
[adc_ctrl] Style updates and bug fix
--- a/hw/ip/adc_ctrl/rtl/adc_ctrl_intr.sv
+++ b/hw/ip/adc_ctrl/rtl/adc_ctrl_intr.sv
@@ -126,8 +71,10 @@ module adc_ctrl_intr import adc_ctrl_reg_pkg::*; (
   assign adc_intr_status_o.oneshot.d = 1'b1;
 
   //Qualify each bit with intr_en
-  assign adc_ctrl_event = (|(cfg_adc_ctrl_match_done & cfg_intr_en)) ||
-         (cfg_oneshot_done & cfg_oneshot_intr_en);
+  logic [8:0] intr_events;
+  logic adc_ctrl_event;
+  assign intr_events = {cfg_oneshot_done_i, filter_match_event};
+  assign adc_ctrl_event = |(intr_events & cfg_intr_en_i);
 
   // instantiate interrupt hardware primitive
   prim_intr_hw #(.Width(1)) i_adc_ctrl_intr_o (

ParseResult:
INS HdlIdDef@@intr_events to objs

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: CONCAT
        list: ops
            HdlValueId: cfg_oneshot_done_i
            HdlValueId: filter_match_event
    HdlValueId: intr_events

INS HdlStmAssign@@ to objs

UPD HdlStmAssign@@ to 
    UPD HdlOp@@OR_LOG to OR_LOG
        UPD HdlOp@@OR_UNARY to PARAMETRIZATION
        MOV HdlOp@@OR_UNARY to ops
        HdlOp: OR_UNARY
            list: ops
                HdlOp: AND
                    list: ops
                        HdlValueId: cfg_adc_ctrl_match_done
                        HdlValueId: cfg_intr_en
        UPD HdlOp@@OR_UNARY to OR_UNARY
            UPD HdlOp@@AND to DOWNTO
            UPD HdlOp@@AND to AND
                DEL HdlValueId@@cfg_adc_ctrl_match_done from ops
                DEL HdlValueId@@cfg_intr_en from ops
        MOV HdlOp@@AND to ops
        HdlOp: AND
            list: ops
                HdlValueId: cfg_oneshot_done
                HdlValueId: cfg_oneshot_intr_en
        UPD HdlOp@@AND to AND
            UPD HdlValueId@@cfg_oneshot_done to intr_events
            UPD HdlValueId@@cfg_oneshot_intr_en to cfg_intr_en_i
        DEL list@@ops from OR_LOG
    MOV HdlValueId@@adc_ctrl_event to 
    HdlValueId: adc_ctrl_event
    DEL HdlOp@@OR_LOG from 

DEL HdlStmAssign@@ from objs


CommitId: d2e1184308b9582551252d1135a126ea558a6ab8
Revert "[usbdev] Fixes for I/O modes and expand their tests"
--- a/hw/dv/dpi/usbdpi/usbdpi.sv
+++ b/hw/dv/dpi/usbdpi/usbdpi.sv
@@ -22,31 +21,21 @@ module usbdpi #(
   output logic dn_p2d,
   input  logic dn_d2p,
   input  logic dn_en_d2p,
-  output logic d_p2d,
-  input  logic d_d2p,
-  input  logic d_en_d2p,
-  input  logic se0_d2p,
-  input  logic se0_en_d2p,
-  input  logic txmode_d2p,
-  input  logic txmode_en_d2p,
-
   output logic sense_p2d,
-  input  logic pullupdp_d2p,
-  input  logic pullupdp_en_d2p,
-  input  logic pullupdn_d2p,
-  input  logic pullupdn_en_d2p
+  input  logic pullup_d2p,
+  input  logic pullup_en_d2p
 );
   import "DPI-C" function
     chandle usbdpi_create(input string name, input int loglevel);
 
   import "DPI-C" function
-    void usbdpi_device_to_host(input chandle ctx, input bit [10:0] d2p);
+    void usbdpi_device_to_host(input chandle ctx, input bit [4:0] d2p);
 
   import "DPI-C" function
     void usbdpi_close(input chandle ctx);
 
   import "DPI-C" function
-    byte usbdpi_host_to_device(input chandle ctx, input bit [10:0] d2p);
+    byte usbdpi_host_to_device(input chandle ctx, input bit [4:0] d2p);
 
   chandle ctx;
 

ParseResult:
UPD HdlIdDef@@pullupdp_en_d2p to pullup_d2p

UPD HdlIdDef@@pullupdn_d2p to pullup_en_d2p

DEL HdlIdDef@@d_p2d from ports
HdlIdDef: d_p2d
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: OUT

DEL HdlIdDef@@d_d2p from ports
HdlIdDef: d_d2p
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: IN

DEL HdlIdDef@@d_en_d2p from ports
HdlIdDef: d_en_d2p
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: IN

DEL HdlIdDef@@se0_d2p from ports
HdlIdDef: se0_d2p
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: IN

DEL HdlIdDef@@se0_en_d2p from ports
HdlIdDef: se0_en_d2p
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: IN

DEL HdlIdDef@@txmode_d2p from ports
HdlIdDef: txmode_d2p
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: IN

DEL HdlIdDef@@txmode_en_d2p from ports
HdlIdDef: txmode_en_d2p
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: IN

DEL HdlIdDef@@pullupdp_d2p from ports
HdlIdDef: pullupdp_d2p
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: IN

DEL HdlIdDef@@pullupdn_en_d2p from ports
HdlIdDef: pullupdn_en_d2p
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: IN


CommitId: d2e1184308b9582551252d1135a126ea558a6ab8
Revert "[usbdev] Fixes for I/O modes and expand their tests"
--- a/hw/dv/dpi/usbdpi/usbdpi.sv
+++ b/hw/dv/dpi/usbdpi/usbdpi.sv
@@ -58,39 +47,32 @@ module usbdpi #(
     usbdpi_close(ctx);
   end
 
-  logic [10:0] d2p;
-  logic [10:0] d2p_r;
+  logic [4:0] d2p;
+  logic [4:0] d2p_r;
   logic       unused_dummy;
   logic       unused_clk = clk_i;
   logic       unused_rst = rst_ni;
-  logic       dp_int, dn_int, d_int;
+  logic       dp_int, dn_int;
 
-  assign d2p = {dp_d2p, dp_en_d2p, dn_d2p, dn_en_d2p, d_d2p, d_en_d2p, se0_d2p, se0_en_d2p, pullupdp_d2p & pullupdp_en_d2p, pullupdn_d2p & pullupdn_en_d2p, txmode_d2p & txmode_en_d2p};
+  assign d2p = {dp_d2p, dp_en_d2p, dn_d2p, dn_en_d2p, pullup_d2p & pullup_en_d2p};
   always_ff @(posedge clk_48MHz_i) begin
-    if ((pullupdp_d2p && pullupdp_en_d2p) || (pullupdn_d2p && pullupdn_en_d2p)) begin
+    if (pullup_d2p && pullup_en_d2p) begin
       automatic byte p2d = usbdpi_host_to_device(ctx, d2p);
-      d_int <= p2d[3];
       dp_int <= p2d[2];
       dn_int <= p2d[1];
       sense_p2d <= p2d[0];
-      unused_dummy <= |p2d[7:4];
+      unused_dummy <= |p2d[7:3];
       d2p_r <= d2p;
       if (d2p_r != d2p) begin
         usbdpi_device_to_host(ctx, d2p);
       end
-    end else begin // if (pullupdp_d2p && pullupdp_en_d2p)
-      d_int <= 0;
+    end else begin
       dp_int <= 0;
       dn_int <= 0;
     end
   end
 
   always_comb begin : proc_data
-    if (d_en_d2p) begin
-      d_p2d = d_d2p;
-    end else begin
-      d_p2d = d_int;
-    end
     if (dp_en_d2p) begin
       dp_p2d = dp_d2p;
     end else begin
ParseResult:
UPD HdlStmAssign@@ to 
    UPD HdlOp@@CONCAT to CONCAT
        UPD HdlOp@@CONCAT to CONCAT
            UPD HdlOp@@CONCAT to CONCAT
                UPD HdlOp@@CONCAT to CONCAT
                    UPD HdlOp@@CONCAT to CONCAT
                        UPD HdlOp@@CONCAT to CONCAT
                            MOV HdlOp@@CONCAT to ops
                            HdlOp: CONCAT
                                list: ops
                                    HdlOp: CONCAT
                                        list: ops
                                            HdlOp: CONCAT
                                                list: ops
                                                    HdlOp: CONCAT
                                                        list: ops
                                                            HdlValueId: dp_d2p
                                                            HdlValueId: dp_en_d2p
                                                    HdlValueId: dn_d2p
                                            HdlValueId: dn_en_d2p
                                    HdlValueId: d_d2p
                            UPD HdlOp@@CONCAT to CONCAT
                                UPD HdlValueId@@d_d2p to pullup_d2p
                                MOV HdlValueId@@d_d2p to ops
                                HdlValueId: d_d2p
                            DEL HdlValueId@@d_en_d2p from ops
                            DEL list@@ops from CONCAT
                        DEL HdlOp@@CONCAT from ops
                        DEL HdlValueId@@se0_d2p from ops
                        DEL list@@ops from CONCAT
                    DEL HdlOp@@CONCAT from ops
                    DEL HdlValueId@@se0_en_d2p from ops
                    DEL list@@ops from CONCAT
                MOV HdlOp@@AND to ops
                HdlOp: AND
                    list: ops
                        HdlValueId: pullupdp_d2p
                        HdlValueId: pullupdp_en_d2p
                UPD HdlOp@@AND to AND
                    UPD HdlValueId@@pullupdp_en_d2p to pullup_en_d2p
                    DEL HdlValueId@@pullupdp_d2p from ops
                DEL HdlOp@@CONCAT from ops
                DEL list@@ops from CONCAT
            DEL HdlOp@@CONCAT from ops
            DEL HdlOp@@AND from ops
            HdlOp: AND
                list: ops
                    HdlValueId: pullupdn_d2p
                    HdlValueId: pullupdn_en_d2p
            DEL list@@ops from CONCAT
        DEL HdlOp@@CONCAT from ops
        DEL HdlOp@@AND from ops
        HdlOp: AND
            list: ops
                HdlValueId: txmode_d2p
                HdlValueId: txmode_en_d2p
        DEL list@@ops from CONCAT
    DEL HdlOp@@CONCAT from 

UPD HdlStmIf@@ to 
    UPD HdlOp@@OR_LOG to OR_LOG
        MOV HdlOp@@AND_LOG to ops
        HdlOp: AND_LOG
            list: ops
                HdlValueId: pullupdp_d2p
                HdlValueId: pullupdp_en_d2p
        UPD HdlOp@@AND_LOG to AND_LOG
            UPD HdlValueId@@pullupdp_d2p to pullup_d2p
            UPD HdlValueId@@pullupdp_en_d2p to pullup_en_d2p
        DEL HdlOp@@AND_LOG from ops
        HdlOp: AND_LOG
            list: ops
                HdlValueId: pullupdn_d2p
                HdlValueId: pullupdn_en_d2p
        DEL list@@ops from OR_LOG
    DEL HdlOp@@OR_LOG from 

UPD HdlIdDef@@d2p to d2p
    UPD HdlOp@@PARAMETRIZATION to PARAMETRIZATION
        UPD HdlOp@@DOWNTO to DOWNTO
            UPD HdlValueInt@@10 to 4

UPD HdlIdDef@@d2p_r to d2p_r
    UPD HdlOp@@PARAMETRIZATION to PARAMETRIZATION
        UPD HdlOp@@DOWNTO to DOWNTO
            UPD HdlValueInt@@10 to 4

UPD HdlStmAssign@@ to 
    UPD HdlOp@@OR_UNARY to OR_UNARY
        UPD HdlOp@@INDEX to INDEX
            UPD HdlOp@@DOWNTO to DOWNTO
                UPD HdlValueInt@@4 to 3

DEL HdlIdDef@@d_int from objs
HdlIdDef: d_int
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

DEL HdlStmAssign@@ from body
HdlStmAssign
    HdlOp: INDEX
        list: ops
            HdlValueId: p2d
            HdlValueInt: 3
    HdlValueId: d_int

DEL HdlStmAssign@@ from body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: d_int

DEL HdlStmIf@@ from body
HdlStmIf
    HdlValueId: d_en_d2p
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: d_p2d
                    HdlValueId: d_d2p
    list: elifs
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: d_p2d
                    HdlValueId: d_int


CommitId: bc7f6d6cde2259f2741e40112f2ff4c6871d0d75
Update lowrisc_ibex to lowRISC/ibex@6d9e1ac
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_alu.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_alu.sv
@@ -228,11 +228,12 @@ module ibex_alu #(
   logic [5:0] shift_amt;
   logic [5:0] shift_amt_compl; // complementary shift amount (32 - shift_amt)
 
-  logic [31:0] shift_operand;
-  logic [32:0] shift_result_ext;
-  logic        unused_shift_result_ext;
-  logic [31:0] shift_result;
-  logic [31:0] shift_result_rev;
+  logic        [31:0] shift_operand;
+  logic signed [32:0] shift_result_ext_signed;
+  logic        [32:0] shift_result_ext;
+  logic               unused_shift_result_ext;
+  logic        [31:0] shift_result;
+  logic        [31:0] shift_result_rev;
 
   // zbf
   logic bfp_op;

ParseResult:
INS HdlIdDef@@shift_result_ext_signed to objs
HdlIdDef: shift_result_ext_signed
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 32
                    HdlValueInt: 0
            HdlValueInt: 1
    HdlDirection: INTERNAL


CommitId: bc7f6d6cde2259f2741e40112f2ff4c6871d0d75
Update lowrisc_ibex to lowRISC/ibex@6d9e1ac
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_alu.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_alu.sv
@@ -319,9 +320,9 @@ module ibex_alu #(
       endcase
     end
 
-    shift_result_ext =
-        $unsigned($signed({shift_ones | (shift_arith & shift_operand[31]), shift_operand}) >>>
-                  shift_amt[4:0]);
+    shift_result_ext_signed =
+        $signed({shift_ones | (shift_arith & shift_operand[31]), shift_operand}) >>> shift_amt[4:0];
+    shift_result_ext = $unsigned(shift_result_ext_signed);
 
     shift_result            = shift_result_ext[31:0];
     unused_shift_result_ext = shift_result_ext[32];
ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@CALL to ASSIGN
            MOV HdlOp@@CALL to ops
            HdlOp: CALL
                list: ops
                    HdlValueId: $unsigned
                    HdlOp: SRA
                        list: ops
                            HdlOp: CALL
                                list: ops
                                    HdlValueId: $signed
                                    HdlOp: CONCAT
                                        list: ops
                                            HdlOp: OR
                                                list: ops
                                                    HdlValueId: shift_ones
                                                    HdlOp: AND
                                                        list: ops
                                                            HdlValueId: shift_arith
                                                            HdlOp: INDEX
                                                                list: ops
                                                                    HdlValueId: shift_operand
                                                                    HdlValueInt: 31
                                            HdlValueId: shift_operand
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: shift_amt
                                    HdlOp: DOWNTO
                                        list: ops
                                            HdlValueInt: 4
                                            HdlValueInt: 0
            UPD HdlOp@@CALL to CALL
                UPD HdlValueId@@$unsigned to shift_result_ext_signed
            DEL HdlValueId@@shift_result_ext from ops
            DEL list@@ops from ASSIGN
        DEL HdlOp@@ASSIGN from body

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: shift_result_ext
                HdlOp: CALL
                    list: ops
                        HdlValueId: $unsigned
                        HdlValueId: shift_result_ext_signed


CommitId: 6d4436f7fdc1a818849f9a7969ab30973c173f36
[csrng/sec] remove AES bypass, clean register debug
--- a/hw/ip/csrng/rtl/csrng_core.sv
+++ b/hw/ip/csrng/rtl/csrng_core.sv
@@ -70,7 +70,6 @@ module csrng_core import csrng_pkg::*; #(
   logic       event_cs_hw_inst_exc;
   logic       event_cs_fatal_err;
   logic       cs_enable;
-  logic       aes_cipher_enable;
   logic       acmd_avail;
   logic       acmd_sop;
   logic       acmd_mop;

ParseResult:
DEL HdlIdDef@@aes_cipher_enable from objs
HdlIdDef: aes_cipher_enable
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL


CommitId: 6d4436f7fdc1a818849f9a7969ab30973c173f36
[csrng/sec] remove AES bypass, clean register debug
--- a/hw/ip/csrng/rtl/csrng_core.sv
+++ b/hw/ip/csrng/rtl/csrng_core.sv
@@ -133,7 +132,6 @@ module csrng_core import csrng_pkg::*; #(
   logic                   generate_req;
   logic                   update_req;
   logic                   uninstant_req;
-  logic [3:0]             fifo_sel;
   logic [Cmd-1:0]         ctr_drbg_cmd_ccmd;
   logic                   ctr_drbg_cmd_req;
   logic                   ctr_drbg_gen_req;

ParseResult:
DEL HdlIdDef@@fifo_sel from objs
HdlIdDef: fifo_sel
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 3
                    HdlValueInt: 0
    HdlDirection: INTERNAL


CommitId: 6d4436f7fdc1a818849f9a7969ab30973c173f36
[csrng/sec] remove AES bypass, clean register debug
--- a/hw/ip/csrng/rtl/csrng_core.sv
+++ b/hw/ip/csrng/rtl/csrng_core.sv
@@ -298,10 +296,8 @@ module csrng_core import csrng_pkg::*; #(
   logic                    genbits_stage_bus_rd_sw;
   logic [31:0]             genbits_stage_bus_sw;
   logic                    genbits_stage_fips_sw;
-  logic [2:0]              pfifo_sw_genbits_depth;
 
   logic [14:0]             hw_exception_sts;
-  logic                    lc_hw_debug_not_on;
   logic                    lc_hw_debug_on;
   logic                    state_db_reg_rd_sel;
   logic                    state_db_reg_rd_id_pulse;

ParseResult:
DEL HdlIdDef@@pfifo_sw_genbits_depth from objs
HdlIdDef: pfifo_sw_genbits_depth
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 2
                    HdlValueInt: 0
    HdlDirection: INTERNAL

DEL HdlIdDef@@lc_hw_debug_not_on from objs
HdlIdDef: lc_hw_debug_not_on
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL


CommitId: 6d4436f7fdc1a818849f9a7969ab30973c173f36
[csrng/sec] remove AES bypass, clean register debug
--- a/hw/ip/csrng/rtl/csrng_core.sv
+++ b/hw/ip/csrng/rtl/csrng_core.sv
@@ -648,11 +644,8 @@ module csrng_core import csrng_pkg::*; #(
   };
 
   // master module enable
-  assign cs_enable = reg2hw.ctrl.enable.q;
-  assign aes_cipher_enable = !reg2hw.ctrl.aes_cipher_disable.q;
+  assign cs_enable = reg2hw.ctrl.q;
   assign hw2reg.regwen.d = !cs_enable; // hw reg lock implementation
-  // fifo selection for debug
-  assign fifo_sel = reg2hw.ctrl.fifo_depth_sts_sel.q;
 
   //------------------------------------------
   // application interface

ParseResult:
UPD HdlStmAssign@@ to 
    UPD HdlOp@@DOT to DOT
        MOV HdlOp@@DOT to ops
        HdlOp: DOT
            list: ops
                HdlOp: DOT
                    list: ops
                        HdlValueId: reg2hw
                        HdlValueId: ctrl
                HdlValueId: enable
        UPD HdlOp@@DOT to DOT
            UPD HdlValueId@@enable to q
        DEL HdlValueId@@q from ops
        DEL list@@ops from DOT
    DEL HdlOp@@DOT from 

DEL HdlStmAssign@@ from objs
HdlStmAssign
    HdlOp: NEG_LOG
        list: ops
            HdlOp: DOT
                list: ops
                    HdlOp: DOT
                        list: ops
                            HdlOp: DOT
                                list: ops
                                    HdlValueId: reg2hw
                                    HdlValueId: ctrl
                            HdlValueId: aes_cipher_disable
                    HdlValueId: q
    HdlValueId: aes_cipher_enable

DEL HdlStmAssign@@ from objs
HdlStmAssign
    HdlOp: DOT
        list: ops
            HdlOp: DOT
                list: ops
                    HdlOp: DOT
                        list: ops
                            HdlValueId: reg2hw
                            HdlValueId: ctrl
                    HdlValueId: fifo_depth_sts_sel
            HdlValueId: q
    HdlValueId: fifo_sel


CommitId: 6d4436f7fdc1a818849f9a7969ab30973c173f36
[csrng/sec] remove AES bypass, clean register debug
--- a/hw/ip/csrng/rtl/csrng_core.sv
+++ b/hw/ip/csrng/rtl/csrng_core.sv
@@ -1210,10 +1203,10 @@ module csrng_core import csrng_pkg::*; #(
   // provide control logic to determine
   // how certain debug features are controlled.
 
-  lc_ctrl_pkg::lc_tx_t [1:0] lc_hw_debug_en_out;
+  lc_ctrl_pkg::lc_tx_t lc_hw_debug_en_out;
 
   prim_lc_sync #(
-    .NumCopies(2)
+    .NumCopies(1)
   ) u_prim_lc_sync (
     .clk_i,
     .rst_ni,

ParseResult:
UPD HdlIdDef@@lc_hw_debug_en_out to lc_hw_debug_en_out
    UPD HdlOp@@INDEX to INDEX
        MOV HdlOp@@DOUBLE_COLON to ops
        HdlOp: DOUBLE_COLON
            list: ops
                HdlValueId: lc_ctrl_pkg
                HdlValueId: lc_tx_t
        DEL HdlOp@@DOWNTO from ops
        HdlOp: DOWNTO
            list: ops
                HdlValueInt: 1
                HdlValueInt: 0
        DEL list@@ops from INDEX
    DEL HdlOp@@INDEX from lc_hw_debug_en_out


CommitId: 6d4436f7fdc1a818849f9a7969ab30973c173f36
[csrng/sec] remove AES bypass, clean register debug
--- a/hw/ip/csrng/rtl/csrng_core.sv
+++ b/hw/ip/csrng/rtl/csrng_core.sv
@@ -1221,8 +1214,7 @@ module csrng_core import csrng_pkg::*; #(
     .lc_en_o(lc_hw_debug_en_out)
   );
 
-  assign      lc_hw_debug_not_on = (lc_hw_debug_en_out[0] != lc_ctrl_pkg::On);
-  assign      lc_hw_debug_on = (lc_hw_debug_en_out[1] == lc_ctrl_pkg::On);
+  assign      lc_hw_debug_on = (lc_hw_debug_en_out == lc_ctrl_pkg::On);
 
 
   //-------------------------------------

ParseResult:
UPD HdlStmAssign@@ to 
    UPD HdlOp@@EQ to EQ
        UPD HdlOp@@INDEX to INDEX
            MOV HdlValueId@@lc_hw_debug_en_out to ops
            HdlValueId: lc_hw_debug_en_out
            DEL HdlValueInt@@1 from ops
            DEL list@@ops from INDEX
        DEL HdlOp@@INDEX from ops

DEL HdlStmAssign@@ from objs
HdlStmAssign
    HdlOp: NE
        list: ops
            HdlOp: INDEX
                list: ops
                    HdlValueId: lc_hw_debug_en_out
                    HdlValueInt: 0
            HdlOp: DOUBLE_COLON
                list: ops
                    HdlValueId: lc_ctrl_pkg
                    HdlValueId: On
    HdlValueId: lc_hw_debug_not_on


CommitId: 6d4436f7fdc1a818849f9a7969ab30973c173f36
[csrng/sec] remove AES bypass, clean register debug
--- a/hw/ip/csrng/rtl/csrng_core.sv
+++ b/hw/ip/csrng/rtl/csrng_core.sv
@@ -1470,11 +1482,6 @@ module csrng_core import csrng_pkg::*; #(
   assign hw2reg.hw_exc_sts.de = cs_enable;
   assign hw2reg.hw_exc_sts.d  = hw_exception_sts;
 
-  assign hw2reg.sum_sts.de = cs_enable;
-  assign hw2reg.sum_sts.d  =
-         (fifo_sel == 4'h0) ? {21'b0,pfifo_sw_genbits_depth} :
-         24'b0;
-
   // unused signals
   assign unused_err_code_test_bit = (|err_code_test_bit[19:16]) || (|err_code_test_bit[27:26]);
   assign unused_reg2hw_genbits = (|reg2hw.genbits.q);
ParseResult:
MOV HdlStmAssign@@ to objs
HdlStmAssign
    HdlValueId: hw_exception_sts
    HdlValueId: hw2reg

UPD HdlStmAssign@@ to 
    INS HdlOp@@TERNARY to 
    INS HdlValueId@@hw2reg to 
    UPD HdlOp@@TERNARY to TERNARY
        INS list@@ops to TERNARY
        INS HdlOp@@EQ to ops
        HdlOp: EQ
            list: ops
                HdlValueId: sel_track_sm_grp
                HdlValueInt: 3
        INS HdlOp@@TERNARY to ops
        UPD HdlOp@@TERNARY to TERNARY
            INS list@@ops to TERNARY
            INS HdlOp@@EQ to ops
            HdlOp: EQ
                list: ops
                    HdlValueId: sel_track_sm_grp
                    HdlValueInt: 2
            INS HdlOp@@TERNARY to ops
            UPD HdlOp@@TERNARY to TERNARY
                INS list@@ops to TERNARY
                INS HdlOp@@EQ to ops
                HdlOp: EQ
                    list: ops
                        HdlValueId: sel_track_sm_grp
                        HdlValueInt: 1

DEL HdlStmAssign@@ from objs
HdlStmAssign
    HdlValueId: cs_enable
    HdlValueId: hw2reg

DEL HdlStmAssign@@ from objs
HdlStmAssign
    HdlOp: TERNARY
        list: ops
            HdlOp: EQ
                list: ops
                    HdlValueId: fifo_sel
                    HdlValueInt: 0
            HdlOp: CONCAT
                list: ops
                    HdlValueInt: 0
                    HdlValueId: pfifo_sw_genbits_depth
            HdlValueInt: 0
    HdlValueId: hw2reg


CommitId: 4e7114e85a61e4a3814ee56bb689cd3e8c4292a2
[sram_ctrl] Absorb prim_ram_1p_scr
--- a/hw/top_earlgrey/ip/xbar_main/rtl/autogen/xbar_main.sv
+++ b/hw/top_earlgrey/ip/xbar_main/rtl/autogen/xbar_main.sv
@@ -128,8 +128,6 @@ module xbar_main (
   input  tlul_pkg::tl_d2h_t tl_rom_ctrl__rom_i,
   output tlul_pkg::tl_h2d_t tl_rom_ctrl__regs_o,
   input  tlul_pkg::tl_d2h_t tl_rom_ctrl__regs_i,
-  output tlul_pkg::tl_h2d_t tl_ram_main_o,
-  input  tlul_pkg::tl_d2h_t tl_ram_main_i,
   output tlul_pkg::tl_h2d_t tl_eflash_o,
   input  tlul_pkg::tl_d2h_t tl_eflash_i,
   output tlul_pkg::tl_h2d_t tl_peri_o,

ParseResult:
MOV HdlIdDef@@tl_ram_main_o to ports
HdlIdDef: tl_ram_main_o
    HdlOp: DOUBLE_COLON
        list: ops
            HdlValueId: tlul_pkg
            HdlValueId: tl_h2d_t
    HdlDirection: OUT

MOV HdlIdDef@@tl_ram_main_i to ports
HdlIdDef: tl_ram_main_i
    HdlOp: DOUBLE_COLON
        list: ops
            HdlValueId: tlul_pkg
            HdlValueId: tl_d2h_t
    HdlDirection: IN

UPD HdlIdDef@@tl_ram_main_o to tl_sram_ctrl_main__regs_o

UPD HdlIdDef@@tl_ram_main_i to tl_sram_ctrl_main__regs_i


CommitId: 4e7114e85a61e4a3814ee56bb689cd3e8c4292a2
[sram_ctrl] Absorb prim_ram_1p_scr
--- a/hw/top_earlgrey/ip/xbar_main/rtl/autogen/xbar_main.sv
+++ b/hw/top_earlgrey/ip/xbar_main/rtl/autogen/xbar_main.sv
@@ -160,8 +158,10 @@ module xbar_main (
   input  tlul_pkg::tl_d2h_t tl_keymgr_i,
   output tlul_pkg::tl_h2d_t tl_rv_core_ibex__cfg_o,
   input  tlul_pkg::tl_d2h_t tl_rv_core_ibex__cfg_i,
-  output tlul_pkg::tl_h2d_t tl_sram_ctrl_main_o,
-  input  tlul_pkg::tl_d2h_t tl_sram_ctrl_main_i,
+  output tlul_pkg::tl_h2d_t tl_sram_ctrl_main__regs_o,
+  input  tlul_pkg::tl_d2h_t tl_sram_ctrl_main__regs_i,
+  output tlul_pkg::tl_h2d_t tl_sram_ctrl_main__ram_o,
+  input  tlul_pkg::tl_d2h_t tl_sram_ctrl_main__ram_i,
 
   input lc_ctrl_pkg::lc_tx_t scanmode_i
 );

ParseResult:
UPD HdlIdDef@@tl_sram_ctrl_main_o to tl_sram_ctrl_main__ram_o

UPD HdlIdDef@@tl_sram_ctrl_main_i to tl_sram_ctrl_main__ram_i


CommitId: 4e7114e85a61e4a3814ee56bb689cd3e8c4292a2
[sram_ctrl] Absorb prim_ram_1p_scr
--- a/hw/top_earlgrey/ip/xbar_main/rtl/autogen/xbar_main.sv
+++ b/hw/top_earlgrey/ip/xbar_main/rtl/autogen/xbar_main.sv
@@ -502,8 +502,8 @@ module xbar_main (
   assign tl_rv_dm__rom_o = tl_sm1_26_ds_h2d;
   assign tl_sm1_26_ds_d2h = tl_rv_dm__rom_i;
 
-  assign tl_ram_main_o = tl_sm1_27_ds_h2d;
-  assign tl_sm1_27_ds_d2h = tl_ram_main_i;
+  assign tl_sram_ctrl_main__ram_o = tl_sm1_27_ds_h2d;
+  assign tl_sm1_27_ds_d2h = tl_sram_ctrl_main__ram_i;
 
   assign tl_eflash_o = tl_sm1_28_ds_h2d;
   assign tl_sm1_28_ds_d2h = tl_eflash_i;

ParseResult:
INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlValueId: tl_sm1_27_ds_h2d
    HdlValueId: tl_sram_ctrl_main__ram_o

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlValueId: tl_sram_ctrl_main__ram_i
    HdlValueId: tl_sm1_27_ds_d2h

DEL HdlStmAssign@@ from objs
HdlStmAssign
    HdlValueId: tl_sm1_27_ds_h2d
    HdlValueId: tl_ram_main_o

DEL HdlStmAssign@@ from objs
HdlStmAssign
    HdlValueId: tl_ram_main_i
    HdlValueId: tl_sm1_27_ds_d2h


CommitId: 4e7114e85a61e4a3814ee56bb689cd3e8c4292a2
[sram_ctrl] Absorb prim_ram_1p_scr
--- a/hw/top_earlgrey/ip/xbar_main/rtl/autogen/xbar_main.sv
+++ b/hw/top_earlgrey/ip/xbar_main/rtl/autogen/xbar_main.sv
@@ -559,8 +559,8 @@ module xbar_main (
   assign tl_kmac_o = tl_sm1_45_ds_h2d;
   assign tl_sm1_45_ds_d2h = tl_kmac_i;
 
-  assign tl_sram_ctrl_main_o = tl_sm1_46_ds_h2d;
-  assign tl_sm1_46_ds_d2h = tl_sram_ctrl_main_i;
+  assign tl_sram_ctrl_main__regs_o = tl_sm1_46_ds_h2d;
+  assign tl_sm1_46_ds_d2h = tl_sram_ctrl_main__regs_i;
 
   assign tl_rv_core_ibex__cfg_o = tl_sm1_47_ds_h2d;
   assign tl_sm1_47_ds_d2h = tl_rv_core_ibex__cfg_i;

ParseResult:
INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlValueId: tl_sm1_46_ds_h2d
    HdlValueId: tl_sram_ctrl_main__regs_o

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlValueId: tl_sram_ctrl_main__regs_i
    HdlValueId: tl_sm1_46_ds_d2h

DEL HdlStmAssign@@ from objs
HdlStmAssign
    HdlValueId: tl_sm1_46_ds_h2d
    HdlValueId: tl_sram_ctrl_main_o

DEL HdlStmAssign@@ from objs
HdlStmAssign
    HdlValueId: tl_sram_ctrl_main_i
    HdlValueId: tl_sm1_46_ds_d2h


CommitId: 4e7114e85a61e4a3814ee56bb689cd3e8c4292a2
[sram_ctrl] Absorb prim_ram_1p_scr
--- a/hw/top_earlgrey/ip/xbar_main/rtl/autogen/xbar_main.sv
+++ b/hw/top_earlgrey/ip/xbar_main/rtl/autogen/xbar_main.sv
@@ -580,7 +580,7 @@ module xbar_main (
       dev_sel_s1n_24 = 3'd1;
 
     end else if ((tl_s1n_24_us_h2d.a_address &
-                  ~(ADDR_MASK_RAM_MAIN)) == ADDR_SPACE_RAM_MAIN) begin
+                  ~(ADDR_MASK_SRAM_CTRL_MAIN__RAM)) == ADDR_SPACE_SRAM_CTRL_MAIN__RAM) begin
       dev_sel_s1n_24 = 3'd2;
 
     end else if ((tl_s1n_24_us_h2d.a_address &

ParseResult:
UPD HdlStmIf@@ to 
    UPD HdlOp@@EQ to EQ
        UPD HdlValueId@@ADDR_SPACE_RAM_MAIN to ADDR_SPACE_SRAM_CTRL_MAIN__RAM
        UPD HdlOp@@AND to AND
            UPD HdlOp@@NEG to NEG
                UPD HdlValueId@@ADDR_MASK_RAM_MAIN to ADDR_MASK_SRAM_CTRL_MAIN__RAM


CommitId: 4e7114e85a61e4a3814ee56bb689cd3e8c4292a2
[sram_ctrl] Absorb prim_ram_1p_scr
--- a/hw/top_earlgrey/ip/xbar_main/rtl/autogen/xbar_main.sv
+++ b/hw/top_earlgrey/ip/xbar_main/rtl/autogen/xbar_main.sv
@@ -609,7 +609,7 @@ end
       dev_sel_s1n_29 = 5'd3;
 
     end else if ((tl_s1n_29_us_h2d.a_address &
-                  ~(ADDR_MASK_RAM_MAIN)) == ADDR_SPACE_RAM_MAIN) begin
+                  ~(ADDR_MASK_SRAM_CTRL_MAIN__RAM)) == ADDR_SPACE_SRAM_CTRL_MAIN__RAM) begin
       dev_sel_s1n_29 = 5'd4;
 
     end else if ((tl_s1n_29_us_h2d.a_address &

ParseResult:
UPD HdlStmIf@@ to 
    UPD HdlOp@@EQ to EQ
        UPD HdlValueId@@ADDR_SPACE_RAM_MAIN to ADDR_SPACE_SRAM_CTRL_MAIN__RAM
        UPD HdlOp@@AND to AND
            UPD HdlOp@@NEG to NEG
                UPD HdlValueId@@ADDR_MASK_RAM_MAIN to ADDR_MASK_SRAM_CTRL_MAIN__RAM
    UPD HdlOp@@EQ to EQ
        UPD HdlValueId@@ADDR_SPACE_SRAM_CTRL_MAIN to ADDR_SPACE_SRAM_CTRL_MAIN__REGS
        UPD HdlOp@@AND to AND
            UPD HdlOp@@NEG to NEG
                UPD HdlValueId@@ADDR_MASK_SRAM_CTRL_MAIN to ADDR_MASK_SRAM_CTRL_MAIN__REGS


CommitId: 4e7114e85a61e4a3814ee56bb689cd3e8c4292a2
[sram_ctrl] Absorb prim_ram_1p_scr
--- a/hw/top_earlgrey/ip/xbar_main/rtl/autogen/xbar_main.sv
+++ b/hw/top_earlgrey/ip/xbar_main/rtl/autogen/xbar_main.sv
@@ -669,7 +669,7 @@ end
       dev_sel_s1n_29 = 5'd18;
 
     end else if ((tl_s1n_29_us_h2d.a_address &
-                  ~(ADDR_MASK_SRAM_CTRL_MAIN)) == ADDR_SPACE_SRAM_CTRL_MAIN) begin
+                  ~(ADDR_MASK_SRAM_CTRL_MAIN__REGS)) == ADDR_SPACE_SRAM_CTRL_MAIN__REGS) begin
       dev_sel_s1n_29 = 5'd19;
 
     end else if ((tl_s1n_29_us_h2d.a_address &

ParseResult:
UPD HdlStmIf@@ to 
    UPD HdlOp@@EQ to EQ
        UPD HdlValueId@@ADDR_SPACE_RAM_MAIN to ADDR_SPACE_SRAM_CTRL_MAIN__RAM
        UPD HdlOp@@AND to AND
            UPD HdlOp@@NEG to NEG
                UPD HdlValueId@@ADDR_MASK_RAM_MAIN to ADDR_MASK_SRAM_CTRL_MAIN__RAM
    UPD HdlOp@@EQ to EQ
        UPD HdlValueId@@ADDR_SPACE_SRAM_CTRL_MAIN to ADDR_SPACE_SRAM_CTRL_MAIN__REGS
        UPD HdlOp@@AND to AND
            UPD HdlOp@@NEG to NEG
                UPD HdlValueId@@ADDR_MASK_SRAM_CTRL_MAIN to ADDR_MASK_SRAM_CTRL_MAIN__REGS


CommitId: 4e7114e85a61e4a3814ee56bb689cd3e8c4292a2
[sram_ctrl] Absorb prim_ram_1p_scr
--- a/hw/top_earlgrey/ip/xbar_main/rtl/autogen/xbar_main.sv
+++ b/hw/top_earlgrey/ip/xbar_main/rtl/autogen/xbar_main.sv
@@ -694,7 +694,7 @@ end
       dev_sel_s1n_48 = 5'd2;
 
     end else if ((tl_s1n_48_us_h2d.a_address &
-                  ~(ADDR_MASK_RAM_MAIN)) == ADDR_SPACE_RAM_MAIN) begin
+                  ~(ADDR_MASK_SRAM_CTRL_MAIN__RAM)) == ADDR_SPACE_SRAM_CTRL_MAIN__RAM) begin
       dev_sel_s1n_48 = 5'd3;
 
     end else if ((tl_s1n_48_us_h2d.a_address &

ParseResult:
UPD HdlStmIf@@ to 
    UPD HdlOp@@EQ to EQ
        UPD HdlValueId@@ADDR_SPACE_RAM_MAIN to ADDR_SPACE_SRAM_CTRL_MAIN__RAM
        UPD HdlOp@@AND to AND
            UPD HdlOp@@NEG to NEG
                UPD HdlValueId@@ADDR_MASK_RAM_MAIN to ADDR_MASK_SRAM_CTRL_MAIN__RAM
    UPD HdlOp@@EQ to EQ
        UPD HdlValueId@@ADDR_SPACE_SRAM_CTRL_MAIN to ADDR_SPACE_SRAM_CTRL_MAIN__REGS
        UPD HdlOp@@AND to AND
            UPD HdlOp@@NEG to NEG
                UPD HdlValueId@@ADDR_MASK_SRAM_CTRL_MAIN to ADDR_MASK_SRAM_CTRL_MAIN__REGS


CommitId: 4e7114e85a61e4a3814ee56bb689cd3e8c4292a2
[sram_ctrl] Absorb prim_ram_1p_scr
--- a/hw/top_earlgrey/ip/xbar_main/rtl/autogen/xbar_main.sv
+++ b/hw/top_earlgrey/ip/xbar_main/rtl/autogen/xbar_main.sv
@@ -754,7 +754,7 @@ end
       dev_sel_s1n_48 = 5'd17;
 
     end else if ((tl_s1n_48_us_h2d.a_address &
-                  ~(ADDR_MASK_SRAM_CTRL_MAIN)) == ADDR_SPACE_SRAM_CTRL_MAIN) begin
+                  ~(ADDR_MASK_SRAM_CTRL_MAIN__REGS)) == ADDR_SPACE_SRAM_CTRL_MAIN__REGS) begin
       dev_sel_s1n_48 = 5'd18;
 
     end else if ((tl_s1n_48_us_h2d.a_address &
ParseResult:
UPD HdlStmIf@@ to 
    UPD HdlOp@@EQ to EQ
        UPD HdlValueId@@ADDR_SPACE_RAM_MAIN to ADDR_SPACE_SRAM_CTRL_MAIN__RAM
        UPD HdlOp@@AND to AND
            UPD HdlOp@@NEG to NEG
                UPD HdlValueId@@ADDR_MASK_RAM_MAIN to ADDR_MASK_SRAM_CTRL_MAIN__RAM
    UPD HdlOp@@EQ to EQ
        UPD HdlValueId@@ADDR_SPACE_SRAM_CTRL_MAIN to ADDR_SPACE_SRAM_CTRL_MAIN__REGS
        UPD HdlOp@@AND to AND
            UPD HdlOp@@NEG to NEG
                UPD HdlValueId@@ADDR_MASK_SRAM_CTRL_MAIN to ADDR_MASK_SRAM_CTRL_MAIN__REGS


CommitId: de7eba3d7af1f55b7bda8104152b4240f3d37456
[csrng/entropy_src] fix for #4601
--- a/hw/ip/entropy_src/rtl/entropy_src_main_sm.sv
+++ b/hw/ip/entropy_src/rtl/entropy_src_main_sm.sv
@@ -89,6 +92,7 @@ module entropy_src_main_sm (
     sha3_start_o = 1'b0;
     sha3_process_o = 1'b0;
     sha3_done_o = 1'b0;
+    cs_aes_halt_req_o = 1'b0;
     main_sm_err_o = 1'b0;
     unique case (state_q)
       Idle: begin

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: cs_aes_halt_req_o
                HdlValueInt: 0


CommitId: de7eba3d7af1f55b7bda8104152b4240f3d37456
[csrng/entropy_src] fix for #4601
--- a/hw/ip/entropy_src/rtl/entropy_src_main_sm.sv
+++ b/hw/ip/entropy_src/rtl/entropy_src_main_sm.sv
@@ -128,16 +132,24 @@ module entropy_src_main_sm (
             sha3_done_o = 1'b1;
             state_d = Idle;
           end else begin
-            state_d = NormSha3Process;
+            state_d = NormSha3CSReq;
           end
         end
       end
+      NormSha3CSReq: begin
+        cs_aes_halt_req_o = 1'b1;
+        if (cs_aes_halt_ack_i) begin
+        state_d = NormSha3Process;
+        end
+      end
       NormSha3Process: begin
+        cs_aes_halt_req_o = 1'b1;
         rst_alert_cntr_o = 1'b1;
         sha3_process_o = 1'b1;
         state_d = NormSha3Valid;
       end
       NormSha3Valid: begin
+        cs_aes_halt_req_o = 1'b1;
         if (sha3_state_vld_i) begin
           state_d = NormSha3Done;
         end
ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: cs_aes_halt_req_o
                HdlValueInt: 0

UPD HdlStmCase@@state_q to state_q
    INS tuple@@ to cases
    INS HdlValueId@@NormSha3CSReq to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: cs_aes_halt_req_o
                HdlValueInt: 1
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: cs_aes_halt_req_o
                HdlValueInt: 1
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: cs_aes_halt_req_o
                HdlValueInt: 1

INS HdlStmIf@@ to body

UPD HdlStmIf@@ to 
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: state_d
                    HdlValueId: NormSha3Process

UPD HdlStmIf@@ to 
    INS HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: state_d
                    HdlValueId: NormSha3CSReq


CommitId: aaab04fc40982b1539f8ec52acde8e4d59ab1f9e
[rom_ctrl] Only raise ROM req line when not in reset
--- a/hw/ip/rom_ctrl/rtl/rom_ctrl_mux.sv
+++ b/hw/ip/rom_ctrl/rtl/rom_ctrl_mux.sv
@@ -24,6 +24,7 @@ module rom_ctrl_mux #(
 
   // Interface for ROM checker
   input logic [AW-1:0]  chk_addr_i,
+  input logic           chk_req_i,
   output logic [39:0]   chk_rdata_o,
 
   // Interface for ROM

ParseResult:
INS HdlIdDef@@chk_req_i to ports
HdlIdDef: chk_req_i
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: IN


CommitId: aaab04fc40982b1539f8ec52acde8e4d59ab1f9e
[rom_ctrl] Only raise ROM req line when not in reset
--- a/hw/ip/rom_ctrl/rtl/rom_ctrl_mux.sv
+++ b/hw/ip/rom_ctrl/rtl/rom_ctrl_mux.sv
@@ -60,6 +61,6 @@ module rom_ctrl_mux #(
   assign chk_rdata_o = rom_scr_rdata_i;
 
   assign rom_addr_o = sel_i ? chk_addr_i : bus_addr_i;
-  assign rom_req_o  = sel_i ? 1'b1       : bus_req_i;
+  assign rom_req_o  = sel_i ? chk_req_i  : bus_req_i;
 
 endmodule
ParseResult:
UPD HdlStmAssign@@ to 
    UPD HdlOp@@TERNARY to TERNARY
        INS HdlValueId@@chk_req_i to ops

UPD HdlStmAssign@@ to 
    UPD HdlOp@@TERNARY to TERNARY
        DEL HdlValueInt@@1 from ops


CommitId: 79aac27c5eb3b17346aaeb86678edcffa94cb9d9
Update lowrisc_ibex to lowRISC/ibex@6b1a7ad
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_controller.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_controller.sv
@@ -68,6 +68,7 @@ module ibex_controller (
     output logic                  debug_mode_o,
     input  logic                  debug_single_step_i,
     input  logic                  debug_ebreakm_i,
+    input  logic                  debug_ebreaku_i,
 
     output logic                  csr_save_if_o,
     output logic                  csr_save_id_o,

ParseResult:
INS HdlIdDef@@debug_ebreaku_i to ports
HdlIdDef: debug_ebreaku_i
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: IN


CommitId: 79aac27c5eb3b17346aaeb86678edcffa94cb9d9
Update lowrisc_ibex to lowRISC/ibex@6b1a7ad
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_controller.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_controller.sv
@@ -114,6 +115,7 @@ module ibex_controller (
   logic exc_req_lsu;
   logic special_req;
   logic enter_debug_mode;
+  logic ebreak_into_debug;
   logic handle_irq;
 
   logic [3:0] mfip_id;

ParseResult:
INS HdlIdDef@@ebreak_into_debug to objs
HdlIdDef: ebreak_into_debug
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL


CommitId: 79aac27c5eb3b17346aaeb86678edcffa94cb9d9
Update lowrisc_ibex to lowRISC/ibex@6b1a7ad
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_controller.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_controller.sv
@@ -190,7 +192,18 @@ module ibex_controller (
   // Interrupts //
   ////////////////
 
-  assign enter_debug_mode = debug_req_i & ~debug_mode_q;
+  // Enter debug mode due to an external debug_req_i or because the core is in
+  // single step mode (dcsr.step == 1). Single step must be qualified with
+  // instruction valid otherwise the core will immediately enter debug mode
+  // due to a recently flushed IF (or a delay in an instruction returning from
+  // memory) before it has had anything to single step.
+  assign enter_debug_mode = (debug_req_i | (debug_single_step_i & instr_valid_i)) & ~debug_mode_q;
+
+  // Set when an ebreak should enter debug mode rather than jump to exception
+  // handler
+  assign ebreak_into_debug = priv_mode_i == PRIV_LVL_M ? debug_ebreakm_i :
+                             priv_mode_i == PRIV_LVL_U ? debug_ebreaku_i :
+                                                         1'b0;
 
   // interrupts including NMI are ignored while in debug mode [Debug Spec v0.13.2, p.39]
   assign handle_irq       = ~debug_mode_q &

ParseResult:
INS HdlStmAssign@@ to objs

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: TERNARY
        list: ops
            HdlOp: EQ
                list: ops
                    HdlValueId: priv_mode_i
                    HdlValueId: PRIV_LVL_M
            HdlValueId: debug_ebreakm_i
            HdlOp: TERNARY
                list: ops
                    HdlOp: EQ
                        list: ops
                            HdlValueId: priv_mode_i
                            HdlValueId: PRIV_LVL_U
                    HdlValueId: debug_ebreaku_i
                    HdlValueInt: 0
    HdlValueId: ebreak_into_debug

UPD HdlStmAssign@@ to 
    UPD HdlOp@@AND to AND
        MOV HdlOp@@NEG to ops
        HdlOp: NEG
            list: ops
                HdlValueId: debug_mode_q
        DEL HdlValueId@@debug_req_i from ops
        DEL list@@ops from AND
    DEL HdlOp@@AND from 
    DEL HdlValueId@@enter_debug_mode from 

DEL HdlStmAssign@@ from objs


CommitId: 79aac27c5eb3b17346aaeb86678edcffa94cb9d9
Update lowrisc_ibex to lowRISC/ibex@6b1a7ad
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_controller.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_controller.sv
@@ -316,8 +329,9 @@ module ibex_controller (
         // enter debug mode
         if (enter_debug_mode) begin
           ctrl_fsm_ns = DBG_TAKEN_IF;
+          // Halt IF only for now, ID will be flushed in DBG_TAKEN_IF as the
+          // ID state is needed for correct debug mode entry
           halt_if     = 1'b1;
-          flush_id    = 1'b1;
         end
       end
 

ParseResult:
UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: flush_id
                HdlValueInt: 1


CommitId: 79aac27c5eb3b17346aaeb86678edcffa94cb9d9
Update lowrisc_ibex to lowRISC/ibex@6b1a7ad
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_controller.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_controller.sv
@@ -346,32 +360,21 @@ module ibex_controller (
             perf_jump_o    = jump_set_i;
           end
 
-
-          // stall IF stage to not starve debug and interrupt requests, these just
-          // need to wait until after the current (multicycle) instruction
+          // If entering debug mode or handling an IRQ the core needs to wait
+          // until the current instruction has finished executing. Stall IF
+          // during that time.
           if ((enter_debug_mode || handle_irq) && stall) begin
             halt_if = 1'b1;
           end
-
-          // single stepping:
-          // execute a single instruction and then enter debug mode, in case of exceptions,
-          // set registers but do not jump into handler [Debug Spec v0.13.2, p.44]
-          if (debug_single_step_i && !debug_mode_q) begin
-            halt_if = 1'b1;
-
-            if (!special_req && !stall) begin
-              ctrl_fsm_ns = DBG_TAKEN_IF;
-            end
-          end
         end // instr_valid_i
 
         if (!stall && !special_req) begin
           if (enter_debug_mode) begin
             // enter debug mode
             ctrl_fsm_ns = DBG_TAKEN_IF;
+            // Halt IF only for now, ID will be flushed in DBG_TAKEN_IF as the
+            // ID state is needed for correct debug mode entry
             halt_if     = 1'b1;
-            flush_id    = 1'b1;
-
           end else if (handle_irq) begin
             // handle interrupt (not in debug mode)
             ctrl_fsm_ns = IRQ_TAKEN;

ParseResult:
MOV HdlStmIf@@ to body
HdlStmIf
    HdlOp: AND_LOG
        list: ops
            HdlOp: NEG_LOG
                list: ops
                    HdlValueId: special_req
            HdlOp: NEG_LOG
                list: ops
                    HdlValueId: stall
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: ctrl_fsm_ns
                    HdlValueId: DBG_TAKEN_IF
    list: elifs

UPD HdlStmIf@@ to 
    UPD HdlOp@@AND_LOG to AND_LOG
        UPD HdlOp@@NEG_LOG to NEG_LOG
            UPD HdlValueId@@special_req to enter_debug_mode
            MOV HdlValueId@@special_req to ops
            HdlValueId: special_req
            DEL list@@ops from NEG_LOG
        DEL HdlOp@@NEG_LOG from ops
        DEL HdlOp@@NEG_LOG from ops
        HdlOp: NEG_LOG
            list: ops
                HdlValueId: stall
        DEL list@@ops from AND_LOG
    DEL HdlOp@@AND_LOG from 

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: flush_id
                HdlValueInt: 1

UPD HdlStmIf@@ to 
    DEL HdlOp@@AND_LOG from 
    HdlOp: AND_LOG
        list: ops
            HdlValueId: debug_single_step_i
            HdlOp: NEG_LOG
                list: ops
                    HdlValueId: debug_mode_q
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: halt_if
                HdlValueInt: 1
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL list@@elifs from 

DEL HdlStmIf@@ from body


CommitId: 79aac27c5eb3b17346aaeb86678edcffa94cb9d9
Update lowrisc_ibex to lowRISC/ibex@6b1a7ad
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_controller.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_controller.sv
@@ -447,12 +451,13 @@ module ibex_controller (
         // for 1. do not update dcsr and dpc, for 2. do so [Debug Spec v0.13.2, p.39]
         // jump to debug exception handler in debug memory
         if (ebrk_insn) begin
+          flush_id     = 1'b1;
           pc_mux_o     = PC_EXC;
           pc_set_o     = 1'b1;
           exc_pc_mux_o = EXC_PC_DBD;
 
           // update dcsr and dpc
-          if (debug_ebreakm_i && !debug_mode_q) begin // ebreak with forced entry
+          if (ebreak_into_debug && !debug_mode_q) begin // ebreak with forced entry
 
             // dpc (set to the address of the EBREAK, i.e. set to PC in ID stage)
             csr_save_cause_o = 1'b1;

ParseResult:
UPD HdlStmIf@@ to 
    UPD HdlOp@@AND_LOG to AND_LOG
        UPD HdlValueId@@debug_ebreakm_i to ebreak_into_debug


CommitId: 79aac27c5eb3b17346aaeb86678edcffa94cb9d9
Update lowrisc_ibex to lowRISC/ibex@6b1a7ad
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_controller.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_controller.sv
@@ -499,7 +504,7 @@ module ibex_controller (
                                                         EXC_CAUSE_ECALL_UMODE;
 
           end else if (ebrk_insn) begin
-            if (debug_mode_q) begin
+            if (debug_mode_q | ebreak_into_debug) begin
               /*
                * EBREAK in debug mode re-enters debug mode
                *

ParseResult:
UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD list@@ops to elifs
            MOV list@@ops to ASSIGN
            list: ops
                HdlValueId: csr_save_cause_o
                HdlValueInt: 0
            DEL HdlValueId@@csr_save_cause_o from ops
            DEL HdlValueInt@@0 from ops
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: csr_save_id_o
                HdlValueInt: 0
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@csr_save_id_o to flush_id
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: pc_set_o
                HdlValueInt: 0
        DEL HdlOp@@ASSIGN from body
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: ctrl_fsm_ns
                HdlValueId: DBG_TAKEN_ID
        DEL list@@body from SEQ
    MOV HdlValueId@@debug_mode_q to 
    HdlValueId: debug_mode_q
    DEL HdlValueId@@debug_ebreakm_i from 
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from elifs
    DEL list@@elifs from 


CommitId: 79aac27c5eb3b17346aaeb86678edcffa94cb9d9
Update lowrisc_ibex to lowRISC/ibex@6b1a7ad
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_controller.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_controller.sv
@@ -507,11 +512,7 @@ module ibex_controller (
                * Mode, it halts the hart again but without updating dpc or
                * dcsr." [Debug Spec v0.13.2, p.39]
                */
-              pc_set_o         = 1'b0;
-              csr_save_id_o    = 1'b0;
-              csr_save_cause_o = 1'b0;
-              ctrl_fsm_ns      = DBG_TAKEN_ID;
-            end else if (debug_ebreakm_i) begin
+
               /*
                * dcsr.ebreakm == 1:
                * "EBREAK instructions in M-mode enter Debug Mode."

ParseResult:
UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD list@@ops to elifs
            MOV list@@ops to ASSIGN
            list: ops
                HdlValueId: csr_save_cause_o
                HdlValueInt: 0
            DEL HdlValueId@@csr_save_cause_o from ops
            DEL HdlValueInt@@0 from ops
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: csr_save_id_o
                HdlValueInt: 0
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@csr_save_id_o to flush_id
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: pc_set_o
                HdlValueInt: 0
        DEL HdlOp@@ASSIGN from body
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: ctrl_fsm_ns
                HdlValueId: DBG_TAKEN_ID
        DEL list@@body from SEQ
    MOV HdlValueId@@debug_mode_q to 
    HdlValueId: debug_mode_q
    DEL HdlValueId@@debug_ebreakm_i from 
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from elifs
    DEL list@@elifs from 


CommitId: 79aac27c5eb3b17346aaeb86678edcffa94cb9d9
Update lowrisc_ibex to lowRISC/ibex@6b1a7ad
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_controller.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_controller.sv
@@ -521,13 +522,14 @@ module ibex_controller (
               csr_save_id_o    = 1'b0;
               csr_save_cause_o = 1'b0;
               ctrl_fsm_ns      = DBG_TAKEN_ID;
+              flush_id         = 1'b0;
             end else begin
               /*
                * "The EBREAK instruction is used by debuggers to cause control
                * to be transferred back to a debugging environment. It
                * generates a breakpoint exception and performs no other
                * operation. [...] ECALL and EBREAK cause the receiving
-               * privilege mode’s epc register to be set to the address of the
+               * privilege mode's epc register to be set to the address of the
                * ECALL or EBREAK instruction itself, not the address of the
                * following instruction." [Privileged Spec v1.11, p.40]
                */

ParseResult:
UPD HdlStmIf@@ to 
    INS HdlOp@@OR to 
    UPD HdlOp@@OR to OR
        INS list@@ops to OR
        INS HdlValueId@@ebreak_into_debug to ops

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD list@@ops to elifs
            MOV list@@ops to ASSIGN
            list: ops
                HdlValueId: csr_save_cause_o
                HdlValueInt: 0
            DEL HdlValueId@@csr_save_cause_o from ops
            DEL HdlValueInt@@0 from ops
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: csr_save_id_o
                HdlValueInt: 0
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@csr_save_id_o to flush_id
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: pc_set_o
                HdlValueInt: 0
        DEL HdlOp@@ASSIGN from body
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: ctrl_fsm_ns
                HdlValueId: DBG_TAKEN_ID
        DEL list@@body from SEQ
    MOV HdlValueId@@debug_mode_q to 
    HdlValueId: debug_mode_q
    DEL HdlValueId@@debug_ebreakm_i from 
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from elifs
    DEL list@@elifs from 


CommitId: 79aac27c5eb3b17346aaeb86678edcffa94cb9d9
Update lowrisc_ibex to lowRISC/ibex@6b1a7ad
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_controller.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_controller.sv
@@ -564,10 +566,13 @@ module ibex_controller (
           end
         end // exc_req_q
 
-        // single stepping
-        // set exception registers, but do not jump into handler [Debug Spec v0.13.2, p.44]
-        if (debug_single_step_i && !debug_mode_q) begin
-          pc_set_o    = 1'b0;
+        // Entering debug mode due to either single step or debug_req. Ensure
+        // registers are set for exception but then enter debug handler rather
+        // than exception handler [Debug Spec v0.13.2, p.44]
+        // Leave all other signals as is to ensure CSRs and PC get set as if
+        // core was entering exception handler, entry to debug mode will then
+        // see the appropriate state and setup dpc correctly.
+        if (enter_debug_mode) begin
           ctrl_fsm_ns = DBG_TAKEN_IF;
         end
       end // FLUSH
ParseResult:
DEL HdlStmIf@@ from body
HdlStmIf
    HdlOp: AND_LOG
        list: ops
            HdlValueId: debug_single_step_i
            HdlOp: NEG_LOG
                list: ops
                    HdlValueId: debug_mode_q
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: pc_set_o
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: ctrl_fsm_ns
                    HdlValueId: DBG_TAKEN_IF
    list: elifs


CommitId: 309a47974f0ce84cab3d559a85975448dfbd7e2f
[prim] Use prim_pkg::impl_e instead of int for Impl
--- a/hw/ip/padctrl/rtl/padctrl.sv
+++ b/hw/ip/padctrl/rtl/padctrl.sv
@@ -8,11 +8,11 @@
 //
 
 `ifndef PRIM_DEFAULT_IMPL
-  `define PRIM_DEFAULT_IMPL integer'(prim_pkg::ImplGeneric)
+  `define PRIM_DEFAULT_IMPL prim_pkg::ImplGeneric
 `endif
 
 module padctrl #(
-  parameter integer Impl = `PRIM_DEFAULT_IMPL
+  parameter prim_pkg::impl_e Impl = `PRIM_DEFAULT_IMPL
 ) (
   input                                       clk_i,
   input                                       rst_ni,

ParseResult:
UPD HdlIdDef@@Impl to Impl
    INS HdlOp@@DOUBLE_COLON to Impl
    INS HdlOp@@DOUBLE_COLON to Impl
    HdlOp: DOUBLE_COLON
        list: ops
            HdlValueId: prim_pkg
            HdlValueId: ImplGeneric
    UPD HdlOp@@DOUBLE_COLON to DOUBLE_COLON
        INS list@@ops to DOUBLE_COLON
        INS HdlValueId@@prim_pkg to ops

UPD HdlIdDef@@Impl to Impl
    UPD HdlValueId@@integer to impl_e
    MOV HdlValueId@@integer to Impl
    HdlValueId: integer
    DEL HdlExprNotImplemented@@value from Impl


CommitId: 309a47974f0ce84cab3d559a85975448dfbd7e2f
[prim] Use prim_pkg::impl_e instead of int for Impl
--- a/hw/ip/padctrl/rtl/padctrl.sv
+++ b/hw/ip/padctrl/rtl/padctrl.sv
@@ -35,10 +35,10 @@ module padctrl #(
   //////////////////////////////////////////////////////
 
   logic [padctrl_reg_pkg::AttrDw-1:0] warl_mask;
-  if (impl_e'(Impl) == ImplGeneric) begin : gen_generic
+  if (Impl == ImplGeneric) begin : gen_generic
     // all attributes supported
     assign warl_mask = padctrl_reg_pkg::AttrDw'(6'h3F);
-  end else if (impl_e'(Impl) == ImplXilinx) begin : gen_xilinx
+  end else if (Impl == ImplXilinx) begin : gen_xilinx
     // only OD and INV supported
     assign warl_mask = padctrl_reg_pkg::AttrDw'(2'h3);
   end else begin : gen_failure
ParseResult:
UPD HdlStmIf@@ to 
    UPD HdlOp@@EQ to EQ
        UPD HdlOp@@CALL to CALL
            MOV HdlValueId@@Impl to ops
            HdlValueId: Impl
            DEL HdlValueId@@impl_e from ops
            DEL list@@ops from CALL
        DEL HdlOp@@CALL from ops
    UPD HdlOp@@EQ to EQ
        UPD HdlOp@@CALL to CALL
            MOV HdlValueId@@Impl to ops
            HdlValueId: Impl
            DEL HdlValueId@@impl_e from ops
            DEL list@@ops from CALL
        DEL HdlOp@@CALL from ops


CommitId: 1671860bd9c24744d9d2df2d024049e150dcc55e
[csrng/rtl] bug fix for csrng command stage FIFO
--- a/hw/ip/csrng/rtl/csrng_cmd_stage.sv
+++ b/hw/ip/csrng/rtl/csrng_cmd_stage.sv
@@ -132,7 +132,7 @@ module csrng_cmd_stage import csrng_pkg::*; #(
 
   assign sfifo_cmd_wdata = cmd_stage_bus_i;
 
-  assign sfifo_cmd_push = cs_enable_i && cmd_stage_vld_i;
+  assign sfifo_cmd_push = cs_enable_i && cmd_stage_rdy_o && cmd_stage_vld_i;
 
   assign sfifo_cmd_pop = cs_enable_i && cmd_fifo_pop;
 
ParseResult:
INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: AND_LOG
        list: ops
            HdlOp: AND_LOG
                list: ops
                    HdlValueId: cs_enable_i
                    HdlValueId: cmd_stage_rdy_o
            HdlValueId: cmd_stage_vld_i
    HdlValueId: sfifo_cmd_push

DEL HdlStmAssign@@ from objs
HdlStmAssign
    HdlOp: AND_LOG
        list: ops
            HdlValueId: cs_enable_i
            HdlValueId: cmd_stage_vld_i
    HdlValueId: sfifo_cmd_push


CommitId: d09aabf89956a6410dd40633b6d3500f1afe3674
[i2c, rtl] Fixes to Lint Errors and Warnings
--- a/hw/ip/i2c/rtl/i2c_fsm.sv
+++ b/hw/ip/i2c/rtl/i2c_fsm.sv
@@ -166,7 +166,7 @@ module i2c_fsm (
   always_ff @ (posedge clk_i or negedge rst_ni) begin : clk_stretch
     if (!rst_ni) begin
       stretch <= '0;
-    end else if (scl_temp == 1'b1 && scl_i == '0) begin
+    end else if (scl_temp && !scl_i) begin
       stretch <= stretch + 1'b1;
     end else begin
       stretch <= '0;

ParseResult:
UPD HdlStmIf@@ to 
    UPD HdlOp@@AND_LOG to AND_LOG
        UPD HdlOp@@EQ to EQ
            MOV HdlValueId@@scl_temp to ops
            HdlValueId: scl_temp
            DEL HdlValueInt@@1 from ops
            DEL list@@ops from EQ
        UPD HdlOp@@EQ to NEG_LOG
        DEL HdlOp@@EQ from ops
        UPD HdlOp@@EQ to EQ
            DEL HdlValueInt@@0 from ops


CommitId: d09aabf89956a6410dd40633b6d3500f1afe3674
[i2c, rtl] Fixes to Lint Errors and Warnings
--- a/hw/ip/i2c/rtl/i2c_fsm.sv
+++ b/hw/ip/i2c/rtl/i2c_fsm.sv
@@ -245,8 +245,8 @@ module i2c_fsm (
   always_ff @ (posedge clk_i or negedge rst_ni) begin : s_detect
     if (!rst_ni) begin
       start_det <= 1'b0;
-    end else if (scl_i_q == 1'b1 && scl_i == 1'b1) begin
-      if (sda_i_q == 1'b1 && sda_i == '0) start_det <= 1'b1;
+    end else if (scl_i_q && scl_i) begin
+      if (sda_i_q && !sda_i) start_det <= 1'b1;
       else start_det <= 1'b0;
     end else begin
       start_det <= 1'b0;

ParseResult:
UPD HdlStmIf@@ to 
    UPD HdlOp@@AND_LOG to AND_LOG
        UPD HdlOp@@EQ to EQ
            MOV HdlValueId@@scl_i_q to ops
            HdlValueId: scl_i_q
            DEL HdlValueInt@@1 from ops
            DEL list@@ops from EQ
        UPD HdlOp@@EQ to EQ
            MOV HdlValueId@@scl_i to ops
            HdlValueId: scl_i
            DEL HdlValueInt@@1 from ops
            DEL list@@ops from EQ
        DEL HdlOp@@EQ from ops
        DEL HdlOp@@EQ from ops

UPD HdlStmIf@@ to 
    UPD HdlOp@@AND_LOG to AND_LOG
        UPD HdlOp@@EQ to EQ
            MOV HdlValueId@@sda_i_q to ops
            HdlValueId: sda_i_q
            DEL HdlValueInt@@1 from ops
            DEL list@@ops from EQ
        UPD HdlOp@@EQ to NEG_LOG
        DEL HdlOp@@EQ from ops
        UPD HdlOp@@EQ to EQ
            DEL HdlValueInt@@0 from ops


CommitId: d09aabf89956a6410dd40633b6d3500f1afe3674
[i2c, rtl] Fixes to Lint Errors and Warnings
--- a/hw/ip/i2c/rtl/i2c_fsm.sv
+++ b/hw/ip/i2c/rtl/i2c_fsm.sv
@@ -257,8 +257,8 @@ module i2c_fsm (
   always_ff @ (posedge clk_i or negedge rst_ni) begin : p_detect
     if (!rst_ni) begin
       stop_det <= 1'b0;
-    end else if (scl_i_q == 1'b1 && scl_i == 1'b1) begin
-      if (sda_i_q == '0 && sda_i == 1'b1) stop_det <= 1'b1;
+    end else if (scl_i_q && scl_i) begin
+      if (!sda_i_q && sda_i) stop_det <= 1'b1;
       else stop_det <= 1'b0;
     end else begin
       stop_det <= 1'b0;

ParseResult:
UPD HdlStmIf@@ to 
    UPD HdlOp@@AND_LOG to AND_LOG
        UPD HdlOp@@EQ to EQ
            MOV HdlValueId@@scl_i_q to ops
            HdlValueId: scl_i_q
            DEL HdlValueInt@@1 from ops
            DEL list@@ops from EQ
        UPD HdlOp@@EQ to EQ
            MOV HdlValueId@@scl_i to ops
            HdlValueId: scl_i
            DEL HdlValueInt@@1 from ops
            DEL list@@ops from EQ
        DEL HdlOp@@EQ from ops
        DEL HdlOp@@EQ from ops

UPD HdlStmIf@@ to 
    UPD HdlOp@@AND_LOG to AND_LOG
        UPD HdlOp@@EQ to NEG_LOG
        UPD HdlOp@@EQ to EQ
            MOV HdlValueId@@sda_i to ops
            HdlValueId: sda_i
            DEL HdlValueInt@@1 from ops
            DEL list@@ops from EQ
        UPD HdlOp@@EQ to EQ
            DEL HdlValueInt@@0 from ops
        DEL HdlOp@@EQ from ops


CommitId: d09aabf89956a6410dd40633b6d3500f1afe3674
[i2c, rtl] Fixes to Lint Errors and Warnings
--- a/hw/ip/i2c/rtl/i2c_fsm.sv
+++ b/hw/ip/i2c/rtl/i2c_fsm.sv
@@ -274,7 +274,7 @@ module i2c_fsm (
       bit_idx <= 4'd0;
     end else if (start_det || bit_ack) begin
       bit_idx <= 4'd0;
-    end else if (scl_i_q == 1'b1 && scl_i == '0) begin
+    end else if (scl_i_q && !scl_i) begin
       bit_idx <= bit_idx + 1'b1;
     end else begin
       bit_idx <= bit_idx;

ParseResult:
UPD HdlStmIf@@ to 
    UPD HdlOp@@AND_LOG to AND_LOG
        UPD HdlOp@@EQ to EQ
            MOV HdlValueId@@scl_i_q to ops
            HdlValueId: scl_i_q
            DEL HdlValueInt@@1 from ops
            DEL list@@ops from EQ
        UPD HdlOp@@EQ to NEG_LOG
        DEL HdlOp@@EQ from ops
        UPD HdlOp@@EQ to EQ
            DEL HdlValueInt@@0 from ops


CommitId: d09aabf89956a6410dd40633b6d3500f1afe3674
[i2c, rtl] Fixes to Lint Errors and Warnings
--- a/hw/ip/i2c/rtl/i2c_fsm.sv
+++ b/hw/ip/i2c/rtl/i2c_fsm.sv
@@ -304,7 +304,7 @@ module i2c_fsm (
       input_byte <= 8'h00;
     end else if (input_byte_clr) begin
       input_byte <= 8'h00;
-    end else if (scl_i_q == '0 && scl_i == 1'b1) begin
+    end else if (!scl_i_q && scl_i) begin
       if (!bit_ack) input_byte[7:0] <= {input_byte[6:0], sda_i};  // MSB goes in first
     end
   end

ParseResult:
UPD HdlStmIf@@ to 
    UPD HdlOp@@AND_LOG to AND_LOG
        UPD HdlOp@@EQ to NEG_LOG
        UPD HdlOp@@EQ to EQ
            MOV HdlValueId@@scl_i to ops
            HdlValueId: scl_i
            DEL HdlValueInt@@1 from ops
            DEL list@@ops from EQ
        UPD HdlOp@@EQ to EQ
            DEL HdlValueInt@@0 from ops
        DEL HdlOp@@EQ from ops


CommitId: d09aabf89956a6410dd40633b6d3500f1afe3674
[i2c, rtl] Fixes to Lint Errors and Warnings
--- a/hw/ip/i2c/rtl/i2c_fsm.sv
+++ b/hw/ip/i2c/rtl/i2c_fsm.sv
@@ -313,7 +313,7 @@ module i2c_fsm (
   always_ff @ (posedge clk_i or negedge rst_ni) begin : host_ack_register
     if (!rst_ni) begin
       host_ack <= 1'b0;
-    end else if (scl_i_q == '0 && scl_i == 1'b1) begin
+    end else if (!scl_i_q && scl_i) begin
       if (bit_ack) host_ack <= ~sda_i;
     end
   end

ParseResult:
UPD HdlStmIf@@ to 
    UPD HdlOp@@AND_LOG to AND_LOG
        UPD HdlOp@@EQ to NEG_LOG
        UPD HdlOp@@EQ to EQ
            MOV HdlValueId@@scl_i to ops
            HdlValueId: scl_i
            DEL HdlValueInt@@1 from ops
            DEL list@@ops from EQ
        UPD HdlOp@@EQ to EQ
            DEL HdlValueInt@@0 from ops
        DEL HdlOp@@EQ from ops


CommitId: d09aabf89956a6410dd40633b6d3500f1afe3674
[i2c, rtl] Fixes to Lint Errors and Warnings
--- a/hw/ip/i2c/rtl/i2c_fsm.sv
+++ b/hw/ip/i2c/rtl/i2c_fsm.sv
@@ -362,18 +362,15 @@ module i2c_fsm (
         host_idle_o = 1'b1;
         sda_temp = 1'b1;
         scl_temp = 1'b1;
-        if (host_enable_i && sda_i == '0) event_sda_interference_o = 1'b1;
-        if (!target_address0_i && !target_mask0_i && !target_address1_i && !target_mask1_i) begin
-          acq_fifo_wvalid_o = 1'b0;
-        end
+        if (host_enable_i && !sda_i) event_sda_interference_o = 1'b1;
       end
       // SetupStart: SDA and SCL are released
       SetupStart : begin
         host_idle_o = 1'b0;
         sda_temp = 1'b1;
         scl_temp = 1'b1;
-        if (sda_i == '0) event_sda_interference_o = 1'b1;
-        if (restart == 1'b1) event_trans_complete_o = 1'b1;
+        if (!sda_i) event_sda_interference_o = 1'b1;
+        if (restart) event_trans_complete_o = 1'b1;
       end
       // HoldStart: SDA is pulled low, SCL is released
       HoldStart : begin

ParseResult:
UPD HdlStmProcess@@ to 
    INS HdlStmProcessTriggerConstrain@@COMB to 

UPD HdlStmCase@@state_q to state_q
    INS HdlStmCaseType@@CASE to state_q
    INS HdlValueId@@state_q to state_q
    INS HdlStmCaseUniqConstrain@@UNIQUE to state_q
    INS tuple@@ to cases
    INS HdlValueId@@Idle to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmCase@@state_q to state_q
    UPD HdlStmBlock@@SEQ to SEQ
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: host_idle_o
                HdlValueInt: 1
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: sda_temp
                HdlValueInt: 1
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: scl_temp
                HdlValueInt: 1
        DEL list@@body from SEQ
    DEL HdlStmCaseType@@CASE from state_q
    DEL HdlValueId@@state_q from state_q
    DEL HdlValueId@@Idle from 
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases
    DEL HdlStmCaseUniqConstrain@@UNIQUE from state_q

INS HdlStmIf@@ to body

UPD HdlStmIf@@ to 
    INS HdlOp@@AND_LOG to 
    HdlOp: AND_LOG
        list: ops
            HdlValueId: host_enable_i
            HdlOp: NEG_LOG
                list: ops
                    HdlValueId: sda_i
    INS list@@elifs to 

UPD HdlStmIf@@ to 
    MOV HdlOp@@ASSIGN to 
    HdlOp: ASSIGN
        list: ops
            HdlValueId: event_sda_interference_o
            HdlValueInt: 1
    DEL HdlOp@@AND_LOG from 
    HdlOp: AND_LOG
        list: ops
            HdlValueId: host_enable_i
            HdlOp: EQ
                list: ops
                    HdlValueId: sda_i
                    HdlValueInt: 0
    DEL list@@elifs from 

UPD HdlStmIf@@ to 
    UPD HdlOp@@EQ to NEG_LOG
    UPD HdlOp@@EQ to EQ
        DEL HdlValueInt@@0 from ops

UPD HdlStmIf@@ to 
    UPD HdlOp@@EQ to EQ
        MOV HdlValueId@@restart to ops
        HdlValueId: restart
        DEL HdlValueInt@@1 from ops
        DEL list@@ops from EQ
    DEL HdlOp@@EQ from 

DEL HdlStmIf@@ from body

DEL HdlStmIf@@ from body
HdlStmIf
    HdlOp: AND_LOG
        list: ops
            HdlOp: AND_LOG
                list: ops
                    HdlOp: AND_LOG
                        list: ops
                            HdlOp: NEG_LOG
                                list: ops
                                    HdlValueId: target_address0_i
                            HdlOp: NEG_LOG
                                list: ops
                                    HdlValueId: target_mask0_i
                    HdlOp: NEG_LOG
                        list: ops
                            HdlValueId: target_address1_i
            HdlOp: NEG_LOG
                list: ops
                    HdlValueId: target_mask1_i
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: acq_fifo_wvalid_o
                    HdlValueInt: 0
    list: elifs

UPD HdlStmProcess@@ to 
    DEL HdlStmProcessTriggerConstrain@@COMB from 


CommitId: d09aabf89956a6410dd40633b6d3500f1afe3674
[i2c, rtl] Fixes to Lint Errors and Warnings
--- a/hw/ip/i2c/rtl/i2c_fsm.sv
+++ b/hw/ip/i2c/rtl/i2c_fsm.sv
@@ -398,7 +395,7 @@ module i2c_fsm (
         host_idle_o = 1'b0;
         sda_temp = fmt_byte_i[bit_index];
         scl_temp = 1'b0;
-        if (sda_temp == 1'b1 && sda_i == '0) event_sda_interference_o = 1'b1;
+        if (sda_temp && !sda_i) event_sda_interference_o = 1'b1;
       end
       // ClockPulse: SCL is released, SDA keeps the indexed bit value
       ClockPulse : begin

ParseResult:
UPD HdlStmProcess@@ to 
    INS HdlStmProcessTriggerConstrain@@COMB to 

UPD HdlStmCase@@state_q to state_q
    INS HdlStmCaseType@@CASE to state_q
    INS HdlValueId@@state_q to state_q
    INS HdlStmCaseUniqConstrain@@UNIQUE to state_q
    INS tuple@@ to cases
    INS HdlValueId@@Idle to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmCase@@state_q to state_q
    UPD HdlStmBlock@@SEQ to SEQ
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: host_idle_o
                HdlValueInt: 1
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: sda_temp
                HdlValueInt: 1
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: scl_temp
                HdlValueInt: 1
        DEL list@@body from SEQ
    DEL HdlStmCaseType@@CASE from state_q
    DEL HdlValueId@@state_q from state_q
    DEL HdlValueId@@Idle from 
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases
    DEL HdlStmCaseUniqConstrain@@UNIQUE from state_q

UPD HdlStmIf@@ to 
    UPD HdlOp@@AND_LOG to AND_LOG
        UPD HdlOp@@EQ to EQ
            MOV HdlValueId@@sda_temp to ops
            HdlValueId: sda_temp
            DEL HdlValueInt@@1 from ops
            DEL list@@ops from EQ
        UPD HdlOp@@EQ to NEG_LOG
        DEL HdlOp@@EQ from ops
        UPD HdlOp@@EQ to EQ
            DEL HdlValueInt@@0 from ops

UPD HdlStmProcess@@ to 
    DEL HdlStmProcessTriggerConstrain@@COMB from 


CommitId: d09aabf89956a6410dd40633b6d3500f1afe3674
[i2c, rtl] Fixes to Lint Errors and Warnings
--- a/hw/ip/i2c/rtl/i2c_fsm.sv
+++ b/hw/ip/i2c/rtl/i2c_fsm.sv
@@ -408,16 +405,16 @@ module i2c_fsm (
         if ((stretch > stretch_timeout_i) && timeout_enable_i) begin
           event_stretch_timeout_o = 1'b1;
         end
-        if (scl_i_q == 1'b1 && scl_i == '0)  event_scl_interference_o = 1'b1;
-        if (sda_temp == 1'b1 && sda_i == '0) event_sda_interference_o = 1'b1;
-        if (sda_i_q != sda_i)            event_sda_unstable_o = 1'b1;
+        if (scl_i_q && !scl_i)  event_scl_interference_o = 1'b1;
+        if (sda_temp && !sda_i) event_sda_interference_o = 1'b1;
+        if (sda_i_q != sda_i)   event_sda_unstable_o = 1'b1;
       end
       // HoldBit: SCL is pulled low
       HoldBit : begin
         host_idle_o = 1'b0;
         sda_temp = fmt_byte_i[bit_index];
         scl_temp = 1'b0;
-        if (sda_temp == 1'b1 && sda_i == '0) event_sda_interference_o = 1'b1;
+        if (sda_temp && !sda_i) event_sda_interference_o = 1'b1;
       end
       // ClockLowAck: SCL and SDA are pulled low
       ClockLowAck : begin

ParseResult:
UPD HdlStmProcess@@ to 
    INS HdlStmProcessTriggerConstrain@@COMB to 

UPD HdlStmCase@@state_q to state_q
    INS HdlStmCaseType@@CASE to state_q
    INS HdlValueId@@state_q to state_q
    INS HdlStmCaseUniqConstrain@@UNIQUE to state_q
    INS tuple@@ to cases
    INS HdlValueId@@Idle to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmCase@@state_q to state_q
    UPD HdlStmBlock@@SEQ to SEQ
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: host_idle_o
                HdlValueInt: 1
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: sda_temp
                HdlValueInt: 1
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: scl_temp
                HdlValueInt: 1
        DEL list@@body from SEQ
    DEL HdlStmCaseType@@CASE from state_q
    DEL HdlValueId@@state_q from state_q
    DEL HdlValueId@@Idle from 
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases
    DEL HdlStmCaseUniqConstrain@@UNIQUE from state_q

UPD HdlStmIf@@ to 
    UPD HdlOp@@AND_LOG to AND_LOG
        UPD HdlOp@@EQ to EQ
            MOV HdlValueId@@scl_i_q to ops
            HdlValueId: scl_i_q
            DEL HdlValueInt@@1 from ops
            DEL list@@ops from EQ
        UPD HdlOp@@EQ to NEG_LOG
        DEL HdlOp@@EQ from ops
        UPD HdlOp@@EQ to EQ
            DEL HdlValueInt@@0 from ops

UPD HdlStmIf@@ to 
    UPD HdlOp@@AND_LOG to AND_LOG
        UPD HdlOp@@EQ to EQ
            MOV HdlValueId@@sda_temp to ops
            HdlValueId: sda_temp
            DEL HdlValueInt@@1 from ops
            DEL list@@ops from EQ
        UPD HdlOp@@EQ to NEG_LOG
        DEL HdlOp@@EQ from ops
        UPD HdlOp@@EQ to EQ
            DEL HdlValueInt@@0 from ops

UPD HdlStmIf@@ to 
    UPD HdlOp@@AND_LOG to AND_LOG
        UPD HdlOp@@EQ to EQ
            MOV HdlValueId@@sda_temp to ops
            HdlValueId: sda_temp
            DEL HdlValueInt@@1 from ops
            DEL list@@ops from EQ
        UPD HdlOp@@EQ to NEG_LOG
        DEL HdlOp@@EQ from ops
        UPD HdlOp@@EQ to EQ
            DEL HdlValueInt@@0 from ops

UPD HdlStmProcess@@ to 
    DEL HdlStmProcessTriggerConstrain@@COMB from 


CommitId: d09aabf89956a6410dd40633b6d3500f1afe3674
[i2c, rtl] Fixes to Lint Errors and Warnings
--- a/hw/ip/i2c/rtl/i2c_fsm.sv
+++ b/hw/ip/i2c/rtl/i2c_fsm.sv
@@ -436,12 +433,12 @@ module i2c_fsm (
         host_idle_o = 1'b0;
         sda_temp = 1'b1;
         scl_temp = 1'b1;
-        if (sda_i == '0 && !fmt_flag_nak_ok_i) event_nak_o = 1'b1;
+        if (!sda_i && !fmt_flag_nak_ok_i) event_nak_o = 1'b1;
         if ((stretch > stretch_timeout_i) && timeout_enable_i) begin
           event_stretch_timeout_o = 1'b1;
         end
-        if (scl_i_q == 1'b1 && scl_i == '0)  event_scl_interference_o = 1'b1;
-        if (sda_i_q != sda_i)            event_sda_unstable_o = 1'b1;
+        if (scl_i_q && !scl_i)  event_scl_interference_o = 1'b1;
+        if (sda_i_q != sda_i)   event_sda_unstable_o = 1'b1;
       end
       // HoldDevAck: SCL is pulled low
       HoldDevAck : begin

ParseResult:
UPD HdlStmProcess@@ to 
    INS HdlStmProcessTriggerConstrain@@COMB to 

UPD HdlStmCase@@state_q to state_q
    INS HdlStmCaseType@@CASE to state_q
    INS HdlValueId@@state_q to state_q
    INS HdlStmCaseUniqConstrain@@UNIQUE to state_q
    INS tuple@@ to cases
    INS HdlValueId@@Idle to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmCase@@state_q to state_q
    UPD HdlStmBlock@@SEQ to SEQ
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: host_idle_o
                HdlValueInt: 1
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: sda_temp
                HdlValueInt: 1
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: scl_temp
                HdlValueInt: 1
        DEL list@@body from SEQ
    DEL HdlStmCaseType@@CASE from state_q
    DEL HdlValueId@@state_q from state_q
    DEL HdlValueId@@Idle from 
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases
    DEL HdlStmCaseUniqConstrain@@UNIQUE from state_q

UPD HdlStmIf@@ to 
    UPD HdlOp@@AND_LOG to AND_LOG
        UPD HdlOp@@EQ to NEG_LOG
        UPD HdlOp@@EQ to EQ
            DEL HdlValueInt@@0 from ops

UPD HdlStmIf@@ to 
    UPD HdlOp@@AND_LOG to AND_LOG
        UPD HdlOp@@EQ to EQ
            MOV HdlValueId@@scl_i_q to ops
            HdlValueId: scl_i_q
            DEL HdlValueInt@@1 from ops
            DEL list@@ops from EQ
        UPD HdlOp@@EQ to NEG_LOG
        DEL HdlOp@@EQ from ops
        UPD HdlOp@@EQ to EQ
            DEL HdlValueInt@@0 from ops

UPD HdlStmProcess@@ to 
    DEL HdlStmProcessTriggerConstrain@@COMB from 


CommitId: d09aabf89956a6410dd40633b6d3500f1afe3674
[i2c, rtl] Fixes to Lint Errors and Warnings
--- a/hw/ip/i2c/rtl/i2c_fsm.sv
+++ b/hw/ip/i2c/rtl/i2c_fsm.sv
@@ -467,8 +464,8 @@ module i2c_fsm (
         if ((stretch > stretch_timeout_i) && timeout_enable_i) begin
           event_stretch_timeout_o = 1'b1;
         end
-        if (scl_i_q == 1'b1 && scl_i == '0)  event_scl_interference_o = 1'b1;
-        if (sda_i_q != sda_i)            event_sda_unstable_o = 1'b1;
+        if (scl_i_q && !scl_i)  event_scl_interference_o = 1'b1;
+        if (sda_i_q != sda_i)   event_sda_unstable_o = 1'b1;
       end
       // ReadHoldBit: SCL is pulled low
       ReadHoldBit : begin

ParseResult:
UPD HdlStmProcess@@ to 
    INS HdlStmProcessTriggerConstrain@@COMB to 

UPD HdlStmCase@@state_q to state_q
    INS HdlStmCaseType@@CASE to state_q
    INS HdlValueId@@state_q to state_q
    INS HdlStmCaseUniqConstrain@@UNIQUE to state_q
    INS tuple@@ to cases
    INS HdlValueId@@Idle to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmCase@@state_q to state_q
    UPD HdlStmBlock@@SEQ to SEQ
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: host_idle_o
                HdlValueInt: 1
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: sda_temp
                HdlValueInt: 1
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: scl_temp
                HdlValueInt: 1
        DEL list@@body from SEQ
    DEL HdlStmCaseType@@CASE from state_q
    DEL HdlValueId@@state_q from state_q
    DEL HdlValueId@@Idle from 
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases
    DEL HdlStmCaseUniqConstrain@@UNIQUE from state_q

UPD HdlStmIf@@ to 
    UPD HdlOp@@AND_LOG to AND_LOG
        UPD HdlOp@@EQ to EQ
            MOV HdlValueId@@scl_i_q to ops
            HdlValueId: scl_i_q
            DEL HdlValueInt@@1 from ops
            DEL list@@ops from EQ
        UPD HdlOp@@EQ to NEG_LOG
        DEL HdlOp@@EQ from ops
        UPD HdlOp@@EQ to EQ
            DEL HdlValueInt@@0 from ops

UPD HdlStmProcess@@ to 
    DEL HdlStmProcessTriggerConstrain@@COMB from 


CommitId: d09aabf89956a6410dd40633b6d3500f1afe3674
[i2c, rtl] Fixes to Lint Errors and Warnings
--- a/hw/ip/i2c/rtl/i2c_fsm.sv
+++ b/hw/ip/i2c/rtl/i2c_fsm.sv
@@ -492,7 +489,7 @@ module i2c_fsm (
         else if (byte_index == 9'd1) sda_temp = 1'b1;
         else sda_temp = 1'b0;
         scl_temp = 1'b0;
-        if (sda_temp == 1'b1 && sda_i == '0) event_sda_interference_o = 1'b1;
+        if (sda_temp && !sda_i) event_sda_interference_o = 1'b1;
       end
       // HostClockPulseAck: SCL is released
       HostClockPulseAck : begin

ParseResult:
UPD HdlStmProcess@@ to 
    INS HdlStmProcessTriggerConstrain@@COMB to 

UPD HdlStmCase@@state_q to state_q
    INS HdlStmCaseType@@CASE to state_q
    INS HdlValueId@@state_q to state_q
    INS HdlStmCaseUniqConstrain@@UNIQUE to state_q
    INS tuple@@ to cases
    INS HdlValueId@@Idle to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmCase@@state_q to state_q
    UPD HdlStmBlock@@SEQ to SEQ
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: host_idle_o
                HdlValueInt: 1
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: sda_temp
                HdlValueInt: 1
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: scl_temp
                HdlValueInt: 1
        DEL list@@body from SEQ
    DEL HdlStmCaseType@@CASE from state_q
    DEL HdlValueId@@state_q from state_q
    DEL HdlValueId@@Idle from 
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases
    DEL HdlStmCaseUniqConstrain@@UNIQUE from state_q

UPD HdlStmIf@@ to 
    UPD HdlOp@@AND_LOG to AND_LOG
        UPD HdlOp@@EQ to EQ
            MOV HdlValueId@@sda_temp to ops
            HdlValueId: sda_temp
            DEL HdlValueInt@@1 from ops
            DEL list@@ops from EQ
        UPD HdlOp@@EQ to NEG_LOG
        DEL HdlOp@@EQ from ops
        UPD HdlOp@@EQ to EQ
            DEL HdlValueInt@@0 from ops

UPD HdlStmProcess@@ to 
    DEL HdlStmProcessTriggerConstrain@@COMB from 


CommitId: d09aabf89956a6410dd40633b6d3500f1afe3674
[i2c, rtl] Fixes to Lint Errors and Warnings
--- a/hw/ip/i2c/rtl/i2c_fsm.sv
+++ b/hw/ip/i2c/rtl/i2c_fsm.sv
@@ -504,9 +501,9 @@ module i2c_fsm (
         if ((stretch > stretch_timeout_i) && timeout_enable_i) begin
           event_stretch_timeout_o = 1'b1;
         end
-        if (scl_i_q == 1'b1 && scl_i == '0)  event_scl_interference_o = 1'b1;
-        if (sda_temp == 1'b1 && sda_i == '0) event_sda_interference_o = 1'b1;
-        if (sda_i_q != sda_i)            event_sda_unstable_o = 1'b1;
+        if (scl_i_q && !scl_i)  event_scl_interference_o = 1'b1;
+        if (sda_temp && !sda_i) event_sda_interference_o = 1'b1;
+        if (sda_i_q != sda_i)   event_sda_unstable_o = 1'b1;
       end
       // HostHoldBitAck: SCL is pulled low
       HostHoldBitAck : begin

ParseResult:
UPD HdlStmProcess@@ to 
    INS HdlStmProcessTriggerConstrain@@COMB to 

UPD HdlStmCase@@state_q to state_q
    INS HdlStmCaseType@@CASE to state_q
    INS HdlValueId@@state_q to state_q
    INS HdlStmCaseUniqConstrain@@UNIQUE to state_q
    INS tuple@@ to cases
    INS HdlValueId@@Idle to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmCase@@state_q to state_q
    UPD HdlStmBlock@@SEQ to SEQ
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: host_idle_o
                HdlValueInt: 1
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: sda_temp
                HdlValueInt: 1
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: scl_temp
                HdlValueInt: 1
        DEL list@@body from SEQ
    DEL HdlStmCaseType@@CASE from state_q
    DEL HdlValueId@@state_q from state_q
    DEL HdlValueId@@Idle from 
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases
    DEL HdlStmCaseUniqConstrain@@UNIQUE from state_q

UPD HdlStmIf@@ to 
    UPD HdlOp@@AND_LOG to AND_LOG
        UPD HdlOp@@EQ to EQ
            MOV HdlValueId@@scl_i_q to ops
            HdlValueId: scl_i_q
            DEL HdlValueInt@@1 from ops
            DEL list@@ops from EQ
        UPD HdlOp@@EQ to NEG_LOG
        DEL HdlOp@@EQ from ops
        UPD HdlOp@@EQ to EQ
            DEL HdlValueInt@@0 from ops

UPD HdlStmIf@@ to 
    UPD HdlOp@@AND_LOG to AND_LOG
        UPD HdlOp@@EQ to EQ
            MOV HdlValueId@@sda_temp to ops
            HdlValueId: sda_temp
            DEL HdlValueInt@@1 from ops
            DEL list@@ops from EQ
        UPD HdlOp@@EQ to NEG_LOG
        DEL HdlOp@@EQ from ops
        UPD HdlOp@@EQ to EQ
            DEL HdlValueInt@@0 from ops

UPD HdlStmProcess@@ to 
    DEL HdlStmProcessTriggerConstrain@@COMB from 


CommitId: d09aabf89956a6410dd40633b6d3500f1afe3674
[i2c, rtl] Fixes to Lint Errors and Warnings
--- a/hw/ip/i2c/rtl/i2c_fsm.sv
+++ b/hw/ip/i2c/rtl/i2c_fsm.sv
@@ -515,7 +512,7 @@ module i2c_fsm (
         else if (byte_index == 9'd1) sda_temp = 1'b1;
         else sda_temp = 1'b0;
         scl_temp = 1'b0;
-        if (sda_temp == 1'b1 && sda_i == '0) event_sda_interference_o = 1'b1;
+        if (sda_temp && !sda_i) event_sda_interference_o = 1'b1;
       end
       // ClockStop: SCL is pulled low, SDA stays low
       ClockStop : begin

ParseResult:
UPD HdlStmProcess@@ to 
    INS HdlStmProcessTriggerConstrain@@COMB to 

UPD HdlStmCase@@state_q to state_q
    INS HdlStmCaseType@@CASE to state_q
    INS HdlValueId@@state_q to state_q
    INS HdlStmCaseUniqConstrain@@UNIQUE to state_q
    INS tuple@@ to cases
    INS HdlValueId@@Idle to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmCase@@state_q to state_q
    UPD HdlStmBlock@@SEQ to SEQ
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: host_idle_o
                HdlValueInt: 1
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: sda_temp
                HdlValueInt: 1
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: scl_temp
                HdlValueInt: 1
        DEL list@@body from SEQ
    DEL HdlStmCaseType@@CASE from state_q
    DEL HdlValueId@@state_q from state_q
    DEL HdlValueId@@Idle from 
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases
    DEL HdlStmCaseUniqConstrain@@UNIQUE from state_q

UPD HdlStmIf@@ to 
    UPD HdlOp@@AND_LOG to AND_LOG
        UPD HdlOp@@EQ to EQ
            MOV HdlValueId@@sda_temp to ops
            HdlValueId: sda_temp
            DEL HdlValueInt@@1 from ops
            DEL list@@ops from EQ
        UPD HdlOp@@EQ to NEG_LOG
        DEL HdlOp@@EQ from ops
        UPD HdlOp@@EQ to EQ
            DEL HdlValueInt@@0 from ops

UPD HdlStmProcess@@ to 
    DEL HdlStmProcessTriggerConstrain@@COMB from 


CommitId: d09aabf89956a6410dd40633b6d3500f1afe3674
[i2c, rtl] Fixes to Lint Errors and Warnings
--- a/hw/ip/i2c/rtl/i2c_fsm.sv
+++ b/hw/ip/i2c/rtl/i2c_fsm.sv
@@ -534,7 +531,7 @@ module i2c_fsm (
         host_idle_o = 1'b0;
         sda_temp = 1'b1;
         scl_temp = 1'b1;
-        if (sda_i == '0) event_sda_interference_o = 1'b1;
+        if (!sda_i) event_sda_interference_o = 1'b1;
         event_trans_complete_o = 1'b1;
       end
       // Active: continue while keeping SCL low
ParseResult:
UPD HdlStmProcess@@ to 
    INS HdlStmProcessTriggerConstrain@@COMB to 

UPD HdlStmCase@@state_q to state_q
    INS HdlStmCaseType@@CASE to state_q
    INS HdlValueId@@state_q to state_q
    INS HdlStmCaseUniqConstrain@@UNIQUE to state_q
    INS tuple@@ to cases
    INS HdlValueId@@Idle to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmCase@@state_q to state_q
    UPD HdlStmBlock@@SEQ to SEQ
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: host_idle_o
                HdlValueInt: 1
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: sda_temp
                HdlValueInt: 1
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: scl_temp
                HdlValueInt: 1
        DEL list@@body from SEQ
    DEL HdlStmCaseType@@CASE from state_q
    DEL HdlValueId@@state_q from state_q
    DEL HdlValueId@@Idle from 
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases
    DEL HdlStmCaseUniqConstrain@@UNIQUE from state_q

UPD HdlStmIf@@ to 
    UPD HdlOp@@EQ to NEG_LOG
    UPD HdlOp@@EQ to EQ
        DEL HdlValueInt@@0 from ops

UPD HdlStmProcess@@ to 
    DEL HdlStmProcessTriggerConstrain@@COMB from 


CommitId: fe45898ec77ecd5ab7ad7a883c4184a165bc5dbc
[csrng/rtl] fix assentlint errors
--- a/hw/ip/csrng/rtl/csrng_core.sv
+++ b/hw/ip/csrng/rtl/csrng_core.sv
@@ -1117,15 +1117,14 @@ module csrng_core import csrng_pkg::*; #(
   assign hw2reg.hw_exc_sts.de = cs_enable;
   assign hw2reg.hw_exc_sts.d  = hw_exception_sts;
 
+  // TODO: add depths or remove
   assign hw2reg.sum_sts.fifo_depth_sts.de = cs_enable;
   assign hw2reg.sum_sts.fifo_depth_sts.d  =
          (fifo_sel == 4'h0) ? 24'b0 :
          24'b0;
 
-
   assign hw2reg.sum_sts.diag.de = !cs_enable;
   assign hw2reg.sum_sts.diag.d  =
-         1'b0                    &&
          (reg2hw.regen.q)        && // not used
          (|reg2hw.genbits.q);       // not used
 
ParseResult:
UPD HdlStmAssign@@ to 
    UPD HdlOp@@AND_LOG to AND_LOG
        MOV HdlOp@@AND_LOG to ops
        HdlOp: AND_LOG
            list: ops
                HdlValueInt: 0
                HdlOp: DOT
                    list: ops
                        HdlOp: DOT
                            list: ops
                                HdlValueId: reg2hw
                                HdlValueId: regen
                        HdlValueId: q
        MOV HdlOp@@OR_UNARY to ops
        HdlOp: OR_UNARY
            list: ops
                HdlOp: DOT
                    list: ops
                        HdlOp: DOT
                            list: ops
                                HdlValueId: reg2hw
                                HdlValueId: genbits
                        HdlValueId: q
        UPD HdlOp@@AND_LOG to AND_LOG
            DEL HdlValueInt@@0 from ops
        DEL list@@ops from AND_LOG
    DEL HdlOp@@AND_LOG from 


CommitId: 23e0f3f05410596a3c31c13c2c27505c5971f4ee
[i2c, rtl] Fixes to Lint Errors and Changes to Clock Stretching by Target
--- a/hw/ip/i2c/rtl/i2c_fsm.sv
+++ b/hw/ip/i2c/rtl/i2c_fsm.sv
@@ -55,18 +55,20 @@ module i2c_fsm (
   input [15:0] t_buf_i,    // bus free time between STOP and START in clock units
   input [30:0] stretch_timeout_i,  // max time target may stretch the clock
   input        timeout_enable_i,   // assert if target stretches clock past max
-  input        stretch_en_addr_i,  // enable target stretching clock after address matching
-  input        stretch_en_tx_i,    // enable target stretching clock after transmit transaction
-  input        stretch_en_acq_i,   // enable target stretching clock after acquire transaction
-  input        stretch_stop_i,     // stop stretching clock and resume normal operation
   input [31:0] host_timeout_i,     // max time target waits for host to pull clock down
 
+  input        stretch_en_addr_tx_i,  // target stretches clock after address matching for transmit
+  input        stretch_en_addr_acq_i, // target stretches clock after address matching for acquire
+  input        stretch_stop_tx_i,     // stop stretching clock for transmit, resume normal operation
+  input        stretch_stop_acq_i,    // stop stretching clock for acquire, resume normal operation
+
   input logic [6:0] target_address0_i,
   input logic [6:0] target_mask0_i,
   input logic [6:0] target_address1_i,
   input logic [6:0] target_mask1_i,
 
-  output logic stretch_stop_clr_o,       // hardware to deassert stretch_stop bit
+  output logic stretch_stop_tx_clr_o,    // hardware to deassert stretch_stop_tx bit
+  output logic stretch_stop_acq_clr_o,   // hardware to deassert stretch_stop_acq bit
 
   output logic event_nak_o,              // target didn't Ack when expected
   output logic event_scl_interference_o, // other device forcing SCL low

ParseResult:
MOV HdlIdDef@@host_timeout_i to ports
HdlIdDef: host_timeout_i
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: wire
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 31
                    HdlValueInt: 0
    HdlDirection: IN

UPD HdlIdDef@@stretch_en_tx_i to stretch_en_addr_tx_i

UPD HdlIdDef@@stretch_en_acq_i to stretch_en_addr_acq_i

UPD HdlIdDef@@stretch_stop_i to stretch_stop_tx_i

INS HdlIdDef@@stretch_stop_acq_i to ports
HdlIdDef: stretch_stop_acq_i
    HdlValueId: wire
    HdlDirection: IN

INS HdlIdDef@@stretch_stop_tx_clr_o to ports
HdlIdDef: stretch_stop_tx_clr_o
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: OUT

UPD HdlIdDef@@stretch_stop_clr_o to stretch_stop_acq_clr_o

DEL HdlIdDef@@stretch_en_addr_i from ports
HdlIdDef: stretch_en_addr_i
    HdlValueId: wire
    HdlDirection: IN


CommitId: 23e0f3f05410596a3c31c13c2c27505c5971f4ee
[i2c, rtl] Fixes to Lint Errors and Changes to Clock Stretching by Target
--- a/hw/ip/i2c/rtl/i2c_fsm.sv
+++ b/hw/ip/i2c/rtl/i2c_fsm.sv
@@ -117,8 +119,10 @@ module i2c_fsm (
   logic [7:0]  input_byte;    // register for reads from host
   logic        input_byte_clr;// clear input_byte contents
   logic [31:0] scl_high_cnt;  // counter for continuously released scl_i
-  logic        addr_stop;     // indicates stretch_stop and stretch_en_addr are both asserted
-  logic        stretch_stop_clr;
+  logic        addr_stop_tx;  // indicates stretch_stop_tx and stretch_en_addr_tx are asserted
+  logic        addr_stop_acq; // indicates stretch_stop_acq and stretch_en_addr_acq are asserted
+  logic        stretch_stop_tx_clr;
+  logic        stretch_stop_acq_clr;
 
   // Target bit counter variables
   logic [3:0]  bit_idx;       // bit index including ack/nack

ParseResult:
INS HdlIdDef@@addr_stop_tx to objs
HdlIdDef: addr_stop_tx
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

INS HdlIdDef@@addr_stop_acq to objs
HdlIdDef: addr_stop_acq
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

UPD HdlIdDef@@addr_stop to stretch_stop_tx_clr

UPD HdlIdDef@@stretch_stop_clr to stretch_stop_acq_clr


CommitId: 23e0f3f05410596a3c31c13c2c27505c5971f4ee
[i2c, rtl] Fixes to Lint Errors and Changes to Clock Stretching by Target
--- a/hw/ip/i2c/rtl/i2c_fsm.sv
+++ b/hw/ip/i2c/rtl/i2c_fsm.sv
@@ -323,16 +327,27 @@ module i2c_fsm (
     end
   end
 
-  // Deasserting stretch_stop bit after the first target address match
-  always_ff @ (posedge clk_i or negedge rst_ni) begin : stretch_addr_sp
+  // Deasserting stretch_stop_tx bit after the first target address match for transmit
+  always_ff @ (posedge clk_i or negedge rst_ni) begin : stretch_addr_sp_tx
+    if (!rst_ni) begin
+      stretch_stop_tx_clr <= 1'b0;
+    end else if (addr_stop_tx) begin
+      stretch_stop_tx_clr <= 1'b1;
+    end
+  end
+
+  assign stretch_stop_tx_clr_o = stretch_stop_tx_clr;
+
+  // Deasserting stretch_stop_acq bit after the first target address match for acquire
+  always_ff @ (posedge clk_i or negedge rst_ni) begin : stretch_addr_sp_acq
     if (!rst_ni) begin
-      stretch_stop_clr <= 1'b0;
-    end else if (addr_stop) begin
-      stretch_stop_clr <= 1'b1;
+      stretch_stop_acq_clr <= 1'b0;
+    end else if (addr_stop_acq) begin
+      stretch_stop_acq_clr <= 1'b1;
     end
   end
 
-  assign stretch_stop_clr_o = stretch_stop_clr;
+  assign stretch_stop_acq_clr_o = stretch_stop_acq_clr;
 
   // State definitions
   typedef enum logic [5:0] {

ParseResult:
INS HdlStmProcess@@ to objs
HdlStmProcess
    list: sensitivity
        HdlOp: RISING
            list: ops
                HdlValueId: clk_i
        HdlOp: FALLING
            list: ops
                HdlValueId: rst_ni
    HdlStmBlock: SEQ
        list: body
            HdlStmIf
                HdlOp: NEG_LOG
                    list: ops
                        HdlValueId: rst_ni
                HdlStmBlock: SEQ
                    list: body
                        HdlStmAssign
                            HdlValueInt: 0
                            HdlValueId: stretch_stop_tx_clr
                list: elifs
                    tuple
                        HdlValueId: addr_stop_tx
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmAssign
                                    HdlValueInt: 1
                                    HdlValueId: stretch_stop_tx_clr
    HdlStmProcessTriggerConstrain: FF

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlValueId: stretch_stop_tx_clr
    HdlValueId: stretch_stop_tx_clr_o

INS HdlStmProcess@@ to objs

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlValueId: stretch_stop_acq_clr
    HdlValueId: stretch_stop_acq_clr_o

UPD HdlStmProcess@@ to 
    MOV list@@sensitivity to 
    list: sensitivity
        HdlOp: RISING
            list: ops
                HdlValueId: clk_i
        HdlOp: FALLING
            list: ops
                HdlValueId: rst_ni
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL HdlStmProcessTriggerConstrain@@FF from 

INS HdlStmIf@@ to body

UPD HdlStmIf@@ to 
    MOV HdlOp@@NEG_LOG to 
    HdlOp: NEG_LOG
        list: ops
            HdlValueId: rst_ni
    DEL HdlStmBlock@@SEQ from 
    HdlStmBlock: SEQ
        list: body
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: stretch_stop_clr
    DEL list@@elifs from 
    list: elifs
        tuple
            HdlValueId: addr_stop
            HdlStmBlock: SEQ
                list: body
                    HdlStmAssign
                        HdlValueInt: 1
                        HdlValueId: stretch_stop_clr

DEL HdlStmIf@@ from body

DEL HdlStmProcess@@ from objs

DEL HdlStmAssign@@ from objs
HdlStmAssign
    HdlValueId: stretch_stop_clr
    HdlValueId: stretch_stop_clr_o


CommitId: 23e0f3f05410596a3c31c13c2c27505c5971f4ee
[i2c, rtl] Fixes to Lint Errors and Changes to Clock Stretching by Target
--- a/hw/ip/i2c/rtl/i2c_fsm.sv
+++ b/hw/ip/i2c/rtl/i2c_fsm.sv
@@ -345,8 +360,8 @@ module i2c_fsm (
         AcquireStart, AddrRead, AddrAckWait, AddrAckSetup, AddrAckPulse, AddrAckHold,
         TransmitWait, TransmitSetup, TransmitPulse, TransmitHold, TransmitAck,
         AcquireByte, AcquireAckWait, AcquireAckSetup, AcquireAckPulse, AcquireAckHold,
-        PopTxFifo, AcquireSrP, StretchTxEmpty, StretchAcqFull, StretchAddr,
-        StretchAcquire, StretchTransmit, StretchTransmitWait
+        PopTxFifo, AcquireSrP, StretchTxEmpty, StretchAcqFull, StretchAddrTransmit,
+        StretchAddrAcquire
   } state_e;
 
   state_e state_q, state_d;

ParseResult:
UPD HdlStmProcess@@ to 
    INS HdlStmBlock@@SEQ to 
    INS HdlStmProcessTriggerConstrain@@FF to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmIf@@ to 
    INS HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: stretch_stop_acq_clr
    INS list@@elifs to 
    list: elifs
        tuple
            HdlValueId: addr_stop_acq
            HdlStmBlock: SEQ
                list: body
                    HdlStmAssign
                        HdlValueInt: 1
                        HdlValueId: stretch_stop_acq_clr


CommitId: 23e0f3f05410596a3c31c13c2c27505c5971f4ee
[i2c, rtl] Fixes to Lint Errors and Changes to Clock Stretching by Target
--- a/hw/ip/i2c/rtl/i2c_fsm.sv
+++ b/hw/ip/i2c/rtl/i2c_fsm.sv
@@ -658,22 +673,13 @@ module i2c_fsm (
         acq_fifo_wvalid_o = 1'b1;
         if (tx_fifo_depth_i != '0) event_tx_nonempty_o = 1'b1;
       end
-      // StretchAddr: target stretches the clock after matching an address
-      StretchAddr : begin
+      // StretchAddrTransmit: target stretches the clock after matching an address for transmit
+      StretchAddrTransmit : begin
         target_idle_o = 1'b0;
         scl_temp = 1'b0;
       end
-      // StretchAcquire: target stretches the clock after acquiring a byte
-      StretchAcquire : begin
-        target_idle_o = 1'b0;
-        scl_temp = 1'b0;
-      end
-      // StretchTransmitWait: target waits for host to pull SCL low before stretching the clock
-      StretchTransmitWait : begin
-        target_idle_o = 1'b0;
-      end
-      // StretchTransmit: target stretches the clock after transmitting a byte
-      StretchTransmit : begin
+      // StretchAddrAcquire: target stretches the clock after matching an address for acquire
+      StretchAddrAcquire : begin
         target_idle_o = 1'b0;
         scl_temp = 1'b0;
       end

ParseResult:
UPD HdlStmProcess@@ to 
    INS HdlStmProcessTriggerConstrain@@COMB to 

UPD HdlStmCase@@state_q to state_q
    INS HdlStmCaseType@@CASE to state_q
    INS HdlValueId@@state_q to state_q
    INS HdlStmCaseUniqConstrain@@UNIQUE to state_q

UPD HdlStmCase@@state_q to state_q
    UPD HdlValueId@@StretchAcquire to StretchAddrTransmit
    UPD HdlValueId@@StretchTransmit to StretchAddrAcquire
    DEL HdlStmCaseType@@CASE from state_q
    DEL HdlValueId@@state_q from state_q
    DEL tuple@@ from cases
    tuple
        HdlValueId: StretchAddr
        HdlStmBlock: SEQ
            list: body
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: target_idle_o
                        HdlValueInt: 0
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: scl_temp
                        HdlValueInt: 0
    DEL tuple@@ from cases
    tuple
        HdlValueId: StretchTransmitWait
        HdlStmBlock: SEQ
            list: body
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: target_idle_o
                        HdlValueInt: 0
    DEL HdlStmCaseUniqConstrain@@UNIQUE from state_q

UPD HdlStmProcess@@ to 
    DEL HdlStmProcessTriggerConstrain@@COMB from 


CommitId: 23e0f3f05410596a3c31c13c2c27505c5971f4ee
[i2c, rtl] Fixes to Lint Errors and Changes to Clock Stretching by Target
--- a/hw/ip/i2c/rtl/i2c_fsm.sv
+++ b/hw/ip/i2c/rtl/i2c_fsm.sv
@@ -729,7 +735,8 @@ module i2c_fsm (
     log_stop = 1'b0;
     restart = 1'b0;
     input_byte_clr = 1'b0;
-    addr_stop = 1'b0;
+    addr_stop_tx = 1'b0;
+    addr_stop_acq = 1'b0;
 
     unique case (state_q)
       // Idle: initial state, SDA and SCL are released (high)

ParseResult:
UPD HdlStmProcess@@ to 
    INS HdlStmProcessTriggerConstrain@@COMB to 

UPD HdlStmProcess@@ to 
    INS HdlStmProcessTriggerConstrain@@COMB to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: addr_stop_tx
                HdlValueInt: 0
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: addr_stop_acq
                HdlValueInt: 0

UPD HdlStmCase@@state_q to state_q
    INS HdlStmCaseType@@CASE to state_q
    INS HdlValueId@@state_q to state_q
    INS HdlStmCaseUniqConstrain@@UNIQUE to state_q

UPD HdlStmCase@@state_q to state_q
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@addr_stop to addr_stop_tx
    DEL HdlStmCaseType@@CASE from state_q
    DEL HdlValueId@@state_q from state_q
    DEL HdlValueId@@StretchAddr from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases
    DEL tuple@@ from cases
    tuple
        HdlValueId: StretchAcquire
        HdlStmBlock: SEQ
            list: body
                HdlStmIf
                    HdlOp: NEG_LOG
                        list: ops
                            HdlValueId: stretch_stop_i
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: state_d
                            HdlValueId: StretchAcquire
                    list: elifs
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: state_d
                            HdlValueId: AcquireAckSetup
    DEL tuple@@ from cases
    tuple
        HdlValueId: StretchTransmitWait
        HdlStmBlock: SEQ
            list: body
                HdlStmIf
                    HdlOp: NEG_LOG
                        list: ops
                            HdlValueId: scl_i
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: state_d
                            HdlValueId: StretchTransmit
                    list: elifs
    DEL tuple@@ from cases
    tuple
        HdlValueId: StretchTransmit
        HdlStmBlock: SEQ
            list: body
                HdlStmIf
                    HdlOp: NEG_LOG
                        list: ops
                            HdlValueId: stretch_stop_i
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: state_d
                            HdlValueId: StretchTransmit
                    list: elifs
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: state_d
                            HdlValueId: PopTxFifo
    DEL HdlStmCaseUniqConstrain@@UNIQUE from state_q

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: addr_stop
                HdlValueInt: 0
    DEL HdlStmProcessTriggerConstrain@@COMB from 


CommitId: 23e0f3f05410596a3c31c13c2c27505c5971f4ee
[i2c, rtl] Fixes to Lint Errors and Changes to Clock Stretching by Target
--- a/hw/ip/i2c/rtl/i2c_fsm.sv
+++ b/hw/ip/i2c/rtl/i2c_fsm.sv
@@ -1026,11 +1033,19 @@ module i2c_fsm (
       AddrAckWait : begin
         if (tcount_q == 20'd1) begin
           if (!scl_i) begin
-            if (stretch_en_addr_i && !stretch_stop_i) state_d = StretchAddr;
-            else if (stretch_en_addr_i && stretch_stop_i) begin
-              state_d = AddrAckSetup;
-              addr_stop = 1'b1;
-            end else state_d = AddrAckSetup;
+            if (rw_bit) begin
+              if (stretch_en_addr_tx_i && !stretch_stop_tx_i) state_d = StretchAddrTransmit;
+              else if (stretch_en_addr_tx_i && stretch_stop_tx_i) begin
+                state_d = AddrAckSetup;
+                addr_stop_tx = 1'b1;
+              end else state_d = AddrAckSetup;
+            end else begin
+              if (stretch_en_addr_acq_i && !stretch_stop_acq_i) state_d = StretchAddrAcquire;
+              else if (stretch_en_addr_acq_i && stretch_stop_acq_i) begin
+                state_d = AddrAckSetup;
+                addr_stop_acq = 1'b1;
+              end else state_d = AddrAckSetup;
+            end
           end
         end
       end

ParseResult:
UPD HdlStmProcess@@ to 
    INS HdlStmProcessTriggerConstrain@@COMB to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: addr_stop_tx
                HdlValueInt: 0
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: addr_stop_acq
                HdlValueInt: 0

UPD HdlStmCase@@state_q to state_q
    INS HdlStmCaseType@@CASE to state_q
    INS HdlValueId@@state_q to state_q
    INS HdlStmCaseUniqConstrain@@UNIQUE to state_q
    INS tuple@@ to cases
    INS tuple@@ to cases
    tuple
        HdlValueId: StretchAddrAcquire
        HdlStmBlock: SEQ
            list: body
                HdlStmIf
                    HdlOp: NEG_LOG
                        list: ops
                            HdlValueId: stretch_stop_acq_i
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: state_d
                            HdlValueId: StretchAddrAcquire
                    list: elifs
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: state_d
                            HdlValueId: AddrAckSetup
    INS HdlValueId@@StretchAddrTransmit to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: addr_stop_acq
                HdlValueInt: 0
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmCase@@state_q to state_q
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@addr_stop to addr_stop_tx
    DEL HdlStmCaseType@@CASE from state_q
    DEL HdlValueId@@state_q from state_q
    DEL HdlValueId@@StretchAddr from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases
    DEL tuple@@ from cases
    tuple
        HdlValueId: StretchAcquire
        HdlStmBlock: SEQ
            list: body
                HdlStmIf
                    HdlOp: NEG_LOG
                        list: ops
                            HdlValueId: stretch_stop_i
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: state_d
                            HdlValueId: StretchAcquire
                    list: elifs
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: state_d
                            HdlValueId: AcquireAckSetup
    DEL tuple@@ from cases
    tuple
        HdlValueId: StretchTransmitWait
        HdlStmBlock: SEQ
            list: body
                HdlStmIf
                    HdlOp: NEG_LOG
                        list: ops
                            HdlValueId: scl_i
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: state_d
                            HdlValueId: StretchTransmit
                    list: elifs
    DEL tuple@@ from cases
    tuple
        HdlValueId: StretchTransmit
        HdlStmBlock: SEQ
            list: body
                HdlStmIf
                    HdlOp: NEG_LOG
                        list: ops
                            HdlValueId: stretch_stop_i
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: state_d
                            HdlValueId: StretchTransmit
                    list: elifs
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: state_d
                            HdlValueId: PopTxFifo
    DEL HdlStmCaseUniqConstrain@@UNIQUE from state_q

INS HdlStmIf@@ to body

UPD HdlStmIf@@ to 
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlStmIf
                HdlOp: AND_LOG
                    list: ops
                        HdlValueId: stretch_en_addr_i
                        HdlOp: NEG_LOG
                            list: ops
                                HdlValueId: stretch_stop_i
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: state_d
                        HdlValueId: StretchAddr
                list: elifs
                    tuple
                        HdlOp: AND_LOG
                            list: ops
                                HdlValueId: stretch_en_addr_i
                                HdlValueId: stretch_stop_i
                        HdlStmBlock: SEQ
                            list: body
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: state_d
                                        HdlValueId: AddrAckSetup
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: addr_stop
                                        HdlValueInt: 1
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: state_d
                        HdlValueId: AddrAckSetup
    MOV list@@elifs to 
    list: elifs

UPD HdlStmIf@@ to 
    UPD HdlOp@@AND_LOG to AND_LOG
        UPD HdlValueId@@stretch_en_addr_i to stretch_en_addr_tx_i
        UPD HdlOp@@NEG_LOG to NEG_LOG
            UPD HdlValueId@@stretch_stop_i to stretch_stop_tx_i
    UPD HdlOp@@ASSIGN to ASSIGN
        UPD HdlValueId@@StretchAddr to StretchAddrTransmit
    UPD HdlOp@@AND_LOG to AND_LOG
        UPD HdlValueId@@stretch_en_addr_i to stretch_en_addr_tx_i
        UPD HdlValueId@@stretch_stop_i to stretch_stop_tx_i
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@addr_stop to addr_stop_tx

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: addr_stop
                HdlValueInt: 0
    DEL HdlStmProcessTriggerConstrain@@COMB from 


CommitId: 23e0f3f05410596a3c31c13c2c27505c5971f4ee
[i2c, rtl] Fixes to Lint Errors and Changes to Clock Stretching by Target
--- a/hw/ip/i2c/rtl/i2c_fsm.sv
+++ b/hw/ip/i2c/rtl/i2c_fsm.sv
@@ -1096,8 +1111,7 @@ module i2c_fsm (
       TransmitAck : begin
         if (scl_i) begin
           if (host_ack) begin
-            if (stretch_en_tx_i) state_d = StretchTransmitWait;
-            else state_d = PopTxFifo;
+            state_d = PopTxFifo;
           end else begin
             if (start_det || stop_det) state_d = AcquireSrP;
           end

ParseResult:
UPD HdlStmProcess@@ to 
    INS HdlStmProcessTriggerConstrain@@COMB to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: addr_stop_tx
                HdlValueInt: 0
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: addr_stop_acq
                HdlValueInt: 0

UPD HdlStmCase@@state_q to state_q
    INS HdlStmCaseType@@CASE to state_q
    INS HdlValueId@@state_q to state_q
    INS HdlStmCaseUniqConstrain@@UNIQUE to state_q
    INS tuple@@ to cases
    INS tuple@@ to cases
    tuple
        HdlValueId: StretchAddrAcquire
        HdlStmBlock: SEQ
            list: body
                HdlStmIf
                    HdlOp: NEG_LOG
                        list: ops
                            HdlValueId: stretch_stop_acq_i
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: state_d
                            HdlValueId: StretchAddrAcquire
                    list: elifs
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: state_d
                            HdlValueId: AddrAckSetup
    INS HdlValueId@@StretchAddrTransmit to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: addr_stop_acq
                HdlValueInt: 0
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmCase@@state_q to state_q
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@addr_stop to addr_stop_tx
    DEL HdlStmCaseType@@CASE from state_q
    DEL HdlValueId@@state_q from state_q
    DEL HdlValueId@@StretchAddr from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases
    DEL tuple@@ from cases
    tuple
        HdlValueId: StretchAcquire
        HdlStmBlock: SEQ
            list: body
                HdlStmIf
                    HdlOp: NEG_LOG
                        list: ops
                            HdlValueId: stretch_stop_i
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: state_d
                            HdlValueId: StretchAcquire
                    list: elifs
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: state_d
                            HdlValueId: AcquireAckSetup
    DEL tuple@@ from cases
    tuple
        HdlValueId: StretchTransmitWait
        HdlStmBlock: SEQ
            list: body
                HdlStmIf
                    HdlOp: NEG_LOG
                        list: ops
                            HdlValueId: scl_i
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: state_d
                            HdlValueId: StretchTransmit
                    list: elifs
    DEL tuple@@ from cases
    tuple
        HdlValueId: StretchTransmit
        HdlStmBlock: SEQ
            list: body
                HdlStmIf
                    HdlOp: NEG_LOG
                        list: ops
                            HdlValueId: stretch_stop_i
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: state_d
                            HdlValueId: StretchTransmit
                    list: elifs
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: state_d
                            HdlValueId: PopTxFifo
    DEL HdlStmCaseUniqConstrain@@UNIQUE from state_q

UPD HdlStmIf@@ to 
    MOV HdlOp@@ASSIGN to 
    HdlOp: ASSIGN
        list: ops
            HdlValueId: state_d
            HdlValueId: PopTxFifo
    DEL HdlValueId@@stretch_en_tx_i from 
    DEL HdlOp@@ASSIGN from 
    HdlOp: ASSIGN
        list: ops
            HdlValueId: state_d
            HdlValueId: StretchTransmitWait
    DEL list@@elifs from 

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: addr_stop
                HdlValueInt: 0
    DEL HdlStmProcessTriggerConstrain@@COMB from 

DEL HdlStmIf@@ from body


CommitId: 23e0f3f05410596a3c31c13c2c27505c5971f4ee
[i2c, rtl] Fixes to Lint Errors and Changes to Clock Stretching by Target
--- a/hw/ip/i2c/rtl/i2c_fsm.sv
+++ b/hw/ip/i2c/rtl/i2c_fsm.sv
@@ -1129,10 +1143,7 @@ module i2c_fsm (
       // AcquireAckWait: pause before acknowledging
       AcquireAckWait : begin
         if (tcount_q == 20'd1) begin
-          if (!scl_i) begin
-            if (stretch_en_acq_i) state_d = StretchAcquire;
-            else state_d = AcquireAckSetup;
-          end
+          if (!scl_i) state_d = AcquireAckSetup;
         end
       end
       // AcquireAckSetup: target pulls SDA low while SCL is low

ParseResult:
UPD HdlStmProcess@@ to 
    INS HdlStmProcessTriggerConstrain@@COMB to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: addr_stop_tx
                HdlValueInt: 0
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: addr_stop_acq
                HdlValueInt: 0

UPD HdlStmCase@@state_q to state_q
    INS HdlStmCaseType@@CASE to state_q
    INS HdlValueId@@state_q to state_q
    INS HdlStmCaseUniqConstrain@@UNIQUE to state_q
    INS tuple@@ to cases
    INS tuple@@ to cases
    tuple
        HdlValueId: StretchAddrAcquire
        HdlStmBlock: SEQ
            list: body
                HdlStmIf
                    HdlOp: NEG_LOG
                        list: ops
                            HdlValueId: stretch_stop_acq_i
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: state_d
                            HdlValueId: StretchAddrAcquire
                    list: elifs
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: state_d
                            HdlValueId: AddrAckSetup
    INS HdlValueId@@StretchAddrTransmit to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: addr_stop_acq
                HdlValueInt: 0
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmCase@@state_q to state_q
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@addr_stop to addr_stop_tx
    DEL HdlStmCaseType@@CASE from state_q
    DEL HdlValueId@@state_q from state_q
    DEL HdlValueId@@StretchAddr from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases
    DEL tuple@@ from cases
    tuple
        HdlValueId: StretchAcquire
        HdlStmBlock: SEQ
            list: body
                HdlStmIf
                    HdlOp: NEG_LOG
                        list: ops
                            HdlValueId: stretch_stop_i
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: state_d
                            HdlValueId: StretchAcquire
                    list: elifs
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: state_d
                            HdlValueId: AcquireAckSetup
    DEL tuple@@ from cases
    tuple
        HdlValueId: StretchTransmitWait
        HdlStmBlock: SEQ
            list: body
                HdlStmIf
                    HdlOp: NEG_LOG
                        list: ops
                            HdlValueId: scl_i
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: state_d
                            HdlValueId: StretchTransmit
                    list: elifs
    DEL tuple@@ from cases
    tuple
        HdlValueId: StretchTransmit
        HdlStmBlock: SEQ
            list: body
                HdlStmIf
                    HdlOp: NEG_LOG
                        list: ops
                            HdlValueId: stretch_stop_i
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: state_d
                            HdlValueId: StretchTransmit
                    list: elifs
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: state_d
                            HdlValueId: PopTxFifo
    DEL HdlStmCaseUniqConstrain@@UNIQUE from state_q

UPD HdlStmIf@@ to 
    MOV HdlOp@@ASSIGN to 
    HdlOp: ASSIGN
        list: ops
            HdlValueId: state_d
            HdlValueId: AcquireAckSetup
    DEL HdlValueId@@stretch_en_acq_i from 
    DEL HdlOp@@ASSIGN from 
    HdlOp: ASSIGN
        list: ops
            HdlValueId: state_d
            HdlValueId: StretchAcquire
    DEL list@@elifs from 

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: addr_stop
                HdlValueInt: 0
    DEL HdlStmProcessTriggerConstrain@@COMB from 

DEL HdlStmIf@@ from body

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 


CommitId: 23e0f3f05410596a3c31c13c2c27505c5971f4ee
[i2c, rtl] Fixes to Lint Errors and Changes to Clock Stretching by Target
--- a/hw/ip/i2c/rtl/i2c_fsm.sv
+++ b/hw/ip/i2c/rtl/i2c_fsm.sv
@@ -1217,7 +1217,8 @@ module i2c_fsm (
         log_stop = 1'b0;
         restart = 1'b0;
         input_byte_clr = 1'b0;
-        addr_stop = 1'b0;
+        addr_stop_tx = 1'b0;
+        addr_stop_acq = 1'b0;
       end
     endcase
   end
ParseResult:
UPD HdlStmProcess@@ to 
    INS HdlStmProcessTriggerConstrain@@COMB to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: addr_stop_tx
                HdlValueInt: 0
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: addr_stop_acq
                HdlValueInt: 0

UPD HdlStmCase@@state_q to state_q
    INS HdlStmCaseType@@CASE to state_q
    INS HdlValueId@@state_q to state_q
    INS HdlStmCaseUniqConstrain@@UNIQUE to state_q
    INS tuple@@ to cases
    INS tuple@@ to cases
    tuple
        HdlValueId: StretchAddrAcquire
        HdlStmBlock: SEQ
            list: body
                HdlStmIf
                    HdlOp: NEG_LOG
                        list: ops
                            HdlValueId: stretch_stop_acq_i
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: state_d
                            HdlValueId: StretchAddrAcquire
                    list: elifs
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: state_d
                            HdlValueId: AddrAckSetup
    INS HdlValueId@@StretchAddrTransmit to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: addr_stop_acq
                HdlValueInt: 0
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmCase@@state_q to state_q
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@addr_stop to addr_stop_tx
    DEL HdlStmCaseType@@CASE from state_q
    DEL HdlValueId@@state_q from state_q
    DEL HdlValueId@@StretchAddr from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases
    DEL tuple@@ from cases
    tuple
        HdlValueId: StretchAcquire
        HdlStmBlock: SEQ
            list: body
                HdlStmIf
                    HdlOp: NEG_LOG
                        list: ops
                            HdlValueId: stretch_stop_i
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: state_d
                            HdlValueId: StretchAcquire
                    list: elifs
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: state_d
                            HdlValueId: AcquireAckSetup
    DEL tuple@@ from cases
    tuple
        HdlValueId: StretchTransmitWait
        HdlStmBlock: SEQ
            list: body
                HdlStmIf
                    HdlOp: NEG_LOG
                        list: ops
                            HdlValueId: scl_i
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: state_d
                            HdlValueId: StretchTransmit
                    list: elifs
    DEL tuple@@ from cases
    tuple
        HdlValueId: StretchTransmit
        HdlStmBlock: SEQ
            list: body
                HdlStmIf
                    HdlOp: NEG_LOG
                        list: ops
                            HdlValueId: stretch_stop_i
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: state_d
                            HdlValueId: StretchTransmit
                    list: elifs
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: state_d
                            HdlValueId: PopTxFifo
    DEL HdlStmCaseUniqConstrain@@UNIQUE from state_q

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: addr_stop
                HdlValueInt: 0
    DEL HdlStmProcessTriggerConstrain@@COMB from 


CommitId: 2681da7535ead160415065539f471b296a5672a8
[usb] Fix lint errors and warnings, remove inline lint comments
--- a/hw/ip/usb_fs_nb_pe/rtl/usb_fs_rx.sv
+++ b/hw/ip/usb_fs_nb_pe/rtl/usb_fs_rx.sv
@@ -70,11 +70,11 @@ module usb_fs_rx (
   // packet will fail the data integrity checks.
 
   logic [2:0] line_state_q, line_state_d;
-  localparam logic [2:0]  DT = 3'b100;
-  localparam logic [2:0]  DJ = 3'b010;
-  localparam logic [2:0]  DK = 3'b001;
-  localparam logic [2:0] SE0 = 3'b000;
-  localparam logic [2:0] SE1 = 3'b011;
+  localparam logic [2:0]  DT = 3'b100; // transition state
+  localparam logic [2:0]  DJ = 3'b010; // J - idle line state
+  // localparam logic [2:0]  DK = 3'b001; // K - inverse of J
+  localparam logic [2:0] SE0 = 3'b000; // single-ended 0 - end of packet or detached
+  // localparam logic [2:0] SE1 = 3'b011; // single-ended 1 - illegal
 
   // Mute the input if we're transmitting
   logic [1:0] dpair;

ParseResult:
DEL HdlIdDef@@DK from objs
HdlIdDef: DK
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 2
                    HdlValueInt: 0
    HdlValueInt: 001
    HdlDirection: INTERNAL

DEL HdlIdDef@@SE1 from objs
HdlIdDef: SE1
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 2
                    HdlValueInt: 0
    HdlValueInt: 011
    HdlDirection: INTERNAL


CommitId: eef49a584162a29737680efa7101b19c63f8fb88
Update pulp_riscv_dbg to pulp-platform/riscv-dbg@e67a0a7
--- a/hw/vendor/pulp_riscv_dbg/debug_rom/debug_rom_one_scratch.sv
+++ b/hw/vendor/pulp_riscv_dbg/debug_rom/debug_rom_one_scratch.sv
@@ -23,7 +23,8 @@ module debug_rom_one_scratch (
 
   localparam int unsigned RomSize = 13;
 
-  const logic [RomSize-1:0][63:0] mem = {
+  logic [RomSize-1:0][63:0] mem;
+  assign mem = {
     64'h00000000_7b200073,
     64'h7b202473_10802423,
     64'hf1402473_ab1ff06f,
ParseResult:
INS HdlIdDef@@mem to objs

INS HdlStmAssign@@ to objs

UPD HdlIdDef@@mem to mem
    MOV HdlOp@@INDEX to mem
    HdlOp: INDEX
        list: ops
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: logic
                    HdlOp: DOWNTO
                        list: ops
                            HdlOp: SUB
                                list: ops
                                    HdlValueId: RomSize
                                    HdlValueInt: 1
                            HdlValueInt: 0
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 63
                    HdlValueInt: 0
    MOV HdlOp@@CONCAT to mem
    HdlOp: CONCAT
        list: ops
            HdlOp: CONCAT
                list: ops
                    HdlOp: CONCAT
                        list: ops
                            HdlOp: CONCAT
                                list: ops
                                    HdlOp: CONCAT
                                        list: ops
                                            HdlOp: CONCAT
                                                list: ops
                                                    HdlOp: CONCAT
                                                        list: ops
                                                            HdlOp: CONCAT
                                                                list: ops
                                                                    HdlOp: CONCAT
                                                                        list: ops
                                                                            HdlOp: CONCAT
                                                                                list: ops
                                                                                    HdlOp: CONCAT
                                                                                        list: ops
                                                                                            HdlOp: CONCAT
                                                                                                list: ops
                                                                                                    HdlValueInt: 000000007b200073
                                                                                                    HdlValueInt: 7b20247310802423
                                                                                            HdlValueInt: f1402473ab1ff06f
                                                                                    HdlValueInt: 7b20247310002223
                                                                            HdlValueInt: 001000737b202473
                                                                    HdlValueInt: 10002623fddff06f
                                                            HdlValueInt: fc0418e300247413
                                                    HdlValueInt: 40044403f1402473
                                            HdlValueInt: 0204126300147413
                                    HdlValueInt: 4004440310802023
                            HdlValueInt: f14024737b241073
                    HdlValueInt: 0ff0000f0340006f
            HdlValueInt: 0500006f00c0006f
    DEL HdlDirection@@INTERNAL from mem

UPD HdlIdDef@@mem to mem
    INS HdlDirection@@INTERNAL to mem

UPD HdlStmAssign@@ to 
    INS HdlValueId@@mem to 

DEL HdlIdDef@@mem from objs


CommitId: 19044edfb0b9485031557705595840bea41fb33d
[prim_secded] Use _i/_o suffix for port names
--- a/hw/ip/prim/rtl/prim_secded_28_22_dec.sv
+++ b/hw/ip/prim/rtl/prim_secded_28_22_dec.sv
@@ -5,8 +5,8 @@
 // SECDED decoder generated by util/design/secded_gen.py
 
 module prim_secded_28_22_dec (
-  input        [27:0] in,
-  output logic [21:0] d_o,
+  input        [27:0] data_i,
+  output logic [21:0] data_o,
   output logic [5:0] syndrome_o,
   output logic [1:0] err_o
 );

ParseResult:
UPD HdlIdDef@@in to data_i

UPD HdlIdDef@@d_o to data_o


CommitId: ff80736b44398742c53650eefe7b2293be3093cb
[top_earlgrey/rtl] adding csrng and edn blocks
new mode 100644
index 6471592d2..bc178e263
@@ -1125,7 +1125,8 @@ module csrng_core import csrng_pkg::*; #(
 
   assign hw2reg.sum_sts.diag.de = !cs_enable;
   assign hw2reg.sum_sts.diag.d  =
-         (reg2hw.regen)          || // not used
+         1'b0                    &&
+         (reg2hw.regen)          && // not used
          (|reg2hw.genbits.q);       // not used
 
 
ParseResult:
UPD HdlStmAssign@@ to 
    UPD HdlOp@@OR_LOG to AND_LOG
    UPD HdlOp@@OR_LOG to OR_LOG
        MOV HdlOp@@DOT to ops
        HdlOp: DOT
            list: ops
                HdlValueId: reg2hw
                HdlValueId: regen

UPD HdlStmAssign@@ to 
    UPD HdlOp@@AND_LOG to AND_LOG
        INS HdlOp@@AND_LOG to ops
        UPD HdlOp@@AND_LOG to AND_LOG
            INS list@@ops to AND_LOG
            INS HdlValueInt@@0 to ops


CommitId: f52a46126ad4be7213b10dc23861d202f8dfa607
[flash_ctrl] hook-up flash_ctrl key request interface
--- a/hw/ip/flash_ctrl/rtl/flash_ctrl_lcmgr.sv
+++ b/hw/ip/flash_ctrl/rtl/flash_ctrl_lcmgr.sv
@@ -5,9 +5,14 @@
 // Flash Controller for life cycle / key management handling
 //
 
-module flash_ctrl_lcmgr import flash_ctrl_pkg::*; (
+module flash_ctrl_lcmgr import flash_ctrl_pkg::*; #(
+  parameter flash_key_t RndCnstAddrKey = RndCnstAddrKeyDefault,
+  parameter flash_key_t RndCnstDataKey = RndCnstDataKeyDefault
+) (
   input clk_i,
   input rst_ni,
+  input clk_otp_i,
+  input rst_otp_ni,
 
   // initialization command
   input init_i,

ParseResult:
INS HdlIdDef@@RndCnstAddrKey to params
HdlIdDef: RndCnstAddrKey
    HdlValueId: flash_key_t
    HdlValueId: RndCnstAddrKeyDefault
    HdlDirection: INTERNAL

INS HdlIdDef@@RndCnstDataKey to params
HdlIdDef: RndCnstDataKey
    HdlValueId: flash_key_t
    HdlValueId: RndCnstDataKeyDefault
    HdlDirection: INTERNAL

INS HdlIdDef@@clk_otp_i to ports
HdlIdDef: clk_otp_i
    HdlValueId: wire
    HdlDirection: IN

INS HdlIdDef@@rst_otp_ni to ports
HdlIdDef: rst_otp_ni
    HdlValueId: wire
    HdlDirection: IN


CommitId: f52a46126ad4be7213b10dc23861d202f8dfa607
[flash_ctrl] hook-up flash_ctrl key request interface
--- a/hw/ip/flash_ctrl/rtl/flash_ctrl_lcmgr.sv
+++ b/hw/ip/flash_ctrl/rtl/flash_ctrl_lcmgr.sv
@@ -52,6 +57,12 @@ module flash_ctrl_lcmgr import flash_ctrl_pkg::*; (
   // enable read buffer in flash_phy
   output logic rd_buf_en_o,
 
+  // request otp keys
+  output otp_ctrl_pkg::flash_otp_key_req_t otp_key_req_o,
+  input otp_ctrl_pkg::flash_otp_key_rsp_t otp_key_rsp_i,
+  output flash_key_t addr_key_o,
+  output flash_key_t data_key_o,
+
   // init ongoing
   output logic init_busy_o
 );

ParseResult:
INS HdlIdDef@@otp_key_req_o to ports
HdlIdDef: otp_key_req_o
    HdlOp: DOUBLE_COLON
        list: ops
            HdlValueId: otp_ctrl_pkg
            HdlValueId: flash_otp_key_req_t
    HdlDirection: OUT

INS HdlIdDef@@otp_key_rsp_i to ports
HdlIdDef: otp_key_rsp_i
    HdlOp: DOUBLE_COLON
        list: ops
            HdlValueId: otp_ctrl_pkg
            HdlValueId: flash_otp_key_rsp_t
    HdlDirection: IN

INS HdlIdDef@@addr_key_o to ports
HdlIdDef: addr_key_o
    HdlValueId: flash_key_t
    HdlDirection: OUT

INS HdlIdDef@@data_key_o to ports
HdlIdDef: data_key_o
    HdlValueId: flash_key_t
    HdlDirection: OUT


CommitId: f52a46126ad4be7213b10dc23861d202f8dfa607
[flash_ctrl] hook-up flash_ctrl key request interface
--- a/hw/ip/flash_ctrl/rtl/flash_ctrl_lcmgr.sv
+++ b/hw/ip/flash_ctrl/rtl/flash_ctrl_lcmgr.sv
@@ -243,15 +300,30 @@ module flash_ctrl_lcmgr import flash_ctrl_pkg::*; (
     // if required.
     init_done_d = 1'b1;
 
+    addr_key_req_d = 1'b0;
+    data_key_req_d = 1'b0;
+
     unique case (state_q)
 
       StIdle: begin
         init_done_d = 1'b0;
         phase = PhaseSeed;
-        // provision_en is only a "good" value after otp/lc initialization
         if (init_q) begin
-          // if provisioning is not enabled, do not read seeds and skip directly
-          // to wait state.
+          state_d = StReqAddrKey;
+        end
+      end
+
+      StReqAddrKey: begin
+        addr_key_req_d = 1'b1;
+        if (addr_key_ack_q) begin
+          state_d = StReqDataKey;
+        end
+      end
+
+      StReqDataKey: begin
+        data_key_req_d = 1'b1;
+        if (data_key_ack_q) begin
+          // provision_en is only a "good" value after otp/lc initialization
           state_d = provision_en_i ? StReadSeeds : StWait;
         end
       end

ParseResult:
UPD HdlStmCase@@state_q to state_q
    UPD HdlValueId@@StIdle to StReqDataKey
    UPD HdlStmBlock@@SEQ to SEQ
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: init_done_d
                HdlValueInt: 0
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: phase
                HdlValueId: PhaseSeed

INS HdlStmIf@@ to body
HdlStmIf
    HdlValueId: init_q
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: state_d
                    HdlValueId: StReqAddrKey
    list: elifs

UPD HdlStmIf@@ to 
    UPD HdlValueId@@init_q to data_key_ack_q


CommitId: f52a46126ad4be7213b10dc23861d202f8dfa607
[flash_ctrl] hook-up flash_ctrl key request interface
--- a/hw/ip/flash_ctrl/rtl/flash_ctrl_lcmgr.sv
+++ b/hw/ip/flash_ctrl/rtl/flash_ctrl_lcmgr.sv
@@ -389,4 +461,7 @@ module flash_ctrl_lcmgr import flash_ctrl_pkg::*; (
   assign seeds_o = seeds_q;
   assign phase_o = phase;
 
+  logic unused_seed_valid;
+  assign unused_seed_valid = otp_key_rsp_i.seed_valid;
+
 endmodule // flash_ctrl_lcmgr
ParseResult:
INS HdlIdDef@@unused_seed_valid to objs
HdlIdDef: unused_seed_valid
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: DOT
        list: ops
            HdlValueId: otp_key_rsp_i
            HdlValueId: seed_valid
    HdlValueId: unused_seed_valid

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: addr_key_req_d
                HdlValueInt: 0
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: data_key_req_d
                HdlValueInt: 0

UPD HdlStmCase@@state_q to state_q
    INS tuple@@ to cases
    INS tuple@@ to cases
    tuple
        HdlValueId: StReqAddrKey
        HdlStmBlock: SEQ
            list: body
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: addr_key_req_d
                        HdlValueInt: 1
                HdlStmIf
                    HdlValueId: addr_key_ack_q
                    HdlStmBlock: SEQ
                        list: body
                            HdlOp: ASSIGN
                                list: ops
                                    HdlValueId: state_d
                                    HdlValueId: StReqDataKey
                    list: elifs
    INS HdlValueId@@StIdle to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: data_key_req_d
                HdlValueInt: 1


CommitId: efaa97eb056324fec332981139a3370db290679a
[ast] AscenLint fixes and new analog typedef
--- a/hw/top_earlgrey/ip/ast/rtl/rglts_pdm_3p3v.sv
+++ b/hw/top_earlgrey/ip/ast/rtl/rglts_pdm_3p3v.sv
@@ -5,21 +5,16 @@
 // *Name: rglts_pdm_3p3v
 // *Module Description: Regulators (MAIN & AON) & PDM Logic @3.3V
 //############################################################################
-`timescale 1ns / 10ps
-
-module rglts_pdm_3p3v
-#(
-`ifndef VERILATOR
-// synopsys translate_off
-  parameter time MRVCC_RDLY = 5us,
-  parameter time MRVCC_FDLY = 100ns,
-  parameter time MRPD_RDLY = 50us,
-  parameter time MRPD_FDLY = 1us
-// synopsys translate_on
+`ifdef SYNTHESIS
+`ifndef PRIM_DEFAULT_IMPL
+`define PRIM_DEFAULT_IMPL prim_pkg::ImplGeneric
 `endif
-) (
+`endif
+
+module rglts_pdm_3p3v (
   input vcc_pok_h_i,                     // VCC (3.3V) Exist @3.3v
   input vcmain_pok_h_i,                  // VCMAIN (1.1v) Exist @3.3v
+  input vcmain_pok_o_h_i,                // vcmain_pok_o signal (1.1v) @3.3v
   input clk_src_aon_h_i,                 // AON Clock @3.3v
   input main_pd_h_ni,                    // VCMAIN/Regulator Power Down @3.3v
   input [1:0] otp_power_seq_h_i,         // MMR0,24 in @3.3v

ParseResult:
INS HdlIdDef@@vcmain_pok_o_h_i to ports
HdlIdDef: vcmain_pok_o_h_i
    HdlValueId: wire
    HdlDirection: IN

UPD HdlModuleDef@@rglts_pdm_3p3v to rglts_pdm_3p3v
    UPD HdlImport@@ to 
        UPD HdlValueId@@ast_pkg to ast_bhv_pkg

DEL HdlIdDef@@MRVCC_RDLY from params
HdlIdDef: MRVCC_RDLY
    HdlValueId: time
    HdlExprNotImplemented: value
    HdlDirection: INTERNAL

DEL HdlIdDef@@MRVCC_FDLY from params
HdlIdDef: MRVCC_FDLY
    HdlValueId: time
    HdlExprNotImplemented: value
    HdlDirection: INTERNAL

DEL HdlIdDef@@MRPD_RDLY from params
HdlIdDef: MRPD_RDLY
    HdlValueId: time
    HdlExprNotImplemented: value
    HdlDirection: INTERNAL

DEL HdlIdDef@@MRPD_FDLY from params
HdlIdDef: MRPD_FDLY
    HdlValueId: time
    HdlExprNotImplemented: value
    HdlDirection: INTERNAL


CommitId: efaa97eb056324fec332981139a3370db290679a
[ast] AscenLint fixes and new analog typedef
--- a/hw/top_earlgrey/ip/ast/rtl/rglts_pdm_3p3v.sv
+++ b/hw/top_earlgrey/ip/ast/rtl/rglts_pdm_3p3v.sv
@@ -30,12 +25,16 @@ module rglts_pdm_3p3v
   output logic [1:0] otp_power_seq_h_o   // MMR0,24 masked by PDM, out (VCC)
 );
 
-import ast_pkg::*;
+`ifndef SYNTHESIS
+import ast_bhv_pkg::* ;
 
 // Behavioral Model
+///////////////////////////////////////
+// localparam time MPVCC_RDLY = 5us,
+//                 MPVCC_FDLY = 100ns,
+//                 MPPD_RDLY  = 50us,
+//                 MPPD_FDLY  = 1us;
 
-`ifndef VERILATOR
-// synopsys translate_off
 logic mr_vcc_dly, mr_pd_dly;
 
 // The initial is needed to clear the X of the delays at the start

ParseResult:
UPD HdlModuleDef@@rglts_pdm_3p3v to rglts_pdm_3p3v
    UPD HdlImport@@ to 
        UPD HdlValueId@@ast_pkg to ast_bhv_pkg


CommitId: fc7332179ae71a31c6734d5038569b5fdca4d838
Update pulp_riscv_dbg to pulp-platform/riscv-dbg@834853c
new mode 100755
index 938e88306..550b7cc36
--- a/hw/vendor/pulp_riscv_dbg/src/dm_mem.sv
+++ b/hw/vendor/pulp_riscv_dbg/src/dm_mem.sv

ParseResult:
MOV HdlCompInst@@debug_rom-i_debug_rom to objs
HdlCompInst: debug_rom-i_debug_rom
    list: param_map
    list: port_map
        HdlOp: MAP_ASSOCIATION
            list: ops
                HdlValueId: clk_i
        HdlOp: MAP_ASSOCIATION
            list: ops
                HdlValueId: req_i
        HdlOp: MAP_ASSOCIATION
            list: ops
                HdlValueId: addr_i
                HdlValueId: rom_addr
        HdlOp: MAP_ASSOCIATION
            list: ops
                HdlValueId: rdata_o
                HdlValueId: rom_rdata


CommitId: fc7332179ae71a31c6734d5038569b5fdca4d838
Update pulp_riscv_dbg to pulp-platform/riscv-dbg@834853c
new mode 100755
index 938e88306..550b7cc36
@@ -19,7 +19,8 @@
 module dm_mem #(
   parameter int unsigned        NrHarts          =  1,
   parameter int unsigned        BusWidth         = 32,
-  parameter logic [NrHarts-1:0] SelectableHarts  = {NrHarts{1'b1}}
+  parameter logic [NrHarts-1:0] SelectableHarts  = {NrHarts{1'b1}},
+  parameter int unsigned        DmBaseAddress    = '0
 ) (
   input  logic                             clk_i,       // Clock
   input  logic                             rst_ni,      // debug module reset

ParseResult:
INS HdlIdDef@@DmBaseAddress to params
HdlIdDef: DmBaseAddress
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: int
            HdlOp: MAP_ASSOCIATION
                list: ops
                    HdlValueId: signed
    HdlValueInt: 0
    HdlDirection: INTERNAL


CommitId: fc7332179ae71a31c6734d5038569b5fdca4d838
Update pulp_riscv_dbg to pulp-platform/riscv-dbg@834853c
new mode 100755
index 938e88306..550b7cc36
@@ -60,9 +61,12 @@ module dm_mem #(
   localparam int unsigned HartSelLen     = (NrHarts == 1) ? 1 : $clog2(NrHarts);
   localparam int unsigned NrHartsAligned = 2**HartSelLen;
   localparam int unsigned MaxAar         = (BusWidth == 64) ? 4 : 3;
+  localparam bit          HasSndScratch  = (DmBaseAddress != 0);
+  // Depending on whether we are at the zero page or not we either use `x0` or `x10/a0`
+  localparam logic [4:0]  LoadBaseAddr   = (DmBaseAddress == 0) ? 5'd0 : 5'd10;
 
   localparam logic [DbgAddressBits-1:0] DataBaseAddr        = (dm::DataAddr);
-  localparam logic [DbgAddressBits-1:0] DataEndAddr         = (dm::DataAddr + 4*dm::DataCount);
+  localparam logic [DbgAddressBits-1:0] DataEndAddr         = (dm::DataAddr + 4*dm::DataCount - 1);
   localparam logic [DbgAddressBits-1:0] ProgBufBaseAddr     = (dm::DataAddr - 4*dm::ProgBufSize);
   localparam logic [DbgAddressBits-1:0] ProgBufEndAddr      = (dm::DataAddr - 1);
   localparam logic [DbgAddressBits-1:0] AbstractCmdBaseAddr = (ProgBufBaseAddr - 4*10);

ParseResult:
INS HdlIdDef@@HasSndScratch to objs
HdlIdDef: HasSndScratch
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: bit
    HdlOp: NE
        list: ops
            HdlValueId: DmBaseAddress
            HdlValueInt: 0
    HdlDirection: INTERNAL

INS HdlIdDef@@LoadBaseAddr to objs
HdlIdDef: LoadBaseAddr
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 4
                    HdlValueInt: 0
    HdlOp: TERNARY
        list: ops
            HdlOp: EQ
                list: ops
                    HdlValueId: DmBaseAddress
                    HdlValueInt: 0
            HdlValueInt: 0
            HdlValueInt: 10
    HdlDirection: INTERNAL

UPD HdlIdDef@@DataEndAddr to DataEndAddr
    INS HdlOp@@SUB to DataEndAddr
    UPD HdlOp@@SUB to SUB
        INS list@@ops to SUB
        INS HdlValueInt@@1 to ops

UPD HdlIdDef@@DataEndAddr to DataEndAddr
    MOV HdlOp@@ADD to DataEndAddr
    HdlOp: ADD
        list: ops
            HdlOp: DOUBLE_COLON
                list: ops
                    HdlValueId: dm
                    HdlValueId: DataAddr
            HdlOp: MUL
                list: ops
                    HdlValueInt: 4
                    HdlOp: DOUBLE_COLON
                        list: ops
                            HdlValueId: dm
                            HdlValueId: DataCount


CommitId: fc7332179ae71a31c6734d5038569b5fdca4d838
Update pulp_riscv_dbg to pulp-platform/riscv-dbg@834853c
new mode 100755
index 938e88306..550b7cc36
@@ -331,14 +335,15 @@ module dm_mem #(
     // if ac_ar.transfer is not set then we can take a shortcut to the program buffer
     abstract_cmd[0][31:0]  = dm::illegal();
     // load debug module base address into a0, this is shared among all commands
-    abstract_cmd[0][63:32] = dm::auipc(5'd10, '0);
-    abstract_cmd[1][31:0]  = dm::srli(5'd10, 5'd10, 6'd12); // clr lowest 12b -> DM base offset
-    abstract_cmd[1][63:32] = dm::slli(5'd10, 5'd10, 6'd12);
+    abstract_cmd[0][63:32] = HasSndScratch ? dm::auipc(5'd10, '0) : dm::nop();
+    // clr lowest 12b -> DM base offset
+    abstract_cmd[1][31:0]  = HasSndScratch ? dm::srli(5'd10, 5'd10, 6'd12) : dm::nop();
+    abstract_cmd[1][63:32] = HasSndScratch ? dm::slli(5'd10, 5'd10, 6'd12) : dm::nop();
     abstract_cmd[2][31:0]  = dm::nop();
     abstract_cmd[2][63:32] = dm::nop();
     abstract_cmd[3][31:0]  = dm::nop();
     abstract_cmd[3][63:32] = dm::nop();
-    abstract_cmd[4][31:0]  = dm::csrr(dm::CSR_DSCRATCH1, 5'd10);
+    abstract_cmd[4][31:0]  = HasSndScratch ? dm::csrr(dm::CSR_DSCRATCH1, 5'd10) : dm::nop();
     abstract_cmd[4][63:32] = dm::ebreak();
     abstract_cmd[7:5]      = '0;
 

ParseResult:
UPD HdlStmProcess@@ to 
    INS HdlStmProcessTriggerConstrain@@COMB to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlOp@@TERNARY to ops
            UPD HdlOp@@TERNARY to TERNARY
                INS list@@ops to TERNARY
                INS HdlValueId@@HasSndScratch to ops
                INS HdlOp@@DOUBLE_COLON to ops
                HdlOp: DOUBLE_COLON
                    list: ops
                        HdlValueId: dm
                        HdlValueId: nop
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlOp@@TERNARY to ops
            UPD HdlOp@@TERNARY to TERNARY
                INS list@@ops to TERNARY
                INS HdlValueId@@HasSndScratch to ops
                INS HdlOp@@DOUBLE_COLON to ops
                HdlOp: DOUBLE_COLON
                    list: ops
                        HdlValueId: dm
                        HdlValueId: nop
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlOp@@TERNARY to ops
            UPD HdlOp@@TERNARY to TERNARY
                INS list@@ops to TERNARY
                INS HdlValueId@@HasSndScratch to ops
                INS HdlOp@@DOUBLE_COLON to ops
                HdlOp: DOUBLE_COLON
                    list: ops
                        HdlValueId: dm
                        HdlValueId: nop
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlOp@@TERNARY to ops
            UPD HdlOp@@TERNARY to TERNARY
                INS list@@ops to TERNARY
                INS HdlValueId@@HasSndScratch to ops
                INS HdlOp@@DOUBLE_COLON to ops
                HdlOp: DOUBLE_COLON
                    list: ops
                        HdlValueId: dm
                        HdlValueId: nop

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            MOV HdlOp@@CALL to ops
            HdlOp: CALL
                list: ops
                    HdlOp: DOUBLE_COLON
                        list: ops
                            HdlValueId: dm
                            HdlValueId: auipc
                    HdlValueInt: 10
                    HdlValueInt: 0
        UPD HdlOp@@ASSIGN to ASSIGN
            MOV HdlOp@@CALL to ops
            HdlOp: CALL
                list: ops
                    HdlOp: DOUBLE_COLON
                        list: ops
                            HdlValueId: dm
                            HdlValueId: srli
                    HdlValueInt: 10
                    HdlValueInt: 10
                    HdlValueInt: 12
        UPD HdlOp@@ASSIGN to ASSIGN
            MOV HdlOp@@CALL to ops
            HdlOp: CALL
                list: ops
                    HdlOp: DOUBLE_COLON
                        list: ops
                            HdlValueId: dm
                            HdlValueId: slli
                    HdlValueInt: 10
                    HdlValueInt: 10
                    HdlValueInt: 12
        UPD HdlOp@@ASSIGN to ASSIGN
            MOV HdlOp@@CALL to ops
            HdlOp: CALL
                list: ops
                    HdlOp: DOUBLE_COLON
                        list: ops
                            HdlValueId: dm
                            HdlValueId: csrr
                    HdlOp: DOUBLE_COLON
                        list: ops
                            HdlValueId: dm
                            HdlValueId: CSR_DSCRATCH1
                    HdlValueInt: 10
    DEL HdlStmProcessTriggerConstrain@@COMB from 


CommitId: fc7332179ae71a31c6734d5038569b5fdca4d838
Update pulp_riscv_dbg to pulp-platform/riscv-dbg@834853c
new mode 100755
index 938e88306..550b7cc36
@@ -350,19 +355,19 @@ module dm_mem #(
       dm::AccessRegister: begin
         if (32'(ac_ar.aarsize) < MaxAar && ac_ar.transfer && ac_ar.write) begin
           // store a0 in dscratch1
-          abstract_cmd[0][31:0] = dm::csrw(dm::CSR_DSCRATCH1, 5'd10);
+          abstract_cmd[0][31:0] = HasSndScratch ? dm::csrr(dm::CSR_DSCRATCH1, 5'd10) : dm::nop();
           // this range is reserved
           if (ac_ar.regno[15:14] != '0) begin
             abstract_cmd[0][31:0] = dm::ebreak(); // we leave asap
             unsupported_command = 1'b1;
           // A0 access needs to be handled separately, as we use A0 to load
           // the DM address offset need to access DSCRATCH1 in this case
-          end else if (ac_ar.regno[12] && (!ac_ar.regno[5]) &&
+          end else if (HasSndScratch && ac_ar.regno[12] && (!ac_ar.regno[5]) &&
                       (ac_ar.regno[4:0] == 5'd10)) begin
             // store s0 in dscratch
             abstract_cmd[2][31:0]  = dm::csrw(dm::CSR_DSCRATCH0, 5'd8);
             // load from data register
-            abstract_cmd[2][63:32] = dm::load(ac_ar.aarsize, 5'd8, 5'd10, dm::DataAddr);
+            abstract_cmd[2][63:32] = dm::load(ac_ar.aarsize, 5'd8, LoadBaseAddr, dm::DataAddr);
             // and store it in the corresponding CSR
             abstract_cmd[3][31:0]  = dm::csrw(dm::CSR_DSCRATCH1, 5'd8);
             // restore s0 again from dscratch

ParseResult:
UPD HdlStmProcess@@ to 
    INS HdlStmProcessTriggerConstrain@@COMB to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlOp@@TERNARY to ops
            UPD HdlOp@@TERNARY to TERNARY
                INS list@@ops to TERNARY
                INS HdlValueId@@HasSndScratch to ops
                INS HdlOp@@DOUBLE_COLON to ops
                HdlOp: DOUBLE_COLON
                    list: ops
                        HdlValueId: dm
                        HdlValueId: nop
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlOp@@TERNARY to ops
            UPD HdlOp@@TERNARY to TERNARY
                INS list@@ops to TERNARY
                INS HdlValueId@@HasSndScratch to ops
                INS HdlOp@@DOUBLE_COLON to ops
                HdlOp: DOUBLE_COLON
                    list: ops
                        HdlValueId: dm
                        HdlValueId: nop
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlOp@@TERNARY to ops
            UPD HdlOp@@TERNARY to TERNARY
                INS list@@ops to TERNARY
                INS HdlValueId@@HasSndScratch to ops
                INS HdlOp@@DOUBLE_COLON to ops
                HdlOp: DOUBLE_COLON
                    list: ops
                        HdlValueId: dm
                        HdlValueId: nop
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlOp@@TERNARY to ops
            UPD HdlOp@@TERNARY to TERNARY
                INS list@@ops to TERNARY
                INS HdlValueId@@HasSndScratch to ops
                INS HdlOp@@DOUBLE_COLON to ops
                HdlOp: DOUBLE_COLON
                    list: ops
                        HdlValueId: dm
                        HdlValueId: nop

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            MOV HdlOp@@CALL to ops
            HdlOp: CALL
                list: ops
                    HdlOp: DOUBLE_COLON
                        list: ops
                            HdlValueId: dm
                            HdlValueId: auipc
                    HdlValueInt: 10
                    HdlValueInt: 0
        UPD HdlOp@@ASSIGN to ASSIGN
            MOV HdlOp@@CALL to ops
            HdlOp: CALL
                list: ops
                    HdlOp: DOUBLE_COLON
                        list: ops
                            HdlValueId: dm
                            HdlValueId: srli
                    HdlValueInt: 10
                    HdlValueInt: 10
                    HdlValueInt: 12
        UPD HdlOp@@ASSIGN to ASSIGN
            MOV HdlOp@@CALL to ops
            HdlOp: CALL
                list: ops
                    HdlOp: DOUBLE_COLON
                        list: ops
                            HdlValueId: dm
                            HdlValueId: slli
                    HdlValueInt: 10
                    HdlValueInt: 10
                    HdlValueInt: 12
        UPD HdlOp@@ASSIGN to ASSIGN
            MOV HdlOp@@CALL to ops
            HdlOp: CALL
                list: ops
                    HdlOp: DOUBLE_COLON
                        list: ops
                            HdlValueId: dm
                            HdlValueId: csrr
                    HdlOp: DOUBLE_COLON
                        list: ops
                            HdlValueId: dm
                            HdlValueId: CSR_DSCRATCH1
                    HdlValueInt: 10
    DEL HdlStmProcessTriggerConstrain@@COMB from 

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlOp@@TERNARY to ops
            UPD HdlOp@@TERNARY to TERNARY
                INS list@@ops to TERNARY
                INS HdlValueId@@HasSndScratch to ops
                INS HdlOp@@DOUBLE_COLON to ops
                HdlOp: DOUBLE_COLON
                    list: ops
                        HdlValueId: dm
                        HdlValueId: nop
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlOp@@TERNARY to ops
            UPD HdlOp@@TERNARY to TERNARY
                INS list@@ops to TERNARY
                INS HdlValueId@@HasSndScratch to ops
                INS HdlOp@@DOUBLE_COLON to ops
                HdlOp: DOUBLE_COLON
                    list: ops
                        HdlValueId: dm
                        HdlValueId: nop
                UPD HdlOp@@CALL to CALL
                    INS HdlValueId@@LoadBaseAddr to ops

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            MOV HdlOp@@CALL to ops
            HdlOp: CALL
                list: ops
                    HdlOp: DOUBLE_COLON
                        list: ops
                            HdlValueId: dm
                            HdlValueId: csrw
                    HdlOp: DOUBLE_COLON
                        list: ops
                            HdlValueId: dm
                            HdlValueId: CSR_DSCRATCH1
                    HdlValueInt: 10
            UPD HdlOp@@CALL to CALL
                UPD HdlOp@@DOUBLE_COLON to DOUBLE_COLON
                    UPD HdlValueId@@csrw to csrr
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            MOV HdlOp@@CALL to ops
            HdlOp: CALL
                list: ops
                    HdlOp: DOUBLE_COLON
                        list: ops
                            HdlValueId: dm
                            HdlValueId: csrw
                    HdlOp: DOUBLE_COLON
                        list: ops
                            HdlValueId: dm
                            HdlValueId: CSR_DSCRATCH1
                    HdlValueInt: 10
            UPD HdlOp@@CALL to CALL
                UPD HdlOp@@DOUBLE_COLON to DOUBLE_COLON
                    UPD HdlValueId@@csrw to csrr
                DEL HdlValueInt@@10 from ops

UPD HdlStmIf@@ to 
    UPD HdlOp@@AND_LOG to AND_LOG
        UPD HdlOp@@AND_LOG to AND_LOG
            INS HdlOp@@AND_LOG to ops
            UPD HdlOp@@AND_LOG to AND_LOG
                INS list@@ops to AND_LOG
                INS HdlValueId@@HasSndScratch to ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@CALL to CALL
                INS HdlValueId@@LoadBaseAddr to ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@CALL to CALL
                INS HdlValueId@@LoadBaseAddr to ops

UPD HdlStmIf@@ to 
    UPD HdlOp@@AND_LOG to AND_LOG
        UPD HdlOp@@AND_LOG to AND_LOG
            MOV HdlOp@@INDEX to ops
            HdlOp: INDEX
                list: ops
                    HdlOp: DOT
                        list: ops
                            HdlValueId: ac_ar
                            HdlValueId: regno
                    HdlValueInt: 12
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@CALL to CALL
                DEL HdlValueInt@@10 from ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@CALL to CALL
                DEL HdlValueInt@@10 from ops


CommitId: fc7332179ae71a31c6734d5038569b5fdca4d838
Update pulp_riscv_dbg to pulp-platform/riscv-dbg@834853c
new mode 100755
index 938e88306..550b7cc36
@@ -372,10 +377,10 @@ module dm_mem #(
             // determine whether we want to access the floating point register or not
             if (ac_ar.regno[5]) begin
               abstract_cmd[2][31:0] =
-                  dm::float_load(ac_ar.aarsize, ac_ar.regno[4:0], 5'd10, dm::DataAddr);
+                  dm::float_load(ac_ar.aarsize, ac_ar.regno[4:0], LoadBaseAddr, dm::DataAddr);
             end else begin
               abstract_cmd[2][31:0] =
-                  dm::load(ac_ar.aarsize, ac_ar.regno[4:0], 5'd10, dm::DataAddr);
+                  dm::load(ac_ar.aarsize, ac_ar.regno[4:0], LoadBaseAddr, dm::DataAddr);
             end
           // CSR access
           end else begin

ParseResult:
UPD HdlStmProcess@@ to 
    INS HdlStmProcessTriggerConstrain@@COMB to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlOp@@TERNARY to ops
            UPD HdlOp@@TERNARY to TERNARY
                INS list@@ops to TERNARY
                INS HdlValueId@@HasSndScratch to ops
                INS HdlOp@@DOUBLE_COLON to ops
                HdlOp: DOUBLE_COLON
                    list: ops
                        HdlValueId: dm
                        HdlValueId: nop
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlOp@@TERNARY to ops
            UPD HdlOp@@TERNARY to TERNARY
                INS list@@ops to TERNARY
                INS HdlValueId@@HasSndScratch to ops
                INS HdlOp@@DOUBLE_COLON to ops
                HdlOp: DOUBLE_COLON
                    list: ops
                        HdlValueId: dm
                        HdlValueId: nop
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlOp@@TERNARY to ops
            UPD HdlOp@@TERNARY to TERNARY
                INS list@@ops to TERNARY
                INS HdlValueId@@HasSndScratch to ops
                INS HdlOp@@DOUBLE_COLON to ops
                HdlOp: DOUBLE_COLON
                    list: ops
                        HdlValueId: dm
                        HdlValueId: nop
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlOp@@TERNARY to ops
            UPD HdlOp@@TERNARY to TERNARY
                INS list@@ops to TERNARY
                INS HdlValueId@@HasSndScratch to ops
                INS HdlOp@@DOUBLE_COLON to ops
                HdlOp: DOUBLE_COLON
                    list: ops
                        HdlValueId: dm
                        HdlValueId: nop

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            MOV HdlOp@@CALL to ops
            HdlOp: CALL
                list: ops
                    HdlOp: DOUBLE_COLON
                        list: ops
                            HdlValueId: dm
                            HdlValueId: auipc
                    HdlValueInt: 10
                    HdlValueInt: 0
        UPD HdlOp@@ASSIGN to ASSIGN
            MOV HdlOp@@CALL to ops
            HdlOp: CALL
                list: ops
                    HdlOp: DOUBLE_COLON
                        list: ops
                            HdlValueId: dm
                            HdlValueId: srli
                    HdlValueInt: 10
                    HdlValueInt: 10
                    HdlValueInt: 12
        UPD HdlOp@@ASSIGN to ASSIGN
            MOV HdlOp@@CALL to ops
            HdlOp: CALL
                list: ops
                    HdlOp: DOUBLE_COLON
                        list: ops
                            HdlValueId: dm
                            HdlValueId: slli
                    HdlValueInt: 10
                    HdlValueInt: 10
                    HdlValueInt: 12
        UPD HdlOp@@ASSIGN to ASSIGN
            MOV HdlOp@@CALL to ops
            HdlOp: CALL
                list: ops
                    HdlOp: DOUBLE_COLON
                        list: ops
                            HdlValueId: dm
                            HdlValueId: csrr
                    HdlOp: DOUBLE_COLON
                        list: ops
                            HdlValueId: dm
                            HdlValueId: CSR_DSCRATCH1
                    HdlValueInt: 10
    DEL HdlStmProcessTriggerConstrain@@COMB from 

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlOp@@TERNARY to ops
            UPD HdlOp@@TERNARY to TERNARY
                INS list@@ops to TERNARY
                INS HdlValueId@@HasSndScratch to ops
                INS HdlOp@@DOUBLE_COLON to ops
                HdlOp: DOUBLE_COLON
                    list: ops
                        HdlValueId: dm
                        HdlValueId: nop
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlOp@@TERNARY to ops
            UPD HdlOp@@TERNARY to TERNARY
                INS list@@ops to TERNARY
                INS HdlValueId@@HasSndScratch to ops
                INS HdlOp@@DOUBLE_COLON to ops
                HdlOp: DOUBLE_COLON
                    list: ops
                        HdlValueId: dm
                        HdlValueId: nop
                UPD HdlOp@@CALL to CALL
                    INS HdlValueId@@LoadBaseAddr to ops

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            MOV HdlOp@@CALL to ops
            HdlOp: CALL
                list: ops
                    HdlOp: DOUBLE_COLON
                        list: ops
                            HdlValueId: dm
                            HdlValueId: csrw
                    HdlOp: DOUBLE_COLON
                        list: ops
                            HdlValueId: dm
                            HdlValueId: CSR_DSCRATCH1
                    HdlValueInt: 10
            UPD HdlOp@@CALL to CALL
                UPD HdlOp@@DOUBLE_COLON to DOUBLE_COLON
                    UPD HdlValueId@@csrw to csrr
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            MOV HdlOp@@CALL to ops
            HdlOp: CALL
                list: ops
                    HdlOp: DOUBLE_COLON
                        list: ops
                            HdlValueId: dm
                            HdlValueId: csrw
                    HdlOp: DOUBLE_COLON
                        list: ops
                            HdlValueId: dm
                            HdlValueId: CSR_DSCRATCH1
                    HdlValueInt: 10
            UPD HdlOp@@CALL to CALL
                UPD HdlOp@@DOUBLE_COLON to DOUBLE_COLON
                    UPD HdlValueId@@csrw to csrr
                DEL HdlValueInt@@10 from ops

UPD HdlStmIf@@ to 
    UPD HdlOp@@AND_LOG to AND_LOG
        UPD HdlOp@@AND_LOG to AND_LOG
            INS HdlOp@@AND_LOG to ops
            UPD HdlOp@@AND_LOG to AND_LOG
                INS list@@ops to AND_LOG
                INS HdlValueId@@HasSndScratch to ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@CALL to CALL
                INS HdlValueId@@LoadBaseAddr to ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@CALL to CALL
                INS HdlValueId@@LoadBaseAddr to ops

UPD HdlStmIf@@ to 
    UPD HdlOp@@AND_LOG to AND_LOG
        UPD HdlOp@@AND_LOG to AND_LOG
            MOV HdlOp@@INDEX to ops
            HdlOp: INDEX
                list: ops
                    HdlOp: DOT
                        list: ops
                            HdlValueId: ac_ar
                            HdlValueId: regno
                    HdlValueInt: 12
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@CALL to CALL
                DEL HdlValueInt@@10 from ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@CALL to CALL
                DEL HdlValueInt@@10 from ops

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@CALL to CALL
                DEL HdlValueInt@@10 from ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@CALL to CALL
                DEL HdlValueInt@@10 from ops


CommitId: fc7332179ae71a31c6734d5038569b5fdca4d838
Update pulp_riscv_dbg to pulp-platform/riscv-dbg@834853c
new mode 100755
index 938e88306..550b7cc36
@@ -383,7 +388,7 @@ module dm_mem #(
             // store s0 in dscratch
             abstract_cmd[2][31:0]  = dm::csrw(dm::CSR_DSCRATCH0, 5'd8);
             // load from data register
-            abstract_cmd[2][63:32] = dm::load(ac_ar.aarsize, 5'd8, 5'd10, dm::DataAddr);
+            abstract_cmd[2][63:32] = dm::load(ac_ar.aarsize, 5'd8, LoadBaseAddr, dm::DataAddr);
             // and store it in the corresponding CSR
             abstract_cmd[3][31:0]  = dm::csrw(dm::csr_reg_t'(ac_ar.regno[11:0]), 5'd8);
             // restore s0 again from dscratch

ParseResult:
UPD HdlStmProcess@@ to 
    INS HdlStmProcessTriggerConstrain@@COMB to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlOp@@TERNARY to ops
            UPD HdlOp@@TERNARY to TERNARY
                INS list@@ops to TERNARY
                INS HdlValueId@@HasSndScratch to ops
                INS HdlOp@@DOUBLE_COLON to ops
                HdlOp: DOUBLE_COLON
                    list: ops
                        HdlValueId: dm
                        HdlValueId: nop
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlOp@@TERNARY to ops
            UPD HdlOp@@TERNARY to TERNARY
                INS list@@ops to TERNARY
                INS HdlValueId@@HasSndScratch to ops
                INS HdlOp@@DOUBLE_COLON to ops
                HdlOp: DOUBLE_COLON
                    list: ops
                        HdlValueId: dm
                        HdlValueId: nop
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlOp@@TERNARY to ops
            UPD HdlOp@@TERNARY to TERNARY
                INS list@@ops to TERNARY
                INS HdlValueId@@HasSndScratch to ops
                INS HdlOp@@DOUBLE_COLON to ops
                HdlOp: DOUBLE_COLON
                    list: ops
                        HdlValueId: dm
                        HdlValueId: nop
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlOp@@TERNARY to ops
            UPD HdlOp@@TERNARY to TERNARY
                INS list@@ops to TERNARY
                INS HdlValueId@@HasSndScratch to ops
                INS HdlOp@@DOUBLE_COLON to ops
                HdlOp: DOUBLE_COLON
                    list: ops
                        HdlValueId: dm
                        HdlValueId: nop

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            MOV HdlOp@@CALL to ops
            HdlOp: CALL
                list: ops
                    HdlOp: DOUBLE_COLON
                        list: ops
                            HdlValueId: dm
                            HdlValueId: auipc
                    HdlValueInt: 10
                    HdlValueInt: 0
        UPD HdlOp@@ASSIGN to ASSIGN
            MOV HdlOp@@CALL to ops
            HdlOp: CALL
                list: ops
                    HdlOp: DOUBLE_COLON
                        list: ops
                            HdlValueId: dm
                            HdlValueId: srli
                    HdlValueInt: 10
                    HdlValueInt: 10
                    HdlValueInt: 12
        UPD HdlOp@@ASSIGN to ASSIGN
            MOV HdlOp@@CALL to ops
            HdlOp: CALL
                list: ops
                    HdlOp: DOUBLE_COLON
                        list: ops
                            HdlValueId: dm
                            HdlValueId: slli
                    HdlValueInt: 10
                    HdlValueInt: 10
                    HdlValueInt: 12
        UPD HdlOp@@ASSIGN to ASSIGN
            MOV HdlOp@@CALL to ops
            HdlOp: CALL
                list: ops
                    HdlOp: DOUBLE_COLON
                        list: ops
                            HdlValueId: dm
                            HdlValueId: csrr
                    HdlOp: DOUBLE_COLON
                        list: ops
                            HdlValueId: dm
                            HdlValueId: CSR_DSCRATCH1
                    HdlValueInt: 10
    DEL HdlStmProcessTriggerConstrain@@COMB from 

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlOp@@TERNARY to ops
            UPD HdlOp@@TERNARY to TERNARY
                INS list@@ops to TERNARY
                INS HdlValueId@@HasSndScratch to ops
                INS HdlOp@@DOUBLE_COLON to ops
                HdlOp: DOUBLE_COLON
                    list: ops
                        HdlValueId: dm
                        HdlValueId: nop
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlOp@@TERNARY to ops
            UPD HdlOp@@TERNARY to TERNARY
                INS list@@ops to TERNARY
                INS HdlValueId@@HasSndScratch to ops
                INS HdlOp@@DOUBLE_COLON to ops
                HdlOp: DOUBLE_COLON
                    list: ops
                        HdlValueId: dm
                        HdlValueId: nop
                UPD HdlOp@@CALL to CALL
                    INS HdlValueId@@LoadBaseAddr to ops

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            MOV HdlOp@@CALL to ops
            HdlOp: CALL
                list: ops
                    HdlOp: DOUBLE_COLON
                        list: ops
                            HdlValueId: dm
                            HdlValueId: csrw
                    HdlOp: DOUBLE_COLON
                        list: ops
                            HdlValueId: dm
                            HdlValueId: CSR_DSCRATCH1
                    HdlValueInt: 10
            UPD HdlOp@@CALL to CALL
                UPD HdlOp@@DOUBLE_COLON to DOUBLE_COLON
                    UPD HdlValueId@@csrw to csrr
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            MOV HdlOp@@CALL to ops
            HdlOp: CALL
                list: ops
                    HdlOp: DOUBLE_COLON
                        list: ops
                            HdlValueId: dm
                            HdlValueId: csrw
                    HdlOp: DOUBLE_COLON
                        list: ops
                            HdlValueId: dm
                            HdlValueId: CSR_DSCRATCH1
                    HdlValueInt: 10
            UPD HdlOp@@CALL to CALL
                UPD HdlOp@@DOUBLE_COLON to DOUBLE_COLON
                    UPD HdlValueId@@csrw to csrr
                DEL HdlValueInt@@10 from ops

UPD HdlStmIf@@ to 
    UPD HdlOp@@AND_LOG to AND_LOG
        UPD HdlOp@@AND_LOG to AND_LOG
            INS HdlOp@@AND_LOG to ops
            UPD HdlOp@@AND_LOG to AND_LOG
                INS list@@ops to AND_LOG
                INS HdlValueId@@HasSndScratch to ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@CALL to CALL
                INS HdlValueId@@LoadBaseAddr to ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@CALL to CALL
                INS HdlValueId@@LoadBaseAddr to ops

UPD HdlStmIf@@ to 
    UPD HdlOp@@AND_LOG to AND_LOG
        UPD HdlOp@@AND_LOG to AND_LOG
            MOV HdlOp@@INDEX to ops
            HdlOp: INDEX
                list: ops
                    HdlOp: DOT
                        list: ops
                            HdlValueId: ac_ar
                            HdlValueId: regno
                    HdlValueInt: 12
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@CALL to CALL
                DEL HdlValueInt@@10 from ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@CALL to CALL
                DEL HdlValueInt@@10 from ops

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@CALL to CALL
                INS HdlValueId@@LoadBaseAddr to ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@CALL to CALL
                INS HdlValueId@@LoadBaseAddr to ops


CommitId: fc7332179ae71a31c6734d5038569b5fdca4d838
Update pulp_riscv_dbg to pulp-platform/riscv-dbg@834853c
new mode 100755
index 938e88306..550b7cc36
@@ -391,21 +396,23 @@ module dm_mem #(
           end
         end else if (32'(ac_ar.aarsize) < MaxAar && ac_ar.transfer && !ac_ar.write) begin
           // store a0 in dscratch1
-          abstract_cmd[0][31:0]  = dm::csrw(dm::CSR_DSCRATCH1, 5'd10);
+          abstract_cmd[0][31:0]  = HasSndScratch ?
+                                   dm::csrr(dm::CSR_DSCRATCH1, LoadBaseAddr) :
+                                   dm::nop();
           // this range is reserved
           if (ac_ar.regno[15:14] != '0) begin
               abstract_cmd[0][31:0] = dm::ebreak(); // we leave asap
               unsupported_command = 1'b1;
           // A0 access needs to be handled separately, as we use A0 to load
           // the DM address offset need to access DSCRATCH1 in this case
-          end else if (ac_ar.regno[12] && (!ac_ar.regno[5]) &&
+          end else if (HasSndScratch && ac_ar.regno[12] && (!ac_ar.regno[5]) &&
                       (ac_ar.regno[4:0] == 5'd10)) begin
             // store s0 in dscratch
             abstract_cmd[2][31:0]  = dm::csrw(dm::CSR_DSCRATCH0, 5'd8);
             // read value from CSR into s0
             abstract_cmd[2][63:32] = dm::csrr(dm::CSR_DSCRATCH1, 5'd8);
             // and store s0 into data section
-            abstract_cmd[3][31:0]  = dm::store(ac_ar.aarsize, 5'd8, 5'd10, dm::DataAddr);
+            abstract_cmd[3][31:0]  = dm::store(ac_ar.aarsize, 5'd8, LoadBaseAddr, dm::DataAddr);
             // restore s0 again from dscratch
             abstract_cmd[3][63:32] = dm::csrr(dm::CSR_DSCRATCH0, 5'd8);
           // GPR/FPR access

ParseResult:
UPD HdlStmProcess@@ to 
    INS HdlStmProcessTriggerConstrain@@COMB to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlOp@@TERNARY to ops
            UPD HdlOp@@TERNARY to TERNARY
                INS list@@ops to TERNARY
                INS HdlValueId@@HasSndScratch to ops
                INS HdlOp@@DOUBLE_COLON to ops
                HdlOp: DOUBLE_COLON
                    list: ops
                        HdlValueId: dm
                        HdlValueId: nop
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlOp@@TERNARY to ops
            UPD HdlOp@@TERNARY to TERNARY
                INS list@@ops to TERNARY
                INS HdlValueId@@HasSndScratch to ops
                INS HdlOp@@DOUBLE_COLON to ops
                HdlOp: DOUBLE_COLON
                    list: ops
                        HdlValueId: dm
                        HdlValueId: nop
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlOp@@TERNARY to ops
            UPD HdlOp@@TERNARY to TERNARY
                INS list@@ops to TERNARY
                INS HdlValueId@@HasSndScratch to ops
                INS HdlOp@@DOUBLE_COLON to ops
                HdlOp: DOUBLE_COLON
                    list: ops
                        HdlValueId: dm
                        HdlValueId: nop
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlOp@@TERNARY to ops
            UPD HdlOp@@TERNARY to TERNARY
                INS list@@ops to TERNARY
                INS HdlValueId@@HasSndScratch to ops
                INS HdlOp@@DOUBLE_COLON to ops
                HdlOp: DOUBLE_COLON
                    list: ops
                        HdlValueId: dm
                        HdlValueId: nop

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            MOV HdlOp@@CALL to ops
            HdlOp: CALL
                list: ops
                    HdlOp: DOUBLE_COLON
                        list: ops
                            HdlValueId: dm
                            HdlValueId: auipc
                    HdlValueInt: 10
                    HdlValueInt: 0
        UPD HdlOp@@ASSIGN to ASSIGN
            MOV HdlOp@@CALL to ops
            HdlOp: CALL
                list: ops
                    HdlOp: DOUBLE_COLON
                        list: ops
                            HdlValueId: dm
                            HdlValueId: srli
                    HdlValueInt: 10
                    HdlValueInt: 10
                    HdlValueInt: 12
        UPD HdlOp@@ASSIGN to ASSIGN
            MOV HdlOp@@CALL to ops
            HdlOp: CALL
                list: ops
                    HdlOp: DOUBLE_COLON
                        list: ops
                            HdlValueId: dm
                            HdlValueId: slli
                    HdlValueInt: 10
                    HdlValueInt: 10
                    HdlValueInt: 12
        UPD HdlOp@@ASSIGN to ASSIGN
            MOV HdlOp@@CALL to ops
            HdlOp: CALL
                list: ops
                    HdlOp: DOUBLE_COLON
                        list: ops
                            HdlValueId: dm
                            HdlValueId: csrr
                    HdlOp: DOUBLE_COLON
                        list: ops
                            HdlValueId: dm
                            HdlValueId: CSR_DSCRATCH1
                    HdlValueInt: 10
    DEL HdlStmProcessTriggerConstrain@@COMB from 

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlOp@@TERNARY to ops
            UPD HdlOp@@TERNARY to TERNARY
                INS list@@ops to TERNARY
                INS HdlValueId@@HasSndScratch to ops
                INS HdlOp@@DOUBLE_COLON to ops
                HdlOp: DOUBLE_COLON
                    list: ops
                        HdlValueId: dm
                        HdlValueId: nop
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlOp@@TERNARY to ops
            UPD HdlOp@@TERNARY to TERNARY
                INS list@@ops to TERNARY
                INS HdlValueId@@HasSndScratch to ops
                INS HdlOp@@DOUBLE_COLON to ops
                HdlOp: DOUBLE_COLON
                    list: ops
                        HdlValueId: dm
                        HdlValueId: nop
                UPD HdlOp@@CALL to CALL
                    INS HdlValueId@@LoadBaseAddr to ops

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            MOV HdlOp@@CALL to ops
            HdlOp: CALL
                list: ops
                    HdlOp: DOUBLE_COLON
                        list: ops
                            HdlValueId: dm
                            HdlValueId: csrw
                    HdlOp: DOUBLE_COLON
                        list: ops
                            HdlValueId: dm
                            HdlValueId: CSR_DSCRATCH1
                    HdlValueInt: 10
            UPD HdlOp@@CALL to CALL
                UPD HdlOp@@DOUBLE_COLON to DOUBLE_COLON
                    UPD HdlValueId@@csrw to csrr
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            MOV HdlOp@@CALL to ops
            HdlOp: CALL
                list: ops
                    HdlOp: DOUBLE_COLON
                        list: ops
                            HdlValueId: dm
                            HdlValueId: csrw
                    HdlOp: DOUBLE_COLON
                        list: ops
                            HdlValueId: dm
                            HdlValueId: CSR_DSCRATCH1
                    HdlValueInt: 10
            UPD HdlOp@@CALL to CALL
                UPD HdlOp@@DOUBLE_COLON to DOUBLE_COLON
                    UPD HdlValueId@@csrw to csrr
                DEL HdlValueInt@@10 from ops

UPD HdlStmIf@@ to 
    UPD HdlOp@@AND_LOG to AND_LOG
        UPD HdlOp@@AND_LOG to AND_LOG
            INS HdlOp@@AND_LOG to ops
            UPD HdlOp@@AND_LOG to AND_LOG
                INS list@@ops to AND_LOG
                INS HdlValueId@@HasSndScratch to ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@CALL to CALL
                INS HdlValueId@@LoadBaseAddr to ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@CALL to CALL
                INS HdlValueId@@LoadBaseAddr to ops

UPD HdlStmIf@@ to 
    UPD HdlOp@@AND_LOG to AND_LOG
        UPD HdlOp@@AND_LOG to AND_LOG
            MOV HdlOp@@INDEX to ops
            HdlOp: INDEX
                list: ops
                    HdlOp: DOT
                        list: ops
                            HdlValueId: ac_ar
                            HdlValueId: regno
                    HdlValueInt: 12
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@CALL to CALL
                DEL HdlValueInt@@10 from ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@CALL to CALL
                DEL HdlValueInt@@10 from ops

UPD HdlStmIf@@ to 
    UPD HdlOp@@AND_LOG to AND_LOG
        UPD HdlOp@@AND_LOG to AND_LOG
            INS HdlOp@@AND_LOG to ops
            UPD HdlOp@@AND_LOG to AND_LOG
                INS list@@ops to AND_LOG
                INS HdlValueId@@HasSndScratch to ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@CALL to CALL
                INS HdlValueId@@LoadBaseAddr to ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@CALL to CALL
                INS HdlValueId@@LoadBaseAddr to ops

UPD HdlStmIf@@ to 
    UPD HdlOp@@AND_LOG to AND_LOG
        UPD HdlOp@@AND_LOG to AND_LOG
            MOV HdlOp@@INDEX to ops
            HdlOp: INDEX
                list: ops
                    HdlOp: DOT
                        list: ops
                            HdlValueId: ac_ar
                            HdlValueId: regno
                    HdlValueInt: 12
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@CALL to CALL
                DEL HdlValueInt@@10 from ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@CALL to CALL
                DEL HdlValueInt@@10 from ops


CommitId: fc7332179ae71a31c6734d5038569b5fdca4d838
Update pulp_riscv_dbg to pulp-platform/riscv-dbg@834853c
new mode 100755
index 938e88306..550b7cc36
@@ -413,10 +420,10 @@ module dm_mem #(
             // determine whether we want to access the floating point register or not
             if (ac_ar.regno[5]) begin
               abstract_cmd[2][31:0] =
-                  dm::float_store(ac_ar.aarsize, ac_ar.regno[4:0], 5'd10, dm::DataAddr);
+                  dm::float_store(ac_ar.aarsize, ac_ar.regno[4:0], LoadBaseAddr, dm::DataAddr);
             end else begin
               abstract_cmd[2][31:0] =
-                  dm::store(ac_ar.aarsize, ac_ar.regno[4:0], 5'd10, dm::DataAddr);
+                  dm::store(ac_ar.aarsize, ac_ar.regno[4:0], LoadBaseAddr, dm::DataAddr);
             end
           // CSR access
           end else begin

ParseResult:
UPD HdlStmProcess@@ to 
    INS HdlStmProcessTriggerConstrain@@COMB to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlOp@@TERNARY to ops
            UPD HdlOp@@TERNARY to TERNARY
                INS list@@ops to TERNARY
                INS HdlValueId@@HasSndScratch to ops
                INS HdlOp@@DOUBLE_COLON to ops
                HdlOp: DOUBLE_COLON
                    list: ops
                        HdlValueId: dm
                        HdlValueId: nop
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlOp@@TERNARY to ops
            UPD HdlOp@@TERNARY to TERNARY
                INS list@@ops to TERNARY
                INS HdlValueId@@HasSndScratch to ops
                INS HdlOp@@DOUBLE_COLON to ops
                HdlOp: DOUBLE_COLON
                    list: ops
                        HdlValueId: dm
                        HdlValueId: nop
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlOp@@TERNARY to ops
            UPD HdlOp@@TERNARY to TERNARY
                INS list@@ops to TERNARY
                INS HdlValueId@@HasSndScratch to ops
                INS HdlOp@@DOUBLE_COLON to ops
                HdlOp: DOUBLE_COLON
                    list: ops
                        HdlValueId: dm
                        HdlValueId: nop
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlOp@@TERNARY to ops
            UPD HdlOp@@TERNARY to TERNARY
                INS list@@ops to TERNARY
                INS HdlValueId@@HasSndScratch to ops
                INS HdlOp@@DOUBLE_COLON to ops
                HdlOp: DOUBLE_COLON
                    list: ops
                        HdlValueId: dm
                        HdlValueId: nop

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            MOV HdlOp@@CALL to ops
            HdlOp: CALL
                list: ops
                    HdlOp: DOUBLE_COLON
                        list: ops
                            HdlValueId: dm
                            HdlValueId: auipc
                    HdlValueInt: 10
                    HdlValueInt: 0
        UPD HdlOp@@ASSIGN to ASSIGN
            MOV HdlOp@@CALL to ops
            HdlOp: CALL
                list: ops
                    HdlOp: DOUBLE_COLON
                        list: ops
                            HdlValueId: dm
                            HdlValueId: srli
                    HdlValueInt: 10
                    HdlValueInt: 10
                    HdlValueInt: 12
        UPD HdlOp@@ASSIGN to ASSIGN
            MOV HdlOp@@CALL to ops
            HdlOp: CALL
                list: ops
                    HdlOp: DOUBLE_COLON
                        list: ops
                            HdlValueId: dm
                            HdlValueId: slli
                    HdlValueInt: 10
                    HdlValueInt: 10
                    HdlValueInt: 12
        UPD HdlOp@@ASSIGN to ASSIGN
            MOV HdlOp@@CALL to ops
            HdlOp: CALL
                list: ops
                    HdlOp: DOUBLE_COLON
                        list: ops
                            HdlValueId: dm
                            HdlValueId: csrr
                    HdlOp: DOUBLE_COLON
                        list: ops
                            HdlValueId: dm
                            HdlValueId: CSR_DSCRATCH1
                    HdlValueInt: 10
    DEL HdlStmProcessTriggerConstrain@@COMB from 

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlOp@@TERNARY to ops
            UPD HdlOp@@TERNARY to TERNARY
                INS list@@ops to TERNARY
                INS HdlValueId@@HasSndScratch to ops
                INS HdlOp@@DOUBLE_COLON to ops
                HdlOp: DOUBLE_COLON
                    list: ops
                        HdlValueId: dm
                        HdlValueId: nop
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlOp@@TERNARY to ops
            UPD HdlOp@@TERNARY to TERNARY
                INS list@@ops to TERNARY
                INS HdlValueId@@HasSndScratch to ops
                INS HdlOp@@DOUBLE_COLON to ops
                HdlOp: DOUBLE_COLON
                    list: ops
                        HdlValueId: dm
                        HdlValueId: nop
                UPD HdlOp@@CALL to CALL
                    INS HdlValueId@@LoadBaseAddr to ops

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            MOV HdlOp@@CALL to ops
            HdlOp: CALL
                list: ops
                    HdlOp: DOUBLE_COLON
                        list: ops
                            HdlValueId: dm
                            HdlValueId: csrw
                    HdlOp: DOUBLE_COLON
                        list: ops
                            HdlValueId: dm
                            HdlValueId: CSR_DSCRATCH1
                    HdlValueInt: 10
            UPD HdlOp@@CALL to CALL
                UPD HdlOp@@DOUBLE_COLON to DOUBLE_COLON
                    UPD HdlValueId@@csrw to csrr
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            MOV HdlOp@@CALL to ops
            HdlOp: CALL
                list: ops
                    HdlOp: DOUBLE_COLON
                        list: ops
                            HdlValueId: dm
                            HdlValueId: csrw
                    HdlOp: DOUBLE_COLON
                        list: ops
                            HdlValueId: dm
                            HdlValueId: CSR_DSCRATCH1
                    HdlValueInt: 10
            UPD HdlOp@@CALL to CALL
                UPD HdlOp@@DOUBLE_COLON to DOUBLE_COLON
                    UPD HdlValueId@@csrw to csrr
                DEL HdlValueInt@@10 from ops

UPD HdlStmIf@@ to 
    UPD HdlOp@@AND_LOG to AND_LOG
        UPD HdlOp@@AND_LOG to AND_LOG
            INS HdlOp@@AND_LOG to ops
            UPD HdlOp@@AND_LOG to AND_LOG
                INS list@@ops to AND_LOG
                INS HdlValueId@@HasSndScratch to ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@CALL to CALL
                INS HdlValueId@@LoadBaseAddr to ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@CALL to CALL
                INS HdlValueId@@LoadBaseAddr to ops

UPD HdlStmIf@@ to 
    UPD HdlOp@@AND_LOG to AND_LOG
        UPD HdlOp@@AND_LOG to AND_LOG
            MOV HdlOp@@INDEX to ops
            HdlOp: INDEX
                list: ops
                    HdlOp: DOT
                        list: ops
                            HdlValueId: ac_ar
                            HdlValueId: regno
                    HdlValueInt: 12
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@CALL to CALL
                DEL HdlValueInt@@10 from ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@CALL to CALL
                DEL HdlValueInt@@10 from ops

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@CALL to CALL
                DEL HdlValueInt@@10 from ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@CALL to CALL
                DEL HdlValueInt@@10 from ops


CommitId: fc7332179ae71a31c6734d5038569b5fdca4d838
Update pulp_riscv_dbg to pulp-platform/riscv-dbg@834853c
new mode 100755
index 938e88306..550b7cc36
@@ -426,7 +433,7 @@ module dm_mem #(
             // read value from CSR into s0
             abstract_cmd[2][63:32] = dm::csrr(dm::csr_reg_t'(ac_ar.regno[11:0]), 5'd8);
             // and store s0 into data section
-            abstract_cmd[3][31:0]  = dm::store(ac_ar.aarsize, 5'd8, 5'd10, dm::DataAddr);
+            abstract_cmd[3][31:0]  = dm::store(ac_ar.aarsize, 5'd8, LoadBaseAddr, dm::DataAddr);
             // restore s0 again from dscratch
             abstract_cmd[3][63:32] = dm::csrr(dm::CSR_DSCRATCH0, 5'd8);
           end

ParseResult:
UPD HdlStmProcess@@ to 
    INS HdlStmProcessTriggerConstrain@@COMB to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlOp@@TERNARY to ops
            UPD HdlOp@@TERNARY to TERNARY
                INS list@@ops to TERNARY
                INS HdlValueId@@HasSndScratch to ops
                INS HdlOp@@DOUBLE_COLON to ops
                HdlOp: DOUBLE_COLON
                    list: ops
                        HdlValueId: dm
                        HdlValueId: nop
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlOp@@TERNARY to ops
            UPD HdlOp@@TERNARY to TERNARY
                INS list@@ops to TERNARY
                INS HdlValueId@@HasSndScratch to ops
                INS HdlOp@@DOUBLE_COLON to ops
                HdlOp: DOUBLE_COLON
                    list: ops
                        HdlValueId: dm
                        HdlValueId: nop
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlOp@@TERNARY to ops
            UPD HdlOp@@TERNARY to TERNARY
                INS list@@ops to TERNARY
                INS HdlValueId@@HasSndScratch to ops
                INS HdlOp@@DOUBLE_COLON to ops
                HdlOp: DOUBLE_COLON
                    list: ops
                        HdlValueId: dm
                        HdlValueId: nop
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlOp@@TERNARY to ops
            UPD HdlOp@@TERNARY to TERNARY
                INS list@@ops to TERNARY
                INS HdlValueId@@HasSndScratch to ops
                INS HdlOp@@DOUBLE_COLON to ops
                HdlOp: DOUBLE_COLON
                    list: ops
                        HdlValueId: dm
                        HdlValueId: nop

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            MOV HdlOp@@CALL to ops
            HdlOp: CALL
                list: ops
                    HdlOp: DOUBLE_COLON
                        list: ops
                            HdlValueId: dm
                            HdlValueId: auipc
                    HdlValueInt: 10
                    HdlValueInt: 0
        UPD HdlOp@@ASSIGN to ASSIGN
            MOV HdlOp@@CALL to ops
            HdlOp: CALL
                list: ops
                    HdlOp: DOUBLE_COLON
                        list: ops
                            HdlValueId: dm
                            HdlValueId: srli
                    HdlValueInt: 10
                    HdlValueInt: 10
                    HdlValueInt: 12
        UPD HdlOp@@ASSIGN to ASSIGN
            MOV HdlOp@@CALL to ops
            HdlOp: CALL
                list: ops
                    HdlOp: DOUBLE_COLON
                        list: ops
                            HdlValueId: dm
                            HdlValueId: slli
                    HdlValueInt: 10
                    HdlValueInt: 10
                    HdlValueInt: 12
        UPD HdlOp@@ASSIGN to ASSIGN
            MOV HdlOp@@CALL to ops
            HdlOp: CALL
                list: ops
                    HdlOp: DOUBLE_COLON
                        list: ops
                            HdlValueId: dm
                            HdlValueId: csrr
                    HdlOp: DOUBLE_COLON
                        list: ops
                            HdlValueId: dm
                            HdlValueId: CSR_DSCRATCH1
                    HdlValueInt: 10
    DEL HdlStmProcessTriggerConstrain@@COMB from 

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlOp@@TERNARY to ops
            UPD HdlOp@@TERNARY to TERNARY
                INS list@@ops to TERNARY
                INS HdlValueId@@HasSndScratch to ops
                INS HdlOp@@DOUBLE_COLON to ops
                HdlOp: DOUBLE_COLON
                    list: ops
                        HdlValueId: dm
                        HdlValueId: nop
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlOp@@TERNARY to ops
            UPD HdlOp@@TERNARY to TERNARY
                INS list@@ops to TERNARY
                INS HdlValueId@@HasSndScratch to ops
                INS HdlOp@@DOUBLE_COLON to ops
                HdlOp: DOUBLE_COLON
                    list: ops
                        HdlValueId: dm
                        HdlValueId: nop
                UPD HdlOp@@CALL to CALL
                    INS HdlValueId@@LoadBaseAddr to ops

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            MOV HdlOp@@CALL to ops
            HdlOp: CALL
                list: ops
                    HdlOp: DOUBLE_COLON
                        list: ops
                            HdlValueId: dm
                            HdlValueId: csrw
                    HdlOp: DOUBLE_COLON
                        list: ops
                            HdlValueId: dm
                            HdlValueId: CSR_DSCRATCH1
                    HdlValueInt: 10
            UPD HdlOp@@CALL to CALL
                UPD HdlOp@@DOUBLE_COLON to DOUBLE_COLON
                    UPD HdlValueId@@csrw to csrr
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            MOV HdlOp@@CALL to ops
            HdlOp: CALL
                list: ops
                    HdlOp: DOUBLE_COLON
                        list: ops
                            HdlValueId: dm
                            HdlValueId: csrw
                    HdlOp: DOUBLE_COLON
                        list: ops
                            HdlValueId: dm
                            HdlValueId: CSR_DSCRATCH1
                    HdlValueInt: 10
            UPD HdlOp@@CALL to CALL
                UPD HdlOp@@DOUBLE_COLON to DOUBLE_COLON
                    UPD HdlValueId@@csrw to csrr
                DEL HdlValueInt@@10 from ops

UPD HdlStmIf@@ to 
    UPD HdlOp@@AND_LOG to AND_LOG
        UPD HdlOp@@AND_LOG to AND_LOG
            INS HdlOp@@AND_LOG to ops
            UPD HdlOp@@AND_LOG to AND_LOG
                INS list@@ops to AND_LOG
                INS HdlValueId@@HasSndScratch to ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@CALL to CALL
                INS HdlValueId@@LoadBaseAddr to ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@CALL to CALL
                INS HdlValueId@@LoadBaseAddr to ops

UPD HdlStmIf@@ to 
    UPD HdlOp@@AND_LOG to AND_LOG
        UPD HdlOp@@AND_LOG to AND_LOG
            MOV HdlOp@@INDEX to ops
            HdlOp: INDEX
                list: ops
                    HdlOp: DOT
                        list: ops
                            HdlValueId: ac_ar
                            HdlValueId: regno
                    HdlValueInt: 12
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@CALL to CALL
                DEL HdlValueInt@@10 from ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@CALL to CALL
                DEL HdlValueInt@@10 from ops

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@CALL to CALL
                INS HdlValueId@@LoadBaseAddr to ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@CALL to CALL
                INS HdlValueId@@LoadBaseAddr to ops


CommitId: a3ec3ba3f5f6eda1529c0ac53716459bab5140c2
[Ibex] Expose PMP-related parameters in wrapper
--- a/hw/ip/rv_core_ibex/rtl/rv_core_ibex.sv
+++ b/hw/ip/rv_core_ibex/rtl/rv_core_ibex.sv
@@ -9,6 +9,9 @@
  * Instruction and data bus are 32 bit wide TileLink-UL (TL-UL).
  */
 module rv_core_ibex #(
+  parameter bit          PMPEnable        = 1'b0,
+  parameter int unsigned PMPGranularity   = 0,
+  parameter int unsigned PMPNumRegions    = 4,
   parameter int unsigned MHPMCounterNum   = 8,
   parameter int unsigned MHPMCounterWidth = 40,
   parameter bit RV32E                     = 0,

ParseResult:
INS HdlIdDef@@PMPEnable to params
HdlIdDef: PMPEnable
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: bit
    HdlValueInt: 0
    HdlDirection: INTERNAL

INS HdlIdDef@@PMPGranularity to params
HdlIdDef: PMPGranularity
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: int
            HdlOp: MAP_ASSOCIATION
                list: ops
                    HdlValueId: signed
    HdlValueInt: 0
    HdlDirection: INTERNAL

INS HdlIdDef@@PMPNumRegions to params
HdlIdDef: PMPNumRegions
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: int
            HdlOp: MAP_ASSOCIATION
                list: ops
                    HdlValueId: signed
    HdlValueInt: 4
    HdlDirection: INTERNAL


CommitId: eef49a584162a29737680efa7101b19c63f8fb88
Update pulp_riscv_dbg to pulp-platform/riscv-dbg@e67a0a7
--- a/hw/vendor/pulp_riscv_dbg/src/dmi_jtag.sv
+++ b/hw/vendor/pulp_riscv_dbg/src/dmi_jtag.sv
@@ -131,8 +131,15 @@ module dmi_jtag #(
 
       Write: begin
         dmi_req_valid = 1'b1;
-        // got a valid answer go back to idle
+        // request sent, wait for response before going back to idle
         if (dmi_req_ready) begin
+          state_d = WaitWriteValid;
+        end
+      end
+
+      WaitWriteValid: begin
+        // got a valid answer go back to idle
+        if (dmi_resp_valid) begin
           state_d = Idle;
         end
       end

ParseResult:
UPD HdlStmCase@@state_q to state_q
    INS tuple@@ to cases
    tuple
        HdlValueId: WaitWriteValid
        HdlStmBlock: SEQ
            list: body
                HdlStmIf
                    HdlValueId: dmi_resp_valid
                    HdlStmBlock: SEQ
                        list: body
                            HdlOp: ASSIGN
                                list: ops
                                    HdlValueId: state_d
                                    HdlValueId: Idle
                    list: elifs

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@Idle to WaitWriteValid


CommitId: eef49a584162a29737680efa7101b19c63f8fb88
Update pulp_riscv_dbg to pulp-platform/riscv-dbg@e67a0a7
--- a/hw/vendor/pulp_riscv_dbg/src/dmi_jtag.sv
+++ b/hw/vendor/pulp_riscv_dbg/src/dmi_jtag.sv
@@ -162,7 +169,7 @@ module dmi_jtag #(
       error_d = DMIBusy;
     end
     // clear sticky error flag
-    if (dmi_reset && dtmcs_select) begin
+    if (update_dr && dmi_reset && dtmcs_select) begin
       error_d = DMINoError;
     end
   end
ParseResult:
UPD HdlStmIf@@ to 
    UPD HdlOp@@AND_LOG to AND_LOG
        MOV HdlValueId@@dmi_reset to ops
        HdlValueId: dmi_reset


CommitId: a17530f0a51524486c59b0c8d5295d6ded247ec2
[usbdev] USB device update from ETH repo
--- a/hw/ip/usbdev/rtl/usbdev.sv
+++ b/hw/ip/usbdev/rtl/usbdev.sv
@@ -102,7 +140,6 @@ module usbdev (
 
   logic              av_fifo_wready;
   logic              event_pkt_received;
-  logic              usbdev_rst_n;
   logic              usb_av_rvalid, usb_av_rready;
   logic              usb_rx_wvalid, usb_rx_wready;
   logic              rx_fifo_rvalid;

ParseResult:
MOV HdlIdDef@@usbdev_rst_n to objs
HdlIdDef: usbdev_rst_n
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

UPD HdlIdDef@@usbdev_rst_n to usb_tx_d


CommitId: a17530f0a51524486c59b0c8d5295d6ded247ec2
[usbdev] USB device update from ETH repo
--- a/hw/ip/usbdev/rtl/usbdev.sv
+++ b/hw/ip/usbdev/rtl/usbdev.sv
@@ -111,7 +148,6 @@ module usbdev (
   logic [RXFifoWidth - 1:0] usb_rx_wdata, rx_rdata;
 
   assign event_av_overflow = reg2hw.avbuffer.qe & (~av_fifo_wready);
-  assign usbdev_rst_n = rst_ni;
   assign hw2reg.usbstat.av_full.d = ~av_fifo_wready;
   assign hw2reg.usbstat.rx_empty.d = ~rx_fifo_rvalid;
 

ParseResult:
DEL HdlStmAssign@@ from objs
HdlStmAssign
    HdlValueId: rst_ni
    HdlValueId: usbdev_rst_n


CommitId: a17530f0a51524486c59b0c8d5295d6ded247ec2
[usbdev] USB device update from ETH repo
--- a/hw/ip/usbdev/rtl/usbdev.sv
+++ b/hw/ip/usbdev/rtl/usbdev.sv
@@ -168,16 +204,20 @@ module usbdev (
   logic [NBufWidth-1:0]  usb_in_buf [NEndpoints];
   logic [SizeWidth:0]    usb_in_size [NEndpoints];
   logic [3:0]            usb_in_endpoint;
-  logic [NEndpoints-1:0] ep_stall, usb_in_rdy;
+  logic [NEndpoints-1:0] usb_in_rdy;
   logic [NEndpoints-1:0] clear_rdybit, set_sentbit, update_pend;
-  logic                  usb_out_clear_rdy, out_clear_rdy, usb_set_sent, set_sent;
-  logic [NEndpoints-1:0] enable_setup, enable_out;
-  logic [NEndpoints-1:0] usb_in_rdy_async;
-
+  logic                  usb_setup_received, setup_received, usb_set_sent, set_sent;
+  logic [NEndpoints-1:0] ep_iso;
+  logic [NEndpoints-1:0] enable_setup, enable_out, ep_stall;
+  logic [NEndpoints-1:0] usb_enable_setup, usb_enable_out, usb_ep_stall;
+  logic [NEndpoints-1:0] in_rdy_async;
+  logic [3:0]            usb_out_endpoint;
+
+  // RX enables
   always_comb begin : proc_map_rxenable
     for (int i = 0; i < NEndpoints; i++) begin
       enable_setup[i] = reg2hw.rxenable_setup[i].q;
-      enable_out[i] = reg2hw.rxenable_out[i].q;
+      enable_out[i]   = reg2hw.rxenable_out[i].q;
     end
   end
 

ParseResult:
MOV HdlIdDef@@usb_out_clear_rdy to objs
HdlIdDef: usb_out_clear_rdy
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

MOV HdlIdDef@@ep_stall to objs
HdlIdDef: ep_stall
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlOp: SUB
                        list: ops
                            HdlValueId: NEndpoints
                            HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: INTERNAL

UPD HdlIdDef@@out_clear_rdy to usb_setup_received

UPD HdlIdDef@@usb_out_clear_rdy to setup_received

INS HdlIdDef@@ep_iso to objs
HdlIdDef: ep_iso
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlOp: SUB
                        list: ops
                            HdlValueId: NEndpoints
                            HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: INTERNAL

INS HdlIdDef@@usb_enable_setup to objs
HdlIdDef: usb_enable_setup
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlOp: SUB
                        list: ops
                            HdlValueId: NEndpoints
                            HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: INTERNAL

INS HdlIdDef@@usb_enable_out to objs
HdlIdDef: usb_enable_out
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlOp: SUB
                        list: ops
                            HdlValueId: NEndpoints
                            HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: INTERNAL

INS HdlIdDef@@usb_ep_stall to objs
HdlIdDef: usb_ep_stall
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlOp: SUB
                        list: ops
                            HdlValueId: NEndpoints
                            HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: INTERNAL

UPD HdlIdDef@@usb_in_rdy_async to in_rdy_async

INS HdlIdDef@@usb_out_endpoint to objs
HdlIdDef: usb_out_endpoint
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 3
                    HdlValueInt: 0
    HdlDirection: INTERNAL


CommitId: a17530f0a51524486c59b0c8d5295d6ded247ec2
[usbdev] USB device update from ETH repo
--- a/hw/ip/usbdev/rtl/usbdev.sv
+++ b/hw/ip/usbdev/rtl/usbdev.sv
@@ -258,14 +380,22 @@ module usbdev (
   end
 
   always_comb begin
-    clear_rdybit = '0;
-    update_pend  = '0;
+    clear_rdybit = {NEndpoints{1'b0}};
+    update_pend  = {NEndpoints{1'b0}};
     if (event_link_reset && !event_link_reset_q) begin
       clear_rdybit = {NEndpoints{1'b1}};
       update_pend  = {NEndpoints{1'b1}};
     end else begin
-      clear_rdybit[usb_in_endpoint] = set_sent | out_clear_rdy;  // lint: usb_in_endpoint range was checked
-      update_pend[usb_in_endpoint]  = out_clear_rdy;  // lint: usb_in_endpoint range was checked
+      // Clear pending when a SETUP is received
+      // CDC: usb_out_endpoint is synchronized implicitly by
+      // setup_received, as it is stable 
+      clear_rdybit[usb_out_endpoint] = setup_received;
+      update_pend[usb_out_endpoint]  = setup_received;
+
+      // Clear when a IN transmission was sucessful
+      // CDC: usb_in_endpoint is synchronzied implicitly by
+      // set_sent
+      clear_rdybit[usb_in_endpoint] = set_sent;
     end
   end
 

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlOp@@FALLING to FALLING
        UPD HdlValueId@@rst_ni to rst_usb_ni

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlOp: INDEX
                    list: ops
                        HdlValueId: clear_rdybit
                        HdlValueId: usb_in_endpoint
                HdlOp: OR
                    list: ops
                        HdlValueId: set_sent
                        HdlValueId: out_clear_rdy
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@out_clear_rdy to setup_received
            UPD HdlOp@@INDEX to INDEX
                UPD HdlValueId@@usb_in_endpoint to usb_out_endpoint
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@OR to OR
                MOV HdlValueId@@set_sent to ops
                HdlValueId: set_sent
                DEL HdlValueId@@out_clear_rdy from ops
                DEL list@@ops from OR
            DEL HdlOp@@OR from ops

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            MOV HdlValueInt@@0 to ops
            HdlValueInt: 0
        UPD HdlOp@@ASSIGN to ASSIGN
            MOV HdlValueInt@@0 to ops
            HdlValueInt: 0


CommitId: a17530f0a51524486c59b0c8d5295d6ded247ec2
[usbdev] USB device update from ETH repo
--- a/hw/ip/usbdev/rtl/usbdev.sv
+++ b/hw/ip/usbdev/rtl/usbdev.sv
@@ -372,7 +531,7 @@ module usbdev (
   prim_pulse_sync usbdev_resume (
     .clk_src_i   (clk_usb_48mhz_i),
     .clk_dst_i   (clk_i),
-    .rst_src_ni  (rst_ni),
+    .rst_src_ni  (rst_usb_ni),
     .rst_dst_ni  (rst_ni),
     .src_pulse_i (usb_event_link_resume),
     .dst_pulse_o (event_link_resume)

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlOp@@REPL_CONCAT to ops
            UPD HdlOp@@REPL_CONCAT to REPL_CONCAT
                INS list@@ops to REPL_CONCAT
                INS HdlValueId@@NEndpoints to ops
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlOp@@REPL_CONCAT to ops
            UPD HdlOp@@REPL_CONCAT to REPL_CONCAT
                INS list@@ops to REPL_CONCAT
                INS HdlValueId@@NEndpoints to ops

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlOp: INDEX
                    list: ops
                        HdlValueId: clear_rdybit
                        HdlValueId: usb_out_endpoint
                HdlValueId: setup_received


CommitId: 151991161cdb9063b5a79d908d33520ec912f14f
[ast] Add Fix AscentLint Errors
--- a/hw/top_earlgrey/ip/ast/rtl/rng.sv
+++ b/hw/top_earlgrey/ip/ast/rtl/rng.sv
@@ -102,4 +102,11 @@ always_ff @( posedge clk_ast_rng_i, negedge rst_ast_rng_ni ) begin
   end
 end
 
+
+///////////////////////
+// Unused Signals
+///////////////////////
+logic unused_sigs;
+assign unused_sigs = ^{ rng_fips_i };  // Used in ASIC implementation
+
 endmodule : rng
ParseResult:
INS HdlIdDef@@unused_sigs to objs
HdlIdDef: unused_sigs
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: XOR_UNARY
        list: ops
            HdlValueId: rng_fips_i
    HdlValueId: unused_sigs


CommitId: 730d504aabad67d23dc43f281442acfb0f727d43
[usbdev] Fix two bugs for packets of length 63/64
--- a/hw/ip/usbdev/rtl/usbdev_usbif.sv
+++ b/hw/ip/usbdev/rtl/usbdev_usbif.sv
@@ -101,7 +101,7 @@ module usbdev_usbif  #(
   logic [NEndpoints-1:0]             out_ep_setup, out_ep_full, out_ep_stall;
   logic [NEndpoints-1:0]             setup_blocked, out_blocked;
   logic [31:0]                       wdata;
-  logic                              std_write, mem_read;
+  logic                              mem_read;
   logic [SramAw-1:0]                 mem_waddr, mem_raddr;
   logic                              link_reset;
   logic                              sof_valid;

ParseResult:
MOV HdlIdDef@@std_write to objs
HdlIdDef: std_write
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

UPD HdlIdDef@@std_write to std_write_d


CommitId: 730d504aabad67d23dc43f281442acfb0f727d43
[usbdev] Fix two bugs for packets of length 63/64
--- a/hw/ip/usbdev/rtl/usbdev_usbif.sv
+++ b/hw/ip/usbdev/rtl/usbdev_usbif.sv
@@ -114,28 +114,37 @@ module usbdev_usbif  #(
   always_comb begin
     if (out_ep_acked || out_ep_rollback) begin
       out_max_used_d = 0;
+      
     end else if (out_ep_data_put) begin
       // In the normal case <MaxPktSizeByte this is out_max_used_q <= out_ep_put_addr
       // Following all ones out_max_used_q will get 1,00..00 and 1,00..01 to cover
       // one and two bytes of the CRC overflowing, then stick at 1,00..01
+      if (out_max_used_q < MaxPktSizeByte - 1) begin
+        out_max_used_d = out_ep_put_addr;
+      end else if (out_max_used_q < MaxPktSizeByte + 1) begin
+        out_max_used_d = out_max_used_q + 1;
+      end else begin
+        out_max_used_d = out_max_used_q;
+      end
 
-      // TODO: This code should be re-written to be more human-readable, in the
-      // current state is hard to understand or verify
-      out_max_used_d[0] = (out_max_used_q[PktW] & out_max_used_q[0]) ? 1'b1 : out_ep_put_addr[0];
-      out_max_used_d[PktW - 1: 1] = out_max_used_q[PktW] ? '0 : out_ep_put_addr[PktW - 1:1];
-      out_max_used_d[PktW] = (&out_max_used_q[PktW - 1:0]) | out_max_used_q[PktW];
     end else begin
       out_max_used_d = out_max_used_q;
     end
   end // always_comb
 
+  // don't write if the address has wrapped (happens for two CRC bytes after max data)
+  logic std_write_d, std_write_q;
+  assign std_write_d = out_ep_data_put & ((out_max_used_q < MaxPktSizeByte - 1) & (out_ep_put_addr[1:0] == 2'b11));
+
+
   always_ff @(posedge clk_48mhz_i or negedge rst_ni) begin
     if (!rst_ni) begin
       out_max_used_q <= '0;
       wdata          <= '0;
-      std_write      <= 1'b0;
+      std_write_q    <= 1'b0;
     end else begin
       out_max_used_q <= out_max_used_d;
+      std_write_q    <= std_write_d;
       if (out_ep_data_put) begin
         unique case (out_ep_put_addr[1:0])
           0: begin

ParseResult:
INS HdlStmProcess@@ to objs

INS HdlIdDef@@std_write_q to objs
HdlIdDef: std_write_q
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

INS HdlStmAssign@@ to objs

UPD HdlStmProcess@@ to 
    INS HdlStmBlock@@SEQ to 
    INS HdlStmProcessTriggerConstrain@@COMB to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmAssign@@ to 
    INS HdlOp@@AND to 
    INS HdlValueId@@std_write_d to 
    UPD HdlOp@@AND to AND
        INS list@@ops to AND
        INS HdlValueId@@out_ep_data_put to ops
        UPD HdlOp@@AND to AND
            UPD HdlOp@@LT to LT
                INS HdlValueId@@out_max_used_q to ops
                UPD HdlOp@@SUB to SUB
                    INS HdlValueInt@@1 to ops

INS HdlStmIf@@ to body

UPD HdlStmIf@@ to 
    MOV HdlOp@@OR_LOG to 
    HdlOp: OR_LOG
        list: ops
            HdlValueId: out_ep_acked
            HdlValueId: out_ep_rollback
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: out_max_used_d
                    HdlValueInt: 0
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: out_max_used_d
                    HdlValueId: out_max_used_q
    DEL list@@elifs from 
    list: elifs
        tuple
            HdlValueId: out_ep_data_put
            HdlStmBlock: SEQ
                list: body
                    HdlOp: ASSIGN
                        list: ops
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: out_max_used_d
                                    HdlValueInt: 0
                            HdlOp: TERNARY
                                list: ops
                                    HdlOp: AND
                                        list: ops
                                            HdlOp: INDEX
                                                list: ops
                                                    HdlValueId: out_max_used_q
                                                    HdlValueId: PktW
                                            HdlOp: INDEX
                                                list: ops
                                                    HdlValueId: out_max_used_q
                                                    HdlValueInt: 0
                                    HdlValueInt: 1
                                    HdlOp: INDEX
                                        list: ops
                                            HdlValueId: out_ep_put_addr
                                            HdlValueInt: 0
                    HdlOp: ASSIGN
                        list: ops
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: out_max_used_d
                                    HdlOp: DOWNTO
                                        list: ops
                                            HdlOp: SUB
                                                list: ops
                                                    HdlValueId: PktW
                                                    HdlValueInt: 1
                                            HdlValueInt: 1
                            HdlOp: TERNARY
                                list: ops
                                    HdlOp: INDEX
                                        list: ops
                                            HdlValueId: out_max_used_q
                                            HdlValueId: PktW
                                    HdlValueInt: 0
                                    HdlOp: INDEX
                                        list: ops
                                            HdlValueId: out_ep_put_addr
                                            HdlOp: DOWNTO
                                                list: ops
                                                    HdlOp: SUB
                                                        list: ops
                                                            HdlValueId: PktW
                                                            HdlValueInt: 1
                                                    HdlValueInt: 1
                    HdlOp: ASSIGN
                        list: ops
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: out_max_used_d
                                    HdlValueId: PktW
                            HdlOp: OR
                                list: ops
                                    HdlOp: AND_UNARY
                                        list: ops
                                            HdlOp: INDEX
                                                list: ops
                                                    HdlValueId: out_max_used_q
                                                    HdlOp: DOWNTO
                                                        list: ops
                                                            HdlOp: SUB
                                                                list: ops
                                                                    HdlValueId: PktW
                                                                    HdlValueInt: 1
                                                            HdlValueInt: 0
                                    HdlOp: INDEX
                                        list: ops
                                            HdlValueId: out_max_used_q
                                            HdlValueId: PktW

UPD HdlStmIf@@ to 
    INS list@@elifs to 
    list: elifs
        tuple
            HdlValueId: out_ep_data_put
            HdlStmBlock: SEQ
                list: body
                    HdlStmIf
                        HdlOp: LT
                            list: ops
                                HdlValueId: out_max_used_q
                                HdlOp: SUB
                                    list: ops
                                        HdlValueId: MaxPktSizeByte
                                        HdlValueInt: 1
                        HdlStmBlock: SEQ
                            list: body
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: out_max_used_d
                                        HdlValueId: out_ep_put_addr
                        list: elifs
                            tuple
                                HdlOp: LT
                                    list: ops
                                        HdlValueId: out_max_used_q
                                        HdlOp: ADD
                                            list: ops
                                                HdlValueId: MaxPktSizeByte
                                                HdlValueInt: 1
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: out_max_used_d
                                                HdlOp: ADD
                                                    list: ops
                                                        HdlValueId: out_max_used_q
                                                        HdlValueInt: 1
                        HdlStmBlock: SEQ
                            list: body
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: out_max_used_d
                                        HdlValueId: out_max_used_q

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueId: std_write_d
    HdlValueId: std_write_q

UPD HdlStmAssign@@ to 
    UPD HdlValueId@@std_write to std_write_q

DEL HdlStmIf@@ from body

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL HdlStmProcessTriggerConstrain@@COMB from 

DEL HdlStmProcess@@ from objs

UPD HdlStmIf@@ to 
    DEL HdlStmBlock@@SEQ from 
    HdlStmBlock: SEQ
        list: body
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: std_write


CommitId: 730d504aabad67d23dc43f281442acfb0f727d43
[usbdev] Fix two bugs for packets of length 63/64
--- a/hw/ip/usbdev/rtl/usbdev_usbif.sv
+++ b/hw/ip/usbdev/rtl/usbdev_usbif.sv
@@ -151,20 +160,12 @@ module usbdev_usbif  #(
             wdata[31:24] <= out_ep_data;
           end
         endcase
-        // don't write if the address has wrapped (happens for two CRC bytes after max data)
-        if (!out_max_used_q[PktW] && (out_ep_put_addr[1:0] == 2'b11)) begin
-          std_write <= 1'b1;
-        end else begin
-          std_write <= 1'b0;
-        end
-      end else begin
-        std_write <= 1'b0;
       end
     end
   end // always_ff @ (posedge clk_48mhz_i)
 
   // need extra write at end if packet not multiple of 4 bytes
-  assign mem_write_o = std_write |
+  assign mem_write_o = std_write_q |
                        (~out_max_used_q[PktW] & (out_max_used_q[1:0] != 2'b11) & out_ep_acked);
   assign mem_waddr = {av_rdata_i, out_max_used_q[PktW-1:2]};
   assign mem_wdata_o = wdata;
ParseResult:
UPD HdlStmIf@@ to 
    UPD HdlOp@@AND_LOG to AND
    MOV HdlOp@@AND_LOG to 
    HdlOp: AND_LOG
        list: ops
            HdlOp: NEG_LOG
                list: ops
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: out_max_used_q
                            HdlValueId: PktW
            HdlOp: EQ
                list: ops
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: out_ep_put_addr
                            HdlOp: DOWNTO
                                list: ops
                                    HdlValueInt: 1
                                    HdlValueInt: 0
                    HdlValueInt: 11
    UPD HdlOp@@AND_LOG to AND_LOG
        UPD HdlOp@@NEG_LOG to LT
        UPD HdlOp@@NEG_LOG to NEG_LOG
            UPD HdlOp@@INDEX to SUB
            UPD HdlOp@@INDEX to INDEX
                UPD HdlValueId@@PktW to MaxPktSizeByte
                DEL HdlValueId@@out_max_used_q from ops
    DEL HdlStmBlock@@SEQ from 
    HdlStmBlock: SEQ
        list: body
            HdlStmAssign
                HdlValueInt: 1
                HdlValueId: std_write
    DEL list@@elifs from 
    DEL HdlStmBlock@@SEQ from 
    HdlStmBlock: SEQ
        list: body
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: std_write

UPD HdlStmAssign@@ to 
    UPD HdlOp@@OR to OR
        UPD HdlValueId@@std_write to std_write_q

DEL HdlStmIf@@ from body

UPD HdlStmIf@@ to 
    DEL HdlStmBlock@@SEQ from 
    HdlStmBlock: SEQ
        list: body
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: std_write


CommitId: a17530f0a51524486c59b0c8d5295d6ded247ec2
[usbdev] USB device update from ETH repo
--- a/hw/ip/usbdev/rtl/usbdev_linkstate.sv
+++ b/hw/ip/usbdev/rtl/usbdev_linkstate.sv
@@ -184,12 +303,12 @@ module usbdev_linkstate (
   assign host_lost_o = host_presence_timer[12];
   always_ff @(posedge clk_48mhz_i or negedge rst_ni) begin
     if (!rst_ni) begin
-      host_presence_timer <= '0;
+      host_presence_timer <= 0;
     end else begin
-      if (sof_valid_i || !link_active) begin
-        host_presence_timer <= '0;
+      if (sof_valid_i || !link_active || link_reset) begin
+        host_presence_timer <= 0;
       end else if (us_tick_i && !host_lost_o) begin
-        host_presence_timer <= host_presence_timer + 1'b1;
+        host_presence_timer <= host_presence_timer + 1;
       end
     end
   end
ParseResult:
UPD HdlStmProcess@@ to 
    INS HdlStmBlock@@SEQ to 
    INS HdlStmProcessTriggerConstrain@@COMB to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: ev_reset
                HdlValueInt: 0
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: link_reset
                HdlValueInt: 0

UPD HdlStmCase@@link_rst_state_q to link_rst_state_q
    INS HdlStmCaseType@@CASE to link_rst_state_q
    INS HdlValueId@@link_rst_state_q to link_rst_state_q
    INS list@@cases to link_rst_state_q
    INS HdlOp@@ASSIGN to link_rst_state_q
    HdlOp: ASSIGN
        list: ops
            HdlValueId: link_rst_state_d
            HdlValueId: NoRst
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS HdlStmBlock@@SEQ to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@RstPend to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: link_reset
                HdlValueInt: 1

UPD HdlStmIf@@ to 
    INS HdlValueId@@see_se0 to 
    INS HdlStmBlock@@SEQ to 
    INS list@@elifs to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: link_rst_timer_d
                HdlValueInt: 0

UPD HdlStmIf@@ to 
    INS HdlStmBlock@@SEQ to 
    INS list@@elifs to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
        INS HdlOp@@ASSIGN to body
        UPD HdlOp@@ASSIGN to ASSIGN
            INS list@@ops to ASSIGN
            INS HdlValueId@@link_rst_state_d to ops
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmIf@@ to 
    MOV HdlOp@@OR_LOG to 
    HdlOp: OR_LOG
        list: ops
            HdlValueId: sof_valid_i
            HdlOp: NEG_LOG
                list: ops
                    HdlValueId: link_active


CommitId: 309a47974f0ce84cab3d559a85975448dfbd7e2f
[prim] Use prim_pkg::impl_e instead of int for Impl
--- a/hw/ip/prim/abstract/prim_clock_gating.sv
+++ b/hw/ip/prim/abstract/prim_clock_gating.sv
@@ -6,11 +6,11 @@
 // "abstract module". This module is to be replaced by generated code.
 
 `ifndef PRIM_DEFAULT_IMPL
-  `define PRIM_DEFAULT_IMPL integer'(prim_pkg::ImplGeneric)
+  `define PRIM_DEFAULT_IMPL prim_pkg::ImplGeneric
 `endif
 
 module prim_clock_gating #(
-  parameter integer Impl = `PRIM_DEFAULT_IMPL
+  parameter prim_pkg::impl_e Impl = `PRIM_DEFAULT_IMPL
 ) (
   input        clk_i,
   input        en_i,

ParseResult:
UPD HdlIdDef@@Impl to Impl
    INS HdlOp@@DOUBLE_COLON to Impl
    INS HdlOp@@DOUBLE_COLON to Impl
    HdlOp: DOUBLE_COLON
        list: ops
            HdlValueId: prim_pkg
            HdlValueId: ImplGeneric
    UPD HdlOp@@DOUBLE_COLON to DOUBLE_COLON
        INS list@@ops to DOUBLE_COLON
        INS HdlValueId@@prim_pkg to ops

UPD HdlIdDef@@Impl to Impl
    UPD HdlValueId@@integer to impl_e
    MOV HdlValueId@@integer to Impl
    HdlValueId: integer
    DEL HdlExprNotImplemented@@value from Impl


CommitId: 309a47974f0ce84cab3d559a85975448dfbd7e2f
[prim] Use prim_pkg::impl_e instead of int for Impl
--- a/hw/ip/prim/abstract/prim_clock_gating.sv
+++ b/hw/ip/prim/abstract/prim_clock_gating.sv
@@ -20,14 +20,14 @@ module prim_clock_gating #(
 
   import prim_pkg::*;
 
-  if (impl_e'(Impl) == ImplGeneric) begin : gen_generic
+  if (Impl == ImplGeneric) begin : gen_generic
     prim_generic_clock_gating u_impl_generic (
       .clk_i,
       .en_i,
       .test_en_i,
       .clk_o
     );
-  end else if (impl_e'(Impl) == ImplXilinx) begin : gen_xilinx
+  end else if (Impl == ImplXilinx) begin : gen_xilinx
     prim_xilinx_clock_gating u_impl_xilinx (
       .clk_i,
       .en_i,
ParseResult:
UPD HdlStmIf@@ to 
    UPD HdlOp@@EQ to EQ
        UPD HdlOp@@CALL to CALL
            MOV HdlValueId@@Impl to ops
            HdlValueId: Impl
            DEL HdlValueId@@impl_e from ops
            DEL list@@ops from CALL
        DEL HdlOp@@CALL from ops
    UPD HdlOp@@EQ to EQ
        UPD HdlOp@@CALL to CALL
            MOV HdlValueId@@Impl to ops
            HdlValueId: Impl
            DEL HdlValueId@@impl_e from ops
            DEL list@@ops from CALL
        DEL HdlOp@@CALL from ops


CommitId: b1ba59b519d632b1ef7f2dda4ece681d6c65b0b8
[flash / top / ast] functional updates
--- a/hw/ip/prim_generic/rtl/prim_generic_flash.sv
+++ b/hw/ip/prim_generic/rtl/prim_generic_flash.sv
@@ -18,8 +18,6 @@ module prim_generic_flash #(
 ) (
   input clk_i,
   input rst_ni,
-  input tlul_pkg::tl_h2d_t tl_i,
-  output tlul_pkg::tl_d2h_t tl_o,
   input flash_phy_pkg::flash_phy_prim_flash_req_t [NumBanks-1:0] flash_req_i,
   output flash_phy_pkg::flash_phy_prim_flash_rsp_t [NumBanks-1:0] flash_rsp_o,
   output logic [flash_phy_pkg::ProgTypes-1:0] prog_type_avail_o,

ParseResult:
MOV HdlIdDef@@tl_i to ports
HdlIdDef: tl_i
    HdlOp: DOUBLE_COLON
        list: ops
            HdlValueId: tlul_pkg
            HdlValueId: tl_h2d_t
    HdlDirection: IN

MOV HdlIdDef@@tl_o to ports
HdlIdDef: tl_o
    HdlOp: DOUBLE_COLON
        list: ops
            HdlValueId: tlul_pkg
            HdlValueId: tl_d2h_t
    HdlDirection: OUT


CommitId: b1ba59b519d632b1ef7f2dda4ece681d6c65b0b8
[flash / top / ast] functional updates
--- a/hw/ip/prim_generic/rtl/prim_generic_flash.sv
+++ b/hw/ip/prim_generic/rtl/prim_generic_flash.sv
@@ -28,12 +26,15 @@ module prim_generic_flash #(
   input tdi_i,
   input tms_i,
   output logic tdo_o,
+  input bist_enable_i,
   input scanmode_i,
   input scan_rst_ni,
   input flash_power_ready_h_i,
   input flash_power_down_h_i,
   input [TestModeWidth-1:0] flash_test_mode_a_i,
-  input flash_test_voltage_h_i
+  input flash_test_voltage_h_i,
+  input tlul_pkg::tl_h2d_t tl_i,
+  output tlul_pkg::tl_d2h_t tl_o
 );
 
   localparam int CfgRegs = 21;

ParseResult:
INS HdlIdDef@@bist_enable_i to ports
HdlIdDef: bist_enable_i
    HdlValueId: wire
    HdlDirection: IN


CommitId: b1ba59b519d632b1ef7f2dda4ece681d6c65b0b8
[flash / top / ast] functional updates
--- a/hw/ip/prim_generic/rtl/prim_generic_flash.sv
+++ b/hw/ip/prim_generic/rtl/prim_generic_flash.sv
@@ -156,5 +156,7 @@ module prim_generic_flash #(
     .rdata_o(cfg_rdata)
   );
 
+  logic unused_bist_enable;
+  assign unused_bist_enable = bist_enable_i;
 
 endmodule // prim_generic_flash
ParseResult:
INS HdlIdDef@@unused_bist_enable to objs
HdlIdDef: unused_bist_enable
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlValueId: bist_enable_i
    HdlValueId: unused_bist_enable


CommitId: 19044edfb0b9485031557705595840bea41fb33d
[prim_secded] Use _i/_o suffix for port names
--- a/hw/ip/prim/rtl/prim_secded_64_57_enc.sv
+++ b/hw/ip/prim/rtl/prim_secded_64_57_enc.sv
@@ -5,19 +5,19 @@
 // SECDED encoder generated by util/design/secded_gen.py
 
 module prim_secded_64_57_enc (
-  input        [56:0] in,
-  output logic [63:0] out
+  input        [56:0] data_i,
+  output logic [63:0] data_o
 );
 
   always_comb begin : p_encode
-    out = 64'(in);
-    out[57] = ^(out & 64'h0103FFF800007FFF);
-    out[58] = ^(out & 64'h017C1FF801FF801F);
-    out[59] = ^(out & 64'h01BDE1F87E0781E1);
-    out[60] = ^(out & 64'h01DEEE3B8E388E22);
-    out[61] = ^(out & 64'h01EF76CDB2C93244);
-    out[62] = ^(out & 64'h01F7BB56D5525488);
-    out[63] = ^(out & 64'h01FBDDA769A46910);
+    data_o = 64'(data_i);
+    data_o[57] = ^(data_o & 64'h0103FFF800007FFF);
+    data_o[58] = ^(data_o & 64'h017C1FF801FF801F);
+    data_o[59] = ^(data_o & 64'h01BDE1F87E0781E1);
+    data_o[60] = ^(data_o & 64'h01DEEE3B8E388E22);
+    data_o[61] = ^(data_o & 64'h01EF76CDB2C93244);
+    data_o[62] = ^(data_o & 64'h01F7BB56D5525488);
+    data_o[63] = ^(data_o & 64'h01FBDDA769A46910);
   end
 
 endmodule : prim_secded_64_57_enc
ParseResult:
UPD HdlIdDef@@in to data_i

UPD HdlIdDef@@out to data_o

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@out to data_o
            UPD HdlOp@@CALL to CALL
                UPD HdlValueId@@in to data_i
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@INDEX to INDEX
                UPD HdlValueId@@out to data_o
            UPD HdlOp@@XOR_UNARY to XOR_UNARY
                UPD HdlOp@@AND to AND
                    UPD HdlValueId@@out to data_o
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@INDEX to INDEX
                UPD HdlValueId@@out to data_o
            UPD HdlOp@@XOR_UNARY to XOR_UNARY
                UPD HdlOp@@AND to AND
                    UPD HdlValueId@@out to data_o
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@INDEX to INDEX
                UPD HdlValueId@@out to data_o
            UPD HdlOp@@XOR_UNARY to XOR_UNARY
                UPD HdlOp@@AND to AND
                    UPD HdlValueId@@out to data_o
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@INDEX to INDEX
                UPD HdlValueId@@out to data_o
            UPD HdlOp@@XOR_UNARY to XOR_UNARY
                UPD HdlOp@@AND to AND
                    UPD HdlValueId@@out to data_o
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@INDEX to INDEX
                UPD HdlValueId@@out to data_o
            UPD HdlOp@@XOR_UNARY to XOR_UNARY
                UPD HdlOp@@AND to AND
                    UPD HdlValueId@@out to data_o
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@INDEX to INDEX
                UPD HdlValueId@@out to data_o
            UPD HdlOp@@XOR_UNARY to XOR_UNARY
                UPD HdlOp@@AND to AND
                    UPD HdlValueId@@out to data_o
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@INDEX to INDEX
                UPD HdlValueId@@out to data_o
            UPD HdlOp@@XOR_UNARY to XOR_UNARY
                UPD HdlOp@@AND to AND
                    UPD HdlValueId@@out to data_o


CommitId: 43a6a1856f782d284be563d2021fc4db93e50f99
[dv/sram] add executable SRAM test
--- a/hw/ip/sram_ctrl/dv/sram_ctrl_wrapper.sv
+++ b/hw/ip/sram_ctrl/dv/sram_ctrl_wrapper.sv
@@ -34,7 +34,10 @@ module sram_ctrl_wrapper
   input lc_ctrl_pkg::lc_tx_t                        lc_escalate_en_i,
   // Key request to OTP
   output otp_ctrl_pkg::sram_otp_key_req_t           sram_otp_key_o,
-  input otp_ctrl_pkg::sram_otp_key_rsp_t            sram_otp_key_i
+  input otp_ctrl_pkg::sram_otp_key_rsp_t            sram_otp_key_i,
+  // Executable SRAM inputs
+  input lc_ctrl_pkg::lc_tx_t                        lc_hw_debug_en_i,
+  input otp_ctrl_part_pkg::otp_hw_cfg_t             otp_hw_cfg_i
 );
 
   // Scrambling key interface between sram_ctrl and scrambling RAM

ParseResult:
INS HdlIdDef@@lc_hw_debug_en_i to ports
HdlIdDef: lc_hw_debug_en_i
    HdlOp: DOUBLE_COLON
        list: ops
            HdlValueId: lc_ctrl_pkg
            HdlValueId: lc_tx_t
    HdlDirection: IN

INS HdlIdDef@@otp_hw_cfg_i to ports
HdlIdDef: otp_hw_cfg_i
    HdlOp: DOUBLE_COLON
        list: ops
            HdlValueId: otp_ctrl_part_pkg
            HdlValueId: otp_hw_cfg_t
    HdlDirection: IN


CommitId: 43a6a1856f782d284be563d2021fc4db93e50f99
[dv/sram] add executable SRAM test
--- a/hw/ip/sram_ctrl/dv/sram_ctrl_wrapper.sv
+++ b/hw/ip/sram_ctrl/dv/sram_ctrl_wrapper.sv
@@ -45,15 +48,16 @@ module sram_ctrl_wrapper
 
 
   // SRAM interface between TLUL adapter and scrambling RAM
-  wire                  req;
-  wire                  gnt;
-  wire                  we;
-  wire [AddrWidth-1:0]  addr;
-  wire [DataWidth-1:0]  wdata;
-  wire [DataWidth-1:0]  wmask;
-  wire [DataWidth-1:0]  rdata;
-  wire                  rvalid;
-  wire                  intg_error;
+  wire                    req;
+  wire                    gnt;
+  wire                    we;
+  wire [AddrWidth-1:0]    addr;
+  wire [DataWidth-1:0]    wdata;
+  wire [DataWidth-1:0]    wmask;
+  wire [DataWidth-1:0]    rdata;
+  wire                    rvalid;
+  wire                    intg_error;
+  tlul_pkg::tl_instr_en_e en_ifetch;
 
   // SRAM Controller
   sram_ctrl u_sram_ctrl (

ParseResult:
INS HdlIdDef@@en_ifetch to objs
HdlIdDef: en_ifetch
    HdlOp: DOUBLE_COLON
        list: ops
            HdlValueId: tlul_pkg
            HdlValueId: tl_instr_en_e
    HdlDirection: INTERNAL


CommitId: 55fd78e67b61c8ec2a4e9a23277c530eef242eb9
Update lowrisc_ibex to lowRISC/ibex@f025236
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_cs_registers.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_cs_registers.sv
@@ -596,7 +596,7 @@ module ibex_cs_registers #(
       mtval_q        <= '0;
       mtvec_q        <= 32'b01;
       dcsr_q         <= '{
-          xdebugver: XDEBUGVER_NO,   // 4'h0
+          xdebugver: XDEBUGVER_STD,
           cause:     DBG_CAUSE_NONE, // 3'h0
           prv:       PRIV_LVL_M,
           default:   '0
ParseResult:
UPD HdlStmAssign@@ to 
    UPD HdlOp@@MAP_ASSOCIATION to MAP_ASSOCIATION
        UPD HdlValueId@@XDEBUGVER_NO to XDEBUGVER_STD


CommitId: 19044edfb0b9485031557705595840bea41fb33d
[prim_secded] Use _i/_o suffix for port names
--- a/hw/ip/prim/rtl/prim_secded_28_22_enc.sv
+++ b/hw/ip/prim/rtl/prim_secded_28_22_enc.sv
@@ -5,18 +5,18 @@
 // SECDED encoder generated by util/design/secded_gen.py
 
 module prim_secded_28_22_enc (
-  input        [21:0] in,
-  output logic [27:0] out
+  input        [21:0] data_i,
+  output logic [27:0] data_o
 );
 
   always_comb begin : p_encode
-    out = 28'(in);
-    out[22] = ^(out & 28'h03003FF);
-    out[23] = ^(out & 28'h010FC0F);
-    out[24] = ^(out & 28'h0271C71);
-    out[25] = ^(out & 28'h03B6592);
-    out[26] = ^(out & 28'h03DAAA4);
-    out[27] = ^(out & 28'h03ED348);
+    data_o = 28'(data_i);
+    data_o[22] = ^(data_o & 28'h03003FF);
+    data_o[23] = ^(data_o & 28'h010FC0F);
+    data_o[24] = ^(data_o & 28'h0271C71);
+    data_o[25] = ^(data_o & 28'h03B6592);
+    data_o[26] = ^(data_o & 28'h03DAAA4);
+    data_o[27] = ^(data_o & 28'h03ED348);
   end
 
 endmodule : prim_secded_28_22_enc
ParseResult:
UPD HdlIdDef@@in to data_i

UPD HdlIdDef@@out to data_o

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@out to data_o
            UPD HdlOp@@CALL to CALL
                UPD HdlValueId@@in to data_i
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@INDEX to INDEX
                UPD HdlValueId@@out to data_o
            UPD HdlOp@@XOR_UNARY to XOR_UNARY
                UPD HdlOp@@AND to AND
                    UPD HdlValueId@@out to data_o
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@INDEX to INDEX
                UPD HdlValueId@@out to data_o
            UPD HdlOp@@XOR_UNARY to XOR_UNARY
                UPD HdlOp@@AND to AND
                    UPD HdlValueId@@out to data_o
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@INDEX to INDEX
                UPD HdlValueId@@out to data_o
            UPD HdlOp@@XOR_UNARY to XOR_UNARY
                UPD HdlOp@@AND to AND
                    UPD HdlValueId@@out to data_o
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@INDEX to INDEX
                UPD HdlValueId@@out to data_o
            UPD HdlOp@@XOR_UNARY to XOR_UNARY
                UPD HdlOp@@AND to AND
                    UPD HdlValueId@@out to data_o
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@INDEX to INDEX
                UPD HdlValueId@@out to data_o
            UPD HdlOp@@XOR_UNARY to XOR_UNARY
                UPD HdlOp@@AND to AND
                    UPD HdlValueId@@out to data_o
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@INDEX to INDEX
                UPD HdlValueId@@out to data_o
            UPD HdlOp@@XOR_UNARY to XOR_UNARY
                UPD HdlOp@@AND to AND
                    UPD HdlValueId@@out to data_o


CommitId: d593f3cd5c12a7f419dff4eecf7b05ccbdb5079c
[secded_gen] Fix template bug that results in lint error
--- a/hw/ip/prim/rtl/prim_secded_72_64_dec.sv
+++ b/hw/ip/prim/rtl/prim_secded_72_64_dec.sv
@@ -12,7 +12,6 @@ module prim_secded_72_64_dec (
   output logic [1:0] err_o
 );
 
-  logic single_error;
 
   // Syndrome calculation
   assign syndrome_o[0] = ^(in & 72'h019B000000001FFFFF);

ParseResult:
DEL HdlIdDef@@single_error from objs
HdlIdDef: single_error
    HdlDirection: INTERNAL


CommitId: d593f3cd5c12a7f419dff4eecf7b05ccbdb5079c
[secded_gen] Fix template bug that results in lint error
--- a/hw/ip/prim/rtl/prim_secded_72_64_dec.sv
+++ b/hw/ip/prim/rtl/prim_secded_72_64_dec.sv
@@ -91,8 +90,7 @@ module prim_secded_72_64_dec (
   assign d_o[63] = (syndrome_o == 8'hd5) ^ in[63];
 
   // err_o calc. bit0: single error, bit1: double error
-  assign single_error = ^syndrome_o;
-  assign err_o[0] =  single_error;
-  assign err_o[1] = ~single_error & (|syndrome_o);
+  assign err_o[0] = ^syndrome_o;
+  assign err_o[1] = ~err_o[0] & (|syndrome_o);
 
 endmodule : prim_secded_72_64_dec
ParseResult:
UPD HdlStmAssign@@ to 
    MOV HdlOp@@INDEX to 
    HdlOp: INDEX
        list: ops
            HdlValueId: err_o
            HdlValueInt: 0
    DEL HdlValueId@@single_error from 

UPD HdlStmAssign@@ to 
    UPD HdlOp@@AND to AND
        UPD HdlOp@@NEG to NEG
            INS list@@ops to NEG
            INS HdlOp@@INDEX to ops
            UPD HdlOp@@INDEX to INDEX
                INS HdlValueInt@@0 to ops

UPD HdlStmAssign@@ to 
    UPD HdlOp@@AND to AND
        UPD HdlOp@@NEG to NEG
            MOV list@@ops to NEG
            list: ops
                HdlValueId: single_error
            UPD HdlValueId@@single_error to err_o

UPD HdlStmAssign@@ to 
    DEL HdlValueId@@single_error from 

DEL HdlStmAssign@@ from objs


CommitId: 627f782f3648293efd398045a5959509f255eacc
[usbdev dv] Initial dv bench
--- a/hw/ip/usbdev/rtl/usbdev.sv
+++ b/hw/ip/usbdev/rtl/usbdev.sv
@@ -14,8 +14,8 @@ module usbdev (
   input  logic       rst_usb_ni, // async reset, with relase sync to clk_usb_48_mhz_i
 
   // Register interface
-  input  tlul_pkg::tl_h2d_t tl_d_i,
-  output tlul_pkg::tl_d2h_t tl_d_o,
+  input  tlul_pkg::tl_h2d_t tl_i,
+  output tlul_pkg::tl_d2h_t tl_o,
 
   // USB Interface
   input  logic       cio_usb_d_i,

ParseResult:
UPD HdlIdDef@@tl_d_i to tl_i

UPD HdlIdDef@@tl_d_o to tl_o


CommitId: 1ba89b8602969bf5a67f1d218bb75b3db41ac17a
[lint/top] Various lint fixes in order to get the top level lint clean
--- a/hw/top_earlgrey/ip/xbar/rtl/autogen/xbar_main.sv
+++ b/hw/top_earlgrey/ip/xbar/rtl/autogen/xbar_main.sv
@@ -117,6 +117,11 @@ module xbar_main (
   import tlul_pkg::*;
   import tl_main_pkg::*;
 
+  // scanmode_i is currently not used, but provisioned for future use
+  // this assignment prevents lint warnings
+  logic unused_scanmode;
+  assign unused_scanmode = scanmode_i;
+
   tl_h2d_t tl_s1n_16_us_h2d ;
   tl_d2h_t tl_s1n_16_us_d2h ;
 
ParseResult:
INS HdlIdDef@@unused_scanmode to objs
HdlIdDef: unused_scanmode
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlValueId: scanmode_i
    HdlValueId: unused_scanmode


CommitId: c81e63db2be3abf4358267b4c35dfe6f79d89717
[aes/rtl] Fix status tracking for initial key and IV registers
--- a/hw/ip/aes/rtl/aes_reg_status.sv
+++ b/hw/ip/aes/rtl/aes_reg_status.sv
@@ -15,24 +15,32 @@ module aes_reg_status #(
   input  logic [Width-1:0] we_i,
   input  logic             use_i,
   input  logic             clear_i,
+  input  logic             arm_i,
   output logic             new_o,
   output logic             clean_o
 );
 
   logic [Width-1:0] we_d, we_q;
+  logic             armed_d, armed_q;
   logic             all_written;
   logic             none_written;
   logic             new_d, new_q;
   logic             clean_d, clean_q;
 
-  // Collect write operations. Upon clear or use, we start over.
-  assign we_d = (clear_i || use_i) ? '0 : (we_q | we_i);
+  // Collect write operations. Upon clear or use, we start over. If armed, the next write will
+  // restart the tracking.
+  assign we_d    = (clear_i || use_i) ? '0   :
+                   (armed_q && |we_i) ? we_i : (we_q | we_i);
+  assign armed_d = (clear_i || use_i) ? 1'b0 :
+                   (armed_q && |we_i) ? 1'b0 : armed_q | arm_i;
 
   always_ff @(posedge clk_i or negedge rst_ni) begin : reg_ops
     if (!rst_ni) begin
-      we_q <= '0;
+      we_q    <= '0;
+      armed_q <= 1'b0;
     end else begin
-      we_q <= we_d;
+      we_q    <= we_d;
+      armed_q <= armed_d;
     end
   end
 
ParseResult:
INS HdlIdDef@@armed_d to objs
HdlIdDef: armed_d
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

INS HdlIdDef@@armed_q to objs
HdlIdDef: armed_q
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: TERNARY
        list: ops
            HdlOp: OR_LOG
                list: ops
                    HdlValueId: clear_i
                    HdlValueId: use_i
            HdlValueInt: 0
            HdlOp: TERNARY
                list: ops
                    HdlOp: AND_LOG
                        list: ops
                            HdlValueId: armed_q
                            HdlOp: OR_UNARY
                                list: ops
                                    HdlValueId: we_i
                    HdlValueInt: 0
                    HdlOp: OR
                        list: ops
                            HdlValueId: armed_q
                            HdlValueId: arm_i
    HdlValueId: armed_d

INS HdlIdDef@@arm_i to ports
HdlIdDef: arm_i
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: IN

UPD HdlStmAssign@@ to 
    UPD HdlOp@@TERNARY to TERNARY
        INS HdlOp@@TERNARY to ops
        UPD HdlOp@@TERNARY to TERNARY
            INS list@@ops to TERNARY
            INS HdlOp@@AND_LOG to ops
            HdlOp: AND_LOG
                list: ops
                    HdlValueId: armed_q
                    HdlOp: OR_UNARY
                        list: ops
                            HdlValueId: we_i
            INS HdlValueId@@we_i to ops

UPD HdlStmAssign@@ to 
    UPD HdlOp@@TERNARY to TERNARY
        MOV HdlOp@@OR to ops
        HdlOp: OR
            list: ops
                HdlValueId: we_q
                HdlValueId: we_i

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: armed_q

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueId: armed_d
    HdlValueId: armed_q


CommitId: 033221b2c2fff9bebdc0f5cf4f46a5d273fd2ccf
[i2c] Minor FSM Update
--- a/hw/ip/i2c/rtl/i2c_fsm.sv
+++ b/hw/ip/i2c/rtl/i2c_fsm.sv
@@ -150,13 +150,13 @@ module i2c_fsm (
   always_comb begin : byte_number
     if (!fmt_flag_read_bytes_i) byte_num = 9'd0;
     else if (fmt_byte_i == 0) byte_num = 9'd256;
-    else byte_num = fmt_byte_i;
+    else byte_num = 9'(fmt_byte_i);
   end
 
   // Byte index implementation
   always_ff @ (posedge clk_i or negedge rst_ni) begin : byte_counter
     if (!rst_ni) begin
-      byte_index <= byte_num;
+      byte_index <= '0;
     end else if (byte_clr) begin
       byte_index <= byte_num;
     end else if (byte_decr) begin
ParseResult:
UPD HdlStmIf@@ to 
    UPD HdlOp@@ASSIGN to ASSIGN
        INS HdlOp@@CALL to ops
        UPD HdlOp@@CALL to CALL
            INS list@@ops to CALL
            INS HdlValueInt@@9 to ops

UPD HdlStmAssign@@ to 
    INS HdlValueInt@@0 to 

UPD HdlStmIf@@ to 
    UPD HdlOp@@ASSIGN to ASSIGN
        MOV HdlValueId@@fmt_byte_i to ops
        HdlValueId: fmt_byte_i

UPD HdlStmAssign@@ to 
    DEL HdlValueId@@byte_num from 


CommitId: df96e0c2a6cc99652e459b22c1bcb2c1ce5f59f1
[AST] AscentLint, HJSON fixes, and rgn_fips_i port
--- a/hw/top_earlgrey/ip/ast/rtl/aon_clk.sv
+++ b/hw/top_earlgrey/ip/ast/rtl/aon_clk.sv
@@ -11,6 +11,8 @@ module aon_clk (
   input clk_aon_pd_ni,                     // AON Clock Power-down
   input rst_aon_clk_ni,                    // AON Clock Logic reset
   input clk_src_aon_en_i,                  // AON Source Clock Enable
+  input scan_mode_i,                       // Scan Mode
+  input scan_reset_ni,                     // Scan Reset
   output logic clk_src_aon_o,              // AON Source Clock
   output logic clk_src_aon_val_o           // AON Source Clock Valid
 );

ParseResult:
INS HdlIdDef@@scan_mode_i to ports
HdlIdDef: scan_mode_i
    HdlValueId: wire
    HdlDirection: IN

INS HdlIdDef@@scan_reset_ni to ports
HdlIdDef: scan_reset_ni
    HdlValueId: wire
    HdlDirection: IN


CommitId: df96e0c2a6cc99652e459b22c1bcb2c1ce5f59f1
[AST] AscentLint, HJSON fixes, and rgn_fips_i port
--- a/hw/top_earlgrey/ip/ast/rtl/aon_clk.sv
+++ b/hw/top_earlgrey/ip/ast/rtl/aon_clk.sv
@@ -18,7 +20,8 @@ module aon_clk (
 logic clk, aon_clk_en, rst_n;
 
 assign rst_n = rst_aon_clk_ni;  // Scan enabled
-assign aon_clk_en = clk_src_aon_en_i && clk_aon_pd_ni && rst_aon_clk_ni;
+assign aon_clk_en = scan_mode_i ||
+                    (clk_src_aon_en_i && clk_aon_pd_ni && rst_aon_clk_ni);
 
 // Clock Oscillator
 ///////////////////////////////////////

ParseResult:
UPD HdlStmAssign@@ to 
    INS HdlOp@@OR_LOG to 
    UPD HdlOp@@OR_LOG to OR_LOG
        INS list@@ops to OR_LOG
        INS HdlValueId@@scan_mode_i to ops

UPD HdlStmAssign@@ to 
    MOV HdlOp@@AND_LOG to 
    HdlOp: AND_LOG
        list: ops
            HdlOp: AND_LOG
                list: ops
                    HdlValueId: clk_src_aon_en_i
                    HdlValueId: clk_aon_pd_ni
            HdlValueId: rst_aon_clk_ni


CommitId: df96e0c2a6cc99652e459b22c1bcb2c1ce5f59f1
[AST] AscentLint, HJSON fixes, and rgn_fips_i port
--- a/hw/top_earlgrey/ip/ast/rtl/aon_clk.sv
+++ b/hw/top_earlgrey/ip/ast/rtl/aon_clk.sv
@@ -37,7 +40,7 @@ prim_clock_buf u_clk_aon_buf(
 
 // 2-stage de-assertion
 logic rst_val_n;
-assign rst_val_n = rst_n && clk_aon_pd_ni;
+assign rst_val_n = scan_mode_i ? scan_reset_ni : rst_n && clk_aon_pd_ni;
 
 prim_flop_2sync #(
   .Width ( 1 ),
ParseResult:
UPD HdlStmAssign@@ to 
    MOV HdlOp@@AND_LOG to 
    HdlOp: AND_LOG
        list: ops
            HdlValueId: rst_n
            HdlValueId: clk_aon_pd_ni


CommitId: 6fa343eabaf41afe7c2139ec91698620038bd958
[i2c, rtl] Lint Fixes
--- a/hw/ip/i2c/rtl/i2c_fsm.sv
+++ b/hw/ip/i2c/rtl/i2c_fsm.sv
@@ -18,7 +18,7 @@ module i2c_fsm (
 
   input        fmt_fifo_rvalid_i, // indicates there is valid data in fmt_fifo
   input        fmt_fifo_wvalid_i, // indicates data is being put into fmt_fifo
-  input [5:0]  fmt_fifo_depth_i,  // fmt_fifo_depth
+  input [6:0]  fmt_fifo_depth_i,  // fmt_fifo_depth
   output logic fmt_fifo_rready_o, // populates fmt_fifo
   input [7:0]  fmt_byte_i,        // byte in fmt_fifo to be sent to target
   input        fmt_flag_start_before_i, // issue start before sending byte

ParseResult:
UPD HdlIdDef@@fmt_fifo_depth_i to fmt_fifo_depth_i
    UPD HdlOp@@PARAMETRIZATION to PARAMETRIZATION
        UPD HdlOp@@DOWNTO to DOWNTO
            UPD HdlValueInt@@5 to 6


CommitId: 6fa343eabaf41afe7c2139ec91698620038bd958
[i2c, rtl] Lint Fixes
--- a/hw/ip/i2c/rtl/i2c_fsm.sv
+++ b/hw/ip/i2c/rtl/i2c_fsm.sv
@@ -32,7 +32,7 @@ module i2c_fsm (
 
   input        tx_fifo_rvalid_i, // indicates there is valid data in tx_fifo
   input        tx_fifo_wvalid_i, // indicates data is being put into tx_fifo
-  input [5:0]  tx_fifo_depth_i,  // tx_fifo_depth
+  input [6:0]  tx_fifo_depth_i,  // tx_fifo_depth
   output logic tx_fifo_rready_o, // populates tx_fifo
   input [7:0]  tx_fifo_rdata_i,  // byte in tx_fifo to be sent to host
 

ParseResult:
UPD HdlIdDef@@tx_fifo_depth_i to tx_fifo_depth_i
    UPD HdlOp@@PARAMETRIZATION to PARAMETRIZATION
        UPD HdlOp@@DOWNTO to DOWNTO
            UPD HdlValueInt@@5 to 6


CommitId: 1b5fa9f1ebf0a9520ef6ea6faf1f1a2397a349c1
[verible/style] This corrects several style linter warnings/errors
--- a/hw/ip/hmac/rtl/hmac_core.sv
+++ b/hw/ip/hmac/rtl/hmac_core.sv
@@ -41,9 +41,9 @@ module hmac_core import hmac_pkg::*; (
   output [63:0] sha_message_length
 );
 
-  localparam BlockSize = 512;
-  localparam BlockSizeBits = $clog2(BlockSize);
-  localparam HashWordBits = $clog2($bits(sha_word_t));
+  localparam int unsigned BlockSize = 512;
+  localparam int unsigned BlockSizeBits = $clog2(BlockSize);
+  localparam int unsigned HashWordBits = $clog2($bits(sha_word_t));
 
   logic hash_start; // generated from internal state machine
   logic hash_process; // generated from internal state machine to trigger hash
ParseResult:
UPD HdlIdDef@@BlockSize to BlockSize
    INS HdlOp@@PARAMETRIZATION to BlockSize
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: int
            HdlOp: MAP_ASSOCIATION
                list: ops
                    HdlValueId: signed

UPD HdlIdDef@@BlockSizeBits to BlockSizeBits
    INS HdlOp@@PARAMETRIZATION to BlockSizeBits
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: int
            HdlOp: MAP_ASSOCIATION
                list: ops
                    HdlValueId: signed

UPD HdlIdDef@@HashWordBits to HashWordBits
    INS HdlOp@@PARAMETRIZATION to HashWordBits
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: int
            HdlOp: MAP_ASSOCIATION
                list: ops
                    HdlValueId: signed


CommitId: 0a3dfb4e652c8597f52b9ddb009613e5cc4ea61b
[ibex] Fix lint warnings from parameter width mismatch
--- a/hw/ip/rv_core_ibex/rtl/rv_core_ibex.sv
+++ b/hw/ip/rv_core_ibex/rtl/rv_core_ibex.sv
@@ -74,7 +74,7 @@ module rv_core_ibex import rv_core_ibex_pkg::*; #(
 
   // if pipeline=1, do not allow pass through and always break the path
   // if pipeline is 0, passthrough the fifo completely
-  localparam int FifoPass = PipeLine ? 1'b0 : 1'b1;
+  localparam bit FifoPass = PipeLine ? 1'b0 : 1'b1;
   localparam int FifoDepth = PipeLine ? 4'h2 : 4'h0;
   // ICache creates more outstanding transactions
   localparam int NumOutstandingReqs = ICache ? 8 : 2;
ParseResult:
UPD HdlIdDef@@FifoPass to FifoPass
    INS HdlOp@@PARAMETRIZATION to FifoPass
    UPD HdlOp@@PARAMETRIZATION to PARAMETRIZATION
        INS list@@ops to PARAMETRIZATION

UPD HdlIdDef@@FifoPass to FifoPass
    UPD HdlValueId@@int to bit
    MOV HdlValueId@@int to FifoPass
    HdlValueId: int


CommitId: 92e9ebb031c9c90db52a3f3985afa352285c8497
[aes] Use fresh, random intermediate masks in "noreuse" Canright S-Box
--- a/hw/ip/aes/rtl/aes_sub_bytes.sv
+++ b/hw/ip/aes/rtl/aes_sub_bytes.sv
@@ -8,11 +8,12 @@ module aes_sub_bytes import aes_pkg::*;
 #(
   parameter sbox_impl_e SBoxImpl = SBoxImplLut
 ) (
-  input  ciph_op_e             op_i,
-  input  logic [3:0][3:0][7:0] data_i,
-  input  logic [3:0][3:0][7:0] in_mask_i,
-  input  logic [3:0][3:0][7:0] out_mask_i,
-  output logic [3:0][3:0][7:0] data_o
+  input  ciph_op_e                          op_i,
+  input  logic              [3:0][3:0][7:0] data_i,
+  input  logic              [3:0][3:0][7:0] in_mask_i,
+  input  logic              [3:0][3:0][7:0] out_mask_i,
+  input  logic [3:0][3:0][WidthPRDSBox-1:0] prd_masking_i,
+  output logic              [3:0][3:0][7:0] data_o
 );
 
   // Individually substitute bytes

ParseResult:
INS HdlIdDef@@prd_masking_i to ports
HdlIdDef: prd_masking_i
    HdlOp: INDEX
        list: ops
            HdlOp: INDEX
                list: ops
                    HdlOp: PARAMETRIZATION
                        list: ops
                            HdlValueId: logic
                            HdlOp: DOWNTO
                                list: ops
                                    HdlValueInt: 3
                                    HdlValueInt: 0
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 3
                            HdlValueInt: 0
            HdlOp: DOWNTO
                list: ops
                    HdlOp: SUB
                        list: ops
                            HdlValueId: WidthPRDSBox
                            HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: IN


CommitId: 1b5fa9f1ebf0a9520ef6ea6faf1f1a2397a349c1
[verible/style] This corrects several style linter warnings/errors
--- a/hw/ip/tlul/rtl/tlul_fifo_sync.sv
+++ b/hw/ip/tlul/rtl/tlul_fifo_sync.sv
@@ -7,12 +7,12 @@
 // and one for the response side.
 
 module tlul_fifo_sync #(
-  parameter ReqPass  = 1'b1,
-  parameter RspPass  = 1'b1,
-  parameter ReqDepth = 2,
-  parameter RspDepth = 2,
-  parameter SpareReqW = 1,
-  parameter SpareRspW = 1
+  parameter int unsigned ReqPass  = 1'b1,
+  parameter int unsigned RspPass  = 1'b1,
+  parameter int unsigned ReqDepth = 2,
+  parameter int unsigned RspDepth = 2,
+  parameter int unsigned SpareReqW = 1,
+  parameter int unsigned SpareRspW = 1
 ) (
   input                     clk_i,
   input                     rst_ni,

ParseResult:
UPD HdlIdDef@@ReqPass to ReqPass
    INS HdlOp@@PARAMETRIZATION to ReqPass
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: int
            HdlOp: MAP_ASSOCIATION
                list: ops
                    HdlValueId: signed

UPD HdlIdDef@@RspPass to RspPass
    INS HdlOp@@PARAMETRIZATION to RspPass
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: int
            HdlOp: MAP_ASSOCIATION
                list: ops
                    HdlValueId: signed

UPD HdlIdDef@@ReqDepth to ReqDepth
    INS HdlOp@@PARAMETRIZATION to ReqDepth
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: int
            HdlOp: MAP_ASSOCIATION
                list: ops
                    HdlValueId: signed

UPD HdlIdDef@@RspDepth to RspDepth
    INS HdlOp@@PARAMETRIZATION to RspDepth
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: int
            HdlOp: MAP_ASSOCIATION
                list: ops
                    HdlValueId: signed

UPD HdlIdDef@@SpareReqW to SpareReqW
    INS HdlOp@@PARAMETRIZATION to SpareReqW
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: int
            HdlOp: MAP_ASSOCIATION
                list: ops
                    HdlValueId: signed

UPD HdlIdDef@@SpareRspW to SpareRspW
    INS HdlOp@@PARAMETRIZATION to SpareRspW
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: int
            HdlOp: MAP_ASSOCIATION
                list: ops
                    HdlValueId: signed


CommitId: 1b5fa9f1ebf0a9520ef6ea6faf1f1a2397a349c1
[verible/style] This corrects several style linter warnings/errors
--- a/hw/ip/tlul/rtl/tlul_fifo_sync.sv
+++ b/hw/ip/tlul/rtl/tlul_fifo_sync.sv
@@ -27,7 +27,7 @@ module tlul_fifo_sync #(
 );
 
   // Put everything on the request side into one FIFO
-  localparam REQFIFO_WIDTH = $bits(tlul_pkg::tl_h2d_t) -2 + SpareReqW;
+  localparam int unsigned REQFIFO_WIDTH = $bits(tlul_pkg::tl_h2d_t) -2 + SpareReqW;
 
   prim_fifo_sync #(.Width(REQFIFO_WIDTH), .Pass(ReqPass), .Depth(ReqDepth)) reqfifo (
     .clk_i,

ParseResult:
UPD HdlIdDef@@REQFIFO_WIDTH to REQFIFO_WIDTH
    INS HdlOp@@PARAMETRIZATION to REQFIFO_WIDTH
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: int
            HdlOp: MAP_ASSOCIATION
                list: ops
                    HdlValueId: signed


CommitId: 1b5fa9f1ebf0a9520ef6ea6faf1f1a2397a349c1
[verible/style] This corrects several style linter warnings/errors
--- a/hw/ip/tlul/rtl/tlul_fifo_sync.sv
+++ b/hw/ip/tlul/rtl/tlul_fifo_sync.sv
@@ -59,7 +59,7 @@ module tlul_fifo_sync #(
 
   // Put everything on the response side into the other FIFO
 
-  localparam RSPFIFO_WIDTH = $bits(tlul_pkg::tl_d2h_t) -2 + SpareRspW;
+  localparam int unsigned RSPFIFO_WIDTH = $bits(tlul_pkg::tl_d2h_t) -2 + SpareRspW;
 
   prim_fifo_sync #(.Width(RSPFIFO_WIDTH), .Pass(RspPass), .Depth(RspDepth)) rspfifo (
     .clk_i,
ParseResult:
UPD HdlIdDef@@RSPFIFO_WIDTH to RSPFIFO_WIDTH
    INS HdlOp@@PARAMETRIZATION to RSPFIFO_WIDTH
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: int
            HdlOp: MAP_ASSOCIATION
                list: ops
                    HdlValueId: signed


CommitId: 19044edfb0b9485031557705595840bea41fb33d
[prim_secded] Use _i/_o suffix for port names
--- a/hw/ip/prim/rtl/prim_secded_64_57_dec.sv
+++ b/hw/ip/prim/rtl/prim_secded_64_57_dec.sv
@@ -5,8 +5,8 @@
 // SECDED decoder generated by util/design/secded_gen.py
 
 module prim_secded_64_57_dec (
-  input        [63:0] in,
-  output logic [56:0] d_o,
+  input        [63:0] data_i,
+  output logic [56:0] data_o,
   output logic [6:0] syndrome_o,
   output logic [1:0] err_o
 );

ParseResult:
UPD HdlIdDef@@in to data_i

UPD HdlIdDef@@d_o to data_o


CommitId: 5f769a08a4a5142f376cd66d5ec91eec2e18f388
[ibex] Fix type of literals when defining a localparam
--- a/hw/ip/rv_core_ibex/rtl/rv_core_ibex.sv
+++ b/hw/ip/rv_core_ibex/rtl/rv_core_ibex.sv
@@ -75,7 +75,7 @@ module rv_core_ibex import rv_core_ibex_pkg::*; #(
   // if pipeline=1, do not allow pass through and always break the path
   // if pipeline is 0, passthrough the fifo completely
   localparam bit FifoPass = PipeLine ? 1'b0 : 1'b1;
-  localparam int FifoDepth = PipeLine ? 4'h2 : 4'h0;
+  localparam int unsigned FifoDepth = PipeLine ? 2 : 0;
   // ICache creates more outstanding transactions
   localparam int NumOutstandingReqs = ICache ? 8 : 2;
 
ParseResult:
UPD HdlIdDef@@FifoDepth to FifoDepth
    INS HdlOp@@PARAMETRIZATION to FifoDepth
    UPD HdlOp@@PARAMETRIZATION to PARAMETRIZATION
        INS list@@ops to PARAMETRIZATION
        INS HdlOp@@MAP_ASSOCIATION to ops
        HdlOp: MAP_ASSOCIATION
            list: ops
                HdlValueId: signed

UPD HdlIdDef@@FifoDepth to FifoDepth
    MOV HdlValueId@@int to FifoDepth
    HdlValueId: int


CommitId: 21167d2118874f62091feb8b71926052de0a77a2
[i2c, rtl] Initial incomplete implementation of i2c target mode
--- a/hw/ip/i2c/rtl/i2c_fsm.sv
+++ b/hw/ip/i2c/rtl/i2c_fsm.sv
@@ -14,6 +14,7 @@ module i2c_fsm (
   output       sda_o,  // serial data output to i2c bus
 
   input        host_enable_i, // enable host functionality
+  input        target_enable_i, // enable target functionality
 
   input        fmt_fifo_rvalid_i, // indicates there is valid data in fmt_fifo
   input        fmt_fifo_wvalid_i, // indicates data is being put into fmt_fifo

ParseResult:
INS HdlIdDef@@target_enable_i to ports
HdlIdDef: target_enable_i
    HdlValueId: wire
    HdlDirection: IN


CommitId: 21167d2118874f62091feb8b71926052de0a77a2
[i2c, rtl] Initial incomplete implementation of i2c target mode
--- a/hw/ip/i2c/rtl/i2c_fsm.sv
+++ b/hw/ip/i2c/rtl/i2c_fsm.sv
@@ -29,7 +30,15 @@ module i2c_fsm (
   output logic       rx_fifo_wvalid_o, // high if there is valid data in rx_fifo
   output logic [7:0] rx_fifo_wdata_o,  // byte in rx_fifo read from target
 
+  input        tx_fifo_rvalid_i, // indicates there is valid data in tx_fifo
+  output logic tx_fifo_rready_o, // populates tx_fifo
+  input [7:0]  tx_fifo_rdata_i,  // byte in tx_fifo to be sent to host
+
+  output logic       acq_fifo_wvalid_o, // high if there is valid data in acq_fifo
+  output logic [9:0] acq_fifo_wdata_o,  // byte and signal in acq_fifo read from target
+
   output logic       host_idle_o,      // indicates the host is idle
+  output logic       target_idle_o,    // indicates the target is idle
 
   input [15:0] thigh_i,    // high period of the SCL in clock units
   input [15:0] tlow_i,     // low period of the SCL in clock units

ParseResult:
INS HdlIdDef@@tx_fifo_rvalid_i to ports
HdlIdDef: tx_fifo_rvalid_i
    HdlValueId: wire
    HdlDirection: IN

INS HdlIdDef@@tx_fifo_rready_o to ports
HdlIdDef: tx_fifo_rready_o
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: OUT

INS HdlIdDef@@tx_fifo_rdata_i to ports
HdlIdDef: tx_fifo_rdata_i
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: wire
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 7
                    HdlValueInt: 0
    HdlDirection: IN

INS HdlIdDef@@acq_fifo_wvalid_o to ports
HdlIdDef: acq_fifo_wvalid_o
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: OUT

INS HdlIdDef@@acq_fifo_wdata_o to ports
HdlIdDef: acq_fifo_wdata_o
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 9
                    HdlValueInt: 0
    HdlDirection: OUT

INS HdlIdDef@@target_idle_o to ports
HdlIdDef: target_idle_o
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: OUT


CommitId: 21167d2118874f62091feb8b71926052de0a77a2
[i2c, rtl] Initial incomplete implementation of i2c target mode
--- a/hw/ip/i2c/rtl/i2c_fsm.sv
+++ b/hw/ip/i2c/rtl/i2c_fsm.sv
@@ -44,12 +53,20 @@ module i2c_fsm (
   input [30:0] stretch_timeout_i,  // max time target may stretch the clock
   input        timeout_enable_i,   // assert if target stretches clock past max
 
+  input logic [6:0] target_address0_i,
+  input logic [6:0] target_mask0_i,
+  input logic [6:0] target_address1_i,
+  input logic [6:0] target_mask1_i,
+
   output logic event_nak_o,              // target didn't Ack when expected
   output logic event_scl_interference_o, // other device forcing SCL low
   output logic event_sda_interference_o, // other device forcing SDA low
   output logic event_stretch_timeout_o,  // target stretches clock past max time
   output logic event_sda_unstable_o,     // SDA is not constant during SCL pulse
-  output logic event_trans_complete_o    // Transaction is complete
+  output logic event_trans_complete_o,   // Transaction is complete
+  output logic event_tx_empty_o,         // tx_fifo is empty but data is needed
+  output logic event_tx_nonempty_o,      // tx_fifo is nonempty after stop
+  output logic event_ack_stop_o          // target received stop after ack
 );
 
   // I2C bus clock timing variables

ParseResult:
INS HdlIdDef@@target_address0_i to ports
HdlIdDef: target_address0_i
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 6
                    HdlValueInt: 0
    HdlDirection: IN

INS HdlIdDef@@target_mask0_i to ports
HdlIdDef: target_mask0_i
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 6
                    HdlValueInt: 0
    HdlDirection: IN

INS HdlIdDef@@target_address1_i to ports
HdlIdDef: target_address1_i
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 6
                    HdlValueInt: 0
    HdlDirection: IN

INS HdlIdDef@@target_mask1_i to ports
HdlIdDef: target_mask1_i
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 6
                    HdlValueInt: 0
    HdlDirection: IN

INS HdlIdDef@@event_tx_empty_o to ports
HdlIdDef: event_tx_empty_o
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: OUT

INS HdlIdDef@@event_tx_nonempty_o to ports
HdlIdDef: event_tx_nonempty_o
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: OUT

INS HdlIdDef@@event_ack_stop_o to ports
HdlIdDef: event_ack_stop_o
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: OUT


CommitId: 21167d2118874f62091feb8b71926052de0a77a2
[i2c, rtl] Initial incomplete implementation of i2c target mode
--- a/hw/ip/i2c/rtl/i2c_fsm.sv
+++ b/hw/ip/i2c/rtl/i2c_fsm.sv
@@ -80,6 +97,14 @@ module i2c_fsm (
   logic        log_stop;      // indicates stop is been issued
   logic        restart;       // indicates repeated start state is entered into
 
+  // Temporary assignments
+  assign tx_fifo_rready_o = tx_fifo_rvalid_i;
+  assign acq_fifo_wdata_o = {tx_fifo_rdata_i, 1'b0, 1'b0};
+  assign target_idle_o = 1'b1;
+  assign event_tx_empty_o = 1'b0;
+  assign event_tx_nonempty_o = 1'b0;
+  assign event_ack_stop_o = 1'b0;
+
   // Clock counter implementation
   typedef enum logic [3:0] {
     tSetupStart, tHoldStart, tClockLow, tSetupBit, tClockPulse, tHoldBit,

ParseResult:
INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlValueId: tx_fifo_rvalid_i
    HdlValueId: tx_fifo_rready_o

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: CONCAT
        list: ops
            HdlOp: CONCAT
                list: ops
                    HdlValueId: tx_fifo_rdata_i
                    HdlValueInt: 0
            HdlValueInt: 0
    HdlValueId: acq_fifo_wdata_o

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlValueInt: 1
    HdlValueId: target_idle_o

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: event_tx_empty_o

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: event_tx_nonempty_o

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: event_ack_stop_o


CommitId: 21167d2118874f62091feb8b71926052de0a77a2
[i2c, rtl] Initial incomplete implementation of i2c target mode
--- a/hw/ip/i2c/rtl/i2c_fsm.sv
+++ b/hw/ip/i2c/rtl/i2c_fsm.sv
@@ -232,6 +258,9 @@ module i2c_fsm (
         sda_temp = 1'b1;
         scl_temp = 1'b1;
         if (sda_i == 0) event_sda_interference_o = 1'b1;
+        if (!target_address0_i && !target_mask0_i && !target_address1_i && !target_mask1_i) begin
+          acq_fifo_wvalid_o = 1'b0;
+        end
       end
       // SetupStart: SDA and SCL are released
       SetupStart : begin

ParseResult:
INS HdlStmIf@@ to body
HdlStmIf
    HdlOp: AND_LOG
        list: ops
            HdlOp: AND_LOG
                list: ops
                    HdlOp: AND_LOG
                        list: ops
                            HdlOp: NEG_LOG
                                list: ops
                                    HdlValueId: target_address0_i
                            HdlOp: NEG_LOG
                                list: ops
                                    HdlValueId: target_mask0_i
                    HdlOp: NEG_LOG
                        list: ops
                            HdlValueId: target_address1_i
            HdlOp: NEG_LOG
                list: ops
                    HdlValueId: target_mask1_i
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: acq_fifo_wvalid_o
                    HdlValueInt: 0
    list: elifs


CommitId: 21167d2118874f62091feb8b71926052de0a77a2
[i2c, rtl] Initial incomplete implementation of i2c target mode
--- a/hw/ip/i2c/rtl/i2c_fsm.sv
+++ b/hw/ip/i2c/rtl/i2c_fsm.sv
@@ -423,6 +452,7 @@ module i2c_fsm (
         fmt_fifo_rready_o = 1'b0;
         rx_fifo_wvalid_o = 1'b0;
         rx_fifo_wdata_o = 8'h00;
+        acq_fifo_wvalid_o = 1'b0;
         event_nak_o = 1'b0;
         event_scl_interference_o = 1'b0;
         event_sda_interference_o = 1'b0;

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: acq_fifo_wvalid_o
                HdlValueInt: 0

UPD HdlStmCase@@state_q to state_q
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: acq_fifo_wvalid_o
                HdlValueInt: 0


CommitId: 21167d2118874f62091feb8b71926052de0a77a2
[i2c, rtl] Initial incomplete implementation of i2c target mode
--- a/hw/ip/i2c/rtl/i2c_fsm.sv
+++ b/hw/ip/i2c/rtl/i2c_fsm.sv
@@ -451,7 +481,7 @@ module i2c_fsm (
     unique case (state_q)
       // Idle: initial state, SDA and SCL are released (high)
       Idle : begin
-        if (!host_enable_i) state_d = Idle; // Idle unless host is enabled
+        if (!host_enable_i && !target_enable_i) state_d = Idle; // Idle unless host is enabled
         else if (!fmt_fifo_rvalid_i) state_d = Idle;
         else state_d = Active;
       end
ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: acq_fifo_wvalid_o
                HdlValueInt: 0

UPD HdlStmCase@@state_q to state_q
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: acq_fifo_wvalid_o
                HdlValueInt: 0

UPD HdlStmIf@@ to 
    MOV HdlOp@@NEG_LOG to 
    HdlOp: NEG_LOG
        list: ops
            HdlValueId: host_enable_i


CommitId: 5c323ef52ef42785286da49a3a2919a35dce75d9
[usb] Fix lint errors
--- a/hw/ip/usbuart/rtl/usb_serial_fifo_ep.sv
+++ b/hw/ip/usbuart/rtl/usb_serial_fifo_ep.sv
@@ -83,7 +84,7 @@ module usb_serial_fifo_ep  #(
     end else begin
       if (!do_setup && out_ep_acked_i) begin
         ob_unload <= 1'b1;
-      end else if (({1'b0, ob_rptr} == (ob_max_used - PktW'(2))) && !rx_full) begin
+      end else if (({1'b0, ob_rptr} == (ob_max_used - {1'b0, PktW'(2)})) && !rx_full) begin
         ob_unload <= 1'b0;
       end
     end

ParseResult:
UPD HdlStmIf@@ to 
    UPD HdlOp@@AND_LOG to AND_LOG
        UPD HdlOp@@EQ to EQ
            INS HdlOp@@SUB to ops
            UPD HdlOp@@SUB to SUB
                INS list@@ops to SUB
                UPD HdlOp@@CONCAT to CONCAT
                    INS HdlValueInt@@0 to ops

UPD HdlStmIf@@ to 
    UPD HdlOp@@AND_LOG to AND_LOG
        UPD HdlOp@@EQ to EQ
            UPD HdlOp@@SUB to SUB
                MOV HdlValueId@@ob_max_used to ops
                HdlValueId: ob_max_used
            UPD HdlOp@@SUB to CONCAT
            MOV HdlOp@@SUB to ops
            HdlOp: SUB
                list: ops
                    HdlValueId: ob_max_used
                    HdlOp: CALL
                        list: ops
                            HdlValueId: PktW
                            HdlValueInt: 2


CommitId: 5c323ef52ef42785286da49a3a2919a35dce75d9
[usb] Fix lint errors
--- a/hw/ip/usbuart/rtl/usb_serial_fifo_ep.sv
+++ b/hw/ip/usbuart/rtl/usb_serial_fifo_ep.sv
@@ -203,7 +204,7 @@ module usb_serial_fifo_ep  #(
   logic [7:0] bmRequestType, raw_setup_data [8];
   // Alias for the setup bytes using names from USB spec
   logic [7:0] bRequest;
-  logic [15:0] wValue, wLength; //wIndex
+  logic [15:0] wValue, wLength, wIndex;
 
   assign pkt_start = (out_ep_put_addr_i == '0) && out_ep_data_put_i;
   assign pkt_end = out_ep_acked_i || out_ep_rollback_i;

ParseResult:
INS HdlIdDef@@wIndex to objs
HdlIdDef: wIndex
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 15
                    HdlValueInt: 0
    HdlDirection: INTERNAL


CommitId: 5c323ef52ef42785286da49a3a2919a35dce75d9
[usb] Fix lint errors
--- a/hw/ip/usbuart/rtl/usb_serial_fifo_ep.sv
+++ b/hw/ip/usbuart/rtl/usb_serial_fifo_ep.sv
@@ -246,7 +247,7 @@ module usb_serial_fifo_ep  #(
     status_stage_end = 1'b0;
     send_zero_length_data_pkt = 1'b0;
 
-    case (ctrl_xfr_state)
+    unique case (ctrl_xfr_state)
       StIdle: begin
         if (setup_pkt_start) begin
           ctrl_xfr_state_next = StSetup;

ParseResult:
UPD HdlStmCase@@ctrl_xfr_state to ctrl_xfr_state
    INS HdlStmCaseUniqConstrain@@UNIQUE to ctrl_xfr_state


CommitId: 5c323ef52ef42785286da49a3a2919a35dce75d9
[usb] Fix lint errors
--- a/hw/ip/usbuart/rtl/usb_serial_fifo_ep.sv
+++ b/hw/ip/usbuart/rtl/usb_serial_fifo_ep.sv
@@ -330,11 +331,14 @@ module usb_serial_fifo_ep  #(
   assign bmRequestType = raw_setup_data[0];
   assign bRequest = raw_setup_data[1];
   assign wValue = {raw_setup_data[3][7:0], raw_setup_data[2][7:0]};
-//assign wIndex = {raw_setup_data[5][7:0], raw_setup_data[4][7:0]};
+  assign wIndex = {raw_setup_data[5][7:0], raw_setup_data[4][7:0]};
   assign wLength = {raw_setup_data[7][7:0], raw_setup_data[6][7:0]};
-  // suppress warning
+
+  // Suppress warnings
   logic [6:0]  unused_bmR;
+  logic [15:0] unused_wIndex;
   assign unused_bmR = bmRequestType[6:0];
+  assign unused_wIndex = wIndex;
 
   // Check of upper put_addr bits needed because CRC will be sent (10 bytes total)
   always_ff @(posedge clk_i) begin

ParseResult:
INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: CONCAT
        list: ops
            HdlOp: INDEX
                list: ops
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: raw_setup_data
                            HdlValueInt: 5
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 7
                            HdlValueInt: 0
            HdlOp: INDEX
                list: ops
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: raw_setup_data
                            HdlValueInt: 4
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 7
                            HdlValueInt: 0
    HdlValueId: wIndex

INS HdlIdDef@@unused_wIndex to objs
HdlIdDef: unused_wIndex
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 15
                    HdlValueInt: 0
    HdlDirection: INTERNAL

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlValueId: wIndex
    HdlValueId: unused_wIndex


CommitId: 5c323ef52ef42785286da49a3a2919a35dce75d9
[usb] Fix lint errors
--- a/hw/ip/usbuart/rtl/usb_serial_fifo_ep.sv
+++ b/hw/ip/usbuart/rtl/usb_serial_fifo_ep.sv
@@ -363,35 +367,35 @@ module usb_serial_fifo_ep  #(
         // so no standard defines for the codes
         // (note looks like this is the first time REQ has been implemented)
         unique case (bRequest)
-          'h00: begin
+          8'h00: begin
             // REQ_PARITY
             return_data <= {14'b0, parity_o};
-            send_length <= 'h2;
+            send_length <= 2'b10;
           end
 
-          'h01: begin
+          8'h01: begin
             // SET_PARITY
-            send_length <= 'h00;
+            send_length <= 2'b00;
             parity_o    <= wValue[1:0];
           end
 
-          'h02: begin
+          8'h02: begin
             // REQ_BAUD
             return_data <= baud_o;
-            send_length <= 'h2;
+            send_length <= 2'b10;
           end
 
-          'h03: begin
+          8'h03: begin
             // SET_BAUD
-            send_length <= 'h00;
+            send_length <= 2'b00;
             baud_o      <= wValue;
           end
           default begin
-            send_length <= 'h00;
+            send_length <= 2'b00;
           end
         endcase
       end else if ((ctrl_xfr_state == StDataIn) && more_data_to_send && in_ep_data_get_i) begin
-        bytes_sent <= bytes_sent + 1'b1;
+        bytes_sent <= bytes_sent + 2'b01;
       end else if (status_stage_end) begin
         bytes_sent <= '0;
       end
ParseResult:
UPD HdlStmAssign@@ to 
    UPD HdlOp@@ADD to ADD
        UPD HdlValueInt@@1 to 01

UPD HdlStmAssign@@ to 
    UPD HdlValueInt@@2 to 10

UPD HdlStmAssign@@ to 
    UPD HdlValueInt@@2 to 10


CommitId: d593f3cd5c12a7f419dff4eecf7b05ccbdb5079c
[secded_gen] Fix template bug that results in lint error
--- a/hw/ip/prim/rtl/prim_secded_22_16_dec.sv
+++ b/hw/ip/prim/rtl/prim_secded_22_16_dec.sv
@@ -12,7 +12,6 @@ module prim_secded_22_16_dec (
   output logic [1:0] err_o
 );
 
-  logic single_error;
 
   // Syndrome calculation
   assign syndrome_o[0] = ^(in & 22'h01C5C6);

ParseResult:
DEL HdlIdDef@@single_error from objs
HdlIdDef: single_error
    HdlDirection: INTERNAL


CommitId: d593f3cd5c12a7f419dff4eecf7b05ccbdb5079c
[secded_gen] Fix template bug that results in lint error
--- a/hw/ip/prim/rtl/prim_secded_22_16_dec.sv
+++ b/hw/ip/prim/rtl/prim_secded_22_16_dec.sv
@@ -41,8 +40,7 @@ module prim_secded_22_16_dec (
   assign d_o[15] = (syndrome_o == 6'h15) ^ in[15];
 
   // err_o calc. bit0: single error, bit1: double error
-  assign single_error = ^syndrome_o;
-  assign err_o[0] =  single_error;
-  assign err_o[1] = ~single_error & (|syndrome_o);
+  assign err_o[0] = ^syndrome_o;
+  assign err_o[1] = ~err_o[0] & (|syndrome_o);
 
 endmodule : prim_secded_22_16_dec
ParseResult:
UPD HdlStmAssign@@ to 
    MOV HdlOp@@INDEX to 
    HdlOp: INDEX
        list: ops
            HdlValueId: err_o
            HdlValueInt: 0
    DEL HdlValueId@@single_error from 

UPD HdlStmAssign@@ to 
    UPD HdlOp@@AND to AND
        UPD HdlOp@@NEG to NEG
            INS list@@ops to NEG
            INS HdlOp@@INDEX to ops
            UPD HdlOp@@INDEX to INDEX
                INS HdlValueInt@@0 to ops

UPD HdlStmAssign@@ to 
    UPD HdlOp@@AND to AND
        UPD HdlOp@@NEG to NEG
            MOV list@@ops to NEG
            list: ops
                HdlValueId: single_error
            UPD HdlValueId@@single_error to err_o

UPD HdlStmAssign@@ to 
    DEL HdlValueId@@single_error from 

DEL HdlStmAssign@@ from objs


CommitId: d14b37a8c2a7f7faa351587c7a3489fa58db0790
Update lowrisc_ibex to lowRISC/ibex@a3a1f9f
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_alu.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_alu.sv
@@ -13,11 +13,17 @@ module ibex_alu #(
     input  logic [31:0]       operand_a_i,
     input  logic [31:0]       operand_b_i,
 
+    input  logic              instr_first_cycle_i,
+
     input  logic [32:0]       multdiv_operand_a_i,
     input  logic [32:0]       multdiv_operand_b_i,
 
     input  logic              multdiv_sel_i,
 
+    input  logic [31:0]       imd_val_q_i,
+    output logic [31:0]       imd_val_d_o,
+    output logic              imd_val_we_o,
+
     output logic [31:0]       adder_result_o,
     output logic [33:0]       adder_result_ext_o,
 

ParseResult:
INS HdlIdDef@@instr_first_cycle_i to ports
HdlIdDef: instr_first_cycle_i
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: IN

INS HdlIdDef@@imd_val_q_i to ports
HdlIdDef: imd_val_q_i
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 31
                    HdlValueInt: 0
    HdlDirection: IN

INS HdlIdDef@@imd_val_d_o to ports
HdlIdDef: imd_val_d_o
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 31
                    HdlValueInt: 0
    HdlDirection: OUT

INS HdlIdDef@@imd_val_we_o to ports
HdlIdDef: imd_val_we_o
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: OUT


CommitId: d14b37a8c2a7f7faa351587c7a3489fa58db0790
Update lowrisc_ibex to lowRISC/ibex@a3a1f9f
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_alu.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_alu.sv
@@ -57,12 +63,7 @@ module ibex_alu #(
 
       // MinMax OPs (RV32B Ops)
       ALU_MIN,  ALU_MINU,
-      ALU_MAX,  ALU_MAXU,
-
-      // Logic-with-negate OPs (RV32B Ops)
-      ALU_XNOR,
-      ALU_ORN,
-      ALU_ANDN: adder_op_b_negate = 1'b1;
+      ALU_MAX,  ALU_MAXU: adder_op_b_negate = 1'b1;
 
       default:;
     endcase

ParseResult:
UPD HdlStmCase@@operator_i to operator_i
    DEL tuple@@ from cases
    tuple
        HdlValueId: ALU_XNOR
        HdlOp: ASSIGN
            list: ops
                HdlValueId: adder_op_b_negate
                HdlValueInt: 1
    DEL tuple@@ from cases
    tuple
        HdlValueId: ALU_ORN
        HdlOp: ASSIGN
            list: ops
                HdlValueId: adder_op_b_negate
                HdlValueInt: 1
    DEL tuple@@ from cases
    tuple
        HdlValueId: ALU_ANDN
        HdlOp: ASSIGN
            list: ops
                HdlValueId: adder_op_b_negate
                HdlValueInt: 1


CommitId: d14b37a8c2a7f7faa351587c7a3489fa58db0790
Update lowrisc_ibex to lowRISC/ibex@a3a1f9f
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_alu.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_alu.sv
@@ -72,8 +73,14 @@ module ibex_alu #(
   assign adder_in_a    = multdiv_sel_i ? multdiv_operand_a_i : {operand_a_i,1'b1};
 
   // prepare operand b
-  assign operand_b_neg = {operand_b_i,1'b0} ^ {33{adder_op_b_negate}};
-  assign adder_in_b    = multdiv_sel_i ? multdiv_operand_b_i : operand_b_neg;
+  assign operand_b_neg = {operand_b_i,1'b0} ^ {33{1'b1}};
+  always_comb begin
+    unique case(1'b1)
+      multdiv_sel_i:     adder_in_b = multdiv_operand_b_i;
+      adder_op_b_negate: adder_in_b = operand_b_neg;
+      default :          adder_in_b = {operand_b_i, 1'b0};
+    endcase
+  end
 
   // actual adder
   assign adder_result_ext_o = $unsigned(adder_in_a) + $unsigned(adder_in_b);

ParseResult:
INS HdlStmProcess@@ to objs
HdlStmProcess
    HdlStmBlock: SEQ
        list: body
            HdlStmCase: {'__class__': 'HdlValueInt', 'base': 2, 'bits': 1, 'val': '1'} 
                HdlStmCaseType: CASE
                HdlValueInt: 1
                list: cases
                    tuple
                        HdlValueId: multdiv_sel_i
                        HdlOp: ASSIGN
                            list: ops
                                HdlValueId: adder_in_b
                                HdlValueId: multdiv_operand_b_i
                    tuple
                        HdlValueId: adder_op_b_negate
                        HdlOp: ASSIGN
                            list: ops
                                HdlValueId: adder_in_b
                                HdlValueId: operand_b_neg
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: adder_in_b
                        HdlOp: CONCAT
                            list: ops
                                HdlValueId: operand_b_i
                                HdlValueInt: 0
                HdlStmCaseUniqConstrain: UNIQUE
    HdlStmProcessTriggerConstrain: COMB

UPD HdlStmAssign@@ to 
    UPD HdlOp@@XOR to XOR
        UPD HdlOp@@REPL_CONCAT to REPL_CONCAT
            INS HdlValueInt@@1 to ops

UPD HdlStmAssign@@ to 
    UPD HdlOp@@XOR to XOR
        UPD HdlOp@@REPL_CONCAT to REPL_CONCAT
            DEL HdlValueId@@adder_op_b_negate from ops

DEL HdlStmAssign@@ from objs
HdlStmAssign
    HdlOp: TERNARY
        list: ops
            HdlValueId: multdiv_sel_i
            HdlValueId: multdiv_operand_b_i
            HdlValueId: operand_b_neg
    HdlValueId: adder_in_b


CommitId: d14b37a8c2a7f7faa351587c7a3489fa58db0790
Update lowrisc_ibex to lowRISC/ibex@a3a1f9f
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_alu.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_alu.sv
@@ -113,11 +179,7 @@ module ibex_alu #(
   assign shift_op_orc_b = RV32B ? (operator_i == ALU_ORCB) : 1'b0;
 
   logic [31:0] shift_result;
-  logic [31:0] shift_extension_rvb;
-  logic        shift_extension;
   logic [32:0] shift_result_ext;
-  logic [63:0] shift_result_ext_rvb;
-
 
   always_comb begin
     shift_result = operand_a_i;

ParseResult:
MOV HdlIdDef@@shift_extension to objs
HdlIdDef: shift_extension
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

MOV HdlIdDef@@shift_extension_rvb to objs
HdlIdDef: shift_extension_rvb
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 31
                    HdlValueInt: 0
    HdlDirection: INTERNAL

UPD HdlIdDef@@shift_extension to shift_multicycle

UPD HdlIdDef@@shift_extension_rvb to multicycle_result

DEL HdlIdDef@@shift_result_ext_rvb from objs
HdlIdDef: shift_result_ext_rvb
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 63
                    HdlValueInt: 0
    HdlDirection: INTERNAL


CommitId: d14b37a8c2a7f7faa351587c7a3489fa58db0790
Update lowrisc_ibex to lowRISC/ibex@a3a1f9f
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_alu.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_alu.sv
@@ -127,27 +189,15 @@ module ibex_alu #(
       shift_result = operand_a_rev;
     end
 
-    if (RV32B) begin
-      // rotation: extend with a copy of the operand
-      // shift-ones: extend with ones
-      // arithmetic shift: sign-extend.
-      // else: zero-extend.
-      shift_extension_rvb = shift_rot ?
-                            shift_result :
-                            {32{shift_ones || (shift_arith && operand_a_i[31])}};
-
-      shift_result_ext_rvb = {shift_extension_rvb, shift_result} >> shift_amt;
-    end else begin
-      shift_extension  = (shift_arith && shift_result[31]);
-      shift_result_ext = $signed({shift_extension, shift_result}) >>> shift_amt;
-    end
+    shift_result_ext = $signed({shift_ones || (shift_arith && shift_result[31]), shift_result})
+        >>> shift_amt[4:0];
 
     // shift, if this is a shift operation
     if (!shift_none) begin
-        shift_result = RV32B ? shift_result_ext_rvb[31:0] : shift_result_ext[31:0];
+      shift_result = shift_result_ext[31:0];
     end
 
-    // shift left: bytewise reverse. (orcomnine with '0)
+    // shift left: bytewise reverse. (orcombine with '0)
     // orc_b: bytewise reverse and orcombine.
     if (shift_op_orc_b || shift_left) begin
       shift_result = (shift_op_orc_b ? shift_result : 32'h 0) |

ParseResult:
UPD HdlStmAssign@@ to 
    INS HdlOp@@SUB to 
    UPD HdlOp@@SUB to SUB
        INS list@@ops to SUB
        INS HdlValueInt@@32 to ops

UPD HdlStmAssign@@ to 
    INS HdlOp@@TERNARY to 
    HdlOp: TERNARY
        list: ops
            HdlValueId: instr_first_cycle_i
            HdlOp: TERNARY
                list: ops
                    HdlOp: AND_LOG
                        list: ops
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: operand_b_i
                                    HdlValueInt: 5
                            HdlValueId: shift_funnel
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: shift_amt_compl
                            HdlOp: DOWNTO
                                list: ops
                                    HdlValueInt: 4
                                    HdlValueInt: 0
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: operand_b_i
                            HdlOp: DOWNTO
                                list: ops
                                    HdlValueInt: 4
                                    HdlValueInt: 0
            HdlOp: TERNARY
                list: ops
                    HdlOp: AND_LOG
                        list: ops
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: operand_b_i
                                    HdlValueInt: 5
                            HdlValueId: shift_funnel
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: operand_b_i
                            HdlOp: DOWNTO
                                list: ops
                                    HdlValueInt: 4
                                    HdlValueInt: 0
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: shift_amt_compl
                            HdlOp: DOWNTO
                                list: ops
                                    HdlValueInt: 4
                                    HdlValueInt: 0

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@shift_extension_rvb to shift_result_ext
            MOV HdlValueId@@shift_extension_rvb to ops
            HdlValueId: shift_extension_rvb
            UPD HdlOp@@TERNARY to CALL
            MOV HdlOp@@TERNARY to ops
            HdlOp: TERNARY
                list: ops
                    HdlValueId: shift_rot
                    HdlValueId: shift_result
                    HdlOp: REPL_CONCAT
                        list: ops
                            HdlValueInt: 32
                            HdlOp: OR_LOG
                                list: ops
                                    HdlValueId: shift_ones
                                    HdlOp: AND_LOG
                                        list: ops
                                            HdlValueId: shift_arith
                                            HdlOp: INDEX
                                                list: ops
                                                    HdlValueId: operand_a_i
                                                    HdlValueInt: 31
            UPD HdlOp@@TERNARY to TERNARY
                UPD HdlValueId@@shift_rot to $signed
                UPD HdlOp@@REPL_CONCAT to CONCAT
                DEL HdlValueId@@shift_result from ops
                UPD HdlOp@@REPL_CONCAT to REPL_CONCAT
                    DEL list@@ops from REPL_CONCAT
                    list: ops
                        HdlValueInt: 32
                        HdlOp: OR_LOG
                            list: ops
                                HdlValueId: shift_ones
                                HdlOp: AND_LOG
                                    list: ops
                                        HdlValueId: shift_arith
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: operand_a_i
                                                HdlValueInt: 31
            DEL list@@ops from ASSIGN
        DEL HdlOp@@ASSIGN from body
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: shift_result_ext_rvb
                HdlOp: SRL
                    list: ops
                        HdlOp: CONCAT
                            list: ops
                                HdlValueId: shift_extension_rvb
                                HdlValueId: shift_result
                        HdlValueId: shift_amt
        DEL list@@body from SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        UPD list@@body to ops
        MOV list@@body to SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: shift_extension
                    HdlOp: AND_LOG
                        list: ops
                            HdlValueId: shift_arith
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: shift_result
                                    HdlValueInt: 31
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: shift_result_ext
                    HdlOp: SRA
                        list: ops
                            HdlOp: CALL
                                list: ops
                                    HdlValueId: $signed
                                    HdlOp: CONCAT
                                        list: ops
                                            HdlValueId: shift_extension
                                            HdlValueId: shift_result
                            HdlValueId: shift_amt
        UPD HdlOp@@ASSIGN to OR_LOG
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@SRA to SRA
                UPD HdlOp@@CALL to CALL
                    UPD HdlOp@@CONCAT to CONCAT
                        MOV HdlValueId@@shift_result to ops
                        HdlValueId: shift_result
                        DEL HdlValueId@@shift_extension from ops
                        DEL list@@ops from CONCAT
                    DEL HdlValueId@@$signed from ops
                    DEL HdlOp@@CONCAT from ops
                    DEL list@@ops from CALL
                DEL HdlOp@@CALL from ops
                DEL HdlValueId@@shift_amt from ops
                DEL list@@ops from SRA
            DEL HdlValueId@@shift_result_ext from ops
            DEL HdlOp@@SRA from ops
            DEL list@@ops from ASSIGN
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@shift_extension to shift_ones
        DEL HdlOp@@ASSIGN from body
    DEL HdlValueId@@RV32B from 
    DEL HdlStmBlock@@SEQ from 
    DEL list@@elifs from 
    DEL HdlStmBlock@@SEQ from 

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD list@@ops to body
            MOV list@@ops to ASSIGN
            list: ops
                HdlValueId: shift_result
                HdlOp: TERNARY
                    list: ops
                        HdlValueId: RV32B
                        HdlOp: INDEX
                            list: ops
                                HdlValueId: shift_result_ext_rvb
                                HdlOp: DOWNTO
                                    list: ops
                                        HdlValueInt: 31
                                        HdlValueInt: 0
                        HdlOp: INDEX
                            list: ops
                                HdlValueId: shift_result_ext
                                HdlOp: DOWNTO
                                    list: ops
                                        HdlValueInt: 31
                                        HdlValueInt: 0
            UPD HdlOp@@TERNARY to ASSIGN
            UPD HdlOp@@TERNARY to TERNARY
                UPD HdlOp@@INDEX to INDEX
                    UPD HdlValueId@@shift_result_ext_rvb to shift_result
                    MOV HdlValueId@@shift_result_ext_rvb to ops
                    HdlValueId: shift_result_ext_rvb
                    DEL HdlOp@@DOWNTO from ops
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 31
                            HdlValueInt: 0
                    DEL list@@ops from INDEX
                DEL HdlValueId@@RV32B from ops
                DEL HdlOp@@INDEX from ops
            DEL HdlValueId@@shift_result from ops
        DEL HdlOp@@ASSIGN from body
        DEL list@@body from SEQ

DEL HdlStmIf@@ from body


CommitId: d14b37a8c2a7f7faa351587c7a3489fa58db0790
Update lowrisc_ibex to lowRISC/ibex@a3a1f9f
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_alu.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_alu.sv
@@ -182,7 +232,6 @@ module ibex_alu #(
   logic cmp_signed;
 
   always_comb begin
-    cmp_signed = 1'b0;
     unique case (operator_i)
       ALU_GE,
       ALU_LT,

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: cmp_signed
                HdlValueInt: 0


CommitId: d14b37a8c2a7f7faa351587c7a3489fa58db0790
Update lowrisc_ibex to lowRISC/ibex@a3a1f9f
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_alu.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_alu.sv
@@ -191,7 +240,7 @@ module ibex_alu #(
       ALU_MIN,
       ALU_MAX: cmp_signed = 1'b1;
 
-      default:;
+      default: cmp_signed = 1'b0;
     endcase
   end
 

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: cmp_signed
                HdlValueInt: 0

DEL HdlStmNop@@default from operator_i


CommitId: d14b37a8c2a7f7faa351587c7a3489fa58db0790
Update lowrisc_ibex to lowRISC/ibex@a3a1f9f
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_alu.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_alu.sv
@@ -223,7 +272,6 @@ module ibex_alu #(
   logic cmp_result;
 
   always_comb begin
-    cmp_result = is_equal;
     unique case (operator_i)
       ALU_EQ:             cmp_result =  is_equal;
       ALU_NE:             cmp_result = ~is_equal;

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        UPD HdlOp@@ASSIGN to ASSIGN
            INS list@@ops to ASSIGN
            INS HdlOp@@SRA to ops
            UPD HdlOp@@SRA to SRA
                INS list@@ops to SRA
                INS HdlOp@@INDEX to ops
                HdlOp: INDEX
                    list: ops
                        HdlValueId: shift_amt
                        HdlOp: DOWNTO
                            list: ops
                                HdlValueInt: 4
                                HdlValueInt: 0

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: cmp_result
                HdlValueId: is_equal


CommitId: d14b37a8c2a7f7faa351587c7a3489fa58db0790
Update lowrisc_ibex to lowRISC/ibex@a3a1f9f
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_alu.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_alu.sv
@@ -233,7 +281,7 @@ module ibex_alu #(
       ALU_MIN,  ALU_MINU, //RV32B only
       ALU_SLT,  ALU_SLTU: cmp_result = ~is_greater_equal;
 
-      default:;
+      default: cmp_result = is_equal;
     endcase
   end
 

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        UPD HdlOp@@ASSIGN to ASSIGN
            INS list@@ops to ASSIGN
            INS HdlOp@@SRA to ops
            UPD HdlOp@@SRA to SRA
                INS list@@ops to SRA
                INS HdlOp@@INDEX to ops
                HdlOp: INDEX
                    list: ops
                        HdlValueId: shift_amt
                        HdlOp: DOWNTO
                            list: ops
                                HdlValueInt: 4
                                HdlValueInt: 0

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: cmp_result
                HdlValueId: is_equal

DEL HdlStmNop@@default from operator_i


CommitId: d14b37a8c2a7f7faa351587c7a3489fa58db0790
Update lowrisc_ibex to lowRISC/ibex@a3a1f9f
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_alu.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_alu.sv
@@ -243,6 +291,7 @@ module ibex_alu #(
   logic [5:0]  bitcnt_result;
   logic [31:0] bwlogic_result;
   logic [31:0] pack_result;
+  logic [31:0] multicycle_result;
 
   ///////////////////
   // Bitwise Logic //

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        UPD HdlOp@@ASSIGN to ASSIGN
            INS list@@ops to ASSIGN
            INS HdlOp@@SRA to ops
            UPD HdlOp@@SRA to SRA
                INS list@@ops to SRA
                INS HdlOp@@INDEX to ops
                HdlOp: INDEX
                    list: ops
                        HdlValueId: shift_amt
                        HdlOp: DOWNTO
                            list: ops
                                HdlValueInt: 4
                                HdlValueInt: 0


CommitId: d14b37a8c2a7f7faa351587c7a3489fa58db0790
Update lowrisc_ibex to lowRISC/ibex@a3a1f9f
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_alu.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_alu.sv
@@ -315,10 +443,14 @@ module ibex_alu #(
       endcase
     end
   end else begin : g_no_alu_rvb
-    // Rvb result signals
-    assign minmax_result   = '0;
-    assign bitcnt_result   = '0;
-    assign pack_result     = '0;
+    // RV32B result signals
+    assign minmax_result     = '0;
+    assign bitcnt_result     = '0;
+    assign pack_result       = '0;
+    assign multicycle_result = '0;
+    // RV32B support signals
+    assign imd_val_d_o  = '0;
+    assign imd_val_we_o = '0;
   end
 
   ////////////////

ParseResult:
INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: multicycle_result

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: imd_val_d_o

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: imd_val_we_o


CommitId: d14b37a8c2a7f7faa351587c7a3489fa58db0790
Update lowrisc_ibex to lowRISC/ibex@a3a1f9f
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_alu.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_alu.sv
@@ -342,7 +474,6 @@ module ibex_alu #(
       ALU_SRA,
       // RV32B Ops
       ALU_SLO, ALU_SRO,
-      ALU_ROL, ALU_ROR,
       ALU_REV, ALU_REV8,
       ALU_ORCB: result_o = shift_result;
 

ParseResult:
UPD HdlStmCase@@operator_i to operator_i
    DEL tuple@@ from cases
    tuple
        HdlValueId: ALU_ROL
        HdlOp: ASSIGN
            list: ops
                HdlValueId: result_o
                HdlValueId: shift_result
    DEL tuple@@ from cases
    tuple
        HdlValueId: ALU_ROR
        HdlOp: ASSIGN
            list: ops
                HdlValueId: result_o
                HdlValueId: shift_result


CommitId: d14b37a8c2a7f7faa351587c7a3489fa58db0790
Update lowrisc_ibex to lowRISC/ibex@a3a1f9f
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_alu.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_alu.sv
@@ -364,6 +495,11 @@ module ibex_alu #(
       ALU_PACK, ALU_PACKH,
       ALU_PACKU: result_o = pack_result;
 
+      // Ternary Bitmanip Operations (RV32B Ops)
+      ALU_CMIX, ALU_CMOV,
+      ALU_FSL,  ALU_FSR,
+      ALU_ROL,  ALU_ROR: result_o = multicycle_result;
+
       default: ;
     endcase
   end
ParseResult:
UPD HdlStmCase@@operator_i to operator_i
    DEL tuple@@ from cases
    tuple
        HdlValueId: ALU_ROL
        HdlOp: ASSIGN
            list: ops
                HdlValueId: result_o
                HdlValueId: shift_result
    DEL tuple@@ from cases
    tuple
        HdlValueId: ALU_ROR
        HdlOp: ASSIGN
            list: ops
                HdlValueId: result_o
                HdlValueId: shift_result


CommitId: a17530f0a51524486c59b0c8d5295d6ded247ec2
[usbdev] USB device update from ETH repo
--- a/hw/ip/usb_fs_nb_pe/rtl/usb_fs_nb_pe.sv
+++ b/hw/ip/usb_fs_nb_pe/rtl/usb_fs_nb_pe.sv
@@ -25,6 +25,10 @@ module usb_fs_nb_pe #(
   input                          link_reset_i,  // USB reset, sync to 48 MHz, active high
   input [6:0]                    dev_addr_i,
 
+  input  logic                   cfg_eop_single_bit_i, // 1: detect a single SE0 bit as EOP
+  input  logic                   tx_osc_test_mode_i, // Oscillator test mode (constantly output JK)
+  input  logic [NumOutEps-1:0]   data_toggle_clear_i, // Clear the data toggles for an EP
+
   ////////////////////////////
   // USB Endpoint Interface //
   ////////////////////////////

ParseResult:
INS HdlIdDef@@cfg_eop_single_bit_i to ports
HdlIdDef: cfg_eop_single_bit_i
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: IN

INS HdlIdDef@@tx_osc_test_mode_i to ports
HdlIdDef: tx_osc_test_mode_i
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: IN

INS HdlIdDef@@data_toggle_clear_i to ports
HdlIdDef: data_toggle_clear_i
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlOp: SUB
                        list: ops
                            HdlValueId: NumOutEps
                            HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: IN


CommitId: a17530f0a51524486c59b0c8d5295d6ded247ec2
[usbdev] USB device update from ETH repo
--- a/hw/ip/usb_fs_nb_pe/rtl/usb_fs_nb_pe.sv
+++ b/hw/ip/usb_fs_nb_pe/rtl/usb_fs_nb_pe.sv
@@ -43,6 +47,7 @@ module usb_fs_nb_pe #(
   output logic [NumOutEps-1:0]   out_ep_setup_o,
   input [NumOutEps-1:0]          out_ep_full_i, // Cannot accept data
   input [NumOutEps-1:0]          out_ep_stall_i, // Stalled
+  input logic  [NumOutEps-1:0]   out_ep_iso_i, // Configure endpoint in isochronous mode
 
   // in endpoint interfaces
   output logic [3:0]             in_ep_current_o, // Other signals addressed to this ep

ParseResult:
INS HdlIdDef@@out_ep_iso_i to ports
HdlIdDef: out_ep_iso_i
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlOp: SUB
                        list: ops
                            HdlValueId: NumOutEps
                            HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: IN


CommitId: a17530f0a51524486c59b0c8d5295d6ded247ec2
[usbdev] USB device update from ETH repo
--- a/hw/ip/usb_fs_nb_pe/rtl/usb_fs_nb_pe.sv
+++ b/hw/ip/usb_fs_nb_pe/rtl/usb_fs_nb_pe.sv
@@ -55,21 +60,26 @@ module usb_fs_nb_pe #(
   input [NumInEps-1:0]           in_ep_has_data_i, // Endpoint has data to supply
   input [7:0]                    in_ep_data_i, // Data for current get_addr
   input [NumInEps-1:0]           in_ep_data_done_i, // Set when out of data
+  input logic  [NumInEps-1:0]    in_ep_iso_i, // Configure endpoint in isochronous mode
 
   // sof interface
   output                         sof_valid_o,
   output [10:0]                  frame_index_o,
 
-  /////////////////////////
-  // USB TX/RX Interface //
-  /////////////////////////
-  output                         usb_p_tx_o,
-  output                         usb_n_tx_o,
+  // RX errors
+  output logic                   rx_crc_err_o,
+  output logic                   rx_pid_err_o,
+  output logic                   rx_bitstuff_err_o,
 
-  input                          usb_p_rx_i,
-  input                          usb_n_rx_i,
+  ///////////////////////////////////////
+  // USB TX/RX Interface (synchronous) //
+  ///////////////////////////////////////
+  input  logic                   usb_d_i,
+  input  logic                   usb_se0_i,
 
-  output                         usb_tx_en_o
+  output logic                   usb_d_o,
+  output logic                   usb_se0_o,
+  output logic                   usb_oe_o
 );
 
   import usb_consts_pkg::*;

ParseResult:
INS HdlIdDef@@in_ep_iso_i to ports
HdlIdDef: in_ep_iso_i
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlOp: SUB
                        list: ops
                            HdlValueId: NumInEps
                            HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: IN

UPD HdlIdDef@@usb_p_tx_o to rx_crc_err_o

UPD HdlIdDef@@usb_n_tx_o to rx_pid_err_o

INS HdlIdDef@@rx_bitstuff_err_o to ports
HdlIdDef: rx_bitstuff_err_o
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: OUT

UPD HdlIdDef@@usb_p_rx_i to usb_d_i

UPD HdlIdDef@@usb_n_rx_i to usb_se0_i

UPD HdlIdDef@@usb_tx_en_o to usb_d_o

INS HdlIdDef@@usb_se0_o to ports
HdlIdDef: usb_se0_o
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: OUT

INS HdlIdDef@@usb_oe_o to ports
HdlIdDef: usb_oe_o
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: OUT

UPD HdlIdDef@@usb_p_tx_o to usb_p_tx_o
    UPD HdlValueId@@wire to logic
    MOV HdlValueId@@wire to usb_p_tx_o
    HdlValueId: wire

UPD HdlIdDef@@usb_n_tx_o to usb_n_tx_o
    UPD HdlValueId@@wire to logic
    MOV HdlValueId@@wire to usb_n_tx_o
    HdlValueId: wire

UPD HdlIdDef@@usb_p_rx_i to usb_p_rx_i
    UPD HdlValueId@@wire to logic
    MOV HdlValueId@@wire to usb_p_rx_i
    HdlValueId: wire

UPD HdlIdDef@@usb_n_rx_i to usb_n_rx_i
    UPD HdlValueId@@wire to logic
    MOV HdlValueId@@wire to usb_n_rx_i
    HdlValueId: wire

UPD HdlIdDef@@usb_tx_en_o to usb_tx_en_o
    UPD HdlValueId@@wire to logic
    MOV HdlValueId@@wire to usb_tx_en_o
    HdlValueId: wire


CommitId: e568226e58154dd7ef305cc2f2ec91de8e7869ad
Update lowrisc_ibex to lowRISC/ibex@2b6a951
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_load_store_unit.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_load_store_unit.sv
@@ -53,14 +53,16 @@ module ibex_load_store_unit (
 
   logic [31:0]  data_addr;
   logic [31:0]  data_addr_w_aligned;
-  logic [31:0]  addr_last_q, addr_last_d;
+  logic [31:0]  addr_last_q;
 
-  logic         data_update;
-  logic [31:0]  rdata_q, rdata_d;
-  logic [1:0]   rdata_offset_q, rdata_offset_d;
-  logic [1:0]   data_type_q, data_type_d;
-  logic         data_sign_ext_q, data_sign_ext_d;
-  logic         data_we_q, data_we_d;
+  logic         addr_update;
+  logic         ctrl_update;
+  logic         rdata_update;
+  logic [31:8]  rdata_q;
+  logic [1:0]   rdata_offset_q;
+  logic [1:0]   data_type_q;
+  logic         data_sign_ext_q;
+  logic         data_we_q;
 
   logic [1:0]   wdata_offset;   // mux control for data to be written to memory
 

ParseResult:
MOV HdlIdDef@@data_we_d to objs
HdlIdDef: data_we_d
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

MOV HdlIdDef@@data_sign_ext_d to objs
HdlIdDef: data_sign_ext_d
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

UPD HdlIdDef@@data_we_d to addr_update

UPD HdlIdDef@@data_update to ctrl_update

UPD HdlIdDef@@data_sign_ext_d to rdata_update

INS HdlIdDef@@rdata_q to objs
HdlIdDef: rdata_q
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 31
                    HdlValueInt: 8
    HdlDirection: INTERNAL

DEL HdlIdDef@@addr_last_d from objs
HdlIdDef: addr_last_d
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 31
                    HdlValueInt: 0
    HdlDirection: INTERNAL

DEL HdlIdDef@@rdata_q from objs
HdlIdDef: rdata_q
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 31
                    HdlValueInt: 0
    HdlDirection: INTERNAL

DEL HdlIdDef@@rdata_d from objs
HdlIdDef: rdata_d
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 31
                    HdlValueInt: 0
    HdlDirection: INTERNAL

DEL HdlIdDef@@rdata_offset_d from objs
HdlIdDef: rdata_offset_d
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: INTERNAL

DEL HdlIdDef@@data_type_d from objs
HdlIdDef: data_type_d
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: INTERNAL


CommitId: e568226e58154dd7ef305cc2f2ec91de8e7869ad
Update lowrisc_ibex to lowRISC/ibex@2b6a951
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_load_store_unit.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_load_store_unit.sv
@@ -76,13 +78,13 @@ module ibex_load_store_unit (
   logic         split_misaligned_access;
   logic         handle_misaligned_q, handle_misaligned_d; // high after receiving grant for first
                                                           // part of a misaligned access
-  logic         pmp_err_d;
-  logic         pmp_err_q;
+  logic         pmp_err_q, pmp_err_d;
+  logic         lsu_err_q, lsu_err_d;
   logic         data_or_pmp_err;
 
   typedef enum logic [2:0]  {
     IDLE, WAIT_GNT_MIS, WAIT_RVALID_MIS, WAIT_GNT, WAIT_RVALID,
-    WAIT_GNT_ERR, WAIT_RVALID_ERR, WAIT_RVALID_DONE
+    WAIT_RVALID_DONE
   } ls_fsm_e;
 
   ls_fsm_e ls_fsm_cs, ls_fsm_ns;

ParseResult:
MOV HdlIdDef@@pmp_err_d to objs
HdlIdDef: pmp_err_d
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

INS HdlIdDef@@lsu_err_q to objs
HdlIdDef: lsu_err_q
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

INS HdlIdDef@@lsu_err_d to objs
HdlIdDef: lsu_err_d
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL


CommitId: e568226e58154dd7ef305cc2f2ec91de8e7869ad
Update lowrisc_ibex to lowRISC/ibex@2b6a951
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_load_store_unit.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_load_store_unit.sv
@@ -324,6 +323,11 @@ module ibex_load_store_unit (
     handle_misaligned_d = handle_misaligned_q;
     data_or_pmp_err     = 1'b0;
     pmp_err_d           = pmp_err_q;
+    lsu_err_d           = lsu_err_q;
+
+    addr_update         = 1'b0;
+    ctrl_update         = 1'b0;
+    rdata_update        = 1'b0;
 
     unique case (ls_fsm_cs)
 

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: lsu_err_d
                HdlValueId: lsu_err_q
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: addr_update
                HdlValueInt: 0
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: ctrl_update
                HdlValueInt: 0
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: rdata_update
                HdlValueInt: 0

UPD HdlStmCase@@ls_fsm_cs to ls_fsm_cs
    INS tuple@@ to cases
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmCase@@ls_fsm_cs to ls_fsm_cs
    UPD HdlValueId@@WAIT_GNT_ERR to WAIT_RVALID_DONE
    MOV HdlValueId@@WAIT_GNT_ERR to 
    HdlValueId: WAIT_GNT_ERR
    UPD HdlStmBlock@@SEQ to SEQ
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: addr_incr_req_o
                HdlValueInt: 1
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: data_req_o
                HdlValueInt: 1
        DEL list@@body from SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: data_req_o
                HdlValueInt: 0
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases
    DEL HdlValueId@@WAIT_RVALID_ERR from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases
    DEL HdlValueId@@WAIT_RVALID_DONE from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: lsu_err_d
                HdlValueInt: 0

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: ctrl_update
                HdlValueInt: 1
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: addr_update
                HdlValueInt: 1


CommitId: e568226e58154dd7ef305cc2f2ec91de8e7869ad
Update lowrisc_ibex to lowRISC/ibex@2b6a951
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_load_store_unit.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_load_store_unit.sv
@@ -331,7 +335,10 @@ module ibex_load_store_unit (
         if (data_req_ex_i) begin
           data_req_o = 1'b1;
           pmp_err_d  = data_pmp_err_i;
+          lsu_err_d  = 1'b0;
           if (data_gnt_i) begin
+            ctrl_update         = 1'b1;
+            addr_update         = 1'b1;
             handle_misaligned_d = split_misaligned_access;
             ls_fsm_ns           = split_misaligned_access ? WAIT_RVALID_MIS : WAIT_RVALID;
           end else begin

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: lsu_err_d
                HdlValueId: lsu_err_q
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: addr_update
                HdlValueInt: 0
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: ctrl_update
                HdlValueInt: 0
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: rdata_update
                HdlValueInt: 0

UPD HdlStmCase@@ls_fsm_cs to ls_fsm_cs
    INS tuple@@ to cases
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmCase@@ls_fsm_cs to ls_fsm_cs
    UPD HdlValueId@@WAIT_GNT_ERR to WAIT_RVALID_DONE
    MOV HdlValueId@@WAIT_GNT_ERR to 
    HdlValueId: WAIT_GNT_ERR
    UPD HdlStmBlock@@SEQ to SEQ
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: addr_incr_req_o
                HdlValueInt: 1
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: data_req_o
                HdlValueInt: 1
        DEL list@@body from SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: data_req_o
                HdlValueInt: 0
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases
    DEL HdlValueId@@WAIT_RVALID_ERR from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases
    DEL HdlValueId@@WAIT_RVALID_DONE from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: lsu_err_d
                HdlValueInt: 0

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: ctrl_update
                HdlValueInt: 1
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: addr_update
                HdlValueInt: 1


CommitId: e568226e58154dd7ef305cc2f2ec91de8e7869ad
Update lowrisc_ibex to lowRISC/ibex@2b6a951
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_load_store_unit.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_load_store_unit.sv
@@ -347,6 +354,8 @@ module ibex_load_store_unit (
         // pmp_err_q is only updated for new address phases and so can be used in WAIT_GNT* and
         // WAIT_RVALID* states
         if (data_gnt_i || pmp_err_q) begin
+          addr_update         = 1'b1;
+          ctrl_update         = 1'b1;
           handle_misaligned_d = 1'b1;
           ls_fsm_ns           = WAIT_RVALID_MIS;
         end

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: lsu_err_d
                HdlValueId: lsu_err_q
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: addr_update
                HdlValueInt: 0
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: ctrl_update
                HdlValueInt: 0
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: rdata_update
                HdlValueInt: 0

UPD HdlStmCase@@ls_fsm_cs to ls_fsm_cs
    INS tuple@@ to cases
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmCase@@ls_fsm_cs to ls_fsm_cs
    UPD HdlValueId@@WAIT_GNT_ERR to WAIT_RVALID_DONE
    MOV HdlValueId@@WAIT_GNT_ERR to 
    HdlValueId: WAIT_GNT_ERR
    UPD HdlStmBlock@@SEQ to SEQ
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: addr_incr_req_o
                HdlValueInt: 1
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: data_req_o
                HdlValueInt: 1
        DEL list@@body from SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: data_req_o
                HdlValueInt: 0
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases
    DEL HdlValueId@@WAIT_RVALID_ERR from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases
    DEL HdlValueId@@WAIT_RVALID_DONE from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: addr_update
                HdlValueInt: 1
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: ctrl_update
                HdlValueInt: 1


CommitId: e568226e58154dd7ef305cc2f2ec91de8e7869ad
Update lowrisc_ibex to lowRISC/ibex@2b6a951
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_load_store_unit.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_load_store_unit.sv
@@ -362,18 +371,14 @@ module ibex_load_store_unit (
         if (data_rvalid_i || pmp_err_q) begin
           // Update the PMP error for the second part
           pmp_err_d = data_pmp_err_i;
-          if (pmp_err_q || data_err_i) begin
-            // first part created an error, abort transaction
-            data_valid_o        = 1'b1;
-            data_or_pmp_err     = 1'b1;
-            handle_misaligned_d = 1'b0;
-            // If already granted, wait for second rvalid
-            ls_fsm_ns = data_gnt_i ? WAIT_RVALID_ERR : WAIT_GNT_ERR;
-
-          end else begin
-            // No error in first part, proceed with second part
-            ls_fsm_ns = data_gnt_i ? WAIT_RVALID : WAIT_GNT;
-          end
+          // Record the error status of the first part
+          lsu_err_d = data_err_i | pmp_err_q;
+          // Capture the first rdata for loads
+          rdata_update = ~data_we_q;
+          // If already granted, wait for second rvalid
+          ls_fsm_ns = data_gnt_i ? WAIT_RVALID : WAIT_GNT;
+          // Update the address for the second part, if no error
+          addr_update = data_gnt_i & ~(data_err_i | pmp_err_q);
 
         end else begin
           // first part rvalid is NOT received

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: lsu_err_d
                HdlValueId: lsu_err_q
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: addr_update
                HdlValueInt: 0
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: ctrl_update
                HdlValueInt: 0
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: rdata_update
                HdlValueInt: 0

UPD HdlStmCase@@ls_fsm_cs to ls_fsm_cs
    INS tuple@@ to cases
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmCase@@ls_fsm_cs to ls_fsm_cs
    UPD HdlValueId@@WAIT_GNT_ERR to WAIT_RVALID_DONE
    MOV HdlValueId@@WAIT_GNT_ERR to 
    HdlValueId: WAIT_GNT_ERR
    UPD HdlStmBlock@@SEQ to SEQ
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: addr_incr_req_o
                HdlValueInt: 1
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: data_req_o
                HdlValueInt: 1
        DEL list@@body from SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: data_req_o
                HdlValueInt: 0
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases
    DEL HdlValueId@@WAIT_RVALID_ERR from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases
    DEL HdlValueId@@WAIT_RVALID_DONE from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases

UPD HdlStmIf@@ to 
    UPD HdlOp@@OR_LOG to ASSIGN
    MOV HdlOp@@OR_LOG to 
    HdlOp: OR_LOG
        list: ops
            HdlValueId: pmp_err_q
            HdlValueId: data_err_i
    UPD HdlStmBlock@@SEQ to SEQ
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: ls_fsm_ns
                HdlOp: TERNARY
                    list: ops
                        HdlValueId: data_gnt_i
                        HdlValueId: WAIT_RVALID
                        HdlValueId: WAIT_GNT
        DEL list@@body from SEQ
    UPD HdlOp@@OR_LOG to OR_LOG
        UPD HdlValueId@@pmp_err_q to lsu_err_d
        DEL HdlValueId@@data_err_i from ops
    DEL HdlStmBlock@@SEQ from 
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: data_valid_o
                    HdlValueInt: 1
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: data_or_pmp_err
                    HdlValueInt: 1
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: handle_misaligned_d
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: ls_fsm_ns
                    HdlOp: TERNARY
                        list: ops
                            HdlValueId: data_gnt_i
                            HdlValueId: WAIT_RVALID_ERR
                            HdlValueId: WAIT_GNT_ERR
    DEL list@@elifs from 
    DEL HdlStmBlock@@SEQ from 

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: addr_update
                HdlOp: AND
                    list: ops
                        HdlValueId: data_gnt_i
                        HdlOp: NEG
                            list: ops
                                HdlOp: OR
                                    list: ops
                                        HdlValueId: data_err_i
                                        HdlValueId: pmp_err_q

DEL HdlStmIf@@ from body


CommitId: e568226e58154dd7ef305cc2f2ec91de8e7869ad
Update lowrisc_ibex to lowRISC/ibex@2b6a951
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_load_store_unit.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_load_store_unit.sv
@@ -389,15 +394,18 @@ module ibex_load_store_unit (
         addr_incr_req_o = handle_misaligned_q;
         data_req_o      = 1'b1;
         if (data_gnt_i || pmp_err_q) begin
-          ls_fsm_ns = WAIT_RVALID;
+          ctrl_update = 1'b1;
+          // Update the address, unless there was an error
+          addr_update = ~lsu_err_q;
+          ls_fsm_ns   = WAIT_RVALID;
         end
       end
 
       WAIT_RVALID: begin
-        data_req_o = 1'b0;
         if (data_rvalid_i || pmp_err_q) begin
           data_valid_o        = 1'b1;
-          data_or_pmp_err     = data_err_i | pmp_err_q;
+          // Data error from either part
+          data_or_pmp_err     = lsu_err_q | data_err_i | pmp_err_q;
           handle_misaligned_d = 1'b0;
           ls_fsm_ns           = IDLE;
         end else begin

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: lsu_err_d
                HdlValueId: lsu_err_q
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: addr_update
                HdlValueInt: 0
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: ctrl_update
                HdlValueInt: 0
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: rdata_update
                HdlValueInt: 0

UPD HdlStmCase@@ls_fsm_cs to ls_fsm_cs
    INS tuple@@ to cases
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmCase@@ls_fsm_cs to ls_fsm_cs
    UPD HdlValueId@@WAIT_GNT_ERR to WAIT_RVALID_DONE
    MOV HdlValueId@@WAIT_GNT_ERR to 
    HdlValueId: WAIT_GNT_ERR
    UPD HdlStmBlock@@SEQ to SEQ
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: addr_incr_req_o
                HdlValueInt: 1
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: data_req_o
                HdlValueInt: 1
        DEL list@@body from SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: data_req_o
                HdlValueInt: 0
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases
    DEL HdlValueId@@WAIT_RVALID_ERR from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases
    DEL HdlValueId@@WAIT_RVALID_DONE from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: ctrl_update
                HdlValueInt: 1
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: addr_update
                HdlOp: NEG
                    list: ops
                        HdlValueId: lsu_err_q

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            MOV HdlOp@@OR to ops
            HdlOp: OR
                list: ops
                    HdlValueId: data_err_i
                    HdlValueId: pmp_err_q
    DEL HdlOp@@OR_LOG from 
    HdlOp: OR_LOG
        list: ops
            HdlValueId: data_rvalid_i
            HdlValueId: pmp_err_q

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlOp@@OR to ops
            HdlOp: OR
                list: ops
                    HdlOp: OR
                        list: ops
                            HdlValueId: lsu_err_q
                            HdlValueId: data_err_i
                    HdlValueId: pmp_err_q


CommitId: e568226e58154dd7ef305cc2f2ec91de8e7869ad
Update lowrisc_ibex to lowRISC/ibex@2b6a951
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_load_store_unit.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_load_store_unit.sv
@@ -449,28 +438,18 @@ module ibex_load_store_unit (
     endcase
   end
 
-  // store last address for mtval + AGU for misaligned transactions:
-  // - misaligned address needed for correct generation of data_be and data_rdata_ext
-  // - do not update in case of errors, mtval needs the failing address
-  always_comb begin
-    addr_last_d = addr_last_q;
-    if (data_req_o & data_gnt_i & ~(load_err_o | store_err_o)) begin
-      addr_last_d = data_addr;
-    end
-  end
-
   // registers for FSM
   always_ff @(posedge clk_i or negedge rst_ni) begin
     if (!rst_ni) begin
       ls_fsm_cs           <= IDLE;
-      addr_last_q         <= '0;
       handle_misaligned_q <= '0;
       pmp_err_q           <= '0;
+      lsu_err_q           <= '0;
     end else begin
       ls_fsm_cs           <= ls_fsm_ns;
-      addr_last_q         <= addr_last_d;
       handle_misaligned_q <= handle_misaligned_d;
       pmp_err_q           <= pmp_err_d;
+      lsu_err_q           <= lsu_err_d;
     end
   end
 
ParseResult:
MOV HdlStmAssign@@ to body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: addr_last_q

UPD HdlStmCase@@ls_fsm_cs to ls_fsm_cs
    UPD HdlValueId@@WAIT_GNT_ERR to WAIT_RVALID_DONE
    MOV HdlValueId@@WAIT_GNT_ERR to 
    HdlValueId: WAIT_GNT_ERR
    UPD HdlStmBlock@@SEQ to SEQ
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: addr_incr_req_o
                HdlValueInt: 1
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: data_req_o
                HdlValueInt: 1
        DEL list@@body from SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: data_req_o
                HdlValueInt: 0
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases
    DEL HdlValueId@@WAIT_RVALID_ERR from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases
    DEL HdlValueId@@WAIT_RVALID_DONE from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: lsu_err_q

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueId: lsu_err_d
    HdlValueId: lsu_err_q

DEL HdlStmProcess@@ from objs
HdlStmProcess
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: addr_last_d
                    HdlValueId: addr_last_q
            HdlStmIf
                HdlOp: AND
                    list: ops
                        HdlOp: AND
                            list: ops
                                HdlValueId: data_req_o
                                HdlValueId: data_gnt_i
                        HdlOp: NEG
                            list: ops
                                HdlOp: OR
                                    list: ops
                                        HdlValueId: load_err_o
                                        HdlValueId: store_err_o
                HdlStmBlock: SEQ
                    list: body
                        HdlOp: ASSIGN
                            list: ops
                                HdlValueId: addr_last_d
                                HdlValueId: data_addr
                list: elifs
    HdlStmProcessTriggerConstrain: COMB

DEL HdlStmAssign@@ from body
HdlStmAssign
    HdlValueId: addr_last_d
    HdlValueId: addr_last_q


CommitId: 151991161cdb9063b5a79d908d33520ec912f14f
[ast] Add Fix AscentLint Errors
--- a/hw/top_earlgrey/ip/ast/rtl/dev_entropy.sv
+++ b/hw/top_earlgrey/ip/ast/rtl/dev_entropy.sv
@@ -223,7 +223,7 @@ end
 // Packer FIFO (32to1 bit)
 ////////////////////////////////////////
 logic rdata, rvalid;
-logic [6-1:0] unc_depth;
+logic [6-1:0] depth;
 
 prim_packer_fifo #(
   .InW ( 32 ),

ParseResult:
UPD HdlIdDef@@unc_depth to depth


CommitId: 151991161cdb9063b5a79d908d33520ec912f14f
[ast] Add Fix AscentLint Errors
--- a/hw/top_earlgrey/ip/ast/rtl/dev_entropy.sv
+++ b/hw/top_earlgrey/ip/ast/rtl/dev_entropy.sv
@@ -231,18 +231,27 @@ prim_packer_fifo #(
 ) u_dev_fifo (
   .clk_i ( clk_dev_i ),
   .rst_ni ( rst_dev_ni ),
-  .clr_i ( 1'b0 ),                // !dev_en_dev ), // Clear (sync)
-  .wvalid_i ( wvalid ),           // Write Valid
-  .wdata_i ( wdata ),             // Write Data (32-bit)
-  .wready_o ( wready ),           // Write Ready
+  .clr_i ( 1'b0 ),            // !dev_en_dev ), // Clear (sync)
+  .wvalid_i ( wvalid ),       // Write Valid
+  .wdata_i ( wdata ),         // Write Data (32-bit)
+  .wready_o ( wready ),       // Write Ready
   //
-  .rvalid_o ( rvalid ),           // Read Valid
-  .rdata_o ( rdata ),             // Read Data
-  .rready_i ( rready ),           // Read Ready (done)
-  .depth_o ( unc_depth[6-1:0] )   // empty when (depth_o == `0)
+  .rvalid_o ( rvalid ),       // Read Valid
+  .rdata_o ( rdata ),         // Read Data
+  .rready_i ( rready ),       // Read Ready (done)
+  .depth_o ( depth[6-1:0] )   // empty when (depth_o == `0)
 );
 
 assign rready     = rvalid && rate_pulse;
 assign dev_data_o = rdata && rate_pulse;
 
+
+///////////////////////
+// Unused Signals
+///////////////////////
+logic unused_sigs;
+assign unused_sigs = ^{ depth[6-1:0],
+                        dev_rate[31:16]
+                      };
+
 endmodule : dev_entropy
ParseResult:
INS HdlIdDef@@unused_sigs to objs
HdlIdDef: unused_sigs
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: XOR_UNARY
        list: ops
            HdlOp: CONCAT
                list: ops
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: depth
                            HdlOp: DOWNTO
                                list: ops
                                    HdlOp: SUB
                                        list: ops
                                            HdlValueInt: 6
                                            HdlValueInt: 1
                                    HdlValueInt: 0
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: dev_rate
                            HdlOp: DOWNTO
                                list: ops
                                    HdlValueInt: 31
                                    HdlValueInt: 16
    HdlValueId: unused_sigs


CommitId: 5649c2a7681569cad34ed269e7d7ac81f051a479
[top] Ast updates
--- a/hw/ip/prim_generic/rtl/prim_generic_flash.sv
+++ b/hw/ip/prim_generic/rtl/prim_generic_flash.sv
@@ -27,7 +27,7 @@ module prim_generic_flash #(
   input tms_i,
   output logic tdo_o,
   input lc_ctrl_pkg::lc_tx_t bist_enable_i,
-  input scanmode_i,
+  input lc_ctrl_pkg::lc_tx_t scanmode_i,
   input scan_en_i,
   input scan_rst_ni,
   input flash_power_ready_h_i,

ParseResult:
UPD HdlIdDef@@scanmode_i to scanmode_i
    INS HdlOp@@DOUBLE_COLON to scanmode_i
    UPD HdlOp@@DOUBLE_COLON to DOUBLE_COLON
        INS list@@ops to DOUBLE_COLON
        INS HdlValueId@@lc_tx_t to ops

UPD HdlIdDef@@scanmode_i to scanmode_i
    UPD HdlValueId@@wire to lc_ctrl_pkg
    MOV HdlValueId@@wire to scanmode_i
    HdlValueId: wire


CommitId: 5649c2a7681569cad34ed269e7d7ac81f051a479
[top] Ast updates
--- a/hw/ip/prim_generic/rtl/prim_generic_flash.sv
+++ b/hw/ip/prim_generic/rtl/prim_generic_flash.sv
@@ -99,7 +99,7 @@ module prim_generic_flash #(
     );
   end
 
-  logic unused_scanmode;
+  lc_ctrl_pkg::lc_tx_t unused_scanmode;
   logic unused_scan_en;
   logic unused_scan_rst_n;
   logic [TestModeWidth-1:0] unused_flash_test_mode;
ParseResult:
UPD HdlIdDef@@unused_scanmode to unused_scanmode
    UPD HdlOp@@PARAMETRIZATION to DOUBLE_COLON
    UPD HdlOp@@PARAMETRIZATION to PARAMETRIZATION
        UPD HdlValueId@@logic to lc_tx_t

UPD HdlIdDef@@unused_scanmode to unused_scanmode
    UPD HdlOp@@DOUBLE_COLON to DOUBLE_COLON
        INS HdlValueId@@lc_ctrl_pkg to ops


CommitId: 163050b9c89b00dbac598f9b8ea68d2e99883a05
[pwrmgr] - pwrmgr integration into top_earlgrey
--- a/hw/top_earlgrey/ip/xbar_main/rtl/autogen/xbar_main.sv
+++ b/hw/top_earlgrey/ip/xbar_main/rtl/autogen/xbar_main.sv
@@ -408,7 +408,9 @@ end
       ((tl_s1n_20_us_h2d.a_address <= (ADDR_MASK_PERI[1] + ADDR_SPACE_PERI[1])) &&
        (tl_s1n_20_us_h2d.a_address >= ADDR_SPACE_PERI[1])) ||
       ((tl_s1n_20_us_h2d.a_address <= (ADDR_MASK_PERI[2] + ADDR_SPACE_PERI[2])) &&
-       (tl_s1n_20_us_h2d.a_address >= ADDR_SPACE_PERI[2]))
+       (tl_s1n_20_us_h2d.a_address >= ADDR_SPACE_PERI[2])) ||
+      ((tl_s1n_20_us_h2d.a_address <= (ADDR_MASK_PERI[3] + ADDR_SPACE_PERI[3])) &&
+       (tl_s1n_20_us_h2d.a_address >= ADDR_SPACE_PERI[3]))
     ) begin
       dev_sel_s1n_20 = 4'd4;
 

ParseResult:
UPD HdlStmIf@@ to 
    INS HdlOp@@OR_LOG to 
    UPD HdlOp@@OR_LOG to OR_LOG
        INS list@@ops to OR_LOG
        INS HdlOp@@AND_LOG to ops
        HdlOp: AND_LOG
            list: ops
                HdlOp: LE
                    list: ops
                        HdlOp: DOT
                            list: ops
                                HdlValueId: tl_s1n_20_us_h2d
                                HdlValueId: a_address
                        HdlOp: ADD
                            list: ops
                                HdlOp: INDEX
                                    list: ops
                                        HdlValueId: ADDR_MASK_PERI
                                        HdlValueInt: 3
                                HdlOp: INDEX
                                    list: ops
                                        HdlValueId: ADDR_SPACE_PERI
                                        HdlValueInt: 3
                HdlOp: GE
                    list: ops
                        HdlOp: DOT
                            list: ops
                                HdlValueId: tl_s1n_20_us_h2d
                                HdlValueId: a_address
                        HdlOp: INDEX
                            list: ops
                                HdlValueId: ADDR_SPACE_PERI
                                HdlValueInt: 3

UPD HdlStmIf@@ to 
    MOV HdlOp@@OR_LOG to 
    HdlOp: OR_LOG
        list: ops
            HdlOp: OR_LOG
                list: ops
                    HdlOp: AND_LOG
                        list: ops
                            HdlOp: LE
                                list: ops
                                    HdlOp: DOT
                                        list: ops
                                            HdlValueId: tl_s1n_20_us_h2d
                                            HdlValueId: a_address
                                    HdlOp: ADD
                                        list: ops
                                            HdlOp: INDEX
                                                list: ops
                                                    HdlValueId: ADDR_MASK_PERI
                                                    HdlValueInt: 0
                                            HdlOp: INDEX
                                                list: ops
                                                    HdlValueId: ADDR_SPACE_PERI
                                                    HdlValueInt: 0
                            HdlOp: GE
                                list: ops
                                    HdlOp: DOT
                                        list: ops
                                            HdlValueId: tl_s1n_20_us_h2d
                                            HdlValueId: a_address
                                    HdlOp: INDEX
                                        list: ops
                                            HdlValueId: ADDR_SPACE_PERI
                                            HdlValueInt: 0
                    HdlOp: AND_LOG
                        list: ops
                            HdlOp: LE
                                list: ops
                                    HdlOp: DOT
                                        list: ops
                                            HdlValueId: tl_s1n_20_us_h2d
                                            HdlValueId: a_address
                                    HdlOp: ADD
                                        list: ops
                                            HdlOp: INDEX
                                                list: ops
                                                    HdlValueId: ADDR_MASK_PERI
                                                    HdlValueInt: 1
                                            HdlOp: INDEX
                                                list: ops
                                                    HdlValueId: ADDR_SPACE_PERI
                                                    HdlValueInt: 1
                            HdlOp: GE
                                list: ops
                                    HdlOp: DOT
                                        list: ops
                                            HdlValueId: tl_s1n_20_us_h2d
                                            HdlValueId: a_address
                                    HdlOp: INDEX
                                        list: ops
                                            HdlValueId: ADDR_SPACE_PERI
                                            HdlValueInt: 1
            HdlOp: AND_LOG
                list: ops
                    HdlOp: LE
                        list: ops
                            HdlOp: DOT
                                list: ops
                                    HdlValueId: tl_s1n_20_us_h2d
                                    HdlValueId: a_address
                            HdlOp: ADD
                                list: ops
                                    HdlOp: INDEX
                                        list: ops
                                            HdlValueId: ADDR_MASK_PERI
                                            HdlValueInt: 2
                                    HdlOp: INDEX
                                        list: ops
                                            HdlValueId: ADDR_SPACE_PERI
                                            HdlValueInt: 2
                    HdlOp: GE
                        list: ops
                            HdlOp: DOT
                                list: ops
                                    HdlValueId: tl_s1n_20_us_h2d
                                    HdlValueId: a_address
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: ADDR_SPACE_PERI
                                    HdlValueInt: 2


CommitId: 163050b9c89b00dbac598f9b8ea68d2e99883a05
[pwrmgr] - pwrmgr integration into top_earlgrey
--- a/hw/top_earlgrey/ip/xbar_main/rtl/autogen/xbar_main.sv
+++ b/hw/top_earlgrey/ip/xbar_main/rtl/autogen/xbar_main.sv
@@ -453,7 +455,9 @@ end
       ((tl_s1n_30_us_h2d.a_address <= (ADDR_MASK_PERI[1] + ADDR_SPACE_PERI[1])) &&
        (tl_s1n_30_us_h2d.a_address >= ADDR_SPACE_PERI[1])) ||
       ((tl_s1n_30_us_h2d.a_address <= (ADDR_MASK_PERI[2] + ADDR_SPACE_PERI[2])) &&
-       (tl_s1n_30_us_h2d.a_address >= ADDR_SPACE_PERI[2]))
+       (tl_s1n_30_us_h2d.a_address >= ADDR_SPACE_PERI[2])) ||
+      ((tl_s1n_30_us_h2d.a_address <= (ADDR_MASK_PERI[3] + ADDR_SPACE_PERI[3])) &&
+       (tl_s1n_30_us_h2d.a_address >= ADDR_SPACE_PERI[3]))
     ) begin
       dev_sel_s1n_30 = 4'd3;
 
ParseResult:
UPD HdlStmIf@@ to 
    INS HdlOp@@OR_LOG to 
    UPD HdlOp@@OR_LOG to OR_LOG
        INS list@@ops to OR_LOG
        INS HdlOp@@AND_LOG to ops
        HdlOp: AND_LOG
            list: ops
                HdlOp: LE
                    list: ops
                        HdlOp: DOT
                            list: ops
                                HdlValueId: tl_s1n_30_us_h2d
                                HdlValueId: a_address
                        HdlOp: ADD
                            list: ops
                                HdlOp: INDEX
                                    list: ops
                                        HdlValueId: ADDR_MASK_PERI
                                        HdlValueInt: 3
                                HdlOp: INDEX
                                    list: ops
                                        HdlValueId: ADDR_SPACE_PERI
                                        HdlValueInt: 3
                HdlOp: GE
                    list: ops
                        HdlOp: DOT
                            list: ops
                                HdlValueId: tl_s1n_30_us_h2d
                                HdlValueId: a_address
                        HdlOp: INDEX
                            list: ops
                                HdlValueId: ADDR_SPACE_PERI
                                HdlValueInt: 3

UPD HdlStmIf@@ to 
    MOV HdlOp@@OR_LOG to 
    HdlOp: OR_LOG
        list: ops
            HdlOp: OR_LOG
                list: ops
                    HdlOp: AND_LOG
                        list: ops
                            HdlOp: LE
                                list: ops
                                    HdlOp: DOT
                                        list: ops
                                            HdlValueId: tl_s1n_30_us_h2d
                                            HdlValueId: a_address
                                    HdlOp: ADD
                                        list: ops
                                            HdlOp: INDEX
                                                list: ops
                                                    HdlValueId: ADDR_MASK_PERI
                                                    HdlValueInt: 0
                                            HdlOp: INDEX
                                                list: ops
                                                    HdlValueId: ADDR_SPACE_PERI
                                                    HdlValueInt: 0
                            HdlOp: GE
                                list: ops
                                    HdlOp: DOT
                                        list: ops
                                            HdlValueId: tl_s1n_30_us_h2d
                                            HdlValueId: a_address
                                    HdlOp: INDEX
                                        list: ops
                                            HdlValueId: ADDR_SPACE_PERI
                                            HdlValueInt: 0
                    HdlOp: AND_LOG
                        list: ops
                            HdlOp: LE
                                list: ops
                                    HdlOp: DOT
                                        list: ops
                                            HdlValueId: tl_s1n_30_us_h2d
                                            HdlValueId: a_address
                                    HdlOp: ADD
                                        list: ops
                                            HdlOp: INDEX
                                                list: ops
                                                    HdlValueId: ADDR_MASK_PERI
                                                    HdlValueInt: 1
                                            HdlOp: INDEX
                                                list: ops
                                                    HdlValueId: ADDR_SPACE_PERI
                                                    HdlValueInt: 1
                            HdlOp: GE
                                list: ops
                                    HdlOp: DOT
                                        list: ops
                                            HdlValueId: tl_s1n_30_us_h2d
                                            HdlValueId: a_address
                                    HdlOp: INDEX
                                        list: ops
                                            HdlValueId: ADDR_SPACE_PERI
                                            HdlValueInt: 1
            HdlOp: AND_LOG
                list: ops
                    HdlOp: LE
                        list: ops
                            HdlOp: DOT
                                list: ops
                                    HdlValueId: tl_s1n_30_us_h2d
                                    HdlValueId: a_address
                            HdlOp: ADD
                                list: ops
                                    HdlOp: INDEX
                                        list: ops
                                            HdlValueId: ADDR_MASK_PERI
                                            HdlValueInt: 2
                                    HdlOp: INDEX
                                        list: ops
                                            HdlValueId: ADDR_SPACE_PERI
                                            HdlValueInt: 2
                    HdlOp: GE
                        list: ops
                            HdlOp: DOT
                                list: ops
                                    HdlValueId: tl_s1n_30_us_h2d
                                    HdlValueId: a_address
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: ADDR_SPACE_PERI
                                    HdlValueInt: 2


CommitId: 19044edfb0b9485031557705595840bea41fb33d
[prim_secded] Use _i/_o suffix for port names
--- a/hw/ip/prim/rtl/prim_secded_72_64_dec.sv
+++ b/hw/ip/prim/rtl/prim_secded_72_64_dec.sv
@@ -5,8 +5,8 @@
 // SECDED decoder generated by util/design/secded_gen.py
 
 module prim_secded_72_64_dec (
-  input        [71:0] in,
-  output logic [63:0] d_o,
+  input        [71:0] data_i,
+  output logic [63:0] data_o,
   output logic [7:0] syndrome_o,
   output logic [1:0] err_o
 );

ParseResult:
UPD HdlIdDef@@in to data_i

UPD HdlIdDef@@d_o to data_o


CommitId: 33e387ff92df07f8a334ab97a02becf08505a130
[csrng/rtl] Split cmd_sts into two registers
--- a/hw/ip/csrng/rtl/csrng_ctr_drbg_cmd.sv
+++ b/hw/ip/csrng/rtl/csrng_ctr_drbg_cmd.sv
@@ -7,12 +7,12 @@
 // Accepts all csrng commands
 
 module csrng_ctr_drbg_cmd import csrng_pkg::*; #(
-  parameter int unsigned Cmd = 3,
-  parameter int unsigned StateId = 4,
-  parameter int unsigned BlkLen = 128,
-  parameter int unsigned KeyLen = 256,
-  parameter int unsigned SeedLen = 384,
-  parameter int unsigned CtrLen  = 32
+  parameter int Cmd = 3,
+  parameter int StateId = 4,
+  parameter int BlkLen = 128,
+  parameter int KeyLen = 256,
+  parameter int SeedLen = 384,
+  parameter int CtrLen  = 32
 ) (
   input logic                clk_i,
   input logic                rst_ni,

ParseResult:
UPD HdlIdDef@@Cmd to Cmd
    UPD HdlOp@@PARAMETRIZATION to PARAMETRIZATION
        MOV HdlValueId@@int to ops
        HdlValueId: int
        DEL HdlOp@@MAP_ASSOCIATION from ops
        HdlOp: MAP_ASSOCIATION
            list: ops
                HdlValueId: signed
        DEL list@@ops from PARAMETRIZATION
    DEL HdlOp@@PARAMETRIZATION from Cmd

UPD HdlIdDef@@StateId to StateId
    UPD HdlOp@@PARAMETRIZATION to PARAMETRIZATION
        MOV HdlValueId@@int to ops
        HdlValueId: int
        DEL HdlOp@@MAP_ASSOCIATION from ops
        HdlOp: MAP_ASSOCIATION
            list: ops
                HdlValueId: signed
        DEL list@@ops from PARAMETRIZATION
    DEL HdlOp@@PARAMETRIZATION from StateId

UPD HdlIdDef@@BlkLen to BlkLen
    UPD HdlOp@@PARAMETRIZATION to PARAMETRIZATION
        MOV HdlValueId@@int to ops
        HdlValueId: int
        DEL HdlOp@@MAP_ASSOCIATION from ops
        HdlOp: MAP_ASSOCIATION
            list: ops
                HdlValueId: signed
        DEL list@@ops from PARAMETRIZATION
    DEL HdlOp@@PARAMETRIZATION from BlkLen

UPD HdlIdDef@@KeyLen to KeyLen
    UPD HdlOp@@PARAMETRIZATION to PARAMETRIZATION
        MOV HdlValueId@@int to ops
        HdlValueId: int
        DEL HdlOp@@MAP_ASSOCIATION from ops
        HdlOp: MAP_ASSOCIATION
            list: ops
                HdlValueId: signed
        DEL list@@ops from PARAMETRIZATION
    DEL HdlOp@@PARAMETRIZATION from KeyLen

UPD HdlIdDef@@SeedLen to SeedLen
    UPD HdlOp@@PARAMETRIZATION to PARAMETRIZATION
        MOV HdlValueId@@int to ops
        HdlValueId: int
        DEL HdlOp@@MAP_ASSOCIATION from ops
        HdlOp: MAP_ASSOCIATION
            list: ops
                HdlValueId: signed
        DEL list@@ops from PARAMETRIZATION
    DEL HdlOp@@PARAMETRIZATION from SeedLen

UPD HdlIdDef@@CtrLen to CtrLen
    UPD HdlOp@@PARAMETRIZATION to PARAMETRIZATION
        MOV HdlValueId@@int to ops
        HdlValueId: int
        DEL HdlOp@@MAP_ASSOCIATION from ops
        HdlOp: MAP_ASSOCIATION
            list: ops
                HdlValueId: signed
        DEL list@@ops from PARAMETRIZATION
    DEL HdlOp@@PARAMETRIZATION from CtrLen


CommitId: 33e387ff92df07f8a334ab97a02becf08505a130
[csrng/rtl] Split cmd_sts into two registers
--- a/hw/ip/csrng/rtl/csrng_ctr_drbg_cmd.sv
+++ b/hw/ip/csrng/rtl/csrng_ctr_drbg_cmd.sv
@@ -63,12 +63,12 @@ module csrng_ctr_drbg_cmd import csrng_pkg::*; #(
   output logic [2:0]         ctr_drbg_cmd_sfifo_keyvrc_err_o
 );
 
-  localparam int unsigned CmdreqFifoDepth = 1;
-  localparam int unsigned CmdreqFifoWidth = KeyLen+BlkLen+CtrLen+1+2*SeedLen+StateId+Cmd;
-  localparam int unsigned RCStageFifoDepth = 1;
-  localparam int unsigned RCStageFifoWidth = CtrLen+1+SeedLen+Cmd;
-  localparam int unsigned KeyVRCFifoDepth = 1;
-  localparam int unsigned KeyVRCFifoWidth = KeyLen+BlkLen+CtrLen+1+SeedLen+StateId+Cmd;
+  localparam int CmdreqFifoDepth = 1;
+  localparam int CmdreqFifoWidth = KeyLen+BlkLen+CtrLen+1+2*SeedLen+StateId+Cmd;
+  localparam int RCStageFifoDepth = 1;
+  localparam int RCStageFifoWidth = CtrLen+1+SeedLen+Cmd;
+  localparam int KeyVRCFifoDepth = 1;
+  localparam int KeyVRCFifoWidth = KeyLen+BlkLen+CtrLen+1+SeedLen+StateId+Cmd;
 
 
   // signals

ParseResult:
INS HdlIdDef@@CmdreqFifoDepth to objs
HdlIdDef: CmdreqFifoDepth
    HdlValueId: int
    HdlValueInt: 1
    HdlDirection: INTERNAL

INS HdlIdDef@@RCStageFifoDepth to objs
HdlIdDef: RCStageFifoDepth
    HdlValueId: int
    HdlValueInt: 1
    HdlDirection: INTERNAL

INS HdlIdDef@@KeyVRCFifoDepth to objs
HdlIdDef: KeyVRCFifoDepth
    HdlValueId: int
    HdlValueInt: 1
    HdlDirection: INTERNAL

UPD HdlIdDef@@CmdreqFifoWidth to CmdreqFifoWidth
    UPD HdlOp@@PARAMETRIZATION to PARAMETRIZATION
        MOV HdlValueId@@int to ops
        HdlValueId: int
        DEL HdlOp@@MAP_ASSOCIATION from ops
        HdlOp: MAP_ASSOCIATION
            list: ops
                HdlValueId: signed
        DEL list@@ops from PARAMETRIZATION
    DEL HdlOp@@PARAMETRIZATION from CmdreqFifoWidth

UPD HdlIdDef@@RCStageFifoWidth to RCStageFifoWidth
    UPD HdlOp@@PARAMETRIZATION to PARAMETRIZATION
        MOV HdlValueId@@int to ops
        HdlValueId: int
        DEL HdlOp@@MAP_ASSOCIATION from ops
        HdlOp: MAP_ASSOCIATION
            list: ops
                HdlValueId: signed
        DEL list@@ops from PARAMETRIZATION
    DEL HdlOp@@PARAMETRIZATION from RCStageFifoWidth

UPD HdlIdDef@@KeyVRCFifoWidth to KeyVRCFifoWidth
    UPD HdlOp@@PARAMETRIZATION to PARAMETRIZATION
        MOV HdlValueId@@int to ops
        HdlValueId: int
        DEL HdlOp@@MAP_ASSOCIATION from ops
        HdlOp: MAP_ASSOCIATION
            list: ops
                HdlValueId: signed
        DEL list@@ops from PARAMETRIZATION
    DEL HdlOp@@PARAMETRIZATION from KeyVRCFifoWidth

DEL HdlIdDef@@CmdreqFifoDepth from objs
HdlIdDef: CmdreqFifoDepth
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: int
            HdlOp: MAP_ASSOCIATION
                list: ops
                    HdlValueId: signed
    HdlValueInt: 1
    HdlDirection: INTERNAL

DEL HdlIdDef@@RCStageFifoDepth from objs
HdlIdDef: RCStageFifoDepth
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: int
            HdlOp: MAP_ASSOCIATION
                list: ops
                    HdlValueId: signed
    HdlValueInt: 1
    HdlDirection: INTERNAL

DEL HdlIdDef@@KeyVRCFifoDepth from objs
HdlIdDef: KeyVRCFifoDepth
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: int
            HdlOp: MAP_ASSOCIATION
                list: ops
                    HdlValueId: signed
    HdlValueInt: 1
    HdlDirection: INTERNAL


CommitId: 309a47974f0ce84cab3d559a85975448dfbd7e2f
[prim] Use prim_pkg::impl_e instead of int for Impl
--- a/hw/ip/prim/abstract/prim_rom.sv
+++ b/hw/ip/prim/abstract/prim_rom.sv
@@ -6,10 +6,10 @@
 // "abstract module". This module is to be replaced by generated code.
 
 `ifndef PRIM_DEFAULT_IMPL
-  `define PRIM_DEFAULT_IMPL integer'(prim_pkg::ImplGeneric)
+  `define PRIM_DEFAULT_IMPL prim_pkg::ImplGeneric
 `endif
 module prim_rom #(
-  parameter integer Impl  = `PRIM_DEFAULT_IMPL,
+  parameter prim_pkg::impl_e Impl = `PRIM_DEFAULT_IMPL,
   parameter int Width = 32,
   parameter int Depth = 2048, // 8kB default
   parameter int Aw    = $clog2(Depth)

ParseResult:
UPD HdlIdDef@@Impl to Impl
    INS HdlOp@@DOUBLE_COLON to Impl
    INS HdlOp@@DOUBLE_COLON to Impl
    HdlOp: DOUBLE_COLON
        list: ops
            HdlValueId: prim_pkg
            HdlValueId: ImplGeneric
    UPD HdlOp@@DOUBLE_COLON to DOUBLE_COLON
        INS list@@ops to DOUBLE_COLON
        INS HdlValueId@@prim_pkg to ops

UPD HdlIdDef@@Impl to Impl
    UPD HdlValueId@@integer to impl_e
    MOV HdlValueId@@integer to Impl
    HdlValueId: integer
    DEL HdlExprNotImplemented@@value from Impl


CommitId: 309a47974f0ce84cab3d559a85975448dfbd7e2f
[prim] Use prim_pkg::impl_e instead of int for Impl
--- a/hw/ip/prim/abstract/prim_rom.sv
+++ b/hw/ip/prim/abstract/prim_rom.sv
@@ -24,7 +24,7 @@ module prim_rom #(
 
   import prim_pkg::*;
 
-  if (impl_e'(Impl) == ImplGeneric) begin: gen_mem_generic
+  if (Impl == ImplGeneric) begin: gen_mem_generic
     prim_generic_rom #(
       .Width(Width),
       .Depth(Depth)

ParseResult:
UPD HdlStmIf@@ to 
    UPD HdlOp@@EQ to EQ
        UPD HdlOp@@CALL to CALL
            MOV HdlValueId@@Impl to ops
            HdlValueId: Impl
            DEL HdlValueId@@impl_e from ops
            DEL list@@ops from CALL
        DEL HdlOp@@CALL from ops
    UPD HdlOp@@EQ to EQ
        UPD HdlOp@@CALL to CALL
            MOV HdlValueId@@Impl to ops
            HdlValueId: Impl
            DEL HdlValueId@@impl_e from ops
            DEL list@@ops from CALL
        DEL HdlOp@@CALL from ops


CommitId: 309a47974f0ce84cab3d559a85975448dfbd7e2f
[prim] Use prim_pkg::impl_e instead of int for Impl
--- a/hw/ip/prim/abstract/prim_rom.sv
+++ b/hw/ip/prim/abstract/prim_rom.sv
@@ -36,7 +36,7 @@ module prim_rom #(
       .dout_o,
       .dvalid_o
     );
-  end else if (impl_e'(Impl) == ImplXilinx) begin: gen_rom_xilinx
+  end else if (Impl == ImplXilinx) begin: gen_rom_xilinx
     prim_xilinx_rom #(
       .Width(Width),
       .Depth(Depth)
ParseResult:
UPD HdlStmIf@@ to 
    UPD HdlOp@@EQ to EQ
        UPD HdlOp@@CALL to CALL
            MOV HdlValueId@@Impl to ops
            HdlValueId: Impl
            DEL HdlValueId@@impl_e from ops
            DEL list@@ops from CALL
        DEL HdlOp@@CALL from ops
    UPD HdlOp@@EQ to EQ
        UPD HdlOp@@CALL to CALL
            MOV HdlValueId@@Impl to ops
            HdlValueId: Impl
            DEL HdlValueId@@impl_e from ops
            DEL list@@ops from CALL
        DEL HdlOp@@CALL from ops


CommitId: 37eec2cbcb02ab1639382d3dbb8ab2bc5b3b904d
[flash_ctrl] Various clean-up and updates
--- a/hw/ip/flash_ctrl/rtl/flash_phy.sv
+++ b/hw/ip/flash_ctrl/rtl/flash_phy.sv
@@ -159,11 +159,9 @@ module flash_phy import flash_ctrl_pkg::*; (
   flash_phy_pkg::flash_phy_prim_flash_req_t [NumBanks-1:0] prim_flash_req;
   flash_phy_pkg::flash_phy_prim_flash_rsp_t [NumBanks-1:0] prim_flash_rsp;
   logic [NumBanks-1:0] ecc_single_err;
-  logic [NumBanks-1:0] ecc_multi_err;
   logic [NumBanks-1:0][BusAddrW-1:0] ecc_addr;
 
   assign flash_ctrl_o.ecc_single_err = ecc_single_err;
-  assign flash_ctrl_o.ecc_multi_err = ecc_multi_err;
   assign flash_ctrl_o.ecc_addr = ecc_addr;
 
   lc_ctrl_pkg::lc_tx_t [NumBanks-1:0] flash_disable;

ParseResult:
DEL HdlIdDef@@ecc_multi_err from objs
HdlIdDef: ecc_multi_err
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlOp: SUB
                        list: ops
                            HdlValueId: NumBanks
                            HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: INTERNAL

DEL HdlStmAssign@@ from objs
HdlStmAssign
    HdlValueId: ecc_multi_err
    HdlValueId: flash_ctrl_o


CommitId: 37eec2cbcb02ab1639382d3dbb8ab2bc5b3b904d
[flash_ctrl] Various clean-up and updates
--- a/hw/ip/flash_ctrl/rtl/flash_phy.sv
+++ b/hw/ip/flash_ctrl/rtl/flash_phy.sv
@@ -311,8 +308,6 @@ module flash_phy import flash_ctrl_pkg::*; (
   );
   logic unused_alert;
   assign unused_alert = flash_ctrl_i.alert_trig & flash_ctrl_i.alert_ack;
-  assign flash_ctrl_o.flash_alert_p = flash_alert_o.p;
-  assign flash_ctrl_o.flash_alert_n = flash_alert_o.n;
 
   logic unused_trst_n;
   assign unused_trst_n = flash_ctrl_i.jtag_req.trst_n;
ParseResult:
DEL HdlStmAssign@@ from objs
HdlStmAssign
    HdlOp: DOT
        list: ops
            HdlValueId: flash_alert_o
            HdlValueId: p
    HdlValueId: flash_ctrl_o

DEL HdlStmAssign@@ from objs
HdlStmAssign
    HdlOp: DOT
        list: ops
            HdlValueId: flash_alert_o
            HdlValueId: n
    HdlValueId: flash_ctrl_o


CommitId: b1ba59b519d632b1ef7f2dda4ece681d6c65b0b8
[flash / top / ast] functional updates
--- a/hw/ip/flash_ctrl/rtl/flash_phy.sv
+++ b/hw/ip/flash_ctrl/rtl/flash_phy.sv
@@ -27,7 +27,8 @@ module flash_phy import flash_ctrl_pkg::*; (
   input flash_power_down_h_i,
   input [1:0] flash_test_mode_a_i,
   input flash_test_voltage_h_i,
-  input lc_ctrl_pkg::lc_tx_t lc_dft_en_i,
+  input flash_bist_enable_i,
+  input lc_ctrl_pkg::lc_tx_t lc_nvm_debug_en_i,
   input jtag_pkg::jtag_req_t jtag_req_i,
   output jtag_pkg::jtag_rsp_t jtag_rsp_o
 );

ParseResult:
INS HdlIdDef@@flash_bist_enable_i to ports
HdlIdDef: flash_bist_enable_i
    HdlValueId: wire
    HdlDirection: IN

UPD HdlIdDef@@lc_dft_en_i to lc_nvm_debug_en_i


CommitId: b1ba59b519d632b1ef7f2dda4ece681d6c65b0b8
[flash / top / ast] functional updates
--- a/hw/ip/flash_ctrl/rtl/flash_phy.sv
+++ b/hw/ip/flash_ctrl/rtl/flash_phy.sv
@@ -66,7 +67,6 @@ module flash_phy import flash_ctrl_pkg::*; (
   logic [NumBanks-1:0]  rd_done;
   logic [NumBanks-1:0]  prog_done;
   logic [NumBanks-1:0]  erase_done;
-  logic [NumBanks-1:0]  erase_suspend_done;
   logic                 init_busy;
   logic [ProgTypes-1:0] prog_type_avail;
 

ParseResult:
DEL HdlIdDef@@erase_suspend_done from objs
HdlIdDef: erase_suspend_done
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlOp: SUB
                        list: ops
                            HdlValueId: NumBanks
                            HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: INTERNAL


CommitId: b1ba59b519d632b1ef7f2dda4ece681d6c65b0b8
[flash / top / ast] functional updates
--- a/hw/ip/flash_ctrl/rtl/flash_phy.sv
+++ b/hw/ip/flash_ctrl/rtl/flash_phy.sv
@@ -91,7 +91,6 @@ module flash_phy import flash_ctrl_pkg::*; (
   assign flash_ctrl_o.rd_done = rd_done[ctrl_bank_sel];
   assign flash_ctrl_o.prog_done = prog_done[ctrl_bank_sel];
   assign flash_ctrl_o.erase_done = erase_done[ctrl_bank_sel];
-  assign flash_ctrl_o.erase_suspend_done = erase_suspend_done[ctrl_bank_sel];
   assign flash_ctrl_o.rd_data = rd_data[ctrl_bank_sel];
   assign flash_ctrl_o.rd_err = rd_err[ctrl_bank_sel];
   assign flash_ctrl_o.init_busy = init_busy;

ParseResult:
DEL HdlStmAssign@@ from objs
HdlStmAssign
    HdlOp: INDEX
        list: ops
            HdlValueId: erase_suspend_done
            HdlValueId: ctrl_bank_sel
    HdlValueId: flash_ctrl_o


CommitId: b1ba59b519d632b1ef7f2dda4ece681d6c65b0b8
[flash / top / ast] functional updates
--- a/hw/ip/flash_ctrl/rtl/flash_phy.sv
+++ b/hw/ip/flash_ctrl/rtl/flash_phy.sv
@@ -208,7 +207,6 @@ module flash_phy import flash_ctrl_pkg::*; (
       .erase_done_o(erase_done[bank]),
       .rd_data_o(rd_data[bank]),
       .rd_err_o(rd_err[bank]),
-      .erase_suspend_done_o(erase_suspend_done[bank]),
       .prim_flash_req_o(prim_flash_req[bank]),
       .prim_flash_rsp_i(prim_flash_rsp[bank])
     );

ParseResult:
UPD HdlIdDef@@lc_nvm_debug_en to lc_nvm_debug_en
    INS HdlOp@@INDEX to lc_nvm_debug_en
    INS HdlDirection@@INTERNAL to lc_nvm_debug_en
    UPD HdlOp@@INDEX to INDEX
        INS list@@ops to INDEX
        INS HdlOp@@DOWNTO to ops
        HdlOp: DOWNTO
            list: ops
                HdlOp: SUB
                    list: ops
                        HdlValueId: FlashLcDftLast
                        HdlValueInt: 1
                HdlValueInt: 0


CommitId: b1ba59b519d632b1ef7f2dda4ece681d6c65b0b8
[flash / top / ast] functional updates
--- a/hw/ip/flash_ctrl/rtl/flash_phy.sv
+++ b/hw/ip/flash_ctrl/rtl/flash_phy.sv
@@ -216,17 +214,17 @@ module flash_phy import flash_ctrl_pkg::*; (
 
   // life cycle handling
   logic tdo;
-  lc_ctrl_pkg::lc_tx_t [FlashLcJtagLast-1:0] lc_dft_en;
+  lc_ctrl_pkg::lc_tx_t [FlashLcDftLast-1:0] lc_nvm_debug_en;
 
-  assign jtag_rsp_o.tdo = tdo & (lc_dft_en[FlashLcTdoSel] == lc_ctrl_pkg::On);
+  assign jtag_rsp_o.tdo = tdo & (lc_nvm_debug_en[FlashLcTdoSel] == lc_ctrl_pkg::On);
 
   prim_lc_sync #(
-    .NumCopies(int'(FlashLcJtagLast))
-  ) u_lc_dft_en_sync (
+    .NumCopies(int'(FlashLcDftLast))
+  ) u_lc_nvm_debug_en_sync (
     .clk_i,
     .rst_ni,
-    .lc_en_i(lc_dft_en_i),
-    .lc_en_o(lc_dft_en)
+    .lc_en_i(lc_nvm_debug_en_i),
+    .lc_en_o(lc_nvm_debug_en)
   );
 
   prim_flash #(

ParseResult:
INS HdlIdDef@@lc_nvm_debug_en to objs

UPD HdlIdDef@@lc_dft_en to lc_dft_en
    UPD HdlOp@@INDEX to INDEX
        MOV HdlOp@@DOUBLE_COLON to ops
        HdlOp: DOUBLE_COLON
            list: ops
                HdlValueId: lc_ctrl_pkg
                HdlValueId: lc_tx_t
        DEL HdlOp@@DOWNTO from ops
        HdlOp: DOWNTO
            list: ops
                HdlOp: SUB
                    list: ops
                        HdlValueId: FlashLcJtagLast
                        HdlValueInt: 1
                HdlValueInt: 0
        DEL list@@ops from INDEX
    DEL HdlOp@@INDEX from lc_dft_en
    DEL HdlDirection@@INTERNAL from lc_dft_en

UPD HdlStmAssign@@ to 
    UPD HdlOp@@AND to AND
        UPD HdlOp@@EQ to EQ
            UPD HdlOp@@INDEX to INDEX
                UPD HdlValueId@@lc_dft_en to lc_nvm_debug_en

DEL HdlIdDef@@lc_dft_en from objs


CommitId: 4b8a43caa8f6add376edb79ff70db8fe5e2cb927
[fpga] Fix dedicated IOs and capture trigger for top_englishbreakfast
--- a/hw/top_englishbreakfast/rtl/top_englishbreakfast_cw305.sv
+++ b/hw/top_englishbreakfast/rtl/top_englishbreakfast_cw305.sv
@@ -63,9 +63,9 @@ module top_englishbreakfast_cw305 #(
   logic [pinmux_reg_pkg::NMioPads-1:0] mio_out_core;
   logic [pinmux_reg_pkg::NMioPads-1:0] mio_oe_core;
   logic [pinmux_reg_pkg::NMioPads-1:0] mio_in_core;
-  logic [pinmux_reg_pkg::NDioPads-1:0] dio_out_core, dio_out_umux;
-  logic [pinmux_reg_pkg::NDioPads-1:0] dio_oe_core, dio_oe_umux;
-  logic [pinmux_reg_pkg::NDioPads-1:0] dio_in_core, dio_in_umux;
+  logic [pinmux_reg_pkg::NDioPads-1:0] dio_out_core;
+  logic [pinmux_reg_pkg::NDioPads-1:0] dio_oe_core;
+  logic [pinmux_reg_pkg::NDioPads-1:0] dio_in_core;
 
   padring #(
     // MIOs 43:34 and 31:20 are currently not

ParseResult:
DEL HdlIdDef@@dio_out_umux from objs
HdlIdDef: dio_out_umux
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlOp: SUB
                        list: ops
                            HdlOp: DOUBLE_COLON
                                list: ops
                                    HdlValueId: pinmux_reg_pkg
                                    HdlValueId: NDioPads
                            HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: INTERNAL

DEL HdlIdDef@@dio_oe_umux from objs
HdlIdDef: dio_oe_umux
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlOp: SUB
                        list: ops
                            HdlOp: DOUBLE_COLON
                                list: ops
                                    HdlValueId: pinmux_reg_pkg
                                    HdlValueId: NDioPads
                            HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: INTERNAL

DEL HdlIdDef@@dio_in_umux from objs
HdlIdDef: dio_in_umux
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlOp: SUB
                        list: ops
                            HdlOp: DOUBLE_COLON
                                list: ops
                                    HdlValueId: pinmux_reg_pkg
                                    HdlValueId: NDioPads
                            HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: INTERNAL


CommitId: 79aac27c5eb3b17346aaeb86678edcffa94cb9d9
Update lowrisc_ibex to lowRISC/ibex@6b1a7ad
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_id_stage.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_id_stage.sv
@@ -108,6 +108,7 @@ module ibex_id_stage #(
     input  logic                  debug_req_i,
     input  logic                  debug_single_step_i,
     input  logic                  debug_ebreakm_i,
+    input  logic                  debug_ebreaku_i,
 
     // Write back signal
     input  logic [31:0]           regfile_wdata_lsu_i,

ParseResult:
INS HdlIdDef@@debug_ebreaku_i to ports
HdlIdDef: debug_ebreaku_i
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: IN


CommitId: 690d732ad0d33e8ad513518ea5f4494a95882a4b
[rv_dm] Make the RV_DM a comportable module
--- a/hw/ip/rv_core_ibex/rtl/rv_core_ibex.sv
+++ b/hw/ip/rv_core_ibex/rtl/rv_core_ibex.sv
@@ -38,6 +38,8 @@ module rv_core_ibex
   // Clock domain for escalation receiver
   input  logic        clk_esc_i,
   input  logic        rst_esc_ni,
+  // Reset feedback to rstmgr
+  output logic        rst_cpu_n_o,
 
   input  prim_ram_1p_pkg::ram_1p_cfg_t ram_cfg_i,
 

ParseResult:
INS HdlIdDef@@rst_cpu_n_o to ports
HdlIdDef: rst_cpu_n_o
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: OUT


CommitId: 86144f7033cb38171990fb9bd5f5f0f8f85f0c5d
[usbdev] Fix issues discovered with linter
--- a/hw/ip/usbdev/rtl/usbdev.sv
+++ b/hw/ip/usbdev/rtl/usbdev.sv
@@ -580,7 +580,7 @@ module usbdev (
   always_comb begin : proc_stall_tieoff
     for (int i = 0; i < NEndpoints; i++) begin
         hw2reg.stall[i].d  = 1'b0;              
-        if (setup_received && usb_out_endpoint == i) begin
+        if (setup_received && usb_out_endpoint == 4'(i)) begin
           hw2reg.stall[i].de = 1'b1;
         end else begin
           hw2reg.stall[i].de = 1'b0;
ParseResult:
UPD HdlStmIf@@ to 
    UPD HdlOp@@AND_LOG to AND_LOG
        UPD HdlOp@@EQ to EQ
            INS HdlOp@@CALL to ops
            UPD HdlOp@@CALL to CALL
                INS list@@ops to CALL
                INS HdlValueInt@@4 to ops

UPD HdlStmIf@@ to 
    UPD HdlOp@@AND_LOG to AND_LOG
        UPD HdlOp@@EQ to EQ
            MOV HdlValueId@@i to ops
            HdlValueId: i


CommitId: a37bcfa3d83c2eeed22726be66a1e7b26dcc7c3a
[prim] Make ROM_INIT_FILE a parameter
--- a/hw/top_earlgrey/rtl/top_earlgrey_nexysvideo.sv
+++ b/hw/top_earlgrey/rtl/top_earlgrey_nexysvideo.sv
@@ -2,7 +2,11 @@
 // Licensed under the Apache License, Version 2.0, see LICENSE for details.
 // SPDX-License-Identifier: Apache-2.0
 
-module top_earlgrey_nexysvideo (
+module top_earlgrey_nexysvideo #(
+  // Path to a VMEM file containing the contents of the boot ROM, which will be
+  // baked into the FPGA bitstream.
+  parameter BootRomInitFile = "boot_rom_fpga_nexysvideo.32.vmem"
+) (
   // Clock and Reset
   inout               IO_CLK,
   inout               IO_RST_N,

ParseResult:
INS HdlIdDef@@BootRomInitFile to params
HdlIdDef: BootRomInitFile
    HdlDirection: INTERNAL


CommitId: 44fe217af660b1abbe22fa00e70583482f096871
[csrng] Fix some width mismatches
--- a/hw/ip/csrng/rtl/csrng_core.sv
+++ b/hw/ip/csrng/rtl/csrng_core.sv
@@ -671,7 +671,7 @@ module csrng_core import csrng_pkg::*; #(
   // SW interface connection (only 1, and must be present)
   // cmd req
   assign cmd_stage_vld[NApps-1] = reg2hw.cmd_req.qe;
-  assign cmd_stage_shid[NApps-1] = (NApps-1);
+  assign cmd_stage_shid[NApps-1] = StateId'(NApps-1);
   assign cmd_stage_bus[NApps-1] = reg2hw.cmd_req.q;
   assign hw2reg.sw_cmd_sts.cmd_rdy.de = 1'b1;
   assign hw2reg.sw_cmd_sts.cmd_rdy.d = cmd_stage_rdy[NApps-1];
ParseResult:
UPD HdlStmAssign@@ to 
    INS HdlOp@@CALL to 
    UPD HdlOp@@CALL to CALL
        INS list@@ops to CALL
        INS HdlValueId@@StateId to ops

UPD HdlStmAssign@@ to 
    MOV HdlOp@@SUB to 
    HdlOp: SUB
        list: ops
            HdlValueId: NApps
            HdlValueInt: 1


CommitId: 36ebb51dbee52b34e515f69d84c7759b98c2c561
[csrng/rtl] update for health test phases
--- a/hw/ip/entropy_src/rtl/entropy_src_main_sm.sv
+++ b/hw/ip/entropy_src/rtl/entropy_src_main_sm.sv
@@ -15,6 +15,7 @@ module entropy_src_main_sm #(
   input logic                   enable_i,
   input logic                   ht_done_pulse_i,
   input logic                   ht_fail_pulse_i,
+  input logic                   alert_thresh_fail_i,
   input logic                   sfifo_esfinal_full_i,
   output logic                  rst_alert_cntr_o,
   input logic                   bypass_mode_i,

ParseResult:
INS HdlIdDef@@alert_thresh_fail_i to ports
HdlIdDef: alert_thresh_fail_i
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: IN


CommitId: 36ebb51dbee52b34e515f69d84c7759b98c2c561
[csrng/rtl] update for health test phases
--- a/hw/ip/entropy_src/rtl/entropy_src_main_sm.sv
+++ b/hw/ip/entropy_src/rtl/entropy_src_main_sm.sv
@@ -98,6 +105,7 @@ module entropy_src_main_sm #(
     sha3_process_o = 1'b0;
     sha3_done_o = 1'b0;
     cs_aes_halt_req_o = 1'b0;
+    main_sm_alert_o = 1'b0;
     main_sm_idle_o = 1'b0;
     main_sm_err_o = 1'b0;
     unique case (state_q)

ParseResult:
UPD HdlStmCase@@state_q to state_q
    UPD HdlValueId@@NormHTStart to StartupHTStart
    UPD HdlValueId@@NormHTRunning to ContHTRunning
    UPD HdlValueId@@NormSha3CSReq to Sha3Prep
    UPD HdlValueId@@NormSha3Process to Sha3Process
    UPD HdlValueId@@NormSha3Valid to Sha3Valid
    UPD HdlValueId@@NormSha3Done to Sha3Done
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@NormSha3Valid to Sha3Valid


CommitId: 36ebb51dbee52b34e515f69d84c7759b98c2c561
[csrng/rtl] update for health test phases
--- a/hw/ip/entropy_src/rtl/entropy_src_main_sm.sv
+++ b/hw/ip/entropy_src/rtl/entropy_src_main_sm.sv
@@ -107,7 +115,7 @@ module entropy_src_main_sm #(
           if (bypass_mode_i) begin
             state_d = BootHTRunning;
           end else begin
-            state_d = NormHTStart;
+            state_d = StartupHTStart;
           end
         end
       end

ParseResult:
UPD HdlStmCase@@state_q to state_q
    UPD HdlValueId@@NormHTStart to StartupHTStart
    UPD HdlValueId@@NormHTRunning to ContHTRunning
    UPD HdlValueId@@NormSha3CSReq to Sha3Prep
    UPD HdlValueId@@NormSha3Process to Sha3Process
    UPD HdlValueId@@NormSha3Valid to Sha3Valid
    UPD HdlValueId@@NormSha3Done to Sha3Done
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@NormSha3Valid to Sha3Valid

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@NormHTStart to StartupHTStart


CommitId: 36ebb51dbee52b34e515f69d84c7759b98c2c561
[csrng/rtl] update for health test phases
--- a/hw/ip/entropy_src/rtl/entropy_src_main_sm.sv
+++ b/hw/ip/entropy_src/rtl/entropy_src_main_sm.sv
@@ -117,7 +125,11 @@ module entropy_src_main_sm #(
         end else begin
           if (ht_done_pulse_i) begin
             if (ht_fail_pulse_i) begin
-              state_d = Idle;
+              if (alert_thresh_fail_i) begin
+                state_d = AlertState;
+              end else begin
+                state_d = Idle;
+              end
             end else begin
               state_d = BootPostHTChk;
             end

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: main_sm_alert_o
                HdlValueInt: 0

UPD HdlStmCase@@state_q to state_q
    UPD HdlValueId@@NormHTStart to StartupHTStart
    UPD HdlValueId@@NormHTRunning to ContHTRunning
    UPD HdlValueId@@NormSha3CSReq to Sha3Prep
    UPD HdlValueId@@NormSha3Process to Sha3Process
    UPD HdlValueId@@NormSha3Valid to Sha3Valid
    UPD HdlValueId@@NormSha3Done to Sha3Done
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@NormSha3Valid to Sha3Valid

UPD HdlStmIf@@ to 
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: state_d
                    HdlValueId: Idle

UPD HdlStmIf@@ to 
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: state_d
                    HdlValueId: Idle


CommitId: 36ebb51dbee52b34e515f69d84c7759b98c2c561
[csrng/rtl] update for health test phases
--- a/hw/ip/entropy_src/rtl/entropy_src_main_sm.sv
+++ b/hw/ip/entropy_src/rtl/entropy_src_main_sm.sv
@@ -178,10 +239,25 @@ module entropy_src_main_sm #(
           if (main_stage_rdy_i) begin
             sha3_done_o = 1'b1;
             main_stage_pop_o = 1'b1;
-            state_d = Idle;
+            state_d = Sha3Quiesce;
           end
         end
       end
+      Sha3Quiesce: begin
+        if (!enable_i) begin
+          state_d = Idle;
+        end else if (alert_thresh_fail_i) begin
+          state_d = AlertState;
+        end else begin
+          state_d = ContHTStart;
+        end
+      end
+      AlertState: begin
+        main_sm_alert_o = 1'b1;
+        if (!enable_i) begin
+          state_d = Idle;
+        end
+      end
       Error: begin
         main_sm_err_o = 1'b1;
       end
ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: main_sm_alert_o
                HdlValueInt: 0

UPD HdlStmCase@@state_q to state_q
    INS tuple@@ to cases
    tuple
        HdlValueId: StartupPhase1
        HdlStmBlock: SEQ
            list: body
                HdlStmIf
                    HdlOp: NEG_LOG
                        list: ops
                            HdlValueId: enable_i
                    HdlStmBlock: SEQ
                        list: body
                            HdlOp: ASSIGN
                                list: ops
                                    HdlValueId: state_d
                                    HdlValueId: Idle
                    list: elifs
                    HdlStmBlock: SEQ
                        list: body
                            HdlStmIf
                                HdlValueId: ht_done_pulse_i
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlStmIf
                                            HdlValueId: ht_fail_pulse_i
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: state_d
                                                            HdlValueId: StartupFail1
                                            list: elifs
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: state_d
                                                            HdlValueId: StartupPass1
                                list: elifs
    INS tuple@@ to cases
    INS tuple@@ to cases
    tuple
        HdlValueId: StartupFail1
        HdlStmBlock: SEQ
            list: body
                HdlStmIf
                    HdlOp: NEG_LOG
                        list: ops
                            HdlValueId: enable_i
                    HdlStmBlock: SEQ
                        list: body
                            HdlOp: ASSIGN
                                list: ops
                                    HdlValueId: state_d
                                    HdlValueId: Idle
                    list: elifs
                    HdlStmBlock: SEQ
                        list: body
                            HdlStmIf
                                HdlValueId: ht_done_pulse_i
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlStmIf
                                            HdlValueId: ht_fail_pulse_i
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: state_d
                                                            HdlValueId: AlertState
                                            list: elifs
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: state_d
                                                            HdlValueId: StartupPass1
                                list: elifs
    INS tuple@@ to cases
    tuple
        HdlValueId: ContHTStart
        HdlStmBlock: SEQ
            list: body
                HdlStmIf
                    HdlOp: OR_LOG
                        list: ops
                            HdlOp: NEG_LOG
                                list: ops
                                    HdlValueId: enable_i
                            HdlValueId: sfifo_esfinal_full_i
                    HdlStmBlock: SEQ
                        list: body
                            HdlOp: ASSIGN
                                list: ops
                                    HdlValueId: state_d
                                    HdlValueId: Idle
                    list: elifs
                    HdlStmBlock: SEQ
                        list: body
                            HdlOp: ASSIGN
                                list: ops
                                    HdlValueId: sha3_start_o
                                    HdlValueInt: 1
                            HdlOp: ASSIGN
                                list: ops
                                    HdlValueId: state_d
                                    HdlValueId: ContHTRunning
    INS tuple@@ to cases
    tuple
        HdlValueId: Sha3Quiesce
        HdlStmBlock: SEQ
            list: body
                HdlStmIf
                    HdlOp: NEG_LOG
                        list: ops
                            HdlValueId: enable_i
                    HdlStmBlock: SEQ
                        list: body
                            HdlOp: ASSIGN
                                list: ops
                                    HdlValueId: state_d
                                    HdlValueId: Idle
                    list: elifs
                        tuple
                            HdlValueId: alert_thresh_fail_i
                            HdlStmBlock: SEQ
                                list: body
                                    HdlOp: ASSIGN
                                        list: ops
                                            HdlValueId: state_d
                                            HdlValueId: AlertState
                    HdlStmBlock: SEQ
                        list: body
                            HdlOp: ASSIGN
                                list: ops
                                    HdlValueId: state_d
                                    HdlValueId: ContHTStart
    INS tuple@@ to cases
    tuple
        HdlValueId: AlertState
        HdlStmBlock: SEQ
            list: body
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: main_sm_alert_o
                        HdlValueInt: 1
                HdlStmIf
                    HdlOp: NEG_LOG
                        list: ops
                            HdlValueId: enable_i
                    HdlStmBlock: SEQ
                        list: body
                            HdlOp: ASSIGN
                                list: ops
                                    HdlValueId: state_d
                                    HdlValueId: Idle
                    list: elifs
    INS HdlValueId@@StartupPass1 to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmCase@@state_q to state_q
    UPD HdlValueId@@NormHTStart to StartupHTStart
    UPD HdlValueId@@NormHTRunning to ContHTRunning
    UPD HdlValueId@@NormSha3CSReq to Sha3Prep
    UPD HdlValueId@@NormSha3Process to Sha3Process
    UPD HdlValueId@@NormSha3Valid to Sha3Valid
    UPD HdlValueId@@NormSha3Done to Sha3Done
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@NormSha3Valid to Sha3Valid

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@Idle to Sha3Quiesce


CommitId: d65d139663d32e8b509e5aa5af2b848daab74a6b
[csrng/rtl] added fatal alert
--- a/hw/ip/csrng/rtl/csrng_ctr_drbg_cmd.sv
+++ b/hw/ip/csrng/rtl/csrng_ctr_drbg_cmd.sv
@@ -96,7 +96,7 @@ module csrng_ctr_drbg_cmd import csrng_pkg::*; #(
   logic                       sfifo_cmdreq_push;
   logic [CmdreqFifoWidth-1:0] sfifo_cmdreq_wdata;
   logic                       sfifo_cmdreq_pop;
-  logic                       sfifo_cmdreq_not_full;
+  logic                       sfifo_cmdreq_full;
   logic                       sfifo_cmdreq_not_empty;
 
   // rcstage fifo

ParseResult:
UPD HdlIdDef@@sfifo_cmdreq_not_full to sfifo_cmdreq_full


CommitId: d65d139663d32e8b509e5aa5af2b848daab74a6b
[csrng/rtl] added fatal alert
--- a/hw/ip/csrng/rtl/csrng_ctr_drbg_cmd.sv
+++ b/hw/ip/csrng/rtl/csrng_ctr_drbg_cmd.sv
@@ -104,7 +104,7 @@ module csrng_ctr_drbg_cmd import csrng_pkg::*; #(
   logic                        sfifo_rcstage_push;
   logic [RCStageFifoWidth-1:0] sfifo_rcstage_wdata;
   logic                        sfifo_rcstage_pop;
-  logic                        sfifo_rcstage_not_full;
+  logic                        sfifo_rcstage_full;
   logic                        sfifo_rcstage_not_empty;
 
   // keyvrc fifo

ParseResult:
UPD HdlIdDef@@sfifo_rcstage_not_full to sfifo_rcstage_full


CommitId: d65d139663d32e8b509e5aa5af2b848daab74a6b
[csrng/rtl] added fatal alert
--- a/hw/ip/csrng/rtl/csrng_ctr_drbg_cmd.sv
+++ b/hw/ip/csrng/rtl/csrng_ctr_drbg_cmd.sv
@@ -112,7 +112,7 @@ module csrng_ctr_drbg_cmd import csrng_pkg::*; #(
   logic                        sfifo_keyvrc_push;
   logic [KeyVRCFifoWidth-1:0]  sfifo_keyvrc_wdata;
   logic                        sfifo_keyvrc_pop;
-  logic                        sfifo_keyvrc_not_full;
+  logic                        sfifo_keyvrc_full;
   logic                        sfifo_keyvrc_not_empty;
 
 

ParseResult:
UPD HdlIdDef@@sfifo_keyvrc_not_full to sfifo_keyvrc_full


CommitId: d65d139663d32e8b509e5aa5af2b848daab74a6b
[csrng/rtl] added fatal alert
--- a/hw/ip/csrng/rtl/csrng_ctr_drbg_cmd.sv
+++ b/hw/ip/csrng/rtl/csrng_ctr_drbg_cmd.sv
@@ -154,12 +154,12 @@ module csrng_ctr_drbg_cmd import csrng_pkg::*; #(
           cmdreq_entropy_fips,cmdreq_entropy,cmdreq_adata,
           cmdreq_id,cmdreq_ccmd} = sfifo_cmdreq_rdata;
 
-  assign ctr_drbg_cmd_rdy_o = sfifo_cmdreq_not_full;
+  assign ctr_drbg_cmd_rdy_o = !sfifo_cmdreq_full;
 
   assign ctr_drbg_cmd_sfifo_cmdreq_err_o =
-         {(sfifo_cmdreq_push && !sfifo_cmdreq_not_full),
+         {(sfifo_cmdreq_push && sfifo_cmdreq_full),
           (sfifo_cmdreq_pop && !sfifo_cmdreq_not_empty),
-          (!sfifo_cmdreq_not_full && !sfifo_cmdreq_not_empty)};
+          (sfifo_cmdreq_full && !sfifo_cmdreq_not_empty)};
 
 
   //--------------------------------------------

ParseResult:
INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: NEG_LOG
        list: ops
            HdlValueId: sfifo_cmdreq_full
    HdlValueId: ctr_drbg_cmd_rdy_o

UPD HdlStmAssign@@ to 
    UPD HdlOp@@CONCAT to CONCAT
        UPD HdlOp@@AND_LOG to AND_LOG
            UPD HdlOp@@NEG_LOG to NEG_LOG
                UPD HdlValueId@@sfifo_cmdreq_not_full to sfifo_cmdreq_full
                MOV HdlValueId@@sfifo_cmdreq_not_full to ops
                HdlValueId: sfifo_cmdreq_not_full
                DEL list@@ops from NEG_LOG
            DEL HdlOp@@NEG_LOG from ops
        UPD HdlOp@@CONCAT to CONCAT
            UPD HdlOp@@AND_LOG to AND_LOG
                UPD HdlOp@@NEG_LOG to NEG_LOG
                    UPD HdlValueId@@sfifo_cmdreq_not_full to sfifo_cmdreq_full
                    MOV HdlValueId@@sfifo_cmdreq_not_full to ops
                    HdlValueId: sfifo_cmdreq_not_full
                    DEL list@@ops from NEG_LOG
                DEL HdlOp@@NEG_LOG from ops

DEL HdlStmAssign@@ from objs
HdlStmAssign
    HdlValueId: sfifo_cmdreq_not_full
    HdlValueId: ctr_drbg_cmd_rdy_o


CommitId: d65d139663d32e8b509e5aa5af2b848daab74a6b
[csrng/rtl] added fatal alert
--- a/hw/ip/csrng/rtl/csrng_ctr_drbg_cmd.sv
+++ b/hw/ip/csrng/rtl/csrng_ctr_drbg_cmd.sv
@@ -233,11 +233,11 @@ module csrng_ctr_drbg_cmd import csrng_pkg::*; #(
 
 
   assign ctr_drbg_cmd_sfifo_rcstage_err_o =
-         {(sfifo_rcstage_push && !sfifo_rcstage_not_full),
+         {(sfifo_rcstage_push && sfifo_rcstage_full),
           (sfifo_rcstage_pop && !sfifo_rcstage_not_empty),
-          (!sfifo_rcstage_not_full && !sfifo_rcstage_not_empty)};
+          (sfifo_rcstage_full && !sfifo_rcstage_not_empty)};
 
-  assign cmd_upd_rdy_o = sfifo_rcstage_not_empty && sfifo_keyvrc_not_full;
+  assign cmd_upd_rdy_o = sfifo_rcstage_not_empty && !sfifo_keyvrc_full;
 
   //--------------------------------------------
   // final cmd block processing

ParseResult:
INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: AND_LOG
        list: ops
            HdlValueId: sfifo_rcstage_not_empty
            HdlOp: NEG_LOG
                list: ops
                    HdlValueId: sfifo_keyvrc_full
    HdlValueId: cmd_upd_rdy_o

UPD HdlStmAssign@@ to 
    UPD HdlOp@@CONCAT to CONCAT
        UPD HdlOp@@AND_LOG to AND_LOG
            UPD HdlOp@@NEG_LOG to NEG_LOG
                UPD HdlValueId@@sfifo_rcstage_not_full to sfifo_rcstage_full
                MOV HdlValueId@@sfifo_rcstage_not_full to ops
                HdlValueId: sfifo_rcstage_not_full
                DEL list@@ops from NEG_LOG
            DEL HdlOp@@NEG_LOG from ops
        UPD HdlOp@@CONCAT to CONCAT
            UPD HdlOp@@AND_LOG to AND_LOG
                UPD HdlOp@@NEG_LOG to NEG_LOG
                    UPD HdlValueId@@sfifo_rcstage_not_full to sfifo_rcstage_full
                    MOV HdlValueId@@sfifo_rcstage_not_full to ops
                    HdlValueId: sfifo_rcstage_not_full
                    DEL list@@ops from NEG_LOG
                DEL HdlOp@@NEG_LOG from ops

DEL HdlStmAssign@@ from objs
HdlStmAssign
    HdlOp: AND_LOG
        list: ops
            HdlValueId: sfifo_rcstage_not_empty
            HdlValueId: sfifo_keyvrc_not_full
    HdlValueId: cmd_upd_rdy_o


CommitId: d65d139663d32e8b509e5aa5af2b848daab74a6b
[csrng/rtl] added fatal alert
--- a/hw/ip/csrng/rtl/csrng_ctr_drbg_cmd.sv
+++ b/hw/ip/csrng/rtl/csrng_ctr_drbg_cmd.sv
@@ -275,9 +275,9 @@ module csrng_ctr_drbg_cmd import csrng_pkg::*; #(
           ctr_drbg_cmd_inst_id_o,ctr_drbg_cmd_ccmd_o} = sfifo_keyvrc_rdata;
 
   assign ctr_drbg_cmd_sfifo_keyvrc_err_o =
-         {(sfifo_keyvrc_push && !sfifo_keyvrc_not_full),
+         {(sfifo_keyvrc_push && sfifo_keyvrc_full),
           (sfifo_keyvrc_pop && !sfifo_keyvrc_not_empty),
-          (!sfifo_keyvrc_not_full && !sfifo_keyvrc_not_empty)};
+          (sfifo_keyvrc_full && !sfifo_keyvrc_not_empty)};
 
   // block ack
   assign ctr_drbg_cmd_ack_o = sfifo_keyvrc_pop;
ParseResult:
UPD HdlStmAssign@@ to 
    UPD HdlOp@@CONCAT to CONCAT
        UPD HdlOp@@AND_LOG to AND_LOG
            UPD HdlOp@@NEG_LOG to NEG_LOG
                UPD HdlValueId@@sfifo_keyvrc_not_full to sfifo_keyvrc_full
                MOV HdlValueId@@sfifo_keyvrc_not_full to ops
                HdlValueId: sfifo_keyvrc_not_full
                DEL list@@ops from NEG_LOG
            DEL HdlOp@@NEG_LOG from ops
        UPD HdlOp@@CONCAT to CONCAT
            UPD HdlOp@@AND_LOG to AND_LOG
                UPD HdlOp@@NEG_LOG to NEG_LOG
                    UPD HdlValueId@@sfifo_keyvrc_not_full to sfifo_keyvrc_full
                    MOV HdlValueId@@sfifo_keyvrc_not_full to ops
                    HdlValueId: sfifo_keyvrc_not_full
                    DEL list@@ops from NEG_LOG
                DEL HdlOp@@NEG_LOG from ops


CommitId: ac94003e3a9f3ade1ca7e85463d8c33bdf6dd9e9
[padctrl/fpv/lint] Fix inout wire issue with lint and fpv
--- a/hw/ip/padctrl/rtl/padring.sv
+++ b/hw/ip/padctrl/rtl/padring.sv
@@ -37,11 +37,20 @@ module padring #(
   // Infrastructure
   //////////////////////////////////////////////////////
 
+  // use this intermediate assignment to make both lint and fpv happy.
+  // the clock/reset wires should be input-only, otherwise fpv
+  // has trouble defining/tracing the clock signal. on the other hand, a direct
+  // connection of input wire to an inout pad causes lint problems
+  // (even though oe is hardwired to 0).
+  wire clk, rst_n;
+  assign clk   = clk_i;
+  assign rst_n = rst_ni;
+
   prim_pad_wrapper #(
     .Impl(Impl),
     .AttrDw(padctrl_reg_pkg::AttrDw)
   ) i_clk_pad (
-    .inout_io ( clk_i ),
+    .inout_io ( clk   ),
     .in_o     ( clk_o ),
     .out_i    ( 1'b0  ),
     .oe_i     ( 1'b0  ),

ParseResult:
INS HdlIdDef@@clk to objs
HdlIdDef: clk
    HdlDirection: INTERNAL

INS HdlIdDef@@rst_n to objs
HdlIdDef: rst_n
    HdlDirection: INTERNAL

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlValueId: clk_i
    HdlValueId: clk

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlValueId: rst_ni
    HdlValueId: rst_n


CommitId: e96730f7612a3fb85637d8d91645355806752c8a
[flash_ctrl] Add ECC to program / erase datapaths
--- a/hw/ip/prim/rtl/prim_secded_72_64_dec.sv
+++ b/hw/ip/prim/rtl/prim_secded_72_64_dec.sv
@@ -16,36 +16,36 @@ module prim_secded_72_64_dec (
   // Syndrome calculation
   assign syndrome_o[0] = in[64] ^ in[0] ^ in[1] ^ in[2] ^ in[3] ^ in[4] ^ in[5] ^ in[6] ^ in[7]
                        ^ in[8] ^ in[9] ^ in[10] ^ in[11] ^ in[12] ^ in[13] ^ in[14] ^ in[15]
-                       ^ in[16] ^ in[17] ^ in[18] ^ in[19] ^ in[20] ^ in[57] ^ in[58] ^ in[61]
-                       ^ in[62] ^ in[63];
+                       ^ in[16] ^ in[17] ^ in[18] ^ in[19] ^ in[20] ^ in[57] ^ in[59] ^ in[60]
+                       ^ in[61] ^ in[62];
   assign syndrome_o[1] = in[65] ^ in[0] ^ in[1] ^ in[2] ^ in[3] ^ in[4] ^ in[5] ^ in[21] ^ in[22]
                        ^ in[23] ^ in[24] ^ in[25] ^ in[26] ^ in[27] ^ in[28] ^ in[29] ^ in[30]
-                       ^ in[31] ^ in[32] ^ in[33] ^ in[34] ^ in[35] ^ in[58] ^ in[59] ^ in[60]
+                       ^ in[31] ^ in[32] ^ in[33] ^ in[34] ^ in[35] ^ in[56] ^ in[57] ^ in[60]
                        ^ in[62] ^ in[63];
   assign syndrome_o[2] = in[66] ^ in[0] ^ in[6] ^ in[7] ^ in[8] ^ in[9] ^ in[10] ^ in[21] ^ in[22]
                        ^ in[23] ^ in[24] ^ in[25] ^ in[36] ^ in[37] ^ in[38] ^ in[39] ^ in[40]
-                       ^ in[41] ^ in[42] ^ in[43] ^ in[44] ^ in[45] ^ in[56] ^ in[57] ^ in[59]
-                       ^ in[60] ^ in[63];
+                       ^ in[41] ^ in[42] ^ in[43] ^ in[44] ^ in[45] ^ in[56] ^ in[57] ^ in[58]
+                       ^ in[61] ^ in[62];
   assign syndrome_o[3] = in[67] ^ in[1] ^ in[6] ^ in[11] ^ in[12] ^ in[13] ^ in[14] ^ in[21]
                        ^ in[26] ^ in[27] ^ in[28] ^ in[29] ^ in[36] ^ in[37] ^ in[38] ^ in[39]
-                       ^ in[46] ^ in[47] ^ in[48] ^ in[49] ^ in[50] ^ in[51] ^ in[56] ^ in[57]
-                       ^ in[58] ^ in[61] ^ in[63];
+                       ^ in[46] ^ in[47] ^ in[48] ^ in[49] ^ in[50] ^ in[51] ^ in[56] ^ in[58]
+                       ^ in[59] ^ in[62] ^ in[63];
   assign syndrome_o[4] = in[68] ^ in[2] ^ in[7] ^ in[11] ^ in[15] ^ in[16] ^ in[17] ^ in[22]
                        ^ in[26] ^ in[30] ^ in[31] ^ in[32] ^ in[36] ^ in[40] ^ in[41] ^ in[42]
-                       ^ in[46] ^ in[47] ^ in[48] ^ in[52] ^ in[53] ^ in[54] ^ in[56] ^ in[58]
-                       ^ in[59] ^ in[61] ^ in[62];
+                       ^ in[46] ^ in[47] ^ in[48] ^ in[52] ^ in[53] ^ in[54] ^ in[58] ^ in[59]
+                       ^ in[60] ^ in[61] ^ in[63];
   assign syndrome_o[5] = in[69] ^ in[3] ^ in[8] ^ in[12] ^ in[15] ^ in[18] ^ in[19] ^ in[23]
                        ^ in[27] ^ in[30] ^ in[33] ^ in[34] ^ in[37] ^ in[40] ^ in[43] ^ in[44]
                        ^ in[46] ^ in[49] ^ in[50] ^ in[52] ^ in[53] ^ in[55] ^ in[56] ^ in[57]
-                       ^ in[59] ^ in[60] ^ in[61];
+                       ^ in[58] ^ in[60] ^ in[63];
   assign syndrome_o[6] = in[70] ^ in[4] ^ in[9] ^ in[13] ^ in[16] ^ in[18] ^ in[20] ^ in[24]
                        ^ in[28] ^ in[31] ^ in[33] ^ in[35] ^ in[38] ^ in[41] ^ in[43] ^ in[45]
-                       ^ in[47] ^ in[49] ^ in[51] ^ in[52] ^ in[54] ^ in[55] ^ in[56] ^ in[59]
-                       ^ in[60] ^ in[61] ^ in[62];
+                       ^ in[47] ^ in[49] ^ in[51] ^ in[52] ^ in[54] ^ in[55] ^ in[56] ^ in[57]
+                       ^ in[59] ^ in[61] ^ in[63];
   assign syndrome_o[7] = in[71] ^ in[5] ^ in[10] ^ in[14] ^ in[17] ^ in[19] ^ in[20] ^ in[25]
                        ^ in[29] ^ in[32] ^ in[34] ^ in[35] ^ in[39] ^ in[42] ^ in[44] ^ in[45]
-                       ^ in[48] ^ in[50] ^ in[51] ^ in[53] ^ in[54] ^ in[55] ^ in[57] ^ in[58]
-                       ^ in[60] ^ in[62] ^ in[63];
+                       ^ in[48] ^ in[50] ^ in[51] ^ in[53] ^ in[54] ^ in[55] ^ in[58] ^ in[59]
+                       ^ in[60] ^ in[61] ^ in[62];
 
   // Corrected output calculation
   assign d_o[0] = (syndrome_o == 8'h7) ^ in[0];

ParseResult:
UPD HdlStmAssign@@ to 
    UPD HdlOp@@XOR to XOR
        MOV HdlOp@@XOR to ops
        HdlOp: XOR
            list: ops
                HdlOp: XOR
                    list: ops
                        HdlOp: XOR
                            list: ops
                                HdlOp: XOR
                                    list: ops
                                        HdlOp: XOR
                                            list: ops
                                                HdlOp: XOR
                                                    list: ops
                                                        HdlOp: XOR
                                                            list: ops
                                                                HdlOp: XOR
                                                                    list: ops
                                                                        HdlOp: XOR
                                                                            list: ops
                                                                                HdlOp: XOR
                                                                                    list: ops
                                                                                        HdlOp: XOR
                                                                                            list: ops
                                                                                                HdlOp: XOR
                                                                                                    list: ops
                                                                                                        HdlOp: XOR
                                                                                                            list: ops
                                                                                                                HdlOp: XOR
                                                                                                                    list: ops
                                                                                                                        HdlOp: XOR
                                                                                                                            list: ops
                                                                                                                                HdlOp: XOR
                                                                                                                                    list: ops
                                                                                                                                        HdlOp: XOR
                                                                                                                                            list: ops
                                                                                                                                                HdlOp: XOR
                                                                                                                                                    list: ops
                                                                                                                                                        HdlOp: XOR
                                                                                                                                                            list: ops
                                                                                                                                                                HdlOp: XOR
                                                                                                                                                                    list: ops
                                                                                                                                                                        HdlOp: XOR
                                                                                                                                                                            list: ops
                                                                                                                                                                                HdlOp: XOR
                                                                                                                                                                                    list: ops
                                                                                                                                                                                        HdlOp: XOR
                                                                                                                                                                                            list: ops
                                                                                                                                                                                                HdlOp: XOR
                                                                                                                                                                                                    list: ops
                                                                                                                                                                                                        HdlOp: XOR
                                                                                                                                                                                                            list: ops
                                                                                                                                                                                                                HdlOp: INDEX
                                                                                                                                                                                                                    list: ops
                                                                                                                                                                                                                        HdlValueId: in
                                                                                                                                                                                                                        HdlValueInt: 64
                                                                                                                                                                                                                HdlOp: INDEX
                                                                                                                                                                                                                    list: ops
                                                                                                                                                                                                                        HdlValueId: in
                                                                                                                                                                                                                        HdlValueInt: 0
                                                                                                                                                                                                        HdlOp: INDEX
                                                                                                                                                                                                            list: ops
                                                                                                                                                                                                                HdlValueId: in
                                                                                                                                                                                                                HdlValueInt: 1
                                                                                                                                                                                                HdlOp: INDEX
                                                                                                                                                                                                    list: ops
                                                                                                                                                                                                        HdlValueId: in
                                                                                                                                                                                                        HdlValueInt: 2
                                                                                                                                                                                        HdlOp: INDEX
                                                                                                                                                                                            list: ops
                                                                                                                                                                                                HdlValueId: in
                                                                                                                                                                                                HdlValueInt: 3
                                                                                                                                                                                HdlOp: INDEX
                                                                                                                                                                                    list: ops
                                                                                                                                                                                        HdlValueId: in
                                                                                                                                                                                        HdlValueInt: 4
                                                                                                                                                                        HdlOp: INDEX
                                                                                                                                                                            list: ops
                                                                                                                                                                                HdlValueId: in
                                                                                                                                                                                HdlValueInt: 5
                                                                                                                                                                HdlOp: INDEX
                                                                                                                                                                    list: ops
                                                                                                                                                                        HdlValueId: in
                                                                                                                                                                        HdlValueInt: 6
                                                                                                                                                        HdlOp: INDEX
                                                                                                                                                            list: ops
                                                                                                                                                                HdlValueId: in
                                                                                                                                                                HdlValueInt: 7
                                                                                                                                                HdlOp: INDEX
                                                                                                                                                    list: ops
                                                                                                                                                        HdlValueId: in
                                                                                                                                                        HdlValueInt: 8
                                                                                                                                        HdlOp: INDEX
                                                                                                                                            list: ops
                                                                                                                                                HdlValueId: in
                                                                                                                                                HdlValueInt: 9
                                                                                                                                HdlOp: INDEX
                                                                                                                                    list: ops
                                                                                                                                        HdlValueId: in
                                                                                                                                        HdlValueInt: 10
                                                                                                                        HdlOp: INDEX
                                                                                                                            list: ops
                                                                                                                                HdlValueId: in
                                                                                                                                HdlValueInt: 11
                                                                                                                HdlOp: INDEX
                                                                                                                    list: ops
                                                                                                                        HdlValueId: in
                                                                                                                        HdlValueInt: 12
                                                                                                        HdlOp: INDEX
                                                                                                            list: ops
                                                                                                                HdlValueId: in
                                                                                                                HdlValueInt: 13
                                                                                                HdlOp: INDEX
                                                                                                    list: ops
                                                                                                        HdlValueId: in
                                                                                                        HdlValueInt: 14
                                                                                        HdlOp: INDEX
                                                                                            list: ops
                                                                                                HdlValueId: in
                                                                                                HdlValueInt: 15
                                                                                HdlOp: INDEX
                                                                                    list: ops
                                                                                        HdlValueId: in
                                                                                        HdlValueInt: 16
                                                                        HdlOp: INDEX
                                                                            list: ops
                                                                                HdlValueId: in
                                                                                HdlValueInt: 17
                                                                HdlOp: INDEX
                                                                    list: ops
                                                                        HdlValueId: in
                                                                        HdlValueInt: 18
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlValueId: in
                                                                HdlValueInt: 19
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: in
                                                        HdlValueInt: 20
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: in
                                                HdlValueInt: 57
                                HdlOp: INDEX
                                    list: ops
                                        HdlValueId: in
                                        HdlValueInt: 58
                        HdlOp: INDEX
                            list: ops
                                HdlValueId: in
                                HdlValueInt: 61
                HdlOp: INDEX
                    list: ops
                        HdlValueId: in
                        HdlValueInt: 62
        MOV HdlOp@@INDEX to ops
        HdlOp: INDEX
            list: ops
                HdlValueId: in
                HdlValueInt: 63
        UPD HdlOp@@XOR to XOR
            UPD HdlOp@@XOR to XOR
                MOV HdlOp@@XOR to ops
                HdlOp: XOR
                    list: ops
                        HdlOp: XOR
                            list: ops
                                HdlOp: XOR
                                    list: ops
                                        HdlOp: XOR
                                            list: ops
                                                HdlOp: XOR
                                                    list: ops
                                                        HdlOp: XOR
                                                            list: ops
                                                                HdlOp: XOR
                                                                    list: ops
                                                                        HdlOp: XOR
                                                                            list: ops
                                                                                HdlOp: XOR
                                                                                    list: ops
                                                                                        HdlOp: XOR
                                                                                            list: ops
                                                                                                HdlOp: XOR
                                                                                                    list: ops
                                                                                                        HdlOp: XOR
                                                                                                            list: ops
                                                                                                                HdlOp: XOR
                                                                                                                    list: ops
                                                                                                                        HdlOp: XOR
                                                                                                                            list: ops
                                                                                                                                HdlOp: XOR
                                                                                                                                    list: ops
                                                                                                                                        HdlOp: XOR
                                                                                                                                            list: ops
                                                                                                                                                HdlOp: XOR
                                                                                                                                                    list: ops
                                                                                                                                                        HdlOp: XOR
                                                                                                                                                            list: ops
                                                                                                                                                                HdlOp: XOR
                                                                                                                                                                    list: ops
                                                                                                                                                                        HdlOp: XOR
                                                                                                                                                                            list: ops
                                                                                                                                                                                HdlOp: XOR
                                                                                                                                                                                    list: ops
                                                                                                                                                                                        HdlOp: XOR
                                                                                                                                                                                            list: ops
                                                                                                                                                                                                HdlOp: XOR
                                                                                                                                                                                                    list: ops
                                                                                                                                                                                                        HdlOp: INDEX
                                                                                                                                                                                                            list: ops
                                                                                                                                                                                                                HdlValueId: in
                                                                                                                                                                                                                HdlValueInt: 64
                                                                                                                                                                                                        HdlOp: INDEX
                                                                                                                                                                                                            list: ops
                                                                                                                                                                                                                HdlValueId: in
                                                                                                                                                                                                                HdlValueInt: 0
                                                                                                                                                                                                HdlOp: INDEX
                                                                                                                                                                                                    list: ops
                                                                                                                                                                                                        HdlValueId: in
                                                                                                                                                                                                        HdlValueInt: 1
                                                                                                                                                                                        HdlOp: INDEX
                                                                                                                                                                                            list: ops
                                                                                                                                                                                                HdlValueId: in
                                                                                                                                                                                                HdlValueInt: 2
                                                                                                                                                                                HdlOp: INDEX
                                                                                                                                                                                    list: ops
                                                                                                                                                                                        HdlValueId: in
                                                                                                                                                                                        HdlValueInt: 3
                                                                                                                                                                        HdlOp: INDEX
                                                                                                                                                                            list: ops
                                                                                                                                                                                HdlValueId: in
                                                                                                                                                                                HdlValueInt: 4
                                                                                                                                                                HdlOp: INDEX
                                                                                                                                                                    list: ops
                                                                                                                                                                        HdlValueId: in
                                                                                                                                                                        HdlValueInt: 5
                                                                                                                                                        HdlOp: INDEX
                                                                                                                                                            list: ops
                                                                                                                                                                HdlValueId: in
                                                                                                                                                                HdlValueInt: 6
                                                                                                                                                HdlOp: INDEX
                                                                                                                                                    list: ops
                                                                                                                                                        HdlValueId: in
                                                                                                                                                        HdlValueInt: 7
                                                                                                                                        HdlOp: INDEX
                                                                                                                                            list: ops
                                                                                                                                                HdlValueId: in
                                                                                                                                                HdlValueInt: 8
                                                                                                                                HdlOp: INDEX
                                                                                                                                    list: ops
                                                                                                                                        HdlValueId: in
                                                                                                                                        HdlValueInt: 9
                                                                                                                        HdlOp: INDEX
                                                                                                                            list: ops
                                                                                                                                HdlValueId: in
                                                                                                                                HdlValueInt: 10
                                                                                                                HdlOp: INDEX
                                                                                                                    list: ops
                                                                                                                        HdlValueId: in
                                                                                                                        HdlValueInt: 11
                                                                                                        HdlOp: INDEX
                                                                                                            list: ops
                                                                                                                HdlValueId: in
                                                                                                                HdlValueInt: 12
                                                                                                HdlOp: INDEX
                                                                                                    list: ops
                                                                                                        HdlValueId: in
                                                                                                        HdlValueInt: 13
                                                                                        HdlOp: INDEX
                                                                                            list: ops
                                                                                                HdlValueId: in
                                                                                                HdlValueInt: 14
                                                                                HdlOp: INDEX
                                                                                    list: ops
                                                                                        HdlValueId: in
                                                                                        HdlValueInt: 15
                                                                        HdlOp: INDEX
                                                                            list: ops
                                                                                HdlValueId: in
                                                                                HdlValueInt: 16
                                                                HdlOp: INDEX
                                                                    list: ops
                                                                        HdlValueId: in
                                                                        HdlValueInt: 17
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlValueId: in
                                                                HdlValueInt: 18
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: in
                                                        HdlValueInt: 19
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: in
                                                HdlValueInt: 20
                                HdlOp: INDEX
                                    list: ops
                                        HdlValueId: in
                                        HdlValueInt: 57
                        HdlOp: INDEX
                            list: ops
                                HdlValueId: in
                                HdlValueInt: 58
                UPD HdlOp@@XOR to XOR
                    MOV HdlOp@@INDEX to ops
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: in
                            HdlValueInt: 58
    MOV HdlOp@@XOR to 
    HdlOp: XOR
        list: ops
            HdlOp: XOR
                list: ops
                    HdlOp: XOR
                        list: ops
                            HdlOp: XOR
                                list: ops
                                    HdlOp: XOR
                                        list: ops
                                            HdlOp: XOR
                                                list: ops
                                                    HdlOp: XOR
                                                        list: ops
                                                            HdlOp: XOR
                                                                list: ops
                                                                    HdlOp: XOR
                                                                        list: ops
                                                                            HdlOp: XOR
                                                                                list: ops
                                                                                    HdlOp: XOR
                                                                                        list: ops
                                                                                            HdlOp: XOR
                                                                                                list: ops
                                                                                                    HdlOp: XOR
                                                                                                        list: ops
                                                                                                            HdlOp: XOR
                                                                                                                list: ops
                                                                                                                    HdlOp: XOR
                                                                                                                        list: ops
                                                                                                                            HdlOp: XOR
                                                                                                                                list: ops
                                                                                                                                    HdlOp: XOR
                                                                                                                                        list: ops
                                                                                                                                            HdlOp: XOR
                                                                                                                                                list: ops
                                                                                                                                                    HdlOp: XOR
                                                                                                                                                        list: ops
                                                                                                                                                            HdlOp: XOR
                                                                                                                                                                list: ops
                                                                                                                                                                    HdlOp: XOR
                                                                                                                                                                        list: ops
                                                                                                                                                                            HdlOp: XOR
                                                                                                                                                                                list: ops
                                                                                                                                                                                    HdlOp: XOR
                                                                                                                                                                                        list: ops
                                                                                                                                                                                            HdlOp: XOR
                                                                                                                                                                                                list: ops
                                                                                                                                                                                                    HdlOp: XOR
                                                                                                                                                                                                        list: ops
                                                                                                                                                                                                            HdlOp: XOR
                                                                                                                                                                                                                list: ops
                                                                                                                                                                                                                    HdlOp: INDEX
                                                                                                                                                                                                                        list: ops
                                                                                                                                                                                                                            HdlValueId: in
                                                                                                                                                                                                                            HdlValueInt: 64
                                                                                                                                                                                                                    HdlOp: INDEX
                                                                                                                                                                                                                        list: ops
                                                                                                                                                                                                                            HdlValueId: in
                                                                                                                                                                                                                            HdlValueInt: 0
                                                                                                                                                                                                            HdlOp: INDEX
                                                                                                                                                                                                                list: ops
                                                                                                                                                                                                                    HdlValueId: in
                                                                                                                                                                                                                    HdlValueInt: 1
                                                                                                                                                                                                    HdlOp: INDEX
                                                                                                                                                                                                        list: ops
                                                                                                                                                                                                            HdlValueId: in
                                                                                                                                                                                                            HdlValueInt: 2
                                                                                                                                                                                            HdlOp: INDEX
                                                                                                                                                                                                list: ops
                                                                                                                                                                                                    HdlValueId: in
                                                                                                                                                                                                    HdlValueInt: 3
                                                                                                                                                                                    HdlOp: INDEX
                                                                                                                                                                                        list: ops
                                                                                                                                                                                            HdlValueId: in
                                                                                                                                                                                            HdlValueInt: 4
                                                                                                                                                                            HdlOp: INDEX
                                                                                                                                                                                list: ops
                                                                                                                                                                                    HdlValueId: in
                                                                                                                                                                                    HdlValueInt: 5
                                                                                                                                                                    HdlOp: INDEX
                                                                                                                                                                        list: ops
                                                                                                                                                                            HdlValueId: in
                                                                                                                                                                            HdlValueInt: 6
                                                                                                                                                            HdlOp: INDEX
                                                                                                                                                                list: ops
                                                                                                                                                                    HdlValueId: in
                                                                                                                                                                    HdlValueInt: 7
                                                                                                                                                    HdlOp: INDEX
                                                                                                                                                        list: ops
                                                                                                                                                            HdlValueId: in
                                                                                                                                                            HdlValueInt: 8
                                                                                                                                            HdlOp: INDEX
                                                                                                                                                list: ops
                                                                                                                                                    HdlValueId: in
                                                                                                                                                    HdlValueInt: 9
                                                                                                                                    HdlOp: INDEX
                                                                                                                                        list: ops
                                                                                                                                            HdlValueId: in
                                                                                                                                            HdlValueInt: 10
                                                                                                                            HdlOp: INDEX
                                                                                                                                list: ops
                                                                                                                                    HdlValueId: in
                                                                                                                                    HdlValueInt: 11
                                                                                                                    HdlOp: INDEX
                                                                                                                        list: ops
                                                                                                                            HdlValueId: in
                                                                                                                            HdlValueInt: 12
                                                                                                            HdlOp: INDEX
                                                                                                                list: ops
                                                                                                                    HdlValueId: in
                                                                                                                    HdlValueInt: 13
                                                                                                    HdlOp: INDEX
                                                                                                        list: ops
                                                                                                            HdlValueId: in
                                                                                                            HdlValueInt: 14
                                                                                            HdlOp: INDEX
                                                                                                list: ops
                                                                                                    HdlValueId: in
                                                                                                    HdlValueInt: 15
                                                                                    HdlOp: INDEX
                                                                                        list: ops
                                                                                            HdlValueId: in
                                                                                            HdlValueInt: 16
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlValueId: in
                                                                                    HdlValueInt: 17
                                                                    HdlOp: INDEX
                                                                        list: ops
                                                                            HdlValueId: in
                                                                            HdlValueInt: 18
                                                            HdlOp: INDEX
                                                                list: ops
                                                                    HdlValueId: in
                                                                    HdlValueInt: 19
                                                    HdlOp: INDEX
                                                        list: ops
                                                            HdlValueId: in
                                                            HdlValueInt: 20
                                            HdlOp: INDEX
                                                list: ops
                                                    HdlValueId: in
                                                    HdlValueInt: 57
                                    HdlOp: INDEX
                                        list: ops
                                            HdlValueId: in
                                            HdlValueInt: 58
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: in
                                    HdlValueInt: 61
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: in
                            HdlValueInt: 62
            HdlOp: INDEX
                list: ops
                    HdlValueId: in
                    HdlValueInt: 63

UPD HdlStmAssign@@ to 
    UPD HdlOp@@XOR to XOR
        MOV HdlOp@@XOR to ops
        HdlOp: XOR
            list: ops
                HdlOp: XOR
                    list: ops
                        HdlOp: XOR
                            list: ops
                                HdlOp: XOR
                                    list: ops
                                        HdlOp: XOR
                                            list: ops
                                                HdlOp: XOR
                                                    list: ops
                                                        HdlOp: XOR
                                                            list: ops
                                                                HdlOp: XOR
                                                                    list: ops
                                                                        HdlOp: XOR
                                                                            list: ops
                                                                                HdlOp: XOR
                                                                                    list: ops
                                                                                        HdlOp: XOR
                                                                                            list: ops
                                                                                                HdlOp: XOR
                                                                                                    list: ops
                                                                                                        HdlOp: XOR
                                                                                                            list: ops
                                                                                                                HdlOp: XOR
                                                                                                                    list: ops
                                                                                                                        HdlOp: XOR
                                                                                                                            list: ops
                                                                                                                                HdlOp: XOR
                                                                                                                                    list: ops
                                                                                                                                        HdlOp: XOR
                                                                                                                                            list: ops
                                                                                                                                                HdlOp: XOR
                                                                                                                                                    list: ops
                                                                                                                                                        HdlOp: XOR
                                                                                                                                                            list: ops
                                                                                                                                                                HdlOp: XOR
                                                                                                                                                                    list: ops
                                                                                                                                                                        HdlOp: XOR
                                                                                                                                                                            list: ops
                                                                                                                                                                                HdlOp: XOR
                                                                                                                                                                                    list: ops
                                                                                                                                                                                        HdlOp: XOR
                                                                                                                                                                                            list: ops
                                                                                                                                                                                                HdlOp: XOR
                                                                                                                                                                                                    list: ops
                                                                                                                                                                                                        HdlOp: XOR
                                                                                                                                                                                                            list: ops
                                                                                                                                                                                                                HdlOp: INDEX
                                                                                                                                                                                                                    list: ops
                                                                                                                                                                                                                        HdlValueId: in
                                                                                                                                                                                                                        HdlValueInt: 70
                                                                                                                                                                                                                HdlOp: INDEX
                                                                                                                                                                                                                    list: ops
                                                                                                                                                                                                                        HdlValueId: in
                                                                                                                                                                                                                        HdlValueInt: 4
                                                                                                                                                                                                        HdlOp: INDEX
                                                                                                                                                                                                            list: ops
                                                                                                                                                                                                                HdlValueId: in
                                                                                                                                                                                                                HdlValueInt: 9
                                                                                                                                                                                                HdlOp: INDEX
                                                                                                                                                                                                    list: ops
                                                                                                                                                                                                        HdlValueId: in
                                                                                                                                                                                                        HdlValueInt: 13
                                                                                                                                                                                        HdlOp: INDEX
                                                                                                                                                                                            list: ops
                                                                                                                                                                                                HdlValueId: in
                                                                                                                                                                                                HdlValueInt: 16
                                                                                                                                                                                HdlOp: INDEX
                                                                                                                                                                                    list: ops
                                                                                                                                                                                        HdlValueId: in
                                                                                                                                                                                        HdlValueInt: 18
                                                                                                                                                                        HdlOp: INDEX
                                                                                                                                                                            list: ops
                                                                                                                                                                                HdlValueId: in
                                                                                                                                                                                HdlValueInt: 20
                                                                                                                                                                HdlOp: INDEX
                                                                                                                                                                    list: ops
                                                                                                                                                                        HdlValueId: in
                                                                                                                                                                        HdlValueInt: 24
                                                                                                                                                        HdlOp: INDEX
                                                                                                                                                            list: ops
                                                                                                                                                                HdlValueId: in
                                                                                                                                                                HdlValueInt: 28
                                                                                                                                                HdlOp: INDEX
                                                                                                                                                    list: ops
                                                                                                                                                        HdlValueId: in
                                                                                                                                                        HdlValueInt: 31
                                                                                                                                        HdlOp: INDEX
                                                                                                                                            list: ops
                                                                                                                                                HdlValueId: in
                                                                                                                                                HdlValueInt: 33
                                                                                                                                HdlOp: INDEX
                                                                                                                                    list: ops
                                                                                                                                        HdlValueId: in
                                                                                                                                        HdlValueInt: 35
                                                                                                                        HdlOp: INDEX
                                                                                                                            list: ops
                                                                                                                                HdlValueId: in
                                                                                                                                HdlValueInt: 38
                                                                                                                HdlOp: INDEX
                                                                                                                    list: ops
                                                                                                                        HdlValueId: in
                                                                                                                        HdlValueInt: 41
                                                                                                        HdlOp: INDEX
                                                                                                            list: ops
                                                                                                                HdlValueId: in
                                                                                                                HdlValueInt: 43
                                                                                                HdlOp: INDEX
                                                                                                    list: ops
                                                                                                        HdlValueId: in
                                                                                                        HdlValueInt: 45
                                                                                        HdlOp: INDEX
                                                                                            list: ops
                                                                                                HdlValueId: in
                                                                                                HdlValueInt: 47
                                                                                HdlOp: INDEX
                                                                                    list: ops
                                                                                        HdlValueId: in
                                                                                        HdlValueInt: 49
                                                                        HdlOp: INDEX
                                                                            list: ops
                                                                                HdlValueId: in
                                                                                HdlValueInt: 51
                                                                HdlOp: INDEX
                                                                    list: ops
                                                                        HdlValueId: in
                                                                        HdlValueInt: 52
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlValueId: in
                                                                HdlValueInt: 54
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: in
                                                        HdlValueInt: 55
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: in
                                                HdlValueInt: 56
                                HdlOp: INDEX
                                    list: ops
                                        HdlValueId: in
                                        HdlValueInt: 59
                        HdlOp: INDEX
                            list: ops
                                HdlValueId: in
                                HdlValueInt: 60
                HdlOp: INDEX
                    list: ops
                        HdlValueId: in
                        HdlValueInt: 61
        MOV HdlOp@@INDEX to ops
        HdlOp: INDEX
            list: ops
                HdlValueId: in
                HdlValueInt: 62
        UPD HdlOp@@XOR to XOR
            MOV HdlOp@@INDEX to ops
            HdlOp: INDEX
                list: ops
                    HdlValueId: in
                    HdlValueInt: 61
            UPD HdlOp@@XOR to XOR
                MOV HdlOp@@INDEX to ops
                HdlOp: INDEX
                    list: ops
                        HdlValueId: in
                        HdlValueInt: 60
                UPD HdlOp@@XOR to XOR
                    MOV HdlOp@@XOR to ops
                    HdlOp: XOR
                        list: ops
                            HdlOp: XOR
                                list: ops
                                    HdlOp: XOR
                                        list: ops
                                            HdlOp: XOR
                                                list: ops
                                                    HdlOp: XOR
                                                        list: ops
                                                            HdlOp: XOR
                                                                list: ops
                                                                    HdlOp: XOR
                                                                        list: ops
                                                                            HdlOp: XOR
                                                                                list: ops
                                                                                    HdlOp: XOR
                                                                                        list: ops
                                                                                            HdlOp: XOR
                                                                                                list: ops
                                                                                                    HdlOp: XOR
                                                                                                        list: ops
                                                                                                            HdlOp: XOR
                                                                                                                list: ops
                                                                                                                    HdlOp: XOR
                                                                                                                        list: ops
                                                                                                                            HdlOp: XOR
                                                                                                                                list: ops
                                                                                                                                    HdlOp: XOR
                                                                                                                                        list: ops
                                                                                                                                            HdlOp: XOR
                                                                                                                                                list: ops
                                                                                                                                                    HdlOp: XOR
                                                                                                                                                        list: ops
                                                                                                                                                            HdlOp: XOR
                                                                                                                                                                list: ops
                                                                                                                                                                    HdlOp: XOR
                                                                                                                                                                        list: ops
                                                                                                                                                                            HdlOp: XOR
                                                                                                                                                                                list: ops
                                                                                                                                                                                    HdlOp: XOR
                                                                                                                                                                                        list: ops
                                                                                                                                                                                            HdlOp: XOR
                                                                                                                                                                                                list: ops
                                                                                                                                                                                                    HdlOp: INDEX
                                                                                                                                                                                                        list: ops
                                                                                                                                                                                                            HdlValueId: in
                                                                                                                                                                                                            HdlValueInt: 70
                                                                                                                                                                                                    HdlOp: INDEX
                                                                                                                                                                                                        list: ops
                                                                                                                                                                                                            HdlValueId: in
                                                                                                                                                                                                            HdlValueInt: 4
                                                                                                                                                                                            HdlOp: INDEX
                                                                                                                                                                                                list: ops
                                                                                                                                                                                                    HdlValueId: in
                                                                                                                                                                                                    HdlValueInt: 9
                                                                                                                                                                                    HdlOp: INDEX
                                                                                                                                                                                        list: ops
                                                                                                                                                                                            HdlValueId: in
                                                                                                                                                                                            HdlValueInt: 13
                                                                                                                                                                            HdlOp: INDEX
                                                                                                                                                                                list: ops
                                                                                                                                                                                    HdlValueId: in
                                                                                                                                                                                    HdlValueInt: 16
                                                                                                                                                                    HdlOp: INDEX
                                                                                                                                                                        list: ops
                                                                                                                                                                            HdlValueId: in
                                                                                                                                                                            HdlValueInt: 18
                                                                                                                                                            HdlOp: INDEX
                                                                                                                                                                list: ops
                                                                                                                                                                    HdlValueId: in
                                                                                                                                                                    HdlValueInt: 20
                                                                                                                                                    HdlOp: INDEX
                                                                                                                                                        list: ops
                                                                                                                                                            HdlValueId: in
                                                                                                                                                            HdlValueInt: 24
                                                                                                                                            HdlOp: INDEX
                                                                                                                                                list: ops
                                                                                                                                                    HdlValueId: in
                                                                                                                                                    HdlValueInt: 28
                                                                                                                                    HdlOp: INDEX
                                                                                                                                        list: ops
                                                                                                                                            HdlValueId: in
                                                                                                                                            HdlValueInt: 31
                                                                                                                            HdlOp: INDEX
                                                                                                                                list: ops
                                                                                                                                    HdlValueId: in
                                                                                                                                    HdlValueInt: 33
                                                                                                                    HdlOp: INDEX
                                                                                                                        list: ops
                                                                                                                            HdlValueId: in
                                                                                                                            HdlValueInt: 35
                                                                                                            HdlOp: INDEX
                                                                                                                list: ops
                                                                                                                    HdlValueId: in
                                                                                                                    HdlValueInt: 38
                                                                                                    HdlOp: INDEX
                                                                                                        list: ops
                                                                                                            HdlValueId: in
                                                                                                            HdlValueInt: 41
                                                                                            HdlOp: INDEX
                                                                                                list: ops
                                                                                                    HdlValueId: in
                                                                                                    HdlValueInt: 43
                                                                                    HdlOp: INDEX
                                                                                        list: ops
                                                                                            HdlValueId: in
                                                                                            HdlValueInt: 45
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlValueId: in
                                                                                    HdlValueInt: 47
                                                                    HdlOp: INDEX
                                                                        list: ops
                                                                            HdlValueId: in
                                                                            HdlValueInt: 49
                                                            HdlOp: INDEX
                                                                list: ops
                                                                    HdlValueId: in
                                                                    HdlValueInt: 51
                                                    HdlOp: INDEX
                                                        list: ops
                                                            HdlValueId: in
                                                            HdlValueInt: 52
                                            HdlOp: INDEX
                                                list: ops
                                                    HdlValueId: in
                                                    HdlValueInt: 54
                                    HdlOp: INDEX
                                        list: ops
                                            HdlValueId: in
                                            HdlValueInt: 55
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: in
                                    HdlValueInt: 56
    MOV HdlOp@@XOR to 
    HdlOp: XOR
        list: ops
            HdlOp: XOR
                list: ops
                    HdlOp: XOR
                        list: ops
                            HdlOp: XOR
                                list: ops
                                    HdlOp: XOR
                                        list: ops
                                            HdlOp: XOR
                                                list: ops
                                                    HdlOp: XOR
                                                        list: ops
                                                            HdlOp: XOR
                                                                list: ops
                                                                    HdlOp: XOR
                                                                        list: ops
                                                                            HdlOp: XOR
                                                                                list: ops
                                                                                    HdlOp: XOR
                                                                                        list: ops
                                                                                            HdlOp: XOR
                                                                                                list: ops
                                                                                                    HdlOp: XOR
                                                                                                        list: ops
                                                                                                            HdlOp: XOR
                                                                                                                list: ops
                                                                                                                    HdlOp: XOR
                                                                                                                        list: ops
                                                                                                                            HdlOp: XOR
                                                                                                                                list: ops
                                                                                                                                    HdlOp: XOR
                                                                                                                                        list: ops
                                                                                                                                            HdlOp: XOR
                                                                                                                                                list: ops
                                                                                                                                                    HdlOp: XOR
                                                                                                                                                        list: ops
                                                                                                                                                            HdlOp: XOR
                                                                                                                                                                list: ops
                                                                                                                                                                    HdlOp: XOR
                                                                                                                                                                        list: ops
                                                                                                                                                                            HdlOp: XOR
                                                                                                                                                                                list: ops
                                                                                                                                                                                    HdlOp: XOR
                                                                                                                                                                                        list: ops
                                                                                                                                                                                            HdlOp: XOR
                                                                                                                                                                                                list: ops
                                                                                                                                                                                                    HdlOp: XOR
                                                                                                                                                                                                        list: ops
                                                                                                                                                                                                            HdlOp: XOR
                                                                                                                                                                                                                list: ops
                                                                                                                                                                                                                    HdlOp: INDEX
                                                                                                                                                                                                                        list: ops
                                                                                                                                                                                                                            HdlValueId: in
                                                                                                                                                                                                                            HdlValueInt: 70
                                                                                                                                                                                                                    HdlOp: INDEX
                                                                                                                                                                                                                        list: ops
                                                                                                                                                                                                                            HdlValueId: in
                                                                                                                                                                                                                            HdlValueInt: 4
                                                                                                                                                                                                            HdlOp: INDEX
                                                                                                                                                                                                                list: ops
                                                                                                                                                                                                                    HdlValueId: in
                                                                                                                                                                                                                    HdlValueInt: 9
                                                                                                                                                                                                    HdlOp: INDEX
                                                                                                                                                                                                        list: ops
                                                                                                                                                                                                            HdlValueId: in
                                                                                                                                                                                                            HdlValueInt: 13
                                                                                                                                                                                            HdlOp: INDEX
                                                                                                                                                                                                list: ops
                                                                                                                                                                                                    HdlValueId: in
                                                                                                                                                                                                    HdlValueInt: 16
                                                                                                                                                                                    HdlOp: INDEX
                                                                                                                                                                                        list: ops
                                                                                                                                                                                            HdlValueId: in
                                                                                                                                                                                            HdlValueInt: 18
                                                                                                                                                                            HdlOp: INDEX
                                                                                                                                                                                list: ops
                                                                                                                                                                                    HdlValueId: in
                                                                                                                                                                                    HdlValueInt: 20
                                                                                                                                                                    HdlOp: INDEX
                                                                                                                                                                        list: ops
                                                                                                                                                                            HdlValueId: in
                                                                                                                                                                            HdlValueInt: 24
                                                                                                                                                            HdlOp: INDEX
                                                                                                                                                                list: ops
                                                                                                                                                                    HdlValueId: in
                                                                                                                                                                    HdlValueInt: 28
                                                                                                                                                    HdlOp: INDEX
                                                                                                                                                        list: ops
                                                                                                                                                            HdlValueId: in
                                                                                                                                                            HdlValueInt: 31
                                                                                                                                            HdlOp: INDEX
                                                                                                                                                list: ops
                                                                                                                                                    HdlValueId: in
                                                                                                                                                    HdlValueInt: 33
                                                                                                                                    HdlOp: INDEX
                                                                                                                                        list: ops
                                                                                                                                            HdlValueId: in
                                                                                                                                            HdlValueInt: 35
                                                                                                                            HdlOp: INDEX
                                                                                                                                list: ops
                                                                                                                                    HdlValueId: in
                                                                                                                                    HdlValueInt: 38
                                                                                                                    HdlOp: INDEX
                                                                                                                        list: ops
                                                                                                                            HdlValueId: in
                                                                                                                            HdlValueInt: 41
                                                                                                            HdlOp: INDEX
                                                                                                                list: ops
                                                                                                                    HdlValueId: in
                                                                                                                    HdlValueInt: 43
                                                                                                    HdlOp: INDEX
                                                                                                        list: ops
                                                                                                            HdlValueId: in
                                                                                                            HdlValueInt: 45
                                                                                            HdlOp: INDEX
                                                                                                list: ops
                                                                                                    HdlValueId: in
                                                                                                    HdlValueInt: 47
                                                                                    HdlOp: INDEX
                                                                                        list: ops
                                                                                            HdlValueId: in
                                                                                            HdlValueInt: 49
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlValueId: in
                                                                                    HdlValueInt: 51
                                                                    HdlOp: INDEX
                                                                        list: ops
                                                                            HdlValueId: in
                                                                            HdlValueInt: 52
                                                            HdlOp: INDEX
                                                                list: ops
                                                                    HdlValueId: in
                                                                    HdlValueInt: 54
                                                    HdlOp: INDEX
                                                        list: ops
                                                            HdlValueId: in
                                                            HdlValueInt: 55
                                            HdlOp: INDEX
                                                list: ops
                                                    HdlValueId: in
                                                    HdlValueInt: 56
                                    HdlOp: INDEX
                                        list: ops
                                            HdlValueId: in
                                            HdlValueInt: 59
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: in
                                    HdlValueInt: 60
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: in
                            HdlValueInt: 61
            HdlOp: INDEX
                list: ops
                    HdlValueId: in
                    HdlValueInt: 62

UPD HdlStmAssign@@ to 
    UPD HdlOp@@XOR to XOR
        MOV HdlOp@@XOR to ops
        HdlOp: XOR
            list: ops
                HdlOp: XOR
                    list: ops
                        HdlOp: XOR
                            list: ops
                                HdlOp: XOR
                                    list: ops
                                        HdlOp: XOR
                                            list: ops
                                                HdlOp: XOR
                                                    list: ops
                                                        HdlOp: XOR
                                                            list: ops
                                                                HdlOp: XOR
                                                                    list: ops
                                                                        HdlOp: XOR
                                                                            list: ops
                                                                                HdlOp: XOR
                                                                                    list: ops
                                                                                        HdlOp: XOR
                                                                                            list: ops
                                                                                                HdlOp: XOR
                                                                                                    list: ops
                                                                                                        HdlOp: XOR
                                                                                                            list: ops
                                                                                                                HdlOp: XOR
                                                                                                                    list: ops
                                                                                                                        HdlOp: XOR
                                                                                                                            list: ops
                                                                                                                                HdlOp: XOR
                                                                                                                                    list: ops
                                                                                                                                        HdlOp: XOR
                                                                                                                                            list: ops
                                                                                                                                                HdlOp: XOR
                                                                                                                                                    list: ops
                                                                                                                                                        HdlOp: XOR
                                                                                                                                                            list: ops
                                                                                                                                                                HdlOp: XOR
                                                                                                                                                                    list: ops
                                                                                                                                                                        HdlOp: XOR
                                                                                                                                                                            list: ops
                                                                                                                                                                                HdlOp: XOR
                                                                                                                                                                                    list: ops
                                                                                                                                                                                        HdlOp: XOR
                                                                                                                                                                                            list: ops
                                                                                                                                                                                                HdlOp: XOR
                                                                                                                                                                                                    list: ops
                                                                                                                                                                                                        HdlOp: XOR
                                                                                                                                                                                                            list: ops
                                                                                                                                                                                                                HdlOp: INDEX
                                                                                                                                                                                                                    list: ops
                                                                                                                                                                                                                        HdlValueId: in
                                                                                                                                                                                                                        HdlValueInt: 71
                                                                                                                                                                                                                HdlOp: INDEX
                                                                                                                                                                                                                    list: ops
                                                                                                                                                                                                                        HdlValueId: in
                                                                                                                                                                                                                        HdlValueInt: 5
                                                                                                                                                                                                        HdlOp: INDEX
                                                                                                                                                                                                            list: ops
                                                                                                                                                                                                                HdlValueId: in
                                                                                                                                                                                                                HdlValueInt: 10
                                                                                                                                                                                                HdlOp: INDEX
                                                                                                                                                                                                    list: ops
                                                                                                                                                                                                        HdlValueId: in
                                                                                                                                                                                                        HdlValueInt: 14
                                                                                                                                                                                        HdlOp: INDEX
                                                                                                                                                                                            list: ops
                                                                                                                                                                                                HdlValueId: in
                                                                                                                                                                                                HdlValueInt: 17
                                                                                                                                                                                HdlOp: INDEX
                                                                                                                                                                                    list: ops
                                                                                                                                                                                        HdlValueId: in
                                                                                                                                                                                        HdlValueInt: 19
                                                                                                                                                                        HdlOp: INDEX
                                                                                                                                                                            list: ops
                                                                                                                                                                                HdlValueId: in
                                                                                                                                                                                HdlValueInt: 20
                                                                                                                                                                HdlOp: INDEX
                                                                                                                                                                    list: ops
                                                                                                                                                                        HdlValueId: in
                                                                                                                                                                        HdlValueInt: 25
                                                                                                                                                        HdlOp: INDEX
                                                                                                                                                            list: ops
                                                                                                                                                                HdlValueId: in
                                                                                                                                                                HdlValueInt: 29
                                                                                                                                                HdlOp: INDEX
                                                                                                                                                    list: ops
                                                                                                                                                        HdlValueId: in
                                                                                                                                                        HdlValueInt: 32
                                                                                                                                        HdlOp: INDEX
                                                                                                                                            list: ops
                                                                                                                                                HdlValueId: in
                                                                                                                                                HdlValueInt: 34
                                                                                                                                HdlOp: INDEX
                                                                                                                                    list: ops
                                                                                                                                        HdlValueId: in
                                                                                                                                        HdlValueInt: 35
                                                                                                                        HdlOp: INDEX
                                                                                                                            list: ops
                                                                                                                                HdlValueId: in
                                                                                                                                HdlValueInt: 39
                                                                                                                HdlOp: INDEX
                                                                                                                    list: ops
                                                                                                                        HdlValueId: in
                                                                                                                        HdlValueInt: 42
                                                                                                        HdlOp: INDEX
                                                                                                            list: ops
                                                                                                                HdlValueId: in
                                                                                                                HdlValueInt: 44
                                                                                                HdlOp: INDEX
                                                                                                    list: ops
                                                                                                        HdlValueId: in
                                                                                                        HdlValueInt: 45
                                                                                        HdlOp: INDEX
                                                                                            list: ops
                                                                                                HdlValueId: in
                                                                                                HdlValueInt: 48
                                                                                HdlOp: INDEX
                                                                                    list: ops
                                                                                        HdlValueId: in
                                                                                        HdlValueInt: 50
                                                                        HdlOp: INDEX
                                                                            list: ops
                                                                                HdlValueId: in
                                                                                HdlValueInt: 51
                                                                HdlOp: INDEX
                                                                    list: ops
                                                                        HdlValueId: in
                                                                        HdlValueInt: 53
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlValueId: in
                                                                HdlValueInt: 54
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: in
                                                        HdlValueInt: 55
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: in
                                                HdlValueInt: 57
                                HdlOp: INDEX
                                    list: ops
                                        HdlValueId: in
                                        HdlValueInt: 58
                        HdlOp: INDEX
                            list: ops
                                HdlValueId: in
                                HdlValueInt: 60
                HdlOp: INDEX
                    list: ops
                        HdlValueId: in
                        HdlValueInt: 62
        MOV HdlOp@@INDEX to ops
        HdlOp: INDEX
            list: ops
                HdlValueId: in
                HdlValueInt: 63
        UPD HdlOp@@XOR to XOR
            MOV HdlOp@@XOR to ops
            HdlOp: XOR
                list: ops
                    HdlOp: XOR
                        list: ops
                            HdlOp: XOR
                                list: ops
                                    HdlOp: XOR
                                        list: ops
                                            HdlOp: XOR
                                                list: ops
                                                    HdlOp: XOR
                                                        list: ops
                                                            HdlOp: XOR
                                                                list: ops
                                                                    HdlOp: XOR
                                                                        list: ops
                                                                            HdlOp: XOR
                                                                                list: ops
                                                                                    HdlOp: XOR
                                                                                        list: ops
                                                                                            HdlOp: XOR
                                                                                                list: ops
                                                                                                    HdlOp: XOR
                                                                                                        list: ops
                                                                                                            HdlOp: XOR
                                                                                                                list: ops
                                                                                                                    HdlOp: XOR
                                                                                                                        list: ops
                                                                                                                            HdlOp: XOR
                                                                                                                                list: ops
                                                                                                                                    HdlOp: XOR
                                                                                                                                        list: ops
                                                                                                                                            HdlOp: XOR
                                                                                                                                                list: ops
                                                                                                                                                    HdlOp: XOR
                                                                                                                                                        list: ops
                                                                                                                                                            HdlOp: XOR
                                                                                                                                                                list: ops
                                                                                                                                                                    HdlOp: XOR
                                                                                                                                                                        list: ops
                                                                                                                                                                            HdlOp: XOR
                                                                                                                                                                                list: ops
                                                                                                                                                                                    HdlOp: XOR
                                                                                                                                                                                        list: ops
                                                                                                                                                                                            HdlOp: XOR
                                                                                                                                                                                                list: ops
                                                                                                                                                                                                    HdlOp: XOR
                                                                                                                                                                                                        list: ops
                                                                                                                                                                                                            HdlOp: INDEX
                                                                                                                                                                                                                list: ops
                                                                                                                                                                                                                    HdlValueId: in
                                                                                                                                                                                                                    HdlValueInt: 71
                                                                                                                                                                                                            HdlOp: INDEX
                                                                                                                                                                                                                list: ops
                                                                                                                                                                                                                    HdlValueId: in
                                                                                                                                                                                                                    HdlValueInt: 5
                                                                                                                                                                                                    HdlOp: INDEX
                                                                                                                                                                                                        list: ops
                                                                                                                                                                                                            HdlValueId: in
                                                                                                                                                                                                            HdlValueInt: 10
                                                                                                                                                                                            HdlOp: INDEX
                                                                                                                                                                                                list: ops
                                                                                                                                                                                                    HdlValueId: in
                                                                                                                                                                                                    HdlValueInt: 14
                                                                                                                                                                                    HdlOp: INDEX
                                                                                                                                                                                        list: ops
                                                                                                                                                                                            HdlValueId: in
                                                                                                                                                                                            HdlValueInt: 17
                                                                                                                                                                            HdlOp: INDEX
                                                                                                                                                                                list: ops
                                                                                                                                                                                    HdlValueId: in
                                                                                                                                                                                    HdlValueInt: 19
                                                                                                                                                                    HdlOp: INDEX
                                                                                                                                                                        list: ops
                                                                                                                                                                            HdlValueId: in
                                                                                                                                                                            HdlValueInt: 20
                                                                                                                                                            HdlOp: INDEX
                                                                                                                                                                list: ops
                                                                                                                                                                    HdlValueId: in
                                                                                                                                                                    HdlValueInt: 25
                                                                                                                                                    HdlOp: INDEX
                                                                                                                                                        list: ops
                                                                                                                                                            HdlValueId: in
                                                                                                                                                            HdlValueInt: 29
                                                                                                                                            HdlOp: INDEX
                                                                                                                                                list: ops
                                                                                                                                                    HdlValueId: in
                                                                                                                                                    HdlValueInt: 32
                                                                                                                                    HdlOp: INDEX
                                                                                                                                        list: ops
                                                                                                                                            HdlValueId: in
                                                                                                                                            HdlValueInt: 34
                                                                                                                            HdlOp: INDEX
                                                                                                                                list: ops
                                                                                                                                    HdlValueId: in
                                                                                                                                    HdlValueInt: 35
                                                                                                                    HdlOp: INDEX
                                                                                                                        list: ops
                                                                                                                            HdlValueId: in
                                                                                                                            HdlValueInt: 39
                                                                                                            HdlOp: INDEX
                                                                                                                list: ops
                                                                                                                    HdlValueId: in
                                                                                                                    HdlValueInt: 42
                                                                                                    HdlOp: INDEX
                                                                                                        list: ops
                                                                                                            HdlValueId: in
                                                                                                            HdlValueInt: 44
                                                                                            HdlOp: INDEX
                                                                                                list: ops
                                                                                                    HdlValueId: in
                                                                                                    HdlValueInt: 45
                                                                                    HdlOp: INDEX
                                                                                        list: ops
                                                                                            HdlValueId: in
                                                                                            HdlValueInt: 48
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlValueId: in
                                                                                    HdlValueInt: 50
                                                                    HdlOp: INDEX
                                                                        list: ops
                                                                            HdlValueId: in
                                                                            HdlValueInt: 51
                                                            HdlOp: INDEX
                                                                list: ops
                                                                    HdlValueId: in
                                                                    HdlValueInt: 53
                                                    HdlOp: INDEX
                                                        list: ops
                                                            HdlValueId: in
                                                            HdlValueInt: 54
                                            HdlOp: INDEX
                                                list: ops
                                                    HdlValueId: in
                                                    HdlValueInt: 55
                                    HdlOp: INDEX
                                        list: ops
                                            HdlValueId: in
                                            HdlValueInt: 57
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: in
                                    HdlValueInt: 58
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: in
                            HdlValueInt: 60
            UPD HdlOp@@XOR to XOR
                UPD HdlOp@@XOR to XOR
                    UPD HdlOp@@XOR to XOR
                        MOV HdlOp@@INDEX to ops
                        HdlOp: INDEX
                            list: ops
                                HdlValueId: in
                                HdlValueInt: 57
                    MOV HdlOp@@INDEX to ops
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: in
                            HdlValueInt: 58
    MOV HdlOp@@XOR to 
    HdlOp: XOR
        list: ops
            HdlOp: XOR
                list: ops
                    HdlOp: XOR
                        list: ops
                            HdlOp: XOR
                                list: ops
                                    HdlOp: XOR
                                        list: ops
                                            HdlOp: XOR
                                                list: ops
                                                    HdlOp: XOR
                                                        list: ops
                                                            HdlOp: XOR
                                                                list: ops
                                                                    HdlOp: XOR
                                                                        list: ops
                                                                            HdlOp: XOR
                                                                                list: ops
                                                                                    HdlOp: XOR
                                                                                        list: ops
                                                                                            HdlOp: XOR
                                                                                                list: ops
                                                                                                    HdlOp: XOR
                                                                                                        list: ops
                                                                                                            HdlOp: XOR
                                                                                                                list: ops
                                                                                                                    HdlOp: XOR
                                                                                                                        list: ops
                                                                                                                            HdlOp: XOR
                                                                                                                                list: ops
                                                                                                                                    HdlOp: XOR
                                                                                                                                        list: ops
                                                                                                                                            HdlOp: XOR
                                                                                                                                                list: ops
                                                                                                                                                    HdlOp: XOR
                                                                                                                                                        list: ops
                                                                                                                                                            HdlOp: XOR
                                                                                                                                                                list: ops
                                                                                                                                                                    HdlOp: XOR
                                                                                                                                                                        list: ops
                                                                                                                                                                            HdlOp: XOR
                                                                                                                                                                                list: ops
                                                                                                                                                                                    HdlOp: XOR
                                                                                                                                                                                        list: ops
                                                                                                                                                                                            HdlOp: XOR
                                                                                                                                                                                                list: ops
                                                                                                                                                                                                    HdlOp: XOR
                                                                                                                                                                                                        list: ops
                                                                                                                                                                                                            HdlOp: XOR
                                                                                                                                                                                                                list: ops
                                                                                                                                                                                                                    HdlOp: INDEX
                                                                                                                                                                                                                        list: ops
                                                                                                                                                                                                                            HdlValueId: in
                                                                                                                                                                                                                            HdlValueInt: 71
                                                                                                                                                                                                                    HdlOp: INDEX
                                                                                                                                                                                                                        list: ops
                                                                                                                                                                                                                            HdlValueId: in
                                                                                                                                                                                                                            HdlValueInt: 5
                                                                                                                                                                                                            HdlOp: INDEX
                                                                                                                                                                                                                list: ops
                                                                                                                                                                                                                    HdlValueId: in
                                                                                                                                                                                                                    HdlValueInt: 10
                                                                                                                                                                                                    HdlOp: INDEX
                                                                                                                                                                                                        list: ops
                                                                                                                                                                                                            HdlValueId: in
                                                                                                                                                                                                            HdlValueInt: 14
                                                                                                                                                                                            HdlOp: INDEX
                                                                                                                                                                                                list: ops
                                                                                                                                                                                                    HdlValueId: in
                                                                                                                                                                                                    HdlValueInt: 17
                                                                                                                                                                                    HdlOp: INDEX
                                                                                                                                                                                        list: ops
                                                                                                                                                                                            HdlValueId: in
                                                                                                                                                                                            HdlValueInt: 19
                                                                                                                                                                            HdlOp: INDEX
                                                                                                                                                                                list: ops
                                                                                                                                                                                    HdlValueId: in
                                                                                                                                                                                    HdlValueInt: 20
                                                                                                                                                                    HdlOp: INDEX
                                                                                                                                                                        list: ops
                                                                                                                                                                            HdlValueId: in
                                                                                                                                                                            HdlValueInt: 25
                                                                                                                                                            HdlOp: INDEX
                                                                                                                                                                list: ops
                                                                                                                                                                    HdlValueId: in
                                                                                                                                                                    HdlValueInt: 29
                                                                                                                                                    HdlOp: INDEX
                                                                                                                                                        list: ops
                                                                                                                                                            HdlValueId: in
                                                                                                                                                            HdlValueInt: 32
                                                                                                                                            HdlOp: INDEX
                                                                                                                                                list: ops
                                                                                                                                                    HdlValueId: in
                                                                                                                                                    HdlValueInt: 34
                                                                                                                                    HdlOp: INDEX
                                                                                                                                        list: ops
                                                                                                                                            HdlValueId: in
                                                                                                                                            HdlValueInt: 35
                                                                                                                            HdlOp: INDEX
                                                                                                                                list: ops
                                                                                                                                    HdlValueId: in
                                                                                                                                    HdlValueInt: 39
                                                                                                                    HdlOp: INDEX
                                                                                                                        list: ops
                                                                                                                            HdlValueId: in
                                                                                                                            HdlValueInt: 42
                                                                                                            HdlOp: INDEX
                                                                                                                list: ops
                                                                                                                    HdlValueId: in
                                                                                                                    HdlValueInt: 44
                                                                                                    HdlOp: INDEX
                                                                                                        list: ops
                                                                                                            HdlValueId: in
                                                                                                            HdlValueInt: 45
                                                                                            HdlOp: INDEX
                                                                                                list: ops
                                                                                                    HdlValueId: in
                                                                                                    HdlValueInt: 48
                                                                                    HdlOp: INDEX
                                                                                        list: ops
                                                                                            HdlValueId: in
                                                                                            HdlValueInt: 50
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlValueId: in
                                                                                    HdlValueInt: 51
                                                                    HdlOp: INDEX
                                                                        list: ops
                                                                            HdlValueId: in
                                                                            HdlValueInt: 53
                                                            HdlOp: INDEX
                                                                list: ops
                                                                    HdlValueId: in
                                                                    HdlValueInt: 54
                                                    HdlOp: INDEX
                                                        list: ops
                                                            HdlValueId: in
                                                            HdlValueInt: 55
                                            HdlOp: INDEX
                                                list: ops
                                                    HdlValueId: in
                                                    HdlValueInt: 57
                                    HdlOp: INDEX
                                        list: ops
                                            HdlValueId: in
                                            HdlValueInt: 58
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: in
                                    HdlValueInt: 60
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: in
                            HdlValueInt: 62
            HdlOp: INDEX
                list: ops
                    HdlValueId: in
                    HdlValueInt: 63

UPD HdlStmAssign@@ to 
    UPD HdlOp@@XOR to XOR
        MOV HdlOp@@INDEX to ops
        HdlOp: INDEX
            list: ops
                HdlValueId: in
                HdlValueInt: 62
        UPD HdlOp@@XOR to XOR
            UPD HdlOp@@XOR to XOR
                MOV HdlOp@@INDEX to ops
                HdlOp: INDEX
                    list: ops
                        HdlValueId: in
                        HdlValueInt: 59
                UPD HdlOp@@XOR to XOR
                    UPD HdlOp@@XOR to XOR
                        MOV HdlOp@@INDEX to ops
                        HdlOp: INDEX
                            list: ops
                                HdlValueId: in
                                HdlValueInt: 56
                    MOV HdlOp@@INDEX to ops
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: in
                            HdlValueInt: 58

UPD HdlStmAssign@@ to 
    UPD HdlOp@@XOR to XOR
        MOV HdlOp@@INDEX to ops
        HdlOp: INDEX
            list: ops
                HdlValueId: in
                HdlValueInt: 63
        UPD HdlOp@@XOR to XOR
            MOV HdlOp@@INDEX to ops
            HdlOp: INDEX
                list: ops
                    HdlValueId: in
                    HdlValueInt: 60
            UPD HdlOp@@XOR to XOR
                MOV HdlOp@@INDEX to ops
                HdlOp: INDEX
                    list: ops
                        HdlValueId: in
                        HdlValueInt: 59

UPD HdlStmAssign@@ to 
    UPD HdlOp@@XOR to XOR
        UPD HdlOp@@XOR to XOR
            MOV HdlOp@@INDEX to ops
            HdlOp: INDEX
                list: ops
                    HdlValueId: in
                    HdlValueInt: 61
            UPD HdlOp@@XOR to XOR
                UPD HdlOp@@XOR to XOR
                    MOV HdlOp@@INDEX to ops
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: in
                            HdlValueInt: 57
                MOV HdlOp@@INDEX to ops
                HdlOp: INDEX
                    list: ops
                        HdlValueId: in
                        HdlValueInt: 58

UPD HdlStmAssign@@ to 
    UPD HdlOp@@XOR to XOR
        MOV HdlOp@@INDEX to ops
        HdlOp: INDEX
            list: ops
                HdlValueId: in
                HdlValueInt: 61
        UPD HdlOp@@XOR to XOR
            UPD HdlOp@@XOR to XOR
                MOV HdlOp@@INDEX to ops
                HdlOp: INDEX
                    list: ops
                        HdlValueId: in
                        HdlValueInt: 59

UPD HdlStmAssign@@ to 
    UPD HdlOp@@XOR to XOR
        UPD HdlOp@@XOR to XOR
            UPD HdlOp@@XOR to XOR
                UPD HdlOp@@XOR to XOR
                    UPD HdlOp@@XOR to XOR
                        MOV HdlOp@@INDEX to ops
                        HdlOp: INDEX
                            list: ops
                                HdlValueId: in
                                HdlValueInt: 58
                    MOV HdlOp@@INDEX to ops
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: in
                            HdlValueInt: 59


CommitId: e96730f7612a3fb85637d8d91645355806752c8a
[flash_ctrl] Add ECC to program / erase datapaths
--- a/hw/ip/prim/rtl/prim_secded_72_64_dec.sv
+++ b/hw/ip/prim/rtl/prim_secded_72_64_dec.sv
@@ -104,14 +104,14 @@ module prim_secded_72_64_dec (
   assign d_o[53] = (syndrome_o == 8'hb0) ^ in[53];
   assign d_o[54] = (syndrome_o == 8'hd0) ^ in[54];
   assign d_o[55] = (syndrome_o == 8'he0) ^ in[55];
-  assign d_o[56] = (syndrome_o == 8'h7c) ^ in[56];
-  assign d_o[57] = (syndrome_o == 8'had) ^ in[57];
-  assign d_o[58] = (syndrome_o == 8'h9b) ^ in[58];
-  assign d_o[59] = (syndrome_o == 8'h76) ^ in[59];
-  assign d_o[60] = (syndrome_o == 8'he6) ^ in[60];
-  assign d_o[61] = (syndrome_o == 8'h79) ^ in[61];
-  assign d_o[62] = (syndrome_o == 8'hd3) ^ in[62];
-  assign d_o[63] = (syndrome_o == 8'h8f) ^ in[63];
+  assign d_o[56] = (syndrome_o == 8'h6e) ^ in[56];
+  assign d_o[57] = (syndrome_o == 8'h67) ^ in[57];
+  assign d_o[58] = (syndrome_o == 8'hbc) ^ in[58];
+  assign d_o[59] = (syndrome_o == 8'hd9) ^ in[59];
+  assign d_o[60] = (syndrome_o == 8'hb3) ^ in[60];
+  assign d_o[61] = (syndrome_o == 8'hd5) ^ in[61];
+  assign d_o[62] = (syndrome_o == 8'h8f) ^ in[62];
+  assign d_o[63] = (syndrome_o == 8'h7a) ^ in[63];
 
   // err_o calc. bit0: single error, bit1: double error
   assign single_error = ^syndrome_o;
ParseResult:
UPD HdlStmAssign@@ to 
    UPD HdlOp@@XOR to XOR
        MOV HdlOp@@EQ to ops
        HdlOp: EQ
            list: ops
                HdlValueId: syndrome_o
                HdlValueInt: 8f

UPD HdlStmAssign@@ to 
    UPD HdlOp@@XOR to XOR
        INS HdlOp@@EQ to ops
        HdlOp: EQ
            list: ops
                HdlValueId: syndrome_o
                HdlValueInt: 7a

UPD HdlStmAssign@@ to 
    UPD HdlOp@@XOR to XOR
        UPD HdlOp@@EQ to EQ
            UPD HdlValueInt@@7c to 6e

UPD HdlStmAssign@@ to 
    UPD HdlOp@@XOR to XOR
        UPD HdlOp@@EQ to EQ
            UPD HdlValueInt@@ad to 67

UPD HdlStmAssign@@ to 
    UPD HdlOp@@XOR to XOR
        UPD HdlOp@@EQ to EQ
            UPD HdlValueInt@@9b to bc

UPD HdlStmAssign@@ to 
    UPD HdlOp@@XOR to XOR
        UPD HdlOp@@EQ to EQ
            UPD HdlValueInt@@76 to d9

UPD HdlStmAssign@@ to 
    UPD HdlOp@@XOR to XOR
        UPD HdlOp@@EQ to EQ
            UPD HdlValueInt@@e6 to b3

UPD HdlStmAssign@@ to 
    UPD HdlOp@@XOR to XOR
        UPD HdlOp@@EQ to EQ
            UPD HdlValueInt@@79 to d5

UPD HdlStmAssign@@ to 
    UPD HdlOp@@XOR to XOR
        DEL HdlOp@@EQ from ops
        HdlOp: EQ
            list: ops
                HdlValueId: syndrome_o
                HdlValueInt: d3


CommitId: 4798f27d213d0a6101866f328387c02c890b1aa0
[flash] Improve flash ECC handling based on transasction attribute
--- a/hw/ip/flash_ctrl/rtl/flash_phy.sv
+++ b/hw/ip/flash_ctrl/rtl/flash_phy.sv
@@ -14,6 +14,7 @@ module flash_phy import flash_ctrl_pkg::*; (
   input clk_i,
   input rst_ni,
   input host_req_i,
+  input tlul_pkg::tl_type_e host_req_type_i,
   input [BusAddrW-1:0] host_addr_i,
   output logic host_req_rdy_o,
   output logic host_req_done_o,

ParseResult:
INS HdlIdDef@@host_req_type_i to ports
HdlIdDef: host_req_type_i
    HdlOp: DOUBLE_COLON
        list: ops
            HdlValueId: tlul_pkg
            HdlValueId: tl_type_e
    HdlDirection: IN


CommitId: cabf26f33f6964caba640d9638873d681ba4a6a5
[prim] Restore ability to select default implementation
--- a/hw/ip/padctrl/rtl/padring.sv
+++ b/hw/ip/padctrl/rtl/padring.sv
@@ -6,8 +6,13 @@
 // The module instantiates the technology dependent pads, and connects them
 // to the MIOs/DIOs and pad attributes coming from the padctrl block.
 //
+
+`ifndef PRIM_DEFAULT_IMPL
+  `define PRIM_DEFAULT_IMPL integer'(prim_pkg::ImplGeneric)
+`endif
+
 module padring #(
-  parameter Impl = "generic" // this determines the pad implementation
+  parameter integer Impl = `PRIM_DEFAULT_IMPL // this determines the pad implementation
 ) (
   // pad input
   input wire                                   clk_pad_i,
ParseResult:
UPD HdlIdDef@@Impl to Impl
    INS HdlValueId@@integer to Impl
    INS HdlExprNotImplemented@@value to Impl


CommitId: 7838ef2d33447b10d743084c852a189ae3906574
[lc_ctrl] Address minor issues found in security review
--- a/hw/ip/lc_ctrl/rtl/lc_ctrl_state_decode.sv
+++ b/hw/ip/lc_ctrl/rtl/lc_ctrl_state_decode.sv
@@ -19,7 +19,7 @@ module lc_ctrl_state_decode
   output dec_lc_state_e     dec_lc_state_o,
   output dec_lc_id_state_e  dec_lc_id_state_o,
   output dec_lc_cnt_t       dec_lc_cnt_o,
-  output logic              state_invalid_error_o
+  output logic [5:0]        state_invalid_error_o
 );
 
   //////////////////////////

ParseResult:
UPD HdlIdDef@@state_invalid_error_o to state_invalid_error_o
    UPD HdlOp@@PARAMETRIZATION to PARAMETRIZATION
        INS HdlOp@@DOWNTO to ops
        HdlOp: DOWNTO
            list: ops
                HdlValueInt: 5
                HdlValueInt: 0


CommitId: 7838ef2d33447b10d743084c852a189ae3906574
[lc_ctrl] Address minor issues found in security review
--- a/hw/ip/lc_ctrl/rtl/lc_ctrl_state_decode.sv
+++ b/hw/ip/lc_ctrl/rtl/lc_ctrl_state_decode.sv
@@ -35,7 +35,7 @@ module lc_ctrl_state_decode
     dec_lc_state_o        = DecLcStInvalid;
     dec_lc_cnt_o          = {DecLcCountWidth{1'b1}};
     dec_lc_id_state_o     = DecLcIdInvalid;
-    state_invalid_error_o = 1'b0;
+    state_invalid_error_o = '0;
 
     unique case (fsm_state_i)
       // Don't decode anything in ResetSt

ParseResult:
UPD HdlStmCase@@fsm_state_i to fsm_state_i
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlOp@@INDEX to ops
            UPD HdlOp@@INDEX to INDEX
                INS list@@ops to INDEX
                INS HdlValueInt@@0 to ops

UPD HdlStmCase@@fsm_state_i to fsm_state_i
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            MOV HdlValueId@@state_invalid_error_o to ops
            HdlValueId: state_invalid_error_o


CommitId: 7838ef2d33447b10d743084c852a189ae3906574
[lc_ctrl] Address minor issues found in security review
--- a/hw/ip/lc_ctrl/rtl/lc_ctrl_state_decode.sv
+++ b/hw/ip/lc_ctrl/rtl/lc_ctrl_state_decode.sv
@@ -52,7 +52,7 @@ module lc_ctrl_state_decode
         // This will trigger an invalid_state_error when the OTP partition
         // is corrupt and moved into an error state, where the valid bit is
         // deasserted.
-        state_invalid_error_o = ~lc_state_valid_i;
+        state_invalid_error_o[0] = ~lc_state_valid_i;
 
         unique case (lc_state_i)
           LcStRaw:           dec_lc_state_o = DecLcStRaw;

ParseResult:
UPD HdlStmCase@@lc_state_i to lc_state_i
    INS HdlOp@@ASSIGN to lc_state_i
    UPD HdlOp@@ASSIGN to ASSIGN
        INS list@@ops to ASSIGN
        INS HdlValueInt@@1 to ops

UPD HdlStmCase@@fsm_state_i to fsm_state_i
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlOp@@INDEX to ops
            UPD HdlOp@@INDEX to INDEX
                INS list@@ops to INDEX
                INS HdlValueInt@@0 to ops

UPD HdlStmCase@@lc_state_i to lc_state_i
    UPD HdlOp@@ASSIGN to INDEX
    MOV HdlOp@@ASSIGN to lc_state_i
    HdlOp: ASSIGN
        list: ops
            HdlValueId: state_invalid_error_o
            HdlValueInt: 1

UPD HdlStmCase@@fsm_state_i to fsm_state_i
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            MOV HdlValueId@@state_invalid_error_o to ops
            HdlValueId: state_invalid_error_o


CommitId: 7838ef2d33447b10d743084c852a189ae3906574
[lc_ctrl] Address minor issues found in security review
--- a/hw/ip/lc_ctrl/rtl/lc_ctrl_state_decode.sv
+++ b/hw/ip/lc_ctrl/rtl/lc_ctrl_state_decode.sv
@@ -76,7 +76,7 @@ module lc_ctrl_state_decode
           LcStProdEnd:       dec_lc_state_o = DecLcStProdEnd;
           LcStRma:           dec_lc_state_o = DecLcStRma;
           LcStScrap:         dec_lc_state_o = DecLcStScrap;
-          default:           state_invalid_error_o = 1'b1;
+          default:           state_invalid_error_o[1] = 1'b1;
         endcase // lc_state_i
 
         unique case (lc_cnt_i)

ParseResult:
UPD HdlStmCase@@lc_state_i to lc_state_i
    INS HdlOp@@ASSIGN to lc_state_i
    UPD HdlOp@@ASSIGN to ASSIGN
        INS list@@ops to ASSIGN
        INS HdlValueInt@@1 to ops

UPD HdlStmCase@@fsm_state_i to fsm_state_i
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlOp@@INDEX to ops
            UPD HdlOp@@INDEX to INDEX
                INS list@@ops to INDEX
                INS HdlValueInt@@0 to ops

UPD HdlStmCase@@lc_state_i to lc_state_i
    UPD HdlOp@@ASSIGN to INDEX
    MOV HdlOp@@ASSIGN to lc_state_i
    HdlOp: ASSIGN
        list: ops
            HdlValueId: state_invalid_error_o
            HdlValueInt: 1

UPD HdlStmCase@@lc_cnt_i to lc_cnt_i
    UPD HdlOp@@ASSIGN to ASSIGN
        INS HdlOp@@INDEX to ops
        UPD HdlOp@@INDEX to INDEX
            INS list@@ops to INDEX
            INS HdlValueInt@@2 to ops

UPD HdlStmCase@@fsm_state_i to fsm_state_i
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            MOV HdlValueId@@state_invalid_error_o to ops
            HdlValueId: state_invalid_error_o

UPD HdlStmCase@@lc_cnt_i to lc_cnt_i
    UPD HdlOp@@ASSIGN to ASSIGN
        MOV HdlValueId@@state_invalid_error_o to ops
        HdlValueId: state_invalid_error_o


CommitId: 7838ef2d33447b10d743084c852a189ae3906574
[lc_ctrl] Address minor issues found in security review
--- a/hw/ip/lc_ctrl/rtl/lc_ctrl_state_decode.sv
+++ b/hw/ip/lc_ctrl/rtl/lc_ctrl_state_decode.sv
@@ -105,7 +105,7 @@ module lc_ctrl_state_decode
           LcCnt22:  dec_lc_cnt_o = 5'd22;
           LcCnt23:  dec_lc_cnt_o = 5'd23;
           LcCnt24:  dec_lc_cnt_o = 5'd24;
-          default:  state_invalid_error_o = 1'b1;
+          default:  state_invalid_error_o[2] = 1'b1;
         endcase // lc_cnt_i
 
         unique case (secrets_valid_i)

ParseResult:
UPD HdlStmCase@@fsm_state_i to fsm_state_i
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlOp@@INDEX to ops
            UPD HdlOp@@INDEX to INDEX
                INS list@@ops to INDEX
                INS HdlValueInt@@0 to ops

UPD HdlStmCase@@lc_cnt_i to lc_cnt_i
    UPD HdlOp@@ASSIGN to ASSIGN
        INS HdlOp@@INDEX to ops
        UPD HdlOp@@INDEX to INDEX
            INS list@@ops to INDEX
            INS HdlValueInt@@2 to ops

UPD HdlStmCase@@secrets_valid_i to secrets_valid_i
    UPD HdlOp@@ASSIGN to ASSIGN
        INS HdlOp@@INDEX to ops
        UPD HdlOp@@INDEX to INDEX
            INS list@@ops to INDEX
            INS HdlValueInt@@3 to ops

UPD HdlStmCase@@fsm_state_i to fsm_state_i
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            MOV HdlValueId@@state_invalid_error_o to ops
            HdlValueId: state_invalid_error_o

UPD HdlStmCase@@lc_cnt_i to lc_cnt_i
    UPD HdlOp@@ASSIGN to ASSIGN
        MOV HdlValueId@@state_invalid_error_o to ops
        HdlValueId: state_invalid_error_o

UPD HdlStmCase@@secrets_valid_i to secrets_valid_i
    UPD HdlOp@@ASSIGN to ASSIGN
        MOV HdlValueId@@state_invalid_error_o to ops
        HdlValueId: state_invalid_error_o


CommitId: 7838ef2d33447b10d743084c852a189ae3906574
[lc_ctrl] Address minor issues found in security review
--- a/hw/ip/lc_ctrl/rtl/lc_ctrl_state_decode.sv
+++ b/hw/ip/lc_ctrl/rtl/lc_ctrl_state_decode.sv
@@ -113,13 +113,13 @@ module lc_ctrl_state_decode
           Off:  dec_lc_id_state_o = DecLcIdBlank;
           // If the secrets have been provisioned, the ID state is "personalized".
           On:   dec_lc_id_state_o = DecLcIdPersonalized;
-          default: state_invalid_error_o = 1'b1;
+          default: state_invalid_error_o[3] = 1'b1;
         endcase // secrets_valid_i
 
         // Require that any non-raw state has a valid, nonzero
         // transition count.
         if (lc_state_i != LcStRaw && lc_cnt_i == LcCnt0) begin
-          state_invalid_error_o = 1'b1;
+          state_invalid_error_o[4] = 1'b1;
         end
 
         // We can't have a personalized device that is

ParseResult:
UPD HdlStmCase@@fsm_state_i to fsm_state_i
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlOp@@INDEX to ops
            UPD HdlOp@@INDEX to INDEX
                INS list@@ops to INDEX
                INS HdlValueInt@@0 to ops

UPD HdlStmCase@@secrets_valid_i to secrets_valid_i
    UPD HdlOp@@ASSIGN to ASSIGN
        INS HdlOp@@INDEX to ops
        UPD HdlOp@@INDEX to INDEX
            INS list@@ops to INDEX
            INS HdlValueInt@@3 to ops

UPD HdlStmCase@@fsm_state_i to fsm_state_i
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            MOV HdlValueId@@state_invalid_error_o to ops
            HdlValueId: state_invalid_error_o

UPD HdlStmCase@@secrets_valid_i to secrets_valid_i
    UPD HdlOp@@ASSIGN to ASSIGN
        MOV HdlValueId@@state_invalid_error_o to ops
        HdlValueId: state_invalid_error_o

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlOp@@INDEX to ops
            UPD HdlOp@@INDEX to INDEX
                INS list@@ops to INDEX
                INS HdlValueInt@@4 to ops

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            MOV HdlValueId@@state_invalid_error_o to ops
            HdlValueId: state_invalid_error_o


CommitId: 7838ef2d33447b10d743084c852a189ae3906574
[lc_ctrl] Address minor issues found in security review
--- a/hw/ip/lc_ctrl/rtl/lc_ctrl_state_decode.sv
+++ b/hw/ip/lc_ctrl/rtl/lc_ctrl_state_decode.sv
@@ -130,7 +130,7 @@ module lc_ctrl_state_decode
                                  LcStProdEnd,
                                  LcStRma,
                                  LcStScrap})) begin
-          state_invalid_error_o = 1'b1;
+          state_invalid_error_o[5] = 1'b1;
         end
       end
     endcase // lc_id_state_i
ParseResult:
UPD HdlStmCase@@fsm_state_i to fsm_state_i
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlOp@@INDEX to ops
            UPD HdlOp@@INDEX to INDEX
                INS list@@ops to INDEX
                INS HdlValueInt@@0 to ops

UPD HdlStmCase@@fsm_state_i to fsm_state_i
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            MOV HdlValueId@@state_invalid_error_o to ops
            HdlValueId: state_invalid_error_o

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlOp@@INDEX to ops
            UPD HdlOp@@INDEX to INDEX
                INS list@@ops to INDEX
                INS HdlValueInt@@5 to ops

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            MOV HdlValueId@@state_invalid_error_o to ops
            HdlValueId: state_invalid_error_o


CommitId: fa976d438a9445b5389b8cbb70b972c9c365b883
Update pulp_riscv_dbg to pulp-platform/riscv-dbg@6bef5d8
--- a/hw/vendor/pulp_riscv_dbg/src/dmi_jtag_tap.sv
+++ b/hw/vendor/pulp_riscv_dbg/src/dmi_jtag_tap.sv
@@ -183,7 +183,7 @@ module dmi_jtag_tap #(
     dtmcs_select_o = 1'b0;
     idcode_select  = 1'b0;
     bypass_select  = 1'b0;
-    case (jtag_ir_q)
+    unique case (jtag_ir_q)
       BYPASS0:   bypass_select  = 1'b1;
       IDCODE:    idcode_select  = 1'b1;
       DTMCSR:    dtmcs_select_o = 1'b1;

ParseResult:
UPD HdlStmCase@@jtag_ir_q to jtag_ir_q
    INS HdlStmCaseUniqConstrain@@UNIQUE to jtag_ir_q


CommitId: fa976d438a9445b5389b8cbb70b972c9c365b883
Update pulp_riscv_dbg to pulp-platform/riscv-dbg@6bef5d8
--- a/hw/vendor/pulp_riscv_dbg/src/dmi_jtag_tap.sv
+++ b/hw/vendor/pulp_riscv_dbg/src/dmi_jtag_tap.sv
@@ -204,7 +204,7 @@ module dmi_jtag_tap #(
       tdo_mux = jtag_ir_shift_q[0];
     // here we are shifting the DR register
     end else begin
-      case (jtag_ir_q)    // synthesis parallel_case
+      unique case (jtag_ir_q)
         IDCODE:         tdo_mux = idcode_q[0];     // Reading ID code
         DTMCSR:         tdo_mux = dtmcs_q.version[0];
         DMIACCESS:      tdo_mux = dmi_tdo_i;       // Read from DMI TDO

ParseResult:
UPD HdlStmCase@@jtag_ir_q to jtag_ir_q
    INS HdlStmCaseUniqConstrain@@UNIQUE to jtag_ir_q


CommitId: fa976d438a9445b5389b8cbb70b972c9c365b883
Update pulp_riscv_dbg to pulp-platform/riscv-dbg@6bef5d8
--- a/hw/vendor/pulp_riscv_dbg/src/dmi_jtag_tap.sv
+++ b/hw/vendor/pulp_riscv_dbg/src/dmi_jtag_tap.sv
@@ -253,9 +253,7 @@ module dmi_jtag_tap #(
     // pause_ir           = 1'b0; unused
     update_ir          = 1'b0;
 
-    // note that tap_state_d does not have a default assignment since the
-    // case statement is full
-    case (tap_state_q)
+    unique case (tap_state_q)
       TestLogicReset: begin
         tap_state_d = (tms_i) ? TestLogicReset : RunTestIdle;
         test_logic_reset_o = 1'b1;

ParseResult:
UPD HdlStmCase@@tap_state_q to tap_state_q
    INS HdlStmCaseUniqConstrain@@UNIQUE to tap_state_q


CommitId: fa976d438a9445b5389b8cbb70b972c9c365b883
Update pulp_riscv_dbg to pulp-platform/riscv-dbg@6bef5d8
--- a/hw/vendor/pulp_riscv_dbg/src/dmi_jtag_tap.sv
+++ b/hw/vendor/pulp_riscv_dbg/src/dmi_jtag_tap.sv
@@ -326,7 +324,7 @@ module dmi_jtag_tap #(
         update_ir = 1'b1;
         tap_state_d = (tms_i) ? SelectDrScan : RunTestIdle;
       end
-      default: ; // can't actually happen
+      default: ; // can't actually happen since case is full
     endcase
   end
 
ParseResult:
UPD HdlStmCase@@tap_state_q to tap_state_q
    INS HdlStmCaseUniqConstrain@@UNIQUE to tap_state_q


CommitId: 53ef2ec43c1c1eb00b771e17fc157f5bb1103ed5
Update lowrisc_ibex to lowRISC/ibex@d14312c
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_fetch_fifo.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_fetch_fifo.sv
@@ -30,6 +20,7 @@ module ibex_fetch_fifo (
     // input port
     input  logic [31:0] in_addr_i,
     input  logic [31:0] in_rdata_i,
+    input  logic        in_err_i,
     input  logic        in_valid_i,
     output logic        in_ready_o,
 

ParseResult:
INS HdlIdDef@@in_err_i to ports
HdlIdDef: in_err_i
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: IN


CommitId: 53ef2ec43c1c1eb00b771e17fc157f5bb1103ed5
Update lowrisc_ibex to lowRISC/ibex@d14312c
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_fetch_fifo.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_fetch_fifo.sv
@@ -39,6 +30,7 @@ module ibex_fetch_fifo (
     input  logic        out_ready_i,
     output logic [31:0] out_rdata_o,
     output logic [31:0] out_addr_o,
+    output logic        out_err_o,
 
     output logic        out_valid_stored_o // same as out_valid_o, except that if something is
                                            // incoming now it is not included. This signal is

ParseResult:
INS HdlIdDef@@out_err_o to ports
HdlIdDef: out_err_o
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: OUT


CommitId: 53ef2ec43c1c1eb00b771e17fc157f5bb1103ed5
Update lowrisc_ibex to lowRISC/ibex@d14312c
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_fetch_fifo.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_fetch_fifo.sv
@@ -50,10 +42,12 @@ module ibex_fetch_fifo (
   // index 0 is used for output
   logic [DEPTH-1:0] [31:0]  addr_n,    addr_int,    addr_q;
   logic [DEPTH-1:0] [31:0]  rdata_n,   rdata_int,   rdata_q;
+  logic [DEPTH-1:0]         err_n,     err_int,     err_q;
   logic [DEPTH-1:0]         valid_n,   valid_int,   valid_q;
 
   logic             [31:2]  addr_next;
   logic             [31:0]  rdata, rdata_unaligned;
+  logic                     err,   err_unaligned;
   logic                     valid, valid_unaligned;
 
   logic                     aligned_is_compressed, unaligned_is_compressed;

ParseResult:
INS HdlIdDef@@err_n to objs
HdlIdDef: err_n
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlOp: SUB
                        list: ops
                            HdlValueId: DEPTH
                            HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: INTERNAL

INS HdlIdDef@@err_int to objs
HdlIdDef: err_int
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlOp: SUB
                        list: ops
                            HdlValueId: DEPTH
                            HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: INTERNAL

INS HdlIdDef@@err_q to objs
HdlIdDef: err_q
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlOp: SUB
                        list: ops
                            HdlValueId: DEPTH
                            HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: INTERNAL

INS HdlIdDef@@err to objs
HdlIdDef: err
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

INS HdlIdDef@@err_unaligned to objs
HdlIdDef: err_unaligned
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL


CommitId: 53ef2ec43c1c1eb00b771e17fc157f5bb1103ed5
Update lowrisc_ibex to lowRISC/ibex@d14312c
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_fetch_fifo.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_fetch_fifo.sv
@@ -65,12 +59,22 @@ module ibex_fetch_fifo (
 
 
   assign rdata = valid_q[0] ? rdata_q[0] : in_rdata_i;
+  assign err   = valid_q[0] ? err_q[0]   : in_err_i;
   assign valid = valid_q[0] | in_valid_i;
 
   assign rdata_unaligned = valid_q[1] ? {rdata_q[1][15:0], rdata[31:16]} :
                                         {in_rdata_i[15:0], rdata[31:16]};
-  // it is implied that rdata_valid_q[0] is set
-  assign valid_unaligned = valid_q[1] | (valid_q[0] & in_valid_i);
+  // If entry[1] is valid, an error can come from entry[0] or entry[1], unless the
+  // instruction in entry[0] is compressed (entry[1] is a new instruction)
+  // If entry[1] is not valid, and entry[0] is, an error can come from entry[0] or the incoming
+  // data, unless the instruction in entry[0] is compressed
+  // If entry[0] is not valid, the error must come from the incoming data
+  assign err_unaligned   = valid_q[1] ? ((err_q[1] & ~unaligned_is_compressed) | err_q[0]) :
+                                        ((valid_q[0] & err_q[0]) |
+                                         (in_err_i & (~valid_q[0] | ~unaligned_is_compressed)));
+  // An uncompressed unaligned instruction is only valid if both parts are available
+  assign valid_unaligned = valid_q[1] ? 1'b1 :
+                                        (valid_q[0] & in_valid_i);
 
   assign unaligned_is_compressed    = rdata[17:16] != 2'b11;
   assign aligned_is_compressed      = rdata[ 1: 0] != 2'b11;

ParseResult:
INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: TERNARY
        list: ops
            HdlOp: INDEX
                list: ops
                    HdlValueId: valid_q
                    HdlValueInt: 0
            HdlOp: INDEX
                list: ops
                    HdlValueId: err_q
                    HdlValueInt: 0
            HdlValueId: in_err_i
    HdlValueId: err

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: TERNARY
        list: ops
            HdlOp: INDEX
                list: ops
                    HdlValueId: valid_q
                    HdlValueInt: 1
            HdlOp: OR
                list: ops
                    HdlOp: AND
                        list: ops
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: err_q
                                    HdlValueInt: 1
                            HdlOp: NEG
                                list: ops
                                    HdlValueId: unaligned_is_compressed
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: err_q
                            HdlValueInt: 0
            HdlOp: OR
                list: ops
                    HdlOp: AND
                        list: ops
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: valid_q
                                    HdlValueInt: 0
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: err_q
                                    HdlValueInt: 0
                    HdlOp: AND
                        list: ops
                            HdlValueId: in_err_i
                            HdlOp: OR
                                list: ops
                                    HdlOp: NEG
                                        list: ops
                                            HdlOp: INDEX
                                                list: ops
                                                    HdlValueId: valid_q
                                                    HdlValueInt: 0
                                    HdlOp: NEG
                                        list: ops
                                            HdlValueId: unaligned_is_compressed
    HdlValueId: err_unaligned

UPD HdlStmAssign@@ to 
    UPD HdlOp@@OR to TERNARY


CommitId: 53ef2ec43c1c1eb00b771e17fc157f5bb1103ed5
Update lowrisc_ibex to lowRISC/ibex@d14312c
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_fetch_fifo.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_fetch_fifo.sv
@@ -96,6 +101,7 @@ module ibex_fetch_fifo (
     end else begin
       // aligned case
       out_rdata_o = rdata;
+      out_err_o   = err;
       out_valid_o = valid;
     end
   end

ParseResult:
UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: out_err_o
                HdlValueId: err_unaligned
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: out_err_o
                HdlValueId: err


CommitId: 53ef2ec43c1c1eb00b771e17fc157f5bb1103ed5
Update lowrisc_ibex to lowRISC/ibex@d14312c
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_fetch_fifo.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_fetch_fifo.sv
@@ -134,12 +140,14 @@ module ibex_fetch_fifo (
   always_comb begin
     addr_int    = addr_q;
     rdata_int   = rdata_q;
+    err_int     = err_q;
     valid_int   = valid_q;
     if (in_valid_i) begin
       for (int j = 0; j < DEPTH; j++) begin
         if (!valid_q[j]) begin
           addr_int[j]  = in_addr_i;
           rdata_int[j] = in_rdata_i;
+          err_int[j]   = in_err_i;
           valid_int[j] = 1'b1;
           break;
         end

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: err_int
                HdlValueId: err_q


CommitId: 53ef2ec43c1c1eb00b771e17fc157f5bb1103ed5
Update lowrisc_ibex to lowRISC/ibex@d14312c
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_fetch_fifo.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_fetch_fifo.sv
@@ -153,6 +161,7 @@ module ibex_fetch_fifo (
   always_comb begin
     addr_n     = addr_int;
     rdata_n    = rdata_int;
+    err_n      = err_int;
     valid_n    = valid_int;
 
     if (out_ready_i && out_valid_o) begin

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: err_int
                HdlValueId: err_q

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlOp: INDEX
                    list: ops
                        HdlValueId: err_int
                        HdlValueId: j
                HdlValueId: in_err_i


CommitId: 53ef2ec43c1c1eb00b771e17fc157f5bb1103ed5
Update lowrisc_ibex to lowRISC/ibex@d14312c
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_fetch_fifo.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_fetch_fifo.sv
@@ -165,6 +174,7 @@ module ibex_fetch_fifo (
         end
 
         rdata_n  = {32'b0, rdata_int[DEPTH-1:1]};
+        err_n    = {1'b0,  err_int[DEPTH-1:1]};
         valid_n  = {1'b0,  valid_int[DEPTH-1:1]};
       end else if (aligned_is_compressed) begin
         // just increase address, do not move to next entry in FIFO

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: err_n
                HdlValueId: err_int

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: err_n
                HdlOp: CONCAT
                    list: ops
                        HdlValueInt: 0
                        HdlOp: INDEX
                            list: ops
                                HdlValueId: err_int
                                HdlOp: DOWNTO
                                    list: ops
                                        HdlOp: SUB
                                            list: ops
                                                HdlValueId: DEPTH
                                                HdlValueInt: 1
                                        HdlValueInt: 1
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: err_n
                HdlOp: CONCAT
                    list: ops
                        HdlValueInt: 0
                        HdlOp: INDEX
                            list: ops
                                HdlValueId: err_int
                                HdlOp: DOWNTO
                                    list: ops
                                        HdlOp: SUB
                                            list: ops
                                                HdlValueId: DEPTH
                                                HdlValueInt: 1
                                        HdlValueInt: 1


CommitId: 53ef2ec43c1c1eb00b771e17fc157f5bb1103ed5
Update lowrisc_ibex to lowRISC/ibex@d14312c
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_fetch_fifo.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_fetch_fifo.sv
@@ -173,6 +183,7 @@ module ibex_fetch_fifo (
         // move to next entry in FIFO
         addr_n[0] = {addr_next[31:2], 2'b00};
         rdata_n   = {32'b0, rdata_int[DEPTH-1:1]};
+        err_n     = {1'b0,  err_int[DEPTH-1:1]};
         valid_n   = {1'b0,  valid_int[DEPTH-1:1]};
       end
     end

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: err_n
                HdlValueId: err_int

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: err_n
                HdlOp: CONCAT
                    list: ops
                        HdlValueInt: 0
                        HdlOp: INDEX
                            list: ops
                                HdlValueId: err_int
                                HdlOp: DOWNTO
                                    list: ops
                                        HdlOp: SUB
                                            list: ops
                                                HdlValueId: DEPTH
                                                HdlValueInt: 1
                                        HdlValueInt: 1
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: err_n
                HdlOp: CONCAT
                    list: ops
                        HdlValueInt: 0
                        HdlOp: INDEX
                            list: ops
                                HdlValueId: err_int
                                HdlOp: DOWNTO
                                    list: ops
                                        HdlOp: SUB
                                            list: ops
                                                HdlValueId: DEPTH
                                                HdlValueInt: 1
                                        HdlValueInt: 1


CommitId: 53ef2ec43c1c1eb00b771e17fc157f5bb1103ed5
Update lowrisc_ibex to lowRISC/ibex@d14312c
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_fetch_fifo.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_fetch_fifo.sv
@@ -186,6 +197,7 @@ module ibex_fetch_fifo (
     if (!rst_ni) begin
       addr_q    <= '{default: '0};
       rdata_q   <= '{default: '0};
+      err_q     <= '0;
       valid_q   <= '0;
     end else begin
       // on a clear signal from outside we invalidate the content of the FIFO

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: err_n
                HdlValueId: err_int

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: err_q

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: err_n
                HdlOp: CONCAT
                    list: ops
                        HdlValueInt: 0
                        HdlOp: INDEX
                            list: ops
                                HdlValueId: err_int
                                HdlOp: DOWNTO
                                    list: ops
                                        HdlOp: SUB
                                            list: ops
                                                HdlValueId: DEPTH
                                                HdlValueInt: 1
                                        HdlValueInt: 1
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: err_n
                HdlOp: CONCAT
                    list: ops
                        HdlValueInt: 0
                        HdlOp: INDEX
                            list: ops
                                HdlValueId: err_int
                                HdlOp: DOWNTO
                                    list: ops
                                        HdlOp: SUB
                                            list: ops
                                                HdlValueId: DEPTH
                                                HdlValueInt: 1
                                        HdlValueInt: 1


CommitId: 53ef2ec43c1c1eb00b771e17fc157f5bb1103ed5
Update lowrisc_ibex to lowRISC/ibex@d14312c
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_fetch_fifo.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_fetch_fifo.sv
@@ -195,6 +207,7 @@ module ibex_fetch_fifo (
       end else begin
         addr_q    <= addr_n;
         rdata_q   <= rdata_n;
+        err_q     <= err_n;
         valid_q   <= valid_n;
       end
     end
ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: err_n
                HdlValueId: err_int

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: err_n
                HdlOp: CONCAT
                    list: ops
                        HdlValueInt: 0
                        HdlOp: INDEX
                            list: ops
                                HdlValueId: err_int
                                HdlOp: DOWNTO
                                    list: ops
                                        HdlOp: SUB
                                            list: ops
                                                HdlValueId: DEPTH
                                                HdlValueInt: 1
                                        HdlValueInt: 1
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: err_n
                HdlOp: CONCAT
                    list: ops
                        HdlValueInt: 0
                        HdlOp: INDEX
                            list: ops
                                HdlValueId: err_int
                                HdlOp: DOWNTO
                                    list: ops
                                        HdlOp: SUB
                                            list: ops
                                                HdlValueId: DEPTH
                                                HdlValueInt: 1
                                        HdlValueInt: 1

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueId: err_n
    HdlValueId: err_q


CommitId: e9fd2bfcd09ba6aff9e5dca868407751a4cd23a5
[aes] Use sparse encodings for additional control signals
--- a/hw/ip/aes/rtl/aes_sub_bytes.sv
+++ b/hw/ip/aes/rtl/aes_sub_bytes.sv
@@ -32,19 +61,25 @@ module aes_sub_bytes import aes_pkg::*;
       aes_sbox #(
         .SBoxImpl ( SBoxImpl )
       ) u_aes_sbox_ij (
-        .clk_i     ( clk_i         ),
-        .rst_ni    ( rst_ni        ),
-        .en_i      ( en_i          ),
-        .out_req_o ( out_req[i][j] ),
-        .out_ack_i ( out_ack_i     ),
-        .op_i      ( op_i          ),
-        .data_i    ( data_i[i][j]  ),
-        .mask_i    ( mask_i[i][j]  ),
-        .prd_i     ( prd_i [i][j]  ),
-        .data_o    ( data_o[i][j]  ),
-        .mask_o    ( mask_o[i][j]  )
+        .clk_i     ( clk_i                ),
+        .rst_ni    ( rst_ni               ),
+        .en_i      ( en == SP2V_HIGH      ),
+        .out_req_o ( out_req[i][j]        ),
+        .out_ack_i ( out_ack == SP2V_HIGH ),
+        .op_i      ( op_i                 ),
+        .data_i    ( data_i[i][j]         ),
+        .mask_i    ( mask_i[i][j]         ),
+        .prd_i     ( prd_i [i][j]         ),
+        .data_o    ( data_o[i][j]         ),
+        .mask_o    ( mask_o[i][j]         )
       );
     end
   end
 
+  // Collect REQ signals.
+  assign out_req_o = &out_req ? SP2V_HIGH : SP2V_LOW;
+
+  // Collect encoding errors.
+  assign err_o = en_err | out_ack_err;
+
 endmodule
ParseResult:
INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: OR
        list: ops
            HdlValueId: en_err
            HdlValueId: out_ack_err
    HdlValueId: err_o


CommitId: c71e1689d71ba3b822fd143dde6841ad489850e2
[spi_host] Minor lint fixes
--- a/hw/ip/spi_host/rtl/spi_host_command_cdc.sv
+++ b/hw/ip/spi_host/rtl/spi_host_command_cdc.sv
@@ -5,10 +5,7 @@
 // CDC module for SPI_HOST commands
 //
 
-module spi_host_command_cdc #(
-  parameter  int unsigned NumCS = 1,
-  localparam int CSW            = prim_util_pkg::vbits(NumCS)
-) (
+module spi_host_command_cdc (
   input                              clk_i,
   input                              rst_ni,
 
ParseResult:
DEL HdlIdDef@@NumCS from params
HdlIdDef: NumCS
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: int
            HdlOp: MAP_ASSOCIATION
                list: ops
                    HdlValueId: signed
    HdlValueInt: 1
    HdlDirection: INTERNAL

DEL HdlIdDef@@CSW from params
HdlIdDef: CSW
    HdlValueId: int
    HdlOp: CALL
        list: ops
            HdlOp: DOUBLE_COLON
                list: ops
                    HdlValueId: prim_util_pkg
                    HdlValueId: vbits
            HdlValueId: NumCS
    HdlDirection: INTERNAL


CommitId: e38146466c337a0a5c9114e2fa90f7fe98ab93e9
Update lowrisc_ibex to lowRISC/ibex@f30e84b
--- a/hw/vendor/lowrisc_ibex/examples/simple_system/rtl/ibex_simple_system.sv
+++ b/hw/vendor/lowrisc_ibex/examples/simple_system/rtl/ibex_simple_system.sv
@@ -23,17 +35,18 @@ module ibex_simple_system (
   input IO_RST_N
 );
 
-  parameter bit               SecureIbex               = 1'b0;
-  parameter bit               PMPEnable                = 1'b0;
-  parameter int unsigned      PMPGranularity           = 0;
-  parameter int unsigned      PMPNumRegions            = 4;
-  parameter bit               RV32E                    = 1'b0;
-  parameter bit               RV32M                    = 1'b1;
-  parameter ibex_pkg::rv32b_e RV32B                    = `RV32B;
-  parameter bit               BranchTargetALU          = 1'b0;
-  parameter bit               WritebackStage           = 1'b0;
-  parameter                   MultiplierImplementation = "fast";
-  parameter                   SRAMInitFile             = "";
+  parameter bit                 SecureIbex               = 1'b0;
+  parameter bit                 PMPEnable                = 1'b0;
+  parameter int unsigned        PMPGranularity           = 0;
+  parameter int unsigned        PMPNumRegions            = 4;
+  parameter bit                 RV32E                    = 1'b0;
+  parameter ibex_pkg::rv32m_e   RV32M                    = `RV32M;
+  parameter ibex_pkg::rv32b_e   RV32B                    = `RV32B;
+  parameter ibex_pkg::regfile_e RegFile                  = `RegFile;
+  parameter bit                 BranchTargetALU          = 1'b0;
+  parameter bit                 WritebackStage           = 1'b0;
+  parameter bit                 BranchPredictor          = 1'b0;
+  parameter                     SRAMInitFile             = "";
 
   logic clk_sys = 1'b0, rst_sys_n;
 

ParseResult:
MOV HdlIdDef@@RV32M to params
HdlIdDef: RV32M
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: bit
    HdlValueInt: 1
    HdlDirection: INTERNAL

INS HdlIdDef@@RV32M to params
HdlIdDef: RV32M
    HdlOp: DOUBLE_COLON
        list: ops
            HdlValueId: ibex_pkg
            HdlValueId: rv32m_e
    HdlOp: DOUBLE_COLON
        list: ops
            HdlValueId: ibex_pkg
            HdlValueId: RV32MFast
    HdlDirection: INTERNAL

INS HdlIdDef@@RegFile to params
HdlIdDef: RegFile
    HdlOp: DOUBLE_COLON
        list: ops
            HdlValueId: ibex_pkg
            HdlValueId: regfile_e
    HdlOp: DOUBLE_COLON
        list: ops
            HdlValueId: ibex_pkg
            HdlValueId: RegFileFF
    HdlDirection: INTERNAL

UPD HdlIdDef@@RV32M to BranchPredictor

UPD HdlIdDef@@RV32M to RV32M
    UPD HdlValueInt@@1 to 0

DEL HdlIdDef@@MultiplierImplementation from params
HdlIdDef: MultiplierImplementation
    HdlDirection: INTERNAL


CommitId: bc7f6d6cde2259f2741e40112f2ff4c6871d0d75
Update lowrisc_ibex to lowRISC/ibex@6d9e1ac
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_prefetch_buffer.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_prefetch_buffer.sv
@@ -286,7 +286,7 @@ module ibex_prefetch_buffer #(
   // Push a new entry to the FIFO once complete (and not cancelled by a branch)
   assign fifo_valid = rvalid_or_pmp_err & ~branch_discard_q[0];
 
-  assign fifo_addr = branch_mispredict_i ? branch_mispredict_addr : addr_i;
+  assign fifo_addr = branch_i ? addr_i : branch_mispredict_addr;
 
   ///////////////
   // Registers //
ParseResult:
INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: TERNARY
        list: ops
            HdlValueId: branch_i
            HdlValueId: addr_i
            HdlValueId: branch_mispredict_addr
    HdlValueId: fifo_addr

DEL HdlStmAssign@@ from objs
HdlStmAssign
    HdlOp: TERNARY
        list: ops
            HdlValueId: branch_mispredict_i
            HdlValueId: branch_mispredict_addr
            HdlValueId: addr_i
    HdlValueId: fifo_addr


CommitId: aace53c2dc257477eacada57382e7422dfda12da
[entropy_src/rtl] fix for dv sanity test
--- a/hw/ip/entropy_src/rtl/entropy_src_watermark_reg.sv
+++ b/hw/ip/entropy_src/rtl/entropy_src_watermark_reg.sv
@@ -7,7 +7,7 @@
 
 module entropy_src_watermark_reg #(
   parameter int unsigned RegWidth = 16,
-  parameter int unsigned HighWatermark = 1
+  parameter bit HighWatermark = 1
 ) (
   input logic                   clk_i,
   input logic                   rst_ni,

ParseResult:
UPD HdlIdDef@@HighWatermark to HighWatermark
    UPD HdlOp@@PARAMETRIZATION to PARAMETRIZATION
        UPD HdlValueId@@int to bit
        DEL HdlOp@@MAP_ASSOCIATION from ops
        HdlOp: MAP_ASSOCIATION
            list: ops
                HdlValueId: signed


CommitId: 1b5fa9f1ebf0a9520ef6ea6faf1f1a2397a349c1
[verible/style] This corrects several style linter warnings/errors
--- a/hw/ip/usbuart/rtl/usb_serial_fifo_ep.sv
+++ b/hw/ip/usbuart/rtl/usb_serial_fifo_ep.sv
@@ -1,6 +1,6 @@
 module usb_serial_fifo_ep  #(
-  parameter MaxPktSizeByte = 32,
-  parameter PktW = $clog2(MaxPktSizeByte)
+  parameter int unsigned MaxPktSizeByte = 32,
+  parameter int unsigned PktW = $clog2(MaxPktSizeByte)
 
 ) (
   input               clk_i,

ParseResult:
UPD HdlIdDef@@MaxPktSizeByte to MaxPktSizeByte
    INS HdlOp@@PARAMETRIZATION to MaxPktSizeByte
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: int
            HdlOp: MAP_ASSOCIATION
                list: ops
                    HdlValueId: signed

UPD HdlIdDef@@PktW to PktW
    INS HdlOp@@PARAMETRIZATION to PktW
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: int
            HdlOp: MAP_ASSOCIATION
                list: ops
                    HdlValueId: signed


CommitId: 1b5fa9f1ebf0a9520ef6ea6faf1f1a2397a349c1
[verible/style] This corrects several style linter warnings/errors
--- a/hw/ip/usbuart/rtl/usb_serial_fifo_ep.sv
+++ b/hw/ip/usbuart/rtl/usb_serial_fifo_ep.sv
@@ -57,7 +57,7 @@ module usb_serial_fifo_ep  #(
 
   // In future probably better to eliminate this buffer and add rollback to async FIFO
   // Will receive the 2 bytes of CRC, so may get MAX_PACKET_SIZE+2 bytes
-  logic [7:0] out_pkt_buffer [0:MaxPktSizeByte - 1];
+  logic [7:0] out_pkt_buffer [MaxPktSizeByte];
   logic [PktW - 1:0] ob_rptr;
   logic [PktW:0]     ob_max_used;
   logic          ob_unload;

ParseResult:
UPD HdlIdDef@@out_pkt_buffer to out_pkt_buffer
    UPD HdlOp@@INDEX to INDEX
        UPD HdlOp@@DOWNTO to DOWNTO
            UPD HdlOp@@SUB to SUB
                MOV HdlValueId@@MaxPktSizeByte to ops
                HdlValueId: MaxPktSizeByte
                DEL HdlValueInt@@1 from ops
                DEL list@@ops from SUB
            DEL HdlValueInt@@0 from ops
            DEL HdlOp@@SUB from ops
            DEL list@@ops from DOWNTO
        DEL HdlOp@@DOWNTO from ops


CommitId: 1b5fa9f1ebf0a9520ef6ea6faf1f1a2397a349c1
[verible/style] This corrects several style linter warnings/errors
--- a/hw/ip/usbuart/rtl/usb_serial_fifo_ep.sv
+++ b/hw/ip/usbuart/rtl/usb_serial_fifo_ep.sv
@@ -120,7 +120,7 @@ module usb_serial_fifo_ep  #(
   ///////////////////////////////////////
 
   // packet buffer to allow rollback in the case of a NAK
-  logic [7:0]    in_pkt_buffer [0:MaxPktSizeByte - 1];
+  logic [7:0]    in_pkt_buffer [MaxPktSizeByte];
   logic [PktW:0] pb_wptr;
   logic          pb_freeze, pb_done;
   logic [7:0]    pb_rdata;
ParseResult:
UPD HdlIdDef@@in_pkt_buffer to in_pkt_buffer
    UPD HdlOp@@INDEX to INDEX
        UPD HdlOp@@DOWNTO to DOWNTO
            UPD HdlOp@@SUB to SUB
                MOV HdlValueId@@MaxPktSizeByte to ops
                HdlValueId: MaxPktSizeByte
                DEL HdlValueInt@@1 from ops
                DEL list@@ops from SUB
            DEL HdlValueInt@@0 from ops
            DEL HdlOp@@SUB from ops
            DEL list@@ops from DOWNTO
        DEL HdlOp@@DOWNTO from ops


CommitId: 1b5fa9f1ebf0a9520ef6ea6faf1f1a2397a349c1
[verible/style] This corrects several style linter warnings/errors
--- a/hw/ip/prim/rtl/prim_subreg_ext.sv
+++ b/hw/ip/prim/rtl/prim_subreg_ext.sv
@@ -5,7 +5,7 @@
 // Register slice conforming to Comportibility guide.
 
 module prim_subreg_ext #(
-  parameter DW       = 32
+  parameter int unsigned DW = 32
 ) (
   input          re,
   input          we,
ParseResult:
UPD HdlIdDef@@DW to DW
    INS HdlOp@@PARAMETRIZATION to DW
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: int
            HdlOp: MAP_ASSOCIATION
                list: ops
                    HdlValueId: signed


CommitId: c2b279adaf179cc226fa447cc182662c4d0d34be
[usdev] usbdev related changes to integrate aon_wake function
--- a/hw/ip/usbdev/rtl/usbdev.sv
+++ b/hw/ip/usbdev/rtl/usbdev.sv
@@ -7,9 +7,11 @@
 //
 
 
-module usbdev (
+module usbdev import usbdev_pkg::*; (
   input  logic       clk_i,
   input  logic       rst_ni,
+  input  logic       clk_aon_i,
+  input  logic       rst_aon_ni,
   input  logic       clk_usb_48mhz_i, // use usb_ prefix for signals in this clk
   input  logic       rst_usb_48mhz_ni, // async reset, with relase sync to clk_usb_48_mhz_i
 

ParseResult:
INS HdlIdDef@@clk_aon_i to ports
HdlIdDef: clk_aon_i
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: IN

INS HdlIdDef@@rst_aon_ni to ports
HdlIdDef: rst_aon_ni
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: IN


CommitId: c2b279adaf179cc226fa447cc182662c4d0d34be
[usdev] usbdev related changes to integrate aon_wake function
--- a/hw/ip/usbdev/rtl/usbdev.sv
+++ b/hw/ip/usbdev/rtl/usbdev.sv
@@ -43,6 +45,15 @@ module usbdev (
   output logic       cio_tx_mode_se_o,
   output logic       cio_tx_mode_se_en_o,
 
+  // Direct pinmux aon detect connections
+  output logic       usb_out_of_rst_o,
+  output logic       usb_aon_wake_en_o,
+  output logic       usb_aon_wake_ack_o,
+  output logic       usb_suspend_o,
+
+  // Debug info from wakeup module
+  input awk_state_t  usb_state_debug_i,
+
   // SOF reference for clock calibration
   output logic       usb_ref_val_o,
   output logic       usb_ref_pulse_o,

ParseResult:
INS HdlIdDef@@usb_out_of_rst_o to ports
HdlIdDef: usb_out_of_rst_o
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: OUT

INS HdlIdDef@@usb_aon_wake_en_o to ports
HdlIdDef: usb_aon_wake_en_o
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: OUT

INS HdlIdDef@@usb_aon_wake_ack_o to ports
HdlIdDef: usb_aon_wake_ack_o
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: OUT

INS HdlIdDef@@usb_suspend_o to ports
HdlIdDef: usb_suspend_o
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: OUT

INS HdlIdDef@@usb_state_debug_i to ports
HdlIdDef: usb_state_debug_i
    HdlValueId: awk_state_t
    HdlDirection: IN


CommitId: 733baf855393dc5ee398388a05b874276a7c47a3
[adc_ctrl] Style updates and bug fix
--- a/hw/ip/adc_ctrl/rtl/adc_ctrl_fsm.sv
+++ b/hw/ip/adc_ctrl/rtl/adc_ctrl_fsm.sv
@@ -73,27 +73,27 @@ module adc_ctrl_fsm
 
   fsm_state_e fsm_state_q, fsm_state_d;
 
-  always_ff @(posedge clk_aon_i or negedge rst_slow_ni) begin: i_trigger_reg
-    if (!rst_slow_ni) begin
+  always_ff @(posedge clk_aon_i or negedge rst_aon_ni) begin
+    if (!rst_aon_ni) begin
       trigger_q <= 1'b0;
     end
-    else if (cfg_fsm_rst) begin
+    else if (cfg_fsm_rst_i) begin
       trigger_q <= 1'b0;
     end else begin
-      trigger_q  <= cfg_adc_enable;
+      trigger_q  <= cfg_adc_enable_i;
     end
   end
 
-  assign trigger_l2h = (trigger_q == 1'b0) && (cfg_adc_enable == 1'b1);
-  assign trigger_h2l = (trigger_q == 1'b1) && (cfg_adc_enable == 1'b0);
+  assign trigger_l2h = (trigger_q == 1'b0) && (cfg_adc_enable_i == 1'b1);
+  assign trigger_h2l = (trigger_q == 1'b1) && (cfg_adc_enable_i == 1'b0);
 
   assign pwrup_timer_cnt_d = (pwrup_timer_cnt_en) ? pwrup_timer_cnt_q + 1'b1 : pwrup_timer_cnt_q;
 
-  always_ff @(posedge clk_aon_i or negedge rst_slow_ni) begin: i_pwrup_timer_cnt_reg
-    if (!rst_slow_ni) begin
+  always_ff @(posedge clk_aon_i or negedge rst_aon_ni) begin
+    if (!rst_aon_ni) begin
       pwrup_timer_cnt_q    <= '0;
     end
-    else if (pwrup_timer_cnt_clr || cfg_fsm_rst) begin
+    else if (pwrup_timer_cnt_clr || cfg_fsm_rst_i) begin
        pwrup_timer_cnt_q <= '0;
     end else begin
        pwrup_timer_cnt_q <= pwrup_timer_cnt_d;

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlOp@@FALLING to FALLING
        UPD HdlValueId@@rst_slow_ni to rst_aon_ni

UPD HdlStmProcess@@ to 
    UPD HdlOp@@FALLING to FALLING
        UPD HdlValueId@@rst_slow_ni to rst_aon_ni

UPD HdlStmAssign@@ to 
    UPD HdlOp@@AND_LOG to AND_LOG
        UPD HdlOp@@EQ to EQ
            UPD HdlValueId@@cfg_adc_enable to cfg_adc_enable_i

UPD HdlStmAssign@@ to 
    UPD HdlOp@@AND_LOG to AND_LOG
        UPD HdlOp@@EQ to EQ
            UPD HdlValueId@@cfg_adc_enable to cfg_adc_enable_i

UPD HdlStmIf@@ to 
    UPD HdlOp@@NEG_LOG to NEG_LOG
        UPD HdlValueId@@rst_slow_ni to rst_aon_ni
    UPD HdlValueId@@cfg_fsm_rst to cfg_fsm_rst_i

UPD HdlStmIf@@ to 
    UPD HdlOp@@NEG_LOG to NEG_LOG
        UPD HdlValueId@@rst_slow_ni to rst_aon_ni
    UPD HdlOp@@OR_LOG to OR_LOG
        UPD HdlValueId@@cfg_fsm_rst to cfg_fsm_rst_i

UPD HdlStmAssign@@ to 
    UPD HdlValueId@@cfg_adc_enable to cfg_adc_enable_i


CommitId: 733baf855393dc5ee398388a05b874276a7c47a3
[adc_ctrl] Style updates and bug fix
--- a/hw/ip/adc_ctrl/rtl/adc_ctrl_fsm.sv
+++ b/hw/ip/adc_ctrl/rtl/adc_ctrl_fsm.sv
@@ -102,11 +102,11 @@ module adc_ctrl_fsm
 
   assign lp_sample_cnt_d = (lp_sample_cnt_en) ? lp_sample_cnt_q + 1'b1 : lp_sample_cnt_q;
 
-  always_ff @(posedge clk_aon_i or negedge rst_slow_ni) begin: i_lp_sample_cnt_reg
-    if (!rst_slow_ni) begin
+  always_ff @(posedge clk_aon_i or negedge rst_aon_ni) begin
+    if (!rst_aon_ni) begin
       lp_sample_cnt_q    <= '0;
     end
-    else if (lp_sample_cnt_clr || cfg_fsm_rst) begin
+    else if (lp_sample_cnt_clr || cfg_fsm_rst_i) begin
       lp_sample_cnt_q <= '0;
     end else begin
       lp_sample_cnt_q <= lp_sample_cnt_d;

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlOp@@FALLING to FALLING
        UPD HdlValueId@@rst_slow_ni to rst_aon_ni

UPD HdlStmIf@@ to 
    UPD HdlOp@@NEG_LOG to NEG_LOG
        UPD HdlValueId@@rst_slow_ni to rst_aon_ni
    UPD HdlOp@@OR_LOG to OR_LOG
        UPD HdlValueId@@cfg_fsm_rst to cfg_fsm_rst_i


CommitId: 733baf855393dc5ee398388a05b874276a7c47a3
[adc_ctrl] Style updates and bug fix
--- a/hw/ip/adc_ctrl/rtl/adc_ctrl_fsm.sv
+++ b/hw/ip/adc_ctrl/rtl/adc_ctrl_fsm.sv
@@ -115,11 +115,11 @@ module adc_ctrl_fsm
 
   assign np_sample_cnt_d = (np_sample_cnt_en) ? np_sample_cnt_q + 1'b1 : np_sample_cnt_q;
 
-  always_ff @(posedge clk_aon_i or negedge rst_slow_ni) begin: i_np_sample_cnt_reg
-    if (!rst_slow_ni) begin
+  always_ff @(posedge clk_aon_i or negedge rst_aon_ni) begin
+    if (!rst_aon_ni) begin
       np_sample_cnt_q    <= '0;
     end
-    else if (np_sample_cnt_clr || cfg_fsm_rst) begin
+    else if (np_sample_cnt_clr || cfg_fsm_rst_i) begin
       np_sample_cnt_q <= '0;
     end else begin
       np_sample_cnt_q <= np_sample_cnt_d;

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlOp@@FALLING to FALLING
        UPD HdlValueId@@rst_slow_ni to rst_aon_ni

UPD HdlStmIf@@ to 
    UPD HdlOp@@NEG_LOG to NEG_LOG
        UPD HdlValueId@@rst_slow_ni to rst_aon_ni
    UPD HdlOp@@OR_LOG to OR_LOG
        UPD HdlValueId@@cfg_fsm_rst to cfg_fsm_rst_i


CommitId: 733baf855393dc5ee398388a05b874276a7c47a3
[adc_ctrl] Style updates and bug fix
--- a/hw/ip/adc_ctrl/rtl/adc_ctrl_fsm.sv
+++ b/hw/ip/adc_ctrl/rtl/adc_ctrl_fsm.sv
@@ -129,11 +129,11 @@ module adc_ctrl_fsm
   assign wakeup_timer_cnt_d = (wakeup_timer_cnt_en) ?
            wakeup_timer_cnt_q + 1'b1 : wakeup_timer_cnt_q;
 
-  always_ff @(posedge clk_aon_i or negedge rst_slow_ni) begin: i_wakeup_timer_cnt_reg
-    if (!rst_slow_ni) begin
+  always_ff @(posedge clk_aon_i or negedge rst_aon_ni) begin
+    if (!rst_aon_ni) begin
       wakeup_timer_cnt_q    <= '0;
     end
-    else if (wakeup_timer_cnt_clr || cfg_fsm_rst) begin
+    else if (wakeup_timer_cnt_clr || cfg_fsm_rst_i) begin
       wakeup_timer_cnt_q <= '0;
     end else begin
       wakeup_timer_cnt_q <= wakeup_timer_cnt_d;

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlOp@@FALLING to FALLING
        UPD HdlValueId@@rst_slow_ni to rst_aon_ni

UPD HdlStmIf@@ to 
    UPD HdlOp@@NEG_LOG to NEG_LOG
        UPD HdlValueId@@rst_slow_ni to rst_aon_ni
    UPD HdlOp@@OR_LOG to OR_LOG
        UPD HdlValueId@@cfg_fsm_rst to cfg_fsm_rst_i


CommitId: 733baf855393dc5ee398388a05b874276a7c47a3
[adc_ctrl] Style updates and bug fix
--- a/hw/ip/adc_ctrl/rtl/adc_ctrl_fsm.sv
+++ b/hw/ip/adc_ctrl/rtl/adc_ctrl_fsm.sv
@@ -203,8 +203,8 @@ module adc_ctrl_fsm
   always_comb begin: adc_fsm
     fsm_state_d = fsm_state_q;
     //outputs
-    adc_chn_sel = 2'b0;
-    adc_pd = 1'b1;//default value
+    adc_chn_sel_o = 2'b0;
+    adc_pd_o = 1'b1;//default value
     pwrup_timer_cnt_clr = 1'b0;
     pwrup_timer_cnt_en = 1'b0;
     lp_sample_cnt_clr = 1'b0;

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@adc_chn_sel to adc_chn_sel_o
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@adc_pd to adc_pd_o
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@adc_ctrl_done to adc_ctrl_done_o
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@oneshot_done to oneshot_done_o


CommitId: 733baf855393dc5ee398388a05b874276a7c47a3
[adc_ctrl] Style updates and bug fix
--- a/hw/ip/adc_ctrl/rtl/adc_ctrl_fsm.sv
+++ b/hw/ip/adc_ctrl/rtl/adc_ctrl_fsm.sv
@@ -213,8 +213,8 @@ module adc_ctrl_fsm
     wakeup_timer_cnt_en = 1'b0;
     np_sample_cnt_clr = 1'b0;
     np_sample_cnt_en = 1'b0;
-    adc_ctrl_done = 1'b0;
-    oneshot_done = 1'b0;
+    adc_ctrl_done_o = 1'b0;
+    oneshot_done_o = 1'b0;
 
     unique case (fsm_state_q)
       PWRDN: begin

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@adc_chn_sel to adc_chn_sel_o
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@adc_pd to adc_pd_o
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@adc_ctrl_done to adc_ctrl_done_o
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@oneshot_done to oneshot_done_o

UPD HdlStmCase@@fsm_state_q to fsm_state_q
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@adc_pd to adc_pd_o
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@adc_pd to adc_pd_o
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@adc_pd to adc_pd_o
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@adc_chn_sel to adc_chn_sel_o
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@adc_pd to adc_pd_o
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@adc_pd to adc_pd_o
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@adc_chn_sel to adc_chn_sel_o
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@adc_pd to adc_pd_o
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@adc_chn_sel to adc_chn_sel_o
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@adc_pd to adc_pd_o
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@adc_pd to adc_pd_o
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@adc_chn_sel to adc_chn_sel_o
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@adc_pd to adc_pd_o
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@adc_pd to adc_pd_o
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@adc_pd to adc_pd_o
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@adc_pd to adc_pd_o
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@adc_chn_sel to adc_chn_sel_o
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@adc_pd to adc_pd_o
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@adc_pd to adc_pd_o
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@adc_chn_sel to adc_chn_sel_o
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@adc_pd to adc_pd_o


CommitId: 86144f7033cb38171990fb9bd5f5f0f8f85f0c5d
[usbdev] Fix issues discovered with linter
--- a/hw/ip/usbdev/rtl/usbdev_linkstate.sv
+++ b/hw/ip/usbdev/rtl/usbdev_linkstate.sv
@@ -66,7 +66,7 @@ module usbdev_linkstate (
 
 
   // Events that are not triggered by a timeout
-  logic         ev_bus_active, ev_sense_pwr;
+  logic         ev_bus_active;
 
   // Events that are triggered by timeout
   logic         ev_bus_inactive, ev_reset;

ParseResult:
DEL HdlIdDef@@ev_sense_pwr from objs
HdlIdDef: ev_sense_pwr
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL


CommitId: 86144f7033cb38171990fb9bd5f5f0f8f85f0c5d
[usbdev] Fix issues discovered with linter
--- a/hw/ip/usbdev/rtl/usbdev_linkstate.sv
+++ b/hw/ip/usbdev/rtl/usbdev_linkstate.sv
@@ -110,7 +110,6 @@ module usbdev_linkstate (
   );
 
   // Simple events
-  assign ev_sense_pwr  = see_pwr_sense;
   assign ev_bus_active = !see_idle;
 
   always_comb begin
ParseResult:
DEL HdlStmAssign@@ from objs
HdlStmAssign
    HdlValueId: see_pwr_sense
    HdlValueId: ev_sense_pwr


CommitId: 3519dd2a391a001bb2dae2ed2bc37789b59b97ad
[csrng/rtl] instantiate and generate bug fixes
--- a/hw/ip/csrng/rtl/csrng_ctr_drbg_cmd.sv
+++ b/hw/ip/csrng/rtl/csrng_ctr_drbg_cmd.sv
@@ -23,6 +23,7 @@ module csrng_ctr_drbg_cmd import csrng_pkg::*; #(
   output logic               ctr_drbg_cmd_rdy_o, // ready to process the req above
   input logic [Cmd-1:0]      ctr_drbg_cmd_ccmd_i,    // current command
   input logic [StateId-1:0]  ctr_drbg_cmd_inst_id_i, // instantance id
+  input logic                ctr_drbg_cmd_glast_i,   // gen cmd last beat
   input logic [SeedLen-1:0]  ctr_drbg_cmd_entropy_i, // es entropy
   input logic                ctr_drbg_cmd_entropy_fips_i, // es entropy)fips
   input logic [SeedLen-1:0]  ctr_drbg_cmd_adata_i,   // additional data

ParseResult:
INS HdlIdDef@@ctr_drbg_cmd_glast_i to ports
HdlIdDef: ctr_drbg_cmd_glast_i
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: IN


CommitId: 3519dd2a391a001bb2dae2ed2bc37789b59b97ad
[csrng/rtl] instantiate and generate bug fixes
--- a/hw/ip/csrng/rtl/csrng_ctr_drbg_cmd.sv
+++ b/hw/ip/csrng/rtl/csrng_ctr_drbg_cmd.sv
@@ -36,6 +37,7 @@ module csrng_ctr_drbg_cmd import csrng_pkg::*; #(
   input logic                ctr_drbg_cmd_rdy_i, // ready to process the ack above
   output logic [Cmd-1:0]     ctr_drbg_cmd_ccmd_o,
   output logic [StateId-1:0] ctr_drbg_cmd_inst_id_o,
+  output logic               ctr_drbg_cmd_glast_o,
   output logic               ctr_drbg_cmd_fips_o,
   output logic [SeedLen-1:0] ctr_drbg_cmd_adata_o,
   output logic [KeyLen-1:0]  ctr_drbg_cmd_key_o,

ParseResult:
INS HdlIdDef@@ctr_drbg_cmd_glast_o to ports
HdlIdDef: ctr_drbg_cmd_glast_o
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: OUT


CommitId: 3519dd2a391a001bb2dae2ed2bc37789b59b97ad
[csrng/rtl] instantiate and generate bug fixes
--- a/hw/ip/csrng/rtl/csrng_ctr_drbg_cmd.sv
+++ b/hw/ip/csrng/rtl/csrng_ctr_drbg_cmd.sv
@@ -64,16 +66,17 @@ module csrng_ctr_drbg_cmd import csrng_pkg::*; #(
 );
 
   localparam int CmdreqFifoDepth = 1;
-  localparam int CmdreqFifoWidth = KeyLen+BlkLen+CtrLen+1+2*SeedLen+StateId+Cmd;
+  localparam int CmdreqFifoWidth = KeyLen+BlkLen+CtrLen+1+2*SeedLen+1+StateId+Cmd;
   localparam int RCStageFifoDepth = 1;
-  localparam int RCStageFifoWidth = KeyLen+BlkLen+StateId+CtrLen+1+SeedLen+Cmd;
+  localparam int RCStageFifoWidth = KeyLen+BlkLen+StateId+CtrLen+1+SeedLen+1+Cmd;
   localparam int KeyVRCFifoDepth = 1;
-  localparam int KeyVRCFifoWidth = KeyLen+BlkLen+CtrLen+1+SeedLen+StateId+Cmd;
+  localparam int KeyVRCFifoWidth = KeyLen+BlkLen+CtrLen+1+SeedLen+1+StateId+Cmd;
 
 
   // signals
   logic [Cmd-1:0]     cmdreq_ccmd;
   logic [StateId-1:0] cmdreq_id;
+  logic               cmdreq_glast;
   logic [SeedLen-1:0] cmdreq_entropy;
   logic               cmdreq_entropy_fips;
   logic [SeedLen-1:0] cmdreq_adata;

ParseResult:
INS HdlIdDef@@cmdreq_glast to objs
HdlIdDef: cmdreq_glast
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

UPD HdlIdDef@@CmdreqFifoWidth to CmdreqFifoWidth
    INS HdlOp@@ADD to CmdreqFifoWidth
    UPD HdlOp@@ADD to ADD
        INS list@@ops to ADD
        INS HdlValueId@@Cmd to ops
        UPD HdlOp@@ADD to ADD
            UPD HdlOp@@ADD to ADD
                INS HdlValueInt@@1 to ops

UPD HdlIdDef@@RCStageFifoWidth to RCStageFifoWidth
    INS HdlOp@@ADD to RCStageFifoWidth
    UPD HdlOp@@ADD to ADD
        INS list@@ops to ADD
        UPD HdlOp@@ADD to ADD
            INS HdlValueInt@@1 to ops

UPD HdlIdDef@@KeyVRCFifoWidth to KeyVRCFifoWidth
    INS HdlOp@@ADD to KeyVRCFifoWidth
    UPD HdlOp@@ADD to ADD
        INS list@@ops to ADD
        INS HdlValueId@@Cmd to ops
        UPD HdlOp@@ADD to ADD
            UPD HdlOp@@ADD to ADD
                INS HdlValueInt@@1 to ops

UPD HdlIdDef@@CmdreqFifoWidth to CmdreqFifoWidth
    MOV HdlOp@@ADD to CmdreqFifoWidth
    HdlOp: ADD
        list: ops
            HdlOp: ADD
                list: ops
                    HdlOp: ADD
                        list: ops
                            HdlOp: ADD
                                list: ops
                                    HdlOp: ADD
                                        list: ops
                                            HdlOp: ADD
                                                list: ops
                                                    HdlValueId: KeyLen
                                                    HdlValueId: BlkLen
                                            HdlValueId: CtrLen
                                    HdlValueInt: 1
                            HdlOp: MUL
                                list: ops
                                    HdlValueInt: 2
                                    HdlValueId: SeedLen
                    HdlValueId: StateId
            HdlValueId: Cmd
    UPD HdlOp@@ADD to ADD
        UPD HdlValueId@@Cmd to StateId
        UPD HdlOp@@ADD to ADD
            DEL HdlValueId@@StateId from ops

UPD HdlIdDef@@RCStageFifoWidth to RCStageFifoWidth
    MOV HdlOp@@ADD to RCStageFifoWidth
    HdlOp: ADD
        list: ops
            HdlOp: ADD
                list: ops
                    HdlOp: ADD
                        list: ops
                            HdlOp: ADD
                                list: ops
                                    HdlOp: ADD
                                        list: ops
                                            HdlOp: ADD
                                                list: ops
                                                    HdlValueId: KeyLen
                                                    HdlValueId: BlkLen
                                            HdlValueId: StateId
                                    HdlValueId: CtrLen
                            HdlValueInt: 1
                    HdlValueId: SeedLen
            HdlValueId: Cmd
    UPD HdlOp@@ADD to ADD
        MOV HdlValueId@@Cmd to ops
        HdlValueId: Cmd

UPD HdlIdDef@@KeyVRCFifoWidth to KeyVRCFifoWidth
    MOV HdlOp@@ADD to KeyVRCFifoWidth
    HdlOp: ADD
        list: ops
            HdlOp: ADD
                list: ops
                    HdlOp: ADD
                        list: ops
                            HdlOp: ADD
                                list: ops
                                    HdlOp: ADD
                                        list: ops
                                            HdlOp: ADD
                                                list: ops
                                                    HdlValueId: KeyLen
                                                    HdlValueId: BlkLen
                                            HdlValueId: CtrLen
                                    HdlValueInt: 1
                            HdlValueId: SeedLen
                    HdlValueId: StateId
            HdlValueId: Cmd
    UPD HdlOp@@ADD to ADD
        UPD HdlValueId@@Cmd to StateId
        UPD HdlOp@@ADD to ADD
            DEL HdlValueId@@StateId from ops


CommitId: 3519dd2a391a001bb2dae2ed2bc37789b59b97ad
[csrng/rtl] instantiate and generate bug fixes
--- a/hw/ip/csrng/rtl/csrng_ctr_drbg_cmd.sv
+++ b/hw/ip/csrng/rtl/csrng_ctr_drbg_cmd.sv
@@ -91,6 +94,7 @@ module csrng_ctr_drbg_cmd import csrng_pkg::*; #(
   logic [StateId-1:0] rcstage_id;
   logic [CtrLen-1:0]  rcstage_rc;
   logic [Cmd-1:0]     rcstage_ccmd;
+  logic               rcstage_glast;
   logic [SeedLen-1:0] rcstage_adata;
   logic               rcstage_fips;
   logic               fips_modified;

ParseResult:
INS HdlIdDef@@rcstage_glast to objs
HdlIdDef: rcstage_glast
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL


CommitId: 3519dd2a391a001bb2dae2ed2bc37789b59b97ad
[csrng/rtl] instantiate and generate bug fixes
--- a/hw/ip/csrng/rtl/csrng_ctr_drbg_cmd.sv
+++ b/hw/ip/csrng/rtl/csrng_ctr_drbg_cmd.sv
@@ -159,6 +163,7 @@ module csrng_ctr_drbg_cmd import csrng_pkg::*; #(
   assign sfifo_cmdreq_wdata = {ctr_drbg_cmd_key_i,ctr_drbg_cmd_v_i,
                                ctr_drbg_cmd_rc_i,fips_modified,
                                ctr_drbg_cmd_entropy_i,ctr_drbg_cmd_adata_i,
+                               ctr_drbg_cmd_glast_i,
                                ctr_drbg_cmd_inst_id_i,ctr_drbg_cmd_ccmd_i};
 
   assign sfifo_cmdreq_push = ctr_drbg_cmd_enable_i && ctr_drbg_cmd_req_i;

ParseResult:
UPD HdlStmAssign@@ to 
    INS HdlOp@@CONCAT to 
    UPD HdlOp@@CONCAT to CONCAT
        INS list@@ops to CONCAT
        INS HdlValueId@@ctr_drbg_cmd_ccmd_i to ops

UPD HdlStmAssign@@ to 
    MOV HdlOp@@CONCAT to 
    HdlOp: CONCAT
        list: ops
            HdlOp: CONCAT
                list: ops
                    HdlOp: CONCAT
                        list: ops
                            HdlOp: CONCAT
                                list: ops
                                    HdlOp: CONCAT
                                        list: ops
                                            HdlOp: CONCAT
                                                list: ops
                                                    HdlOp: CONCAT
                                                        list: ops
                                                            HdlValueId: ctr_drbg_cmd_key_i
                                                            HdlValueId: ctr_drbg_cmd_v_i
                                                    HdlValueId: ctr_drbg_cmd_rc_i
                                            HdlValueId: fips_modified
                                    HdlValueId: ctr_drbg_cmd_entropy_i
                            HdlValueId: ctr_drbg_cmd_adata_i
                    HdlValueId: ctr_drbg_cmd_inst_id_i
            HdlValueId: ctr_drbg_cmd_ccmd_i
    UPD HdlOp@@CONCAT to CONCAT
        UPD HdlValueId@@ctr_drbg_cmd_ccmd_i to ctr_drbg_cmd_inst_id_i
        UPD HdlOp@@CONCAT to CONCAT
            UPD HdlValueId@@ctr_drbg_cmd_inst_id_i to ctr_drbg_cmd_glast_i


CommitId: 3519dd2a391a001bb2dae2ed2bc37789b59b97ad
[csrng/rtl] instantiate and generate bug fixes
--- a/hw/ip/csrng/rtl/csrng_ctr_drbg_cmd.sv
+++ b/hw/ip/csrng/rtl/csrng_ctr_drbg_cmd.sv
@@ -168,7 +173,7 @@ module csrng_ctr_drbg_cmd import csrng_pkg::*; #(
 
   assign {cmdreq_key,cmdreq_v,cmdreq_rc,
           cmdreq_entropy_fips,cmdreq_entropy,cmdreq_adata,
-          cmdreq_id,cmdreq_ccmd} = sfifo_cmdreq_rdata;
+          cmdreq_glast,cmdreq_id,cmdreq_ccmd} = sfifo_cmdreq_rdata;
 
   assign ctr_drbg_cmd_rdy_o = !sfifo_cmdreq_full;
 

ParseResult:
UPD HdlStmAssign@@ to 
    INS HdlOp@@CONCAT to 
    UPD HdlOp@@CONCAT to CONCAT
        INS list@@ops to CONCAT
        INS HdlValueId@@ctr_drbg_cmd_ccmd_i to ops

UPD HdlStmAssign@@ to 
    MOV HdlOp@@CONCAT to 
    HdlOp: CONCAT
        list: ops
            HdlOp: CONCAT
                list: ops
                    HdlOp: CONCAT
                        list: ops
                            HdlOp: CONCAT
                                list: ops
                                    HdlOp: CONCAT
                                        list: ops
                                            HdlOp: CONCAT
                                                list: ops
                                                    HdlOp: CONCAT
                                                        list: ops
                                                            HdlValueId: cmdreq_key
                                                            HdlValueId: cmdreq_v
                                                    HdlValueId: cmdreq_rc
                                            HdlValueId: cmdreq_entropy_fips
                                    HdlValueId: cmdreq_entropy
                            HdlValueId: cmdreq_adata
                    HdlValueId: cmdreq_id
            HdlValueId: cmdreq_ccmd
    UPD HdlOp@@CONCAT to CONCAT
        UPD HdlValueId@@cmdreq_ccmd to cmdreq_id
        UPD HdlOp@@CONCAT to CONCAT
            UPD HdlValueId@@cmdreq_id to cmdreq_glast


CommitId: 3519dd2a391a001bb2dae2ed2bc37789b59b97ad
[csrng/rtl] instantiate and generate bug fixes
--- a/hw/ip/csrng/rtl/csrng_ctr_drbg_cmd.sv
+++ b/hw/ip/csrng/rtl/csrng_ctr_drbg_cmd.sv
@@ -210,8 +215,7 @@ module csrng_ctr_drbg_cmd import csrng_pkg::*; #(
          (cmdreq_ccmd == UPD) ? cmdreq_rc :
          '0;
 
-  assign prep_gen_adata_null = (cmdreq_ccmd == GEN) && (cmdreq_adata == '0) &&
-                               sfifo_cmdreq_not_empty;
+  assign prep_gen_adata_null = (cmdreq_ccmd == GEN) && (cmdreq_adata == '0);
 
   assign gen_adata_null_d = prep_gen_adata_null;
 

ParseResult:
UPD HdlStmAssign@@ to 
    UPD HdlOp@@AND_LOG to AND_LOG
        MOV HdlOp@@AND_LOG to ops
        HdlOp: AND_LOG
            list: ops
                HdlOp: EQ
                    list: ops
                        HdlValueId: cmdreq_ccmd
                        HdlValueId: GEN
                HdlOp: EQ
                    list: ops
                        HdlValueId: cmdreq_adata
                        HdlValueInt: 0
        DEL HdlValueId@@sfifo_cmdreq_not_empty from ops
        DEL list@@ops from AND_LOG
    DEL HdlOp@@AND_LOG from 


CommitId: 3519dd2a391a001bb2dae2ed2bc37789b59b97ad
[csrng/rtl] instantiate and generate bug fixes
--- a/hw/ip/csrng/rtl/csrng_ctr_drbg_cmd.sv
+++ b/hw/ip/csrng/rtl/csrng_ctr_drbg_cmd.sv
@@ -250,10 +254,10 @@ module csrng_ctr_drbg_cmd import csrng_pkg::*; #(
 
   assign sfifo_rcstage_push = sfifo_cmdreq_pop;
   assign sfifo_rcstage_wdata = {prep_key,prep_v,cmdreq_id,prep_rc,cmdreq_entropy_fips,
-                                cmdreq_adata,cmdreq_ccmd};
+                                cmdreq_adata,cmdreq_glast,cmdreq_ccmd};
   assign sfifo_rcstage_pop = sfifo_rcstage_not_empty && (upd_cmd_ack_i || gen_adata_null_q);
   assign {rcstage_key,rcstage_v,rcstage_id,rcstage_rc,rcstage_fips,
-          rcstage_adata,rcstage_ccmd} = sfifo_rcstage_rdata;
+          rcstage_adata,rcstage_glast,rcstage_ccmd} = sfifo_rcstage_rdata;
 
 
   assign ctr_drbg_cmd_sfifo_rcstage_err_o =

ParseResult:
UPD HdlStmAssign@@ to 
    INS HdlOp@@CONCAT to 
    UPD HdlOp@@CONCAT to CONCAT
        INS list@@ops to CONCAT
        INS HdlValueId@@cmdreq_ccmd to ops

UPD HdlStmAssign@@ to 
    MOV HdlOp@@CONCAT to 
    HdlOp: CONCAT
        list: ops
            HdlOp: CONCAT
                list: ops
                    HdlOp: CONCAT
                        list: ops
                            HdlOp: CONCAT
                                list: ops
                                    HdlOp: CONCAT
                                        list: ops
                                            HdlOp: CONCAT
                                                list: ops
                                                    HdlValueId: prep_key
                                                    HdlValueId: prep_v
                                            HdlValueId: cmdreq_id
                                    HdlValueId: prep_rc
                            HdlValueId: cmdreq_entropy_fips
                    HdlValueId: cmdreq_adata
            HdlValueId: cmdreq_ccmd
    UPD HdlOp@@CONCAT to CONCAT
        UPD HdlValueId@@cmdreq_ccmd to cmdreq_glast

UPD HdlStmAssign@@ to 
    MOV HdlOp@@CONCAT to 
    HdlOp: CONCAT
        list: ops
            HdlOp: CONCAT
                list: ops
                    HdlOp: CONCAT
                        list: ops
                            HdlOp: CONCAT
                                list: ops
                                    HdlOp: CONCAT
                                        list: ops
                                            HdlOp: CONCAT
                                                list: ops
                                                    HdlValueId: rcstage_key
                                                    HdlValueId: rcstage_v
                                            HdlValueId: rcstage_id
                                    HdlValueId: rcstage_rc
                            HdlValueId: rcstage_fips
                    HdlValueId: rcstage_adata
            HdlValueId: rcstage_ccmd
    UPD HdlOp@@CONCAT to CONCAT
        UPD HdlValueId@@rcstage_ccmd to rcstage_glast


CommitId: 3519dd2a391a001bb2dae2ed2bc37789b59b97ad
[csrng/rtl] instantiate and generate bug fixes
--- a/hw/ip/csrng/rtl/csrng_ctr_drbg_cmd.sv
+++ b/hw/ip/csrng/rtl/csrng_ctr_drbg_cmd.sv
@@ -290,16 +294,16 @@ module csrng_ctr_drbg_cmd import csrng_pkg::*; #(
 
   // if a UNI command, reset the state values
   assign sfifo_keyvrc_wdata = (rcstage_ccmd == UNI) ?
-         {{(KeyLen+BlkLen+CtrLen+1+SeedLen){1'b0}},upd_cmd_inst_id_i,upd_cmd_ccmd_i} :
+         {{(KeyLen+BlkLen+CtrLen+1+SeedLen){1'b0}},rcstage_glast,upd_cmd_inst_id_i,upd_cmd_ccmd_i} :
          gen_adata_null_q ?
          {rcstage_key,rcstage_v,rcstage_rc,rcstage_fips,
-          rcstage_adata,rcstage_id,rcstage_ccmd} :
+          rcstage_adata,rcstage_glast,rcstage_id,rcstage_ccmd} :
          {upd_cmd_key_i,upd_cmd_v_i,rcstage_rc,rcstage_fips,
-          rcstage_adata,upd_cmd_inst_id_i,upd_cmd_ccmd_i};
+          rcstage_adata,rcstage_glast,upd_cmd_inst_id_i,upd_cmd_ccmd_i};
 
   assign sfifo_keyvrc_pop = ctr_drbg_cmd_rdy_i && sfifo_keyvrc_not_empty;
   assign {ctr_drbg_cmd_key_o,ctr_drbg_cmd_v_o,ctr_drbg_cmd_rc_o,
-          ctr_drbg_cmd_fips_o,ctr_drbg_cmd_adata_o,
+          ctr_drbg_cmd_fips_o,ctr_drbg_cmd_adata_o,ctr_drbg_cmd_glast_o,
           ctr_drbg_cmd_inst_id_o,ctr_drbg_cmd_ccmd_o} = sfifo_keyvrc_rdata;
 
   assign ctr_drbg_cmd_sfifo_keyvrc_err_o =
ParseResult:
UPD HdlStmAssign@@ to 
    UPD HdlOp@@TERNARY to TERNARY
        INS HdlOp@@CONCAT to ops
        UPD HdlOp@@CONCAT to CONCAT
            INS list@@ops to CONCAT
            INS HdlValueId@@upd_cmd_ccmd_i to ops
        UPD HdlOp@@TERNARY to TERNARY
            INS HdlOp@@CONCAT to ops
            INS HdlOp@@CONCAT to ops
            UPD HdlOp@@CONCAT to CONCAT
                INS list@@ops to CONCAT
                INS HdlValueId@@rcstage_ccmd to ops
            UPD HdlOp@@CONCAT to CONCAT
                INS list@@ops to CONCAT
                INS HdlValueId@@upd_cmd_ccmd_i to ops

UPD HdlStmAssign@@ to 
    MOV HdlOp@@CONCAT to 
    HdlOp: CONCAT
        list: ops
            HdlOp: CONCAT
                list: ops
                    HdlOp: CONCAT
                        list: ops
                            HdlOp: CONCAT
                                list: ops
                                    HdlOp: CONCAT
                                        list: ops
                                            HdlOp: CONCAT
                                                list: ops
                                                    HdlValueId: ctr_drbg_cmd_key_o
                                                    HdlValueId: ctr_drbg_cmd_v_o
                                            HdlValueId: ctr_drbg_cmd_rc_o
                                    HdlValueId: ctr_drbg_cmd_fips_o
                            HdlValueId: ctr_drbg_cmd_adata_o
                    HdlValueId: ctr_drbg_cmd_inst_id_o
            HdlValueId: ctr_drbg_cmd_ccmd_o
    UPD HdlOp@@CONCAT to CONCAT
        UPD HdlValueId@@ctr_drbg_cmd_ccmd_o to ctr_drbg_cmd_inst_id_o
        UPD HdlOp@@CONCAT to CONCAT
            UPD HdlValueId@@ctr_drbg_cmd_inst_id_o to ctr_drbg_cmd_glast_o

UPD HdlStmAssign@@ to 
    UPD HdlOp@@TERNARY to TERNARY
        MOV HdlOp@@CONCAT to ops
        HdlOp: CONCAT
            list: ops
                HdlOp: CONCAT
                    list: ops
                        HdlOp: REPL_CONCAT
                            list: ops
                                HdlOp: ADD
                                    list: ops
                                        HdlOp: ADD
                                            list: ops
                                                HdlOp: ADD
                                                    list: ops
                                                        HdlOp: ADD
                                                            list: ops
                                                                HdlValueId: KeyLen
                                                                HdlValueId: BlkLen
                                                        HdlValueId: CtrLen
                                                HdlValueInt: 1
                                        HdlValueId: SeedLen
                                HdlValueInt: 0
                        HdlValueId: upd_cmd_inst_id_i
                HdlValueId: upd_cmd_ccmd_i
        UPD HdlOp@@CONCAT to CONCAT
            UPD HdlValueId@@upd_cmd_ccmd_i to upd_cmd_inst_id_i
            UPD HdlOp@@CONCAT to CONCAT
                UPD HdlValueId@@upd_cmd_inst_id_i to rcstage_glast
        UPD HdlOp@@TERNARY to TERNARY
            MOV HdlOp@@CONCAT to ops
            HdlOp: CONCAT
                list: ops
                    HdlOp: CONCAT
                        list: ops
                            HdlOp: CONCAT
                                list: ops
                                    HdlOp: CONCAT
                                        list: ops
                                            HdlOp: CONCAT
                                                list: ops
                                                    HdlOp: CONCAT
                                                        list: ops
                                                            HdlValueId: rcstage_key
                                                            HdlValueId: rcstage_v
                                                    HdlValueId: rcstage_rc
                                            HdlValueId: rcstage_fips
                                    HdlValueId: rcstage_adata
                            HdlValueId: rcstage_id
                    HdlValueId: rcstage_ccmd
            MOV HdlOp@@CONCAT to ops
            HdlOp: CONCAT
                list: ops
                    HdlOp: CONCAT
                        list: ops
                            HdlOp: CONCAT
                                list: ops
                                    HdlOp: CONCAT
                                        list: ops
                                            HdlOp: CONCAT
                                                list: ops
                                                    HdlOp: CONCAT
                                                        list: ops
                                                            HdlValueId: upd_cmd_key_i
                                                            HdlValueId: upd_cmd_v_i
                                                    HdlValueId: rcstage_rc
                                            HdlValueId: rcstage_fips
                                    HdlValueId: rcstage_adata
                            HdlValueId: upd_cmd_inst_id_i
                    HdlValueId: upd_cmd_ccmd_i
            UPD HdlOp@@CONCAT to CONCAT
                UPD HdlValueId@@rcstage_ccmd to rcstage_id
                UPD HdlOp@@CONCAT to CONCAT
                    UPD HdlValueId@@rcstage_id to rcstage_glast
            UPD HdlOp@@CONCAT to CONCAT
                UPD HdlValueId@@upd_cmd_ccmd_i to upd_cmd_inst_id_i
                UPD HdlOp@@CONCAT to CONCAT
                    UPD HdlValueId@@upd_cmd_inst_id_i to rcstage_glast


CommitId: 33e387ff92df07f8a334ab97a02becf08505a130
[csrng/rtl] Split cmd_sts into two registers
--- a/hw/ip/csrng/rtl/csrng_core.sv
+++ b/hw/ip/csrng/rtl/csrng_core.sv
@@ -8,7 +8,7 @@
 
 module csrng_core import csrng_pkg::*; #(
   parameter aes_pkg::sbox_impl_e SBoxImpl = aes_pkg::SBoxImplLut,
-  parameter int unsigned NHwApps = 2
+  parameter int NHwApps = 2
 ) (
   input logic        clk_i,
   input logic        rst_ni,

ParseResult:
UPD HdlIdDef@@NHwApps to NHwApps
    UPD HdlOp@@PARAMETRIZATION to PARAMETRIZATION
        MOV HdlValueId@@int to ops
        HdlValueId: int
        DEL HdlOp@@MAP_ASSOCIATION from ops
        HdlOp: MAP_ASSOCIATION
            list: ops
                HdlValueId: signed
        DEL list@@ops from PARAMETRIZATION
    DEL HdlOp@@PARAMETRIZATION from NHwApps


CommitId: 33e387ff92df07f8a334ab97a02becf08505a130
[csrng/rtl] Split cmd_sts into two registers
--- a/hw/ip/csrng/rtl/csrng_core.sv
+++ b/hw/ip/csrng/rtl/csrng_core.sv
@@ -39,20 +39,20 @@ module csrng_core import csrng_pkg::*; #(
 
   import csrng_reg_pkg::*;
 
-  localparam int unsigned NApps = NHwApps + 1;
-  localparam int unsigned AppCmdWidth = 32;
-  localparam int unsigned AppCmdFifoDepth = 2;
-  localparam int unsigned GenBitsWidth = 128;
-  localparam int unsigned Cmd = 3;
-  localparam int unsigned StateId = 4;
-  localparam int unsigned KeyLen = 256;
-  localparam int unsigned BlkLen = 128;
-  localparam int unsigned SeedLen = 384;
-  localparam int unsigned CtrLen = 32;
-  localparam int unsigned NBlkEncArbReqs = 2;
-  localparam int unsigned BlkEncArbWidth = KeyLen+BlkLen+StateId+Cmd;
-  localparam int unsigned NUpdateArbReqs = 2;
-  localparam int unsigned UpdateArbWidth = KeyLen+BlkLen+SeedLen+StateId+Cmd;
+  localparam int NApps = NHwApps + 1;
+  localparam int AppCmdWidth = 32;
+  localparam int AppCmdFifoDepth = 2;
+  localparam int GenBitsWidth = 128;
+  localparam int Cmd = 3;
+  localparam int StateId = 4;
+  localparam int KeyLen = 256;
+  localparam int BlkLen = 128;
+  localparam int SeedLen = 384;
+  localparam int CtrLen = 32;
+  localparam int NBlkEncArbReqs = 2;
+  localparam int BlkEncArbWidth = KeyLen+BlkLen+StateId+Cmd;
+  localparam int NUpdateArbReqs = 2;
+  localparam int UpdateArbWidth = KeyLen+BlkLen+SeedLen+StateId+Cmd;
 
   // signals
   // interrupt signals

ParseResult:
INS HdlIdDef@@NApps to objs

INS HdlIdDef@@AppCmdWidth to objs
HdlIdDef: AppCmdWidth
    HdlValueId: int
    HdlValueInt: 32
    HdlDirection: INTERNAL

INS HdlIdDef@@AppCmdFifoDepth to objs
HdlIdDef: AppCmdFifoDepth
    HdlValueId: int
    HdlValueInt: 2
    HdlDirection: INTERNAL

INS HdlIdDef@@GenBitsWidth to objs
HdlIdDef: GenBitsWidth
    HdlValueId: int
    HdlValueInt: 128
    HdlDirection: INTERNAL

INS HdlIdDef@@Cmd to objs
HdlIdDef: Cmd
    HdlValueId: int
    HdlValueInt: 3
    HdlDirection: INTERNAL

INS HdlIdDef@@StateId to objs
HdlIdDef: StateId
    HdlValueId: int
    HdlValueInt: 4
    HdlDirection: INTERNAL

INS HdlIdDef@@KeyLen to objs
HdlIdDef: KeyLen
    HdlValueId: int
    HdlValueInt: 256
    HdlDirection: INTERNAL

INS HdlIdDef@@BlkLen to objs
HdlIdDef: BlkLen
    HdlValueId: int
    HdlValueInt: 128
    HdlDirection: INTERNAL

INS HdlIdDef@@SeedLen to objs
HdlIdDef: SeedLen
    HdlValueId: int
    HdlValueInt: 384
    HdlDirection: INTERNAL

INS HdlIdDef@@CtrLen to objs
HdlIdDef: CtrLen
    HdlValueId: int
    HdlValueInt: 32
    HdlDirection: INTERNAL

INS HdlIdDef@@NBlkEncArbReqs to objs
HdlIdDef: NBlkEncArbReqs
    HdlValueId: int
    HdlValueInt: 2
    HdlDirection: INTERNAL

INS HdlIdDef@@NUpdateArbReqs to objs
HdlIdDef: NUpdateArbReqs
    HdlValueId: int
    HdlValueInt: 2
    HdlDirection: INTERNAL

UPD HdlIdDef@@NApps to NApps
    INS HdlValueId@@int to NApps
    INS HdlDirection@@INTERNAL to NApps

UPD HdlIdDef@@NApps to NApps
    MOV HdlOp@@ADD to NApps
    HdlOp: ADD
        list: ops
            HdlValueId: NHwApps
            HdlValueInt: 1
    DEL HdlOp@@PARAMETRIZATION from NApps
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: int
            HdlOp: MAP_ASSOCIATION
                list: ops
                    HdlValueId: signed
    DEL HdlDirection@@INTERNAL from NApps

UPD HdlIdDef@@BlkEncArbWidth to BlkEncArbWidth
    UPD HdlOp@@PARAMETRIZATION to PARAMETRIZATION
        MOV HdlValueId@@int to ops
        HdlValueId: int
        DEL HdlOp@@MAP_ASSOCIATION from ops
        HdlOp: MAP_ASSOCIATION
            list: ops
                HdlValueId: signed
        DEL list@@ops from PARAMETRIZATION
    DEL HdlOp@@PARAMETRIZATION from BlkEncArbWidth

UPD HdlIdDef@@UpdateArbWidth to UpdateArbWidth
    UPD HdlOp@@PARAMETRIZATION to PARAMETRIZATION
        MOV HdlValueId@@int to ops
        HdlValueId: int
        DEL HdlOp@@MAP_ASSOCIATION from ops
        HdlOp: MAP_ASSOCIATION
            list: ops
                HdlValueId: signed
        DEL list@@ops from PARAMETRIZATION
    DEL HdlOp@@PARAMETRIZATION from UpdateArbWidth

DEL HdlIdDef@@NApps from objs

DEL HdlIdDef@@AppCmdWidth from objs
HdlIdDef: AppCmdWidth
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: int
            HdlOp: MAP_ASSOCIATION
                list: ops
                    HdlValueId: signed
    HdlValueInt: 32
    HdlDirection: INTERNAL

DEL HdlIdDef@@AppCmdFifoDepth from objs
HdlIdDef: AppCmdFifoDepth
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: int
            HdlOp: MAP_ASSOCIATION
                list: ops
                    HdlValueId: signed
    HdlValueInt: 2
    HdlDirection: INTERNAL

DEL HdlIdDef@@GenBitsWidth from objs
HdlIdDef: GenBitsWidth
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: int
            HdlOp: MAP_ASSOCIATION
                list: ops
                    HdlValueId: signed
    HdlValueInt: 128
    HdlDirection: INTERNAL

DEL HdlIdDef@@Cmd from objs
HdlIdDef: Cmd
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: int
            HdlOp: MAP_ASSOCIATION
                list: ops
                    HdlValueId: signed
    HdlValueInt: 3
    HdlDirection: INTERNAL

DEL HdlIdDef@@StateId from objs
HdlIdDef: StateId
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: int
            HdlOp: MAP_ASSOCIATION
                list: ops
                    HdlValueId: signed
    HdlValueInt: 4
    HdlDirection: INTERNAL

DEL HdlIdDef@@KeyLen from objs
HdlIdDef: KeyLen
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: int
            HdlOp: MAP_ASSOCIATION
                list: ops
                    HdlValueId: signed
    HdlValueInt: 256
    HdlDirection: INTERNAL

DEL HdlIdDef@@BlkLen from objs
HdlIdDef: BlkLen
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: int
            HdlOp: MAP_ASSOCIATION
                list: ops
                    HdlValueId: signed
    HdlValueInt: 128
    HdlDirection: INTERNAL

DEL HdlIdDef@@SeedLen from objs
HdlIdDef: SeedLen
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: int
            HdlOp: MAP_ASSOCIATION
                list: ops
                    HdlValueId: signed
    HdlValueInt: 384
    HdlDirection: INTERNAL

DEL HdlIdDef@@CtrLen from objs
HdlIdDef: CtrLen
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: int
            HdlOp: MAP_ASSOCIATION
                list: ops
                    HdlValueId: signed
    HdlValueInt: 32
    HdlDirection: INTERNAL

DEL HdlIdDef@@NBlkEncArbReqs from objs
HdlIdDef: NBlkEncArbReqs
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: int
            HdlOp: MAP_ASSOCIATION
                list: ops
                    HdlValueId: signed
    HdlValueInt: 2
    HdlDirection: INTERNAL

DEL HdlIdDef@@NUpdateArbReqs from objs
HdlIdDef: NUpdateArbReqs
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: int
            HdlOp: MAP_ASSOCIATION
                list: ops
                    HdlValueId: signed
    HdlValueInt: 2
    HdlDirection: INTERNAL


CommitId: 33e387ff92df07f8a334ab97a02becf08505a130
[csrng/rtl] Split cmd_sts into two registers
--- a/hw/ip/csrng/rtl/csrng_core.sv
+++ b/hw/ip/csrng/rtl/csrng_core.sv
@@ -87,7 +87,6 @@ module csrng_core import csrng_pkg::*; #(
   logic                   cmd_entropy_req;
   logic                   cmd_entropy_avail;
   logic                   cmd_entropy_fips;
-  logic                   cmd_adata_avail;
   logic [SeedLen-1:0]     cmd_entropy;
 
   logic                   cmd_result_wr_req;

ParseResult:
DEL HdlIdDef@@cmd_adata_avail from objs
HdlIdDef: cmd_adata_avail
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL


CommitId: 33e387ff92df07f8a334ab97a02becf08505a130
[csrng/rtl] Split cmd_sts into two registers
--- a/hw/ip/csrng/rtl/csrng_core.sv
+++ b/hw/ip/csrng/rtl/csrng_core.sv
@@ -534,13 +533,11 @@ module csrng_core import csrng_pkg::*; #(
   assign cmd_stage_vld[NApps-1] = reg2hw.cmd_req.qe;
   assign cmd_stage_shid[NApps-1] = (NApps-1);
   assign cmd_stage_bus[NApps-1] = reg2hw.cmd_req.q;
-  assign hw2reg.cmd_sts.cmd_rdy.de = 1'b1;
-  assign hw2reg.cmd_sts.cmd_rdy.d = cmd_stage_rdy[NApps-1];
-  // cmd ack
-  assign hw2reg.cmd_sts.cmd_ack.de = cmd_stage_ack[NApps-1];
-  assign hw2reg.cmd_sts.cmd_ack.d = 1'b1;
-  assign hw2reg.cmd_sts.cmd_sts.de = cmd_stage_ack[NApps-1];
-  assign hw2reg.cmd_sts.cmd_sts.d = cmd_stage_ack_sts[NApps-1];
+  assign hw2reg.sw_cmd_sts.cmd_rdy.de = 1'b1;
+  assign hw2reg.sw_cmd_sts.cmd_rdy.d = cmd_stage_rdy[NApps-1];
+  // cmd ack sts
+  assign hw2reg.sw_cmd_sts.cmd_sts.de = cmd_stage_ack[NApps-1];
+  assign hw2reg.sw_cmd_sts.cmd_sts.d = cmd_stage_ack_sts[NApps-1];
   // genbits
   assign hw2reg.genbits_vld.genbits_vld.d = genbits_stage_vldo_sw;
   assign hw2reg.genbits_vld.genbits_fips.d = genbits_stage_fips_sw;

ParseResult:
MOV HdlStmAssign@@ to objs
HdlStmAssign
    HdlValueInt: 1
    HdlValueId: hw2reg

DEL HdlStmAssign@@ from objs
HdlStmAssign
    HdlOp: INDEX
        list: ops
            HdlValueId: cmd_stage_ack
            HdlOp: SUB
                list: ops
                    HdlValueId: NApps
                    HdlValueInt: 1
    HdlValueId: hw2reg


CommitId: 33e387ff92df07f8a334ab97a02becf08505a130
[csrng/rtl] Split cmd_sts into two registers
--- a/hw/ip/csrng/rtl/csrng_core.sv
+++ b/hw/ip/csrng/rtl/csrng_core.sv
@@ -672,7 +668,7 @@ module csrng_core import csrng_pkg::*; #(
 
 
   // interrupt for sw app interface only
-  assign event_cs_cmd_req_done = cmd_core_ack[NApps-1];
+  assign event_cs_cmd_req_done = cmd_stage_ack[NApps-1];
 
   // interrupt for entropy request
   assign event_cs_entropy_req = entropy_src_hw_if_o.es_req;

ParseResult:
UPD HdlStmAssign@@ to 
    UPD HdlOp@@INDEX to INDEX
        UPD HdlValueId@@cmd_core_ack to cmd_stage_ack


CommitId: 33e387ff92df07f8a334ab97a02becf08505a130
[csrng/rtl] Split cmd_sts into two registers
--- a/hw/ip/csrng/rtl/csrng_core.sv
+++ b/hw/ip/csrng/rtl/csrng_core.sv
@@ -1127,7 +1123,7 @@ module csrng_core import csrng_pkg::*; #(
          24'b0;
 
 
-  assign hw2reg.sum_sts.diag.de = ~cs_enable;
+  assign hw2reg.sum_sts.diag.de = !cs_enable;
   assign hw2reg.sum_sts.diag.d  =
          (reg2hw.regen)          || // not used
          (|reg2hw.genbits.q);       // not used
ParseResult:
UPD HdlStmAssign@@ to 
    UPD HdlOp@@NEG to NEG_LOG


CommitId: d2e1184308b9582551252d1135a126ea558a6ab8
Revert "[usbdev] Fixes for I/O modes and expand their tests"
--- a/hw/ip/usbdev/rtl/usbdev.sv
+++ b/hw/ip/usbdev/rtl/usbdev.sv
@@ -141,20 +141,13 @@ module usbdev (
 
 
   /////////////////////////////////
-  // USB RX after CDC & muxing   //
+  // USB IO after CDC & muxing   //
   /////////////////////////////////
   logic usb_rx_d;
-  logic usb_rx_dp;
-  logic usb_rx_dn;
-  /////////////////////////////////
-  // USB TX after CDC & muxing   //
-  /////////////////////////////////
+  logic usb_rx_se0;
   logic usb_tx_d;
   logic usb_tx_se0;
   logic usb_tx_oe;
-  /////////////////////////////////
-  // USB contol pins after CDC   //
-  /////////////////////////////////
   logic usb_pwr_sense;
   logic usb_pullup_en;
 

ParseResult:
UPD HdlIdDef@@usb_rx_dp to usb_rx_se0

DEL HdlIdDef@@usb_rx_dn from objs
HdlIdDef: usb_rx_dn
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL


CommitId: 1b5fa9f1ebf0a9520ef6ea6faf1f1a2397a349c1
[verible/style] This corrects several style linter warnings/errors
--- a/hw/ip/prim/rtl/prim_sram_arbiter.sv
+++ b/hw/ip/prim/rtl/prim_sram_arbiter.sv
@@ -42,7 +42,7 @@ module prim_sram_arbiter #(
     logic [SramDw-1:0] wdata;
   } req_t;
 
-  localparam ARB_DW = $bits(req_t);
+  localparam int ARB_DW = $bits(req_t);
 
   req_t req_packed [N];
 
ParseResult:
UPD HdlIdDef@@ARB_DW to ARB_DW
    INS HdlValueId@@int to ARB_DW


CommitId: 103b4cb2da07f5b826955691f28aa6b5a3bdd1ac
[flash_ctrl] Support the notion of a 'program-repair'.
--- a/hw/ip/flash_ctrl/rtl/flash_ctrl_erase.sv
+++ b/hw/ip/flash_ctrl/rtl/flash_ctrl_erase.sv
@@ -7,18 +7,18 @@
 
 module flash_ctrl_erase import flash_ctrl_pkg::*; (
   // Software Interface
-  input                     op_start_i,
-  input [EraseBitWidth-1:0] op_type_i,
-  input [BusAddrW-1:0]         op_addr_i,
-  output logic              op_done_o,
-  output logic              op_err_o,
+  input                       op_start_i,
+  input flash_erase_e         op_type_i,
+  input [BusAddrW-1:0]        op_addr_i,
+  output logic                op_done_o,
+  output logic                op_err_o,
 
   // Flash Macro Interface
-  output logic             flash_req_o,
+  output logic                flash_req_o,
   output logic [BusAddrW-1:0] flash_addr_o,
-  output logic [EraseBitWidth-1:0] flash_op_o,
-  input                    flash_done_i,
-  input                    flash_error_i
+  output flash_erase_e        flash_op_o,
+  input                       flash_done_i,
+  input                       flash_error_i
 );
 
   import flash_ctrl_pkg::*;
ParseResult:
UPD HdlIdDef@@op_type_i to op_type_i
    UPD HdlOp@@PARAMETRIZATION to PARAMETRIZATION
        UPD HdlOp@@DOWNTO to DOWNTO
            UPD HdlOp@@SUB to SUB
                UPD HdlValueId@@EraseBitWidth to flash_erase_e
                MOV HdlValueId@@EraseBitWidth to ops
                HdlValueId: EraseBitWidth
                DEL HdlValueInt@@1 from ops
                DEL list@@ops from SUB
            DEL HdlOp@@SUB from ops
            DEL HdlValueInt@@0 from ops
            DEL list@@ops from DOWNTO
        DEL HdlValueId@@wire from ops
        DEL HdlOp@@DOWNTO from ops
        DEL list@@ops from PARAMETRIZATION
    DEL HdlOp@@PARAMETRIZATION from op_type_i

UPD HdlIdDef@@flash_op_o to flash_op_o
    UPD HdlOp@@PARAMETRIZATION to PARAMETRIZATION
        UPD HdlOp@@DOWNTO to DOWNTO
            UPD HdlOp@@SUB to SUB
                UPD HdlValueId@@EraseBitWidth to flash_erase_e
                MOV HdlValueId@@EraseBitWidth to ops
                HdlValueId: EraseBitWidth
                DEL HdlValueInt@@1 from ops
                DEL list@@ops from SUB
            DEL HdlOp@@SUB from ops
            DEL HdlValueInt@@0 from ops
            DEL list@@ops from DOWNTO
        DEL HdlValueId@@logic from ops
        DEL HdlOp@@DOWNTO from ops
        DEL list@@ops from PARAMETRIZATION
    DEL HdlOp@@PARAMETRIZATION from flash_op_o


CommitId: f8f107273c0a98b8ba38a60ac9e1fe1ba376c468
[clkmgr] Allow software to control clock stepdown
--- a/hw/ip/clkmgr/rtl/clkmgr_byp.sv
+++ b/hw/ip/clkmgr/rtl/clkmgr_byp.sv
@@ -10,7 +10,8 @@ module clkmgr_byp import clkmgr_pkg::*; import lc_ctrl_pkg::lc_tx_t; # (
   input                   clk_i,
   input                   rst_ni,
   input  lc_tx_t          en_i,
-  input  lc_tx_t          byp_req,
+  input  lc_tx_t          byp_req_i,
+  input  lc_tx_t          step_down_req_i,
   output lc_tx_t          ast_clk_byp_req_o,
   input  lc_tx_t          ast_clk_byp_ack_i,
   input  lc_tx_t          lc_clk_byp_req_i,

ParseResult:
UPD HdlIdDef@@byp_req to byp_req_i

INS HdlIdDef@@step_down_req_i to ports
HdlIdDef: step_down_req_i
    HdlValueId: lc_tx_t
    HdlDirection: IN


CommitId: f8f107273c0a98b8ba38a60ac9e1fe1ba376c468
[clkmgr] Allow software to control clock stepdown
--- a/hw/ip/clkmgr/rtl/clkmgr_byp.sv
+++ b/hw/ip/clkmgr/rtl/clkmgr_byp.sv
@@ -48,13 +49,20 @@ module clkmgr_byp import clkmgr_pkg::*; import lc_ctrl_pkg::lc_tx_t; # (
    .lc_en_o(ast_clk_byp_req_o)
   );
 
+  lc_tx_t ast_clk_byp_ack;
   prim_lc_sync u_rcv (
     .clk_i,
     .rst_ni,
     .lc_en_i(ast_clk_byp_ack_i),
-    .lc_en_o(step_down_req_o)
+    .lc_en_o(ast_clk_byp_ack)
   );
 
+  // if switch request came from software, let software dictate whether to step down
+  assign step_down_req_o =
+    lc_clk_byp_req_i == lc_ctrl_pkg::On ? ast_clk_byp_ack :
+    reg_clk_byp_req == lc_ctrl_pkg::On  ? ast_clk_byp_ack & step_down_req_i :
+                                          lc_ctrl_pkg::Off;
+
   // only ack the lc_ctrl if it made a request.
   prim_lc_sender u_send (
    .clk_i,
ParseResult:
INS HdlIdDef@@ast_clk_byp_ack to objs
HdlIdDef: ast_clk_byp_ack
    HdlDirection: INTERNAL

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: TERNARY
        list: ops
            HdlOp: EQ
                list: ops
                    HdlValueId: lc_clk_byp_req_i
                    HdlOp: DOUBLE_COLON
                        list: ops
                            HdlValueId: lc_ctrl_pkg
                            HdlValueId: On
            HdlValueId: ast_clk_byp_ack
            HdlOp: TERNARY
                list: ops
                    HdlOp: EQ
                        list: ops
                            HdlValueId: reg_clk_byp_req
                            HdlOp: DOUBLE_COLON
                                list: ops
                                    HdlValueId: lc_ctrl_pkg
                                    HdlValueId: On
                    HdlOp: AND
                        list: ops
                            HdlValueId: ast_clk_byp_ack
                            HdlValueId: step_down_req_i
                    HdlOp: DOUBLE_COLON
                        list: ops
                            HdlValueId: lc_ctrl_pkg
                            HdlValueId: Off
    HdlValueId: step_down_req_o


CommitId: 248ed9e04c287d406bd0a65e7b89181ed89ce7e9
[usb] Fix lint errors and warnings
--- a/hw/ip/usbdev/rtl/usbdev.sv
+++ b/hw/ip/usbdev/rtl/usbdev.sv
@@ -87,9 +87,6 @@ module usbdev (
   localparam int RXFifoWidth = NBufWidth + (1+SizeWidth)         +  4  + 1;
   localparam int RXFifoDepth = 4;
 
-  // Number of endpoints
-  localparam int NEndpoints = usbdev_reg_pkg::NEndpoints;
-
   usbdev_reg2hw_t reg2hw;
   usbdev_hw2reg_t hw2reg;
 
ParseResult:
DEL HdlIdDef@@NEndpoints from objs
HdlIdDef: NEndpoints
    HdlValueId: int
    HdlOp: DOUBLE_COLON
        list: ops
            HdlValueId: usbdev_reg_pkg
            HdlValueId: NEndpoints
    HdlDirection: INTERNAL


CommitId: 1a1b94d01fd7022438e2bd651e48ad2d99e3abca
Update lowrisc_ibex to lowRISC/ibex@6b9165f
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_alu.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_alu.sv
@@ -7,7 +7,7 @@
  * Arithmetic logic unit
  */
 module ibex_alu #(
-  parameter bit RV32B = 1'b0
+  parameter ibex_pkg::rv32b_e RV32B = ibex_pkg::RV32BNone
 ) (
     input  ibex_pkg::alu_op_e operator_i,
     input  logic [31:0]       operand_a_i,

ParseResult:
UPD HdlIdDef@@RV32B to RV32B
    UPD HdlOp@@PARAMETRIZATION to DOUBLE_COLON
    UPD HdlOp@@PARAMETRIZATION to PARAMETRIZATION
        UPD HdlValueId@@bit to ibex_pkg
    DEL HdlValueInt@@0 from RV32B

UPD HdlIdDef@@RV32B to RV32B
    INS HdlOp@@DOUBLE_COLON to RV32B
    HdlOp: DOUBLE_COLON
        list: ops
            HdlValueId: ibex_pkg
            HdlValueId: RV32BNone
    UPD HdlOp@@DOUBLE_COLON to DOUBLE_COLON
        INS HdlValueId@@rv32b_e to ops


CommitId: 1a1b94d01fd7022438e2bd651e48ad2d99e3abca
Update lowrisc_ibex to lowRISC/ibex@6b9165f
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_alu.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_alu.sv
@@ -20,9 +20,9 @@ module ibex_alu #(
 
     input  logic              multdiv_sel_i,
 
-    input  logic [31:0]       imd_val_q_i,
-    output logic [31:0]       imd_val_d_o,
-    output logic              imd_val_we_o,
+    input  logic [31:0]       imd_val_q_i[2],
+    output logic [31:0]       imd_val_d_o[2],
+    output logic [1:0]        imd_val_we_o,
 
     output logic [31:0]       adder_result_o,
     output logic [33:0]       adder_result_ext_o,

ParseResult:
UPD HdlIdDef@@imd_val_q_i to imd_val_q_i
    INS HdlOp@@INDEX to imd_val_q_i
    UPD HdlOp@@INDEX to INDEX
        INS list@@ops to INDEX
        INS HdlValueInt@@2 to ops

UPD HdlIdDef@@imd_val_d_o to imd_val_d_o
    INS HdlOp@@INDEX to imd_val_d_o
    UPD HdlOp@@INDEX to INDEX
        INS list@@ops to INDEX
        INS HdlValueInt@@2 to ops

UPD HdlIdDef@@imd_val_q_i to imd_val_q_i
    MOV HdlOp@@PARAMETRIZATION to imd_val_q_i
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 31
                    HdlValueInt: 0

UPD HdlIdDef@@imd_val_d_o to imd_val_d_o
    MOV HdlOp@@PARAMETRIZATION to imd_val_d_o
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 31
                    HdlValueInt: 0

UPD HdlIdDef@@imd_val_we_o to imd_val_we_o
    UPD HdlOp@@PARAMETRIZATION to PARAMETRIZATION
        INS HdlOp@@DOWNTO to ops
        HdlOp: DOWNTO
            list: ops
                HdlValueInt: 1
                HdlValueInt: 0


CommitId: 1a1b94d01fd7022438e2bd651e48ad2d99e3abca
Update lowrisc_ibex to lowRISC/ibex@6b9165f
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_alu.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_alu.sv
@@ -241,16 +241,16 @@ module ibex_alu #(
   logic [31:0] bfp_result;
 
   // bfp: shares the shifter structure to compute bfp_mask << bfp_off
-  assign bfp_op = RV32B ? (operator_i == ALU_BFP) : 1'b0;
+  assign bfp_op = (RV32B != RV32BNone) ? (operator_i == ALU_BFP) : 1'b0;
   assign bfp_len = {~(|operand_b_i[27:24]), operand_b_i[27:24]}; // len = 0 encodes for len = 16
   assign bfp_off = operand_b_i[20:16];
-  assign bfp_mask = RV32B ? ~(32'hffff_ffff << bfp_len) : '0;
+  assign bfp_mask = (RV32B != RV32BNone) ? ~(32'hffff_ffff << bfp_len) : '0;
   for (genvar i=0; i<32; i++) begin : gen_rev_bfp_mask
     assign bfp_mask_rev[i] = bfp_mask[31-i];
   end
 
-  assign bfp_result =
-      RV32B ? (~shift_result & operand_a_i) | ((operand_b_i & bfp_mask) << bfp_off) : '0;
+  assign bfp_result =(RV32B != RV32BNone) ?
+      (~shift_result & operand_a_i) | ((operand_b_i & bfp_mask) << bfp_off) : '0;
 
   // bit shift_amt[5]: word swap bit: only considered for FSL/FSR.
   // if set, reverse operations in first and second cycle.

ParseResult:
UPD HdlStmAssign@@ to 
    UPD HdlOp@@TERNARY to TERNARY
        INS HdlOp@@NE to ops
        UPD HdlOp@@NE to NE
            INS list@@ops to NE
            INS HdlValueId@@RV32BNone to ops

UPD HdlStmAssign@@ to 
    UPD HdlOp@@TERNARY to TERNARY
        INS HdlOp@@NE to ops
        UPD HdlOp@@NE to NE
            INS list@@ops to NE
            INS HdlValueId@@RV32BNone to ops

UPD HdlStmAssign@@ to 
    UPD HdlOp@@TERNARY to TERNARY
        INS HdlOp@@NE to ops
        UPD HdlOp@@NE to NE
            INS list@@ops to NE
            INS HdlValueId@@RV32BNone to ops

UPD HdlStmAssign@@ to 
    UPD HdlOp@@TERNARY to TERNARY
        MOV HdlValueId@@RV32B to ops
        HdlValueId: RV32B

UPD HdlStmAssign@@ to 
    UPD HdlOp@@TERNARY to TERNARY
        MOV HdlValueId@@RV32B to ops
        HdlValueId: RV32B

UPD HdlStmAssign@@ to 
    UPD HdlOp@@TERNARY to TERNARY
        MOV HdlValueId@@RV32B to ops
        HdlValueId: RV32B


CommitId: 1a1b94d01fd7022438e2bd651e48ad2d99e3abca
Update lowrisc_ibex to lowRISC/ibex@6b9165f
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_alu.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_alu.sv
@@ -267,9 +267,8 @@ module ibex_alu #(
     end
   end
 
-
   // single-bit mode: shift
-  assign shift_sbmode = RV32B ?
+  assign shift_sbmode = (RV32B != RV32BNone) ?
       (operator_i == ALU_SBSET) | (operator_i == ALU_SBCLR) | (operator_i == ALU_SBINV) : 1'b0;
 
   // left shift if this is:

ParseResult:
UPD HdlStmAssign@@ to 
    UPD HdlOp@@TERNARY to TERNARY
        INS HdlOp@@NE to ops
        UPD HdlOp@@NE to NE
            INS list@@ops to NE
            INS HdlValueId@@RV32BNone to ops

UPD HdlStmAssign@@ to 
    UPD HdlOp@@TERNARY to TERNARY
        MOV HdlValueId@@RV32B to ops
        HdlValueId: RV32B


CommitId: 1a1b94d01fd7022438e2bd651e48ad2d99e3abca
Update lowrisc_ibex to lowRISC/ibex@6b9165f
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_alu.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_alu.sv
@@ -284,13 +283,13 @@ module ibex_alu #(
     unique case (operator_i)
       ALU_SLL: shift_left = 1'b1;
       ALU_SLO,
-      ALU_BFP: shift_left = RV32B ? 1'b1 : 1'b0;
-      ALU_ROL: shift_left = RV32B ? instr_first_cycle_i : 0;
-      ALU_ROR: shift_left = RV32B ? ~instr_first_cycle_i : 0;
-      ALU_FSL: shift_left =
-          RV32B ? (shift_amt[5] ? ~instr_first_cycle_i : instr_first_cycle_i) : 1'b0;
-      ALU_FSR: shift_left =
-          RV32B ? (shift_amt[5] ? instr_first_cycle_i : ~instr_first_cycle_i) : 1'b0;
+      ALU_BFP: shift_left = (RV32B != RV32BNone) ? 1'b1 : 1'b0;
+      ALU_ROL: shift_left = (RV32B != RV32BNone) ? instr_first_cycle_i : 0;
+      ALU_ROR: shift_left = (RV32B != RV32BNone) ? ~instr_first_cycle_i : 0;
+      ALU_FSL: shift_left = (RV32B != RV32BNone) ?
+        (shift_amt[5] ? ~instr_first_cycle_i : instr_first_cycle_i) : 1'b0;
+      ALU_FSR: shift_left = (RV32B != RV32BNone) ?
+          (shift_amt[5] ? instr_first_cycle_i : ~instr_first_cycle_i) : 1'b0;
       default: shift_left = 1'b0;
     endcase
     if (shift_sbmode) begin

ParseResult:
UPD HdlStmCase@@operator_i to operator_i
    UPD HdlOp@@ASSIGN to ASSIGN
        UPD HdlOp@@TERNARY to TERNARY
            INS HdlOp@@NE to ops
            UPD HdlOp@@NE to NE
                INS list@@ops to NE
                INS HdlValueId@@RV32BNone to ops
    UPD HdlOp@@ASSIGN to ASSIGN
        UPD HdlOp@@TERNARY to TERNARY
            INS HdlOp@@NE to ops
            UPD HdlOp@@NE to NE
                INS list@@ops to NE
                INS HdlValueId@@RV32BNone to ops
    UPD HdlOp@@ASSIGN to ASSIGN
        UPD HdlOp@@TERNARY to TERNARY
            INS HdlOp@@NE to ops
            UPD HdlOp@@NE to NE
                INS list@@ops to NE
                INS HdlValueId@@RV32BNone to ops
    UPD HdlOp@@ASSIGN to ASSIGN
        UPD HdlOp@@TERNARY to TERNARY
            INS HdlOp@@NE to ops
            UPD HdlOp@@NE to NE
                INS list@@ops to NE
                INS HdlValueId@@RV32BNone to ops
    UPD HdlOp@@ASSIGN to ASSIGN
        UPD HdlOp@@TERNARY to TERNARY
            INS HdlOp@@NE to ops
            UPD HdlOp@@NE to NE
                INS list@@ops to NE
                INS HdlValueId@@RV32BNone to ops
    UPD HdlOp@@ASSIGN to ASSIGN
        UPD HdlOp@@TERNARY to TERNARY
            INS HdlOp@@NE to ops
            UPD HdlOp@@NE to NE
                INS list@@ops to NE
                INS HdlValueId@@RV32BNone to ops

UPD HdlStmCase@@operator_i to operator_i
    UPD HdlOp@@ASSIGN to ASSIGN
        UPD HdlOp@@TERNARY to TERNARY
            MOV HdlValueId@@RV32B to ops
            HdlValueId: RV32B
    UPD HdlOp@@ASSIGN to ASSIGN
        UPD HdlOp@@TERNARY to TERNARY
            MOV HdlValueId@@RV32B to ops
            HdlValueId: RV32B
    UPD HdlOp@@ASSIGN to ASSIGN
        UPD HdlOp@@TERNARY to TERNARY
            MOV HdlValueId@@RV32B to ops
            HdlValueId: RV32B
    UPD HdlOp@@ASSIGN to ASSIGN
        UPD HdlOp@@TERNARY to TERNARY
            MOV HdlValueId@@RV32B to ops
            HdlValueId: RV32B
    UPD HdlOp@@ASSIGN to ASSIGN
        UPD HdlOp@@TERNARY to TERNARY
            MOV HdlValueId@@RV32B to ops
            HdlValueId: RV32B
    UPD HdlOp@@ASSIGN to ASSIGN
        UPD HdlOp@@TERNARY to TERNARY
            MOV HdlValueId@@RV32B to ops
            HdlValueId: RV32B


CommitId: 1a1b94d01fd7022438e2bd651e48ad2d99e3abca
Update lowrisc_ibex to lowRISC/ibex@6b9165f
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_alu.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_alu.sv
@@ -298,26 +297,26 @@ module ibex_alu #(
     end
   end
 
-  assign shift_arith      = (operator_i == ALU_SRA);
-  assign shift_ones       = RV32B ? (operator_i == ALU_SLO) | (operator_i == ALU_SRO) : 1'b0;
-  assign shift_funnel     = RV32B ? (operator_i == ALU_FSL) | (operator_i == ALU_FSR) : 1'b0;
+  assign shift_arith  = (operator_i == ALU_SRA);
+  assign shift_ones   =
+      (RV32B != RV32BNone) ? (operator_i == ALU_SLO) | (operator_i == ALU_SRO) : 1'b0;
+  assign shift_funnel =
+      (RV32B != RV32BNone) ? (operator_i == ALU_FSL) | (operator_i == ALU_FSR) : 1'b0;
 
   // shifter structure.
   always_comb begin
-
     // select shifter input
     // for bfp, sbmode and shift_left the corresponding bit-reversed input is chosen.
-    if (shift_sbmode) begin
-      shift_result = 32'h8000_0000; // rev(32'h1)
+    if (RV32B == RV32BNone) begin
+      shift_result = shift_left ? operand_a_rev : operand_a_i;
     end else begin
       unique case (1'b1)
         bfp_op:       shift_result = bfp_mask_rev;
-        shift_left:   shift_result = operand_a_rev;
-        default:      shift_result = operand_a_i;
+        shift_sbmode: shift_result = 32'h8000_0000;
+        default:      shift_result = shift_left ? operand_a_rev : operand_a_i;
       endcase
     end
 
-
     shift_result_ext =
         $signed({shift_ones | (shift_arith & shift_result[31]), shift_result}) >>> shift_amt[4:0];
 

ParseResult:
UPD HdlStmAssign@@ to 
    UPD HdlOp@@TERNARY to TERNARY
        INS HdlOp@@NE to ops
        UPD HdlOp@@NE to NE
            INS list@@ops to NE
            INS HdlValueId@@RV32BNone to ops

UPD HdlStmAssign@@ to 
    UPD HdlOp@@TERNARY to TERNARY
        INS HdlOp@@NE to ops
        UPD HdlOp@@NE to NE
            INS list@@ops to NE
            INS HdlValueId@@RV32BNone to ops

UPD HdlStmIf@@ to 
    INS HdlOp@@EQ to 
    UPD HdlOp@@EQ to EQ
        INS list@@ops to EQ
        INS HdlValueId@@RV32B to ops
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: shift_result
                    HdlOp: TERNARY
                        list: ops
                            HdlValueId: shift_left
                            HdlValueId: operand_a_rev
                            HdlValueId: operand_a_i

UPD HdlStmAssign@@ to 
    UPD HdlOp@@TERNARY to TERNARY
        MOV HdlValueId@@RV32B to ops
        HdlValueId: RV32B

UPD HdlStmAssign@@ to 
    UPD HdlOp@@TERNARY to TERNARY
        MOV HdlValueId@@RV32B to ops
        HdlValueId: RV32B

UPD HdlStmIf@@ to 
    UPD HdlValueId@@shift_sbmode to RV32BNone
    MOV HdlValueId@@shift_sbmode to 
    HdlValueId: shift_sbmode
    UPD HdlStmBlock@@SEQ to SEQ
        UPD list@@body to cases
        MOV list@@body to SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: shift_result
                    HdlValueInt: 80000000
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: shift_result
                HdlValueInt: 80000000

UPD HdlStmCase@@{'__class__': 'HdlValueInt', 'base': 2, 'bits': 1, 'val': '1'}  to {'__class__': 'HdlValueInt', 'base': 2, 'bits': 1, 'val': '1'} 
    MOV tuple@@ to cases
    tuple
        HdlValueId: bfp_op
        HdlOp: ASSIGN
            list: ops
                HdlValueId: shift_result
                HdlValueId: bfp_mask_rev
    MOV tuple@@ to cases
    tuple
        HdlValueId: shift_left
        HdlOp: ASSIGN
            list: ops
                HdlValueId: shift_result
                HdlValueId: operand_a_rev
    UPD HdlValueId@@shift_left to shift_sbmode
    UPD HdlOp@@ASSIGN to ASSIGN
        MOV HdlValueId@@operand_a_i to ops
        HdlValueId: operand_a_i
    DEL HdlOp@@ASSIGN from 
    HdlOp: ASSIGN
        list: ops
            HdlValueId: shift_result
            HdlValueId: operand_a_rev
    DEL list@@cases from {'__class__': 'HdlValueInt', 'base': 2, 'bits': 1, 'val': '1'} 

UPD HdlStmCase@@{'__class__': 'HdlValueInt', 'base': 2, 'bits': 1, 'val': '1'}  to {'__class__': 'HdlValueInt', 'base': 2, 'bits': 1, 'val': '1'} 
    UPD HdlOp@@ASSIGN to ASSIGN
        INS HdlOp@@TERNARY to ops
        UPD HdlOp@@TERNARY to TERNARY
            INS list@@ops to TERNARY
            INS HdlValueId@@shift_left to ops
            INS HdlValueId@@operand_a_rev to ops

UPD HdlStmCase@@operator_i to operator_i
    UPD HdlOp@@ASSIGN to ASSIGN
        UPD HdlOp@@TERNARY to TERNARY
            INS HdlOp@@NE to ops
            UPD HdlOp@@NE to NE
                INS list@@ops to NE
                INS HdlValueId@@RV32BNone to ops
    UPD HdlOp@@ASSIGN to ASSIGN
        UPD HdlOp@@TERNARY to TERNARY
            INS HdlOp@@NE to ops
            UPD HdlOp@@NE to NE
                INS list@@ops to NE
                INS HdlValueId@@RV32BNone to ops
    UPD HdlOp@@ASSIGN to ASSIGN
        UPD HdlOp@@TERNARY to TERNARY
            INS HdlOp@@NE to ops
            UPD HdlOp@@NE to NE
                INS list@@ops to NE
                INS HdlValueId@@RV32BNone to ops
    UPD HdlOp@@ASSIGN to ASSIGN
        UPD HdlOp@@TERNARY to TERNARY
            INS HdlOp@@NE to ops
            UPD HdlOp@@NE to NE
                INS list@@ops to NE
                INS HdlValueId@@RV32BNone to ops
    UPD HdlOp@@ASSIGN to ASSIGN
        UPD HdlOp@@TERNARY to TERNARY
            INS HdlOp@@NE to ops
            UPD HdlOp@@NE to NE
                INS list@@ops to NE
                INS HdlValueId@@RV32BNone to ops
    UPD HdlOp@@ASSIGN to ASSIGN
        UPD HdlOp@@TERNARY to TERNARY
            INS HdlOp@@NE to ops
            UPD HdlOp@@NE to NE
                INS list@@ops to NE
                INS HdlValueId@@RV32BNone to ops


CommitId: 1a1b94d01fd7022438e2bd651e48ad2d99e3abca
Update lowrisc_ibex to lowRISC/ibex@6b9165f
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_alu.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_alu.sv
@@ -350,8 +349,8 @@ module ibex_alu #(
       // Logic-with-negate OPs (RV32B Ops)
       ALU_XNOR,
       ALU_ORN,
-      ALU_ANDN: bwlogic_op_b_negate = RV32B ? 1'b1 : 1'b0;
-      ALU_CMIX: bwlogic_op_b_negate = RV32B ? ~instr_first_cycle_i : 1'b0;
+      ALU_ANDN: bwlogic_op_b_negate = (RV32B != RV32BNone) ? 1'b1 : 1'b0;
+      ALU_CMIX: bwlogic_op_b_negate = (RV32B != RV32BNone) ? ~instr_first_cycle_i : 1'b0;
       default:  bwlogic_op_b_negate = 1'b0;
     endcase
   end

ParseResult:
INS HdlStmProcess@@ to objs

UPD HdlStmProcess@@ to 
    INS HdlStmBlock@@SEQ to 
    INS HdlStmProcessTriggerConstrain@@COMB to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

INS HdlStmCase@@operator_i to body

UPD HdlStmCase@@operator_i to operator_i
    INS HdlStmCaseType@@CASE to operator_i
    INS HdlValueId@@operator_i to operator_i
    INS list@@cases to operator_i
    INS HdlStmCaseUniqConstrain@@UNIQUE to operator_i
    INS tuple@@ to cases
    tuple
        HdlValueId: ALU_XNOR
        HdlOp: ASSIGN
            list: ops
                HdlValueId: bwlogic_op_b_negate
                HdlOp: TERNARY
                    list: ops
                        HdlOp: NE
                            list: ops
                                HdlValueId: RV32B
                                HdlValueId: RV32BNone
                        HdlValueInt: 1
                        HdlValueInt: 0
    INS tuple@@ to cases
    tuple
        HdlValueId: ALU_ORN
        HdlOp: ASSIGN
            list: ops
                HdlValueId: bwlogic_op_b_negate
                HdlOp: TERNARY
                    list: ops
                        HdlOp: NE
                            list: ops
                                HdlValueId: RV32B
                                HdlValueId: RV32BNone
                        HdlValueInt: 1
                        HdlValueInt: 0
    INS tuple@@ to cases
    tuple
        HdlValueId: ALU_ANDN
        HdlOp: ASSIGN
            list: ops
                HdlValueId: bwlogic_op_b_negate
                HdlOp: TERNARY
                    list: ops
                        HdlOp: NE
                            list: ops
                                HdlValueId: RV32B
                                HdlValueId: RV32BNone
                        HdlValueInt: 1
                        HdlValueInt: 0
    INS tuple@@ to cases
    INS HdlValueId@@ALU_CMIX to 
    INS HdlOp@@ASSIGN to 
    UPD HdlOp@@ASSIGN to ASSIGN
        INS list@@ops to ASSIGN
        INS HdlValueId@@bwlogic_op_b_negate to ops
        INS HdlOp@@TERNARY to ops
        UPD HdlOp@@TERNARY to TERNARY
            INS list@@ops to TERNARY
            INS HdlOp@@NE to ops
            HdlOp: NE
                list: ops
                    HdlValueId: RV32B
                    HdlValueId: RV32BNone
            INS HdlValueInt@@0 to ops

UPD HdlStmCase@@operator_i to operator_i
    MOV HdlOp@@ASSIGN to operator_i
    HdlOp: ASSIGN
        list: ops
            HdlValueId: bwlogic_op_b_negate
            HdlValueInt: 0
    UPD HdlOp@@ASSIGN to ASSIGN
        UPD HdlOp@@TERNARY to TERNARY
            MOV HdlOp@@NEG to ops
            HdlOp: NEG
                list: ops
                    HdlValueId: instr_first_cycle_i
            DEL HdlValueId@@RV32B from ops
            DEL HdlValueInt@@0 from ops
            DEL list@@ops from TERNARY
        DEL HdlValueId@@bwlogic_op_b_negate from ops
        DEL HdlOp@@TERNARY from ops
        DEL list@@ops from ASSIGN
    DEL HdlStmCaseType@@CASE from operator_i
    DEL HdlValueId@@operator_i from operator_i
    DEL tuple@@ from cases
    tuple
        HdlValueId: ALU_XNOR
        HdlOp: ASSIGN
            list: ops
                HdlValueId: bwlogic_op_b_negate
                HdlOp: TERNARY
                    list: ops
                        HdlValueId: RV32B
                        HdlValueInt: 1
                        HdlValueInt: 0
    DEL tuple@@ from cases
    tuple
        HdlValueId: ALU_ORN
        HdlOp: ASSIGN
            list: ops
                HdlValueId: bwlogic_op_b_negate
                HdlOp: TERNARY
                    list: ops
                        HdlValueId: RV32B
                        HdlValueInt: 1
                        HdlValueInt: 0
    DEL tuple@@ from cases
    tuple
        HdlValueId: ALU_ANDN
        HdlOp: ASSIGN
            list: ops
                HdlValueId: bwlogic_op_b_negate
                HdlOp: TERNARY
                    list: ops
                        HdlValueId: RV32B
                        HdlValueInt: 1
                        HdlValueInt: 0
    DEL HdlValueId@@ALU_CMIX from 
    DEL HdlOp@@ASSIGN from 
    DEL tuple@@ from cases
    DEL list@@cases from operator_i
    DEL HdlStmCaseUniqConstrain@@UNIQUE from operator_i

DEL HdlStmCase@@operator_i from body

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL HdlStmProcessTriggerConstrain@@COMB from 

DEL HdlStmProcess@@ from objs


CommitId: 1a1b94d01fd7022438e2bd651e48ad2d99e3abca
Update lowrisc_ibex to lowRISC/ibex@6b9165f
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_alu.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_alu.sv
@@ -373,19 +372,19 @@ module ibex_alu #(
     endcase
   end
 
-  logic [31:0] shuffle_result;
-  logic [31:0] butterfly_result;
-  logic [31:0] invbutterfly_result;
-
-  logic [31:0] minmax_result;
   logic [5:0]  bitcnt_result;
+  logic [31:0] minmax_result;
   logic [31:0] pack_result;
   logic [31:0] sext_result;
-  logic [31:0] multicycle_result;
   logic [31:0] singlebit_result;
+  logic [31:0] rev_result;
+  logic [31:0] shuffle_result;
+  logic [31:0] butterfly_result;
+  logic [31:0] invbutterfly_result;
   logic [31:0] clmul_result;
+  logic [31:0] multicycle_result;
 
-  if (RV32B) begin : g_alu_rvb
+  if (RV32B != RV32BNone) begin : g_alu_rvb
 
     /////////////////
     // Bitcounting //

ParseResult:
MOV HdlIdDef@@minmax_result to objs
HdlIdDef: minmax_result
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 31
                    HdlValueInt: 0
    HdlDirection: INTERNAL

MOV HdlIdDef@@shuffle_result to objs
HdlIdDef: shuffle_result
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 31
                    HdlValueInt: 0
    HdlDirection: INTERNAL

MOV HdlIdDef@@butterfly_result to objs
HdlIdDef: butterfly_result
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 31
                    HdlValueInt: 0
    HdlDirection: INTERNAL

MOV HdlIdDef@@invbutterfly_result to objs
HdlIdDef: invbutterfly_result
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 31
                    HdlValueInt: 0
    HdlDirection: INTERNAL

MOV HdlIdDef@@multicycle_result to objs
HdlIdDef: multicycle_result
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 31
                    HdlValueInt: 0
    HdlDirection: INTERNAL

UPD HdlStmIf@@ to 
    DEL HdlValueId@@RV32B from 
    DEL list@@elifs from 


CommitId: 1a1b94d01fd7022438e2bd651e48ad2d99e3abca
Update lowrisc_ibex to lowRISC/ibex@6b9165f
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_alu.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_alu.sv
@@ -404,6 +403,8 @@ module ibex_alu #(
     logic [31:0] bitcnt_mask_op;
     logic [31:0] bitcnt_bit_mask;
     logic [ 5:0] bitcnt_partial [32];
+    logic [31:0] bitcnt_partial_lsb_d;
+    logic [31:0] bitcnt_partial_msb_d;
 
 
     assign bitcnt_ctz    = operator_i == ALU_CTZ;

ParseResult:
UPD HdlStmIf@@ to 
    INS HdlOp@@NE to 
    HdlOp: NE
        list: ops
            HdlValueId: RV32B
            HdlValueId: RV32BNone
    INS list@@elifs to 

UPD HdlStmIf@@ to 
    DEL HdlValueId@@RV32B from 
    DEL list@@elifs from 


CommitId: 1a1b94d01fd7022438e2bd651e48ad2d99e3abca
Update lowrisc_ibex to lowRISC/ibex@6b9165f
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_alu.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_alu.sv
@@ -427,6 +428,8 @@ module ibex_alu #(
       bitcnt_bit_mask = ~bitcnt_bit_mask;
     end
 
+    assign zbe_op = (operator_i == ALU_BEXT) | (operator_i == ALU_BDEP);
+
     always_comb begin
       case(1'b1)
         zbe_op:      bitcnt_bits = operand_b_i;

ParseResult:
UPD HdlStmIf@@ to 
    INS HdlOp@@NE to 
    HdlOp: NE
        list: ops
            HdlValueId: RV32B
            HdlValueId: RV32BNone
    INS list@@elifs to 

UPD HdlStmIf@@ to 
    DEL HdlValueId@@RV32B from 
    DEL list@@elifs from 


CommitId: 1a1b94d01fd7022438e2bd651e48ad2d99e3abca
Update lowrisc_ibex to lowRISC/ibex@6b9165f
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_alu.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_alu.sv
@@ -1130,18 +1223,16 @@ module ibex_alu #(
       // Cyclic Redundancy Checks (RV32B)
       ALU_CRC32_W, ALU_CRC32C_W,
       ALU_CRC32_H, ALU_CRC32C_H,
-      ALU_CRC32_B, ALU_CRC32C_B: result_o = multicycle_result;
+      ALU_CRC32_B, ALU_CRC32C_B,
+      // Bit Extract / Deposit (RV32B)
+      ALU_BEXT, ALU_BDEP: result_o = multicycle_result;
 
       // Single-Bit Bitmanip Operations (RV32B)
       ALU_SBSET, ALU_SBCLR,
       ALU_SBINV, ALU_SBEXT: result_o = singlebit_result;
 
-      // Bit Extract / Deposit (RV32B)
-      ALU_BDEP:  result_o = butterfly_result;
-      ALU_BEXT:  result_o = invbutterfly_result;
-
       // General Reverse / Or-combine (RV32B)
-      ALU_GREV, ALU_GORC: result_o = butterfly_result;
+      ALU_GREV, ALU_GORC: result_o = rev_result;
 
       // Bit Field Place (RV32B)
       ALU_BFP: result_o = bfp_result;
ParseResult:
UPD HdlStmIf@@ to 
    INS HdlOp@@NE to 
    HdlOp: NE
        list: ops
            HdlValueId: RV32B
            HdlValueId: RV32BNone
    INS list@@elifs to 

UPD HdlStmCase@@operator_i to operator_i
    INS tuple@@ to cases
    tuple
        HdlValueId: ALU_BEXT
        HdlStmBlock: SEQ
            list: body
                HdlStmIf
                    HdlOp: EQ
                        list: ops
                            HdlValueId: RV32B
                            HdlValueId: RV32BFull
                    HdlStmBlock: SEQ
                        list: body
                            HdlOp: ASSIGN
                                list: ops
                                    HdlValueId: multicycle_result
                                    HdlOp: TERNARY
                                        list: ops
                                            HdlOp: EQ
                                                list: ops
                                                    HdlValueId: operator_i
                                                    HdlValueId: ALU_BDEP
                                            HdlValueId: butterfly_result
                                            HdlValueId: invbutterfly_result
                            HdlOp: ASSIGN
                                list: ops
                                    HdlValueId: imd_val_d_o
                                    list
                                        HdlValueId: bitcnt_partial_lsb_d
                                        HdlValueId: bitcnt_partial_msb_d
                            HdlStmIf
                                HdlValueId: instr_first_cycle_i
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: imd_val_we_o
                                                HdlValueInt: 11
                                list: elifs
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: imd_val_we_o
                                                HdlValueInt: 00
                    list: elifs
                    HdlStmBlock: SEQ
                        list: body
                            HdlOp: ASSIGN
                                list: ops
                                    HdlValueId: imd_val_d_o
                                    list
                                        HdlValueId: operand_a_i
                                        HdlValueInt: 0
                            HdlOp: ASSIGN
                                list: ops
                                    HdlValueId: imd_val_we_o
                                    HdlValueInt: 00
                            HdlOp: ASSIGN
                                list: ops
                                    HdlValueId: multicycle_result
                                    HdlValueInt: 0
    INS tuple@@ to cases
    tuple
        HdlValueId: ALU_BDEP
        HdlStmBlock: SEQ
            list: body
                HdlStmIf
                    HdlOp: EQ
                        list: ops
                            HdlValueId: RV32B
                            HdlValueId: RV32BFull
                    HdlStmBlock: SEQ
                        list: body
                            HdlOp: ASSIGN
                                list: ops
                                    HdlValueId: multicycle_result
                                    HdlOp: TERNARY
                                        list: ops
                                            HdlOp: EQ
                                                list: ops
                                                    HdlValueId: operator_i
                                                    HdlValueId: ALU_BDEP
                                            HdlValueId: butterfly_result
                                            HdlValueId: invbutterfly_result
                            HdlOp: ASSIGN
                                list: ops
                                    HdlValueId: imd_val_d_o
                                    list
                                        HdlValueId: bitcnt_partial_lsb_d
                                        HdlValueId: bitcnt_partial_msb_d
                            HdlStmIf
                                HdlValueId: instr_first_cycle_i
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: imd_val_we_o
                                                HdlValueInt: 11
                                list: elifs
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: imd_val_we_o
                                                HdlValueInt: 00
                    list: elifs
                    HdlStmBlock: SEQ
                        list: body
                            HdlOp: ASSIGN
                                list: ops
                                    HdlValueId: imd_val_d_o
                                    list
                                        HdlValueId: operand_a_i
                                        HdlValueInt: 0
                            HdlOp: ASSIGN
                                list: ops
                                    HdlValueId: imd_val_we_o
                                    HdlValueInt: 00
                            HdlOp: ASSIGN
                                list: ops
                                    HdlValueId: multicycle_result
                                    HdlValueInt: 0
    INS HdlStmBlock@@SEQ to 
    INS HdlStmBlock@@SEQ to 
    INS HdlStmBlock@@SEQ to 
    INS HdlStmBlock@@SEQ to 
    INS HdlStmBlock@@SEQ to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: imd_val_d_o
                list
                    HdlValueId: operand_a_i
                    HdlValueInt: 0
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@TERNARY to TERNARY
                INS HdlOp@@INDEX to ops
                UPD HdlOp@@INDEX to INDEX
                    INS list@@ops to INDEX
                    INS HdlValueInt@@0 to ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS list@@ to ops
            INS HdlValueInt@@0 to 
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlValueInt@@0 to ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS list@@ to ops
            INS HdlValueInt@@0 to 
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@OR to OR
                INS HdlOp@@INDEX to ops
                UPD HdlOp@@INDEX to INDEX
                    INS list@@ops to INDEX
                    INS HdlValueInt@@0 to ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS list@@ to ops
            INS HdlValueInt@@0 to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS list@@ to ops
            INS HdlValueInt@@0 to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS list@@ to ops
            INS HdlValueInt@@0 to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS list@@ to ops
            INS HdlValueInt@@0 to 

UPD HdlStmCase@@operator_i to operator_i
    UPD HdlOp@@ASSIGN to ASSIGN
        UPD HdlValueId@@butterfly_result to rev_result
    UPD HdlOp@@ASSIGN to ASSIGN
        UPD HdlValueId@@butterfly_result to rev_result
    DEL tuple@@ from cases
    tuple
        HdlValueId: ALU_BDEP
        HdlOp: ASSIGN
            list: ops
                HdlValueId: result_o
                HdlValueId: butterfly_result
    DEL tuple@@ from cases
    tuple
        HdlValueId: ALU_BEXT
        HdlOp: ASSIGN
            list: ops
                HdlValueId: result_o
                HdlValueId: invbutterfly_result

UPD HdlStmIf@@ to 
    INS list@@elifs to 
    INS HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: imd_val_d_o
                    list
                        HdlValueId: operand_a_i
                        HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: imd_val_we_o
                    HdlValueInt: 00
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: multicycle_result
                    HdlValueInt: 0
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: imd_val_d_o
                list
                    HdlValueId: clmul_result_rev
                    HdlValueInt: 0

UPD HdlStmIf@@ to 
    INS list@@elifs to 
    INS HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: imd_val_d_o
                    list
                        HdlValueId: operand_a_i
                        HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: imd_val_we_o
                    HdlValueInt: 00
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: multicycle_result
                    HdlValueInt: 0
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: imd_val_d_o
                list
                    HdlValueId: clmul_result_rev
                    HdlValueInt: 0

UPD HdlStmIf@@ to 
    INS list@@elifs to 
    INS HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: imd_val_d_o
                    list
                        HdlValueId: operand_a_i
                        HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: imd_val_we_o
                    HdlValueInt: 00
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: multicycle_result
                    HdlValueInt: 0
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: imd_val_d_o
                list
                    HdlValueId: clmul_result_rev
                    HdlValueInt: 0

UPD HdlStmIf@@ to 
    INS list@@elifs to 
    INS HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: imd_val_d_o
                    list
                        HdlValueId: operand_a_i
                        HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: imd_val_we_o
                    HdlValueInt: 00
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: multicycle_result
                    HdlValueInt: 0
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: imd_val_d_o
                list
                    HdlValueId: clmul_result_rev
                    HdlValueInt: 0

UPD HdlStmIf@@ to 
    INS list@@elifs to 
    INS HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: imd_val_d_o
                    list
                        HdlValueId: operand_a_i
                        HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: imd_val_we_o
                    HdlValueInt: 00
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: multicycle_result
                    HdlValueInt: 0
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: imd_val_d_o
                list
                    HdlValueId: clmul_result_rev
                    HdlValueInt: 0

UPD HdlStmIf@@ to 
    INS list@@elifs to 
    INS HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: imd_val_d_o
                    list
                        HdlValueId: operand_a_i
                        HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: imd_val_we_o
                    HdlValueInt: 00
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: multicycle_result
                    HdlValueInt: 0
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: imd_val_d_o
                list
                    HdlValueId: clmul_result_rev
                    HdlValueInt: 0

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@TERNARY to TERNARY
                INS HdlOp@@INDEX to ops
                UPD HdlOp@@INDEX to INDEX
                    INS list@@ops to INDEX
                    INS HdlValueInt@@0 to ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@OR to OR
                INS HdlOp@@INDEX to ops
                UPD HdlOp@@INDEX to INDEX
                    INS list@@ops to INDEX
                    INS HdlValueInt@@0 to ops

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@TERNARY to TERNARY
                INS HdlOp@@INDEX to ops
                UPD HdlOp@@INDEX to INDEX
                    INS list@@ops to INDEX
                    INS HdlValueInt@@0 to ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@OR to OR
                INS HdlOp@@INDEX to ops
                UPD HdlOp@@INDEX to INDEX
                    INS list@@ops to INDEX
                    INS HdlValueInt@@0 to ops

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@TERNARY to TERNARY
                INS HdlOp@@INDEX to ops
                UPD HdlOp@@INDEX to INDEX
                    INS list@@ops to INDEX
                    INS HdlValueInt@@0 to ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@OR to OR
                INS HdlOp@@INDEX to ops
                UPD HdlOp@@INDEX to INDEX
                    INS list@@ops to INDEX
                    INS HdlValueInt@@0 to ops

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@TERNARY to TERNARY
                INS HdlOp@@INDEX to ops
                UPD HdlOp@@INDEX to INDEX
                    INS list@@ops to INDEX
                    INS HdlValueInt@@0 to ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@OR to OR
                INS HdlOp@@INDEX to ops
                UPD HdlOp@@INDEX to INDEX
                    INS list@@ops to INDEX
                    INS HdlValueInt@@0 to ops


CommitId: d593f3cd5c12a7f419dff4eecf7b05ccbdb5079c
[secded_gen] Fix template bug that results in lint error
--- a/hw/ip/prim/rtl/prim_secded_hamming_72_64_dec.sv
+++ b/hw/ip/prim/rtl/prim_secded_hamming_72_64_dec.sv
@@ -12,7 +12,6 @@ module prim_secded_hamming_72_64_dec (
   output logic [1:0] err_o
 );
 
-  logic single_error;
 
   // Syndrome calculation
   assign syndrome_o[0] = ^(in & 72'h01AB55555556AAAD5B);
ParseResult:
DEL HdlIdDef@@single_error from objs
HdlIdDef: single_error
    HdlDirection: INTERNAL


CommitId: 1b5fa9f1ebf0a9520ef6ea6faf1f1a2397a349c1
[verible/style] This corrects several style linter warnings/errors
--- a/hw/ip/prim/rtl/prim_arbiter.sv
+++ b/hw/ip/prim/rtl/prim_arbiter.sv
@@ -13,8 +13,8 @@
 // is accepted.
 
 module prim_arbiter #(
-  parameter N   = 4,
-  parameter DW  = 32
+  parameter int N   = 4,
+  parameter int DW  = 32
 ) (
   input clk_i,
   input rst_ni,
ParseResult:
UPD HdlIdDef@@N to N
    INS HdlValueId@@int to N

UPD HdlIdDef@@DW to DW
    INS HdlValueId@@int to DW


CommitId: a17530f0a51524486c59b0c8d5295d6ded247ec2
[usbdev] USB device update from ETH repo
--- a/hw/ip/usb_fs_nb_pe/rtl/usb_fs_nb_out_pe.sv
+++ b/hw/ip/usb_fs_nb_pe/rtl/usb_fs_nb_out_pe.sv
@@ -25,16 +25,19 @@ module usb_fs_nb_out_pe #(
   ////////////////////////
   // endpoint interface //
   ////////////////////////
-  output logic [3:0]           out_ep_current_o, // Other signals address to this ep
-  output logic                 out_ep_data_put_o, // put the data (put addr advances after)
-  output logic [PktW - 1:0]    out_ep_put_addr_o, // Offset to put data (0..pktlen)
-  output logic [7:0]           out_ep_data_o,
-  output logic                 out_ep_newpkt_o, // new packed, current was set
-  output logic                 out_ep_acked_o, // good termination, device has acked
-  output logic                 out_ep_rollback_o, // bad termination, discard data
-  output logic [NumOutEps-1:0] out_ep_setup_o,
-  input [NumOutEps-1:0]        out_ep_full_i, // Cannot accept data
-  input [NumOutEps-1:0]        out_ep_stall_i, // Stalled
+  output logic [3:0]             out_ep_current_o, // Other signals address to this ep, this signal will be stable for several cycles
+  output logic                   out_ep_data_put_o, // put the data (put addr advances after)
+  output logic [PktW - 1:0]      out_ep_put_addr_o, // Offset to put data (0..pktlen)
+  output logic [7:0]             out_ep_data_o,
+  output logic                   out_ep_newpkt_o, // new packed, current was set
+  output logic                   out_ep_acked_o, // good termination, device has acked
+  output logic                   out_ep_rollback_o, // bad termination, discard data
+  output logic [NumOutEps-1:0]   out_ep_setup_o,
+  input [NumOutEps-1:0]          out_ep_full_i, // Cannot accept data
+  input [NumOutEps-1:0]          out_ep_stall_i, // Stalled
+  input logic  [NumOutEps-1:0]   out_ep_iso_i, // Configure endpoint in isochronous mode
+
+  input logic  [NumOutEps-1:0]   data_toggle_clear_i, // Clear the data toggles for an EP
 
   /////////////
   // rx path //

ParseResult:
INS HdlIdDef@@out_ep_iso_i to ports
HdlIdDef: out_ep_iso_i
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlOp: SUB
                        list: ops
                            HdlValueId: NumOutEps
                            HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: IN

INS HdlIdDef@@data_toggle_clear_i to ports
HdlIdDef: data_toggle_clear_i
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlOp: SUB
                        list: ops
                            HdlValueId: NumOutEps
                            HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: IN


CommitId: a17530f0a51524486c59b0c8d5295d6ded247ec2
[usbdev] USB device update from ETH repo
--- a/hw/ip/usb_fs_nb_pe/rtl/usb_fs_nb_out_pe.sv
+++ b/hw/ip/usb_fs_nb_pe/rtl/usb_fs_nb_out_pe.sv
@@ -92,7 +96,7 @@ module usb_fs_nb_out_pe #(
   logic nak_out_transfer;
 
   // data toggle state
-  logic [NumOutEps - 1:0] data_toggle;
+  logic [NumOutEps - 1:0] data_toggle_q, data_toggle_d;
 
   // Make widths work
   logic [OutEpW - 1 : 0]    out_ep_index;

ParseResult:
INS HdlIdDef@@data_toggle_q to objs
HdlIdDef: data_toggle_q
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlOp: SUB
                        list: ops
                            HdlValueId: NumOutEps
                            HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: INTERNAL

UPD HdlIdDef@@data_toggle to data_toggle_d


CommitId: a17530f0a51524486c59b0c8d5295d6ded247ec2
[usbdev] USB device update from ETH repo
--- a/hw/ip/usb_fs_nb_pe/rtl/usb_fs_nb_out_pe.sv
+++ b/hw/ip/usb_fs_nb_pe/rtl/usb_fs_nb_out_pe.sv
@@ -103,6 +107,9 @@ module usb_fs_nb_out_pe #(
   logic invalid_packet_received, data_packet_received, non_data_packet_received;
   logic bad_data_toggle;
 
+  // 1: If the current transfer is a SETUP, 0: OUT
+  logic current_xfer_setup_q;
+
   // More syntax so can compare with enum
   usb_pid_type_e rx_pid_type;
   usb_pid_e      rx_pid;

ParseResult:
INS HdlIdDef@@current_xfer_setup_q to objs
HdlIdDef: current_xfer_setup_q
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL


CommitId: a17530f0a51524486c59b0c8d5295d6ded247ec2
[usbdev] USB device update from ETH repo
--- a/hw/ip/usb_fs_nb_pe/rtl/usb_fs_nb_out_pe.sv
+++ b/hw/ip/usb_fs_nb_pe/rtl/usb_fs_nb_out_pe.sv
@@ -141,7 +148,7 @@ module usb_fs_nb_out_pe #(
 
   assign bad_data_toggle =
     data_packet_received &&
-    rx_pid_i[3] != data_toggle[rx_endp_i[0 +: OutEpW]]; // lint: rx_endp_i range was checked
+    rx_pid_i[3] != data_toggle_q[rx_endp_i[0 +: OutEpW]]; // lint: rx_endp_i range was checked
 
 
   always_ff @(posedge clk_48mhz_i or negedge rst_ni) begin

ParseResult:
UPD HdlStmAssign@@ to 
    UPD HdlOp@@AND_LOG to AND_LOG
        UPD HdlOp@@NE to NE
            UPD HdlOp@@INDEX to INDEX
                UPD HdlValueId@@data_toggle to data_toggle_q


CommitId: a17530f0a51524486c59b0c8d5295d6ded247ec2
[usbdev] USB device update from ETH repo
--- a/hw/ip/usb_fs_nb_pe/rtl/usb_fs_nb_out_pe.sv
+++ b/hw/ip/usb_fs_nb_pe/rtl/usb_fs_nb_out_pe.sv
@@ -198,7 +205,10 @@ module usb_fs_nb_out_pe #(
       end
 
       StRcvdDataStart: begin
-        if (bad_data_toggle) begin
+        if (out_ep_iso_i[out_ep_index] && data_packet_received) begin
+          // ISO endpoint: Don't send a handshake, ignore toggle
+          out_xfr_state_next = StRcvdIsoDataEnd;
+        end else if (bad_data_toggle) begin
           out_xfr_state_next = StIdle;
           rollback_data = 1'b1;
           tx_pkt_start_o = 1'b1;

ParseResult:
UPD HdlStmCase@@out_xfr_state to out_xfr_state
    INS HdlOp@@ASSIGN to out_xfr_state
    HdlOp: ASSIGN
        list: ops
            HdlValueId: out_xfr_state_next
            HdlValueId: StIdle
    INS tuple@@ to cases
    INS HdlValueId@@StRcvdIsoDataEnd to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: out_xfr_state_next
                HdlValueId: StIdle

UPD HdlStmIf@@ to 
    MOV HdlValueId@@bad_data_toggle to 
    HdlValueId: bad_data_toggle
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: out_xfr_state_next
                    HdlValueId: StIdle
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: rollback_data
                    HdlValueInt: 1
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: tx_pkt_start_o
                    HdlValueInt: 1
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: tx_pid_o
                    HdlValueId: UsbPidAck


CommitId: a17530f0a51524486c59b0c8d5295d6ded247ec2
[usbdev] USB device update from ETH repo
--- a/hw/ip/usb_fs_nb_pe/rtl/usb_fs_nb_out_pe.sv
+++ b/hw/ip/usb_fs_nb_pe/rtl/usb_fs_nb_out_pe.sv
@@ -218,7 +228,8 @@ module usb_fs_nb_out_pe #(
         out_xfr_state_next = StIdle;
         tx_pkt_start_o = 1'b1;
 
-        if (out_ep_stall_i[out_ep_index]) begin // lint: out_ep_index range was checked
+        if (out_ep_stall_i[out_ep_index] && !current_xfer_setup_q) begin // lint: out_ep_index range was checked
+          // We only send STALL for OUT transfers, not for SETUP transfers
           tx_pid_o = {UsbPidStall}; // STALL
         end else if (nak_out_transfer) begin
           tx_pid_o = {UsbPidNak}; // NAK -- the endpoint could not accept the data at the moment

ParseResult:
UPD HdlStmCase@@out_xfr_state to out_xfr_state
    INS HdlOp@@ASSIGN to out_xfr_state
    HdlOp: ASSIGN
        list: ops
            HdlValueId: out_xfr_state_next
            HdlValueId: StIdle
    INS tuple@@ to cases
    INS HdlValueId@@StRcvdIsoDataEnd to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: out_xfr_state_next
                HdlValueId: StIdle

UPD HdlStmIf@@ to 
    INS HdlOp@@AND_LOG to 
    HdlOp: AND_LOG
        list: ops
            HdlOp: INDEX
                list: ops
                    HdlValueId: out_ep_iso_i
                    HdlValueId: out_ep_index
            HdlValueId: data_packet_received
    INS HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: out_xfr_state_next
                    HdlValueId: StRcvdIsoDataEnd
    INS tuple@@ to elifs

UPD HdlStmIf@@ to 
    MOV HdlOp@@INDEX to 
    HdlOp: INDEX
        list: ops
            HdlValueId: out_ep_stall_i
            HdlValueId: out_ep_index


CommitId: a17530f0a51524486c59b0c8d5295d6ded247ec2
[usbdev] USB device update from ETH repo
--- a/hw/ip/usb_fs_nb_pe/rtl/usb_fs_nb_out_pe.sv
+++ b/hw/ip/usb_fs_nb_pe/rtl/usb_fs_nb_out_pe.sv
@@ -230,10 +241,25 @@ module usb_fs_nb_out_pe #(
         end
       end
 
-      // Add default if state space no longer exactly fits in bitwidth
-      // default begin
-      //  out_xfr_state_next = StIdle;
-      // end
+      StRcvdIsoDataEnd: begin
+        out_xfr_state_next = StIdle;
+
+        if (out_ep_stall_i[out_ep_index] && !current_xfer_setup_q) begin
+          // Send a STALL (something bad happened and the host needs to resolve it)
+          tx_pkt_start_o = 1'b1;
+          tx_pid_o       = {UsbPidStall}; // STALL
+        end else if (nak_out_transfer) begin
+          // We got a valid packet, but can't store it (error that the software must resolve)
+          rollback_data = 1'b1;
+        end else begin
+          // We got a valid packet, but we don't send an ACK on the bus
+          new_pkt_end    = 1'b1;
+          out_ep_acked_o = 1'b1;          
+        end
+
+      end
+
+      default: out_xfr_state_next = StIdle;
     endcase
   end
 

ParseResult:
UPD HdlStmCase@@out_xfr_state to out_xfr_state
    INS HdlOp@@ASSIGN to out_xfr_state
    HdlOp: ASSIGN
        list: ops
            HdlValueId: out_xfr_state_next
            HdlValueId: StIdle
    INS tuple@@ to cases
    INS HdlValueId@@StRcvdIsoDataEnd to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: out_xfr_state_next
                HdlValueId: StIdle

INS HdlStmIf@@ to body

UPD HdlStmIf@@ to 
    INS HdlOp@@AND_LOG to 
    HdlOp: AND_LOG
        list: ops
            HdlOp: INDEX
                list: ops
                    HdlValueId: out_ep_stall_i
                    HdlValueId: out_ep_index
            HdlOp: NEG_LOG
                list: ops
                    HdlValueId: current_xfer_setup_q

UPD HdlStmIf@@ to 
    MOV HdlOp@@INDEX to 
    HdlOp: INDEX
        list: ops
            HdlValueId: out_ep_stall_i
            HdlValueId: out_ep_index


CommitId: e4c3605134b6dedbd3b5e5a32ad8f63de5b8a547
[lint] Fix lint warning
--- a/hw/ip/csrng/rtl/csrng_ctr_drbg_gen.sv
+++ b/hw/ip/csrng/rtl/csrng_ctr_drbg_gen.sv
@@ -76,16 +76,16 @@ module csrng_ctr_drbg_gen import csrng_pkg::*; #(
   output logic [2:0]         ctr_drbg_gen_sfifo_ggenbits_err_o
 );
 
-  localparam GenreqFifoDepth = 1;
-  localparam GenreqFifoWidth = KeyLen+BlkLen+CtrLen+1+SeedLen+StateId+Cmd;
-  localparam BlkEncAckFifoDepth = 1;
-  localparam BlkEncAckFifoWidth = BlkLen+StateId+Cmd;
-  localparam AdstageFifoDepth = 1;
-  localparam AdstageFifoWidth = KeyLen+BlkLen+CtrLen+1+SeedLen;
-  localparam RCStageFifoDepth = 1;
-  localparam RCStageFifoWidth = BlkLen+CtrLen+1;
-  localparam GenbitsFifoDepth = 1;
-  localparam GenbitsFifoWidth = 1+BlkLen+KeyLen+BlkLen+CtrLen+StateId+Cmd;
+  localparam int unsigned GenreqFifoDepth = 1;
+  localparam int unsigned GenreqFifoWidth = KeyLen+BlkLen+CtrLen+1+SeedLen+StateId+Cmd;
+  localparam int unsigned BlkEncAckFifoDepth = 1;
+  localparam int unsigned BlkEncAckFifoWidth = BlkLen+StateId+Cmd;
+  localparam int unsigned AdstageFifoDepth = 1;
+  localparam int unsigned AdstageFifoWidth = KeyLen+BlkLen+CtrLen+1+SeedLen;
+  localparam int unsigned RCStageFifoDepth = 1;
+  localparam int unsigned RCStageFifoWidth = BlkLen+CtrLen+1;
+  localparam int unsigned GenbitsFifoDepth = 1;
+  localparam int unsigned GenbitsFifoWidth = 1+BlkLen+KeyLen+BlkLen+CtrLen+StateId+Cmd;
 
   // signals
   logic [Cmd-1:0]     genreq_ccmd;
ParseResult:
INS HdlIdDef@@GenreqFifoDepth to objs
HdlIdDef: GenreqFifoDepth
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: int
            HdlOp: MAP_ASSOCIATION
                list: ops
                    HdlValueId: signed
    HdlValueInt: 1
    HdlDirection: INTERNAL

INS HdlIdDef@@BlkEncAckFifoDepth to objs
HdlIdDef: BlkEncAckFifoDepth
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: int
            HdlOp: MAP_ASSOCIATION
                list: ops
                    HdlValueId: signed
    HdlValueInt: 1
    HdlDirection: INTERNAL

INS HdlIdDef@@AdstageFifoDepth to objs
HdlIdDef: AdstageFifoDepth
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: int
            HdlOp: MAP_ASSOCIATION
                list: ops
                    HdlValueId: signed
    HdlValueInt: 1
    HdlDirection: INTERNAL

INS HdlIdDef@@RCStageFifoDepth to objs
HdlIdDef: RCStageFifoDepth
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: int
            HdlOp: MAP_ASSOCIATION
                list: ops
                    HdlValueId: signed
    HdlValueInt: 1
    HdlDirection: INTERNAL

INS HdlIdDef@@GenbitsFifoDepth to objs
HdlIdDef: GenbitsFifoDepth
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: int
            HdlOp: MAP_ASSOCIATION
                list: ops
                    HdlValueId: signed
    HdlValueInt: 1
    HdlDirection: INTERNAL

UPD HdlIdDef@@GenreqFifoWidth to GenreqFifoWidth
    INS HdlOp@@PARAMETRIZATION to GenreqFifoWidth
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: int
            HdlOp: MAP_ASSOCIATION
                list: ops
                    HdlValueId: signed

UPD HdlIdDef@@BlkEncAckFifoWidth to BlkEncAckFifoWidth
    INS HdlOp@@PARAMETRIZATION to BlkEncAckFifoWidth
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: int
            HdlOp: MAP_ASSOCIATION
                list: ops
                    HdlValueId: signed

UPD HdlIdDef@@AdstageFifoWidth to AdstageFifoWidth
    INS HdlOp@@PARAMETRIZATION to AdstageFifoWidth
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: int
            HdlOp: MAP_ASSOCIATION
                list: ops
                    HdlValueId: signed

UPD HdlIdDef@@RCStageFifoWidth to RCStageFifoWidth
    INS HdlOp@@PARAMETRIZATION to RCStageFifoWidth
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: int
            HdlOp: MAP_ASSOCIATION
                list: ops
                    HdlValueId: signed

DEL HdlIdDef@@GenreqFifoDepth from objs
HdlIdDef: GenreqFifoDepth
    HdlValueInt: 1
    HdlDirection: INTERNAL

DEL HdlIdDef@@BlkEncAckFifoDepth from objs
HdlIdDef: BlkEncAckFifoDepth
    HdlValueInt: 1
    HdlDirection: INTERNAL

DEL HdlIdDef@@AdstageFifoDepth from objs
HdlIdDef: AdstageFifoDepth
    HdlValueInt: 1
    HdlDirection: INTERNAL

DEL HdlIdDef@@RCStageFifoDepth from objs
HdlIdDef: RCStageFifoDepth
    HdlValueInt: 1
    HdlDirection: INTERNAL

DEL HdlIdDef@@GenbitsFifoDepth from objs
HdlIdDef: GenbitsFifoDepth
    HdlValueInt: 1
    HdlDirection: INTERNAL


CommitId: e1f36c3d2433c9003cf0405877e7fe23f4ee04a3
Update pulp_riscv_dbg to pulp-platform/riscv-dbg@811b2d7
--- a/hw/vendor/pulp_riscv_dbg/debug_rom/debug_rom.sv
+++ b/hw/vendor/pulp_riscv_dbg/debug_rom/debug_rom.sv
@@ -30,9 +30,9 @@ module debug_rom (
     64'ha85ff06f_7b302573,
     64'h7b202473_10052223,
     64'h00100073_7b302573,
-    64'h10052623_00c51513,
-    64'h00c55513_00000517,
-    64'h7b351073_fd5ff06f,
+    64'h7b202473_10052623,
+    64'h00c51513_00c55513,
+    64'h00000517_fd5ff06f,
     64'hfa041ce3_00247413,
     64'h40044403_00a40433,
     64'hf1402473_02041c63,
ParseResult:
UPD HdlIdDef@@mem to mem
    UPD HdlOp@@CONCAT to CONCAT
        UPD HdlOp@@CONCAT to CONCAT
            UPD HdlOp@@CONCAT to CONCAT
                UPD HdlOp@@CONCAT to CONCAT
                    UPD HdlOp@@CONCAT to CONCAT
                        UPD HdlOp@@CONCAT to CONCAT
                            UPD HdlOp@@CONCAT to CONCAT
                                UPD HdlOp@@CONCAT to CONCAT
                                    UPD HdlOp@@CONCAT to CONCAT
                                        UPD HdlOp@@CONCAT to CONCAT
                                            UPD HdlOp@@CONCAT to CONCAT
                                                UPD HdlValueInt@@7b351073fd5ff06f to 00000517fd5ff06f
                                                UPD HdlOp@@CONCAT to CONCAT
                                                    UPD HdlValueInt@@00c5551300000517 to 00c5151300c55513
                                                    UPD HdlOp@@CONCAT to CONCAT
                                                        UPD HdlValueInt@@1005262300c51513 to 7b20247310052623


CommitId: 7838ef2d33447b10d743084c852a189ae3906574
[lc_ctrl] Address minor issues found in security review
--- a/hw/ip/lc_ctrl/rtl/lc_ctrl_state_transition.sv
+++ b/hw/ip/lc_ctrl/rtl/lc_ctrl_state_transition.sv
@@ -81,7 +81,7 @@ module lc_ctrl_state_transition
 
       // In case the transition target is SCRAP, max out the counter.
       if (trans_target_i == DecLcStScrap) begin
-        next_lc_cnt_o = LcCnt16;
+        next_lc_cnt_o = LcCnt24;
       end
     end
 
ParseResult:
UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@LcCnt16 to LcCnt24


CommitId: e58e9732afde9c1abfbeea4f082b83f019d9a487
[tlul] Fix "unused" name for AscentLint too
--- a/hw/ip/tlul/rtl/tlul_err_resp.sv
+++ b/hw/ip/tlul/rtl/tlul_err_resp.sv
@@ -57,7 +57,7 @@ module tlul_err_resp (
   end
 
   // Waive unused bits of tl_h_i
-  logic tl_h_unused = &{1'b0,
+  logic unused_tl_h = &{1'b0,
                         tl_h_i.a_param, tl_h_i.a_address, tl_h_i.a_mask,
                         tl_h_i.a_data, tl_h_i.a_user, tl_h_i.d_ready};
 
ParseResult:
UPD HdlIdDef@@tl_h_unused to unused_tl_h


CommitId: 6abe0373fe8087032e12ba0a1aa0a1d29c5ba913
[entropy_src/rtl] fix for halt/start sequence
--- a/hw/ip/entropy_src/rtl/entropy_src_core.sv
+++ b/hw/ip/entropy_src/rtl/entropy_src_core.sv
@@ -83,6 +83,7 @@ module entropy_src_core import entropy_src_pkg::*; #(
   logic       fw_ov_fifo_rd_pulse;
   logic       fw_ov_fifo_wr_pulse;
   logic       es_enable;
+  logic       es_enable_early;
   logic       es_enable_lfsr;
   logic       es_enable_rng;
   logic       rng_bit_en;

ParseResult:
INS HdlIdDef@@es_enable_early to objs
HdlIdDef: es_enable_early
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL


CommitId: 6abe0373fe8087032e12ba0a1aa0a1d29c5ba913
[entropy_src/rtl] fix for halt/start sequence
--- a/hw/ip/entropy_src/rtl/entropy_src_core.sv
+++ b/hw/ip/entropy_src/rtl/entropy_src_core.sv
@@ -366,6 +367,7 @@ module entropy_src_core import entropy_src_pkg::*; #(
   logic                    sha3_msg_rdy_q, sha3_msg_rdy_d;
   logic                    sha3_err_q, sha3_err_d;
   logic        cs_aes_halt_q, cs_aes_halt_d;
+  logic [1:0]  es_enable_q, es_enable_d;
 
   always_ff @(posedge clk_i or negedge rst_ni)
     if (!rst_ni) begin

ParseResult:
INS HdlIdDef@@es_enable_q to objs
HdlIdDef: es_enable_q
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: INTERNAL

INS HdlIdDef@@es_enable_d to objs
HdlIdDef: es_enable_d
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: INTERNAL


CommitId: 6abe0373fe8087032e12ba0a1aa0a1d29c5ba913
[entropy_src/rtl] fix for halt/start sequence
--- a/hw/ip/entropy_src/rtl/entropy_src_core.sv
+++ b/hw/ip/entropy_src/rtl/entropy_src_core.sv
@@ -380,6 +382,7 @@ module entropy_src_core import entropy_src_pkg::*; #(
       sha3_msg_rdy_q        <= '0;
       sha3_err_q            <= '0;
       cs_aes_halt_q         <= '0;
+      es_enable_q           <= '0;
     end else begin
       es_rate_cntr_q        <= es_rate_cntr_d;
       lfsr_incr_dly_q       <= lfsr_incr_dly_d;

ParseResult:
INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: es_enable_q


CommitId: 6abe0373fe8087032e12ba0a1aa0a1d29c5ba913
[entropy_src/rtl] fix for halt/start sequence
--- a/hw/ip/entropy_src/rtl/entropy_src_core.sv
+++ b/hw/ip/entropy_src/rtl/entropy_src_core.sv
@@ -392,11 +395,14 @@ module entropy_src_core import entropy_src_pkg::*; #(
       sha3_msg_rdy_q        <= sha3_msg_rdy_d;
       sha3_err_q            <= sha3_err_d;
       cs_aes_halt_q         <= cs_aes_halt_d;
+      es_enable_q           <= es_enable_d;
     end
 
-  assign es_enable = (|reg2hw.conf.enable.q);
-  assign es_enable_lfsr = reg2hw.conf.enable.q[1];
-  assign es_enable_rng = reg2hw.conf.enable.q[0];
+  assign es_enable_d = reg2hw.conf.enable.q;
+  assign es_enable_early = (|reg2hw.conf.enable.q);
+  assign es_enable = (|es_enable_q);
+  assign es_enable_lfsr = es_enable_q[1];
+  assign es_enable_rng = es_enable_q[0];
   assign load_seed = !es_enable;
   assign hw2reg.regwen.d = !es_enable; // hw reg lock implementation
   assign pre_cond_fifo_depth = reg2hw.pre_cond_fifo_depth.q;

ParseResult:
MOV HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: OR_UNARY
        list: ops
            HdlOp: DOT
                list: ops
                    HdlOp: DOT
                        list: ops
                            HdlOp: DOT
                                list: ops
                                    HdlValueId: reg2hw
                                    HdlValueId: conf
                            HdlValueId: enable
                    HdlValueId: q
    HdlValueId: es_enable

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: OR_UNARY
        list: ops
            HdlValueId: es_enable_q
    HdlValueId: es_enable

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: INDEX
        list: ops
            HdlValueId: es_enable_q
            HdlValueInt: 1
    HdlValueId: es_enable_lfsr

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: INDEX
        list: ops
            HdlValueId: es_enable_q
            HdlValueInt: 0
    HdlValueId: es_enable_rng

UPD HdlStmAssign@@ to 
    UPD HdlOp@@INDEX to INDEX
        MOV HdlOp@@DOT to ops
        HdlOp: DOT
            list: ops
                HdlOp: DOT
                    list: ops
                        HdlOp: DOT
                            list: ops
                                HdlValueId: reg2hw
                                HdlValueId: conf
                        HdlValueId: enable
                HdlValueId: q
        DEL HdlValueInt@@1 from ops
        DEL list@@ops from INDEX
    UPD HdlValueId@@es_enable_lfsr to es_enable_d
    DEL HdlOp@@INDEX from 

UPD HdlStmAssign@@ to 
    UPD HdlValueId@@es_enable to es_enable_early

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueId: es_enable_d
    HdlValueId: es_enable_q

DEL HdlStmAssign@@ from objs
HdlStmAssign
    HdlOp: INDEX
        list: ops
            HdlOp: DOT
                list: ops
                    HdlOp: DOT
                        list: ops
                            HdlOp: DOT
                                list: ops
                                    HdlValueId: reg2hw
                                    HdlValueId: conf
                            HdlValueId: enable
                    HdlValueId: q
            HdlValueInt: 0
    HdlValueId: es_enable_rng


CommitId: 6abe0373fe8087032e12ba0a1aa0a1d29c5ba913
[entropy_src/rtl] fix for halt/start sequence
--- a/hw/ip/entropy_src/rtl/entropy_src_core.sv
+++ b/hw/ip/entropy_src/rtl/entropy_src_core.sv
@@ -1078,7 +1084,7 @@ module entropy_src_core import entropy_src_pkg::*; #(
   assign boot_bypass_disable = reg2hw.conf.boot_bypass_disable.q;
 
   assign boot_bypass_d =
-         (!es_enable) ? 1'b1 :  // special case for reset
+         (!es_enable_early) ? 1'b1 :  // special case for reset
          boot_bypass_disable ? 1'b0 :
          rst_bypass_mode ? 1'b0 :
          boot_bypass_q;
ParseResult:
UPD HdlStmAssign@@ to 
    UPD HdlOp@@TERNARY to TERNARY
        UPD HdlOp@@NEG_LOG to NEG_LOG
            UPD HdlValueId@@es_enable to es_enable_early


CommitId: 534416961ec3bdb9c5ac09ebc62acfecc7165300
Update lowrisc_ibex to lowRISC/ibex@42827fc9
--- a/hw/ip/rv_core_ibex/rtl/rv_core_ibex.sv
+++ b/hw/ip/rv_core_ibex/rtl/rv_core_ibex.sv
@@ -37,6 +37,7 @@ module rv_core_ibex #(
   input  logic        rst_esc_ni,
 
   input  logic        test_en_i,     // enable all clock gates for testing
+  input  prim_ram_1p_pkg::ram_1p_cfg_t ram_cfg_i,
 
   input  logic [31:0] hart_id_i,
   input  logic [31:0] boot_addr_i,

ParseResult:
INS HdlIdDef@@ram_cfg_i to ports
HdlIdDef: ram_cfg_i
    HdlOp: DOUBLE_COLON
        list: ops
            HdlValueId: prim_ram_1p_pkg
            HdlValueId: ram_1p_cfg_t
    HdlDirection: IN


CommitId: 5808ad335a6b840498316c1039f01becf8f2111f
[i2c, rtl] SDA Interference fix
--- a/hw/ip/i2c/rtl/i2c_fsm.sv
+++ b/hw/ip/i2c/rtl/i2c_fsm.sv
@@ -342,7 +342,7 @@ module i2c_fsm (
         host_idle_o = 1'b1;
         sda_temp = 1'b1;
         scl_temp = 1'b1;
-        if (sda_i == 0) event_sda_interference_o = 1'b1;
+        if (host_enable_i && sda_i == 0) event_sda_interference_o = 1'b1;
         if (!target_address0_i && !target_mask0_i && !target_address1_i && !target_mask1_i) begin
           acq_fifo_wvalid_o = 1'b0;
         end
ParseResult:
UPD HdlStmProcess@@ to 
    INS HdlStmProcessTriggerConstrain@@COMB to 

UPD HdlStmCase@@state_q to state_q
    INS HdlStmCaseType@@CASE to state_q
    INS HdlValueId@@state_q to state_q
    INS HdlStmCaseUniqConstrain@@UNIQUE to state_q

UPD HdlStmIf@@ to 
    INS HdlOp@@AND_LOG to 
    UPD HdlOp@@AND_LOG to AND_LOG
        INS list@@ops to AND_LOG
        INS HdlValueId@@host_enable_i to ops

UPD HdlStmIf@@ to 
    MOV HdlOp@@EQ to 
    HdlOp: EQ
        list: ops
            HdlValueId: sda_i
            HdlValueInt: 0

UPD HdlStmCase@@state_q to state_q
    DEL HdlStmCaseType@@CASE from state_q
    DEL HdlValueId@@state_q from state_q
    DEL HdlStmCaseUniqConstrain@@UNIQUE from state_q

UPD HdlStmProcess@@ to 
    DEL HdlStmProcessTriggerConstrain@@COMB from 


CommitId: 010e3cc350cf011452b3c79b8d3362ee27670d9b
[top] Minor lint fixes
--- a/hw/ip/flash_ctrl/rtl/flash_phy.sv
+++ b/hw/ip/flash_ctrl/rtl/flash_phy.sv
@@ -22,6 +22,7 @@ module flash_phy import flash_ctrl_pkg::*; (
   input flash_req_t flash_ctrl_i,
   output flash_rsp_t flash_ctrl_o,
   input scanmode_i,
+  input scan_en_i,
   input scan_rst_ni,
   input flash_power_ready_h_i,
   input flash_power_down_h_i,

ParseResult:
INS HdlIdDef@@scan_en_i to ports
HdlIdDef: scan_en_i
    HdlValueId: wire
    HdlDirection: IN


CommitId: a1af4ece1395b9fed47475361f1dd867e242d5d2
[clkmgr] Fix dft issues
--- a/hw/ip/prim/rtl/prim_clock_div.sv
+++ b/hw/ip/prim/rtl/prim_clock_div.sv
@@ -21,6 +21,11 @@ module prim_clock_div #(
   // For odd divide we need to introduce more parameters to control duty cycle
   `ASSERT_INIT(DivEven_A, (Divisor % 2) == 0)
 
+  // It is assumed the flops in this module are NOT on the scan-chain, as a result only
+  // the input values are guarded
+  logic step_down_req;
+  assign step_down_req = test_en_i ? '0 : step_down_req_i;
+
   logic clk_int;
 
   if (Divisor == 2) begin : gen_div2

ParseResult:
INS HdlIdDef@@step_down_req to objs
HdlIdDef: step_down_req
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: TERNARY
        list: ops
            HdlValueId: test_en_i
            HdlValueInt: 0
            HdlValueId: step_down_req_i
    HdlValueId: step_down_req


CommitId: a1af4ece1395b9fed47475361f1dd867e242d5d2
[clkmgr] Fix dft issues
--- a/hw/ip/prim/rtl/prim_clock_div.sv
+++ b/hw/ip/prim/rtl/prim_clock_div.sv
@@ -91,25 +96,22 @@ module prim_clock_div #(
       if (!rst_ni) begin
         step_down_ack_o <= 1'b0;
       end else begin
-        step_down_ack_o <= step_down_req_i;
+        step_down_ack_o <= step_down_req;
       end
     end
   end
 
-  // when in scanmode, bypass the dividers completely
-  // also anchor point for constraints
+  // anchor points for constraints
   logic clk_muxed;
-
   prim_clock_mux2 #(
     .NoFpgaBufG(1'b1)
   ) u_clk_mux (
     .clk0_i(clk_int),
     .clk1_i(clk_i),
-    .sel_i(test_en_i),
+    .sel_i('0),
     .clk_o(clk_muxed)
   );
 
-  // anchor point for constraints
   prim_clock_buf u_clk_div_buf (
     .clk_i(clk_muxed),
     .clk_o
ParseResult:
UPD HdlStmAssign@@ to 
    UPD HdlValueId@@step_down_req_i to step_down_req


CommitId: fa976d438a9445b5389b8cbb70b972c9c365b883
Update pulp_riscv_dbg to pulp-platform/riscv-dbg@6bef5d8
--- a/hw/vendor/pulp_riscv_dbg/src/dm_sba.sv
+++ b/hw/vendor/pulp_riscv_dbg/src/dm_sba.sv
@@ -77,7 +77,7 @@ module dm_sba #(
 
     state_d = state_q;
 
-    case (state_q)
+    unique case (state_q)
       Idle: begin
         // debugger requested a read
         if (sbaddress_write_valid_i && sbreadonaddr_i)  state_d = Read;

ParseResult:
UPD HdlStmCase@@state_q to state_q
    INS HdlOp@@ASSIGN to state_q
    HdlOp: ASSIGN
        list: ops
            HdlValueId: state_d
            HdlValueId: Idle
    INS HdlStmCaseUniqConstrain@@UNIQUE to state_q


CommitId: fa976d438a9445b5389b8cbb70b972c9c365b883
Update pulp_riscv_dbg to pulp-platform/riscv-dbg@6bef5d8
--- a/hw/vendor/pulp_riscv_dbg/src/dm_sba.sv
+++ b/hw/vendor/pulp_riscv_dbg/src/dm_sba.sv
@@ -96,7 +96,7 @@ module dm_sba #(
         req = 1'b1;
         we  = 1'b1;
         // generate byte enable mask
-        case (sbaccess_i)
+        unique case (sbaccess_i)
           3'b000: begin
             be[be_idx] = '1;
           end

ParseResult:
UPD HdlStmCase@@state_q to state_q
    INS HdlOp@@ASSIGN to state_q
    HdlOp: ASSIGN
        list: ops
            HdlValueId: state_d
            HdlValueId: Idle
    INS HdlStmCaseUniqConstrain@@UNIQUE to state_q

UPD HdlStmCase@@sbaccess_i to sbaccess_i
    INS HdlStmCaseUniqConstrain@@UNIQUE to sbaccess_i


CommitId: fa976d438a9445b5389b8cbb70b972c9c365b883
Update pulp_riscv_dbg to pulp-platform/riscv-dbg@6bef5d8
--- a/hw/vendor/pulp_riscv_dbg/src/dm_sba.sv
+++ b/hw/vendor/pulp_riscv_dbg/src/dm_sba.sv
@@ -108,7 +108,7 @@ module dm_sba #(
             else                    be = '1;
           end
           3'b011: be = '1;
-          default:;
+          default: ;
         endcase
         if (gnt) state_d = WaitWrite;
       end

ParseResult:
UPD HdlStmCase@@state_q to state_q
    INS HdlOp@@ASSIGN to state_q
    HdlOp: ASSIGN
        list: ops
            HdlValueId: state_d
            HdlValueId: Idle
    INS HdlStmCaseUniqConstrain@@UNIQUE to state_q

UPD HdlStmCase@@sbaccess_i to sbaccess_i
    INS HdlStmCaseUniqConstrain@@UNIQUE to sbaccess_i


CommitId: fa976d438a9445b5389b8cbb70b972c9c365b883
Update pulp_riscv_dbg to pulp-platform/riscv-dbg@6bef5d8
--- a/hw/vendor/pulp_riscv_dbg/src/dm_sba.sv
+++ b/hw/vendor/pulp_riscv_dbg/src/dm_sba.sv
@@ -129,7 +129,7 @@ module dm_sba #(
         end
       end
 
-      default:;
+      default: state_d = Idle; // catch parasitic state
     endcase
 
     // handle error case
ParseResult:
UPD HdlStmCase@@state_q to state_q
    INS HdlOp@@ASSIGN to state_q
    HdlOp: ASSIGN
        list: ops
            HdlValueId: state_d
            HdlValueId: Idle
    INS HdlStmCaseUniqConstrain@@UNIQUE to state_q

DEL HdlStmNop@@default from state_q


CommitId: eb333ec2362ade4f920e9b3f9ebf8ec28aa191a2
[syn] Carry over synthesis flow updates from bronze
--- a/hw/ip/prim_generic/rtl/prim_generic_flash.sv
+++ b/hw/ip/prim_generic/rtl/prim_generic_flash.sv
@@ -28,7 +28,17 @@ module prim_generic_flash #(
   input [DataWidth-1:0]              prog_data_i,
   output logic                       ack_o,
   output logic [DataWidth-1:0]       rd_data_o,
-  output logic                       init_busy_o
+  output logic                       init_busy_o,
+  input                              tck_i,
+  input                              tdi_i,
+  input                              tms_i,
+  output logic                       tdo_o,
+  input                              scanmode_i,
+  input                              scan_reset_ni,
+  input                              flash_power_ready_hi,
+  input                              flash_power_down_hi,
+  inout [3:0]                        flash_test_mode_ai,
+  inout                              flash_test_voltage_hi
 );
 
   // Emulated flash macro values

ParseResult:
INS HdlIdDef@@tck_i to ports
HdlIdDef: tck_i
    HdlValueId: wire
    HdlDirection: IN

INS HdlIdDef@@tdi_i to ports
HdlIdDef: tdi_i
    HdlValueId: wire
    HdlDirection: IN

INS HdlIdDef@@tms_i to ports
HdlIdDef: tms_i
    HdlValueId: wire
    HdlDirection: IN

INS HdlIdDef@@tdo_o to ports
HdlIdDef: tdo_o
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: OUT

INS HdlIdDef@@scanmode_i to ports
HdlIdDef: scanmode_i
    HdlValueId: wire
    HdlDirection: IN

INS HdlIdDef@@scan_reset_ni to ports
HdlIdDef: scan_reset_ni
    HdlValueId: wire
    HdlDirection: IN

INS HdlIdDef@@flash_power_ready_hi to ports
HdlIdDef: flash_power_ready_hi
    HdlValueId: wire
    HdlDirection: IN

INS HdlIdDef@@flash_power_down_hi to ports
HdlIdDef: flash_power_down_hi
    HdlValueId: wire
    HdlDirection: IN

INS HdlIdDef@@flash_test_mode_ai to ports
HdlIdDef: flash_test_mode_ai
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: wire
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 3
                    HdlValueInt: 0
    HdlDirection: INOUT

INS HdlIdDef@@flash_test_voltage_hi to ports
HdlIdDef: flash_test_voltage_hi
    HdlValueId: wire
    HdlDirection: INOUT


CommitId: eb333ec2362ade4f920e9b3f9ebf8ec28aa191a2
[syn] Carry over synthesis flow updates from bronze
--- a/hw/ip/prim_generic/rtl/prim_generic_flash.sv
+++ b/hw/ip/prim_generic/rtl/prim_generic_flash.sv
@@ -315,4 +325,7 @@ module prim_generic_flash #(
 
   assign rd_data_o = held_part == flash_ctrl_pkg::FlashPartData ? rd_data_main : rd_data_info;
 
+  // hard-wire assignment for now
+  assign tdo_o = 1'b0;
+
 endmodule // prim_generic_flash
ParseResult:
INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: tdo_o


CommitId: 59d0872f458f27383e9de2745961517a60cf84f9
Update lowrisc_ibex to lowRISC/ibex@ae547c8
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_register_file_ff.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_register_file_ff.sv
@@ -42,7 +42,7 @@ module ibex_register_file #(
   localparam int unsigned NUM_WORDS  = 2**ADDR_WIDTH;
 
   logic [NUM_WORDS-1:0][DataWidth-1:0] rf_reg;
-  logic [NUM_WORDS-1:1][DataWidth-1:0] rf_reg_tmp;
+  logic [NUM_WORDS-1:1][DataWidth-1:0] rf_reg_q;
   logic [NUM_WORDS-1:1]                we_a_dec;
 
   always_comb begin : we_a_decoder

ParseResult:
UPD HdlIdDef@@rf_reg_tmp to rf_reg_q


CommitId: 59d0872f458f27383e9de2745961517a60cf84f9
Update lowrisc_ibex to lowRISC/ibex@ae547c8
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_register_file_ff.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_register_file_ff.sv
@@ -51,13 +51,13 @@ module ibex_register_file #(
     end
   end
 
-  // loop from 1 to NUM_WORDS-1 as R0 is nil
-  always_ff @(posedge clk_i or negedge rst_ni) begin
-    if (!rst_ni) begin
-      rf_reg_tmp <= '{default:'0};
-    end else begin
-      for (int r = 1; r < NUM_WORDS; r++) begin
-        if (we_a_dec[r]) rf_reg_tmp[r] <= wdata_a_i;
+  // No flops for R0 as it's hard-wired to 0
+  for (genvar i = 1; i < NUM_WORDS; i++) begin : g_rf_flops
+    always_ff @(posedge clk_i or negedge rst_ni) begin
+      if (!rst_ni) begin
+        rf_reg_q[i] <= '0;
+      end else if(we_a_dec[i]) begin
+        rf_reg_q[i] <= wdata_a_i;
       end
     end
   end

ParseResult:
INS HdlStmFor@@ to objs

UPD HdlStmFor@@ to 
    INS HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlIdDef: i
                HdlValueInt: 1
                HdlDirection: INTERNAL
    INS HdlOp@@LT to 
    HdlOp: LT
        list: ops
            HdlValueId: i
            HdlValueId: NUM_WORDS
    INS HdlOp@@INCR_POST to 
    HdlOp: INCR_POST
        list: ops
            HdlValueId: i
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

MOV HdlStmProcess@@ to objs
HdlStmProcess
    list: sensitivity
        HdlOp: RISING
            list: ops
                HdlValueId: clk_i
        HdlOp: FALLING
            list: ops
                HdlValueId: rst_ni
    HdlStmBlock: SEQ
        list: body
            HdlStmIf
                HdlOp: NEG_LOG
                    list: ops
                        HdlValueId: rst_ni
                HdlStmBlock: SEQ
                    list: body
                        HdlStmAssign
                            list: src
                                HdlOp: MAP_ASSOCIATION
                                    list: ops
                                        HdlValueId: default
                                        HdlValueInt: 0
                            HdlValueId: rf_reg_tmp
                list: elifs
                HdlStmBlock: SEQ
                    list: body
                        HdlStmFor
                            HdlStmBlock: SEQ
                                list: body
                                    HdlIdDef: r
                                        HdlValueId: int
                                        HdlValueInt: 1
                                        HdlDirection: INTERNAL
                            HdlOp: LT
                                list: ops
                                    HdlValueId: r
                                    HdlValueId: NUM_WORDS
                            HdlStmBlock: SEQ
                                list: body
                                    HdlOp: INCR_POST
                                        list: ops
                                            HdlValueId: r
                            HdlStmBlock: SEQ
                                list: body
                                    HdlStmIf
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: we_a_dec
                                                HdlValueId: r
                                        HdlStmAssign: if_true
                                            HdlValueId: wdata_a_i
                                            HdlOp: INDEX
                                                list: ops
                                                    HdlValueId: rf_reg_tmp
                                                    HdlValueId: r
                                        list: elifs
    HdlStmProcessTriggerConstrain: FF

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD list@@body to elifs
        MOV list@@body to SEQ
        list: body
            HdlStmFor
                HdlStmBlock: SEQ
                    list: body
                        HdlIdDef: r
                            HdlValueId: int
                            HdlValueInt: 1
                            HdlDirection: INTERNAL
                HdlOp: LT
                    list: ops
                        HdlValueId: r
                        HdlValueId: NUM_WORDS
                HdlStmBlock: SEQ
                    list: body
                        HdlOp: INCR_POST
                            list: ops
                                HdlValueId: r
                HdlStmBlock: SEQ
                    list: body
                        HdlStmIf
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: we_a_dec
                                    HdlValueId: r
                            HdlStmAssign: if_true
                                HdlValueId: wdata_a_i
                                HdlOp: INDEX
                                    list: ops
                                        HdlValueId: rf_reg_tmp
                                        HdlValueId: r
                            list: elifs
    DEL list@@elifs from 
    DEL HdlStmBlock@@SEQ from 

UPD HdlStmIf@@ to 
    INS tuple@@ to elifs

UPD HdlStmFor@@ to 
    UPD HdlOp@@LT to INDEX
    MOV HdlOp@@LT to 
    HdlOp: LT
        list: ops
            HdlValueId: r
            HdlValueId: NUM_WORDS
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlStmIf
                HdlOp: INDEX
                    list: ops
                        HdlValueId: we_a_dec
                        HdlValueId: r
                HdlStmAssign: if_true
                    HdlValueId: wdata_a_i
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: rf_reg_tmp
                            HdlValueId: r
                list: elifs
    UPD HdlOp@@LT to LT
        UPD HdlValueId@@r to we_a_dec
        UPD HdlValueId@@NUM_WORDS to i
    DEL HdlStmBlock@@SEQ from 
    HdlStmBlock: SEQ
        list: body
            HdlIdDef: r
                HdlValueId: int
                HdlValueInt: 1
                HdlDirection: INTERNAL
    DEL HdlStmBlock@@SEQ from 
    HdlStmBlock: SEQ
        list: body
            HdlOp: INCR_POST
                list: ops
                    HdlValueId: r

UPD HdlStmAssign@@ to 
    INS HdlValueInt@@0 to 
    UPD HdlOp@@INDEX to INDEX
        INS HdlValueId@@i to ops

UPD HdlStmAssign@@ to 
    UPD HdlOp@@MAP_ASSOCIATION to INDEX
    MOV HdlOp@@MAP_ASSOCIATION to src
    HdlOp: MAP_ASSOCIATION
        list: ops
            HdlValueId: default
            HdlValueInt: 0
    UPD HdlOp@@MAP_ASSOCIATION to MAP_ASSOCIATION
        UPD HdlValueId@@default to rf_reg_q
        DEL HdlValueInt@@0 from ops
    DEL list@@src from 
    DEL HdlValueId@@rf_reg_tmp from 

UPD HdlStmAssign@@if_true to 

MOV HdlStmAssign@@if_true to 
HdlStmAssign: if_true
    HdlValueId: wdata_a_i
    HdlOp: INDEX
        list: ops
            HdlValueId: rf_reg_tmp
            HdlValueId: r

UPD HdlStmAssign@@if_true to if_true
    UPD HdlOp@@INDEX to INDEX
        UPD HdlValueId@@rf_reg_tmp to rf_reg_q
        UPD HdlValueId@@r to i

UPD HdlStmIf@@ to 
    DEL HdlOp@@INDEX from 
    HdlOp: INDEX
        list: ops
            HdlValueId: we_a_dec
            HdlValueId: r
    DEL list@@elifs from 

DEL HdlStmIf@@ from body

DEL HdlStmFor@@ from body


CommitId: 59d0872f458f27383e9de2745961517a60cf84f9
Update lowrisc_ibex to lowRISC/ibex@ae547c8
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_register_file_ff.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_register_file_ff.sv
@@ -66,21 +66,21 @@ module ibex_register_file #(
   // real instructions.
   if (DummyInstructions) begin : g_dummy_r0
     logic        we_r0_dummy;
-    logic [31:0] rf_r0;
+    logic [31:0] rf_r0_q;
 
     // Write enable for dummy R0 register (waddr_a_i will always be 0 for dummy instructions)
     assign we_r0_dummy = we_a_i & dummy_instr_id_i;
 
     always_ff @(posedge clk_i or negedge rst_ni) begin
       if (!rst_ni) begin
-        rf_r0 <= '0;
+        rf_r0_q <= '0;
       end else if (we_r0_dummy) begin
-        rf_r0 <= wdata_a_i;
+        rf_r0_q <= wdata_a_i;
       end
     end
 
     // Output the dummy data for dummy instructions, otherwise R0 reads as zero
-    assign rf_reg[0] = dummy_instr_id_i ? rf_r0 : '0;
+    assign rf_reg[0] = dummy_instr_id_i ? rf_r0_q : '0;
 
   end else begin : g_normal_r0
     logic unused_dummy_instr_id;

ParseResult:
UPD HdlIdDef@@rf_r0 to rf_r0_q

UPD HdlStmAssign@@ to 
    UPD HdlOp@@TERNARY to TERNARY
        UPD HdlValueId@@rf_r0 to rf_r0_q

UPD HdlStmAssign@@ to 
    UPD HdlValueId@@rf_r0 to rf_r0_q

UPD HdlStmAssign@@ to 
    UPD HdlValueId@@rf_r0 to rf_r0_q


CommitId: 59d0872f458f27383e9de2745961517a60cf84f9
Update lowrisc_ibex to lowRISC/ibex@ae547c8
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_register_file_ff.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_register_file_ff.sv
@@ -90,7 +90,7 @@ module ibex_register_file #(
     assign rf_reg[0] = '0;
   end
 
-  assign rf_reg[NUM_WORDS-1:1] = rf_reg_tmp[NUM_WORDS-1:1];
+  assign rf_reg[NUM_WORDS-1:1] = rf_reg_q[NUM_WORDS-1:1];
 
   assign rdata_a_o = rf_reg[raddr_a_i];
   assign rdata_b_o = rf_reg[raddr_b_i];
ParseResult:
UPD HdlStmAssign@@ to 
    UPD HdlOp@@INDEX to INDEX
        UPD HdlValueId@@rf_reg_tmp to rf_reg_q


CommitId: 3776f5beb152ff954cf02d9ac0613ea3111ab275
[fpga] Add a clock buffer to the JTAG clock obtained from pinmux/padring
--- a/hw/top_earlgrey/rtl/top_earlgrey_cw305.sv
+++ b/hw/top_earlgrey/rtl/top_earlgrey_cw305.sv
@@ -144,7 +144,7 @@ module top_earlgrey_cw305 #(
   //////////////////////
 
   logic jtag_trst_n, jtag_srst_n;
-  logic jtag_tck, jtag_tms, jtag_tdi, jtag_tdo;
+  logic jtag_tck, jtag_tck_buf, jtag_tms, jtag_tdi, jtag_tdo;
 
   localparam int NumIOs = padctrl_reg_pkg::NMioPads +
                           padctrl_reg_pkg::NDioPads;

ParseResult:
INS HdlIdDef@@jtag_tck_buf to objs
HdlIdDef: jtag_tck_buf
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL


CommitId: 7824ccc3195c1d9f5dedd70c006b8ec0fd68faae
[ibex] Enable icache in top_earlgrey
--- a/hw/ip/rv_core_ibex/rtl/rv_core_ibex.sv
+++ b/hw/ip/rv_core_ibex/rtl/rv_core_ibex.sv
@@ -70,6 +70,8 @@ module rv_core_ibex #(
   // if pipeline is 0, passthrough the fifo completely
   localparam int FifoPass = PipeLine ? 1'b0 : 1'b1;
   localparam int FifoDepth = PipeLine ? 4'h2 : 4'h0;
+  // ICache creates more outstanding transactions
+  localparam int NumOutstandingReqs = ICache ? 8 : 2;
 
   // Instruction interface (internal)
   logic        instr_req;

ParseResult:
INS HdlIdDef@@NumOutstandingReqs to objs
HdlIdDef: NumOutstandingReqs
    HdlValueId: int
    HdlOp: TERNARY
        list: ops
            HdlValueId: ICache
            HdlValueInt: 8
            HdlValueInt: 2
    HdlDirection: INTERNAL


CommitId: 79aac27c5eb3b17346aaeb86678edcffa94cb9d9
Update lowrisc_ibex to lowRISC/ibex@6b1a7ad
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_cs_registers.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_cs_registers.sv
@@ -67,6 +67,7 @@ module ibex_cs_registers #(
     output logic [31:0]          csr_depc_o,
     output logic                 debug_single_step_o,
     output logic                 debug_ebreakm_o,
+    output logic                 debug_ebreaku_o,
 
     input  logic [31:0]          pc_if_i,
     input  logic [31:0]          pc_id_i,

ParseResult:
INS HdlIdDef@@debug_ebreaku_o to ports
HdlIdDef: debug_ebreaku_o
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: OUT


CommitId: 79aac27c5eb3b17346aaeb86678edcffa94cb9d9
Update lowrisc_ibex to lowRISC/ibex@6b1a7ad
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_cs_registers.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_cs_registers.sv
@@ -244,6 +245,7 @@ module ibex_cs_registers #(
         csr_rdata_int[CSR_MSTATUS_MPIE_BIT]                             = mstatus_q.mpie;
         csr_rdata_int[CSR_MSTATUS_MPP_BIT_HIGH:CSR_MSTATUS_MPP_BIT_LOW] = mstatus_q.mpp;
         csr_rdata_int[CSR_MSTATUS_MPRV_BIT]                             = mstatus_q.mprv;
+        csr_rdata_int[CSR_MSTATUS_TW_BIT]                               = mstatus_q.tw;
       end
 
       // misa

ParseResult:
UPD HdlStmCase@@csr_addr_i to csr_addr_i
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlOp: INDEX
                    list: ops
                        HdlValueId: csr_rdata_int
                        HdlValueId: CSR_MSTATUS_TW_BIT
                HdlOp: DOT
                    list: ops
                        HdlValueId: mstatus_q
                        HdlValueId: tw


CommitId: 79aac27c5eb3b17346aaeb86678edcffa94cb9d9
Update lowrisc_ibex to lowRISC/ibex@6b1a7ad
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_cs_registers.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_cs_registers.sv
@@ -551,7 +553,7 @@ module ibex_cs_registers #(
   end
 
   // only write CSRs during one clock cycle
-  assign csr_we_int  = csr_wreq & ~illegal_csr_priv & instr_new_id_i;
+  assign csr_we_int  = csr_wreq & ~illegal_csr_insn_o & instr_new_id_i;
 
   assign csr_rdata_o = csr_rdata_int;
 

ParseResult:
INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: AND
        list: ops
            HdlOp: AND
                list: ops
                    HdlValueId: csr_wreq
                    HdlOp: NEG
                        list: ops
                            HdlValueId: illegal_csr_insn_o
            HdlValueId: instr_new_id_i
    HdlValueId: csr_we_int

DEL HdlStmAssign@@ from objs
HdlStmAssign
    HdlOp: AND
        list: ops
            HdlOp: AND
                list: ops
                    HdlValueId: csr_wreq
                    HdlOp: NEG
                        list: ops
                            HdlValueId: illegal_csr_priv
            HdlValueId: instr_new_id_i
    HdlValueId: csr_we_int


CommitId: 79aac27c5eb3b17346aaeb86678edcffa94cb9d9
Update lowrisc_ibex to lowRISC/ibex@6b1a7ad
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_cs_registers.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_cs_registers.sv
@@ -569,6 +571,7 @@ module ibex_cs_registers #(
   assign csr_mstatus_tw_o    = mstatus_q.tw;
   assign debug_single_step_o = dcsr_q.step;
   assign debug_ebreakm_o     = dcsr_q.ebreakm;
+  assign debug_ebreaku_o     = dcsr_q.ebreaku;
 
   assign irq_pending_o = csr_msip_o | csr_mtip_o | csr_meip_o | (|csr_mfip_o);
 
ParseResult:
INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: DOT
        list: ops
            HdlValueId: dcsr_q
            HdlValueId: ebreaku
    HdlValueId: debug_ebreaku_o


CommitId: ebe4e36b2ff115d5ec3223cc73499718c23ccd41
[usbdev] Fixes for pin config sims to pass
--- a/hw/ip/usbdev/rtl/usbdev_iomux.sv
+++ b/hw/ip/usbdev/rtl/usbdev_iomux.sv
@@ -183,8 +183,8 @@ module usbdev_iomux
           cio_usb_dp_o = 1'b0;
           cio_usb_dn_o = 1'b0;
         end else begin
-          cio_usb_dp_o = usb_tx_d_i;
-          cio_usb_dn_o = !usb_tx_d_i;
+          cio_usb_dp_o = cio_usb_d_flipped;
+          cio_usb_dn_o = ~cio_usb_d_flipped;
         end
       end
     end
ParseResult:
UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@usb_tx_d_i to cio_usb_d_flipped
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@NEG_LOG to NEG
            UPD HdlOp@@NEG_LOG to NEG_LOG
                UPD HdlValueId@@usb_tx_d_i to cio_usb_d_flipped


CommitId: 4c583deabbfc7ffa8a74a37c0ebfaef84ce1f59e
[top] Connect RomCtrlSkipCheck
--- a/hw/top_earlgrey/rtl/autogen/chip_earlgrey_asic.sv
+++ b/hw/top_earlgrey/rtl/autogen/chip_earlgrey_asic.sv
@@ -9,7 +9,10 @@
 //                -o hw/top_earlgrey/ \
 //                --rnd_cnst_seed 4881560218908238235
 
-module chip_earlgrey_asic (
+module chip_earlgrey_asic #(
+  // TODO: Remove this 0 once infra is ready
+  parameter bit RomCtrlSkipCheck = 1
+) (
   // Dedicated Pads
   inout POR_N, // Manual Pad
   inout USB_P, // Manual Pad

ParseResult:
INS HdlIdDef@@RomCtrlSkipCheck to params
HdlIdDef: RomCtrlSkipCheck
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: bit
    HdlValueInt: 1
    HdlDirection: INTERNAL


CommitId: 041c683d770e1488ae3b3be55ff0b9c11aeed19f
[tlul] Fixed TL-UL error response of d_size
--- a/hw/ip/tlul/rtl/tlul_err_resp.sv
+++ b/hw/ip/tlul/rtl/tlul_err_resp.sv
@@ -14,19 +14,22 @@ module tlul_err_resp (
 );
   import tlul_pkg::*;
 
-  logic [top_pkg::TL_AIW-1:0] err_source;
-  tl_a_op_e                   err_opcode;
-  logic                       err_req_pending, err_rsp_pending;
+  tl_a_op_e                          err_opcode;
+  logic [$bits(tl_h_i.a_source)-1:0] err_source;
+  logic [$bits(tl_h_i.a_size)-1:0]   err_size;
+  logic                              err_req_pending, err_rsp_pending;
 
   always_ff @(posedge clk_i or negedge rst_ni) begin
     if (!rst_ni) begin
       err_req_pending <= 1'b0;
       err_source      <= {top_pkg::TL_AIW{1'b0}};
       err_opcode      <= Get;
+      err_size        <= '0;
     end else if (tl_h_i.a_valid && tl_h_o.a_ready) begin
       err_req_pending <= 1'b1;
       err_source      <= tl_h_i.a_source;
       err_opcode      <= tl_h_i.a_opcode;
+      err_size        <= tl_h_i.a_size;
     end else if (!err_rsp_pending) begin
       err_req_pending <= 1'b0;
     end

ParseResult:
MOV HdlIdDef@@err_source to objs
HdlIdDef: err_source
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlOp: SUB
                        list: ops
                            HdlOp: DOUBLE_COLON
                                list: ops
                                    HdlValueId: top_pkg
                                    HdlValueId: TL_AIW
                            HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: INTERNAL

INS HdlIdDef@@err_size to objs
HdlIdDef: err_size
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlOp: SUB
                        list: ops
                            HdlOp: CALL
                                list: ops
                                    HdlValueId: $bits
                                    HdlOp: DOT
                                        list: ops
                                            HdlValueId: tl_h_i
                                            HdlValueId: a_size
                            HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: INTERNAL

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: err_size

UPD HdlIdDef@@err_source to err_source
    UPD HdlOp@@PARAMETRIZATION to PARAMETRIZATION
        UPD HdlOp@@DOWNTO to DOWNTO
            UPD HdlOp@@SUB to SUB
                INS HdlOp@@CALL to ops
                UPD HdlOp@@CALL to CALL
                    INS list@@ops to CALL
                    INS HdlValueId@@$bits to ops

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlOp: DOT
        list: ops
            HdlValueId: tl_h_i
            HdlValueId: a_size
    HdlValueId: err_size

UPD HdlIdDef@@err_source to err_source
    UPD HdlOp@@PARAMETRIZATION to PARAMETRIZATION
        UPD HdlOp@@DOWNTO to DOWNTO
            UPD HdlOp@@SUB to SUB
                UPD HdlOp@@DOUBLE_COLON to DOT
                MOV HdlOp@@DOUBLE_COLON to ops
                HdlOp: DOUBLE_COLON
                    list: ops
                        HdlValueId: top_pkg
                        HdlValueId: TL_AIW
                UPD HdlOp@@DOUBLE_COLON to DOUBLE_COLON
                    UPD HdlValueId@@top_pkg to tl_h_i
                    UPD HdlValueId@@TL_AIW to a_source


CommitId: 041c683d770e1488ae3b3be55ff0b9c11aeed19f
[tlul] Fixed TL-UL error response of d_size
--- a/hw/ip/tlul/rtl/tlul_err_resp.sv
+++ b/hw/ip/tlul/rtl/tlul_err_resp.sv
@@ -38,7 +41,7 @@ module tlul_err_resp (
   assign tl_h_o.d_source = err_source;
   assign tl_h_o.d_sink   = '0;
   assign tl_h_o.d_param  = '0;
-  assign tl_h_o.d_size   = '0;
+  assign tl_h_o.d_size   = err_size;
   assign tl_h_o.d_opcode = (err_opcode == Get) ? AccessAckData : AccessAck;
   assign tl_h_o.d_user   = '0;
   assign tl_h_o.d_error  = 1'b1;
ParseResult:
UPD HdlStmAssign@@ to 
    INS HdlValueId@@err_size to 

UPD HdlStmAssign@@ to 
    DEL HdlValueInt@@0 from 


CommitId: 1a1b94d01fd7022438e2bd651e48ad2d99e3abca
Update lowrisc_ibex to lowRISC/ibex@6b9165f
--- a/hw/vendor/lowrisc_ibex/examples/simple_system/rtl/ibex_simple_system.sv
+++ b/hw/vendor/lowrisc_ibex/examples/simple_system/rtl/ibex_simple_system.sv
@@ -19,15 +23,16 @@ module ibex_simple_system (
   input IO_RST_N
 );
 
-  parameter bit          PMPEnable       = 1'b0;
-  parameter int unsigned PMPGranularity  = 0;
-  parameter int unsigned PMPNumRegions   = 4;
-  parameter bit RV32E                    = 1'b0;
-  parameter bit RV32M                    = 1'b1;
-  parameter bit RV32B                    = 1'b0;
-  parameter bit BranchTargetALU          = 1'b0;
-  parameter bit WritebackStage           = 1'b0;
-  parameter     MultiplierImplementation = "fast";
+  parameter bit               PMPEnable                = 1'b0;
+  parameter int unsigned      PMPGranularity           = 0;
+  parameter int unsigned      PMPNumRegions            = 4;
+  parameter bit               RV32E                    = 1'b0;
+  parameter bit               RV32M                    = 1'b1;
+  parameter ibex_pkg::rv32b_e RV32B                    = `RV32B;
+  parameter bit               BranchTargetALU          = 1'b0;
+  parameter bit               WritebackStage           = 1'b0;
+  parameter                   MultiplierImplementation = "fast";
+  parameter                   SRAMInitFile             = "";
 
   logic clk_sys = 1'b0, rst_sys_n;
 

ParseResult:
INS HdlIdDef@@SRAMInitFile to params
HdlIdDef: SRAMInitFile
    HdlDirection: INTERNAL

UPD HdlIdDef@@RV32B to RV32B
    UPD HdlOp@@PARAMETRIZATION to DOUBLE_COLON
    UPD HdlOp@@PARAMETRIZATION to PARAMETRIZATION
        UPD HdlValueId@@bit to ibex_pkg
    DEL HdlValueInt@@0 from RV32B

UPD HdlIdDef@@RV32B to RV32B
    INS HdlOp@@DOUBLE_COLON to RV32B
    HdlOp: DOUBLE_COLON
        list: ops
            HdlValueId: ibex_pkg
            HdlValueId: RV32BNone
    UPD HdlOp@@DOUBLE_COLON to DOUBLE_COLON
        INS HdlValueId@@rv32b_e to ops


CommitId: 5b548d5645334578da42e06c8539c57a2a8bffaf
[csrng/rtl] Two csrng app interfaces working
--- a/hw/ip/csrng/rtl/csrng_track_sm.sv
+++ b/hw/ip/csrng/rtl/csrng_track_sm.sv
@@ -15,8 +15,7 @@ module csrng_track_sm import csrng_pkg::*; #(
 
    // ins req interface
   input logic [StateId-1:0]  inst_id_i,
-  input logic                acmd_avail_i,
-  input logic                acmd_accept_i,
+  input logic                acmd_hdr_capt_i,
   input logic [Cmd-1:0]      acmd_i,
   input logic [StateId-1:0]  shid_i,
   input logic                ctr_drbg_cmd_req_i,

ParseResult:
UPD HdlIdDef@@acmd_accept_i to ben_ack_cntr_clr

MOV HdlIdDef@@acmd_accept_i to ports
HdlIdDef: acmd_accept_i
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: IN

UPD HdlIdDef@@acmd_avail_i to acmd_hdr_capt_i

UPD HdlIdDef@@acmd_accept_i to acmd_accept_i
    UPD HdlDirection@@IN to INTERNAL


CommitId: 5b548d5645334578da42e06c8539c57a2a8bffaf
[csrng/rtl] Two csrng app interfaces working
--- a/hw/ip/csrng/rtl/csrng_track_sm.sv
+++ b/hw/ip/csrng/rtl/csrng_track_sm.sv
@@ -60,6 +59,13 @@ module csrng_track_sm import csrng_pkg::*; #(
   output logic [7:0]         track_sm_o
 );
 
+  // signals
+  logic  ben_ack_cntr_inc;
+  logic  ben_ack_cntr_clr;
+
+  // flops
+  logic [1:0] ben_ack_cntr_q, ben_ack_cntr_d;
+
 
   localparam int StateWidth = 8;
   typedef    enum logic [StateWidth-1:0] {

ParseResult:
INS HdlIdDef@@ben_ack_cntr_inc to objs
HdlIdDef: ben_ack_cntr_inc
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

INS HdlIdDef@@ben_ack_cntr_q to objs
HdlIdDef: ben_ack_cntr_q
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: INTERNAL

INS HdlIdDef@@ben_ack_cntr_d to objs
HdlIdDef: ben_ack_cntr_d
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: INTERNAL


CommitId: 5b548d5645334578da42e06c8539c57a2a8bffaf
[csrng/rtl] Two csrng app interfaces working
--- a/hw/ip/csrng/rtl/csrng_track_sm.sv
+++ b/hw/ip/csrng/rtl/csrng_track_sm.sv
@@ -133,14 +139,27 @@ module csrng_track_sm import csrng_pkg::*; #(
     .q_o ( state_raw_q )
   );
 
+  always_ff @(posedge clk_i or negedge rst_ni)
+    if (!rst_ni) begin
+      ben_ack_cntr_q      <= '0;
+    end else begin
+      ben_ack_cntr_q     <= ben_ack_cntr_d;
+    end
+
+  assign  ben_ack_cntr_d = ben_ack_cntr_inc ? (ben_ack_cntr_q+1) :
+                           ben_ack_cntr_clr ? '0 :
+                           ben_ack_cntr_q;
+
   assign state_q = state_e'(state_raw_q);
   assign track_sm_o = state_raw_q;
 
   always_comb begin
     state_d = state_q;
+    ben_ack_cntr_inc = 1'b0;
+    ben_ack_cntr_clr = 1'b0;
     unique case (state_q)
       Idle: begin
-        if (acmd_avail_i && acmd_accept_i && (inst_id_i == shid_i)) begin
+        if (acmd_hdr_capt_i && (inst_id_i == shid_i)) begin
           if (acmd_i == INS) begin
             state_d = InsCmdCap;
           end else if (acmd_i == RES) begin

ParseResult:
INS HdlStmProcess@@ to objs
HdlStmProcess
    list: sensitivity
        HdlOp: RISING
            list: ops
                HdlValueId: clk_i
        HdlOp: FALLING
            list: ops
                HdlValueId: rst_ni
    HdlStmIf: body
        HdlOp: NEG_LOG
            list: ops
                HdlValueId: rst_ni
        HdlStmBlock: SEQ
            list: body
                HdlStmAssign
                    HdlValueInt: 0
                    HdlValueId: ben_ack_cntr_q
        list: elifs
        HdlStmBlock: SEQ
            list: body
                HdlStmAssign
                    HdlValueId: ben_ack_cntr_d
                    HdlValueId: ben_ack_cntr_q
    HdlStmProcessTriggerConstrain: FF

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: TERNARY
        list: ops
            HdlValueId: ben_ack_cntr_inc
            HdlOp: ADD
                list: ops
                    HdlValueId: ben_ack_cntr_q
                    HdlValueInt: 1
            HdlOp: TERNARY
                list: ops
                    HdlValueId: ben_ack_cntr_clr
                    HdlValueInt: 0
                    HdlValueId: ben_ack_cntr_q
    HdlValueId: ben_ack_cntr_d

UPD HdlStmIf@@ to 
    UPD HdlOp@@AND_LOG to AND_LOG
        UPD HdlOp@@AND_LOG to AND_LOG
            UPD HdlValueId@@acmd_accept_i to acmd_hdr_capt_i
            MOV HdlValueId@@acmd_accept_i to ops
            HdlValueId: acmd_accept_i
            DEL HdlValueId@@acmd_avail_i from ops
            DEL list@@ops from AND_LOG
        DEL HdlOp@@AND_LOG from ops

UPD HdlStmCase@@state_q to state_q
    DEL HdlStmCaseType@@CASE from state_q
    DEL HdlValueId@@state_q from state_q
    DEL HdlStmCaseUniqConstrain@@UNIQUE from state_q

UPD HdlStmProcess@@ to 
    DEL HdlStmProcessTriggerConstrain@@COMB from 


CommitId: 5b548d5645334578da42e06c8539c57a2a8bffaf
[csrng/rtl] Two csrng app interfaces working
--- a/hw/ip/csrng/rtl/csrng_track_sm.sv
+++ b/hw/ip/csrng/rtl/csrng_track_sm.sv
@@ -264,10 +283,15 @@ module csrng_track_sm import csrng_pkg::*; #(
           state_d = GenDrbgUpd1Rtn;
         end
       end
-      GenDrbgUpd1Rtn: begin
+      GenDrbgUpd1Rtn: begin // wait for 3 acks
         if (benblk_updblk_ack_i && updblk_benblk_ack_rdy_i &&
             (benblk_cmd_i == GEN) && (benblk_inst_id_i == inst_id_i)) begin
-          state_d = GenDrbgCmd1Rtn;
+          if (ben_ack_cntr_q != 2) begin
+            ben_ack_cntr_inc = 1'b1;
+          end else begin
+            ben_ack_cntr_clr = 1'b1;
+            state_d = GenDrbgCmd1Rtn;
+          end
         end
       end
       GenDrbgCmd1Rtn: begin

ParseResult:
UPD HdlStmProcess@@ to 
    INS HdlStmProcessTriggerConstrain@@COMB to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: ben_ack_cntr_inc
                HdlValueInt: 0
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: ben_ack_cntr_clr
                HdlValueInt: 0

UPD HdlStmCase@@state_q to state_q
    INS HdlStmCaseType@@CASE to state_q
    INS HdlValueId@@state_q to state_q
    INS HdlStmCaseUniqConstrain@@UNIQUE to state_q

INS HdlStmIf@@ to body

UPD HdlStmIf@@ to 
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: state_d
                    HdlValueId: GenDrbgCmd1Rtn

UPD HdlStmCase@@state_q to state_q
    DEL HdlStmCaseType@@CASE from state_q
    DEL HdlValueId@@state_q from state_q
    DEL HdlStmCaseUniqConstrain@@UNIQUE from state_q

UPD HdlStmProcess@@ to 
    DEL HdlStmProcessTriggerConstrain@@COMB from 


CommitId: 5b548d5645334578da42e06c8539c57a2a8bffaf
[csrng/rtl] Two csrng app interfaces working
--- a/hw/ip/csrng/rtl/csrng_track_sm.sv
+++ b/hw/ip/csrng/rtl/csrng_track_sm.sv
@@ -306,10 +330,15 @@ module csrng_track_sm import csrng_pkg::*; #(
           state_d = GenDrbgUpd2Rtn;
         end
       end
-      GenDrbgUpd2Rtn: begin
+      GenDrbgUpd2Rtn: begin // wait for 3 acks
         if (benblk_updblk_ack_i && updblk_benblk_ack_rdy_i &&
             (benblk_cmd_i == GENU) && (benblk_inst_id_i == inst_id_i)) begin
-          state_d = GenDrbgGen2Rtn;
+          if (ben_ack_cntr_q != 2) begin
+            ben_ack_cntr_inc = 1'b1;
+          end else begin
+            ben_ack_cntr_clr = 1'b1;
+            state_d = GenDrbgGen2Rtn;
+          end
         end
       end
       GenDrbgGen2Rtn: begin
ParseResult:
UPD HdlStmProcess@@ to 
    INS HdlStmProcessTriggerConstrain@@COMB to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: ben_ack_cntr_inc
                HdlValueInt: 0
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: ben_ack_cntr_clr
                HdlValueInt: 0

UPD HdlStmCase@@state_q to state_q
    INS HdlStmCaseType@@CASE to state_q
    INS HdlValueId@@state_q to state_q
    INS HdlStmCaseUniqConstrain@@UNIQUE to state_q

INS HdlStmIf@@ to body

UPD HdlStmIf@@ to 
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: state_d
                    HdlValueId: GenDrbgGen2Rtn

UPD HdlStmCase@@state_q to state_q
    DEL HdlStmCaseType@@CASE from state_q
    DEL HdlValueId@@state_q from state_q
    DEL HdlStmCaseUniqConstrain@@UNIQUE from state_q

UPD HdlStmProcess@@ to 
    DEL HdlStmProcessTriggerConstrain@@COMB from 


CommitId: de7eba3d7af1f55b7bda8104152b4240f3d37456
[csrng/entropy_src] fix for #4601
--- a/hw/ip/csrng/rtl/csrng_block_encrypt.sv
+++ b/hw/ip/csrng/rtl/csrng_block_encrypt.sv
@@ -30,6 +30,7 @@ module csrng_block_encrypt #(
   output logic [Cmd-1:0]     block_encrypt_cmd_o,
   output logic [StateId-1:0] block_encrypt_id_o,
   output logic [BlkLen-1:0]  block_encrypt_v_o,
+  output logic               block_encrypt_quiet_o,
   output logic               block_encrypt_aes_cipher_sm_err_o,
   output logic [2:0]         block_encrypt_sfifo_blkenc_err_o
 );

ParseResult:
INS HdlIdDef@@block_encrypt_quiet_o to ports
HdlIdDef: block_encrypt_quiet_o
    HdlValueId: logic
    HdlDirection: OUT


CommitId: de7eba3d7af1f55b7bda8104152b4240f3d37456
[csrng/entropy_src] fix for #4601
--- a/hw/ip/csrng/rtl/csrng_block_encrypt.sv
+++ b/hw/ip/csrng/rtl/csrng_block_encrypt.sv
@@ -55,6 +56,7 @@ module csrng_block_encrypt #(
   aes_pkg::sp2v_e       cipher_in_ready;
   aes_pkg::sp2v_e       cipher_out_valid;
   aes_pkg::sp2v_e       cipher_out_ready;
+  aes_pkg::sp2v_e       cipher_crypt_busy;
   logic [BlkLen-1:0]    cipher_data_out;
   logic                 aes_cipher_core_enable;
 

ParseResult:
INS HdlIdDef@@cipher_crypt_busy to objs
HdlIdDef: cipher_crypt_busy
    HdlOp: DOUBLE_COLON
        list: ops
            HdlValueId: aes_pkg
            HdlValueId: sp2v_e
    HdlDirection: INTERNAL


CommitId: de7eba3d7af1f55b7bda8104152b4240f3d37456
[csrng/entropy_src] fix for #4601
--- a/hw/ip/csrng/rtl/csrng_block_encrypt.sv
+++ b/hw/ip/csrng/rtl/csrng_block_encrypt.sv
@@ -170,4 +172,13 @@ module csrng_block_encrypt #(
           (sfifo_blkenc_pop && !sfifo_blkenc_not_empty),
           (sfifo_blkenc_full && !sfifo_blkenc_not_empty)};
 
+  //--------------------------------------------
+  // idle detection
+  //--------------------------------------------
+
+  // simple aes cipher activity detector
+  assign block_encrypt_quiet_o =
+         (cipher_in_valid == aes_pkg::SP2V_LOW) && (cipher_in_ready == aes_pkg::SP2V_LOW) ||
+         (cipher_crypt_busy == aes_pkg::SP2V_LOW);
+
 endmodule
ParseResult:
INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: OR_LOG
        list: ops
            HdlOp: AND_LOG
                list: ops
                    HdlOp: EQ
                        list: ops
                            HdlValueId: cipher_in_valid
                            HdlOp: DOUBLE_COLON
                                list: ops
                                    HdlValueId: aes_pkg
                                    HdlValueId: SP2V_LOW
                    HdlOp: EQ
                        list: ops
                            HdlValueId: cipher_in_ready
                            HdlOp: DOUBLE_COLON
                                list: ops
                                    HdlValueId: aes_pkg
                                    HdlValueId: SP2V_LOW
            HdlOp: EQ
                list: ops
                    HdlValueId: cipher_crypt_busy
                    HdlOp: DOUBLE_COLON
                        list: ops
                            HdlValueId: aes_pkg
                            HdlValueId: SP2V_LOW
    HdlValueId: block_encrypt_quiet_o


CommitId: 0a8fbf901db9264c14a95daea9d1f46bd06d5c80
Reduce default flash read to 1 cycle
--- a/hw/ip/prim_generic/rtl/prim_generic_flash.sv
+++ b/hw/ip/prim_generic/rtl/prim_generic_flash.sv
@@ -37,7 +37,7 @@ module prim_generic_flash #(
 );
 
   // Emulated flash macro values
-  localparam int ReadCycles = 2;
+  localparam int ReadCycles = 1;
   localparam int ProgCycles = 50;
   localparam int PgEraseCycles = 200;
   localparam int BkEraseCycles = 2000;
ParseResult:
UPD HdlIdDef@@ReadCycles to ReadCycles
    UPD HdlValueInt@@2 to 1


CommitId: 098128c9003b1ab226ff17001ac59845a6755f24
Revert "Revert "[usbdev] Fixes for I/O modes and expand their tests""
--- a/hw/ip/usbdev/rtl/usbdev_iomux.sv
+++ b/hw/ip/usbdev/rtl/usbdev_iomux.sv
@@ -40,12 +40,11 @@ module usbdev_iomux
 
   // Internal USB Interface (usb clk)
   output logic                          usb_rx_d_o,
-  output logic                          usb_rx_se0_o,
-
+  output logic                          usb_rx_dp_o,
+  output logic                          usb_rx_dn_o,
   input  logic                          usb_tx_d_i,
   input  logic                          usb_tx_se0_i,
   input  logic                          usb_tx_oe_i,
-
   output logic                          usb_pwr_sense_o,
   input  logic                          usb_pullup_en_i,
   input  logic                          usb_suspend_i

ParseResult:
UPD HdlIdDef@@usb_rx_se0_o to usb_rx_dn_o


CommitId: 098128c9003b1ab226ff17001ac59845a6755f24
Revert "Revert "[usbdev] Fixes for I/O modes and expand their tests""
--- a/hw/ip/usbdev/rtl/usbdev_iomux.sv
+++ b/hw/ip/usbdev/rtl/usbdev_iomux.sv
@@ -53,15 +52,16 @@ module usbdev_iomux
 
   logic async_pwr_sense, sys_usb_sense;
   logic cio_usb_dp, cio_usb_dn, cio_usb_d;
-  logic usb_rx_dp, usb_rx_dn, usb_rx_d;
   logic pinflip;
   logic unused_eop_single_bit;
+  logic unused_rx_differential_mode;
   logic unused_usb_ref_disable;
   logic unused_tx_osc_test_mode;
 
-  assign unused_eop_single_bit   = sys_reg2hw_config_i.eop_single_bit.q;
-  assign unused_usb_ref_disable  = sys_reg2hw_config_i.usb_ref_disable.q;
-  assign unused_tx_osc_test_mode = sys_reg2hw_config_i.tx_osc_test_mode.q;
+  assign unused_eop_single_bit       = sys_reg2hw_config_i.eop_single_bit.q;
+  assign unused_usb_ref_disable      = sys_reg2hw_config_i.usb_ref_disable.q;
+  assign unused_tx_osc_test_mode     = sys_reg2hw_config_i.tx_osc_test_mode.q;
+  assign unused_rx_differential_mode = sys_reg2hw_config_i.rx_differential_mode.q;
 
   //////////
   // CDCs //

ParseResult:
MOV HdlIdDef@@usb_rx_d to objs
HdlIdDef: usb_rx_d
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

UPD HdlIdDef@@usb_rx_d to unused_rx_differential_mode

INS HdlStmAssign@@ to objs

UPD HdlIdDef@@usb_rx_dn to usb_rx_dp_o

MOV HdlIdDef@@usb_rx_dn to objs
HdlIdDef: usb_rx_dn
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

UPD HdlIdDef@@usb_rx_dn to usb_rx_dn
    UPD HdlDirection@@INTERNAL to OUT

DEL HdlIdDef@@usb_rx_dp from objs
HdlIdDef: usb_rx_dp
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL


CommitId: 5b548d5645334578da42e06c8539c57a2a8bffaf
[csrng/rtl] Two csrng app interfaces working
--- a/hw/ip/csrng/rtl/csrng_core.sv
+++ b/hw/ip/csrng/rtl/csrng_core.sv
@@ -123,12 +123,14 @@ module csrng_core import csrng_pkg::*; #(
   logic [BlkLen-1:0]      gen_result_bits;
 
   logic                   acmd_accept;
+  logic                   acmd_hdr_capt;
   logic                   instant_req;
   logic                   reseed_req;
   logic                   generate_req;
   logic                   update_req;
   logic                   uninstant_req;
   logic [3:0]             fifo_sel;
+  logic [Cmd-1:0]         ctr_drbg_cmd_ccmd;
   logic                   ctr_drbg_cmd_req;
   logic                   ctr_drbg_gen_req;
   logic                   ctr_drbg_gen_req_rdy;

ParseResult:
INS HdlIdDef@@acmd_hdr_capt to objs
HdlIdDef: acmd_hdr_capt
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

INS HdlIdDef@@ctr_drbg_cmd_ccmd to objs
HdlIdDef: ctr_drbg_cmd_ccmd
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlOp: SUB
                        list: ops
                            HdlValueId: Cmd
                            HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: INTERNAL


CommitId: 5b548d5645334578da42e06c8539c57a2a8bffaf
[csrng/rtl] Two csrng app interfaces working
--- a/hw/ip/csrng/rtl/csrng_core.sv
+++ b/hw/ip/csrng/rtl/csrng_core.sv
@@ -319,6 +321,7 @@ module csrng_core import csrng_pkg::*; #(
   logic        lc_hw_debug_not_on_q, lc_hw_debug_not_on_d;
   logic        lc_hw_debug_on_q, lc_hw_debug_on_d;
   logic        cmd_req_dly_q, cmd_req_dly_d;
+  logic [Cmd-1:0] cmd_req_ccmd_dly_q, cmd_req_ccmd_dly_d;
   logic           cs_aes_halt_q, cs_aes_halt_d;
 
   always_ff @(posedge clk_i or negedge rst_ni)

ParseResult:
INS HdlIdDef@@cmd_req_ccmd_dly_q to objs
HdlIdDef: cmd_req_ccmd_dly_q
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlOp: SUB
                        list: ops
                            HdlValueId: Cmd
                            HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: INTERNAL

INS HdlIdDef@@cmd_req_ccmd_dly_d to objs
HdlIdDef: cmd_req_ccmd_dly_d
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlOp: SUB
                        list: ops
                            HdlValueId: Cmd
                            HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: INTERNAL


CommitId: 5b548d5645334578da42e06c8539c57a2a8bffaf
[csrng/rtl] Two csrng app interfaces working
--- a/hw/ip/csrng/rtl/csrng_core.sv
+++ b/hw/ip/csrng/rtl/csrng_core.sv
@@ -331,6 +334,7 @@ module csrng_core import csrng_pkg::*; #(
       lc_hw_debug_not_on_q <= '0;
       lc_hw_debug_on_q <= '0;
       cmd_req_dly_q <= '0;
+      cmd_req_ccmd_dly_q <= '0;
       cs_aes_halt_q <= '0;
     end else begin
       acmd_q  <= acmd_d;

ParseResult:
INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: cmd_req_ccmd_dly_q


CommitId: 5b548d5645334578da42e06c8539c57a2a8bffaf
[csrng/rtl] Two csrng app interfaces working
--- a/hw/ip/csrng/rtl/csrng_core.sv
+++ b/hw/ip/csrng/rtl/csrng_core.sv
@@ -341,6 +345,7 @@ module csrng_core import csrng_pkg::*; #(
       lc_hw_debug_not_on_q <= lc_hw_debug_not_on_d;
       lc_hw_debug_on_q <= lc_hw_debug_on_d;
       cmd_req_dly_q <= cmd_req_dly_d;
+      cmd_req_ccmd_dly_q <= cmd_req_ccmd_dly_d;
       cs_aes_halt_q <= cs_aes_halt_d;
     end
 

ParseResult:
INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueId: cmd_req_ccmd_dly_d
    HdlValueId: cmd_req_ccmd_dly_q


CommitId: 5b548d5645334578da42e06c8539c57a2a8bffaf
[csrng/rtl] Two csrng app interfaces working
--- a/hw/ip/csrng/rtl/csrng_core.sv
+++ b/hw/ip/csrng/rtl/csrng_core.sv
@@ -987,6 +994,9 @@ module csrng_core import csrng_pkg::*; #(
 
 
 
+  assign cmd_req_ccmd_dly_d = acmd_hold;
+  assign ctr_drbg_cmd_ccmd = cmd_req_ccmd_dly_q;
+
   assign cmd_req_dly_d =
          instant_req || reseed_req || generate_req || update_req || uninstant_req;
 

ParseResult:
INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlValueId: acmd_hold
    HdlValueId: cmd_req_ccmd_dly_d

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlValueId: cmd_req_ccmd_dly_q
    HdlValueId: ctr_drbg_cmd_ccmd


CommitId: e1bc36198309dcbe9a993d7cc4067a1011deb455
[edn,lint] Fix width mismatch in the definition of cmd_sent
--- a/hw/ip/edn/rtl/edn_core.sv
+++ b/hw/ip/edn/rtl/edn_core.sv
@@ -47,6 +47,8 @@ module edn_core import edn_pkg::*;
   localparam int CSGenBitsWidth = 128;
   localparam int EndPointBusWidth = 32;
 
+  localparam int RescmdFifoIdxWidth = $clog2(RescmdFifoDepth);
+
   // signals
   logic event_edn_cmd_req_done;
   logic event_edn_fatal_err;

ParseResult:
INS HdlIdDef@@RescmdFifoIdxWidth to objs

UPD HdlIdDef@@RescmdFifoIdxWidth to RescmdFifoIdxWidth
    INS HdlValueId@@int to RescmdFifoIdxWidth
    INS HdlDirection@@INTERNAL to RescmdFifoIdxWidth


CommitId: e1bc36198309dcbe9a993d7cc4067a1011deb455
[edn,lint] Fix width mismatch in the definition of cmd_sent
--- a/hw/ip/edn/rtl/edn_core.sv
+++ b/hw/ip/edn/rtl/edn_core.sv
@@ -99,7 +101,7 @@ module edn_core import edn_pkg::*;
   logic [EndPointBusWidth-1:0] packer_ep_rdata [NumEndPoints];
 
   // rescmd fifo
-  logic [$clog2(RescmdFifoDepth)-1:0] sfifo_rescmd_depth;
+  logic [RescmdFifoIdxWidth-1:0]      sfifo_rescmd_depth;
   logic [RescmdFifoWidth-1:0]         sfifo_rescmd_rdata;
   logic                               sfifo_rescmd_clr;
   logic                               sfifo_rescmd_push;

ParseResult:
INS HdlIdDef@@sfifo_rescmd_depth to objs
HdlIdDef: sfifo_rescmd_depth
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlOp: SUB
                        list: ops
                            HdlValueId: RescmdFifoIdxWidth
                            HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: INTERNAL

UPD HdlIdDef@@sfifo_rescmd_depth to sfifo_rescmd_depth
    UPD HdlOp@@PARAMETRIZATION to PARAMETRIZATION
        UPD HdlOp@@DOWNTO to DOWNTO
            UPD HdlOp@@SUB to SUB
                MOV HdlOp@@CALL to ops
                HdlOp: CALL
                    list: ops
                        HdlValueId: $clog2
                        HdlValueId: RescmdFifoDepth
                DEL HdlValueInt@@1 from ops
                DEL list@@ops from SUB
            DEL HdlOp@@SUB from ops
            DEL HdlValueInt@@0 from ops
            DEL list@@ops from DOWNTO
        DEL HdlValueId@@logic from ops
        DEL HdlOp@@DOWNTO from ops
        DEL list@@ops from PARAMETRIZATION
    DEL HdlOp@@PARAMETRIZATION from sfifo_rescmd_depth
    DEL HdlDirection@@INTERNAL from sfifo_rescmd_depth

DEL HdlIdDef@@sfifo_rescmd_depth from objs


CommitId: e1bc36198309dcbe9a993d7cc4067a1011deb455
[edn,lint] Fix width mismatch in the definition of cmd_sent
--- a/hw/ip/edn/rtl/edn_core.sv
+++ b/hw/ip/edn/rtl/edn_core.sv
@@ -134,7 +136,7 @@ module edn_core import edn_pkg::*;
   logic                               cs_cmd_req_vld_q, cs_cmd_req_vld_d;
   logic [31:0]                        cs_cmd_req_out_q, cs_cmd_req_out_d;
   logic                               cs_cmd_req_vld_out_q, cs_cmd_req_vld_out_d;
-  logic [$clog2(RescmdFifoDepth)-1:0] cmd_fifo_cnt_q, cmd_fifo_cnt_d;
+  logic [RescmdFifoIdxWidth-1:0]      cmd_fifo_cnt_q, cmd_fifo_cnt_d;
   logic                               send_rescmd_q, send_rescmd_d;
   logic                               send_gencmd_q, send_gencmd_d;
   logic [31:0]                        max_reqs_cnt_q, max_reqs_cnt_d;

ParseResult:
INS HdlIdDef@@cmd_fifo_cnt_q to objs
HdlIdDef: cmd_fifo_cnt_q
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlOp: SUB
                        list: ops
                            HdlValueId: RescmdFifoIdxWidth
                            HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: INTERNAL

INS HdlIdDef@@cmd_fifo_cnt_d to objs
HdlIdDef: cmd_fifo_cnt_d
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlOp: SUB
                        list: ops
                            HdlValueId: RescmdFifoIdxWidth
                            HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: INTERNAL

DEL HdlIdDef@@cmd_fifo_cnt_q from objs
HdlIdDef: cmd_fifo_cnt_q
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlOp: SUB
                        list: ops
                            HdlOp: CALL
                                list: ops
                                    HdlValueId: $clog2
                                    HdlValueId: RescmdFifoDepth
                            HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: INTERNAL

DEL HdlIdDef@@cmd_fifo_cnt_d from objs
HdlIdDef: cmd_fifo_cnt_d
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlOp: SUB
                        list: ops
                            HdlOp: CALL
                                list: ops
                                    HdlValueId: $clog2
                                    HdlValueId: RescmdFifoDepth
                            HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: INTERNAL


CommitId: e1bc36198309dcbe9a993d7cc4067a1011deb455
[edn,lint] Fix width mismatch in the definition of cmd_sent
--- a/hw/ip/edn/rtl/edn_core.sv
+++ b/hw/ip/edn/rtl/edn_core.sv
@@ -452,7 +454,7 @@ module edn_core import edn_pkg::*;
          (send_gencmd || send_rescmd)? (cmd_fifo_cnt_q-1) :
          cmd_fifo_cnt_q;
 
-  assign cmd_sent = (cmd_fifo_cnt_q == 13'h01);
+  assign cmd_sent = (cmd_fifo_cnt_q == RescmdFifoIdxWidth'(1));
 
 
   // boot request
ParseResult:
INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: EQ
        list: ops
            HdlValueId: cmd_fifo_cnt_q
            HdlOp: CALL
                list: ops
                    HdlValueId: RescmdFifoIdxWidth
                    HdlValueInt: 1
    HdlValueId: cmd_sent

DEL HdlStmAssign@@ from objs
HdlStmAssign
    HdlOp: EQ
        list: ops
            HdlValueId: cmd_fifo_cnt_q
            HdlValueInt: 01
    HdlValueId: cmd_sent


CommitId: 6f9c25b351c6e1c09197010da87c20e03466b49b
[top] Fix a templating bug that breaks CI
--- a/hw/top_earlgrey/rtl/autogen/chip_earlgrey_asic.sv
+++ b/hw/top_earlgrey/rtl/autogen/chip_earlgrey_asic.sv
@@ -875,11 +875,6 @@ module chip_earlgrey_asic (
   assign manual_out_flash_test_volt = 1'b0;
   assign manual_oe_flash_test_volt = 1'b0;
 
-  assign manual_out_flash_test_mode0 = 1'b0;
-  assign manual_out_flash_test_mode1 = 1'b0;
-  assign manual_oe_flash_test_mode0 = 1'b0;
-  assign manual_oe_flash_test_mode1 = 1'b0;
-
   // These pad attributes currently tied off permanently (these are all input-only pads).
   assign manual_attr_por_n = '0;
   assign manual_attr_cc1 = '0;

ParseResult:
DEL HdlStmAssign@@ from objs
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: manual_out_flash_test_mode0

DEL HdlStmAssign@@ from objs
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: manual_out_flash_test_mode1

DEL HdlStmAssign@@ from objs
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: manual_oe_flash_test_mode0

DEL HdlStmAssign@@ from objs
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: manual_oe_flash_test_mode1


CommitId: 6f9c25b351c6e1c09197010da87c20e03466b49b
[top] Fix a templating bug that breaks CI
--- a/hw/top_earlgrey/rtl/autogen/chip_earlgrey_asic.sv
+++ b/hw/top_earlgrey/rtl/autogen/chip_earlgrey_asic.sv
@@ -887,8 +882,6 @@ module chip_earlgrey_asic (
   assign manual_attr_flash_test_mode0 = '0;
   assign manual_attr_flash_test_mode1 = '0;
   assign manual_attr_flash_test_volt = '0;
-  assign manual_attr_flash_test_mode0 = '0;
-  assign manual_attr_flash_test_mode1 = '0;
 
   logic unused_manual_sigs;
   assign unused_manual_sigs = ^{
ParseResult:
DEL HdlStmAssign@@ from objs
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: manual_attr_flash_test_mode0

DEL HdlStmAssign@@ from objs
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: manual_attr_flash_test_mode1


CommitId: d65d139663d32e8b509e5aa5af2b848daab74a6b
[csrng/rtl] added fatal alert
--- a/hw/ip/csrng/rtl/csrng_ctr_drbg_gen.sv
+++ b/hw/ip/csrng/rtl/csrng_ctr_drbg_gen.sv
@@ -73,7 +73,8 @@ module csrng_ctr_drbg_gen import csrng_pkg::*; #(
   output logic [2:0]         ctr_drbg_gen_sfifo_grcstage_err_o,
   output logic [2:0]         ctr_drbg_gen_sfifo_ggenreq_err_o,
   output logic [2:0]         ctr_drbg_gen_sfifo_gadstage_err_o,
-  output logic [2:0]         ctr_drbg_gen_sfifo_ggenbits_err_o
+  output logic [2:0]         ctr_drbg_gen_sfifo_ggenbits_err_o,
+  output logic               ctr_drbg_gen_sm_err_o
 );
 
   localparam int GenreqFifoDepth = 1;

ParseResult:
INS HdlIdDef@@ctr_drbg_gen_sm_err_o to ports
HdlIdDef: ctr_drbg_gen_sm_err_o
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: OUT


CommitId: d65d139663d32e8b509e5aa5af2b848daab74a6b
[csrng/rtl] added fatal alert
--- a/hw/ip/csrng/rtl/csrng_ctr_drbg_gen.sv
+++ b/hw/ip/csrng/rtl/csrng_ctr_drbg_gen.sv
@@ -116,7 +117,7 @@ module csrng_ctr_drbg_gen import csrng_pkg::*; #(
   logic                       sfifo_genreq_push;
   logic [GenreqFifoWidth-1:0] sfifo_genreq_wdata;
   logic                       sfifo_genreq_pop;
-  logic                       sfifo_genreq_not_full;
+  logic                       sfifo_genreq_full;
   logic                       sfifo_genreq_not_empty;
 
   // adstage fifo

ParseResult:
UPD HdlIdDef@@sfifo_genreq_not_full to sfifo_genreq_full


CommitId: d65d139663d32e8b509e5aa5af2b848daab74a6b
[csrng/rtl] added fatal alert
--- a/hw/ip/csrng/rtl/csrng_ctr_drbg_gen.sv
+++ b/hw/ip/csrng/rtl/csrng_ctr_drbg_gen.sv
@@ -124,14 +125,14 @@ module csrng_ctr_drbg_gen import csrng_pkg::*; #(
   logic                        sfifo_adstage_push;
   logic [AdstageFifoWidth-1:0] sfifo_adstage_wdata;
   logic                        sfifo_adstage_pop;
-  logic                        sfifo_adstage_not_full;
+  logic                        sfifo_adstage_full;
   logic                        sfifo_adstage_not_empty;
   // blk_encrypt_ack fifo
   logic [BlkEncAckFifoWidth-1:0] sfifo_bencack_rdata;
   logic                       sfifo_bencack_push;
   logic [BlkEncAckFifoWidth-1:0] sfifo_bencack_wdata;
   logic                       sfifo_bencack_pop;
-  logic                       sfifo_bencack_not_full;
+  logic                       sfifo_bencack_full;
   logic                       sfifo_bencack_not_empty;
   // breakout
   logic [Cmd-1:0]             sfifo_bencack_ccmd;

ParseResult:
UPD HdlIdDef@@sfifo_adstage_not_full to sfifo_adstage_full

UPD HdlIdDef@@sfifo_bencack_not_full to sfifo_bencack_full


CommitId: d65d139663d32e8b509e5aa5af2b848daab74a6b
[csrng/rtl] added fatal alert
--- a/hw/ip/csrng/rtl/csrng_ctr_drbg_gen.sv
+++ b/hw/ip/csrng/rtl/csrng_ctr_drbg_gen.sv
@@ -143,7 +144,7 @@ module csrng_ctr_drbg_gen import csrng_pkg::*; #(
   logic                        sfifo_rcstage_push;
   logic [RCStageFifoWidth-1:0] sfifo_rcstage_wdata;
   logic                        sfifo_rcstage_pop;
-  logic                        sfifo_rcstage_not_full;
+  logic                        sfifo_rcstage_full;
   logic                        sfifo_rcstage_not_empty;
 
   // genbits fifo

ParseResult:
UPD HdlIdDef@@sfifo_rcstage_not_full to sfifo_rcstage_full


CommitId: d65d139663d32e8b509e5aa5af2b848daab74a6b
[csrng/rtl] added fatal alert
--- a/hw/ip/csrng/rtl/csrng_ctr_drbg_gen.sv
+++ b/hw/ip/csrng/rtl/csrng_ctr_drbg_gen.sv
@@ -151,7 +152,7 @@ module csrng_ctr_drbg_gen import csrng_pkg::*; #(
   logic                        sfifo_genbits_push;
   logic [GenbitsFifoWidth-1:0] sfifo_genbits_wdata;
   logic                        sfifo_genbits_pop;
-  logic                        sfifo_genbits_not_full;
+  logic                        sfifo_genbits_full;
   logic                        sfifo_genbits_not_empty;
 
   logic [CtrLen-1:0]           v_inc;

ParseResult:
UPD HdlIdDef@@sfifo_genbits_not_full to sfifo_genbits_full


CommitId: d65d139663d32e8b509e5aa5af2b848daab74a6b
[csrng/rtl] added fatal alert
--- a/hw/ip/csrng/rtl/csrng_ctr_drbg_gen.sv
+++ b/hw/ip/csrng/rtl/csrng_ctr_drbg_gen.sv
@@ -247,12 +256,12 @@ module csrng_ctr_drbg_gen import csrng_pkg::*; #(
           genreq_fips,genreq_adata,
           genreq_id,genreq_ccmd} = sfifo_genreq_rdata;
 
-  assign ctr_drbg_gen_rdy_o = sfifo_genreq_not_full;
+  assign ctr_drbg_gen_rdy_o = !sfifo_genreq_full;
 
   assign ctr_drbg_gen_sfifo_ggenreq_err_o =
-         {(sfifo_genreq_push && !sfifo_genreq_not_full),
+         {(sfifo_genreq_push && sfifo_genreq_full),
           (sfifo_genreq_pop && !sfifo_genreq_not_empty),
-          (!sfifo_genreq_not_full && !sfifo_genreq_not_empty)};
+          (sfifo_genreq_full && !sfifo_genreq_not_empty)};
 
 
 

ParseResult:
INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: NEG_LOG
        list: ops
            HdlValueId: sfifo_genreq_full
    HdlValueId: ctr_drbg_gen_rdy_o

UPD HdlStmAssign@@ to 
    UPD HdlOp@@CONCAT to CONCAT
        UPD HdlOp@@AND_LOG to AND_LOG
            UPD HdlOp@@NEG_LOG to NEG_LOG
                UPD HdlValueId@@sfifo_genreq_not_full to sfifo_genreq_full
                MOV HdlValueId@@sfifo_genreq_not_full to ops
                HdlValueId: sfifo_genreq_not_full
                DEL list@@ops from NEG_LOG
            DEL HdlOp@@NEG_LOG from ops
        UPD HdlOp@@CONCAT to CONCAT
            UPD HdlOp@@AND_LOG to AND_LOG
                UPD HdlOp@@NEG_LOG to NEG_LOG
                    UPD HdlValueId@@sfifo_genreq_not_full to sfifo_genreq_full
                    MOV HdlValueId@@sfifo_genreq_not_full to ops
                    HdlValueId: sfifo_genreq_not_full
                    DEL list@@ops from NEG_LOG
                DEL HdlOp@@NEG_LOG from ops

DEL HdlStmAssign@@ from objs
HdlStmAssign
    HdlValueId: sfifo_genreq_not_full
    HdlValueId: ctr_drbg_gen_rdy_o


CommitId: d65d139663d32e8b509e5aa5af2b848daab74a6b
[csrng/rtl] added fatal alert
--- a/hw/ip/csrng/rtl/csrng_ctr_drbg_gen.sv
+++ b/hw/ip/csrng/rtl/csrng_ctr_drbg_gen.sv
@@ -300,15 +309,17 @@ module csrng_ctr_drbg_gen import csrng_pkg::*; #(
     sfifo_adstage_push = 1'b0;
     block_encrypt_req_o = 1'b0;
     sfifo_genreq_pop = 1'b0;
+    ctr_drbg_gen_sm_err_o = 1'b0;
     unique case (state_q)
       // ReqIdle: increment v this cycle, push in next
-      ReqIdle:
-        if (sfifo_genreq_not_empty && sfifo_adstage_not_full) begin
+      ReqIdle: begin
+        if (sfifo_genreq_not_empty && !sfifo_adstage_full) begin
           v_ctr_load = 1'b1;
           sfifo_adstage_push = 1'b1;
           state_d = ReqSend;
         end
-      ReqSend:
+      end
+      ReqSend: begin
         if (!interate_ctr_done) begin
           block_encrypt_req_o = 1'b1;
           if (block_encrypt_rdy_i) begin

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: ctr_drbg_gen_sm_err_o
                HdlValueInt: 0

UPD HdlStmCase@@state_q to state_q
    INS tuple@@ to cases
    tuple
        HdlValueId: ReqError
        HdlStmBlock: SEQ
            list: body
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: ctr_drbg_gen_sm_err_o
                        HdlValueInt: 1
    INS HdlStmBlock@@SEQ to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmCase@@state_q to state_q
    UPD HdlOp@@ASSIGN to ASSIGN
        UPD HdlValueId@@ReqIdle to ReqError

MOV HdlStmIf@@ to 
HdlStmIf
    HdlOp: AND_LOG
        list: ops
            HdlValueId: sfifo_genreq_not_empty
            HdlValueId: sfifo_adstage_not_full
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: v_ctr_load
                    HdlValueInt: 1
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: sfifo_adstage_push
                    HdlValueInt: 1
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: state_d
                    HdlValueId: ReqSend
    list: elifs

MOV HdlStmIf@@ to 
HdlStmIf
    HdlOp: NEG_LOG
        list: ops
            HdlValueId: interate_ctr_done
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: block_encrypt_req_o
                    HdlValueInt: 1
            HdlStmIf
                HdlValueId: block_encrypt_rdy_i
                HdlStmBlock: SEQ
                    list: body
                        HdlOp: ASSIGN
                            list: ops
                                HdlValueId: v_ctr_inc
                                HdlValueInt: 1
                        HdlOp: ASSIGN
                            list: ops
                                HdlValueId: interate_ctr_inc
                                HdlValueInt: 1
                list: elifs
    list: elifs
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: sfifo_genreq_pop
                    HdlValueInt: 1
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: state_d
                    HdlValueId: ReqIdle

UPD HdlStmIf@@ to 
    UPD HdlOp@@AND_LOG to AND_LOG
        INS HdlOp@@NEG_LOG to ops
        UPD HdlOp@@NEG_LOG to NEG_LOG
            INS list@@ops to NEG_LOG

UPD HdlStmIf@@ to 
    UPD HdlOp@@AND_LOG to AND_LOG
        UPD HdlValueId@@sfifo_adstage_not_full to sfifo_adstage_full
        MOV HdlValueId@@sfifo_adstage_not_full to ops
        HdlValueId: sfifo_adstage_not_full


CommitId: d65d139663d32e8b509e5aa5af2b848daab74a6b
[csrng/rtl] added fatal alert
--- a/hw/ip/csrng/rtl/csrng_ctr_drbg_gen.sv
+++ b/hw/ip/csrng/rtl/csrng_ctr_drbg_gen.sv
@@ -319,7 +330,11 @@ module csrng_ctr_drbg_gen import csrng_pkg::*; #(
           sfifo_genreq_pop = 1'b1;
           state_d = ReqIdle;
         end
-      default: state_d = ReqIdle;
+      end
+      ReqError: begin
+        ctr_drbg_gen_sm_err_o = 1'b1;
+      end
+      default: state_d = ReqError;
     endcase
   end
 

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: ctr_drbg_gen_sm_err_o
                HdlValueInt: 0

UPD HdlStmCase@@state_q to state_q
    INS tuple@@ to cases
    tuple
        HdlValueId: ReqError
        HdlStmBlock: SEQ
            list: body
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: ctr_drbg_gen_sm_err_o
                        HdlValueInt: 1
    INS HdlStmBlock@@SEQ to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmCase@@state_q to state_q
    UPD HdlOp@@ASSIGN to ASSIGN
        UPD HdlValueId@@ReqIdle to ReqError

MOV HdlStmIf@@ to 
HdlStmIf
    HdlOp: NEG_LOG
        list: ops
            HdlValueId: interate_ctr_done
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: block_encrypt_req_o
                    HdlValueInt: 1
            HdlStmIf
                HdlValueId: block_encrypt_rdy_i
                HdlStmBlock: SEQ
                    list: body
                        HdlOp: ASSIGN
                            list: ops
                                HdlValueId: v_ctr_inc
                                HdlValueInt: 1
                        HdlOp: ASSIGN
                            list: ops
                                HdlValueId: interate_ctr_inc
                                HdlValueInt: 1
                list: elifs
    list: elifs
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: sfifo_genreq_pop
                    HdlValueInt: 1
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: state_d
                    HdlValueId: ReqIdle


CommitId: d65d139663d32e8b509e5aa5af2b848daab74a6b
[csrng/rtl] added fatal alert
--- a/hw/ip/csrng/rtl/csrng_ctr_drbg_gen.sv
+++ b/hw/ip/csrng/rtl/csrng_ctr_drbg_gen.sv
@@ -337,24 +352,23 @@ module csrng_ctr_drbg_gen import csrng_pkg::*; #(
     .rst_ni         (rst_ni),
     .clr_i          (!ctr_drbg_gen_enable_i),
     .wvalid_i       (sfifo_adstage_push),
-    .wready_o       (sfifo_adstage_not_full),
+    .wready_o       (),
     .wdata_i        (sfifo_adstage_wdata),
     .rvalid_o       (sfifo_adstage_not_empty),
     .rready_i       (sfifo_adstage_pop),
     .rdata_o        (sfifo_adstage_rdata),
-    .full_o         (),
+    .full_o         (sfifo_adstage_full),
     .depth_o        ()
   );
 
-//  assign sfifo_adstage_push = sfifo_genreq_pop;
   assign sfifo_adstage_wdata = {genreq_key,genreq_v,genreq_rc,genreq_fips,genreq_adata};
   assign sfifo_adstage_pop = sfifo_adstage_not_empty && sfifo_bencack_pop;
   assign {adstage_key,adstage_v,adstage_rc,adstage_fips,adstage_adata} = sfifo_adstage_rdata;
 
   assign ctr_drbg_gen_sfifo_gadstage_err_o =
-         {(sfifo_adstage_push && !sfifo_adstage_not_full),
+         {(sfifo_adstage_push && sfifo_adstage_full),
           (sfifo_adstage_pop && !sfifo_adstage_not_empty),
-          (!sfifo_adstage_not_full && !sfifo_adstage_not_empty)};
+          (sfifo_adstage_full && !sfifo_adstage_not_empty)};
 
 
 

ParseResult:
UPD HdlStmAssign@@ to 
    UPD HdlOp@@CONCAT to CONCAT
        UPD HdlOp@@AND_LOG to AND_LOG
            UPD HdlOp@@NEG_LOG to NEG_LOG
                UPD HdlValueId@@sfifo_adstage_not_full to sfifo_adstage_full
                MOV HdlValueId@@sfifo_adstage_not_full to ops
                HdlValueId: sfifo_adstage_not_full
                DEL list@@ops from NEG_LOG
            DEL HdlOp@@NEG_LOG from ops
        UPD HdlOp@@CONCAT to CONCAT
            UPD HdlOp@@AND_LOG to AND_LOG
                UPD HdlOp@@NEG_LOG to NEG_LOG
                    UPD HdlValueId@@sfifo_adstage_not_full to sfifo_adstage_full
                    MOV HdlValueId@@sfifo_adstage_not_full to ops
                    HdlValueId: sfifo_adstage_not_full
                    DEL list@@ops from NEG_LOG
                DEL HdlOp@@NEG_LOG from ops


CommitId: d65d139663d32e8b509e5aa5af2b848daab74a6b
[csrng/rtl] added fatal alert
--- a/hw/ip/csrng/rtl/csrng_ctr_drbg_gen.sv
+++ b/hw/ip/csrng/rtl/csrng_ctr_drbg_gen.sv
@@ -371,29 +385,29 @@ module csrng_ctr_drbg_gen import csrng_pkg::*; #(
     .rst_ni   (rst_ni),
     .clr_i    (!ctr_drbg_gen_enable_i),
     .wvalid_i (sfifo_bencack_push),
-    .wready_o (sfifo_bencack_not_full),
+    .wready_o (),
     .wdata_i  (sfifo_bencack_wdata),
     .rvalid_o (sfifo_bencack_not_empty),
     .rready_i (sfifo_bencack_pop),
     .rdata_o  (sfifo_bencack_rdata),
-    .full_o   (),
+    .full_o   (sfifo_bencack_full),
     .depth_o  ()
   );
 
   assign bencack_ccmd_modified = (block_encrypt_ccmd_i == GENB) ? GENU : INV;
 
-  assign sfifo_bencack_push = sfifo_bencack_not_full && block_encrypt_ack_i;
+  assign sfifo_bencack_push = !sfifo_bencack_full && block_encrypt_ack_i;
   assign sfifo_bencack_wdata = {block_encrypt_v_i,block_encrypt_inst_id_i,bencack_ccmd_modified};
-  assign block_encrypt_rdy_o = sfifo_bencack_not_full;
+  assign block_encrypt_rdy_o = !sfifo_bencack_full;
 
-  assign sfifo_bencack_pop = sfifo_rcstage_not_full && sfifo_bencack_not_empty && upd_gen_rdy_i;
+  assign sfifo_bencack_pop = !sfifo_rcstage_full && sfifo_bencack_not_empty && upd_gen_rdy_i;
 
   assign {sfifo_bencack_bits,sfifo_bencack_inst_id,sfifo_bencack_ccmd} = sfifo_bencack_rdata;
 
   assign ctr_drbg_gen_sfifo_gbencack_err_o =
-         {(sfifo_bencack_push && !sfifo_bencack_not_full),
+         {(sfifo_bencack_push && sfifo_bencack_full),
           (sfifo_bencack_pop && !sfifo_bencack_not_empty),
-          (!sfifo_bencack_not_full && !sfifo_bencack_not_empty)};
+          (sfifo_bencack_full && !sfifo_bencack_not_empty)};
 
 
   //--------------------------------------------

ParseResult:
INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: AND_LOG
        list: ops
            HdlOp: NEG_LOG
                list: ops
                    HdlValueId: sfifo_bencack_full
            HdlValueId: block_encrypt_ack_i
    HdlValueId: sfifo_bencack_push

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: NEG_LOG
        list: ops
            HdlValueId: sfifo_bencack_full
    HdlValueId: block_encrypt_rdy_o

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: AND_LOG
        list: ops
            HdlOp: AND_LOG
                list: ops
                    HdlOp: NEG_LOG
                        list: ops
                            HdlValueId: sfifo_rcstage_full
                    HdlValueId: sfifo_bencack_not_empty
            HdlValueId: upd_gen_rdy_i
    HdlValueId: sfifo_bencack_pop

UPD HdlStmAssign@@ to 
    UPD HdlOp@@CONCAT to CONCAT
        UPD HdlOp@@AND_LOG to AND_LOG
            UPD HdlOp@@NEG_LOG to NEG_LOG
                UPD HdlValueId@@sfifo_bencack_not_full to sfifo_bencack_full
                MOV HdlValueId@@sfifo_bencack_not_full to ops
                HdlValueId: sfifo_bencack_not_full
                DEL list@@ops from NEG_LOG
            DEL HdlOp@@NEG_LOG from ops
        UPD HdlOp@@CONCAT to CONCAT
            UPD HdlOp@@AND_LOG to AND_LOG
                UPD HdlOp@@NEG_LOG to NEG_LOG
                    UPD HdlValueId@@sfifo_bencack_not_full to sfifo_bencack_full
                    MOV HdlValueId@@sfifo_bencack_not_full to ops
                    HdlValueId: sfifo_bencack_not_full
                    DEL list@@ops from NEG_LOG
                DEL HdlOp@@NEG_LOG from ops

DEL HdlStmAssign@@ from objs
HdlStmAssign
    HdlOp: AND_LOG
        list: ops
            HdlValueId: sfifo_bencack_not_full
            HdlValueId: block_encrypt_ack_i
    HdlValueId: sfifo_bencack_push

DEL HdlStmAssign@@ from objs
HdlStmAssign
    HdlValueId: sfifo_bencack_not_full
    HdlValueId: block_encrypt_rdy_o

DEL HdlStmAssign@@ from objs
HdlStmAssign
    HdlOp: AND_LOG
        list: ops
            HdlOp: AND_LOG
                list: ops
                    HdlValueId: sfifo_rcstage_not_full
                    HdlValueId: sfifo_bencack_not_empty
            HdlValueId: upd_gen_rdy_i
    HdlValueId: sfifo_bencack_pop


CommitId: d65d139663d32e8b509e5aa5af2b848daab74a6b
[csrng/rtl] added fatal alert
--- a/hw/ip/csrng/rtl/csrng_ctr_drbg_gen.sv
+++ b/hw/ip/csrng/rtl/csrng_ctr_drbg_gen.sv
@@ -439,11 +453,11 @@ module csrng_ctr_drbg_gen import csrng_pkg::*; #(
 
 
   assign ctr_drbg_gen_sfifo_grcstage_err_o =
-         {(sfifo_rcstage_push && !sfifo_rcstage_not_full),
+         {(sfifo_rcstage_push && sfifo_rcstage_full),
           (sfifo_rcstage_pop && !sfifo_rcstage_not_empty),
-          (!sfifo_rcstage_not_full && !sfifo_rcstage_not_empty)};
+          (sfifo_rcstage_full && !sfifo_rcstage_not_empty)};
 
-  assign gen_upd_rdy_o = sfifo_rcstage_not_empty && sfifo_genbits_not_full;
+  assign gen_upd_rdy_o = sfifo_rcstage_not_empty && !sfifo_genbits_full;
 
 
   //--------------------------------------------

ParseResult:
INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: AND_LOG
        list: ops
            HdlValueId: sfifo_rcstage_not_empty
            HdlOp: NEG_LOG
                list: ops
                    HdlValueId: sfifo_genbits_full
    HdlValueId: gen_upd_rdy_o

UPD HdlStmAssign@@ to 
    UPD HdlOp@@CONCAT to CONCAT
        UPD HdlOp@@AND_LOG to AND_LOG
            UPD HdlOp@@NEG_LOG to NEG_LOG
                UPD HdlValueId@@sfifo_rcstage_not_full to sfifo_rcstage_full
                MOV HdlValueId@@sfifo_rcstage_not_full to ops
                HdlValueId: sfifo_rcstage_not_full
                DEL list@@ops from NEG_LOG
            DEL HdlOp@@NEG_LOG from ops
        UPD HdlOp@@CONCAT to CONCAT
            UPD HdlOp@@AND_LOG to AND_LOG
                UPD HdlOp@@NEG_LOG to NEG_LOG
                    UPD HdlValueId@@sfifo_rcstage_not_full to sfifo_rcstage_full
                    MOV HdlValueId@@sfifo_rcstage_not_full to ops
                    HdlValueId: sfifo_rcstage_not_full
                    DEL list@@ops from NEG_LOG
                DEL HdlOp@@NEG_LOG from ops

DEL HdlStmAssign@@ from objs
HdlStmAssign
    HdlOp: AND_LOG
        list: ops
            HdlValueId: sfifo_rcstage_not_empty
            HdlValueId: sfifo_genbits_not_full
    HdlValueId: gen_upd_rdy_o


CommitId: d65d139663d32e8b509e5aa5af2b848daab74a6b
[csrng/rtl] added fatal alert
--- a/hw/ip/csrng/rtl/csrng_ctr_drbg_gen.sv
+++ b/hw/ip/csrng/rtl/csrng_ctr_drbg_gen.sv
@@ -482,9 +496,9 @@ module csrng_ctr_drbg_gen import csrng_pkg::*; #(
           ctr_drbg_gen_inst_id_o,ctr_drbg_gen_ccmd_o} = sfifo_genbits_rdata;
 
   assign ctr_drbg_gen_sfifo_ggenbits_err_o =
-         {(sfifo_genbits_push && !sfifo_genbits_not_full),
+         {(sfifo_genbits_push && sfifo_genbits_full),
          (sfifo_genbits_pop && !sfifo_genbits_not_empty),
-         (!sfifo_genbits_not_full && !sfifo_genbits_not_empty)};
+         (sfifo_genbits_full && !sfifo_genbits_not_empty)};
 
   // block ack
   assign ctr_drbg_gen_ack_o = sfifo_genbits_pop;
ParseResult:
UPD HdlStmAssign@@ to 
    UPD HdlOp@@CONCAT to CONCAT
        UPD HdlOp@@AND_LOG to AND_LOG
            UPD HdlOp@@NEG_LOG to NEG_LOG
                UPD HdlValueId@@sfifo_genbits_not_full to sfifo_genbits_full
                MOV HdlValueId@@sfifo_genbits_not_full to ops
                HdlValueId: sfifo_genbits_not_full
                DEL list@@ops from NEG_LOG
            DEL HdlOp@@NEG_LOG from ops
        UPD HdlOp@@CONCAT to CONCAT
            UPD HdlOp@@AND_LOG to AND_LOG
                UPD HdlOp@@NEG_LOG to NEG_LOG
                    UPD HdlValueId@@sfifo_genbits_not_full to sfifo_genbits_full
                    MOV HdlValueId@@sfifo_genbits_not_full to ops
                    HdlValueId: sfifo_genbits_not_full
                    DEL list@@ops from NEG_LOG
                DEL HdlOp@@NEG_LOG from ops


CommitId: b5871b73f4bfa1371901f600b582d77110719440
[AST] AscentLint & Spyglass fixes
--- a/hw/top_earlgrey/ip/ast/rtl/rng.sv
+++ b/hw/top_earlgrey/ip/ast/rtl/rng.sv
@@ -13,6 +13,8 @@ module rng #(
   input rst_ni,
   input vcaon_pok_i,
   input rng_en_i,
+  input scan_mode_i,
+  input scan_reset_ni,
   output logic [EntropyStreams-1:0] rng_b_o,
   output logic rng_val_o
 );

ParseResult:
INS HdlIdDef@@scan_mode_i to ports
HdlIdDef: scan_mode_i
    HdlValueId: wire
    HdlDirection: IN

INS HdlIdDef@@scan_reset_ni to ports
HdlIdDef: scan_reset_ni
    HdlValueId: wire
    HdlDirection: IN


CommitId: b5871b73f4bfa1371901f600b582d77110719440
[AST] AscentLint & Spyglass fixes
--- a/hw/top_earlgrey/ip/ast/rtl/rng.sv
+++ b/hw/top_earlgrey/ip/ast/rtl/rng.sv
@@ -20,8 +22,7 @@ module rng #(
 ///////////////////////////////////////
 // Clock Oscilator
 ///////////////////////////////////////
-logic clk, rng_clk_en, rng_clk, rst_n;
-assign rst_n = vcaon_pok_i;
+logic clk, rng_clk_en, rng_clk;
 
 // clock Oschilator
 ////////////////////////////////////////

ParseResult:
DEL HdlIdDef@@rst_n from objs
HdlIdDef: rst_n
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

DEL HdlStmAssign@@ from objs
HdlStmAssign
    HdlValueId: vcaon_pok_i
    HdlValueId: rst_n


CommitId: b5871b73f4bfa1371901f600b582d77110719440
[AST] AscentLint & Spyglass fixes
--- a/hw/top_earlgrey/ip/ast/rtl/rng.sv
+++ b/hw/top_earlgrey/ip/ast/rtl/rng.sv
@@ -39,7 +40,7 @@ rng_osc u_rng_osc (
 logic rng_rst_n;
 logic[32-1:0] lfsr_val;
 
-assign rng_rst_n = rst_ni && rng_en_i;
+assign rng_rst_n = scan_mode_i ? scan_reset_ni : rst_ni && rng_en_i;
 
 always_ff @(posedge rng_clk_o, negedge rng_rst_n ) begin
   if ( !rng_rst_n ) begin
ParseResult:
UPD HdlStmAssign@@ to 
    INS HdlOp@@TERNARY to 
    UPD HdlOp@@TERNARY to TERNARY
        INS list@@ops to TERNARY
        INS HdlValueId@@scan_mode_i to ops
        INS HdlValueId@@scan_reset_ni to ops

UPD HdlStmAssign@@ to 
    MOV HdlOp@@AND_LOG to 
    HdlOp: AND_LOG
        list: ops
            HdlValueId: rst_ni
            HdlValueId: rng_en_i


CommitId: 2971a1ea44cb941c4fb58376e312c30617644192
[top] Top level updates
--- a/hw/top_earlgrey/ip/xbar_main/rtl/autogen/xbar_main.sv
+++ b/hw/top_earlgrey/ip/xbar_main/rtl/autogen/xbar_main.sv
@@ -541,11 +541,10 @@ end
       dev_sel_s1n_27 = 5'd3;
 
     end else if (
-      ((tl_s1n_27_us_h2d.a_address & ~(ADDR_MASK_PERI[0])) == ADDR_SPACE_PERI[0]) ||
+      ((tl_s1n_27_us_h2d.a_address <= (ADDR_MASK_PERI[0] + ADDR_SPACE_PERI[0])) &&
+       (tl_s1n_27_us_h2d.a_address >= ADDR_SPACE_PERI[0])) ||
       ((tl_s1n_27_us_h2d.a_address <= (ADDR_MASK_PERI[1] + ADDR_SPACE_PERI[1])) &&
-       (tl_s1n_27_us_h2d.a_address >= ADDR_SPACE_PERI[1])) ||
-      ((tl_s1n_27_us_h2d.a_address <= (ADDR_MASK_PERI[2] + ADDR_SPACE_PERI[2])) &&
-       (tl_s1n_27_us_h2d.a_address >= ADDR_SPACE_PERI[2]))
+       (tl_s1n_27_us_h2d.a_address >= ADDR_SPACE_PERI[1]))
     ) begin
       dev_sel_s1n_27 = 5'd4;
 

ParseResult:
UPD HdlStmIf@@ to 
    UPD HdlOp@@OR_LOG to OR_LOG
        MOV HdlOp@@OR_LOG to ops
        HdlOp: OR_LOG
            list: ops
                HdlOp: EQ
                    list: ops
                        HdlOp: AND
                            list: ops
                                HdlOp: DOT
                                    list: ops
                                        HdlValueId: tl_s1n_27_us_h2d
                                        HdlValueId: a_address
                                HdlOp: NEG
                                    list: ops
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: ADDR_MASK_PERI
                                                HdlValueInt: 0
                        HdlOp: INDEX
                            list: ops
                                HdlValueId: ADDR_SPACE_PERI
                                HdlValueInt: 0
                HdlOp: AND_LOG
                    list: ops
                        HdlOp: LE
                            list: ops
                                HdlOp: DOT
                                    list: ops
                                        HdlValueId: tl_s1n_27_us_h2d
                                        HdlValueId: a_address
                                HdlOp: ADD
                                    list: ops
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: ADDR_MASK_PERI
                                                HdlValueInt: 1
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: ADDR_SPACE_PERI
                                                HdlValueInt: 1
                        HdlOp: GE
                            list: ops
                                HdlOp: DOT
                                    list: ops
                                        HdlValueId: tl_s1n_27_us_h2d
                                        HdlValueId: a_address
                                HdlOp: INDEX
                                    list: ops
                                        HdlValueId: ADDR_SPACE_PERI
                                        HdlValueInt: 1
        UPD HdlOp@@OR_LOG to OR_LOG
            UPD HdlOp@@EQ to AND_LOG
            UPD HdlOp@@EQ to EQ
                UPD HdlOp@@AND to LE
                MOV HdlOp@@AND to ops
                HdlOp: AND
                    list: ops
                        HdlOp: DOT
                            list: ops
                                HdlValueId: tl_s1n_27_us_h2d
                                HdlValueId: a_address
                        HdlOp: NEG
                            list: ops
                                HdlOp: INDEX
                                    list: ops
                                        HdlValueId: ADDR_MASK_PERI
                                        HdlValueInt: 0
                MOV HdlOp@@INDEX to ops
                HdlOp: INDEX
                    list: ops
                        HdlValueId: ADDR_SPACE_PERI
                        HdlValueInt: 0
                UPD HdlOp@@AND to AND
                    UPD HdlOp@@NEG to ADD
                    DEL HdlOp@@DOT from ops
                    HdlOp: DOT
                        list: ops
                            HdlValueId: tl_s1n_27_us_h2d
                            HdlValueId: a_address
        UPD HdlOp@@AND_LOG to AND_LOG
            MOV HdlOp@@GE to ops
            HdlOp: GE
                list: ops
                    HdlOp: DOT
                        list: ops
                            HdlValueId: tl_s1n_27_us_h2d
                            HdlValueId: a_address
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: ADDR_SPACE_PERI
                            HdlValueInt: 2
            UPD HdlOp@@LE to LE
                MOV HdlOp@@DOT to ops
                HdlOp: DOT
                    list: ops
                        HdlValueId: tl_s1n_27_us_h2d
                        HdlValueId: a_address
                DEL HdlOp@@ADD from ops
                HdlOp: ADD
                    list: ops
                        HdlOp: INDEX
                            list: ops
                                HdlValueId: ADDR_MASK_PERI
                                HdlValueInt: 2
                        HdlOp: INDEX
                            list: ops
                                HdlValueId: ADDR_SPACE_PERI
                                HdlValueInt: 2
                DEL list@@ops from LE
            UPD HdlOp@@GE to GE
                DEL HdlOp@@INDEX from ops
                HdlOp: INDEX
                    list: ops
                        HdlValueId: ADDR_SPACE_PERI
                        HdlValueInt: 2
            DEL HdlOp@@LE from ops
            DEL list@@ops from AND_LOG
        DEL HdlOp@@AND_LOG from ops
        DEL list@@ops from OR_LOG
    DEL HdlOp@@OR_LOG from 

UPD HdlStmIf@@ to 
    UPD HdlOp@@OR_LOG to OR_LOG
        UPD HdlOp@@AND_LOG to AND_LOG
            UPD HdlOp@@LE to LE
                UPD HdlOp@@ADD to ADD
                    INS HdlOp@@INDEX to ops
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: ADDR_SPACE_PERI
                            HdlValueInt: 0


CommitId: 2971a1ea44cb941c4fb58376e312c30617644192
[top] Top level updates
--- a/hw/top_earlgrey/ip/xbar_main/rtl/autogen/xbar_main.sv
+++ b/hw/top_earlgrey/ip/xbar_main/rtl/autogen/xbar_main.sv
@@ -606,11 +605,10 @@ end
       dev_sel_s1n_43 = 5'd2;
 
     end else if (
-      ((tl_s1n_43_us_h2d.a_address & ~(ADDR_MASK_PERI[0])) == ADDR_SPACE_PERI[0]) ||
+      ((tl_s1n_43_us_h2d.a_address <= (ADDR_MASK_PERI[0] + ADDR_SPACE_PERI[0])) &&
+       (tl_s1n_43_us_h2d.a_address >= ADDR_SPACE_PERI[0])) ||
       ((tl_s1n_43_us_h2d.a_address <= (ADDR_MASK_PERI[1] + ADDR_SPACE_PERI[1])) &&
-       (tl_s1n_43_us_h2d.a_address >= ADDR_SPACE_PERI[1])) ||
-      ((tl_s1n_43_us_h2d.a_address <= (ADDR_MASK_PERI[2] + ADDR_SPACE_PERI[2])) &&
-       (tl_s1n_43_us_h2d.a_address >= ADDR_SPACE_PERI[2]))
+       (tl_s1n_43_us_h2d.a_address >= ADDR_SPACE_PERI[1]))
     ) begin
       dev_sel_s1n_43 = 5'd3;
 
ParseResult:
UPD HdlStmIf@@ to 
    UPD HdlOp@@OR_LOG to OR_LOG
        MOV HdlOp@@OR_LOG to ops
        HdlOp: OR_LOG
            list: ops
                HdlOp: EQ
                    list: ops
                        HdlOp: AND
                            list: ops
                                HdlOp: DOT
                                    list: ops
                                        HdlValueId: tl_s1n_43_us_h2d
                                        HdlValueId: a_address
                                HdlOp: NEG
                                    list: ops
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: ADDR_MASK_PERI
                                                HdlValueInt: 0
                        HdlOp: INDEX
                            list: ops
                                HdlValueId: ADDR_SPACE_PERI
                                HdlValueInt: 0
                HdlOp: AND_LOG
                    list: ops
                        HdlOp: LE
                            list: ops
                                HdlOp: DOT
                                    list: ops
                                        HdlValueId: tl_s1n_43_us_h2d
                                        HdlValueId: a_address
                                HdlOp: ADD
                                    list: ops
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: ADDR_MASK_PERI
                                                HdlValueInt: 1
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: ADDR_SPACE_PERI
                                                HdlValueInt: 1
                        HdlOp: GE
                            list: ops
                                HdlOp: DOT
                                    list: ops
                                        HdlValueId: tl_s1n_43_us_h2d
                                        HdlValueId: a_address
                                HdlOp: INDEX
                                    list: ops
                                        HdlValueId: ADDR_SPACE_PERI
                                        HdlValueInt: 1
        UPD HdlOp@@OR_LOG to OR_LOG
            UPD HdlOp@@EQ to AND_LOG
            UPD HdlOp@@EQ to EQ
                UPD HdlOp@@AND to LE
                MOV HdlOp@@AND to ops
                HdlOp: AND
                    list: ops
                        HdlOp: DOT
                            list: ops
                                HdlValueId: tl_s1n_43_us_h2d
                                HdlValueId: a_address
                        HdlOp: NEG
                            list: ops
                                HdlOp: INDEX
                                    list: ops
                                        HdlValueId: ADDR_MASK_PERI
                                        HdlValueInt: 0
                UPD HdlOp@@AND to AND
                    UPD HdlOp@@NEG to ADD
                    DEL HdlOp@@DOT from ops
                    HdlOp: DOT
                        list: ops
                            HdlValueId: tl_s1n_43_us_h2d
                            HdlValueId: a_address
                MOV HdlOp@@INDEX to ops
                HdlOp: INDEX
                    list: ops
                        HdlValueId: ADDR_SPACE_PERI
                        HdlValueInt: 0
        UPD HdlOp@@AND_LOG to AND_LOG
            MOV HdlOp@@GE to ops
            HdlOp: GE
                list: ops
                    HdlOp: DOT
                        list: ops
                            HdlValueId: tl_s1n_43_us_h2d
                            HdlValueId: a_address
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: ADDR_SPACE_PERI
                            HdlValueInt: 2
            UPD HdlOp@@LE to LE
                MOV HdlOp@@DOT to ops
                HdlOp: DOT
                    list: ops
                        HdlValueId: tl_s1n_43_us_h2d
                        HdlValueId: a_address
                DEL HdlOp@@ADD from ops
                HdlOp: ADD
                    list: ops
                        HdlOp: INDEX
                            list: ops
                                HdlValueId: ADDR_MASK_PERI
                                HdlValueInt: 2
                        HdlOp: INDEX
                            list: ops
                                HdlValueId: ADDR_SPACE_PERI
                                HdlValueInt: 2
                DEL list@@ops from LE
            UPD HdlOp@@GE to GE
                DEL HdlOp@@INDEX from ops
                HdlOp: INDEX
                    list: ops
                        HdlValueId: ADDR_SPACE_PERI
                        HdlValueInt: 2
            DEL HdlOp@@LE from ops
            DEL list@@ops from AND_LOG
        DEL HdlOp@@AND_LOG from ops
        DEL list@@ops from OR_LOG
    DEL HdlOp@@OR_LOG from 

UPD HdlStmIf@@ to 
    UPD HdlOp@@OR_LOG to OR_LOG
        UPD HdlOp@@AND_LOG to AND_LOG
            UPD HdlOp@@LE to LE
                UPD HdlOp@@ADD to ADD
                    INS HdlOp@@INDEX to ops
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: ADDR_SPACE_PERI
                            HdlValueInt: 0


CommitId: 207b1a678932f3c9ae1ada1fe2db5377c2ddeb1d
[usbdev] ISO endpoint fixes, add out_err interrupt
--- a/hw/ip/usbdev/rtl/usbdev.sv
+++ b/hw/ip/usbdev/rtl/usbdev.sv
@@ -60,6 +60,7 @@ module usbdev (
   output logic       intr_rx_full_o,
   output logic       intr_av_overflow_o,
   output logic       intr_link_in_err_o,
+  output logic       intr_link_out_err_o,
   output logic       intr_rx_crc_err_o,
   output logic       intr_rx_pid_err_o,
   output logic       intr_rx_bitstuff_err_o,

ParseResult:
INS HdlIdDef@@intr_link_out_err_o to ports
HdlIdDef: intr_link_out_err_o
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: OUT


CommitId: 207b1a678932f3c9ae1ada1fe2db5377c2ddeb1d
[usbdev] ISO endpoint fixes, add out_err interrupt
--- a/hw/ip/usbdev/rtl/usbdev.sv
+++ b/hw/ip/usbdev/rtl/usbdev.sv
@@ -116,6 +117,7 @@ module usbdev (
   logic              usb_event_rx_crc_err, usb_event_rx_pid_err;
   logic              usb_event_rx_bitstuff_err;
   logic              usb_event_in_err;
+  logic              usb_event_out_err;
   logic              usb_event_frame;
   logic              usb_link_active;
 

ParseResult:
INS HdlIdDef@@usb_event_out_err to objs
HdlIdDef: usb_event_out_err
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL


CommitId: 207b1a678932f3c9ae1ada1fe2db5377c2ddeb1d
[usbdev] ISO endpoint fixes, add out_err interrupt
--- a/hw/ip/usbdev/rtl/usbdev.sv
+++ b/hw/ip/usbdev/rtl/usbdev.sv
@@ -124,6 +126,7 @@ module usbdev (
   logic              event_rx_crc_err, event_rx_pid_err;
   logic              event_rx_bitstuff_err;
   logic              event_in_err;
+  logic              event_out_err;
   logic              event_frame;
 
   // CDC signals

ParseResult:
INS HdlIdDef@@event_out_err to objs
HdlIdDef: event_out_err
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL


CommitId: 3a5fdd65bfd8e71701c7e019ae980ec39610b474
Update lowrisc_ibex to lowRISC/ibex@5826af8
--- a/hw/vendor/lowrisc_ibex/examples/simple_system/rtl/ibex_simple_system.sv
+++ b/hw/vendor/lowrisc_ibex/examples/simple_system/rtl/ibex_simple_system.sv
@@ -45,16 +45,18 @@ module ibex_simple_system (
   parameter ibex_pkg::regfile_e RegFile                  = `RegFile;
   parameter bit                 BranchTargetALU          = 1'b0;
   parameter bit                 WritebackStage           = 1'b0;
+  parameter bit                 ICache                   = 1'b0;
+  parameter bit                 ICacheECC                = 1'b0;
   parameter bit                 BranchPredictor          = 1'b0;
   parameter                     SRAMInitFile             = "";
 
   logic clk_sys = 1'b0, rst_sys_n;
 
-  typedef enum {
+  typedef enum logic {
     CoreD
   } bus_host_e;
 
-  typedef enum {
+  typedef enum logic[1:0] {
     Ram,
     SimCtrl,
     Timer

ParseResult:
INS HdlIdDef@@ICache to params
HdlIdDef: ICache
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: bit
    HdlValueInt: 0
    HdlDirection: INTERNAL

INS HdlIdDef@@ICacheECC to params
HdlIdDef: ICacheECC
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: bit
    HdlValueInt: 0
    HdlDirection: INTERNAL


CommitId: 17e9624c452e05f71f4ad2b7c75bf6bbb071c324
Update lowrisc_ibex to lowRISC/ibex@ee1098f
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_id_stage.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_id_stage.sv
@@ -75,6 +75,8 @@ module ibex_id_stage #(
     output logic                  csr_restore_mret_id_o,
     output logic                  csr_save_cause_o,
     output logic [31:0]           csr_mtval_o,
+    input  ibex_pkg::priv_lvl_e   priv_mode_i,
+    input  logic                  csr_mstatus_tw_i,
     input  logic                  illegal_csr_insn_i,
 
     // Interface to load store unit

ParseResult:
INS HdlIdDef@@priv_mode_i to ports
HdlIdDef: priv_mode_i
    HdlOp: DOUBLE_COLON
        list: ops
            HdlValueId: ibex_pkg
            HdlValueId: priv_lvl_e
    HdlDirection: IN

INS HdlIdDef@@csr_mstatus_tw_i to ports
HdlIdDef: csr_mstatus_tw_i
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: IN


CommitId: 17e9624c452e05f71f4ad2b7c75bf6bbb071c324
Update lowrisc_ibex to lowRISC/ibex@ee1098f
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_id_stage.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_id_stage.sv
@@ -536,7 +542,7 @@ module ibex_id_stage #(
       IDLE: begin
         // only detect multicycle when instruction is new, do not re-detect after
         // execution (when waiting for next instruction from IF stage)
-        if (instr_new_i) begin
+        if (instr_new_i & ~instr_fetch_err_i) begin
           unique case (1'b1)
             data_req_dec: begin
               // LSU operation
ParseResult:
UPD HdlStmIf@@ to 
    INS HdlOp@@AND to 
    UPD HdlOp@@AND to AND
        INS list@@ops to AND
        INS HdlOp@@NEG to ops
        HdlOp: NEG
            list: ops
                HdlValueId: instr_fetch_err_i

UPD HdlStmIf@@ to 
    MOV HdlValueId@@instr_new_i to 
    HdlValueId: instr_new_i


CommitId: 36c41307619b529bc53ae495cc8416f8c237c753
[rtl] Fix for #2235
--- a/hw/top_earlgrey/rtl/top_earlgrey_asic.sv
+++ b/hw/top_earlgrey/rtl/top_earlgrey_asic.sv
@@ -44,6 +44,8 @@ module top_earlgrey_asic (
   inout               IO_GP15
 );
 
+  import top_earlgrey_pkg::*;
+
   //////////////////////
   // Padring Instance //
   //////////////////////

ParseResult:
UPD HdlModuleDef@@top_earlgrey_asic to top_earlgrey_asic
    INS HdlImport@@ to objs
    HdlImport
        list: path
            HdlValueId: top_earlgrey_pkg
            HdlAll


CommitId: 36c41307619b529bc53ae495cc8416f8c237c753
[rtl] Fix for #2235
--- a/hw/top_earlgrey/rtl/top_earlgrey_asic.sv
+++ b/hw/top_earlgrey/rtl/top_earlgrey_asic.sv
@@ -140,9 +142,9 @@ module top_earlgrey_asic (
                           padctrl_reg_pkg::NDioPads;
 
   // This specifies the tie-off values of the muxed MIO/DIOs
-  // when the JTAG is active. SPI CSB sits on DIO 12, and is active low.
-  localparam logic [NumIOs-1:0] TieOffValues =
-      NumIOs'(1'b1 << (padctrl_reg_pkg::NMioPads + 12));
+  // when the JTAG is active. SPI CSB is active low.
+  localparam logic [NumIOs-1:0] TieOffValues =NumIOs'(1'b1 << (
+      padctrl_reg_pkg::NMioPads + top_earlgrey_pkg::TopEarlgreyDioPinSpiDeviceCsb));
 
   // TODO: this is a temporary solution. JTAG will eventually be selected and
   // qualified inside the pinmux, based on strap and lifecycle state.

ParseResult:
UPD HdlModuleDef@@top_earlgrey_asic to top_earlgrey_asic
    INS HdlImport@@ to objs
    HdlImport
        list: path
            HdlValueId: top_earlgrey_pkg
            HdlAll

UPD HdlIdDef@@TieOffValues to TieOffValues
    UPD HdlOp@@INDEX to PARAMETRIZATION
    UPD HdlOp@@CALL to CALL
        UPD HdlOp@@SLL to SLL
            UPD HdlOp@@ADD to ADD
                DEL HdlValueInt@@12 from ops

UPD HdlIdDef@@TieOffValues to TieOffValues
    UPD HdlOp@@CALL to CALL
        UPD HdlOp@@SLL to SLL
            UPD HdlOp@@ADD to ADD
                INS HdlOp@@DOUBLE_COLON to ops
                HdlOp: DOUBLE_COLON
                    list: ops
                        HdlValueId: top_earlgrey_pkg
                        HdlValueId: TopEarlgreyDioPinSpiDeviceCsb


CommitId: 36c41307619b529bc53ae495cc8416f8c237c753
[rtl] Fix for #2235
--- a/hw/top_earlgrey/rtl/top_earlgrey_asic.sv
+++ b/hw/top_earlgrey/rtl/top_earlgrey_asic.sv
@@ -153,12 +155,16 @@ module top_earlgrey_asic (
     .TieOffValues   (                   TieOffValues ),
     .JtagEnIdx      (                             16 ), // MIO 16
     .JtagEnPolarity (                              1 ),
-    .TckIdx         ( padctrl_reg_pkg::NMioPads + 13 ), // DIO 13
-    .TmsIdx         ( padctrl_reg_pkg::NMioPads + 12 ), // DIO 12
+    .TckIdx         ( padctrl_reg_pkg::NMioPads +
+                      top_earlgrey_pkg::TopEarlgreyDioPinSpiDeviceSck ),
+    .TmsIdx         ( padctrl_reg_pkg::NMioPads +
+                      top_earlgrey_pkg::TopEarlgreyDioPinSpiDeviceCsb ),
     .TrstIdx        (                             18 ), // MIO 18
     .SrstIdx        (                             19 ), // MIO 19
-    .TdiIdx         ( padctrl_reg_pkg::NMioPads + 11 ), // DIO 11
-    .TdoIdx         ( padctrl_reg_pkg::NMioPads + 10 )  // DIO 10
+    .TdiIdx         ( padctrl_reg_pkg::NMioPads +
+                      top_earlgrey_pkg::TopEarlgreyDioPinSpiDeviceMosi ),
+    .TdoIdx         ( padctrl_reg_pkg::NMioPads +
+                      top_earlgrey_pkg::TopEarlgreyDioPinSpiDeviceMiso )
   ) jtag_mux (
     // To JTAG inside core
     .jtag_tck_o   ( jtag_tck        ),
ParseResult:
UPD HdlModuleDef@@top_earlgrey_asic to top_earlgrey_asic
    INS HdlImport@@ to objs
    HdlImport
        list: path
            HdlValueId: top_earlgrey_pkg
            HdlAll


CommitId: 1674110022d3f3c6c89828d9f8f139447afd925c
[flash_ctrl / top] Various functional updates to flash
--- a/hw/ip/prim_generic/rtl/prim_generic_flash.sv
+++ b/hw/ip/prim_generic/rtl/prim_generic_flash.sv
@@ -26,13 +26,19 @@ module prim_generic_flash #(
   input tdi_i,
   input tms_i,
   output logic tdo_o,
-  input bist_enable_i,
+  input lc_ctrl_pkg::lc_tx_t bist_enable_i,
   input scanmode_i,
+  input scan_en_i,
   input scan_rst_ni,
   input flash_power_ready_h_i,
   input flash_power_down_h_i,
   input [TestModeWidth-1:0] flash_test_mode_a_i,
   input flash_test_voltage_h_i,
+  output logic flash_err_o,
+  output logic flash_alert_po,
+  output logic flash_alert_no,
+  input flash_alert_ack_i,
+  input flash_alert_trig_i,
   input tlul_pkg::tl_h2d_t tl_i,
   output tlul_pkg::tl_d2h_t tl_o
 );

ParseResult:
INS HdlIdDef@@scan_en_i to ports
HdlIdDef: scan_en_i
    HdlValueId: wire
    HdlDirection: IN

INS HdlIdDef@@flash_err_o to ports
HdlIdDef: flash_err_o
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: OUT

INS HdlIdDef@@flash_alert_po to ports
HdlIdDef: flash_alert_po
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: OUT

INS HdlIdDef@@flash_alert_no to ports
HdlIdDef: flash_alert_no
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: OUT

INS HdlIdDef@@flash_alert_ack_i to ports
HdlIdDef: flash_alert_ack_i
    HdlValueId: wire
    HdlDirection: IN

INS HdlIdDef@@flash_alert_trig_i to ports
HdlIdDef: flash_alert_trig_i
    HdlValueId: wire
    HdlDirection: IN

UPD HdlIdDef@@bist_enable_i to bist_enable_i
    INS HdlOp@@DOUBLE_COLON to bist_enable_i
    UPD HdlOp@@DOUBLE_COLON to DOUBLE_COLON
        INS list@@ops to DOUBLE_COLON
        INS HdlValueId@@lc_tx_t to ops

UPD HdlIdDef@@bist_enable_i to bist_enable_i
    UPD HdlValueId@@wire to lc_ctrl_pkg
    MOV HdlValueId@@wire to bist_enable_i
    HdlValueId: wire


CommitId: 1674110022d3f3c6c89828d9f8f139447afd925c
[flash_ctrl / top] Various functional updates to flash
--- a/hw/ip/prim_generic/rtl/prim_generic_flash.sv
+++ b/hw/ip/prim_generic/rtl/prim_generic_flash.sv
@@ -90,6 +96,7 @@ module prim_generic_flash #(
   end
 
   logic unused_scanmode;
+  logic unused_scan_en;
   logic unused_scan_rst_n;
   logic [TestModeWidth-1:0] unused_flash_test_mode;
   logic unused_flash_test_voltage;

ParseResult:
INS HdlIdDef@@unused_scan_en to objs
HdlIdDef: unused_scan_en
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL


CommitId: 1674110022d3f3c6c89828d9f8f139447afd925c
[flash_ctrl / top] Various functional updates to flash
--- a/hw/ip/prim_generic/rtl/prim_generic_flash.sv
+++ b/hw/ip/prim_generic/rtl/prim_generic_flash.sv
@@ -98,6 +105,7 @@ module prim_generic_flash #(
   logic unused_tms;
 
   assign unused_scanmode = scanmode_i;
+  assign unused_scan_en = scan_en_i;
   assign unused_scan_rst_n = scan_rst_ni;
   assign unused_flash_test_mode = flash_test_mode_a_i;
   assign unused_flash_test_voltage = flash_test_voltage_h_i;

ParseResult:
INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlValueId: scan_en_i
    HdlValueId: unused_scan_en


CommitId: 1b5fa9f1ebf0a9520ef6ea6faf1f1a2397a349c1
[verible/style] This corrects several style linter warnings/errors
--- a/hw/ip/prim/rtl/prim_subreg.sv
+++ b/hw/ip/prim/rtl/prim_subreg.sv
@@ -5,7 +5,7 @@
 // Register slice conforming to Comportibility guide.
 
 module prim_subreg #(
-  parameter                DW       = 32  ,
+  parameter int            DW       = 32  ,
   parameter                SWACCESS = "RW",  // {RW, RO, WO, W1C, W1S, W0C, RC}
   parameter logic [DW-1:0] RESVAL   = '0     // Reset value
 ) (
ParseResult:
UPD HdlIdDef@@DW to DW
    INS HdlValueId@@int to DW


CommitId: de7eba3d7af1f55b7bda8104152b4240f3d37456
[csrng/entropy_src] fix for #4601
--- a/hw/ip/entropy_src/rtl/entropy_src_core.sv
+++ b/hw/ip/entropy_src/rtl/entropy_src_core.sv
@@ -29,6 +29,10 @@ module entropy_src_core import entropy_src_pkg::*; #(
   output entropy_src_rng_req_t entropy_src_rng_o,
   input  entropy_src_rng_rsp_t entropy_src_rng_i,
 
+  // CSRNG Interface
+  output cs_aes_halt_req_t cs_aes_halt_o,
+  input  cs_aes_halt_rsp_t cs_aes_halt_i,
+
   // External Health Test Interface
   output entropy_src_xht_req_t entropy_src_xht_o,
   input  entropy_src_xht_rsp_t entropy_src_xht_i,

ParseResult:
INS HdlIdDef@@cs_aes_halt_o to ports
HdlIdDef: cs_aes_halt_o
    HdlValueId: cs_aes_halt_req_t
    HdlDirection: OUT

INS HdlIdDef@@cs_aes_halt_i to ports
HdlIdDef: cs_aes_halt_i
    HdlValueId: cs_aes_halt_rsp_t
    HdlDirection: IN


CommitId: de7eba3d7af1f55b7bda8104152b4240f3d37456
[csrng/entropy_src] fix for #4601
--- a/hw/ip/entropy_src/rtl/entropy_src_core.sv
+++ b/hw/ip/entropy_src/rtl/entropy_src_core.sv
@@ -328,6 +332,7 @@ module entropy_src_core import entropy_src_pkg::*; #(
   logic                     sha3_squeezing;
   logic [2:0]               sha3_fsm;
   logic [32:0]              sha3_err;
+  logic                     cs_aes_halt_req;
 
 
   logic [sha3_pkg::StateW-1:0] sha3_state[Sha3Share];

ParseResult:
INS HdlIdDef@@cs_aes_halt_req to objs
HdlIdDef: cs_aes_halt_req
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL


CommitId: de7eba3d7af1f55b7bda8104152b4240f3d37456
[csrng/entropy_src] fix for #4601
--- a/hw/ip/entropy_src/rtl/entropy_src_core.sv
+++ b/hw/ip/entropy_src/rtl/entropy_src_core.sv
@@ -344,6 +349,7 @@ module entropy_src_core import entropy_src_pkg::*; #(
   logic [HalfRegWidth-1:0] window_cntr_q, window_cntr_d;
   logic                    sha3_msg_rdy_q, sha3_msg_rdy_d;
   logic                    sha3_err_q, sha3_err_d;
+  logic        cs_aes_halt_q, cs_aes_halt_d;
 
   always_ff @(posedge clk_i or negedge rst_ni)
     if (!rst_ni) begin

ParseResult:
INS HdlIdDef@@cs_aes_halt_q to objs
HdlIdDef: cs_aes_halt_q
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

INS HdlIdDef@@cs_aes_halt_d to objs
HdlIdDef: cs_aes_halt_d
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL


CommitId: de7eba3d7af1f55b7bda8104152b4240f3d37456
[csrng/entropy_src] fix for #4601
--- a/hw/ip/entropy_src/rtl/entropy_src_core.sv
+++ b/hw/ip/entropy_src/rtl/entropy_src_core.sv
@@ -357,6 +363,7 @@ module entropy_src_core import entropy_src_pkg::*; #(
       window_cntr_q         <= '0;
       sha3_msg_rdy_q        <= '0;
       sha3_err_q            <= '0;
+      cs_aes_halt_q         <= '0;
     end else begin
       es_rate_cntr_q        <= es_rate_cntr_d;
       lfsr_incr_dly_q       <= lfsr_incr_dly_d;

ParseResult:
INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: cs_aes_halt_q


CommitId: de7eba3d7af1f55b7bda8104152b4240f3d37456
[csrng/entropy_src] fix for #4601
--- a/hw/ip/entropy_src/rtl/entropy_src_core.sv
+++ b/hw/ip/entropy_src/rtl/entropy_src_core.sv
@@ -368,6 +375,7 @@ module entropy_src_core import entropy_src_pkg::*; #(
       window_cntr_q         <= window_cntr_d;
       sha3_msg_rdy_q        <= sha3_msg_rdy_d;
       sha3_err_q            <= sha3_err_d;
+      cs_aes_halt_q         <= cs_aes_halt_d;
     end
 
   assign es_enable = (|reg2hw.conf.enable.q);

ParseResult:
INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueId: cs_aes_halt_d
    HdlValueId: cs_aes_halt_q


CommitId: de7eba3d7af1f55b7bda8104152b4240f3d37456
[csrng/entropy_src] fix for #4601
--- a/hw/ip/entropy_src/rtl/entropy_src_core.sv
+++ b/hw/ip/entropy_src/rtl/entropy_src_core.sv
@@ -1742,7 +1750,7 @@ module entropy_src_core import entropy_src_pkg::*; #(
 
 
   assign pfifo_cond_push = pfifo_precon_pop && sha3_msgfifo_ready &&
-  !es_bypass_mode;
+  !cs_aes_halt_req && !es_bypass_mode;
 
   assign pfifo_cond_wdata = pfifo_precon_rdata;
 

ParseResult:
UPD HdlStmAssign@@ to 
    UPD HdlOp@@AND_LOG to AND_LOG
        MOV HdlOp@@AND_LOG to ops
        HdlOp: AND_LOG
            list: ops
                HdlValueId: pfifo_precon_pop
                HdlValueId: sha3_msgfifo_ready


CommitId: de7eba3d7af1f55b7bda8104152b4240f3d37456
[csrng/entropy_src] fix for #4601
--- a/hw/ip/entropy_src/rtl/entropy_src_core.sv
+++ b/hw/ip/entropy_src/rtl/entropy_src_core.sv
@@ -1851,9 +1859,14 @@ module entropy_src_core import entropy_src_pkg::*; #(
     .sha3_start_o       (sha3_start),
     .sha3_process_o     (sha3_process),
     .sha3_done_o        (sha3_done),
+    .cs_aes_halt_req_o  (cs_aes_halt_req),
+    .cs_aes_halt_ack_i  (cs_aes_halt_i.cs_aes_halt_ack),
     .main_sm_err_o      (es_main_sm_err)
   );
 
+  // es to cs halt request to reduce power spikes
+  assign cs_aes_halt_d = cs_aes_halt_req;
+  assign cs_aes_halt_o.cs_aes_halt_req = cs_aes_halt_q;
 
   //--------------------------------------------
   // send processed entropy to final fifo
ParseResult:
INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlValueId: cs_aes_halt_req
    HdlValueId: cs_aes_halt_d

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlValueId: cs_aes_halt_q
    HdlValueId: cs_aes_halt_o


CommitId: e1e0fd6c024b64705702f85e7285f48fa9f5e79f
[flash_ctrl] update intergrity error handling
--- a/hw/ip/flash_ctrl/rtl/flash_ctrl_lcmgr.sv
+++ b/hw/ip/flash_ctrl/rtl/flash_ctrl_lcmgr.sv
@@ -62,6 +62,8 @@ module flash_ctrl_lcmgr import flash_ctrl_pkg::*; #(
   input otp_ctrl_pkg::flash_otp_key_rsp_t otp_key_rsp_i,
   output flash_key_t addr_key_o,
   output flash_key_t data_key_o,
+  output flash_key_t rand_addr_key_o,
+  output flash_key_t rand_data_key_o,
 
   // entropy interface
   output logic edn_req_o,

ParseResult:
INS HdlIdDef@@rand_addr_key_o to ports
HdlIdDef: rand_addr_key_o
    HdlValueId: flash_key_t
    HdlDirection: OUT

INS HdlIdDef@@rand_data_key_o to ports
HdlIdDef: rand_data_key_o
    HdlValueId: flash_key_t
    HdlDirection: OUT


CommitId: e1e0fd6c024b64705702f85e7285f48fa9f5e79f
[flash_ctrl] update intergrity error handling
--- a/hw/ip/flash_ctrl/rtl/flash_ctrl_lcmgr.sv
+++ b/hw/ip/flash_ctrl/rtl/flash_ctrl_lcmgr.sv
@@ -251,10 +253,12 @@ module flash_ctrl_lcmgr import flash_ctrl_pkg::*; #(
     end else begin
       if (addr_key_req_d && addr_key_ack_q) begin
         addr_key_o <= flash_key_t'(otp_key_rsp_i.key);
+        rand_addr_key_o <= flash_key_t'(otp_key_rsp_i.rand_key);
       end
 
       if (data_key_req_d && data_key_ack_q) begin
         data_key_o <= flash_key_t'(otp_key_rsp_i.key);
+        rand_data_key_o <= flash_key_t'(otp_key_rsp_i.rand_key);
       end
     end
   end
ParseResult:
INS HdlStmAssign@@ to body
HdlStmAssign
    HdlOp: CALL
        list: ops
            HdlValueId: flash_key_t
            HdlOp: DOT
                list: ops
                    HdlValueId: otp_key_rsp_i
                    HdlValueId: rand_key
    HdlValueId: rand_addr_key_o

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlOp: CALL
        list: ops
            HdlValueId: flash_key_t
            HdlOp: DOT
                list: ops
                    HdlValueId: otp_key_rsp_i
                    HdlValueId: rand_key
    HdlValueId: rand_data_key_o


CommitId: 1c3b1606289312db6a7e85a98ddaea97bcfc7cb5
[csrng/rtl] switch to lc_hw_debug_en for lifecycle input
--- a/hw/ip/csrng/rtl/csrng_block_encrypt.sv
+++ b/hw/ip/csrng/rtl/csrng_block_encrypt.sv
@@ -18,7 +18,7 @@ module csrng_block_encrypt #(
    // update interface
   input logic                block_encrypt_bypass_i,
   input logic                block_encrypt_enable_i,
-  input lc_ctrl_pkg::lc_tx_t block_encrypt_lc_dft_en_i,
+  input logic                block_encrypt_lc_hw_debug_not_on_i,
   input logic                block_encrypt_req_i,
   output logic               block_encrypt_rdy_o,
   input logic [KeyLen-1:0]   block_encrypt_key_i,

ParseResult:
UPD HdlIdDef@@block_encrypt_lc_dft_en_i to block_encrypt_lc_hw_debug_not_on_i

UPD HdlIdDef@@block_encrypt_lc_dft_en_i to block_encrypt_lc_dft_en_i
    UPD HdlOp@@DOUBLE_COLON to DOUBLE_COLON
        UPD HdlValueId@@lc_tx_t to logic
        MOV HdlValueId@@lc_tx_t to ops
        HdlValueId: lc_tx_t
        DEL HdlValueId@@lc_ctrl_pkg from ops
        DEL list@@ops from DOUBLE_COLON
    DEL HdlOp@@DOUBLE_COLON from block_encrypt_lc_dft_en_i


CommitId: 1c3b1606289312db6a7e85a98ddaea97bcfc7cb5
[csrng/rtl] switch to lc_hw_debug_en for lifecycle input
--- a/hw/ip/csrng/rtl/csrng_block_encrypt.sv
+++ b/hw/ip/csrng/rtl/csrng_block_encrypt.sv
@@ -74,20 +74,7 @@ module csrng_block_encrypt #(
   // aes cipher core lifecycle enable
   //--------------------------------------------
 
-  lc_ctrl_pkg::lc_tx_t lc_dft_en;
-
-  prim_multibit_sync #(
-    .Width(lc_ctrl_pkg::TxWidth),
-    .NumChecks (2),
-    .ResetValue(lc_ctrl_pkg::TxWidth'(lc_ctrl_pkg::Off))
-  ) u_prim_multibit_sync (
-    .clk_i,
-    .rst_ni,
-    .data_i (block_encrypt_lc_dft_en_i),
-    .data_o (lc_dft_en)
-  );
-
-  assign aes_cipher_core_enable = (!block_encrypt_bypass_i) || (lc_dft_en != lc_ctrl_pkg::On);
+  assign aes_cipher_core_enable = (!block_encrypt_bypass_i) || block_encrypt_lc_hw_debug_not_on_i;
 
   //--------------------------------------------
   // aes cipher core
ParseResult:
UPD HdlStmAssign@@ to 
    UPD HdlOp@@OR_LOG to OR_LOG
        UPD HdlOp@@NE to NE
            UPD HdlValueId@@lc_dft_en to block_encrypt_lc_hw_debug_not_on_i
            MOV HdlValueId@@lc_dft_en to ops
            HdlValueId: lc_dft_en
            DEL HdlOp@@DOUBLE_COLON from ops
            HdlOp: DOUBLE_COLON
                list: ops
                    HdlValueId: lc_ctrl_pkg
                    HdlValueId: On
            DEL list@@ops from NE
        DEL HdlOp@@NE from ops

DEL HdlIdDef@@lc_dft_en from objs
HdlIdDef: lc_dft_en
    HdlOp: DOUBLE_COLON
        list: ops
            HdlValueId: lc_ctrl_pkg
            HdlValueId: lc_tx_t
    HdlDirection: INTERNAL


CommitId: f54937e812e37068bc2c4f1dee6f8637fb677bdc
[uartdpi] Accept log file name through plusarg
--- a/hw/dv/dpi/uartdpi/uartdpi.sv
+++ b/hw/dv/dpi/uartdpi/uartdpi.sv
@@ -13,11 +13,13 @@ module uartdpi #(
   output logic tx_o,
   input  logic rx_i
 );
+  // Path to a log file. Used if none is specified through the `UARTDPI_LOG_<name>` plusarg.
+  localparam string DEFAULT_LOG_FILE = {NAME, ".log"};
 
   localparam int CYCLES_PER_SYMBOL = FREQ / BAUD;
 
   import "DPI-C" function
-    chandle uartdpi_create(input string name);
+    chandle uartdpi_create(input string name, input string log_file_path);
 
   import "DPI-C" function
     void uartdpi_close(input chandle ctx);

ParseResult:
INS HdlIdDef@@DEFAULT_LOG_FILE to objs
HdlIdDef: DEFAULT_LOG_FILE
    HdlValueId: string
    HdlOp: CONCAT
        list: ops
            HdlValueId: NAME
            str
    HdlDirection: INTERNAL


CommitId: f54937e812e37068bc2c4f1dee6f8637fb677bdc
[uartdpi] Accept log file name through plusarg
--- a/hw/dv/dpi/uartdpi/uartdpi.sv
+++ b/hw/dv/dpi/uartdpi/uartdpi.sv
@@ -32,13 +34,11 @@ module uartdpi #(
     void uartdpi_write(input chandle ctx, int data);
 
   chandle ctx;
-  int file_handle;
-  string file_name;
+  string log_file_path = DEFAULT_LOG_FILE;
 
   initial begin
-    ctx = uartdpi_create(NAME);
-    $sformat(file_name, "%s.log", NAME);
-    file_handle = $fopen(file_name, "w");
+    $value$plusargs({"UARTDPI_LOG_", NAME, "=%s"}, log_file_path);
+    ctx = uartdpi_create(NAME, log_file_path);
   end
 
   final begin

ParseResult:
UPD HdlIdDef@@file_name to log_file_path

UPD HdlIdDef@@log_file_path to log_file_path
    INS HdlValueId@@DEFAULT_LOG_FILE to log_file_path

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to CONCAT
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: ctx
                HdlOp: CALL
                    list: ops
                        HdlValueId: uartdpi_create
                        HdlValueId: NAME
        UPD HdlOp@@CALL to CALL
            UPD HdlValueId@@file_name to log_file_path
            MOV HdlValueId@@file_name to ops
            HdlValueId: file_name
            DEL HdlValueId@@$sformat from ops
            DEL str@@ from ops
            DEL HdlValueId@@NAME from ops
            DEL list@@ops from CALL
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@file_handle to ctx
            UPD HdlOp@@CALL to CALL
                UPD HdlValueId@@$fopen to uartdpi_create
                UPD HdlValueId@@file_name to log_file_path
                DEL str@@ from ops
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@CALL to CONCAT
            DEL HdlValueId@@ctx from ops
            UPD HdlOp@@CALL to CALL
                DEL HdlValueId@@uartdpi_create from ops
        DEL HdlOp@@CALL from body

DEL HdlIdDef@@file_handle from objs
HdlIdDef: file_handle
    HdlValueId: int
    HdlDirection: INTERNAL


CommitId: f54937e812e37068bc2c4f1dee6f8637fb677bdc
[uartdpi] Accept log file name through plusarg
--- a/hw/dv/dpi/uartdpi/uartdpi.sv
+++ b/hw/dv/dpi/uartdpi/uartdpi.sv
@@ -119,7 +119,6 @@ module uartdpi #(
             rxactive <= 0;
             if (rx_i) begin
               uartdpi_write(ctx, rxsymbol);
-              $fwrite(file_handle, "%c", rxsymbol);
             end
           end
         end
ParseResult:
UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@CALL from body
        HdlOp: CALL
            list: ops
                HdlValueId: $fwrite
                HdlValueId: file_handle
                str
                HdlValueId: rxsymbol


CommitId: cabf26f33f6964caba640d9638873d681ba4a6a5
[prim] Restore ability to select default implementation
--- a/hw/ip/prim/abstract/prim_rom.sv
+++ b/hw/ip/prim/abstract/prim_rom.sv
@@ -5,11 +5,14 @@
 // TODO: This module is a hard-coded stopgap to select an implementation of an
 // "abstract module". This module is to be replaced by generated code.
 
+`ifndef PRIM_DEFAULT_IMPL
+  `define PRIM_DEFAULT_IMPL integer'(prim_pkg::ImplGeneric)
+`endif
 module prim_rom #(
-  parameter  int Width     = 32,
-  parameter  int Depth     = 2048, // 8kB default
-  parameter      Impl      = "generic",
-  parameter  int Aw        = $clog2(Depth)
+  parameter integer Impl  = `PRIM_DEFAULT_IMPL,
+  parameter int Width = 32,
+  parameter int Depth = 2048, // 8kB default
+  parameter int Aw    = $clog2(Depth)
 ) (
   input                        clk_i,
   input                        rst_ni,

ParseResult:
UPD HdlModuleDef@@prim_rom to prim_rom
    INS HdlImport@@ to objs
    HdlImport
        list: path
            HdlValueId: prim_pkg
            HdlAll

INS HdlIdDef@@Impl to params
HdlIdDef: Impl
    HdlValueId: integer
    HdlExprNotImplemented: value
    HdlDirection: INTERNAL

DEL HdlIdDef@@Impl from params
HdlIdDef: Impl
    HdlDirection: INTERNAL


CommitId: cabf26f33f6964caba640d9638873d681ba4a6a5
[prim] Restore ability to select default implementation
--- a/hw/ip/prim/abstract/prim_rom.sv
+++ b/hw/ip/prim/abstract/prim_rom.sv
@@ -19,7 +22,9 @@ module prim_rom #(
   output logic                 dvalid_o
 );
 
-  if (Impl == "generic") begin: gen_mem_generic
+  import prim_pkg::*;
+
+  if (impl_e'(Impl) == ImplGeneric) begin: gen_mem_generic
     prim_generic_rom #(
       .Width(Width),
       .Depth(Depth)

ParseResult:
UPD HdlModuleDef@@prim_rom to prim_rom
    INS HdlImport@@ to objs
    HdlImport
        list: path
            HdlValueId: prim_pkg
            HdlAll

UPD HdlIdDef@@dvalid_o to dvalid_o
    INS HdlOp@@PARAMETRIZATION to dvalid_o
    UPD HdlOp@@PARAMETRIZATION to PARAMETRIZATION
        INS list@@ops to PARAMETRIZATION

UPD HdlStmIf@@ to 
    UPD HdlOp@@EQ to EQ
        INS list@@ops to EQ
        INS HdlOp@@CALL to ops
        INS HdlValueId@@ImplGeneric to ops
        UPD HdlOp@@CALL to CALL
            INS HdlValueId@@impl_e to ops
    UPD HdlOp@@EQ to EQ
        INS list@@ops to EQ
        INS HdlOp@@CALL to ops
        INS HdlValueId@@ImplXilinx to ops
        UPD HdlOp@@CALL to CALL
            INS HdlValueId@@impl_e to ops

UPD HdlIdDef@@dvalid_o to dvalid_o
    MOV HdlValueId@@logic to dvalid_o
    HdlValueId: logic

UPD HdlStmIf@@ to 
    UPD HdlOp@@EQ to EQ
        MOV list@@ops to EQ
        list: ops
            HdlValueId: Impl
            str
        DEL str@@ from ops
    UPD HdlOp@@EQ to EQ
        MOV list@@ops to EQ
        list: ops
            HdlValueId: Impl
            str
        DEL str@@ from ops


CommitId: cabf26f33f6964caba640d9638873d681ba4a6a5
[prim] Restore ability to select default implementation
--- a/hw/ip/prim/abstract/prim_rom.sv
+++ b/hw/ip/prim/abstract/prim_rom.sv
@@ -31,7 +36,7 @@ module prim_rom #(
       .dout_o,
       .dvalid_o
     );
-  end else if (Impl == "xilinx") begin: gen_rom_xilinx
+  end else if (impl_e'(Impl) == ImplXilinx) begin: gen_rom_xilinx
     prim_xilinx_rom #(
       .Width(Width),
       .Depth(Depth)
ParseResult:
UPD HdlModuleDef@@prim_rom to prim_rom
    INS HdlImport@@ to objs
    HdlImport
        list: path
            HdlValueId: prim_pkg
            HdlAll

UPD HdlStmIf@@ to 
    UPD HdlOp@@EQ to EQ
        INS list@@ops to EQ
        INS HdlOp@@CALL to ops
        INS HdlValueId@@ImplGeneric to ops
        UPD HdlOp@@CALL to CALL
            INS HdlValueId@@impl_e to ops
    UPD HdlOp@@EQ to EQ
        INS list@@ops to EQ
        INS HdlOp@@CALL to ops
        INS HdlValueId@@ImplXilinx to ops
        UPD HdlOp@@CALL to CALL
            INS HdlValueId@@impl_e to ops

UPD HdlStmIf@@ to 
    UPD HdlOp@@EQ to EQ
        MOV list@@ops to EQ
        list: ops
            HdlValueId: Impl
            str
        DEL str@@ from ops
    UPD HdlOp@@EQ to EQ
        MOV list@@ops to EQ
        list: ops
            HdlValueId: Impl
            str
        DEL str@@ from ops


CommitId: c71e1689d71ba3b822fd143dde6841ad489850e2
[spi_host] Minor lint fixes
--- a/hw/ip/spi_host/rtl/spi_host_core.sv
+++ b/hw/ip/spi_host/rtl/spi_host_core.sv
@@ -6,8 +6,7 @@
 //
 
 module spi_host_core #(
-  parameter  int NumCS     = 1,
-  localparam int CSW       = prim_util_pkg::vbits(NumCS)
+  parameter  int NumCS     = 1
 ) (
   input                             clk_i,
   input                             rst_ni,
ParseResult:
DEL HdlIdDef@@CSW from params
HdlIdDef: CSW
    HdlValueId: int
    HdlOp: CALL
        list: ops
            HdlOp: DOUBLE_COLON
                list: ops
                    HdlValueId: prim_util_pkg
                    HdlValueId: vbits
            HdlValueId: NumCS
    HdlDirection: INTERNAL


CommitId: df96e0c2a6cc99652e459b22c1bcb2c1ce5f59f1
[AST] AscentLint, HJSON fixes, and rgn_fips_i port
--- a/hw/top_earlgrey/ip/ast/rtl/io_clk.sv
+++ b/hw/top_earlgrey/ip/ast/rtl/io_clk.sv
@@ -11,6 +11,8 @@ module io_clk (
   input clk_io_pd_ni,                      // IO Clock Power-down
   input rst_io_clk_ni,                     // IO Clock Logic reset
   input clk_src_io_en_i,                   // IO Source Clock Enable
+  input scan_mode_i,                       // Scan Mode
+  input scan_reset_ni,                     // Scan Reset
   output logic clk_src_io_o,               // IO Source Clock
   output logic clk_src_io_val_o            // IO Source Clock Valid
 );

ParseResult:
INS HdlIdDef@@scan_mode_i to ports
HdlIdDef: scan_mode_i
    HdlValueId: wire
    HdlDirection: IN

INS HdlIdDef@@scan_reset_ni to ports
HdlIdDef: scan_reset_ni
    HdlValueId: wire
    HdlDirection: IN


CommitId: df96e0c2a6cc99652e459b22c1bcb2c1ce5f59f1
[AST] AscentLint, HJSON fixes, and rgn_fips_i port
--- a/hw/top_earlgrey/ip/ast/rtl/io_clk.sv
+++ b/hw/top_earlgrey/ip/ast/rtl/io_clk.sv
@@ -18,7 +20,8 @@ module io_clk (
 logic clk, io_clk_en, rst_n;
 
 assign rst_n = rst_io_clk_ni;  // Scan enabled
-assign io_clk_en = clk_src_io_en_i && clk_io_pd_ni && rst_io_clk_ni;
+assign io_clk_en = scan_mode_i ||
+                   (clk_src_io_en_i && clk_io_pd_ni && rst_io_clk_ni);
 
 // Clock Oscilator
 ///////////////////////////////////////

ParseResult:
UPD HdlStmAssign@@ to 
    INS HdlOp@@OR_LOG to 
    UPD HdlOp@@OR_LOG to OR_LOG
        INS list@@ops to OR_LOG
        INS HdlValueId@@scan_mode_i to ops

UPD HdlStmAssign@@ to 
    MOV HdlOp@@AND_LOG to 
    HdlOp: AND_LOG
        list: ops
            HdlOp: AND_LOG
                list: ops
                    HdlValueId: clk_src_io_en_i
                    HdlValueId: clk_io_pd_ni
            HdlValueId: rst_io_clk_ni


CommitId: df96e0c2a6cc99652e459b22c1bcb2c1ce5f59f1
[AST] AscentLint, HJSON fixes, and rgn_fips_i port
--- a/hw/top_earlgrey/ip/ast/rtl/io_clk.sv
+++ b/hw/top_earlgrey/ip/ast/rtl/io_clk.sv
@@ -37,7 +40,7 @@ prim_clock_buf u_clk_io_buf(
 
 // 2-stage de-assertion
 logic rst_val_n;
-assign rst_val_n = rst_n && io_clk_en;
+assign rst_val_n = scan_mode_i ? scan_reset_ni : rst_n && io_clk_en;
 
 prim_flop_2sync #(
   .Width ( 1 ),
ParseResult:
UPD HdlStmAssign@@ to 
    MOV HdlOp@@AND_LOG to 
    HdlOp: AND_LOG
        list: ops
            HdlValueId: rst_n
            HdlValueId: io_clk_en


CommitId: ef348c9995b53217479ebda6af8f7501042ecb72
[reggen] Add naming check for REGWEN and standardize on RW0C accesses
--- a/hw/ip/csrng/rtl/csrng_core.sv
+++ b/hw/ip/csrng/rtl/csrng_core.sv
@@ -1164,7 +1164,7 @@ module csrng_core import csrng_pkg::*; #(
 
   assign hw2reg.sum_sts.diag.de = !cs_enable;
   assign hw2reg.sum_sts.diag.d  =
-         (reg2hw.regen.q)        && // not used
+         (reg2hw.regwen.q)       && // not used
          (|reg2hw.genbits.q)     && // not used
          (|reg2hw.int_state_val.q); // not used
 
ParseResult:
UPD HdlStmAssign@@ to 
    UPD HdlOp@@AND_LOG to AND_LOG
        UPD HdlOp@@AND_LOG to AND_LOG
            UPD HdlOp@@DOT to DOT
                UPD HdlOp@@DOT to DOT
                    UPD HdlValueId@@regen to regwen


CommitId: 1a1b94d01fd7022438e2bd651e48ad2d99e3abca
Update lowrisc_ibex to lowRISC/ibex@6b9165f
--- a/hw/vendor/lowrisc_ibex/examples/fpga/artya7/rtl/top_artya7.sv
+++ b/hw/vendor/lowrisc_ibex/examples/fpga/artya7/rtl/top_artya7.sv
@@ -8,9 +8,10 @@ module top_artya7 (
     output [3:0]        LED
 );
 
-  parameter int          MEM_SIZE  = 64 * 1024; // 64 kB
-  parameter logic [31:0] MEM_START = 32'h00000000;
-  parameter logic [31:0] MEM_MASK  = MEM_SIZE-1;
+  parameter int          MEM_SIZE     = 64 * 1024; // 64 kB
+  parameter logic [31:0] MEM_START    = 32'h00000000;
+  parameter logic [31:0] MEM_MASK     = MEM_SIZE-1;
+  parameter              SRAMInitFile = "";
 
   logic clk_sys, rst_sys_n;
 

ParseResult:
INS HdlIdDef@@SRAMInitFile to params
HdlIdDef: SRAMInitFile
    HdlDirection: INTERNAL


CommitId: 207b1a678932f3c9ae1ada1fe2db5377c2ddeb1d
[usbdev] ISO endpoint fixes, add out_err interrupt
--- a/hw/dv/dpi/usbdpi/usbdpi.sv
+++ b/hw/dv/dpi/usbdpi/usbdpi.sv
@@ -82,6 +82,7 @@ module usbdpi #(
       d_int <= 0;
       dp_int <= 0;
       dn_int <= 0;
+      sense_p2d <= 0;
     end
   end
 
ParseResult:
INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: sense_p2d


CommitId: ac6af87af253861b7c6834f30e1ad0e0fff34fce
[top] Various minor lint fixes in the system
--- a/hw/top_earlgrey/rtl/top_earlgrey_asic.sv
+++ b/hw/top_earlgrey/rtl/top_earlgrey_asic.sv
@@ -450,6 +427,7 @@ module top_earlgrey_asic (
   import sensor_ctrl_reg_pkg::OtSel;
 
   // reset domain connections
+  import rstmgr_pkg::PowerDomains;
   import rstmgr_pkg::DomainAonSel;
   import rstmgr_pkg::Domain0Sel;
 

ParseResult:
UPD HdlModuleDef@@top_earlgrey_asic to top_earlgrey_asic
    INS HdlImport@@ to objs
    HdlImport
        list: path
            HdlValueId: rstmgr_pkg
            HdlValueId: PowerDomains


CommitId: ac6af87af253861b7c6834f30e1ad0e0fff34fce
[top] Various minor lint fixes in the system
--- a/hw/top_earlgrey/rtl/top_earlgrey_asic.sv
+++ b/hw/top_earlgrey/rtl/top_earlgrey_asic.sv
@@ -588,6 +589,25 @@ module top_earlgrey_asic (
     .scan_reset_no         ( scan_rst_n )
   );
 
+  ///////////////////////////////
+  // Differential USB Receiver //
+  ///////////////////////////////
+
+  // TODO: overhaul these USB connections
+  assign usbdev_aon_usb_rx_enable = 1'b0;
+
+  prim_usb_diff_rx #(
+    .CalibW(ast_pkg::UsbCalibWidth)
+  ) u_prim_usb_diff_rx (
+    .input_pi      ( USB_P                    ),
+    .input_ni      ( USB_N                    ),
+    .input_en_i    ( usbdev_aon_usb_rx_enable ),
+    .core_pok_i    ( ast_base_pwr.main_pok    ),
+    .pullup_p_en_i ( usb_pullup_p_en          ),
+    .pullup_n_en_i ( usb_pullup_n_en          ),
+    .calibration_i ( usb_io_pu_cal            ),
+    .input_o       ( usb_diff_input           )
+  );
 
   //////////////////////
   // Top-level design //
ParseResult:
UPD HdlModuleDef@@top_earlgrey_asic to top_earlgrey_asic
    INS HdlImport@@ to objs
    HdlImport
        list: path
            HdlValueId: rstmgr_pkg
            HdlValueId: PowerDomains


CommitId: 098128c9003b1ab226ff17001ac59845a6755f24
Revert "Revert "[usbdev] Fixes for I/O modes and expand their tests""
--- a/hw/ip/usbdev/rtl/usbdev.sv
+++ b/hw/ip/usbdev/rtl/usbdev.sv
@@ -141,13 +141,20 @@ module usbdev (
 
 
   /////////////////////////////////
-  // USB IO after CDC & muxing   //
+  // USB RX after CDC & muxing   //
   /////////////////////////////////
   logic usb_rx_d;
-  logic usb_rx_se0;
+  logic usb_rx_dp;
+  logic usb_rx_dn;
+  /////////////////////////////////
+  // USB TX after CDC & muxing   //
+  /////////////////////////////////
   logic usb_tx_d;
   logic usb_tx_se0;
   logic usb_tx_oe;
+  /////////////////////////////////
+  // USB contol pins after CDC   //
+  /////////////////////////////////
   logic usb_pwr_sense;
   logic usb_pullup_en;
 

ParseResult:
UPD HdlIdDef@@usb_rx_se0 to usb_rx_dp

INS HdlIdDef@@usb_rx_dn to objs
HdlIdDef: usb_rx_dn
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL


CommitId: 2971a1ea44cb941c4fb58376e312c30617644192
[top] Top level updates
--- a/hw/top_earlgrey/ip/xbar_peri/rtl/autogen/xbar_peri.sv
+++ b/hw/top_earlgrey/ip/xbar_peri/rtl/autogen/xbar_peri.sv
@@ -34,8 +37,14 @@ module xbar_peri (
   output tlul_pkg::tl_d2h_t tl_main_o,
 
   // Device interfaces
-  output tlul_pkg::tl_h2d_t tl_uart_o,
-  input  tlul_pkg::tl_d2h_t tl_uart_i,
+  output tlul_pkg::tl_h2d_t tl_uart0_o,
+  input  tlul_pkg::tl_d2h_t tl_uart0_i,
+  output tlul_pkg::tl_h2d_t tl_uart1_o,
+  input  tlul_pkg::tl_d2h_t tl_uart1_i,
+  output tlul_pkg::tl_h2d_t tl_uart2_o,
+  input  tlul_pkg::tl_d2h_t tl_uart2_i,
+  output tlul_pkg::tl_h2d_t tl_uart3_o,
+  input  tlul_pkg::tl_d2h_t tl_uart3_i,
   output tlul_pkg::tl_h2d_t tl_gpio_o,
   input  tlul_pkg::tl_d2h_t tl_gpio_i,
   output tlul_pkg::tl_h2d_t tl_spi_device_o,

ParseResult:
UPD HdlIdDef@@tl_uart_o to tl_uart0_o

UPD HdlIdDef@@tl_uart_i to tl_uart0_i

INS HdlIdDef@@tl_uart1_o to ports
HdlIdDef: tl_uart1_o
    HdlOp: DOUBLE_COLON
        list: ops
            HdlValueId: tlul_pkg
            HdlValueId: tl_h2d_t
    HdlDirection: OUT

INS HdlIdDef@@tl_uart1_i to ports
HdlIdDef: tl_uart1_i
    HdlOp: DOUBLE_COLON
        list: ops
            HdlValueId: tlul_pkg
            HdlValueId: tl_d2h_t
    HdlDirection: IN

INS HdlIdDef@@tl_uart2_o to ports
HdlIdDef: tl_uart2_o
    HdlOp: DOUBLE_COLON
        list: ops
            HdlValueId: tlul_pkg
            HdlValueId: tl_h2d_t
    HdlDirection: OUT

INS HdlIdDef@@tl_uart2_i to ports
HdlIdDef: tl_uart2_i
    HdlOp: DOUBLE_COLON
        list: ops
            HdlValueId: tlul_pkg
            HdlValueId: tl_d2h_t
    HdlDirection: IN

INS HdlIdDef@@tl_uart3_o to ports
HdlIdDef: tl_uart3_o
    HdlOp: DOUBLE_COLON
        list: ops
            HdlValueId: tlul_pkg
            HdlValueId: tl_h2d_t
    HdlDirection: OUT

INS HdlIdDef@@tl_uart3_i to ports
HdlIdDef: tl_uart3_i
    HdlOp: DOUBLE_COLON
        list: ops
            HdlValueId: tlul_pkg
            HdlValueId: tl_d2h_t
    HdlDirection: IN


CommitId: 2971a1ea44cb941c4fb58376e312c30617644192
[top] Top level updates
--- a/hw/top_earlgrey/ip/xbar_peri/rtl/autogen/xbar_peri.sv
+++ b/hw/top_earlgrey/ip/xbar_peri/rtl/autogen/xbar_peri.sv
@@ -199,17 +226,17 @@ end
   tlul_socket_1n #(
     .HReqDepth (4'h0),
     .HRspDepth (4'h0),
-    .DReqDepth (64'h0),
-    .DRspDepth (64'h0),
-    .N         (16)
-  ) u_s1n_17 (
+    .DReqDepth (76'h0),
+    .DRspDepth (76'h0),
+    .N         (19)
+  ) u_s1n_20 (
     .clk_i        (clk_peri_i),
     .rst_ni       (rst_peri_ni),
-    .tl_h_i       (tl_s1n_17_us_h2d),
-    .tl_h_o       (tl_s1n_17_us_d2h),
-    .tl_d_o       (tl_s1n_17_ds_h2d),
-    .tl_d_i       (tl_s1n_17_ds_d2h),
-    .dev_select_i (dev_sel_s1n_17)
+    .tl_h_i       (tl_s1n_20_us_h2d),
+    .tl_h_o       (tl_s1n_20_us_d2h),
+    .tl_d_o       (tl_s1n_20_ds_h2d),
+    .tl_d_i       (tl_s1n_20_ds_d2h),
+    .dev_select_i (dev_sel_s1n_20)
   );
 
 endmodule
ParseResult:
UPD HdlStmIf@@ to 
    INS tuple@@ to elifs
    INS tuple@@ to elifs
    INS tuple@@ to elifs
    INS HdlOp@@EQ to 
    INS HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: dev_sel_s1n_20
                    HdlValueInt: 10
    INS HdlOp@@EQ to 
    INS HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: dev_sel_s1n_20
                    HdlValueInt: 11
    INS HdlOp@@EQ to 
    INS HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: dev_sel_s1n_20
                    HdlValueInt: 12
    UPD HdlOp@@EQ to EQ
        INS list@@ops to EQ
        INS HdlOp@@AND to ops
        INS HdlValueId@@ADDR_SPACE_CLKMGR to ops
        UPD HdlOp@@AND to AND
            INS list@@ops to AND
            INS HdlOp@@DOT to ops
            HdlOp: DOT
                list: ops
                    HdlValueId: tl_s1n_20_us_h2d
                    HdlValueId: a_address
    UPD HdlOp@@EQ to EQ
        INS list@@ops to EQ
        INS HdlOp@@AND to ops
        INS HdlValueId@@ADDR_SPACE_RAM_RET to ops
        UPD HdlOp@@AND to AND
            INS list@@ops to AND
            INS HdlOp@@DOT to ops
            HdlOp: DOT
                list: ops
                    HdlValueId: tl_s1n_20_us_h2d
                    HdlValueId: a_address
    UPD HdlOp@@EQ to EQ
        INS list@@ops to EQ
        INS HdlOp@@AND to ops
        INS HdlValueId@@ADDR_SPACE_OTP_CTRL to ops
        UPD HdlOp@@AND to AND
            INS list@@ops to AND
            INS HdlOp@@DOT to ops
            HdlOp: DOT
                list: ops
                    HdlValueId: tl_s1n_20_us_h2d
                    HdlValueId: a_address
    UPD HdlOp@@EQ to EQ
        UPD HdlOp@@AND to AND
            INS HdlOp@@NEG to ops
            HdlOp: NEG
                list: ops
                    HdlValueId: ADDR_MASK_UART1
    UPD HdlOp@@EQ to EQ
        UPD HdlOp@@AND to AND
            INS HdlOp@@NEG to ops
            HdlOp: NEG
                list: ops
                    HdlValueId: ADDR_MASK_UART2
    UPD HdlOp@@EQ to EQ
        UPD HdlOp@@AND to AND
            INS HdlOp@@NEG to ops
            HdlOp: NEG
                list: ops
                    HdlValueId: ADDR_MASK_UART3


CommitId: 19044edfb0b9485031557705595840bea41fb33d
[prim_secded] Use _i/_o suffix for port names
--- a/hw/ip/prim/rtl/prim_secded_39_32_dec.sv
+++ b/hw/ip/prim/rtl/prim_secded_39_32_dec.sv
@@ -5,8 +5,8 @@
 // SECDED decoder generated by util/design/secded_gen.py
 
 module prim_secded_39_32_dec (
-  input        [38:0] in,
-  output logic [31:0] d_o,
+  input        [38:0] data_i,
+  output logic [31:0] data_o,
   output logic [6:0] syndrome_o,
   output logic [1:0] err_o
 );

ParseResult:
UPD HdlIdDef@@in to data_i

UPD HdlIdDef@@d_o to data_o


CommitId: 853015f3cad0517aa516d097a2689bc998091716
[prim_ram_1p_scr] Fix sequencing bug in scrambling logic
--- a/hw/ip/prim/rtl/prim_subst_perm.sv
+++ b/hw/ip/prim/rtl/prim_subst_perm.sv
@@ -36,6 +36,7 @@ module prim_subst_perm #(
       always_comb begin : p_dec
         data_state_sbox = data_state[r] ^ key_i;
         // Reverse odd/even grouping
+        data_state_flipped = data_state_sbox;
         for (int k = 0; k < DataWidth/2; k++) begin
           data_state_flipped[k * 2]     = data_state_sbox[k];
           data_state_flipped[k * 2 + 1] = data_state_sbox[k + DataWidth/2];

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: data_state_flipped
                HdlValueId: data_state_sbox


CommitId: 853015f3cad0517aa516d097a2689bc998091716
[prim_ram_1p_scr] Fix sequencing bug in scrambling logic
--- a/hw/ip/prim/rtl/prim_subst_perm.sv
+++ b/hw/ip/prim/rtl/prim_subst_perm.sv
@@ -68,6 +69,7 @@ module prim_subst_perm #(
         // Regroup bits such that all even indices are stacked up first, followed by all odd
         // indices. Note that if the Width is odd, this is still ok, since
         // the uppermost bit just stays in place in that case.
+        data_state_sbox = data_state_flipped;
         for (int k = 0; k < DataWidth/2; k++) begin
           data_state_sbox[k]               = data_state_flipped[k * 2];
           data_state_sbox[k + DataWidth/2] = data_state_flipped[k * 2 + 1];
ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: data_state_sbox
                HdlValueId: data_state_flipped


CommitId: 38f5cac489b1a30ee1555866178423327d4bcf53
[csrng/rtl] added tracking sm fields to reg for debug
--- a/hw/ip/csrng/rtl/csrng_core.sv
+++ b/hw/ip/csrng/rtl/csrng_core.sv
@@ -310,6 +310,8 @@ module csrng_core import csrng_pkg::*; #(
   logic                    block_encrypt_quiet;
 
   logic [StateId-1:0]      track_inst_id[NApps];
+  logic [7:0]              track_sm[16];
+  logic [1:0]              sel_track_sm_grp;
 
   // flops
   logic [2:0]  acmd_q, acmd_d;

ParseResult:
INS HdlIdDef@@track_sm to objs
HdlIdDef: track_sm
    HdlOp: INDEX
        list: ops
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: logic
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 7
                            HdlValueInt: 0
            HdlValueInt: 16
    HdlDirection: INTERNAL

INS HdlIdDef@@sel_track_sm_grp to objs
HdlIdDef: sel_track_sm_grp
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: INTERNAL


CommitId: 38f5cac489b1a30ee1555866178423327d4bcf53
[csrng/rtl] added tracking sm fields to reg for debug
--- a/hw/ip/csrng/rtl/csrng_core.sv
+++ b/hw/ip/csrng/rtl/csrng_core.sv
@@ -1391,11 +1393,27 @@ module csrng_core import csrng_pkg::*; #(
     .state_db_wr_inst_id_i(state_db_wr_inst_id),
     .cmd_core_ack_i(cmd_core_ack[i]),
     .cmd_stage_ack_i(cmd_stage_ack[i]),
-    .track_sm_o()
+    .track_sm_o(track_sm[i])
   );
 
   end : gen_track_sm
 
+  for (genvar i = NApps; i < 16; i = i+1) begin : gen_track_sm_null
+    assign track_sm[i] = '0;
+  end : gen_track_sm_null
+
+
+  // attach track sm output to observation register
+
+  assign sel_track_sm_grp = reg2hw.sel_tracking_sm.q;
+
+  assign hw2reg.tracking_sm_obs.de = cs_enable;
+  assign hw2reg.tracking_sm_obs.d =
+         (sel_track_sm_grp == 2'h3) ? {track_sm[15],track_sm[14],track_sm[13],track_sm[12]} :
+         (sel_track_sm_grp == 2'h2) ? {track_sm[11],track_sm[10],track_sm[9],track_sm[8]} :
+         (sel_track_sm_grp == 2'h1) ? {track_sm[7],track_sm[6],track_sm[5],track_sm[4]} :
+         {track_sm[3],track_sm[2],track_sm[1],track_sm[0]};
+
   //--------------------------------------------
   // report csrng request summary
   //--------------------------------------------
ParseResult:
INS HdlStmFor@@ to objs
HdlStmFor
    HdlStmBlock: SEQ
        list: body
            HdlIdDef: i
                HdlValueId: NApps
                HdlDirection: INTERNAL
    HdlOp: LT
        list: ops
            HdlValueId: i
            HdlValueInt: 16
    HdlOp: ASSIGN
        list: ops
            HdlValueId: i
            HdlOp: ADD
                list: ops
                    HdlValueId: i
                    HdlValueInt: 1
    HdlStmBlock: SEQ
        list: body
            HdlStmAssign
                HdlValueInt: 0
                HdlOp: INDEX
                    list: ops
                        HdlValueId: track_sm
                        HdlValueId: i

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: DOT
        list: ops
            HdlOp: DOT
                list: ops
                    HdlValueId: reg2hw
                    HdlValueId: sel_tracking_sm
            HdlValueId: q
    HdlValueId: sel_track_sm_grp

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlValueId: cs_enable
    HdlValueId: hw2reg

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: TERNARY
        list: ops
            HdlOp: EQ
                list: ops
                    HdlValueId: sel_track_sm_grp
                    HdlValueInt: 3
            HdlOp: CONCAT
                list: ops
                    HdlOp: CONCAT
                        list: ops
                            HdlOp: CONCAT
                                list: ops
                                    HdlOp: INDEX
                                        list: ops
                                            HdlValueId: track_sm
                                            HdlValueInt: 15
                                    HdlOp: INDEX
                                        list: ops
                                            HdlValueId: track_sm
                                            HdlValueInt: 14
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: track_sm
                                    HdlValueInt: 13
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: track_sm
                            HdlValueInt: 12
            HdlOp: TERNARY
                list: ops
                    HdlOp: EQ
                        list: ops
                            HdlValueId: sel_track_sm_grp
                            HdlValueInt: 2
                    HdlOp: CONCAT
                        list: ops
                            HdlOp: CONCAT
                                list: ops
                                    HdlOp: CONCAT
                                        list: ops
                                            HdlOp: INDEX
                                                list: ops
                                                    HdlValueId: track_sm
                                                    HdlValueInt: 11
                                            HdlOp: INDEX
                                                list: ops
                                                    HdlValueId: track_sm
                                                    HdlValueInt: 10
                                    HdlOp: INDEX
                                        list: ops
                                            HdlValueId: track_sm
                                            HdlValueInt: 9
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: track_sm
                                    HdlValueInt: 8
                    HdlOp: TERNARY
                        list: ops
                            HdlOp: EQ
                                list: ops
                                    HdlValueId: sel_track_sm_grp
                                    HdlValueInt: 1
                            HdlOp: CONCAT
                                list: ops
                                    HdlOp: CONCAT
                                        list: ops
                                            HdlOp: CONCAT
                                                list: ops
                                                    HdlOp: INDEX
                                                        list: ops
                                                            HdlValueId: track_sm
                                                            HdlValueInt: 7
                                                    HdlOp: INDEX
                                                        list: ops
                                                            HdlValueId: track_sm
                                                            HdlValueInt: 6
                                            HdlOp: INDEX
                                                list: ops
                                                    HdlValueId: track_sm
                                                    HdlValueInt: 5
                                    HdlOp: INDEX
                                        list: ops
                                            HdlValueId: track_sm
                                            HdlValueInt: 4
                            HdlOp: CONCAT
                                list: ops
                                    HdlOp: CONCAT
                                        list: ops
                                            HdlOp: CONCAT
                                                list: ops
                                                    HdlOp: INDEX
                                                        list: ops
                                                            HdlValueId: track_sm
                                                            HdlValueInt: 3
                                                    HdlOp: INDEX
                                                        list: ops
                                                            HdlValueId: track_sm
                                                            HdlValueInt: 2
                                            HdlOp: INDEX
                                                list: ops
                                                    HdlValueId: track_sm
                                                    HdlValueInt: 1
                                    HdlOp: INDEX
                                        list: ops
                                            HdlValueId: track_sm
                                            HdlValueInt: 0
    HdlValueId: hw2reg


CommitId: 597dea829296a9563ae6dfbf79a38fbb3ecbabc0
[ast] Fix ast.core file
--- a/hw/top_earlgrey/ip/ast/rtl/aon_osc.sv
+++ b/hw/top_earlgrey/ip/ast/rtl/aon_osc.sv
@@ -9,11 +9,13 @@
 module aon_osc (
   input vcore_pok_h_i,    // VCORE POK @3.3V
   input aon_en_i,         // AON Source Clock Enable
-  input clk_aon_ext_i,    // FPGA/VERILATOR Clock input
+`ifdef AST_BYPASS_CLK
+  input clk_aon_ext_i,    // FPGA/VERILATOR Clock input\
+`endif
   output logic aon_clk_o  // AON Clock Output
 );
 
-`ifndef SYNTHESIS
+`ifndef AST_BYPASS_CLK
 // Behavioral Model
 ////////////////////////////////////////
 timeunit 1ns / 10ps;

ParseResult:
DEL HdlIdDef@@clk_aon_ext_i from ports
HdlIdDef: clk_aon_ext_i
    HdlValueId: wire
    HdlDirection: IN


CommitId: a4a9e4013612607c68086ce4534a14206928f3a6
[top_earlgrey] Enable OTBN in toplevel
--- a/hw/top_earlgrey/ip/xbar_main/rtl/autogen/xbar_main.sv
+++ b/hw/top_earlgrey/ip/xbar_main/rtl/autogen/xbar_main.sv
@@ -114,6 +118,8 @@ module xbar_main (
   input  tlul_pkg::tl_d2h_t tl_alert_handler_i,
   output tlul_pkg::tl_h2d_t tl_nmi_gen_o,
   input  tlul_pkg::tl_d2h_t tl_nmi_gen_i,
+  output tlul_pkg::tl_h2d_t tl_otbn_o,
+  input  tlul_pkg::tl_d2h_t tl_otbn_i,
 
   input scanmode_i
 );

ParseResult:
INS HdlIdDef@@tl_otbn_o to ports
HdlIdDef: tl_otbn_o
    HdlOp: DOUBLE_COLON
        list: ops
            HdlValueId: tlul_pkg
            HdlValueId: tl_h2d_t
    HdlDirection: OUT

INS HdlIdDef@@tl_otbn_i to ports
HdlIdDef: tl_otbn_i
    HdlOp: DOUBLE_COLON
        list: ops
            HdlValueId: tlul_pkg
            HdlValueId: tl_d2h_t
    HdlDirection: IN


CommitId: a4a9e4013612607c68086ce4534a14206928f3a6
[top_earlgrey] Enable OTBN in toplevel
--- a/hw/top_earlgrey/ip/xbar_main/rtl/autogen/xbar_main.sv
+++ b/hw/top_earlgrey/ip/xbar_main/rtl/autogen/xbar_main.sv
@@ -126,33 +132,26 @@ module xbar_main (
   logic unused_scanmode;
   assign unused_scanmode = scanmode_i;
 
-  tl_h2d_t tl_s1n_16_us_h2d ;
-  tl_d2h_t tl_s1n_16_us_d2h ;
+  tl_h2d_t tl_s1n_17_us_h2d ;
+  tl_d2h_t tl_s1n_17_us_d2h ;
 
 
-  tl_h2d_t tl_s1n_16_ds_h2d [4];
-  tl_d2h_t tl_s1n_16_ds_d2h [4];
+  tl_h2d_t tl_s1n_17_ds_h2d [4];
+  tl_d2h_t tl_s1n_17_ds_d2h [4];
 
   // Create steering signal
-  logic [2:0] dev_sel_s1n_16;
+  logic [2:0] dev_sel_s1n_17;
 
 
-  tl_h2d_t tl_sm1_17_us_h2d [3];
-  tl_d2h_t tl_sm1_17_us_d2h [3];
-
-  tl_h2d_t tl_sm1_17_ds_h2d ;
-  tl_d2h_t tl_sm1_17_ds_d2h ;
-
-
-  tl_h2d_t tl_sm1_18_us_h2d [2];
-  tl_d2h_t tl_sm1_18_us_d2h [2];
+  tl_h2d_t tl_sm1_18_us_h2d [3];
+  tl_d2h_t tl_sm1_18_us_d2h [3];
 
   tl_h2d_t tl_sm1_18_ds_h2d ;
   tl_d2h_t tl_sm1_18_ds_d2h ;
 
 
-  tl_h2d_t tl_sm1_19_us_h2d [3];
-  tl_d2h_t tl_sm1_19_us_d2h [3];
+  tl_h2d_t tl_sm1_19_us_h2d [2];
+  tl_d2h_t tl_sm1_19_us_d2h [2];
 
   tl_h2d_t tl_sm1_19_ds_h2d ;
   tl_d2h_t tl_sm1_19_ds_d2h ;

ParseResult:
MOV HdlIdDef@@tl_sm1_17_us_h2d to objs
HdlIdDef: tl_sm1_17_us_h2d
    HdlOp: INDEX
        list: ops
            type
            HdlValueInt: 3
    HdlDirection: INTERNAL

MOV HdlIdDef@@tl_sm1_18_us_d2h to objs
HdlIdDef: tl_sm1_18_us_d2h
    HdlOp: INDEX
        list: ops
            type
            HdlValueInt: 2
    HdlDirection: INTERNAL

MOV HdlIdDef@@tl_sm1_18_us_h2d to objs
HdlIdDef: tl_sm1_18_us_h2d
    HdlOp: INDEX
        list: ops
            type
            HdlValueInt: 2
    HdlDirection: INTERNAL

MOV HdlIdDef@@tl_sm1_19_us_d2h to objs
HdlIdDef: tl_sm1_19_us_d2h
    HdlOp: INDEX
        list: ops
            type
            HdlValueInt: 3
    HdlDirection: INTERNAL

MOV HdlIdDef@@tl_sm1_19_us_h2d to objs
HdlIdDef: tl_sm1_19_us_h2d
    HdlOp: INDEX
        list: ops
            type
            HdlValueInt: 3
    HdlDirection: INTERNAL

INS HdlIdDef@@tl_s1n_17_us_h2d to objs
HdlIdDef: tl_s1n_17_us_h2d
    HdlDirection: INTERNAL

INS HdlIdDef@@tl_s1n_17_us_d2h to objs
HdlIdDef: tl_s1n_17_us_d2h
    HdlDirection: INTERNAL

UPD HdlIdDef@@tl_s1n_16_ds_h2d to tl_s1n_17_ds_h2d

UPD HdlIdDef@@tl_s1n_16_ds_d2h to tl_s1n_17_ds_d2h

UPD HdlIdDef@@dev_sel_s1n_16 to dev_sel_s1n_17

UPD HdlIdDef@@tl_sm1_17_us_d2h to tl_sm1_18_us_h2d

UPD HdlIdDef@@tl_sm1_17_us_h2d to tl_sm1_18_us_d2h

UPD HdlIdDef@@tl_sm1_18_us_d2h to tl_sm1_19_us_h2d

UPD HdlIdDef@@tl_sm1_18_us_h2d to tl_sm1_19_us_d2h

UPD HdlIdDef@@tl_sm1_19_us_d2h to tl_sm1_21_us_h2d

UPD HdlIdDef@@tl_sm1_19_us_h2d to tl_sm1_21_us_d2h

DEL HdlIdDef@@tl_s1n_16_us_h2d from objs
HdlIdDef: tl_s1n_16_us_h2d
    HdlDirection: INTERNAL

DEL HdlIdDef@@tl_s1n_16_us_d2h from objs
HdlIdDef: tl_s1n_16_us_d2h
    HdlDirection: INTERNAL

DEL HdlIdDef@@tl_sm1_17_ds_h2d from objs
HdlIdDef: tl_sm1_17_ds_h2d
    HdlDirection: INTERNAL

DEL HdlIdDef@@tl_sm1_17_ds_d2h from objs
HdlIdDef: tl_sm1_17_ds_d2h
    HdlDirection: INTERNAL


CommitId: a4a9e4013612607c68086ce4534a14206928f3a6
[top_earlgrey] Enable OTBN in toplevel
--- a/hw/top_earlgrey/ip/xbar_main/rtl/autogen/xbar_main.sv
+++ b/hw/top_earlgrey/ip/xbar_main/rtl/autogen/xbar_main.sv
@@ -164,27 +163,27 @@ module xbar_main (
   tl_h2d_t tl_sm1_20_ds_h2d ;
   tl_d2h_t tl_sm1_20_ds_d2h ;
 
-  tl_h2d_t tl_s1n_21_us_h2d ;
-  tl_d2h_t tl_s1n_21_us_d2h ;
 
+  tl_h2d_t tl_sm1_21_us_h2d [3];
+  tl_d2h_t tl_sm1_21_us_d2h [3];
 
-  tl_h2d_t tl_s1n_21_ds_h2d [13];
-  tl_d2h_t tl_s1n_21_ds_d2h [13];
+  tl_h2d_t tl_sm1_21_ds_h2d ;
+  tl_d2h_t tl_sm1_21_ds_d2h ;
 
-  // Create steering signal
-  logic [3:0] dev_sel_s1n_21;
+  tl_h2d_t tl_s1n_22_us_h2d ;
+  tl_d2h_t tl_s1n_22_us_d2h ;
 
-  tl_h2d_t tl_asf_22_us_h2d ;
-  tl_d2h_t tl_asf_22_us_d2h ;
-  tl_h2d_t tl_asf_22_ds_h2d ;
-  tl_d2h_t tl_asf_22_ds_d2h ;
 
+  tl_h2d_t tl_s1n_22_ds_h2d [14];
+  tl_d2h_t tl_s1n_22_ds_d2h [14];
 
-  tl_h2d_t tl_sm1_23_us_h2d [2];
-  tl_d2h_t tl_sm1_23_us_d2h [2];
+  // Create steering signal
+  logic [3:0] dev_sel_s1n_22;
 
-  tl_h2d_t tl_sm1_23_ds_h2d ;
-  tl_d2h_t tl_sm1_23_ds_d2h ;
+  tl_h2d_t tl_asf_23_us_h2d ;
+  tl_d2h_t tl_asf_23_us_d2h ;
+  tl_h2d_t tl_asf_23_ds_h2d ;
+  tl_d2h_t tl_asf_23_ds_d2h ;
 
 
   tl_h2d_t tl_sm1_24_us_h2d [2];

ParseResult:
MOV HdlIdDef@@tl_sm1_23_us_d2h to objs
HdlIdDef: tl_sm1_23_us_d2h
    HdlOp: INDEX
        list: ops
            type
            HdlValueInt: 2
    HdlDirection: INTERNAL

MOV HdlIdDef@@tl_sm1_23_us_h2d to objs
HdlIdDef: tl_sm1_23_us_h2d
    HdlOp: INDEX
        list: ops
            type
            HdlValueInt: 2
    HdlDirection: INTERNAL

MOV HdlIdDef@@tl_s1n_21_ds_d2h to objs
HdlIdDef: tl_s1n_21_ds_d2h
    HdlOp: INDEX
        list: ops
            type
            HdlValueInt: 13
    HdlDirection: INTERNAL

MOV HdlIdDef@@tl_s1n_21_ds_h2d to objs
HdlIdDef: tl_s1n_21_ds_h2d
    HdlOp: INDEX
        list: ops
            type
            HdlValueInt: 13
    HdlDirection: INTERNAL

INS HdlIdDef@@tl_sm1_21_ds_h2d to objs
HdlIdDef: tl_sm1_21_ds_h2d
    HdlDirection: INTERNAL

INS HdlIdDef@@tl_sm1_21_ds_d2h to objs
HdlIdDef: tl_sm1_21_ds_d2h
    HdlDirection: INTERNAL

INS HdlIdDef@@tl_s1n_22_us_h2d to objs
HdlIdDef: tl_s1n_22_us_h2d
    HdlDirection: INTERNAL

INS HdlIdDef@@tl_s1n_22_us_d2h to objs
HdlIdDef: tl_s1n_22_us_d2h
    HdlDirection: INTERNAL

INS HdlIdDef@@tl_s1n_22_ds_h2d to objs
HdlIdDef: tl_s1n_22_ds_h2d
    HdlOp: INDEX
        list: ops
            type
            HdlValueInt: 14
    HdlDirection: INTERNAL

INS HdlIdDef@@tl_s1n_22_ds_d2h to objs
HdlIdDef: tl_s1n_22_ds_d2h
    HdlOp: INDEX
        list: ops
            type
            HdlValueInt: 14
    HdlDirection: INTERNAL

UPD HdlIdDef@@dev_sel_s1n_21 to dev_sel_s1n_22

INS HdlIdDef@@tl_asf_23_us_h2d to objs
HdlIdDef: tl_asf_23_us_h2d
    HdlDirection: INTERNAL

INS HdlIdDef@@tl_asf_23_us_d2h to objs
HdlIdDef: tl_asf_23_us_d2h
    HdlDirection: INTERNAL

INS HdlIdDef@@tl_asf_23_ds_h2d to objs
HdlIdDef: tl_asf_23_ds_h2d
    HdlDirection: INTERNAL

INS HdlIdDef@@tl_asf_23_ds_d2h to objs
HdlIdDef: tl_asf_23_ds_d2h
    HdlDirection: INTERNAL

UPD HdlIdDef@@tl_sm1_23_us_d2h to tl_sm1_32_us_h2d

UPD HdlIdDef@@tl_sm1_23_us_h2d to tl_sm1_32_us_d2h

UPD HdlIdDef@@tl_s1n_21_ds_d2h to tl_s1n_34_ds_h2d

UPD HdlIdDef@@tl_s1n_21_ds_h2d to tl_s1n_34_ds_d2h

DEL HdlIdDef@@tl_s1n_21_us_h2d from objs
HdlIdDef: tl_s1n_21_us_h2d
    HdlDirection: INTERNAL

DEL HdlIdDef@@tl_s1n_21_us_d2h from objs
HdlIdDef: tl_s1n_21_us_d2h
    HdlDirection: INTERNAL

DEL HdlIdDef@@tl_asf_22_us_h2d from objs
HdlIdDef: tl_asf_22_us_h2d
    HdlDirection: INTERNAL

DEL HdlIdDef@@tl_asf_22_us_d2h from objs
HdlIdDef: tl_asf_22_us_d2h
    HdlDirection: INTERNAL

DEL HdlIdDef@@tl_asf_22_ds_h2d from objs
HdlIdDef: tl_asf_22_ds_h2d
    HdlDirection: INTERNAL

DEL HdlIdDef@@tl_asf_22_ds_d2h from objs
HdlIdDef: tl_asf_22_ds_d2h
    HdlDirection: INTERNAL

DEL HdlIdDef@@tl_sm1_23_ds_h2d from objs
HdlIdDef: tl_sm1_23_ds_h2d
    HdlDirection: INTERNAL

DEL HdlIdDef@@tl_sm1_23_ds_d2h from objs
HdlIdDef: tl_sm1_23_ds_d2h
    HdlDirection: INTERNAL


CommitId: a4a9e4013612607c68086ce4534a14206928f3a6
[top_earlgrey] Enable OTBN in toplevel
--- a/hw/top_earlgrey/ip/xbar_main/rtl/autogen/xbar_main.sv
+++ b/hw/top_earlgrey/ip/xbar_main/rtl/autogen/xbar_main.sv
@@ -522,14 +550,14 @@ end
     .DReqDepth (16'h0),
     .DRspDepth (16'h0),
     .N         (4)
-  ) u_s1n_16 (
+  ) u_s1n_17 (
     .clk_i        (clk_main_i),
     .rst_ni       (rst_main_ni),
-    .tl_h_i       (tl_s1n_16_us_h2d),
-    .tl_h_o       (tl_s1n_16_us_d2h),
-    .tl_d_o       (tl_s1n_16_ds_h2d),
-    .tl_d_i       (tl_s1n_16_ds_d2h),
-    .dev_select   (dev_sel_s1n_16)
+    .tl_h_i       (tl_s1n_17_us_h2d),
+    .tl_h_o       (tl_s1n_17_us_d2h),
+    .tl_d_o       (tl_s1n_17_ds_h2d),
+    .tl_d_i       (tl_s1n_17_ds_d2h),
+    .dev_select   (dev_sel_s1n_17)
   );
   tlul_socket_m1 #(
     .HReqDepth (12'h0),

ParseResult:
UPD HdlStmProcess@@ to 
    INS HdlStmBlock@@SEQ to 
    INS HdlStmProcessTriggerConstrain@@COMB to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: dev_sel_s1n_34
                HdlValueInt: 13

UPD HdlStmIf@@ to 
    INS HdlOp@@EQ to 
    INS HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: dev_sel_s1n_34
                    HdlValueInt: 0
    INS list@@elifs to 
    UPD HdlOp@@EQ to EQ
        INS list@@ops to EQ
        INS HdlOp@@AND to ops
        INS HdlValueId@@ADDR_SPACE_ROM to ops
        UPD HdlOp@@AND to AND
            INS list@@ops to AND
            INS HdlOp@@DOT to ops
            HdlOp: DOT
                list: ops
                    HdlValueId: tl_s1n_34_us_h2d
                    HdlValueId: a_address
    INS tuple@@ to elifs
    INS tuple@@ to elifs
    INS tuple@@ to elifs
    INS tuple@@ to elifs
    INS tuple@@ to elifs
    INS tuple@@ to elifs
    INS tuple@@ to elifs
    INS tuple@@ to elifs
    INS tuple@@ to elifs
    INS tuple@@ to elifs
    INS tuple@@ to elifs
    tuple
        HdlOp: EQ
            list: ops
                HdlOp: AND
                    list: ops
                        HdlOp: DOT
                            list: ops
                                HdlValueId: tl_s1n_34_us_h2d
                                HdlValueId: a_address
                        HdlOp: NEG
                            list: ops
                                HdlValueId: ADDR_MASK_OTBN
                HdlValueId: ADDR_SPACE_OTBN
        HdlStmBlock: SEQ
            list: body
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: dev_sel_s1n_34
                        HdlValueInt: 12
    INS HdlOp@@EQ to 
    INS HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: dev_sel_s1n_34
                    HdlValueInt: 1
    INS HdlOp@@EQ to 
    INS HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: dev_sel_s1n_34
                    HdlValueInt: 2
    INS HdlOp@@EQ to 
    INS HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: dev_sel_s1n_34
                    HdlValueInt: 4
    INS HdlOp@@EQ to 
    INS HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: dev_sel_s1n_34
                    HdlValueInt: 5
    INS HdlOp@@EQ to 
    INS HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: dev_sel_s1n_34
                    HdlValueInt: 6
    INS HdlOp@@EQ to 
    INS HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: dev_sel_s1n_34
                    HdlValueInt: 7
    INS HdlOp@@EQ to 
    INS HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: dev_sel_s1n_34
                    HdlValueInt: 8
    INS HdlOp@@EQ to 
    INS HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: dev_sel_s1n_34
                    HdlValueInt: 9
    INS HdlOp@@EQ to 
    INS HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: dev_sel_s1n_34
                    HdlValueInt: 10
    INS HdlOp@@EQ to 
    INS HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: dev_sel_s1n_34
                    HdlValueInt: 11
    UPD HdlOp@@EQ to EQ
        INS list@@ops to EQ
        INS HdlOp@@AND to ops
        INS HdlValueId@@ADDR_SPACE_RAM_MAIN to ops
        UPD HdlOp@@AND to AND
            INS list@@ops to AND
            INS HdlOp@@DOT to ops
            HdlOp: DOT
                list: ops
                    HdlValueId: tl_s1n_34_us_h2d
                    HdlValueId: a_address
    UPD HdlOp@@EQ to EQ
        INS list@@ops to EQ
        INS HdlOp@@AND to ops
        INS HdlValueId@@ADDR_SPACE_EFLASH to ops
        UPD HdlOp@@AND to AND
            INS list@@ops to AND
            INS HdlOp@@DOT to ops
            HdlOp: DOT
                list: ops
                    HdlValueId: tl_s1n_34_us_h2d
                    HdlValueId: a_address
    UPD HdlOp@@EQ to EQ
        INS list@@ops to EQ
        INS HdlOp@@AND to ops
        INS HdlValueId@@ADDR_SPACE_FLASH_CTRL to ops
        UPD HdlOp@@AND to AND
            INS list@@ops to AND
            INS HdlOp@@DOT to ops
            HdlOp: DOT
                list: ops
                    HdlValueId: tl_s1n_34_us_h2d
                    HdlValueId: a_address
    UPD HdlOp@@EQ to EQ
        INS list@@ops to EQ
        INS HdlOp@@AND to ops
        INS HdlValueId@@ADDR_SPACE_AES to ops
        UPD HdlOp@@AND to AND
            INS list@@ops to AND
            INS HdlOp@@DOT to ops
            HdlOp: DOT
                list: ops
                    HdlValueId: tl_s1n_34_us_h2d
                    HdlValueId: a_address
    UPD HdlOp@@EQ to EQ
        INS list@@ops to EQ
        INS HdlOp@@AND to ops
        INS HdlValueId@@ADDR_SPACE_HMAC to ops
        UPD HdlOp@@AND to AND
            INS list@@ops to AND
            INS HdlOp@@DOT to ops
            HdlOp: DOT
                list: ops
                    HdlValueId: tl_s1n_34_us_h2d
                    HdlValueId: a_address
    UPD HdlOp@@EQ to EQ
        INS list@@ops to EQ
        INS HdlOp@@AND to ops
        INS HdlValueId@@ADDR_SPACE_RV_PLIC to ops
        UPD HdlOp@@AND to AND
            INS list@@ops to AND
            INS HdlOp@@DOT to ops
            HdlOp: DOT
                list: ops
                    HdlValueId: tl_s1n_34_us_h2d
                    HdlValueId: a_address
    UPD HdlOp@@EQ to EQ
        INS list@@ops to EQ
        INS HdlOp@@AND to ops
        INS HdlValueId@@ADDR_SPACE_PINMUX to ops
        UPD HdlOp@@AND to AND
            INS list@@ops to AND
            INS HdlOp@@DOT to ops
            HdlOp: DOT
                list: ops
                    HdlValueId: tl_s1n_34_us_h2d
                    HdlValueId: a_address
    UPD HdlOp@@EQ to EQ
        INS list@@ops to EQ
        INS HdlOp@@AND to ops
        INS HdlValueId@@ADDR_SPACE_PADCTRL to ops
        UPD HdlOp@@AND to AND
            INS list@@ops to AND
            INS HdlOp@@DOT to ops
            HdlOp: DOT
                list: ops
                    HdlValueId: tl_s1n_34_us_h2d
                    HdlValueId: a_address
    UPD HdlOp@@EQ to EQ
        INS list@@ops to EQ
        INS HdlOp@@AND to ops
        INS HdlValueId@@ADDR_SPACE_ALERT_HANDLER to ops
        UPD HdlOp@@AND to AND
            INS list@@ops to AND
            INS HdlOp@@DOT to ops
            HdlOp: DOT
                list: ops
                    HdlValueId: tl_s1n_34_us_h2d
                    HdlValueId: a_address
    UPD HdlOp@@EQ to EQ
        INS list@@ops to EQ
        INS HdlOp@@AND to ops
        INS HdlValueId@@ADDR_SPACE_NMI_GEN to ops
        UPD HdlOp@@AND to AND
            INS list@@ops to AND
            INS HdlOp@@DOT to ops
            HdlOp: DOT
                list: ops
                    HdlValueId: tl_s1n_34_us_h2d
                    HdlValueId: a_address


CommitId: a4a9e4013612607c68086ce4534a14206928f3a6
[top_earlgrey] Enable OTBN in toplevel
--- a/hw/top_earlgrey/ip/xbar_main/rtl/autogen/xbar_main.sv
+++ b/hw/top_earlgrey/ip/xbar_main/rtl/autogen/xbar_main.sv
@@ -537,20 +565,6 @@ end
     .DReqDepth (4'h0),
     .DRspDepth (4'h0),
     .M         (3)
-  ) u_sm1_17 (
-    .clk_i        (clk_main_i),
-    .rst_ni       (rst_main_ni),
-    .tl_h_i       (tl_sm1_17_us_h2d),
-    .tl_h_o       (tl_sm1_17_us_d2h),
-    .tl_d_o       (tl_sm1_17_ds_h2d),
-    .tl_d_i       (tl_sm1_17_ds_d2h)
-  );
-  tlul_socket_m1 #(
-    .HReqDepth (8'h0),
-    .HRspDepth (8'h0),
-    .DReqPass  (1'b0),
-    .DRspPass  (1'b0),
-    .M         (2)
   ) u_sm1_18 (
     .clk_i        (clk_main_i),
     .rst_ni       (rst_main_ni),

ParseResult:
UPD HdlStmProcess@@ to 
    INS HdlStmBlock@@SEQ to 
    INS HdlStmProcessTriggerConstrain@@COMB to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: dev_sel_s1n_34
                HdlValueInt: 13

UPD HdlStmIf@@ to 
    INS HdlOp@@EQ to 
    INS HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: dev_sel_s1n_34
                    HdlValueInt: 0
    INS list@@elifs to 
    UPD HdlOp@@EQ to EQ
        INS list@@ops to EQ
        INS HdlOp@@AND to ops
        INS HdlValueId@@ADDR_SPACE_ROM to ops
        UPD HdlOp@@AND to AND
            INS list@@ops to AND
            INS HdlOp@@DOT to ops
            HdlOp: DOT
                list: ops
                    HdlValueId: tl_s1n_34_us_h2d
                    HdlValueId: a_address
    INS tuple@@ to elifs
    INS tuple@@ to elifs
    INS tuple@@ to elifs
    INS tuple@@ to elifs
    INS tuple@@ to elifs
    INS tuple@@ to elifs
    INS tuple@@ to elifs
    INS tuple@@ to elifs
    INS tuple@@ to elifs
    INS tuple@@ to elifs
    INS tuple@@ to elifs
    tuple
        HdlOp: EQ
            list: ops
                HdlOp: AND
                    list: ops
                        HdlOp: DOT
                            list: ops
                                HdlValueId: tl_s1n_34_us_h2d
                                HdlValueId: a_address
                        HdlOp: NEG
                            list: ops
                                HdlValueId: ADDR_MASK_OTBN
                HdlValueId: ADDR_SPACE_OTBN
        HdlStmBlock: SEQ
            list: body
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: dev_sel_s1n_34
                        HdlValueInt: 12
    INS HdlOp@@EQ to 
    INS HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: dev_sel_s1n_34
                    HdlValueInt: 1
    INS HdlOp@@EQ to 
    INS HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: dev_sel_s1n_34
                    HdlValueInt: 2
    INS HdlOp@@EQ to 
    INS HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: dev_sel_s1n_34
                    HdlValueInt: 4
    INS HdlOp@@EQ to 
    INS HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: dev_sel_s1n_34
                    HdlValueInt: 5
    INS HdlOp@@EQ to 
    INS HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: dev_sel_s1n_34
                    HdlValueInt: 6
    INS HdlOp@@EQ to 
    INS HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: dev_sel_s1n_34
                    HdlValueInt: 7
    INS HdlOp@@EQ to 
    INS HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: dev_sel_s1n_34
                    HdlValueInt: 8
    INS HdlOp@@EQ to 
    INS HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: dev_sel_s1n_34
                    HdlValueInt: 9
    INS HdlOp@@EQ to 
    INS HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: dev_sel_s1n_34
                    HdlValueInt: 10
    INS HdlOp@@EQ to 
    INS HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: dev_sel_s1n_34
                    HdlValueInt: 11
    UPD HdlOp@@EQ to EQ
        INS list@@ops to EQ
        INS HdlOp@@AND to ops
        INS HdlValueId@@ADDR_SPACE_RAM_MAIN to ops
        UPD HdlOp@@AND to AND
            INS list@@ops to AND
            INS HdlOp@@DOT to ops
            HdlOp: DOT
                list: ops
                    HdlValueId: tl_s1n_34_us_h2d
                    HdlValueId: a_address
    UPD HdlOp@@EQ to EQ
        INS list@@ops to EQ
        INS HdlOp@@AND to ops
        INS HdlValueId@@ADDR_SPACE_EFLASH to ops
        UPD HdlOp@@AND to AND
            INS list@@ops to AND
            INS HdlOp@@DOT to ops
            HdlOp: DOT
                list: ops
                    HdlValueId: tl_s1n_34_us_h2d
                    HdlValueId: a_address
    UPD HdlOp@@EQ to EQ
        INS list@@ops to EQ
        INS HdlOp@@AND to ops
        INS HdlValueId@@ADDR_SPACE_FLASH_CTRL to ops
        UPD HdlOp@@AND to AND
            INS list@@ops to AND
            INS HdlOp@@DOT to ops
            HdlOp: DOT
                list: ops
                    HdlValueId: tl_s1n_34_us_h2d
                    HdlValueId: a_address
    UPD HdlOp@@EQ to EQ
        INS list@@ops to EQ
        INS HdlOp@@AND to ops
        INS HdlValueId@@ADDR_SPACE_AES to ops
        UPD HdlOp@@AND to AND
            INS list@@ops to AND
            INS HdlOp@@DOT to ops
            HdlOp: DOT
                list: ops
                    HdlValueId: tl_s1n_34_us_h2d
                    HdlValueId: a_address
    UPD HdlOp@@EQ to EQ
        INS list@@ops to EQ
        INS HdlOp@@AND to ops
        INS HdlValueId@@ADDR_SPACE_HMAC to ops
        UPD HdlOp@@AND to AND
            INS list@@ops to AND
            INS HdlOp@@DOT to ops
            HdlOp: DOT
                list: ops
                    HdlValueId: tl_s1n_34_us_h2d
                    HdlValueId: a_address
    UPD HdlOp@@EQ to EQ
        INS list@@ops to EQ
        INS HdlOp@@AND to ops
        INS HdlValueId@@ADDR_SPACE_RV_PLIC to ops
        UPD HdlOp@@AND to AND
            INS list@@ops to AND
            INS HdlOp@@DOT to ops
            HdlOp: DOT
                list: ops
                    HdlValueId: tl_s1n_34_us_h2d
                    HdlValueId: a_address
    UPD HdlOp@@EQ to EQ
        INS list@@ops to EQ
        INS HdlOp@@AND to ops
        INS HdlValueId@@ADDR_SPACE_PINMUX to ops
        UPD HdlOp@@AND to AND
            INS list@@ops to AND
            INS HdlOp@@DOT to ops
            HdlOp: DOT
                list: ops
                    HdlValueId: tl_s1n_34_us_h2d
                    HdlValueId: a_address
    UPD HdlOp@@EQ to EQ
        INS list@@ops to EQ
        INS HdlOp@@AND to ops
        INS HdlValueId@@ADDR_SPACE_PADCTRL to ops
        UPD HdlOp@@AND to AND
            INS list@@ops to AND
            INS HdlOp@@DOT to ops
            HdlOp: DOT
                list: ops
                    HdlValueId: tl_s1n_34_us_h2d
                    HdlValueId: a_address
    UPD HdlOp@@EQ to EQ
        INS list@@ops to EQ
        INS HdlOp@@AND to ops
        INS HdlValueId@@ADDR_SPACE_ALERT_HANDLER to ops
        UPD HdlOp@@AND to AND
            INS list@@ops to AND
            INS HdlOp@@DOT to ops
            HdlOp: DOT
                list: ops
                    HdlValueId: tl_s1n_34_us_h2d
                    HdlValueId: a_address
    UPD HdlOp@@EQ to EQ
        INS list@@ops to EQ
        INS HdlOp@@AND to ops
        INS HdlValueId@@ADDR_SPACE_NMI_GEN to ops
        UPD HdlOp@@AND to AND
            INS list@@ops to AND
            INS HdlOp@@DOT to ops
            HdlOp: DOT
                list: ops
                    HdlValueId: tl_s1n_34_us_h2d
                    HdlValueId: a_address


CommitId: 103b4cb2da07f5b826955691f28aa6b5a3bdd1ac
[flash_ctrl] Support the notion of a 'program-repair'.
--- a/hw/ip/flash_ctrl/rtl/flash_ctrl_prog.sv
+++ b/hw/ip/flash_ctrl/rtl/flash_ctrl_prog.sv
@@ -9,12 +9,14 @@ module flash_ctrl_prog import flash_ctrl_pkg::*; (
   input clk_i,
   input rst_ni,
 
-  // Software Interface
+  // Control Interface
   input                    op_start_i,
   input  [11:0]            op_num_words_i,
   output logic             op_done_o,
   output logic             op_err_o,
-  input [BusAddrW-1:0]        op_addr_i,
+  input [BusAddrW-1:0]     op_addr_i,
+  input flash_prog_e       op_type_i,
+  input [ProgTypes-1:0]    type_avail_i,
 
   // FIFO Interface
   input                    data_rdy_i,

ParseResult:
INS HdlIdDef@@op_type_i to ports
HdlIdDef: op_type_i
    HdlValueId: flash_prog_e
    HdlDirection: IN

INS HdlIdDef@@type_avail_i to ports
HdlIdDef: type_avail_i
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: wire
            HdlOp: DOWNTO
                list: ops
                    HdlOp: SUB
                        list: ops
                            HdlValueId: ProgTypes
                            HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: IN


CommitId: 103b4cb2da07f5b826955691f28aa6b5a3bdd1ac
[flash_ctrl] Support the notion of a 'program-repair'.
--- a/hw/ip/flash_ctrl/rtl/flash_ctrl_prog.sv
+++ b/hw/ip/flash_ctrl/rtl/flash_ctrl_prog.sv
@@ -27,6 +29,7 @@ module flash_ctrl_prog import flash_ctrl_pkg::*; (
   output logic             flash_ovfl_o,
   output logic [BusWidth-1:0] flash_data_o,
   output logic             flash_last_o, // last beat of prog data
+  output flash_prog_e      flash_type_o,
   input                    flash_done_i,
   input                    flash_error_i
 );

ParseResult:
INS HdlIdDef@@flash_type_o to ports
HdlIdDef: flash_type_o
    HdlValueId: flash_prog_e
    HdlDirection: OUT


CommitId: 103b4cb2da07f5b826955691f28aa6b5a3bdd1ac
[flash_ctrl] Support the notion of a 'program-repair'.
--- a/hw/ip/flash_ctrl/rtl/flash_ctrl_prog.sv
+++ b/hw/ip/flash_ctrl/rtl/flash_ctrl_prog.sv
@@ -56,6 +59,10 @@ module flash_ctrl_prog import flash_ctrl_pkg::*; (
   assign txn_done = flash_req_o && flash_done_i;
   assign cnt_hit = (cnt == op_num_words_i);
 
+  // if the requested prog type is available
+  logic prog_type_avail;
+  assign prog_type_avail = type_avail_i[op_type_i];
+
   // when error'd, continue to drain all program fifo contents like normal operation
   // if this is not done, software may fill up the fifo without anyone
   // draining the contents, leading to a lockup

ParseResult:
INS HdlIdDef@@prog_type_avail to objs
HdlIdDef: prog_type_avail
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: INDEX
        list: ops
            HdlValueId: type_avail_i
            HdlValueId: op_type_i
    HdlValueId: prog_type_avail


CommitId: 103b4cb2da07f5b826955691f28aa6b5a3bdd1ac
[flash_ctrl] Support the notion of a 'program-repair'.
--- a/hw/ip/flash_ctrl/rtl/flash_ctrl_prog.sv
+++ b/hw/ip/flash_ctrl/rtl/flash_ctrl_prog.sv
@@ -69,17 +76,22 @@ module flash_ctrl_prog import flash_ctrl_pkg::*; (
 
     unique case (st)
       StNorm: begin
-        flash_req_o = op_start_i & data_rdy_i;
+        // if the select operation type is not available, error
+        if (op_start_i && prog_type_avail) begin
+          flash_req_o = data_rdy_i;
 
-        if(txn_done && cnt_hit) begin
-          cnt_nxt = '0;
-          data_rd_o = 1'b1;
-          op_done_o = 1'b1;
-          op_err_o = flash_error_i;
-        end else if(txn_done) begin
-          cnt_nxt = cnt + 1'b1;
-          data_rd_o = 1'b1;
-          st_nxt = flash_error_i ? StErr : StNorm;
+          if(txn_done && cnt_hit) begin
+            cnt_nxt = '0;
+            data_rd_o = 1'b1;
+            op_done_o = 1'b1;
+            op_err_o = flash_error_i;
+          end else if(txn_done) begin
+            cnt_nxt = cnt + 1'b1;
+            data_rd_o = 1'b1;
+            st_nxt = flash_error_i ? StErr : StNorm;
+          end
+        end else if (op_start_i && !prog_type_avail) begin
+          st_nxt = StErr;
         end
       end
       StErr: begin

ParseResult:
UPD HdlStmCase@@st to st
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

INS HdlStmIf@@ to body

UPD HdlStmIf@@ to 
    INS HdlOp@@AND_LOG to 
    HdlOp: AND_LOG
        list: ops
            HdlValueId: op_start_i
            HdlValueId: prog_type_avail
    INS list@@elifs to 
    list: elifs
        tuple
            HdlOp: AND_LOG
                list: ops
                    HdlValueId: op_start_i
                    HdlOp: NEG_LOG
                        list: ops
                            HdlValueId: prog_type_avail
            HdlStmBlock: SEQ
                list: body
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: st_nxt
                            HdlValueId: StErr

UPD HdlStmCase@@st to st
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: flash_req_o
                    HdlOp: AND
                        list: ops
                            HdlValueId: op_start_i
                            HdlValueId: data_rdy_i
            HdlStmIf
                HdlOp: AND_LOG
                    list: ops
                        HdlValueId: txn_done
                        HdlValueId: cnt_hit
                HdlStmBlock: SEQ
                    list: body
                        HdlOp: ASSIGN
                            list: ops
                                HdlValueId: cnt_nxt
                                HdlValueInt: 0
                        HdlOp: ASSIGN
                            list: ops
                                HdlValueId: data_rd_o
                                HdlValueInt: 1
                        HdlOp: ASSIGN
                            list: ops
                                HdlValueId: op_done_o
                                HdlValueInt: 1
                        HdlOp: ASSIGN
                            list: ops
                                HdlValueId: op_err_o
                                HdlValueId: flash_error_i
                list: elifs
                    tuple
                        HdlValueId: txn_done
                        HdlStmBlock: SEQ
                            list: body
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: cnt_nxt
                                        HdlOp: ADD
                                            list: ops
                                                HdlValueId: cnt
                                                HdlValueInt: 1
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: data_rd_o
                                        HdlValueInt: 1
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: st_nxt
                                        HdlOp: TERNARY
                                            list: ops
                                                HdlValueId: flash_error_i
                                                HdlValueId: StErr
                                                HdlValueId: StNorm
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@AND to AND
                MOV HdlValueId@@data_rdy_i to ops
                HdlValueId: data_rdy_i
                DEL HdlValueId@@op_start_i from ops
                DEL list@@ops from AND
            DEL HdlOp@@AND from ops


CommitId: 103b4cb2da07f5b826955691f28aa6b5a3bdd1ac
[flash_ctrl] Support the notion of a 'program-repair'.
--- a/hw/ip/flash_ctrl/rtl/flash_ctrl_prog.sv
+++ b/hw/ip/flash_ctrl/rtl/flash_ctrl_prog.sv
@@ -103,5 +115,6 @@ module flash_ctrl_prog import flash_ctrl_pkg::*; (
   assign flash_addr_o = int_addr[0 +: BusAddrW];
   assign flash_ovfl_o = int_addr[BusAddrW];
   assign flash_last_o = flash_req_o & cnt_hit;
+  assign flash_type_o = op_type_i;
 
 endmodule // flash_ctrl_prog
ParseResult:
INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlValueId: op_type_i
    HdlValueId: flash_type_o

UPD HdlStmCase@@st to st
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmIf@@ to 
    INS HdlOp@@AND_LOG to 
    HdlOp: AND_LOG
        list: ops
            HdlValueId: op_start_i
            HdlValueId: prog_type_avail
    INS list@@elifs to 
    list: elifs
        tuple
            HdlOp: AND_LOG
                list: ops
                    HdlValueId: op_start_i
                    HdlOp: NEG_LOG
                        list: ops
                            HdlValueId: prog_type_avail
            HdlStmBlock: SEQ
                list: body
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: st_nxt
                            HdlValueId: StErr


CommitId: 309a47974f0ce84cab3d559a85975448dfbd7e2f
[prim] Use prim_pkg::impl_e instead of int for Impl
--- a/hw/ip/padctrl/rtl/padring.sv
+++ b/hw/ip/padctrl/rtl/padring.sv
@@ -8,11 +8,11 @@
 //
 
 `ifndef PRIM_DEFAULT_IMPL
-  `define PRIM_DEFAULT_IMPL integer'(prim_pkg::ImplGeneric)
+  `define PRIM_DEFAULT_IMPL prim_pkg::ImplGeneric
 `endif
 
 module padring #(
-  parameter integer Impl = `PRIM_DEFAULT_IMPL // this determines the pad implementation
+  parameter prim_pkg::impl_e Impl = `PRIM_DEFAULT_IMPL // this determines the pad implementation
 ) (
   // pad input
   input wire                                   clk_pad_i,
ParseResult:
UPD HdlIdDef@@Impl to Impl
    INS HdlOp@@DOUBLE_COLON to Impl
    INS HdlOp@@DOUBLE_COLON to Impl
    HdlOp: DOUBLE_COLON
        list: ops
            HdlValueId: prim_pkg
            HdlValueId: ImplGeneric
    UPD HdlOp@@DOUBLE_COLON to DOUBLE_COLON
        INS list@@ops to DOUBLE_COLON
        INS HdlValueId@@prim_pkg to ops

UPD HdlIdDef@@Impl to Impl
    UPD HdlValueId@@integer to impl_e
    MOV HdlValueId@@integer to Impl
    HdlValueId: integer
    DEL HdlExprNotImplemented@@value from Impl


CommitId: 53ef2ec43c1c1eb00b771e17fc157f5bb1103ed5
Update lowrisc_ibex to lowRISC/ibex@d14312c
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_controller.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_controller.sv
@@ -38,13 +21,15 @@ module ibex_controller (
     input  logic                  dret_insn_i,           // decoder has DRET instr
     input  logic                  wfi_insn_i,            // decoder has WFI instr
     input  logic                  ebrk_insn_i,           // decoder has EBREAK instr
-    input  logic                  csr_status_i,          // decoder has CSR status instr
+    input  logic                  csr_pipe_flush_i,      // do CSR-related pipeline flush
 
     // from IF-ID pipeline stage
     input  logic                  instr_valid_i,         // instr from IF-ID reg is valid
     input  logic [31:0]           instr_i,               // instr from IF-ID reg, for mtval
     input  logic [15:0]           instr_compressed_i,    // instr from IF-ID reg, for mtval
     input  logic                  instr_is_compressed_i, // instr from IF-ID reg is compressed
+    input  logic                  instr_fetch_err_i,     // instr from IF-ID reg has error
+    input  logic [31:0]           pc_id_i,               // instr from IF-ID reg address
 
     // to IF-ID pipeline stage
     output logic                  instr_valid_clear_o,   // kill instr in IF-ID reg

ParseResult:
UPD HdlIdDef@@csr_status_i to csr_pipe_flush_i

INS HdlIdDef@@instr_fetch_err_i to ports
HdlIdDef: instr_fetch_err_i
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: IN

INS HdlIdDef@@pc_id_i to ports
HdlIdDef: pc_id_i
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 31
                    HdlValueInt: 0
    HdlDirection: IN


CommitId: 53ef2ec43c1c1eb00b771e17fc157f5bb1103ed5
Update lowrisc_ibex to lowRISC/ibex@d14312c
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_controller.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_controller.sv
@@ -80,6 +65,7 @@ module ibex_controller (
     input  logic                  debug_req_i,
     output ibex_pkg::dbg_cause_e  debug_cause_o,
     output logic                  debug_csr_save_o,
+    output logic                  debug_mode_o,
     input  logic                  debug_single_step_i,
     input  logic                  debug_ebreakm_i,
 

ParseResult:
INS HdlIdDef@@debug_mode_o to ports
HdlIdDef: debug_mode_o
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: OUT


CommitId: 53ef2ec43c1c1eb00b771e17fc157f5bb1103ed5
Update lowrisc_ibex to lowRISC/ibex@d14312c
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_controller.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_controller.sv
@@ -119,6 +105,8 @@ module ibex_controller (
   logic stall;
   logic halt_if;
   logic halt_id;
+  logic illegal_dret;
+  logic illegal_insn;
   logic exc_req;
   logic exc_req_lsu;
   logic special_req;

ParseResult:
INS HdlIdDef@@illegal_dret to objs
HdlIdDef: illegal_dret
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

INS HdlIdDef@@illegal_insn to objs
HdlIdDef: illegal_insn
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

UPD HdlStmAssign@@ to 
    INS HdlOp@@OR to 
    UPD HdlOp@@OR to OR
        INS list@@ops to OR
        INS HdlValueId@@instr_fetch_err_i to ops


CommitId: 53ef2ec43c1c1eb00b771e17fc157f5bb1103ed5
Update lowrisc_ibex to lowRISC/ibex@d14312c
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_controller.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_controller.sv
@@ -134,8 +122,8 @@ module ibex_controller (
   // glitches
   always_ff @(negedge clk_i) begin
     // print warning in case of decoding errors
-    if ((ctrl_fsm_cs == DECODE) && instr_valid_i && illegal_insn_i) begin
-      $display("%t: Illegal instruction (core %0d) at PC 0x%h: 0x%h", $time, ibex_core.core_id_i,
+    if ((ctrl_fsm_cs == DECODE) && instr_valid_i && illegal_insn) begin
+      $display("%t: Illegal instruction (hart %0x) at PC 0x%h: 0x%h", $time, ibex_core.hart_id_i,
                ibex_id_stage.pc_id_i, ibex_id_stage.instr_rdata_i);
     end
   end

ParseResult:
UPD HdlStmIf@@ to 
    UPD HdlOp@@AND_LOG to AND_LOG
        UPD HdlValueId@@illegal_insn_i to illegal_insn
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@CALL to CALL
            UPD HdlOp@@DOT to DOT
                UPD HdlValueId@@core_id_i to hart_id_i


CommitId: 53ef2ec43c1c1eb00b771e17fc157f5bb1103ed5
Update lowrisc_ibex to lowRISC/ibex@d14312c
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_controller.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_controller.sv
@@ -149,14 +137,19 @@ module ibex_controller (
   assign load_err_d  = load_err_i;
   assign store_err_d = store_err_i;
 
+  // "Executing DRET outside of Debug Mode causes an illegal instruction exception."
+  // [Debug Spec v0.13.2, p.41]
+  assign illegal_dret = dret_insn_i & ~debug_mode_q;
+  assign illegal_insn = illegal_insn_i | illegal_dret;
+
   // exception requests
-  assign exc_req     = ecall_insn_i | ebrk_insn_i | illegal_insn_i;
+  assign exc_req     = ecall_insn_i | ebrk_insn_i | illegal_insn | instr_fetch_err_i;
 
   // LSU exception requests
   assign exc_req_lsu = store_err_i | load_err_i;
 
   // special requests: special instructions, pipeline flushes, exceptions...
-  assign special_req = mret_insn_i | dret_insn_i | wfi_insn_i | csr_status_i |
+  assign special_req = mret_insn_i | dret_insn_i | wfi_insn_i | csr_pipe_flush_i |
       exc_req | exc_req_lsu;
 
   ////////////////

ParseResult:
INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: AND
        list: ops
            HdlValueId: dret_insn_i
            HdlOp: NEG
                list: ops
                    HdlValueId: debug_mode_q
    HdlValueId: illegal_dret

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: OR
        list: ops
            HdlValueId: illegal_insn_i
            HdlValueId: illegal_dret
    HdlValueId: illegal_insn

UPD HdlStmAssign@@ to 
    MOV HdlOp@@OR to 
    HdlOp: OR
        list: ops
            HdlOp: OR
                list: ops
                    HdlValueId: ecall_insn_i
                    HdlValueId: ebrk_insn_i
            HdlValueId: illegal_insn_i
    UPD HdlOp@@OR to OR
        UPD HdlValueId@@illegal_insn_i to illegal_insn

UPD HdlStmAssign@@ to 
    UPD HdlOp@@OR to OR
        UPD HdlOp@@OR to OR
            UPD HdlOp@@OR to OR
                UPD HdlValueId@@csr_status_i to csr_pipe_flush_i


CommitId: 53ef2ec43c1c1eb00b771e17fc157f5bb1103ed5
Update lowrisc_ibex to lowRISC/ibex@d14312c
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_controller.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_controller.sv
@@ -453,7 +446,11 @@ module ibex_controller (
           csr_save_cause_o = 1'b1;
 
           // set exception registers, priorities according to Table 3.7 of Privileged Spec v1.11
-          if (illegal_insn_i) begin
+          if (instr_fetch_err_i) begin
+            exc_cause_o = EXC_CAUSE_INSTR_ACCESS_FAULT;
+            csr_mtval_o = pc_id_i;
+
+          end else if (illegal_insn) begin
             exc_cause_o = EXC_CAUSE_ILLEGAL_INSN;
             csr_mtval_o = instr_is_compressed_i ? {16'b0, instr_compressed_i} : instr_i;
 

ParseResult:
UPD HdlStmIf@@ to 
    INS HdlValueId@@instr_fetch_err_i to 
    INS HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: exc_cause_o
                    HdlValueId: EXC_CAUSE_INSTR_ACCESS_FAULT
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: csr_mtval_o
                    HdlValueId: pc_id_i
    INS tuple@@ to elifs

UPD HdlStmIf@@ to 
    UPD HdlValueId@@illegal_insn_i to illegal_insn
    MOV HdlValueId@@illegal_insn_i to 
    HdlValueId: illegal_insn_i
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: exc_cause_o
                    HdlValueId: EXC_CAUSE_ILLEGAL_INSN
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: csr_mtval_o
                    HdlOp: TERNARY
                        list: ops
                            HdlValueId: instr_is_compressed_i
                            HdlOp: CONCAT
                                list: ops
                                    HdlValueInt: 0
                                    HdlValueId: instr_compressed_i
                            HdlValueId: instr_i


CommitId: 53ef2ec43c1c1eb00b771e17fc157f5bb1103ed5
Update lowrisc_ibex to lowRISC/ibex@d14312c
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_controller.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_controller.sv
@@ -506,7 +503,7 @@ module ibex_controller (
           end
 
         end else begin
-          // special instructions
+          // special instructions and pipeline flushes
           if (mret_insn_i) begin
             pc_mux_o              = PC_ERET;
             pc_set_o              = 1'b1;

ParseResult:
UPD HdlStmIf@@ to 
    INS tuple@@ to elifs
    tuple
        HdlOp: AND_LOG
            list: ops
                HdlValueId: csr_pipe_flush_i
                HdlValueId: handle_irq
        HdlStmBlock: SEQ
            list: body
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: ctrl_fsm_ns
                        HdlValueId: IRQ_TAKEN

UPD HdlStmIf@@ to 
    UPD HdlValueId@@illegal_insn_i to illegal_insn
    MOV HdlValueId@@illegal_insn_i to 
    HdlValueId: illegal_insn_i
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: exc_cause_o
                    HdlValueId: EXC_CAUSE_ILLEGAL_INSN
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: csr_mtval_o
                    HdlOp: TERNARY
                        list: ops
                            HdlValueId: instr_is_compressed_i
                            HdlOp: CONCAT
                                list: ops
                                    HdlValueInt: 0
                                    HdlValueId: instr_compressed_i
                            HdlValueId: instr_i


CommitId: 53ef2ec43c1c1eb00b771e17fc157f5bb1103ed5
Update lowrisc_ibex to lowRISC/ibex@d14312c
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_controller.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_controller.sv
@@ -538,6 +538,9 @@ module ibex_controller (
     endcase
   end
 
+  // signal to CSR when in debug mode
+  assign debug_mode_o = debug_mode_q;
+
   ///////////////////
   // Stall control //
   ///////////////////
ParseResult:
INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlValueId: debug_mode_q
    HdlValueId: debug_mode_o


CommitId: 853015f3cad0517aa516d097a2689bc998091716
[prim_ram_1p_scr] Fix sequencing bug in scrambling logic
--- a/hw/ip/prim/rtl/prim_ram_1p_scr.sv
+++ b/hw/ip/prim/rtl/prim_ram_1p_scr.sv
@@ -10,9 +10,9 @@
 //
 // The currently implemented architecture uses a reduced-round PRINCE cipher primitive in CTR mode
 // in order to (weakly) scramble the data written to the memory macro. Plain CTR mode does not
-// diffuse the data since the keystream is just XOR'ed onto it, hence we also we perform Byte-wise
+// diffuse the data since the keystream is just XOR'ed onto it, hence we also we perform byte-wise
 // diffusion using a (shallow) substitution/permutation network layers in order to provide a limited
-// avalanche effect within a Byte.
+// avalanche effect within a byte.
 //
 // In order to break the linear addressing space, the address is passed through a bijective
 // scrambling function constructed using a (shallow) substitution/permutation and a nonce. Due to

ParseResult:
UPD HdlStmAssign@@ to 
    UPD HdlOp@@TERNARY to TERNARY
        UPD HdlValueId@@collision_q to addr_collision_q

UPD HdlStmAssign@@ to 
    UPD HdlValueId@@collision_q to addr_collision_q

DEL HdlStmAssign@@ from body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: write_scr_pending_q


CommitId: 853015f3cad0517aa516d097a2689bc998091716
[prim_ram_1p_scr] Fix sequencing bug in scrambling logic
--- a/hw/ip/prim/rtl/prim_ram_1p_scr.sv
+++ b/hw/ip/prim/rtl/prim_ram_1p_scr.sv
@@ -25,7 +25,7 @@
 
 module prim_ram_1p_scr #(
   parameter  int Depth                = 512, // Needs to be a power of 2 if NumAddrScrRounds > 0.
-  parameter  int Width                = 256, // Needs to be Byte aligned for parity
+  parameter  int Width                = 256, // Needs to be byte aligned for parity
   parameter  int DataBitsPerMask      = 8,   // Currently only 8 is supported
   parameter  int CfgWidth             = 8,   // WTC, RTC, etc
 

ParseResult:
INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueId: write_en_d
    HdlValueId: write_en_q

INS HdlStmIf@@ to body

UPD HdlStmAssign@@ to 
    UPD HdlValueId@@write_scr_pending_q to write_pending_q

UPD HdlStmAssign@@ to 
    UPD HdlValueId@@write_pending_d to addr_collision_d
    UPD HdlValueId@@write_pending_q to addr_collision_q

UPD HdlStmIf@@ to 
    INS HdlValueId@@read_en to 
    INS HdlStmBlock@@SEQ to 
    INS list@@elifs to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmIf@@ to 
    UPD HdlValueId@@write_en to write_en_d

MOV HdlStmAssign@@ to body
HdlStmAssign
    HdlValueId: raddr_d
    HdlValueId: raddr_q

UPD HdlStmAssign@@ to 
    UPD HdlValueId@@raddr_d to addr_i

DEL HdlStmAssign@@ from body
HdlStmAssign
    HdlValueId: collision_d
    HdlValueId: collision_q


CommitId: 853015f3cad0517aa516d097a2689bc998091716
[prim_ram_1p_scr] Fix sequencing bug in scrambling logic
--- a/hw/ip/prim/rtl/prim_ram_1p_scr.sv
+++ b/hw/ip/prim/rtl/prim_ram_1p_scr.sv
@@ -33,7 +33,7 @@ module prim_ram_1p_scr #(
   // amount of cipher rounds low. PRINCE has 5 half rounds in its original form, which corresponds
   // to 2*5 + 1 effective rounds. Setting this to 2 halves this to approximately 5 effective rounds.
   parameter  int NumPrinceRoundsHalf  = 2,   // Number of PRINCE half rounds, can be [1..5]
-  // Number of extra intra-Byte diffusion rounds. Setting this to 0 disables intra-Byte diffusion.
+  // Number of extra intra-byte diffusion rounds. Setting this to 0 disables intra-byte diffusion.
   parameter  int NumByteScrRounds     = 2,
   // Number of address scrambling rounds. Setting this to 0 disables address scrambling.
   parameter  int NumAddrScrRounds     = 2,

ParseResult:
UPD HdlStmIf@@ to 
    UPD HdlValueId@@write_en to write_en_d

UPD HdlStmIf@@ to 
    UPD HdlValueId@@write_scr_pending_d to rw_collision


CommitId: 853015f3cad0517aa516d097a2689bc998091716
[prim_ram_1p_scr] Fix sequencing bug in scrambling logic
--- a/hw/ip/prim/rtl/prim_ram_1p_scr.sv
+++ b/hw/ip/prim/rtl/prim_ram_1p_scr.sv
@@ -65,7 +65,7 @@ module prim_ram_1p_scr #(
   input                             write_i,
   input        [AddrWidth-1:0]      addr_i,
   input        [Width-1:0]          wdata_i,
-  input        [Width-1:0]          wmask_i,  // Needs to be Byte-aligned for parity
+  input        [Width-1:0]          wmask_i,  // Needs to be byte-aligned for parity
   output logic [Width-1:0]          rdata_o,
   output logic                      rvalid_o, // Read response (rdata_o) is valid
   output logic [1:0]                rerror_o, // Bit1: Uncorrectable, Bit0: Correctable

ParseResult:
UPD HdlIdDef@@write_en to write_en_d


CommitId: 2df95612856b8f39db2cea5a2989720d46424982
[flash_ctrl] Minor fixes
--- a/hw/ip/flash_ctrl/rtl/flash_ctrl_lcmgr.sv
+++ b/hw/ip/flash_ctrl/rtl/flash_ctrl_lcmgr.sv
@@ -12,7 +12,7 @@ module flash_ctrl_lcmgr import flash_ctrl_pkg::*; (
   // interface to ctrl arb control ports
   output flash_ctrl_reg_pkg::flash_ctrl_reg2hw_control_reg_t ctrl_o,
   output logic req_o,
-  output logic [BusAddrW-1:0] addr_o,
+  output logic [top_pkg::TL_AW-1:0] addr_o,
   input done_i,
   input err_i,
 

ParseResult:
UPD HdlIdDef@@addr_o to addr_o
    UPD HdlOp@@PARAMETRIZATION to PARAMETRIZATION
        UPD HdlOp@@DOWNTO to DOWNTO
            UPD HdlOp@@SUB to SUB
                INS HdlOp@@DOUBLE_COLON to ops
                UPD HdlOp@@DOUBLE_COLON to DOUBLE_COLON
                    INS list@@ops to DOUBLE_COLON
                    INS HdlValueId@@top_pkg to ops

UPD HdlIdDef@@addr_o to addr_o
    UPD HdlOp@@PARAMETRIZATION to PARAMETRIZATION
        UPD HdlOp@@DOWNTO to DOWNTO
            UPD HdlOp@@SUB to SUB
                UPD HdlValueId@@BusAddrW to TL_AW
                MOV HdlValueId@@BusAddrW to ops
                HdlValueId: BusAddrW


CommitId: 2df95612856b8f39db2cea5a2989720d46424982
[flash_ctrl] Minor fixes
--- a/hw/ip/flash_ctrl/rtl/flash_ctrl_lcmgr.sv
+++ b/hw/ip/flash_ctrl/rtl/flash_ctrl_lcmgr.sv
@@ -290,7 +290,8 @@ module flash_ctrl_lcmgr import flash_ctrl_pkg::*; (
   assign ctrl_o.erase_sel.q = erase_type;
   assign ctrl_o.partition_sel.q = part_sel;
   assign ctrl_o.num = num_words;
-  assign addr_o = addr;
+  // address is consistent with software width format (full bus)
+  assign addr_o = top_pkg::TL_AW'({addr, {BusByteWidth{1'b0}}});
   assign init_busy_o = seed_phase;
   assign req_o = seed_phase | rma_phase;
   assign rready_o = 1'b1;
ParseResult:
UPD HdlStmAssign@@ to 
    INS HdlOp@@CALL to 
    UPD HdlOp@@CALL to CALL
        INS list@@ops to CALL
        INS HdlOp@@DOUBLE_COLON to ops
        HdlOp: DOUBLE_COLON
            list: ops
                HdlValueId: top_pkg
                HdlValueId: TL_AW
        INS HdlOp@@CONCAT to ops
        UPD HdlOp@@CONCAT to CONCAT
            INS list@@ops to CONCAT
            INS HdlOp@@REPL_CONCAT to ops
            HdlOp: REPL_CONCAT
                list: ops
                    HdlValueId: BusByteWidth
                    HdlValueInt: 0

UPD HdlStmAssign@@ to 
    MOV HdlValueId@@addr to 
    HdlValueId: addr


CommitId: 19044edfb0b9485031557705595840bea41fb33d
[prim_secded] Use _i/_o suffix for port names
--- a/hw/ip/prim/rtl/prim_secded_hamming_22_16_enc.sv
+++ b/hw/ip/prim/rtl/prim_secded_hamming_22_16_enc.sv
@@ -5,18 +5,18 @@
 // SECDED encoder generated by util/design/secded_gen.py
 
 module prim_secded_hamming_22_16_enc (
-  input        [15:0] in,
-  output logic [21:0] out
+  input        [15:0] data_i,
+  output logic [21:0] data_o
 );
 
   always_comb begin : p_encode
-    out = 22'(in);
-    out[16] = ^(out & 22'h00AD5B);
-    out[17] = ^(out & 22'h00366D);
-    out[18] = ^(out & 22'h00C78E);
-    out[19] = ^(out & 22'h0007F0);
-    out[20] = ^(out & 22'h00F800);
-    out[21] = ^(out & 22'h1FFFFF);
+    data_o = 22'(data_i);
+    data_o[16] = ^(data_o & 22'h00AD5B);
+    data_o[17] = ^(data_o & 22'h00366D);
+    data_o[18] = ^(data_o & 22'h00C78E);
+    data_o[19] = ^(data_o & 22'h0007F0);
+    data_o[20] = ^(data_o & 22'h00F800);
+    data_o[21] = ^(data_o & 22'h1FFFFF);
   end
 
 endmodule : prim_secded_hamming_22_16_enc
ParseResult:
UPD HdlIdDef@@in to data_i

UPD HdlIdDef@@out to data_o

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@out to data_o
            UPD HdlOp@@CALL to CALL
                UPD HdlValueId@@in to data_i
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@INDEX to INDEX
                UPD HdlValueId@@out to data_o
            UPD HdlOp@@XOR_UNARY to XOR_UNARY
                UPD HdlOp@@AND to AND
                    UPD HdlValueId@@out to data_o
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@INDEX to INDEX
                UPD HdlValueId@@out to data_o
            UPD HdlOp@@XOR_UNARY to XOR_UNARY
                UPD HdlOp@@AND to AND
                    UPD HdlValueId@@out to data_o
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@INDEX to INDEX
                UPD HdlValueId@@out to data_o
            UPD HdlOp@@XOR_UNARY to XOR_UNARY
                UPD HdlOp@@AND to AND
                    UPD HdlValueId@@out to data_o
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@INDEX to INDEX
                UPD HdlValueId@@out to data_o
            UPD HdlOp@@XOR_UNARY to XOR_UNARY
                UPD HdlOp@@AND to AND
                    UPD HdlValueId@@out to data_o
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@INDEX to INDEX
                UPD HdlValueId@@out to data_o
            UPD HdlOp@@XOR_UNARY to XOR_UNARY
                UPD HdlOp@@AND to AND
                    UPD HdlValueId@@out to data_o
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@INDEX to INDEX
                UPD HdlValueId@@out to data_o
            UPD HdlOp@@XOR_UNARY to XOR_UNARY
                UPD HdlOp@@AND to AND
                    UPD HdlValueId@@out to data_o


CommitId: 00b633765e095e8989cb02d7f330258ea36b84b2
[padctrl] Append _pad postfix to pad signals
--- a/hw/ip/padctrl/rtl/padring.sv
+++ b/hw/ip/padctrl/rtl/padring.sv
@@ -10,14 +10,14 @@ module padring #(
   parameter Impl = "generic" // this determines the pad implementation
 ) (
   // pad input
-  input wire                                   clk_i,
-  input wire                                   rst_ni,
+  input wire                                   clk_pad_i,
+  input wire                                   rst_pad_ni,
   // to clocking/reset infrastructure
   output logic                                 clk_o,
   output logic                                 rst_no,
   // pads
-  inout wire   [padctrl_reg_pkg::NMioPads-1:0] mio_io,
-  inout wire   [padctrl_reg_pkg::NDioPads-1:0] dio_io,
+  inout wire   [padctrl_reg_pkg::NMioPads-1:0] mio_pad_io,
+  inout wire   [padctrl_reg_pkg::NDioPads-1:0] dio_pad_io,
   // muxed IO signals coming from pinmux
   input        [padctrl_reg_pkg::NMioPads-1:0] mio_out_i,
   input        [padctrl_reg_pkg::NMioPads-1:0] mio_oe_i,

ParseResult:
UPD HdlIdDef@@clk_i to clk_pad_i

UPD HdlIdDef@@rst_ni to rst_pad_ni

UPD HdlIdDef@@mio_io to mio_pad_io

UPD HdlIdDef@@dio_io to dio_pad_io


CommitId: 00b633765e095e8989cb02d7f330258ea36b84b2
[padctrl] Append _pad postfix to pad signals
--- a/hw/ip/padctrl/rtl/padring.sv
+++ b/hw/ip/padctrl/rtl/padring.sv
@@ -43,8 +43,8 @@ module padring #(
   // connection of input wire to an inout pad causes lint problems
   // (even though oe is hardwired to 0).
   wire clk, rst_n;
-  assign clk   = clk_i;
-  assign rst_n = rst_ni;
+  assign clk   = clk_pad_i;
+  assign rst_n = rst_pad_ni;
 
   prim_pad_wrapper #(
     .Impl(Impl),

ParseResult:
UPD HdlStmAssign@@ to 
    UPD HdlValueId@@clk_i to clk_pad_i

UPD HdlStmAssign@@ to 
    UPD HdlValueId@@rst_ni to rst_pad_ni


CommitId: 6c2a57c7517547a1a481cd1f030ef0c3dee95266
[aes/rtl] Fix lint errors
--- a/hw/ip/aes/rtl/aes_control.sv
+++ b/hw/ip/aes/rtl/aes_control.sv
@@ -85,6 +85,7 @@ module aes_control #(
 
   logic [3:0] round_d, round_q;
   logic [3:0] num_rounds_d, num_rounds_q;
+  logic [3:0] num_rounds_regular;
   logic       dec_key_gen_d, dec_key_gen_q;
 
   logic       start, finish;

ParseResult:
INS HdlIdDef@@num_rounds_regular to objs
HdlIdDef: num_rounds_regular
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 3
                    HdlValueInt: 0
    HdlDirection: INTERNAL


CommitId: 6c2a57c7517547a1a481cd1f030ef0c3dee95266
[aes/rtl] Fix lint errors
--- a/hw/ip/aes/rtl/aes_control.sv
+++ b/hw/ip/aes/rtl/aes_control.sv
@@ -287,7 +288,7 @@ module aes_control #(
         round_d = round_q+1;
 
         // Are we doing the last regular round?
-        if (round_q == num_rounds_q-2) begin
+        if (round_q == num_rounds_regular) begin
           if (dec_key_gen_q) begin
             // Write decryption key and finish
             key_dec_we_o  = 1'b1;

ParseResult:
UPD HdlStmIf@@ to 
    UPD HdlOp@@EQ to EQ
        MOV HdlOp@@SUB to ops
        HdlOp: SUB
            list: ops
                HdlValueId: num_rounds_q
                HdlValueInt: 2

UPD HdlStmIf@@ to 
    UPD HdlOp@@EQ to EQ
        INS HdlValueId@@num_rounds_regular to ops


CommitId: 6c2a57c7517547a1a481cd1f030ef0c3dee95266
[aes/rtl] Fix lint errors
--- a/hw/ip/aes/rtl/aes_control.sv
+++ b/hw/ip/aes/rtl/aes_control.sv
@@ -368,6 +369,9 @@ module aes_control #(
     end
   end
 
+  // Use separate signal for number of regular rounds
+  assign num_rounds_regular = num_rounds_q - 4'd2;
+
   // Detect new key, new input, output read
   // Edge detectors are cleared by the FSM
   assign key_init_new_d = dec_key_gen ? '0 : key_init_new_q | key_init_qe_i;
ParseResult:
INS HdlStmAssign@@ to objs

UPD HdlStmAssign@@ to 
    INS HdlValueId@@num_rounds_regular to 


CommitId: 86144f7033cb38171990fb9bd5f5f0f8f85f0c5d
[usbdev] Fix issues discovered with linter
--- a/hw/ip/usb_fs_nb_pe/rtl/usb_fs_nb_in_pe.sv
+++ b/hw/ip/usb_fs_nb_pe/rtl/usb_fs_nb_in_pe.sv
@@ -130,7 +130,7 @@ module usb_fs_nb_in_pe #(
     rx_pkt_valid_i &&
     rx_pid == UsbPidAck;
 
-  assign more_data_to_send = in_ep_has_data_i && ~in_ep_data_done_i[in_ep_index];  // lint: in_ep_index range was checked
+  assign more_data_to_send = in_ep_has_data_i[in_ep_index] && ~in_ep_data_done_i[in_ep_index];  // lint: in_ep_index range was checked
 
   assign tx_data_avail_o = (in_xfr_state == StSendData) && more_data_to_send;
 
ParseResult:
UPD HdlStmAssign@@ to 
    UPD HdlOp@@AND_LOG to AND_LOG
        INS HdlOp@@INDEX to ops
        UPD HdlOp@@INDEX to INDEX
            INS list@@ops to INDEX
            INS HdlValueId@@in_ep_index to ops

UPD HdlStmAssign@@ to 
    UPD HdlOp@@AND_LOG to AND_LOG
        MOV HdlValueId@@in_ep_has_data_i to ops
        HdlValueId: in_ep_has_data_i


CommitId: 8317b037bc142ac95e4bf3ecfdfafffb7f64ef8c
Update lowrisc_ibex to lowRISC/ibex@25cd6600
--- a/hw/vendor/lowrisc_ibex/examples/simple_system/rtl/ibex_simple_system.sv
+++ b/hw/vendor/lowrisc_ibex/examples/simple_system/rtl/ibex_simple_system.sv
@@ -282,7 +282,7 @@ module ibex_simple_system (
   export "DPI-C" function mhpmcounter_get;
 
   function automatic longint unsigned mhpmcounter_get(int index);
-    return u_core.u_ibex_core.cs_registers_i.mhpmcounter[index];
+    return u_top.u_ibex_top.u_ibex_core.cs_registers_i.mhpmcounter[index];
   endfunction
 
 endmodule
ParseResult:
UPD HdlStmReturn@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': [{'__class__': 'HdlOp',           'fn': 'DOT',           'ops': [{'__class__': 'HdlOp',                    'fn': 'DOT',                    'ops': [{'__class__': 'HdlOp',                             'fn': 'DOT',                             'ops': ['u_core', 'u_ibex_core']},                            'cs_registers_i']},                   'mhpmcounter']},          'index']}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': [{'__class__': 'HdlOp',           'fn': 'DOT',           'ops': [{'__class__': 'HdlOp',                    'fn': 'DOT',                    'ops': [{'__class__': 'HdlOp',                             'fn': 'DOT',                             'ops': [{'__class__': 'HdlOp',                                      'fn': 'DOT',                                      'ops': ['u_top', 'u_ibex_top']},                                     'u_ibex_core']},                            'cs_registers_i']},                   'mhpmcounter']},          'index']} 

UPD HdlStmReturn@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': [{'__class__': 'HdlOp',           'fn': 'DOT',           'ops': [{'__class__': 'HdlOp',                    'fn': 'DOT',                    'ops': [{'__class__': 'HdlOp',                             'fn': 'DOT',                             'ops': [{'__class__': 'HdlOp',                                      'fn': 'DOT',                                      'ops': ['u_top', 'u_ibex_top']},                                     'u_ibex_core']},                            'cs_registers_i']},                   'mhpmcounter']},          'index']}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': [{'__class__': 'HdlOp',           'fn': 'DOT',           'ops': [{'__class__': 'HdlOp',                    'fn': 'DOT',                    'ops': [{'__class__': 'HdlOp',                             'fn': 'DOT',                             'ops': [{'__class__': 'HdlOp',                                      'fn': 'DOT',                                      'ops': ['u_top', 'u_ibex_top']},                                     'u_ibex_core']},                            'cs_registers_i']},                   'mhpmcounter']},          'index']} 
    UPD HdlOp@@INDEX to INDEX
        UPD HdlOp@@DOT to DOT
            UPD HdlOp@@DOT to DOT
                UPD HdlOp@@DOT to DOT
                    INS HdlOp@@DOT to ops
                    UPD HdlOp@@DOT to DOT
                        INS list@@ops to DOT
                        INS HdlValueId@@u_ibex_top to ops

UPD HdlStmReturn@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': [{'__class__': 'HdlOp',           'fn': 'DOT',           'ops': [{'__class__': 'HdlOp',                    'fn': 'DOT',                    'ops': [{'__class__': 'HdlOp',                             'fn': 'DOT',                             'ops': ['u_core', 'u_ibex_core']},                            'cs_registers_i']},                   'mhpmcounter']},          'index']}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': [{'__class__': 'HdlOp',           'fn': 'DOT',           'ops': [{'__class__': 'HdlOp',                    'fn': 'DOT',                    'ops': [{'__class__': 'HdlOp',                             'fn': 'DOT',                             'ops': ['u_core', 'u_ibex_core']},                            'cs_registers_i']},                   'mhpmcounter']},          'index']} 
    UPD HdlOp@@INDEX to INDEX
        UPD HdlOp@@DOT to DOT
            UPD HdlOp@@DOT to DOT
                UPD HdlOp@@DOT to DOT
                    UPD HdlValueId@@u_core to u_top
                    MOV HdlValueId@@u_core to ops
                    HdlValueId: u_core


CommitId: 488707873168bd72fba44d8de8cd4df45d70e106
[usb] Fix lint errors
--- a/hw/ip/usbdev/rtl/usbdev.sv
+++ b/hw/ip/usbdev/rtl/usbdev.sv
@@ -221,7 +221,7 @@ module usbdev (
   assign event_pkt_received = rx_fifo_rvalid;
 
   // The rxfifo register is hrw, but we just need the read enables.
-  logic [3:0] unused_rxfifo_q;
+  logic [16:0] unused_rxfifo_q;
   assign unused_rxfifo_q = {reg2hw.rxfifo.ep.q, reg2hw.rxfifo.setup.q,
                             reg2hw.rxfifo.size.q, reg2hw.rxfifo.buffer.q};
 
ParseResult:
INS HdlIdDef@@unused_rxfifo_q to objs
HdlIdDef: unused_rxfifo_q
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 16
                    HdlValueInt: 0
    HdlDirection: INTERNAL

DEL HdlIdDef@@unused_rxfifo_q from objs
HdlIdDef: unused_rxfifo_q
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 3
                    HdlValueInt: 0
    HdlDirection: INTERNAL


CommitId: 27b0a64a31682a656c93e99f7f2ab305d3e97dda
[dv] Hard code various dv connections until full hook-up
--- a/hw/dv/sv/sim_sram/tlul_sink.sv
+++ b/hw/dv/sv/sim_sram/tlul_sink.sv
@@ -61,8 +61,8 @@ module tlul_sink import tlul_pkg::*; (
   // Write mask should be all 1s.
   assign wr_mask_err = wr_req ? ~(&tl_i.a_mask) : 1'b0;
 
-  // Don't allow unsupported features.
-  assign malformed_meta_err = (tl_i.a_user.parity_en == 1'b1);
+  // Don't allow unsupported values.
+  assign malformed_meta_err = tl_a_user_chk(tl_i.a_user);
 
   // tl_err : separate checker
   tlul_err u_err (
ParseResult:
UPD HdlStmAssign@@ to 
    UPD HdlOp@@EQ to EQ
        UPD HdlOp@@DOT to CALL
        MOV HdlOp@@DOT to ops
        HdlOp: DOT
            list: ops
                HdlOp: DOT
                    list: ops
                        HdlValueId: tl_i
                        HdlValueId: a_user
                HdlValueId: parity_en
        UPD HdlOp@@DOT to DOT
            DEL HdlValueId@@parity_en from ops
        DEL HdlValueInt@@1 from ops
        DEL list@@ops from EQ
    DEL HdlOp@@EQ from 

UPD HdlStmAssign@@ to 
    UPD HdlOp@@CALL to CALL
        INS HdlValueId@@tl_a_user_chk to ops


CommitId: aace53c2dc257477eacada57382e7422dfda12da
[entropy_src/rtl] fix for dv sanity test
--- a/hw/ip/entropy_src/rtl/entropy_src_main_sm.sv
+++ b/hw/ip/entropy_src/rtl/entropy_src_main_sm.sv
@@ -49,47 +71,47 @@ module entropy_src_main_sm (
     main_stage_pop_o = 1'b0;
     bypass_stage_pop_o = 1'b0;
     unique case (state_q)
-      IDLE: begin
+      Idle: begin
         if (enable_i) begin
-          state_d = HTDP;
+          state_d = HealthTestDone;
         end
       end
-      HTDP: begin
+      HealthTestDone: begin
         if (ht_done_pulse_i) begin
           if (ht_fail_pulse_i) begin
-            state_d = IDLE;
+            state_d = Idle;
           end else begin
-            state_d = PNMT;
+            state_d = PostHealthTestChk;
           end
         end
       end
-      PNMT: begin
+      PostHealthTestChk: begin
         rst_alert_cntr_o = 1'b1;
         if (postht_not_empty_i) begin
-          state_d = MODE;
+          state_d = FlowModeChk;
         end
       end
-      MODE: begin
+      FlowModeChk: begin
         if (bypass_mode_i) begin
-          state_d = BYPS;
+          state_d = BypassMode;
         end else begin
-          state_d = NORM;
+          state_d = NormalMode;
         end
       end
-      BYPS: begin
+      BypassMode: begin
         if (bypass_stage_rdy_i) begin
           rst_bypass_mode_o = 1'b1;
           bypass_stage_pop_o = 1'b1;
-          state_d = IDLE;
+          state_d = Idle;
         end
       end
-      NORM: begin
+      NormalMode: begin
         if (main_stage_rdy_i) begin
           main_stage_pop_o = 1'b1;
-          state_d = IDLE;
+          state_d = Idle;
         end
       end
-      default: state_d = IDLE;
+      default: state_d = Idle;
     endcase
   end
 
ParseResult:
UPD HdlStmCase@@state_q to state_q
    UPD HdlValueId@@IDLE to Idle
    UPD HdlValueId@@HTDP to HealthTestDone
    UPD HdlValueId@@PNMT to PostHealthTestChk
    UPD HdlValueId@@MODE to FlowModeChk
    UPD HdlValueId@@BYPS to BypassMode
    UPD HdlValueId@@NORM to NormalMode
    UPD HdlOp@@ASSIGN to ASSIGN
        UPD HdlValueId@@IDLE to Idle

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@HTDP to HealthTestDone

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@MODE to FlowModeChk

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@BYPS to BypassMode
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@NORM to NormalMode

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@IDLE to Idle

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@IDLE to Idle

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@IDLE to Idle
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@PNMT to PostHealthTestChk


CommitId: 53ef2ec43c1c1eb00b771e17fc157f5bb1103ed5
Update lowrisc_ibex to lowRISC/ibex@d14312c
--- a/hw/ip/rv_core_ibex/rtl/rv_core_ibex.sv
+++ b/hw/ip/rv_core_ibex/rtl/rv_core_ibex.sv
@@ -22,9 +22,7 @@ module rv_core_ibex #(
 
   input  logic        test_en_i,     // enable all clock gates for testing
 
-  // Core ID, Cluster ID and boot address are considered more or less static
-  input  logic [ 3:0] core_id_i,
-  input  logic [ 5:0] cluster_id_i,
+  input  logic [31:0] hart_id_i,
   input  logic [31:0] boot_addr_i,
 
   // Instruction memory interface

ParseResult:
UPD HdlIdDef@@core_id_i to hart_id_i

UPD HdlIdDef@@core_id_i to core_id_i
    UPD HdlOp@@PARAMETRIZATION to PARAMETRIZATION
        UPD HdlOp@@DOWNTO to DOWNTO
            UPD HdlValueInt@@3 to 31

DEL HdlIdDef@@cluster_id_i from ports
HdlIdDef: cluster_id_i
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 5
                    HdlValueInt: 0
    HdlDirection: IN


CommitId: d29e918f6bf1d8a395e9357f2cdae70e68f41a22
[i2c, rtl] Various FSM fixes and improvements
--- a/hw/ip/i2c/rtl/i2c_fsm.sv
+++ b/hw/ip/i2c/rtl/i2c_fsm.sv
@@ -89,10 +89,12 @@ module i2c_fsm (
       unique case (tcount_sel)
         tSetupStart : tcount_d = t_r_i + tsu_sta_i;
         tHoldStart  : tcount_d = t_f_i + thd_sta_i;
-        tClockLow   : tcount_d = t_f_i + tlow_i - t_r_i - tsu_dat_i;
+        tClockStart : tcount_d = 20'(thd_dat_i);
+        tClockLow   : tcount_d = tlow_i - t_r_i - tsu_dat_i - thd_dat_i;
         tSetupBit   : tcount_d = t_r_i + tsu_dat_i;
-        tClockPulse : tcount_d = t_r_i + thigh_i;
+        tClockPulse : tcount_d = t_r_i + thigh_i + t_f_i;
         tHoldBit    : tcount_d = t_f_i + thd_dat_i;
+        tClockStop  : tcount_d = t_f_i + tlow_i - thd_dat_i;
         tSetupStop  : tcount_d = t_r_i + tsu_sto_i;
         tHoldStop   : tcount_d = t_r_i + t_buf_i - tsu_sta_i;
         tNoDelay    : tcount_d = 20'b1;

ParseResult:
UPD HdlStmCase@@tcount_sel to tcount_sel
    MOV tuple@@ to cases
    tuple
        HdlValueId: tClockLow
        HdlOp: ASSIGN
            list: ops
                HdlValueId: tcount_d
                HdlOp: SUB
                    list: ops
                        HdlOp: SUB
                            list: ops
                                HdlOp: ADD
                                    list: ops
                                        HdlValueId: t_f_i
                                        HdlValueId: tlow_i
                                HdlValueId: t_r_i
                        HdlValueId: tsu_dat_i
    MOV HdlOp@@ASSIGN to 
    HdlOp: ASSIGN
        list: ops
            HdlValueId: tcount_d
            HdlOp: SUB
                list: ops
                    HdlOp: SUB
                        list: ops
                            HdlOp: ADD
                                list: ops
                                    HdlValueId: t_f_i
                                    HdlValueId: tlow_i
                            HdlValueId: t_r_i
                    HdlValueId: tsu_dat_i
    UPD HdlValueId@@tClockLow to tClockStop
    UPD HdlOp@@ASSIGN to ASSIGN
        UPD HdlOp@@SUB to ASSIGN
        MOV HdlOp@@SUB to ops
        HdlOp: SUB
            list: ops
                HdlOp: SUB
                    list: ops
                        HdlOp: ADD
                            list: ops
                                HdlValueId: t_f_i
                                HdlValueId: tlow_i
                        HdlValueId: t_r_i
                HdlValueId: tsu_dat_i
        MOV HdlValueId@@tcount_d to ops
        HdlValueId: tcount_d
        UPD HdlOp@@SUB to SUB
            UPD HdlValueId@@tsu_dat_i to thd_dat_i
            MOV HdlValueId@@tsu_dat_i to ops
            HdlValueId: tsu_dat_i
            UPD HdlOp@@SUB to SUB
                UPD HdlValueId@@t_r_i to thd_dat_i
    UPD HdlOp@@ASSIGN to ASSIGN
        MOV HdlValueId@@tcount_d to ops
        HdlValueId: tcount_d
    UPD HdlOp@@ASSIGN to ADD
    MOV HdlOp@@ASSIGN to 
    HdlOp: ASSIGN
        list: ops
            HdlValueId: tcount_d
            HdlOp: ADD
                list: ops
                    HdlValueId: t_r_i
                    HdlValueId: thigh_i

UPD HdlStmCase@@tcount_sel to tcount_sel
    INS tuple@@ to cases
    tuple
        HdlValueId: tClockStart
        HdlOp: ASSIGN
            list: ops
                HdlValueId: tcount_d
                HdlOp: CALL
                    list: ops
                        HdlValueInt: 20
                        HdlValueId: thd_dat_i
    INS tuple@@ to cases
    INS HdlValueId@@tClockLow to 
    INS HdlOp@@ASSIGN to 
    UPD HdlOp@@ASSIGN to ASSIGN
        INS list@@ops to ASSIGN
        UPD HdlOp@@ADD to ADD
            INS HdlValueId@@t_f_i to ops
    UPD HdlOp@@ASSIGN to ASSIGN
        INS HdlValueId@@tcount_d to ops
        INS HdlOp@@SUB to ops
        UPD HdlOp@@SUB to SUB
            INS list@@ops to SUB
            INS HdlOp@@SUB to ops
            HdlOp: SUB
                list: ops
                    HdlOp: SUB
                        list: ops
                            HdlValueId: tlow_i
                            HdlValueId: t_r_i
                    HdlValueId: tsu_dat_i


CommitId: d29e918f6bf1d8a395e9357f2cdae70e68f41a22
[i2c, rtl] Various FSM fixes and improvements
--- a/hw/ip/i2c/rtl/i2c_fsm.sv
+++ b/hw/ip/i2c/rtl/i2c_fsm.sv
@@ -225,6 +227,12 @@ module i2c_fsm (
         sda_temp = 1'b0;
         scl_temp = 1'b1;
       end
+      // ClockStart: SCL is pulled low, SDA stays low
+      ClockStart : begin
+        host_idle_o = 1'b0;
+        sda_temp = 1'b0;
+        scl_temp = 1'b0;
+      end
       // ClockLow: SCL is pulled low, SDA stays low
       ClockLow : begin
         host_idle_o = 1'b0;

ParseResult:
UPD HdlStmCase@@state_q to state_q
    MOV tuple@@ to cases
    tuple
        HdlValueId: ReadClockLow
        HdlStmBlock: SEQ
            list: body
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: host_idle_o
                        HdlValueInt: 0
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: sda_temp
                        HdlValueInt: 0
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: scl_temp
                        HdlValueInt: 0
    UPD HdlValueId@@ReadClockLow to ClockStop

UPD HdlStmCase@@state_q to state_q
    INS tuple@@ to cases
    tuple
        HdlValueId: ClockStart
        HdlStmBlock: SEQ
            list: body
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: host_idle_o
                        HdlValueInt: 0
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: sda_temp
                        HdlValueInt: 0
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: scl_temp
                        HdlValueInt: 0
    INS tuple@@ to cases
    tuple
        HdlValueId: ReadClockLow
        HdlStmBlock: SEQ
            list: body
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: host_idle_o
                        HdlValueInt: 0
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: sda_temp
                        HdlValueInt: 1
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: scl_temp
                        HdlValueInt: 0


CommitId: d29e918f6bf1d8a395e9357f2cdae70e68f41a22
[i2c, rtl] Various FSM fixes and improvements
--- a/hw/ip/i2c/rtl/i2c_fsm.sv
+++ b/hw/ip/i2c/rtl/i2c_fsm.sv
@@ -287,10 +295,10 @@ module i2c_fsm (
         sda_temp = 1'b1;
         scl_temp = 1'b0;
       end
-      // ReadClockLow: SCL is pulled low, SDA stays low
+      // ReadClockLow: SCL is pulled low, SDA is released
       ReadClockLow : begin
         host_idle_o = 1'b0;
-        sda_temp = 1'b0;
+        sda_temp = 1'b1;
         scl_temp = 1'b0;
       end
       // ReadSetupBit: Read indexed bit off SDA, SCL stays low

ParseResult:
UPD HdlStmCase@@state_q to state_q
    MOV tuple@@ to cases
    tuple
        HdlValueId: ReadClockLow
        HdlStmBlock: SEQ
            list: body
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: host_idle_o
                        HdlValueInt: 0
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: sda_temp
                        HdlValueInt: 0
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: scl_temp
                        HdlValueInt: 0
    UPD HdlValueId@@ReadClockLow to ClockStop

UPD HdlStmCase@@state_q to state_q
    INS tuple@@ to cases
    tuple
        HdlValueId: ClockStart
        HdlStmBlock: SEQ
            list: body
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: host_idle_o
                        HdlValueInt: 0
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: sda_temp
                        HdlValueInt: 0
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: scl_temp
                        HdlValueInt: 0
    INS tuple@@ to cases
    tuple
        HdlValueId: ReadClockLow
        HdlStmBlock: SEQ
            list: body
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: host_idle_o
                        HdlValueInt: 0
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: sda_temp
                        HdlValueInt: 1
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: scl_temp
                        HdlValueInt: 0


CommitId: d29e918f6bf1d8a395e9357f2cdae70e68f41a22
[i2c, rtl] Various FSM fixes and improvements
--- a/hw/ip/i2c/rtl/i2c_fsm.sv
+++ b/hw/ip/i2c/rtl/i2c_fsm.sv
@@ -355,6 +363,12 @@ module i2c_fsm (
         scl_temp = 1'b0;
         if (sda_temp == 1 && sda_i == 0) event_sda_interference_o = 1'b1;
       end
+      // ClockStop: SCL is pulled low, SDA stays low
+      ClockStop : begin
+        host_idle_o = 1'b0;
+        sda_temp = 1'b0;
+        scl_temp = 1'b0;
+      end
       // SetupStop: SDA is pulled low, SCL is released
       SetupStop : begin
         host_idle_o = 1'b0;

ParseResult:
UPD HdlStmCase@@state_q to state_q
    MOV tuple@@ to cases
    tuple
        HdlValueId: ReadClockLow
        HdlStmBlock: SEQ
            list: body
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: host_idle_o
                        HdlValueInt: 0
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: sda_temp
                        HdlValueInt: 0
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: scl_temp
                        HdlValueInt: 0
    UPD HdlValueId@@ReadClockLow to ClockStop

UPD HdlStmCase@@state_q to state_q
    INS tuple@@ to cases
    tuple
        HdlValueId: ClockStart
        HdlStmBlock: SEQ
            list: body
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: host_idle_o
                        HdlValueInt: 0
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: sda_temp
                        HdlValueInt: 0
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: scl_temp
                        HdlValueInt: 0
    INS tuple@@ to cases
    tuple
        HdlValueId: ReadClockLow
        HdlStmBlock: SEQ
            list: body
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: host_idle_o
                        HdlValueInt: 0
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: sda_temp
                        HdlValueInt: 1
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: scl_temp
                        HdlValueInt: 0


CommitId: d29e918f6bf1d8a395e9357f2cdae70e68f41a22
[i2c, rtl] Various FSM fixes and improvements
--- a/hw/ip/i2c/rtl/i2c_fsm.sv
+++ b/hw/ip/i2c/rtl/i2c_fsm.sv
@@ -368,7 +382,7 @@ module i2c_fsm (
         scl_temp = 1'b1;
         if (sda_i == 0) event_sda_interference_o = 1'b1;
       end
-      // Active: Hold SCL low
+      // Active: continue while keeping SCL low
       Active : begin
         host_idle_o = 1'b0;
         scl_temp = 1'b0;

ParseResult:
UPD HdlStmCase@@state_q to state_q
    MOV tuple@@ to cases
    tuple
        HdlValueId: ReadClockLow
        HdlStmBlock: SEQ
            list: body
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: host_idle_o
                        HdlValueInt: 0
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: sda_temp
                        HdlValueInt: 0
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: scl_temp
                        HdlValueInt: 0
    UPD HdlValueId@@ReadClockLow to ClockStop

UPD HdlStmCase@@state_q to state_q
    INS tuple@@ to cases
    tuple
        HdlValueId: ClockStart
        HdlStmBlock: SEQ
            list: body
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: host_idle_o
                        HdlValueInt: 0
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: sda_temp
                        HdlValueInt: 0
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: scl_temp
                        HdlValueInt: 0
    INS tuple@@ to cases
    tuple
        HdlValueId: ReadClockLow
        HdlStmBlock: SEQ
            list: body
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: host_idle_o
                        HdlValueInt: 0
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: sda_temp
                        HdlValueInt: 1
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: scl_temp
                        HdlValueInt: 0


CommitId: d29e918f6bf1d8a395e9357f2cdae70e68f41a22
[i2c, rtl] Various FSM fixes and improvements
--- a/hw/ip/i2c/rtl/i2c_fsm.sv
+++ b/hw/ip/i2c/rtl/i2c_fsm.sv
@@ -440,6 +454,14 @@ module i2c_fsm (
       end
       // HoldStart: SDA is pulled low, SCL is released
       HoldStart : begin
+        if (tcount_q == 1) begin
+          state_d = ClockStart;
+          load_tcount = 1'b1;
+          tcount_sel = tClockStart;
+        end
+      end
+      // ClockStart: SCL is pulled low, SDA stays low
+      ClockStart : begin
         if (tcount_q == 1) begin
           state_d = ClockLow;
           load_tcount = 1'b1;

ParseResult:
UPD HdlStmCase@@state_q to state_q
    INS tuple@@ to cases
    tuple
        HdlValueId: HoldStart
        HdlStmBlock: SEQ
            list: body
                HdlStmIf
                    HdlOp: EQ
                        list: ops
                            HdlValueId: tcount_q
                            HdlValueInt: 1
                    HdlStmBlock: SEQ
                        list: body
                            HdlOp: ASSIGN
                                list: ops
                                    HdlValueId: state_d
                                    HdlValueId: ClockStart
                            HdlOp: ASSIGN
                                list: ops
                                    HdlValueId: load_tcount
                                    HdlValueInt: 1
                            HdlOp: ASSIGN
                                list: ops
                                    HdlValueId: tcount_sel
                                    HdlValueId: tClockStart
                    list: elifs
    INS tuple@@ to cases
    INS HdlValueId@@ClockStop to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmCase@@state_q to state_q
    UPD HdlValueId@@HoldStart to ClockStart


CommitId: d29e918f6bf1d8a395e9357f2cdae70e68f41a22
[i2c, rtl] Various FSM fixes and improvements
--- a/hw/ip/i2c/rtl/i2c_fsm.sv
+++ b/hw/ip/i2c/rtl/i2c_fsm.sv
@@ -514,9 +536,9 @@ module i2c_fsm (
       HoldDevAck : begin
         if (tcount_q == 1) begin
           if (fmt_flag_stop_after_i) begin
-            state_d = SetupStop;
+            state_d = ClockStop;
             load_tcount = 1'b1;
-            tcount_sel = tSetupStop;
+            tcount_sel = tClockStop;
           end else begin
             state_d = PopFmtFifo;
             load_tcount = 1'b1;

ParseResult:
UPD HdlStmCase@@state_q to state_q
    INS tuple@@ to cases
    tuple
        HdlValueId: HoldStart
        HdlStmBlock: SEQ
            list: body
                HdlStmIf
                    HdlOp: EQ
                        list: ops
                            HdlValueId: tcount_q
                            HdlValueInt: 1
                    HdlStmBlock: SEQ
                        list: body
                            HdlOp: ASSIGN
                                list: ops
                                    HdlValueId: state_d
                                    HdlValueId: ClockStart
                            HdlOp: ASSIGN
                                list: ops
                                    HdlValueId: load_tcount
                                    HdlValueInt: 1
                            HdlOp: ASSIGN
                                list: ops
                                    HdlValueId: tcount_sel
                                    HdlValueId: tClockStart
                    list: elifs
    INS tuple@@ to cases
    INS HdlValueId@@ClockStop to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmCase@@state_q to state_q
    UPD HdlValueId@@HoldStart to ClockStart

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@SetupStop to ClockStop
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@tSetupStop to tClockStop


CommitId: d29e918f6bf1d8a395e9357f2cdae70e68f41a22
[i2c, rtl] Various FSM fixes and improvements
--- a/hw/ip/i2c/rtl/i2c_fsm.sv
+++ b/hw/ip/i2c/rtl/i2c_fsm.sv
@@ -525,7 +547,7 @@ module i2c_fsm (
         end
       end
 
-      // ReadClockLow: SCL is pulled low, SDA stays low
+      // ReadClockLow: SCL is pulled low, SDA is released
       ReadClockLow : begin
         if (tcount_q == 1) begin
           state_d = ReadSetupBit;

ParseResult:
UPD HdlStmCase@@state_q to state_q
    INS tuple@@ to cases
    tuple
        HdlValueId: HoldStart
        HdlStmBlock: SEQ
            list: body
                HdlStmIf
                    HdlOp: EQ
                        list: ops
                            HdlValueId: tcount_q
                            HdlValueInt: 1
                    HdlStmBlock: SEQ
                        list: body
                            HdlOp: ASSIGN
                                list: ops
                                    HdlValueId: state_d
                                    HdlValueId: ClockStart
                            HdlOp: ASSIGN
                                list: ops
                                    HdlValueId: load_tcount
                                    HdlValueInt: 1
                            HdlOp: ASSIGN
                                list: ops
                                    HdlValueId: tcount_sel
                                    HdlValueId: tClockStart
                    list: elifs
    INS tuple@@ to cases
    INS HdlValueId@@ClockStop to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmCase@@state_q to state_q
    UPD HdlValueId@@HoldStart to ClockStart


CommitId: d29e918f6bf1d8a395e9357f2cdae70e68f41a22
[i2c, rtl] Various FSM fixes and improvements
--- a/hw/ip/i2c/rtl/i2c_fsm.sv
+++ b/hw/ip/i2c/rtl/i2c_fsm.sv
@@ -595,9 +617,9 @@ module i2c_fsm (
         if (tcount_q == 1) begin
           if (byte_index == 1) begin
             if (fmt_flag_stop_after_i) begin
-              state_d = SetupStop;
+              state_d = ClockStop;
               load_tcount = 1'b1;
-              tcount_sel = tSetupStop;
+              tcount_sel = tClockStop;
             end else begin
               state_d = PopFmtFifo;
               load_tcount = 1'b1;

ParseResult:
UPD HdlStmCase@@state_q to state_q
    INS tuple@@ to cases
    tuple
        HdlValueId: HoldStart
        HdlStmBlock: SEQ
            list: body
                HdlStmIf
                    HdlOp: EQ
                        list: ops
                            HdlValueId: tcount_q
                            HdlValueInt: 1
                    HdlStmBlock: SEQ
                        list: body
                            HdlOp: ASSIGN
                                list: ops
                                    HdlValueId: state_d
                                    HdlValueId: ClockStart
                            HdlOp: ASSIGN
                                list: ops
                                    HdlValueId: load_tcount
                                    HdlValueInt: 1
                            HdlOp: ASSIGN
                                list: ops
                                    HdlValueId: tcount_sel
                                    HdlValueId: tClockStart
                    list: elifs
    INS tuple@@ to cases
    INS HdlValueId@@ClockStop to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmCase@@state_q to state_q
    UPD HdlValueId@@HoldStart to ClockStart

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@SetupStop to ClockStop
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@tSetupStop to tClockStop


CommitId: d29e918f6bf1d8a395e9357f2cdae70e68f41a22
[i2c, rtl] Various FSM fixes and improvements
--- a/hw/ip/i2c/rtl/i2c_fsm.sv
+++ b/hw/ip/i2c/rtl/i2c_fsm.sv
@@ -612,6 +634,14 @@ module i2c_fsm (
         end
       end
 
+      // ClockStop: SCL is pulled low, SDA stays low
+      ClockStop : begin
+        if (tcount_q == 1) begin
+          state_d = SetupStop;
+          load_tcount = 1'b1;
+          tcount_sel = tSetupStop;
+        end
+      end
       // SetupStop: SDA is pulled low, SCL is released
       SetupStop : begin
         if (tcount_q == 1) begin

ParseResult:
UPD HdlStmCase@@state_q to state_q
    INS tuple@@ to cases
    tuple
        HdlValueId: HoldStart
        HdlStmBlock: SEQ
            list: body
                HdlStmIf
                    HdlOp: EQ
                        list: ops
                            HdlValueId: tcount_q
                            HdlValueInt: 1
                    HdlStmBlock: SEQ
                        list: body
                            HdlOp: ASSIGN
                                list: ops
                                    HdlValueId: state_d
                                    HdlValueId: ClockStart
                            HdlOp: ASSIGN
                                list: ops
                                    HdlValueId: load_tcount
                                    HdlValueInt: 1
                            HdlOp: ASSIGN
                                list: ops
                                    HdlValueId: tcount_sel
                                    HdlValueId: tClockStart
                    list: elifs
    INS tuple@@ to cases
    INS HdlValueId@@ClockStop to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmCase@@state_q to state_q
    UPD HdlValueId@@HoldStart to ClockStart

INS HdlStmIf@@ to body


CommitId: d29e918f6bf1d8a395e9357f2cdae70e68f41a22
[i2c, rtl] Various FSM fixes and improvements
--- a/hw/ip/i2c/rtl/i2c_fsm.sv
+++ b/hw/ip/i2c/rtl/i2c_fsm.sv
@@ -624,18 +654,18 @@ module i2c_fsm (
       HoldStop : begin
         if (tcount_q == 1) begin
           if (!host_enable_i) begin
-             state_d = Idle;
-             load_tcount = 1'b1;
-             tcount_sel = tNoDelay;
+            state_d = Idle;
+            load_tcount = 1'b1;
+            tcount_sel = tNoDelay;
           end else begin
-             state_d = PopFmtFifo;
-             load_tcount = 1'b1;
-             tcount_sel = tNoDelay;
+            state_d = PopFmtFifo;
+            load_tcount = 1'b1;
+            tcount_sel = tNoDelay;
           end
         end
       end
 
-      // Active: Hold SCL low
+      // Active: continue while keeping SCL low
       Active : begin
         if (fmt_flag_read_bytes_i) begin
           byte_clr = 1'b1;

ParseResult:
UPD HdlStmCase@@state_q to state_q
    INS tuple@@ to cases
    tuple
        HdlValueId: HoldStart
        HdlStmBlock: SEQ
            list: body
                HdlStmIf
                    HdlOp: EQ
                        list: ops
                            HdlValueId: tcount_q
                            HdlValueInt: 1
                    HdlStmBlock: SEQ
                        list: body
                            HdlOp: ASSIGN
                                list: ops
                                    HdlValueId: state_d
                                    HdlValueId: ClockStart
                            HdlOp: ASSIGN
                                list: ops
                                    HdlValueId: load_tcount
                                    HdlValueInt: 1
                            HdlOp: ASSIGN
                                list: ops
                                    HdlValueId: tcount_sel
                                    HdlValueId: tClockStart
                    list: elifs
    INS tuple@@ to cases
    INS HdlValueId@@ClockStop to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmCase@@state_q to state_q
    UPD HdlValueId@@HoldStart to ClockStart


CommitId: d29e918f6bf1d8a395e9357f2cdae70e68f41a22
[i2c, rtl] Various FSM fixes and improvements
--- a/hw/ip/i2c/rtl/i2c_fsm.sv
+++ b/hw/ip/i2c/rtl/i2c_fsm.sv
@@ -656,9 +686,9 @@ module i2c_fsm (
       // PopFmtFifo: populate fmt_fifo
       PopFmtFifo : begin
         if (!host_enable_i) begin
-          state_d = SetupStop;
+          state_d = ClockStop;
           load_tcount = 1'b1;
-          tcount_sel = tSetupStop;
+          tcount_sel = tClockStop;
         end else if (fmt_fifo_depth_i == 1 && !fmt_fifo_wvalid_i) begin
           state_d = Idle;
           load_tcount = 1'b1;
ParseResult:
UPD HdlStmCase@@state_q to state_q
    INS tuple@@ to cases
    tuple
        HdlValueId: HoldStart
        HdlStmBlock: SEQ
            list: body
                HdlStmIf
                    HdlOp: EQ
                        list: ops
                            HdlValueId: tcount_q
                            HdlValueInt: 1
                    HdlStmBlock: SEQ
                        list: body
                            HdlOp: ASSIGN
                                list: ops
                                    HdlValueId: state_d
                                    HdlValueId: ClockStart
                            HdlOp: ASSIGN
                                list: ops
                                    HdlValueId: load_tcount
                                    HdlValueInt: 1
                            HdlOp: ASSIGN
                                list: ops
                                    HdlValueId: tcount_sel
                                    HdlValueId: tClockStart
                    list: elifs
    INS tuple@@ to cases
    INS HdlValueId@@ClockStop to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmCase@@state_q to state_q
    UPD HdlValueId@@HoldStart to ClockStart

UPD HdlStmIf@@ to 
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: state_d
                    HdlValueId: SetupStop
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: load_tcount
                    HdlValueInt: 1
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: tcount_sel
                    HdlValueId: tSetupStop


CommitId: 548810e191222d071171a2db8499bc4dbf2ccea5
[prim] Avoid an apparent combinatorial loop in prim_secded_*_dec.sv
--- a/hw/ip/prim/rtl/prim_secded_64_57_dec.sv
+++ b/hw/ip/prim/rtl/prim_secded_64_57_dec.sv
@@ -12,6 +12,7 @@ module prim_secded_64_57_dec (
   output logic [1:0] err_o
 );
 
+  logic single_error;
 
   // Syndrome calculation
   assign syndrome_o[0] = ^(in & 64'h0303FFF800007FFF);

ParseResult:
INS HdlIdDef@@single_error to objs
HdlIdDef: single_error
    HdlDirection: INTERNAL


CommitId: 548810e191222d071171a2db8499bc4dbf2ccea5
[prim] Avoid an apparent combinatorial loop in prim_secded_*_dec.sv
--- a/hw/ip/prim/rtl/prim_secded_64_57_dec.sv
+++ b/hw/ip/prim/rtl/prim_secded_64_57_dec.sv
@@ -82,7 +83,8 @@ module prim_secded_64_57_dec (
   assign d_o[56] = (syndrome_o == 7'h7f) ^ in[56];
 
   // err_o calc. bit0: single error, bit1: double error
-  assign err_o[0] = ^syndrome_o;
-  assign err_o[1] = ~err_o[0] & (|syndrome_o);
+  assign single_error = ^syndrome_o;
+  assign err_o[0] = single_error;
+  assign err_o[1] = ~single_error & (|syndrome_o);
 
 endmodule : prim_secded_64_57_dec
ParseResult:
INS HdlStmAssign@@ to objs

UPD HdlStmAssign@@ to 
    MOV HdlOp@@XOR_UNARY to 
    HdlOp: XOR_UNARY
        list: ops
            HdlValueId: syndrome_o

UPD HdlStmAssign@@ to 
    INS HdlValueId@@single_error to 

UPD HdlStmAssign@@ to 
    INS HdlValueId@@single_error to 

UPD HdlStmAssign@@ to 
    UPD HdlOp@@AND to AND
        UPD HdlOp@@NEG to NEG
            UPD HdlOp@@INDEX to INDEX
                MOV list@@ops to INDEX
                list: ops
                    HdlValueId: err_o
                    HdlValueInt: 0
                UPD HdlValueId@@err_o to single_error
                DEL HdlValueInt@@0 from ops
            DEL HdlOp@@INDEX from ops
            DEL list@@ops from NEG


CommitId: 103b4cb2da07f5b826955691f28aa6b5a3bdd1ac
[flash_ctrl] Support the notion of a 'program-repair'.
--- a/hw/ip/prim_generic/rtl/prim_generic_flash.sv
+++ b/hw/ip/prim_generic/rtl/prim_generic_flash.sv
@@ -21,14 +21,18 @@ module prim_generic_flash #(
   input                              rst_ni,
   input                              rd_i,
   input                              prog_i,
+  // the generic model does not make use of program types
+  input flash_ctrl_pkg::flash_prog_e prog_type_i,
   input                              pg_erase_i,
   input                              bk_erase_i,
   input [AddrW-1:0]                  addr_i,
   input flash_ctrl_pkg::flash_part_e part_i,
   input [DataWidth-1:0]              prog_data_i,
+  output logic [flash_ctrl_pkg::ProgTypes-1:0] prog_type_avail_o,
   output logic                       ack_o,
   output logic [DataWidth-1:0]       rd_data_o,
   output logic                       init_busy_o,
+
   input                              tck_i,
   input                              tdi_i,
   input                              tms_i,

ParseResult:
INS HdlIdDef@@prog_type_i to ports
HdlIdDef: prog_type_i
    HdlOp: DOUBLE_COLON
        list: ops
            HdlValueId: flash_ctrl_pkg
            HdlValueId: flash_prog_e
    HdlDirection: IN

INS HdlIdDef@@prog_type_avail_o to ports
HdlIdDef: prog_type_avail_o
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlOp: SUB
                        list: ops
                            HdlOp: DOUBLE_COLON
                                list: ops
                                    HdlValueId: flash_ctrl_pkg
                                    HdlValueId: ProgTypes
                            HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: OUT


CommitId: 103b4cb2da07f5b826955691f28aa6b5a3bdd1ac
[flash_ctrl] Support the notion of a 'program-repair'.
--- a/hw/ip/prim_generic/rtl/prim_generic_flash.sv
+++ b/hw/ip/prim_generic/rtl/prim_generic_flash.sv
@@ -328,4 +332,8 @@ module prim_generic_flash #(
   // hard-wire assignment for now
   assign tdo_o = 1'b0;
 
+  // this represents the type of program operations that are supported
+  assign prog_type_avail_o[flash_ctrl_pkg::FlashProgNormal] = 1'b1;
+  assign prog_type_avail_o[flash_ctrl_pkg::FlashProgRepair] = 1'b1;
+
 endmodule // prim_generic_flash
ParseResult:
INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlValueInt: 1
    HdlOp: INDEX
        list: ops
            HdlValueId: prog_type_avail_o
            HdlOp: DOUBLE_COLON
                list: ops
                    HdlValueId: flash_ctrl_pkg
                    HdlValueId: FlashProgNormal

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlValueInt: 1
    HdlOp: INDEX
        list: ops
            HdlValueId: prog_type_avail_o
            HdlOp: DOUBLE_COLON
                list: ops
                    HdlValueId: flash_ctrl_pkg
                    HdlValueId: FlashProgRepair


CommitId: d14b37a8c2a7f7faa351587c7a3489fa58db0790
Update lowrisc_ibex to lowRISC/ibex@a3a1f9f
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_tracer.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_tracer.sv
@@ -48,8 +48,10 @@ module ibex_tracer (
   input logic [ 1:0] rvfi_mode,
   input logic [ 4:0] rvfi_rs1_addr,
   input logic [ 4:0] rvfi_rs2_addr,
+  input logic [ 4:0] rvfi_rs3_addr,
   input logic [31:0] rvfi_rs1_rdata,
   input logic [31:0] rvfi_rs2_rdata,
+  input logic [31:0] rvfi_rs3_rdata,
   input logic [ 4:0] rvfi_rd_addr,
   input logic [31:0] rvfi_rd_wdata,
   input logic [31:0] rvfi_pc_rdata,

ParseResult:
INS HdlIdDef@@rvfi_rs3_addr to ports
HdlIdDef: rvfi_rs3_addr
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 4
                    HdlValueInt: 0
    HdlDirection: IN

INS HdlIdDef@@rvfi_rs3_rdata to ports
HdlIdDef: rvfi_rs3_rdata
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 31
                    HdlValueInt: 0
    HdlDirection: IN


CommitId: d14b37a8c2a7f7faa351587c7a3489fa58db0790
Update lowrisc_ibex to lowRISC/ibex@a3a1f9f
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_tracer.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_tracer.sv
@@ -83,9 +85,10 @@ module ibex_tracer (
   // Data items accessed during this instruction
   localparam RS1 = (1 << 0);
   localparam RS2 = (1 << 1);
-  localparam RD  = (1 << 2);
-  localparam MEM = (1 << 3);
-  logic [3:0] data_accessed;
+  localparam RS3 = (1 << 2);
+  localparam RD  = (1 << 3);
+  localparam MEM = (1 << 4);
+  logic [4:0] data_accessed;
 
   function automatic void printbuffer_dumpline();
     string rvfi_insn_str;

ParseResult:
UPD HdlIdDef@@RD to RS3

UPD HdlIdDef@@MEM to RD

INS HdlIdDef@@MEM to objs
HdlIdDef: MEM
    HdlOp: SLL
        list: ops
            HdlValueInt: 1
            HdlValueInt: 4
    HdlDirection: INTERNAL

INS HdlIdDef@@data_accessed to objs
HdlIdDef: data_accessed
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 4
                    HdlValueInt: 0
    HdlDirection: INTERNAL

DEL HdlIdDef@@data_accessed from objs
HdlIdDef: data_accessed
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 3
                    HdlValueInt: 0
    HdlDirection: INTERNAL


CommitId: d14b37a8c2a7f7faa351587c7a3489fa58db0790
Update lowrisc_ibex to lowRISC/ibex@a3a1f9f
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_tracer.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_tracer.sv
@@ -116,6 +119,9 @@ module ibex_tracer (
     if ((data_accessed & RS2) != 0) begin
       $fwrite(file_handle, " %s:0x%08x", reg_addr_to_str(rvfi_rs2_addr), rvfi_rs2_rdata);
     end
+    if ((data_accessed & RS3) != 0) begin
+      $fwrite(file_handle, " %s:0x%08x", reg_addr_to_str(rvfi_rs3_addr), rvfi_rs3_rdata);
+    end
     if ((data_accessed & RD) != 0) begin
       $fwrite(file_handle, " %s=0x%08x", reg_addr_to_str(rvfi_rd_addr), rvfi_rd_wdata);
     end

ParseResult:
INS HdlStmIf@@ to body
HdlStmIf
    HdlOp: NE
        list: ops
            HdlOp: AND
                list: ops
                    HdlValueId: data_accessed
                    HdlValueId: RS3
            HdlValueInt: 0
    HdlStmBlock: SEQ
        list: body
            HdlOp: CALL
                list: ops
                    HdlValueId: $fwrite
                    HdlValueId: file_handle
                    str
                    HdlOp: CALL
                        list: ops
                            HdlValueId: reg_addr_to_str
                            HdlValueId: rvfi_rs3_addr
                    HdlValueId: rvfi_rs3_rdata
    list: elifs


CommitId: d14b37a8c2a7f7faa351587c7a3489fa58db0790
Update lowrisc_ibex to lowRISC/ibex@a3a1f9f
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_tracer.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_tracer.sv
@@ -404,6 +411,18 @@ module ibex_tracer (
     decoded_str = $sformatf("%s\tx%0d,x%0d", mnemonic, rvfi_rd_addr, rvfi_rs1_addr);
   endfunction
 
+  function automatic void decode_r_cmixcmov_insn(input string mnemonic);
+    data_accessed = RS1 | RS2 | RS3 | RD;
+    decoded_str = $sformatf("%s\tx%0d,x%0d,x%0d,x%0d", mnemonic, rvfi_rd_addr, rvfi_rs2_addr,
+        rvfi_rs1_addr, rvfi_rs3_addr);
+  endfunction
+
+  function automatic void decode_r_funnelshift_insn(input string mnemonic);
+    data_accessed = RS1 | RS2 | RS3 | RD;
+    decoded_str = $sformatf("%s\tx%0d,x%0d,x%0d,x%0d", mnemonic, rvfi_rd_addr, rvfi_rs1_addr,
+        rvfi_rs3_addr, rvfi_rs2_addr);
+  endfunction
+
   function automatic void decode_i_insn(input string mnemonic);
     data_accessed = RS1 | RD;
     decoded_str = $sformatf("%s\tx%0d,x%0d,%0d", mnemonic, rvfi_rd_addr, rvfi_rs1_addr,

ParseResult:
INS HdlFunctionDef@@decode_r_cmixcmov_insn to objs
HdlFunctionDef: decode_r_cmixcmov_insn
    HdlValueId: void
    list: params
        HdlIdDef: mnemonic
            HdlValueId: string
            HdlDirection: IN
    list: body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: data_accessed
                HdlOp: OR
                    list: ops
                        HdlOp: OR
                            list: ops
                                HdlOp: OR
                                    list: ops
                                        HdlValueId: RS1
                                        HdlValueId: RS2
                                HdlValueId: RS3
                        HdlValueId: RD
        HdlOp: ASSIGN
            list: ops
                HdlValueId: decoded_str
                HdlOp: CALL
                    list: ops
                        HdlValueId: $sformatf
                        str
                        HdlValueId: mnemonic
                        HdlValueId: rvfi_rd_addr
                        HdlValueId: rvfi_rs2_addr
                        HdlValueId: rvfi_rs1_addr
                        HdlValueId: rvfi_rs3_addr

INS HdlFunctionDef@@decode_r_funnelshift_insn to objs
HdlFunctionDef: decode_r_funnelshift_insn
    HdlValueId: void
    list: params
        HdlIdDef: mnemonic
            HdlValueId: string
            HdlDirection: IN
    list: body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: data_accessed
                HdlOp: OR
                    list: ops
                        HdlOp: OR
                            list: ops
                                HdlOp: OR
                                    list: ops
                                        HdlValueId: RS1
                                        HdlValueId: RS2
                                HdlValueId: RS3
                        HdlValueId: RD
        HdlOp: ASSIGN
            list: ops
                HdlValueId: decoded_str
                HdlOp: CALL
                    list: ops
                        HdlValueId: $sformatf
                        str
                        HdlValueId: mnemonic
                        HdlValueId: rvfi_rd_addr
                        HdlValueId: rvfi_rs1_addr
                        HdlValueId: rvfi_rs3_addr
                        HdlValueId: rvfi_rs2_addr


CommitId: d14b37a8c2a7f7faa351587c7a3489fa58db0790
Update lowrisc_ibex to lowRISC/ibex@a3a1f9f
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_tracer.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_tracer.sv
@@ -418,6 +437,15 @@ module ibex_tracer (
     decoded_str = $sformatf("%s\tx%0d,x%0d,0x%0x", mnemonic, rvfi_rd_addr, rvfi_rs1_addr, shamt);
   endfunction
 
+  function automatic void decode_i_funnelshift_insn( input string mnemonic);
+    // fsri
+    logic [5:0] shamt;
+    shamt = {rvfi_insn[25:20]};
+    data_accessed = RS1 | RS3;
+    decoded_str = $sformatf("%s\tx%0d,x%0d,x%0d,0x%0x", mnemonic, rvfi_rd_addr, rvfi_rs1_addr,
+        rvfi_rs3_addr, shamt);
+  endfunction
+
   function automatic void decode_i_jalr_insn(input string mnemonic);
     // JALR
     data_accessed = RS1 | RD;

ParseResult:
INS HdlFunctionDef@@decode_i_funnelshift_insn to objs
HdlFunctionDef: decode_i_funnelshift_insn
    HdlValueId: void
    list: params
        HdlIdDef: mnemonic
            HdlValueId: string
            HdlDirection: IN
    list: body
        HdlIdDef: shamt
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: logic
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 5
                            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlOp: ASSIGN
            list: ops
                HdlValueId: shamt
                HdlOp: INDEX
                    list: ops
                        HdlValueId: rvfi_insn
                        HdlOp: DOWNTO
                            list: ops
                                HdlValueInt: 25
                                HdlValueInt: 20
        HdlOp: ASSIGN
            list: ops
                HdlValueId: data_accessed
                HdlOp: OR
                    list: ops
                        HdlValueId: RS1
                        HdlValueId: RS3
        HdlOp: ASSIGN
            list: ops
                HdlValueId: decoded_str
                HdlOp: CALL
                    list: ops
                        HdlValueId: $sformatf
                        str
                        HdlValueId: mnemonic
                        HdlValueId: rvfi_rd_addr
                        HdlValueId: rvfi_rs1_addr
                        HdlValueId: rvfi_rs3_addr
                        HdlValueId: shamt


CommitId: d14b37a8c2a7f7faa351587c7a3489fa58db0790
Update lowrisc_ibex to lowRISC/ibex@a3a1f9f
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_tracer.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_tracer.sv
@@ -871,6 +899,12 @@ module ibex_tracer (
         INSN_PCNT:       decode_r1_insn("pcnt");
         INSN_REV:        decode_r1_insn("rev");
         INSN_REV8:       decode_r1_insn("rev8");
+        // TERNARY BITMABIP INSTR
+        INSN_CMIX:       decode_r_cmixcmov_insn("cmix");
+        INSN_CMOV:       decode_r_cmixcmov_insn("cmov");
+        INSN_FSR:        decode_r_funnelshift_insn("fsr");
+        INSN_FSL:        decode_r_funnelshift_insn("fsl");
+        INSN_FSRI:       decode_i_funnelshift_insn("fsri");
 
         default:         decode_mnemonic("INVALID");
       endcase
ParseResult:
UPD HdlStmCase@@rvfi_insn to rvfi_insn
    INS tuple@@ to cases
    tuple
        HdlValueId: INSN_CMIX
        HdlOp: CALL
            list: ops
                HdlValueId: decode_r_cmixcmov_insn
                str
    INS tuple@@ to cases
    tuple
        HdlValueId: INSN_CMOV
        HdlOp: CALL
            list: ops
                HdlValueId: decode_r_cmixcmov_insn
                str
    INS tuple@@ to cases
    tuple
        HdlValueId: INSN_FSR
        HdlOp: CALL
            list: ops
                HdlValueId: decode_r_funnelshift_insn
                str
    INS tuple@@ to cases
    tuple
        HdlValueId: INSN_FSL
        HdlOp: CALL
            list: ops
                HdlValueId: decode_r_funnelshift_insn
                str
    INS tuple@@ to cases
    tuple
        HdlValueId: INSN_FSRI
        HdlOp: CALL
            list: ops
                HdlValueId: decode_i_funnelshift_insn
                str


CommitId: e8d310e5b61710c1a484ede8125c70ca313ada34
[padctrl] Add padctrl implementation
--- a/hw/ip/prim/abstract/prim_pad_wrapper.sv
+++ b/hw/ip/prim/abstract/prim_pad_wrapper.sv
@@ -8,7 +8,7 @@
 // prim_pad_wrapper using the generic implementation
 module prim_pad_wrapper #(
   parameter              Impl   = "generic",
-  parameter int unsigned AttrDw = 7
+  parameter int unsigned AttrDw = 6
 ) (
   inout  wire        inout_io, // bidirectional pad
   output logic       in_o,     // input data
ParseResult:
UPD HdlIdDef@@AttrDw to AttrDw
    UPD HdlValueInt@@7 to 6


CommitId: e38146466c337a0a5c9114e2fa90f7fe98ab93e9
Update lowrisc_ibex to lowRISC/ibex@f30e84b
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_register_file_fpga.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_register_file_fpga.sv
@@ -11,7 +11,7 @@
  * This register file is designed to make FPGA synthesis tools infer RAM primitives. For Xilinx
  * FPGA architectures, it will produce RAM32M primitives. Other vendors have not yet been tested.
  */
-module ibex_register_file #(
+module ibex_register_file_fpga #(
   parameter bit          RV32E             = 0,
   parameter int unsigned DataWidth         = 32,
   parameter bit          DummyInstructions = 0

ParseResult:
UPD HdlModuleDef@@ibex_register_file to ibex_register_file_fpga

UPD HdlModuleDec@@ibex_register_file to ibex_register_file_fpga


CommitId: e38146466c337a0a5c9114e2fa90f7fe98ab93e9
Update lowrisc_ibex to lowRISC/ibex@f30e84b
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_register_file_fpga.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_register_file_fpga.sv
@@ -64,4 +64,4 @@ module ibex_register_file #(
   logic unused_dummy_instr;
   assign unused_dummy_instr = dummy_instr_id_i;
 
-endmodule : ibex_register_file
+endmodule
ParseResult:
UPD HdlModuleDef@@ibex_register_file to ibex_register_file_fpga

UPD HdlModuleDec@@ibex_register_file to ibex_register_file_fpga


CommitId: b1ba59b519d632b1ef7f2dda4ece681d6c65b0b8
[flash / top / ast] functional updates
--- a/hw/ip/prim_generic/rtl/prim_generic_flash_bank.sv
+++ b/hw/ip/prim_generic/rtl/prim_generic_flash_bank.sv
@@ -36,7 +36,6 @@ module prim_generic_flash_bank #(
   input [DataWidth-1:0]              prog_data_i,
   output logic                       ack_o,
   output logic                       done_o,
-  output logic                       erase_suspend_done_o,
   output logic [DataWidth-1:0]       rd_data_o,
   input                              init_i,
   output logic                       init_busy_o,

ParseResult:
DEL HdlIdDef@@erase_suspend_done_o from ports
HdlIdDef: erase_suspend_done_o
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: OUT


CommitId: b1ba59b519d632b1ef7f2dda4ece681d6c65b0b8
[flash / top / ast] functional updates
--- a/hw/ip/prim_generic/rtl/prim_generic_flash_bank.sv
+++ b/hw/ip/prim_generic/rtl/prim_generic_flash_bank.sv
@@ -244,7 +243,6 @@ module prim_generic_flash_bank #(
     init_busy_o      = '0;
     pop_cmd          = '0;
     done_o           = '0;
-    erase_suspend_done_o = '0;
 
     unique case (st_q)
       StReset: begin

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: erase_suspend_done_o
                HdlValueInt: 0


CommitId: b1ba59b519d632b1ef7f2dda4ece681d6c65b0b8
[flash / top / ast] functional updates
--- a/hw/ip/prim_generic/rtl/prim_generic_flash_bank.sv
+++ b/hw/ip/prim_generic/rtl/prim_generic_flash_bank.sv
@@ -334,7 +332,6 @@ module prim_generic_flash_bank #(
           st_d = StIdle;
           pop_cmd = 1'b1;
           done_o = 1'b1;
-          erase_suspend_done_o = 1'b1;
           time_cnt_clr = 1'b1;
           index_cnt_clr = 1'b1;
         end else if (index_cnt < index_limit_q || time_cnt < time_limit_q) begin
ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: erase_suspend_done_o
                HdlValueInt: 0

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: erase_suspend_done_o
                HdlValueInt: 1


CommitId: 33e387ff92df07f8a334ab97a02becf08505a130
[csrng/rtl] Split cmd_sts into two registers
--- a/hw/ip/csrng/rtl/csrng_block_encrypt.sv
+++ b/hw/ip/csrng/rtl/csrng_block_encrypt.sv
@@ -7,10 +7,10 @@
 
 module csrng_block_encrypt #(
   parameter aes_pkg::sbox_impl_e SBoxImpl = aes_pkg::SBoxImplLut,
-  parameter int unsigned Cmd = 3,
-  parameter int unsigned StateId = 4,
-  parameter int unsigned BlkLen = 128,
-  parameter int unsigned KeyLen = 256
+  parameter int Cmd = 3,
+  parameter int StateId = 4,
+  parameter int BlkLen = 128,
+  parameter int KeyLen = 256
 ) (
   input logic                clk_i,
   input logic                rst_ni,

ParseResult:
UPD HdlIdDef@@Cmd to Cmd
    UPD HdlOp@@PARAMETRIZATION to PARAMETRIZATION
        MOV HdlValueId@@int to ops
        HdlValueId: int
        DEL HdlOp@@MAP_ASSOCIATION from ops
        HdlOp: MAP_ASSOCIATION
            list: ops
                HdlValueId: signed
        DEL list@@ops from PARAMETRIZATION
    DEL HdlOp@@PARAMETRIZATION from Cmd

UPD HdlIdDef@@StateId to StateId
    UPD HdlOp@@PARAMETRIZATION to PARAMETRIZATION
        MOV HdlValueId@@int to ops
        HdlValueId: int
        DEL HdlOp@@MAP_ASSOCIATION from ops
        HdlOp: MAP_ASSOCIATION
            list: ops
                HdlValueId: signed
        DEL list@@ops from PARAMETRIZATION
    DEL HdlOp@@PARAMETRIZATION from StateId

UPD HdlIdDef@@BlkLen to BlkLen
    UPD HdlOp@@PARAMETRIZATION to PARAMETRIZATION
        MOV HdlValueId@@int to ops
        HdlValueId: int
        DEL HdlOp@@MAP_ASSOCIATION from ops
        HdlOp: MAP_ASSOCIATION
            list: ops
                HdlValueId: signed
        DEL list@@ops from PARAMETRIZATION
    DEL HdlOp@@PARAMETRIZATION from BlkLen

UPD HdlIdDef@@KeyLen to KeyLen
    UPD HdlOp@@PARAMETRIZATION to PARAMETRIZATION
        MOV HdlValueId@@int to ops
        HdlValueId: int
        DEL HdlOp@@MAP_ASSOCIATION from ops
        HdlOp: MAP_ASSOCIATION
            list: ops
                HdlValueId: signed
        DEL list@@ops from PARAMETRIZATION
    DEL HdlOp@@PARAMETRIZATION from KeyLen

UPD HdlIdDef@@clk_i to clk_i
    UPD HdlOp@@PARAMETRIZATION to PARAMETRIZATION
        MOV HdlValueId@@logic to ops
        HdlValueId: logic
        DEL list@@ops from PARAMETRIZATION
    DEL HdlOp@@PARAMETRIZATION from clk_i

UPD HdlIdDef@@rst_ni to rst_ni
    UPD HdlOp@@PARAMETRIZATION to PARAMETRIZATION
        MOV HdlValueId@@logic to ops
        HdlValueId: logic
        DEL list@@ops from PARAMETRIZATION
    DEL HdlOp@@PARAMETRIZATION from rst_ni


CommitId: 33e387ff92df07f8a334ab97a02becf08505a130
[csrng/rtl] Split cmd_sts into two registers
--- a/hw/ip/csrng/rtl/csrng_block_encrypt.sv
+++ b/hw/ip/csrng/rtl/csrng_block_encrypt.sv
@@ -33,9 +33,9 @@ module csrng_block_encrypt #(
   output logic [2:0]         block_encrypt_sfifo_blkenc_err_o
 );
 
-  localparam int unsigned BlkEncFifoDepth = 1;
-  localparam int unsigned BlkEncFifoWidth = BlkLen+StateId+Cmd;
-  localparam int unsigned NumShares = 1;
+  localparam int BlkEncFifoDepth = 1;
+  localparam int BlkEncFifoWidth = BlkLen+StateId+Cmd;
+  localparam int NumShares = 1;
 
   // signals
   // blk_encrypt_in fifo

ParseResult:
UPD HdlIdDef@@BlkEncFifoDepth to BlkEncFifoDepth
    UPD HdlOp@@PARAMETRIZATION to PARAMETRIZATION
        MOV HdlValueId@@int to ops
        HdlValueId: int
        DEL HdlOp@@MAP_ASSOCIATION from ops
        HdlOp: MAP_ASSOCIATION
            list: ops
                HdlValueId: signed
        DEL list@@ops from PARAMETRIZATION
    DEL HdlOp@@PARAMETRIZATION from BlkEncFifoDepth

UPD HdlIdDef@@BlkEncFifoWidth to BlkEncFifoWidth
    UPD HdlOp@@PARAMETRIZATION to PARAMETRIZATION
        MOV HdlValueId@@int to ops
        HdlValueId: int
        DEL HdlOp@@MAP_ASSOCIATION from ops
        HdlOp: MAP_ASSOCIATION
            list: ops
                HdlValueId: signed
        DEL list@@ops from PARAMETRIZATION
    DEL HdlOp@@PARAMETRIZATION from BlkEncFifoWidth

UPD HdlIdDef@@NumShares to NumShares
    UPD HdlOp@@PARAMETRIZATION to PARAMETRIZATION
        MOV HdlValueId@@int to ops
        HdlValueId: int
        DEL HdlOp@@MAP_ASSOCIATION from ops
        HdlOp: MAP_ASSOCIATION
            list: ops
                HdlValueId: signed
        DEL list@@ops from PARAMETRIZATION
    DEL HdlOp@@PARAMETRIZATION from NumShares

UPD HdlIdDef@@block_encrypt_sfifo_blkenc_err_o to block_encrypt_sfifo_blkenc_err_o
    UPD HdlOp@@PARAMETRIZATION to INDEX


CommitId: 33e387ff92df07f8a334ab97a02becf08505a130
[csrng/rtl] Split cmd_sts into two registers
--- a/hw/ip/csrng/rtl/csrng_block_encrypt.sv
+++ b/hw/ip/csrng/rtl/csrng_block_encrypt.sv
@@ -155,7 +155,7 @@ module csrng_block_encrypt #(
   assign sfifo_blkenc_push = block_encrypt_req_i && sfifo_blkenc_not_full;
   assign sfifo_blkenc_wdata = {block_encrypt_v_i,block_encrypt_id_i,block_encrypt_cmd_i};
 
-  assign block_encrypt_rdy_o = aes_cipher_core_enable ? sfifo_blkenc_not_full : cipher_in_ready;
+  assign block_encrypt_rdy_o = !aes_cipher_core_enable ? sfifo_blkenc_not_full : cipher_in_ready;
 
   assign sfifo_blkenc_pop = block_encrypt_ack_o;
   assign {sfifo_blkenc_v,sfifo_blkenc_id,sfifo_blkenc_cmd} = sfifo_blkenc_rdata;
ParseResult:
UPD HdlStmAssign@@ to 
    UPD HdlOp@@TERNARY to TERNARY
        INS HdlOp@@NEG_LOG to ops
        UPD HdlOp@@NEG_LOG to NEG_LOG
            INS list@@ops to NEG_LOG

UPD HdlStmAssign@@ to 
    UPD HdlOp@@TERNARY to TERNARY
        MOV HdlValueId@@aes_cipher_core_enable to ops
        HdlValueId: aes_cipher_core_enable


CommitId: b27cff9584c6d42b71a89c66ec64f15b166435b2
[i2c, rtl] Format flag assignments
--- a/hw/ip/i2c/rtl/i2c_fsm.sv
+++ b/hw/ip/i2c/rtl/i2c_fsm.sv
@@ -92,7 +92,7 @@ module i2c_fsm (
         tClockPulse : tcount_d = t_r_i + thigh_i;
         tHoldBit    : tcount_d = t_f_i + thd_dat_i;
         tSetupStop  : tcount_d = t_r_i + tsu_sto_i;
-        tHoldStop   : tcount_d = t_r_i + t_buf_i;
+        tHoldStop   : tcount_d = t_r_i + t_buf_i - tsu_sta_i;
         tNoDelay    : tcount_d = '0;
         default     : tcount_d = '0;
       endcase
ParseResult:
UPD HdlStmCase@@tcount_sel to tcount_sel
    INS HdlOp@@ASSIGN to 
    UPD HdlOp@@ASSIGN to ASSIGN
        INS list@@ops to ASSIGN
        UPD HdlOp@@SUB to SUB
            INS HdlValueId@@tsu_sta_i to ops

UPD HdlStmCase@@tcount_sel to tcount_sel
    UPD HdlOp@@ASSIGN to ASSIGN
        MOV HdlValueId@@tcount_d to ops
        HdlValueId: tcount_d
    UPD HdlOp@@ASSIGN to SUB
    MOV HdlOp@@ASSIGN to 
    HdlOp: ASSIGN
        list: ops
            HdlValueId: tcount_d
            HdlOp: ADD
                list: ops
                    HdlValueId: t_r_i
                    HdlValueId: t_buf_i


CommitId: 17f4bf815e5eed73c1c16d0260862c5b6d54a1ee
[pinmux] Update strap sampling mode in DFT-enabled LC states
--- a/hw/top_earlgrey/rtl/autogen/chip_earlgrey_asic.sv
+++ b/hw/top_earlgrey/rtl/autogen/chip_earlgrey_asic.sv
@@ -103,7 +103,6 @@ module chip_earlgrey_asic (
 
   // DFT and Debug signal positions in the pinout.
   localparam pinmux_pkg::target_cfg_t PinmuxTargetCfg = '{
-    const_sampling:    1'b1,
     tck_idx:           TckPadIdx,
     tms_idx:           TmsPadIdx,
     trst_idx:          TrstNPadIdx,
ParseResult:
UPD HdlIdDef@@PinmuxTargetCfg to PinmuxTargetCfg
    DEL HdlOp@@MAP_ASSOCIATION from value
    HdlOp: MAP_ASSOCIATION
        list: ops
            HdlValueId: const_sampling
            HdlValueInt: 1


CommitId: 53ef2ec43c1c1eb00b771e17fc157f5bb1103ed5
Update lowrisc_ibex to lowRISC/ibex@d14312c
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_id_stage.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_id_stage.sv
@@ -65,6 +47,7 @@ module ibex_id_stage #(
     output ibex_pkg::exc_cause_e  exc_cause_o,
 
     input  logic                  illegal_c_insn_i,
+    input  logic                  instr_fetch_err_i,
 
     input  logic [31:0]           pc_id_i,
 

ParseResult:
INS HdlIdDef@@instr_fetch_err_i to ports
HdlIdDef: instr_fetch_err_i
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: IN


CommitId: 53ef2ec43c1c1eb00b771e17fc157f5bb1103ed5
Update lowrisc_ibex to lowRISC/ibex@d14312c
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_id_stage.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_id_stage.sv
@@ -99,7 +82,6 @@ module ibex_id_stage #(
     output logic                  data_we_ex_o,
     output logic [1:0]            data_type_ex_o,
     output logic                  data_sign_ext_ex_o,
-    output logic [1:0]            data_reg_offset_ex_o,
     output logic [31:0]           data_wdata_ex_o,
 
     input  logic                  lsu_addr_incr_req_i,

ParseResult:
DEL HdlIdDef@@data_reg_offset_ex_o from ports
HdlIdDef: data_reg_offset_ex_o
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: OUT


CommitId: 53ef2ec43c1c1eb00b771e17fc157f5bb1103ed5
Update lowrisc_ibex to lowRISC/ibex@d14312c
--- a/hw/vendor/lowrisc_ibex/rtl/ibex_id_stage.sv
+++ b/hw/vendor/lowrisc_ibex/rtl/ibex_id_stage.sv
@@ -118,6 +100,7 @@ module ibex_id_stage #(
     input  logic                  lsu_store_err_i,
 
     // Debug Signal
+    output logic                  debug_mode_o,
     output ibex_pkg::dbg_cause_e  debug_cause_o,
     output logic                  debug_csr_save_o,
     input  logic                  debug_req_i,

ParseResult:
INS HdlIdDef@@debug_mode_o to ports
HdlIdDef: debug_mode_o
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: OUT


CommitId: 1b5fa9f1ebf0a9520ef6ea6faf1f1a2397a349c1
[verible/style] This corrects several style linter warnings/errors
--- a/hw/ip/usb_fs_nb_pe/rtl/usb_fs_nb_pe.sv
+++ b/hw/ip/usb_fs_nb_pe/rtl/usb_fs_nb_pe.sv
@@ -15,10 +15,10 @@
 // this version contains no packet buffers
 
 module usb_fs_nb_pe #(
-  parameter NumOutEps = 2,
-  parameter NumInEps = 2,
-  parameter MaxPktSizeByte = 32,
-  parameter PktW = $clog2(MaxPktSizeByte)
+  parameter int unsigned NumOutEps = 2,
+  parameter int unsigned NumInEps = 2,
+  parameter int unsigned MaxPktSizeByte = 32,
+  parameter int unsigned PktW = $clog2(MaxPktSizeByte)
 ) (
   input  logic                   clk_48mhz_i,
   input  logic                   rst_ni,        // Async. reset, active low

ParseResult:
UPD HdlIdDef@@NumOutEps to NumOutEps
    INS HdlOp@@PARAMETRIZATION to NumOutEps
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: int
            HdlOp: MAP_ASSOCIATION
                list: ops
                    HdlValueId: signed

UPD HdlIdDef@@NumInEps to NumInEps
    INS HdlOp@@PARAMETRIZATION to NumInEps
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: int
            HdlOp: MAP_ASSOCIATION
                list: ops
                    HdlValueId: signed

UPD HdlIdDef@@MaxPktSizeByte to MaxPktSizeByte
    INS HdlOp@@PARAMETRIZATION to MaxPktSizeByte
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: int
            HdlOp: MAP_ASSOCIATION
                list: ops
                    HdlValueId: signed

UPD HdlIdDef@@PktW to PktW
    INS HdlOp@@PARAMETRIZATION to PktW
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: int
            HdlOp: MAP_ASSOCIATION
                list: ops
                    HdlValueId: signed


CommitId: 3e6d1bbeb6b81055b0493d20cd012ab7a292d534
[i2c, rtl] Issue #1662 fix and FIFO watermarks cleared after reset
--- a/hw/ip/i2c/rtl/i2c_core.sv
+++ b/hw/ip/i2c/rtl/i2c_core.sv
@@ -85,6 +85,11 @@ module  i2c_core (
   logic        rx_fifo_rready;
   logic [7:0]  rx_fifo_rdata;
 
+  logic        fmt_watermark_d;
+  logic        fmt_watermark_q;
+  logic        rx_watermark_d;
+  logic        rx_watermark_q;
+
   logic        host_idle;
   logic        target_idle;
 

ParseResult:
INS HdlIdDef@@fmt_watermark_d to objs
HdlIdDef: fmt_watermark_d
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

INS HdlIdDef@@fmt_watermark_q to objs
HdlIdDef: fmt_watermark_q
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

INS HdlIdDef@@rx_watermark_d to objs
HdlIdDef: rx_watermark_d
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

INS HdlIdDef@@rx_watermark_q to objs
HdlIdDef: rx_watermark_q
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL


CommitId: 91a2335db7c362ea12962a6d0ccc6f589c1d01a3
[sysrst_ctrl] cleaned up unused lint errors
--- a/hw/ip/sysrst_ctrl/rtl/sysrst_ctrl_timerfsm.sv
+++ b/hw/ip/sysrst_ctrl/rtl/sysrst_ctrl_timerfsm.sv
@@ -20,7 +20,7 @@ module sysrst_ctrl_timerfsm #(
 
   logic trigger_q;
   logic trigger_h2l, trigger_l2h, trigger_h2h, trigger_l2l;
-  logic trigger_tgl, trigger_sty;
+  //logic trigger_tgl, trigger_sty;
 
   logic [TIMERBIT-1:0] timer_cnt_d, timer_cnt_q;
   logic timer_cnt_clr, timer_cnt_en;

ParseResult:
DEL HdlIdDef@@trigger_tgl from objs
HdlIdDef: trigger_tgl
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

DEL HdlIdDef@@trigger_sty from objs
HdlIdDef: trigger_sty
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL


CommitId: 91a2335db7c362ea12962a6d0ccc6f589c1d01a3
[sysrst_ctrl] cleaned up unused lint errors
--- a/hw/ip/sysrst_ctrl/rtl/sysrst_ctrl_timerfsm.sv
+++ b/hw/ip/sysrst_ctrl/rtl/sysrst_ctrl_timerfsm.sv
@@ -37,8 +37,8 @@ module sysrst_ctrl_timerfsm #(
   assign trigger_l2h = (trigger_q == 1'b0) && (trigger_i == 1'b1);
   assign trigger_h2h = (trigger_q == 1'b1) && (trigger_i == 1'b1);
   assign trigger_l2l = (trigger_q == 1'b0) && (trigger_i == 1'b0);
-  assign trigger_tgl = trigger_q != trigger_i;
-  assign trigger_sty = trigger_q == trigger_i;
+  //assign trigger_tgl = trigger_q != trigger_i;
+  //assign trigger_sty = trigger_q == trigger_i;
 
   //three-state FSM
   //IDLE->WAITL2H->DONEL2H or IDLE->WAITH2L->DONEH2L
ParseResult:
DEL HdlStmAssign@@ from objs
HdlStmAssign
    HdlOp: NE
        list: ops
            HdlValueId: trigger_q
            HdlValueId: trigger_i
    HdlValueId: trigger_tgl

DEL HdlStmAssign@@ from objs
HdlStmAssign
    HdlOp: EQ
        list: ops
            HdlValueId: trigger_q
            HdlValueId: trigger_i
    HdlValueId: trigger_sty


CommitId: e1f36c3d2433c9003cf0405877e7fe23f4ee04a3
Update pulp_riscv_dbg to pulp-platform/riscv-dbg@811b2d7
--- a/hw/vendor/pulp_riscv_dbg/src/dm_mem.sv
+++ b/hw/vendor/pulp_riscv_dbg/src/dm_mem.sv
@@ -140,7 +140,7 @@ module dm_mem #(
     case (state_q)
       Idle: begin
         cmdbusy_o = 1'b0;
-        if (cmd_valid_i && halted_q_aligned[hartsel]) begin
+        if (cmd_valid_i && halted_q_aligned[hartsel] && !unsupported_command) begin
           // give the go signal
           state_d = Go;
         end else if (cmd_valid_i) begin
ParseResult:
UPD HdlStmIf@@ to 
    INS HdlOp@@AND_LOG to 
    UPD HdlOp@@AND_LOG to AND_LOG
        INS list@@ops to AND_LOG
        INS HdlOp@@NEG_LOG to ops
        HdlOp: NEG_LOG
            list: ops
                HdlValueId: unsupported_command

UPD HdlStmIf@@ to 
    MOV HdlOp@@AND_LOG to 
    HdlOp: AND_LOG
        list: ops
            HdlValueId: cmd_valid_i
            HdlOp: INDEX
                list: ops
                    HdlValueId: halted_q_aligned
                    HdlValueId: hartsel


CommitId: fc7332179ae71a31c6734d5038569b5fdca4d838
Update pulp_riscv_dbg to pulp-platform/riscv-dbg@834853c
--- a/hw/vendor/pulp_riscv_dbg/debug_rom/debug_rom.sv
+++ b/hw/vendor/pulp_riscv_dbg/debug_rom/debug_rom.sv
@@ -25,12 +25,12 @@ module debug_rom (
 
   const logic [RomSize-1:0][63:0] mem = {
     64'h00000000_7b200073,
-    64'h7b302573_7b202473,
+    64'h7b202473_7b302573,
     64'h10852423_f1402473,
-    64'ha85ff06f_7b302573,
-    64'h7b202473_10052223,
-    64'h00100073_7b302573,
-    64'h7b202473_10052623,
+    64'ha85ff06f_7b202473,
+    64'h7b302573_10052223,
+    64'h00100073_7b202473,
+    64'h7b302573_10052623,
     64'h00c51513_00c55513,
     64'h00000517_fd5ff06f,
     64'hfa041ce3_00247413,
ParseResult:
UPD HdlIdDef@@mem to mem
    UPD HdlOp@@CONCAT to CONCAT
        UPD HdlOp@@CONCAT to CONCAT
            UPD HdlOp@@CONCAT to CONCAT
                UPD HdlOp@@CONCAT to CONCAT
                    UPD HdlOp@@CONCAT to CONCAT
                        UPD HdlOp@@CONCAT to CONCAT
                            UPD HdlOp@@CONCAT to CONCAT
                                UPD HdlOp@@CONCAT to CONCAT
                                    UPD HdlOp@@CONCAT to CONCAT
                                        UPD HdlOp@@CONCAT to CONCAT
                                            UPD HdlOp@@CONCAT to CONCAT
                                                UPD HdlOp@@CONCAT to CONCAT
                                                    UPD HdlOp@@CONCAT to CONCAT
                                                        UPD HdlValueInt@@7b20247310052623 to 7b30257310052623
                                                        UPD HdlOp@@CONCAT to CONCAT
                                                            UPD HdlValueInt@@001000737b302573 to 001000737b202473
                                                            UPD HdlOp@@CONCAT to CONCAT
                                                                UPD HdlValueInt@@7b20247310052223 to 7b30257310052223
                                                                UPD HdlOp@@CONCAT to CONCAT
                                                                    UPD HdlValueInt@@a85ff06f7b302573 to a85ff06f7b202473
                                                                    UPD HdlOp@@CONCAT to CONCAT
                                                                        UPD HdlOp@@CONCAT to CONCAT
                                                                            UPD HdlValueInt@@7b3025737b202473 to 7b2024737b302573


CommitId: d2e1184308b9582551252d1135a126ea558a6ab8
Revert "[usbdev] Fixes for I/O modes and expand their tests"
--- a/hw/top_earlgrey/rtl/top_earlgrey_nexysvideo.sv
+++ b/hw/top_earlgrey/rtl/top_earlgrey_nexysvideo.sv
@@ -60,9 +60,9 @@ module top_earlgrey_nexysvideo #(
   logic [padctrl_reg_pkg::NMioPads-1:0] mio_out_core, mio_out_padring;
   logic [padctrl_reg_pkg::NMioPads-1:0] mio_oe_core, mio_oe_padring;
   logic [padctrl_reg_pkg::NMioPads-1:0] mio_in_core, mio_in_padring;
-  logic [padctrl_reg_pkg::NDioPads-1:0] dio_out_core, dio_out_umux, dio_out_padring;
-  logic [padctrl_reg_pkg::NDioPads-1:0] dio_oe_core, dio_oe_umux, dio_oe_padring;
-  logic [padctrl_reg_pkg::NDioPads-1:0] dio_in_core, dio_in_umux, dio_in_padring;
+  logic [padctrl_reg_pkg::NDioPads-1:0] dio_out_core, dio_out_padring;
+  logic [padctrl_reg_pkg::NDioPads-1:0] dio_oe_core, dio_oe_padring;
+  logic [padctrl_reg_pkg::NDioPads-1:0] dio_in_core, dio_in_padring;
 
   padring #(
     // MIOs 31:20 are currently not

ParseResult:
DEL HdlIdDef@@dio_out_umux from objs
HdlIdDef: dio_out_umux
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlOp: SUB
                        list: ops
                            HdlOp: DOUBLE_COLON
                                list: ops
                                    HdlValueId: padctrl_reg_pkg
                                    HdlValueId: NDioPads
                            HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: INTERNAL

DEL HdlIdDef@@dio_oe_umux from objs
HdlIdDef: dio_oe_umux
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlOp: SUB
                        list: ops
                            HdlOp: DOUBLE_COLON
                                list: ops
                                    HdlValueId: padctrl_reg_pkg
                                    HdlValueId: NDioPads
                            HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: INTERNAL

DEL HdlIdDef@@dio_in_umux from objs
HdlIdDef: dio_in_umux
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlOp: SUB
                        list: ops
                            HdlOp: DOUBLE_COLON
                                list: ops
                                    HdlValueId: padctrl_reg_pkg
                                    HdlValueId: NDioPads
                            HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: INTERNAL


CommitId: 2681da7535ead160415065539f471b296a5672a8
[usb] Fix lint errors and warnings, remove inline lint comments
--- a/hw/ip/usb_fs_nb_pe/rtl/usb_fs_tx.sv
+++ b/hw/ip/usb_fs_nb_pe/rtl/usb_fs_tx.sv
@@ -145,7 +145,6 @@ module usb_fs_tx (
     bit_count_d      = bit_count_q;
     test_mode_start  = 0;
 
-
     unique case (state_q)
       Idle : begin
         if (tx_osc_test_mode_i) begin

ParseResult:
UPD HdlStmCase@@state_q to state_q
    INS HdlOp@@ASSIGN to state_q
    HdlOp: ASSIGN
        list: ops
            HdlValueId: state_d
            HdlValueId: Idle


CommitId: 2681da7535ead160415065539f471b296a5672a8
[usb] Fix lint errors and warnings, remove inline lint comments
--- a/hw/ip/usb_fs_nb_pe/rtl/usb_fs_tx.sv
+++ b/hw/ip/usb_fs_nb_pe/rtl/usb_fs_tx.sv
@@ -192,7 +191,8 @@ module usb_fs_tx (
             state_d = Crc161;
             data_payload_d = 0;
             tx_data_get_d = 0;
-            data_shift_reg_d = ~{crc16_q[8], crc16_q[9], crc16_q[10], crc16_q[11], crc16_q[12], crc16_q[13], crc16_q[14], crc16_q[15]};
+            data_shift_reg_d = ~{crc16_q[8],  crc16_q[9],  crc16_q[10], crc16_q[11],
+                                 crc16_q[12], crc16_q[13], crc16_q[14], crc16_q[15]};
             oe_shift_reg_d = 8'b11111111;
             se0_shift_reg_d = 8'b00000000;
           end

ParseResult:
UPD HdlStmCase@@state_q to state_q
    INS HdlOp@@ASSIGN to state_q
    HdlOp: ASSIGN
        list: ops
            HdlValueId: state_d
            HdlValueId: Idle


CommitId: 2681da7535ead160415065539f471b296a5672a8
[usb] Fix lint errors and warnings, remove inline lint comments
--- a/hw/ip/usb_fs_nb_pe/rtl/usb_fs_tx.sv
+++ b/hw/ip/usb_fs_nb_pe/rtl/usb_fs_tx.sv
@@ -204,7 +204,8 @@ module usb_fs_tx (
       Crc161 : begin
         if (byte_strobe_q) begin
           state_d = Eop;
-          data_shift_reg_d = ~{crc16_q[0], crc16_q[1], crc16_q[2], crc16_q[3], crc16_q[4], crc16_q[5], crc16_q[6], crc16_q[7]};
+          data_shift_reg_d = ~{crc16_q[0], crc16_q[1], crc16_q[2], crc16_q[3],
+                               crc16_q[4], crc16_q[5], crc16_q[6], crc16_q[7]};
           oe_shift_reg_d = 8'b11111111;
           se0_shift_reg_d = 8'b00000000;
         end

ParseResult:
UPD HdlStmCase@@state_q to state_q
    INS HdlOp@@ASSIGN to state_q
    HdlOp: ASSIGN
        list: ops
            HdlValueId: state_d
            HdlValueId: Idle


CommitId: 2681da7535ead160415065539f471b296a5672a8
[usb] Fix lint errors and warnings, remove inline lint comments
--- a/hw/ip/usb_fs_nb_pe/rtl/usb_fs_tx.sv
+++ b/hw/ip/usb_fs_nb_pe/rtl/usb_fs_tx.sv
@@ -229,6 +230,8 @@ module usb_fs_tx (
           se0_shift_reg_d  = 8'b00000000;
         end
       end
+
+      default: state_d = Idle;
     endcase
 
     // Logic closely coupled to the FSM
ParseResult:
UPD HdlStmCase@@state_q to state_q
    INS HdlOp@@ASSIGN to state_q
    HdlOp: ASSIGN
        list: ops
            HdlValueId: state_d
            HdlValueId: Idle


CommitId: 19be7e21350737e08cfe20e56bf4e1f06d37df45
[i2c, rtl] Loopback test and other changes
--- a/hw/ip/i2c/rtl/i2c_fsm.sv
+++ b/hw/ip/i2c/rtl/i2c_fsm.sv
@@ -66,6 +66,8 @@ module i2c_fsm (
   input logic [6:0] target_address1_i,
   input logic [6:0] target_mask1_i,
 
+  output logic stretch_stop_clr_o,       // hardware to deassert stretch_stop bit
+
   output logic event_nak_o,              // target didn't Ack when expected
   output logic event_scl_interference_o, // other device forcing SCL low
   output logic event_sda_interference_o, // other device forcing SDA low

ParseResult:
INS HdlIdDef@@stretch_stop_clr_o to ports
HdlIdDef: stretch_stop_clr_o
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: OUT


CommitId: 19be7e21350737e08cfe20e56bf4e1f06d37df45
[i2c, rtl] Loopback test and other changes
--- a/hw/ip/i2c/rtl/i2c_fsm.sv
+++ b/hw/ip/i2c/rtl/i2c_fsm.sv
@@ -115,12 +117,14 @@ module i2c_fsm (
   logic [7:0]  input_byte;    // register for reads from host
   logic        input_byte_clr;// clear input_byte contents
   logic [31:0] scl_high_cnt;  // counter for continuously released scl_i
+  logic        addr_stop;     // indicates stretch_stop and stretch_en_addr are both asserted
+  logic        stretch_stop_clr;
 
   // Target bit counter variables
   logic [3:0]  bit_idx;       // bit index including ack/nack
   logic        bit_ack;       // indicates ACK bit been sent or received
   logic        rw_bit;        // indicates host wants to read (1) or write (0)
-  logic        host_ack;      // indicates host acqnowledged transmitted byte
+  logic        host_ack;      // indicates host acknowledged transmitted byte
 
   // Clock counter implementation
   typedef enum logic [3:0] {

ParseResult:
INS HdlIdDef@@addr_stop to objs
HdlIdDef: addr_stop
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

INS HdlIdDef@@stretch_stop_clr to objs
HdlIdDef: stretch_stop_clr
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL


CommitId: 19be7e21350737e08cfe20e56bf4e1f06d37df45
[i2c, rtl] Loopback test and other changes
--- a/hw/ip/i2c/rtl/i2c_fsm.sv
+++ b/hw/ip/i2c/rtl/i2c_fsm.sv
@@ -266,16 +270,17 @@ module i2c_fsm (
   end
 
   // Bit counter on the target side
-  assign bit_ack = (bit_idx == 4'd8) && !start_det; // ack
+  assign bit_ack = (bit_idx == 4'd9) && !start_det; // ack
 
   // Increment counter on negative SCL edge
   always_ff @ (posedge clk_i or negedge rst_ni) begin : tgt_bit_counter
     if (!rst_ni) begin
       bit_idx <= 4'd0;
-    end else if (start_det || bit_ack) begin
+    end else if (start_det) begin
       bit_idx <= 4'd0;
     end else if (scl_i_q && !scl_i) begin
-      bit_idx <= bit_idx + 1'b1;
+      if (bit_ack) bit_idx <= 4'd0;
+      else bit_idx <= bit_idx + 1'b1;
     end else begin
       bit_idx <= bit_idx;
     end

ParseResult:
INS HdlStmAssign@@ to objs

UPD HdlStmAssign@@ to 
    INS HdlOp@@AND_LOG to 
    INS HdlValueId@@bit_ack to 
    UPD HdlOp@@AND_LOG to AND_LOG
        INS list@@ops to AND_LOG
        INS HdlOp@@EQ to ops
        HdlOp: EQ
            list: ops
                HdlValueId: bit_idx
                HdlValueInt: 9

UPD HdlStmAssign@@ to 
    UPD HdlOp@@AND_LOG to AND_LOG
        MOV HdlOp@@NEG_LOG to ops
        HdlOp: NEG_LOG
            list: ops
                HdlValueId: start_det
        DEL HdlOp@@EQ from ops
        HdlOp: EQ
            list: ops
                HdlValueId: bit_idx
                HdlValueInt: 8
        DEL list@@ops from AND_LOG
    DEL HdlOp@@AND_LOG from 
    DEL HdlValueId@@bit_ack from 

UPD HdlStmIf@@ to 
    UPD HdlOp@@OR_LOG to OR_LOG
        MOV HdlValueId@@start_det to ops
        HdlValueId: start_det
        DEL HdlValueId@@bit_ack from ops
        DEL list@@ops from OR_LOG
    DEL HdlOp@@OR_LOG from 

INS HdlStmIf@@ to body

INS HdlStmAssign@@if_true to 
HdlStmAssign: if_true
    HdlValueInt: 0
    HdlValueId: bit_idx

UPD HdlStmAssign@@ to if_false

MOV HdlStmAssign@@ to body
HdlStmAssign
    HdlOp: ADD
        list: ops
            HdlValueId: bit_idx
            HdlValueInt: 1
    HdlValueId: bit_idx

DEL HdlStmAssign@@ from objs


CommitId: 19be7e21350737e08cfe20e56bf4e1f06d37df45
[i2c, rtl] Loopback test and other changes
--- a/hw/ip/i2c/rtl/i2c_fsm.sv
+++ b/hw/ip/i2c/rtl/i2c_fsm.sv
@@ -318,6 +323,17 @@ module i2c_fsm (
     end
   end
 
+  // Deasserting stretch_stop bit after the first target address match
+  always_ff @ (posedge clk_i or negedge rst_ni) begin : stretch_addr_sp
+    if (!rst_ni) begin
+      stretch_stop_clr <= 1'b0;
+    end else if (addr_stop) begin
+      stretch_stop_clr <= 1'b1;
+    end
+  end
+
+  assign stretch_stop_clr_o = stretch_stop_clr;
+
   // State definitions
   typedef enum logic [5:0] {
     Idle, PopFmtFifo, SetupStart, HoldStart, SetupStop, HoldStop,

ParseResult:
INS HdlStmProcess@@ to objs
HdlStmProcess
    list: sensitivity
        HdlOp: RISING
            list: ops
                HdlValueId: clk_i
        HdlOp: FALLING
            list: ops
                HdlValueId: rst_ni
    HdlStmBlock: SEQ
        list: body
            HdlStmIf
                HdlOp: NEG_LOG
                    list: ops
                        HdlValueId: rst_ni
                HdlStmBlock: SEQ
                    list: body
                        HdlStmAssign
                            HdlValueInt: 0
                            HdlValueId: stretch_stop_clr
                list: elifs
                    tuple
                        HdlValueId: addr_stop
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmAssign
                                    HdlValueInt: 1
                                    HdlValueId: stretch_stop_clr
    HdlStmProcessTriggerConstrain: FF

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlValueId: stretch_stop_clr
    HdlValueId: stretch_stop_clr_o


CommitId: 19be7e21350737e08cfe20e56bf4e1f06d37df45
[i2c, rtl] Loopback test and other changes
--- a/hw/ip/i2c/rtl/i2c_fsm.sv
+++ b/hw/ip/i2c/rtl/i2c_fsm.sv
@@ -433,7 +449,7 @@ module i2c_fsm (
         host_idle_o = 1'b0;
         sda_temp = 1'b1;
         scl_temp = 1'b1;
-        if (!sda_i && !fmt_flag_nak_ok_i) event_nak_o = 1'b1;
+        if (sda_i && !fmt_flag_nak_ok_i) event_nak_o = 1'b1;
         if ((stretch > stretch_timeout_i) && timeout_enable_i) begin
           event_stretch_timeout_o = 1'b1;
         end

ParseResult:
UPD HdlStmProcess@@ to 
    INS HdlStmProcessTriggerConstrain@@COMB to 

UPD HdlStmCase@@state_q to state_q
    INS HdlStmCaseType@@CASE to state_q
    INS HdlValueId@@state_q to state_q
    INS HdlStmCaseUniqConstrain@@UNIQUE to state_q
    INS tuple@@ to cases
    tuple
        HdlValueId: AcquireStart
        HdlStmBlock: SEQ
            list: body
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: target_idle_o
                        HdlValueInt: 0
    INS tuple@@ to cases
    tuple
        HdlValueId: StretchTransmitWait
        HdlStmBlock: SEQ
            list: body
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: target_idle_o
                        HdlValueInt: 0

UPD HdlStmIf@@ to 
    UPD HdlOp@@AND_LOG to AND_LOG
        UPD HdlOp@@NEG_LOG to NEG_LOG
            MOV HdlValueId@@sda_i to ops
            HdlValueId: sda_i
            DEL list@@ops from NEG_LOG
        DEL HdlOp@@NEG_LOG from ops

UPD HdlStmCase@@state_q to state_q
    DEL HdlStmCaseType@@CASE from state_q
    DEL HdlValueId@@state_q from state_q
    DEL HdlStmCaseUniqConstrain@@UNIQUE from state_q

UPD HdlStmProcess@@ to 
    DEL HdlStmProcessTriggerConstrain@@COMB from 


CommitId: 19be7e21350737e08cfe20e56bf4e1f06d37df45
[i2c, rtl] Loopback test and other changes
--- a/hw/ip/i2c/rtl/i2c_fsm.sv
+++ b/hw/ip/i2c/rtl/i2c_fsm.sv
@@ -546,6 +562,10 @@ module i2c_fsm (
         else scl_temp = 1'b0;
         fmt_fifo_rready_o = 1'b1;
       end
+      // AcquireStart: hold start condition
+      AcquireStart : begin
+        target_idle_o = 1'b0;
+      end
       // AddrRead: read and compare target address
       AddrRead : begin
         target_idle_o = 1'b0;

ParseResult:
UPD HdlStmProcess@@ to 
    INS HdlStmProcessTriggerConstrain@@COMB to 

UPD HdlStmCase@@state_q to state_q
    INS HdlStmCaseType@@CASE to state_q
    INS HdlValueId@@state_q to state_q
    INS HdlStmCaseUniqConstrain@@UNIQUE to state_q
    INS tuple@@ to cases
    tuple
        HdlValueId: AcquireStart
        HdlStmBlock: SEQ
            list: body
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: target_idle_o
                        HdlValueInt: 0
    INS tuple@@ to cases
    tuple
        HdlValueId: StretchTransmitWait
        HdlStmBlock: SEQ
            list: body
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: target_idle_o
                        HdlValueInt: 0

UPD HdlStmCase@@state_q to state_q
    DEL HdlStmCaseType@@CASE from state_q
    DEL HdlValueId@@state_q from state_q
    DEL HdlStmCaseUniqConstrain@@UNIQUE from state_q

UPD HdlStmProcess@@ to 
    DEL HdlStmProcessTriggerConstrain@@COMB from 


CommitId: 19be7e21350737e08cfe20e56bf4e1f06d37df45
[i2c, rtl] Loopback test and other changes
--- a/hw/ip/i2c/rtl/i2c_fsm.sv
+++ b/hw/ip/i2c/rtl/i2c_fsm.sv
@@ -648,6 +668,10 @@ module i2c_fsm (
         target_idle_o = 1'b0;
         scl_temp = 1'b0;
       end
+      // StretchTransmitWait: target waits for host to pull SCL low before stretching the clock
+      StretchTransmitWait : begin
+        target_idle_o = 1'b0;
+      end
       // StretchTransmit: target stretches the clock after transmitting a byte
       StretchTransmit : begin
         target_idle_o = 1'b0;

ParseResult:
UPD HdlStmProcess@@ to 
    INS HdlStmProcessTriggerConstrain@@COMB to 

UPD HdlStmCase@@state_q to state_q
    INS HdlStmCaseType@@CASE to state_q
    INS HdlValueId@@state_q to state_q
    INS HdlStmCaseUniqConstrain@@UNIQUE to state_q
    INS tuple@@ to cases
    tuple
        HdlValueId: AcquireStart
        HdlStmBlock: SEQ
            list: body
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: target_idle_o
                        HdlValueInt: 0
    INS tuple@@ to cases
    tuple
        HdlValueId: StretchTransmitWait
        HdlStmBlock: SEQ
            list: body
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: target_idle_o
                        HdlValueInt: 0

UPD HdlStmCase@@state_q to state_q
    DEL HdlStmCaseType@@CASE from state_q
    DEL HdlValueId@@state_q from state_q
    DEL HdlStmCaseUniqConstrain@@UNIQUE from state_q

UPD HdlStmProcess@@ to 
    DEL HdlStmProcessTriggerConstrain@@COMB from 


CommitId: 19be7e21350737e08cfe20e56bf4e1f06d37df45
[i2c, rtl] Loopback test and other changes
--- a/hw/ip/i2c/rtl/i2c_fsm.sv
+++ b/hw/ip/i2c/rtl/i2c_fsm.sv
@@ -705,6 +729,7 @@ module i2c_fsm (
     log_stop = 1'b0;
     restart = 1'b0;
     input_byte_clr = 1'b0;
+    addr_stop = 1'b0;
 
     unique case (state_q)
       // Idle: initial state, SDA and SCL are released (high)

ParseResult:
UPD HdlStmProcess@@ to 
    INS HdlStmProcessTriggerConstrain@@COMB to 

UPD HdlStmCase@@state_q to state_q
    INS HdlStmCaseType@@CASE to state_q
    INS HdlValueId@@state_q to state_q
    INS HdlStmCaseUniqConstrain@@UNIQUE to state_q
    INS tuple@@ to cases
    tuple
        HdlValueId: AcquireStart
        HdlStmBlock: SEQ
            list: body
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: target_idle_o
                        HdlValueInt: 0
    INS tuple@@ to cases
    tuple
        HdlValueId: StretchTransmitWait
        HdlStmBlock: SEQ
            list: body
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: target_idle_o
                        HdlValueInt: 0

UPD HdlStmCase@@state_q to state_q
    DEL HdlStmCaseType@@CASE from state_q
    DEL HdlValueId@@state_q from state_q
    DEL HdlValueId@@AddrAckWait from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases
    DEL HdlStmCaseUniqConstrain@@UNIQUE from state_q

UPD HdlStmProcess@@ to 
    DEL HdlStmProcessTriggerConstrain@@COMB from 


CommitId: 19be7e21350737e08cfe20e56bf4e1f06d37df45
[i2c, rtl] Loopback test and other changes
--- a/hw/ip/i2c/rtl/i2c_fsm.sv
+++ b/hw/ip/i2c/rtl/i2c_fsm.sv
@@ -715,10 +740,7 @@ module i2c_fsm (
           else state_d = Active;
         end else if (target_enable_i) begin
           if (!start_det) state_d = Idle;
-          else begin
-            state_d = AddrRead;
-            input_byte_clr = 1'b1;
-          end
+          else state_d = AcquireStart;
         end
       end
 

ParseResult:
UPD HdlStmProcess@@ to 
    INS HdlStmProcessTriggerConstrain@@COMB to 

UPD HdlStmCase@@state_q to state_q
    INS HdlStmCaseType@@CASE to state_q
    INS HdlValueId@@state_q to state_q
    INS HdlStmCaseUniqConstrain@@UNIQUE to state_q
    INS tuple@@ to cases
    tuple
        HdlValueId: AcquireStart
        HdlStmBlock: SEQ
            list: body
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: target_idle_o
                        HdlValueInt: 0
    INS tuple@@ to cases
    tuple
        HdlValueId: StretchTransmitWait
        HdlStmBlock: SEQ
            list: body
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: target_idle_o
                        HdlValueInt: 0

UPD HdlStmIf@@ to 
    MOV tuple@@ to elifs
    tuple
        HdlValueId: target_enable_i
        HdlStmBlock: SEQ
            list: body
                HdlStmIf
                    HdlOp: NEG_LOG
                        list: ops
                            HdlValueId: start_det
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: state_d
                            HdlValueId: Idle
                    list: elifs
                    HdlStmBlock: SEQ
                        list: body
                            HdlOp: ASSIGN
                                list: ops
                                    HdlValueId: state_d
                                    HdlValueId: AddrRead
                            HdlOp: ASSIGN
                                list: ops
                                    HdlValueId: input_byte_clr
                                    HdlValueInt: 1
    UPD HdlValueId@@target_enable_i to AcquireStart

INS HdlStmIf@@ to body

UPD HdlStmIf@@ to 
    MOV HdlOp@@NEG_LOG to 
    HdlOp: NEG_LOG
        list: ops
            HdlValueId: start_det
    MOV HdlOp@@ASSIGN to 
    HdlOp: ASSIGN
        list: ops
            HdlValueId: state_d
            HdlValueId: Idle
    MOV list@@elifs to 
    list: elifs

UPD HdlStmCase@@state_q to state_q
    DEL HdlStmCaseType@@CASE from state_q
    DEL HdlValueId@@state_q from state_q
    DEL HdlValueId@@AddrAckWait from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases
    DEL HdlStmCaseUniqConstrain@@UNIQUE from state_q

UPD HdlStmProcess@@ to 
    DEL HdlStmProcessTriggerConstrain@@COMB from 


CommitId: 19be7e21350737e08cfe20e56bf4e1f06d37df45
[i2c, rtl] Loopback test and other changes
--- a/hw/ip/i2c/rtl/i2c_fsm.sv
+++ b/hw/ip/i2c/rtl/i2c_fsm.sv
@@ -981,6 +1003,14 @@ module i2c_fsm (
         end
       end
 
+      // AcquireStart: hold start condition
+      AcquireStart : begin
+        if (scl_i_q && !scl_i) begin
+          state_d = AddrRead;
+          input_byte_clr = 1'b1;
+        end
+      end
+
       // AddrRead: read and compare target address
       AddrRead : begin
         if (bit_ack) begin

ParseResult:
UPD HdlStmProcess@@ to 
    INS HdlStmProcessTriggerConstrain@@COMB to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: addr_stop
                HdlValueInt: 0

UPD HdlStmCase@@state_q to state_q
    INS HdlStmCaseType@@CASE to state_q
    INS HdlValueId@@state_q to state_q
    INS HdlStmCaseUniqConstrain@@UNIQUE to state_q
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS HdlValueId@@AddrAckWait to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@StretchTransmitWait to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: addr_stop
                HdlValueInt: 0
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmCase@@state_q to state_q
    DEL HdlStmCaseType@@CASE from state_q
    DEL HdlValueId@@state_q from state_q
    DEL HdlValueId@@AddrAckWait from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases
    DEL HdlStmCaseUniqConstrain@@UNIQUE from state_q

UPD HdlStmProcess@@ to 
    DEL HdlStmProcessTriggerConstrain@@COMB from 


CommitId: 19be7e21350737e08cfe20e56bf4e1f06d37df45
[i2c, rtl] Loopback test and other changes
--- a/hw/ip/i2c/rtl/i2c_fsm.sv
+++ b/hw/ip/i2c/rtl/i2c_fsm.sv
@@ -995,8 +1025,13 @@ module i2c_fsm (
       // AddrAckWait: pause before acknowledging
       AddrAckWait : begin
         if (tcount_q == 20'd1) begin
-          if (stretch_en_addr_i) state_d = StretchAddr;
-          else state_d = AddrAckSetup;
+          if (!scl_i) begin
+            if (stretch_en_addr_i && !stretch_stop_i) state_d = StretchAddr;
+            else if (stretch_en_addr_i && stretch_stop_i) begin
+              state_d = AddrAckSetup;
+              addr_stop = 1'b1;
+            end else state_d = AddrAckSetup;
+          end
         end
       end
       // AddrAckSetup: target pulls SDA low while SCL is low

ParseResult:
UPD HdlStmProcess@@ to 
    INS HdlStmProcessTriggerConstrain@@COMB to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: addr_stop
                HdlValueInt: 0

UPD HdlStmCase@@state_q to state_q
    INS HdlStmCaseType@@CASE to state_q
    INS HdlValueId@@state_q to state_q
    INS HdlStmCaseUniqConstrain@@UNIQUE to state_q
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS HdlValueId@@AddrAckWait to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@StretchTransmitWait to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: addr_stop
                HdlValueInt: 0
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

INS HdlStmIf@@ to body

UPD HdlStmIf@@ to 
    MOV HdlOp@@EQ to 
    HdlOp: EQ
        list: ops
            HdlValueId: tcount_q
            HdlValueInt: 1
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL list@@elifs from 

INS HdlStmIf@@ to body

INS HdlStmIf@@ to body

UPD HdlStmIf@@ to 
    MOV HdlOp@@ASSIGN to 
    HdlOp: ASSIGN
        list: ops
            HdlValueId: state_d
            HdlValueId: StretchAddr
    MOV HdlOp@@ASSIGN to 
    HdlOp: ASSIGN
        list: ops
            HdlValueId: state_d
            HdlValueId: AddrAckSetup
    DEL HdlValueId@@stretch_en_addr_i from 
    DEL list@@elifs from 

UPD HdlStmCase@@state_q to state_q
    DEL HdlStmCaseType@@CASE from state_q
    DEL HdlValueId@@state_q from state_q
    DEL HdlValueId@@AddrAckWait from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases
    DEL HdlStmCaseUniqConstrain@@UNIQUE from state_q

DEL HdlStmIf@@ from body

DEL HdlStmIf@@ from body

UPD HdlStmProcess@@ to 
    DEL HdlStmProcessTriggerConstrain@@COMB from 


CommitId: 19be7e21350737e08cfe20e56bf4e1f06d37df45
[i2c, rtl] Loopback test and other changes
--- a/hw/ip/i2c/rtl/i2c_fsm.sv
+++ b/hw/ip/i2c/rtl/i2c_fsm.sv
@@ -1061,7 +1096,7 @@ module i2c_fsm (
       TransmitAck : begin
         if (scl_i) begin
           if (host_ack) begin
-            if (stretch_en_tx_i) state_d = StretchTransmit;
+            if (stretch_en_tx_i) state_d = StretchTransmitWait;
             else state_d = PopTxFifo;
           end else begin
             if (start_det || stop_det) state_d = AcquireSrP;

ParseResult:
UPD HdlStmProcess@@ to 
    INS HdlStmProcessTriggerConstrain@@COMB to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: addr_stop
                HdlValueInt: 0

UPD HdlStmCase@@state_q to state_q
    INS HdlStmCaseType@@CASE to state_q
    INS HdlValueId@@state_q to state_q
    INS HdlStmCaseUniqConstrain@@UNIQUE to state_q
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS HdlValueId@@AddrAckWait to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@StretchTransmitWait to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: addr_stop
                HdlValueInt: 0
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmIf@@ to 
    MOV HdlOp@@ASSIGN to 
    HdlOp: ASSIGN
        list: ops
            HdlValueId: state_d
            HdlValueId: StretchTransmit

UPD HdlStmCase@@state_q to state_q
    DEL HdlStmCaseType@@CASE from state_q
    DEL HdlValueId@@state_q from state_q
    DEL HdlValueId@@AddrAckWait from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases
    DEL HdlStmCaseUniqConstrain@@UNIQUE from state_q

UPD HdlStmProcess@@ to 
    DEL HdlStmProcessTriggerConstrain@@COMB from 


CommitId: 19be7e21350737e08cfe20e56bf4e1f06d37df45
[i2c, rtl] Loopback test and other changes
--- a/hw/ip/i2c/rtl/i2c_fsm.sv
+++ b/hw/ip/i2c/rtl/i2c_fsm.sv
@@ -1094,8 +1129,10 @@ module i2c_fsm (
       // AcquireAckWait: pause before acknowledging
       AcquireAckWait : begin
         if (tcount_q == 20'd1) begin
-          if (stretch_en_acq_i) state_d = StretchAcquire;
-          else state_d = AcquireAckSetup;
+          if (!scl_i) begin
+            if (stretch_en_acq_i) state_d = StretchAcquire;
+            else state_d = AcquireAckSetup;
+          end
         end
       end
       // AcquireAckSetup: target pulls SDA low while SCL is low

ParseResult:
UPD HdlStmProcess@@ to 
    INS HdlStmProcessTriggerConstrain@@COMB to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: addr_stop
                HdlValueInt: 0

UPD HdlStmCase@@state_q to state_q
    INS HdlStmCaseType@@CASE to state_q
    INS HdlValueId@@state_q to state_q
    INS HdlStmCaseUniqConstrain@@UNIQUE to state_q
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS HdlValueId@@AddrAckWait to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@StretchTransmitWait to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: addr_stop
                HdlValueInt: 0
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

INS HdlStmIf@@ to body

UPD HdlStmIf@@ to 
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlStmIf
                HdlValueId: stretch_en_acq_i
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: state_d
                        HdlValueId: StretchAcquire
                list: elifs
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: state_d
                        HdlValueId: AcquireAckSetup
    MOV list@@elifs to 
    list: elifs

UPD HdlStmCase@@state_q to state_q
    DEL HdlStmCaseType@@CASE from state_q
    DEL HdlValueId@@state_q from state_q
    DEL HdlValueId@@AddrAckWait from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases
    DEL HdlStmCaseUniqConstrain@@UNIQUE from state_q

UPD HdlStmProcess@@ to 
    DEL HdlStmProcessTriggerConstrain@@COMB from 


CommitId: 19be7e21350737e08cfe20e56bf4e1f06d37df45
[i2c, rtl] Loopback test and other changes
--- a/hw/ip/i2c/rtl/i2c_fsm.sv
+++ b/hw/ip/i2c/rtl/i2c_fsm.sv
@@ -1137,6 +1174,11 @@ module i2c_fsm (
         else state_d = AcquireAckSetup;
       end
 
+      // StretchTransmitWait: target waits for host to pull SCL low before stretching the clock
+      StretchTransmitWait : begin
+        if (!scl_i) state_d = StretchTransmit;
+      end
+
       // StretchTransmit: target stretches the clock after transmitting a byte
       StretchTransmit : begin
         if (!stretch_stop_i) state_d = StretchTransmit;

ParseResult:
UPD HdlStmProcess@@ to 
    INS HdlStmProcessTriggerConstrain@@COMB to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: addr_stop
                HdlValueInt: 0

UPD HdlStmCase@@state_q to state_q
    INS HdlStmCaseType@@CASE to state_q
    INS HdlValueId@@state_q to state_q
    INS HdlStmCaseUniqConstrain@@UNIQUE to state_q
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS HdlValueId@@AddrAckWait to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@StretchTransmitWait to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: addr_stop
                HdlValueInt: 0
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

INS HdlStmIf@@ to body

UPD HdlStmIf@@ to 
    INS HdlStmBlock@@SEQ to 
    INS list@@elifs to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmIf@@ to 
    INS HdlOp@@NEG_LOG to 
    HdlOp: NEG_LOG
        list: ops
            HdlValueId: scl_i

UPD HdlStmCase@@state_q to state_q
    DEL HdlStmCaseType@@CASE from state_q
    DEL HdlValueId@@state_q from state_q
    DEL HdlValueId@@AddrAckWait from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases
    DEL HdlStmCaseUniqConstrain@@UNIQUE from state_q

UPD HdlStmProcess@@ to 
    DEL HdlStmProcessTriggerConstrain@@COMB from 


CommitId: 19be7e21350737e08cfe20e56bf4e1f06d37df45
[i2c, rtl] Loopback test and other changes
--- a/hw/ip/i2c/rtl/i2c_fsm.sv
+++ b/hw/ip/i2c/rtl/i2c_fsm.sv
@@ -1175,6 +1217,7 @@ module i2c_fsm (
         log_stop = 1'b0;
         restart = 1'b0;
         input_byte_clr = 1'b0;
+        addr_stop = 1'b0;
       end
     endcase
   end
ParseResult:
UPD HdlStmProcess@@ to 
    INS HdlStmProcessTriggerConstrain@@COMB to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: addr_stop
                HdlValueInt: 0

UPD HdlStmCase@@state_q to state_q
    INS HdlStmCaseType@@CASE to state_q
    INS HdlValueId@@state_q to state_q
    INS HdlStmCaseUniqConstrain@@UNIQUE to state_q
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS HdlValueId@@AddrAckWait to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@StretchTransmitWait to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: addr_stop
                HdlValueInt: 0
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmCase@@state_q to state_q
    DEL HdlStmCaseType@@CASE from state_q
    DEL HdlValueId@@state_q from state_q
    DEL HdlValueId@@AddrAckWait from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases
    DEL HdlStmCaseUniqConstrain@@UNIQUE from state_q

UPD HdlStmProcess@@ to 
    DEL HdlStmProcessTriggerConstrain@@COMB from 


