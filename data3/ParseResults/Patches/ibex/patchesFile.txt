CommitId: 7e9c374461e9a878f2f3eab5a6a5431c58973bdb
small fix in lsu but not tested yet because data_err is not connected to the system
--- a/load_store_unit.sv
+++ b/load_store_unit.sv
@@ -329,7 +329,7 @@ module riscv_load_store_unit
 
   assign misaligned_st = data_misaligned_ex_i;
 
-  assign load_err_o    = data_gnt_i && data_err_i && data_we_o;
+  assign load_err_o    = data_gnt_i && data_err_i && ~data_we_o;
   assign store_err_o   = data_gnt_i && data_err_i && data_we_o;
 
   // FSM
ParseResult:
UPD HdlStmAssign@@ to 
    UPD HdlOp@@AND_LOG to AND_LOG
        INS HdlOp@@NEG to ops
        UPD HdlOp@@NEG to NEG
            INS list@@ops to NEG

UPD HdlStmAssign@@ to 
    UPD HdlOp@@AND_LOG to AND_LOG
        MOV HdlValueId@@data_we_o to ops
        HdlValueId: data_we_o


CommitId: 67e74177494e5e577a4b589cd2f2a97f9d3c2c0c
Fix Verible lint issues
--- a/shared/rtl/sim/simulator_ctrl.sv
+++ b/shared/rtl/sim/simulator_ctrl.sv
@@ -38,8 +38,8 @@ module simulator_ctrl #(
   output logic [31:0] rdata_o
 );
 
-  localparam CHAR_OUT_ADDR = 0;
-  localparam SIM_CTRL_ADDR = 2;
+  localparam logic [7:0] CHAR_OUT_ADDR = 8'h0;
+  localparam logic [7:0] SIM_CTRL_ADDR = 8'h2;
 
   logic [7:0] ctrl_addr;
   logic [2:0] sim_finish = 3'b000;

ParseResult:
UPD HdlIdDef@@CHAR_OUT_ADDR to CHAR_OUT_ADDR
    INS HdlOp@@PARAMETRIZATION to CHAR_OUT_ADDR
    INS HdlValueInt@@0 to CHAR_OUT_ADDR
    UPD HdlOp@@PARAMETRIZATION to PARAMETRIZATION
        INS list@@ops to PARAMETRIZATION
        INS HdlValueId@@logic to ops
        INS HdlOp@@DOWNTO to ops
        UPD HdlOp@@DOWNTO to DOWNTO
            INS list@@ops to DOWNTO
            INS HdlValueInt@@7 to ops

UPD HdlIdDef@@SIM_CTRL_ADDR to SIM_CTRL_ADDR
    INS HdlOp@@PARAMETRIZATION to SIM_CTRL_ADDR
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 7
                    HdlValueInt: 0

UPD HdlIdDef@@CHAR_OUT_ADDR to CHAR_OUT_ADDR
    MOV HdlValueInt@@0 to CHAR_OUT_ADDR
    HdlValueInt: 0


CommitId: 67e74177494e5e577a4b589cd2f2a97f9d3c2c0c
Fix Verible lint issues
--- a/shared/rtl/sim/simulator_ctrl.sv
+++ b/shared/rtl/sim/simulator_ctrl.sv
@@ -81,6 +81,7 @@ module simulator_ctrl #(
               sim_finish <= 3'b001;
             end
           end
+          default: ;
         endcase
       end
     end

ParseResult:
INS HdlStmNop@@default to ctrl_addr


CommitId: b94961402cab9729cac4b0692a0710a840b108f0
[RTL] Fix ebreak behaviour in U-mode
--- a/rtl/ibex_cs_registers.sv
+++ b/rtl/ibex_cs_registers.sv
@@ -67,6 +67,7 @@ module ibex_cs_registers #(
     output logic [31:0]          csr_depc_o,
     output logic                 debug_single_step_o,
     output logic                 debug_ebreakm_o,
+    output logic                 debug_ebreaku_o,
 
     input  logic [31:0]          pc_if_i,
     input  logic [31:0]          pc_id_i,

ParseResult:
INS HdlIdDef@@debug_ebreaku_o to ports
HdlIdDef: debug_ebreaku_o
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: OUT


CommitId: b94961402cab9729cac4b0692a0710a840b108f0
[RTL] Fix ebreak behaviour in U-mode
--- a/rtl/ibex_cs_registers.sv
+++ b/rtl/ibex_cs_registers.sv
@@ -570,6 +571,7 @@ module ibex_cs_registers #(
   assign csr_mstatus_tw_o    = mstatus_q.tw;
   assign debug_single_step_o = dcsr_q.step;
   assign debug_ebreakm_o     = dcsr_q.ebreakm;
+  assign debug_ebreaku_o     = dcsr_q.ebreaku;
 
   assign irq_pending_o = csr_msip_o | csr_mtip_o | csr_meip_o | (|csr_mfip_o);
 
ParseResult:
INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: DOT
        list: ops
            HdlValueId: dcsr_q
            HdlValueId: ebreaku
    HdlValueId: debug_ebreaku_o


CommitId: 7aa87156d317a42d4f748c6afe9db3bf72670233
[RTL] Fix ebreak and cleanup debug
--- a/rtl/ibex_controller.sv
+++ b/rtl/ibex_controller.sv
@@ -190,7 +190,12 @@ module ibex_controller (
   // Interrupts //
   ////////////////
 
-  assign enter_debug_mode = debug_req_i & ~debug_mode_q;
+  // Enter debug mode due to an external debug_req_i or because the core is in
+  // single step mode (dcsr.step == 1). Single step must be qualified with
+  // instruction valid otherwise the core will immediately enter debug mode
+  // due to a recently flushed IF (or a delay in an instruction returning from
+  // memory) before it has had anything to single step.
+  assign enter_debug_mode = (debug_req_i | (debug_single_step_i & instr_valid_i)) & ~debug_mode_q;
 
   // interrupts including NMI are ignored while in debug mode [Debug Spec v0.13.2, p.39]
   assign handle_irq       = ~debug_mode_q &

ParseResult:
INS HdlStmAssign@@ to objs

UPD HdlStmAssign@@ to 
    UPD HdlOp@@AND to AND
        MOV HdlOp@@NEG to ops
        HdlOp: NEG
            list: ops
                HdlValueId: debug_mode_q
        DEL HdlValueId@@debug_req_i from ops
        DEL list@@ops from AND
    DEL HdlOp@@AND from 
    DEL HdlValueId@@enter_debug_mode from 

DEL HdlStmAssign@@ from objs


CommitId: 7aa87156d317a42d4f748c6afe9db3bf72670233
[RTL] Fix ebreak and cleanup debug
--- a/rtl/ibex_controller.sv
+++ b/rtl/ibex_controller.sv
@@ -316,8 +321,9 @@ module ibex_controller (
         // enter debug mode
         if (enter_debug_mode) begin
           ctrl_fsm_ns = DBG_TAKEN_IF;
+          // Halt IF only for now, ID will be flushed in DBG_TAKEN_IF as the
+          // ID state is needed for correct debug mode entry
           halt_if     = 1'b1;
-          flush_id    = 1'b1;
         end
       end
 

ParseResult:
UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: flush_id
                HdlValueInt: 1


CommitId: 7aa87156d317a42d4f748c6afe9db3bf72670233
[RTL] Fix ebreak and cleanup debug
--- a/rtl/ibex_controller.sv
+++ b/rtl/ibex_controller.sv
@@ -346,32 +352,21 @@ module ibex_controller (
             perf_jump_o    = jump_set_i;
           end
 
-
-          // stall IF stage to not starve debug and interrupt requests, these just
-          // need to wait until after the current (multicycle) instruction
+          // If entering debug mode or handling an IRQ the core needs to wait
+          // until the current instruction has finished executing. Stall IF
+          // during that time.
           if ((enter_debug_mode || handle_irq) && stall) begin
             halt_if = 1'b1;
           end
-
-          // single stepping:
-          // execute a single instruction and then enter debug mode, in case of exceptions,
-          // set registers but do not jump into handler [Debug Spec v0.13.2, p.44]
-          if (debug_single_step_i && !debug_mode_q) begin
-            halt_if = 1'b1;
-
-            if (!special_req && !stall) begin
-              ctrl_fsm_ns = DBG_TAKEN_IF;
-            end
-          end
         end // instr_valid_i
 
         if (!stall && !special_req) begin
           if (enter_debug_mode) begin
             // enter debug mode
             ctrl_fsm_ns = DBG_TAKEN_IF;
+            // Halt IF only for now, ID will be flushed in DBG_TAKEN_IF as the
+            // ID state is needed for correct debug mode entry
             halt_if     = 1'b1;
-            flush_id    = 1'b1;
-
           end else if (handle_irq) begin
             // handle interrupt (not in debug mode)
             ctrl_fsm_ns = IRQ_TAKEN;

ParseResult:
UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: flush_id
                HdlValueInt: 1

DEL HdlStmIf@@ from body
HdlStmIf
    HdlOp: AND_LOG
        list: ops
            HdlValueId: debug_single_step_i
            HdlOp: NEG_LOG
                list: ops
                    HdlValueId: debug_mode_q
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: halt_if
                    HdlValueInt: 1
            HdlStmIf
                HdlOp: AND_LOG
                    list: ops
                        HdlOp: NEG_LOG
                            list: ops
                                HdlValueId: special_req
                        HdlOp: NEG_LOG
                            list: ops
                                HdlValueId: stall
                HdlStmBlock: SEQ
                    list: body
                        HdlOp: ASSIGN
                            list: ops
                                HdlValueId: ctrl_fsm_ns
                                HdlValueId: DBG_TAKEN_IF
                list: elifs
    list: elifs


CommitId: 7aa87156d317a42d4f748c6afe9db3bf72670233
[RTL] Fix ebreak and cleanup debug
--- a/rtl/ibex_controller.sv
+++ b/rtl/ibex_controller.sv
@@ -499,7 +496,7 @@ module ibex_controller (
                                                         EXC_CAUSE_ECALL_UMODE;
 
           end else if (ebrk_insn) begin
-            if (debug_mode_q) begin
+            if (debug_mode_q | debug_ebreakm_i) begin
               /*
                * EBREAK in debug mode re-enters debug mode
                *

ParseResult:
UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD list@@ops to elifs
            MOV list@@ops to ASSIGN
            list: ops
                HdlValueId: csr_save_cause_o
                HdlValueInt: 0
            DEL HdlValueId@@csr_save_cause_o from ops
            DEL HdlValueInt@@0 from ops
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: csr_save_id_o
                HdlValueInt: 0
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@csr_save_id_o to flush_id
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: pc_set_o
                HdlValueInt: 0
        DEL HdlOp@@ASSIGN from body
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: ctrl_fsm_ns
                HdlValueId: DBG_TAKEN_ID
        DEL list@@body from SEQ
    MOV HdlValueId@@debug_mode_q to 
    HdlValueId: debug_mode_q
    DEL HdlValueId@@debug_ebreakm_i from 
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from elifs
    DEL list@@elifs from 


CommitId: 7aa87156d317a42d4f748c6afe9db3bf72670233
[RTL] Fix ebreak and cleanup debug
--- a/rtl/ibex_controller.sv
+++ b/rtl/ibex_controller.sv
@@ -507,11 +504,7 @@ module ibex_controller (
                * Mode, it halts the hart again but without updating dpc or
                * dcsr." [Debug Spec v0.13.2, p.39]
                */
-              pc_set_o         = 1'b0;
-              csr_save_id_o    = 1'b0;
-              csr_save_cause_o = 1'b0;
-              ctrl_fsm_ns      = DBG_TAKEN_ID;
-            end else if (debug_ebreakm_i) begin
+
               /*
                * dcsr.ebreakm == 1:
                * "EBREAK instructions in M-mode enter Debug Mode."

ParseResult:
UPD HdlStmIf@@ to 
    INS HdlOp@@OR to 
    UPD HdlOp@@OR to OR
        INS list@@ops to OR
        INS HdlValueId@@debug_ebreakm_i to ops

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD list@@ops to elifs
            MOV list@@ops to ASSIGN
            list: ops
                HdlValueId: csr_save_cause_o
                HdlValueInt: 0
            DEL HdlValueId@@csr_save_cause_o from ops
            DEL HdlValueInt@@0 from ops
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: csr_save_id_o
                HdlValueInt: 0
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@csr_save_id_o to flush_id
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: pc_set_o
                HdlValueInt: 0
        DEL HdlOp@@ASSIGN from body
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: ctrl_fsm_ns
                HdlValueId: DBG_TAKEN_ID
        DEL list@@body from SEQ
    MOV HdlValueId@@debug_mode_q to 
    HdlValueId: debug_mode_q
    DEL HdlValueId@@debug_ebreakm_i from 
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from elifs
    DEL list@@elifs from 


CommitId: 7aa87156d317a42d4f748c6afe9db3bf72670233
[RTL] Fix ebreak and cleanup debug
--- a/rtl/ibex_controller.sv
+++ b/rtl/ibex_controller.sv
@@ -521,6 +514,7 @@ module ibex_controller (
               csr_save_id_o    = 1'b0;
               csr_save_cause_o = 1'b0;
               ctrl_fsm_ns      = DBG_TAKEN_ID;
+              flush_id         = 1'b0;
             end else begin
               /*
                * "The EBREAK instruction is used by debuggers to cause control

ParseResult:
UPD HdlStmIf@@ to 
    INS HdlOp@@OR to 
    UPD HdlOp@@OR to OR
        INS list@@ops to OR
        INS HdlValueId@@debug_ebreakm_i to ops

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD list@@ops to elifs
            MOV list@@ops to ASSIGN
            list: ops
                HdlValueId: csr_save_cause_o
                HdlValueInt: 0
            DEL HdlValueId@@csr_save_cause_o from ops
            DEL HdlValueInt@@0 from ops
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: csr_save_id_o
                HdlValueInt: 0
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@csr_save_id_o to flush_id
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: pc_set_o
                HdlValueInt: 0
        DEL HdlOp@@ASSIGN from body
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: ctrl_fsm_ns
                HdlValueId: DBG_TAKEN_ID
        DEL list@@body from SEQ
    MOV HdlValueId@@debug_mode_q to 
    HdlValueId: debug_mode_q
    DEL HdlValueId@@debug_ebreakm_i from 
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from elifs
    DEL list@@elifs from 


CommitId: 7aa87156d317a42d4f748c6afe9db3bf72670233
[RTL] Fix ebreak and cleanup debug
--- a/rtl/ibex_controller.sv
+++ b/rtl/ibex_controller.sv
@@ -566,7 +560,7 @@ module ibex_controller (
 
         // single stepping
         // set exception registers, but do not jump into handler [Debug Spec v0.13.2, p.44]
-        if (debug_single_step_i && !debug_mode_q) begin
+        if (enter_debug_mode) begin
           pc_set_o    = 1'b0;
           ctrl_fsm_ns = DBG_TAKEN_IF;
         end
ParseResult:
UPD HdlStmIf@@ to 
    UPD HdlOp@@AND_LOG to AND_LOG
        UPD HdlOp@@NEG_LOG to NEG_LOG
            UPD HdlValueId@@debug_mode_q to enter_debug_mode
            MOV HdlValueId@@debug_mode_q to ops
            HdlValueId: debug_mode_q
            DEL list@@ops from NEG_LOG
        DEL HdlValueId@@debug_single_step_i from ops
        DEL HdlOp@@NEG_LOG from ops
        DEL list@@ops from AND_LOG
    DEL HdlOp@@AND_LOG from 


CommitId: 9ef3c13f87a7112da3be35e7c45934d8a4c6a035
Fix control for interrupts, debug request and multicycle instr
--- a/rtl/ibex_controller.sv
+++ b/rtl/ibex_controller.sv
@@ -126,13 +126,14 @@ module ibex_controller (
 
   ctrl_fsm_e ctrl_fsm_cs, ctrl_fsm_ns;
 
-  logic irq_enable_int;
-
   logic debug_mode_q, debug_mode_n;
   logic load_err_q, load_err_n;
   logic store_err_q, store_err_n;
 
+  logic stall;
   logic halt_id;
+  logic irq;
+  logic special_req;
 
 `ifndef SYNTHESIS
   // synopsys translate_off

ParseResult:
MOV HdlIdDef@@irq_enable_int to objs
HdlIdDef: irq_enable_int
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

UPD HdlIdDef@@irq_enable_int to stall

INS HdlIdDef@@irq to objs
HdlIdDef: irq
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

INS HdlIdDef@@special_req to objs
HdlIdDef: special_req
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL


CommitId: 9ef3c13f87a7112da3be35e7c45934d8a4c6a035
Fix control for interrupts, debug request and multicycle instr
--- a/rtl/ibex_controller.sv
+++ b/rtl/ibex_controller.sv
@@ -148,6 +149,12 @@ module ibex_controller (
   // synopsys translate_on
 `endif
 
+  assign irq         = irq_req_ctrl_i & m_IE_i;
+  assign exc_kill_o  = 1'b0;
+
+  // special requests: special instructions, exceptions, pipeline flushes...
+  assign special_req = mret_insn_i | dret_insn_i | ecall_insn_i | ebrk_insn_i | wfi_insn_i |
+                      illegal_insn_i | store_err_i | load_err_i | csr_status_i;
 
   /////////////////////
   // Core controller //

ParseResult:
INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: AND
        list: ops
            HdlValueId: irq_req_ctrl_i
            HdlValueId: m_IE_i
    HdlValueId: irq

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: exc_kill_o

INS HdlStmAssign@@ to objs


CommitId: 9ef3c13f87a7112da3be35e7c45934d8a4c6a035
Fix control for interrupts, debug request and multicycle instr
--- a/rtl/ibex_controller.sv
+++ b/rtl/ibex_controller.sv
@@ -158,7 +165,6 @@ module ibex_controller (
     instr_req_o            = 1'b1;
 
     exc_ack_o              = 1'b0;
-    exc_kill_o             = 1'b0;
 
     csr_save_if_o          = 1'b0;
     csr_save_id_o          = 1'b0;

ParseResult:
UPD HdlStmAssign@@ to 
    INS HdlValueId@@special_req to 

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: exc_kill_o
                HdlValueInt: 0
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: irq_enable_int
                HdlValueId: m_IE_i


CommitId: 9ef3c13f87a7112da3be35e7c45934d8a4c6a035
Fix control for interrupts, debug request and multicycle instr
--- a/rtl/ibex_controller.sv
+++ b/rtl/ibex_controller.sv
@@ -183,7 +189,6 @@ module ibex_controller (
     halt_id                = 1'b0;
     irq_ack_o              = 1'b0;
     irq_id_o               = irq_id_ctrl_i;
-    irq_enable_int         = m_IE_i;
 
     debug_csr_save_o       = 1'b0;
     debug_cause_o          = DBG_CAUSE_EBREAK;

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: exc_kill_o
                HdlValueInt: 0
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: irq_enable_int
                HdlValueId: m_IE_i


CommitId: 9ef3c13f87a7112da3be35e7c45934d8a4c6a035
Fix control for interrupts, debug request and multicycle instr
--- a/rtl/ibex_controller.sv
+++ b/rtl/ibex_controller.sv
@@ -247,7 +252,7 @@ module ibex_controller (
         end
 
         // handle interrupts
-        if (irq_req_ctrl_i && irq_enable_int) begin
+        if (irq) begin
           // This assumes that the pipeline is always flushed before
           // going to sleep.
           ctrl_fsm_ns = IRQ_TAKEN;

ParseResult:
UPD HdlStmIf@@ to 
    UPD HdlOp@@AND_LOG to AND_LOG
        UPD HdlValueId@@irq_req_ctrl_i to irq
        MOV HdlValueId@@irq_req_ctrl_i to ops
        HdlValueId: irq_req_ctrl_i
        DEL HdlValueId@@irq_enable_int from ops
        DEL list@@ops from AND_LOG
    DEL HdlOp@@AND_LOG from 

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: exc_kill_o
                HdlValueInt: 0
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: irq_enable_int
                HdlValueId: m_IE_i

UPD HdlStmCase@@ctrl_fsm_cs to ctrl_fsm_cs
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: is_decoding_o
                HdlValueInt: 0


CommitId: 9ef3c13f87a7112da3be35e7c45934d8a4c6a035
Fix control for interrupts, debug request and multicycle instr
--- a/rtl/ibex_controller.sv
+++ b/rtl/ibex_controller.sv
@@ -520,13 +522,17 @@ module ibex_controller (
   // Stall control //
   ///////////////////
 
+  // current instr needs at least one more cycle to finsih after the current cycle
+  // if low, current instr finsihes in current cycle
+  assign stall = stall_lsu_i | stall_multdiv_i | stall_jump_i | stall_branch_i;
+
   // deassert write enable when the core is not decoding instructions, i.e., current instruction
   // in ID stage done, but waiting for next instruction from IF stage, or in case of illegal
   // instruction
   assign deassert_we_o = ~is_decoding_o | illegal_insn_i;
 
   // signal to IF stage that ID stage is ready for next instruction
-  assign id_ready_o = ~stall_lsu_i & ~stall_multdiv_i & ~stall_jump_i & ~stall_branch_i;
+  assign id_ready_o = ~stall;
 
   // kill instruction in IF-ID reg for instructions that are done
   assign instr_valid_clear_o = id_ready_o | halt_id;
ParseResult:
INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: OR
        list: ops
            HdlOp: OR
                list: ops
                    HdlOp: OR
                        list: ops
                            HdlValueId: stall_lsu_i
                            HdlValueId: stall_multdiv_i
                    HdlValueId: stall_jump_i
            HdlValueId: stall_branch_i
    HdlValueId: stall

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: NEG
        list: ops
            HdlValueId: stall
    HdlValueId: id_ready_o

DEL HdlStmAssign@@ from objs
HdlStmAssign
    HdlOp: AND
        list: ops
            HdlOp: AND
                list: ops
                    HdlOp: AND
                        list: ops
                            HdlOp: NEG
                                list: ops
                                    HdlValueId: stall_lsu_i
                            HdlOp: NEG
                                list: ops
                                    HdlValueId: stall_multdiv_i
                    HdlOp: NEG
                        list: ops
                            HdlValueId: stall_jump_i
            HdlOp: NEG
                list: ops
                    HdlValueId: stall_branch_i
    HdlValueId: id_ready_o


CommitId: 2c75c2b2ec90bebb756386e1360810474323c1ad
Update lowrisc_ip to lowRISC/opentitan@1ae03937f
--- a/dv/uvm/core_ibex/common/prim/prim_ram_1p.sv
+++ b/dv/uvm/core_ibex/common/prim/prim_ram_1p.sv
@@ -21,6 +21,7 @@ module prim_ram_1p
 
 ) (
   input  logic             clk_i,
+  input  ram_1p_cfg_t      cfg_i,
 
   input  logic             req_i,
   input  logic             write_i,
ParseResult:
INS HdlIdDef@@cfg_i to ports
HdlIdDef: cfg_i
    HdlValueId: ram_1p_cfg_t
    HdlDirection: IN

UPD HdlIdDef@@clk_i to clk_i
    INS HdlOp@@PARAMETRIZATION to clk_i
    UPD HdlOp@@PARAMETRIZATION to PARAMETRIZATION
        INS list@@ops to PARAMETRIZATION

UPD HdlIdDef@@req_i to req_i
    INS HdlOp@@PARAMETRIZATION to req_i
    UPD HdlOp@@PARAMETRIZATION to PARAMETRIZATION
        INS list@@ops to PARAMETRIZATION

UPD HdlIdDef@@clk_i to clk_i
    MOV HdlValueId@@logic to clk_i
    HdlValueId: logic

UPD HdlIdDef@@req_i to req_i
    MOV HdlValueId@@logic to req_i
    HdlValueId: logic

UPD HdlIdDef@@write_i to write_i
    MOV HdlValueId@@logic to write_i
    HdlValueId: logic


CommitId: e5cf0c0fcfd32b860c7dc6f4626ea38948c36e53
Error synthesis in Vivado
--- a/rtl/ibex_core.sv
+++ b/rtl/ibex_core.sv
@@ -18,7 +18,7 @@ module ibex_core #(
     parameter int unsigned MHPMCounterWidth         = 40,
     parameter bit          RV32E                    = 1'b0,
     parameter bit          RV32M                    = 1'b1,
-    parameter string       MultiplierImplementation = "fast",
+    parameter              MultiplierImplementation = "fast",
     parameter int unsigned DmHaltAddr               = 32'h1A110800,
     parameter int unsigned DmExceptionAddr          = 32'h1A110808
 ) (
ParseResult:
UPD HdlIdDef@@MultiplierImplementation to MultiplierImplementation
    DEL HdlValueId@@string from MultiplierImplementation


CommitId: d977e146babec168c2958f6523123d02f7912e96
[rtl] Various small lint fixes
--- a/rtl/ibex_register_file_fpga.sv
+++ b/rtl/ibex_register_file_fpga.sv
@@ -63,5 +63,8 @@ module ibex_register_file_fpga #(
   // Dummy instruction changes not relevant for FPGA implementation
   logic unused_dummy_instr;
   assign unused_dummy_instr = dummy_instr_id_i;
+  // Test enable signal not used in FPGA implementation
+  logic unused_test_en;
+  assign unused_test_en = test_en_i;
 
 endmodule
ParseResult:
INS HdlIdDef@@unused_test_en to objs
HdlIdDef: unused_test_en
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlValueId: test_en_i
    HdlValueId: unused_test_en


CommitId: db75d30547ec2d7bf02bf38381caff2fac7f3f99
Replace non-unique `case` constructs by `unique case`
--- a/rtl/ibex_load_store_unit.sv
+++ b/rtl/ibex_load_store_unit.sv
@@ -98,7 +98,7 @@ module ibex_load_store_unit (
   // BE generation //
   ///////////////////
   always_comb begin
-    case (data_type_ex_i) // Data type 00 Word, 01 Half word, 11,10 byte
+    unique case (data_type_ex_i) // Data type 00 Word, 01 Half word, 11,10 byte
       2'b00: begin // Writing a word
         if (!misaligned_st) begin // non-misaligned case
           unique case (data_addr_int[1:0])

ParseResult:
UPD HdlStmCase@@data_type_ex_i to data_type_ex_i
    INS HdlOp@@ASSIGN to data_type_ex_i
    HdlOp: ASSIGN
        list: ops
            HdlValueId: data_be
            HdlValueInt: X
    INS HdlStmCaseUniqConstrain@@UNIQUE to data_type_ex_i


CommitId: db75d30547ec2d7bf02bf38381caff2fac7f3f99
Replace non-unique `case` constructs by `unique case`
--- a/rtl/ibex_load_store_unit.sv
+++ b/rtl/ibex_load_store_unit.sv
@@ -143,6 +143,8 @@ module ibex_load_store_unit (
           default: data_be = 'X;
         endcase // case (data_addr_int[1:0])
       end
+
+      default:     data_be = 'X;
     endcase // case (data_type_ex_i)
   end
 

ParseResult:
UPD HdlStmCase@@data_type_ex_i to data_type_ex_i
    INS HdlOp@@ASSIGN to data_type_ex_i
    HdlOp: ASSIGN
        list: ops
            HdlValueId: data_be
            HdlValueInt: X
    INS HdlStmCaseUniqConstrain@@UNIQUE to data_type_ex_i


CommitId: db75d30547ec2d7bf02bf38381caff2fac7f3f99
Replace non-unique `case` constructs by `unique case`
--- a/rtl/ibex_load_store_unit.sv
+++ b/rtl/ibex_load_store_unit.sv
@@ -189,17 +191,18 @@ module ibex_load_store_unit (
 
   // take care of misaligned words
   always_comb begin
-    case (rdata_offset_q)
-      2'b00: rdata_w_ext = data_rdata_i[31:0];
-      2'b01: rdata_w_ext = {data_rdata_i[ 7:0], rdata_q[31:8]};
-      2'b10: rdata_w_ext = {data_rdata_i[15:0], rdata_q[31:16]};
-      2'b11: rdata_w_ext = {data_rdata_i[23:0], rdata_q[31:24]};
+    unique case (rdata_offset_q)
+      2'b00:   rdata_w_ext =  data_rdata_i[31:0];
+      2'b01:   rdata_w_ext = {data_rdata_i[ 7:0], rdata_q[31:8]};
+      2'b10:   rdata_w_ext = {data_rdata_i[15:0], rdata_q[31:16]};
+      2'b11:   rdata_w_ext = {data_rdata_i[23:0], rdata_q[31:24]};
+      default: rdata_w_ext = 'X;
     endcase
   end
 
   // sign extension for half words
   always_comb begin
-    case (rdata_offset_q)
+    unique case (rdata_offset_q)
       2'b00: begin
         if (!data_sign_ext_q) begin
           rdata_h_ext = {16'h0000, data_rdata_i[15:0]};

ParseResult:
UPD HdlStmCase@@rdata_offset_q to rdata_offset_q
    INS HdlOp@@ASSIGN to rdata_offset_q
    HdlOp: ASSIGN
        list: ops
            HdlValueId: rdata_w_ext
            HdlValueInt: X
    INS HdlStmCaseUniqConstrain@@UNIQUE to rdata_offset_q

UPD HdlStmCase@@rdata_offset_q to rdata_offset_q
    INS HdlOp@@ASSIGN to rdata_offset_q
    HdlOp: ASSIGN
        list: ops
            HdlValueId: rdata_h_ext
            HdlValueInt: X
    INS HdlStmCaseUniqConstrain@@UNIQUE to rdata_offset_q


CommitId: db75d30547ec2d7bf02bf38381caff2fac7f3f99
Replace non-unique `case` constructs by `unique case`
--- a/rtl/ibex_load_store_unit.sv
+++ b/rtl/ibex_load_store_unit.sv
@@ -231,12 +234,14 @@ module ibex_load_store_unit (
           rdata_h_ext = {{16{data_rdata_i[7]}}, data_rdata_i[7:0], rdata_q[31:24]};
         end
       end
+
+      default: rdata_h_ext = 'X;
     endcase // case (rdata_offset_q)
   end
 
   // sign extension for bytes
   always_comb begin
-    case (rdata_offset_q)
+    unique case (rdata_offset_q)
       2'b00: begin
         if (!data_sign_ext_q) begin
           rdata_b_ext = {24'h00_0000, data_rdata_i[7:0]};

ParseResult:
UPD HdlStmCase@@rdata_offset_q to rdata_offset_q
    INS HdlOp@@ASSIGN to rdata_offset_q
    HdlOp: ASSIGN
        list: ops
            HdlValueId: rdata_h_ext
            HdlValueInt: X
    INS HdlStmCaseUniqConstrain@@UNIQUE to rdata_offset_q

UPD HdlStmCase@@rdata_offset_q to rdata_offset_q
    INS HdlOp@@ASSIGN to rdata_offset_q
    HdlOp: ASSIGN
        list: ops
            HdlValueId: rdata_b_ext
            HdlValueInt: X
    INS HdlStmCaseUniqConstrain@@UNIQUE to rdata_offset_q


CommitId: db75d30547ec2d7bf02bf38381caff2fac7f3f99
Replace non-unique `case` constructs by `unique case`
--- a/rtl/ibex_load_store_unit.sv
+++ b/rtl/ibex_load_store_unit.sv
@@ -268,15 +273,18 @@ module ibex_load_store_unit (
           rdata_b_ext = {{24{data_rdata_i[31]}}, data_rdata_i[31:24]};
         end
       end
+
+      default: rdata_b_ext = 'X;
     endcase // case (rdata_offset_q)
   end
 
   // select word, half word or byte sign extended version
   always_comb begin
-    case (data_type_q)
+    unique case (data_type_q)
       2'b00:       data_rdata_ext = rdata_w_ext;
       2'b01:       data_rdata_ext = rdata_h_ext;
       2'b10,2'b11: data_rdata_ext = rdata_b_ext;
+      default:     data_rdata_ext = 'X;
     endcase //~case(rdata_type_q)
   end
 

ParseResult:
UPD HdlStmCase@@rdata_offset_q to rdata_offset_q
    INS HdlOp@@ASSIGN to rdata_offset_q
    HdlOp: ASSIGN
        list: ops
            HdlValueId: rdata_b_ext
            HdlValueInt: X
    INS HdlStmCaseUniqConstrain@@UNIQUE to rdata_offset_q

UPD HdlStmCase@@data_type_q to data_type_q
    INS HdlOp@@ASSIGN to data_type_q
    HdlOp: ASSIGN
        list: ops
            HdlValueId: data_rdata_ext
            HdlValueInt: X
    INS HdlStmCaseUniqConstrain@@UNIQUE to data_type_q


CommitId: db75d30547ec2d7bf02bf38381caff2fac7f3f99
Replace non-unique `case` constructs by `unique case`
--- a/rtl/ibex_load_store_unit.sv
+++ b/rtl/ibex_load_store_unit.sv
@@ -340,7 +348,7 @@ module ibex_load_store_unit (
     increase_address = 1'b0;
     data_misaligned_o = 1'b0;
 
-    case(CS)
+    unique case(CS)
       // starts from not active and stays in IDLE until request was granted
       IDLE: begin
         if (data_req_ex_i) begin

ParseResult:
UPD HdlStmCase@@CS to CS
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@IDLE to ls_fsm_e
            MOV HdlValueId@@IDLE to ops
            HdlValueId: IDLE


CommitId: db75d30547ec2d7bf02bf38381caff2fac7f3f99
Replace non-unique `case` constructs by `unique case`
--- a/rtl/ibex_load_store_unit.sv
+++ b/rtl/ibex_load_store_unit.sv
@@ -416,9 +424,8 @@ module ibex_load_store_unit (
         end
       end //~ WAIT_RVALID
 
-
       default: begin
-        NS = IDLE;
+        NS = ls_fsm_e'({$bits(ls_fsm_e){1'bX}});
       end
     endcase
   end

ParseResult:
UPD HdlStmCase@@CS to CS
    INS HdlStmCaseUniqConstrain@@UNIQUE to CS
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlOp@@CALL to ops
            UPD HdlOp@@CALL to CALL
                INS list@@ops to CALL
                INS HdlOp@@REPL_CONCAT to ops
                HdlOp: REPL_CONCAT
                    list: ops
                        HdlOp: CALL
                            list: ops
                                HdlValueId: $bits
                                HdlValueId: ls_fsm_e
                        HdlValueInt: x

UPD HdlStmCase@@CS to CS
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@IDLE to ls_fsm_e
            MOV HdlValueId@@IDLE to ops
            HdlValueId: IDLE


CommitId: db75d30547ec2d7bf02bf38381caff2fac7f3f99
Replace non-unique `case` constructs by `unique case`
--- a/rtl/ibex_load_store_unit.sv
+++ b/rtl/ibex_load_store_unit.sv
@@ -430,18 +437,23 @@ module ibex_load_store_unit (
     data_misaligned = 1'b0;
 
     if (data_req_ex_i && !data_misaligned_q) begin
-      case (data_type_ex_i)
+      unique case (data_type_ex_i)
         2'b00: begin // word
           if (data_addr_int[1:0] != 2'b00) begin
             data_misaligned = 1'b1;
           end
         end
+
         2'b01: begin // half word
           if (data_addr_int[1:0] == 2'b11) begin
             data_misaligned = 1'b1;
           end
         end
-      default: ;
+
+        2'b10,
+        2'b11:;
+
+        default: data_misaligned = 1'bX;
       endcase // case (data_type_ex_i)
     end
   end
ParseResult:
UPD HdlStmCase@@CS to CS
    INS HdlStmCaseUniqConstrain@@UNIQUE to CS
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlOp@@CALL to ops
            UPD HdlOp@@CALL to CALL
                INS list@@ops to CALL
                INS HdlOp@@REPL_CONCAT to ops
                HdlOp: REPL_CONCAT
                    list: ops
                        HdlOp: CALL
                            list: ops
                                HdlValueId: $bits
                                HdlValueId: ls_fsm_e
                        HdlValueInt: x

UPD HdlStmCase@@data_type_ex_i to data_type_ex_i
    INS HdlOp@@ASSIGN to data_type_ex_i
    HdlOp: ASSIGN
        list: ops
            HdlValueId: data_misaligned
            HdlValueInt: x
    INS HdlStmCaseUniqConstrain@@UNIQUE to data_type_ex_i
    INS tuple@@ to cases
    tuple
        HdlValueInt: 10
        HdlStmNop
    INS tuple@@ to cases
    tuple
        HdlValueInt: 11
        HdlStmNop

DEL HdlStmNop@@default from data_type_ex_i


CommitId: d717e2385ed2d61290cb52148a79bef433880209
Update lowrisc_ip to lowRISC/opentitan@7aa5c2b89
--- a/vendor/lowrisc_ip/ip/prim_generic/rtl/prim_generic_flash_bank.sv
+++ b/vendor/lowrisc_ip/ip/prim_generic/rtl/prim_generic_flash_bank.sv
@@ -36,7 +36,6 @@ module prim_generic_flash_bank #(
   input [DataWidth-1:0]              prog_data_i,
   output logic                       ack_o,
   output logic                       done_o,
-  output logic                       erase_suspend_done_o,
   output logic [DataWidth-1:0]       rd_data_o,
   input                              init_i,
   output logic                       init_busy_o,

ParseResult:
DEL HdlIdDef@@erase_suspend_done_o from ports
HdlIdDef: erase_suspend_done_o
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: OUT


CommitId: d717e2385ed2d61290cb52148a79bef433880209
Update lowrisc_ip to lowRISC/opentitan@7aa5c2b89
--- a/vendor/lowrisc_ip/ip/prim_generic/rtl/prim_generic_flash_bank.sv
+++ b/vendor/lowrisc_ip/ip/prim_generic/rtl/prim_generic_flash_bank.sv
@@ -244,7 +243,6 @@ module prim_generic_flash_bank #(
     init_busy_o      = '0;
     pop_cmd          = '0;
     done_o           = '0;
-    erase_suspend_done_o = '0;
 
     unique case (st_q)
       StReset: begin

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: erase_suspend_done_o
                HdlValueInt: 0


CommitId: d717e2385ed2d61290cb52148a79bef433880209
Update lowrisc_ip to lowRISC/opentitan@7aa5c2b89
--- a/vendor/lowrisc_ip/ip/prim_generic/rtl/prim_generic_flash_bank.sv
+++ b/vendor/lowrisc_ip/ip/prim_generic/rtl/prim_generic_flash_bank.sv
@@ -334,7 +332,6 @@ module prim_generic_flash_bank #(
           st_d = StIdle;
           pop_cmd = 1'b1;
           done_o = 1'b1;
-          erase_suspend_done_o = 1'b1;
           time_cnt_clr = 1'b1;
           index_cnt_clr = 1'b1;
         end else if (index_cnt < index_limit_q || time_cnt < time_limit_q) begin
ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: erase_suspend_done_o
                HdlValueInt: 0

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: erase_suspend_done_o
                HdlValueInt: 1


CommitId: ab4c8699fbc854220749c49c67fa0b860a69711d
Simplify default assignments to enum types
--- a/rtl/ibex_int_controller.sv
+++ b/rtl/ibex_int_controller.sv
@@ -87,7 +87,7 @@ module ibex_int_controller (
       end
 
       default: begin
-        exc_ctrl_ns = exc_ctrl_e'({$bits(exc_ctrl_e){1'bX}});
+        exc_ctrl_ns = exc_ctrl_e'(1'bX);
       end
     endcase
   end
ParseResult:
UPD HdlStmCase@@exc_ctrl_cs to exc_ctrl_cs
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@CALL to CALL
                UPD HdlOp@@REPL_CONCAT to REPL_CONCAT
                    MOV list@@ops to REPL_CONCAT
                    list: ops
                        HdlOp: CALL
                            list: ops
                                HdlValueId: $bits
                                HdlValueId: exc_ctrl_e
                        HdlValueInt: x
                    UPD HdlOp@@CALL to CALL
                        MOV HdlValueId@@exc_ctrl_e to ops
                        HdlValueId: exc_ctrl_e
                        DEL HdlValueId@@$bits from ops
                        DEL list@@ops from CALL
                    DEL HdlOp@@CALL from ops
                DEL HdlValueId@@exc_ctrl_e from ops
                DEL HdlOp@@REPL_CONCAT from ops
                DEL list@@ops from CALL


CommitId: db82a7ab8e815372f29b4ea532e349231268092c
Fix problem with unaligned compressed access
--- a/instr_core_interface.sv
+++ b/instr_core_interface.sv
@@ -72,7 +72,7 @@ module fetch_fifo
 
   assign out_valid_o = (rdata_valid_Q[0] || (addr_valid_Q[0] && in_rdata_valid_i));
 
-  assign out_unaligned_rdata_o = (rdata_valid_Q[1]) ? {rdata_Q[1][15:0], rdata_Q[0][31:16]} : {in_rdata_i[15:0], rdata_Q[0][31:16]};
+  assign out_unaligned_rdata_o = (rdata_valid_Q[1]) ? {rdata_Q[1][15:0], out_rdata_o[31:16]} : {in_rdata_i[15:0], out_rdata_o[31:16]};
   // it is implied that rdata_valid_Q[0] is set
   assign out_unaligned_valid_o = (rdata_valid_Q[1] || (addr_valid_Q[1] && in_rdata_valid_i));
 
ParseResult:
UPD HdlStmAssign@@ to 
    UPD HdlOp@@TERNARY to TERNARY
        UPD HdlOp@@CONCAT to CONCAT
            UPD HdlOp@@INDEX to INDEX
                UPD HdlOp@@INDEX to INDEX
                    UPD HdlValueId@@rdata_Q to out_rdata_o
                    MOV HdlValueId@@rdata_Q to ops
                    HdlValueId: rdata_Q
                    DEL HdlValueInt@@0 from ops
                    DEL list@@ops from INDEX
                DEL HdlOp@@INDEX from ops
        UPD HdlOp@@CONCAT to CONCAT
            UPD HdlOp@@INDEX to INDEX
                UPD HdlOp@@INDEX to INDEX
                    UPD HdlValueId@@rdata_Q to out_rdata_o
                    MOV HdlValueId@@rdata_Q to ops
                    HdlValueId: rdata_Q
                    DEL HdlValueInt@@0 from ops
                    DEL list@@ops from INDEX
                DEL HdlOp@@INDEX from ops


CommitId: 8d3d87ae53254f7716852e944caffa788b473253
Controller: Fix exception cause ID of fast interrupts
--- a/rtl/ibex_controller.sv
+++ b/rtl/ibex_controller.sv
@@ -113,7 +113,7 @@ module ibex_controller (
   logic enter_debug_mode;
   logic handle_irq;
 
-  logic [4:0] mfip_id;
+  logic [3:0] mfip_id;
   logic       unused_csr_mtip;
 
 `ifndef SYNTHESIS

ParseResult:
INS HdlIdDef@@mfip_id to objs
HdlIdDef: mfip_id
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 3
                    HdlValueInt: 0
    HdlDirection: INTERNAL

DEL HdlIdDef@@mfip_id from objs
HdlIdDef: mfip_id
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 4
                    HdlValueInt: 0
    HdlDirection: INTERNAL


CommitId: 8d3d87ae53254f7716852e944caffa788b473253
Controller: Fix exception cause ID of fast interrupts
--- a/rtl/ibex_controller.sv
+++ b/rtl/ibex_controller.sv
@@ -360,7 +360,11 @@ module ibex_controller (
             exc_cause_o = EXC_CAUSE_IRQ_NM;
             nmi_mode_d  = 1'b1; // enter NMI mode
           end else if (csr_mfip_i != 15'b0) begin
-            exc_cause_o = exc_cause_e'({1'b1, mfip_id});
+            // generate exception cause ID from fast interrupt ID:
+            // - first bit distinguishes interrupts from exceptions,
+            // - second bit adds 16 to fast interrupt ID
+            // for example EXC_CAUSE_IRQ_FAST_0 = {1'b1, 5'd16}
+            exc_cause_o = exc_cause_e'({2'b11, mfip_id});
           end else if (csr_meip_i) begin
             exc_cause_o = EXC_CAUSE_IRQ_EXTERNAL_M;
           end else if (csr_msip_i) begin
ParseResult:
UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@CALL to CALL
                UPD HdlOp@@CONCAT to CONCAT
                    UPD HdlValueInt@@1 to 11


CommitId: 428d057c4a941681e8ede6625eaf6c76a4b3fa8c
Rename ibex_[tracer_]define to ibex_[tracer_]pkg
--- a/rtl/ibex_core_tracer.sv
+++ b/rtl/ibex_core_tracer.sv
@@ -87,7 +87,7 @@ module ibex_core_tracer #(
 
 );
 
-  import ibex_defines::*;
+  import ibex_pkg::*;
 
   ibex_core #(
     .MHPMCounterNum(MHPMCounterNum),
ParseResult:
UPD HdlModuleDef@@ibex_core_tracer to ibex_core_tracer
    UPD HdlImport@@ to 
        UPD HdlValueId@@ibex_defines to ibex_pkg


CommitId: 0243e081119ad971a045097f0b74b552d5d1fab4
[rtl] Switch to M mode on debug entry
--- a/rtl/ibex_controller.sv
+++ b/rtl/ibex_controller.sv
@@ -73,6 +73,7 @@ module ibex_controller (
     output logic                  csr_save_if_o,
     output logic                  csr_save_id_o,
     output logic                  csr_restore_mret_id_o,
+    output logic                  csr_restore_dret_id_o,
     output logic                  csr_save_cause_o,
     output logic [31:0]           csr_mtval_o,
     input  ibex_pkg::priv_lvl_e   priv_mode_i,

ParseResult:
INS HdlIdDef@@csr_restore_dret_id_o to ports
HdlIdDef: csr_restore_dret_id_o
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: OUT


CommitId: 0243e081119ad971a045097f0b74b552d5d1fab4
[rtl] Switch to M mode on debug entry
--- a/rtl/ibex_controller.sv
+++ b/rtl/ibex_controller.sv
@@ -242,6 +243,7 @@ module ibex_controller (
     csr_save_if_o         = 1'b0;
     csr_save_id_o         = 1'b0;
     csr_restore_mret_id_o = 1'b0;
+    csr_restore_dret_id_o = 1'b0;
     csr_save_cause_o      = 1'b0;
     csr_mtval_o           = '0;
 

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: csr_restore_dret_id_o
                HdlValueInt: 0


CommitId: 0243e081119ad971a045097f0b74b552d5d1fab4
[rtl] Switch to M mode on debug entry
--- a/rtl/ibex_controller.sv
+++ b/rtl/ibex_controller.sv
@@ -556,6 +558,7 @@ module ibex_controller (
             pc_mux_o              = PC_DRET;
             pc_set_o              = 1'b1;
             debug_mode_d          = 1'b0;
+            csr_restore_dret_id_o = 1'b1;
           end else if (wfi_insn) begin
             ctrl_fsm_ns           = WAIT_SLEEP;
           end else if (csr_pipe_flush && handle_irq) begin
ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: csr_restore_dret_id_o
                HdlValueInt: 0

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: csr_restore_dret_id_o
                HdlValueInt: 1


CommitId: 344279906f8737e12b46cc44d0da65c6343f2751
[rtl] Fix PMP address matching
--- a/rtl/ibex_pmp.sv
+++ b/rtl/ibex_pmp.sv
@@ -72,12 +72,13 @@ module ibex_pmp #(
   for (genvar c = 0; c < PMPNumChan; c++) begin : g_access_check
     for (genvar r = 0; r < PMPNumRegions; r++) begin : g_regions
       // TOR Region high/low matching is reused for all match types
-      assign region_match_low[c][r]     = (pmp_req_addr_i[c][33:PMPGranularity+2] >=
-                                           // Comparators are sized according to granularity
-                                           (region_start_addr[r][33:PMPGranularity+2] &
-                                            region_addr_mask[r]));
-      assign region_match_high[c][r]    = (pmp_req_addr_i[c][33:PMPGranularity+2] <=
-                                           csr_pmp_addr_i[r][33:PMPGranularity+2]);
+      // Comparators are sized according to granularity
+      assign region_match_low[c][r]     = pmp_req_addr_i[c][33:PMPGranularity+2] >=
+                                          (region_start_addr[r][33:PMPGranularity+2] &
+                                           region_addr_mask[r]);
+      assign region_match_high[c][r]    = (pmp_req_addr_i[c][33:PMPGranularity+2] &
+                                           region_addr_mask[r]) <
+                                          csr_pmp_addr_i[r][33:PMPGranularity+2];
       assign region_match_both[c][r]    = region_match_low[c][r] & region_match_high[c][r] &
                                           (csr_pmp_cfg_i[r].mode != PMP_MODE_OFF);
       // Check specific required permissions
ParseResult:
UPD HdlStmAssign@@ to 
    UPD HdlOp@@LE to LT
    UPD HdlOp@@LE to LE
        MOV HdlOp@@INDEX to ops
        HdlOp: INDEX
            list: ops
                HdlOp: INDEX
                    list: ops
                        HdlValueId: pmp_req_addr_i
                        HdlValueId: c
                HdlOp: DOWNTO
                    list: ops
                        HdlValueInt: 33
                        HdlOp: ADD
                            list: ops
                                HdlValueId: PMPGranularity
                                HdlValueInt: 2

UPD HdlStmAssign@@ to 
    UPD HdlOp@@LT to LT
        INS HdlOp@@AND to ops
        UPD HdlOp@@AND to AND
            INS list@@ops to AND
            INS HdlOp@@INDEX to ops
            HdlOp: INDEX
                list: ops
                    HdlValueId: region_addr_mask
                    HdlValueId: r


CommitId: c4370083106042cc0398de615e69d661032c04ba
CSRs: replace `_n` suffix of register signals by `_d`
--- a/rtl/ibex_cs_registers.sv
+++ b/rtl/ibex_cs_registers.sv
@@ -149,22 +149,22 @@ module ibex_cs_registers #(
   logic [31:0] exception_pc;
 
   // CSRs
-  Status_t     mstatus_q, mstatus_n;
-  logic [31:0] mscratch_q, mscratch_n;
-  logic [31:0] mepc_q, mepc_n;
-  logic  [5:0] mcause_q, mcause_n;
-  logic [31:0] mtval_q, mtval_n;
-  Dcsr_t       dcsr_q, dcsr_n;
-  logic [31:0] depc_q, depc_n;
-  logic [31:0] dscratch0_q, dscratch0_n;
-  logic [31:0] dscratch1_q, dscratch1_n;
+  Status_t     mstatus_q, mstatus_d;
+  logic [31:0] mscratch_q, mscratch_d;
+  logic [31:0] mepc_q, mepc_d;
+  logic  [5:0] mcause_q, mcause_d;
+  logic [31:0] mtval_q, mtval_d;
+  Dcsr_t       dcsr_q, dcsr_d;
+  logic [31:0] depc_q, depc_d;
+  logic [31:0] dscratch0_q, dscratch0_d;
+  logic [31:0] dscratch1_q, dscratch1_d;
 
   // Hardware performance monitor signals
-  logic [31:0] mcountinhibit_n, mcountinhibit_q, mcountinhibit;
+  logic [31:0] mcountinhibit_d, mcountinhibit_q, mcountinhibit;
   logic [31:0] mcountinhibit_force;
   logic        mcountinhibit_we;
   logic [63:0] mhpmcounter_mask [32];
-  logic [63:0] mhpmcounter_n [32];
+  logic [63:0] mhpmcounter_d [32];
   logic [63:0] mhpmcounter_q [32];
   logic [31:0] mhpmcounter_we;
   logic [31:0] mhpmcounterh_we;

ParseResult:
INS HdlIdDef@@mstatus_d to objs
HdlIdDef: mstatus_d
    HdlDirection: INTERNAL

UPD HdlIdDef@@mscratch_n to mscratch_d

UPD HdlIdDef@@mepc_n to mepc_d

UPD HdlIdDef@@mcause_n to mcause_d

UPD HdlIdDef@@mtval_n to mtval_d

INS HdlIdDef@@dcsr_d to objs
HdlIdDef: dcsr_d
    HdlDirection: INTERNAL

UPD HdlIdDef@@depc_n to depc_d

UPD HdlIdDef@@dscratch0_n to dscratch0_d

UPD HdlIdDef@@dscratch1_n to dscratch1_d

UPD HdlIdDef@@mcountinhibit_n to mcountinhibit_d

UPD HdlIdDef@@mhpmcounter_n to mhpmcounter_d

DEL HdlIdDef@@mstatus_n from objs
HdlIdDef: mstatus_n
    HdlDirection: INTERNAL

DEL HdlIdDef@@dcsr_n from objs
HdlIdDef: dcsr_n
    HdlDirection: INTERNAL


CommitId: c4370083106042cc0398de615e69d661032c04ba
CSRs: replace `_n` suffix of register signals by `_d`
--- a/rtl/ibex_cs_registers.sv
+++ b/rtl/ibex_cs_registers.sv
@@ -284,15 +284,15 @@ module ibex_cs_registers #(
   always_comb begin
     exception_pc = pc_id_i;
 
-    mstatus_n    = mstatus_q;
-    mscratch_n   = mscratch_q;
-    mepc_n       = mepc_q;
-    mcause_n     = mcause_q;
-    mtval_n      = mtval_q;
-    dcsr_n       = dcsr_q;
-    depc_n       = depc_q;
-    dscratch0_n  = dscratch0_q;
-    dscratch1_n  = dscratch1_q;
+    mstatus_d    = mstatus_q;
+    mscratch_d   = mscratch_q;
+    mepc_d       = mepc_q;
+    mcause_d     = mcause_q;
+    mtval_d      = mtval_q;
+    dcsr_d       = dcsr_q;
+    depc_d       = depc_q;
+    dscratch0_d  = dscratch0_q;
+    dscratch1_d  = dscratch1_q;
     mcountinhibit_we = 1'b0;
     mhpmcounter_we   = '0;
     mhpmcounterh_we  = '0;

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@mstatus_n to mstatus_d
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@mscratch_n to mscratch_d
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@mepc_n to mepc_d
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@mcause_n to mcause_d
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@mtval_n to mtval_d
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@dcsr_n to dcsr_d
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@depc_n to depc_d
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@dscratch0_n to dscratch0_d
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@dscratch1_n to dscratch1_d


CommitId: c4370083106042cc0398de615e69d661032c04ba
CSRs: replace `_n` suffix of register signals by `_d`
--- a/rtl/ibex_cs_registers.sv
+++ b/rtl/ibex_cs_registers.sv
@@ -301,7 +301,7 @@ module ibex_cs_registers #(
       // mstatus: IE bit
       CSR_MSTATUS: begin
         if (csr_we_int) begin
-          mstatus_n = '{
+          mstatus_d = '{
               mie:  csr_wdata_int[`MSTATUS_MIE_BITS],
               mpie: csr_wdata_int[`MSTATUS_MPIE_BITS],
               mpp:  PRIV_LVL_M

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@mstatus_n to mstatus_d
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@mscratch_n to mscratch_d
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@mepc_n to mepc_d
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@mcause_n to mcause_d
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@mtval_n to mtval_d
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@dcsr_n to dcsr_d
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@depc_n to depc_d
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@dscratch0_n to dscratch0_d
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@dscratch1_n to dscratch1_d

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@mstatus_n to mstatus_d


CommitId: c4370083106042cc0398de615e69d661032c04ba
CSRs: replace `_n` suffix of register signals by `_d`
--- a/rtl/ibex_cs_registers.sv
+++ b/rtl/ibex_cs_registers.sv
@@ -309,52 +309,52 @@ module ibex_cs_registers #(
         end
       end
 
-      CSR_MSCRATCH: if (csr_we_int) mscratch_n = csr_wdata_int;
+      CSR_MSCRATCH: if (csr_we_int) mscratch_d = csr_wdata_int;
 
       // mepc: exception program counter
-      CSR_MEPC: if (csr_we_int) mepc_n = {csr_wdata_int[31:1], 1'b0};
+      CSR_MEPC: if (csr_we_int) mepc_d = {csr_wdata_int[31:1], 1'b0};
 
       // mcause
-      CSR_MCAUSE: if (csr_we_int) mcause_n = {csr_wdata_int[31], csr_wdata_int[4:0]};
+      CSR_MCAUSE: if (csr_we_int) mcause_d = {csr_wdata_int[31], csr_wdata_int[4:0]};
 
       // mtval: trap value
-      CSR_MTVAL: if (csr_we_int) mtval_n = csr_wdata_int;
+      CSR_MTVAL: if (csr_we_int) mtval_d = csr_wdata_int;
 
       CSR_DCSR: begin
         if (csr_we_int) begin
-          dcsr_n = csr_wdata_int;
-          dcsr_n.xdebugver = XDEBUGVER_STD;
-          dcsr_n.prv = PRIV_LVL_M; // only M-mode is supported
+          dcsr_d = csr_wdata_int;
+          dcsr_d.xdebugver = XDEBUGVER_STD;
+          dcsr_d.prv = PRIV_LVL_M; // only M-mode is supported
 
           // currently not supported:
-          dcsr_n.nmip = 1'b0;
-          dcsr_n.mprven = 1'b0;
-          dcsr_n.stopcount = 1'b0;
-          dcsr_n.stoptime = 1'b0;
+          dcsr_d.nmip = 1'b0;
+          dcsr_d.mprven = 1'b0;
+          dcsr_d.stopcount = 1'b0;
+          dcsr_d.stoptime = 1'b0;
 
           // forced to be zero
-          dcsr_n.zero0 = 1'b0;
-          dcsr_n.zero1 = 1'b0;
-          dcsr_n.zero2 = 12'h0;
+          dcsr_d.zero0 = 1'b0;
+          dcsr_d.zero1 = 1'b0;
+          dcsr_d.zero2 = 12'h0;
         end
       end
 
       CSR_DPC: begin
         // Only valid PC addresses are allowed (half-word aligned with C ext.)
         if (csr_we_int && csr_wdata_int[0] == 1'b0) begin
-          depc_n = csr_wdata_int;
+          depc_d = csr_wdata_int;
         end
       end
 
       CSR_DSCRATCH0: begin
         if (csr_we_int) begin
-          dscratch0_n = csr_wdata_int;
+          dscratch0_d = csr_wdata_int;
         end
       end
 
       CSR_DSCRATCH1: begin
         if (csr_we_int) begin
-          dscratch1_n = csr_wdata_int;
+          dscratch1_d = csr_wdata_int;
         end
       end
 

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@mstatus_n to mstatus_d
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@mscratch_n to mscratch_d
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@mepc_n to mepc_d
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@mcause_n to mcause_d
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@mtval_n to mtval_d
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@dcsr_n to dcsr_d
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@depc_n to depc_d
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@dscratch0_n to dscratch0_d
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@dscratch1_n to dscratch1_d

UPD HdlStmIf@@ to 
    UPD HdlOp@@ASSIGN to ASSIGN
        UPD HdlValueId@@mscratch_n to mscratch_d

UPD HdlStmIf@@ to 
    UPD HdlOp@@ASSIGN to ASSIGN
        UPD HdlValueId@@mepc_n to mepc_d

UPD HdlStmIf@@ to 
    UPD HdlOp@@ASSIGN to ASSIGN
        UPD HdlValueId@@mcause_n to mcause_d

UPD HdlStmIf@@ to 
    UPD HdlOp@@ASSIGN to ASSIGN
        UPD HdlValueId@@mtval_n to mtval_d

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@mstatus_n to mstatus_d

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@dcsr_n to dcsr_d
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@dcsr_n to dcsr_d
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@dcsr_n to dcsr_d
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@dcsr_n to dcsr_d
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@dcsr_n to dcsr_d
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@dcsr_n to dcsr_d
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@dcsr_n to dcsr_d
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@dcsr_n to dcsr_d
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@dcsr_n to dcsr_d
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@dcsr_n to dcsr_d

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@depc_n to depc_d

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@dscratch0_n to dscratch0_d

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@dscratch1_n to dscratch1_d


CommitId: c4370083106042cc0398de615e69d661032c04ba
CSRs: replace `_n` suffix of register signals by `_d`
--- a/rtl/ibex_cs_registers.sv
+++ b/rtl/ibex_cs_registers.sv
@@ -417,27 +417,27 @@ module ibex_cs_registers #(
         if (debug_csr_save_i) begin
           // all interrupts are masked, don't update cause, epc, tval dpc and
           // mpstatus
-          dcsr_n.prv   = PRIV_LVL_M;
-          dcsr_n.cause = debug_cause_i;
-          depc_n       = exception_pc;
+          dcsr_d.prv   = PRIV_LVL_M;
+          dcsr_d.cause = debug_cause_i;
+          depc_d       = exception_pc;
         end else begin
-          mstatus_n.mpie = mstatus_q.mie;
-          mstatus_n.mie  = 1'b0;
-          mstatus_n.mpp  = PRIV_LVL_M;
-          mepc_n         = exception_pc;
-          mcause_n       = {csr_mcause_i};
-          mtval_n        = csr_mtval_i;
+          mstatus_d.mpie = mstatus_q.mie;
+          mstatus_d.mie  = 1'b0;
+          mstatus_d.mpp  = PRIV_LVL_M;
+          mepc_d         = exception_pc;
+          mcause_d       = {csr_mcause_i};
+          mtval_d        = csr_mtval_i;
         end
       end //csr_save_cause_i
 
       csr_restore_mret_i: begin //MRET
-        mstatus_n.mie  = mstatus_q.mpie;
-        mstatus_n.mpie = 1'b1;
+        mstatus_d.mie  = mstatus_q.mpie;
+        mstatus_d.mpie = 1'b1;
       end //csr_restore_mret_i
 
       csr_restore_dret_i: begin //DRET
-        mstatus_n.mie  = mstatus_q.mpie;
-        mstatus_n.mpie = 1'b1;
+        mstatus_d.mie  = mstatus_q.mpie;
+        mstatus_d.mpie = 1'b1;
       end //csr_restore_dret_i
 
       default:;

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@mstatus_n to mstatus_d
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@mscratch_n to mscratch_d
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@mepc_n to mepc_d
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@mcause_n to mcause_d
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@mtval_n to mtval_d
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@dcsr_n to dcsr_d
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@depc_n to depc_d
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@dscratch0_n to dscratch0_d
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@dscratch1_n to dscratch1_d

UPD HdlStmCase@@{'__class__': 'HdlValueInt', 'base': 2, 'bits': 1, 'val': '1'}  to {'__class__': 'HdlValueInt', 'base': 2, 'bits': 1, 'val': '1'} 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@mstatus_n to mstatus_d
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@mstatus_n to mstatus_d
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@mstatus_n to mstatus_d
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@mstatus_n to mstatus_d

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@dcsr_n to dcsr_d
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@dcsr_n to dcsr_d
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@depc_n to depc_d
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@mstatus_n to mstatus_d
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@mstatus_n to mstatus_d
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@mstatus_n to mstatus_d
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@mepc_n to mepc_d
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@mcause_n to mcause_d
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@mtval_n to mtval_d


CommitId: c4370083106042cc0398de615e69d661032c04ba
CSRs: replace `_n` suffix of register signals by `_d`
--- a/rtl/ibex_cs_registers.sv
+++ b/rtl/ibex_cs_registers.sv
@@ -500,18 +500,18 @@ module ibex_cs_registers #(
     end else begin
       // update CSRs
       mstatus_q  <= '{
-          mie:  mstatus_n.mie,
-          mpie: mstatus_n.mpie,
+          mie:  mstatus_d.mie,
+          mpie: mstatus_d.mpie,
           mpp:  PRIV_LVL_M
       };
-      mscratch_q  <= mscratch_n;
-      mepc_q      <= mepc_n;
-      mcause_q    <= mcause_n;
-      mtval_q     <= mtval_n;
-      dcsr_q      <= dcsr_n;
-      depc_q      <= depc_n;
-      dscratch0_q <= dscratch0_n;
-      dscratch1_q <= dscratch1_n;
+      mscratch_q  <= mscratch_d;
+      mepc_q      <= mepc_d;
+      mcause_q    <= mcause_d;
+      mtval_q     <= mtval_d;
+      dcsr_q      <= dcsr_d;
+      depc_q      <= depc_d;
+      dscratch0_q <= dscratch0_d;
+      dscratch1_q <= dscratch1_d;
     end
   end
 

ParseResult:
UPD HdlStmAssign@@ to 
    UPD HdlValueId@@mscratch_n to mscratch_d

UPD HdlStmAssign@@ to 
    UPD HdlValueId@@mepc_n to mepc_d

UPD HdlStmAssign@@ to 
    UPD HdlValueId@@mcause_n to mcause_d

UPD HdlStmAssign@@ to 
    UPD HdlValueId@@mtval_n to mtval_d

UPD HdlStmAssign@@ to 
    UPD HdlValueId@@dcsr_n to dcsr_d

UPD HdlStmAssign@@ to 
    UPD HdlValueId@@depc_n to depc_d

UPD HdlStmAssign@@ to 
    UPD HdlValueId@@dscratch0_n to dscratch0_d

UPD HdlStmAssign@@ to 
    UPD HdlValueId@@dscratch1_n to dscratch1_d

UPD HdlStmAssign@@ to 
    UPD HdlOp@@MAP_ASSOCIATION to MAP_ASSOCIATION
        UPD HdlOp@@DOT to DOT
            UPD HdlValueId@@mstatus_n to mstatus_d
    UPD HdlOp@@MAP_ASSOCIATION to MAP_ASSOCIATION
        UPD HdlOp@@DOT to DOT
            UPD HdlValueId@@mstatus_n to mstatus_d


CommitId: c4370083106042cc0398de615e69d661032c04ba
CSRs: replace `_n` suffix of register signals by `_d`
--- a/rtl/ibex_cs_registers.sv
+++ b/rtl/ibex_cs_registers.sv
@@ -522,12 +522,12 @@ module ibex_cs_registers #(
   // update enable signals
   always_comb begin : mcountinhibit_update
     if (mcountinhibit_we == 1'b1) begin
-      mcountinhibit_n = csr_wdata_int;
+      mcountinhibit_d = csr_wdata_int;
     end else begin
-      mcountinhibit_n = mcountinhibit_q;
+      mcountinhibit_d = mcountinhibit_q;
     end
     // bit 1 must always be 0
-    mcountinhibit_n[1] = 1'b0;
+    mcountinhibit_d[1] = 1'b0;
   end
 
   assign mcountinhibit_force = {{29-MHPMCounterNum{1'b1}}, {MHPMCounterNum{1'b0}}, 3'b000};

ParseResult:
INS HdlStmProcess@@ to objs

UPD HdlStmProcess@@ to 
    INS HdlStmBlock@@SEQ to 
    INS HdlStmProcessTriggerConstrain@@COMB to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlOp: INDEX
                    list: ops
                        HdlValueId: mcountinhibit_d
                        HdlValueInt: 1
                HdlValueInt: 0

INS HdlStmIf@@ to body

UPD HdlStmIf@@ to 
    MOV HdlOp@@EQ to 
    HdlOp: EQ
        list: ops
            HdlValueId: mcountinhibit_we
            HdlValueInt: 1
    DEL HdlStmBlock@@SEQ from 
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: mcountinhibit_n
                    HdlValueId: csr_wdata_int
    DEL list@@elifs from 
    DEL HdlStmBlock@@SEQ from 
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: mcountinhibit_n
                    HdlValueId: mcountinhibit_q

UPD HdlStmIf@@ to 
    INS HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: mcountinhibit_d
                    HdlValueId: csr_wdata_int
    INS list@@elifs to 
    INS HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: mcountinhibit_d
                    HdlValueId: mcountinhibit_q

DEL HdlStmIf@@ from body

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlOp: INDEX
                    list: ops
                        HdlValueId: mcountinhibit_n
                        HdlValueInt: 1
                HdlValueInt: 0
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL HdlStmProcessTriggerConstrain@@COMB from 

DEL HdlStmProcess@@ from objs


CommitId: c4370083106042cc0398de615e69d661032c04ba
CSRs: replace `_n` suffix of register signals by `_d`
--- a/rtl/ibex_cs_registers.sv
+++ b/rtl/ibex_cs_registers.sv
@@ -593,20 +593,20 @@ module ibex_cs_registers #(
 
   // update
   always_comb begin : mhpmcounter_update
-    mhpmcounter_n = mhpmcounter_q;
+    mhpmcounter_d = mhpmcounter_q;
 
     for (int i=0; i<32; i++) begin : gen_mhpmcounter_update
 
       // increment
       if (mhpmcounter_incr[i] & ~mcountinhibit[i]) begin
-        mhpmcounter_n[i] = mhpmcounter_mask[i] & (mhpmcounter_q[i] + 64'h1);
+        mhpmcounter_d[i] = mhpmcounter_mask[i] & (mhpmcounter_q[i] + 64'h1);
       end
 
       // write
       if (mhpmcounter_we[i]) begin
-        mhpmcounter_n[i][31: 0] = mhpmcounter_mask[i][31: 0] & csr_wdata_int;
+        mhpmcounter_d[i][31: 0] = mhpmcounter_mask[i][31: 0] & csr_wdata_int;
       end else if (mhpmcounterh_we[i]) begin
-        mhpmcounter_n[i][63:32] = mhpmcounter_mask[i][63:32] & csr_wdata_int;
+        mhpmcounter_d[i][63:32] = mhpmcounter_mask[i][63:32] & csr_wdata_int;
       end
     end
   end

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@mhpmcounter_n to mhpmcounter_d

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@INDEX to INDEX
                UPD HdlValueId@@mhpmcounter_n to mhpmcounter_d

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@INDEX to INDEX
                UPD HdlOp@@INDEX to INDEX
                    UPD HdlValueId@@mhpmcounter_n to mhpmcounter_d
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@INDEX to INDEX
                UPD HdlOp@@INDEX to INDEX
                    UPD HdlValueId@@mhpmcounter_n to mhpmcounter_d


CommitId: c4370083106042cc0398de615e69d661032c04ba
CSRs: replace `_n` suffix of register signals by `_d`
--- a/rtl/ibex_cs_registers.sv
+++ b/rtl/ibex_cs_registers.sv
@@ -619,8 +619,8 @@ module ibex_cs_registers #(
         mhpmcounter_q[i] <= '0;
       end
     end else begin
-      mhpmcounter_q      <= mhpmcounter_n;
-      mcountinhibit_q    <= mcountinhibit_n;
+      mhpmcounter_q      <= mhpmcounter_d;
+      mcountinhibit_q    <= mcountinhibit_d;
     end
   end
 
ParseResult:
UPD HdlStmAssign@@ to 
    UPD HdlValueId@@mhpmcounter_n to mhpmcounter_d

UPD HdlStmAssign@@ to 
    UPD HdlValueId@@mcountinhibit_n to mcountinhibit_d


CommitId: db75d30547ec2d7bf02bf38381caff2fac7f3f99
Replace non-unique `case` constructs by `unique case`
--- a/rtl/ibex_id_stage.sv
+++ b/rtl/ibex_id_stage.sv
@@ -272,12 +272,12 @@ module ibex_id_stage #(
 
   // ALU_Op_a Mux
   always_comb begin : alu_operand_a_mux
-    case (alu_op_a_mux_sel)
+    unique case (alu_op_a_mux_sel)
       OP_A_REGA_OR_FWD:  alu_operand_a = operand_a_fw_id;
       OP_A_CURRPC:       alu_operand_a = pc_id_i;
       OP_A_IMM:          alu_operand_a = imm_a;
-      default:           alu_operand_a = operand_a_fw_id;
-    endcase // case (alu_op_a_mux_sel)
+      default:           alu_operand_a = 'X;
+    endcase
   end
 
   assign imm_a = (imm_a_mux_sel == IMM_A_Z) ? zimm_rs1_type : '0;
ParseResult:
UPD HdlStmCase@@alu_op_a_mux_sel to alu_op_a_mux_sel
    INS HdlStmCaseUniqConstrain@@UNIQUE to alu_op_a_mux_sel
    UPD HdlOp@@ASSIGN to ASSIGN
        INS HdlValueInt@@X to ops

UPD HdlStmCase@@alu_op_a_mux_sel to alu_op_a_mux_sel
    UPD HdlOp@@ASSIGN to ASSIGN
        DEL HdlValueId@@operand_a_fw_id from ops


CommitId: b22a6a10defc7bad31dda7d8a33c7145d1a79a3b
Add `mtval` CSR
--- a/rtl/ibex_core.sv
+++ b/rtl/ibex_core.sv
@@ -109,18 +109,20 @@ module ibex_core #(
 
   // IF/ID signals
   logic        instr_valid_id;
-  logic [31:0] instr_rdata_id;    // Instruction sampled inside IF stage
-  logic        is_compressed_id;
-  logic        illegal_c_insn_id; // Illegal compressed instruction sent to ID stage
-  logic        illegal_insn_id;   // ID stage sees an illegal instruction
-  logic [31:0] pc_if;             // Program counter in IF stage
-  logic [31:0] pc_id;             // Program counter in ID stage
+  logic [31:0] instr_rdata_id;         // Instruction sampled inside IF stage
+  logic [15:0] instr_rdata_c_id;       // Compressed instruction sampled inside IF stage
+  logic        instr_is_compressed_id;
+  logic        illegal_c_insn_id;      // Illegal compressed instruction sent to ID stage
+  logic        illegal_insn_id;        // ID stage sees an illegal instruction
+  logic [31:0] pc_if;                  // Program counter in IF stage
+  logic [31:0] pc_id;                  // Program counter in ID stage
 
   logic        clear_instr_valid;
   logic        pc_set;
-  pc_sel_e     pc_mux_id;         // Mux selector for next PC
-  exc_pc_sel_e exc_pc_mux_id;     // Mux selector for exception PC
-  exc_cause_e  exc_cause;         // Exception cause + IRQ ID for vectorized interrupt lines
+
+  pc_sel_e     pc_mux_id;              // Mux selector for next PC
+  exc_pc_sel_e exc_pc_mux_id;          // Mux selector for exception PC
+  exc_cause_e  exc_cause;              // Exception cause
 
   logic        lsu_load_err;
   logic        lsu_store_err;

ParseResult:
UPD HdlIdDef@@misaligned_addr to lsu_addr_last


CommitId: 2c75c2b2ec90bebb756386e1360810474323c1ad
Update lowrisc_ip to lowRISC/opentitan@1ae03937f
--- a/vendor/lowrisc_ip/ip/prim/rtl/prim_secded_28_22_dec.sv
+++ b/vendor/lowrisc_ip/ip/prim/rtl/prim_secded_28_22_dec.sv
@@ -16,11 +16,11 @@ module prim_secded_28_22_dec (
 
   // Syndrome calculation
   assign syndrome_o[0] = ^(in & 28'h07003FF);
-  assign syndrome_o[1] = ^(in & 28'h0B0FC0F);
+  assign syndrome_o[1] = ^(in & 28'h090FC0F);
   assign syndrome_o[2] = ^(in & 28'h1371C71);
   assign syndrome_o[3] = ^(in & 28'h23B6592);
-  assign syndrome_o[4] = ^(in & 28'h42DAAA4);
-  assign syndrome_o[5] = ^(in & 28'h81ED348);
+  assign syndrome_o[4] = ^(in & 28'h43DAAA4);
+  assign syndrome_o[5] = ^(in & 28'h82ED348);
 
   // Corrected output calculation
   assign d_o[0] = (syndrome_o == 6'h7) ^ in[0];

ParseResult:
UPD HdlStmAssign@@ to 
    UPD HdlOp@@XOR_UNARY to XOR_UNARY
        UPD HdlOp@@AND to AND
            UPD HdlValueInt@@0b0fc0f to 090fc0f

UPD HdlStmAssign@@ to 
    UPD HdlOp@@XOR_UNARY to XOR_UNARY
        UPD HdlOp@@AND to AND
            UPD HdlValueInt@@42daaa4 to 43daaa4

UPD HdlStmAssign@@ to 
    UPD HdlOp@@XOR_UNARY to XOR_UNARY
        UPD HdlOp@@AND to AND
            UPD HdlValueInt@@81ed348 to 82ed348


CommitId: 2c75c2b2ec90bebb756386e1360810474323c1ad
Update lowrisc_ip to lowRISC/opentitan@1ae03937f
--- a/vendor/lowrisc_ip/ip/prim/rtl/prim_secded_28_22_dec.sv
+++ b/vendor/lowrisc_ip/ip/prim/rtl/prim_secded_28_22_dec.sv
@@ -43,8 +43,8 @@ module prim_secded_28_22_dec (
   assign d_o[17] = (syndrome_o == 6'h2c) ^ in[17];
   assign d_o[18] = (syndrome_o == 6'h34) ^ in[18];
   assign d_o[19] = (syndrome_o == 6'h38) ^ in[19];
-  assign d_o[20] = (syndrome_o == 6'h2f) ^ in[20];
-  assign d_o[21] = (syndrome_o == 6'h1f) ^ in[21];
+  assign d_o[20] = (syndrome_o == 6'h1f) ^ in[20];
+  assign d_o[21] = (syndrome_o == 6'h3d) ^ in[21];
 
   // err_o calc. bit0: single error, bit1: double error
   assign single_error = ^syndrome_o;
ParseResult:
UPD HdlStmAssign@@ to 
    UPD HdlOp@@XOR to XOR
        MOV HdlOp@@EQ to ops
        HdlOp: EQ
            list: ops
                HdlValueId: syndrome_o
                HdlValueInt: 1f

UPD HdlStmAssign@@ to 
    UPD HdlOp@@XOR to XOR
        INS HdlOp@@EQ to ops
        HdlOp: EQ
            list: ops
                HdlValueId: syndrome_o
                HdlValueInt: 3d

UPD HdlStmAssign@@ to 
    UPD HdlOp@@XOR to XOR
        DEL HdlOp@@EQ from ops
        HdlOp: EQ
            list: ops
                HdlValueId: syndrome_o
                HdlValueInt: 2f


CommitId: 7a5c8ef5c65f670920b5698f458397126db3bb99
Fix clear operation for performance counters in CSR.
--- a/rtl/ibex_cs_registers.sv
+++ b/rtl/ibex_cs_registers.sv
@@ -491,9 +491,9 @@ module ibex_cs_registers #(
     if (is_pccr) begin
       unique case (csr_op_i)
         CSR_OP_NONE:   ;
-        CSR_OP_WRITE:  PCCR_n[0] = csr_wdata_i;
-        CSR_OP_SET:    PCCR_n[0] = csr_wdata_i | PCCR_q[0];
-        CSR_OP_CLEAR:  PCCR_n[0] = csr_wdata_i & ~(PCCR_q[0]);
+        CSR_OP_WRITE:  PCCR_n[0] =  csr_wdata_i;
+        CSR_OP_SET:    PCCR_n[0] =  csr_wdata_i | PCCR_q[0];
+        CSR_OP_CLEAR:  PCCR_n[0] = ~csr_wdata_i & PCCR_q[0];
         default:       PCCR_n[0] = 'X;
       endcase
     end

ParseResult:
UPD HdlStmCase@@csr_op_i to csr_op_i
    UPD HdlOp@@ASSIGN to ASSIGN
        UPD HdlOp@@AND to ASSIGN
        MOV HdlOp@@AND to ops
        HdlOp: AND
            list: ops
                HdlValueId: csr_wdata_i
                HdlOp: NEG
                    list: ops
                        HdlOp: INDEX
                            list: ops
                                HdlValueId: PCCR_q
                                HdlValueId: c
        MOV HdlOp@@INDEX to ops
        HdlOp: INDEX
            list: ops
                HdlValueId: PCCR_n
                HdlValueId: c
        UPD HdlOp@@AND to AND
            UPD HdlOp@@NEG to AND
            MOV HdlValueId@@csr_wdata_i to ops
            HdlValueId: csr_wdata_i
        DEL list@@ops from ASSIGN
    DEL HdlOp@@ASSIGN from 

UPD HdlStmCase@@csr_op_i to csr_op_i
    UPD HdlOp@@ASSIGN to ASSIGN
        UPD HdlOp@@AND to AND
            INS HdlOp@@NEG to ops
            UPD HdlOp@@NEG to NEG
                INS list@@ops to NEG


CommitId: 7a5c8ef5c65f670920b5698f458397126db3bb99
Fix clear operation for performance counters in CSR.
--- a/rtl/ibex_cs_registers.sv
+++ b/rtl/ibex_cs_registers.sv
@@ -512,9 +512,9 @@ module ibex_cs_registers #(
       if (is_pccr && (pccr_all_sel || pccr_index == c)) begin
         unique case (csr_op_i)
           CSR_OP_NONE:   ;
-          CSR_OP_WRITE:  PCCR_n[c] = csr_wdata_i;
-          CSR_OP_SET:    PCCR_n[c] = csr_wdata_i | PCCR_q[c];
-          CSR_OP_CLEAR:  PCCR_n[c] = csr_wdata_i & ~(PCCR_q[c]);
+          CSR_OP_WRITE:  PCCR_n[c] =  csr_wdata_i;
+          CSR_OP_SET:    PCCR_n[c] =  csr_wdata_i | PCCR_q[c];
+          CSR_OP_CLEAR:  PCCR_n[c] = ~csr_wdata_i & PCCR_q[c];
           default:       PCCR_n[c] = 'X;
         endcase
       end

ParseResult:
UPD HdlStmCase@@csr_op_i to csr_op_i
    INS HdlOp@@ASSIGN to 
    UPD HdlOp@@ASSIGN to ASSIGN
        INS list@@ops to ASSIGN

UPD HdlStmCase@@csr_op_i to csr_op_i
    INS HdlOp@@ASSIGN to 
    UPD HdlOp@@ASSIGN to ASSIGN
        INS list@@ops to ASSIGN

UPD HdlStmCase@@csr_op_i to csr_op_i
    UPD HdlOp@@ASSIGN to ASSIGN
        MOV HdlValueId@@PCMR_n to ops
        HdlValueId: PCMR_n
        UPD HdlOp@@AND to NEG
        UPD HdlOp@@AND to AND
            UPD HdlOp@@NEG to NEG
                MOV HdlValueId@@PCMR_q to ops
                HdlValueId: PCMR_q
                DEL list@@ops from NEG
            DEL HdlOp@@NEG from ops
    UPD HdlOp@@ASSIGN to AND
    MOV HdlOp@@ASSIGN to 
    HdlOp: ASSIGN
        list: ops
            HdlValueId: PCMR_n
            HdlOp: AND
                list: ops
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: csr_wdata_i
                            HdlOp: DOWNTO
                                list: ops
                                    HdlValueInt: 1
                                    HdlValueInt: 0
                    HdlOp: NEG
                        list: ops
                            HdlValueId: PCMR_q

UPD HdlStmCase@@csr_op_i to csr_op_i
    UPD HdlOp@@ASSIGN to ASSIGN
        MOV HdlValueId@@PCER_n to ops
        HdlValueId: PCER_n
        UPD HdlOp@@AND to NEG
        UPD HdlOp@@AND to AND
            UPD HdlOp@@NEG to NEG
                MOV HdlValueId@@PCER_q to ops
                HdlValueId: PCER_q
                DEL list@@ops from NEG
            DEL HdlOp@@NEG from ops
    UPD HdlOp@@ASSIGN to AND
    MOV HdlOp@@ASSIGN to 
    HdlOp: ASSIGN
        list: ops
            HdlValueId: PCER_n
            HdlOp: AND
                list: ops
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: csr_wdata_i
                            HdlOp: DOWNTO
                                list: ops
                                    HdlOp: SUB
                                        list: ops
                                            HdlValueId: N_PERF_COUNTERS
                                            HdlValueInt: 1
                                    HdlValueInt: 0
                    HdlOp: NEG
                        list: ops
                            HdlValueId: PCER_q


CommitId: d717e2385ed2d61290cb52148a79bef433880209
Update lowrisc_ip to lowRISC/opentitan@7aa5c2b89
--- a/vendor/lowrisc_ip/ip/prim/rtl/prim_sync_reqack.sv
+++ b/vendor/lowrisc_ip/ip/prim/rtl/prim_sync_reqack.sv
@@ -38,7 +37,7 @@ module prim_sync_reqack (
 
   // Types
   typedef enum logic {
-    HANDSHAKE, SYNC
+    EVEN, ODD
   } sync_reqack_fsm_e;
 
   // Signals

ParseResult:
INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: AND
        list: ops
            HdlValueId: src_req_i
            HdlValueId: src_ack_o
    HdlValueId: src_handshake


CommitId: d717e2385ed2d61290cb52148a79bef433880209
Update lowrisc_ip to lowRISC/opentitan@7aa5c2b89
--- a/vendor/lowrisc_ip/ip/prim/rtl/prim_sync_reqack.sv
+++ b/vendor/lowrisc_ip/ip/prim/rtl/prim_sync_reqack.sv
@@ -132,7 +147,7 @@ module prim_sync_reqack (
   // Registers
   always_ff @(posedge clk_src_i or negedge rst_src_ni) begin
     if (!rst_src_ni) begin
-      src_fsm_cs <= HANDSHAKE;
+      src_fsm_cs <= EVEN;
       src_req_q  <= 1'b0;
     end else begin
       src_fsm_cs <= src_fsm_ns;

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: src_req_d
                HdlValueId: src_req_q

UPD HdlStmCase@@src_fsm_cs to src_fsm_cs
    UPD HdlStmBlock@@SEQ to SEQ
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: src_ack_o
                HdlValueInt: 0
        UPD HdlOp@@ASSIGN to ASSIGN
            DEL HdlValueInt@@0 from ops
    UPD HdlValueId@@HANDSHAKE to EVEN
    UPD HdlValueId@@SYNC to ODD

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: src_req_d
                HdlValueId: src_req_i
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: src_ack_o
                HdlValueId: src_ack

UPD HdlStmCase@@src_fsm_cs to src_fsm_cs
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        UPD HdlOp@@ASSIGN to ASSIGN
            INS list@@ops to ASSIGN
            INS HdlValueId@@src_ack_o to ops
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlOp@@NEG to ops
            HdlOp: NEG
                list: ops
                    HdlValueId: src_req_i


CommitId: d717e2385ed2d61290cb52148a79bef433880209
Update lowrisc_ip to lowRISC/opentitan@7aa5c2b89
--- a/vendor/lowrisc_ip/ip/prim/rtl/prim_sync_reqack.sv
+++ b/vendor/lowrisc_ip/ip/prim/rtl/prim_sync_reqack.sv
@@ -141,7 +156,7 @@ module prim_sync_reqack (
   end
   always_ff @(posedge clk_dst_i or negedge rst_dst_ni) begin
     if (!rst_dst_ni) begin
-      dst_fsm_cs <= HANDSHAKE;
+      dst_fsm_cs <= EVEN;
       dst_ack_q  <= 1'b0;
     end else begin
       dst_fsm_cs <= dst_fsm_ns;

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: src_req_d
                HdlValueId: src_req_q

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: src_req_d
                HdlValueId: src_req_i
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: src_ack_o
                HdlValueId: src_ack

UPD HdlStmCase@@src_fsm_cs to src_fsm_cs
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        UPD HdlOp@@ASSIGN to ASSIGN
            INS list@@ops to ASSIGN
            INS HdlValueId@@src_ack_o to ops
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlOp@@NEG to ops
            HdlOp: NEG
                list: ops
                    HdlValueId: src_req_i

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: dst_req_o
                HdlValueId: dst_req
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: dst_ack_d
                HdlValueId: dst_ack_i

UPD HdlStmIf@@ to 
    INS HdlValueId@@src_handshake to 


CommitId: d717e2385ed2d61290cb52148a79bef433880209
Update lowrisc_ip to lowRISC/opentitan@7aa5c2b89
--- a/vendor/lowrisc_ip/ip/prim/rtl/prim_sync_reqack.sv
+++ b/vendor/lowrisc_ip/ip/prim/rtl/prim_sync_reqack.sv
@@ -149,10 +164,10 @@ module prim_sync_reqack (
     end
   end
 
-  // Source domain cannot de-assert REQ while waiting for ACK.
-  `ASSERT(ReqAckSyncHoldReq, $fell(src_req_i) |-> (src_fsm_cs != HANDSHAKE), clk_src_i, !rst_src_ni)
+  // SRC domain can only de-assert REQ after receiving ACK.
+  `ASSERT(SyncReqAckHoldReq, $fell(src_req_i) |-> $fell(src_ack_o), clk_src_i, !rst_src_ni)
 
-  // Destination domain cannot assert ACK without REQ.
-  `ASSERT(ReqAckSyncAckNeedsReq, dst_ack_i |-> dst_req_o, clk_dst_i, !rst_dst_ni)
+  // DST domain cannot assert ACK without REQ.
+  `ASSERT(SyncReqAckAckNeedsReq, dst_ack_i |-> dst_req_o, clk_dst_i, !rst_dst_ni)
 
 endmodule
ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: src_req_d
                HdlValueId: src_req_q

UPD HdlStmCase@@dst_fsm_cs to dst_fsm_cs
    UPD HdlStmBlock@@SEQ to SEQ
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: dst_req_o
                HdlValueInt: 0
        UPD HdlOp@@ASSIGN to ASSIGN
            DEL HdlValueInt@@1 from ops
    UPD HdlValueId@@HANDSHAKE to EVEN
    UPD HdlValueId@@SYNC to ODD

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: dst_ack_d
                HdlValueId: dst_ack_q

UPD HdlStmCase@@src_fsm_cs to src_fsm_cs
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        UPD HdlOp@@ASSIGN to ASSIGN
            INS list@@ops to ASSIGN
            INS HdlValueId@@src_ack_o to ops
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlOp@@NEG to ops
            HdlOp: NEG
                list: ops
                    HdlValueId: src_req_i

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: dst_req_o
                HdlValueId: dst_req
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: dst_ack_d
                HdlValueId: dst_ack_i


CommitId: 0305803e1865b4da5f1b967ff43e2f14821d37b9
Fix alignment in tracer, add `INSTR_LOAD/STORE` parameter
--- a/rtl/ibex_tracer.sv
+++ b/rtl/ibex_tracer.sv
@@ -335,7 +335,7 @@ module ibex_tracer #(
       // use casex instead of case inside due to ModelSim bug
       casex (instr_i)
         // Aliases
-        32'h00_00_00_13:   trace.printMnemonic("nop");
+        32'h00_00_00_13:  trace.printMnemonic("nop");
         // Regular opcodes
         INSTR_LUI:        trace.printUInstr("lui");
         INSTR_AUIPC:      trace.printUInstr("auipc");

ParseResult:
UPD HdlStmCase@@instr_i to instr_i
    UPD HdlOp@@CONCAT to CONCAT
        UPD HdlValueId@@OPCODE_LOAD to INSTR_LOAD
        MOV HdlValueId@@OPCODE_LOAD to ops
        HdlValueId: OPCODE_LOAD
        DEL HdlValueInt@@? from ops
        DEL list@@ops from CONCAT
    UPD HdlOp@@CONCAT to CONCAT
        UPD HdlValueId@@OPCODE_STORE to INSTR_STORE
        MOV HdlValueId@@OPCODE_STORE to ops
        HdlValueId: OPCODE_STORE
        DEL HdlValueInt@@? from ops
        DEL list@@ops from CONCAT
    DEL HdlOp@@CONCAT from 
    DEL HdlOp@@CONCAT from 


CommitId: 0305803e1865b4da5f1b967ff43e2f14821d37b9
Fix alignment in tracer, add `INSTR_LOAD/STORE` parameter
--- a/rtl/ibex_tracer.sv
+++ b/rtl/ibex_tracer.sv
@@ -391,9 +391,10 @@ module ibex_tracer #(
         INSTR_DIVU:       trace.printRInstr("divu");
         INSTR_REM:        trace.printRInstr("rem");
         INSTR_REMU:       trace.printRInstr("remu");
-        {25'b?, {OPCODE_LOAD}}:     trace.printLoadInstr();
-        {25'b?, {OPCODE_STORE}}:    trace.printStoreInstr();
-        default:           trace.printMnemonic("INVALID");
+        // LOAD & STORE
+        INSTR_LOAD:       trace.printLoadInstr();
+        INSTR_STORE:      trace.printStoreInstr();
+        default:          trace.printMnemonic("INVALID");
       endcase // unique case (instr_i)
 
       // replace register written back
ParseResult:
UPD HdlStmCase@@instr_i to instr_i
    UPD HdlOp@@CONCAT to CONCAT
        UPD HdlValueId@@OPCODE_LOAD to INSTR_LOAD
        MOV HdlValueId@@OPCODE_LOAD to ops
        HdlValueId: OPCODE_LOAD
        DEL HdlValueInt@@? from ops
        DEL list@@ops from CONCAT
    UPD HdlOp@@CONCAT to CONCAT
        UPD HdlValueId@@OPCODE_STORE to INSTR_STORE
        MOV HdlValueId@@OPCODE_STORE to ops
        HdlValueId: OPCODE_STORE
        DEL HdlValueInt@@? from ops
        DEL list@@ops from CONCAT
    DEL HdlOp@@CONCAT from 
    DEL HdlOp@@CONCAT from 


CommitId: 428d057c4a941681e8ede6625eaf6c76a4b3fa8c
Rename ibex_[tracer_]define to ibex_[tracer_]pkg
--- a/rtl/ibex_alu.sv
+++ b/rtl/ibex_alu.sv
@@ -22,23 +22,23 @@
  * Arithmetic logic unit
  */
 module ibex_alu (
-    input  ibex_defines::alu_op_e operator_i,
-    input  logic [31:0]           operand_a_i,
-    input  logic [31:0]           operand_b_i,
+    input  ibex_pkg::alu_op_e operator_i,
+    input  logic [31:0]       operand_a_i,
+    input  logic [31:0]       operand_b_i,
 
-    input  logic [32:0]           multdiv_operand_a_i,
-    input  logic [32:0]           multdiv_operand_b_i,
+    input  logic [32:0]       multdiv_operand_a_i,
+    input  logic [32:0]       multdiv_operand_b_i,
 
-    input  logic                  multdiv_en_i,
+    input  logic              multdiv_en_i,
 
-    output logic [31:0]           adder_result_o,
-    output logic [33:0]           adder_result_ext_o,
+    output logic [31:0]       adder_result_o,
+    output logic [33:0]       adder_result_ext_o,
 
-    output logic [31:0]           result_o,
-    output logic                  comparison_result_o,
-    output logic                  is_equal_result_o
+    output logic [31:0]       result_o,
+    output logic              comparison_result_o,
+    output logic              is_equal_result_o
 );
-  import ibex_defines::*;
+  import ibex_pkg::*;
 
   logic [31:0] operand_a_rev;
   logic [32:0] operand_b_neg;
ParseResult:
UPD HdlModuleDef@@ibex_alu to ibex_alu
    UPD HdlImport@@ to 
        UPD HdlValueId@@ibex_defines to ibex_pkg

UPD HdlIdDef@@operator_i to operator_i
    UPD HdlOp@@DOUBLE_COLON to DOUBLE_COLON
        UPD HdlValueId@@ibex_defines to ibex_pkg


CommitId: 6b0475744dba1991664be9c780a5c727586c8a9d
Code cleanup
--- a/rtl/ibex_compressed_decoder.sv
+++ b/rtl/ibex_compressed_decoder.sv
@@ -52,18 +49,22 @@ module ibex_compressed_decoder
         unique case (instr_i[15:13])
           3'b000: begin
             // c.addi4spn -> addi rd', x2, imm
-            instr_o = {2'b0, instr_i[10:7], instr_i[12:11], instr_i[5], instr_i[6], 2'b00, 5'h02, 3'b000, 2'b01, instr_i[4:2], OPCODE_OPIMM};
+            instr_o = {2'b0, instr_i[10:7], instr_i[12:11], instr_i[5],
+                       instr_i[6], 2'b00, 5'h02, 3'b000, 2'b01, instr_i[4:2], OPCODE_OPIMM};
             if (instr_i[12:5] == 8'b0)  illegal_instr_o = 1'b1;
           end
 
           3'b010: begin
             // c.lw -> lw rd', imm(rs1')
-            instr_o = {5'b0, instr_i[5], instr_i[12:10], instr_i[6], 2'b00, 2'b01, instr_i[9:7], 3'b010, 2'b01, instr_i[4:2], OPCODE_LOAD};
+            instr_o = {5'b0, instr_i[5], instr_i[12:10], instr_i[6],
+                       2'b00, 2'b01, instr_i[9:7], 3'b010, 2'b01, instr_i[4:2], OPCODE_LOAD};
           end
 
           3'b110: begin
             // c.sw -> sw rs2', imm(rs1')
-            instr_o = {5'b0, instr_i[5], instr_i[12], 2'b01, instr_i[4:2], 2'b01, instr_i[9:7], 3'b010, instr_i[11:10], instr_i[6], 2'b00, OPCODE_STORE};
+            instr_o = {5'b0, instr_i[5], instr_i[12], 2'b01, instr_i[4:2],
+                       2'b01, instr_i[9:7], 3'b010, instr_i[11:10], instr_i[6],
+                       2'b00, OPCODE_STORE};
           end
 
           default: begin

ParseResult:
UPD HdlModuleDef@@ibex_compressed_decoder to ibex_compressed_decoder
    INS HdlImport@@ to objs
    HdlImport
        list: path
            HdlValueId: ibex_defines
            HdlAll

UPD HdlStmProcess@@ to 
    INS HdlStmProcessTriggerConstrain@@COMB to 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '1'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '1'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    INS HdlStmCaseType@@CASE to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '1'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    INS HdlStmCaseUniqConstrain@@UNIQUE to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '1'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    INS HdlValueInt@@01 to 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '1'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '1'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    DEL HdlStmCaseType@@CASE from {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '1'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    DEL HdlValueInt@@01 from 
    DEL HdlStmCaseUniqConstrain@@UNIQUE from {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '1'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 

UPD HdlStmProcess@@ to 
    DEL HdlStmProcessTriggerConstrain@@COMB from 


CommitId: 6b0475744dba1991664be9c780a5c727586c8a9d
Code cleanup
--- a/rtl/ibex_compressed_decoder.sv
+++ b/rtl/ibex_compressed_decoder.sv
@@ -78,18 +79,22 @@ module ibex_compressed_decoder
           3'b000: begin
             // c.addi -> addi rd, rd, nzimm
             // c.nop
-            instr_o = {{6 {instr_i[12]}}, instr_i[12], instr_i[6:2], instr_i[11:7], 3'b0, instr_i[11:7], OPCODE_OPIMM};
+            instr_o = {{6 {instr_i[12]}}, instr_i[12], instr_i[6:2],
+                       instr_i[11:7], 3'b0, instr_i[11:7], OPCODE_OPIMM};
           end
 
           3'b001, 3'b101: begin
             // 001: c.jal -> jal x1, imm
             // 101: c.j   -> jal x0, imm
-            instr_o = {instr_i[12], instr_i[8], instr_i[10:9], instr_i[6], instr_i[7], instr_i[2], instr_i[11], instr_i[5:3], {9 {instr_i[12]}}, 4'b0, ~instr_i[15], OPCODE_JAL};
+            instr_o = {instr_i[12], instr_i[8], instr_i[10:9], instr_i[6],
+                       instr_i[7], instr_i[2], instr_i[11], instr_i[5:3],
+                       {9 {instr_i[12]}}, 4'b0, ~instr_i[15], OPCODE_JAL};
           end
 
           3'b010: begin
             // c.li -> addi rd, x0, nzimm
-            instr_o = {{6 {instr_i[12]}}, instr_i[12], instr_i[6:2], 5'b0, 3'b0, instr_i[11:7], OPCODE_OPIMM};
+            instr_o = {{6 {instr_i[12]}}, instr_i[12], instr_i[6:2], 5'b0,
+                       3'b0, instr_i[11:7], OPCODE_OPIMM};
             if (instr_i[11:7] == 5'b0)  illegal_instr_o = 1'b1;
           end
 

ParseResult:
UPD HdlModuleDef@@ibex_compressed_decoder to ibex_compressed_decoder
    INS HdlImport@@ to objs
    HdlImport
        list: path
            HdlValueId: ibex_defines
            HdlAll

UPD HdlStmProcess@@ to 
    INS HdlStmProcessTriggerConstrain@@COMB to 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '1'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '1'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    INS HdlStmCaseType@@CASE to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '1'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    INS HdlStmCaseUniqConstrain@@UNIQUE to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '1'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    INS HdlValueInt@@01 to 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '15'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '13'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '15'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '13'}]}]} 
    INS HdlStmCaseType@@CASE to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '15'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '13'}]}]} 
    INS HdlStmBlock@@SEQ to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '15'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '13'}]}]} 
    HdlStmBlock: SEQ
        list: body
    INS HdlStmCaseUniqConstrain@@UNIQUE to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '15'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '13'}]}]} 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '1'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '1'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    DEL HdlStmCaseType@@CASE from {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '1'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    DEL HdlValueInt@@01 from 
    DEL HdlStmCaseUniqConstrain@@UNIQUE from {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '1'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '15'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '13'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '15'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '13'}]}]} 
    DEL HdlStmCaseType@@CASE from {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '15'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '13'}]}]} 
    DEL HdlStmBlock@@SEQ from {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '15'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '13'}]}]} 
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: illegal_instr_o
                    HdlValueInt: 1
    DEL HdlStmCaseUniqConstrain@@UNIQUE from {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '15'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '13'}]}]} 

UPD HdlStmProcess@@ to 
    DEL HdlStmProcessTriggerConstrain@@COMB from 


CommitId: 6b0475744dba1991664be9c780a5c727586c8a9d
Code cleanup
--- a/rtl/ibex_compressed_decoder.sv
+++ b/rtl/ibex_compressed_decoder.sv
@@ -99,7 +104,8 @@ module ibex_compressed_decoder
 
             if (instr_i[11:7] == 5'h02) begin
               // c.addi16sp -> addi x2, x2, nzimm
-              instr_o = {{3 {instr_i[12]}}, instr_i[4:3], instr_i[5], instr_i[2], instr_i[6], 4'b0, 5'h02, 3'b000, 5'h02, OPCODE_OPIMM};
+              instr_o = {{3 {instr_i[12]}}, instr_i[4:3], instr_i[5], instr_i[2],
+                         instr_i[6], 4'b0, 5'h02, 3'b000, 5'h02, OPCODE_OPIMM};
             end else if (instr_i[11:7] == 5'b0) begin
               illegal_instr_o = 1'b1;
             end

ParseResult:
UPD HdlModuleDef@@ibex_compressed_decoder to ibex_compressed_decoder
    INS HdlImport@@ to objs
    HdlImport
        list: path
            HdlValueId: ibex_defines
            HdlAll

UPD HdlStmProcess@@ to 
    INS HdlStmProcessTriggerConstrain@@COMB to 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '1'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '1'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    INS HdlStmCaseType@@CASE to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '1'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    INS HdlStmCaseUniqConstrain@@UNIQUE to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '1'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    INS HdlValueInt@@01 to 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '15'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '13'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '15'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '13'}]}]} 
    INS HdlStmCaseType@@CASE to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '15'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '13'}]}]} 
    INS HdlStmBlock@@SEQ to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '15'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '13'}]}]} 
    HdlStmBlock: SEQ
        list: body
    INS HdlStmCaseUniqConstrain@@UNIQUE to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '15'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '13'}]}]} 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '1'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '1'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    DEL HdlStmCaseType@@CASE from {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '1'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    DEL HdlValueInt@@01 from 
    DEL HdlStmCaseUniqConstrain@@UNIQUE from {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '1'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '15'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '13'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '15'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '13'}]}]} 
    DEL HdlStmCaseType@@CASE from {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '15'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '13'}]}]} 
    DEL HdlStmBlock@@SEQ from {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '15'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '13'}]}]} 
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: illegal_instr_o
                    HdlValueInt: 1
    DEL HdlStmCaseUniqConstrain@@UNIQUE from {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '15'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '13'}]}]} 

UPD HdlStmProcess@@ to 
    DEL HdlStmProcessTriggerConstrain@@COMB from 


CommitId: 6b0475744dba1991664be9c780a5c727586c8a9d
Code cleanup
--- a/rtl/ibex_compressed_decoder.sv
+++ b/rtl/ibex_compressed_decoder.sv
@@ -113,36 +119,42 @@ module ibex_compressed_decoder
               2'b01: begin
                 // 00: c.srli -> srli rd, rd, shamt
                 // 01: c.srai -> srai rd, rd, shamt
-                instr_o = {1'b0, instr_i[10], 5'b0, instr_i[6:2], 2'b01, instr_i[9:7], 3'b101, 2'b01, instr_i[9:7], OPCODE_OPIMM};
+                instr_o = {1'b0, instr_i[10], 5'b0, instr_i[6:2], 2'b01, instr_i[9:7],
+                           3'b101, 2'b01, instr_i[9:7], OPCODE_OPIMM};
                 if (instr_i[12] == 1'b1)  illegal_instr_o = 1'b1;
                 if (instr_i[6:2] == 5'b0) illegal_instr_o = 1'b1;
               end
 
               2'b10: begin
                 // c.andi -> andi rd, rd, imm
-                instr_o = {{6 {instr_i[12]}}, instr_i[12], instr_i[6:2], 2'b01, instr_i[9:7], 3'b111, 2'b01, instr_i[9:7], OPCODE_OPIMM};
+                instr_o = {{6 {instr_i[12]}}, instr_i[12], instr_i[6:2], 2'b01, instr_i[9:7],
+                           3'b111, 2'b01, instr_i[9:7], OPCODE_OPIMM};
               end
 
               2'b11: begin
                 unique case ({instr_i[12], instr_i[6:5]})
                   3'b000: begin
                     // c.sub -> sub rd', rd', rs2'
-                    instr_o = {2'b01, 5'b0, 2'b01, instr_i[4:2], 2'b01, instr_i[9:7], 3'b000, 2'b01, instr_i[9:7], OPCODE_OP};
+                    instr_o = {2'b01, 5'b0, 2'b01, instr_i[4:2], 2'b01, instr_i[9:7],
+                               3'b000, 2'b01, instr_i[9:7], OPCODE_OP};
                   end
 
                   3'b001: begin
                     // c.xor -> xor rd', rd', rs2'
-                    instr_o = {7'b0, 2'b01, instr_i[4:2], 2'b01, instr_i[9:7], 3'b100, 2'b01, instr_i[9:7], OPCODE_OP};
+                    instr_o = {7'b0, 2'b01, instr_i[4:2], 2'b01, instr_i[9:7], 3'b100,
+                               2'b01, instr_i[9:7], OPCODE_OP};
                   end
 
                   3'b010: begin
                     // c.or  -> or  rd', rd', rs2'
-                    instr_o = {7'b0, 2'b01, instr_i[4:2], 2'b01, instr_i[9:7], 3'b110, 2'b01, instr_i[9:7], OPCODE_OP};
+                    instr_o = {7'b0, 2'b01, instr_i[4:2], 2'b01, instr_i[9:7], 3'b110,
+                               2'b01, instr_i[9:7], OPCODE_OP};
                   end
 
                   3'b011: begin
                     // c.and -> and rd', rd', rs2'
-                    instr_o = {7'b0, 2'b01, instr_i[4:2], 2'b01, instr_i[9:7], 3'b111, 2'b01, instr_i[9:7], OPCODE_OP};
+                    instr_o = {7'b0, 2'b01, instr_i[4:2], 2'b01, instr_i[9:7], 3'b111,
+                               2'b01, instr_i[9:7], OPCODE_OP};
                   end
 
                   3'b100,

ParseResult:
UPD HdlModuleDef@@ibex_compressed_decoder to ibex_compressed_decoder
    INS HdlImport@@ to objs
    HdlImport
        list: path
            HdlValueId: ibex_defines
            HdlAll

UPD HdlStmProcess@@ to 
    INS HdlStmProcessTriggerConstrain@@COMB to 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '1'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '1'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    INS HdlStmCaseType@@CASE to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '1'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    INS HdlStmCaseUniqConstrain@@UNIQUE to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '1'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    INS HdlValueInt@@01 to 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '15'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '13'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '15'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '13'}]}]} 
    INS HdlStmCaseType@@CASE to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '15'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '13'}]}]} 
    INS HdlStmBlock@@SEQ to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '15'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '13'}]}]} 
    HdlStmBlock: SEQ
        list: body
    INS HdlStmCaseUniqConstrain@@UNIQUE to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '15'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '13'}]}]} 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '1'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '1'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    DEL HdlStmCaseType@@CASE from {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '1'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    DEL HdlValueInt@@01 from 
    DEL HdlStmCaseUniqConstrain@@UNIQUE from {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '1'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '15'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '13'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '15'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '13'}]}]} 
    DEL HdlStmCaseType@@CASE from {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '15'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '13'}]}]} 
    DEL HdlStmBlock@@SEQ from {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '15'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '13'}]}]} 
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: illegal_instr_o
                    HdlValueInt: 1
    DEL HdlStmCaseUniqConstrain@@UNIQUE from {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '15'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '13'}]}]} 

UPD HdlStmProcess@@ to 
    DEL HdlStmProcessTriggerConstrain@@COMB from 


CommitId: 6b0475744dba1991664be9c780a5c727586c8a9d
Code cleanup
--- a/rtl/ibex_compressed_decoder.sv
+++ b/rtl/ibex_compressed_decoder.sv
@@ -161,11 +173,13 @@ module ibex_compressed_decoder
           3'b110, 3'b111: begin
             // 0: c.beqz -> beq rs1', x0, imm
             // 1: c.bnez -> bne rs1', x0, imm
-            instr_o = {{4 {instr_i[12]}}, instr_i[6:5], instr_i[2], 5'b0, 2'b01, instr_i[9:7], 2'b00, instr_i[13], instr_i[11:10], instr_i[4:3], instr_i[12], OPCODE_BRANCH};
+            instr_o = {{4 {instr_i[12]}}, instr_i[6:5], instr_i[2], 5'b0, 2'b01,
+                       instr_i[9:7], 2'b00, instr_i[13], instr_i[11:10], instr_i[4:3],
+                       instr_i[12], OPCODE_BRANCH};
           end
 
           default: begin
-            illegal_instr_o = 1'b1;
+            // illegal_instr_o = 1'b1;         // not reachable, dead code, commenting out
           end
         endcase
       end

ParseResult:
UPD HdlModuleDef@@ibex_compressed_decoder to ibex_compressed_decoder
    INS HdlImport@@ to objs
    HdlImport
        list: path
            HdlValueId: ibex_defines
            HdlAll

UPD HdlStmProcess@@ to 
    INS HdlStmProcessTriggerConstrain@@COMB to 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '1'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '1'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    INS HdlStmCaseType@@CASE to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '1'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    INS HdlStmCaseUniqConstrain@@UNIQUE to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '1'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    INS HdlValueInt@@01 to 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '15'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '13'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '15'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '13'}]}]} 
    INS HdlStmCaseType@@CASE to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '15'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '13'}]}]} 
    INS HdlStmBlock@@SEQ to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '15'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '13'}]}]} 
    HdlStmBlock: SEQ
        list: body
    INS HdlStmCaseUniqConstrain@@UNIQUE to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '15'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '13'}]}]} 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '1'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '1'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    DEL HdlStmCaseType@@CASE from {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '1'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    DEL HdlValueInt@@01 from 
    DEL HdlStmCaseUniqConstrain@@UNIQUE from {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '1'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '15'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '13'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '15'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '13'}]}]} 
    DEL HdlStmCaseType@@CASE from {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '15'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '13'}]}]} 
    DEL HdlStmBlock@@SEQ from {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '15'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '13'}]}]} 
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: illegal_instr_o
                    HdlValueInt: 1
    DEL HdlStmCaseUniqConstrain@@UNIQUE from {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '15'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '13'}]}]} 

UPD HdlStmProcess@@ to 
    DEL HdlStmProcessTriggerConstrain@@COMB from 


CommitId: 6b0475744dba1991664be9c780a5c727586c8a9d
Code cleanup
--- a/rtl/ibex_compressed_decoder.sv
+++ b/rtl/ibex_compressed_decoder.sv
@@ -182,7 +196,8 @@ module ibex_compressed_decoder
 
           3'b010: begin
             // c.lwsp -> lw rd, imm(x2)
-            instr_o = {4'b0, instr_i[3:2], instr_i[12], instr_i[6:4], 2'b00, 5'h02, 3'b010, instr_i[11:7], OPCODE_LOAD};
+            instr_o = {4'b0, instr_i[3:2], instr_i[12], instr_i[6:4], 2'b00, 5'h02,
+                       3'b010, instr_i[11:7], OPCODE_LOAD};
             if (instr_i[11:7] == 5'b0)  illegal_instr_o = 1'b1;
           end
 

ParseResult:
UPD HdlModuleDef@@ibex_compressed_decoder to ibex_compressed_decoder
    INS HdlImport@@ to objs
    HdlImport
        list: path
            HdlValueId: ibex_defines
            HdlAll

UPD HdlStmProcess@@ to 
    INS HdlStmProcessTriggerConstrain@@COMB to 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '1'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '1'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    INS HdlStmCaseType@@CASE to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '1'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    INS HdlStmCaseUniqConstrain@@UNIQUE to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '1'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    INS HdlValueInt@@01 to 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '15'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '13'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '15'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '13'}]}]} 
    INS HdlStmCaseType@@CASE to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '15'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '13'}]}]} 
    INS HdlStmBlock@@SEQ to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '15'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '13'}]}]} 
    HdlStmBlock: SEQ
        list: body
    INS HdlStmCaseUniqConstrain@@UNIQUE to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '15'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '13'}]}]} 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '1'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '1'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    DEL HdlStmCaseType@@CASE from {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '1'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    DEL HdlValueInt@@01 from 
    DEL HdlStmCaseUniqConstrain@@UNIQUE from {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '1'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 

UPD HdlStmProcess@@ to 
    DEL HdlStmProcessTriggerConstrain@@COMB from 


CommitId: 6b0475744dba1991664be9c780a5c727586c8a9d
Code cleanup
--- a/rtl/ibex_compressed_decoder.sv
+++ b/rtl/ibex_compressed_decoder.sv
@@ -202,8 +217,7 @@ module ibex_compressed_decoder
               if (instr_i[11:7] == 5'b0) begin
                 // c.ebreak -> ebreak
                 instr_o = {32'h00_10_00_73};
-                if (instr_i[6:2] != 5'b0)
-                  illegal_instr_o = 1'b1;
+                if (instr_i[6:2] != 5'b0) illegal_instr_o = 1'b1;
               end else if (instr_i[6:2] == 5'b0) begin
                 // c.jalr -> jalr x1, rs1, 0
                 instr_o = {12'b0, instr_i[11:7], 3'b000, 5'b00001, OPCODE_JALR};

ParseResult:
UPD HdlModuleDef@@ibex_compressed_decoder to ibex_compressed_decoder
    INS HdlImport@@ to objs
    HdlImport
        list: path
            HdlValueId: ibex_defines
            HdlAll

UPD HdlStmProcess@@ to 
    INS HdlStmProcessTriggerConstrain@@COMB to 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '1'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '1'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    INS HdlStmCaseType@@CASE to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '1'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    INS HdlStmCaseUniqConstrain@@UNIQUE to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '1'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    INS HdlValueInt@@01 to 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '1'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '1'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    DEL HdlStmCaseType@@CASE from {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '1'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    DEL HdlValueInt@@01 from 
    DEL HdlStmCaseUniqConstrain@@UNIQUE from {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '1'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 

UPD HdlStmProcess@@ to 
    DEL HdlStmProcessTriggerConstrain@@COMB from 


CommitId: 6b0475744dba1991664be9c780a5c727586c8a9d
Code cleanup
--- a/rtl/ibex_compressed_decoder.sv
+++ b/rtl/ibex_compressed_decoder.sv
@@ -213,7 +227,8 @@ module ibex_compressed_decoder
 
           3'b110: begin
             // c.swsp -> sw rs2, imm(x2)
-            instr_o = {4'b0, instr_i[8:7], instr_i[12], instr_i[6:2], 5'h02, 3'b010, instr_i[11:9], 2'b00, OPCODE_STORE};
+            instr_o = {4'b0, instr_i[8:7], instr_i[12], instr_i[6:2], 5'h02, 3'b010,
+                       instr_i[11:9], 2'b00, OPCODE_STORE};
           end
 
           default: begin
ParseResult:
UPD HdlModuleDef@@ibex_compressed_decoder to ibex_compressed_decoder
    INS HdlImport@@ to objs
    HdlImport
        list: path
            HdlValueId: ibex_defines
            HdlAll

UPD HdlStmProcess@@ to 
    INS HdlStmProcessTriggerConstrain@@COMB to 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '1'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '1'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    INS HdlStmCaseType@@CASE to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '1'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    INS HdlStmCaseUniqConstrain@@UNIQUE to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '1'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    INS HdlValueInt@@01 to 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '1'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '1'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    DEL HdlStmCaseType@@CASE from {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '1'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    DEL HdlValueInt@@01 from 
    DEL HdlStmCaseUniqConstrain@@UNIQUE from {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '1'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 

UPD HdlStmProcess@@ to 
    DEL HdlStmProcessTriggerConstrain@@COMB from 


CommitId: 0f2dc5c64ada16118a8621df9f34cf07eb943f4e
[rtl] Avoid latch creation
--- a/shared/rtl/bus.sv
+++ b/shared/rtl/bus.sv
@@ -59,6 +59,7 @@ module bus #(
 
   // Master select prio arbiter
   always_comb begin
+    host_sel_req = '0;
     for (integer host = NrHosts - 1; host >= 0; host = host - 1) begin
       if (host_req_i[host]) begin
         host_sel_req = NumBitsHostSel'(host);

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: host_sel_req
                HdlValueInt: 0


CommitId: 0f2dc5c64ada16118a8621df9f34cf07eb943f4e
[rtl] Avoid latch creation
--- a/shared/rtl/bus.sv
+++ b/shared/rtl/bus.sv
@@ -68,6 +69,7 @@ module bus #(
 
   // Device select
   always_comb begin
+    device_sel_req = '0;
     for (integer device = 0; device < NrDevices; device = device + 1) begin
       if ((host_addr_i[host_sel_req] & cfg_device_addr_mask[device])
           == cfg_device_addr_base[device]) begin
ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: host_sel_req
                HdlValueInt: 0

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: device_sel_req
                HdlValueInt: 0


CommitId: ab4c8699fbc854220749c49c67fa0b860a69711d
Simplify default assignments to enum types
--- a/rtl/ibex_cs_registers.sv
+++ b/rtl/ibex_cs_registers.sv
@@ -239,7 +239,7 @@ module ibex_cs_registers #(
         mstatus_n = '{
           mie:  csr_wdata_int[`MSTATUS_MIE_BITS],
           mpie: csr_wdata_int[`MSTATUS_MPIE_BITS],
-          mpp:  priv_lvl_e'(PRIV_LVL_M)
+          mpp:  PRIV_LVL_M
         };
       end
       // mepc: exception program counter

ParseResult:
UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@MAP_ASSOCIATION to MAP_ASSOCIATION
                UPD HdlOp@@CALL to CALL
                    MOV HdlValueId@@PRIV_LVL_M to ops
                    HdlValueId: PRIV_LVL_M
                    DEL HdlValueId@@priv_lvl_e from ops
                    DEL list@@ops from CALL
                DEL HdlOp@@CALL from ops


CommitId: ab4c8699fbc854220749c49c67fa0b860a69711d
Simplify default assignments to enum types
--- a/rtl/ibex_cs_registers.sv
+++ b/rtl/ibex_cs_registers.sv
@@ -371,8 +371,8 @@ module ibex_cs_registers #(
 
       depc_q      <= '0;
       dcsr_q     <= '{
-        xdebugver: x_debug_ver_e'({$bits(x_debug_ver_e){1'b0}}),
-        cause:     dbg_cause_e'({$bits(dbg_cause_e){1'b0}}),
+        xdebugver: XDEBUGVER_NO,   // 4'h0
+        cause:     DBG_CAUSE_NONE, // 3'h0
         prv:       PRIV_LVL_M,
         default:   '0
       };
ParseResult:
UPD HdlStmAssign@@ to 
    UPD HdlOp@@MAP_ASSOCIATION to MAP_ASSOCIATION
        UPD HdlOp@@CALL to CALL
            UPD HdlValueId@@x_debug_ver_e to XDEBUGVER_NO
            MOV HdlValueId@@x_debug_ver_e to ops
            HdlValueId: x_debug_ver_e
            DEL HdlOp@@REPL_CONCAT from ops
            HdlOp: REPL_CONCAT
                list: ops
                    HdlOp: CALL
                        list: ops
                            HdlValueId: $bits
                            HdlValueId: x_debug_ver_e
                    HdlValueInt: 0
            DEL list@@ops from CALL
        DEL HdlOp@@CALL from ops
    UPD HdlOp@@MAP_ASSOCIATION to MAP_ASSOCIATION
        UPD HdlOp@@CALL to CALL
            UPD HdlValueId@@dbg_cause_e to DBG_CAUSE_NONE
            MOV HdlValueId@@dbg_cause_e to ops
            HdlValueId: dbg_cause_e
            DEL HdlOp@@REPL_CONCAT from ops
            HdlOp: REPL_CONCAT
                list: ops
                    HdlOp: CALL
                        list: ops
                            HdlValueId: $bits
                            HdlValueId: dbg_cause_e
                    HdlValueInt: 0
            DEL list@@ops from CALL
        DEL HdlOp@@CALL from ops


CommitId: 89e5fc11ed39182df86f338c640ab29334a422eb
[RTL] Add configurable third pipeline stage
--- a/examples/simple_system/rtl/ibex_simple_system.sv
+++ b/examples/simple_system/rtl/ibex_simple_system.sv
@@ -21,6 +22,7 @@ module ibex_simple_system (
   parameter bit RV32E           = 1'b0;
   parameter bit RV32M           = 1'b1;
   parameter bit BranchTargetALU = 1'b0;
+  parameter bit WritebackStage  = 1'b0;
 
   logic clk_sys = 1'b0, rst_sys_n;
 

ParseResult:
INS HdlIdDef@@WritebackStage to params
HdlIdDef: WritebackStage
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: bit
    HdlValueInt: 0
    HdlDirection: INTERNAL


CommitId: 428d057c4a941681e8ede6625eaf6c76a4b3fa8c
Rename ibex_[tracer_]define to ibex_[tracer_]pkg
--- a/rtl/ibex_core.sv
+++ b/rtl/ibex_core.sv
@@ -106,7 +106,7 @@ module ibex_core #(
 
 );
 
-  import ibex_defines::*;
+  import ibex_pkg::*;
 
   // IF/ID signals
   logic        instr_valid_id;
ParseResult:
UPD HdlModuleDef@@ibex_core to ibex_core
    INS HdlImport@@ to objs
    HdlImport
        list: path
            HdlValueId: ibex_pkg
            HdlAll

UPD HdlModuleDef@@ibex_core to ibex_core
    DEL HdlImport@@ from objs
    HdlImport
        list: path
            HdlValueId: ibex_defines
            HdlAll


CommitId: 67e74177494e5e577a4b589cd2f2a97f9d3c2c0c
Fix Verible lint issues
--- a/shared/rtl/bus.sv
+++ b/shared/rtl/bus.sv
@@ -15,10 +15,10 @@
  * - Host (master) arbitration is strictly priority based.
  */
 module bus #(
-  parameter NrDevices    = 1,
-  parameter NrHosts      = 1,
-  parameter DataWidth    = 32,
-  parameter AddressWidth = 32
+  parameter int NrDevices    = 1,
+  parameter int NrHosts      = 1,
+  parameter int DataWidth    = 32,
+  parameter int AddressWidth = 32
 ) (
   input                           clk_i,
   input                           rst_ni,
ParseResult:
UPD HdlIdDef@@NrDevices to NrDevices
    INS HdlValueId@@int to NrDevices

UPD HdlIdDef@@NrHosts to NrHosts
    INS HdlValueId@@int to NrHosts

UPD HdlIdDef@@DataWidth to DataWidth
    INS HdlValueId@@int to DataWidth

UPD HdlIdDef@@AddressWidth to AddressWidth
    INS HdlValueId@@int to AddressWidth


CommitId: b1daf9e44efdf8fc382493b63065c5816fdb7938
Update lowrisc_ip to lowRISC/opentitan@c277e3a8
--- a/vendor/lowrisc_ip/ip/prim/rtl/prim_ram_1p_scr.sv
+++ b/vendor/lowrisc_ip/ip/prim/rtl/prim_ram_1p_scr.sv
@@ -10,9 +10,9 @@
 //
 // The currently implemented architecture uses a reduced-round PRINCE cipher primitive in CTR mode
 // in order to (weakly) scramble the data written to the memory macro. Plain CTR mode does not
-// diffuse the data since the keystream is just XOR'ed onto it, hence we also we perform Byte-wise
+// diffuse the data since the keystream is just XOR'ed onto it, hence we also we perform byte-wise
 // diffusion using a (shallow) substitution/permutation network layers in order to provide a limited
-// avalanche effect within a Byte.
+// avalanche effect within a byte.
 //
 // In order to break the linear addressing space, the address is passed through a bijective
 // scrambling function constructed using a (shallow) substitution/permutation and a nonce. Due to

ParseResult:
UPD HdlIdDef@@Depth to Depth
    INS HdlOp@@MUL to Depth
    UPD HdlOp@@MUL to MUL
        INS list@@ops to MUL
        INS HdlValueInt@@1024 to ops

UPD HdlIdDef@@Width to Width
    UPD HdlValueInt@@256 to 32

UPD HdlStmAssign@@ to 
    UPD HdlOp@@TERNARY to TERNARY
        UPD HdlValueId@@collision_q to addr_collision_q

UPD HdlIdDef@@Depth to Depth
    UPD HdlValueInt@@512 to 16
    MOV HdlValueInt@@512 to Depth
    HdlValueInt: 512

UPD HdlStmAssign@@ to 
    UPD HdlValueId@@write_scr_pending_q to addr_collision_q

DEL HdlIdDef@@DataBitsPerMask from params
HdlIdDef: DataBitsPerMask
    HdlValueId: int
    HdlValueInt: 8
    HdlDirection: INTERNAL

DEL HdlStmAssign@@ from body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: collision_q


CommitId: b1daf9e44efdf8fc382493b63065c5816fdb7938
Update lowrisc_ip to lowRISC/opentitan@c277e3a8
--- a/vendor/lowrisc_ip/ip/prim/rtl/prim_ram_1p_scr.sv
+++ b/vendor/lowrisc_ip/ip/prim/rtl/prim_ram_1p_scr.sv
@@ -24,16 +24,15 @@
 `include "prim_assert.sv"
 
 module prim_ram_1p_scr #(
-  parameter  int Depth                = 512, // Needs to be a power of 2 if NumAddrScrRounds > 0.
-  parameter  int Width                = 256, // Needs to be Byte aligned for parity
-  parameter  int DataBitsPerMask      = 8,   // Currently only 8 is supported
+  parameter  int Depth                = 16*1024, // Needs to be a power of 2 if NumAddrScrRounds > 0.
+  parameter  int Width                = 32, // Needs to be byte aligned for parity
   parameter  int CfgWidth             = 8,   // WTC, RTC, etc
 
   // Scrambling parameters. Note that this needs to be low-latency, hence we have to keep the
   // amount of cipher rounds low. PRINCE has 5 half rounds in its original form, which corresponds
   // to 2*5 + 1 effective rounds. Setting this to 2 halves this to approximately 5 effective rounds.
   parameter  int NumPrinceRoundsHalf  = 2,   // Number of PRINCE half rounds, can be [1..5]
-  // Number of extra intra-Byte diffusion rounds. Setting this to 0 disables intra-Byte diffusion.
+  // Number of extra intra-byte diffusion rounds. Setting this to 0 disables intra-byte diffusion.
   parameter  int NumByteScrRounds     = 2,
   // Number of address scrambling rounds. Setting this to 0 disables address scrambling.
   parameter  int NumAddrScrRounds     = 2,

ParseResult:
INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueId: write_en_d
    HdlValueId: write_en_q

INS HdlStmIf@@ to body

UPD HdlStmAssign@@ to 
    UPD HdlValueId@@write_scr_pending_q to write_pending_q

UPD HdlStmAssign@@ to 
    UPD HdlValueId@@write_pending_d to addr_collision_d
    UPD HdlValueId@@write_pending_q to addr_collision_q

UPD HdlStmIf@@ to 
    INS HdlValueId@@read_en to 
    INS HdlStmBlock@@SEQ to 
    INS list@@elifs to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmIf@@ to 
    UPD HdlValueId@@write_en to write_en_d

UPD HdlStmIf@@ to 
    UPD HdlValueId@@write_scr_pending_d to rw_collision

MOV HdlStmAssign@@ to body
HdlStmAssign
    HdlValueId: raddr_d
    HdlValueId: raddr_q

UPD HdlStmAssign@@ to 
    UPD HdlValueId@@raddr_d to addr_i

DEL HdlStmAssign@@ from body
HdlStmAssign
    HdlValueId: collision_d
    HdlValueId: collision_q


CommitId: b1daf9e44efdf8fc382493b63065c5816fdb7938
Update lowrisc_ip to lowRISC/opentitan@c277e3a8
--- a/vendor/lowrisc_ip/ip/prim/rtl/prim_ram_1p_scr.sv
+++ b/vendor/lowrisc_ip/ip/prim/rtl/prim_ram_1p_scr.sv
@@ -57,19 +56,22 @@ module prim_ram_1p_scr #(
   input                             clk_i,
   input                             rst_ni,
 
+  // Key interface. Memory requests will not be granted if key_valid is set to 0.
+  input                             key_valid_i,
   input        [DataKeyWidth-1:0]   key_i,
   input        [NonceWidth-1:0]     nonce_i,
 
   // Interface to TL-UL SRAM adapter
   input                             req_i,
+  output logic                      gnt_o,
   input                             write_i,
   input        [AddrWidth-1:0]      addr_i,
   input        [Width-1:0]          wdata_i,
-  input        [Width-1:0]          wmask_i,  // Needs to be Byte-aligned for parity
+  input        [Width-1:0]          wmask_i,  // Needs to be byte-aligned for parity
   output logic [Width-1:0]          rdata_o,
   output logic                      rvalid_o, // Read response (rdata_o) is valid
   output logic [1:0]                rerror_o, // Bit1: Uncorrectable, Bit0: Correctable
-  output logic [AddrWidth-1:0]      raddr_o,  // Read address for error reporting.
+  output logic [31:0]               raddr_o,  // Read address for error reporting.
 
   // config
   input [CfgWidth-1:0]              cfg_i

ParseResult:
UPD HdlIdDef@@write_en to write_en_d

UPD HdlStmAssign@@ to 
    UPD HdlValueId@@write_en to write_en_d
    UPD HdlOp@@AND to AND
        UPD HdlValueId@@req_i to gnt_o

UPD HdlStmAssign@@ to 
    UPD HdlOp@@AND to AND
        UPD HdlValueId@@req_i to gnt_o


CommitId: b1daf9e44efdf8fc382493b63065c5816fdb7938
Update lowrisc_ip to lowRISC/opentitan@c277e3a8
--- a/vendor/lowrisc_ip/ip/prim/rtl/prim_ram_1p_scr.sv
+++ b/vendor/lowrisc_ip/ip/prim/rtl/prim_ram_1p_scr.sv
@@ -265,24 +265,28 @@ module prim_ram_1p_scr #(
   // need an additional holding register that can buffer the scrambled data of the first write in
   // cycle 1.
 
-  // Clear this if we can write the memory in this cycle, otherwise set if there is a pending write
-  logic write_scr_pending_d, write_scr_pending_q;
-  assign write_scr_pending_d = (macro_write) ? 1'b0 : write_pending_q;
+  // Clear this if we can write the memory in this cycle. Set only if the current write cannot
+  // proceed due to an incoming read operation.
+  logic write_scr_pending_d;
+  assign write_scr_pending_d = (macro_write)  ? 1'b0 :
+                               (rw_collision) ? 1'b1 :
+                                                write_pending_q;
+
   // Select the correct scrambled word to be written, based on whether the word in the scrambled
   // data holding register is valid or not. Note that the write_scr_q register could in theory be
   // combined with the wdata_q register. We don't do that here for timing reasons, since that would
   // require another read data mux to inject the scrambled data into the read descrambling path.
   logic [Width-1:0] wdata_scr;
-  assign wdata_scr = (write_scr_pending_q) ? wdata_scr_q : wdata_scr_d;
+  assign wdata_scr = (write_pending_q) ? wdata_scr_q : wdata_scr_d;
 
   // Output read valid strobe
   logic rvalid_q;
   assign rvalid_o = rvalid_q;
 
   // In case of a collision, we forward the write data from the unscrambled holding register
-  assign rdata_o = (collision_q) ? wdata_q   : // forward pending (unscrambled) write data
-                   (rvalid_q)    ? rdata     : // regular reads
-                                   '0;         // tie to zero otherwise
+  assign rdata_o = (addr_collision_q) ? wdata_q   : // forward pending (unscrambled) write data
+                   (rvalid_q)         ? rdata     : // regular reads
+                                        '0;         // tie to zero otherwise
 
   ///////////////
   // Registers //

ParseResult:
UPD HdlStmAssign@@ to 
    UPD HdlOp@@TERNARY to TERNARY
        INS HdlOp@@TERNARY to ops
        UPD HdlOp@@TERNARY to TERNARY
            INS list@@ops to TERNARY
            INS HdlValueId@@rw_collision to ops
            INS HdlValueInt@@1 to ops


CommitId: b22a6a10defc7bad31dda7d8a33c7145d1a79a3b
Add `mtval` CSR
--- a/rtl/ibex_controller.sv
+++ b/rtl/ibex_controller.sv
@@ -45,8 +45,10 @@ module ibex_controller (
     input  logic                      csr_status_i,          // decoder has CSR status instr
 
     // from IF/ID pipeline
-    input  logic                      instr_valid_i,         // instruction coming from IF/ID stage
-                                                             // is valid
+    input  logic                      instr_valid_i,         // instr from IF-ID reg is valid
+    input  logic [31:0]               instr_i,               // instr from IF-ID reg, for mtval
+    input  logic [15:0]               instr_compressed_i,    // instr from IF-ID reg, for mtval
+    input  logic                      instr_is_compressed_i, // instr from IF-ID reg is compressed
 
     // from prefetcher
     output logic                      instr_req_o,           // start fetching instructions

ParseResult:
INS HdlIdDef@@instr_i to ports
HdlIdDef: instr_i
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 31
                    HdlValueInt: 0
    HdlDirection: IN

INS HdlIdDef@@instr_compressed_i to ports
HdlIdDef: instr_compressed_i
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 15
                    HdlValueInt: 0
    HdlDirection: IN

INS HdlIdDef@@instr_is_compressed_i to ports
HdlIdDef: instr_is_compressed_i
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: IN


CommitId: b22a6a10defc7bad31dda7d8a33c7145d1a79a3b
Add `mtval` CSR
--- a/rtl/ibex_controller.sv
+++ b/rtl/ibex_controller.sv
@@ -58,6 +60,7 @@ module ibex_controller (
     output ibex_defines::exc_pc_sel_e exc_pc_mux_o,          // IF stage selector for exception PC
 
     // LSU
+    input  logic [31:0]               lsu_addr_last_i,       // for mtval
     input  logic                      load_err_i,
     input  logic                      store_err_i,
 

ParseResult:
INS HdlIdDef@@lsu_addr_last_i to ports
HdlIdDef: lsu_addr_last_i
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 31
                    HdlValueInt: 0
    HdlDirection: IN


CommitId: b22a6a10defc7bad31dda7d8a33c7145d1a79a3b
Add `mtval` CSR
--- a/rtl/ibex_controller.sv
+++ b/rtl/ibex_controller.sv
@@ -92,10 +95,11 @@ module ibex_controller (
 
     output logic                      csr_save_if_o,
     output logic                      csr_save_id_o,
-    output ibex_defines::exc_cause_e  csr_cause_o,
     output logic                      csr_restore_mret_id_o,
     output logic                      csr_restore_dret_id_o,
     output logic                      csr_save_cause_o,
+    output ibex_defines::exc_cause_e  csr_cause_o,
+    output logic [31:0]               csr_mtval_o,
 
     // stall signals
     output logic                      halt_if_o,

ParseResult:
MOV HdlIdDef@@csr_cause_o to ports
HdlIdDef: csr_cause_o
    HdlOp: DOUBLE_COLON
        list: ops
            HdlValueId: ibex_defines
            HdlValueId: exc_cause_e
    HdlDirection: OUT

INS HdlIdDef@@csr_mtval_o to ports
HdlIdDef: csr_mtval_o
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 31
                    HdlValueInt: 0
    HdlDirection: OUT


CommitId: b22a6a10defc7bad31dda7d8a33c7145d1a79a3b
Add `mtval` CSR
--- a/rtl/ibex_controller.sv
+++ b/rtl/ibex_controller.sv
@@ -154,16 +158,14 @@ module ibex_controller (
     csr_save_if_o          = 1'b0;
     csr_save_id_o          = 1'b0;
     csr_restore_mret_id_o  = 1'b0;
-
     csr_restore_dret_id_o  = 1'b0;
-
     csr_save_cause_o       = 1'b0;
+    csr_cause_o            = EXC_CAUSE_INSN_ADDR_MISA; // = 6'h00
+    csr_mtval_o            = '0;
 
     exc_cause_o            = EXC_CAUSE_INSN_ADDR_MISA; // = 6'h00
     exc_pc_mux_o           = EXC_PC_IRQ;
 
-    csr_cause_o            = EXC_CAUSE_INSN_ADDR_MISA; // = 6'h00
-
     pc_mux_o               = PC_BOOT;
     pc_set_o               = 1'b0;
 

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: csr_cause_o
                HdlValueId: EXC_CAUSE_INSN_ADDR_MISA

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: csr_mtval_o
                HdlValueInt: 0


CommitId: b22a6a10defc7bad31dda7d8a33c7145d1a79a3b
Add `mtval` CSR
--- a/rtl/ibex_controller.sv
+++ b/rtl/ibex_controller.sv
@@ -342,7 +344,7 @@ module ibex_controller (
         pc_set_o          = 1'b1;
         exc_pc_mux_o      = EXC_PC_DBD;
 
-        csr_save_if_o   = 1'b1;
+        csr_save_if_o     = 1'b1;
         debug_csr_save_o  = 1'b1;
 
         csr_save_cause_o  = 1'b1;

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: csr_cause_o
                HdlValueId: EXC_CAUSE_INSN_ADDR_MISA

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: csr_mtval_o
                HdlValueInt: 0


CommitId: b22a6a10defc7bad31dda7d8a33c7145d1a79a3b
Add `mtval` CSR
--- a/rtl/ibex_controller.sv
+++ b/rtl/ibex_controller.sv
@@ -433,6 +435,7 @@ module ibex_controller (
             end
             exc_cause_o           = EXC_CAUSE_ILLEGAL_INSN;
             csr_cause_o           = EXC_CAUSE_ILLEGAL_INSN;
+            csr_mtval_o           = instr_is_compressed_i ? {16'b0, instr_compressed_i} : instr_i;
           end
           mret_insn_i: begin
             //mret

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: csr_cause_o
                HdlValueId: EXC_CAUSE_INSN_ADDR_MISA

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: csr_mtval_o
                HdlValueInt: 0

UPD HdlStmCase@@{'__class__': 'HdlValueInt', 'base': 2, 'bits': 1, 'val': '1'}  to {'__class__': 'HdlValueInt', 'base': 2, 'bits': 1, 'val': '1'} 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: csr_mtval_o
                HdlOp: TERNARY
                    list: ops
                        HdlValueId: instr_is_compressed_i
                        HdlOp: CONCAT
                            list: ops
                                HdlValueInt: 0
                                HdlValueId: instr_compressed_i
                        HdlValueId: instr_i
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: csr_mtval_o
                HdlValueId: lsu_addr_last_i
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: csr_mtval_o
                HdlValueId: lsu_addr_last_i


CommitId: b22a6a10defc7bad31dda7d8a33c7145d1a79a3b
Add `mtval` CSR
--- a/rtl/ibex_controller.sv
+++ b/rtl/ibex_controller.sv
@@ -492,6 +495,7 @@ module ibex_controller (
             exc_pc_mux_o     = EXC_PC_LOAD;
             exc_cause_o      = EXC_CAUSE_LOAD_ACCESS_FAULT;
             csr_cause_o      = EXC_CAUSE_LOAD_ACCESS_FAULT;
+            csr_mtval_o      = lsu_addr_last_i;
           end
           store_err_q: begin
             pc_mux_o         = PC_EXCEPTION;

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: csr_cause_o
                HdlValueId: EXC_CAUSE_INSN_ADDR_MISA

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: csr_mtval_o
                HdlValueInt: 0

UPD HdlStmCase@@{'__class__': 'HdlValueInt', 'base': 2, 'bits': 1, 'val': '1'}  to {'__class__': 'HdlValueInt', 'base': 2, 'bits': 1, 'val': '1'} 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: csr_mtval_o
                HdlOp: TERNARY
                    list: ops
                        HdlValueId: instr_is_compressed_i
                        HdlOp: CONCAT
                            list: ops
                                HdlValueInt: 0
                                HdlValueId: instr_compressed_i
                        HdlValueId: instr_i
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: csr_mtval_o
                HdlValueId: lsu_addr_last_i
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: csr_mtval_o
                HdlValueId: lsu_addr_last_i


CommitId: b22a6a10defc7bad31dda7d8a33c7145d1a79a3b
Add `mtval` CSR
--- a/rtl/ibex_controller.sv
+++ b/rtl/ibex_controller.sv
@@ -501,6 +505,7 @@ module ibex_controller (
             exc_pc_mux_o     = EXC_PC_STORE;
             exc_cause_o      = EXC_CAUSE_STORE_ACCESS_FAULT;
             csr_cause_o      = EXC_CAUSE_STORE_ACCESS_FAULT;
+            csr_mtval_o      = lsu_addr_last_i;
           end
 
           default:;
ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: csr_cause_o
                HdlValueId: EXC_CAUSE_INSN_ADDR_MISA

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: csr_mtval_o
                HdlValueInt: 0

UPD HdlStmCase@@{'__class__': 'HdlValueInt', 'base': 2, 'bits': 1, 'val': '1'}  to {'__class__': 'HdlValueInt', 'base': 2, 'bits': 1, 'val': '1'} 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: csr_mtval_o
                HdlOp: TERNARY
                    list: ops
                        HdlValueId: instr_is_compressed_i
                        HdlOp: CONCAT
                            list: ops
                                HdlValueInt: 0
                                HdlValueId: instr_compressed_i
                        HdlValueId: instr_i
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: csr_mtval_o
                HdlValueId: lsu_addr_last_i
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: csr_mtval_o
                HdlValueId: lsu_addr_last_i


CommitId: 328aabb54854c799a45e280c0a6a5d6640ef1905
[RTL] Only restore from mstack in nmi mode
--- a/rtl/ibex_id_stage.sv
+++ b/rtl/ibex_id_stage.sv
@@ -97,6 +97,7 @@ module ibex_id_stage #(
     input  logic [14:0]           csr_mfip_i,
     input  logic                  irq_pending_i,
     input  logic                  irq_nm_i,
+    output logic                  nmi_mode_o,
 
     input  logic                  lsu_load_err_i,
     input  logic                  lsu_store_err_i,

ParseResult:
INS HdlIdDef@@nmi_mode_o to ports
HdlIdDef: nmi_mode_o
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: OUT


CommitId: 1b024135c70ef0ea3919f58e79bc26bdaa286625
[dv] Fix Xcelium compilation
--- a/shared/rtl/bus.sv
+++ b/shared/rtl/bus.sv
@@ -15,8 +15,8 @@
  * - Host (master) arbitration is strictly priority based.
  */
 module bus #(
-  parameter NrDevices,
-  parameter NrHosts,
+  parameter NrDevices    = 1,
+  parameter NrHosts      = 1,
   parameter DataWidth    = 32,
   parameter AddressWidth = 32
 ) (
ParseResult:
UPD HdlIdDef@@NrDevices to NrDevices
    INS HdlValueInt@@1 to NrDevices

UPD HdlIdDef@@NrHosts to NrHosts
    INS HdlValueInt@@1 to NrHosts


CommitId: 2c75c2b2ec90bebb756386e1360810474323c1ad
Update lowrisc_ip to lowRISC/opentitan@1ae03937f
--- a/vendor/lowrisc_ip/ip/prim/rtl/prim_secded_72_64_enc.sv
+++ b/vendor/lowrisc_ip/ip/prim/rtl/prim_secded_72_64_enc.sv
@@ -12,14 +12,14 @@ module prim_secded_72_64_enc (
 
   always_comb begin : p_encode
     out = 72'(in);
-    out[64] = ^(out & 72'h009B000000001FFFFF);
-    out[65] = ^(out & 72'h007900000FFFE0003F);
-    out[66] = ^(out & 72'h00DC003FF003E007C1);
-    out[67] = ^(out & 72'h00370FC0F03C207842);
-    out[68] = ^(out & 72'h00EA71C711C4438884);
-    out[69] = ^(out & 72'h002FB65926488C9108);
-    out[70] = ^(out & 72'h00E6DAAA4A91152210);
-    out[71] = ^(out & 72'h00D5ED348D221A4420);
+    out[64] = ^(out & 72'h009D000000001FFFFF);
+    out[65] = ^(out & 72'h007600000FFFE0003F);
+    out[66] = ^(out & 72'h0079003FF003E007C1);
+    out[67] = ^(out & 72'h00A70FC0F03C207842);
+    out[68] = ^(out & 72'h00D371C711C4438884);
+    out[69] = ^(out & 72'h00F8B65926488C9108);
+    out[70] = ^(out & 72'h00AEDAAA4A91152210);
+    out[71] = ^(out & 72'h004FED348D221A4420);
   end
 
 endmodule : prim_secded_72_64_enc
ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@XOR_UNARY to XOR_UNARY
                UPD HdlOp@@AND to AND
                    UPD HdlValueInt@@009b000000001fffff to 009d000000001fffff
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@XOR_UNARY to XOR_UNARY
                UPD HdlOp@@AND to AND
                    UPD HdlValueInt@@007900000fffe0003f to 007600000fffe0003f
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@XOR_UNARY to XOR_UNARY
                UPD HdlOp@@AND to AND
                    UPD HdlValueInt@@00dc003ff003e007c1 to 0079003ff003e007c1
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@XOR_UNARY to XOR_UNARY
                UPD HdlOp@@AND to AND
                    UPD HdlValueInt@@00370fc0f03c207842 to 00a70fc0f03c207842
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@XOR_UNARY to XOR_UNARY
                UPD HdlOp@@AND to AND
                    UPD HdlValueInt@@00ea71c711c4438884 to 00d371c711c4438884
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@XOR_UNARY to XOR_UNARY
                UPD HdlOp@@AND to AND
                    UPD HdlValueInt@@002fb65926488c9108 to 00f8b65926488c9108
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@XOR_UNARY to XOR_UNARY
                UPD HdlOp@@AND to AND
                    UPD HdlValueInt@@00e6daaa4a91152210 to 00aedaaa4a91152210
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@XOR_UNARY to XOR_UNARY
                UPD HdlOp@@AND to AND
                    UPD HdlValueInt@@00d5ed348d221a4420 to 004fed348d221a4420


CommitId: 6daae3509ac258aa5c11985151ab0513b543a542
[rtl] Modify fetch_en_i behavior
--- a/rtl/ibex_lockstep.sv
+++ b/rtl/ibex_lockstep.sv
@@ -86,6 +86,7 @@ module ibex_lockstep import ibex_pkg::*; #(
     input  logic                         debug_req_i,
     input  crash_dump_t                  crash_dump_i,
 
+    input  logic                         fetch_enable_i,
     output logic                         alert_minor_o,
     output logic                         alert_major_o,
     input  logic                         core_busy_i,

ParseResult:
INS HdlIdDef@@fetch_enable_i to ports
HdlIdDef: fetch_enable_i
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: IN


CommitId: 6daae3509ac258aa5c11985151ab0513b543a542
[rtl] Modify fetch_en_i behavior
--- a/rtl/ibex_lockstep.sv
+++ b/rtl/ibex_lockstep.sv
@@ -168,6 +170,7 @@ module ibex_lockstep import ibex_pkg::*; #(
   assign shadow_inputs_in.irq_fast       = irq_fast_i;
   assign shadow_inputs_in.irq_nm         = irq_nm_i;
   assign shadow_inputs_in.debug_req      = debug_req_i;
+  assign shadow_inputs_in.fetch_enable   = fetch_enable_i;
 
   // Delay the inputs
   always_ff @(posedge clk_i or negedge rst_ni) begin

ParseResult:
INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlValueId: fetch_enable_i
    HdlValueId: shadow_inputs_in


CommitId: 67e74177494e5e577a4b589cd2f2a97f9d3c2c0c
Fix Verible lint issues
--- a/rtl/ibex_tracer.sv
+++ b/rtl/ibex_tracer.sv
@@ -85,11 +85,11 @@ module ibex_tracer (
   logic        insn_is_compressed;
 
   // Data items accessed during this instruction
-  localparam RS1 = (1 << 0);
-  localparam RS2 = (1 << 1);
-  localparam RS3 = (1 << 2);
-  localparam RD  = (1 << 3);
-  localparam MEM = (1 << 4);
+  localparam logic [4:0] RS1 = (1 << 0);
+  localparam logic [4:0] RS2 = (1 << 1);
+  localparam logic [4:0] RS3 = (1 << 2);
+  localparam logic [4:0] RD  = (1 << 3);
+  localparam logic [4:0] MEM = (1 << 4);
   logic [4:0] data_accessed;
 
   function automatic void printbuffer_dumpline();

ParseResult:
INS HdlIdDef@@RS1 to objs

INS HdlIdDef@@RS2 to objs

INS HdlIdDef@@RS3 to objs

INS HdlIdDef@@RD to objs

INS HdlIdDef@@MEM to objs

UPD HdlIdDef@@RS1 to RS1
    INS HdlOp@@PARAMETRIZATION to RS1
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 4
                    HdlValueInt: 0
    INS HdlDirection@@INTERNAL to RS1

UPD HdlIdDef@@RS1 to RS1
    MOV HdlOp@@SLL to RS1
    HdlOp: SLL
        list: ops
            HdlValueInt: 1
            HdlValueInt: 0
    DEL HdlDirection@@INTERNAL from RS1

UPD HdlIdDef@@RS2 to RS2
    INS HdlOp@@PARAMETRIZATION to RS2
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 4
                    HdlValueInt: 0
    INS HdlDirection@@INTERNAL to RS2

UPD HdlIdDef@@RS2 to RS2
    MOV HdlOp@@SLL to RS2
    HdlOp: SLL
        list: ops
            HdlValueInt: 1
            HdlValueInt: 1
    DEL HdlDirection@@INTERNAL from RS2

UPD HdlIdDef@@RS3 to RS3
    INS HdlOp@@PARAMETRIZATION to RS3
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 4
                    HdlValueInt: 0
    INS HdlDirection@@INTERNAL to RS3

UPD HdlIdDef@@RS3 to RS3
    MOV HdlOp@@SLL to RS3
    HdlOp: SLL
        list: ops
            HdlValueInt: 1
            HdlValueInt: 2
    DEL HdlDirection@@INTERNAL from RS3

UPD HdlIdDef@@RD to RD
    INS HdlOp@@PARAMETRIZATION to RD
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 4
                    HdlValueInt: 0
    INS HdlDirection@@INTERNAL to RD

UPD HdlIdDef@@RD to RD
    MOV HdlOp@@SLL to RD
    HdlOp: SLL
        list: ops
            HdlValueInt: 1
            HdlValueInt: 3
    DEL HdlDirection@@INTERNAL from RD

UPD HdlIdDef@@MEM to MEM
    INS HdlOp@@PARAMETRIZATION to MEM
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 4
                    HdlValueInt: 0
    INS HdlDirection@@INTERNAL to MEM

UPD HdlIdDef@@MEM to MEM
    MOV HdlOp@@SLL to MEM
    HdlOp: SLL
        list: ops
            HdlValueInt: 1
            HdlValueInt: 4
    DEL HdlDirection@@INTERNAL from MEM

DEL HdlIdDef@@RS1 from objs

DEL HdlIdDef@@RS2 from objs

DEL HdlIdDef@@RS3 from objs

DEL HdlIdDef@@RD from objs

DEL HdlIdDef@@MEM from objs


CommitId: 67e74177494e5e577a4b589cd2f2a97f9d3c2c0c
Fix Verible lint issues
--- a/rtl/ibex_tracer.sv
+++ b/rtl/ibex_tracer.sv
@@ -130,10 +130,10 @@ module ibex_tracer (
     if ((data_accessed & MEM) != 0) begin
       $fwrite(file_handle, " PA:0x%08x", rvfi_mem_addr);
 
-      if (rvfi_mem_rmask != 4'b000) begin
+      if (rvfi_mem_rmask != 4'b0000) begin
         $fwrite(file_handle, " store:0x%08x", rvfi_mem_wdata);
       end
-      if (rvfi_mem_wmask != 4'b000) begin
+      if (rvfi_mem_wmask != 4'b0000) begin
         $fwrite(file_handle, " load:0x%08x", rvfi_mem_rdata);
       end
     end
ParseResult:
UPD HdlStmIf@@ to 
    UPD HdlOp@@NE to NE
        UPD HdlValueInt@@000 to 0000

UPD HdlStmIf@@ to 
    UPD HdlOp@@NE to NE
        UPD HdlValueInt@@000 to 0000


CommitId: 6ebc6bcb9f4574ab2adff9ec1c27f052ee620b69
[simple_system] Fix type for mhpmcounter_get
--- a/examples/simple_system/rtl/ibex_simple_system.sv
+++ b/examples/simple_system/rtl/ibex_simple_system.sv
@@ -279,7 +279,7 @@ module ibex_simple_system (
 
   export "DPI-C" function mhpmcounter_get;
 
-  function automatic longint mhpmcounter_get(int index);
+  function automatic longint unsigned mhpmcounter_get(int index);
     return u_core.u_ibex_core.cs_registers_i.mhpmcounter[index];
   endfunction
 
ParseResult:
UPD HdlFunctionDef@@mhpmcounter_get to mhpmcounter_get
    INS HdlOp@@PARAMETRIZATION to mhpmcounter_get
    UPD HdlOp@@PARAMETRIZATION to PARAMETRIZATION
        INS list@@ops to PARAMETRIZATION
        INS HdlOp@@MAP_ASSOCIATION to ops
        HdlOp: MAP_ASSOCIATION
            list: ops
                HdlValueId: signed

UPD HdlFunctionDef@@mhpmcounter_get to mhpmcounter_get
    MOV HdlValueId@@longint to mhpmcounter_get
    HdlValueId: longint


CommitId: 6a61e0ec0c9bcafc9760c9ddbb9b910f3403068f
[rtl] Fix PMP NAPOT matching for 0 PMPGranularity
--- a/rtl/ibex_pmp.sv
+++ b/rtl/ibex_pmp.sv
@@ -64,8 +64,13 @@ module ibex_pmp #(
         //                  ^
         //                  | This bit pos is the top of the mask, all lower bits set
         // thus mask = 1111 0000
-        assign region_addr_mask[r][b] = (csr_pmp_cfg_i[r].mode != PMP_MODE_NAPOT) |
-                                        ~&csr_pmp_addr_i[r][b-1:PMPGranularity+1];
+        if (PMPGranularity == 0) begin : g_region_addr_mask_zero_granularity
+          assign region_addr_mask[r][b] = (csr_pmp_cfg_i[r].mode != PMP_MODE_NAPOT) |
+                                          ~&csr_pmp_addr_i[r][b-1:2];
+        end else begin : g_region_addr_mask_other_granularity
+          assign region_addr_mask[r][b] = (csr_pmp_cfg_i[r].mode != PMP_MODE_NAPOT) |
+                                          ~&csr_pmp_addr_i[r][b-1:PMPGranularity+1];
+        end
       end
     end
   end
ParseResult:
UPD HdlStmIf@@ to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

INS HdlStmIf@@ to body

UPD HdlStmIf@@ to 
    INS HdlOp@@EQ to 
    HdlOp: EQ
        list: ops
            HdlValueId: PMPGranularity
            HdlValueInt: 0
    INS HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlStmAssign
                HdlOp: OR
                    list: ops
                        HdlOp: NE
                            list: ops
                                HdlOp: DOT
                                    list: ops
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: csr_pmp_cfg_i
                                                HdlValueId: r
                                        HdlValueId: mode
                                HdlValueId: PMP_MODE_NAPOT
                        HdlOp: NAND_UNARY
                            list: ops
                                HdlOp: INDEX
                                    list: ops
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: csr_pmp_addr_i
                                                HdlValueId: r
                                        HdlOp: DOWNTO
                                            list: ops
                                                HdlOp: SUB
                                                    list: ops
                                                        HdlValueId: b
                                                        HdlValueInt: 1
                                                HdlValueInt: 2
                HdlOp: INDEX
                    list: ops
                        HdlOp: INDEX
                            list: ops
                                HdlValueId: region_addr_mask
                                HdlValueId: r
                        HdlValueId: b
    INS list@@elifs to 

UPD HdlStmIf@@ to 
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlStmAssign
                HdlOp: OR
                    list: ops
                        HdlOp: NE
                            list: ops
                                HdlOp: DOT
                                    list: ops
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: csr_pmp_cfg_i
                                                HdlValueId: r
                                        HdlValueId: mode
                                HdlValueId: PMP_MODE_NAPOT
                        HdlOp: NAND_UNARY
                            list: ops
                                HdlOp: INDEX
                                    list: ops
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: csr_pmp_addr_i
                                                HdlValueId: r
                                        HdlOp: DOWNTO
                                            list: ops
                                                HdlOp: SUB
                                                    list: ops
                                                        HdlValueId: b
                                                        HdlValueInt: 1
                                                HdlOp: ADD
                                                    list: ops
                                                        HdlValueId: PMPGranularity
                                                        HdlValueInt: 1
                HdlOp: INDEX
                    list: ops
                        HdlOp: INDEX
                            list: ops
                                HdlValueId: region_addr_mask
                                HdlValueId: r
                        HdlValueId: b


CommitId: 7f8389cb40ad264273bc503bfb6fd324464a79ef
Merge branch 'master' into 'sv-packages'
--- a/decoder.sv
+++ b/decoder.sv
@@ -969,6 +969,8 @@ module riscv_decoder
       // if post increments are used, we must make sure that for
       // the second memory access we do use the adder
       prepost_useincr_o = 1'b1;
+      // we do not want to replicate operand_b
+      scalar_replication_o = 1'b0;
     end else if (mult_multicycle_i) begin
       alu_op_c_mux_sel_o = OP_C_REGC_OR_FWD;
     end
ParseResult:
UPD HdlStmProcess@@ to 
    INS HdlStmProcessTriggerConstrain@@COMB to 

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: scalar_replication_o
                HdlValueInt: 0

UPD HdlStmProcess@@ to 
    DEL HdlStmProcessTriggerConstrain@@COMB from 


CommitId: aa5c3d110b9af65bd1bad5649cffe2c8a0408173
Move type cast out of case selector to avoid linting error
--- a/rtl/ibex_decoder.sv
+++ b/rtl/ibex_decoder.sv
@@ -93,6 +93,8 @@ module ibex_decoder #(
   csr_op_e    csr_op;
   logic       csr_illegal;
 
+  opcode_e    opcode;
+
   /////////////
   // Decoder //
   /////////////

ParseResult:
INS HdlIdDef@@opcode to objs
HdlIdDef: opcode
    HdlDirection: INTERNAL


CommitId: aa5c3d110b9af65bd1bad5649cffe2c8a0408173
Move type cast out of case selector to avoid linting error
--- a/rtl/ibex_decoder.sv
+++ b/rtl/ibex_decoder.sv
@@ -132,7 +134,9 @@ module ibex_decoder #(
     ecall_insn_o                = 1'b0;
     pipe_flush_o                = 1'b0;
 
-    unique case (opcode_e'(instr_rdata_i[6:0]))
+    opcode                      = opcode_e'(instr_rdata_i[6:0]);
+
+    unique case (opcode)
 
       ///////////
       // Jumps //
ParseResult:
UPD HdlStmProcess@@ to 
    INS HdlStmProcessTriggerConstrain@@COMB to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        UPD HdlOp@@ASSIGN to ASSIGN
            INS list@@ops to ASSIGN
            INS HdlValueId@@opcode to ops

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'CALL',  'ops': ['opcode_e',          {'__class__': 'HdlOp',           'fn': 'INDEX',           'ops': ['instr_rdata_i',                   {'__class__': 'HdlOp',                    'fn': 'DOWNTO',                    'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '6'},                            {'__class__': 'HdlValueInt',                             'base': 10,                             'val': '0'}]}]}]}  to opcode

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'CALL',  'ops': ['opcode_e',          {'__class__': 'HdlOp',           'fn': 'INDEX',           'ops': ['instr_rdata_i',                   {'__class__': 'HdlOp',                    'fn': 'DOWNTO',                    'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '6'},                            {'__class__': 'HdlValueInt',                             'base': 10,                             'val': '0'}]}]}]}  to {'__class__': 'HdlOp',  'fn': 'CALL',  'ops': ['opcode_e',          {'__class__': 'HdlOp',           'fn': 'INDEX',           'ops': ['instr_rdata_i',                   {'__class__': 'HdlOp',                    'fn': 'DOWNTO',                    'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '6'},                            {'__class__': 'HdlValueInt',                             'base': 10,                             'val': '0'}]}]}]} 
    MOV HdlOp@@CALL to {'__class__': 'HdlOp',  'fn': 'CALL',  'ops': ['opcode_e',          {'__class__': 'HdlOp',           'fn': 'INDEX',           'ops': ['instr_rdata_i',                   {'__class__': 'HdlOp',                    'fn': 'DOWNTO',                    'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '6'},                            {'__class__': 'HdlValueInt',                             'base': 10,                             'val': '0'}]}]}]} 
    HdlOp: CALL
        list: ops
            HdlValueId: opcode_e
            HdlOp: INDEX
                list: ops
                    HdlValueId: instr_rdata_i
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 6
                            HdlValueInt: 0
    DEL HdlStmCaseType@@CASE from {'__class__': 'HdlOp',  'fn': 'CALL',  'ops': ['opcode_e',          {'__class__': 'HdlOp',           'fn': 'INDEX',           'ops': ['instr_rdata_i',                   {'__class__': 'HdlOp',                    'fn': 'DOWNTO',                    'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '6'},                            {'__class__': 'HdlValueInt',                             'base': 10,                             'val': '0'}]}]}]} 
    DEL HdlStmCaseUniqConstrain@@UNIQUE from {'__class__': 'HdlOp',  'fn': 'CALL',  'ops': ['opcode_e',          {'__class__': 'HdlOp',           'fn': 'INDEX',           'ops': ['instr_rdata_i',                   {'__class__': 'HdlOp',                    'fn': 'DOWNTO',                    'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '6'},                            {'__class__': 'HdlValueInt',                             'base': 10,                             'val': '0'}]}]}]} 

UPD HdlStmProcess@@ to 
    DEL HdlStmProcessTriggerConstrain@@COMB from 


CommitId: d059979af65601363ca92160f53c1ba157c2bbbd
RVFI based on core state (#151, fix #147)
--- a/rtl/ibex_controller.sv
+++ b/rtl/ibex_controller.sv
@@ -101,8 +101,6 @@ module ibex_controller (
     input  logic                      stall_jump_i,
     input  logic                      stall_branch_i,
 
-    output logic                      id_out_valid_o,        // ID stage has valid output
-
     // performance monitors
     output logic                      perf_jump_o,           // we are executing a jump
                                                              // instruction (j, jr, jal, jalr)

ParseResult:
DEL HdlIdDef@@id_out_valid_o from ports
HdlIdDef: id_out_valid_o
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: OUT


CommitId: d059979af65601363ca92160f53c1ba157c2bbbd
RVFI based on core state (#151, fix #147)
--- a/rtl/ibex_controller.sv
+++ b/rtl/ibex_controller.sv
@@ -533,9 +531,6 @@ module ibex_controller (
   // multicycle instr causes an exception for example
   assign instr_valid_clear_o = ~stall |  halt_id;
 
-  // signal that ID stage has valid output
-  assign id_out_valid_o      = ~stall & instr_valid_i & ~special_req;
-
   // update registers
   always_ff @(posedge clk_i or negedge rst_ni) begin : update_regs
     if (!rst_ni) begin
ParseResult:
DEL HdlStmAssign@@ from objs
HdlStmAssign
    HdlOp: AND
        list: ops
            HdlOp: AND
                list: ops
                    HdlOp: NEG
                        list: ops
                            HdlValueId: stall
                    HdlValueId: instr_valid_i
            HdlOp: NEG
                list: ops
                    HdlValueId: special_req
    HdlValueId: id_out_valid_o


CommitId: 95c0dc055676c43911349f22a9d456005fc6b35f
Fix handling of single stepping
--- a/rtl/ibex_controller.sv
+++ b/rtl/ibex_controller.sv
@@ -133,6 +133,7 @@ module ibex_controller (
   logic stall;
   logic halt_id;
   logic irq;
+  logic exc_req;
   logic special_req;
 
 `ifndef SYNTHESIS

ParseResult:
INS HdlIdDef@@exc_req to objs
HdlIdDef: exc_req
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL


CommitId: 95c0dc055676c43911349f22a9d456005fc6b35f
Fix handling of single stepping
--- a/rtl/ibex_controller.sv
+++ b/rtl/ibex_controller.sv
@@ -152,9 +153,11 @@ module ibex_controller (
   assign irq         = irq_req_ctrl_i & m_IE_i;
   assign exc_kill_o  = 1'b0;
 
-  // special requests: special instructions, exceptions, pipeline flushes...
-  assign special_req = mret_insn_i | dret_insn_i | ecall_insn_i | ebrk_insn_i | wfi_insn_i |
-                      illegal_insn_i | store_err_i | load_err_i | csr_status_i;
+  // exception requests
+  assign exc_req     = ecall_insn_i | ebrk_insn_i | illegal_insn_i | store_err_i | load_err_i;
+
+  // special requests: special instructions, pipeline flushes, exceptions...
+  assign special_req = mret_insn_i | dret_insn_i | wfi_insn_i | csr_status_i | exc_req;
 
   /////////////////////
   // Core controller //

ParseResult:
INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: OR
        list: ops
            HdlOp: OR
                list: ops
                    HdlOp: OR
                        list: ops
                            HdlOp: OR
                                list: ops
                                    HdlValueId: ecall_insn_i
                                    HdlValueId: ebrk_insn_i
                            HdlValueId: illegal_insn_i
                    HdlValueId: store_err_i
            HdlValueId: load_err_i
    HdlValueId: exc_req

UPD HdlStmAssign@@ to 
    UPD HdlOp@@OR to OR
        UPD HdlOp@@OR to OR
            UPD HdlOp@@OR to OR
                UPD HdlOp@@OR to OR
                    MOV HdlOp@@OR to ops
                    HdlOp: OR
                        list: ops
                            HdlOp: OR
                                list: ops
                                    HdlOp: OR
                                        list: ops
                                            HdlOp: OR
                                                list: ops
                                                    HdlValueId: mret_insn_i
                                                    HdlValueId: dret_insn_i
                                            HdlValueId: ecall_insn_i
                                    HdlValueId: ebrk_insn_i
                            HdlValueId: wfi_insn_i
                    UPD HdlOp@@OR to OR
                        UPD HdlValueId@@wfi_insn_i to exc_req
                        UPD HdlOp@@OR to OR
                            UPD HdlValueId@@ebrk_insn_i to csr_status_i
                            UPD HdlOp@@OR to OR
                                UPD HdlValueId@@ecall_insn_i to wfi_insn_i
                    DEL HdlValueId@@illegal_insn_i from ops
                    DEL list@@ops from OR
                DEL HdlOp@@OR from ops
                DEL HdlValueId@@store_err_i from ops
                DEL list@@ops from OR
            DEL HdlOp@@OR from ops
            DEL HdlValueId@@load_err_i from ops
            DEL list@@ops from OR
        DEL HdlOp@@OR from ops
        DEL HdlValueId@@csr_status_i from ops
        DEL list@@ops from OR
    DEL HdlOp@@OR from 


CommitId: 95c0dc055676c43911349f22a9d456005fc6b35f
Fix handling of single stepping
--- a/rtl/ibex_controller.sv
+++ b/rtl/ibex_controller.sv
@@ -301,7 +304,18 @@ module ibex_controller (
           if ((debug_req_i || irq) && stall && !debug_mode_q) begin
             halt_if_o   = 1'b1;
           end
-        end
+
+          // single stepping:
+          // execute a single instruction and then enter debug mode, in case of exceptions,
+          // set registers but do not jump into handler (debug-spec p.44).
+          if (debug_single_step_i && !debug_mode_q) begin
+            halt_if_o   = 1'b1;
+
+            if (!special_req && !stall) begin
+              ctrl_fsm_ns = DBG_TAKEN_IF;
+            end
+          end
+        end // instr_valid_i
 
         if  (debug_req_i && !stall && !special_req && !debug_mode_q) begin
           // enter debug mode

ParseResult:
INS HdlStmIf@@ to body

INS HdlStmIf@@ to body
HdlStmIf
    HdlOp: AND_LOG
        list: ops
            HdlOp: NEG_LOG
                list: ops
                    HdlValueId: special_req
            HdlOp: NEG_LOG
                list: ops
                    HdlValueId: stall
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: ctrl_fsm_ns
                    HdlValueId: DBG_TAKEN_IF
    list: elifs


CommitId: 95c0dc055676c43911349f22a9d456005fc6b35f
Fix handling of single stepping
--- a/rtl/ibex_controller.sv
+++ b/rtl/ibex_controller.sv
@@ -316,13 +330,7 @@ module ibex_controller (
           halt_id     = 1'b1;
         end
 
-        // Single stepping
-        // prevent any more instructions from executing
-        if (debug_single_step_i && !debug_mode_q) begin
-          halt_if_o   = 1'b1;
-          ctrl_fsm_ns = DBG_TAKEN_IF;
-        end
-      end
+      end // DECODE
 
       IRQ_TAKEN: begin
         pc_mux_o          = PC_EXC;

ParseResult:
MOV HdlStmIf@@ to body
HdlStmIf
    HdlOp: AND_LOG
        list: ops
            HdlValueId: debug_single_step_i
            HdlOp: NEG_LOG
                list: ops
                    HdlValueId: debug_mode_q
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: halt_if_o
                    HdlValueInt: 1
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: ctrl_fsm_ns
                    HdlValueId: DBG_TAKEN_IF
    list: elifs

UPD HdlStmIf@@ to 
    INS HdlOp@@AND_LOG to 
    HdlOp: AND_LOG
        list: ops
            HdlValueId: debug_single_step_i
            HdlOp: NEG_LOG
                list: ops
                    HdlValueId: debug_mode_q
    INS HdlStmBlock@@SEQ to 
    INS list@@elifs to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: halt_if_o
                HdlValueInt: 1


CommitId: ee89618b29a1cb305e17ab2033e13e22e592d9ba
Fix a couple of errors regarding hwloops
--- a/prefetch_L0_buffer.sv
+++ b/prefetch_L0_buffer.sv
@@ -142,17 +142,12 @@ module riscv_prefetch_L0_buffer
   begin
     rdata_unaligned[31:16] = 'x;
 
-    if (valid_L0) begin
-      case(addr_o[3:2])
-         2'b00: begin rdata_unaligned[31:16] = rdata_L0[1][15:0]; end
-         2'b01: begin rdata_unaligned[31:16] = rdata_L0[2][15:0]; end
-         2'b10: begin rdata_unaligned[31:16] = rdata_L0[3][15:0]; end
-         // this state is only interesting if we have already done a prefetch
-         2'b11: begin
-           rdata_unaligned[31:16] = rdata_L0[0][15:0];
-         end
-      endcase // addr_o
-    end
+    case(addr_o[3:2])
+       2'b00: begin rdata_unaligned[31:16] = rdata_L0[1][15:0]; end
+       2'b01: begin rdata_unaligned[31:16] = rdata_L0[2][15:0]; end
+       2'b10: begin rdata_unaligned[31:16] = rdata_L0[3][15:0]; end
+       2'b11: begin rdata_unaligned[31:16] = rdata_L0[0][15:0]; end
+    endcase // addr_o
   end
 
 

ParseResult:
UPD HdlStmIf@@ to 
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlStmCase: {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops':}]} 
                HdlStmCaseType: CASE
                HdlOp: INDEX
                    list: ops
                        HdlValueId: addr_o
                        HdlOp: DOWNTO
                            list: ops
                                HdlValueInt: 3
                                HdlValueInt: 2
                list: cases
                    tuple
                        HdlValueInt: 00
                        HdlStmBlock: SEQ
                            list: body
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: rdata_unaligned
                                                HdlOp: DOWNTO
                                                    list: ops
                                                        HdlValueInt: 31
                                                        HdlValueInt: 16
                                        HdlOp: INDEX
                                            list: ops
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: rdata_L0
                                                        HdlValueInt: 1
                                                HdlOp: DOWNTO
                                                    list: ops
                                                        HdlValueInt: 15
                                                        HdlValueInt: 0
                    tuple
                        HdlValueInt: 01
                        HdlStmBlock: SEQ
                            list: body
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: rdata_unaligned
                                                HdlOp: DOWNTO
                                                    list: ops
                                                        HdlValueInt: 31
                                                        HdlValueInt: 16
                                        HdlOp: INDEX
                                            list: ops
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: rdata_L0
                                                        HdlValueInt: 2
                                                HdlOp: DOWNTO
                                                    list: ops
                                                        HdlValueInt: 15
                                                        HdlValueInt: 0
                    tuple
                        HdlValueInt: 10
                        HdlStmBlock: SEQ
                            list: body
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: rdata_unaligned
                                                HdlOp: DOWNTO
                                                    list: ops
                                                        HdlValueInt: 31
                                                        HdlValueInt: 16
                                        HdlOp: INDEX
                                            list: ops
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: rdata_L0
                                                        HdlValueInt: 3
                                                HdlOp: DOWNTO
                                                    list: ops
                                                        HdlValueInt: 15
                                                        HdlValueInt: 0
                    tuple
                        HdlValueInt: 11
                        HdlStmBlock: SEQ
                            list: body
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: rdata_unaligned
                                                HdlOp: DOWNTO
                                                    list: ops
                                                        HdlValueInt: 31
                                                        HdlValueInt: 16
                                        HdlOp: INDEX
                                            list: ops
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: rdata_L0
                                                        HdlValueInt: 0
                                                HdlOp: DOWNTO
                                                    list: ops
                                                        HdlValueInt: 15
                                                        HdlValueInt: 0
    DEL HdlValueId@@valid_L0 from 
    DEL list@@elifs from 

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlOp: INDEX
                    list: ops
                        HdlValueId: rdata_unaligned
                        HdlOp: DOWNTO
                            list: ops
                                HdlValueInt: 31
                                HdlValueInt: 16
                HdlValueInt: x
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 

DEL HdlStmIf@@ from body


CommitId: ee89618b29a1cb305e17ab2033e13e22e592d9ba
Fix a couple of errors regarding hwloops
--- a/prefetch_L0_buffer.sv
+++ b/prefetch_L0_buffer.sv
@@ -176,7 +171,7 @@ module riscv_prefetch_L0_buffer
     addr_int    = addr_o;
 
     // advance address when pipeline is unstalled
-    if (ready_i & (~hwloop_i)) begin
+    if (ready_i) begin
 
       if (addr_o[1]) begin
         // unaligned case

ParseResult:
UPD HdlStmIf@@ to 
    UPD HdlOp@@AND to AND
        MOV HdlValueId@@ready_i to ops
        HdlValueId: ready_i
        DEL HdlOp@@NEG from ops
        HdlOp: NEG
            list: ops
                HdlValueId: hwloop_i
        DEL list@@ops from AND
    DEL HdlOp@@AND from 


CommitId: ee89618b29a1cb305e17ab2033e13e22e592d9ba
Fix a couple of errors regarding hwloops
--- a/prefetch_L0_buffer.sv
+++ b/prefetch_L0_buffer.sv
@@ -453,9 +453,10 @@ module riscv_prefetch_L0_buffer
             is_hwlp_n = 1'b1;
             addr_n = hwloop_target_i;
             NS = BRANCHED;
-          end
-          else
+          end else begin
+            addr_n = addr_o; // keep the old address for now
             NS = HWLP_WAIT_GNT;
+          end
         end else begin
           if (fetch_gnt) begin
             save_rdata_hwlp = 1'b1;

ParseResult:
UPD HdlStmIf@@ to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: addr_n
                HdlValueId: addr_o

UPD HdlStmIf@@ to 
    MOV HdlOp@@ASSIGN to 
    HdlOp: ASSIGN
        list: ops
            HdlValueId: NS
            HdlValueId: HWLP_WAIT_GNT


CommitId: 892ad8a6213057e20e43f44a2eb70b02d90cce35
[RTL] - Add PMP module
--- a/rtl/ibex_cs_registers.sv
+++ b/rtl/ibex_cs_registers.sv
@@ -12,6 +12,9 @@
 module ibex_cs_registers #(
     parameter int unsigned MHPMCounterNum   = 8,
     parameter int unsigned MHPMCounterWidth = 40,
+    parameter bit          PMPEnable        = 0,
+    parameter int unsigned PMPGranularity   = 0,
+    parameter int unsigned PMPNumRegions    = 4,
     parameter bit RV32E                     = 0,
     parameter bit RV32M                     = 0
 ) (

ParseResult:
INS HdlIdDef@@PMPEnable to params
HdlIdDef: PMPEnable
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: bit
    HdlValueInt: 0
    HdlDirection: INTERNAL

INS HdlIdDef@@PMPGranularity to params
HdlIdDef: PMPGranularity
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: int
            HdlOp: MAP_ASSOCIATION
                list: ops
                    HdlValueId: signed
    HdlValueInt: 0
    HdlDirection: INTERNAL

INS HdlIdDef@@PMPNumRegions to params
HdlIdDef: PMPNumRegions
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: int
            HdlOp: MAP_ASSOCIATION
                list: ops
                    HdlValueId: signed
    HdlValueInt: 4
    HdlDirection: INTERNAL


CommitId: 892ad8a6213057e20e43f44a2eb70b02d90cce35
[RTL] - Add PMP module
--- a/rtl/ibex_cs_registers.sv
+++ b/rtl/ibex_cs_registers.sv
@@ -22,6 +25,7 @@ module ibex_cs_registers #(
     // Core and Cluster ID
     input  logic  [3:0]          core_id_i,
     input  logic  [5:0]          cluster_id_i,
+    output ibex_pkg::priv_lvl_e  priv_mode_o,
 
     // mtvec
     output logic [31:0]          csr_mtvec_o,

ParseResult:
INS HdlIdDef@@priv_mode_o to ports
HdlIdDef: priv_mode_o
    HdlOp: DOUBLE_COLON
        list: ops
            HdlValueId: ibex_pkg
            HdlValueId: priv_lvl_e
    HdlDirection: OUT


CommitId: 892ad8a6213057e20e43f44a2eb70b02d90cce35
[RTL] - Add PMP module
--- a/rtl/ibex_cs_registers.sv
+++ b/rtl/ibex_cs_registers.sv
@@ -48,6 +52,10 @@ module ibex_cs_registers #(
     output logic                 csr_mstatus_mie_o,
     output logic [31:0]          csr_mepc_o,
 
+    // PMP
+    output ibex_pkg::pmp_cfg_t   csr_pmp_cfg_o  [PMPNumRegions],
+    output logic [33:0]          csr_pmp_addr_o [PMPNumRegions],
+
     // debug
     input  ibex_pkg::dbg_cause_e debug_cause_i,
     input  logic                 debug_csr_save_i,

ParseResult:
INS HdlIdDef@@csr_pmp_cfg_o to ports
HdlIdDef: csr_pmp_cfg_o
    HdlOp: INDEX
        list: ops
            HdlOp: DOUBLE_COLON
                list: ops
                    HdlValueId: ibex_pkg
                    HdlValueId: pmp_cfg_t
            HdlValueId: PMPNumRegions
    HdlDirection: OUT

INS HdlIdDef@@csr_pmp_addr_o to ports
HdlIdDef: csr_pmp_addr_o
    HdlOp: INDEX
        list: ops
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: logic
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 33
                            HdlValueInt: 0
            HdlValueId: PMPNumRegions
    HdlDirection: OUT


CommitId: 892ad8a6213057e20e43f44a2eb70b02d90cce35
[RTL] - Add PMP module
--- a/rtl/ibex_cs_registers.sv
+++ b/rtl/ibex_cs_registers.sv
@@ -156,6 +164,10 @@ module ibex_cs_registers #(
   logic [31:0] mstack_epc_q, mstack_epc_d;
   logic  [5:0] mstack_cause_q, mstack_cause_d;
 
+  // PMP Signals
+  logic [31:0]                 pmp_addr_rdata  [PMP_MAX_REGIONS];
+  logic [PMP_CFG_W-1:0]        pmp_cfg_rdata   [PMP_MAX_REGIONS];
+
   // Hardware performance monitor signals
   logic [31:0] mcountinhibit_d, mcountinhibit_q, mcountinhibit;
   logic [31:0] mcountinhibit_force;

ParseResult:
INS HdlIdDef@@pmp_addr_rdata to objs
HdlIdDef: pmp_addr_rdata
    HdlOp: INDEX
        list: ops
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: logic
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 31
                            HdlValueInt: 0
            HdlValueId: PMP_MAX_REGIONS
    HdlDirection: INTERNAL

INS HdlIdDef@@pmp_cfg_rdata to objs
HdlIdDef: pmp_cfg_rdata
    HdlOp: INDEX
        list: ops
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: logic
                    HdlOp: DOWNTO
                        list: ops
                            HdlOp: SUB
                                list: ops
                                    HdlValueId: PMP_CFG_W
                                    HdlValueInt: 1
                            HdlValueInt: 0
            HdlValueId: PMP_MAX_REGIONS
    HdlDirection: INTERNAL


CommitId: 892ad8a6213057e20e43f44a2eb70b02d90cce35
[RTL] - Add PMP module
--- a/rtl/ibex_cs_registers.sv
+++ b/rtl/ibex_cs_registers.sv
@@ -511,7 +549,7 @@ module ibex_cs_registers #(
   end
 
   // only write CSRs during one clock cycle
-  assign csr_we_int  = csr_wreq & instr_new_id_i;
+  assign csr_we_int  = csr_wreq & ~illegal_csr_priv & instr_new_id_i;
 
   assign csr_rdata_o = csr_rdata_int;
 

ParseResult:
INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: AND
        list: ops
            HdlOp: AND
                list: ops
                    HdlValueId: csr_wreq
                    HdlOp: NEG
                        list: ops
                            HdlValueId: illegal_csr_priv
            HdlValueId: instr_new_id_i
    HdlValueId: csr_we_int

DEL HdlStmAssign@@ from objs
HdlStmAssign
    HdlOp: AND
        list: ops
            HdlValueId: csr_wreq
            HdlValueId: instr_new_id_i
    HdlValueId: csr_we_int


CommitId: ab4c8699fbc854220749c49c67fa0b860a69711d
Simplify default assignments to enum types
--- a/rtl/ibex_multdiv_slow.sv
+++ b/rtl/ibex_multdiv_slow.sv
@@ -284,7 +284,7 @@ module ibex_multdiv_slow (
         end
 
         default: begin
-          curr_state_d = div_fsm_e'({$bits(div_fsm_e){1'bX}});
+          curr_state_d = div_fsm_e'(1'bX);
         end
         endcase // curr_state_q
       end
ParseResult:
UPD HdlStmCase@@curr_state_q to curr_state_q
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@CALL to CALL
                UPD HdlOp@@REPL_CONCAT to REPL_CONCAT
                    MOV list@@ops to REPL_CONCAT
                    list: ops
                        HdlOp: CALL
                            list: ops
                                HdlValueId: $bits
                                HdlValueId: div_fsm_e
                        HdlValueInt: x
                    UPD HdlOp@@CALL to CALL
                        MOV HdlValueId@@div_fsm_e to ops
                        HdlValueId: div_fsm_e
                        DEL HdlValueId@@$bits from ops
                        DEL list@@ops from CALL
                    DEL HdlOp@@CALL from ops
                DEL HdlValueId@@div_fsm_e from ops
                DEL HdlOp@@REPL_CONCAT from ops
                DEL list@@ops from CALL


CommitId: 0a1a8514c43af9f395d7daf96b80e23c53b74ca1
[rtl] Rework access to performance counter CSRs
--- a/rtl/ibex_cs_registers.sv
+++ b/rtl/ibex_cs_registers.sv
@@ -207,6 +207,7 @@ module ibex_cs_registers #(
   logic        illegal_csr_write;
 
   logic [7:0]  unused_boot_addr;
+  logic [2:0]  unused_csr_addr;
 
   assign unused_boot_addr = boot_addr_i[7:0];
 

ParseResult:
INS HdlIdDef@@unused_csr_addr to objs
HdlIdDef: unused_csr_addr
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 2
                    HdlValueInt: 0
    HdlDirection: INTERNAL


CommitId: 0a1a8514c43af9f395d7daf96b80e23c53b74ca1
[rtl] Rework access to performance counter CSRs
--- a/rtl/ibex_cs_registers.sv
+++ b/rtl/ibex_cs_registers.sv
@@ -216,6 +217,7 @@ module ibex_cs_registers #(
 
   logic [$bits(csr_num_e)-1:0] csr_addr;
   assign csr_addr           = {csr_addr_i};
+  assign unused_csr_addr    = csr_addr[7:5];
   assign mhpmcounter_idx    = csr_addr[4:0];
 
   // See RISC-V Privileged Specification, version 1.11, Section 2.1

ParseResult:
INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: INDEX
        list: ops
            HdlValueId: csr_addr
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 7
                    HdlValueInt: 5
    HdlValueId: unused_csr_addr


CommitId: 157eb5bc113af0a8cd12f52931769372002f3284
Fix performance counters
--- a/rtl/ibex_cs_registers.sv
+++ b/rtl/ibex_cs_registers.sv
@@ -187,10 +187,8 @@ module ibex_cs_registers #(
   /////////////
 
   logic [$bits(csr_num_e)-1:0] csr_addr;
-  logic [4:0]                  unused_csr_addr;
   assign csr_addr           = {csr_addr_i};
   assign mhpmcounter_idx    = csr_addr[4:0];
-  assign unused_csr_addr    = csr_addr[9:5];
 
   assign illegal_csr_priv   = 1'b0; // we only support M-mode
   assign illegal_csr_write  = (csr_addr[11:10] == 2'b11) && csr_wreq;

ParseResult:
DEL HdlIdDef@@unused_csr_addr from objs
HdlIdDef: unused_csr_addr
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 4
                    HdlValueInt: 0
    HdlDirection: INTERNAL

DEL HdlStmAssign@@ from objs
HdlStmAssign
    HdlOp: INDEX
        list: ops
            HdlValueId: csr_addr
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 9
                    HdlValueInt: 5
    HdlValueId: unused_csr_addr


CommitId: 157eb5bc113af0a8cd12f52931769372002f3284
Fix performance counters
--- a/rtl/ibex_cs_registers.sv
+++ b/rtl/ibex_cs_registers.sv
@@ -243,7 +241,7 @@ module ibex_cs_registers #(
       CSR_MINSTRETH:     csr_rdata_int = mhpmcounter_q[2][63:32];
 
       default: begin
-        if (csr_addr_i == CSR_MCOUNTER_SETUP_MASK) begin
+        if ((csr_addr & CSR_MASK_MCOUNTER) == CSR_OFF_MCOUNTER_SETUP) begin
           csr_rdata_int = mhpmevent[mhpmcounter_idx];
           // check access to non-existent or already covered CSRs
           if ((csr_addr[4:0] == 5'b00000) ||     // CSR_MCOUNTINHIBIT

ParseResult:
UPD HdlStmIf@@ to 
    UPD HdlOp@@EQ to EQ
        INS HdlOp@@AND to ops
        UPD HdlOp@@AND to AND
            INS list@@ops to AND
            INS HdlValueId@@CSR_MASK_MCOUNTER to ops
    UPD HdlOp@@EQ to EQ
        INS list@@ops to EQ
        INS HdlOp@@AND to ops
        INS HdlValueId@@CSR_OFF_MCOUNTER to ops
    UPD HdlOp@@EQ to EQ
        INS list@@ops to EQ
        INS HdlOp@@AND to ops
        INS HdlValueId@@CSR_OFF_MCOUNTERH to ops

UPD HdlStmIf@@ to 
    UPD HdlOp@@EQ to EQ
        UPD HdlValueId@@CSR_MCOUNTER_SETUP_MASK to CSR_OFF_MCOUNTER_SETUP
        UPD HdlValueId@@csr_addr_i to csr_addr
        MOV HdlValueId@@csr_addr_i to ops
        HdlValueId: csr_addr_i
    UPD HdlOp@@EQ to EQ
        MOV list@@ops to EQ
        list: ops
            HdlValueId: csr_addr_i
            HdlValueId: CSR_MCOUNTER_MASK
        UPD HdlValueId@@csr_addr_i to csr_addr
        UPD HdlValueId@@CSR_MCOUNTER_MASK to CSR_MASK_MCOUNTER
    UPD HdlOp@@EQ to EQ
        MOV list@@ops to EQ
        list: ops
            HdlValueId: csr_addr_i
            HdlValueId: CSR_MCOUNTERH_MASK
        UPD HdlValueId@@csr_addr_i to csr_addr
        UPD HdlValueId@@CSR_MCOUNTERH_MASK to CSR_MASK_MCOUNTER


CommitId: 157eb5bc113af0a8cd12f52931769372002f3284
Fix performance counters
--- a/rtl/ibex_cs_registers.sv
+++ b/rtl/ibex_cs_registers.sv
@@ -252,7 +250,7 @@ module ibex_cs_registers #(
             illegal_csr = csr_access_i;
           end
 
-        end else if (csr_addr_i == CSR_MCOUNTER_MASK) begin
+        end else if ((csr_addr & CSR_MASK_MCOUNTER) == CSR_OFF_MCOUNTER) begin
           csr_rdata_int = mhpmcounter_q[mhpmcounter_idx][31: 0];
           // check access to non-existent or already covered CSRs
           if ((csr_addr[4:0] == 5'b00000) ||     // CSR_MCYCLE

ParseResult:
UPD HdlStmIf@@ to 
    UPD HdlOp@@EQ to EQ
        INS HdlOp@@AND to ops
        UPD HdlOp@@AND to AND
            INS list@@ops to AND
            INS HdlValueId@@CSR_MASK_MCOUNTER to ops
    UPD HdlOp@@EQ to EQ
        INS list@@ops to EQ
        INS HdlOp@@AND to ops
        INS HdlValueId@@CSR_OFF_MCOUNTER to ops
    UPD HdlOp@@EQ to EQ
        INS list@@ops to EQ
        INS HdlOp@@AND to ops
        INS HdlValueId@@CSR_OFF_MCOUNTERH to ops

UPD HdlStmIf@@ to 
    UPD HdlOp@@EQ to EQ
        UPD HdlValueId@@CSR_MCOUNTER_SETUP_MASK to CSR_OFF_MCOUNTER_SETUP
        UPD HdlValueId@@csr_addr_i to csr_addr
        MOV HdlValueId@@csr_addr_i to ops
        HdlValueId: csr_addr_i
    UPD HdlOp@@EQ to EQ
        MOV list@@ops to EQ
        list: ops
            HdlValueId: csr_addr_i
            HdlValueId: CSR_MCOUNTER_MASK
        UPD HdlValueId@@csr_addr_i to csr_addr
        UPD HdlValueId@@CSR_MCOUNTER_MASK to CSR_MASK_MCOUNTER
    UPD HdlOp@@EQ to EQ
        MOV list@@ops to EQ
        list: ops
            HdlValueId: csr_addr_i
            HdlValueId: CSR_MCOUNTERH_MASK
        UPD HdlValueId@@csr_addr_i to csr_addr
        UPD HdlValueId@@CSR_MCOUNTERH_MASK to CSR_MASK_MCOUNTER


CommitId: 157eb5bc113af0a8cd12f52931769372002f3284
Fix performance counters
--- a/rtl/ibex_cs_registers.sv
+++ b/rtl/ibex_cs_registers.sv
@@ -261,7 +259,7 @@ module ibex_cs_registers #(
             illegal_csr = csr_access_i;
           end
 
-        end else if (csr_addr_i == CSR_MCOUNTERH_MASK) begin
+        end else if ((csr_addr & CSR_MASK_MCOUNTER) == CSR_OFF_MCOUNTERH) begin
           csr_rdata_int = mhpmcounter_q[mhpmcounter_idx][63:32];
           // check access to non-existent or already covered CSRs
           if ((csr_addr[4:0] == 5'b00000) ||     // CSR_MCYCLEH

ParseResult:
UPD HdlStmIf@@ to 
    UPD HdlOp@@EQ to EQ
        INS HdlOp@@AND to ops
        UPD HdlOp@@AND to AND
            INS list@@ops to AND
            INS HdlValueId@@CSR_MASK_MCOUNTER to ops
    UPD HdlOp@@EQ to EQ
        INS list@@ops to EQ
        INS HdlOp@@AND to ops
        INS HdlValueId@@CSR_OFF_MCOUNTER to ops
    UPD HdlOp@@EQ to EQ
        INS list@@ops to EQ
        INS HdlOp@@AND to ops
        INS HdlValueId@@CSR_OFF_MCOUNTERH to ops

UPD HdlStmIf@@ to 
    UPD HdlOp@@EQ to EQ
        UPD HdlValueId@@CSR_MCOUNTER_SETUP_MASK to CSR_OFF_MCOUNTER_SETUP
        UPD HdlValueId@@csr_addr_i to csr_addr
        MOV HdlValueId@@csr_addr_i to ops
        HdlValueId: csr_addr_i
    UPD HdlOp@@EQ to EQ
        MOV list@@ops to EQ
        list: ops
            HdlValueId: csr_addr_i
            HdlValueId: CSR_MCOUNTER_MASK
        UPD HdlValueId@@csr_addr_i to csr_addr
        UPD HdlValueId@@CSR_MCOUNTER_MASK to CSR_MASK_MCOUNTER
    UPD HdlOp@@EQ to EQ
        MOV list@@ops to EQ
        list: ops
            HdlValueId: csr_addr_i
            HdlValueId: CSR_MCOUNTERH_MASK
        UPD HdlValueId@@csr_addr_i to csr_addr
        UPD HdlValueId@@CSR_MCOUNTERH_MASK to CSR_MASK_MCOUNTER


CommitId: 157eb5bc113af0a8cd12f52931769372002f3284
Fix performance counters
--- a/rtl/ibex_cs_registers.sv
+++ b/rtl/ibex_cs_registers.sv
@@ -379,9 +377,9 @@ module ibex_cs_registers #(
       default: begin
         if (csr_we_int == 1'b1) begin
           // performance counters and event selector
-          if (csr_addr_i == CSR_MCOUNTER_MASK) begin
+          if ((csr_addr & CSR_MASK_MCOUNTER) == CSR_OFF_MCOUNTER) begin
             mhpmcounter_we[mhpmcounter_idx] = 1'b1;
-          end else if (csr_addr_i == CSR_MCOUNTERH_MASK) begin
+          end else if ((csr_addr & CSR_MASK_MCOUNTER) == CSR_OFF_MCOUNTERH) begin
             mhpmcounterh_we[mhpmcounter_idx] = 1'b1;
           end
         end

ParseResult:
UPD HdlStmIf@@ to 
    UPD HdlOp@@EQ to EQ
        INS list@@ops to EQ
        INS HdlOp@@AND to ops
        INS HdlValueId@@CSR_OFF_MCOUNTER to ops
    UPD HdlOp@@EQ to EQ
        INS list@@ops to EQ
        INS HdlOp@@AND to ops
        INS HdlValueId@@CSR_OFF_MCOUNTERH to ops

UPD HdlStmIf@@ to 
    UPD HdlOp@@EQ to EQ
        MOV list@@ops to EQ
        list: ops
            HdlValueId: csr_addr_i
            HdlValueId: CSR_MCOUNTER_MASK
        UPD HdlValueId@@csr_addr_i to csr_addr
        UPD HdlValueId@@CSR_MCOUNTER_MASK to CSR_MASK_MCOUNTER
    UPD HdlOp@@EQ to EQ
        MOV list@@ops to EQ
        list: ops
            HdlValueId: csr_addr_i
            HdlValueId: CSR_MCOUNTERH_MASK
        UPD HdlValueId@@csr_addr_i to csr_addr
        UPD HdlValueId@@CSR_MCOUNTERH_MASK to CSR_MASK_MCOUNTER


CommitId: 157eb5bc113af0a8cd12f52931769372002f3284
Fix performance counters
--- a/rtl/ibex_cs_registers.sv
+++ b/rtl/ibex_cs_registers.sv
@@ -542,6 +545,7 @@ module ibex_cs_registers #(
 
     // activate all
     for (int i=0; i<32; i++) begin : gen_mhpmevent_active
+      mhpmevent[i]    =   '0;
       mhpmevent[i][i] = 1'b1;
     end
 

ParseResult:
UPD HdlStmFor@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlOp: INDEX
                    list: ops
                        HdlValueId: mhpmevent
                        HdlValueId: i
                HdlValueInt: 0


CommitId: 157eb5bc113af0a8cd12f52931769372002f3284
Fix performance counters
--- a/rtl/ibex_cs_registers.sv
+++ b/rtl/ibex_cs_registers.sv
@@ -560,10 +564,15 @@ module ibex_cs_registers #(
       mhpmcounter_mask[i] = {64{1'b1}};
     end
 
-    for (int i=3; i<32; i++) begin : gen_mask_configurable
+    for (int unsigned i=3; i<3+MHPMCounterNum; i++) begin : gen_mask_configurable
       // mhpmcounters have a configurable width
       mhpmcounter_mask[i] = {{64-MHPMCounterWidth{1'b0}}, {MHPMCounterWidth{1'b1}}};
     end
+
+    for (int unsigned i=3+MHPMCounterNum; i<32; i++) begin : gen_mask_inactive
+      // mask inactive mhpmcounters
+      mhpmcounter_mask[i] = '0;
+    end
   end
 
   // update
ParseResult:
INS HdlStmFor@@ to body

UPD HdlStmFor@@ to 
    INS HdlOp@@LT to 
    HdlOp: LT
        list: ops
            HdlValueId: i
            HdlOp: ADD
                list: ops
                    HdlValueInt: 3
                    HdlValueId: MHPMCounterNum

UPD HdlStmFor@@ to 
    MOV HdlOp@@LT to 
    HdlOp: LT
        list: ops
            HdlValueId: i
            HdlValueInt: 32

UPD HdlIdDef@@i to i
    INS HdlOp@@PARAMETRIZATION to i
    UPD HdlOp@@PARAMETRIZATION to PARAMETRIZATION
        INS list@@ops to PARAMETRIZATION
        INS HdlOp@@MAP_ASSOCIATION to ops
        HdlOp: MAP_ASSOCIATION
            list: ops
                HdlValueId: signed

UPD HdlIdDef@@i to i
    MOV HdlValueId@@int to i
    HdlValueId: int


CommitId: 06cf9f1dfe0e39348fd6888416e85d552a10a41f
Prefix all modules with riscv_ to avoid future conflicts
--- a/prefetch_buffer.sv
+++ b/prefetch_buffer.sv
@@ -26,7 +26,7 @@
 // input port: send address one cycle before the data
 // clear_i clears the FIFO for the following cycle. in_addr_i can be sent in
 // this cycle already
-module fetch_fifo
+module riscv_fetch_fifo
 (
     input  logic        clk,
     input  logic        rst_n,

ParseResult:
UPD HdlModuleDef@@fetch_fifo to riscv_fetch_fifo

UPD HdlModuleDec@@fetch_fifo to riscv_fetch_fifo


CommitId: 06cf9f1dfe0e39348fd6888416e85d552a10a41f
Prefix all modules with riscv_ to avoid future conflicts
--- a/prefetch_buffer.sv
+++ b/prefetch_buffer.sv
@@ -193,7 +193,7 @@ endmodule
 
 // branch_i deletes everything up to now, i.e. it assumes that addr_i now has
 // the correct state and uses the current cycle's addr_i to fetch new data
-module prefetch_buffer
+module riscv_prefetch_buffer
 (
   input  logic        clk,
   input  logic        rst_n,

ParseResult:
UPD HdlModuleDef@@prefetch_buffer to riscv_prefetch_buffer

UPD HdlModuleDec@@prefetch_buffer to riscv_prefetch_buffer


CommitId: 06cf9f1dfe0e39348fd6888416e85d552a10a41f
Prefix all modules with riscv_ to avoid future conflicts
--- a/prefetch_buffer.sv
+++ b/prefetch_buffer.sv
@@ -250,7 +250,7 @@ module prefetch_buffer
   // consumes addresses and rdata
   //////////////////////////////////////////////////////////////////////////////
 
-  fetch_fifo fifo_i
+  riscv_fetch_fifo fifo_i
   (
     .clk                   ( clk               ),
     .rst_n                 ( rst_n             ),
ParseResult:
UPD HdlModuleDef@@prefetch_buffer to riscv_prefetch_buffer

UPD HdlModuleDec@@prefetch_buffer to riscv_prefetch_buffer


CommitId: d717e2385ed2d61290cb52148a79bef433880209
Update lowrisc_ip to lowRISC/opentitan@7aa5c2b89
--- a/vendor/lowrisc_ip/ip/prim_generic/rtl/prim_generic_flash.sv
+++ b/vendor/lowrisc_ip/ip/prim_generic/rtl/prim_generic_flash.sv
@@ -21,20 +21,29 @@ module prim_generic_flash #(
   input flash_phy_pkg::flash_phy_prim_flash_req_t [NumBanks-1:0] flash_req_i,
   output flash_phy_pkg::flash_phy_prim_flash_rsp_t [NumBanks-1:0] flash_rsp_o,
   output logic [flash_phy_pkg::ProgTypes-1:0] prog_type_avail_o,
-  input init_i,
   output init_busy_o,
   input tck_i,
   input tdi_i,
   input tms_i,
   output logic tdo_o,
+  input bist_enable_i,
   input scanmode_i,
   input scan_rst_ni,
   input flash_power_ready_h_i,
   input flash_power_down_h_i,
   input [TestModeWidth-1:0] flash_test_mode_a_i,
-  input flash_test_voltage_h_i
+  input flash_test_voltage_h_i,
+  input tlul_pkg::tl_h2d_t tl_i,
+  output tlul_pkg::tl_d2h_t tl_o
 );
 
+  localparam int CfgRegs = 21;
+  localparam int CfgAddrWidth = $clog2(CfgRegs);
+
+  // convert this into a tlul write later
+  logic init;
+  assign init = 1'b1;
+
   logic [NumBanks-1:0] init_busy;
   assign init_busy_o = |init_busy;
 

ParseResult:
INS HdlIdDef@@CfgRegs to objs
HdlIdDef: CfgRegs
    HdlValueId: int
    HdlValueInt: 21
    HdlDirection: INTERNAL

INS HdlIdDef@@CfgAddrWidth to objs
HdlIdDef: CfgAddrWidth
    HdlValueId: int
    HdlOp: CALL
        list: ops
            HdlValueId: $clog2
            HdlValueId: CfgRegs
    HdlDirection: INTERNAL

INS HdlIdDef@@init to objs
HdlIdDef: init
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlValueInt: 1
    HdlValueId: init

INS HdlIdDef@@bist_enable_i to ports
HdlIdDef: bist_enable_i
    HdlValueId: wire
    HdlDirection: IN

INS HdlIdDef@@tl_i to ports
HdlIdDef: tl_i
    HdlOp: DOUBLE_COLON
        list: ops
            HdlValueId: tlul_pkg
            HdlValueId: tl_h2d_t
    HdlDirection: IN

INS HdlIdDef@@tl_o to ports
HdlIdDef: tl_o
    HdlOp: DOUBLE_COLON
        list: ops
            HdlValueId: tlul_pkg
            HdlValueId: tl_d2h_t
    HdlDirection: OUT

UPD HdlIdDef@@init_busy to init_busy
    UPD HdlOp@@INDEX to PARAMETRIZATION

UPD HdlIdDef@@prog_type_avail_o to prog_type_avail_o
    UPD HdlOp@@INDEX to PARAMETRIZATION

UPD HdlIdDef@@tdo_o to tdo_o
    INS HdlOp@@PARAMETRIZATION to tdo_o
    UPD HdlOp@@PARAMETRIZATION to PARAMETRIZATION
        INS list@@ops to PARAMETRIZATION

UPD HdlIdDef@@tdo_o to tdo_o
    MOV HdlValueId@@logic to tdo_o
    HdlValueId: logic

DEL HdlIdDef@@init_i from ports
HdlIdDef: init_i
    HdlValueId: wire
    HdlDirection: IN


CommitId: b1df83694033489cef95de89bfa0941eb59c8834
Controller FSM: simplify `debug_mode_q`-related control
--- a/rtl/ibex_controller.sv
+++ b/rtl/ibex_controller.sv
@@ -126,10 +126,11 @@ module ibex_controller (
   logic stall;
   logic halt_if;
   logic halt_id;
-  logic irq;
   logic exc_req;
   logic exc_req_lsu;
   logic special_req;
+  logic enter_debug_mode;
+  logic handle_irq;
 
 `ifndef SYNTHESIS
   // synopsys translate_off

ParseResult:
MOV HdlIdDef@@irq to objs
HdlIdDef: irq
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

UPD HdlIdDef@@irq to enter_debug_mode

INS HdlIdDef@@handle_irq to objs
HdlIdDef: handle_irq
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL


CommitId: b1df83694033489cef95de89bfa0941eb59c8834
Controller FSM: simplify `debug_mode_q`-related control
--- a/rtl/ibex_controller.sv
+++ b/rtl/ibex_controller.sv
@@ -145,12 +146,13 @@ module ibex_controller (
   // synopsys translate_on
 `endif
 
+  ////////////////
+  // Exceptions //
+  ////////////////
+
   assign load_err_d  = load_err_i;
   assign store_err_d = store_err_i;
 
-  assign irq         = irq_req_ctrl_i & m_IE_i;
-  assign exc_kill_o  = 1'b0;
-
   // exception requests
   assign exc_req     = ecall_insn_i | ebrk_insn_i | illegal_insn_i;
 

ParseResult:
MOV HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: AND
        list: ops
            HdlValueId: irq_req_ctrl_i
            HdlValueId: m_IE_i
    HdlValueId: irq

MOV HdlStmAssign@@ to objs
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: exc_kill_o

UPD HdlStmAssign@@ to 
    UPD HdlValueId@@irq to handle_irq
    MOV HdlOp@@AND to 
    HdlOp: AND
        list: ops
            HdlValueId: irq_req_ctrl_i
            HdlValueId: m_IE_i


CommitId: b1df83694033489cef95de89bfa0941eb59c8834
Controller FSM: simplify `debug_mode_q`-related control
--- a/rtl/ibex_controller.sv
+++ b/rtl/ibex_controller.sv
@@ -161,6 +163,16 @@ module ibex_controller (
   assign special_req = mret_insn_i | dret_insn_i | wfi_insn_i | csr_status_i |
       exc_req | exc_req_lsu;
 
+  ////////////////
+  // Interrupts //
+  ////////////////
+
+  assign enter_debug_mode = debug_req_i & ~debug_mode_q;
+
+  // interrupts including NMI are ignored while in debug mode [Debug Spec v0.13.2, p.39]
+  assign handle_irq       = irq_req_ctrl_i & m_IE_i & ~debug_mode_q;
+  assign exc_kill_o       = 1'b0;
+
   /////////////////////
   // Core controller //
   /////////////////////

ParseResult:
INS HdlStmAssign@@ to objs


CommitId: b1df83694033489cef95de89bfa0941eb59c8834
Controller FSM: simplify `debug_mode_q`-related control
--- a/rtl/ibex_controller.sv
+++ b/rtl/ibex_controller.sv
@@ -252,7 +264,7 @@ module ibex_controller (
         end
 
         // handle interrupts
-        if (irq) begin
+        if (handle_irq) begin
           // This assumes that the pipeline is always flushed before
           // going to sleep.
           ctrl_fsm_ns = IRQ_TAKEN;

ParseResult:
UPD HdlStmIf@@ to 
    UPD HdlValueId@@irq to handle_irq


CommitId: b1df83694033489cef95de89bfa0941eb59c8834
Controller FSM: simplify `debug_mode_q`-related control
--- a/rtl/ibex_controller.sv
+++ b/rtl/ibex_controller.sv
@@ -261,7 +273,7 @@ module ibex_controller (
         end
 
         // enter debug mode
-        if (debug_req_i && !debug_mode_q) begin
+        if (enter_debug_mode) begin
           ctrl_fsm_ns = DBG_TAKEN_IF;
           halt_if     = 1'b1;
           halt_id     = 1'b1;

ParseResult:
UPD HdlStmIf@@ to 
    UPD HdlOp@@AND_LOG to AND
    MOV HdlOp@@AND_LOG to 
    HdlOp: AND_LOG
        list: ops
            HdlValueId: debug_req_i
            HdlOp: NEG_LOG
                list: ops
                    HdlValueId: debug_mode_q
    UPD HdlOp@@AND_LOG to AND_LOG
        UPD HdlOp@@NEG_LOG to NEG
        DEL HdlValueId@@debug_req_i from ops

UPD HdlStmIf@@ to 
    UPD HdlValueId@@irq to handle_irq


CommitId: b1df83694033489cef95de89bfa0941eb59c8834
Controller FSM: simplify `debug_mode_q`-related control
--- a/rtl/ibex_controller.sv
+++ b/rtl/ibex_controller.sv
@@ -294,7 +306,7 @@ module ibex_controller (
 
           // stall IF stage to not starve debug and interrupt requests, these just
           // need to wait until after the current (multicycle) instruction
-          if ((debug_req_i || irq) && stall && !debug_mode_q) begin
+          if ((enter_debug_mode || handle_irq) && stall) begin
             halt_if = 1'b1;
           end
 

ParseResult:
UPD HdlStmIf@@ to 
    UPD HdlOp@@AND_LOG to AND_LOG
        MOV HdlOp@@AND_LOG to ops
        HdlOp: AND_LOG
            list: ops
                HdlOp: OR_LOG
                    list: ops
                        HdlValueId: debug_req_i
                        HdlValueId: irq
                HdlValueId: stall
        UPD HdlOp@@AND_LOG to AND_LOG
            UPD HdlOp@@OR_LOG to OR_LOG
                UPD HdlValueId@@debug_req_i to enter_debug_mode
                UPD HdlValueId@@irq to handle_irq
        DEL HdlOp@@NEG_LOG from ops
        HdlOp: NEG_LOG
            list: ops
                HdlValueId: debug_mode_q
        DEL list@@ops from AND_LOG
    DEL HdlOp@@AND_LOG from 


CommitId: b1df83694033489cef95de89bfa0941eb59c8834
Controller FSM: simplify `debug_mode_q`-related control
--- a/rtl/ibex_controller.sv
+++ b/rtl/ibex_controller.sv
@@ -310,17 +322,19 @@ module ibex_controller (
           end
         end // instr_valid_i
 
-        if  (debug_req_i && !stall && !special_req && !debug_mode_q) begin
-          // enter debug mode
-          ctrl_fsm_ns = DBG_TAKEN_ID;
-          halt_if     = 1'b1;
-          halt_id     = 1'b1;
+        if (!stall && !special_req) begin
+          if (enter_debug_mode) begin
+            // enter debug mode
+            ctrl_fsm_ns = DBG_TAKEN_ID;
+            halt_if     = 1'b1;
+            halt_id     = 1'b1;
 
-        end else if (irq && !stall && !special_req && !debug_mode_q) begin
-          // handle interrupt (not in debug mode)
-          ctrl_fsm_ns = IRQ_TAKEN;
-          halt_if     = 1'b1;
-          halt_id     = 1'b1;
+          end else if (handle_irq) begin
+            // handle interrupt (not in debug mode)
+            ctrl_fsm_ns = IRQ_TAKEN;
+            halt_if     = 1'b1;
+            halt_id     = 1'b1;
+          end
         end
 
       end // DECODE

ParseResult:
UPD HdlStmIf@@ to 
    UPD HdlOp@@AND_LOG to AND_LOG
        UPD HdlOp@@NEG_LOG to NEG
        MOV HdlOp@@NEG_LOG to ops
        HdlOp: NEG_LOG
            list: ops
                HdlValueId: debug_mode_q
        UPD HdlOp@@AND_LOG to AND_LOG
            MOV HdlOp@@AND_LOG to ops
            HdlOp: AND_LOG
                list: ops
                    HdlValueId: debug_req_i
                    HdlOp: NEG_LOG
                        list: ops
                            HdlValueId: stall
            MOV HdlOp@@NEG_LOG to ops
            HdlOp: NEG_LOG
                list: ops
                    HdlValueId: special_req
            UPD HdlOp@@AND_LOG to AND_LOG
                DEL HdlValueId@@debug_req_i from ops
            DEL list@@ops from AND_LOG
        DEL HdlOp@@AND_LOG from ops
        DEL list@@ops from AND_LOG
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: ctrl_fsm_ns
                    HdlValueId: DBG_TAKEN_ID
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: halt_if
                    HdlValueInt: 1
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: halt_id
                    HdlValueInt: 1
    MOV list@@elifs to 
    list: elifs
        tuple
            HdlOp: AND_LOG
                list: ops
                    HdlOp: AND_LOG
                        list: ops
                            HdlOp: AND_LOG
                                list: ops
                                    HdlValueId: irq
                                    HdlOp: NEG_LOG
                                        list: ops
                                            HdlValueId: stall
                            HdlOp: NEG_LOG
                                list: ops
                                    HdlValueId: special_req
                    HdlOp: NEG_LOG
                        list: ops
                            HdlValueId: debug_mode_q
            HdlStmBlock: SEQ
                list: body
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: ctrl_fsm_ns
                            HdlValueId: IRQ_TAKEN
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: halt_if
                            HdlValueInt: 1
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: halt_id
                            HdlValueInt: 1
    UPD HdlOp@@AND_LOG to AND_LOG
        UPD HdlOp@@AND_LOG to AND_LOG
            UPD HdlOp@@AND_LOG to AND_LOG
                UPD HdlValueId@@irq to handle_irq
                MOV HdlValueId@@irq to ops
                HdlValueId: irq
                DEL HdlOp@@NEG_LOG from ops
                HdlOp: NEG_LOG
                    list: ops
                        HdlValueId: stall
                DEL list@@ops from AND_LOG
            DEL HdlOp@@AND_LOG from ops
            DEL HdlOp@@NEG_LOG from ops
            HdlOp: NEG_LOG
                list: ops
                    HdlValueId: special_req
            DEL list@@ops from AND_LOG
        DEL HdlOp@@AND_LOG from ops
        DEL HdlOp@@NEG_LOG from ops
        HdlOp: NEG_LOG
            list: ops
                HdlValueId: debug_mode_q
        DEL list@@ops from AND_LOG
    DEL HdlOp@@AND_LOG from 
    DEL HdlOp@@AND_LOG from 

UPD HdlStmIf@@ to 
    INS HdlStmBlock@@SEQ to 
    INS list@@elifs to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

INS HdlStmIf@@ to body

UPD HdlStmIf@@ to 
    INS HdlValueId@@enter_debug_mode to 


CommitId: b1df83694033489cef95de89bfa0941eb59c8834
Controller FSM: simplify `debug_mode_q`-related control
--- a/rtl/ibex_controller.sv
+++ b/rtl/ibex_controller.sv
@@ -381,7 +395,7 @@ module ibex_controller (
 
         // update dcsr and dpc
         if ((ebrk_insn_i && debug_ebreakm_i && !debug_mode_q) || // ebreak with forced entry
-            (debug_req_i && !debug_mode_q)) begin // halt request
+            (enter_debug_mode)) begin // halt request
 
           // dpc (set to the address of the EBREAK, i.e. set to PC in ID stage)
           csr_save_cause_o = 1'b1;
ParseResult:
UPD HdlStmIf@@ to 
    UPD HdlOp@@OR_LOG to OR_LOG
        UPD HdlOp@@AND_LOG to AND_LOG
            UPD HdlOp@@NEG_LOG to NEG_LOG
                UPD HdlValueId@@debug_mode_q to enter_debug_mode
                MOV HdlValueId@@debug_mode_q to ops
                HdlValueId: debug_mode_q
                DEL list@@ops from NEG_LOG
            DEL HdlValueId@@debug_req_i from ops
            DEL HdlOp@@NEG_LOG from ops
            DEL list@@ops from AND_LOG
        DEL HdlOp@@AND_LOG from ops


CommitId: 0243e081119ad971a045097f0b74b552d5d1fab4
[rtl] Switch to M mode on debug entry
--- a/rtl/ibex_cs_registers.sv
+++ b/rtl/ibex_cs_registers.sv
@@ -75,6 +75,7 @@ module ibex_cs_registers #(
     input  logic                 csr_save_if_i,
     input  logic                 csr_save_id_i,
     input  logic                 csr_restore_mret_i,
+    input  logic                 csr_restore_dret_i,
     input  logic                 csr_save_cause_i,
     input  ibex_pkg::exc_cause_e csr_mcause_i,
     input  logic [31:0]          csr_mtval_i,

ParseResult:
INS HdlIdDef@@csr_restore_dret_i to ports
HdlIdDef: csr_restore_dret_i
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: IN


CommitId: 0243e081119ad971a045097f0b74b552d5d1fab4
[rtl] Switch to M mode on debug entry
--- a/rtl/ibex_cs_registers.sv
+++ b/rtl/ibex_cs_registers.sv
@@ -512,6 +513,9 @@ module ibex_cs_registers #(
           default:;
         endcase
 
+        // Any exception, including debug mode, causes a switch to M-mode
+        priv_lvl_d = PRIV_LVL_M;
+
         if (debug_csr_save_i) begin
           // all interrupts are masked
           // do not update cause, epc, tval, epc and status

ParseResult:
UPD HdlStmProcess@@ to 
    INS HdlStmProcessTriggerConstrain@@COMB to 

UPD HdlStmCase@@{'__class__': 'HdlValueInt', 'base': 2, 'bits': 1, 'val': '1'}  to {'__class__': 'HdlValueInt', 'base': 2, 'bits': 1, 'val': '1'} 
    INS tuple@@ to cases
    tuple
        HdlValueId: csr_restore_dret_i
        HdlStmBlock: SEQ
            list: body
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: priv_lvl_d
                        HdlOp: DOT
                            list: ops
                                HdlValueId: dcsr_q
                                HdlValueId: prv

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: priv_lvl_d
                HdlValueId: PRIV_LVL_M

UPD HdlStmProcess@@ to 
    DEL HdlStmProcessTriggerConstrain@@COMB from 


CommitId: 0243e081119ad971a045097f0b74b552d5d1fab4
[rtl] Switch to M mode on debug entry
--- a/rtl/ibex_cs_registers.sv
+++ b/rtl/ibex_cs_registers.sv
@@ -519,7 +523,6 @@ module ibex_cs_registers #(
           dcsr_d.cause = debug_cause_i;
           depc_d       = exception_pc;
         end else begin
-          priv_lvl_d     = PRIV_LVL_M;
           mtval_d        = csr_mtval_i;
           mstatus_d.mie  = 1'b0; // disable interrupts
           // save current status

ParseResult:
UPD HdlStmProcess@@ to 
    INS HdlStmProcessTriggerConstrain@@COMB to 

UPD HdlStmCase@@{'__class__': 'HdlValueInt', 'base': 2, 'bits': 1, 'val': '1'}  to {'__class__': 'HdlValueInt', 'base': 2, 'bits': 1, 'val': '1'} 
    INS tuple@@ to cases
    tuple
        HdlValueId: csr_restore_dret_i
        HdlStmBlock: SEQ
            list: body
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: priv_lvl_d
                        HdlOp: DOT
                            list: ops
                                HdlValueId: dcsr_q
                                HdlValueId: prv

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: priv_lvl_d
                HdlValueId: PRIV_LVL_M

UPD HdlStmProcess@@ to 
    DEL HdlStmProcessTriggerConstrain@@COMB from 


CommitId: 0243e081119ad971a045097f0b74b552d5d1fab4
[rtl] Switch to M mode on debug entry
--- a/rtl/ibex_cs_registers.sv
+++ b/rtl/ibex_cs_registers.sv
@@ -535,6 +538,10 @@ module ibex_cs_registers #(
         end
       end // csr_save_cause_i
 
+      csr_restore_dret_i: begin // DRET
+        priv_lvl_d = dcsr_q.prv;
+      end // csr_restore_dret_i
+
       csr_restore_mret_i: begin // MRET
         priv_lvl_d     = mstatus_q.mpp;
         mstatus_d.mie  = mstatus_q.mpie; // re-enable interrupts
ParseResult:
UPD HdlStmProcess@@ to 
    INS HdlStmProcessTriggerConstrain@@COMB to 

UPD HdlStmCase@@{'__class__': 'HdlValueInt', 'base': 2, 'bits': 1, 'val': '1'}  to {'__class__': 'HdlValueInt', 'base': 2, 'bits': 1, 'val': '1'} 
    INS tuple@@ to cases
    tuple
        HdlValueId: csr_restore_dret_i
        HdlStmBlock: SEQ
            list: body
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: priv_lvl_d
                        HdlOp: DOT
                            list: ops
                                HdlValueId: dcsr_q
                                HdlValueId: prv

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: priv_lvl_d
                HdlValueId: PRIV_LVL_M

UPD HdlStmProcess@@ to 
    DEL HdlStmProcessTriggerConstrain@@COMB from 


CommitId: 684d4205bf10793ab60aebb7fbb2a02a2047451a
Prevent writing CSR_SECURESEED to get the seed of dummy instruction
--- a/rtl/ibex_dummy_instr.sv
+++ b/rtl/ibex_dummy_instr.sv
@@ -54,10 +54,21 @@ module ibex_dummy_instr (
   logic [6:0]               dummy_set;
   logic [2:0]               dummy_opcode;
   logic [31:0]              dummy_instr;
+  logic [31:0]              dummy_instr_seed_q, dummy_instr_seed_d;
 
   // Shift the LFSR every time we insert an instruction
   assign lfsr_en = insert_dummy_instr & id_in_ready_i;
 
+  assign dummy_instr_seed_d = dummy_instr_seed_q ^ dummy_instr_seed_i;
+
+  always_ff @(posedge clk_i or negedge rst_ni) begin
+    if (!rst_ni) begin
+      dummy_instr_seed_q <= '0;
+    end else if (dummy_instr_seed_en_i) begin
+      dummy_instr_seed_q <= dummy_instr_seed_d;
+    end
+  end
+
   prim_lfsr #(
       .LfsrDw      ( 32         ),
       .StateOutDw  ( LFSR_OUT_W )

ParseResult:
INS HdlIdDef@@dummy_instr_seed_q to objs
HdlIdDef: dummy_instr_seed_q
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 31
                    HdlValueInt: 0
    HdlDirection: INTERNAL

INS HdlIdDef@@dummy_instr_seed_d to objs
HdlIdDef: dummy_instr_seed_d
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 31
                    HdlValueInt: 0
    HdlDirection: INTERNAL

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: XOR
        list: ops
            HdlValueId: dummy_instr_seed_q
            HdlValueId: dummy_instr_seed_i
    HdlValueId: dummy_instr_seed_d

INS HdlStmProcess@@ to objs
HdlStmProcess
    list: sensitivity
        HdlOp: RISING
            list: ops
                HdlValueId: clk_i
        HdlOp: FALLING
            list: ops
                HdlValueId: rst_ni
    HdlStmBlock: SEQ
        list: body
            HdlStmIf
                HdlOp: NEG_LOG
                    list: ops
                        HdlValueId: rst_ni
                HdlStmBlock: SEQ
                    list: body
                        HdlStmAssign
                            HdlValueInt: 0
                            HdlValueId: dummy_instr_seed_q
                list: elifs
                    tuple
                        HdlValueId: dummy_instr_seed_en_i
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmAssign
                                    HdlValueId: dummy_instr_seed_d
                                    HdlValueId: dummy_instr_seed_q
    HdlStmProcessTriggerConstrain: FF


CommitId: 967834db0c74845d24a725c7c034c1b601ce3da4
Use cast before assignment to enum type to avoid Vivado errors
--- a/rtl/ibex_cs_registers.sv
+++ b/rtl/ibex_cs_registers.sv
@@ -371,9 +371,11 @@ module ibex_cs_registers #(
       mcause_q   <= '0;
 
       depc_q      <= '0;
-      dcsr_q      <= '{
-        prv:     PRIV_LVL_M,
-        default: '0
+      dcsr_q     <= '{
+        xdebugver: x_debug_ver_e'('0),
+        cause:     dbg_cause_e'('0),
+        prv:       PRIV_LVL_M,
+        default:   '0
       };
       dscratch0_q <= '0;
       dscratch1_q <= '0;
ParseResult:
UPD HdlStmAssign@@ to 
    INS HdlOp@@MAP_ASSOCIATION to src
    HdlOp: MAP_ASSOCIATION
        list: ops
            HdlValueId: xdebugver
            HdlOp: CALL
                list: ops
                    HdlValueId: x_debug_ver_e
                    HdlValueInt: 0
    INS HdlOp@@MAP_ASSOCIATION to src
    HdlOp: MAP_ASSOCIATION
        list: ops
            HdlValueId: cause
            HdlOp: CALL
                list: ops
                    HdlValueId: dbg_cause_e
                    HdlValueInt: 0


CommitId: b1daf9e44efdf8fc382493b63065c5816fdb7938
Update lowrisc_ip to lowRISC/opentitan@c277e3a8
--- a/vendor/lowrisc_ip/ip/prim/rtl/prim_alert_sender.sv
+++ b/vendor/lowrisc_ip/ip/prim/rtl/prim_alert_sender.sv
@@ -162,8 +163,8 @@ module prim_alert_sender
         if (ack_level) begin
           state_d  = PingHsPhase2;
         end else begin
-          alert_pd = 1'b1;
-          alert_nd = 1'b0;
+          alert_p  = 1'b1;
+          alert_n  = 1'b0;
         end
       end
       // wait for deassertion of ack

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@alert_pd to alert_p
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@alert_nd to alert_n


CommitId: b1daf9e44efdf8fc382493b63065c5816fdb7938
Update lowrisc_ip to lowRISC/opentitan@c277e3a8
--- a/vendor/lowrisc_ip/ip/prim/rtl/prim_alert_sender.sv
+++ b/vendor/lowrisc_ip/ip/prim/rtl/prim_alert_sender.sv
@@ -192,8 +193,8 @@ module prim_alert_sender
         state_d  = Idle;
         if (sigint_detected) begin
           state_d  = SigInt;
-          alert_pd = ~alert_pq;
-          alert_nd = ~alert_pq;
+          alert_p  = ~alert_pq;
+          alert_n  = ~alert_pq;
         end
       end
       // catch parasitic states

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@alert_pd to alert_p
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@alert_nd to alert_n

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@alert_pd to alert_p
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@alert_nd to alert_n


CommitId: b1daf9e44efdf8fc382493b63065c5816fdb7938
Update lowrisc_ip to lowRISC/opentitan@c277e3a8
--- a/vendor/lowrisc_ip/ip/prim/rtl/prim_alert_sender.sv
+++ b/vendor/lowrisc_ip/ip/prim/rtl/prim_alert_sender.sv
@@ -202,13 +203,23 @@ module prim_alert_sender
     // bail out if a signal integrity issue has been detected
     if (sigint_detected && (state_q != SigInt)) begin
       state_d   = SigInt;
-      alert_pd  = 1'b0;
-      alert_nd  = 1'b0;
+      alert_p   = 1'b0;
+      alert_n   = 1'b0;
       ping_clr  = 1'b0;
       alert_clr = 1'b0;
     end
   end
 
+  // This prevents further tool optimizations of the differential signal.
+  prim_buf u_prim_buf_p (
+    .in_i(alert_p),
+    .out_o(alert_pd)
+  );
+  prim_buf u_prim_buf_n (
+    .in_i(alert_n),
+    .out_o(alert_nd)
+  );
+
   always_ff @(posedge clk_i or negedge rst_ni) begin : p_reg
     if (!rst_ni) begin
       state_q     <= Idle;
ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@alert_pd to alert_p
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@alert_nd to alert_n

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@alert_pd to alert_p
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@alert_nd to alert_n


CommitId: 2c75c2b2ec90bebb756386e1360810474323c1ad
Update lowrisc_ip to lowRISC/opentitan@1ae03937f
--- a/vendor/lowrisc_ip/ip/prim/rtl/prim_secded_28_22_enc.sv
+++ b/vendor/lowrisc_ip/ip/prim/rtl/prim_secded_28_22_enc.sv
@@ -13,11 +13,11 @@ module prim_secded_28_22_enc (
   always_comb begin : p_encode
     out = 28'(in);
     out[22] = ^(out & 28'h03003FF);
-    out[23] = ^(out & 28'h030FC0F);
+    out[23] = ^(out & 28'h010FC0F);
     out[24] = ^(out & 28'h0371C71);
     out[25] = ^(out & 28'h03B6592);
-    out[26] = ^(out & 28'h02DAAA4);
-    out[27] = ^(out & 28'h01ED348);
+    out[26] = ^(out & 28'h03DAAA4);
+    out[27] = ^(out & 28'h02ED348);
   end
 
 endmodule : prim_secded_28_22_enc
ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@XOR_UNARY to XOR_UNARY
                UPD HdlOp@@AND to AND
                    UPD HdlValueInt@@030fc0f to 010fc0f
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@XOR_UNARY to XOR_UNARY
                UPD HdlOp@@AND to AND
                    UPD HdlValueInt@@02daaa4 to 03daaa4
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@XOR_UNARY to XOR_UNARY
                UPD HdlOp@@AND to AND
                    UPD HdlValueInt@@01ed348 to 02ed348


CommitId: 5319734180ac4844e43d31ad19dc108aac503037
Fix decoding of C.LI, C.LUI, C.SRLI, C.SRAI, C.SSLI
--- a/rtl/ibex_compressed_decoder.sv
+++ b/rtl/ibex_compressed_decoder.sv
@@ -88,21 +88,20 @@ module ibex_compressed_decoder (
 
           3'b010: begin
             // c.li -> addi rd, x0, nzimm
+            // (c.li hints are translated into an addi hint)
             instr_o = {{6 {instr_i[12]}}, instr_i[12], instr_i[6:2], 5'b0,
                        3'b0, instr_i[11:7], {OPCODE_OPIMM}};
-            if (instr_i[11:7] == 5'b0)  illegal_instr_o = 1'b1;
           end
 
           3'b011: begin
             // c.lui -> lui rd, imm
+            // (c.lui hints are translated into a lui hint)
             instr_o = {{15 {instr_i[12]}}, instr_i[6:2], instr_i[11:7], {OPCODE_LUI}};
 
             if (instr_i[11:7] == 5'h02) begin
               // c.addi16sp -> addi x2, x2, nzimm
               instr_o = {{3 {instr_i[12]}}, instr_i[4:3], instr_i[5], instr_i[2],
                          instr_i[6], 4'b0, 5'h02, 3'b000, 5'h02, {OPCODE_OPIMM}};
-            end else if (instr_i[11:7] == 5'b0) begin
-              illegal_instr_o = 1'b1;
             end
 
             if ({instr_i[12], instr_i[6:2]} == 6'b0) illegal_instr_o = 1'b1;

ParseResult:
UPD HdlStmProcess@@ to 
    INS HdlStmProcessTriggerConstrain@@COMB to 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '1'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '1'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    INS HdlStmCaseType@@CASE to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '1'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    INS HdlStmCaseUniqConstrain@@UNIQUE to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '1'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    INS HdlValueInt@@01 to 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '15'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '13'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '15'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '13'}]}]} 
    INS HdlStmCaseType@@CASE to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '15'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '13'}]}]} 
    INS HdlStmCaseUniqConstrain@@UNIQUE to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '15'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '13'}]}]} 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '1'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '1'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    DEL HdlStmCaseType@@CASE from {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '1'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    DEL HdlValueInt@@01 from 
    DEL HdlStmCaseUniqConstrain@@UNIQUE from {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '1'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '15'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '13'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '15'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '13'}]}]} 
    DEL HdlStmCaseType@@CASE from {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '15'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '13'}]}]} 
    DEL HdlStmCaseUniqConstrain@@UNIQUE from {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '15'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '13'}]}]} 

DEL HdlStmIf@@ from body
HdlStmIf
    HdlOp: EQ
        list: ops
            HdlOp: INDEX
                list: ops
                    HdlValueId: instr_i
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 11
                            HdlValueInt: 7
            HdlValueInt: 0
    HdlOp: ASSIGN
        list: ops
            HdlValueId: illegal_instr_o
            HdlValueInt: 1
    list: elifs

UPD HdlStmIf@@ to 
    DEL tuple@@ from elifs
    tuple
        HdlOp: EQ
            list: ops
                HdlOp: INDEX
                    list: ops
                        HdlValueId: instr_i
                        HdlOp: DOWNTO
                            list: ops
                                HdlValueInt: 11
                                HdlValueInt: 7
                HdlValueInt: 0
        HdlStmBlock: SEQ
            list: body
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: illegal_instr_o
                        HdlValueInt: 1

UPD HdlStmProcess@@ to 
    DEL HdlStmProcessTriggerConstrain@@COMB from 


CommitId: 5319734180ac4844e43d31ad19dc108aac503037
Fix decoding of C.LI, C.LUI, C.SRLI, C.SRAI, C.SSLI
--- a/rtl/ibex_compressed_decoder.sv
+++ b/rtl/ibex_compressed_decoder.sv
@@ -114,10 +113,10 @@ module ibex_compressed_decoder (
               2'b01: begin
                 // 00: c.srli -> srli rd, rd, shamt
                 // 01: c.srai -> srai rd, rd, shamt
+                // (c.srli/c.srai hints are translated into a srli/srai hint)
                 instr_o = {1'b0, instr_i[10], 5'b0, instr_i[6:2], 2'b01, instr_i[9:7],
                            3'b101, 2'b01, instr_i[9:7], {OPCODE_OPIMM}};
                 if (instr_i[12] == 1'b1)  illegal_instr_o = 1'b1;
-                if (instr_i[6:2] == 5'b0) illegal_instr_o = 1'b1;
               end
 
               2'b10: begin

ParseResult:
UPD HdlStmProcess@@ to 
    INS HdlStmProcessTriggerConstrain@@COMB to 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '1'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '1'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    INS HdlStmCaseType@@CASE to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '1'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    INS HdlStmCaseUniqConstrain@@UNIQUE to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '1'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    INS HdlValueInt@@01 to 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '15'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '13'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '15'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '13'}]}]} 
    INS HdlStmCaseType@@CASE to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '15'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '13'}]}]} 
    INS HdlStmCaseUniqConstrain@@UNIQUE to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '15'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '13'}]}]} 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '1'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '1'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    DEL HdlStmCaseType@@CASE from {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '1'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    DEL HdlValueInt@@01 from 
    DEL HdlStmCaseUniqConstrain@@UNIQUE from {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '1'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '15'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '13'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '15'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '13'}]}]} 
    DEL HdlStmCaseType@@CASE from {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '15'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '13'}]}]} 
    DEL HdlStmCaseUniqConstrain@@UNIQUE from {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '15'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '13'}]}]} 

DEL HdlStmIf@@ from body
HdlStmIf
    HdlOp: EQ
        list: ops
            HdlOp: INDEX
                list: ops
                    HdlValueId: instr_i
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 6
                            HdlValueInt: 2
            HdlValueInt: 0
    HdlOp: ASSIGN
        list: ops
            HdlValueId: illegal_instr_o
            HdlValueInt: 1
    list: elifs

DEL HdlStmIf@@ from body
HdlStmIf
    HdlOp: EQ
        list: ops
            HdlOp: INDEX
                list: ops
                    HdlValueId: instr_i
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 6
                            HdlValueInt: 2
            HdlValueInt: 0
    HdlOp: ASSIGN
        list: ops
            HdlValueId: illegal_instr_o
            HdlValueInt: 1
    list: elifs

UPD HdlStmProcess@@ to 
    DEL HdlStmProcessTriggerConstrain@@COMB from 


CommitId: 5319734180ac4844e43d31ad19dc108aac503037
Fix decoding of C.LI, C.LUI, C.SRLI, C.SRAI, C.SSLI
--- a/rtl/ibex_compressed_decoder.sv
+++ b/rtl/ibex_compressed_decoder.sv
@@ -192,9 +191,9 @@ module ibex_compressed_decoder (
         unique case (instr_i[15:13])
           3'b000: begin
             // c.slli -> slli rd, rd, shamt
+            // (c.ssli hints are translated into a slli hint)
             instr_o = {7'b0, instr_i[6:2], instr_i[11:7], 3'b001, instr_i[11:7], {OPCODE_OPIMM}};
-            if (instr_i[11:7] == 5'b0)  illegal_instr_o = 1'b1;
-            if (instr_i[12] == 1'b1 || instr_i[6:2] == 5'b0)  illegal_instr_o = 1'b1;
+            if (instr_i[12] == 1'b1)  illegal_instr_o = 1'b1; // reserved for custom extensions
           end
 
           3'b010: begin
ParseResult:
UPD HdlStmProcess@@ to 
    INS HdlStmProcessTriggerConstrain@@COMB to 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '1'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '1'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    INS HdlStmCaseType@@CASE to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '1'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    INS HdlStmCaseUniqConstrain@@UNIQUE to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '1'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    INS HdlValueInt@@01 to 

UPD HdlStmIf@@ to 
    UPD HdlOp@@OR_LOG to OR_LOG
        MOV HdlOp@@EQ to ops
        HdlOp: EQ
            list: ops
                HdlOp: INDEX
                    list: ops
                        HdlValueId: instr_i
                        HdlValueInt: 12
                HdlValueInt: 1
        DEL HdlOp@@EQ from ops
        HdlOp: EQ
            list: ops
                HdlOp: INDEX
                    list: ops
                        HdlValueId: instr_i
                        HdlOp: DOWNTO
                            list: ops
                                HdlValueInt: 6
                                HdlValueInt: 2
                HdlValueInt: 0
        DEL list@@ops from OR_LOG
    DEL HdlOp@@OR_LOG from 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '1'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '1'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    DEL HdlStmCaseType@@CASE from {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '1'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    DEL HdlValueInt@@01 from 
    DEL HdlStmCaseUniqConstrain@@UNIQUE from {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '1'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 

DEL HdlStmIf@@ from body
HdlStmIf
    HdlOp: EQ
        list: ops
            HdlOp: INDEX
                list: ops
                    HdlValueId: instr_i
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 11
                            HdlValueInt: 7
            HdlValueInt: 0
    HdlOp: ASSIGN
        list: ops
            HdlValueId: illegal_instr_o
            HdlValueInt: 1
    list: elifs

UPD HdlStmProcess@@ to 
    DEL HdlStmProcessTriggerConstrain@@COMB from 


CommitId: 8e452c33951a1815298210a2f69f502e512cc6f2
Fixed external interrupt request during invalid instruction
--- a/exc_controller.sv
+++ b/exc_controller.sv
@@ -31,6 +31,7 @@ module riscv_exc_controller
 
   // handshake signals to controller
   output logic        req_o,
+  output logic        ext_req_o,
   input  logic        ack_i,
 
   output logic        trap_o,

ParseResult:
INS HdlIdDef@@ext_req_o to ports
HdlIdDef: ext_req_o
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: OUT


CommitId: 8e452c33951a1815298210a2f69f502e512cc6f2
Fixed external interrupt request during invalid instruction
--- a/exc_controller.sv
+++ b/exc_controller.sv
@@ -63,7 +64,7 @@ module riscv_exc_controller
 
   enum logic [0:0] { IDLE, WAIT_CONTROLLER } exc_ctrl_cs, exc_ctrl_ns;
 
-  logic req_int;
+  logic req_int, ext_req_int;
   logic [1:0] pc_mux_int, pc_mux_int_q;
   logic [5:0] cause_int, cause_int_q;
 

ParseResult:
INS HdlIdDef@@ext_req_int to objs
HdlIdDef: ext_req_int
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL


CommitId: 8e452c33951a1815298210a2f69f502e512cc6f2
Fixed external interrupt request during invalid instruction
--- a/exc_controller.sv
+++ b/exc_controller.sv
@@ -85,13 +86,15 @@ module riscv_exc_controller
                       | (illegal_insn_i          & dbg_settings_i[DBG_SETS_EILL])
                       | (irq_enable_i & (|irq_i) & dbg_settings_i[DBG_SETS_IRQ]);
 
-  // request for exception/interrupt
-  assign req_int =   ecall_insn_i
+// request for exception/interrupt
+assign req_int =   ecall_insn_i
                    | lsu_load_err_i
                    | lsu_store_err_i
                    | illegal_insn_i
                    | (irq_enable_i & (|irq_i));
 
+assign ext_req_int = irq_enable_i & (|irq_i);
+
 
   // Exception cause and ISR address selection
   always_comb

ParseResult:
INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: AND
        list: ops
            HdlValueId: irq_enable_i
            HdlOp: OR_UNARY
                list: ops
                    HdlValueId: irq_i
    HdlValueId: ext_req_int


CommitId: 8e452c33951a1815298210a2f69f502e512cc6f2
Fixed external interrupt request during invalid instruction
--- a/exc_controller.sv
+++ b/exc_controller.sv
@@ -164,13 +167,14 @@ module riscv_exc_controller
   begin
     exc_ctrl_ns  = exc_ctrl_cs;
     req_o        = 1'b0;
+    ext_req_o    = 1'b0;
     save_cause_o = 1'b0;
 
     unique case (exc_ctrl_cs)
       IDLE:
       begin
-        req_o = req_int;
-
+        req_o     = req_int;
+        ext_req_o = ext_req_int;
         if (req_int) begin
           exc_ctrl_ns = WAIT_CONTROLLER;
 

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: ext_req_o
                HdlValueInt: 0

UPD HdlStmCase@@exc_ctrl_cs to exc_ctrl_cs
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: ext_req_o
                HdlValueId: ext_req_int
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: ext_req_o
                HdlValueInt: 1


CommitId: 8e452c33951a1815298210a2f69f502e512cc6f2
Fixed external interrupt request during invalid instruction
--- a/exc_controller.sv
+++ b/exc_controller.sv
@@ -183,8 +187,8 @@ module riscv_exc_controller
 
       WAIT_CONTROLLER:
       begin
-        req_o = 1'b1;
-
+        req_o     = 1'b1;
+        ext_req_o = 1'b1;
         if (ack_i) begin
           save_cause_o = 1'b1;
           exc_ctrl_ns  = IDLE;
ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: ext_req_o
                HdlValueInt: 0

UPD HdlStmCase@@exc_ctrl_cs to exc_ctrl_cs
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: ext_req_o
                HdlValueId: ext_req_int
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: ext_req_o
                HdlValueInt: 1


CommitId: 9b51b1143ad268f670228e435a2c61bdd8e4490f
CSR: Access checks on Debug CSRs
--- a/rtl/ibex_cs_registers.sv
+++ b/rtl/ibex_cs_registers.sv
@@ -57,6 +57,7 @@ module ibex_cs_registers #(
     output logic [33:0]          csr_pmp_addr_o [PMPNumRegions],
 
     // debug
+    input  logic                 debug_mode_i,
     input  ibex_pkg::dbg_cause_e debug_cause_i,
     input  logic                 debug_csr_save_i,
     output logic [31:0]          csr_depc_o,

ParseResult:
INS HdlIdDef@@debug_mode_i to ports
HdlIdDef: debug_mode_i
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: IN


CommitId: 9b51b1143ad268f670228e435a2c61bdd8e4490f
CSR: Access checks on Debug CSRs
--- a/rtl/ibex_cs_registers.sv
+++ b/rtl/ibex_cs_registers.sv
@@ -292,10 +293,22 @@ module ibex_cs_registers #(
       CSR_PMPADDR14: csr_rdata_int = pmp_addr_rdata[14];
       CSR_PMPADDR15: csr_rdata_int = pmp_addr_rdata[15];
 
-      CSR_DCSR:      csr_rdata_int = dcsr_q;
-      CSR_DPC:       csr_rdata_int = depc_q;
-      CSR_DSCRATCH0: csr_rdata_int = dscratch0_q;
-      CSR_DSCRATCH1: csr_rdata_int = dscratch1_q;
+      CSR_DCSR: begin
+        csr_rdata_int = dcsr_q;
+        illegal_csr = ~debug_mode_i;
+      end
+      CSR_DPC: begin
+        csr_rdata_int = depc_q;
+        illegal_csr = ~debug_mode_i;
+      end
+      CSR_DSCRATCH0: begin
+        csr_rdata_int = dscratch0_q;
+        illegal_csr = ~debug_mode_i;
+      end
+      CSR_DSCRATCH1: begin
+        csr_rdata_int = dscratch1_q;
+        illegal_csr = ~debug_mode_i;
+      end
 
       // machine counter/timers
       CSR_MCOUNTINHIBIT: csr_rdata_int = mcountinhibit;
ParseResult:
UPD HdlStmCase@@csr_addr_i to csr_addr_i
    INS HdlStmBlock@@SEQ to 
    INS HdlStmBlock@@SEQ to 
    INS HdlStmBlock@@SEQ to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: illegal_csr
                HdlOp: NEG
                    list: ops
                        HdlValueId: debug_mode_i
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: illegal_csr
                HdlOp: NEG
                    list: ops
                        HdlValueId: debug_mode_i
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: illegal_csr
                HdlOp: NEG
                    list: ops
                        HdlValueId: debug_mode_i
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: illegal_csr
                HdlOp: NEG
                    list: ops
                        HdlValueId: debug_mode_i

UPD HdlStmCase@@csr_addr_i to csr_addr_i
    MOV HdlOp@@ASSIGN to 
    HdlOp: ASSIGN
        list: ops
            HdlValueId: csr_rdata_int
            HdlValueId: dcsr_q
    MOV HdlOp@@ASSIGN to 
    HdlOp: ASSIGN
        list: ops
            HdlValueId: csr_rdata_int
            HdlValueId: depc_q
    MOV HdlOp@@ASSIGN to 
    HdlOp: ASSIGN
        list: ops
            HdlValueId: csr_rdata_int
            HdlValueId: dscratch0_q
    MOV HdlOp@@ASSIGN to 
    HdlOp: ASSIGN
        list: ops
            HdlValueId: csr_rdata_int
            HdlValueId: dscratch1_q


CommitId: 5093e0a0d25a6342ee67238fdd561c6f1097ee97
Explicitly set `alu_op_x_mux_sel` in decoder
--- a/rtl/ibex_decoder.sv
+++ b/rtl/ibex_decoder.sv
@@ -168,8 +168,8 @@ module ibex_decoder #(
     jump_set_o                  = 1'b0;
     branch_in_dec_o             = 1'b0;
     alu_operator_o              = ALU_SLTU;
-    alu_op_a_mux_sel_o          = OP_A_REG_A;
-    alu_op_b_mux_sel_o          = OP_B_REG_B;
+    alu_op_a_mux_sel_o          = OP_A_IMM;
+    alu_op_b_mux_sel_o          = OP_B_IMM;
 
     imm_a_mux_sel_o             = IMM_A_ZERO;
     imm_b_mux_sel_o             = IMM_B_I;

ParseResult:
UPD HdlStmProcess@@ to 
    INS HdlStmProcessTriggerConstrain@@COMB to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: alu_op_a_mux_sel_o
                HdlValueId: OP_A_IMM
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: alu_op_b_mux_sel_o
                HdlValueId: OP_B_IMM

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: alu_op_a_mux_sel_o
                HdlValueId: OP_A_REG_A
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: alu_op_b_mux_sel_o
                HdlValueId: OP_B_REG_B
    DEL HdlStmProcessTriggerConstrain@@COMB from 


CommitId: 5093e0a0d25a6342ee67238fdd561c6f1097ee97
Explicitly set `alu_op_x_mux_sel` in decoder
--- a/rtl/ibex_decoder.sv
+++ b/rtl/ibex_decoder.sv
@@ -253,6 +253,9 @@ module ibex_decoder #(
       OPCODE_BRANCH: begin // Branch
         branch_in_dec_o       = 1'b1;
         if (instr_new_i) begin
+          // Evaluate branch condition
+          alu_op_a_mux_sel_o  = OP_A_REG_A;
+          alu_op_b_mux_sel_o  = OP_B_REG_B;
           unique case (instr[14:12])
             3'b000:  alu_operator_o = ALU_EQ;
             3'b001:  alu_operator_o = ALU_NE;

ParseResult:
UPD HdlStmProcess@@ to 
    INS HdlStmProcessTriggerConstrain@@COMB to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: alu_op_a_mux_sel_o
                HdlValueId: OP_A_IMM
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: alu_op_b_mux_sel_o
                HdlValueId: OP_B_IMM

UPD HdlStmCase@@opcode to opcode
    INS HdlStmCaseType@@CASE to opcode
    INS HdlValueId@@opcode to opcode
    INS HdlStmCaseUniqConstrain@@UNIQUE to opcode
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: alu_op_a_mux_sel_o
                HdlValueId: OP_A_REG_A
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: alu_op_b_mux_sel_o
                HdlValueId: OP_B_REG_B
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: alu_op_a_mux_sel_o
                HdlValueId: OP_A_REG_A
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: alu_op_a_mux_sel_o
                HdlValueId: OP_A_REG_A

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: alu_op_a_mux_sel_o
                HdlValueId: OP_A_REG_A
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: alu_op_b_mux_sel_o
                HdlValueId: OP_B_REG_B
    DEL HdlStmProcessTriggerConstrain@@COMB from 

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: alu_op_a_mux_sel_o
                HdlValueId: OP_A_REG_A
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: alu_op_b_mux_sel_o
                HdlValueId: OP_B_REG_B

UPD HdlStmCase@@opcode to opcode
    DEL HdlStmCaseType@@CASE from opcode
    DEL HdlValueId@@opcode from opcode
    DEL HdlStmCaseUniqConstrain@@UNIQUE from opcode


CommitId: 5093e0a0d25a6342ee67238fdd561c6f1097ee97
Explicitly set `alu_op_x_mux_sel` in decoder
--- a/rtl/ibex_decoder.sv
+++ b/rtl/ibex_decoder.sv
@@ -277,9 +280,11 @@ module ibex_decoder #(
       ////////////////
 
       OPCODE_STORE: begin
-        data_req_o     = 1'b1;
-        data_we_o      = 1'b1;
-        alu_operator_o = ALU_ADD;
+        alu_op_a_mux_sel_o = OP_A_REG_A;
+        alu_op_b_mux_sel_o = OP_B_REG_B;
+        data_req_o         = 1'b1;
+        data_we_o          = 1'b1;
+        alu_operator_o     = ALU_ADD;
 
         if (!instr[14]) begin
           // offset from immediate

ParseResult:
UPD HdlStmProcess@@ to 
    INS HdlStmProcessTriggerConstrain@@COMB to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: alu_op_a_mux_sel_o
                HdlValueId: OP_A_IMM
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: alu_op_b_mux_sel_o
                HdlValueId: OP_B_IMM

UPD HdlStmCase@@opcode to opcode
    INS HdlStmCaseType@@CASE to opcode
    INS HdlValueId@@opcode to opcode
    INS HdlStmCaseUniqConstrain@@UNIQUE to opcode
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: alu_op_a_mux_sel_o
                HdlValueId: OP_A_REG_A
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: alu_op_b_mux_sel_o
                HdlValueId: OP_B_REG_B
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: alu_op_a_mux_sel_o
                HdlValueId: OP_A_REG_A
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: alu_op_a_mux_sel_o
                HdlValueId: OP_A_REG_A

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: alu_op_a_mux_sel_o
                HdlValueId: OP_A_REG_A
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: alu_op_b_mux_sel_o
                HdlValueId: OP_B_REG_B
    DEL HdlStmProcessTriggerConstrain@@COMB from 

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: alu_op_a_mux_sel_o
                HdlValueId: OP_A_REG_A
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: alu_op_b_mux_sel_o
                HdlValueId: OP_B_REG_B

UPD HdlStmCase@@opcode to opcode
    DEL HdlStmCaseType@@CASE from opcode
    DEL HdlValueId@@opcode from opcode
    DEL HdlStmCaseUniqConstrain@@UNIQUE from opcode


CommitId: 5093e0a0d25a6342ee67238fdd561c6f1097ee97
Explicitly set `alu_op_x_mux_sel` in decoder
--- a/rtl/ibex_decoder.sv
+++ b/rtl/ibex_decoder.sv
@@ -302,6 +307,7 @@ module ibex_decoder #(
       end
 
       OPCODE_LOAD: begin
+        alu_op_a_mux_sel_o  = OP_A_REG_A;
         data_req_o          = 1'b1;
         regfile_wdata_sel_o = RF_WD_LSU;
         regfile_we          = 1'b1;

ParseResult:
UPD HdlStmProcess@@ to 
    INS HdlStmProcessTriggerConstrain@@COMB to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: alu_op_a_mux_sel_o
                HdlValueId: OP_A_IMM
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: alu_op_b_mux_sel_o
                HdlValueId: OP_B_IMM

UPD HdlStmCase@@opcode to opcode
    INS HdlStmCaseType@@CASE to opcode
    INS HdlValueId@@opcode to opcode
    INS HdlStmCaseUniqConstrain@@UNIQUE to opcode
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: alu_op_a_mux_sel_o
                HdlValueId: OP_A_REG_A
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: alu_op_b_mux_sel_o
                HdlValueId: OP_B_REG_B
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: alu_op_a_mux_sel_o
                HdlValueId: OP_A_REG_A
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: alu_op_a_mux_sel_o
                HdlValueId: OP_A_REG_A

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: alu_op_a_mux_sel_o
                HdlValueId: OP_A_REG_A
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: alu_op_b_mux_sel_o
                HdlValueId: OP_B_REG_B
    DEL HdlStmProcessTriggerConstrain@@COMB from 

UPD HdlStmCase@@opcode to opcode
    DEL HdlStmCaseType@@CASE from opcode
    DEL HdlValueId@@opcode from opcode
    DEL HdlStmCaseUniqConstrain@@UNIQUE from opcode


CommitId: 5093e0a0d25a6342ee67238fdd561c6f1097ee97
Explicitly set `alu_op_x_mux_sel` in decoder
--- a/rtl/ibex_decoder.sv
+++ b/rtl/ibex_decoder.sv
@@ -372,6 +378,7 @@ module ibex_decoder #(
       end
 
       OPCODE_OPIMM: begin // Register-Immediate ALU Operations
+        alu_op_a_mux_sel_o  = OP_A_REG_A;
         alu_op_b_mux_sel_o  = OP_B_IMM;
         imm_b_mux_sel_o     = IMM_B_I;
         regfile_we          = 1'b1;

ParseResult:
UPD HdlStmProcess@@ to 
    INS HdlStmProcessTriggerConstrain@@COMB to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: alu_op_a_mux_sel_o
                HdlValueId: OP_A_IMM
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: alu_op_b_mux_sel_o
                HdlValueId: OP_B_IMM

UPD HdlStmCase@@opcode to opcode
    INS HdlStmCaseType@@CASE to opcode
    INS HdlValueId@@opcode to opcode
    INS HdlStmCaseUniqConstrain@@UNIQUE to opcode
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: alu_op_a_mux_sel_o
                HdlValueId: OP_A_REG_A
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: alu_op_b_mux_sel_o
                HdlValueId: OP_B_REG_B
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: alu_op_a_mux_sel_o
                HdlValueId: OP_A_REG_A
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: alu_op_a_mux_sel_o
                HdlValueId: OP_A_REG_A

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: alu_op_a_mux_sel_o
                HdlValueId: OP_A_REG_A
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: alu_op_b_mux_sel_o
                HdlValueId: OP_B_REG_B
    DEL HdlStmProcessTriggerConstrain@@COMB from 

UPD HdlStmCase@@opcode to opcode
    DEL HdlStmCaseType@@CASE from opcode
    DEL HdlValueId@@opcode from opcode
    DEL HdlStmCaseUniqConstrain@@UNIQUE from opcode


CommitId: 5093e0a0d25a6342ee67238fdd561c6f1097ee97
Explicitly set `alu_op_x_mux_sel` in decoder
--- a/rtl/ibex_decoder.sv
+++ b/rtl/ibex_decoder.sv
@@ -408,7 +415,9 @@ module ibex_decoder #(
       end
 
       OPCODE_OP: begin  // Register-Register ALU operation
-        regfile_we   = 1'b1;
+        alu_op_a_mux_sel_o = OP_A_REG_A;
+        alu_op_b_mux_sel_o = OP_B_REG_B;
+        regfile_we         = 1'b1;
 
         if (instr[31]) begin
           illegal_insn = 1'b1;

ParseResult:
UPD HdlStmProcess@@ to 
    INS HdlStmProcessTriggerConstrain@@COMB to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: alu_op_a_mux_sel_o
                HdlValueId: OP_A_IMM
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: alu_op_b_mux_sel_o
                HdlValueId: OP_B_IMM

UPD HdlStmCase@@opcode to opcode
    INS HdlStmCaseType@@CASE to opcode
    INS HdlValueId@@opcode to opcode
    INS HdlStmCaseUniqConstrain@@UNIQUE to opcode
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: alu_op_a_mux_sel_o
                HdlValueId: OP_A_REG_A
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: alu_op_b_mux_sel_o
                HdlValueId: OP_B_REG_B
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: alu_op_a_mux_sel_o
                HdlValueId: OP_A_REG_A
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: alu_op_a_mux_sel_o
                HdlValueId: OP_A_REG_A

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: alu_op_a_mux_sel_o
                HdlValueId: OP_A_REG_A
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: alu_op_b_mux_sel_o
                HdlValueId: OP_B_REG_B
    DEL HdlStmProcessTriggerConstrain@@COMB from 

UPD HdlStmCase@@opcode to opcode
    DEL HdlStmCaseType@@CASE from opcode
    DEL HdlValueId@@opcode from opcode
    DEL HdlStmCaseUniqConstrain@@UNIQUE from opcode


CommitId: 5093e0a0d25a6342ee67238fdd561c6f1097ee97
Explicitly set `alu_op_x_mux_sel` in decoder
--- a/rtl/ibex_decoder.sv
+++ b/rtl/ibex_decoder.sv
@@ -503,6 +512,7 @@ module ibex_decoder #(
         // an illegal instruction.
         if (instr[14:12] == 3'b000) begin
           alu_operator_o     = ALU_ADD; // nop
+          alu_op_a_mux_sel_o = OP_A_REG_A;
           alu_op_b_mux_sel_o = OP_B_IMM;
           regfile_we         = 1'b0;
         end else begin

ParseResult:
UPD HdlStmProcess@@ to 
    INS HdlStmProcessTriggerConstrain@@COMB to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: alu_op_a_mux_sel_o
                HdlValueId: OP_A_IMM
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: alu_op_b_mux_sel_o
                HdlValueId: OP_B_IMM

UPD HdlStmCase@@opcode to opcode
    INS HdlStmCaseType@@CASE to opcode
    INS HdlValueId@@opcode to opcode
    INS HdlStmCaseUniqConstrain@@UNIQUE to opcode
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: alu_op_a_mux_sel_o
                HdlValueId: OP_A_REG_A
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: alu_op_b_mux_sel_o
                HdlValueId: OP_B_REG_B
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: alu_op_a_mux_sel_o
                HdlValueId: OP_A_REG_A
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: alu_op_a_mux_sel_o
                HdlValueId: OP_A_REG_A

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: alu_op_a_mux_sel_o
                HdlValueId: OP_A_REG_A
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: alu_op_b_mux_sel_o
                HdlValueId: OP_B_REG_B
    DEL HdlStmProcessTriggerConstrain@@COMB from 

UPD HdlStmCase@@opcode to opcode
    DEL HdlStmCaseType@@CASE from opcode
    DEL HdlValueId@@opcode from opcode
    DEL HdlStmCaseUniqConstrain@@UNIQUE from opcode


CommitId: 5093e0a0d25a6342ee67238fdd561c6f1097ee97
Explicitly set `alu_op_x_mux_sel` in decoder
--- a/rtl/ibex_decoder.sv
+++ b/rtl/ibex_decoder.sv
@@ -513,6 +523,7 @@ module ibex_decoder #(
       OPCODE_SYSTEM: begin
         if (instr[14:12] == 3'b000) begin
           // non CSR related SYSTEM instructions
+          alu_op_a_mux_sel_o = OP_A_REG_A;
           alu_op_b_mux_sel_o = OP_B_IMM;
           unique case (instr[31:20])
             12'h000:  // ECALL
ParseResult:
UPD HdlStmProcess@@ to 
    INS HdlStmProcessTriggerConstrain@@COMB to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: alu_op_a_mux_sel_o
                HdlValueId: OP_A_IMM
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: alu_op_b_mux_sel_o
                HdlValueId: OP_B_IMM

UPD HdlStmCase@@opcode to opcode
    INS HdlStmCaseType@@CASE to opcode
    INS HdlValueId@@opcode to opcode
    INS HdlStmCaseUniqConstrain@@UNIQUE to opcode
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: alu_op_a_mux_sel_o
                HdlValueId: OP_A_REG_A
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: alu_op_b_mux_sel_o
                HdlValueId: OP_B_REG_B
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: alu_op_a_mux_sel_o
                HdlValueId: OP_A_REG_A
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: alu_op_a_mux_sel_o
                HdlValueId: OP_A_REG_A

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: alu_op_a_mux_sel_o
                HdlValueId: OP_A_REG_A
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: alu_op_b_mux_sel_o
                HdlValueId: OP_B_REG_B
    DEL HdlStmProcessTriggerConstrain@@COMB from 

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: alu_op_a_mux_sel_o
                HdlValueId: OP_A_REG_A

UPD HdlStmCase@@opcode to opcode
    DEL HdlStmCaseType@@CASE from opcode
    DEL HdlValueId@@opcode from opcode
    DEL HdlStmCaseUniqConstrain@@UNIQUE from opcode


CommitId: d8e4852f769c197330199a7356694baaef1b1a82
Include rs1 and rd in trace of c.addi16sp
--- a/rtl/ibex_tracer.sv
+++ b/rtl/ibex_tracer.sv
@@ -488,6 +488,7 @@ module ibex_tracer (
   function void decode_ci_caddi16sp_insn(input string mnemonic);
     logic [9:0] nzimm;
     nzimm = {rvfi_insn[12], rvfi_insn[4:3], rvfi_insn[5], rvfi_insn[2], rvfi_insn[6], 4'b0};
+    data_accessed = RS1 | RD;
     decoded_str = $sformatf("%s\tx%0d,%0d", mnemonic, rvfi_rd_addr, $signed(nzimm));
   endfunction
 
ParseResult:
UPD HdlFunctionDef@@decode_ci_caddi16sp_insn to decode_ci_caddi16sp_insn
    INS HdlOp@@ASSIGN to body
    HdlOp: ASSIGN
        list: ops
            HdlValueId: data_accessed
            HdlOp: OR
                list: ops
                    HdlValueId: RS1
                    HdlValueId: RD


CommitId: 9b51b1143ad268f670228e435a2c61bdd8e4490f
CSR: Access checks on Debug CSRs
--- a/rtl/ibex_id_stage.sv
+++ b/rtl/ibex_id_stage.sv
@@ -100,6 +100,7 @@ module ibex_id_stage #(
     input  logic                  lsu_store_err_i,
 
     // Debug Signal
+    output logic                  debug_mode_o,
     output ibex_pkg::dbg_cause_e  debug_cause_o,
     output logic                  debug_csr_save_o,
     input  logic                  debug_req_i,

ParseResult:
INS HdlIdDef@@debug_mode_o to ports
HdlIdDef: debug_mode_o
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: OUT


CommitId: c26d89d15ed31f78f434bd3a882c88cc7a72acdf
Fix linting errors due to `default` in fully-specified case statements
--- a/rtl/ibex_id_stage.sv
+++ b/rtl/ibex_id_stage.sv
@@ -228,8 +228,6 @@ module ibex_id_stage #(
 
   logic [31:0] operand_a_fw_id;
 
-  logic [31:0] operand_b;
-
   logic [31:0] alu_operand_a;
   logic [31:0] alu_operand_b;
 

ParseResult:
DEL HdlIdDef@@operand_b from objs
HdlIdDef: operand_b
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 31
                    HdlValueInt: 0
    HdlDirection: INTERNAL


CommitId: c26d89d15ed31f78f434bd3a882c88cc7a72acdf
Fix linting errors due to `default` in fully-specified case statements
--- a/rtl/ibex_id_stage.sv
+++ b/rtl/ibex_id_stage.sv
@@ -285,14 +282,8 @@ module ibex_id_stage #(
   assign imm_a = (imm_a_mux_sel == IMM_A_Z) ? zimm_rs1_type : '0;
 
   // Operand a forwarding mux used with LSU instructions
-  always_comb begin : operand_a_fw_mux
-    case (operand_a_fw_mux_sel)
-      SEL_MISALIGNED:    operand_a_fw_id = misaligned_addr_i;
-      SEL_REGFILE:       operand_a_fw_id = regfile_data_ra_id;
-      default:           operand_a_fw_id = regfile_data_ra_id;
-    endcase // case (operand_a_fw_mux_sel)
-  end
-
+  assign operand_a_fw_id
+      = (operand_a_fw_mux_sel == SEL_MISALIGNED) ? misaligned_addr_i : regfile_data_ra_id;
 
   ///////////////
   // Operand B //

ParseResult:
INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: TERNARY
        list: ops
            HdlOp: EQ
                list: ops
                    HdlValueId: operand_a_fw_mux_sel
                    HdlValueId: SEL_MISALIGNED
            HdlValueId: misaligned_addr_i
            HdlValueId: regfile_data_ra_id
    HdlValueId: operand_a_fw_id

DEL HdlStmProcess@@ from objs
HdlStmProcess
    HdlStmBlock: SEQ
        list: body
            HdlStmCase: operand_a_fw_mux_sel
                HdlStmCaseType: CASE
                HdlValueId: operand_a_fw_mux_sel
                list: cases
                    tuple
                        HdlValueId: SEL_MISALIGNED
                        HdlOp: ASSIGN
                            list: ops
                                HdlValueId: operand_a_fw_id
                                HdlValueId: misaligned_addr_i
                    tuple
                        HdlValueId: SEL_REGFILE
                        HdlOp: ASSIGN
                            list: ops
                                HdlValueId: operand_a_fw_id
                                HdlValueId: regfile_data_ra_id
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: operand_a_fw_id
                        HdlValueId: regfile_data_ra_id
    HdlStmProcessTriggerConstrain: COMB


CommitId: c26d89d15ed31f78f434bd3a882c88cc7a72acdf
Fix linting errors due to `default` in fully-specified case statements
--- a/rtl/ibex_id_stage.sv
+++ b/rtl/ibex_id_stage.sv
@@ -312,15 +303,7 @@ module ibex_id_stage #(
   end
 
   // ALU_Op_b Mux
-  always_comb begin : alu_operand_b_mux
-    case (alu_op_b_mux_sel)
-      OP_B_REGB_OR_FWD:  operand_b = regfile_data_rb_id;
-      OP_B_IMM:          operand_b = imm_b;
-      default:           operand_b = regfile_data_rb_id;
-    endcase // case (alu_op_b_mux_sel)
-  end
-
-  assign alu_operand_b   = operand_b;
+  assign alu_operand_b = (alu_op_b_mux_sel == OP_B_IMM) ? imm_b : regfile_data_rb_id;
 
   ///////////////
   // Registers //

ParseResult:
INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: TERNARY
        list: ops
            HdlOp: EQ
                list: ops
                    HdlValueId: alu_op_b_mux_sel
                    HdlValueId: OP_B_IMM
            HdlValueId: imm_b
            HdlValueId: regfile_data_rb_id
    HdlValueId: alu_operand_b

DEL HdlStmProcess@@ from objs
HdlStmProcess
    HdlStmBlock: SEQ
        list: body
            HdlStmCase: alu_op_b_mux_sel
                HdlStmCaseType: CASE
                HdlValueId: alu_op_b_mux_sel
                list: cases
                    tuple
                        HdlValueId: OP_B_REGB_OR_FWD
                        HdlOp: ASSIGN
                            list: ops
                                HdlValueId: operand_b
                                HdlValueId: regfile_data_rb_id
                    tuple
                        HdlValueId: OP_B_IMM
                        HdlOp: ASSIGN
                            list: ops
                                HdlValueId: operand_b
                                HdlValueId: imm_b
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: operand_b
                        HdlValueId: regfile_data_rb_id
    HdlStmProcessTriggerConstrain: COMB

DEL HdlStmAssign@@ from objs
HdlStmAssign
    HdlValueId: operand_b
    HdlValueId: alu_operand_b


CommitId: d19189ba439f59a30a4e07ce04775ac393a32dd3
[rtl] data-independent execution for multdiv_slow
--- a/rtl/ibex_ex_block.sv
+++ b/rtl/ibex_ex_block.sv
@@ -38,6 +38,7 @@ module ibex_ex_block #(
     input  logic [31:0]           multdiv_operand_a_i,
     input  logic [31:0]           multdiv_operand_b_i,
     input  logic                  multdiv_ready_id_i,
+    input  logic                  data_ind_timing_i,
 
     // intermediate val reg
     output logic                  imd_val_we_o,

ParseResult:
INS HdlIdDef@@data_ind_timing_i to ports
HdlIdDef: data_ind_timing_i
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: IN


CommitId: 006617f95a3303b6f9bc3c73fba09fca1db3a93b
Fix SRAM initialisation for fpga/artya example
--- a/examples/fpga/artya7/rtl/top_artya7.sv
+++ b/examples/fpga/artya7/rtl/top_artya7.sv
@@ -8,9 +8,10 @@ module top_artya7 (
     output [3:0]        LED
 );
 
-  parameter int          MEM_SIZE  = 64 * 1024; // 64 kB
-  parameter logic [31:0] MEM_START = 32'h00000000;
-  parameter logic [31:0] MEM_MASK  = MEM_SIZE-1;
+  parameter int          MEM_SIZE     = 64 * 1024; // 64 kB
+  parameter logic [31:0] MEM_START    = 32'h00000000;
+  parameter logic [31:0] MEM_MASK     = MEM_SIZE-1;
+  parameter              SRAMInitFile = "";
 
   logic clk_sys, rst_sys_n;
 

ParseResult:
INS HdlIdDef@@SRAMInitFile to params
HdlIdDef: SRAMInitFile
    HdlDirection: INTERNAL


CommitId: 0243e081119ad971a045097f0b74b552d5d1fab4
[rtl] Switch to M mode on debug entry
--- a/rtl/ibex_id_stage.sv
+++ b/rtl/ibex_id_stage.sv
@@ -73,6 +73,7 @@ module ibex_id_stage #(
     output logic                  csr_save_if_o,
     output logic                  csr_save_id_o,
     output logic                  csr_restore_mret_id_o,
+    output logic                  csr_restore_dret_id_o,
     output logic                  csr_save_cause_o,
     output logic [31:0]           csr_mtval_o,
     input  ibex_pkg::priv_lvl_e   priv_mode_i,

ParseResult:
INS HdlIdDef@@csr_restore_dret_id_o to ports
HdlIdDef: csr_restore_dret_id_o
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: OUT


CommitId: c7cb958f0d6f143d835e33d7efe27336cc7737c1
Update lowrisc_ip to lowRISC/opentitan@ca950b43a
--- a/vendor/lowrisc_ip/ip/prim_generic/rtl/prim_generic_flop_2sync.sv
+++ b/vendor/lowrisc_ip/ip/prim_generic/rtl/prim_generic_flop_2sync.sv
@@ -7,11 +7,10 @@
 // for synchronization
 
 module prim_generic_flop_2sync #(
-  parameter int Width       = 16,
-  localparam int WidthSubOne = Width-1, // temp work around #2679
-  parameter logic [WidthSubOne:0] ResetValue = '0
+  parameter int               Width      = 16,
+  parameter logic [Width-1:0] ResetValue = '0
 ) (
-  input                    clk_i,       // receive clock
+  input                    clk_i,
   input                    rst_ni,
   input        [Width-1:0] d_i,
   output logic [Width-1:0] q_o

ParseResult:
UPD HdlIdDef@@WidthSubOne to WidthSubOne
    MOV HdlOp@@SUB to WidthSubOne
    HdlOp: SUB
        list: ops
            HdlValueId: Width
            HdlValueInt: 1
    DEL HdlValueId@@int from WidthSubOne
    DEL HdlDirection@@INTERNAL from WidthSubOne

DEL HdlIdDef@@WidthSubOne from params

UPD HdlIdDef@@ResetValue to ResetValue
    UPD HdlOp@@INDEX to INDEX
        UPD HdlOp@@DOWNTO to DOWNTO
            DEL HdlValueId@@WidthSubOne from ops


CommitId: cead186836a9713a34e5581b3d30d8bf35b5f9a2
Add Synopsys VCS Support for Ibex Simple System
--- a/shared/rtl/sim/simulator_ctrl.sv
+++ b/shared/rtl/sim/simulator_ctrl.sv
@@ -36,7 +36,7 @@ module simulator_ctrl #(
   localparam SIM_CTRL_ADDR = 1;
 
   logic [7:0] ctrl_addr;
-  logic [2:0] sim_finish;
+  logic [2:0] sim_finish = 3'b000;
 
   integer log_fd;
 

ParseResult:
UPD HdlIdDef@@sim_finish to sim_finish
    INS HdlValueInt@@000 to sim_finish


CommitId: cead186836a9713a34e5581b3d30d8bf35b5f9a2
Add Synopsys VCS Support for Ibex Simple System
--- a/shared/rtl/sim/simulator_ctrl.sv
+++ b/shared/rtl/sim/simulator_ctrl.sv
@@ -78,9 +78,7 @@ module simulator_ctrl #(
         endcase
       end
     end
-  end
 
-  always_ff @(posedge clk_i or negedge rst_ni) begin
     if (sim_finish != 'b0) begin
       sim_finish <= sim_finish + 1;
     end

ParseResult:
MOV HdlStmIf@@ to body
HdlStmIf
    HdlOp: NE
        list: ops
            HdlValueId: sim_finish
            HdlValueInt: 0
    HdlStmBlock: SEQ
        list: body
            HdlStmAssign
                HdlOp: ADD
                    list: ops
                        HdlValueId: sim_finish
                        HdlValueInt: 1
                HdlValueId: sim_finish
    list: elifs

UPD HdlStmProcess@@ to 
    DEL list@@sensitivity from 
    list: sensitivity
        HdlOp: RISING
            list: ops
                HdlValueId: clk_i
        HdlOp: FALLING
            list: ops
                HdlValueId: rst_ni
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL HdlStmProcessTriggerConstrain@@FF from 

DEL HdlStmProcess@@ from objs


CommitId: cead186836a9713a34e5581b3d30d8bf35b5f9a2
Add Synopsys VCS Support for Ibex Simple System
--- a/shared/rtl/sim/simulator_ctrl.sv
+++ b/shared/rtl/sim/simulator_ctrl.sv
@@ -88,6 +86,7 @@ module simulator_ctrl #(
       $finish;
     end
   end
+
   assign rdata_o = '0;
 endmodule
 
ParseResult:
MOV HdlStmIf@@ to body
HdlStmIf
    HdlOp: GE
        list: ops
            HdlValueId: sim_finish
            HdlValueInt: 010
    HdlStmBlock: SEQ
        list: body
            HdlOp: CALL
                list: ops
                    HdlValueId: $finish
    list: elifs

UPD HdlStmProcess@@ to 
    DEL list@@sensitivity from 
    list: sensitivity
        HdlOp: RISING
            list: ops
                HdlValueId: clk_i
        HdlOp: FALLING
            list: ops
                HdlValueId: rst_ni
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL HdlStmProcessTriggerConstrain@@FF from 

DEL HdlStmProcess@@ from objs


CommitId: 35a5a737a73af8627dea77a828335f70790d7458
Do not set PC when setting exceptions registers in single stepping
--- a/rtl/ibex_controller.sv
+++ b/rtl/ibex_controller.sv
@@ -497,6 +497,7 @@ module ibex_controller (
         // single stepping
         // set exception registers, but do not jump into handler (debug-spec p.44).
         if (debug_single_step_i && !debug_mode_q) begin
+          pc_set_o    = 1'b0;
           ctrl_fsm_ns = DBG_TAKEN_IF;
         end
       end // FLUSH
ParseResult:
UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: pc_set_o
                HdlValueInt: 0


CommitId: b1daf9e44efdf8fc382493b63065c5816fdb7938
Update lowrisc_ip to lowRISC/opentitan@c277e3a8
--- a/vendor/lowrisc_ip/ip/prim/rtl/prim_subst_perm.sv
+++ b/vendor/lowrisc_ip/ip/prim/rtl/prim_subst_perm.sv
@@ -36,6 +36,7 @@ module prim_subst_perm #(
       always_comb begin : p_dec
         data_state_sbox = data_state[r] ^ key_i;
         // Reverse odd/even grouping
+        data_state_flipped = data_state_sbox;
         for (int k = 0; k < DataWidth/2; k++) begin
           data_state_flipped[k * 2]     = data_state_sbox[k];
           data_state_flipped[k * 2 + 1] = data_state_sbox[k + DataWidth/2];

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: data_state_flipped
                HdlValueId: data_state_sbox


CommitId: b1daf9e44efdf8fc382493b63065c5816fdb7938
Update lowrisc_ip to lowRISC/opentitan@c277e3a8
--- a/vendor/lowrisc_ip/ip/prim/rtl/prim_subst_perm.sv
+++ b/vendor/lowrisc_ip/ip/prim/rtl/prim_subst_perm.sv
@@ -53,7 +54,7 @@ module prim_subst_perm #(
     ////////////////////////////////
     // encryption pass
     end else begin : gen_enc
-      always_comb begin : p_dec
+      always_comb begin : p_enc
         data_state_sbox = data_state[r] ^ key_i;
         // This SBox layer is aligned to nibbles, so the uppermost bits may not be affected by this.
         // However, the permutation below ensures that these bits get shuffled to a different

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: data_state_flipped
                HdlValueId: data_state_sbox

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: data_state_sbox
                HdlValueId: data_state_flipped


CommitId: b1daf9e44efdf8fc382493b63065c5816fdb7938
Update lowrisc_ip to lowRISC/opentitan@c277e3a8
--- a/vendor/lowrisc_ip/ip/prim/rtl/prim_subst_perm.sv
+++ b/vendor/lowrisc_ip/ip/prim/rtl/prim_subst_perm.sv
@@ -68,6 +69,7 @@ module prim_subst_perm #(
         // Regroup bits such that all even indices are stacked up first, followed by all odd
         // indices. Note that if the Width is odd, this is still ok, since
         // the uppermost bit just stays in place in that case.
+        data_state_sbox = data_state_flipped;
         for (int k = 0; k < DataWidth/2; k++) begin
           data_state_sbox[k]               = data_state_flipped[k * 2];
           data_state_sbox[k + DataWidth/2] = data_state_flipped[k * 2 + 1];
ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: data_state_sbox
                HdlValueId: data_state_flipped


CommitId: ab4c8699fbc854220749c49c67fa0b860a69711d
Simplify default assignments to enum types
--- a/rtl/ibex_controller.sv
+++ b/rtl/ibex_controller.sv
@@ -163,10 +163,10 @@ module ibex_controller (
 
     csr_save_cause_o       = 1'b0;
 
-    exc_cause_o            = exc_cause_e'({$bits(exc_cause_e){1'b0}});
+    exc_cause_o            = EXC_CAUSE_INSN_ADDR_MISA; // = 6'h00
     exc_pc_mux_o           = EXC_PC_IRQ;
 
-    csr_cause_o            = exc_cause_e'({$bits(exc_cause_e){1'b0}});
+    csr_cause_o            = EXC_CAUSE_INSN_ADDR_MISA; // = 6'h00
 
     pc_mux_o               = PC_BOOT;
     pc_set_o               = 1'b0;

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@CALL to CALL
                UPD HdlValueId@@exc_cause_e to EXC_CAUSE_INSN_ADDR_MISA
                MOV HdlValueId@@exc_cause_e to ops
                HdlValueId: exc_cause_e
                DEL HdlOp@@REPL_CONCAT from ops
                HdlOp: REPL_CONCAT
                    list: ops
                        HdlOp: CALL
                            list: ops
                                HdlValueId: $bits
                                HdlValueId: exc_cause_e
                        HdlValueInt: 0
                DEL list@@ops from CALL
            DEL HdlOp@@CALL from ops
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@CALL to CALL
                UPD HdlValueId@@exc_cause_e to EXC_CAUSE_INSN_ADDR_MISA
                MOV HdlValueId@@exc_cause_e to ops
                HdlValueId: exc_cause_e
                DEL HdlOp@@REPL_CONCAT from ops
                HdlOp: REPL_CONCAT
                    list: ops
                        HdlOp: CALL
                            list: ops
                                HdlValueId: $bits
                                HdlValueId: exc_cause_e
                        HdlValueInt: 0
                DEL list@@ops from CALL
            DEL HdlOp@@CALL from ops


CommitId: ab4c8699fbc854220749c49c67fa0b860a69711d
Simplify default assignments to enum types
--- a/rtl/ibex_controller.sv
+++ b/rtl/ibex_controller.sv
@@ -513,7 +513,7 @@ module ibex_controller (
 
       default: begin
         instr_req_o = 1'b0;
-        ctrl_fsm_ns = ctrl_fsm_e'({$bits(ctrl_fsm_e){1'bX}});
+        ctrl_fsm_ns = ctrl_fsm_e'(1'bX);
       end
     endcase
   end
ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@CALL to CALL
                UPD HdlValueId@@exc_cause_e to EXC_CAUSE_INSN_ADDR_MISA
                MOV HdlValueId@@exc_cause_e to ops
                HdlValueId: exc_cause_e
                DEL HdlOp@@REPL_CONCAT from ops
                HdlOp: REPL_CONCAT
                    list: ops
                        HdlOp: CALL
                            list: ops
                                HdlValueId: $bits
                                HdlValueId: exc_cause_e
                        HdlValueInt: 0
                DEL list@@ops from CALL
            DEL HdlOp@@CALL from ops
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@CALL to CALL
                UPD HdlValueId@@exc_cause_e to EXC_CAUSE_INSN_ADDR_MISA
                MOV HdlValueId@@exc_cause_e to ops
                HdlValueId: exc_cause_e
                DEL HdlOp@@REPL_CONCAT from ops
                HdlOp: REPL_CONCAT
                    list: ops
                        HdlOp: CALL
                            list: ops
                                HdlValueId: $bits
                                HdlValueId: exc_cause_e
                        HdlValueInt: 0
                DEL list@@ops from CALL
            DEL HdlOp@@CALL from ops

UPD HdlStmCase@@ctrl_fsm_cs to ctrl_fsm_cs
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@CALL to CALL
                UPD HdlOp@@REPL_CONCAT to REPL_CONCAT
                    MOV list@@ops to REPL_CONCAT
                    list: ops
                        HdlOp: CALL
                            list: ops
                                HdlValueId: $bits
                                HdlValueId: ctrl_fsm_e
                        HdlValueInt: x
                    UPD HdlOp@@CALL to CALL
                        MOV HdlValueId@@ctrl_fsm_e to ops
                        HdlValueId: ctrl_fsm_e
                        DEL HdlValueId@@$bits from ops
                        DEL list@@ops from CALL
                    DEL HdlOp@@CALL from ops
                DEL HdlValueId@@ctrl_fsm_e from ops
                DEL HdlOp@@REPL_CONCAT from ops
                DEL list@@ops from CALL


CommitId: cead186836a9713a34e5581b3d30d8bf35b5f9a2
Add Synopsys VCS Support for Ibex Simple System
--- a/examples/simple_system/rtl/ibex_simple_system.sv
+++ b/examples/simple_system/rtl/ibex_simple_system.sv
@@ -21,10 +21,7 @@ module ibex_simple_system (
   parameter bit RV32E = 0;
   parameter bit RV32M = 1;
 
-  logic clk_sys, rst_sys_n;
-
-  assign clk_sys = IO_CLK;
-  assign rst_sys_n = IO_RST_N;
+  logic clk_sys = 1'b0, rst_sys_n;
 
   typedef enum {
     CoreD,

ParseResult:
UPD HdlModuleDef@@ibex_simple_system to ibex_simple_system
    INS HdlStmBlock@@SEQ to objs
    HdlStmBlock: SEQ
        list: body
            HdlStmProcess
                HdlStmBlock: SEQ
                    list: body
                        HdlStmWait:
                            list: val
                                HdlValueInt: 1
                        HdlOp: ASSIGN
                            list: ops
                                HdlValueId: clk_sys
                                HdlValueInt: 0
            HdlStmProcess
                HdlStmBlock: SEQ
                    list: body
                        HdlStmWait:
                            list: val
                                HdlValueInt: 1
                        HdlOp: ASSIGN
                            list: ops
                                HdlValueId: clk_sys
                                HdlValueInt: 1

UPD HdlIdDef@@clk_sys to clk_sys
    INS HdlValueInt@@0 to clk_sys

DEL HdlStmAssign@@ from objs
HdlStmAssign
    HdlValueId: IO_CLK
    HdlValueId: clk_sys

DEL HdlStmAssign@@ from objs
HdlStmAssign
    HdlValueId: IO_RST_N
    HdlValueId: rst_sys_n


CommitId: cead186836a9713a34e5581b3d30d8bf35b5f9a2
Add Synopsys VCS Support for Ibex Simple System
--- a/examples/simple_system/rtl/ibex_simple_system.sv
+++ b/examples/simple_system/rtl/ibex_simple_system.sv
@@ -69,6 +66,22 @@ module ibex_simple_system (
   assign cfg_device_addr_mask[SimCtrl] = ~32'h3FF; // 1 kB
 
 
+  `ifdef VERILATOR
+    assign clk_sys = IO_CLK;
+    assign rst_sys_n = IO_RST_N;
+  `else
+    initial begin
+      rst_sys_n = 1'b0;
+      device_err = '{default:1'b0};
+      #8
+      rst_sys_n = 1'b1;
+    end
+    always begin
+      #1 clk_sys = 1'b0;
+      #1 clk_sys = 1'b1;
+    end
+  `endif
+
   bus #(
     .NrDevices   (NrDevices),
     .NrHosts     (NrHosts  ),
ParseResult:
INS HdlStmProcess@@ to objs
HdlStmProcess
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: rst_sys_n
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: device_err
                    list
                        HdlOp: MAP_ASSOCIATION
                            list: ops
                                HdlValueId: default
                                HdlValueInt: 0
            HdlStmProcess
                HdlStmBlock: SEQ
                    list: body
                        HdlStmWait:
                            list: val
                                HdlValueInt: 8
                        HdlOp: ASSIGN
                            list: ops
                                HdlValueId: rst_sys_n
                                HdlValueInt: 1
            HdlStmWait:
                list: val

UPD HdlModuleDef@@ibex_simple_system to ibex_simple_system
    INS HdlStmBlock@@SEQ to objs
    HdlStmBlock: SEQ
        list: body
            HdlStmProcess
                HdlStmBlock: SEQ
                    list: body
                        HdlStmWait:
                            list: val
                                HdlValueInt: 1
                        HdlOp: ASSIGN
                            list: ops
                                HdlValueId: clk_sys
                                HdlValueInt: 0
            HdlStmProcess
                HdlStmBlock: SEQ
                    list: body
                        HdlStmWait:
                            list: val
                                HdlValueInt: 1
                        HdlOp: ASSIGN
                            list: ops
                                HdlValueId: clk_sys
                                HdlValueInt: 1


CommitId: b1daf9e44efdf8fc382493b63065c5816fdb7938
Update lowrisc_ip to lowRISC/opentitan@c277e3a8
--- a/vendor/lowrisc_ip/ip/prim/rtl/prim_ram_1p_adv.sv
+++ b/vendor/lowrisc_ip/ip/prim/rtl/prim_ram_1p_adv.sv
@@ -66,6 +61,13 @@ module prim_ram_1p_adv #(
                              (Width <= 120) ? 8 : 8 ;
   localparam int TotalWidth = Width + ParWidth;
 
+  // If byte parity is enabled, the write enable bits are used to write memory colums
+  // with 8 + 1 = 9 bit width (data plus corresponding parity bit).
+  // If ECC is enabled, the DataBitsPerMask is ignored.
+  localparam int LocalDataBitsPerMask = (EnableParity) ? 9          :
+                                        (EnableECC)    ? TotalWidth :
+                                                         DataBitsPerMask;
+
   ////////////////////////////
   // RAM Primitive Instance //
   ////////////////////////////

ParseResult:
DEL HdlIdDef@@LocalDataBitsPerMask from objs
HdlIdDef: LocalDataBitsPerMask
    HdlValueId: int
    HdlOp: TERNARY
        list: ops
            HdlValueId: EnableParity
            HdlValueInt: 1
            HdlValueId: DataBitsPerMask
    HdlDirection: INTERNAL


CommitId: b1daf9e44efdf8fc382493b63065c5816fdb7938
Update lowrisc_ip to lowRISC/opentitan@c277e3a8
--- a/vendor/lowrisc_ip/ip/prim/rtl/prim_ram_1p_adv.sv
+++ b/vendor/lowrisc_ip/ip/prim/rtl/prim_ram_1p_adv.sv
@@ -75,7 +77,7 @@ module prim_ram_1p_adv #(
   logic [Aw-1:0]           addr_q,   addr_d ;
   logic [TotalWidth-1:0]   wdata_q,  wdata_d ;
   logic [TotalWidth-1:0]   wmask_q,  wmask_d ;
-  logic                    rvalid_q, rvalid_d, rvalid_sram ;
+  logic                    rvalid_q, rvalid_d, rvalid_sram_q ;
   logic [Width-1:0]        rdata_q,  rdata_d ;
   logic [TotalWidth-1:0]   rdata_sram ;
   logic [1:0]              rerror_q, rerror_d ;

ParseResult:
INS HdlIdDef@@LocalDataBitsPerMask to objs
HdlIdDef: LocalDataBitsPerMask
    HdlValueId: int
    HdlOp: TERNARY
        list: ops
            HdlValueId: EnableParity
            HdlValueInt: 9
            HdlOp: TERNARY
                list: ops
                    HdlValueId: EnableECC
                    HdlValueId: TotalWidth
                    HdlValueId: DataBitsPerMask
    HdlDirection: INTERNAL


CommitId: f46dbaefad676dbefc583890ed313a7bcc344750
Fix two issues when the core is not getting the grant immediatly after
--- a/prefetch_buffer.sv
+++ b/prefetch_buffer.sv
@@ -144,15 +144,20 @@ module riscv_fetch_fifo
   begin
     in_fetch_addr_o = {fifo_last_addr[31:2], 2'b00} + 32'd4;
 
-    if (in_wait_gnt_i)
+    if (in_wait_gnt_i) begin
       in_fetch_addr_o = {fifo_last_addr[31:2], 2'b00};
 
-    if (branch_i) begin
-      in_fetch_addr_o = addr_i;
+      if (hwlp_i & (~is_hwlp_Q[1]) & rdata_valid_Q[0])
+        in_fetch_addr_o = hwlp_target_i;
     end else begin
       if (hwlp_i & (~is_hwlp_Q[1]))
         in_fetch_addr_o = hwlp_target_i;
     end
+
+    // branches have priority since the fifo is cleared
+    if (branch_i)
+      in_fetch_addr_o = addr_i;
+
   end
 
   // accept hwloop input as long as our second entry is not already one and we

ParseResult:
INS HdlStmIf@@ to body

INS HdlStmIf@@ to body

UPD HdlStmIf@@ to 
    MOV HdlValueId@@in_wait_gnt_i to 
    HdlValueId: in_wait_gnt_i
    MOV HdlOp@@ASSIGN to 
    HdlOp: ASSIGN
        list: ops
            HdlValueId: in_fetch_addr_o
            HdlOp: CONCAT
                list: ops
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: fifo_last_addr
                            HdlOp: DOWNTO
                                list: ops
                                    HdlValueInt: 31
                                    HdlValueInt: 2
                    HdlValueInt: 00
    UPD list@@elifs to ops
    MOV list@@elifs to 
    list: elifs

UPD HdlStmIf@@ to 
    INS HdlStmBlock@@SEQ to 
    INS list@@elifs to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmIf@@ to 
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlStmIf
                HdlOp: AND
                    list: ops
                        HdlValueId: hwlp_i
                        HdlOp: NEG
                            list: ops
                                HdlOp: INDEX
                                    list: ops
                                        HdlValueId: is_hwlp_Q
                                        HdlValueInt: 1
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: in_fetch_addr_o
                        HdlValueId: hwlp_target_i
                list: elifs
    UPD HdlStmBlock@@SEQ to SEQ
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: in_fetch_addr_o
                HdlValueId: addr_i
        DEL list@@body from SEQ
    MOV list@@elifs to 
    list: elifs
    UPD HdlValueId@@branch_i to rdata_valid_Q
    MOV HdlValueId@@branch_i to 
    HdlValueId: branch_i
    DEL HdlStmBlock@@SEQ from 

INS HdlStmIf@@ to body

UPD HdlStmIf@@ to 
    INS HdlOp@@AND to 
    INS HdlOp@@ASSIGN to 
    HdlOp: ASSIGN
        list: ops
            HdlValueId: in_fetch_addr_o
            HdlValueId: hwlp_target_i
    UPD HdlOp@@AND to AND
        INS list@@ops to AND
        INS HdlOp@@AND to ops
        INS HdlOp@@INDEX to ops
        UPD HdlOp@@AND to AND
            INS list@@ops to AND
            INS HdlValueId@@hwlp_i to ops
            INS HdlOp@@NEG to ops
            UPD HdlOp@@NEG to NEG
                INS list@@ops to NEG
                INS HdlOp@@INDEX to ops
                UPD HdlOp@@INDEX to INDEX
                    INS HdlValueId@@is_hwlp_Q to ops
                    INS HdlValueInt@@1 to ops
        UPD HdlOp@@INDEX to INDEX
            INS list@@ops to INDEX
            INS HdlValueInt@@0 to ops

DEL HdlStmIf@@ from body

DEL HdlStmIf@@ from body


CommitId: f46dbaefad676dbefc583890ed313a7bcc344750
Fix two issues when the core is not getting the grant immediatly after
--- a/prefetch_buffer.sv
+++ b/prefetch_buffer.sv
@@ -430,7 +435,6 @@ module riscv_prefetch_buffer
         instr_req_o = 1'b1;
 
         if (branch_i) begin
-
           fifo_addr_valid = 1'b1;
         end
 

ParseResult:
UPD HdlStmCase@@CS to CS
    UPD HdlStmBlock@@SEQ to SEQ
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: instr_req_o
                HdlValueInt: 1


CommitId: f46dbaefad676dbefc583890ed313a7bcc344750
Fix two issues when the core is not getting the grant immediatly after
--- a/prefetch_buffer.sv
+++ b/prefetch_buffer.sv
@@ -445,9 +449,9 @@ module riscv_prefetch_buffer
 
         if ((req_i && fifo_addr_ready) || branch_i) begin
           // prepare for next request
-          instr_req_o = 1'b1;
 
           if (instr_rvalid_i) begin
+            instr_req_o      = 1'b1;
             fifo_rdata_valid = 1'b1;
             fifo_addr_valid  = 1'b1;
 

ParseResult:
UPD HdlStmCase@@CS to CS
    UPD HdlStmBlock@@SEQ to SEQ
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: instr_req_o
                HdlValueInt: 1

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: instr_req_o
                HdlValueInt: 1
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: instr_req_o
                HdlValueInt: 0


CommitId: f46dbaefad676dbefc583890ed313a7bcc344750
Fix two issues when the core is not getting the grant immediatly after
--- a/prefetch_buffer.sv
+++ b/prefetch_buffer.sv
@@ -462,12 +466,12 @@ module riscv_prefetch_buffer
             if (branch_i) begin
               fifo_addr_valid  = 1'b1;
               NS               = WAIT_ABORTED;
+            end else if (hwloop_i & valid_o) begin
+              NS               = WAIT_ABORTED;
             end
           end
         end else begin
           // just wait for rvalid and go back to IDLE, no new request
-          // requested
-          instr_req_o = 1'b0;
 
           if (instr_rvalid_i) begin
             fifo_rdata_valid = 1'b1;

ParseResult:
UPD HdlStmCase@@CS to CS
    UPD HdlStmBlock@@SEQ to SEQ
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: instr_req_o
                HdlValueInt: 1

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: instr_req_o
                HdlValueInt: 1
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: instr_req_o
                HdlValueInt: 0

UPD HdlStmIf@@ to 
    INS tuple@@ to elifs
    tuple
        HdlOp: AND
            list: ops
                HdlValueId: hwloop_i
                HdlValueId: valid_o
        HdlStmBlock: SEQ
            list: body
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: NS
                        HdlValueId: WAIT_ABORTED


CommitId: f46dbaefad676dbefc583890ed313a7bcc344750
Fix two issues when the core is not getting the grant immediatly after
--- a/prefetch_buffer.sv
+++ b/prefetch_buffer.sv
@@ -480,11 +484,10 @@ module riscv_prefetch_buffer
       // there was no new request sent yet
       // we assume that req_i is set to high
       WAIT_ABORTED: begin
-        // prepare for next request
-        instr_req_o  = 1'b1;
-        wait_gnt     = 1'b1;
+        wait_gnt = 1'b1;
 
         if (instr_rvalid_i) begin
+          instr_req_o  = 1'b1;
           // no need to send address, already done in WAIT_RVALID
 
           if (instr_gnt_i) begin
ParseResult:
UPD HdlStmCase@@CS to CS
    UPD HdlStmBlock@@SEQ to SEQ
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: instr_req_o
                HdlValueInt: 1


CommitId: 44b033cf8bf858e893080fe62b452791fdd3bd4d
[rtl] Add support for instruction fetch errors
--- a/rtl/ibex_core.sv
+++ b/rtl/ibex_core.sv
@@ -53,6 +53,7 @@ module ibex_core #(
     input  logic        instr_rvalid_i,
     output logic [31:0] instr_addr_o,
     input  logic [31:0] instr_rdata_i,
+    input  logic        instr_err_i,
 
     // Data memory interface
     output logic        data_req_o,

ParseResult:
INS HdlIdDef@@instr_err_i to ports
HdlIdDef: instr_err_i
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: IN


CommitId: c7cb958f0d6f143d835e33d7efe27336cc7737c1
Update lowrisc_ip to lowRISC/opentitan@ca950b43a
--- a/vendor/lowrisc_ip/ip/prim/rtl/prim_secded_39_32_enc.sv
+++ b/vendor/lowrisc_ip/ip/prim/rtl/prim_secded_39_32_enc.sv
@@ -2,23 +2,22 @@
 // Licensed under the Apache License, Version 2.0, see LICENSE for details.
 // SPDX-License-Identifier: Apache-2.0
 //
-// SECDED Encoder generated by
-// util/design/secded_gen.py -m 7 -k 32 -s 1592631616 -c hsiao
+// SECDED encoder generated by util/design/secded_gen.py
 
 module prim_secded_39_32_enc (
-  input        [31:0] in,
-  output logic [38:0] out
+  input        [31:0] data_i,
+  output logic [38:0] data_o
 );
 
   always_comb begin : p_encode
-    out = 39'(in);
-    out[32] = ^(out & 39'h00850E56A2);
-    out[33] = ^(out & 39'h002E534C61);
-    out[34] = ^(out & 39'h000901A9FE);
-    out[35] = ^(out & 39'h007079A702);
-    out[36] = ^(out & 39'h00CABA900D);
-    out[37] = ^(out & 39'h00D3C44B18);
-    out[38] = ^(out & 39'h0034A430D5);
+    data_o = 39'(data_i);
+    data_o[32] = ^(data_o & 39'h002606BD25);
+    data_o[33] = ^(data_o & 39'h00DEBA8050);
+    data_o[34] = ^(data_o & 39'h00413D89AA);
+    data_o[35] = ^(data_o & 39'h0031234ED1);
+    data_o[36] = ^(data_o & 39'h00C2C1323B);
+    data_o[37] = ^(data_o & 39'h002DCC624C);
+    data_o[38] = ^(data_o & 39'h0098505586);
   end
 
 endmodule : prim_secded_39_32_enc
ParseResult:
UPD HdlIdDef@@in to data_i

UPD HdlIdDef@@out to data_o

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@out to data_o
            UPD HdlOp@@CALL to CALL
                UPD HdlValueId@@in to data_i
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@INDEX to INDEX
                UPD HdlValueId@@out to data_o
            UPD HdlOp@@XOR_UNARY to XOR_UNARY
                UPD HdlOp@@AND to AND
                    UPD HdlValueId@@out to data_o
                    UPD HdlValueInt@@00850e56a2 to 002606bd25
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@INDEX to INDEX
                UPD HdlValueId@@out to data_o
            UPD HdlOp@@XOR_UNARY to XOR_UNARY
                UPD HdlOp@@AND to AND
                    UPD HdlValueId@@out to data_o
                    UPD HdlValueInt@@002e534c61 to 00deba8050
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@INDEX to INDEX
                UPD HdlValueId@@out to data_o
            UPD HdlOp@@XOR_UNARY to XOR_UNARY
                UPD HdlOp@@AND to AND
                    UPD HdlValueId@@out to data_o
                    UPD HdlValueInt@@000901a9fe to 00413d89aa
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@INDEX to INDEX
                UPD HdlValueId@@out to data_o
            UPD HdlOp@@XOR_UNARY to XOR_UNARY
                UPD HdlOp@@AND to AND
                    UPD HdlValueId@@out to data_o
                    UPD HdlValueInt@@007079a702 to 0031234ed1
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@INDEX to INDEX
                UPD HdlValueId@@out to data_o
            UPD HdlOp@@XOR_UNARY to XOR_UNARY
                UPD HdlOp@@AND to AND
                    UPD HdlValueId@@out to data_o
                    UPD HdlValueInt@@00caba900d to 00c2c1323b
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@INDEX to INDEX
                UPD HdlValueId@@out to data_o
            UPD HdlOp@@XOR_UNARY to XOR_UNARY
                UPD HdlOp@@AND to AND
                    UPD HdlValueId@@out to data_o
                    UPD HdlValueInt@@00d3c44b18 to 002dcc624c
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@INDEX to INDEX
                UPD HdlValueId@@out to data_o
            UPD HdlOp@@XOR_UNARY to XOR_UNARY
                UPD HdlOp@@AND to AND
                    UPD HdlValueId@@out to data_o
                    UPD HdlValueInt@@0034a430d5 to 0098505586


CommitId: f3b163af3534c0f8ac83b68e8cf702f42bcf0c87
[rtl] Add reset to lockstep delayed inputs
--- a/rtl/ibex_lockstep.sv
+++ b/rtl/ibex_lockstep.sv
@@ -170,15 +170,23 @@ module ibex_lockstep import ibex_pkg::*; #(
   assign shadow_inputs_in.debug_req      = debug_req_i;
 
   // Delay the inputs
-  always_ff @(posedge clk_i) begin
-    for (int unsigned i = 0; i < LockstepOffset-1; i++) begin
-      shadow_inputs_q[i]     <= shadow_inputs_q[i+1];
-      shadow_tag_rdata_q[i]  <= shadow_tag_rdata_q[i+1];
-      shadow_data_rdata_q[i] <= shadow_data_rdata_q[i+1];
+  always_ff @(posedge clk_i or negedge rst_ni) begin
+    if (!rst_ni) begin
+      for (int unsigned i = 0; i < LockstepOffset; i++) begin
+        shadow_inputs_q[i]     <= delayed_inputs_t'('0);
+        shadow_tag_rdata_q[i]  <= '{default:0};
+        shadow_data_rdata_q[i] <= '{default:0};
+      end
+    end else begin
+      for (int unsigned i = 0; i < LockstepOffset-1; i++) begin
+        shadow_inputs_q[i]     <= shadow_inputs_q[i+1];
+        shadow_tag_rdata_q[i]  <= shadow_tag_rdata_q[i+1];
+        shadow_data_rdata_q[i] <= shadow_data_rdata_q[i+1];
+      end
+      shadow_inputs_q[LockstepOffset-1]     <= shadow_inputs_in;
+      shadow_tag_rdata_q[LockstepOffset-1]  <= ic_tag_rdata_i;
+      shadow_data_rdata_q[LockstepOffset-1] <= ic_data_rdata_i;
     end
-    shadow_inputs_q[LockstepOffset-1]     <= shadow_inputs_in;
-    shadow_tag_rdata_q[LockstepOffset-1]  <= ic_tag_rdata_i;
-    shadow_data_rdata_q[LockstepOffset-1] <= ic_data_rdata_i;
   end
 
   ///////////////////
ParseResult:
UPD HdlStmProcess@@ to 
    INS HdlStmBlock@@SEQ to 
    INS HdlOp@@FALLING to sensitivity
    HdlOp: FALLING
        list: ops
            HdlValueId: rst_ni
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

INS HdlStmIf@@ to body

UPD HdlStmIf@@ to 
    INS HdlOp@@NEG_LOG to 
    HdlOp: NEG_LOG
        list: ops
            HdlValueId: rst_ni
    INS HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlStmFor
                HdlStmBlock: SEQ
                    list: body
                        HdlIdDef: i
                            HdlOp: PARAMETRIZATION
                                list: ops
                                    HdlValueId: int
                                    HdlOp: MAP_ASSOCIATION
                                        list: ops
                                            HdlValueId: signed
                            HdlValueInt: 0
                            HdlDirection: INTERNAL
                HdlOp: LT
                    list: ops
                        HdlValueId: i
                        HdlValueId: LockstepOffset
                HdlStmBlock: SEQ
                    list: body
                        HdlOp: INCR_POST
                            list: ops
                                HdlValueId: i
                HdlStmBlock: SEQ
                    list: body
                        HdlStmAssign
                            HdlOp: CALL
                                list: ops
                                    HdlValueId: delayed_inputs_t
                                    HdlValueInt: 0
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: shadow_inputs_q
                                    HdlValueId: i
                        HdlStmAssign
                            list: src
                                HdlOp: MAP_ASSOCIATION
                                    list: ops
                                        HdlValueId: default
                                        HdlValueInt: 0
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: shadow_tag_rdata_q
                                    HdlValueId: i
                        HdlStmAssign
                            list: src
                                HdlOp: MAP_ASSOCIATION
                                    list: ops
                                        HdlValueId: default
                                        HdlValueInt: 0
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: shadow_data_rdata_q
                                    HdlValueId: i
    INS list@@elifs to 

UPD HdlStmProcess@@ to 
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlStmFor
                HdlStmBlock: SEQ
                    list: body
                        HdlIdDef: i
                            HdlOp: PARAMETRIZATION
                                list: ops
                                    HdlValueId: int
                                    HdlOp: MAP_ASSOCIATION
                                        list: ops
                                            HdlValueId: signed
                            HdlValueInt: 0
                            HdlDirection: INTERNAL
                HdlOp: LT
                    list: ops
                        HdlValueId: i
                        HdlOp: SUB
                            list: ops
                                HdlValueId: LockstepOffset
                                HdlValueInt: 1
                HdlStmBlock: SEQ
                    list: body
                        HdlOp: INCR_POST
                            list: ops
                                HdlValueId: i
                HdlStmBlock: SEQ
                    list: body
                        HdlStmAssign
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: shadow_inputs_q
                                    HdlOp: ADD
                                        list: ops
                                            HdlValueId: i
                                            HdlValueInt: 1
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: shadow_inputs_q
                                    HdlValueId: i
                        HdlStmAssign
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: shadow_tag_rdata_q
                                    HdlOp: ADD
                                        list: ops
                                            HdlValueId: i
                                            HdlValueInt: 1
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: shadow_tag_rdata_q
                                    HdlValueId: i
                        HdlStmAssign
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: shadow_data_rdata_q
                                    HdlOp: ADD
                                        list: ops
                                            HdlValueId: i
                                            HdlValueInt: 1
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: shadow_data_rdata_q
                                    HdlValueId: i
            HdlStmAssign
                HdlValueId: shadow_inputs_in
                HdlOp: INDEX
                    list: ops
                        HdlValueId: shadow_inputs_q
                        HdlOp: SUB
                            list: ops
                                HdlValueId: LockstepOffset
                                HdlValueInt: 1
            HdlStmAssign
                HdlValueId: ic_tag_rdata_i
                HdlOp: INDEX
                    list: ops
                        HdlValueId: shadow_tag_rdata_q
                        HdlOp: SUB
                            list: ops
                                HdlValueId: LockstepOffset
                                HdlValueInt: 1
            HdlStmAssign
                HdlValueId: ic_data_rdata_i
                HdlOp: INDEX
                    list: ops
                        HdlValueId: shadow_data_rdata_q
                        HdlOp: SUB
                            list: ops
                                HdlValueId: LockstepOffset
                                HdlValueInt: 1


CommitId: c7cb958f0d6f143d835e33d7efe27336cc7737c1
Update lowrisc_ip to lowRISC/opentitan@ca950b43a
--- a/vendor/lowrisc_ip/ip/prim/rtl/prim_secded_64_57_enc.sv
+++ b/vendor/lowrisc_ip/ip/prim/rtl/prim_secded_64_57_enc.sv
@@ -2,23 +2,22 @@
 // Licensed under the Apache License, Version 2.0, see LICENSE for details.
 // SPDX-License-Identifier: Apache-2.0
 //
-// SECDED Encoder generated by
-// util/design/secded_gen.py -m 7 -k 57 -s 1592631616 -c hsiao
+// SECDED encoder generated by util/design/secded_gen.py
 
 module prim_secded_64_57_enc (
-  input        [56:0] in,
-  output logic [63:0] out
+  input        [56:0] data_i,
+  output logic [63:0] data_o
 );
 
   always_comb begin : p_encode
-    out = 64'(in);
-    out[57] = ^(out & 64'h0103FFF800007FFF);
-    out[58] = ^(out & 64'h017C1FF801FF801F);
-    out[59] = ^(out & 64'h01BDE1F87E0781E1);
-    out[60] = ^(out & 64'h01DEEE3B8E388E22);
-    out[61] = ^(out & 64'h01EF76CDB2C93244);
-    out[62] = ^(out & 64'h01F7BB56D5525488);
-    out[63] = ^(out & 64'h01FBDDA769A46910);
+    data_o = 64'(data_i);
+    data_o[57] = ^(data_o & 64'h0103FFF800007FFF);
+    data_o[58] = ^(data_o & 64'h017C1FF801FF801F);
+    data_o[59] = ^(data_o & 64'h01BDE1F87E0781E1);
+    data_o[60] = ^(data_o & 64'h01DEEE3B8E388E22);
+    data_o[61] = ^(data_o & 64'h01EF76CDB2C93244);
+    data_o[62] = ^(data_o & 64'h01F7BB56D5525488);
+    data_o[63] = ^(data_o & 64'h01FBDDA769A46910);
   end
 
 endmodule : prim_secded_64_57_enc
ParseResult:
UPD HdlIdDef@@in to data_i

UPD HdlIdDef@@out to data_o

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@out to data_o
            UPD HdlOp@@CALL to CALL
                UPD HdlValueId@@in to data_i
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@INDEX to INDEX
                UPD HdlValueId@@out to data_o
            UPD HdlOp@@XOR_UNARY to XOR_UNARY
                UPD HdlOp@@AND to AND
                    UPD HdlValueId@@out to data_o
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@INDEX to INDEX
                UPD HdlValueId@@out to data_o
            UPD HdlOp@@XOR_UNARY to XOR_UNARY
                UPD HdlOp@@AND to AND
                    UPD HdlValueId@@out to data_o
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@INDEX to INDEX
                UPD HdlValueId@@out to data_o
            UPD HdlOp@@XOR_UNARY to XOR_UNARY
                UPD HdlOp@@AND to AND
                    UPD HdlValueId@@out to data_o
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@INDEX to INDEX
                UPD HdlValueId@@out to data_o
            UPD HdlOp@@XOR_UNARY to XOR_UNARY
                UPD HdlOp@@AND to AND
                    UPD HdlValueId@@out to data_o
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@INDEX to INDEX
                UPD HdlValueId@@out to data_o
            UPD HdlOp@@XOR_UNARY to XOR_UNARY
                UPD HdlOp@@AND to AND
                    UPD HdlValueId@@out to data_o
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@INDEX to INDEX
                UPD HdlValueId@@out to data_o
            UPD HdlOp@@XOR_UNARY to XOR_UNARY
                UPD HdlOp@@AND to AND
                    UPD HdlValueId@@out to data_o
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@INDEX to INDEX
                UPD HdlValueId@@out to data_o
            UPD HdlOp@@XOR_UNARY to XOR_UNARY
                UPD HdlOp@@AND to AND
                    UPD HdlValueId@@out to data_o


CommitId: ca97cfb58ee8fe94382372e6c3c766218a200a24
CSRs: add `irq_` prefix to `Interrupts_t` members
--- a/rtl/ibex_cs_registers.sv
+++ b/rtl/ibex_cs_registers.sv
@@ -213,10 +213,10 @@ module ibex_cs_registers #(
   assign illegal_csr_insn_o = illegal_csr | illegal_csr_write | illegal_csr_priv;
 
   // mip CSR is purely combintational - must be able to re-enable the clock upon WFI
-  assign mip.software = irq_software_i & mie_q.software;
-  assign mip.timer    = irq_timer_i    & mie_q.timer;
-  assign mip.external = irq_external_i & mie_q.external;
-  assign mip.fast     = irq_fast_i     & mie_q.fast;
+  assign mip.irq_software = irq_software_i & mie_q.irq_software;
+  assign mip.irq_timer    = irq_timer_i    & mie_q.irq_timer;
+  assign mip.irq_external = irq_external_i & mie_q.irq_external;
+  assign mip.irq_fast     = irq_fast_i     & mie_q.irq_fast;
 
   // read logic
   always_comb begin

ParseResult:
INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: AND
        list: ops
            HdlValueId: irq_software_i
            HdlOp: DOT
                list: ops
                    HdlValueId: mie_q
                    HdlValueId: irq_software
    HdlValueId: mip

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: AND
        list: ops
            HdlValueId: irq_timer_i
            HdlOp: DOT
                list: ops
                    HdlValueId: mie_q
                    HdlValueId: irq_timer
    HdlValueId: mip

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: AND
        list: ops
            HdlValueId: irq_external_i
            HdlOp: DOT
                list: ops
                    HdlValueId: mie_q
                    HdlValueId: irq_external
    HdlValueId: mip

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: AND
        list: ops
            HdlValueId: irq_fast_i
            HdlOp: DOT
                list: ops
                    HdlValueId: mie_q
                    HdlValueId: irq_fast
    HdlValueId: mip

DEL HdlStmAssign@@ from objs
HdlStmAssign
    HdlOp: AND
        list: ops
            HdlValueId: irq_software_i
            HdlOp: DOT
                list: ops
                    HdlValueId: mie_q
                    HdlValueId: software
    HdlValueId: mip

DEL HdlStmAssign@@ from objs
HdlStmAssign
    HdlOp: AND
        list: ops
            HdlValueId: irq_timer_i
            HdlOp: DOT
                list: ops
                    HdlValueId: mie_q
                    HdlValueId: timer
    HdlValueId: mip

DEL HdlStmAssign@@ from objs
HdlStmAssign
    HdlOp: AND
        list: ops
            HdlValueId: irq_external_i
            HdlOp: DOT
                list: ops
                    HdlValueId: mie_q
                    HdlValueId: external
    HdlValueId: mip

DEL HdlStmAssign@@ from objs
HdlStmAssign
    HdlOp: AND
        list: ops
            HdlValueId: irq_fast_i
            HdlOp: DOT
                list: ops
                    HdlValueId: mie_q
                    HdlValueId: fast
    HdlValueId: mip


CommitId: ca97cfb58ee8fe94382372e6c3c766218a200a24
CSRs: add `irq_` prefix to `Interrupts_t` members
--- a/rtl/ibex_cs_registers.sv
+++ b/rtl/ibex_cs_registers.sv
@@ -241,10 +241,10 @@ module ibex_cs_registers #(
       // interrupt enable
       CSR_MIE: begin
         csr_rdata_int                                     = '0;
-        csr_rdata_int[CSR_MSIX_BIT]                       = mie_q.software;
-        csr_rdata_int[CSR_MTIX_BIT]                       = mie_q.timer;
-        csr_rdata_int[CSR_MEIX_BIT]                       = mie_q.external;
-        csr_rdata_int[CSR_MFIX_BIT_HIGH:CSR_MFIX_BIT_LOW] = mie_q.fast;
+        csr_rdata_int[CSR_MSIX_BIT]                       = mie_q.irq_software;
+        csr_rdata_int[CSR_MTIX_BIT]                       = mie_q.irq_timer;
+        csr_rdata_int[CSR_MEIX_BIT]                       = mie_q.irq_external;
+        csr_rdata_int[CSR_MFIX_BIT_HIGH:CSR_MFIX_BIT_LOW] = mie_q.irq_fast;
       end
 
       CSR_MSCRATCH: csr_rdata_int = mscratch_q;

ParseResult:
UPD HdlStmCase@@csr_addr_i to csr_addr_i
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@DOT to DOT
                UPD HdlValueId@@software to irq_software
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@DOT to DOT
                UPD HdlValueId@@timer to irq_timer
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@DOT to DOT
                UPD HdlValueId@@external to irq_external
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@DOT to DOT
                UPD HdlValueId@@fast to irq_fast
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@DOT to DOT
                UPD HdlValueId@@software to irq_software
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@DOT to DOT
                UPD HdlValueId@@timer to irq_timer
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@DOT to DOT
                UPD HdlValueId@@external to irq_external
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@DOT to DOT
                UPD HdlValueId@@fast to irq_fast


CommitId: ca97cfb58ee8fe94382372e6c3c766218a200a24
CSRs: add `irq_` prefix to `Interrupts_t` members
--- a/rtl/ibex_cs_registers.sv
+++ b/rtl/ibex_cs_registers.sv
@@ -264,10 +264,10 @@ module ibex_cs_registers #(
       // mip: interrupt pending
       CSR_MIP: begin
         csr_rdata_int                                     = '0;
-        csr_rdata_int[CSR_MSIX_BIT]                       = mip.software;
-        csr_rdata_int[CSR_MTIX_BIT]                       = mip.timer;
-        csr_rdata_int[CSR_MEIX_BIT]                       = mip.external;
-        csr_rdata_int[CSR_MFIX_BIT_HIGH:CSR_MFIX_BIT_LOW] = mip.fast;
+        csr_rdata_int[CSR_MSIX_BIT]                       = mip.irq_software;
+        csr_rdata_int[CSR_MTIX_BIT]                       = mip.irq_timer;
+        csr_rdata_int[CSR_MEIX_BIT]                       = mip.irq_external;
+        csr_rdata_int[CSR_MFIX_BIT_HIGH:CSR_MFIX_BIT_LOW] = mip.irq_fast;
       end
 
       CSR_DCSR:      csr_rdata_int = dcsr_q;

ParseResult:
UPD HdlStmCase@@csr_addr_i to csr_addr_i
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@DOT to DOT
                UPD HdlValueId@@software to irq_software
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@DOT to DOT
                UPD HdlValueId@@timer to irq_timer
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@DOT to DOT
                UPD HdlValueId@@external to irq_external
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@DOT to DOT
                UPD HdlValueId@@fast to irq_fast
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@DOT to DOT
                UPD HdlValueId@@software to irq_software
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@DOT to DOT
                UPD HdlValueId@@timer to irq_timer
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@DOT to DOT
                UPD HdlValueId@@external to irq_external
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@DOT to DOT
                UPD HdlValueId@@fast to irq_fast


CommitId: ca97cfb58ee8fe94382372e6c3c766218a200a24
CSRs: add `irq_` prefix to `Interrupts_t` members
--- a/rtl/ibex_cs_registers.sv
+++ b/rtl/ibex_cs_registers.sv
@@ -532,10 +532,10 @@ module ibex_cs_registers #(
   assign csr_rdata_o = csr_rdata_int;
 
   // directly output some registers
-  assign csr_msip_o  = mip.software;
-  assign csr_mtip_o  = mip.timer;
-  assign csr_meip_o  = mip.external;
-  assign csr_mfip_o  = mip.fast;
+  assign csr_msip_o  = mip.irq_software;
+  assign csr_mtip_o  = mip.irq_timer;
+  assign csr_meip_o  = mip.irq_external;
+  assign csr_mfip_o  = mip.irq_fast;
 
   assign csr_mepc_o  = mepc_q;
   assign csr_depc_o  = depc_q;
ParseResult:
INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: DOT
        list: ops
            HdlValueId: mip
            HdlValueId: irq_software
    HdlValueId: csr_msip_o

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: DOT
        list: ops
            HdlValueId: mip
            HdlValueId: irq_timer
    HdlValueId: csr_mtip_o

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: DOT
        list: ops
            HdlValueId: mip
            HdlValueId: irq_external
    HdlValueId: csr_meip_o

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: DOT
        list: ops
            HdlValueId: mip
            HdlValueId: irq_fast
    HdlValueId: csr_mfip_o

DEL HdlStmAssign@@ from objs
HdlStmAssign
    HdlOp: DOT
        list: ops
            HdlValueId: mip
            HdlValueId: software
    HdlValueId: csr_msip_o

DEL HdlStmAssign@@ from objs
HdlStmAssign
    HdlOp: DOT
        list: ops
            HdlValueId: mip
            HdlValueId: timer
    HdlValueId: csr_mtip_o

DEL HdlStmAssign@@ from objs
HdlStmAssign
    HdlOp: DOT
        list: ops
            HdlValueId: mip
            HdlValueId: external
    HdlValueId: csr_meip_o

DEL HdlStmAssign@@ from objs
HdlStmAssign
    HdlOp: DOT
        list: ops
            HdlValueId: mip
            HdlValueId: fast
    HdlValueId: csr_mfip_o


CommitId: 708f9287e483e972efdf1aadf6f30fb95d498f5e
Declare result of signed arithmetic as signed to avoid linting error
--- a/rtl/ibex_alu.sv
+++ b/rtl/ibex_alu.sv
@@ -117,7 +117,9 @@ module ibex_alu (
 
   assign shift_op_a_32 = {shift_arithmetic & shift_op_a[31], shift_op_a};
 
-  assign shift_right_result = $unsigned($signed(shift_op_a_32) >>> shift_amt[4:0]);
+  logic signed [32:0] shift_right_result_signed;
+  assign shift_right_result_signed = $signed(shift_op_a_32) >>> shift_amt[4:0];
+  assign shift_right_result        = shift_right_result_signed[31:0];
 
   // bit reverse the shift_right_result for left shifts
   for (genvar j = 0; j < 32; j++) begin : gen_resrevloop
ParseResult:
INS HdlIdDef@@shift_right_result_signed to objs

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: INDEX
        list: ops
            HdlValueId: shift_right_result_signed
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 31
                    HdlValueInt: 0
    HdlValueId: shift_right_result

UPD HdlIdDef@@shift_right_result_signed to shift_right_result_signed
    INS HdlOp@@PARAMETRIZATION to shift_right_result_signed
    INS HdlDirection@@INTERNAL to shift_right_result_signed
    UPD HdlOp@@PARAMETRIZATION to PARAMETRIZATION
        INS list@@ops to PARAMETRIZATION
        INS HdlOp@@DOWNTO to ops
        HdlOp: DOWNTO
            list: ops
                HdlValueInt: 32
                HdlValueInt: 0
        INS HdlValueInt@@1 to ops

UPD HdlStmAssign@@ to 
    UPD HdlOp@@CALL to CALL
        MOV HdlOp@@SRA to ops
        HdlOp: SRA
            list: ops
                HdlOp: CALL
                    list: ops
                        HdlValueId: $signed
                        HdlValueId: shift_op_a_32
                HdlOp: INDEX
                    list: ops
                        HdlValueId: shift_amt
                        HdlOp: DOWNTO
                            list: ops
                                HdlValueInt: 4
                                HdlValueInt: 0
        UPD HdlValueId@@$unsigned to logic
        MOV HdlValueId@@$unsigned to ops
        HdlValueId: $unsigned
        DEL list@@ops from CALL
    UPD HdlValueId@@shift_right_result to shift_right_result_signed
    DEL HdlOp@@CALL from 


CommitId: 79cff74dfd9a6ef52bb8c41d41ff3c25fa37aa7e
Fix a problem in the normal prefetch buffer, some instructions were performed twice
--- a/prefetch_buffer.sv
+++ b/prefetch_buffer.sv
@@ -30,13 +30,15 @@ module riscv_fetch_fifo
 
     // control signals
     input  logic        branch_i,          // clears the contents of the fifo
-    input  logic        hwloop_i,          // tries to insert an entry above the first one
+    input  logic [31:0] addr_i,
+
+    input  logic        hwlp_i,          // tries to insert an entry above the first one
+    input  logic [31:0] hwlp_target_i,
 
     // input port
     input  logic        in_addr_valid_i,
     output logic        in_addr_ready_o,
-    input  logic [31:0] in_addr_i,
-    output logic [31:0] in_last_addr_o,
+    output logic [31:0] in_fetch_addr_o,
 
     input  logic        in_rdata_valid_i,
     output logic        in_rdata_ready_o,

ParseResult:
MOV HdlIdDef@@in_addr_i to ports
HdlIdDef: in_addr_i
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 31
                    HdlValueInt: 0
    HdlDirection: IN

INS HdlIdDef@@addr_i to ports
HdlIdDef: addr_i
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 31
                    HdlValueInt: 0
    HdlDirection: IN

UPD HdlIdDef@@hwloop_i to hwlp_i

UPD HdlIdDef@@in_addr_i to hwlp_target_i

UPD HdlIdDef@@in_last_addr_o to in_fetch_addr_o


CommitId: 79cff74dfd9a6ef52bb8c41d41ff3c25fa37aa7e
Fix a problem in the normal prefetch buffer, some instructions were performed twice
--- a/prefetch_buffer.sv
+++ b/prefetch_buffer.sv
@@ -114,8 +117,9 @@ module riscv_fetch_fifo
   // input port
   //////////////////////////////////////////////////////////////////////////////
 
-  // we accept addresses as long as our fifo is not full or we are cleared
-  assign in_addr_ready_o = branch_i || (~addr_valid_Q[DEPTH-1]);
+  // we accept addresses as long as our fifo is not full or we encounter
+  // a branch or hwloop
+  assign in_addr_ready_o = branch_i || (hwlp_i & (~is_hwlp_Q[1])) || (~addr_valid_Q[DEPTH-1]);
 
   // we accept data as long as our fifo is not full
   // we don't care about clear here as the data will be received one cycle

ParseResult:
UPD HdlStmAssign@@ to 
    UPD HdlOp@@OR_LOG to OR_LOG
        INS HdlOp@@OR_LOG to ops
        UPD HdlOp@@OR_LOG to OR_LOG
            INS list@@ops to OR_LOG
            INS HdlOp@@AND to ops
            HdlOp: AND
                list: ops
                    HdlValueId: hwlp_i
                    HdlOp: NEG
                        list: ops
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: is_hwlp_Q
                                    HdlValueInt: 1

UPD HdlStmAssign@@ to 
    UPD HdlOp@@OR_LOG to OR_LOG
        MOV HdlValueId@@branch_i to ops
        HdlValueId: branch_i


CommitId: 79cff74dfd9a6ef52bb8c41d41ff3c25fa37aa7e
Fix a problem in the normal prefetch buffer, some instructions were performed twice
--- a/prefetch_buffer.sv
+++ b/prefetch_buffer.sv
@@ -127,16 +131,29 @@ module riscv_fetch_fifo
   int i;
   always_comb
   begin
-    in_last_addr_o = addr_Q[0];
+    fifo_last_addr = addr_Q[0];
 
     for(i = 1; i < DEPTH; i++) begin
       if (addr_valid_Q[i])
-        in_last_addr_o = addr_Q[i];
+        fifo_last_addr = addr_Q[i];
+    end
+  end
+
+  always_comb
+  begin
+    in_fetch_addr_o = {fifo_last_addr[31:2], 2'b00} + 32'd4;
+
+    if (branch_i) begin
+      in_fetch_addr_o = addr_i;
+    end else begin
+      if (hwlp_i & (~is_hwlp_Q[1]))
+        in_fetch_addr_o = hwlp_target_i;
     end
   end
 
-  // accept hwloop input as long as our second entry is not already one
-  assign hwlp_inbound = hwloop_i & (~is_hwlp_Q[1]);
+  // accept hwloop input as long as our second entry is not already one and we
+  // are valid, otherwise we might loose a part of an instruction
+  assign hwlp_inbound = hwlp_i & (~is_hwlp_Q[1]) & out_valid_o;
 
   //////////////////////////////////////////////////////////////////////////////
   // FIFO management

ParseResult:
INS HdlStmProcess@@ to objs

UPD HdlStmProcess@@ to 
    INS HdlStmBlock@@SEQ to 
    INS HdlStmProcessTriggerConstrain@@COMB to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

INS HdlStmIf@@ to body
HdlStmIf
    HdlValueId: branch_i
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: in_fetch_addr_o
                    HdlValueId: addr_i
    list: elifs
    HdlStmBlock: SEQ
        list: body
            HdlStmIf
                HdlOp: AND
                    list: ops
                        HdlValueId: hwlp_i
                        HdlOp: NEG
                            list: ops
                                HdlOp: INDEX
                                    list: ops
                                        HdlValueId: is_hwlp_Q
                                        HdlValueInt: 1
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: in_fetch_addr_o
                        HdlValueId: hwlp_target_i
                list: elifs

UPD HdlStmAssign@@ to 
    MOV HdlOp@@AND to 
    HdlOp: AND
        list: ops
            HdlValueId: hwloop_i
            HdlOp: NEG
                list: ops
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: is_hwlp_Q
                            HdlValueInt: 1
    UPD HdlOp@@AND to AND
        UPD HdlValueId@@hwloop_i to hwlp_i

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@in_last_addr_o to fifo_last_addr

UPD HdlStmIf@@ to 
    UPD HdlOp@@ASSIGN to ASSIGN
        UPD HdlValueId@@in_last_addr_o to fifo_last_addr


CommitId: 79cff74dfd9a6ef52bb8c41d41ff3c25fa37aa7e
Fix a problem in the normal prefetch buffer, some instructions were performed twice
--- a/prefetch_buffer.sv
+++ b/prefetch_buffer.sv
@@ -152,7 +169,7 @@ module riscv_fetch_fifo
     if (in_addr_valid_i && in_addr_ready_o) begin
       for(j = 0; j < DEPTH; j++) begin
         if (~addr_valid_Q[j]) begin
-          addr_int[j]       = in_addr_i;
+          addr_int[j]       = in_fetch_addr_o;
           addr_valid_int[j] = 1'b1;
 
           break;

ParseResult:
UPD HdlStmAssign@@ to 
    INS HdlOp@@AND to 
    UPD HdlOp@@AND to AND
        INS list@@ops to AND
        INS HdlValueId@@out_valid_o to ops

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@in_addr_i to in_fetch_addr_o


CommitId: 79cff74dfd9a6ef52bb8c41d41ff3c25fa37aa7e
Fix a problem in the normal prefetch buffer, some instructions were performed twice
--- a/prefetch_buffer.sv
+++ b/prefetch_buffer.sv
@@ -162,7 +179,7 @@ module riscv_fetch_fifo
 
     // on a hardware loop invalidate everything starting from the second entry
     if (hwlp_inbound) begin
-      addr_int[1]               = in_addr_i;
+      addr_int[1]               = in_fetch_addr_o;
       addr_valid_int[1]         = 1'b1;
       addr_valid_int[2:DEPTH-1] = '0;
       is_hwlp_int[1]            = 1'b1;

ParseResult:
UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@in_addr_i to in_fetch_addr_o


CommitId: 79cff74dfd9a6ef52bb8c41d41ff3c25fa37aa7e
Fix a problem in the normal prefetch buffer, some instructions were performed twice
--- a/prefetch_buffer.sv
+++ b/prefetch_buffer.sv
@@ -267,7 +286,7 @@ module riscv_fetch_fifo
       // on a clear signal from outside we invalidate the content of the FIFO
       // completely and start from an empty state
       if (branch_i) begin
-        addr_Q[0]        <= in_addr_i;
+        addr_Q[0]        <= in_fetch_addr_o;
         addr_valid_Q     <= {in_addr_valid_i, {DEPTH-1{1'b0}}};
         rdata_valid_Q    <= '0;
         is_hwlp_Q        <= '0;

ParseResult:
UPD HdlStmAssign@@ to 
    UPD HdlValueId@@in_addr_i to in_fetch_addr_o


CommitId: 79cff74dfd9a6ef52bb8c41d41ff3c25fa37aa7e
Fix a problem in the normal prefetch buffer, some instructions were performed twice
--- a/prefetch_buffer.sv
+++ b/prefetch_buffer.sv
@@ -317,11 +336,10 @@ module riscv_prefetch_buffer
 
   enum logic [1:0] {IDLE, WAIT_GNT, WAIT_RVALID, WAIT_ABORTED } CS, NS;
 
-  logic [31:0] addr_next;
+  logic [31:0] fetch_addr;
 
   logic        fifo_addr_valid;
   logic        fifo_addr_ready;
-  logic [31:0] fifo_last_addr;
 
   logic        fifo_rdata_valid;
   logic        fifo_rdata_ready;

ParseResult:
MOV HdlIdDef@@fifo_last_addr to objs
HdlIdDef: fifo_last_addr
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 31
                    HdlValueInt: 0
    HdlDirection: INTERNAL

UPD HdlIdDef@@addr_next to fetch_addr


CommitId: 79cff74dfd9a6ef52bb8c41d41ff3c25fa37aa7e
Fix a problem in the normal prefetch buffer, some instructions were performed twice
--- a/prefetch_buffer.sv
+++ b/prefetch_buffer.sv
@@ -333,23 +351,6 @@ module riscv_prefetch_buffer
 
   assign busy_o = (CS != IDLE) || instr_req_o;
 
-  //////////////////////////////////////////////////////////////////////////////
-  // address selection and increase
-  //////////////////////////////////////////////////////////////////////////////
-
-  always_comb
-  begin
-    addr_next = {fifo_last_addr[31:2], 2'b00} + 32'd4;
-
-    if (branch_i) begin
-      addr_next = addr_i;
-    end else begin
-      if (hwloop_i)
-        addr_next = hwloop_target_i;
-    end
-  end
-
-
   //////////////////////////////////////////////////////////////////////////////
   // fetch fifo
   // consumes addresses and rdata

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: addr_next
                HdlOp: ADD
                    list: ops
                        HdlOp: CONCAT
                            list: ops
                                HdlOp: INDEX
                                    list: ops
                                        HdlValueId: fifo_last_addr
                                        HdlOp: DOWNTO
                                            list: ops
                                                HdlValueInt: 31
                                                HdlValueInt: 2
                                HdlValueInt: 00
                        HdlValueInt: 4
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@addr_next to in_fetch_addr_o
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL HdlStmProcessTriggerConstrain@@COMB from 

DEL HdlStmIf@@ from body
HdlStmIf
    HdlValueId: branch_i
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: addr_next
                    HdlValueId: addr_i
    list: elifs
    HdlStmBlock: SEQ
        list: body
            HdlStmIf
                HdlValueId: hwloop_i
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: addr_next
                        HdlValueId: hwloop_target_i
                list: elifs

DEL HdlStmProcess@@ from objs


CommitId: 79cff74dfd9a6ef52bb8c41d41ff3c25fa37aa7e
Fix a problem in the normal prefetch buffer, some instructions were performed twice
--- a/prefetch_buffer.sv
+++ b/prefetch_buffer.sv
@@ -388,7 +391,7 @@ module riscv_prefetch_buffer
   always_comb
   begin
     instr_req_o      = 1'b0;
-    instr_addr_o     = addr_next;
+    instr_addr_o     = fetch_addr;
     fifo_addr_valid  = 1'b0;
     fifo_rdata_valid = 1'b0;
     NS               = CS;

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@addr_next to fetch_addr


CommitId: 79cff74dfd9a6ef52bb8c41d41ff3c25fa37aa7e
Fix a problem in the normal prefetch buffer, some instructions were performed twice
--- a/prefetch_buffer.sv
+++ b/prefetch_buffer.sv
@@ -418,11 +421,8 @@ module riscv_prefetch_buffer
         instr_req_o = 1'b1;
 
         if (branch_i) begin
-          instr_addr_o = addr_next;
 
           fifo_addr_valid = 1'b1;
-        end else begin
-          instr_addr_o = fifo_last_addr;
         end
 
         if(instr_gnt_i)

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@addr_next to fetch_addr

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: instr_addr_o
                HdlValueId: addr_next
    DEL HdlStmBlock@@SEQ from 
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: instr_addr_o
                    HdlValueId: fifo_last_addr

UPD HdlStmCase@@CS to CS
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: instr_addr_o
                HdlValueId: fifo_last_addr


CommitId: 79cff74dfd9a6ef52bb8c41d41ff3c25fa37aa7e
Fix a problem in the normal prefetch buffer, some instructions were performed twice
--- a/prefetch_buffer.sv
+++ b/prefetch_buffer.sv
@@ -473,7 +473,6 @@ module riscv_prefetch_buffer
       WAIT_ABORTED: begin
         // prepare for next request
         instr_req_o  = 1'b1;
-        instr_addr_o = fifo_last_addr;
 
         if (instr_rvalid_i) begin
           // no need to send address, already done in WAIT_RVALID
ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@addr_next to fetch_addr

UPD HdlStmCase@@CS to CS
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: instr_addr_o
                HdlValueId: fifo_last_addr


CommitId: f2fccaadbc6aaedf08bec73b7386ffce3aaeb618
[Prefetch buffer] - various bug fixes
--- a/rtl/ibex_id_stage.sv
+++ b/rtl/ibex_id_stage.sv
@@ -536,7 +538,7 @@ module ibex_id_stage #(
       IDLE: begin
         // only detect multicycle when instruction is new, do not re-detect after
         // execution (when waiting for next instruction from IF stage)
-        if (instr_new_i) begin
+        if (instr_new_i & ~instr_fetch_err_i) begin
           unique case (1'b1)
             data_req_dec: begin
               // LSU operation
ParseResult:
UPD HdlStmIf@@ to 
    INS HdlOp@@AND to 
    UPD HdlOp@@AND to AND
        INS list@@ops to AND
        INS HdlOp@@NEG to ops
        HdlOp: NEG
            list: ops
                HdlValueId: instr_fetch_err_i

UPD HdlStmIf@@ to 
    MOV HdlValueId@@instr_new_i to 
    HdlValueId: instr_new_i


CommitId: a775abd96768165c4637ea6bc3c5bf09a298007c
Fix dpc CSR not updated (#157)
--- a/rtl/ibex_controller.sv
+++ b/rtl/ibex_controller.sv
@@ -358,24 +358,24 @@ module ibex_controller (
       DBG_TAKEN_IF: begin
         // enter debug mode and save PC in IF to dpc
         // jump to debug exception handler in debug memory
-        pc_mux_o         = PC_EXC;
-        pc_set_o         = 1'b1;
-        exc_pc_mux_o     = EXC_PC_DBD;
+        if (debug_single_step_i || debug_req_i) begin
+          pc_mux_o         = PC_EXC;
+          pc_set_o         = 1'b1;
+          exc_pc_mux_o     = EXC_PC_DBD;
 
-        csr_save_if_o    = 1'b1;
-        debug_csr_save_o = 1'b1;
+          csr_save_if_o    = 1'b1;
+          debug_csr_save_o = 1'b1;
 
-        csr_save_cause_o = 1'b1;
-        if (debug_single_step_i) begin
-          debug_cause_o = DBG_CAUSE_STEP;
-        end else if (debug_req_i) begin
-          debug_cause_o = DBG_CAUSE_HALTREQ;
-        end else if (ebrk_insn_i) begin
-          debug_cause_o = DBG_CAUSE_EBREAK;
-        end
+          csr_save_cause_o = 1'b1;
+          if (debug_single_step_i) begin
+            debug_cause_o = DBG_CAUSE_STEP;
+          end else begin
+            debug_cause_o = DBG_CAUSE_HALTREQ;
+          end
 
-        // enter debug mode
-        debug_mode_d = 1'b1;
+          // enter debug mode
+          debug_mode_d = 1'b1;
+        end
 
         ctrl_fsm_ns  = DECODE;
       end

ParseResult:
UPD HdlStmCase@@ctrl_fsm_cs to ctrl_fsm_cs
    INS HdlStmBlock@@SEQ to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

INS HdlStmIf@@ to body

UPD HdlStmCase@@ctrl_fsm_cs to ctrl_fsm_cs
    UPD HdlStmBlock@@SEQ to SEQ
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: ctrl_fsm_ns
                HdlValueId: DECODE
    UPD HdlStmBlock@@SEQ to SEQ
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: ctrl_fsm_ns
                HdlValueId: DECODE
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: pc_mux_o
                    HdlValueId: PC_EXC
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: pc_set_o
                    HdlValueInt: 1
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: exc_pc_mux_o
                    HdlValueId: EXC_PC_DBD
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: csr_save_if_o
                    HdlValueInt: 1
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: debug_csr_save_o
                    HdlValueInt: 1
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: csr_save_cause_o
                    HdlValueInt: 1
            HdlStmIf
                HdlValueId: debug_single_step_i
                HdlStmBlock: SEQ
                    list: body
                        HdlOp: ASSIGN
                            list: ops
                                HdlValueId: debug_cause_o
                                HdlValueId: DBG_CAUSE_STEP
                list: elifs
                    tuple
                        HdlValueId: debug_req_i
                        HdlStmBlock: SEQ
                            list: body
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: debug_cause_o
                                        HdlValueId: DBG_CAUSE_HALTREQ
                    tuple
                        HdlValueId: ebrk_insn_i
                        HdlStmBlock: SEQ
                            list: body
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: debug_cause_o
                                        HdlValueId: DBG_CAUSE_EBREAK
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: debug_mode_d
                    HdlValueInt: 1
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: ctrl_fsm_ns
                    HdlValueId: DECODE
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: pc_mux_o
                    HdlValueId: PC_EXC
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: pc_set_o
                    HdlValueInt: 1
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: exc_pc_mux_o
                    HdlValueId: EXC_PC_DBD
            HdlStmIf
                HdlOp: OR_LOG
                    list: ops
                        HdlOp: AND_LOG
                            list: ops
                                HdlOp: AND_LOG
                                    list: ops
                                        HdlValueId: ebrk_insn_i
                                        HdlValueId: debug_ebreakm_i
                                HdlOp: NEG_LOG
                                    list: ops
                                        HdlValueId: debug_mode_q
                        HdlValueId: enter_debug_mode
                HdlStmBlock: SEQ
                    list: body
                        HdlOp: ASSIGN
                            list: ops
                                HdlValueId: csr_save_cause_o
                                HdlValueInt: 1
                        HdlOp: ASSIGN
                            list: ops
                                HdlValueId: csr_save_id_o
                                HdlValueInt: 1
                        HdlOp: ASSIGN
                            list: ops
                                HdlValueId: debug_csr_save_o
                                HdlValueInt: 1
                        HdlStmIf
                            HdlValueId: debug_req_i
                            HdlStmBlock: SEQ
                                list: body
                                    HdlOp: ASSIGN
                                        list: ops
                                            HdlValueId: debug_cause_o
                                            HdlValueId: DBG_CAUSE_HALTREQ
                            list: elifs
                                tuple
                                    HdlValueId: ebrk_insn_i
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlOp: ASSIGN
                                                list: ops
                                                    HdlValueId: debug_cause_o
                                                    HdlValueId: DBG_CAUSE_EBREAK
                list: elifs
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: debug_mode_d
                    HdlValueInt: 1
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: ctrl_fsm_ns
                    HdlValueId: DECODE

UPD HdlStmIf@@ to 
    INS HdlOp@@OR_LOG to 
    HdlOp: OR_LOG
        list: ops
            HdlValueId: debug_single_step_i
            HdlValueId: debug_req_i
    INS list@@elifs to 

UPD HdlStmIf@@ to 
    INS list@@elifs to 

UPD HdlStmIf@@ to 
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: debug_cause_o
                    HdlValueId: DBG_CAUSE_HALTREQ
    DEL HdlValueId@@debug_req_i from 
    DEL tuple@@ from elifs
    DEL tuple@@ from elifs
    tuple
        HdlValueId: ebrk_insn_i
        HdlStmBlock: SEQ
            list: body
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: debug_cause_o
                        HdlValueId: DBG_CAUSE_EBREAK
    DEL list@@elifs from 


CommitId: b22a6a10defc7bad31dda7d8a33c7145d1a79a3b
Add `mtval` CSR
--- a/rtl/ibex_cs_registers.sv
+++ b/rtl/ibex_cs_registers.sv
@@ -66,26 +66,26 @@ module ibex_cs_registers #(
     input  logic                      csr_save_id_i,
     input  logic                      csr_restore_mret_i,
     input  logic                      csr_restore_dret_i,
-
-    input  ibex_defines::exc_cause_e  csr_cause_i,
     input  logic                      csr_save_cause_i,
+    input  logic [31:0]               csr_mtval_i,
+    input  ibex_defines::exc_cause_e  csr_cause_i,
 
-    output logic                      illegal_csr_insn_o, // access to non-existent CSR,
-                                                          // with wrong priviledge level, or
-                                                          // missing write permissions
+    output logic                      illegal_csr_insn_o,    // access to non-existent CSR,
+                                                             // with wrong priviledge level, or
+                                                             // missing write permissions
     // Performance Counters
-    input  logic                      insn_ret_i,         // instr retired in ID/EX stage
-    input  logic                      id_valid_i,         // ID stage is done
-    input  logic                      is_compressed_i,    // compressed instr in ID
-    input  logic                      is_decoding_i,      // controller is in DECODE state
-
-    input  logic                      imiss_i,            // instr fetch
-    input  logic                      pc_set_i,           // PC was set to a new value
-    input  logic                      jump_i,             // jump instr seen (j, jr, jal, jalr)
-    input  logic                      branch_i,           // branch instr seen (bf, bnf)
-    input  logic                      branch_taken_i,     // branch was taken
-    input  logic                      mem_load_i,         // load from memory in this cycle
-    input  logic                      mem_store_i,        // store to memory in this cycle
+    input  logic                      insn_ret_i,            // instr retired in ID/EX stage
+    input  logic                      id_valid_i,            // ID stage is done
+    input  logic                      instr_is_compressed_i, // compressed instr in ID
+    input  logic                      is_decoding_i,         // controller is in DECODE state
+
+    input  logic                      imiss_i,               // instr fetch
+    input  logic                      pc_set_i,              // PC was set to a new value
+    input  logic                      jump_i,                // jump instr seen (j, jr, jal, jalr)
+    input  logic                      branch_i,              // branch instr seen (bf, bnf)
+    input  logic                      branch_taken_i,        // branch was taken
+    input  logic                      mem_load_i,            // load from memory in this cycle
+    input  logic                      mem_store_i,           // store to memory in this cycle
     input  logic                      lsu_busy_i
 );
 

ParseResult:
MOV HdlIdDef@@csr_cause_i to ports
HdlIdDef: csr_cause_i
    HdlOp: DOUBLE_COLON
        list: ops
            HdlValueId: ibex_defines
            HdlValueId: exc_cause_e
    HdlDirection: IN

INS HdlIdDef@@csr_mtval_i to ports
HdlIdDef: csr_mtval_i
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 31
                    HdlValueInt: 0
    HdlDirection: IN

UPD HdlIdDef@@is_compressed_i to instr_is_compressed_i


CommitId: b22a6a10defc7bad31dda7d8a33c7145d1a79a3b
Add `mtval` CSR
--- a/rtl/ibex_cs_registers.sv
+++ b/rtl/ibex_cs_registers.sv
@@ -155,6 +155,7 @@ module ibex_cs_registers #(
   Status_t     mstatus_q, mstatus_n;
   logic [31:0] mepc_q, mepc_n;
   logic [31:0] mcause_q, mcause_n;
+  logic [31:0] mtval_q, mtval_n;
   Dcsr_t       dcsr_q, dcsr_n;
   logic [31:0] depc_q, depc_n;
   logic [31:0] dscratch0_q, dscratch0_n;

ParseResult:
INS HdlIdDef@@mtval_q to objs
HdlIdDef: mtval_q
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 31
                    HdlValueInt: 0
    HdlDirection: INTERNAL

INS HdlIdDef@@mtval_n to objs
HdlIdDef: mtval_n
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 31
                    HdlValueInt: 0
    HdlDirection: INTERNAL


CommitId: b22a6a10defc7bad31dda7d8a33c7145d1a79a3b
Add `mtval` CSR
--- a/rtl/ibex_cs_registers.sv
+++ b/rtl/ibex_cs_registers.sv
@@ -229,6 +230,8 @@ module ibex_cs_registers #(
       // mcause: exception cause
       CSR_MCAUSE: csr_rdata_int = {mcause_q[5], 26'b0, mcause_q[4:0]};
 
+      // mtval: trap value
+      CSR_MTVAL: csr_rdata_int = mtval_q;
 
       CSR_DCSR:      csr_rdata_int = dcsr_q;
       CSR_DPC:       csr_rdata_int = depc_q;

ParseResult:
UPD HdlStmCase@@csr_addr_i to csr_addr_i
    INS tuple@@ to cases
    tuple
        HdlValueId: CSR_MTVAL
        HdlOp: ASSIGN
            list: ops
                HdlValueId: csr_rdata_int
                HdlValueId: mtval_q


CommitId: b22a6a10defc7bad31dda7d8a33c7145d1a79a3b
Add `mtval` CSR
--- a/rtl/ibex_cs_registers.sv
+++ b/rtl/ibex_cs_registers.sv
@@ -283,6 +286,7 @@ module ibex_cs_registers #(
     mstatus_n    = mstatus_q;
     mepc_n       = mepc_q;
     mcause_n     = mcause_q;
+    mtval_n      = mtval_q;
     dcsr_n       = dcsr_q;
     depc_n       = depc_q;
     dscratch0_n  = dscratch0_q;

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: mtval_n
                HdlValueId: mtval_q

UPD HdlStmCase@@csr_addr_i to csr_addr_i
    INS tuple@@ to cases
    tuple
        HdlValueId: CSR_MTVAL
        HdlOp: ASSIGN
            list: ops
                HdlValueId: csr_rdata_int
                HdlValueId: mtval_q


CommitId: b22a6a10defc7bad31dda7d8a33c7145d1a79a3b
Add `mtval` CSR
--- a/rtl/ibex_cs_registers.sv
+++ b/rtl/ibex_cs_registers.sv
@@ -309,6 +313,9 @@ module ibex_cs_registers #(
       // mcause
       CSR_MCAUSE: if (csr_we_int) mcause_n = {csr_wdata_int[31], csr_wdata_int[4:0]};
 
+      // mtval: trap value
+      CSR_MTVAL: if (csr_we_int) mtval_n = csr_wdata_int;
+
       CSR_DCSR: begin
         if (csr_we_int) begin
           dcsr_n = csr_wdata_int;

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: mtval_n
                HdlValueId: mtval_q

UPD HdlStmCase@@csr_addr_i to csr_addr_i
    INS tuple@@ to cases
    tuple
        HdlValueId: CSR_MTVAL
        HdlStmIf
            HdlValueId: csr_we_int
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: mtval_n
                    HdlValueId: csr_wdata_int
            list: elifs


CommitId: b22a6a10defc7bad31dda7d8a33c7145d1a79a3b
Add `mtval` CSR
--- a/rtl/ibex_cs_registers.sv
+++ b/rtl/ibex_cs_registers.sv
@@ -415,6 +422,7 @@ module ibex_cs_registers #(
           mstatus_n.mpp  = PRIV_LVL_M;
           mepc_n         = exception_pc;
           mcause_n       = csr_cause_i;
+          mtval_n        = csr_mtval_i;
         end
       end //csr_save_cause_i
 

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: mtval_n
                HdlValueId: mtval_q

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: mtval_n
                HdlValueId: csr_mtval_i


CommitId: b22a6a10defc7bad31dda7d8a33c7145d1a79a3b
Add `mtval` CSR
--- a/rtl/ibex_cs_registers.sv
+++ b/rtl/ibex_cs_registers.sv
@@ -474,6 +482,7 @@ module ibex_cs_registers #(
       };
       mepc_q     <= '0;
       mcause_q   <= '0;
+      mtval_q    <= '0;
       dcsr_q     <= '{
           xdebugver: XDEBUGVER_NO,   // 4'h0
           cause:     DBG_CAUSE_NONE, // 3'h0

ParseResult:
INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: mtval_q


CommitId: b22a6a10defc7bad31dda7d8a33c7145d1a79a3b
Add `mtval` CSR
--- a/rtl/ibex_cs_registers.sv
+++ b/rtl/ibex_cs_registers.sv
@@ -492,6 +501,7 @@ module ibex_cs_registers #(
       };
       mepc_q      <= mepc_n;
       mcause_q    <= mcause_n;
+      mtval_q     <= mtval_n;
       dcsr_q      <= dcsr_n;
       depc_q      <= depc_n;
       dscratch0_q <= dscratch0_n;

ParseResult:
INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueId: mtval_n
    HdlValueId: mtval_q


CommitId: b22a6a10defc7bad31dda7d8a33c7145d1a79a3b
Add `mtval` CSR
--- a/rtl/ibex_cs_registers.sv
+++ b/rtl/ibex_cs_registers.sv
@@ -532,8 +542,8 @@ module ibex_cs_registers #(
     mhpmcounter_incr[7]  = jump_i;              // num of jumps (unconditional)
     mhpmcounter_incr[8]  = branch_i;            // num of branches (conditional)
     mhpmcounter_incr[9]  = branch_taken_i;      // num of taken branches (conditional)
-    mhpmcounter_incr[10] = is_compressed_i      // num of compressed instr
-        & id_valid_i & is_decoding_i;
+    mhpmcounter_incr[10] = is_decoding_i        // num of compressed instr
+        & id_valid_i & instr_is_compressed_i;
 
     // inactive counters
     for (int unsigned i=3+MHPMCounterNum; i<32; i++) begin : gen_mhpmcounter_incr_inactive
ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@AND to AND
                UPD HdlValueId@@is_decoding_i to instr_is_compressed_i
                UPD HdlOp@@AND to AND
                    UPD HdlValueId@@is_compressed_i to is_decoding_i


CommitId: d117b24a17fe60c014e7d11674d71eee40910df8
[rtl] Do not update CSRs upon exceptions in debug mode
--- a/rtl/ibex_cs_registers.sv
+++ b/rtl/ibex_cs_registers.sv
@@ -522,7 +522,9 @@ module ibex_cs_registers #(
           dcsr_d.prv   = priv_lvl_q;
           dcsr_d.cause = debug_cause_i;
           depc_d       = exception_pc;
-        end else begin
+        end else if (!debug_mode_i) begin
+          // In debug mode, "exceptions do not update any registers. That
+          // includes cause, epc, tval, dpc and mstatus." [Debug Spec v0.13.2, p.39]
           mtval_d        = csr_mtval_i;
           mstatus_d.mie  = 1'b0; // disable interrupts
           // save current status
ParseResult:
UPD HdlStmProcess@@ to 
    INS HdlStmProcessTriggerConstrain@@COMB to 

UPD HdlStmIf@@ to 
    INS list@@elifs to 
    INS tuple@@ to elifs
    INS HdlOp@@NEG_LOG to 
    UPD HdlOp@@NEG_LOG to NEG_LOG
        INS HdlValueId@@debug_mode_i to ops

UPD HdlStmIf@@ to 
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: mtval_d
                    HdlValueId: csr_mtval_i
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: mstatus_d
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: mstatus_d
                    HdlOp: DOT
                        list: ops
                            HdlValueId: mstatus_q
                            HdlValueId: mie
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: mstatus_d
                    HdlValueId: priv_lvl_q
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: mepc_d
                    HdlValueId: exception_pc
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: mcause_d
                    HdlValueId: csr_mcause_i
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: mstack_d
                    HdlOp: DOT
                        list: ops
                            HdlValueId: mstatus_q
                            HdlValueId: mpie
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: mstack_d
                    HdlOp: DOT
                        list: ops
                            HdlValueId: mstatus_q
                            HdlValueId: mpp
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: mstack_epc_d
                    HdlValueId: mepc_q
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: mstack_cause_d
                    HdlValueId: mcause_q
    UPD list@@elifs to ops
    MOV list@@elifs to 
    list: elifs

UPD HdlStmProcess@@ to 
    DEL HdlStmProcessTriggerConstrain@@COMB from 


CommitId: 2c75c2b2ec90bebb756386e1360810474323c1ad
Update lowrisc_ip to lowRISC/opentitan@1ae03937f
--- a/vendor/lowrisc_ip/ip/prim/rtl/prim_secded_39_32_enc.sv
+++ b/vendor/lowrisc_ip/ip/prim/rtl/prim_secded_39_32_enc.sv
@@ -12,13 +12,13 @@ module prim_secded_39_32_enc (
 
   always_comb begin : p_encode
     out = 39'(in);
-    out[32] = ^(out & 39'h00432358F1);
-    out[33] = ^(out & 39'h00991D7680);
-    out[34] = ^(out & 39'h00417AA04E);
-    out[35] = ^(out & 39'h00EC104B1E);
-    out[36] = ^(out & 39'h00A484A4E5);
-    out[37] = ^(out & 39'h0016ED0B28);
-    out[38] = ^(out & 39'h003AC29513);
+    out[32] = ^(out & 39'h00850E56A2);
+    out[33] = ^(out & 39'h002E534C61);
+    out[34] = ^(out & 39'h000901A9FE);
+    out[35] = ^(out & 39'h007079A702);
+    out[36] = ^(out & 39'h00CABA900D);
+    out[37] = ^(out & 39'h00D3C44B18);
+    out[38] = ^(out & 39'h0034A430D5);
   end
 
 endmodule : prim_secded_39_32_enc
ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@XOR_UNARY to XOR_UNARY
                UPD HdlOp@@AND to AND
                    UPD HdlValueInt@@00432358f1 to 00850e56a2
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@XOR_UNARY to XOR_UNARY
                UPD HdlOp@@AND to AND
                    UPD HdlValueInt@@00991d7680 to 002e534c61
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@XOR_UNARY to XOR_UNARY
                UPD HdlOp@@AND to AND
                    UPD HdlValueInt@@00417aa04e to 000901a9fe
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@XOR_UNARY to XOR_UNARY
                UPD HdlOp@@AND to AND
                    UPD HdlValueInt@@00ec104b1e to 007079a702
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@XOR_UNARY to XOR_UNARY
                UPD HdlOp@@AND to AND
                    UPD HdlValueInt@@00a484a4e5 to 00caba900d
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@XOR_UNARY to XOR_UNARY
                UPD HdlOp@@AND to AND
                    UPD HdlValueInt@@0016ed0b28 to 00d3c44b18
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@XOR_UNARY to XOR_UNARY
                UPD HdlOp@@AND to AND
                    UPD HdlValueInt@@003ac29513 to 0034a430d5


CommitId: 84ea2c90ee66a8c49d33729b442ccbe4d5c03808
Fix aborting on instr core interface
--- a/instr_core_interface.sv
+++ b/instr_core_interface.sv
@@ -343,7 +343,7 @@ module instr_core_interface
       // we wait for rvalid, after that we are ready to serve a new request
       WAIT_RVALID: begin
 
-        if (req_i && fifo_addr_ready) begin
+        if ((req_i && fifo_addr_ready) || clear_i) begin
           // prepare for next request
           instr_req_o = 1'b1;
 

ParseResult:
UPD HdlStmCase@@CS to CS
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: instr_addr_o
                HdlValueId: fifo_last_addr

UPD HdlStmIf@@ to 
    INS HdlOp@@OR_LOG to 
    UPD HdlOp@@OR_LOG to OR_LOG
        INS list@@ops to OR_LOG
        INS HdlValueId@@clear_i to ops

UPD HdlStmIf@@ to 
    MOV HdlOp@@AND_LOG to 
    HdlOp: AND_LOG
        list: ops
            HdlValueId: req_i
            HdlValueId: fifo_addr_ready

UPD HdlStmCase@@CS to CS
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 


CommitId: 84ea2c90ee66a8c49d33729b442ccbe4d5c03808
Fix aborting on instr core interface
--- a/instr_core_interface.sv
+++ b/instr_core_interface.sv
@@ -358,8 +358,11 @@ module instr_core_interface
             end
           end else begin
             // we are requested to abort our current request
-            if (clear_i)
-              NS = WAIT_ABORTED;
+            // we didn't get an rvalid yet, so wait for it
+            if (clear_i) begin
+              fifo_addr_valid  = 1'b1;
+              NS               = WAIT_ABORTED;
+            end
           end
         end else begin
           // just wait for rvalid and go back to IDLE, no new request

ParseResult:
UPD HdlStmCase@@CS to CS
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: instr_addr_o
                HdlValueId: fifo_last_addr

UPD HdlStmIf@@ to 
    INS HdlOp@@OR_LOG to 
    UPD HdlOp@@OR_LOG to OR_LOG
        INS list@@ops to OR_LOG
        INS HdlValueId@@clear_i to ops

UPD HdlStmIf@@ to 
    MOV HdlOp@@AND_LOG to 
    HdlOp: AND_LOG
        list: ops
            HdlValueId: req_i
            HdlValueId: fifo_addr_ready

UPD HdlStmIf@@ to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

MOV HdlStmIf@@ to body
HdlStmIf
    HdlValueId: clear_i
    HdlOp: ASSIGN
        list: ops
            HdlValueId: NS
            HdlValueId: WAIT_ABORTED
    list: elifs

UPD HdlStmIf@@ to 
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlStmIf
                HdlValueId: clear_i
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: NS
                        HdlValueId: WAIT_ABORTED
                list: elifs

UPD HdlStmIf@@ to 
    MOV HdlOp@@ASSIGN to 
    HdlOp: ASSIGN
        list: ops
            HdlValueId: NS
            HdlValueId: WAIT_ABORTED

UPD HdlStmCase@@CS to CS
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 


CommitId: 74abc47b7179b9a651240a4c856eb578e53b8a7b
Add missing `default` in `unique case`, propagate `'X` in FSM states
--- a/rtl/ibex_int_controller.sv
+++ b/rtl/ibex_int_controller.sv
@@ -85,6 +85,10 @@ module ibex_int_controller (
       IRQ_DONE: begin
         exc_ctrl_ns = IDLE;
       end
+
+      default: begin
+        exc_ctrl_ns = exc_ctrl_e'({$bits(exc_ctrl_e){1'bX}});
+      end
     endcase
   end
 
ParseResult:
UPD HdlStmCase@@exc_ctrl_cs to exc_ctrl_cs
    INS HdlStmBlock@@SEQ to exc_ctrl_cs
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: exc_ctrl_ns
                    HdlOp: CALL
                        list: ops
                            HdlValueId: exc_ctrl_e
                            HdlOp: REPL_CONCAT
                                list: ops
                                    HdlOp: CALL
                                        list: ops
                                            HdlValueId: $bits
                                            HdlValueId: exc_ctrl_e
                                    HdlValueInt: x


CommitId: 44b033cf8bf858e893080fe62b452791fdd3bd4d
[rtl] Add support for instruction fetch errors
--- a/rtl/ibex_prefetch_buffer.sv
+++ b/rtl/ibex_prefetch_buffer.sv
@@ -34,6 +34,7 @@ module ibex_prefetch_buffer (
     output logic        valid_o,
     output logic [31:0] rdata_o,
     output logic [31:0] addr_o,
+    output logic        err_o,
 
 
     // goes to instruction memory / instruction cache

ParseResult:
INS HdlIdDef@@err_o to ports
HdlIdDef: err_o
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: OUT


CommitId: 44b033cf8bf858e893080fe62b452791fdd3bd4d
[rtl] Add support for instruction fetch errors
--- a/rtl/ibex_prefetch_buffer.sv
+++ b/rtl/ibex_prefetch_buffer.sv
@@ -41,6 +42,7 @@ module ibex_prefetch_buffer (
     input  logic        instr_gnt_i,
     output logic [31:0] instr_addr_o,
     input  logic [31:0] instr_rdata_i,
+    input  logic        instr_err_i,
     input  logic        instr_rvalid_i,
 
     // Prefetch Buffer Status

ParseResult:
INS HdlIdDef@@instr_err_i to ports
HdlIdDef: instr_err_i
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: IN


CommitId: c7cb958f0d6f143d835e33d7efe27336cc7737c1
Update lowrisc_ip to lowRISC/opentitan@ca950b43a
--- a/vendor/lowrisc_ip/ip/prim/rtl/prim_secded_72_64_enc.sv
+++ b/vendor/lowrisc_ip/ip/prim/rtl/prim_secded_72_64_enc.sv
@@ -2,24 +2,23 @@
 // Licensed under the Apache License, Version 2.0, see LICENSE for details.
 // SPDX-License-Identifier: Apache-2.0
 //
-// SECDED Encoder generated by
-// util/design/secded_gen.py -m 8 -k 64 -s 1592631616 -c hsiao
+// SECDED encoder generated by util/design/secded_gen.py
 
 module prim_secded_72_64_enc (
-  input        [63:0] in,
-  output logic [71:0] out
+  input        [63:0] data_i,
+  output logic [71:0] data_o
 );
 
   always_comb begin : p_encode
-    out = 72'(in);
-    out[64] = ^(out & 72'h009D000000001FFFFF);
-    out[65] = ^(out & 72'h007600000FFFE0003F);
-    out[66] = ^(out & 72'h0079003FF003E007C1);
-    out[67] = ^(out & 72'h00A70FC0F03C207842);
-    out[68] = ^(out & 72'h00D371C711C4438884);
-    out[69] = ^(out & 72'h00F8B65926488C9108);
-    out[70] = ^(out & 72'h00AEDAAA4A91152210);
-    out[71] = ^(out & 72'h004FED348D221A4420);
+    data_o = 72'(data_i);
+    data_o[64] = ^(data_o & 72'h00B9000000001FFFFF);
+    data_o[65] = ^(data_o & 72'h005E00000FFFE0003F);
+    data_o[66] = ^(data_o & 72'h0067003FF003E007C1);
+    data_o[67] = ^(data_o & 72'h00CD0FC0F03C207842);
+    data_o[68] = ^(data_o & 72'h00B671C711C4438884);
+    data_o[69] = ^(data_o & 72'h00B5B65926488C9108);
+    data_o[70] = ^(data_o & 72'h00CBDAAA4A91152210);
+    data_o[71] = ^(data_o & 72'h007AED348D221A4420);
   end
 
 endmodule : prim_secded_72_64_enc
ParseResult:
UPD HdlIdDef@@in to data_i

UPD HdlIdDef@@out to data_o

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@out to data_o
            UPD HdlOp@@CALL to CALL
                UPD HdlValueId@@in to data_i
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@INDEX to INDEX
                UPD HdlValueId@@out to data_o
            UPD HdlOp@@XOR_UNARY to XOR_UNARY
                UPD HdlOp@@AND to AND
                    UPD HdlValueId@@out to data_o
                    UPD HdlValueInt@@009d000000001fffff to 00b9000000001fffff
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@INDEX to INDEX
                UPD HdlValueId@@out to data_o
            UPD HdlOp@@XOR_UNARY to XOR_UNARY
                UPD HdlOp@@AND to AND
                    UPD HdlValueId@@out to data_o
                    UPD HdlValueInt@@007600000fffe0003f to 005e00000fffe0003f
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@INDEX to INDEX
                UPD HdlValueId@@out to data_o
            UPD HdlOp@@XOR_UNARY to XOR_UNARY
                UPD HdlOp@@AND to AND
                    UPD HdlValueId@@out to data_o
                    UPD HdlValueInt@@0079003ff003e007c1 to 0067003ff003e007c1
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@INDEX to INDEX
                UPD HdlValueId@@out to data_o
            UPD HdlOp@@XOR_UNARY to XOR_UNARY
                UPD HdlOp@@AND to AND
                    UPD HdlValueId@@out to data_o
                    UPD HdlValueInt@@00a70fc0f03c207842 to 00cd0fc0f03c207842
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@INDEX to INDEX
                UPD HdlValueId@@out to data_o
            UPD HdlOp@@XOR_UNARY to XOR_UNARY
                UPD HdlOp@@AND to AND
                    UPD HdlValueId@@out to data_o
                    UPD HdlValueInt@@00d371c711c4438884 to 00b671c711c4438884
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@INDEX to INDEX
                UPD HdlValueId@@out to data_o
            UPD HdlOp@@XOR_UNARY to XOR_UNARY
                UPD HdlOp@@AND to AND
                    UPD HdlValueId@@out to data_o
                    UPD HdlValueInt@@00f8b65926488c9108 to 00b5b65926488c9108
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@INDEX to INDEX
                UPD HdlValueId@@out to data_o
            UPD HdlOp@@XOR_UNARY to XOR_UNARY
                UPD HdlOp@@AND to AND
                    UPD HdlValueId@@out to data_o
                    UPD HdlValueInt@@00aedaaa4a91152210 to 00cbdaaa4a91152210
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@INDEX to INDEX
                UPD HdlValueId@@out to data_o
            UPD HdlOp@@XOR_UNARY to XOR_UNARY
                UPD HdlOp@@AND to AND
                    UPD HdlValueId@@out to data_o
                    UPD HdlValueInt@@004fed348d221a4420 to 007aed348d221a4420


CommitId: b22a6a10defc7bad31dda7d8a33c7145d1a79a3b
Add `mtval` CSR
--- a/rtl/ibex_load_store_unit.sv
+++ b/rtl/ibex_load_store_unit.sv
@@ -52,17 +52,19 @@ module ibex_load_store_unit (
     output logic [31:0]  data_rdata_ex_o,      // requested data                   -> to EX
     input  logic         data_req_ex_i,        // data request                     -> from EX
 
-    input  logic [31:0]  adder_result_ex_i,
+    input  logic [31:0]  adder_result_ex_i,    // address computed in ALU          -> from EX
 
     output logic         data_misaligned_o,    // misaligned access detected       -> to controller
-    output logic [31:0]  misaligned_addr_o,
+    output logic [31:0]  addr_last_o,          // address of last transaction      -> to controller
+                                               // -> mtval
+                                               // -> AGU for misaligned accesses
 
     // exception signals
     output logic         load_err_o,
     output logic         store_err_o,
 
     // stall signal
-    output logic         lsu_update_addr_o, // LSU ready for new data in EX stage
+    output logic         lsu_update_addr_o,    // LSU ready for new data in EX stage
     output logic         data_valid_o,
 
     output logic         busy_o

ParseResult:
UPD HdlIdDef@@misaligned_addr_o to addr_last_o


CommitId: b22a6a10defc7bad31dda7d8a33c7145d1a79a3b
Add `mtval` CSR
--- a/rtl/ibex_load_store_unit.sv
+++ b/rtl/ibex_load_store_unit.sv
@@ -70,6 +72,7 @@ module ibex_load_store_unit (
 
   logic [31:0]  data_addr;
   logic [31:0]  data_addr_w_aligned;
+  logic [31:0]  addr_last_q, addr_last_n;
 
   // registers for data_rdata alignment and sign extension
   logic [1:0]   data_type_q;

ParseResult:
INS HdlIdDef@@addr_last_q to objs
HdlIdDef: addr_last_q
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 31
                    HdlValueInt: 0
    HdlDirection: INTERNAL

INS HdlIdDef@@addr_last_n to objs
HdlIdDef: addr_last_n
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 31
                    HdlValueInt: 0
    HdlDirection: INTERNAL


CommitId: b22a6a10defc7bad31dda7d8a33c7145d1a79a3b
Add `mtval` CSR
--- a/rtl/ibex_load_store_unit.sv
+++ b/rtl/ibex_load_store_unit.sv
@@ -85,7 +88,6 @@ module ibex_load_store_unit (
   logic         misaligned_st;   // high if we are currently performing the second part
                                  // of a misaligned store
   logic         data_misaligned, data_misaligned_q;
-  logic         increase_address;
 
   typedef enum logic [2:0]  {
     IDLE, WAIT_GNT_MIS, WAIT_RVALID_MIS, WAIT_GNT, WAIT_RVALID

ParseResult:
DEL HdlIdDef@@increase_address from objs
HdlIdDef: increase_address
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL


CommitId: b22a6a10defc7bad31dda7d8a33c7145d1a79a3b
Add `mtval` CSR
--- a/rtl/ibex_load_store_unit.sv
+++ b/rtl/ibex_load_store_unit.sv
@@ -289,19 +291,26 @@ module ibex_load_store_unit (
     endcase //~case(rdata_type_q)
   end
 
+  // store last output address for mtval + AGU for misaligned transactions
+  // do not update in case of errors, mtval needs the failing address
+  always_comb begin
+    addr_last_n = addr_last_q;
+    if (data_req_o & data_gnt_i & ~(load_err_o | store_err_o)) begin
+      addr_last_n = data_addr_o;
+    end
+  end
+
   always_ff @(posedge clk_i or negedge rst_ni) begin
     if (!rst_ni) begin
       ls_fsm_cs         <= IDLE;
+      addr_last_q       <= '0;
       rdata_q           <= '0;
       data_misaligned_q <= '0;
-      misaligned_addr_o <= 32'b0;
     end else begin
       ls_fsm_cs         <= ls_fsm_ns;
+      addr_last_q       <= addr_last_n;
       if (lsu_update_addr_o) begin
         data_misaligned_q <= data_misaligned;
-        if (increase_address) begin
-          misaligned_addr_o <= data_addr;
-        end
       end
       if (data_rvalid_i && !data_we_q) begin
         // if we have detected a misaligned access, and we are

ParseResult:
INS HdlStmProcess@@ to objs
HdlStmProcess
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: addr_last_n
                    HdlValueId: addr_last_q
            HdlStmIf
                HdlOp: AND
                    list: ops
                        HdlOp: AND
                            list: ops
                                HdlValueId: data_req_o
                                HdlValueId: data_gnt_i
                        HdlOp: NEG
                            list: ops
                                HdlOp: OR
                                    list: ops
                                        HdlValueId: load_err_o
                                        HdlValueId: store_err_o
                HdlStmBlock: SEQ
                    list: body
                        HdlOp: ASSIGN
                            list: ops
                                HdlValueId: addr_last_n
                                HdlValueId: data_addr_o
                list: elifs
    HdlStmProcessTriggerConstrain: COMB

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: addr_last_q

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueId: addr_last_n
    HdlValueId: addr_last_q

MOV HdlStmIf@@ to body
HdlStmIf
    HdlValueId: increase_address
    HdlStmBlock: SEQ
        list: body
            HdlStmAssign
                HdlValueId: data_addr
                HdlValueId: misaligned_addr_o
    list: elifs

UPD HdlStmIf@@ to 
    UPD HdlValueId@@increase_address to lsu_update_addr_o

MOV HdlStmAssign@@ to body
HdlStmAssign
    HdlValueId: data_misaligned
    HdlValueId: data_misaligned_q

DEL HdlStmAssign@@ from body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: misaligned_addr_o

DEL HdlStmAssign@@ from body
HdlStmAssign
    HdlValueId: data_addr
    HdlValueId: misaligned_addr_o

UPD HdlStmIf@@ to 
    DEL HdlValueId@@lsu_update_addr_o from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL list@@elifs from 

DEL HdlStmIf@@ from body


CommitId: b22a6a10defc7bad31dda7d8a33c7145d1a79a3b
Add `mtval` CSR
--- a/rtl/ibex_load_store_unit.sv
+++ b/rtl/ibex_load_store_unit.sv
@@ -333,6 +342,8 @@ module ibex_load_store_unit (
 
   assign misaligned_st = data_misaligned_q;
 
+  assign addr_last_o   = addr_last_q;
+
   // to know what kind of error to signal, we need to know the type of the transaction to which
   // the outsanding rvalid belongs.
   assign load_err_o    = data_err_i & data_rvalid_i & ~data_we_q;

ParseResult:
INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlValueId: addr_last_q
    HdlValueId: addr_last_o


CommitId: b22a6a10defc7bad31dda7d8a33c7145d1a79a3b
Add `mtval` CSR
--- a/rtl/ibex_load_store_unit.sv
+++ b/rtl/ibex_load_store_unit.sv
@@ -347,17 +358,15 @@ module ibex_load_store_unit (
     lsu_update_addr_o = 1'b0;
 
     data_valid_o      = 1'b0;
-    increase_address  = 1'b0;
     data_misaligned_o = 1'b0;
 
     unique case(ls_fsm_cs)
       // starts from not active and stays in IDLE until request was granted
       IDLE: begin
         if (data_req_ex_i) begin
-          data_req_o     = data_req_ex_i;
+          data_req_o = data_req_ex_i;
           if (data_gnt_i) begin
-            lsu_update_addr_o   = 1'b1;
-            increase_address = data_misaligned;
+            lsu_update_addr_o = 1'b1;
             ls_fsm_ns = data_misaligned ? WAIT_RVALID_MIS : WAIT_RVALID;
           end else begin
             ls_fsm_ns = data_misaligned ? WAIT_GNT_MIS    : WAIT_GNT;

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: increase_address
                HdlValueInt: 0

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: increase_address
                HdlValueId: data_misaligned

UPD HdlStmCase@@ls_fsm_cs to ls_fsm_cs
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: increase_address
                HdlValueInt: 0


CommitId: b22a6a10defc7bad31dda7d8a33c7145d1a79a3b
Add `mtval` CSR
--- a/rtl/ibex_load_store_unit.sv
+++ b/rtl/ibex_load_store_unit.sv
@@ -369,15 +378,12 @@ module ibex_load_store_unit (
         data_req_o = 1'b1;
         if (data_gnt_i) begin
           lsu_update_addr_o = 1'b1;
-          increase_address  = data_misaligned;
           ls_fsm_ns = WAIT_RVALID_MIS;
         end
       end // WAIT_GNT_MIS
 
       // wait for rvalid in WB stage and send a new request if there is any
       WAIT_RVALID_MIS: begin
-        //increase_address goes down, we already have the proper address
-        increase_address  = 1'b0;
         //tell the controller to update the address
         data_misaligned_o = 1'b1;
         data_req_o        = 1'b0;
ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: increase_address
                HdlValueInt: 0

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: increase_address
                HdlValueId: data_misaligned

UPD HdlStmCase@@ls_fsm_cs to ls_fsm_cs
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: increase_address
                HdlValueInt: 0


CommitId: b1daf9e44efdf8fc382493b63065c5816fdb7938
Update lowrisc_ip to lowRISC/opentitan@c277e3a8
--- a/vendor/lowrisc_ip/ip/prim_generic/rtl/prim_generic_flash.sv
+++ b/vendor/lowrisc_ip/ip/prim_generic/rtl/prim_generic_flash.sv
@@ -6,19 +6,22 @@
 //
 
 module prim_generic_flash #(
-  parameter int NumBanks      = 2,   // number of banks
-  parameter int InfosPerBank  = 1,   // info pages per bank
-  parameter int PagesPerBank  = 256, // data pages per bank
-  parameter int WordsPerPage  = 256, // words per page
-  parameter int DataWidth     = 32,  // bits per word
-  parameter int MetaDataWidth = 12,  // metadata such as ECC
-  parameter int TestModeWidth = 2
+  parameter int NumBanks       = 2,  // number of banks
+  parameter int InfosPerBank   = 1,  // info pages per bank
+  parameter int InfoTypes      = 1,  // different info types
+  parameter int InfoTypesWidth = 1,  // different info types
+  parameter int PagesPerBank   = 256,// data pages per bank
+  parameter int WordsPerPage   = 256,// words per page
+  parameter int DataWidth      = 32, // bits per word
+  parameter int MetaDataWidth  = 12, // metadata such as ECC
+  parameter int TestModeWidth  = 2
 ) (
   input clk_i,
   input rst_ni,
   input flash_phy_pkg::flash_phy_prim_flash_req_t [NumBanks-1:0] flash_req_i,
   output flash_phy_pkg::flash_phy_prim_flash_rsp_t [NumBanks-1:0] flash_rsp_o,
   output logic [flash_phy_pkg::ProgTypes-1:0] prog_type_avail_o,
+  input init_i,
   output init_busy_o,
   input tck_i,
   input tdi_i,

ParseResult:
INS HdlIdDef@@InfoTypes to params
HdlIdDef: InfoTypes
    HdlValueId: int
    HdlValueInt: 1
    HdlDirection: INTERNAL

INS HdlIdDef@@InfoTypesWidth to params
HdlIdDef: InfoTypesWidth
    HdlValueId: int
    HdlValueInt: 1
    HdlDirection: INTERNAL

INS HdlIdDef@@init_i to ports
HdlIdDef: init_i
    HdlValueId: wire
    HdlDirection: IN


CommitId: b1daf9e44efdf8fc382493b63065c5816fdb7938
Update lowrisc_ip to lowRISC/opentitan@c277e3a8
--- a/vendor/lowrisc_ip/ip/prim_generic/rtl/prim_generic_flash.sv
+++ b/vendor/lowrisc_ip/ip/prim_generic/rtl/prim_generic_flash.sv
@@ -40,8 +43,14 @@ module prim_generic_flash #(
   assign prog_type_avail_o[flash_ctrl_pkg::FlashProgRepair] = 1'b1;
 
   for (genvar bank = 0; bank < NumBanks; bank++) begin : gen_prim_flash_banks
+    logic erase_suspend_req;
+    assign erase_suspend_req = flash_req_i[bank].erase_suspend_req &
+                               (flash_req_i[bank].pg_erase_req | flash_req_i[bank].bk_erase_req);
+
     prim_generic_flash_bank #(
       .InfosPerBank(InfosPerBank),
+      .InfoTypes(InfoTypes),
+      .InfoTypesWidth(InfoTypesWidth),
       .PagesPerBank(PagesPerBank),
       .WordsPerPage(WordsPerPage),
       .DataWidth(DataWidth),

ParseResult:
INS HdlIdDef@@erase_suspend_req to body
HdlIdDef: erase_suspend_req
    HdlDirection: INTERNAL

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlOp: AND
        list: ops
            HdlOp: DOT
                list: ops
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: flash_req_i
                            HdlValueId: bank
                    HdlValueId: erase_suspend_req
            HdlOp: OR
                list: ops
                    HdlOp: DOT
                        list: ops
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: flash_req_i
                                    HdlValueId: bank
                            HdlValueId: pg_erase_req
                    HdlOp: DOT
                        list: ops
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: flash_req_i
                                    HdlValueId: bank
                            HdlValueId: bk_erase_req
    HdlValueId: erase_suspend_req


CommitId: 4b01580a7bd88d5293aba786bce1724536a823fa
[rtl] prefetch buffer performance fix
--- a/rtl/ibex_prefetch_buffer.sv
+++ b/rtl/ibex_prefetch_buffer.sv
@@ -51,6 +51,7 @@ module ibex_prefetch_buffer (
   logic [NUM_REQS-1:0] rdata_outstanding_n, rdata_outstanding_s, rdata_outstanding_q;
   logic [NUM_REQS-1:0] branch_discard_n, branch_discard_s, branch_discard_q;
   logic [NUM_REQS-1:0] rdata_pmp_err_n, rdata_pmp_err_s, rdata_pmp_err_q;
+  logic [NUM_REQS-1:0] rdata_outstanding_rev;
 
   logic [31:0]         stored_addr_d, stored_addr_q;
   logic                stored_addr_en;

ParseResult:
INS HdlIdDef@@rdata_outstanding_rev to objs
HdlIdDef: rdata_outstanding_rev
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlOp: SUB
                        list: ops
                            HdlValueId: NUM_REQS
                            HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: INTERNAL


CommitId: 4b01580a7bd88d5293aba786bce1724536a823fa
[rtl] prefetch buffer performance fix
--- a/rtl/ibex_prefetch_buffer.sv
+++ b/rtl/ibex_prefetch_buffer.sv
@@ -62,6 +63,7 @@ module ibex_prefetch_buffer (
   logic                fifo_valid;
   logic                fifo_ready;
   logic                fifo_clear;
+  logic [NUM_REQS-1:0] fifo_busy;
 
   ////////////////////////////
   // Prefetch buffer status //

ParseResult:
INS HdlIdDef@@fifo_busy to objs
HdlIdDef: fifo_busy
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlOp: SUB
                        list: ops
                            HdlValueId: NUM_REQS
                            HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: INTERNAL


CommitId: 4b01580a7bd88d5293aba786bce1724536a823fa
[rtl] prefetch buffer performance fix
--- a/rtl/ibex_prefetch_buffer.sv
+++ b/rtl/ibex_prefetch_buffer.sv
@@ -82,6 +84,16 @@ module ibex_prefetch_buffer (
   // altered the FENCE.I implementation may require changes.
   assign fifo_clear = branch_i;
 
+  // Reversed version of rdata_outstanding_q which can be overlaid with fifo fill state
+  for (genvar i = 0; i < NUM_REQS; i++) begin : gen_rd_rev
+    assign rdata_outstanding_rev[i] = rdata_outstanding_q[NUM_REQS-1-i];
+  end
+
+  // The fifo is ready to accept a new request if it is not full - including space reserved for
+  // requests already outstanding.
+  // Overlay the fifo fill state with the outstanding requests to see if there is space.
+  assign fifo_ready = ~&(fifo_busy | rdata_outstanding_rev);
+
   ibex_fetch_fifo #(
     .NUM_REQS (NUM_REQS)
   ) fifo_i (

ParseResult:
INS HdlStmFor@@ to objs
HdlStmFor
    HdlStmBlock: SEQ
        list: body
            HdlIdDef: i
                HdlValueInt: 0
                HdlDirection: INTERNAL
    HdlOp: LT
        list: ops
            HdlValueId: i
            HdlValueId: NUM_REQS
    HdlOp: INCR_POST
        list: ops
            HdlValueId: i
    HdlStmBlock: SEQ
        list: body
            HdlStmAssign
                HdlOp: INDEX
                    list: ops
                        HdlValueId: rdata_outstanding_q
                        HdlOp: SUB
                            list: ops
                                HdlOp: SUB
                                    list: ops
                                        HdlValueId: NUM_REQS
                                        HdlValueInt: 1
                                HdlValueId: i
                HdlOp: INDEX
                    list: ops
                        HdlValueId: rdata_outstanding_rev
                        HdlValueId: i

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: NAND_UNARY
        list: ops
            HdlOp: OR
                list: ops
                    HdlValueId: fifo_busy
                    HdlValueId: rdata_outstanding_rev
    HdlValueId: fifo_ready


CommitId: b22a6a10defc7bad31dda7d8a33c7145d1a79a3b
Add `mtval` CSR
--- a/rtl/ibex_id_stage.sv
+++ b/rtl/ibex_id_stage.sv
@@ -92,12 +93,13 @@ module ibex_id_stage #(
     // CSR
     output logic                      csr_access_ex_o,
     output ibex_defines::csr_op_e     csr_op_ex_o,
-    output ibex_defines::exc_cause_e  csr_cause_o,
     output logic                      csr_save_if_o,
     output logic                      csr_save_id_o,
     output logic                      csr_restore_mret_id_o,
     output logic                      csr_restore_dret_id_o,
     output logic                      csr_save_cause_o,
+    output ibex_defines::exc_cause_e  csr_cause_o,
+    output logic [31:0]               csr_mtval_o,
     input  logic                      illegal_csr_insn_i,
 
     // Interface to load store unit

ParseResult:
INS HdlIdDef@@csr_mtval_o to ports
HdlIdDef: csr_mtval_o
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 31
                    HdlValueInt: 0
    HdlDirection: OUT


CommitId: b22a6a10defc7bad31dda7d8a33c7145d1a79a3b
Add `mtval` CSR
--- a/rtl/ibex_id_stage.sv
+++ b/rtl/ibex_id_stage.sv
@@ -300,7 +302,7 @@ module ibex_id_stage #(
   always_comb begin : alu_operand_a_mux
     unique case (alu_op_a_mux_sel)
       OP_A_REG_A:        alu_operand_a = regfile_data_ra_id;
-      OP_A_FWD:          alu_operand_a = misaligned_addr_i;
+      OP_A_FWD:          alu_operand_a = lsu_addr_last_i;
       OP_A_CURRPC:       alu_operand_a = pc_id_i;
       OP_A_IMM:          alu_operand_a = imm_a;
       default:           alu_operand_a = 'X;

ParseResult:
UPD HdlStmCase@@imm_b_mux_sel to imm_b_mux_sel
    UPD HdlOp@@ASSIGN to ASSIGN
        UPD HdlOp@@TERNARY to TERNARY
            UPD HdlValueId@@is_compressed_i to instr_is_compressed_i


CommitId: 8e452c33951a1815298210a2f69f502e512cc6f2
Fixed external interrupt request during invalid instruction
--- a/controller.sv
+++ b/controller.sv
@@ -71,10 +71,12 @@ module riscv_controller
 
   // Exception Controller Signals
   input  logic        exc_req_i,
+  input  logic        ext_req_i,
   output logic        exc_ack_o,
 
   output logic        exc_save_if_o,
   output logic        exc_save_id_o,
+  output logic        exc_save_takenbranch_o,
   output logic        exc_restore_id_o,
 
   // Debug Signals

ParseResult:
INS HdlIdDef@@ext_req_i to ports
HdlIdDef: ext_req_i
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: IN

INS HdlIdDef@@exc_save_takenbranch_o to ports
HdlIdDef: exc_save_takenbranch_o
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: OUT


CommitId: 8e452c33951a1815298210a2f69f502e512cc6f2
Fixed external interrupt request during invalid instruction
--- a/controller.sv
+++ b/controller.sv
@@ -170,6 +172,7 @@ module riscv_controller
     exc_ack_o        = 1'b0;
     exc_save_if_o    = 1'b0;
     exc_save_id_o    = 1'b0;
+    exc_save_takenbranch_o = 1'b0;
     exc_restore_id_o = 1'b0;
 
     pc_mux_o         = PC_BOOT;

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: exc_save_takenbranch_o
                HdlValueInt: 0


CommitId: 8e452c33951a1815298210a2f69f502e512cc6f2
Fixed external interrupt request during invalid instruction
--- a/controller.sv
+++ b/controller.sv
@@ -347,6 +350,20 @@ module riscv_controller
           end
         end
 
+        if (~instr_valid_i && (~branch_taken_ex_i)) begin
+            if (ext_req_i) begin
+              pc_mux_o      = PC_EXCEPTION;
+              pc_set_o      = 1'b1;
+              exc_ack_o     = 1'b1;
+              halt_id_o     = 1'b1; // we don't want to propagate this instruction to EX
+              exc_save_if_o = 1'b1;
+              // we don't have to change our current state here as the prefetch
+              // buffer is automatically invalidated, thus the next instruction
+              // that is served to the ID stage is the one of the jump to the
+              // exception handler
+            end
+        end
+
         // TODO: make sure this is not done multiple times in a row!!!
         //       maybe with an assertion?
         // handle conditional branches

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: exc_save_takenbranch_o
                HdlValueInt: 0

INS HdlStmIf@@ to body
HdlStmIf
    HdlOp: AND_LOG
        list: ops
            HdlOp: NEG
                list: ops
                    HdlValueId: instr_valid_i
            HdlOp: NEG
                list: ops
                    HdlValueId: branch_taken_ex_i
    HdlStmBlock: SEQ
        list: body
            HdlStmIf
                HdlValueId: ext_req_i
                HdlStmBlock: SEQ
                    list: body
                        HdlOp: ASSIGN
                            list: ops
                                HdlValueId: pc_mux_o
                                HdlValueId: PC_EXCEPTION
                        HdlOp: ASSIGN
                            list: ops
                                HdlValueId: pc_set_o
                                HdlValueInt: 1
                        HdlOp: ASSIGN
                            list: ops
                                HdlValueId: exc_ack_o
                                HdlValueInt: 1
                        HdlOp: ASSIGN
                            list: ops
                                HdlValueId: halt_id_o
                                HdlValueInt: 1
                        HdlOp: ASSIGN
                            list: ops
                                HdlValueId: exc_save_if_o
                                HdlValueInt: 1
                list: elifs
    list: elifs


CommitId: 8e452c33951a1815298210a2f69f502e512cc6f2
Fixed external interrupt request during invalid instruction
--- a/controller.sv
+++ b/controller.sv
@@ -360,6 +377,17 @@ module riscv_controller
           // if we want to debug, flush the pipeline
           // the current_pc_if will take the value of the next instruction to
           // be executed (NPC)
+          if (ext_req_i) begin
+            pc_mux_o      = PC_EXCEPTION;
+            pc_set_o      = 1'b1;
+            exc_ack_o     = 1'b1;
+            halt_id_o     = 1'b1; // we don't want to propagate this instruction to EX
+            exc_save_takenbranch_o = 1'b1;
+            // we don't have to change our current state here as the prefetch
+            // buffer is automatically invalidated, thus the next instruction
+            // that is served to the ID stage is the one of the jump to the
+            // exception handler
+          end
           if (dbg_req_i)
           begin
             ctrl_fsm_ns = DBG_SIGNAL;

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: exc_save_takenbranch_o
                HdlValueInt: 0

INS HdlStmIf@@ to body
HdlStmIf
    HdlValueId: ext_req_i
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: pc_mux_o
                    HdlValueId: PC_EXCEPTION
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: pc_set_o
                    HdlValueInt: 1
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: exc_ack_o
                    HdlValueInt: 1
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: halt_id_o
                    HdlValueInt: 1
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: exc_save_takenbranch_o
                    HdlValueInt: 1
    list: elifs


CommitId: af8343d3668c3a5a964a1f22107241d8528b1b9d
Fix hardware loops, reimplement prefetch buffer for pulp
--- a/prefetch_buffer.sv
+++ b/prefetch_buffer.sv
@@ -32,9 +32,8 @@ module riscv_fetch_fifo
     input  logic        rst_n,
 
     // control signals
-    input  logic        clear_i,          // clears the contents of the fifo
-
-    input  logic        unaligned_i,      // is the current output rdata unaligned
+    input  logic        branch_i,          // clears the contents of the fifo
+    input  logic        hwloop_i,          // tries to insert an entry above the first one
 
     // input port
     input  logic        in_addr_valid_i,

ParseResult:
UPD HdlIdDef@@clear_i to branch_i

UPD HdlIdDef@@unaligned_i to hwloop_i


CommitId: af8343d3668c3a5a964a1f22107241d8528b1b9d
Fix hardware loops, reimplement prefetch buffer for pulp
--- a/prefetch_buffer.sv
+++ b/prefetch_buffer.sv
@@ -51,11 +50,7 @@ module riscv_fetch_fifo
     input  logic        out_ready_i,
     output logic [31:0] out_rdata_o,
     output logic [31:0] out_addr_o,
-
-    output logic        out_unaligned_valid_o,
-    output logic [31:0] out_unaligned_rdata_o,
-
-    output logic        out_is_unaligned_o
+    output logic        out_is_hwlp_o
   );
 
   localparam DEPTH = 3; // must be 2 or greater

ParseResult:
UPD HdlIdDef@@out_is_unaligned_o to out_is_hwlp_o

UPD HdlIdDef@@out_unaligned_rdata_o to hwloop_target_i

MOV HdlIdDef@@out_unaligned_rdata_o to ports
HdlIdDef: out_unaligned_rdata_o
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 31
                    HdlValueInt: 0
    HdlDirection: OUT

UPD HdlIdDef@@out_unaligned_valid_o to is_hwlp_o

MOV HdlIdDef@@out_unaligned_valid_o to ports
HdlIdDef: out_unaligned_valid_o
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: OUT

UPD HdlIdDef@@out_unaligned_rdata_o to out_unaligned_rdata_o
    UPD HdlDirection@@OUT to IN


CommitId: af8343d3668c3a5a964a1f22107241d8528b1b9d
Fix hardware loops, reimplement prefetch buffer for pulp
--- a/prefetch_buffer.sv
+++ b/prefetch_buffer.sv
@@ -91,7 +118,7 @@ module riscv_fetch_fifo
   //////////////////////////////////////////////////////////////////////////////
 
   // we accept addresses as long as our fifo is not full or we are cleared
-  assign in_addr_ready_o = clear_i || (~addr_valid_Q[DEPTH-1]);
+  assign in_addr_ready_o = branch_i || (~addr_valid_Q[DEPTH-1]);
 
   // we accept data as long as our fifo is not full
   // we don't care about clear here as the data will be received one cycle

ParseResult:
UPD HdlStmProcess@@ to 
    INS HdlStmBlock@@SEQ to 
    INS HdlStmProcessTriggerConstrain@@COMB to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmAssign@@ to 
    UPD HdlOp@@OR_LOG to OR_LOG
        UPD HdlValueId@@clear_i to branch_i


CommitId: af8343d3668c3a5a964a1f22107241d8528b1b9d
Fix hardware loops, reimplement prefetch buffer for pulp
--- a/prefetch_buffer.sv
+++ b/prefetch_buffer.sv
@@ -111,6 +138,9 @@ module riscv_fetch_fifo
     end
   end
 
+  // accept hwloop input as long as our second entry is not already one
+  assign hwlp_inbound = hwloop_i & (~is_hwlp_Q[1]);
+
   //////////////////////////////////////////////////////////////////////////////
   // FIFO management
   //////////////////////////////////////////////////////////////////////////////

ParseResult:
INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: AND
        list: ops
            HdlValueId: hwloop_i
            HdlOp: NEG
                list: ops
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: is_hwlp_Q
                            HdlValueInt: 1
    HdlValueId: hwlp_inbound

UPD HdlStmProcess@@ to 
    INS HdlStmBlock@@SEQ to 
    INS HdlStmProcessTriggerConstrain@@COMB to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmIf@@ to 
    INS HdlOp@@AND_LOG to 
    HdlOp: AND_LOG
        list: ops
            HdlOp: INDEX
                list: ops
                    HdlValueId: out_addr_o
                    HdlValueInt: 1
            HdlOp: NEG
                list: ops
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: is_hwlp_Q
                            HdlValueInt: 1
    INS HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: out_rdata_o
                    HdlValueId: rdata_unaligned
            HdlStmIf
                HdlValueId: unaligned_is_compressed
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: out_valid_o
                        HdlValueInt: 1
                list: elifs
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: out_valid_o
                        HdlValueId: valid_unaligned
    INS list@@elifs to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ


CommitId: af8343d3668c3a5a964a1f22107241d8528b1b9d
Fix hardware loops, reimplement prefetch buffer for pulp
--- a/prefetch_buffer.sv
+++ b/prefetch_buffer.sv
@@ -120,6 +150,7 @@ module riscv_fetch_fifo
   begin
     addr_int        = addr_Q;
     addr_valid_int  = addr_valid_Q;
+    is_hwlp_int     = is_hwlp_Q;
 
     if (in_addr_valid_i && in_addr_ready_o) begin
       for(j = 0; j < DEPTH; j++) begin

ParseResult:
UPD HdlStmAssign@@ to 
    INS HdlOp@@INDEX to 
    UPD HdlOp@@INDEX to INDEX
        INS list@@ops to INDEX
        INS HdlValueInt@@0 to ops


CommitId: af8343d3668c3a5a964a1f22107241d8528b1b9d
Fix hardware loops, reimplement prefetch buffer for pulp
--- a/prefetch_buffer.sv
+++ b/prefetch_buffer.sv
@@ -131,6 +162,14 @@ module riscv_fetch_fifo
         end
       end
     end
+
+    // on a hardware loop invalidate everything starting from the second entry
+    if (hwlp_inbound) begin
+      addr_int[1]               = in_addr_i;
+      addr_valid_int[1]         = 1'b1;
+      addr_valid_int[2:DEPTH-1] = '0;
+      is_hwlp_int[1]            = 1'b1;
+    end
   end
 
   int k;

ParseResult:
INS HdlStmIf@@ to body
HdlStmIf
    HdlValueId: hwlp_inbound
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: addr_int
                            HdlValueInt: 1
                    HdlValueId: in_addr_i
            HdlOp: ASSIGN
                list: ops
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: addr_valid_int
                            HdlValueInt: 1
                    HdlValueInt: 1
            HdlOp: ASSIGN
                list: ops
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: addr_valid_int
                            HdlOp: DOWNTO
                                list: ops
                                    HdlValueInt: 2
                                    HdlOp: SUB
                                        list: ops
                                            HdlValueId: DEPTH
                                            HdlValueInt: 1
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: is_hwlp_int
                            HdlValueInt: 1
                    HdlValueInt: 1
    list: elifs


CommitId: af8343d3668c3a5a964a1f22107241d8528b1b9d
Fix hardware loops, reimplement prefetch buffer for pulp
--- a/prefetch_buffer.sv
+++ b/prefetch_buffer.sv
@@ -183,27 +259,27 @@ module riscv_fetch_fifo
   begin
     if(rst_n == 1'b0)
     begin
-      addr_Q         <= '{default: '0};
-      addr_valid_Q   <= '0;
-      rdata_Q        <= '{default: '0};
-      rdata_valid_Q  <= '0;
-      is_unaligned_Q <= 1'b0;
+      addr_Q           <= '{default: '0};
+      addr_valid_Q     <= '0;
+      rdata_Q          <= '{default: '0};
+      rdata_valid_Q    <= '0;
+      is_hwlp_Q        <= '0;
     end
     else
     begin
       // on a clear signal from outside we invalidate the content of the FIFO
       // completely and start from an empty state
-      if (clear_i) begin
-        addr_Q[0]      <= in_addr_i;
-        addr_valid_Q   <= {in_addr_valid_i, {DEPTH-1{1'b0}}};
-        rdata_valid_Q  <= '0;
-        is_unaligned_Q <= 1'b0;
+      if (branch_i) begin
+        addr_Q[0]        <= in_addr_i;
+        addr_valid_Q     <= {in_addr_valid_i, {DEPTH-1{1'b0}}};
+        rdata_valid_Q    <= '0;
+        is_hwlp_Q        <= '0;
       end else begin
-        addr_Q         <= addr_n;
-        addr_valid_Q   <= addr_valid_n;
-        rdata_Q        <= rdata_n;
-        rdata_valid_Q  <= rdata_valid_n;
-        is_unaligned_Q <= is_unaligned_n;
+        addr_Q           <= addr_n;
+        addr_valid_Q     <= addr_valid_n;
+        rdata_Q          <= rdata_n;
+        rdata_valid_Q    <= rdata_valid_n;
+        is_hwlp_Q        <= is_hwlp_n;
       end
     end
   end

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: is_hwlp_int
                HdlValueId: is_hwlp_Q

UPD HdlStmIf@@ to 
    INS HdlValueId@@hwlp_inbound to 
    INS HdlStmBlock@@SEQ to 
    INS list@@elifs to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        UPD HdlOp@@ASSIGN to ASSIGN
            INS list@@ops to ASSIGN
            INS HdlOp@@INDEX to ops
            INS HdlValueId@@out_rdata_o to ops
            UPD HdlOp@@INDEX to INDEX
                INS list@@ops to INDEX
                INS HdlValueInt@@0 to ops

UPD HdlStmAssign@@ to 
    UPD HdlValueId@@is_unaligned_Q to is_hwlp_Q

UPD HdlStmIf@@ to 
    UPD HdlValueId@@clear_i to branch_i

UPD HdlStmAssign@@ to 
    UPD HdlValueId@@is_unaligned_Q to is_hwlp_Q

UPD HdlStmAssign@@ to 
    UPD HdlValueId@@is_unaligned_n to is_hwlp_n
    UPD HdlValueId@@is_unaligned_Q to is_hwlp_Q


CommitId: af8343d3668c3a5a964a1f22107241d8528b1b9d
Fix hardware loops, reimplement prefetch buffer for pulp
--- a/prefetch_buffer.sv
+++ b/prefetch_buffer.sv
@@ -217,15 +293,19 @@ module riscv_prefetch_buffer
   input  logic        clk,
   input  logic        rst_n,
 
-  input  logic        unaligned_i,
   input  logic        req_i,
+
   input  logic        branch_i,
-  input  logic        ready_i,
   input  logic [31:0] addr_i,
 
+  input  logic        hwloop_i,
+  input  logic [31:0] hwloop_target_i,
+
+  input  logic        ready_i,
   output logic        valid_o,
   output logic [31:0] rdata_o,
   output logic [31:0] addr_o,
+  output logic        is_hwlp_o, // is set when the currently served data is from a hwloop
 
   // goes to instruction memory / instruction cache
   output logic        instr_req_o,

ParseResult:
MOV HdlIdDef@@unaligned_i to ports
HdlIdDef: unaligned_i
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: IN

MOV HdlIdDef@@ready_i to ports
HdlIdDef: ready_i
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: IN

UPD HdlIdDef@@unaligned_i to hwloop_i

UPD HdlStmIf@@ to 
    INS HdlStmBlock@@SEQ to 
    INS list@@elifs to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmIf@@ to 
    INS HdlOp@@INDEX to 
    HdlOp: INDEX
        list: ops
            HdlValueId: is_hwlp_int
            HdlValueInt: 1
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS list@@ops to ASSIGN
            list: ops
                HdlValueId: addr_n
                HdlOp: CONCAT
                    list: ops
                        HdlOp: CONCAT
                            list: ops
                                HdlOp: INDEX
                                    list: ops
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: addr_int
                                                HdlValueInt: 1
                                        HdlOp: DOWNTO
                                            list: ops
                                                HdlValueInt: 31
                                                HdlValueInt: 0
                                HdlOp: INDEX
                                    list: ops
                                        HdlValueId: addr_int
                                        HdlOp: DOWNTO
                                            list: ops
                                                HdlValueInt: 2
                                                HdlOp: SUB
                                                    list: ops
                                                        HdlValueId: DEPTH
                                                        HdlValueInt: 1
                        HdlValueInt: 0
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlOp@@CONCAT to ops
            UPD HdlOp@@CONCAT to CONCAT
                INS list@@ops to CONCAT
                INS HdlOp@@INDEX to ops
                HdlOp: INDEX
                    list: ops
                        HdlValueId: is_hwlp_int
                        HdlValueInt: 1


CommitId: af8343d3668c3a5a964a1f22107241d8528b1b9d
Fix hardware loops, reimplement prefetch buffer for pulp
--- a/prefetch_buffer.sv
+++ b/prefetch_buffer.sv
@@ -249,11 +329,6 @@ module riscv_prefetch_buffer
   logic        fifo_rdata_valid;
   logic        fifo_rdata_ready;
 
-  logic        fifo_is_unaligned;
-
-  logic [31:0] rdata, unaligned_rdata;
-  logic        valid, unaligned_valid;
-
 
   //////////////////////////////////////////////////////////////////////////////
   // prefetch buffer status

ParseResult:
MOV HdlIdDef@@rdata to objs
HdlIdDef: rdata
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 31
                    HdlValueInt: 0
    HdlDirection: INTERNAL

UPD HdlIdDef@@unaligned_rdata to rdata_unaligned

MOV HdlIdDef@@unaligned_rdata to objs
HdlIdDef: unaligned_rdata
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 31
                    HdlValueInt: 0
    HdlDirection: INTERNAL

MOV HdlIdDef@@valid to objs
HdlIdDef: valid
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

UPD HdlIdDef@@fifo_is_unaligned to unaligned_is_compressed

MOV HdlIdDef@@fifo_is_unaligned to objs
HdlIdDef: fifo_is_unaligned
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

UPD HdlIdDef@@unaligned_valid to hwlp_inbound

MOV HdlIdDef@@unaligned_valid to objs
HdlIdDef: unaligned_valid
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

UPD HdlStmIf@@ to 
    INS HdlStmBlock@@SEQ to 
    INS list@@elifs to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmIf@@ to 
    INS HdlOp@@INDEX to 
    HdlOp: INDEX
        list: ops
            HdlValueId: is_hwlp_int
            HdlValueInt: 1
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS list@@ops to ASSIGN
            list: ops
                HdlValueId: addr_n
                HdlOp: CONCAT
                    list: ops
                        HdlOp: CONCAT
                            list: ops
                                HdlOp: INDEX
                                    list: ops
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: addr_int
                                                HdlValueInt: 1
                                        HdlOp: DOWNTO
                                            list: ops
                                                HdlValueInt: 31
                                                HdlValueInt: 0
                                HdlOp: INDEX
                                    list: ops
                                        HdlValueId: addr_int
                                        HdlOp: DOWNTO
                                            list: ops
                                                HdlValueInt: 2
                                                HdlOp: SUB
                                                    list: ops
                                                        HdlValueId: DEPTH
                                                        HdlValueInt: 1
                        HdlValueInt: 0
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlOp@@CONCAT to ops
            UPD HdlOp@@CONCAT to CONCAT
                INS list@@ops to CONCAT
                INS HdlOp@@INDEX to ops
                HdlOp: INDEX
                    list: ops
                        HdlValueId: is_hwlp_int
                        HdlValueInt: 1

UPD HdlStmIf@@ to 
    INS HdlOp@@INDEX to 
    HdlOp: INDEX
        list: ops
            HdlOp: INDEX
                list: ops
                    HdlValueId: addr_Q
                    HdlValueInt: 0
            HdlValueInt: 1
    INS HdlStmBlock@@SEQ to 
    INS list@@elifs to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: addr_valid_n
                HdlOp: CONCAT
                    list: ops
                        HdlOp: INDEX
                            list: ops
                                HdlValueId: addr_valid_int
                                HdlOp: DOWNTO
                                    list: ops
                                        HdlValueInt: 1
                                        HdlOp: SUB
                                            list: ops
                                                HdlValueId: DEPTH
                                                HdlValueInt: 1
                        HdlValueInt: 0
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: rdata_n
                HdlOp: CONCAT
                    list: ops
                        HdlOp: INDEX
                            list: ops
                                HdlValueId: rdata_int
                                HdlOp: DOWNTO
                                    list: ops
                                        HdlValueInt: 1
                                        HdlOp: SUB
                                            list: ops
                                                HdlValueId: DEPTH
                                                HdlValueInt: 1
                        HdlValueInt: 0
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: rdata_valid_n
                HdlOp: CONCAT
                    list: ops
                        HdlOp: INDEX
                            list: ops
                                HdlValueId: rdata_valid_int
                                HdlOp: DOWNTO
                                    list: ops
                                        HdlValueInt: 1
                                        HdlOp: SUB
                                            list: ops
                                                HdlValueId: DEPTH
                                                HdlValueInt: 1
                        HdlValueInt: 0
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: is_hwlp_n
                HdlOp: CONCAT
                    list: ops
                        HdlOp: INDEX
                            list: ops
                                HdlValueId: is_hwlp_int
                                HdlValueInt: 1
                        HdlValueInt: 0
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmIf@@ to 
    INS HdlValueId@@aligned_is_compressed to 
    INS HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: addr_n
                    HdlOp: CONCAT
                        list: ops
                            HdlOp: CONCAT
                                list: ops
                                    HdlOp: CONCAT
                                        list: ops
                                            HdlOp: INDEX
                                                list: ops
                                                    HdlOp: INDEX
                                                        list: ops
                                                            HdlValueId: addr_int
                                                            HdlValueInt: 1
                                                    HdlOp: DOWNTO
                                                        list: ops
                                                            HdlValueInt: 31
                                                            HdlValueInt: 2
                                            HdlValueInt: 00
                                    HdlOp: INDEX
                                        list: ops
                                            HdlValueId: addr_int
                                            HdlOp: DOWNTO
                                                list: ops
                                                    HdlValueInt: 2
                                                    HdlOp: SUB
                                                        list: ops
                                                            HdlValueId: DEPTH
                                                            HdlValueInt: 1
                            HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: addr_valid_n
                    HdlOp: CONCAT
                        list: ops
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: addr_valid_int
                                    HdlOp: DOWNTO
                                        list: ops
                                            HdlValueInt: 1
                                            HdlOp: SUB
                                                list: ops
                                                    HdlValueId: DEPTH
                                                    HdlValueInt: 1
                            HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: rdata_n
                    HdlOp: CONCAT
                        list: ops
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: rdata_int
                                    HdlOp: DOWNTO
                                        list: ops
                                            HdlValueInt: 1
                                            HdlOp: SUB
                                                list: ops
                                                    HdlValueId: DEPTH
                                                    HdlValueInt: 1
                            HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: rdata_valid_n
                    HdlOp: CONCAT
                        list: ops
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: rdata_valid_int
                                    HdlOp: DOWNTO
                                        list: ops
                                            HdlValueInt: 1
                                            HdlOp: SUB
                                                list: ops
                                                    HdlValueId: DEPTH
                                                    HdlValueInt: 1
                            HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: is_hwlp_n
                    HdlOp: CONCAT
                        list: ops
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: is_hwlp_int
                                    HdlValueInt: 1
                            HdlValueInt: 0
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS list@@ops to ASSIGN
            INS HdlOp@@INDEX to ops
            INS HdlValueInt@@0 to ops
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlOp@@CONCAT to ops
            UPD HdlOp@@CONCAT to CONCAT
                INS list@@ops to CONCAT
                INS HdlOp@@INDEX to ops
                INS HdlValueInt@@10 to ops
                UPD HdlOp@@INDEX to INDEX
                    INS list@@ops to INDEX
                    INS HdlOp@@INDEX to ops
                    INS HdlOp@@DOWNTO to ops
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 31
                            HdlValueInt: 2
                    UPD HdlOp@@INDEX to INDEX
                        INS list@@ops to INDEX
                        INS HdlValueInt@@0 to ops


CommitId: af8343d3668c3a5a964a1f22107241d8528b1b9d
Fix hardware loops, reimplement prefetch buffer for pulp
--- a/prefetch_buffer.sv
+++ b/prefetch_buffer.sv
@@ -265,7 +340,17 @@ module riscv_prefetch_buffer
   // address selection and increase
   //////////////////////////////////////////////////////////////////////////////
 
-  assign addr_next = (branch_i) ? addr_i : (fifo_last_addr + 32'd4);
+  always_comb
+  begin
+    addr_next = {fifo_last_addr[31:2], 2'b00} + 32'd4;
+
+    if (branch_i) begin
+      addr_next = addr_i;
+    end else begin
+      if (hwloop_i)
+        addr_next = hwloop_target_i;
+    end
+  end
 
 
   //////////////////////////////////////////////////////////////////////////////

ParseResult:
INS HdlStmProcess@@ to objs

UPD HdlStmAssign@@ to 
    UPD HdlOp@@TERNARY to ASSIGN
    MOV HdlOp@@TERNARY to 
    HdlOp: TERNARY
        list: ops
            HdlValueId: branch_i
            HdlValueId: addr_i
            HdlOp: ADD
                list: ops
                    HdlValueId: fifo_last_addr
                    HdlValueInt: 4
    UPD HdlOp@@TERNARY to TERNARY
        UPD HdlValueId@@addr_i to addr_next
        UPD HdlOp@@ADD to ADD
            MOV HdlValueId@@fifo_last_addr to ops
            HdlValueId: fifo_last_addr
        DEL HdlValueId@@branch_i from ops
    MOV HdlValueId@@addr_next to 
    HdlValueId: addr_next

INS HdlStmIf@@ to body

UPD HdlStmIf@@ to 
    INS HdlStmBlock@@SEQ to 
    INS list@@elifs to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmIf@@ to 
    INS HdlOp@@INDEX to 
    HdlOp: INDEX
        list: ops
            HdlValueId: is_hwlp_int
            HdlValueInt: 1
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS list@@ops to ASSIGN
            list: ops
                HdlValueId: addr_n
                HdlOp: CONCAT
                    list: ops
                        HdlOp: CONCAT
                            list: ops
                                HdlOp: INDEX
                                    list: ops
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: addr_int
                                                HdlValueInt: 1
                                        HdlOp: DOWNTO
                                            list: ops
                                                HdlValueInt: 31
                                                HdlValueInt: 0
                                HdlOp: INDEX
                                    list: ops
                                        HdlValueId: addr_int
                                        HdlOp: DOWNTO
                                            list: ops
                                                HdlValueInt: 2
                                                HdlOp: SUB
                                                    list: ops
                                                        HdlValueId: DEPTH
                                                        HdlValueInt: 1
                        HdlValueInt: 0
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlOp@@CONCAT to ops
            UPD HdlOp@@CONCAT to CONCAT
                INS list@@ops to CONCAT
                INS HdlOp@@INDEX to ops
                HdlOp: INDEX
                    list: ops
                        HdlValueId: is_hwlp_int
                        HdlValueInt: 1

UPD HdlStmIf@@ to 
    INS HdlOp@@INDEX to 
    HdlOp: INDEX
        list: ops
            HdlOp: INDEX
                list: ops
                    HdlValueId: addr_Q
                    HdlValueInt: 0
            HdlValueInt: 1
    INS HdlStmBlock@@SEQ to 
    INS list@@elifs to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: addr_valid_n
                HdlOp: CONCAT
                    list: ops
                        HdlOp: INDEX
                            list: ops
                                HdlValueId: addr_valid_int
                                HdlOp: DOWNTO
                                    list: ops
                                        HdlValueInt: 1
                                        HdlOp: SUB
                                            list: ops
                                                HdlValueId: DEPTH
                                                HdlValueInt: 1
                        HdlValueInt: 0
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: rdata_n
                HdlOp: CONCAT
                    list: ops
                        HdlOp: INDEX
                            list: ops
                                HdlValueId: rdata_int
                                HdlOp: DOWNTO
                                    list: ops
                                        HdlValueInt: 1
                                        HdlOp: SUB
                                            list: ops
                                                HdlValueId: DEPTH
                                                HdlValueInt: 1
                        HdlValueInt: 0
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: rdata_valid_n
                HdlOp: CONCAT
                    list: ops
                        HdlOp: INDEX
                            list: ops
                                HdlValueId: rdata_valid_int
                                HdlOp: DOWNTO
                                    list: ops
                                        HdlValueInt: 1
                                        HdlOp: SUB
                                            list: ops
                                                HdlValueId: DEPTH
                                                HdlValueInt: 1
                        HdlValueInt: 0
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: is_hwlp_n
                HdlOp: CONCAT
                    list: ops
                        HdlOp: INDEX
                            list: ops
                                HdlValueId: is_hwlp_int
                                HdlValueInt: 1
                        HdlValueInt: 0
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmIf@@ to 
    INS HdlValueId@@aligned_is_compressed to 
    INS HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: addr_n
                    HdlOp: CONCAT
                        list: ops
                            HdlOp: CONCAT
                                list: ops
                                    HdlOp: CONCAT
                                        list: ops
                                            HdlOp: INDEX
                                                list: ops
                                                    HdlOp: INDEX
                                                        list: ops
                                                            HdlValueId: addr_int
                                                            HdlValueInt: 1
                                                    HdlOp: DOWNTO
                                                        list: ops
                                                            HdlValueInt: 31
                                                            HdlValueInt: 2
                                            HdlValueInt: 00
                                    HdlOp: INDEX
                                        list: ops
                                            HdlValueId: addr_int
                                            HdlOp: DOWNTO
                                                list: ops
                                                    HdlValueInt: 2
                                                    HdlOp: SUB
                                                        list: ops
                                                            HdlValueId: DEPTH
                                                            HdlValueInt: 1
                            HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: addr_valid_n
                    HdlOp: CONCAT
                        list: ops
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: addr_valid_int
                                    HdlOp: DOWNTO
                                        list: ops
                                            HdlValueInt: 1
                                            HdlOp: SUB
                                                list: ops
                                                    HdlValueId: DEPTH
                                                    HdlValueInt: 1
                            HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: rdata_n
                    HdlOp: CONCAT
                        list: ops
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: rdata_int
                                    HdlOp: DOWNTO
                                        list: ops
                                            HdlValueInt: 1
                                            HdlOp: SUB
                                                list: ops
                                                    HdlValueId: DEPTH
                                                    HdlValueInt: 1
                            HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: rdata_valid_n
                    HdlOp: CONCAT
                        list: ops
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: rdata_valid_int
                                    HdlOp: DOWNTO
                                        list: ops
                                            HdlValueInt: 1
                                            HdlOp: SUB
                                                list: ops
                                                    HdlValueId: DEPTH
                                                    HdlValueInt: 1
                            HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: is_hwlp_n
                    HdlOp: CONCAT
                        list: ops
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: is_hwlp_int
                                    HdlValueInt: 1
                            HdlValueInt: 0
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS list@@ops to ASSIGN
            INS HdlOp@@INDEX to ops
            INS HdlValueInt@@0 to ops
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlOp@@CONCAT to ops
            UPD HdlOp@@CONCAT to CONCAT
                INS list@@ops to CONCAT
                INS HdlOp@@INDEX to ops
                INS HdlValueInt@@10 to ops
                UPD HdlOp@@INDEX to INDEX
                    INS list@@ops to INDEX
                    INS HdlOp@@INDEX to ops
                    INS HdlOp@@DOWNTO to ops
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 31
                            HdlValueInt: 2
                    UPD HdlOp@@INDEX to INDEX
                        INS list@@ops to INDEX
                        INS HdlValueInt@@0 to ops

DEL HdlStmAssign@@ from objs


CommitId: af8343d3668c3a5a964a1f22107241d8528b1b9d
Fix hardware loops, reimplement prefetch buffer for pulp
--- a/prefetch_buffer.sv
+++ b/prefetch_buffer.sv
@@ -291,24 +375,13 @@ module riscv_prefetch_buffer
     .in_rdata_ready_o      ( fifo_rdata_ready  ),
     .in_rdata_i            ( instr_rdata_i     ),
 
-    .out_valid_o           ( valid             ),
+    .out_valid_o           ( valid_o           ),
     .out_ready_i           ( ready_i           ),
-    .out_rdata_o           ( rdata             ),
+    .out_rdata_o           ( rdata_o           ),
     .out_addr_o            ( addr_o            ),
-
-    .out_unaligned_valid_o ( unaligned_valid   ),
-    .out_unaligned_rdata_o ( unaligned_rdata   ),
-
-    .out_is_unaligned_o    ( fifo_is_unaligned )
+    .out_is_hwlp_o         ( is_hwlp_o         )
   );
 
-  //////////////////////////////////////////////////////////////////////////////
-  // instruction aligner (if unaligned)
-  //////////////////////////////////////////////////////////////////////////////
-
-  assign rdata_o = (unaligned_i && (~fifo_is_unaligned)) ? unaligned_rdata : rdata;
-  assign valid_o = (unaligned_i && (~fifo_is_unaligned)) ? unaligned_valid : valid;
-
 
   //////////////////////////////////////////////////////////////////////////////
   // instruction fetch FSM
ParseResult:
DEL HdlStmAssign@@ from objs
HdlStmAssign
    HdlOp: TERNARY
        list: ops
            HdlOp: AND_LOG
                list: ops
                    HdlValueId: unaligned_i
                    HdlOp: NEG
                        list: ops
                            HdlValueId: fifo_is_unaligned
            HdlValueId: unaligned_rdata
            HdlValueId: rdata
    HdlValueId: rdata_o

DEL HdlStmAssign@@ from objs
HdlStmAssign
    HdlOp: TERNARY
        list: ops
            HdlOp: AND_LOG
                list: ops
                    HdlValueId: unaligned_i
                    HdlOp: NEG
                        list: ops
                            HdlValueId: fifo_is_unaligned
            HdlValueId: unaligned_valid
            HdlValueId: valid
    HdlValueId: valid_o


CommitId: b1daf9e44efdf8fc382493b63065c5816fdb7938
Update lowrisc_ip to lowRISC/opentitan@c277e3a8
--- a/vendor/lowrisc_ip/ip/prim/rtl/prim_esc_receiver.sv
+++ b/vendor/lowrisc_ip/ip/prim/rtl/prim_esc_receiver.sv
@@ -92,8 +102,8 @@ module prim_esc_receiver
       // we got an escalation signal (pings cannot occur back to back)
       PingResp: begin
         state_d = Idle;
-        resp_pd = 1'b1;
-        resp_nd = 1'b0;
+        resp_p  = 1'b1;
+        resp_n  = 1'b0;
         if (esc_level) begin
           state_d  = EscResp;
           esc_en_o = 1'b1;

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@resp_pd to resp_p
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@resp_nd to resp_n


CommitId: b1daf9e44efdf8fc382493b63065c5816fdb7938
Update lowrisc_ip to lowRISC/opentitan@c277e3a8
--- a/vendor/lowrisc_ip/ip/prim/rtl/prim_esc_receiver.sv
+++ b/vendor/lowrisc_ip/ip/prim/rtl/prim_esc_receiver.sv
@@ -105,8 +115,8 @@ module prim_esc_receiver
         state_d = Idle;
         if (esc_level) begin
           state_d  = EscResp;
-          resp_pd  = ~resp_pq;
-          resp_nd  = resp_pq;
+          resp_p   = ~resp_pq;
+          resp_n   = resp_pq;
           esc_en_o = 1'b1;
         end
       end

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@resp_pd to resp_p
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@resp_nd to resp_n

UPD HdlStmCase@@state_q to state_q
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@resp_pd to resp_p
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@resp_nd to resp_n

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@resp_pd to resp_p
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@resp_nd to resp_n


CommitId: b1daf9e44efdf8fc382493b63065c5816fdb7938
Update lowrisc_ip to lowRISC/opentitan@c277e3a8
--- a/vendor/lowrisc_ip/ip/prim/rtl/prim_esc_receiver.sv
+++ b/vendor/lowrisc_ip/ip/prim/rtl/prim_esc_receiver.sv
@@ -119,8 +129,8 @@ module prim_esc_receiver
         state_d = Idle;
         if (sigint_detected) begin
           state_d = SigInt;
-          resp_pd = ~resp_pq;
-          resp_nd = ~resp_pq;
+          resp_p  = ~resp_pq;
+          resp_n  = ~resp_pq;
         end
       end
       default : state_d = Idle;

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@resp_pd to resp_p
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@resp_nd to resp_n

UPD HdlStmCase@@state_q to state_q
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@resp_pd to resp_p
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@resp_nd to resp_n


CommitId: b1daf9e44efdf8fc382493b63065c5816fdb7938
Update lowrisc_ip to lowRISC/opentitan@c277e3a8
--- a/vendor/lowrisc_ip/ip/prim/rtl/prim_esc_receiver.sv
+++ b/vendor/lowrisc_ip/ip/prim/rtl/prim_esc_receiver.sv
@@ -129,8 +139,8 @@ module prim_esc_receiver
     // bail out if a signal integrity issue has been detected
     if (sigint_detected && (state_q != SigInt)) begin
       state_d  = SigInt;
-      resp_pd  = 1'b0;
-      resp_nd  = 1'b0;
+      resp_p   = 1'b0;
+      resp_n   = 1'b0;
     end
   end
 
ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@resp_pd to resp_p
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@resp_nd to resp_n

UPD HdlStmCase@@state_q to state_q
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@resp_pd to resp_p
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@resp_nd to resp_n


CommitId: 088cd11593c9c3e623ec445c43dd19efcd7178a8
[dbg] Add minimal hardware breakpoint support
--- a/rtl/ibex_controller.sv
+++ b/rtl/ibex_controller.sv
@@ -68,6 +68,7 @@ module ibex_controller (
     input  logic                  debug_single_step_i,
     input  logic                  debug_ebreakm_i,
     input  logic                  debug_ebreaku_i,
+    input  logic                  trigger_match_i,
 
     output logic                  csr_save_if_o,
     output logic                  csr_save_id_o,

ParseResult:
INS HdlIdDef@@trigger_match_i to ports
HdlIdDef: trigger_match_i
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: IN


CommitId: 088cd11593c9c3e623ec445c43dd19efcd7178a8
[dbg] Add minimal hardware breakpoint support
--- a/rtl/ibex_controller.sv
+++ b/rtl/ibex_controller.sv
@@ -197,7 +198,9 @@ module ibex_controller (
   // instruction valid otherwise the core will immediately enter debug mode
   // due to a recently flushed IF (or a delay in an instruction returning from
   // memory) before it has had anything to single step.
-  assign enter_debug_mode = (debug_req_i | (debug_single_step_i & instr_valid_i)) & ~debug_mode_q;
+  // Also enter debug mode on a trigger match (hardware breakpoint)
+  assign enter_debug_mode = (debug_req_i | (debug_single_step_i & instr_valid_i) |
+                             trigger_match_i) & ~debug_mode_q;
 
   // Set when an ebreak should enter debug mode rather than jump to exception
   // handler

ParseResult:
UPD HdlStmAssign@@ to 
    UPD HdlOp@@AND to AND
        INS HdlOp@@OR to ops
        UPD HdlOp@@OR to OR
            INS list@@ops to OR
            INS HdlValueId@@trigger_match_i to ops

UPD HdlStmAssign@@ to 
    UPD HdlOp@@AND to AND
        MOV HdlOp@@OR to ops
        HdlOp: OR
            list: ops
                HdlValueId: debug_req_i
                HdlOp: AND
                    list: ops
                        HdlValueId: debug_single_step_i
                        HdlValueId: instr_valid_i


CommitId: 088cd11593c9c3e623ec445c43dd19efcd7178a8
[dbg] Add minimal hardware breakpoint support
--- a/rtl/ibex_controller.sv
+++ b/rtl/ibex_controller.sv
@@ -420,7 +423,7 @@ module ibex_controller (
       DBG_TAKEN_IF: begin
         // enter debug mode and save PC in IF to dpc
         // jump to debug exception handler in debug memory
-        if (debug_single_step_i || debug_req_i) begin
+        if (debug_single_step_i || debug_req_i || trigger_match_i) begin
           flush_id         = 1'b1;
           pc_mux_o         = PC_EXC;
           pc_set_o         = 1'b1;

ParseResult:
UPD HdlStmIf@@ to 
    MOV HdlOp@@OR_LOG to 
    HdlOp: OR_LOG
        list: ops
            HdlValueId: debug_single_step_i
            HdlValueId: debug_req_i


CommitId: 088cd11593c9c3e623ec445c43dd19efcd7178a8
[dbg] Add minimal hardware breakpoint support
--- a/rtl/ibex_controller.sv
+++ b/rtl/ibex_controller.sv
@@ -430,7 +433,9 @@ module ibex_controller (
           debug_csr_save_o = 1'b1;
 
           csr_save_cause_o = 1'b1;
-          if (debug_single_step_i) begin
+          if (trigger_match_i) begin
+            debug_cause_o = DBG_CAUSE_TRIGGER;
+          end else if (debug_single_step_i) begin
             debug_cause_o = DBG_CAUSE_STEP;
           end else begin
             debug_cause_o = DBG_CAUSE_HALTREQ;
ParseResult:
UPD HdlStmIf@@ to 
    INS HdlOp@@OR_LOG to 
    UPD HdlOp@@OR_LOG to OR_LOG
        INS list@@ops to OR_LOG
        INS HdlValueId@@trigger_match_i to ops

UPD HdlStmIf@@ to 
    MOV HdlOp@@OR_LOG to 
    HdlOp: OR_LOG
        list: ops
            HdlValueId: debug_single_step_i
            HdlValueId: debug_req_i

UPD HdlStmIf@@ to 
    UPD HdlValueId@@debug_single_step_i to trigger_match_i
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: debug_cause_o
                    HdlValueId: DBG_CAUSE_STEP


CommitId: 9b0d78cf97fd4bd22db8b2479f30ed135f761a13
[rtl] Fix NAPOT address matching
--- a/rtl/ibex_pmp.sv
+++ b/rtl/ibex_pmp.sv
@@ -55,8 +55,8 @@ module ibex_pmp #(
     end
     // Address mask for NA matching
     for (genvar b = PMPGranularity+2; b < 34; b++) begin : g_bitmask
-      if (b == PMPGranularity+2) begin : g_bit0
-        // Always mask bit (G+2) for NAPOT
+      if (b == 2) begin : g_bit0
+        // Always mask bit 2 for NAPOT
         assign region_addr_mask[r][b] = (csr_pmp_cfg_i[r].mode != PMP_MODE_NAPOT);
       end else begin : g_others
         // We will mask this bit if it is within the programmed granule

ParseResult:
UPD HdlStmIf@@ to 
    UPD HdlOp@@EQ to EQ
        UPD HdlOp@@ADD to ADD
            MOV HdlValueInt@@2 to ops
            HdlValueInt: 2
            DEL HdlValueId@@PMPGranularity from ops
            DEL list@@ops from ADD
        DEL HdlOp@@ADD from ops


CommitId: 9b0d78cf97fd4bd22db8b2479f30ed135f761a13
[rtl] Fix NAPOT address matching
--- a/rtl/ibex_pmp.sv
+++ b/rtl/ibex_pmp.sv
@@ -65,7 +65,7 @@ module ibex_pmp #(
         //                  | This bit pos is the top of the mask, all lower bits set
         // thus mask = 1111 0000
         assign region_addr_mask[r][b] = (csr_pmp_cfg_i[r].mode != PMP_MODE_NAPOT) |
-                                        ~&csr_pmp_addr_i[r][b-1:PMPGranularity+2];
+                                        ~&csr_pmp_addr_i[r][b-1:PMPGranularity+1];
       end
     end
   end
ParseResult:
UPD HdlStmIf@@ to 
    UPD HdlOp@@EQ to EQ
        UPD HdlOp@@ADD to ADD
            MOV HdlValueInt@@2 to ops
            HdlValueInt: 2
            DEL HdlValueId@@PMPGranularity from ops
            DEL list@@ops from ADD
        DEL HdlOp@@ADD from ops

UPD HdlStmAssign@@ to 
    UPD HdlOp@@OR to OR
        UPD HdlOp@@NAND_UNARY to NAND_UNARY
            UPD HdlOp@@INDEX to INDEX
                UPD HdlOp@@DOWNTO to DOWNTO
                    UPD HdlOp@@ADD to ADD
                        UPD HdlValueInt@@2 to 1


CommitId: 892ad8a6213057e20e43f44a2eb70b02d90cce35
[RTL] - Add PMP module
--- a/rtl/ibex_if_stage.sv
+++ b/rtl/ibex_if_stage.sv
@@ -26,6 +26,7 @@ module ibex_if_stage #(
     input  logic                  instr_rvalid_i,
     input  logic [31:0]           instr_rdata_i,
     input  logic                  instr_err_i,
+    input  logic                  instr_pmp_err_i,
 
     // output of ID stage
     output logic                  instr_valid_id_o,         // instr in IF-ID is valid

ParseResult:
INS HdlIdDef@@instr_pmp_err_i to ports
HdlIdDef: instr_pmp_err_i
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: IN


CommitId: c7cb958f0d6f143d835e33d7efe27336cc7737c1
Update lowrisc_ip to lowRISC/opentitan@ca950b43a
--- a/vendor/lowrisc_ip/ip/prim/rtl/prim_secded_64_57_dec.sv
+++ b/vendor/lowrisc_ip/ip/prim/rtl/prim_secded_64_57_dec.sv
@@ -2,12 +2,11 @@
 // Licensed under the Apache License, Version 2.0, see LICENSE for details.
 // SPDX-License-Identifier: Apache-2.0
 //
-// SECDED Decoder generated by
-// util/design/secded_gen.py -m 7 -k 57 -s 1592631616 -c hsiao
+// SECDED decoder generated by util/design/secded_gen.py
 
 module prim_secded_64_57_dec (
-  input        [63:0] in,
-  output logic [56:0] d_o,
+  input        [63:0] data_i,
+  output logic [56:0] data_o,
   output logic [6:0] syndrome_o,
   output logic [1:0] err_o
 );

ParseResult:
UPD HdlIdDef@@in to data_i

UPD HdlIdDef@@d_o to data_o


CommitId: d00db652277ba9d33a8ac68794b5260c6ed168d9
Avoid WIDTH lint warnings in Verilator
--- a/rtl/ibex_register_file_ff.sv
+++ b/rtl/ibex_register_file_ff.sv
@@ -62,7 +62,7 @@ module ibex_register_file #(
 
   always_comb begin : we_a_decoder
     for (int i = 1; i < NUM_WORDS; i++) begin
-      we_a_dec[i] = (waddr_a_i == i) ?  we_a_i : 1'b0;
+      we_a_dec[i] = (waddr_a_i == 5'(i)) ?  we_a_i : 1'b0;
     end
   end
 
ParseResult:
UPD HdlStmFor@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@TERNARY to TERNARY
                UPD HdlOp@@EQ to EQ
                    INS HdlOp@@CALL to ops
                    UPD HdlOp@@CALL to CALL
                        INS list@@ops to CALL
                        INS HdlValueInt@@5 to ops

UPD HdlStmFor@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@TERNARY to TERNARY
                UPD HdlOp@@EQ to EQ
                    MOV HdlValueId@@i to ops
                    HdlValueId: i


CommitId: 74abc47b7179b9a651240a4c856eb578e53b8a7b
Add missing `default` in `unique case`, propagate `'X` in FSM states
--- a/rtl/ibex_load_store_unit.sv
+++ b/rtl/ibex_load_store_unit.sv
@@ -102,17 +102,19 @@ module ibex_load_store_unit (
       2'b00: begin // Writing a word
         if (!misaligned_st) begin // non-misaligned case
           unique case (data_addr_int[1:0])
-            2'b00: data_be = 4'b1111;
-            2'b01: data_be = 4'b1110;
-            2'b10: data_be = 4'b1100;
-            2'b11: data_be = 4'b1000;
+            2'b00:   data_be = 4'b1111;
+            2'b01:   data_be = 4'b1110;
+            2'b10:   data_be = 4'b1100;
+            2'b11:   data_be = 4'b1000;
+            default: data_be = 'X;
           endcase // case (data_addr_int[1:0])
         end else begin // misaligned case
           unique case (data_addr_int[1:0])
-            2'b00: data_be = 4'b0000; // this is not used, but included for completeness
-            2'b01: data_be = 4'b0001;
-            2'b10: data_be = 4'b0011;
-            2'b11: data_be = 4'b0111;
+            2'b00:   data_be = 4'b0000; // this is not used, but included for completeness
+            2'b01:   data_be = 4'b0001;
+            2'b10:   data_be = 4'b0011;
+            2'b11:   data_be = 4'b0111;
+            default: data_be = 'X;
           endcase // case (data_addr_int[1:0])
         end
       end

ParseResult:
UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['data_addr_int',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '1'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['data_addr_int',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '1'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    INS HdlOp@@ASSIGN to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['data_addr_int',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '1'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    HdlOp: ASSIGN
        list: ops
            HdlValueId: data_be
            HdlValueInt: X

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['data_addr_int',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '1'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['data_addr_int',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '1'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    INS HdlOp@@ASSIGN to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['data_addr_int',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '1'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    HdlOp: ASSIGN
        list: ops
            HdlValueId: data_be
            HdlValueInt: X


CommitId: 74abc47b7179b9a651240a4c856eb578e53b8a7b
Add missing `default` in `unique case`, propagate `'X` in FSM states
--- a/rtl/ibex_load_store_unit.sv
+++ b/rtl/ibex_load_store_unit.sv
@@ -120,10 +122,11 @@ module ibex_load_store_unit (
       2'b01: begin // Writing a half word
         if (!misaligned_st) begin // non-misaligned case
           unique case (data_addr_int[1:0])
-            2'b00: data_be = 4'b0011;
-            2'b01: data_be = 4'b0110;
-            2'b10: data_be = 4'b1100;
-            2'b11: data_be = 4'b1000;
+            2'b00:   data_be = 4'b0011;
+            2'b01:   data_be = 4'b0110;
+            2'b10:   data_be = 4'b1100;
+            2'b11:   data_be = 4'b1000;
+            default: data_be = 'X;
           endcase // case (data_addr_int[1:0])
         end else begin // misaligned case
           data_be = 4'b0001;

ParseResult:
UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['data_addr_int',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '1'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['data_addr_int',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '1'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    INS HdlOp@@ASSIGN to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['data_addr_int',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '1'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    HdlOp: ASSIGN
        list: ops
            HdlValueId: data_be
            HdlValueInt: X

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['data_addr_int',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '1'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['data_addr_int',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '1'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    INS HdlOp@@ASSIGN to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['data_addr_int',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '1'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    HdlOp: ASSIGN
        list: ops
            HdlValueId: data_be
            HdlValueInt: X


CommitId: 74abc47b7179b9a651240a4c856eb578e53b8a7b
Add missing `default` in `unique case`, propagate `'X` in FSM states
--- a/rtl/ibex_load_store_unit.sv
+++ b/rtl/ibex_load_store_unit.sv
@@ -133,10 +136,11 @@ module ibex_load_store_unit (
       2'b10,
       2'b11: begin // Writing a byte
         unique case (data_addr_int[1:0])
-          2'b00: data_be = 4'b0001;
-          2'b01: data_be = 4'b0010;
-          2'b10: data_be = 4'b0100;
-          2'b11: data_be = 4'b1000;
+          2'b00:   data_be = 4'b0001;
+          2'b01:   data_be = 4'b0010;
+          2'b10:   data_be = 4'b0100;
+          2'b11:   data_be = 4'b1000;
+          default: data_be = 'X;
         endcase // case (data_addr_int[1:0])
       end
     endcase // case (data_type_ex_i)

ParseResult:
UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['data_addr_int',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '1'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['data_addr_int',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '1'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    INS HdlOp@@ASSIGN to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['data_addr_int',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '1'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    HdlOp: ASSIGN
        list: ops
            HdlValueId: data_be
            HdlValueInt: X

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['data_addr_int',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '1'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['data_addr_int',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '1'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    INS HdlOp@@ASSIGN to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['data_addr_int',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '1'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    HdlOp: ASSIGN
        list: ops
            HdlValueId: data_be
            HdlValueInt: X

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['data_addr_int',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '1'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['data_addr_int',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '1'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    INS HdlOp@@ASSIGN to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['data_addr_int',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '1'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    HdlOp: ASSIGN
        list: ops
            HdlValueId: data_be
            HdlValueInt: X


CommitId: 74abc47b7179b9a651240a4c856eb578e53b8a7b
Add missing `default` in `unique case`, propagate `'X` in FSM states
--- a/rtl/ibex_load_store_unit.sv
+++ b/rtl/ibex_load_store_unit.sv
@@ -148,10 +152,11 @@ module ibex_load_store_unit (
   assign wdata_offset = data_addr_int[1:0] - data_reg_offset_ex_i[1:0];
   always_comb begin
     unique case (wdata_offset)
-      2'b00: data_wdata = data_wdata_ex_i[31:0];
-      2'b01: data_wdata = {data_wdata_ex_i[23:0], data_wdata_ex_i[31:24]};
-      2'b10: data_wdata = {data_wdata_ex_i[15:0], data_wdata_ex_i[31:16]};
-      2'b11: data_wdata = {data_wdata_ex_i[ 7:0], data_wdata_ex_i[31: 8]};
+      2'b00:   data_wdata =  data_wdata_ex_i[31:0];
+      2'b01:   data_wdata = {data_wdata_ex_i[23:0], data_wdata_ex_i[31:24]};
+      2'b10:   data_wdata = {data_wdata_ex_i[15:0], data_wdata_ex_i[31:16]};
+      2'b11:   data_wdata = {data_wdata_ex_i[ 7:0], data_wdata_ex_i[31: 8]};
+      default: data_wdata = 'X;
     endcase // case (wdata_offset)
   end
 
ParseResult:
UPD HdlStmCase@@wdata_offset to wdata_offset
    INS HdlOp@@ASSIGN to wdata_offset
    HdlOp: ASSIGN
        list: ops
            HdlValueId: data_wdata
            HdlValueInt: X


CommitId: 85ae06d054b6d886276d2e5d3e2021df4c237049
Controller: fix `nmi_mode` default assignment
--- a/rtl/ibex_controller.sv
+++ b/rtl/ibex_controller.sv
@@ -215,7 +215,7 @@ module ibex_controller (
     debug_csr_save_o      = 1'b0;
     debug_cause_o         = DBG_CAUSE_EBREAK;
     debug_mode_d          = debug_mode_q;
-    nmi_mode_d            = 1'b0;
+    nmi_mode_d            = nmi_mode_q;
 
     perf_tbranch_o        = 1'b0;
     perf_jump_o           = 1'b0;
ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlValueId@@nmi_mode_q to ops

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            DEL HdlValueInt@@0 from ops


CommitId: f025236a22e4d2290acf856de60449f24d79bc6f
[I-side] - Fix issues found in tracing example
--- a/rtl/ibex_prefetch_buffer.sv
+++ b/rtl/ibex_prefetch_buffer.sv
@@ -44,6 +44,7 @@ module ibex_prefetch_buffer (
 
   logic                valid_req;
   logic                valid_req_d, valid_req_q;
+  logic                hold_addr_d, hold_addr_q;
   logic                gnt_or_pmp_err, rvalid_or_pmp_err;
   logic [NUM_REQS-1:0] rdata_outstanding_n, rdata_outstanding_s, rdata_outstanding_q;
   logic [NUM_REQS-1:0] branch_abort_n, branch_abort_s, branch_abort_q;

ParseResult:
INS HdlIdDef@@hold_addr_d to objs
HdlIdDef: hold_addr_d
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

INS HdlIdDef@@hold_addr_q to objs
HdlIdDef: hold_addr_q
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL


CommitId: f025236a22e4d2290acf856de60449f24d79bc6f
[I-side] - Fix issues found in tracing example
--- a/rtl/ibex_prefetch_buffer.sv
+++ b/rtl/ibex_prefetch_buffer.sv
@@ -100,8 +101,7 @@ module ibex_prefetch_buffer (
   //////////////
 
   // Make a new request any time there is space in the FIFO, and space in the request queue
-  assign valid_req = req_i & (fifo_ready | branch_i) &
-                     ~&rdata_outstanding_q;
+  assign valid_req = valid_req_q | (req_i & (fifo_ready | branch_i) & (~&rdata_outstanding_q));
 
   // If a request address triggers a PMP error, the external bus request is suppressed. We might
   // therefore never receive a grant for such a request. The grant is faked in this case to make

ParseResult:
UPD HdlStmAssign@@ to 
    INS HdlOp@@OR to 
    UPD HdlOp@@OR to OR
        INS list@@ops to OR
        INS HdlValueId@@valid_req_q to ops

UPD HdlStmAssign@@ to 
    MOV HdlOp@@AND to 
    HdlOp: AND
        list: ops
            HdlOp: AND
                list: ops
                    HdlValueId: req_i
                    HdlOp: OR
                        list: ops
                            HdlValueId: fifo_ready
                            HdlValueId: branch_i
            HdlOp: NAND_UNARY
                list: ops
                    HdlValueId: rdata_outstanding_q


CommitId: f025236a22e4d2290acf856de60449f24d79bc6f
[I-side] - Fix issues found in tracing example
--- a/rtl/ibex_prefetch_buffer.sv
+++ b/rtl/ibex_prefetch_buffer.sv
@@ -115,16 +115,21 @@ module ibex_prefetch_buffer (
   // As with the grant, the rvalid must be faked for a PMP error, since the request was suppressed.
   // Since the pmp_err_q flop is only updated when the address updates, it will always point to the
   // PMP error status of the oldest outstanding request
-  assign rvalid_or_pmp_err = instr_rvalid_i | pmp_err_q;
+  assign rvalid_or_pmp_err = rdata_outstanding_q[0] & (instr_rvalid_i | pmp_err_q);
 
-  // Hold the address stable for requests that couldn't be issued, or didn't get granted
-  assign valid_req_d = (branch_i | valid_req_q) & ~(valid_req & instr_gnt_i);
+  // Hold the request stable for requests that didn't get granted
+  assign valid_req_d = valid_req & ~instr_gnt_i;
+
+  // Hold the address stable for requests that couldn't be issued, or didn't get granted.
+  // This is different to valid_req_q since there are cases where we must use addr+4 for
+  // an ungranted request rather than addr_q (where addr_q has not been updated).
+  assign hold_addr_d = (branch_i | hold_addr_q) & ~(valid_req & instr_gnt_i);
 
   ////////////////
   // Fetch addr //
   ////////////////
 
-  // The address flop is used to hold the address steady for ungranted requests and also to 
+  // The address flop is used to hold the address steady for ungranted requests and also to
   // push the address to the FIFO for completed requests. For this reason, the address is only
   // updated once a request is the oldest outstanding to ensure that newer requests do not
   // overwrite the addresses of older ones. Branches are an exception to this, since all older

ParseResult:
INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: AND
        list: ops
            HdlValueId: valid_req
            HdlOp: NEG
                list: ops
                    HdlValueId: instr_gnt_i
    HdlValueId: valid_req_d

UPD HdlStmAssign@@ to 
    INS HdlOp@@AND to 
    UPD HdlOp@@AND to AND
        INS list@@ops to AND

UPD HdlStmAssign@@ to 
    UPD HdlValueId@@valid_req_d to hold_addr_d
    UPD HdlOp@@AND to AND
        UPD HdlOp@@OR to OR
            UPD HdlValueId@@valid_req_q to hold_addr_q

UPD HdlStmAssign@@ to 
    MOV HdlOp@@OR to 
    HdlOp: OR
        list: ops
            HdlValueId: instr_rvalid_i
            HdlValueId: pmp_err_q


CommitId: f025236a22e4d2290acf856de60449f24d79bc6f
[I-side] - Fix issues found in tracing example
--- a/rtl/ibex_prefetch_buffer.sv
+++ b/rtl/ibex_prefetch_buffer.sv
@@ -133,7 +138,7 @@ module ibex_prefetch_buffer (
   // Update the addr_q flop on any branch, or
   assign addr_valid = branch_i |
                       // A new request which will be the oldest, or
-                      (req_i & fifo_ready & ~rdata_outstanding_q[0]) |
+                      (valid_req & instr_gnt_i & ~rdata_outstanding_q[0]) |
                       // each time a valid request becomes the oldest
                       (rvalid_or_pmp_err & ~branch_abort_q[0] &
                        ((valid_req & instr_gnt_i) | rdata_outstanding_q[1]));

ParseResult:
UPD HdlStmAssign@@ to 
    UPD HdlOp@@OR to OR
        UPD HdlOp@@OR to OR
            UPD HdlOp@@AND to AND
                UPD HdlOp@@AND to AND
                    UPD HdlValueId@@req_i to valid_req
                    UPD HdlValueId@@fifo_ready to instr_gnt_i


CommitId: f025236a22e4d2290acf856de60449f24d79bc6f
[I-side] - Fix issues found in tracing example
--- a/rtl/ibex_prefetch_buffer.sv
+++ b/rtl/ibex_prefetch_buffer.sv
@@ -143,7 +148,7 @@ module ibex_prefetch_buffer (
 
   // Address mux
   assign instr_addr = branch_i    ? addr_i :
-                      valid_req_q ? instr_addr_q :
+                      hold_addr_q ? instr_addr_q :
                                     fetch_addr;
 
   assign instr_addr_w_aligned = {instr_addr[31:2], 2'b00};

ParseResult:
UPD HdlStmAssign@@ to 
    UPD HdlOp@@TERNARY to TERNARY
        UPD HdlOp@@TERNARY to TERNARY
            UPD HdlValueId@@valid_req_q to hold_addr_q


CommitId: f025236a22e4d2290acf856de60449f24d79bc6f
[I-side] - Fix issues found in tracing example
--- a/rtl/ibex_prefetch_buffer.sv
+++ b/rtl/ibex_prefetch_buffer.sv
@@ -180,7 +185,7 @@ module ibex_prefetch_buffer (
                                                    branch_abort_n;
 
   // Push a new entry to the FIFO once complete (and not aborted by a branch)
-  assign fifo_valid = rdata_outstanding_q[0] & ~branch_abort_q[0] & rvalid_or_pmp_err;
+  assign fifo_valid = rvalid_or_pmp_err & ~branch_abort_q[0];
 
   ///////////////
   // Registers //

ParseResult:
UPD HdlStmAssign@@ to 
    UPD HdlOp@@AND to AND
        MOV HdlOp@@AND to ops
        HdlOp: AND
            list: ops
                HdlOp: INDEX
                    list: ops
                        HdlValueId: rdata_outstanding_q
                        HdlValueInt: 0
                HdlOp: NEG
                    list: ops
                        HdlOp: INDEX
                            list: ops
                                HdlValueId: branch_abort_q
                                HdlValueInt: 0
        UPD HdlOp@@AND to AND
            MOV HdlOp@@INDEX to ops
            HdlOp: INDEX
                list: ops
                    HdlValueId: rdata_outstanding_q
                    HdlValueInt: 0
        DEL HdlValueId@@rvalid_or_pmp_err from ops
        DEL list@@ops from AND
    DEL HdlOp@@AND from 


CommitId: f025236a22e4d2290acf856de60449f24d79bc6f
[I-side] - Fix issues found in tracing example
--- a/rtl/ibex_prefetch_buffer.sv
+++ b/rtl/ibex_prefetch_buffer.sv
@@ -189,10 +194,12 @@ module ibex_prefetch_buffer (
   always_ff @(posedge clk_i or negedge rst_ni) begin
     if (!rst_ni) begin
       valid_req_q          <= 1'b0;
+      hold_addr_q          <= 1'b0;
       rdata_outstanding_q  <= 'b0;
       branch_abort_q       <= 'b0;
     end else begin
       valid_req_q          <= valid_req_d;
+      hold_addr_q          <= hold_addr_d;
       rdata_outstanding_q  <= rdata_outstanding_s;
       branch_abort_q       <= branch_abort_s;
     end

ParseResult:
UPD HdlStmAssign@@ to 
    UPD HdlOp@@AND to AND
        INS HdlValueId@@rvalid_or_pmp_err to ops

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: hold_addr_q

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueId: hold_addr_d
    HdlValueId: hold_addr_q


CommitId: 27151a3f89b4c9dab4cab86850bb0ef9381f411d
fixed multdiv_fast
--- a/multdiv_fast.sv
+++ b/multdiv_fast.sv
@@ -250,12 +250,13 @@ module zeroriscy_multdiv_fast
   assign ready_o  = (mult_state_q == FINISH) | (divcurr_state_q == MD_FINISH);
   always_comb
   begin : mult_fsm
-      mult_op_a = op_a_i[`OP_L];
-      mult_op_b = op_b_i[`OP_L];
-      sign_a    = 1'b0;
-      sign_b    = 1'b0;
-      accum     = mac_res_q;
-      mac_res_n = mac_res;
+      mult_op_a    = op_a_i[`OP_L];
+      mult_op_b    = op_b_i[`OP_L];
+      sign_a       = 1'b0;
+      sign_b       = 1'b0;
+      accum        = mac_res_q;
+      mac_res_n    = mac_res;
+      mult_state_n = mult_state_q;
 
       unique case (mult_state_q)
 
ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: mult_state_n
                HdlValueId: mult_state_q


CommitId: a2184f9ec76a029bb8798119a46efb3992ae69eb
Align ALU comparison op naming to instruction names
--- a/rtl/ibex_alu.sv
+++ b/rtl/ibex_alu.sv
@@ -64,13 +64,13 @@ module ibex_alu (
       ALU_SUB,
 
       // Comparator OPs
-      ALU_EQ,    ALU_NE,
-      ALU_GTU,   ALU_GEU,
-      ALU_LTU,   ALU_LEU,
-      ALU_GTS,   ALU_GES,
-      ALU_LTS,   ALU_LES,
-      ALU_SLTS,  ALU_SLTU,
-      ALU_SLETS, ALU_SLETU: adder_op_b_negate = 1'b1;
+      ALU_EQ,   ALU_NE,
+      ALU_GTU,  ALU_GEU,
+      ALU_LTU,  ALU_LEU,
+      ALU_GT,   ALU_GE,
+      ALU_LT,   ALU_LE,
+      ALU_SLT,  ALU_SLTU,
+      ALU_SLET, ALU_SLETU: adder_op_b_negate = 1'b1;
 
       default: ;
     endcase

ParseResult:
UPD HdlStmCase@@operator_i to operator_i
    UPD HdlValueId@@ALU_GTS to ALU_GT
    UPD HdlValueId@@ALU_GES to ALU_GE
    UPD HdlValueId@@ALU_LTS to ALU_LT
    UPD HdlValueId@@ALU_LES to ALU_LE
    UPD HdlValueId@@ALU_SLTS to ALU_SLT
    UPD HdlValueId@@ALU_SLETS to ALU_SLET


CommitId: a2184f9ec76a029bb8798119a46efb3992ae69eb
Align ALU comparison op naming to instruction names
--- a/rtl/ibex_alu.sv
+++ b/rtl/ibex_alu.sv
@@ -138,12 +138,12 @@ module ibex_alu (
     cmp_signed = 1'b0;
 
     unique case (operator_i)
-      ALU_GTS,
-      ALU_GES,
-      ALU_LTS,
-      ALU_LES,
-      ALU_SLTS,
-      ALU_SLETS: begin
+      ALU_GT,
+      ALU_GE,
+      ALU_LT,
+      ALU_LE,
+      ALU_SLT,
+      ALU_SLET: begin
         cmp_signed = 1'b1;
       end
 

ParseResult:
UPD HdlStmCase@@operator_i to operator_i
    UPD HdlValueId@@ALU_GTS to ALU_GT
    UPD HdlValueId@@ALU_GES to ALU_GE
    UPD HdlValueId@@ALU_LTS to ALU_LT
    UPD HdlValueId@@ALU_LES to ALU_LE
    UPD HdlValueId@@ALU_SLTS to ALU_SLT
    UPD HdlValueId@@ALU_SLETS to ALU_SLET


CommitId: a2184f9ec76a029bb8798119a46efb3992ae69eb
Align ALU comparison op naming to instruction names
--- a/rtl/ibex_alu.sv
+++ b/rtl/ibex_alu.sv
@@ -187,13 +187,13 @@ module ibex_alu (
     unique case (operator_i)
       ALU_EQ:            cmp_result =  is_equal;
       ALU_NE:            cmp_result = ~is_equal;
-      ALU_GTS, ALU_GTU:  cmp_result = is_greater_equal & ~is_equal;
-      ALU_GES, ALU_GEU:  cmp_result = is_greater_equal;
-      ALU_LTS, ALU_SLTS,
+      ALU_GT,  ALU_GTU:  cmp_result = is_greater_equal & ~is_equal;
+      ALU_GE,  ALU_GEU:  cmp_result = is_greater_equal;
+      ALU_LT,  ALU_SLT,
       ALU_LTU, ALU_SLTU: cmp_result = ~is_greater_equal;
-      ALU_SLETS,
+      ALU_SLET,
       ALU_SLETU,
-      ALU_LES, ALU_LEU:  cmp_result = ~is_greater_equal | is_equal;
+      ALU_LE,  ALU_LEU:  cmp_result = ~is_greater_equal | is_equal;
 
       default: ;
     endcase

ParseResult:
UPD HdlStmCase@@operator_i to operator_i
    UPD HdlValueId@@ALU_GTS to ALU_GT
    UPD HdlValueId@@ALU_GES to ALU_GE
    UPD HdlValueId@@ALU_LTS to ALU_LT
    UPD HdlValueId@@ALU_SLTS to ALU_SLT
    UPD HdlValueId@@ALU_SLETS to ALU_SLET
    UPD HdlValueId@@ALU_LES to ALU_LE


CommitId: a2184f9ec76a029bb8798119a46efb3992ae69eb
Align ALU comparison op naming to instruction names
--- a/rtl/ibex_alu.sv
+++ b/rtl/ibex_alu.sv
@@ -224,13 +224,13 @@ module ibex_alu (
       ALU_SRL, ALU_SRA: result_o = shift_result;
 
       // Comparison Operations
-      ALU_EQ,    ALU_NE,
-      ALU_GTU,   ALU_GEU,
-      ALU_LTU,   ALU_LEU,
-      ALU_GTS,   ALU_GES,
-      ALU_LTS,   ALU_LES,
-      ALU_SLTS,  ALU_SLTU,
-      ALU_SLETS, ALU_SLETU: result_o = {31'h0,cmp_result};
+      ALU_EQ,   ALU_NE,
+      ALU_GTU,  ALU_GEU,
+      ALU_LTU,  ALU_LEU,
+      ALU_GT,   ALU_GE,
+      ALU_LT,   ALU_LE,
+      ALU_SLT,  ALU_SLTU,
+      ALU_SLET, ALU_SLETU: result_o = {31'h0,cmp_result};
 
       default: ; // default case to suppress unique warning
     endcase
ParseResult:
UPD HdlStmCase@@operator_i to operator_i
    UPD HdlValueId@@ALU_GTS to ALU_GT
    UPD HdlValueId@@ALU_GES to ALU_GE
    UPD HdlValueId@@ALU_LTS to ALU_LT
    UPD HdlValueId@@ALU_LES to ALU_LE
    UPD HdlValueId@@ALU_SLTS to ALU_SLT
    UPD HdlValueId@@ALU_SLETS to ALU_SLET


CommitId: bcbf1a7adf27c3bfc57205c684c2192c0d24fa3f
[rtl] Add plusarg to disable trace log
--- a/rtl/ibex_tracer.sv
+++ b/rtl/ibex_tracer.sv
@@ -92,6 +96,17 @@ module ibex_tracer (
   localparam logic [4:0] MEM = (1 << 4);
   logic [4:0] data_accessed;
 
+  logic trace_log_enable;
+  initial begin
+    if ($value$plusargs("ibex_tracer_enable=%b", trace_log_enable)) begin
+      if (trace_log_enable == 1'b0) begin
+        $display("%m: Instruction trace disabled.");
+      end
+    end else begin
+      trace_log_enable = 1'b1;
+    end
+  end
+
   function automatic void printbuffer_dumpline();
     string rvfi_insn_str;
 

ParseResult:
INS HdlIdDef@@trace_log_enable to objs
HdlIdDef: trace_log_enable
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

INS HdlStmProcess@@ to objs
HdlStmProcess
    HdlStmBlock: SEQ
        list: body
            HdlStmIf
                HdlOp: CALL
                    list: ops
                        HdlValueId: $value$plusargs
                        str
                        HdlValueId: trace_log_enable
                HdlStmBlock: SEQ
                    list: body
                        HdlStmIf
                            HdlOp: EQ
                                list: ops
                                    HdlValueId: trace_log_enable
                                    HdlValueInt: 0
                            HdlStmBlock: SEQ
                                list: body
                                    HdlOp: CALL
                                        list: ops
                                            HdlValueId: $display
                                            str
                            list: elifs
                list: elifs
                HdlStmBlock: SEQ
                    list: body
                        HdlOp: ASSIGN
                            list: ops
                                HdlValueId: trace_log_enable
                                HdlValueInt: 1
            HdlStmWait:
                list: val


CommitId: bcbf1a7adf27c3bfc57205c684c2192c0d24fa3f
[rtl] Add plusarg to disable trace log
--- a/rtl/ibex_tracer.sv
+++ b/rtl/ibex_tracer.sv
@@ -730,7 +745,7 @@ module ibex_tracer (
 
   // log execution
   always_ff @(posedge clk_i) begin
-    if (rvfi_valid) begin
+    if (rvfi_valid && trace_log_enable) begin
       printbuffer_dumpline();
     end
   end
ParseResult:
INS HdlStmProcess@@ to objs

UPD HdlStmProcess@@ to 
    MOV list@@sensitivity to 
    list: sensitivity
        HdlOp: RISING
            list: ops
                HdlValueId: clk_i
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL HdlStmProcessTriggerConstrain@@FF from 

INS HdlStmIf@@ to body

UPD HdlStmIf@@ to 
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlValueId: printbuffer_dumpline
    DEL HdlValueId@@rvfi_valid from 
    DEL list@@elifs from 

DEL HdlStmIf@@ from body

DEL HdlStmProcess@@ from objs


CommitId: 76f6a3d4c3b591d919b8991ddd806d83627624ae
Use shared code for Arty A7-100T example
--- a/examples/fpga/artya7-100/rtl/top_artya7_100.sv
+++ b/examples/fpga/artya7-100/rtl/top_artya7_100.sv
@@ -26,14 +26,16 @@ module top_artya7_100 (
   logic        data_gnt;
   logic        data_rvalid;
   logic        data_we;
+  logic  [3:0] data_be;
   logic [31:0] data_addr;
   logic [31:0] data_wdata;
   logic [31:0] data_rdata;
 
   // SRAM arbiter
-  logic [13:0] mem_addr_index;
+  logic [31:0] mem_addr;
   logic        mem_req;
   logic        mem_write;
+  logic  [3:0] mem_be;
   logic [31:0] mem_wdata;
   logic        mem_rvalid;
   logic [31:0] mem_rdata;

ParseResult:
INS HdlIdDef@@data_be to objs

UPD HdlIdDef@@mem_addr_index to mem_addr

INS HdlIdDef@@mem_be to objs
HdlIdDef: mem_be
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 3
                    HdlValueInt: 0
    HdlDirection: INTERNAL

UPD HdlIdDef@@data_be to data_be
    INS HdlDirection@@INTERNAL to data_be

UPD HdlIdDef@@mem_addr_index to mem_addr_index
    UPD HdlOp@@PARAMETRIZATION to PARAMETRIZATION
        UPD HdlOp@@DOWNTO to DOWNTO
            UPD HdlValueInt@@13 to 31


CommitId: 76f6a3d4c3b591d919b8991ddd806d83627624ae
Use shared code for Arty A7-100T example
--- a/examples/fpga/artya7-100/rtl/top_artya7_100.sv
+++ b/examples/fpga/artya7-100/rtl/top_artya7_100.sv
@@ -85,30 +86,32 @@ module top_artya7_100 (
   // Connect Ibex to SRAM
   always_comb begin
     mem_req        = 1'b0;
-    mem_addr_index = 14'b0;
+    mem_addr       = 32'b0;
     mem_write      = 1'b0;
+    mem_be         = 4'b0;
     mem_wdata      = 32'b0;
     if (instr_req) begin
       mem_req        = (instr_addr & ~MEM_MASK) == MEM_START;
-      mem_addr_index = instr_addr[15:2];
+      mem_addr       = instr_addr;
     end else if (data_req) begin
       mem_req        = (data_addr & ~MEM_MASK) == MEM_START;
       mem_write      = data_we;
-      mem_addr_index = data_addr[15:2];
+      mem_be         = data_be;
+      mem_addr       = data_addr;
       mem_wdata      = data_wdata;
     end
   end
 
   // SRAM block for instruction and data storage
   ram_1p #(
-    .Width(32),
     .Depth(MEM_SIZE / 4)
   ) u_ram (
     .clk_i     ( clk_sys        ),
     .rst_ni    ( rst_sys_n      ),
     .req_i     ( mem_req        ),
-    .write_i   ( mem_write      ),
-    .addr_i    ( mem_addr_index ),
+    .we_i      ( mem_write      ),
+    .be_i      ( mem_be         ),
+    .addr_i    ( mem_addr       ),
     .wdata_i   ( mem_wdata      ),
     .rvalid_o  ( mem_rvalid     ),
     .rdata_o   ( mem_rdata      )

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: mem_be
                HdlValueInt: 0

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@mem_addr_index to mem_addr

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@mem_addr_index to mem_addr
            UPD HdlOp@@INDEX to INDEX
                MOV HdlValueId@@instr_addr to ops
                HdlValueId: instr_addr
                DEL HdlOp@@DOWNTO from ops
                HdlOp: DOWNTO
                    list: ops
                        HdlValueInt: 15
                        HdlValueInt: 2
                DEL list@@ops from INDEX
            DEL HdlOp@@INDEX from ops
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@mem_addr_index to mem_addr
            UPD HdlOp@@INDEX to INDEX
                MOV HdlValueId@@data_addr to ops
                HdlValueId: data_addr
                DEL HdlOp@@DOWNTO from ops
                HdlOp: DOWNTO
                    list: ops
                        HdlValueInt: 15
                        HdlValueInt: 2
                DEL list@@ops from INDEX
            DEL HdlOp@@INDEX from ops

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: mem_be
                HdlValueId: data_be


CommitId: 76f6a3d4c3b591d919b8991ddd806d83627624ae
Use shared code for Arty A7-100T example
--- a/examples/fpga/artya7-100/rtl/top_artya7_100.sv
+++ b/examples/fpga/artya7-100/rtl/top_artya7_100.sv
@@ -130,14 +133,19 @@ module top_artya7_100 (
     end
   end
 
-  // Connect the led output to the lower four bits of a written data word
+  // Connect the LED output to the lower four bits of the most significant
+  // byte
   logic [3:0] leds;
   always_ff @(posedge clk_sys or negedge rst_sys_n) begin
     if (!rst_sys_n) begin
       leds <= 4'b0;
     end else begin
       if (mem_req && data_req && data_we) begin
-        leds <= data_wdata[3:0];
+        for (int i = 0; i < 4; i = i + 1) begin
+          if (data_be[i] == 1'b1) begin
+            leds <= data_wdata[i*8 +: 4];
+          end
+        end
       end
     end
   end
ParseResult:
UPD HdlStmAssign@@ to 
    UPD HdlOp@@INDEX to PARAMETRIZATION
    MOV HdlOp@@INDEX to 
    HdlOp: INDEX
        list: ops
            HdlValueId: data_wdata
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 3
                    HdlValueInt: 0
    UPD HdlOp@@INDEX to INDEX
        UPD HdlValueId@@data_wdata to logic

UPD HdlStmIf@@ to 
    INS HdlStmBlock@@SEQ to 
    INS list@@elifs to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

INS HdlStmFor@@ to body

INS HdlStmIf@@ to body

UPD HdlStmIf@@ to 
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlStmAssign
                HdlOp: INDEX
                    list: ops
                        HdlValueId: data_wdata
                        HdlOp: DOWNTO
                            list: ops
                                HdlValueInt: 3
                                HdlValueInt: 0
                HdlValueId: leds
    MOV list@@elifs to 
    list: elifs


CommitId: 74abc47b7179b9a651240a4c856eb578e53b8a7b
Add missing `default` in `unique case`, propagate `'X` in FSM states
--- a/rtl/ibex_prefetch_buffer.sv
+++ b/rtl/ibex_prefetch_buffer.sv
@@ -200,8 +200,7 @@ module ibex_prefetch_buffer (
       end
 
       default: begin
-        // NS          = IDLE;      // unreachable, removing dead code
-        // instr_req_o = 1'b0;      // unreachable, removing dead code
+        NS = prefetch_fsm_e'({$bits(prefetch_fsm_e){1'bX}});
       end
     endcase
   end
ParseResult:
UPD HdlStmCase@@CS to CS
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: NS
                HdlOp: CALL
                    list: ops
                        HdlValueId: prefetch_fsm_e
                        HdlOp: REPL_CONCAT
                            list: ops
                                HdlOp: CALL
                                    list: ops
                                        HdlValueId: $bits
                                        HdlValueId: prefetch_fsm_e
                                HdlValueInt: x


CommitId: 2aacd2b98be61fa4c9b633d1ddba9d1d5c894faf
[Priv modes] Add support for U-Mode
--- a/rtl/ibex_pmp.sv
+++ b/rtl/ibex_pmp.sv
@@ -19,8 +19,7 @@ module ibex_pmp #(
     input  ibex_pkg::pmp_cfg_t      csr_pmp_cfg_i  [PMPNumRegions],
     input  logic [33:0]             csr_pmp_addr_i [PMPNumRegions],
 
-    input  ibex_pkg::priv_lvl_e     priv_mode_i,    // Current priv mode, assumed to
-                                                    // be the same for all channels
+    input  ibex_pkg::priv_lvl_e     priv_mode_i    [PMPNumChan],
     // Access checking channels
     input  logic [33:0]             pmp_req_addr_i [PMPNumChan],
     input  ibex_pkg::pmp_req_e      pmp_req_type_i [PMPNumChan],

ParseResult:
UPD HdlIdDef@@priv_mode_i to priv_mode_i
    INS HdlOp@@INDEX to priv_mode_i
    UPD HdlOp@@INDEX to INDEX
        INS list@@ops to INDEX
        INS HdlValueId@@PMPNumChan to ops

UPD HdlIdDef@@priv_mode_i to priv_mode_i
    MOV HdlOp@@DOUBLE_COLON to priv_mode_i
    HdlOp: DOUBLE_COLON
        list: ops
            HdlValueId: ibex_pkg
            HdlValueId: priv_lvl_e


CommitId: 2aacd2b98be61fa4c9b633d1ddba9d1d5c894faf
[Priv modes] Add support for U-Mode
--- a/rtl/ibex_pmp.sv
+++ b/rtl/ibex_pmp.sv
@@ -104,8 +103,8 @@ module ibex_pmp #(
                                             ~|region_match_partial[c][r-1:0];
       end
     end
-    assign access_fault[c] = (priv_mode_i == PRIV_LVL_M) ? |machine_access_fault[c] :
-                                                           ~|user_access_allowed[c];
+    assign access_fault[c] = (priv_mode_i[c] == PRIV_LVL_M) ? |machine_access_fault[c] :
+                                                              ~|user_access_allowed[c];
 
     assign pmp_req_err_o[c] = access_fault[c];
   end
ParseResult:
UPD HdlStmAssign@@ to 
    UPD HdlOp@@TERNARY to TERNARY
        UPD HdlOp@@EQ to EQ
            INS HdlOp@@INDEX to ops
            UPD HdlOp@@INDEX to INDEX
                INS list@@ops to INDEX
                INS HdlValueId@@c to ops

UPD HdlStmAssign@@ to 
    UPD HdlOp@@TERNARY to TERNARY
        UPD HdlOp@@EQ to EQ
            MOV HdlValueId@@priv_mode_i to ops
            HdlValueId: priv_mode_i


CommitId: c7cb958f0d6f143d835e33d7efe27336cc7737c1
Update lowrisc_ip to lowRISC/opentitan@ca950b43a
--- a/vendor/lowrisc_ip/ip/prim/rtl/prim_secded_72_64_dec.sv
+++ b/vendor/lowrisc_ip/ip/prim/rtl/prim_secded_72_64_dec.sv
@@ -2,12 +2,11 @@
 // Licensed under the Apache License, Version 2.0, see LICENSE for details.
 // SPDX-License-Identifier: Apache-2.0
 //
-// SECDED Decoder generated by
-// util/design/secded_gen.py -m 8 -k 64 -s 1592631616 -c hsiao
+// SECDED decoder generated by util/design/secded_gen.py
 
 module prim_secded_72_64_dec (
-  input        [71:0] in,
-  output logic [63:0] d_o,
+  input        [71:0] data_i,
+  output logic [63:0] data_o,
   output logic [7:0] syndrome_o,
   output logic [1:0] err_o
 );

ParseResult:
UPD HdlIdDef@@in to data_i

UPD HdlIdDef@@d_o to data_o


CommitId: d977e146babec168c2958f6523123d02f7912e96
[rtl] Various small lint fixes
--- a/rtl/ibex_alu.sv
+++ b/rtl/ibex_alu.sv
@@ -228,8 +228,10 @@ module ibex_alu #(
   logic [5:0] shift_amt;
   logic [5:0] shift_amt_compl; // complementary shift amount (32 - shift_amt)
 
-  logic [31:0] shift_result;
+  logic [31:0] shift_operand;
   logic [32:0] shift_result_ext;
+  logic        unused_shift_result_ext;
+  logic [31:0] shift_result;
   logic [31:0] shift_result_rev;
 
   // zbf

ParseResult:
MOV HdlIdDef@@shift_result to objs
HdlIdDef: shift_result
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 31
                    HdlValueInt: 0
    HdlDirection: INTERNAL

INS HdlIdDef@@shift_operand to objs
HdlIdDef: shift_operand
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 31
                    HdlValueInt: 0
    HdlDirection: INTERNAL

INS HdlIdDef@@unused_shift_result_ext to objs
HdlIdDef: unused_shift_result_ext
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL


CommitId: d977e146babec168c2958f6523123d02f7912e96
[rtl] Various small lint fixes
--- a/rtl/ibex_alu.sv
+++ b/rtl/ibex_alu.sv
@@ -308,19 +310,21 @@ module ibex_alu #(
     // select shifter input
     // for bfp, sbmode and shift_left the corresponding bit-reversed input is chosen.
     if (RV32B == RV32BNone) begin
-      shift_result = shift_left ? operand_a_rev : operand_a_i;
+      shift_operand = shift_left ? operand_a_rev : operand_a_i;
     end else begin
       unique case (1'b1)
-        bfp_op:       shift_result = bfp_mask_rev;
-        shift_sbmode: shift_result = 32'h8000_0000;
-        default:      shift_result = shift_left ? operand_a_rev : operand_a_i;
+        bfp_op:       shift_operand = bfp_mask_rev;
+        shift_sbmode: shift_operand = 32'h8000_0000;
+        default:      shift_operand = shift_left ? operand_a_rev : operand_a_i;
       endcase
     end
 
     shift_result_ext =
-        $signed({shift_ones | (shift_arith & shift_result[31]), shift_result}) >>> shift_amt[4:0];
+        $unsigned($signed({shift_ones | (shift_arith & shift_operand[31]), shift_operand}) >>>
+                  shift_amt[4:0]);
 
-    shift_result = shift_result_ext[31:0];
+    shift_result            = shift_result_ext[31:0];
+    unused_shift_result_ext = shift_result_ext[32];
 
     for (int unsigned i=0; i<32; i++) begin
       shift_result_rev[i] = shift_result[31-i];

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: unused_shift_result_ext
                HdlOp: INDEX
                    list: ops
                        HdlValueId: shift_result_ext
                        HdlValueInt: 32
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlOp@@CALL to ops
            UPD HdlOp@@CALL to CALL
                INS list@@ops to CALL
                INS HdlValueId@@$unsigned to ops

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            MOV HdlOp@@SRA to ops
            HdlOp: SRA
                list: ops
                    HdlOp: CALL
                        list: ops
                            HdlValueId: $signed
                            HdlOp: CONCAT
                                list: ops
                                    HdlOp: OR
                                        list: ops
                                            HdlValueId: shift_ones
                                            HdlOp: AND
                                                list: ops
                                                    HdlValueId: shift_arith
                                                    HdlOp: INDEX
                                                        list: ops
                                                            HdlValueId: shift_result
                                                            HdlValueInt: 31
                                    HdlValueId: shift_result
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: shift_amt
                            HdlOp: DOWNTO
                                list: ops
                                    HdlValueInt: 4
                                    HdlValueInt: 0
            UPD HdlOp@@SRA to SRA
                UPD HdlOp@@CALL to CALL
                    UPD HdlOp@@CONCAT to CONCAT
                        UPD HdlValueId@@shift_result to shift_operand
                        UPD HdlOp@@OR to OR
                            UPD HdlOp@@AND to AND
                                UPD HdlOp@@INDEX to INDEX
                                    UPD HdlValueId@@shift_result to shift_operand

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@shift_result to shift_operand

UPD HdlStmCase@@{'__class__': 'HdlValueInt', 'base': 2, 'bits': 1, 'val': '1'}  to {'__class__': 'HdlValueInt', 'base': 2, 'bits': 1, 'val': '1'} 
    UPD HdlOp@@ASSIGN to ASSIGN
        UPD HdlValueId@@shift_result to shift_operand
    UPD HdlOp@@ASSIGN to ASSIGN
        UPD HdlValueId@@shift_result to shift_operand
    UPD HdlOp@@ASSIGN to ASSIGN
        UPD HdlValueId@@shift_result to shift_operand


CommitId: d977e146babec168c2958f6523123d02f7912e96
[rtl] Various small lint fixes
--- a/rtl/ibex_alu.sv
+++ b/rtl/ibex_alu.sv
@@ -656,10 +660,14 @@ module ibex_alu #(
 
         if (shuffle_flip) begin
           shuffle_result = (shuffle_result & 32'h8822_4411) |
-              ((shuffle_result << 6)  & FLIP_MASK_L[0]) | ((shuffle_result >> 6)  & FLIP_MASK_R[0]) |
-              ((shuffle_result << 9)  & FLIP_MASK_L[1]) | ((shuffle_result >> 9)  & FLIP_MASK_R[1]) |
-              ((shuffle_result << 15) & FLIP_MASK_L[2]) | ((shuffle_result >> 15) & FLIP_MASK_R[2]) |
-              ((shuffle_result << 21) & FLIP_MASK_L[3]) | ((shuffle_result >> 21) & FLIP_MASK_R[3]);
+              ((shuffle_result << 6)  & FLIP_MASK_L[0]) |
+              ((shuffle_result >> 6)  & FLIP_MASK_R[0]) |
+              ((shuffle_result << 9)  & FLIP_MASK_L[1]) |
+              ((shuffle_result >> 9)  & FLIP_MASK_R[1]) |
+              ((shuffle_result << 15) & FLIP_MASK_L[2]) |
+              ((shuffle_result >> 15) & FLIP_MASK_R[2]) |
+              ((shuffle_result << 21) & FLIP_MASK_L[3]) |
+              ((shuffle_result >> 21) & FLIP_MASK_R[3]);
         end
 
         if (shuffle_mode[3]) begin

ParseResult:
UPD HdlStmIf@@ to 
    INS list@@elifs to 

UPD HdlStmIf@@ to 
    INS list@@elifs to 

UPD HdlStmIf@@ to 
    DEL list@@elifs from 

UPD HdlStmIf@@ to 
    DEL list@@elifs from 


CommitId: d977e146babec168c2958f6523123d02f7912e96
[rtl] Various small lint fixes
--- a/rtl/ibex_alu.sv
+++ b/rtl/ibex_alu.sv
@@ -685,10 +693,14 @@ module ibex_alu #(
 
         if (shuffle_flip) begin
           shuffle_result = (shuffle_result & 32'h8822_4411) |
-              ((shuffle_result << 6)  & FLIP_MASK_L[0]) | ((shuffle_result >> 6) & FLIP_MASK_R[0])  |
-              ((shuffle_result << 9)  & FLIP_MASK_L[1]) | ((shuffle_result >> 9) & FLIP_MASK_R[1])  |
-              ((shuffle_result << 15) & FLIP_MASK_L[2]) | ((shuffle_result >> 15) & FLIP_MASK_R[2]) |
-              ((shuffle_result << 21) & FLIP_MASK_L[3]) | ((shuffle_result >> 21) & FLIP_MASK_R[3]);
+              ((shuffle_result << 6)  & FLIP_MASK_L[0]) |
+              ((shuffle_result >> 6)  & FLIP_MASK_R[0]) |
+              ((shuffle_result << 9)  & FLIP_MASK_L[1]) |
+              ((shuffle_result >> 9)  & FLIP_MASK_R[1]) |
+              ((shuffle_result << 15) & FLIP_MASK_L[2]) |
+              ((shuffle_result >> 15) & FLIP_MASK_R[2]) |
+              ((shuffle_result << 21) & FLIP_MASK_L[3]) |
+              ((shuffle_result >> 21) & FLIP_MASK_R[3]);
         end
       end
 

ParseResult:
UPD HdlStmIf@@ to 
    INS list@@elifs to 

UPD HdlStmIf@@ to 
    INS list@@elifs to 

UPD HdlStmIf@@ to 
    DEL list@@elifs from 

UPD HdlStmIf@@ to 
    DEL list@@elifs from 


CommitId: d977e146babec168c2958f6523123d02f7912e96
[rtl] Various small lint fixes
--- a/rtl/ibex_alu.sv
+++ b/rtl/ibex_alu.sv
@@ -1048,6 +1060,8 @@ module ibex_alu #(
         endcase
       end
     end else begin : gen_alu_rvb_notfull
+      logic [31:0] unused_imd_val_q_1;
+      assign unused_imd_val_q_1   = imd_val_q_i[1];
       assign shuffle_result       = '0;
       assign butterfly_result     = '0;
       assign invbutterfly_result  = '0;

ParseResult:
UPD HdlStmIf@@ to 
    INS list@@elifs to 

UPD HdlStmIf@@ to 
    INS list@@elifs to 

INS HdlIdDef@@unused_imd_val_q_1 to body
HdlIdDef: unused_imd_val_q_1
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 31
                    HdlValueInt: 0
    HdlDirection: INTERNAL

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlOp: INDEX
        list: ops
            HdlValueId: imd_val_q_i
            HdlValueInt: 1
    HdlValueId: unused_imd_val_q_1

UPD HdlStmIf@@ to 
    DEL list@@elifs from 

UPD HdlStmIf@@ to 
    DEL list@@elifs from 


CommitId: d977e146babec168c2958f6523123d02f7912e96
[rtl] Various small lint fixes
--- a/rtl/ibex_alu.sv
+++ b/rtl/ibex_alu.sv
@@ -1070,8 +1084,8 @@ module ibex_alu #(
     always_comb begin
       unique case (operator_i)
         ALU_CMOV: begin
-            multicycle_result = (operand_b_i == 32'h0) ? operand_a_i : imd_val_q_i[0];
-            imd_val_d_o = '{operand_a_i, 32'h0};
+          multicycle_result = (operand_b_i == 32'h0) ? operand_a_i : imd_val_q_i[0];
+          imd_val_d_o = '{operand_a_i, 32'h0};
           if (instr_first_cycle_i) begin
             imd_val_we_o = 2'b01;
           end else begin

ParseResult:
UPD HdlStmIf@@ to 
    INS list@@elifs to 

UPD HdlStmIf@@ to 
    INS list@@elifs to 

UPD HdlStmIf@@ to 
    DEL list@@elifs from 


CommitId: d977e146babec168c2958f6523123d02f7912e96
[rtl] Various small lint fixes
--- a/rtl/ibex_alu.sv
+++ b/rtl/ibex_alu.sv
@@ -1152,6 +1166,12 @@ module ibex_alu #(
 
 
   end else begin : g_no_alu_rvb
+    logic [31:0] unused_imd_val_q[2];
+    assign unused_imd_val_q           = imd_val_q_i;
+    logic [31:0] unused_butterfly_result;
+    assign unused_butterfly_result    = butterfly_result;
+    logic [31:0] unused_invbutterfly_result;
+    assign unused_invbutterfly_result = invbutterfly_result;
     // RV32B result signals
     assign bitcnt_result       = '0;
     assign minmax_result       = '0;

ParseResult:
UPD HdlStmIf@@ to 
    INS list@@elifs to 

INS HdlIdDef@@unused_imd_val_q to body
HdlIdDef: unused_imd_val_q
    HdlOp: INDEX
        list: ops
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: logic
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 31
                            HdlValueInt: 0
            HdlValueInt: 2
    HdlDirection: INTERNAL

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueId: imd_val_q_i
    HdlValueId: unused_imd_val_q

INS HdlIdDef@@unused_butterfly_result to body
HdlIdDef: unused_butterfly_result
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 31
                    HdlValueInt: 0
    HdlDirection: INTERNAL

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueId: butterfly_result
    HdlValueId: unused_butterfly_result

INS HdlIdDef@@unused_invbutterfly_result to body
HdlIdDef: unused_invbutterfly_result
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 31
                    HdlValueInt: 0
    HdlDirection: INTERNAL

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueId: invbutterfly_result
    HdlValueId: unused_invbutterfly_result

UPD HdlStmIf@@ to 
    DEL list@@elifs from 


CommitId: d977e146babec168c2958f6523123d02f7912e96
[rtl] Various small lint fixes
--- a/rtl/ibex_alu.sv
+++ b/rtl/ibex_alu.sv
@@ -1245,4 +1265,7 @@ module ibex_alu #(
     endcase
   end
 
+  logic unused_shift_amt_compl;
+  assign unused_shift_amt_compl = shift_amt_compl[5];
+
 endmodule
ParseResult:
INS HdlIdDef@@unused_shift_amt_compl to objs
HdlIdDef: unused_shift_amt_compl
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: INDEX
        list: ops
            HdlValueId: shift_amt_compl
            HdlValueInt: 5
    HdlValueId: unused_shift_amt_compl


CommitId: b22a6a10defc7bad31dda7d8a33c7145d1a79a3b
Add `mtval` CSR
--- a/rtl/ibex_if_stage.sv
+++ b/rtl/ibex_if_stage.sv
@@ -214,13 +216,13 @@ module ibex_if_stage #(
   // to ease timing closure
   logic [31:0] instr_decompressed;
   logic        illegal_c_insn;
-  logic        instr_compressed_int;
+  logic        instr_is_compressed_int;
 
   ibex_compressed_decoder compressed_decoder_i (
-      .instr_i         ( fetch_rdata          ),
-      .instr_o         ( instr_decompressed   ),
-      .is_compressed_o ( instr_compressed_int ),
-      .illegal_instr_o ( illegal_c_insn       )
+      .instr_i         ( fetch_rdata             ),
+      .instr_o         ( instr_decompressed      ),
+      .is_compressed_o ( instr_is_compressed_int ),
+      .illegal_instr_o ( illegal_c_insn          )
   );
 
   // IF-ID pipeline registers, frozen when the ID stage is stalled

ParseResult:
UPD HdlIdDef@@instr_compressed_int to instr_is_compressed_int


CommitId: b22a6a10defc7bad31dda7d8a33c7145d1a79a3b
Add `mtval` CSR
--- a/rtl/ibex_if_stage.sv
+++ b/rtl/ibex_if_stage.sv
@@ -228,21 +230,17 @@ module ibex_if_stage #(
     if (!rst_ni) begin
       instr_valid_id_o           <= 1'b0;
       instr_rdata_id_o           <= '0;
+      instr_rdata_c_id_o         <= '0;
+      instr_is_compressed_id_o   <= 1'b0;
       illegal_c_insn_id_o        <= 1'b0;
-      is_compressed_id_o         <= 1'b0;
-`ifdef RVFI
-      instr_rdata_compressed_o   <= '0;
-`endif
       pc_id_o                    <= '0;
     end else begin
       if (if_valid_o) begin
         instr_valid_id_o         <= 1'b1;
         instr_rdata_id_o         <= instr_decompressed;
+        instr_rdata_c_id_o       <= fetch_rdata[15:0];
+        instr_is_compressed_id_o <= instr_is_compressed_int;
         illegal_c_insn_id_o      <= illegal_c_insn;
-        is_compressed_id_o       <= instr_compressed_int;
-`ifdef RVFI
-        instr_rdata_compressed_o <= fetch_rdata[15:0];
-`endif
         pc_id_o                  <= pc_if_o;
       end else if (clear_instr_valid_i) begin
         instr_valid_id_o         <= 1'b0;
ParseResult:
MOV HdlStmAssign@@ to body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: illegal_c_insn_id_o

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: instr_rdata_c_id_o

UPD HdlStmAssign@@ to 
    UPD HdlValueId@@is_compressed_id_o to instr_is_compressed_id_o

MOV HdlStmAssign@@ to body
HdlStmAssign
    HdlValueId: illegal_c_insn
    HdlValueId: illegal_c_insn_id_o

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlOp: INDEX
        list: ops
            HdlValueId: fetch_rdata
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 15
                    HdlValueInt: 0
    HdlValueId: instr_rdata_c_id_o

UPD HdlStmAssign@@ to 
    UPD HdlValueId@@instr_compressed_int to instr_is_compressed_int
    UPD HdlValueId@@is_compressed_id_o to instr_is_compressed_id_o


CommitId: 6a1ac272da5c17945fe1b058b1a8cfb8fc922e57
Fix linting errors
--- a/rtl/ibex_register_file_ff.sv
+++ b/rtl/ibex_register_file_ff.sv
@@ -61,7 +61,7 @@ module ibex_register_file #(
   logic [NUM_WORDS-1:1]                we_a_dec;
 
   always_comb begin : we_a_decoder
-    for (int i = 1; i < NUM_WORDS; i++) begin
+    for (int unsigned i = 1; i < NUM_WORDS; i++) begin
       we_a_dec[i] = (waddr_a_i == 5'(i)) ?  we_a_i : 1'b0;
     end
   end
ParseResult:
UPD HdlIdDef@@i to i
    INS HdlOp@@PARAMETRIZATION to i
    UPD HdlOp@@PARAMETRIZATION to PARAMETRIZATION
        INS list@@ops to PARAMETRIZATION
        INS HdlOp@@MAP_ASSOCIATION to ops
        HdlOp: MAP_ASSOCIATION
            list: ops
                HdlValueId: signed

UPD HdlIdDef@@i to i
    MOV HdlValueId@@int to i
    HdlValueId: int


CommitId: f35db04b7cf859fd5361215ecc1bc7e94304b4c2
[RTL PMP] Fix address matching bugs
--- a/rtl/ibex_pmp.sv
+++ b/rtl/ibex_pmp.sv
@@ -35,7 +35,6 @@ module ibex_pmp #(
   logic [PMPNumChan-1:0][PMPNumRegions-1:0]   region_match_high;
   logic [PMPNumChan-1:0][PMPNumRegions-1:0]   region_match_low;
   logic [PMPNumChan-1:0][PMPNumRegions-1:0]   region_match_both;
-  logic [PMPNumChan-1:0][PMPNumRegions-1:0]   region_match_partial;
   logic [PMPNumChan-1:0][PMPNumRegions-1:0]   region_perm_check;
   logic [PMPNumChan-1:0][PMPNumRegions-1:0]   machine_access_fault;
   logic [PMPNumChan-1:0][PMPNumRegions-1:0]   user_access_allowed;

ParseResult:
DEL HdlIdDef@@region_match_partial from objs
HdlIdDef: region_match_partial
    HdlOp: INDEX
        list: ops
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: logic
                    HdlOp: DOWNTO
                        list: ops
                            HdlOp: SUB
                                list: ops
                                    HdlValueId: PMPNumChan
                                    HdlValueInt: 1
                            HdlValueInt: 0
            HdlOp: DOWNTO
                list: ops
                    HdlOp: SUB
                        list: ops
                            HdlValueId: PMPNumRegions
                            HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: INTERNAL


CommitId: f35db04b7cf859fd5361215ecc1bc7e94304b4c2
[RTL PMP] Fix address matching bugs
--- a/rtl/ibex_pmp.sv
+++ b/rtl/ibex_pmp.sv
@@ -80,12 +79,9 @@ module ibex_pmp #(
                                            (region_start_addr[r][33:PMPGranularity+2] &
                                             region_addr_mask[r]));
       assign region_match_high[c][r]    = (pmp_req_addr_i[c][33:PMPGranularity+2] <=
-                                           (csr_pmp_addr_i[r][33:PMPGranularity+2] &
-                                            region_addr_mask[r]));
+                                           csr_pmp_addr_i[r][33:PMPGranularity+2]);
       assign region_match_both[c][r]    = region_match_low[c][r] & region_match_high[c][r] &
                                           (csr_pmp_cfg_i[r].mode != PMP_MODE_OFF);
-      assign region_match_partial[c][r] = (region_match_low[c][r] ^ region_match_high[c][r]) &
-                                          (csr_pmp_cfg_i[r].mode != PMP_MODE_OFF);
       // Check specific required permissions
       assign region_perm_check[c][r] =
           ((pmp_req_type_i[c] == PMP_ACC_EXEC)  & csr_pmp_cfg_i[r].exec) |

ParseResult:
UPD HdlStmAssign@@ to 
    UPD HdlOp@@LE to LE
        UPD HdlOp@@AND to LE
        MOV HdlOp@@AND to ops
        HdlOp: AND
            list: ops
                HdlOp: INDEX
                    list: ops
                        HdlOp: INDEX
                            list: ops
                                HdlValueId: csr_pmp_addr_i
                                HdlValueId: r
                        HdlOp: DOWNTO
                            list: ops
                                HdlValueInt: 33
                                HdlOp: ADD
                                    list: ops
                                        HdlValueId: PMPGranularity
                                        HdlValueInt: 2
                HdlOp: INDEX
                    list: ops
                        HdlValueId: region_addr_mask
                        HdlValueId: r
        MOV HdlOp@@INDEX to ops
        HdlOp: INDEX
            list: ops
                HdlOp: INDEX
                    list: ops
                        HdlValueId: pmp_req_addr_i
                        HdlValueId: c
                HdlOp: DOWNTO
                    list: ops
                        HdlValueInt: 33
                        HdlOp: ADD
                            list: ops
                                HdlValueId: PMPGranularity
                                HdlValueInt: 2
        UPD HdlOp@@AND to AND
            DEL HdlOp@@INDEX from ops
            HdlOp: INDEX
                list: ops
                    HdlValueId: region_addr_mask
                    HdlValueId: r
        DEL list@@ops from LE
    DEL HdlOp@@LE from 

DEL HdlStmAssign@@ from body
HdlStmAssign
    HdlOp: AND
        list: ops
            HdlOp: XOR
                list: ops
                    HdlOp: INDEX
                        list: ops
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: region_match_low
                                    HdlValueId: c
                            HdlValueId: r
                    HdlOp: INDEX
                        list: ops
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: region_match_high
                                    HdlValueId: c
                            HdlValueId: r
            HdlOp: NE
                list: ops
                    HdlOp: DOT
                        list: ops
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: csr_pmp_cfg_i
                                    HdlValueId: r
                            HdlValueId: mode
                    HdlValueId: PMP_MODE_OFF
    HdlOp: INDEX
        list: ops
            HdlOp: INDEX
                list: ops
                    HdlValueId: region_match_partial
                    HdlValueId: c
            HdlValueId: r


CommitId: f35db04b7cf859fd5361215ecc1bc7e94304b4c2
[RTL PMP] Fix address matching bugs
--- a/rtl/ibex_pmp.sv
+++ b/rtl/ibex_pmp.sv
@@ -94,14 +90,8 @@ module ibex_pmp #(
       // In machine mode, any match to a locked region without sufficient permissions is a fault
       assign machine_access_fault[c][r] = region_match_both[c][r] & csr_pmp_cfg_i[r].lock &
                                           ~region_perm_check[c][r];
-      if (r == 0) begin : g_region0
-        // In any other mode, any access should fault unless is matches a region
-        assign user_access_allowed[c][r]  = region_match_both[c][r] & region_perm_check[c][r];
-      end else begin : g_oth_regions
-        assign user_access_allowed[c][r]  = region_match_both[c][r] & region_perm_check[c][r] &
-        // any higher priority (lower region number) partial match should also cause a fault
-                                            ~|region_match_partial[c][r-1:0];
-      end
+      // In any other mode, any access should fault unless is matches a region
+      assign user_access_allowed[c][r]  = region_match_both[c][r] & region_perm_check[c][r];
     end
     assign access_fault[c] = (priv_mode_i[c] == PRIV_LVL_M) ? |machine_access_fault[c] :
                                                               ~|user_access_allowed[c];
ParseResult:
MOV HdlStmAssign@@ to body
HdlStmAssign
    HdlOp: AND
        list: ops
            HdlOp: INDEX
                list: ops
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: region_match_both
                            HdlValueId: c
                    HdlValueId: r
            HdlOp: INDEX
                list: ops
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: region_perm_check
                            HdlValueId: c
                    HdlValueId: r
    HdlOp: INDEX
        list: ops
            HdlOp: INDEX
                list: ops
                    HdlValueId: user_access_allowed
                    HdlValueId: c
            HdlValueId: r

UPD HdlStmIf@@ to 
    DEL HdlOp@@EQ from 
    HdlOp: EQ
        list: ops
            HdlValueId: r
            HdlValueInt: 0
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL list@@elifs from 
    DEL HdlStmBlock@@SEQ from 
    HdlStmBlock: SEQ
        list: body
            HdlStmAssign
                HdlOp: AND
                    list: ops
                        HdlOp: AND
                            list: ops
                                HdlOp: INDEX
                                    list: ops
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: region_match_both
                                                HdlValueId: c
                                        HdlValueId: r
                                HdlOp: INDEX
                                    list: ops
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: region_perm_check
                                                HdlValueId: c
                                        HdlValueId: r
                        HdlOp: NOR_UNARY
                            list: ops
                                HdlOp: INDEX
                                    list: ops
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: region_match_partial
                                                HdlValueId: c
                                        HdlOp: DOWNTO
                                            list: ops
                                                HdlOp: SUB
                                                    list: ops
                                                        HdlValueId: r
                                                        HdlValueInt: 1
                                                HdlValueInt: 0
                HdlOp: INDEX
                    list: ops
                        HdlOp: INDEX
                            list: ops
                                HdlValueId: user_access_allowed
                                HdlValueId: c
                        HdlValueId: r

DEL HdlStmIf@@ from body


CommitId: 44b033cf8bf858e893080fe62b452791fdd3bd4d
[rtl] Add support for instruction fetch errors
--- a/rtl/ibex_fetch_fifo.sv
+++ b/rtl/ibex_fetch_fifo.sv
@@ -30,6 +30,7 @@ module ibex_fetch_fifo (
     // input port
     input  logic [31:0] in_addr_i,
     input  logic [31:0] in_rdata_i,
+    input  logic        in_err_i,
     input  logic        in_valid_i,
     output logic        in_ready_o,
 

ParseResult:
INS HdlIdDef@@in_err_i to ports
HdlIdDef: in_err_i
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: IN


CommitId: 44b033cf8bf858e893080fe62b452791fdd3bd4d
[rtl] Add support for instruction fetch errors
--- a/rtl/ibex_fetch_fifo.sv
+++ b/rtl/ibex_fetch_fifo.sv
@@ -39,6 +40,7 @@ module ibex_fetch_fifo (
     input  logic        out_ready_i,
     output logic [31:0] out_rdata_o,
     output logic [31:0] out_addr_o,
+    output logic        out_err_o,
 
     output logic        out_valid_stored_o // same as out_valid_o, except that if something is
                                            // incoming now it is not included. This signal is

ParseResult:
INS HdlIdDef@@out_err_o to ports
HdlIdDef: out_err_o
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: OUT


CommitId: 44b033cf8bf858e893080fe62b452791fdd3bd4d
[rtl] Add support for instruction fetch errors
--- a/rtl/ibex_fetch_fifo.sv
+++ b/rtl/ibex_fetch_fifo.sv
@@ -50,10 +52,12 @@ module ibex_fetch_fifo (
   // index 0 is used for output
   logic [DEPTH-1:0] [31:0]  addr_n,    addr_int,    addr_q;
   logic [DEPTH-1:0] [31:0]  rdata_n,   rdata_int,   rdata_q;
+  logic [DEPTH-1:0]         err_n,     err_int,     err_q;
   logic [DEPTH-1:0]         valid_n,   valid_int,   valid_q;
 
   logic             [31:2]  addr_next;
   logic             [31:0]  rdata, rdata_unaligned;
+  logic                     err,   err_unaligned;
   logic                     valid, valid_unaligned;
 
   logic                     aligned_is_compressed, unaligned_is_compressed;

ParseResult:
INS HdlIdDef@@err_n to objs
HdlIdDef: err_n
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlOp: SUB
                        list: ops
                            HdlValueId: DEPTH
                            HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: INTERNAL

INS HdlIdDef@@err_int to objs
HdlIdDef: err_int
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlOp: SUB
                        list: ops
                            HdlValueId: DEPTH
                            HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: INTERNAL

INS HdlIdDef@@err_q to objs
HdlIdDef: err_q
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlOp: SUB
                        list: ops
                            HdlValueId: DEPTH
                            HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: INTERNAL

INS HdlIdDef@@err to objs
HdlIdDef: err
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

INS HdlIdDef@@err_unaligned to objs
HdlIdDef: err_unaligned
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL


CommitId: 44b033cf8bf858e893080fe62b452791fdd3bd4d
[rtl] Add support for instruction fetch errors
--- a/rtl/ibex_fetch_fifo.sv
+++ b/rtl/ibex_fetch_fifo.sv
@@ -65,12 +69,22 @@ module ibex_fetch_fifo (
 
 
   assign rdata = valid_q[0] ? rdata_q[0] : in_rdata_i;
+  assign err   = valid_q[0] ? err_q[0]   : in_err_i;
   assign valid = valid_q[0] | in_valid_i;
 
   assign rdata_unaligned = valid_q[1] ? {rdata_q[1][15:0], rdata[31:16]} :
                                         {in_rdata_i[15:0], rdata[31:16]};
-  // it is implied that rdata_valid_q[0] is set
-  assign valid_unaligned = valid_q[1] | (valid_q[0] & in_valid_i);
+  // If entry[1] is valid, an error can come from entry[0] or entry[1], unless the
+  // instruction in entry[0] is compressed (entry[1] is a new instruction)
+  // If entry[1] is not valid, and entry[0] is, an error can come from entry[0] or the incoming
+  // data, unless the instruction in entry[0] is compressed
+  // If entry[0] is not valid, the error must come from the incoming data
+  assign err_unaligned   = valid_q[1] ? ((err_q[1] & ~unaligned_is_compressed) | err_q[0]) :
+                                        ((valid_q[0] & err_q[0]) |
+                                         (in_err_i & (~valid_q[0] | ~unaligned_is_compressed)));
+  // An uncompressed unaligned instruction is only valid if both parts are available
+  assign valid_unaligned = valid_q[1] ? 1'b1 :
+                                        (valid_q[0] & in_valid_i);
 
   assign unaligned_is_compressed    = rdata[17:16] != 2'b11;
   assign aligned_is_compressed      = rdata[ 1: 0] != 2'b11;

ParseResult:
INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: TERNARY
        list: ops
            HdlOp: INDEX
                list: ops
                    HdlValueId: valid_q
                    HdlValueInt: 0
            HdlOp: INDEX
                list: ops
                    HdlValueId: err_q
                    HdlValueInt: 0
            HdlValueId: in_err_i
    HdlValueId: err

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: TERNARY
        list: ops
            HdlOp: INDEX
                list: ops
                    HdlValueId: valid_q
                    HdlValueInt: 1
            HdlOp: OR
                list: ops
                    HdlOp: AND
                        list: ops
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: err_q
                                    HdlValueInt: 1
                            HdlOp: NEG
                                list: ops
                                    HdlValueId: unaligned_is_compressed
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: err_q
                            HdlValueInt: 0
            HdlOp: OR
                list: ops
                    HdlOp: AND
                        list: ops
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: valid_q
                                    HdlValueInt: 0
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: err_q
                                    HdlValueInt: 0
                    HdlOp: AND
                        list: ops
                            HdlValueId: in_err_i
                            HdlOp: OR
                                list: ops
                                    HdlOp: NEG
                                        list: ops
                                            HdlOp: INDEX
                                                list: ops
                                                    HdlValueId: valid_q
                                                    HdlValueInt: 0
                                    HdlOp: NEG
                                        list: ops
                                            HdlValueId: unaligned_is_compressed
    HdlValueId: err_unaligned

UPD HdlStmAssign@@ to 
    UPD HdlOp@@OR to TERNARY


CommitId: 44b033cf8bf858e893080fe62b452791fdd3bd4d
[rtl] Add support for instruction fetch errors
--- a/rtl/ibex_fetch_fifo.sv
+++ b/rtl/ibex_fetch_fifo.sv
@@ -96,6 +111,7 @@ module ibex_fetch_fifo (
     end else begin
       // aligned case
       out_rdata_o = rdata;
+      out_err_o   = err;
       out_valid_o = valid;
     end
   end

ParseResult:
UPD HdlStmAssign@@ to 
    UPD HdlOp@@TERNARY to TERNARY
        INS HdlValueInt@@1 to ops


CommitId: 44b033cf8bf858e893080fe62b452791fdd3bd4d
[rtl] Add support for instruction fetch errors
--- a/rtl/ibex_fetch_fifo.sv
+++ b/rtl/ibex_fetch_fifo.sv
@@ -134,12 +150,14 @@ module ibex_fetch_fifo (
   always_comb begin
     addr_int    = addr_q;
     rdata_int   = rdata_q;
+    err_int     = err_q;
     valid_int   = valid_q;
     if (in_valid_i) begin
       for (int j = 0; j < DEPTH; j++) begin
         if (!valid_q[j]) begin
           addr_int[j]  = in_addr_i;
           rdata_int[j] = in_rdata_i;
+          err_int[j]   = in_err_i;
           valid_int[j] = 1'b1;
           break;
         end

ParseResult:
UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: out_err_o
                HdlValueId: err_unaligned
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: out_err_o
                HdlValueId: err


CommitId: 44b033cf8bf858e893080fe62b452791fdd3bd4d
[rtl] Add support for instruction fetch errors
--- a/rtl/ibex_fetch_fifo.sv
+++ b/rtl/ibex_fetch_fifo.sv
@@ -165,6 +184,7 @@ module ibex_fetch_fifo (
         end
 
         rdata_n  = {32'b0, rdata_int[DEPTH-1:1]};
+        err_n    = {1'b0,  err_int[DEPTH-1:1]};
         valid_n  = {1'b0,  valid_int[DEPTH-1:1]};
       end else if (aligned_is_compressed) begin
         // just increase address, do not move to next entry in FIFO

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: err_int
                HdlValueId: err_q


CommitId: 44b033cf8bf858e893080fe62b452791fdd3bd4d
[rtl] Add support for instruction fetch errors
--- a/rtl/ibex_fetch_fifo.sv
+++ b/rtl/ibex_fetch_fifo.sv
@@ -173,6 +193,7 @@ module ibex_fetch_fifo (
         // move to next entry in FIFO
         addr_n[0] = {addr_next[31:2], 2'b00};
         rdata_n   = {32'b0, rdata_int[DEPTH-1:1]};
+        err_n     = {1'b0,  err_int[DEPTH-1:1]};
         valid_n   = {1'b0,  valid_int[DEPTH-1:1]};
       end
     end

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: err_int
                HdlValueId: err_q

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlOp: INDEX
                    list: ops
                        HdlValueId: err_int
                        HdlValueId: j
                HdlValueId: in_err_i


CommitId: 44b033cf8bf858e893080fe62b452791fdd3bd4d
[rtl] Add support for instruction fetch errors
--- a/rtl/ibex_fetch_fifo.sv
+++ b/rtl/ibex_fetch_fifo.sv
@@ -186,6 +207,7 @@ module ibex_fetch_fifo (
     if (!rst_ni) begin
       addr_q    <= '{default: '0};
       rdata_q   <= '{default: '0};
+      err_q     <= '0;
       valid_q   <= '0;
     end else begin
       // on a clear signal from outside we invalidate the content of the FIFO

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: err_int
                HdlValueId: err_q

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: err_n
                HdlValueId: err_int

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: err_q


CommitId: 44b033cf8bf858e893080fe62b452791fdd3bd4d
[rtl] Add support for instruction fetch errors
--- a/rtl/ibex_fetch_fifo.sv
+++ b/rtl/ibex_fetch_fifo.sv
@@ -195,6 +217,7 @@ module ibex_fetch_fifo (
       end else begin
         addr_q    <= addr_n;
         rdata_q   <= rdata_n;
+        err_q     <= err_n;
         valid_q   <= valid_n;
       end
     end
ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: err_n
                HdlValueId: err_int

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: err_n
                HdlOp: CONCAT
                    list: ops
                        HdlValueInt: 0
                        HdlOp: INDEX
                            list: ops
                                HdlValueId: err_int
                                HdlOp: DOWNTO
                                    list: ops
                                        HdlOp: SUB
                                            list: ops
                                                HdlValueId: DEPTH
                                                HdlValueInt: 1
                                        HdlValueInt: 1
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: err_n
                HdlOp: CONCAT
                    list: ops
                        HdlValueInt: 0
                        HdlOp: INDEX
                            list: ops
                                HdlValueId: err_int
                                HdlOp: DOWNTO
                                    list: ops
                                        HdlOp: SUB
                                            list: ops
                                                HdlValueId: DEPTH
                                                HdlValueInt: 1
                                        HdlValueInt: 1

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueId: err_n
    HdlValueId: err_q


CommitId: c7cb958f0d6f143d835e33d7efe27336cc7737c1
Update lowrisc_ip to lowRISC/opentitan@ca950b43a
--- a/vendor/lowrisc_ip/ip/prim/rtl/prim_secded_22_16_dec.sv
+++ b/vendor/lowrisc_ip/ip/prim/rtl/prim_secded_22_16_dec.sv
@@ -2,12 +2,11 @@
 // Licensed under the Apache License, Version 2.0, see LICENSE for details.
 // SPDX-License-Identifier: Apache-2.0
 //
-// SECDED Decoder generated by
-// util/design/secded_gen.py -m 6 -k 16 -s 1592631616 -c hsiao
+// SECDED decoder generated by util/design/secded_gen.py
 
 module prim_secded_22_16_dec (
-  input        [21:0] in,
-  output logic [15:0] d_o,
+  input        [21:0] data_i,
+  output logic [15:0] data_o,
   output logic [5:0] syndrome_o,
   output logic [1:0] err_o
 );

ParseResult:
UPD HdlIdDef@@in to data_i

UPD HdlIdDef@@d_o to data_o


CommitId: f2fccaadbc6aaedf08bec73b7386ffce3aaeb618
[Prefetch buffer] - various bug fixes
--- a/rtl/ibex_prefetch_buffer.sv
+++ b/rtl/ibex_prefetch_buffer.sv
@@ -39,20 +39,21 @@ module ibex_prefetch_buffer (
     output logic        busy_o
 );
 
-  // Changes to the address flops would be required for > 2 outstanding requests
-  localparam int unsigned NUM_REQS = 2;
+  localparam int unsigned NUM_REQS  = 2;
 
-  logic                valid_req;
+  logic                valid_new_req, valid_req;
   logic                valid_req_d, valid_req_q;
-  logic                hold_addr_d, hold_addr_q;
+  logic                discard_req_d, discard_req_q;
   logic                gnt_or_pmp_err, rvalid_or_pmp_err;
   logic [NUM_REQS-1:0] rdata_outstanding_n, rdata_outstanding_s, rdata_outstanding_q;
-  logic [NUM_REQS-1:0] branch_abort_n, branch_abort_s, branch_abort_q;
+  logic [NUM_REQS-1:0] branch_discard_n, branch_discard_s, branch_discard_q;
+  logic [NUM_REQS-1:0] rdata_pmp_err_n, rdata_pmp_err_s, rdata_pmp_err_q;
 
-  logic [31:0]         instr_addr_q, fetch_addr;
+  logic [31:0]         stored_addr_d, stored_addr_q;
+  logic                stored_addr_en;
+  logic [31:0]         fetch_addr_d, fetch_addr_q;
+  logic                fetch_addr_en;
   logic [31:0]         instr_addr, instr_addr_w_aligned;
-  logic                addr_valid;
-  logic                pmp_err_q;
   logic                instr_or_pmp_err;
 
   logic                fifo_valid;

ParseResult:
MOV HdlIdDef@@pmp_err_q to objs
HdlIdDef: pmp_err_q
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

MOV HdlIdDef@@addr_valid to objs
HdlIdDef: addr_valid
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

INS HdlIdDef@@valid_new_req to objs
HdlIdDef: valid_new_req
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

UPD HdlIdDef@@hold_addr_d to discard_req_d

UPD HdlIdDef@@hold_addr_q to discard_req_q

INS HdlIdDef@@branch_discard_n to objs
HdlIdDef: branch_discard_n
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlOp: SUB
                        list: ops
                            HdlValueId: NUM_REQS
                            HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: INTERNAL

INS HdlIdDef@@branch_discard_s to objs
HdlIdDef: branch_discard_s
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlOp: SUB
                        list: ops
                            HdlValueId: NUM_REQS
                            HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: INTERNAL

UPD HdlIdDef@@branch_abort_n to branch_discard_q

UPD HdlIdDef@@branch_abort_s to rdata_pmp_err_n

UPD HdlIdDef@@branch_abort_q to rdata_pmp_err_s

INS HdlIdDef@@rdata_pmp_err_q to objs
HdlIdDef: rdata_pmp_err_q
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlOp: SUB
                        list: ops
                            HdlValueId: NUM_REQS
                            HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: INTERNAL

UPD HdlIdDef@@instr_addr_q to stored_addr_d

UPD HdlIdDef@@fetch_addr to stored_addr_q

UPD HdlIdDef@@pmp_err_q to stored_addr_en

INS HdlIdDef@@fetch_addr_d to objs
HdlIdDef: fetch_addr_d
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 31
                    HdlValueInt: 0
    HdlDirection: INTERNAL

INS HdlIdDef@@fetch_addr_q to objs
HdlIdDef: fetch_addr_q
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 31
                    HdlValueInt: 0
    HdlDirection: INTERNAL

UPD HdlIdDef@@addr_valid to fetch_addr_en


CommitId: f2fccaadbc6aaedf08bec73b7386ffce3aaeb618
[Prefetch buffer] - various bug fixes
--- a/rtl/ibex_prefetch_buffer.sv
+++ b/rtl/ibex_prefetch_buffer.sv
@@ -71,19 +72,21 @@ module ibex_prefetch_buffer (
 
   // Instruction fetch errors are valid on the data phase of a request
   // PMP errors are generated in the address phase, and registered into a fake data phase
-  assign instr_or_pmp_err = instr_err_i | pmp_err_q;
+  assign instr_or_pmp_err = instr_err_i | rdata_pmp_err_q[0];
 
   // A branch will invalidate any previously fetched instructions
   assign fifo_clear = branch_i;
 
-  ibex_fetch_fifo fifo_i (
+  ibex_fetch_fifo #(
+    .NUM_REQS (NUM_REQS)
+  ) fifo_i (
       .clk_i                 ( clk_i             ),
       .rst_ni                ( rst_ni            ),
 
       .clear_i               ( fifo_clear        ),
 
       .in_valid_i            ( fifo_valid        ),
-      .in_addr_i             ( instr_addr_q      ),
+      .in_addr_i             ( addr_i            ),
       .in_rdata_i            ( instr_rdata_i     ),
       .in_err_i              ( instr_or_pmp_err  ),
       .in_ready_o            ( fifo_ready        ),

ParseResult:
UPD HdlStmAssign@@ to 
    UPD HdlOp@@OR to OR
        INS HdlOp@@INDEX to ops
        UPD HdlOp@@INDEX to INDEX
            INS list@@ops to INDEX
            INS HdlValueInt@@0 to ops

UPD HdlStmAssign@@ to 
    UPD HdlOp@@OR to OR
        UPD HdlValueId@@pmp_err_q to rdata_pmp_err_q
        MOV HdlValueId@@pmp_err_q to ops
        HdlValueId: pmp_err_q


CommitId: f2fccaadbc6aaedf08bec73b7386ffce3aaeb618
[Prefetch buffer] - various bug fixes
--- a/rtl/ibex_prefetch_buffer.sv
+++ b/rtl/ibex_prefetch_buffer.sv
@@ -194,22 +226,16 @@ module ibex_prefetch_buffer (
   always_ff @(posedge clk_i or negedge rst_ni) begin
     if (!rst_ni) begin
       valid_req_q          <= 1'b0;
-      hold_addr_q          <= 1'b0;
+      discard_req_q        <= 1'b0;
       rdata_outstanding_q  <= 'b0;
-      branch_abort_q       <= 'b0;
+      branch_discard_q     <= 'b0;
+      rdata_pmp_err_q      <= 'b0;
     end else begin
       valid_req_q          <= valid_req_d;
-      hold_addr_q          <= hold_addr_d;
+      discard_req_q        <= discard_req_d;
       rdata_outstanding_q  <= rdata_outstanding_s;
-      branch_abort_q       <= branch_abort_s;
-    end
-  end
-
-  // CPU resets with a branch, so no need to reset these
-  always_ff @(posedge clk_i) begin
-    if (addr_valid) begin
-      instr_addr_q <= instr_addr;
-      pmp_err_q    <= instr_pmp_err_i;
+      branch_discard_q     <= branch_discard_s;
+      rdata_pmp_err_q      <= rdata_pmp_err_s;
     end
   end
 

ParseResult:
UPD HdlStmProcess@@ to 
    MOV list@@sensitivity to 
    list: sensitivity
        HdlOp: RISING
            list: ops
                HdlValueId: clk_i
    DEL HdlStmBlock@@SEQ from 
    HdlStmBlock: SEQ
        list: body
            HdlStmIf
                HdlValueId: addr_valid
                HdlStmBlock: SEQ
                    list: body
                        HdlStmAssign
                            HdlValueId: instr_addr
                            HdlValueId: instr_addr_q
                        HdlStmAssign
                            HdlValueId: instr_pmp_err_i
                            HdlValueId: pmp_err_q
                list: elifs
    DEL HdlStmProcessTriggerConstrain@@FF from 

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: rdata_pmp_err_q

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueId: rdata_pmp_err_s
    HdlValueId: rdata_pmp_err_q

UPD HdlStmAssign@@ to 
    UPD HdlValueId@@hold_addr_q to discard_req_q

UPD HdlStmAssign@@ to 
    UPD HdlValueId@@branch_abort_q to branch_discard_q

UPD HdlStmAssign@@ to 
    UPD HdlValueId@@hold_addr_d to discard_req_d
    UPD HdlValueId@@hold_addr_q to discard_req_q

UPD HdlStmAssign@@ to 
    UPD HdlValueId@@branch_abort_s to branch_discard_s
    UPD HdlValueId@@branch_abort_q to branch_discard_q

DEL HdlStmProcess@@ from objs


CommitId: 8e452c33951a1815298210a2f69f502e512cc6f2
Fixed external interrupt request during invalid instruction
--- a/id_stage.sv
+++ b/id_stage.sv
@@ -159,6 +159,7 @@ module riscv_id_stage
 
     output logic        exc_save_if_o,
     output logic        exc_save_id_o,
+    output logic        exc_save_takenbranch_o,
     output logic        exc_restore_id_o,
 
     input  logic        lsu_load_err_i,

ParseResult:
INS HdlIdDef@@exc_save_takenbranch_o to ports
HdlIdDef: exc_save_takenbranch_o
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: OUT


CommitId: 8e452c33951a1815298210a2f69f502e512cc6f2
Fixed external interrupt request during invalid instruction
--- a/id_stage.sv
+++ b/id_stage.sv
@@ -252,7 +253,7 @@ module riscv_id_stage
 
 
   // Signals running between controller and exception controller
-  logic        exc_req, exc_ack;  // handshake
+  logic        exc_req, ext_req, exc_ack;  // handshake
 
   // Register file interface
   logic [4:0]  regfile_addr_ra_id;

ParseResult:
INS HdlIdDef@@ext_req to objs
HdlIdDef: ext_req
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL


CommitId: 8e452c33951a1815298210a2f69f502e512cc6f2
Fixed external interrupt request during invalid instruction
--- a/id_stage.sv
+++ b/id_stage.sv
@@ -1177,7 +1181,7 @@ module riscv_id_stage
           data_type_ex_o            <= data_type_id;
           data_sign_ext_ex_o        <= data_sign_ext_id;
           data_reg_offset_ex_o      <= data_reg_offset_id;
-          data_load_event_ex_o      <= data_load_event_id;;
+          data_load_event_ex_o      <= data_load_event_id;
         end else begin
           data_load_event_ex_o      <= 1'b0;
         end
ParseResult:
DEL HdlStmNop@@ from body


CommitId: 2c75c2b2ec90bebb756386e1360810474323c1ad
Update lowrisc_ip to lowRISC/opentitan@1ae03937f
--- a/vendor/lowrisc_ip/ip/prim/rtl/prim_secded_72_64_dec.sv
+++ b/vendor/lowrisc_ip/ip/prim/rtl/prim_secded_72_64_dec.sv
@@ -15,14 +15,14 @@ module prim_secded_72_64_dec (
   logic single_error;
 
   // Syndrome calculation
-  assign syndrome_o[0] = ^(in & 72'h019B000000001FFFFF);
-  assign syndrome_o[1] = ^(in & 72'h027900000FFFE0003F);
-  assign syndrome_o[2] = ^(in & 72'h04DC003FF003E007C1);
-  assign syndrome_o[3] = ^(in & 72'h08370FC0F03C207842);
-  assign syndrome_o[4] = ^(in & 72'h10EA71C711C4438884);
-  assign syndrome_o[5] = ^(in & 72'h202FB65926488C9108);
-  assign syndrome_o[6] = ^(in & 72'h40E6DAAA4A91152210);
-  assign syndrome_o[7] = ^(in & 72'h80D5ED348D221A4420);
+  assign syndrome_o[0] = ^(in & 72'h019D000000001FFFFF);
+  assign syndrome_o[1] = ^(in & 72'h027600000FFFE0003F);
+  assign syndrome_o[2] = ^(in & 72'h0479003FF003E007C1);
+  assign syndrome_o[3] = ^(in & 72'h08A70FC0F03C207842);
+  assign syndrome_o[4] = ^(in & 72'h10D371C711C4438884);
+  assign syndrome_o[5] = ^(in & 72'h20F8B65926488C9108);
+  assign syndrome_o[6] = ^(in & 72'h40AEDAAA4A91152210);
+  assign syndrome_o[7] = ^(in & 72'h804FED348D221A4420);
 
   // Corrected output calculation
   assign d_o[0] = (syndrome_o == 8'h7) ^ in[0];

ParseResult:
INS HdlStmAssign@@ to objs

INS HdlStmAssign@@ to objs

INS HdlStmAssign@@ to objs

INS HdlStmAssign@@ to objs

INS HdlStmAssign@@ to objs

INS HdlStmAssign@@ to objs

INS HdlStmAssign@@ to objs

INS HdlStmAssign@@ to objs

UPD HdlStmAssign@@ to 
    INS HdlOp@@XOR_UNARY to 
    HdlOp: XOR_UNARY
        list: ops
            HdlOp: AND
                list: ops
                    HdlValueId: in
                    HdlValueInt: 019d000000001fffff

UPD HdlStmAssign@@ to 
    MOV HdlOp@@INDEX to 
    HdlOp: INDEX
        list: ops
            HdlValueId: syndrome_o
            HdlValueInt: 0
    DEL HdlOp@@XOR_UNARY from 
    HdlOp: XOR_UNARY
        list: ops
            HdlOp: AND
                list: ops
                    HdlValueId: in
                    HdlValueInt: 019b000000001fffff

UPD HdlStmAssign@@ to 
    INS HdlOp@@XOR_UNARY to 
    HdlOp: XOR_UNARY
        list: ops
            HdlOp: AND
                list: ops
                    HdlValueId: in
                    HdlValueInt: 027600000fffe0003f

UPD HdlStmAssign@@ to 
    MOV HdlOp@@INDEX to 
    HdlOp: INDEX
        list: ops
            HdlValueId: syndrome_o
            HdlValueInt: 1
    DEL HdlOp@@XOR_UNARY from 
    HdlOp: XOR_UNARY
        list: ops
            HdlOp: AND
                list: ops
                    HdlValueId: in
                    HdlValueInt: 027900000fffe0003f

UPD HdlStmAssign@@ to 
    INS HdlOp@@XOR_UNARY to 
    HdlOp: XOR_UNARY
        list: ops
            HdlOp: AND
                list: ops
                    HdlValueId: in
                    HdlValueInt: 0479003ff003e007c1

UPD HdlStmAssign@@ to 
    MOV HdlOp@@INDEX to 
    HdlOp: INDEX
        list: ops
            HdlValueId: syndrome_o
            HdlValueInt: 2
    DEL HdlOp@@XOR_UNARY from 
    HdlOp: XOR_UNARY
        list: ops
            HdlOp: AND
                list: ops
                    HdlValueId: in
                    HdlValueInt: 04dc003ff003e007c1

UPD HdlStmAssign@@ to 
    INS HdlOp@@XOR_UNARY to 
    HdlOp: XOR_UNARY
        list: ops
            HdlOp: AND
                list: ops
                    HdlValueId: in
                    HdlValueInt: 08a70fc0f03c207842

UPD HdlStmAssign@@ to 
    MOV HdlOp@@INDEX to 
    HdlOp: INDEX
        list: ops
            HdlValueId: syndrome_o
            HdlValueInt: 3
    DEL HdlOp@@XOR_UNARY from 
    HdlOp: XOR_UNARY
        list: ops
            HdlOp: AND
                list: ops
                    HdlValueId: in
                    HdlValueInt: 08370fc0f03c207842

UPD HdlStmAssign@@ to 
    INS HdlOp@@XOR_UNARY to 
    HdlOp: XOR_UNARY
        list: ops
            HdlOp: AND
                list: ops
                    HdlValueId: in
                    HdlValueInt: 10d371c711c4438884

UPD HdlStmAssign@@ to 
    MOV HdlOp@@INDEX to 
    HdlOp: INDEX
        list: ops
            HdlValueId: syndrome_o
            HdlValueInt: 4
    DEL HdlOp@@XOR_UNARY from 
    HdlOp: XOR_UNARY
        list: ops
            HdlOp: AND
                list: ops
                    HdlValueId: in
                    HdlValueInt: 10ea71c711c4438884

UPD HdlStmAssign@@ to 
    INS HdlOp@@XOR_UNARY to 
    HdlOp: XOR_UNARY
        list: ops
            HdlOp: AND
                list: ops
                    HdlValueId: in
                    HdlValueInt: 20f8b65926488c9108

UPD HdlStmAssign@@ to 
    MOV HdlOp@@INDEX to 
    HdlOp: INDEX
        list: ops
            HdlValueId: syndrome_o
            HdlValueInt: 5
    DEL HdlOp@@XOR_UNARY from 
    HdlOp: XOR_UNARY
        list: ops
            HdlOp: AND
                list: ops
                    HdlValueId: in
                    HdlValueInt: 202fb65926488c9108

UPD HdlStmAssign@@ to 
    INS HdlOp@@XOR_UNARY to 
    HdlOp: XOR_UNARY
        list: ops
            HdlOp: AND
                list: ops
                    HdlValueId: in
                    HdlValueInt: 40aedaaa4a91152210

UPD HdlStmAssign@@ to 
    MOV HdlOp@@INDEX to 
    HdlOp: INDEX
        list: ops
            HdlValueId: syndrome_o
            HdlValueInt: 6
    DEL HdlOp@@XOR_UNARY from 
    HdlOp: XOR_UNARY
        list: ops
            HdlOp: AND
                list: ops
                    HdlValueId: in
                    HdlValueInt: 40e6daaa4a91152210

UPD HdlStmAssign@@ to 
    INS HdlOp@@XOR_UNARY to 
    HdlOp: XOR_UNARY
        list: ops
            HdlOp: AND
                list: ops
                    HdlValueId: in
                    HdlValueInt: 804fed348d221a4420

UPD HdlStmAssign@@ to 
    MOV HdlOp@@INDEX to 
    HdlOp: INDEX
        list: ops
            HdlValueId: syndrome_o
            HdlValueInt: 7
    DEL HdlOp@@XOR_UNARY from 
    HdlOp: XOR_UNARY
        list: ops
            HdlOp: AND
                list: ops
                    HdlValueId: in
                    HdlValueInt: 80d5ed348d221a4420

DEL HdlStmAssign@@ from objs

DEL HdlStmAssign@@ from objs

DEL HdlStmAssign@@ from objs

DEL HdlStmAssign@@ from objs

DEL HdlStmAssign@@ from objs

DEL HdlStmAssign@@ from objs

DEL HdlStmAssign@@ from objs

DEL HdlStmAssign@@ from objs


CommitId: 2c75c2b2ec90bebb756386e1360810474323c1ad
Update lowrisc_ip to lowRISC/opentitan@1ae03937f
--- a/vendor/lowrisc_ip/ip/prim/rtl/prim_secded_72_64_dec.sv
+++ b/vendor/lowrisc_ip/ip/prim/rtl/prim_secded_72_64_dec.sv
@@ -81,14 +81,14 @@ module prim_secded_72_64_dec (
   assign d_o[53] = (syndrome_o == 8'hb0) ^ in[53];
   assign d_o[54] = (syndrome_o == 8'hd0) ^ in[54];
   assign d_o[55] = (syndrome_o == 8'he0) ^ in[55];
-  assign d_o[56] = (syndrome_o == 8'hab) ^ in[56];
-  assign d_o[57] = (syndrome_o == 8'h79) ^ in[57];
-  assign d_o[58] = (syndrome_o == 8'hec) ^ in[58];
-  assign d_o[59] = (syndrome_o == 8'h37) ^ in[59];
-  assign d_o[60] = (syndrome_o == 8'h8f) ^ in[60];
-  assign d_o[61] = (syndrome_o == 8'h7a) ^ in[61];
-  assign d_o[62] = (syndrome_o == 8'hd6) ^ in[62];
-  assign d_o[63] = (syndrome_o == 8'hd5) ^ in[63];
+  assign d_o[56] = (syndrome_o == 8'h9d) ^ in[56];
+  assign d_o[57] = (syndrome_o == 8'hda) ^ in[57];
+  assign d_o[58] = (syndrome_o == 8'hcb) ^ in[58];
+  assign d_o[59] = (syndrome_o == 8'he5) ^ in[59];
+  assign d_o[60] = (syndrome_o == 8'h37) ^ in[60];
+  assign d_o[61] = (syndrome_o == 8'h6e) ^ in[61];
+  assign d_o[62] = (syndrome_o == 8'hb6) ^ in[62];
+  assign d_o[63] = (syndrome_o == 8'h79) ^ in[63];
 
   // err_o calc. bit0: single error, bit1: double error
   assign single_error = ^syndrome_o;
ParseResult:
UPD HdlStmAssign@@ to 
    INS HdlOp@@XOR to 
    UPD HdlOp@@XOR to XOR
        INS list@@ops to XOR
        INS HdlOp@@EQ to ops
        HdlOp: EQ
            list: ops
                HdlValueId: syndrome_o
                HdlValueInt: da

UPD HdlStmAssign@@ to 
    INS HdlOp@@XOR to 
    UPD HdlOp@@XOR to XOR
        INS list@@ops to XOR
        INS HdlOp@@EQ to ops
        HdlOp: EQ
            list: ops
                HdlValueId: syndrome_o
                HdlValueInt: e5

UPD HdlStmAssign@@ to 
    MOV HdlOp@@XOR to 
    HdlOp: XOR
        list: ops
            HdlOp: EQ
                list: ops
                    HdlValueId: syndrome_o
                    HdlValueInt: 37
            HdlOp: INDEX
                list: ops
                    HdlValueId: in
                    HdlValueInt: 59
    UPD HdlOp@@XOR to XOR
        MOV HdlOp@@INDEX to ops
        HdlOp: INDEX
            list: ops
                HdlValueId: in
                HdlValueInt: 59

UPD HdlStmAssign@@ to 
    MOV HdlOp@@XOR to 
    HdlOp: XOR
        list: ops
            HdlOp: EQ
                list: ops
                    HdlValueId: syndrome_o
                    HdlValueInt: 79
            HdlOp: INDEX
                list: ops
                    HdlValueId: in
                    HdlValueInt: 57
    UPD HdlOp@@XOR to XOR
        MOV HdlOp@@INDEX to ops
        HdlOp: INDEX
            list: ops
                HdlValueId: in
                HdlValueInt: 57

UPD HdlStmAssign@@ to 
    UPD HdlOp@@XOR to XOR
        MOV HdlOp@@INDEX to ops
        HdlOp: INDEX
            list: ops
                HdlValueId: in
                HdlValueInt: 60
        DEL HdlOp@@EQ from ops
        HdlOp: EQ
            list: ops
                HdlValueId: syndrome_o
                HdlValueInt: 8f
        DEL list@@ops from XOR
    DEL HdlOp@@XOR from 

UPD HdlStmAssign@@ to 
    UPD HdlOp@@XOR to XOR
        MOV HdlOp@@INDEX to ops
        HdlOp: INDEX
            list: ops
                HdlValueId: in
                HdlValueInt: 63
        DEL HdlOp@@EQ from ops
        HdlOp: EQ
            list: ops
                HdlValueId: syndrome_o
                HdlValueInt: d5
        DEL list@@ops from XOR
    DEL HdlOp@@XOR from 

UPD HdlStmAssign@@ to 
    UPD HdlOp@@XOR to XOR
        UPD HdlOp@@EQ to EQ
            UPD HdlValueInt@@ab to 9d

UPD HdlStmAssign@@ to 
    UPD HdlOp@@XOR to XOR
        UPD HdlOp@@EQ to EQ
            UPD HdlValueInt@@ec to cb

UPD HdlStmAssign@@ to 
    UPD HdlOp@@XOR to XOR
        UPD HdlOp@@EQ to EQ
            UPD HdlValueInt@@7a to 6e

UPD HdlStmAssign@@ to 
    UPD HdlOp@@XOR to XOR
        UPD HdlOp@@EQ to EQ
            UPD HdlValueInt@@d6 to b6


CommitId: 1162b995fa5c75c222a0aa6a48fa746e6ceb0249
CSRs: reset `dcsr.XDEBUGVER` to `XDEBUGVER_STD` instead of 0
--- a/rtl/ibex_cs_registers.sv
+++ b/rtl/ibex_cs_registers.sv
@@ -596,7 +596,7 @@ module ibex_cs_registers #(
       mtval_q        <= '0;
       mtvec_q        <= 32'b01;
       dcsr_q         <= '{
-          xdebugver: XDEBUGVER_NO,   // 4'h0
+          xdebugver: XDEBUGVER_STD,
           cause:     DBG_CAUSE_NONE, // 3'h0
           prv:       PRIV_LVL_M,
           default:   '0
ParseResult:
UPD HdlStmAssign@@ to 
    UPD HdlOp@@MAP_ASSOCIATION to MAP_ASSOCIATION
        UPD HdlValueId@@XDEBUGVER_NO to XDEBUGVER_STD


CommitId: ab4c8699fbc854220749c49c67fa0b860a69711d
Simplify default assignments to enum types
--- a/rtl/ibex_load_store_unit.sv
+++ b/rtl/ibex_load_store_unit.sv
@@ -423,7 +423,7 @@ module ibex_load_store_unit (
       end //~ WAIT_RVALID
 
       default: begin
-        ls_fsm_ns = ls_fsm_e'({$bits(ls_fsm_e){1'bX}});
+        ls_fsm_ns = ls_fsm_e'(1'bX);
       end
     endcase
   end
ParseResult:
UPD HdlStmCase@@ls_fsm_cs to ls_fsm_cs
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@CALL to CALL
                UPD HdlOp@@REPL_CONCAT to REPL_CONCAT
                    MOV list@@ops to REPL_CONCAT
                    list: ops
                        HdlOp: CALL
                            list: ops
                                HdlValueId: $bits
                                HdlValueId: ls_fsm_e
                        HdlValueInt: x
                    UPD HdlOp@@CALL to CALL
                        MOV HdlValueId@@ls_fsm_e to ops
                        HdlValueId: ls_fsm_e
                        DEL HdlValueId@@$bits from ops
                        DEL list@@ops from CALL
                    DEL HdlOp@@CALL from ops
                DEL HdlValueId@@ls_fsm_e from ops
                DEL HdlOp@@REPL_CONCAT from ops
                DEL list@@ops from CALL


CommitId: 428d057c4a941681e8ede6625eaf6c76a4b3fa8c
Rename ibex_[tracer_]define to ibex_[tracer_]pkg
--- a/rtl/ibex_compressed_decoder.sv
+++ b/rtl/ibex_compressed_decoder.sv
@@ -28,7 +28,7 @@ module ibex_compressed_decoder (
     output logic        is_compressed_o,
     output logic        illegal_instr_o
 );
-  import ibex_defines::*;
+  import ibex_pkg::*;
 
   ////////////////////////
   // Compressed decoder //
ParseResult:
UPD HdlModuleDef@@ibex_compressed_decoder to ibex_compressed_decoder
    INS HdlImport@@ to objs
    HdlImport
        list: path
            HdlValueId: ibex_pkg
            HdlAll

UPD HdlModuleDef@@ibex_compressed_decoder to ibex_compressed_decoder
    DEL HdlImport@@ from objs
    HdlImport
        list: path
            HdlValueId: ibex_defines
            HdlAll


CommitId: c7cb958f0d6f143d835e33d7efe27336cc7737c1
Update lowrisc_ip to lowRISC/opentitan@ca950b43a
--- a/vendor/lowrisc_ip/ip/prim/rtl/prim_secded_28_22_enc.sv
+++ b/vendor/lowrisc_ip/ip/prim/rtl/prim_secded_28_22_enc.sv
@@ -2,22 +2,21 @@
 // Licensed under the Apache License, Version 2.0, see LICENSE for details.
 // SPDX-License-Identifier: Apache-2.0
 //
-// SECDED Encoder generated by
-// util/design/secded_gen.py -m 6 -k 22 -s 1592631616 -c hsiao
+// SECDED encoder generated by util/design/secded_gen.py
 
 module prim_secded_28_22_enc (
-  input        [21:0] in,
-  output logic [27:0] out
+  input        [21:0] data_i,
+  output logic [27:0] data_o
 );
 
   always_comb begin : p_encode
-    out = 28'(in);
-    out[22] = ^(out & 28'h03003FF);
-    out[23] = ^(out & 28'h010FC0F);
-    out[24] = ^(out & 28'h0371C71);
-    out[25] = ^(out & 28'h03B6592);
-    out[26] = ^(out & 28'h03DAAA4);
-    out[27] = ^(out & 28'h02ED348);
+    data_o = 28'(data_i);
+    data_o[22] = ^(data_o & 28'h03003FF);
+    data_o[23] = ^(data_o & 28'h010FC0F);
+    data_o[24] = ^(data_o & 28'h0271C71);
+    data_o[25] = ^(data_o & 28'h03B6592);
+    data_o[26] = ^(data_o & 28'h03DAAA4);
+    data_o[27] = ^(data_o & 28'h03ED348);
   end
 
 endmodule : prim_secded_28_22_enc
ParseResult:
UPD HdlIdDef@@in to data_i

UPD HdlIdDef@@out to data_o

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@out to data_o
            UPD HdlOp@@CALL to CALL
                UPD HdlValueId@@in to data_i
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@INDEX to INDEX
                UPD HdlValueId@@out to data_o
            UPD HdlOp@@XOR_UNARY to XOR_UNARY
                UPD HdlOp@@AND to AND
                    UPD HdlValueId@@out to data_o
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@INDEX to INDEX
                UPD HdlValueId@@out to data_o
            UPD HdlOp@@XOR_UNARY to XOR_UNARY
                UPD HdlOp@@AND to AND
                    UPD HdlValueId@@out to data_o
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@INDEX to INDEX
                UPD HdlValueId@@out to data_o
            UPD HdlOp@@XOR_UNARY to XOR_UNARY
                UPD HdlOp@@AND to AND
                    UPD HdlValueId@@out to data_o
                    UPD HdlValueInt@@0371c71 to 0271c71
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@INDEX to INDEX
                UPD HdlValueId@@out to data_o
            UPD HdlOp@@XOR_UNARY to XOR_UNARY
                UPD HdlOp@@AND to AND
                    UPD HdlValueId@@out to data_o
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@INDEX to INDEX
                UPD HdlValueId@@out to data_o
            UPD HdlOp@@XOR_UNARY to XOR_UNARY
                UPD HdlOp@@AND to AND
                    UPD HdlValueId@@out to data_o
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@INDEX to INDEX
                UPD HdlValueId@@out to data_o
            UPD HdlOp@@XOR_UNARY to XOR_UNARY
                UPD HdlOp@@AND to AND
                    UPD HdlValueId@@out to data_o
                    UPD HdlValueInt@@02ed348 to 03ed348


CommitId: 088cd11593c9c3e623ec445c43dd19efcd7178a8
[dbg] Add minimal hardware breakpoint support
--- a/rtl/ibex_cs_registers.sv
+++ b/rtl/ibex_cs_registers.sv
@@ -10,13 +10,14 @@
  * Specification, draft version 1.11
  */
 module ibex_cs_registers #(
+    parameter bit          DbgTriggerEn     = 0,
     parameter int unsigned MHPMCounterNum   = 8,
     parameter int unsigned MHPMCounterWidth = 40,
     parameter bit          PMPEnable        = 0,
     parameter int unsigned PMPGranularity   = 0,
     parameter int unsigned PMPNumRegions    = 4,
-    parameter bit RV32E                     = 0,
-    parameter bit RV32M                     = 0
+    parameter bit          RV32E            = 0,
+    parameter bit          RV32M            = 0
 ) (
     // Clock and Reset
     input  logic                 clk_i,

ParseResult:
INS HdlIdDef@@DbgTriggerEn to params
HdlIdDef: DbgTriggerEn
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: bit
    HdlValueInt: 0
    HdlDirection: INTERNAL


CommitId: 088cd11593c9c3e623ec445c43dd19efcd7178a8
[dbg] Add minimal hardware breakpoint support
--- a/rtl/ibex_cs_registers.sv
+++ b/rtl/ibex_cs_registers.sv
@@ -68,6 +69,7 @@ module ibex_cs_registers #(
     output logic                 debug_single_step_o,
     output logic                 debug_ebreakm_o,
     output logic                 debug_ebreaku_o,
+    output logic                 trigger_match_o,
 
     input  logic [31:0]          pc_if_i,
     input  logic [31:0]          pc_id_i,

ParseResult:
INS HdlIdDef@@trigger_match_o to ports
HdlIdDef: trigger_match_o
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: OUT


CommitId: 088cd11593c9c3e623ec445c43dd19efcd7178a8
[dbg] Add minimal hardware breakpoint support
--- a/rtl/ibex_cs_registers.sv
+++ b/rtl/ibex_cs_registers.sv
@@ -196,6 +198,11 @@ module ibex_cs_registers #(
   logic [31:0] mhpmevent [32];
   logic  [4:0] mhpmcounter_idx;
 
+  // Debug / trigger registers
+  logic [31:0] tselect_rdata;
+  logic [31:0] tmatch_control_rdata;
+  logic [31:0] tmatch_value_rdata;
+
   // CSR update logic
   logic [31:0] csr_wdata_int;
   logic [31:0] csr_rdata_int;

ParseResult:
INS HdlIdDef@@tselect_rdata to objs
HdlIdDef: tselect_rdata
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 31
                    HdlValueInt: 0
    HdlDirection: INTERNAL

INS HdlIdDef@@tmatch_control_rdata to objs
HdlIdDef: tmatch_control_rdata
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 31
                    HdlValueInt: 0
    HdlDirection: INTERNAL

INS HdlIdDef@@tmatch_value_rdata to objs
HdlIdDef: tmatch_value_rdata
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 31
                    HdlValueInt: 0
    HdlDirection: INTERNAL


CommitId: f2fccaadbc6aaedf08bec73b7386ffce3aaeb618
[Prefetch buffer] - various bug fixes
--- a/rtl/ibex_fetch_fifo.sv
+++ b/rtl/ibex_fetch_fifo.sv
@@ -9,7 +9,9 @@
  * input port: send address and data to the FIFO
  * clear_i clears the FIFO for the following cycle, including any new request
  */
-module ibex_fetch_fifo (
+module ibex_fetch_fifo #(
+  parameter int unsigned NUM_REQS = 2
+) (
     input  logic        clk_i,
     input  logic        rst_ni,
 

ParseResult:
INS HdlIdDef@@NUM_REQS to params
HdlIdDef: NUM_REQS
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: int
            HdlOp: MAP_ASSOCIATION
                list: ops
                    HdlValueId: signed
    HdlValueInt: 2
    HdlDirection: INTERNAL


CommitId: f2fccaadbc6aaedf08bec73b7386ffce3aaeb618
[Prefetch buffer] - various bug fixes
--- a/rtl/ibex_fetch_fifo.sv
+++ b/rtl/ibex_fetch_fifo.sv
@@ -31,10 +33,9 @@ module ibex_fetch_fifo (
     output logic        out_err_o
 );
 
-  localparam int unsigned DEPTH = 3; // must be 3 or greater
+  localparam int unsigned DEPTH = NUM_REQS+1;
 
   // index 0 is used for output
-  logic [DEPTH-1:0] [31:2]  addr_d,    addr_q;
   logic [DEPTH-1:0] [31:0]  rdata_d,   rdata_q;
   logic [DEPTH-1:0]         err_d,     err_q;
   logic [DEPTH-1:0]         valid_d,   valid_q;

ParseResult:
UPD HdlIdDef@@addr_d to addr_d
    UPD HdlOp@@INDEX to INDEX
        UPD HdlOp@@PARAMETRIZATION to PARAMETRIZATION
            UPD HdlOp@@DOWNTO to DOWNTO
                UPD HdlOp@@SUB to ADD
                MOV HdlOp@@SUB to ops
                HdlOp: SUB
                    list: ops
                        HdlValueId: DEPTH
                        HdlValueInt: 1
                UPD HdlOp@@SUB to SUB
                    UPD HdlValueId@@DEPTH to NUM_REQS
                    DEL HdlValueInt@@1 from ops
                DEL HdlValueInt@@0 from ops
                DEL list@@ops from DOWNTO
            DEL HdlValueId@@logic from ops
            DEL HdlOp@@DOWNTO from ops
            DEL list@@ops from PARAMETRIZATION
        DEL HdlOp@@PARAMETRIZATION from ops
        DEL HdlOp@@DOWNTO from ops
        HdlOp: DOWNTO
            list: ops
                HdlValueInt: 31
                HdlValueInt: 2
        DEL list@@ops from INDEX
    DEL HdlOp@@INDEX from addr_d
    DEL HdlDirection@@INTERNAL from addr_d

UPD HdlIdDef@@DEPTH to DEPTH
    UPD HdlValueInt@@3 to 1
    MOV HdlValueInt@@3 to DEPTH
    HdlValueInt: 3

DEL HdlIdDef@@addr_d from objs

DEL HdlIdDef@@addr_q from objs
HdlIdDef: addr_q
    HdlOp: INDEX
        list: ops
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: logic
                    HdlOp: DOWNTO
                        list: ops
                            HdlOp: SUB
                                list: ops
                                    HdlValueId: DEPTH
                                    HdlValueInt: 1
                            HdlValueInt: 0
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 31
                    HdlValueInt: 2
    HdlDirection: INTERNAL


CommitId: f2fccaadbc6aaedf08bec73b7386ffce3aaeb618
[Prefetch buffer] - various bug fixes
--- a/rtl/ibex_fetch_fifo.sv
+++ b/rtl/ibex_fetch_fifo.sv
@@ -47,9 +48,11 @@ module ibex_fetch_fifo (
   logic                     err,   err_unaligned;
   logic                     valid, valid_unaligned;
 
-  logic                     entry0_unaligned_d, entry0_unaligned_q;
   logic                     aligned_is_compressed, unaligned_is_compressed;
-  
+
+  logic                     addr_incr_two;
+  logic [31:1]              instr_addr_d, instr_addr_q;
+  logic                     instr_addr_en;
   logic                     unused_addr_in;
 
   /////////////////

ParseResult:
MOV HdlIdDef@@entry0_unaligned_d to objs
HdlIdDef: entry0_unaligned_d
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

MOV HdlIdDef@@entry0_unaligned_q to objs
HdlIdDef: entry0_unaligned_q
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

UPD HdlIdDef@@entry0_unaligned_d to addr_incr_two

INS HdlIdDef@@instr_addr_d to objs
HdlIdDef: instr_addr_d
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 31
                    HdlValueInt: 1
    HdlDirection: INTERNAL

INS HdlIdDef@@instr_addr_q to objs
HdlIdDef: instr_addr_q
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 31
                    HdlValueInt: 1
    HdlDirection: INTERNAL

UPD HdlIdDef@@entry0_unaligned_q to instr_addr_en


CommitId: f2fccaadbc6aaedf08bec73b7386ffce3aaeb618
[Prefetch buffer] - various bug fixes
--- a/rtl/ibex_fetch_fifo.sv
+++ b/rtl/ibex_fetch_fifo.sv
@@ -70,21 +73,6 @@ module ibex_fetch_fifo (
   // The FIFO also has a direct bypass path, so a complete instruction might be made up of data
   // from the FIFO and new incoming data.
   //
-  // Additionally, branches can cause a fetch from an unaligned address. The full data word will be
-  // fetched, but the FIFO must output the unaligned instruction as the first valid data.
-
-  // Alignment is tracked with a flag, this records whether entry[0] of the FIFO has become unaligned.
-  // The flag is set once any compressed instruction enters the FIFO and is only cleared once a
-  // a compressed instruction realigns the FIFO, or the FIFO is cleared.
-
-                              // New incoming unaligned request (must be a branch) or already unaligned
-  assign entry0_unaligned_d = ((((in_valid_i & in_addr_i[1]) | entry0_unaligned_q) &
-                                // cleared by a compressed unaligned instruction
-                                ~(out_ready_i & unaligned_is_compressed)) |
-                               // Also set when a new aligned compressed instruction is driven
-                               (valid & out_ready_i & ~out_addr_o[1] & aligned_is_compressed)) &
-                              // reset by a FIFO clear
-                              ~clear_i;
 
   // Construct the output data for an unaligned instruction
   assign rdata_unaligned = valid_q[1] ? {rdata_q[1][15:0], rdata[31:16]} :

ParseResult:
DEL HdlStmAssign@@ from objs
HdlStmAssign
    HdlOp: AND
        list: ops
            HdlOp: OR
                list: ops
                    HdlOp: AND
                        list: ops
                            HdlOp: OR
                                list: ops
                                    HdlOp: AND
                                        list: ops
                                            HdlValueId: in_valid_i
                                            HdlOp: INDEX
                                                list: ops
                                                    HdlValueId: in_addr_i
                                                    HdlValueInt: 1
                                    HdlValueId: entry0_unaligned_q
                            HdlOp: NEG
                                list: ops
                                    HdlOp: AND
                                        list: ops
                                            HdlValueId: out_ready_i
                                            HdlValueId: unaligned_is_compressed
                    HdlOp: AND
                        list: ops
                            HdlOp: AND
                                list: ops
                                    HdlOp: AND
                                        list: ops
                                            HdlValueId: valid
                                            HdlValueId: out_ready_i
                                    HdlOp: NEG
                                        list: ops
                                            HdlOp: INDEX
                                                list: ops
                                                    HdlValueId: out_addr_o
                                                    HdlValueInt: 1
                            HdlValueId: aligned_is_compressed
            HdlOp: NEG
                list: ops
                    HdlValueId: clear_i
    HdlValueId: entry0_unaligned_d


CommitId: f2fccaadbc6aaedf08bec73b7386ffce3aaeb618
[Prefetch buffer] - various bug fixes
--- a/rtl/ibex_fetch_fifo.sv
+++ b/rtl/ibex_fetch_fifo.sv
@@ -140,10 +149,10 @@ module ibex_fetch_fifo (
   // input port //
   ////////////////
 
-  // we accept data as long as our FIFO is not full
-  // we don't care about clear here as the data will be received one cycle
-  // later anyway
-  assign in_ready_o = ~valid_q[DEPTH-2];
+  // Accept data as long as our FIFO has space to accept the maximum number of outstanding
+  // requests. Note that the prefetch buffer does not count how many requests are actually
+  // outstanding, so space must be reserved for the maximum number.
+  assign in_ready_o = ~valid_q[DEPTH-NUM_REQS];
 
   /////////////////////
   // FIFO management //

ParseResult:
MOV HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: NEG
        list: ops
            HdlOp: INDEX
                list: ops
                    HdlValueId: valid_q
                    HdlOp: SUB
                        list: ops
                            HdlValueId: DEPTH
                            HdlValueInt: 2
    HdlValueId: in_ready_o

INS HdlStmAssign@@ to objs

UPD HdlStmAssign@@ to 
    MOV HdlValueId@@in_ready_o to 
    HdlValueId: in_ready_o
    UPD HdlOp@@NEG to AND


CommitId: f2fccaadbc6aaedf08bec73b7386ffce3aaeb618
[Prefetch buffer] - various bug fixes
--- a/rtl/ibex_fetch_fifo.sv
+++ b/rtl/ibex_fetch_fifo.sv
@@ -157,7 +166,7 @@ module ibex_fetch_fifo (
     if (i == 0) begin : g_ent0
       assign lowest_free_entry[i] = ~valid_q[i];
     end else begin : g_ent_others
-      assign lowest_free_entry[i] = ~valid_q[i] & (&valid_q[i-1:0]);
+      assign lowest_free_entry[i] = ~valid_q[i] & valid_q[i-1];
     end
 
     // An entry is set when an incoming request chooses the lowest available entry

ParseResult:
UPD HdlStmAssign@@ to 
    UPD HdlOp@@AND to AND
        UPD HdlOp@@AND_UNARY to AND_UNARY
            UPD list@@ops to body
            MOV list@@ops to AND_UNARY
            list: ops
                HdlOp: INDEX
                    list: ops
                        HdlValueId: valid_q
                        HdlOp: DOWNTO
                            list: ops
                                HdlOp: SUB
                                    list: ops
                                        HdlValueId: i
                                        HdlValueInt: 1
                                HdlValueInt: 0
            UPD HdlOp@@INDEX to AND
            MOV HdlOp@@INDEX to ops
            HdlOp: INDEX
                list: ops
                    HdlValueId: valid_q
                    HdlOp: DOWNTO
                        list: ops
                            HdlOp: SUB
                                list: ops
                                    HdlValueId: i
                                    HdlValueInt: 1
                            HdlValueInt: 0
            UPD HdlOp@@INDEX to INDEX
                UPD HdlOp@@DOWNTO to INDEX
                MOV HdlValueId@@valid_q to ops
                HdlValueId: valid_q
                UPD HdlOp@@DOWNTO to DOWNTO
                    DEL HdlValueInt@@0 from ops
        MOV HdlOp@@NEG to ops
        HdlOp: NEG
            list: ops
                HdlOp: INDEX
                    list: ops
                        HdlValueId: valid_q
                        HdlValueId: i
        DEL HdlOp@@AND_UNARY from ops
        DEL list@@ops from AND
    DEL HdlOp@@AND from 

MOV HdlStmAssign@@ to body
HdlStmAssign
    HdlOp: AND
        list: ops
            HdlOp: NEG
                list: ops
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: valid_q
                            HdlValueId: i
            HdlOp: AND_UNARY
                list: ops
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: valid_q
                            HdlOp: DOWNTO
                                list: ops
                                    HdlOp: SUB
                                        list: ops
                                            HdlValueId: i
                                            HdlValueInt: 1
                                    HdlValueInt: 0
    HdlOp: INDEX
        list: ops
            HdlValueId: lowest_free_entry
            HdlValueId: i

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ


CommitId: f2fccaadbc6aaedf08bec73b7386ffce3aaeb618
[Prefetch buffer] - various bug fixes
--- a/rtl/ibex_fetch_fifo.sv
+++ b/rtl/ibex_fetch_fifo.sv
@@ -174,17 +183,15 @@ module ibex_fetch_fifo (
                          (in_valid_i & lowest_free_entry[i] & ~pop_fifo);
 
     // take the next entry or the incoming data
-    assign addr_d [i]  = valid_q[i+1] ? addr_q [i+1] : in_addr_i[31:2];
     assign rdata_d[i]  = valid_q[i+1] ? rdata_q[i+1] : in_rdata_i;
     assign err_d  [i]  = valid_q[i+1] ? err_q  [i+1] : in_err_i;
   end
   // The top entry is similar but with simpler muxing
-  assign lowest_free_entry[DEPTH-1] = ~valid_q[DEPTH-1] & (&valid_q[DEPTH-2:0]);
+  assign lowest_free_entry[DEPTH-1] = ~valid_q[DEPTH-1] & valid_q[DEPTH-2];
   assign valid_pushed     [DEPTH-1] = valid_q[DEPTH-1] | (in_valid_i & lowest_free_entry[DEPTH-1]);
   assign valid_popped     [DEPTH-1] = pop_fifo ? 1'b0 : valid_pushed[DEPTH-1];
   assign valid_d [DEPTH-1]          = valid_popped[DEPTH-1] & ~clear_i;
   assign entry_en[DEPTH-1]          = in_valid_i & lowest_free_entry[DEPTH-1];
-  assign addr_d  [DEPTH-1]          = in_addr_i[31:2];
   assign rdata_d [DEPTH-1]          = in_rdata_i;
   assign err_d   [DEPTH-1]          = in_err_i;
 

ParseResult:
UPD HdlStmAssign@@ to 
    MOV HdlOp@@INDEX to 
    HdlOp: INDEX
        list: ops
            HdlValueId: lowest_free_entry
            HdlOp: SUB
                list: ops
                    HdlValueId: DEPTH
                    HdlValueInt: 1
    UPD HdlOp@@AND to AND
        MOV HdlOp@@NEG to ops
        HdlOp: NEG
            list: ops
                HdlOp: INDEX
                    list: ops
                        HdlValueId: valid_q
                        HdlOp: SUB
                            list: ops
                                HdlValueId: DEPTH
                                HdlValueInt: 1
        DEL HdlOp@@AND_UNARY from ops
        HdlOp: AND_UNARY
            list: ops
                HdlOp: INDEX
                    list: ops
                        HdlValueId: valid_q
                        HdlOp: DOWNTO
                            list: ops
                                HdlOp: SUB
                                    list: ops
                                        HdlValueId: DEPTH
                                        HdlValueInt: 2
                                HdlValueInt: 0
        DEL list@@ops from AND
    DEL HdlOp@@AND from 

DEL HdlStmAssign@@ from body
HdlStmAssign
    HdlOp: TERNARY
        list: ops
            HdlOp: INDEX
                list: ops
                    HdlValueId: valid_q
                    HdlOp: ADD
                        list: ops
                            HdlValueId: i
                            HdlValueInt: 1
            HdlOp: INDEX
                list: ops
                    HdlValueId: addr_q
                    HdlOp: ADD
                        list: ops
                            HdlValueId: i
                            HdlValueInt: 1
            HdlOp: INDEX
                list: ops
                    HdlValueId: in_addr_i
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 31
                            HdlValueInt: 2
    HdlOp: INDEX
        list: ops
            HdlValueId: addr_d
            HdlValueId: i

DEL HdlStmAssign@@ from objs

DEL HdlStmAssign@@ from objs
HdlStmAssign
    HdlOp: INDEX
        list: ops
            HdlValueId: in_addr_i
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 31
                    HdlValueInt: 2
    HdlOp: INDEX
        list: ops
            HdlValueId: addr_d
            HdlOp: SUB
                list: ops
                    HdlValueId: DEPTH
                    HdlValueInt: 1


CommitId: f2fccaadbc6aaedf08bec73b7386ffce3aaeb618
[Prefetch buffer] - various bug fixes
--- a/rtl/ibex_fetch_fifo.sv
+++ b/rtl/ibex_fetch_fifo.sv
@@ -194,18 +201,15 @@ module ibex_fetch_fifo (
 
   always_ff @(posedge clk_i or negedge rst_ni) begin
     if (!rst_ni) begin
-      valid_q            <= '0;
-      entry0_unaligned_q <= '0;
+      valid_q <= '0;
     end else begin
-      valid_q            <= valid_d;
-      entry0_unaligned_q <= entry0_unaligned_d;
+      valid_q <= valid_d;
     end
   end
 
   for (genvar i = 0; i < DEPTH; i++) begin : g_fifo_regs
     always_ff @(posedge clk_i) begin
       if (entry_en[i]) begin
-        addr_q[i]    <= addr_d[i];
         rdata_q[i]   <= rdata_d[i];
         err_q[i]     <= err_d[i];
       end
ParseResult:
DEL HdlStmAssign@@ from body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: entry0_unaligned_q

DEL HdlStmAssign@@ from body
HdlStmAssign
    HdlValueId: entry0_unaligned_d
    HdlValueId: entry0_unaligned_q

DEL HdlStmAssign@@ from body
HdlStmAssign
    HdlOp: INDEX
        list: ops
            HdlValueId: addr_d
            HdlValueId: i
    HdlOp: INDEX
        list: ops
            HdlValueId: addr_q
            HdlValueId: i


CommitId: ab4c8699fbc854220749c49c67fa0b860a69711d
Simplify default assignments to enum types
--- a/rtl/ibex_prefetch_buffer.sv
+++ b/rtl/ibex_prefetch_buffer.sv
@@ -200,7 +200,7 @@ module ibex_prefetch_buffer (
       end
 
       default: begin
-        NS = prefetch_fsm_e'({$bits(prefetch_fsm_e){1'bX}});
+        NS = prefetch_fsm_e'(1'bX);
       end
     endcase
   end
ParseResult:
UPD HdlStmCase@@CS to CS
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@CALL to CALL
                UPD HdlOp@@REPL_CONCAT to REPL_CONCAT
                    MOV list@@ops to REPL_CONCAT
                    list: ops
                        HdlOp: CALL
                            list: ops
                                HdlValueId: $bits
                                HdlValueId: prefetch_fsm_e
                        HdlValueInt: x
                    UPD HdlOp@@CALL to CALL
                        MOV HdlValueId@@prefetch_fsm_e to ops
                        HdlValueId: prefetch_fsm_e
                        DEL HdlValueId@@$bits from ops
                        DEL list@@ops from CALL
                    DEL HdlOp@@CALL from ops
                DEL HdlValueId@@prefetch_fsm_e from ops
                DEL HdlOp@@REPL_CONCAT from ops
                DEL list@@ops from CALL


CommitId: 967834db0c74845d24a725c7c034c1b601ce3da4
Use cast before assignment to enum type to avoid Vivado errors
--- a/rtl/ibex_controller.sv
+++ b/rtl/ibex_controller.sv
@@ -156,10 +156,10 @@ module ibex_controller (
 
     csr_save_cause_o       = 1'b0;
 
-    exc_cause_o            = '0;
+    exc_cause_o            = exc_cause_e'('0);
     exc_pc_mux_o           = EXC_PC_IRQ;
 
-    csr_cause_o            = '0;
+    csr_cause_o            = exc_cause_e'('0);
 
     pc_mux_o               = PC_BOOT;
     pc_set_o               = 1'b0;
ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlOp@@CALL to ops
            UPD HdlOp@@CALL to CALL
                INS list@@ops to CALL
                INS HdlValueId@@exc_cause_e to ops
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlOp@@CALL to ops
            UPD HdlOp@@CALL to CALL
                INS list@@ops to CALL
                INS HdlValueId@@exc_cause_e to ops

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            MOV HdlValueInt@@0 to ops
            HdlValueInt: 0
        UPD HdlOp@@ASSIGN to ASSIGN
            MOV HdlValueInt@@0 to ops
            HdlValueInt: 0


CommitId: 2c75c2b2ec90bebb756386e1360810474323c1ad
Update lowrisc_ip to lowRISC/opentitan@1ae03937f
--- a/vendor/lowrisc_ip/ip/prim/rtl/prim_rom_adv.sv
+++ b/vendor/lowrisc_ip/ip/prim/rtl/prim_rom_adv.sv
@@ -6,14 +6,12 @@
 
 `include "prim_assert.sv"
 
-module prim_rom_adv #(
+module prim_rom_adv import prim_rom_pkg::*; #(
   // Parameters passed on the the ROM primitive.
   parameter  int Width       = 32,
   parameter  int Depth       = 2048, // 8kB default
   parameter      MemInitFile = "", // VMEM file to initialize the memory with
 
-  parameter  int CfgW        = 8,     // WTC, RTC, etc
-
   localparam int Aw          = $clog2(Depth)
 ) (
   input  logic             clk_i,

ParseResult:
UPD HdlIdDef@@cfg_i to cfg_i
    UPD HdlOp@@PARAMETRIZATION to PARAMETRIZATION
        UPD HdlValueId@@wire to rom_cfg_t
        MOV HdlValueId@@wire to ops
        HdlValueId: wire
        DEL HdlOp@@DOWNTO from ops
        HdlOp: DOWNTO
            list: ops
                HdlOp: SUB
                    list: ops
                        HdlValueId: CfgW
                        HdlValueInt: 1
                HdlValueInt: 0
        DEL list@@ops from PARAMETRIZATION
    DEL HdlOp@@PARAMETRIZATION from cfg_i


CommitId: 9c6ddae626ac22eb734be81509b9b7456174d8a5
[rtl] Don't elaborate unused mhpmcounter flops
--- a/examples/simple_system/rtl/ibex_simple_system.sv
+++ b/examples/simple_system/rtl/ibex_simple_system.sv
@@ -198,7 +198,7 @@ module ibex_simple_system (
   logic [63:0] mhpmcounter_vals [32] /*verilator public_flat*/;
 
   for(genvar i = 0;i < 32; i = i + 1) begin
-      assign mhpmcounter_vals[i] = u_core.u_ibex_core.cs_registers_i.mhpmcounter_q[i];
+      assign mhpmcounter_vals[i] = u_core.u_ibex_core.cs_registers_i.mhpmcounter[i];
   end
 endmodule
 
ParseResult:
UPD HdlStmAssign@@ to 
    UPD HdlOp@@INDEX to INDEX
        UPD HdlOp@@DOT to DOT
            UPD HdlValueId@@mhpmcounter_q to mhpmcounter


CommitId: 428d057c4a941681e8ede6625eaf6c76a4b3fa8c
Rename ibex_[tracer_]define to ibex_[tracer_]pkg
--- a/rtl/ibex_ex_block.sv
+++ b/rtl/ibex_ex_block.sv
@@ -29,32 +29,32 @@
 module ibex_ex_block #(
     parameter bit RV32M = 1
 ) (
-    input  logic                  clk_i,
-    input  logic                  rst_ni,
+    input  logic              clk_i,
+    input  logic              rst_ni,
 
     // ALU
-    input  ibex_defines::alu_op_e alu_operator_i,
-    input  logic [31:0]           alu_operand_a_i,
-    input  logic [31:0]           alu_operand_b_i,
+    input  ibex_pkg::alu_op_e alu_operator_i,
+    input  logic [31:0]       alu_operand_a_i,
+    input  logic [31:0]       alu_operand_b_i,
 
     // Multiplier/Divider
-    input  ibex_defines::md_op_e  multdiv_operator_i,
-    input  logic                  mult_en_i,
-    input  logic                  div_en_i,
-    input  logic  [1:0]           multdiv_signed_mode_i,
-    input  logic [31:0]           multdiv_operand_a_i,
-    input  logic [31:0]           multdiv_operand_b_i,
+    input  ibex_pkg::md_op_e  multdiv_operator_i,
+    input  logic              mult_en_i,
+    input  logic              div_en_i,
+    input  logic  [1:0]       multdiv_signed_mode_i,
+    input  logic [31:0]       multdiv_operand_a_i,
+    input  logic [31:0]       multdiv_operand_b_i,
 
     // Outputs
-    output logic [31:0]           alu_adder_result_ex_o, // to LSU
-    output logic [31:0]           regfile_wdata_ex_o,
-    output logic [31:0]           jump_target_o,         // to IF
-    output logic                  branch_decision_o,     // to ID
+    output logic [31:0]       alu_adder_result_ex_o, // to LSU
+    output logic [31:0]       regfile_wdata_ex_o,
+    output logic [31:0]       jump_target_o,         // to IF
+    output logic              branch_decision_o,     // to ID
 
-    output logic                  ex_valid_o             // EX has valid output
+    output logic              ex_valid_o             // EX has valid output
 );
 
-  import ibex_defines::*;
+  import ibex_pkg::*;
 
   localparam bit MULT_TYPE = 1; // 0 -> SLOW, 1 -> FAST
 
ParseResult:
UPD HdlModuleDef@@ibex_ex_block to ibex_ex_block
    UPD HdlImport@@ to 
        UPD HdlValueId@@ibex_defines to ibex_pkg

UPD HdlIdDef@@alu_operator_i to alu_operator_i
    UPD HdlOp@@DOUBLE_COLON to DOUBLE_COLON
        UPD HdlValueId@@ibex_defines to ibex_pkg

UPD HdlIdDef@@multdiv_operator_i to multdiv_operator_i
    UPD HdlOp@@DOUBLE_COLON to DOUBLE_COLON
        UPD HdlValueId@@ibex_defines to ibex_pkg


CommitId: a3256c4df256a29bc62482b8ff2e75d2315682ab
Fix small error in prefetcher where GNT occur one cycle after we wanted
--- a/prefetch_L0_buffer.sv
+++ b/prefetch_L0_buffer.sv
@@ -101,14 +101,6 @@ module prefetch_L0_buffer
   always_comb
   begin
     valid_o                 = 1'b0;
-
-    case(addr_o[3:2])
-       2'b00: begin unaligned_rdata_o       = {L0_buffer[0][15:0], previous_chunk     };    unaligned_valid_o       = valid_previous_chunk;  end
-       2'b01: begin unaligned_rdata_o       = {L0_buffer[1][15:0], L0_buffer[0][31:16] };   unaligned_valid_o       = valid_o;               end
-       2'b10: begin unaligned_rdata_o       = {L0_buffer[2][15:0], L0_buffer[1][31:16] };   unaligned_valid_o       = valid_o;               end
-       2'b11: begin unaligned_rdata_o       = {L0_buffer[3][15:0], L0_buffer[2][31:16] };   unaligned_valid_o       = valid_o;               end
-    endcase // addr_o
-
     addr_o                  = current_address + (pointer_cs<<2);
     pointer_ns              = pointer_cs;
     instr_req_o             = 1'b0;

ParseResult:
MOV HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['addr_o',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '3'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '2'}]}]}  to body
HdlStmCase: {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops':}]} 
    HdlStmCaseType: CASE
    HdlOp: INDEX
        list: ops
            HdlValueId: addr_o
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 3
                    HdlValueInt: 2
    list: cases
        tuple
            HdlValueInt: 00
            HdlStmBlock: SEQ
                list: body
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: unaligned_rdata_o
                            HdlOp: CONCAT
                                list: ops
                                    HdlOp: INDEX
                                        list: ops
                                            HdlOp: INDEX
                                                list: ops
                                                    HdlValueId: L0_buffer
                                                    HdlValueInt: 0
                                            HdlOp: DOWNTO
                                                list: ops
                                                    HdlValueInt: 15
                                                    HdlValueInt: 0
                                    HdlValueId: previous_chunk
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: unaligned_valid_o
                            HdlValueId: valid_previous_chunk
        tuple
            HdlValueInt: 01
            HdlStmBlock: SEQ
                list: body
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: unaligned_rdata_o
                            HdlOp: CONCAT
                                list: ops
                                    HdlOp: INDEX
                                        list: ops
                                            HdlOp: INDEX
                                                list: ops
                                                    HdlValueId: L0_buffer
                                                    HdlValueInt: 1
                                            HdlOp: DOWNTO
                                                list: ops
                                                    HdlValueInt: 15
                                                    HdlValueInt: 0
                                    HdlOp: INDEX
                                        list: ops
                                            HdlOp: INDEX
                                                list: ops
                                                    HdlValueId: L0_buffer
                                                    HdlValueInt: 0
                                            HdlOp: DOWNTO
                                                list: ops
                                                    HdlValueInt: 31
                                                    HdlValueInt: 16
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: unaligned_valid_o
                            HdlValueId: valid_o
        tuple
            HdlValueInt: 10
            HdlStmBlock: SEQ
                list: body
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: unaligned_rdata_o
                            HdlOp: CONCAT
                                list: ops
                                    HdlOp: INDEX
                                        list: ops
                                            HdlOp: INDEX
                                                list: ops
                                                    HdlValueId: L0_buffer
                                                    HdlValueInt: 2
                                            HdlOp: DOWNTO
                                                list: ops
                                                    HdlValueInt: 15
                                                    HdlValueInt: 0
                                    HdlOp: INDEX
                                        list: ops
                                            HdlOp: INDEX
                                                list: ops
                                                    HdlValueId: L0_buffer
                                                    HdlValueInt: 1
                                            HdlOp: DOWNTO
                                                list: ops
                                                    HdlValueInt: 31
                                                    HdlValueInt: 16
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: unaligned_valid_o
                            HdlValueId: valid_o
        tuple
            HdlValueInt: 11
            HdlStmBlock: SEQ
                list: body
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: unaligned_rdata_o
                            HdlOp: CONCAT
                                list: ops
                                    HdlOp: INDEX
                                        list: ops
                                            HdlOp: INDEX
                                                list: ops
                                                    HdlValueId: L0_buffer
                                                    HdlValueInt: 3
                                            HdlOp: DOWNTO
                                                list: ops
                                                    HdlValueInt: 15
                                                    HdlValueInt: 0
                                    HdlOp: INDEX
                                        list: ops
                                            HdlOp: INDEX
                                                list: ops
                                                    HdlValueId: L0_buffer
                                                    HdlValueInt: 2
                                            HdlOp: DOWNTO
                                                list: ops
                                                    HdlValueInt: 31
                                                    HdlValueInt: 16
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: unaligned_valid_o
                            HdlValueId: valid_o


CommitId: a3256c4df256a29bc62482b8ff2e75d2315682ab
Fix small error in prefetcher where GNT occur one cycle after we wanted
--- a/prefetch_L0_buffer.sv
+++ b/prefetch_L0_buffer.sv
@@ -198,12 +197,12 @@ module prefetch_L0_buffer
               begin
                 instr_req_o  = 1'b1; //if the cpu is ready to sample the instruction, then ask for a new instruction
                 instr_addr_o = current_address + 5'h10;
+                pointer_ns = '0;
+                update_current_address = 1'b1;
 
                 if(instr_gnt_i)
                 begin
                   NS = WAIT_RVALID;
-                  pointer_ns = '0;
-                  update_current_address = 1'b1;
                 end
                 else
                 begin

ParseResult:
INS HdlStmIf@@ to body

UPD HdlStmIf@@ to 
    INS HdlValueId@@instr_gnt_i to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlValueId@@WAIT_RVALID to ops

UPD HdlStmIf@@ to 
    MOV list@@elifs to 
    list: elifs
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: NS
                    HdlValueId: WAIT_GNT
    UPD HdlStmBlock@@SEQ to SEQ
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: update_current_address
                HdlValueInt: 1
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@update_current_address to NS
            DEL HdlValueInt@@1 from ops
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: NS
                HdlValueId: WAIT_RVALID
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: pointer_ns
                HdlValueInt: 0
        DEL list@@body from SEQ
    DEL HdlValueId@@instr_gnt_i from 
    DEL HdlStmBlock@@SEQ from 

DEL HdlStmIf@@ from body


CommitId: a3256c4df256a29bc62482b8ff2e75d2315682ab
Fix small error in prefetcher where GNT occur one cycle after we wanted
--- a/prefetch_L0_buffer.sv
+++ b/prefetch_L0_buffer.sv
@@ -274,8 +273,6 @@ module prefetch_L0_buffer
               if(instr_gnt_i)
               begin
                 NS = WAIT_RVALID;
-                pointer_ns = '0;
-                update_current_address = 1'b1;
               end
               else
               begin
ParseResult:
UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: pointer_ns
                HdlValueInt: 0
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: update_current_address
                HdlValueInt: 1


CommitId: f7c2b6427045701706308f3a07b4848d3dc4e5b4
decoupled irq, debug with instr mem
--- a/zeroriscy_exc_controller.sv
+++ b/zeroriscy_exc_controller.sv
@@ -37,6 +37,8 @@ module zeroriscy_exc_controller
   output logic        ext_req_o,
   input  logic        ack_i,
 
+  input  logic        ctr_decoding_i,
+
   output logic        trap_o,
 
   // to IF stage

ParseResult:
INS HdlIdDef@@ctr_decoding_i to ports
HdlIdDef: ctr_decoding_i
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: IN


CommitId: f7c2b6427045701706308f3a07b4848d3dc4e5b4
decoupled irq, debug with instr mem
--- a/zeroriscy_exc_controller.sv
+++ b/zeroriscy_exc_controller.sv
@@ -61,11 +63,12 @@ module zeroriscy_exc_controller
 );
 
 
-  enum logic [1:0] { IDLE, WAIT_CONTROLLER_INT, WAIT_CONTROLLER_EXT } exc_ctrl_cs, exc_ctrl_ns;
+  enum logic [1:0] { IDLE, WAIT_CONTROLLER_INT, WAIT_CONTROLLER_EXT, WAIT_CONTROLLER_DBG } exc_ctrl_cs, exc_ctrl_ns;
 
   logic req_int, int_req_int, ext_req_int;
   logic [1:0] pc_mux_int, pc_mux_int_q;
   logic [5:0] cause_int, cause_int_q;
+  logic trap_int;
 
   // a trap towards the debug unit is generated when one of the
   // following conditions are true:

ParseResult:
INS HdlIdDef@@trap_int to objs
HdlIdDef: trap_int
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL


CommitId: f7c2b6427045701706308f3a07b4848d3dc4e5b4
decoupled irq, debug with instr mem
--- a/zeroriscy_exc_controller.sv
+++ b/zeroriscy_exc_controller.sv
@@ -74,19 +77,19 @@ module zeroriscy_exc_controller
   // - illegal instruction exception and IIE bit is set
   // - IRQ and INTE bit is set and no exception is currently running
   // - Debuger requests halt
-  assign trap_o =       (dbg_settings_i[DBG_SETS_SSTE])
+  assign trap_int =   (dbg_settings_i[DBG_SETS_SSTE])
                       | (ecall_insn_i            & dbg_settings_i[DBG_SETS_ECALL])
                       | (ebrk_insn_i             & dbg_settings_i[DBG_SETS_EBRK])
                       | (illegal_insn_i          & dbg_settings_i[DBG_SETS_EILL])
                       | (irq_enable_i & irq_i & dbg_settings_i[DBG_SETS_IRQ]);
 
-// request for exception/interrupt
-assign int_req_int =   ecall_insn_i
-                   | illegal_insn_i;
+  // request for exception/interrupt
+  assign int_req_int =   ecall_insn_i
+                     | illegal_insn_i;
 
-assign ext_req_int = irq_enable_i & irq_i;
+  assign ext_req_int = irq_enable_i & irq_i;
 
-assign req_int = int_req_int | ext_req_int;
+  assign req_int = int_req_int | ext_req_int;
 
   // Exception cause and ISR address selection
   always_comb

ParseResult:
UPD HdlStmAssign@@ to 
    UPD HdlValueId@@trap_o to trap_int


CommitId: f7c2b6427045701706308f3a07b4848d3dc4e5b4
decoupled irq, debug with instr mem
--- a/zeroriscy_exc_controller.sv
+++ b/zeroriscy_exc_controller.sv
@@ -131,7 +134,7 @@ assign req_int = int_req_int | ext_req_int;
     if (rst_n == 1'b0) begin
       cause_int_q  <= '0;
       pc_mux_int_q <= '0;
-    end else if (exc_ctrl_cs == IDLE && req_int) begin
+    end else if (exc_ctrl_cs == IDLE && (ctr_decoding_i | ext_req_o)) begin
       // save cause and ISR when new irq request is first sent to controller
       cause_int_q  <= cause_int;
       pc_mux_int_q <= pc_mux_int;

ParseResult:
UPD HdlStmIf@@ to 
    UPD HdlOp@@AND_LOG to AND_LOG
        INS HdlOp@@OR to ops
        UPD HdlOp@@OR to OR
            INS list@@ops to OR
            INS HdlValueId@@ctr_decoding_i to ops

UPD HdlStmIf@@ to 
    UPD HdlOp@@AND_LOG to AND_LOG
        UPD HdlValueId@@req_int to ext_req_o
        MOV HdlValueId@@req_int to ops
        HdlValueId: req_int


CommitId: f7c2b6427045701706308f3a07b4848d3dc4e5b4
decoupled irq, debug with instr mem
--- a/zeroriscy_exc_controller.sv
+++ b/zeroriscy_exc_controller.sv
@@ -140,8 +143,10 @@ assign req_int = int_req_int | ext_req_int;
 
 
   // Exception cause and mux output (with bypass)
-  assign cause_o      = ((exc_ctrl_cs == IDLE && req_int) || ebrk_insn_i) ? cause_int  : cause_int_q;
-  assign pc_mux_o     = (exc_ctrl_cs == IDLE && req_int) ? pc_mux_int : pc_mux_int_q;
+//  assign cause_o      = ((exc_ctrl_cs == IDLE && req_int) || ebrk_insn_i) ? cause_int  : cause_int_q;
+//  assign pc_mux_o     = (exc_ctrl_cs == IDLE && req_int) ? pc_mux_int : pc_mux_int_q;
+  assign cause_o      = cause_int_q;
+  assign pc_mux_o     = pc_mux_int_q;
 
   // Exception controller FSM
   always_comb

ParseResult:
UPD HdlStmAssign@@ to 
    UPD HdlOp@@TERNARY to TERNARY
        MOV HdlValueId@@cause_int_q to ops
        HdlValueId: cause_int_q
        DEL HdlOp@@OR_LOG from ops
        HdlOp: OR_LOG
            list: ops
                HdlOp: AND_LOG
                    list: ops
                        HdlOp: EQ
                            list: ops
                                HdlValueId: exc_ctrl_cs
                                HdlValueId: IDLE
                        HdlValueId: req_int
                HdlValueId: ebrk_insn_i
        DEL HdlValueId@@cause_int from ops
        DEL list@@ops from TERNARY
    DEL HdlOp@@TERNARY from 

UPD HdlStmAssign@@ to 
    UPD HdlOp@@TERNARY to TERNARY
        MOV HdlValueId@@pc_mux_int_q to ops
        HdlValueId: pc_mux_int_q
        DEL HdlOp@@AND_LOG from ops
        HdlOp: AND_LOG
            list: ops
                HdlOp: EQ
                    list: ops
                        HdlValueId: exc_ctrl_cs
                        HdlValueId: IDLE
                HdlValueId: req_int
        DEL HdlValueId@@pc_mux_int from ops
        DEL list@@ops from TERNARY
    DEL HdlOp@@TERNARY from 

UPD HdlStmIf@@ to 
    UPD HdlOp@@AND_LOG to AND_LOG
        INS HdlOp@@OR to ops
        UPD HdlOp@@OR to OR
            INS list@@ops to OR
            INS HdlValueId@@ctr_decoding_i to ops


CommitId: f7c2b6427045701706308f3a07b4848d3dc4e5b4
decoupled irq, debug with instr mem
--- a/zeroriscy_exc_controller.sv
+++ b/zeroriscy_exc_controller.sv
@@ -150,35 +155,30 @@ assign req_int = int_req_int | ext_req_int;
     int_req_o    = 1'b0;
     ext_req_o    = 1'b0;
     save_cause_o = 1'b0;
+    trap_o       = 1'b0;
 
     unique case (exc_ctrl_cs)
       IDLE:
       begin
         int_req_o = int_req_int;
         ext_req_o = ext_req_int;
-        if (int_req_int) begin
-          exc_ctrl_ns = WAIT_CONTROLLER_INT;
-
-          if (ack_i) begin
-            save_cause_o = 1'b1;
-            exc_ctrl_ns  = IDLE;
-          end
-        end else begin
-          if (ext_req_o) begin
-            exc_ctrl_ns = WAIT_CONTROLLER_EXT;
-
-            if (ack_i) begin
-              save_cause_o = 1'b1;
-              exc_ctrl_ns  = IDLE;
-            end
-          end
-        end
+        trap_o    = dbg_settings_i[DBG_SETS_SSTE];
+        unique case(1'b1)
+          int_req_int & ctr_decoding_i:
+            exc_ctrl_ns = WAIT_CONTROLLER_INT;
+          ebrk_insn_i & ctr_decoding_i:
+            exc_ctrl_ns = WAIT_CONTROLLER_DBG;
+          default:
+            if (ext_req_o)
+              exc_ctrl_ns = WAIT_CONTROLLER_EXT;
+        endcase
       end
 
       WAIT_CONTROLLER_INT:
       begin
         int_req_o = 1'b1;
         ext_req_o = 1'b0;
+        trap_o    = trap_int;
         if (ack_i) begin
           save_cause_o = 1'b1;
           exc_ctrl_ns  = IDLE;

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: trap_o
                HdlValueInt: 0

UPD HdlStmCase@@exc_ctrl_cs to exc_ctrl_cs
    INS tuple@@ to cases
    tuple
        HdlValueId: WAIT_CONTROLLER_DBG
        HdlStmBlock: SEQ
            list: body
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: exc_ctrl_ns
                        HdlValueId: IDLE
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: trap_o
                        HdlValueId: trap_int
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        UPD HdlOp@@ASSIGN to ASSIGN
            INS list@@ops to ASSIGN
            INS HdlOp@@INDEX to ops
            HdlOp: INDEX
                list: ops
                    HdlValueId: dbg_settings_i
                    HdlValueId: DBG_SETS_SSTE
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: trap_o
                HdlValueId: trap_int
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: trap_o
                HdlValueId: trap_int

INS HdlStmCase@@{'__class__': 'HdlValueInt', 'base': 2, 'bits': 1, 'val': '1'}  to body

UPD HdlStmCase@@{'__class__': 'HdlValueInt', 'base': 2, 'bits': 1, 'val': '1'}  to {'__class__': 'HdlValueInt', 'base': 2, 'bits': 1, 'val': '1'} 
    INS HdlStmCaseType@@CASE to {'__class__': 'HdlValueInt', 'base': 2, 'bits': 1, 'val': '1'} 
    INS HdlValueInt@@1 to {'__class__': 'HdlValueInt', 'base': 2, 'bits': 1, 'val': '1'} 
    INS list@@cases to {'__class__': 'HdlValueInt', 'base': 2, 'bits': 1, 'val': '1'} 
    INS HdlStmCaseUniqConstrain@@UNIQUE to {'__class__': 'HdlValueInt', 'base': 2, 'bits': 1, 'val': '1'} 
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS HdlOp@@AND to 
    INS HdlOp@@ASSIGN to 
    HdlOp: ASSIGN
        list: ops
            HdlValueId: exc_ctrl_ns
            HdlValueId: WAIT_CONTROLLER_DBG
    UPD HdlOp@@AND to AND
        INS HdlValueId@@ctr_decoding_i to ops
    UPD HdlOp@@AND to AND
        INS HdlValueId@@ebrk_insn_i to ops
        INS HdlValueId@@ctr_decoding_i to ops

UPD HdlStmIf@@ to default

MOV HdlStmIf@@ to body
HdlStmIf
    HdlValueId: ack_i
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: save_cause_o
                    HdlValueInt: 1
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: exc_ctrl_ns
                    HdlValueId: IDLE
    list: elifs

UPD HdlStmIf@@ to 
    UPD HdlValueId@@int_req_int to trap_o
    MOV HdlValueId@@int_req_int to 
    HdlValueId: int_req_int
    UPD HdlStmBlock@@SEQ to SEQ
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: exc_ctrl_ns
                HdlValueId: WAIT_CONTROLLER_INT
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL list@@elifs from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@save_cause_o to ext_req_o
            MOV HdlValueId@@save_cause_o to ops
            HdlValueId: save_cause_o
            DEL HdlValueInt@@1 from ops
            DEL list@@ops from ASSIGN
        DEL HdlOp@@ASSIGN from body
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: exc_ctrl_ns
                HdlValueId: IDLE
        DEL list@@body from SEQ
    DEL HdlValueId@@ack_i from 
    DEL HdlStmBlock@@SEQ from 

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: exc_ctrl_ns
                HdlValueId: WAIT_CONTROLLER_EXT
        DEL list@@body from SEQ
    DEL HdlValueId@@ext_req_o from 
    DEL HdlStmBlock@@SEQ from 
    DEL list@@elifs from 

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to AND
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: save_cause_o
                HdlValueInt: 1
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@save_cause_o to int_req_int
            DEL HdlValueInt@@1 from ops
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: exc_ctrl_ns
                HdlValueId: IDLE
        DEL list@@body from SEQ
    UPD list@@elifs to ops
    MOV list@@elifs to 
    list: elifs
    DEL HdlValueId@@ack_i from 
    DEL HdlStmBlock@@SEQ from 

DEL HdlStmIf@@ from body

DEL HdlStmIf@@ from body

DEL HdlStmIf@@ from body


CommitId: f7c2b6427045701706308f3a07b4848d3dc4e5b4
decoupled irq, debug with instr mem
--- a/zeroriscy_exc_controller.sv
+++ b/zeroriscy_exc_controller.sv
@@ -189,12 +189,19 @@ assign req_int = int_req_int | ext_req_int;
       begin
         int_req_o = 1'b0;
         ext_req_o = 1'b1;
+        trap_o    = trap_int;
         if (ack_i) begin
           save_cause_o = 1'b1;
           exc_ctrl_ns  = IDLE;
         end
       end
 
+      WAIT_CONTROLLER_DBG:
+      begin
+        exc_ctrl_ns  = IDLE;
+        trap_o       = trap_int;
+      end
+
       default:
       begin
         exc_ctrl_ns = IDLE;
ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: trap_o
                HdlValueInt: 0

UPD HdlStmCase@@exc_ctrl_cs to exc_ctrl_cs
    INS tuple@@ to cases
    tuple
        HdlValueId: WAIT_CONTROLLER_DBG
        HdlStmBlock: SEQ
            list: body
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: exc_ctrl_ns
                        HdlValueId: IDLE
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: trap_o
                        HdlValueId: trap_int
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        UPD HdlOp@@ASSIGN to ASSIGN
            INS list@@ops to ASSIGN
            INS HdlOp@@INDEX to ops
            HdlOp: INDEX
                list: ops
                    HdlValueId: dbg_settings_i
                    HdlValueId: DBG_SETS_SSTE
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: trap_o
                HdlValueId: trap_int
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: trap_o
                HdlValueId: trap_int


CommitId: e37c81a1c1c6801cfea218e14ab12574a43fa749
Update lowrisc_ip to lowRISC/opentitan@067272a2
--- a/vendor/lowrisc_ip/prim_generic/rtl/prim_generic_flash.sv
+++ b/vendor/lowrisc_ip/prim_generic/rtl/prim_generic_flash.sv
@@ -102,7 +102,7 @@ module prim_generic_flash #(
   always_ff @(posedge clk_i or negedge rst_ni) begin
     if (!rst_ni) begin
       held_addr <= '0;
-      held_part <= flash_ctrl_pkg::DataPart;
+      held_part <= flash_ctrl_pkg::FlashPartData;
       held_wdata <= '0;
     end else if (hold_cmd) begin
       held_addr <= rd_q ? addr_q : addr_i;

ParseResult:
UPD HdlStmAssign@@ to 
    UPD HdlOp@@DOUBLE_COLON to DOUBLE_COLON
        UPD HdlValueId@@DataPart to FlashPartData


CommitId: e37c81a1c1c6801cfea218e14ab12574a43fa749
Update lowrisc_ip to lowRISC/opentitan@067272a2
--- a/vendor/lowrisc_ip/prim_generic/rtl/prim_generic_flash.sv
+++ b/vendor/lowrisc_ip/prim_generic/rtl/prim_generic_flash.sv
@@ -155,7 +155,7 @@ module prim_generic_flash #(
     mem_req          = 'h0;
     mem_wr           = 'h0;
     mem_addr         = 'h0;
-    mem_part         = flash_ctrl_pkg::DataPart;
+    mem_part         = flash_ctrl_pkg::FlashPartData;
     mem_wdata        = 'h0;
     time_cnt_inc     = 1'h0;
     time_cnt_clr     = 1'h0;

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@DOUBLE_COLON to DOUBLE_COLON
                UPD HdlValueId@@DataPart to FlashPartData


CommitId: e37c81a1c1c6801cfea218e14ab12574a43fa749
Update lowrisc_ip to lowRISC/opentitan@067272a2
--- a/vendor/lowrisc_ip/prim_generic/rtl/prim_generic_flash.sv
+++ b/vendor/lowrisc_ip/prim_generic/rtl/prim_generic_flash.sv
@@ -313,6 +313,6 @@ module prim_generic_flash #(
     .rdata_o  (rd_data_info)
   );
 
-  assign rd_data_o = held_part == flash_ctrl_pkg::DataPart ? rd_data_main : rd_data_info;
+  assign rd_data_o = held_part == flash_ctrl_pkg::FlashPartData ? rd_data_main : rd_data_info;
 
 endmodule // prim_generic_flash
ParseResult:
INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: TERNARY
        list: ops
            HdlOp: EQ
                list: ops
                    HdlValueId: held_part
                    HdlOp: DOUBLE_COLON
                        list: ops
                            HdlValueId: flash_ctrl_pkg
                            HdlValueId: FlashPartData
            HdlValueId: rd_data_main
            HdlValueId: rd_data_info
    HdlValueId: rd_data_o

DEL HdlStmAssign@@ from objs
HdlStmAssign
    HdlOp: TERNARY
        list: ops
            HdlOp: EQ
                list: ops
                    HdlValueId: held_part
                    HdlOp: DOUBLE_COLON
                        list: ops
                            HdlValueId: flash_ctrl_pkg
                            HdlValueId: DataPart
            HdlValueId: rd_data_main
            HdlValueId: rd_data_info
    HdlValueId: rd_data_o


CommitId: c7cb958f0d6f143d835e33d7efe27336cc7737c1
Update lowrisc_ip to lowRISC/opentitan@ca950b43a
--- a/vendor/lowrisc_ip/ip/prim_generic/rtl/prim_generic_flash.sv
+++ b/vendor/lowrisc_ip/ip/prim_generic/rtl/prim_generic_flash.sv
@@ -14,7 +14,7 @@ module prim_generic_flash #(
   parameter int WordsPerPage   = 256,// words per page
   parameter int DataWidth      = 32, // bits per word
   parameter int MetaDataWidth  = 12, // metadata such as ECC
-  parameter int TestModeWidth  = 4
+  parameter int TestModeWidth  = 2
 ) (
   input clk_i,
   input rst_ni,

ParseResult:
UPD HdlIdDef@@TestModeWidth to TestModeWidth
    UPD HdlValueInt@@4 to 2


CommitId: c7cb958f0d6f143d835e33d7efe27336cc7737c1
Update lowrisc_ip to lowRISC/opentitan@ca950b43a
--- a/vendor/lowrisc_ip/ip/prim_generic/rtl/prim_generic_flash.sv
+++ b/vendor/lowrisc_ip/ip/prim_generic/rtl/prim_generic_flash.sv
@@ -35,10 +35,7 @@ module prim_generic_flash #(
   inout [TestModeWidth-1:0] flash_test_mode_a_io,
   inout flash_test_voltage_h_io,
   output logic flash_err_o,
-  output logic flash_alert_po,
-  output logic flash_alert_no,
-  input flash_alert_ack_i,
-  input flash_alert_trig_i,
+  output ast_pkg::ast_dif_t fl_alert_src_o,
   input tlul_pkg::tl_h2d_t tl_i,
   output tlul_pkg::tl_d2h_t tl_o,
   input  devmode_i

ParseResult:
UPD HdlIdDef@@flash_alert_po to fl_alert_src_o

UPD HdlIdDef@@flash_alert_po to flash_alert_po
    UPD HdlOp@@PARAMETRIZATION to DOUBLE_COLON
    UPD HdlOp@@PARAMETRIZATION to PARAMETRIZATION
        UPD HdlValueId@@logic to ast_pkg

UPD HdlIdDef@@fl_alert_src_o to fl_alert_src_o
    UPD HdlOp@@DOUBLE_COLON to DOUBLE_COLON
        INS HdlValueId@@ast_dif_t to ops

DEL HdlIdDef@@flash_alert_no from ports
HdlIdDef: flash_alert_no
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: OUT

DEL HdlIdDef@@flash_alert_ack_i from ports
HdlIdDef: flash_alert_ack_i
    HdlValueId: wire
    HdlDirection: IN

DEL HdlIdDef@@flash_alert_trig_i from ports
HdlIdDef: flash_alert_trig_i
    HdlValueId: wire
    HdlDirection: IN


CommitId: c7cb958f0d6f143d835e33d7efe27336cc7737c1
Update lowrisc_ip to lowRISC/opentitan@ca950b43a
--- a/vendor/lowrisc_ip/ip/prim_generic/rtl/prim_generic_flash.sv
+++ b/vendor/lowrisc_ip/ip/prim_generic/rtl/prim_generic_flash.sv
@@ -179,21 +177,9 @@ module prim_generic_flash #(
   // open source model has no error response at the moment
   assign flash_err_o = 1'b0;
 
-  logic alerts_active;
-  assign alerts_active = flash_alert_po | ~flash_alert_no;
+  // default alert assignments
+  assign fl_alert_src_o = '{p: '0, n: '1};
 
-  always_ff @(posedge clk_i or negedge rst_ni) begin
-    if (!rst_ni) begin
-      flash_alert_po <= 1'b0;
-      flash_alert_no <= 1'b1;
-    end else if (flash_alert_trig_i) begin
-      flash_alert_po <= 1'b1;
-      flash_alert_no <= 1'b0;
-    end else if (alerts_active && flash_alert_ack_i) begin
-      flash_alert_po <= 1'b0;
-      flash_alert_no <= 1'b1;
-    end
-  end
 
 
 
ParseResult:
INS HdlStmAssign@@ to objs

UPD HdlStmProcess@@ to 
    UPD list@@sensitivity to src
    MOV list@@sensitivity to 
    list: sensitivity
        HdlOp: RISING
            list: ops
                HdlValueId: clk_i
        HdlOp: FALLING
            list: ops
                HdlValueId: rst_ni
    UPD HdlOp@@RISING to MAP_ASSOCIATION
    UPD HdlOp@@FALLING to MAP_ASSOCIATION
    UPD HdlOp@@RISING to RISING
        UPD HdlValueId@@clk_i to p
    UPD HdlOp@@FALLING to FALLING
        UPD HdlValueId@@rst_ni to n
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL HdlStmProcessTriggerConstrain@@FF from 

UPD HdlStmAssign@@ to 
    UPD HdlValueId@@flash_alert_po to fl_alert_src_o
    MOV HdlValueId@@flash_alert_po to 
    HdlValueId: flash_alert_po
    DEL HdlValueInt@@0 from 

UPD HdlStmAssign@@ to 
    UPD HdlOp@@MAP_ASSOCIATION to MAP_ASSOCIATION
        INS HdlValueInt@@0 to ops
    UPD HdlOp@@MAP_ASSOCIATION to MAP_ASSOCIATION
        INS HdlValueInt@@1 to ops

DEL HdlIdDef@@alerts_active from objs
HdlIdDef: alerts_active
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

DEL HdlStmAssign@@ from objs
HdlStmAssign
    HdlOp: OR
        list: ops
            HdlValueId: flash_alert_po
            HdlOp: NEG
                list: ops
                    HdlValueId: flash_alert_no
    HdlValueId: alerts_active

UPD HdlStmIf@@ to 
    DEL HdlOp@@NEG_LOG from 
    HdlOp: NEG_LOG
        list: ops
            HdlValueId: rst_ni
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL list@@elifs from 
    list: elifs
        tuple
            HdlValueId: flash_alert_trig_i
            HdlStmBlock: SEQ
                list: body
                    HdlStmAssign
                        HdlValueInt: 1
                        HdlValueId: flash_alert_po
                    HdlStmAssign
                        HdlValueInt: 0
                        HdlValueId: flash_alert_no
        tuple
            HdlOp: AND_LOG
                list: ops
                    HdlValueId: alerts_active
                    HdlValueId: flash_alert_ack_i
            HdlStmBlock: SEQ
                list: body
                    HdlStmAssign
                        HdlValueInt: 0
                        HdlValueId: flash_alert_po
                    HdlStmAssign
                        HdlValueInt: 1
                        HdlValueId: flash_alert_no

DEL HdlStmAssign@@ from body

DEL HdlStmAssign@@ from body
HdlStmAssign
    HdlValueInt: 1
    HdlValueId: flash_alert_no

DEL HdlStmIf@@ from body

DEL HdlStmProcess@@ from objs


CommitId: c7cb958f0d6f143d835e33d7efe27336cc7737c1
Update lowrisc_ip to lowRISC/opentitan@ca950b43a
--- a/vendor/lowrisc_ip/ip/prim/rtl/prim_secded_39_32_dec.sv
+++ b/vendor/lowrisc_ip/ip/prim/rtl/prim_secded_39_32_dec.sv
@@ -2,12 +2,11 @@
 // Licensed under the Apache License, Version 2.0, see LICENSE for details.
 // SPDX-License-Identifier: Apache-2.0
 //
-// SECDED Decoder generated by
-// util/design/secded_gen.py -m 7 -k 32 -s 1592631616 -c hsiao
+// SECDED decoder generated by util/design/secded_gen.py
 
 module prim_secded_39_32_dec (
-  input        [38:0] in,
-  output logic [31:0] d_o,
+  input        [38:0] data_i,
+  output logic [31:0] data_o,
   output logic [6:0] syndrome_o,
   output logic [1:0] err_o
 );

ParseResult:
UPD HdlIdDef@@in to data_i

UPD HdlIdDef@@d_o to data_o


CommitId: cee2e9396fec09f9f5b1e2015cbf848dce7043da
Remove `csr_restore_dret_i` signal
--- a/rtl/ibex_cs_registers.sv
+++ b/rtl/ibex_cs_registers.sv
@@ -72,7 +72,6 @@ module ibex_cs_registers #(
     input  logic                 csr_save_if_i,
     input  logic                 csr_save_id_i,
     input  logic                 csr_restore_mret_i,
-    input  logic                 csr_restore_dret_i,
     input  logic                 csr_save_cause_i,
     input  logic [31:0]          csr_mtvec_i,
     input  ibex_pkg::exc_cause_e csr_mcause_i,

ParseResult:
DEL HdlIdDef@@csr_restore_dret_i from ports
HdlIdDef: csr_restore_dret_i
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: IN


CommitId: cee2e9396fec09f9f5b1e2015cbf848dce7043da
Remove `csr_restore_dret_i` signal
--- a/rtl/ibex_cs_registers.sv
+++ b/rtl/ibex_cs_registers.sv
@@ -489,11 +488,6 @@ module ibex_cs_registers #(
         mcause_d       = mstack_cause_q;
       end // csr_restore_mret_i
 
-      csr_restore_dret_i: begin // DRET
-        mstatus_d.mie  = mstatus_q.mpie;
-        mstatus_d.mpie = 1'b1;
-      end // csr_restore_dret_i
-
       default:;
     endcase
   end
ParseResult:
UPD HdlStmCase@@{'__class__': 'HdlValueInt', 'base': 2, 'bits': 1, 'val': '1'}  to {'__class__': 'HdlValueInt', 'base': 2, 'bits': 1, 'val': '1'} 
    DEL tuple@@ from cases
    tuple
        HdlValueId: csr_restore_dret_i
        HdlStmBlock: SEQ
            list: body
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: mstatus_d
                        HdlOp: DOT
                            list: ops
                                HdlValueId: mstatus_q
                                HdlValueId: mpie
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: mstatus_d
                        HdlValueInt: 1


CommitId: db75d30547ec2d7bf02bf38381caff2fac7f3f99
Replace non-unique `case` constructs by `unique case`
--- a/rtl/ibex_if_stage.sv
+++ b/rtl/ibex_if_stage.sv
@@ -94,8 +94,6 @@ module ibex_if_stage #(
 
   // exception PC selection mux
   always_comb begin : exc_pc_mux
-    exc_pc = '0;
-
     // TODO: The behavior below follows an outdated (pre-1.10) RISC-V Privileged
     // Spec to implement a "free-form" vectored trap handler.
     // We need to update this code and crt0.S to follow the new mtvec spec.

ParseResult:
UPD HdlStmCase@@exc_pc_mux_i to exc_pc_mux_i
    INS HdlOp@@ASSIGN to exc_pc_mux_i
    HdlOp: ASSIGN
        list: ops
            HdlValueId: exc_pc
            HdlValueInt: X

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: exc_pc
                HdlValueInt: 0


CommitId: db75d30547ec2d7bf02bf38381caff2fac7f3f99
Replace non-unique `case` constructs by `unique case`
--- a/rtl/ibex_if_stage.sv
+++ b/rtl/ibex_if_stage.sv
@@ -108,14 +106,12 @@ module ibex_if_stage #(
       EXC_PC_IRQ:        exc_pc = { boot_addr_i[31:8], {exc_vec_pc_mux_i}, 2'b0 };
       EXC_PC_DBD:        exc_pc = { DmHaltAddr };
       EXC_PC_DBGEXC:     exc_pc = { DmExceptionAddr };
-      default:;
+      default:           exc_pc = 'X;
     endcase
   end
 
   // fetch address selection mux
   always_comb begin : fetch_addr_mux
-    fetch_addr_n = '0;
-
     unique case (pc_mux_i)
       PC_BOOT:      fetch_addr_n = {boot_addr_i[31:8], {EXC_OFF_RST}};
       PC_JUMP:      fetch_addr_n = jump_target_ex_i;

ParseResult:
UPD HdlStmCase@@exc_pc_mux_i to exc_pc_mux_i
    INS HdlOp@@ASSIGN to exc_pc_mux_i
    HdlOp: ASSIGN
        list: ops
            HdlValueId: exc_pc
            HdlValueInt: X

UPD HdlStmCase@@pc_mux_i to pc_mux_i
    INS HdlOp@@ASSIGN to pc_mux_i
    HdlOp: ASSIGN
        list: ops
            HdlValueId: fetch_addr_n
            HdlValueInt: X

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: exc_pc
                HdlValueInt: 0

DEL HdlStmNop@@default from exc_pc_mux_i

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: fetch_addr_n
                HdlValueInt: 0


CommitId: db75d30547ec2d7bf02bf38381caff2fac7f3f99
Replace non-unique `case` constructs by `unique case`
--- a/rtl/ibex_if_stage.sv
+++ b/rtl/ibex_if_stage.sv
@@ -123,8 +119,7 @@ module ibex_if_stage #(
       PC_ERET:      fetch_addr_n = exception_pc_reg_i; // PC is restored when returning
                                                        // from IRQ/exception
       PC_DRET:      fetch_addr_n = depc_i;
-
-      default:;
+      default:      fetch_addr_n = 'X;
     endcase
   end
 
ParseResult:
UPD HdlStmCase@@pc_mux_i to pc_mux_i
    INS HdlOp@@ASSIGN to pc_mux_i
    HdlOp: ASSIGN
        list: ops
            HdlValueId: fetch_addr_n
            HdlValueInt: X

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: fetch_addr_n
                HdlValueInt: 0

DEL HdlStmNop@@default from pc_mux_i


CommitId: 74abc47b7179b9a651240a4c856eb578e53b8a7b
Add missing `default` in `unique case`, propagate `'X` in FSM states
--- a/rtl/ibex_multdiv_fast.sv
+++ b/rtl/ibex_multdiv_fast.sv
@@ -245,7 +245,9 @@ module ibex_multdiv_fast (
         divcurr_state_n = MD_IDLE;
       end
 
-      default:;
+      default: begin
+        divcurr_state_n = div_fsm_e'({$bits(div_fsm_e){1'bX}});
+      end
     endcase // divcurr_state_q
   end
 

ParseResult:
UPD HdlStmCase@@divcurr_state_q to divcurr_state_q
    INS HdlStmBlock@@SEQ to divcurr_state_q
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: divcurr_state_n
                    HdlOp: CALL
                        list: ops
                            HdlValueId: div_fsm_e
                            HdlOp: REPL_CONCAT
                                list: ops
                                    HdlOp: CALL
                                        list: ops
                                            HdlValueId: $bits
                                            HdlValueId: div_fsm_e
                                    HdlValueInt: x

DEL HdlStmNop@@default from divcurr_state_q


CommitId: 74abc47b7179b9a651240a4c856eb578e53b8a7b
Add missing `default` in `unique case`, propagate `'X` in FSM states
--- a/rtl/ibex_multdiv_fast.sv
+++ b/rtl/ibex_multdiv_fast.sv
@@ -323,7 +325,9 @@ module ibex_multdiv_fast (
         mult_state_n = ALBL;
         mult_is_ready = 1'b1;
       end
-      default:;
+      default: begin
+        mult_state_n = mult_fsm_e'({$bits(mult_fsm_e){1'bX}});
+      end
     endcase // mult_state_q
   end
 
ParseResult:
UPD HdlStmCase@@mult_state_q to mult_state_q
    INS HdlStmBlock@@SEQ to mult_state_q
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: mult_state_n
                    HdlOp: CALL
                        list: ops
                            HdlValueId: mult_fsm_e
                            HdlOp: REPL_CONCAT
                                list: ops
                                    HdlOp: CALL
                                        list: ops
                                            HdlValueId: $bits
                                            HdlValueId: mult_fsm_e
                                    HdlValueInt: x

DEL HdlStmNop@@default from mult_state_q


CommitId: 999140ded8aa4286de81576e1038298b9b5813a1
Fix lint issues
--- a/examples/simple_system/rtl/ibex_simple_system.sv
+++ b/examples/simple_system/rtl/ibex_simple_system.sv
@@ -50,11 +50,11 @@ module ibex_simple_system (
 
   logic clk_sys = 1'b0, rst_sys_n;
 
-  typedef enum {
+  typedef enum logic {
     CoreD
   } bus_host_e;
 
-  typedef enum {
+  typedef enum logic[1:0] {
     Ram,
     SimCtrl,
     Timer

ParseResult:
UPD HdlModuleDef@@ibex_simple_system to ibex_simple_system
    MOV HdlStmBlock@@SEQ to objs
    HdlStmBlock: SEQ
        list: body
            HdlStmProcess
                HdlStmBlock: SEQ
                    list: body
                        HdlStmWait:
                            list: val
                                HdlValueInt: 1
                        HdlOp: ASSIGN
                            list: ops
                                HdlValueId: clk_sys
                                HdlValueInt: 0
            HdlStmProcess
                HdlStmBlock: SEQ
                    list: body
                        HdlStmWait:
                            list: val
                                HdlValueInt: 1
                        HdlOp: ASSIGN
                            list: ops
                                HdlValueId: clk_sys
                                HdlValueInt: 1


CommitId: 999140ded8aa4286de81576e1038298b9b5813a1
Fix lint issues
--- a/examples/simple_system/rtl/ibex_simple_system.sv
+++ b/examples/simple_system/rtl/ibex_simple_system.sv
@@ -117,7 +117,7 @@ module ibex_simple_system (
       #8
       rst_sys_n = 1'b1;
     end
-    always begin
+    always_comb begin
       #1 clk_sys = 1'b0;
       #1 clk_sys = 1'b1;
     end
ParseResult:
INS HdlStmProcess@@ to objs

UPD HdlModuleDef@@ibex_simple_system to ibex_simple_system
    MOV HdlStmBlock@@SEQ to objs
    HdlStmBlock: SEQ
        list: body
            HdlStmProcess
                HdlStmBlock: SEQ
                    list: body
                        HdlStmWait:
                            list: val
                                HdlValueInt: 1
                        HdlOp: ASSIGN
                            list: ops
                                HdlValueId: clk_sys
                                HdlValueInt: 0
            HdlStmProcess
                HdlStmBlock: SEQ
                    list: body
                        HdlStmWait:
                            list: val
                                HdlValueInt: 1
                        HdlOp: ASSIGN
                            list: ops
                                HdlValueId: clk_sys
                                HdlValueInt: 1

UPD HdlStmProcess@@ to 
    INS HdlStmProcessTriggerConstrain@@COMB to 


CommitId: 1d1ace35f8c26e38deb87dfa2f955de9dba73651
Cast enum to logic before bit range select to avoid linting errors
--- a/rtl/ibex_cs_registers.sv
+++ b/rtl/ibex_cs_registers.sv
@@ -398,6 +398,10 @@ module ibex_cs_registers #(
   // Performance counters //
   //////////////////////////
 
+  logic [$bits(csr_num_e)-1:0] csr_addr;
+
+  assign csr_addr    = {csr_addr_i};
+
   assign PCCR_in[0]  = 1'b1;                          // cycle counter
   assign PCCR_in[1]  = if_valid_i;                    // instruction counter
   assign PCCR_in[2]  = 1'b0;                          // Reserved

ParseResult:
INS HdlIdDef@@csr_addr to objs
HdlIdDef: csr_addr
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlOp: SUB
                        list: ops
                            HdlOp: CALL
                                list: ops
                                    HdlValueId: $bits
                                    HdlValueId: csr_num_e
                            HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: INTERNAL

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlValueId: csr_addr_i
    HdlValueId: csr_addr


CommitId: 1d1ace35f8c26e38deb87dfa2f955de9dba73651
Cast enum to logic before bit range select to avoid linting errors
--- a/rtl/ibex_cs_registers.sv
+++ b/rtl/ibex_cs_registers.sv
@@ -444,14 +448,14 @@ module ibex_cs_registers #(
       endcase
 
       // look for 780 to 79F, Performance Counter Counter Registers
-      if ({csr_addr_i[11:5]} == 7'b0111100) begin
+      if (csr_addr[11:5] == 7'b0111100) begin
         is_pccr     = 1'b1;
 
-        pccr_index = {csr_addr_i[4:0]};
+        pccr_index = csr_addr[4:0];
 `ifdef  ASIC_SYNTHESIS
         perf_rdata = PCCR_q[0];
 `else
-        perf_rdata = {csr_addr_i[4:0]} < N_PERF_COUNTERS ? PCCR_q[{csr_addr_i[4:0]}] : '0;
+        perf_rdata = csr_addr[4:0] < N_PERF_COUNTERS ? PCCR_q[csr_addr[4:0]] : '0;
 `endif
       end
     end
ParseResult:
UPD HdlStmIf@@ to 
    UPD HdlOp@@EQ to EQ
        UPD HdlOp@@INDEX to INDEX
            UPD HdlValueId@@csr_addr_i to csr_addr
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@INDEX to INDEX
                UPD HdlValueId@@csr_addr_i to csr_addr
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@TERNARY to TERNARY
                UPD HdlOp@@LT to LT
                    UPD HdlOp@@INDEX to INDEX
                        UPD HdlValueId@@csr_addr_i to csr_addr
                UPD HdlOp@@INDEX to INDEX
                    UPD HdlOp@@INDEX to INDEX
                        UPD HdlValueId@@csr_addr_i to csr_addr


CommitId: 9b51b1143ad268f670228e435a2c61bdd8e4490f
CSR: Access checks on Debug CSRs
--- a/rtl/ibex_controller.sv
+++ b/rtl/ibex_controller.sv
@@ -65,6 +65,7 @@ module ibex_controller (
     input  logic                  debug_req_i,
     output ibex_pkg::dbg_cause_e  debug_cause_o,
     output logic                  debug_csr_save_o,
+    output logic                  debug_mode_o,
     input  logic                  debug_single_step_i,
     input  logic                  debug_ebreakm_i,
 

ParseResult:
INS HdlIdDef@@debug_mode_o to ports
HdlIdDef: debug_mode_o
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: OUT


CommitId: 9b51b1143ad268f670228e435a2c61bdd8e4490f
CSR: Access checks on Debug CSRs
--- a/rtl/ibex_controller.sv
+++ b/rtl/ibex_controller.sv
@@ -537,6 +538,9 @@ module ibex_controller (
     endcase
   end
 
+  // signal to CSR when in debug mode
+  assign debug_mode_o = debug_mode_q;
+
   ///////////////////
   // Stall control //
   ///////////////////
ParseResult:
INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlValueId: debug_mode_q
    HdlValueId: debug_mode_o


CommitId: 74abc47b7179b9a651240a4c856eb578e53b8a7b
Add missing `default` in `unique case`, propagate `'X` in FSM states
--- a/rtl/ibex_multdiv_slow.sv
+++ b/rtl/ibex_multdiv_slow.sv
@@ -283,7 +283,9 @@ module ibex_multdiv_slow (
             curr_state_d = MD_IDLE;
         end
 
-        default:;
+        default: begin
+          curr_state_d = div_fsm_e'({$bits(div_fsm_e){1'bX}});
+        end
         endcase // curr_state_q
       end
   end
ParseResult:
UPD HdlStmCase@@curr_state_q to curr_state_q
    INS HdlStmBlock@@SEQ to curr_state_q
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: curr_state_d
                    HdlOp: CALL
                        list: ops
                            HdlValueId: div_fsm_e
                            HdlOp: REPL_CONCAT
                                list: ops
                                    HdlOp: CALL
                                        list: ops
                                            HdlValueId: $bits
                                            HdlValueId: div_fsm_e
                                    HdlValueInt: x

DEL HdlStmNop@@default from curr_state_q


CommitId: 04f4cd44f6b62a48af65f11143278be00d54132b
Decoder: avoid setting PC upon illegal JALR instructions
--- a/rtl/ibex_decoder.sv
+++ b/rtl/ibex_decoder.sv
@@ -602,9 +602,9 @@ module ibex_decoder #(
     end
 
     // make sure illegal instructions detected in the decoder do not propagate from decoder
-    // into register file, LSU, EX, WB, CSRs
+    // into register file, LSU, EX, WB, CSRs, PC
     // NOTE: instructions can also be detected to be illegal inside the CSRs (upon accesses with
-    // insufficient privileges), in ID stage (when accessing Reg 16 or higher in RV32E config),
+    // insufficient privileges), or when accessing non-available registers in RV32E,
     // these cases are not handled here
     if (illegal_insn) begin
       regfile_we      = 1'b0;

ParseResult:
UPD HdlStmProcess@@ to 
    INS HdlStmProcessTriggerConstrain@@COMB to 

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: jump_set_o
                HdlValueInt: 0

UPD HdlStmProcess@@ to 
    DEL HdlStmProcessTriggerConstrain@@COMB from 


CommitId: 04f4cd44f6b62a48af65f11143278be00d54132b
Decoder: avoid setting PC upon illegal JALR instructions
--- a/rtl/ibex_decoder.sv
+++ b/rtl/ibex_decoder.sv
@@ -613,6 +613,7 @@ module ibex_decoder #(
       mult_en_o       = 1'b0;
       div_en_o        = 1'b0;
       jump_in_dec_o   = 1'b0;
+      jump_set_o      = 1'b0;
       branch_in_dec_o = 1'b0;
       csr_access_o    = 1'b0;
     end
ParseResult:
UPD HdlStmProcess@@ to 
    INS HdlStmProcessTriggerConstrain@@COMB to 

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: jump_set_o
                HdlValueInt: 0

UPD HdlStmProcess@@ to 
    DEL HdlStmProcessTriggerConstrain@@COMB from 


CommitId: c7cb958f0d6f143d835e33d7efe27336cc7737c1
Update lowrisc_ip to lowRISC/opentitan@ca950b43a
--- a/vendor/lowrisc_ip/ip/prim/rtl/prim_secded_22_16_enc.sv
+++ b/vendor/lowrisc_ip/ip/prim/rtl/prim_secded_22_16_enc.sv
@@ -2,22 +2,21 @@
 // Licensed under the Apache License, Version 2.0, see LICENSE for details.
 // SPDX-License-Identifier: Apache-2.0
 //
-// SECDED Encoder generated by
-// util/design/secded_gen.py -m 6 -k 16 -s 1592631616 -c hsiao
+// SECDED encoder generated by util/design/secded_gen.py
 
 module prim_secded_22_16_enc (
-  input        [15:0] in,
-  output logic [21:0] out
+  input        [15:0] data_i,
+  output logic [21:0] data_o
 );
 
   always_comb begin : p_encode
-    out = 22'(in);
-    out[16] = ^(out & 22'h009F41);
-    out[17] = ^(out & 22'h007A34);
-    out[18] = ^(out & 22'h0029CD);
-    out[19] = ^(out & 22'h00C0AF);
-    out[20] = ^(out & 22'h0074D2);
-    out[21] = ^(out & 22'h00873A);
+    data_o = 22'(data_i);
+    data_o[16] = ^(data_o & 22'h00496E);
+    data_o[17] = ^(data_o & 22'h00F20B);
+    data_o[18] = ^(data_o & 22'h008ED8);
+    data_o[19] = ^(data_o & 22'h007714);
+    data_o[20] = ^(data_o & 22'h00ACA5);
+    data_o[21] = ^(data_o & 22'h0011F3);
   end
 
 endmodule : prim_secded_22_16_enc
ParseResult:
UPD HdlIdDef@@in to data_i

UPD HdlIdDef@@out to data_o

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@out to data_o
            UPD HdlOp@@CALL to CALL
                UPD HdlValueId@@in to data_i
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@INDEX to INDEX
                UPD HdlValueId@@out to data_o
            UPD HdlOp@@XOR_UNARY to XOR_UNARY
                UPD HdlOp@@AND to AND
                    UPD HdlValueId@@out to data_o
                    UPD HdlValueInt@@009f41 to 00496e
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@INDEX to INDEX
                UPD HdlValueId@@out to data_o
            UPD HdlOp@@XOR_UNARY to XOR_UNARY
                UPD HdlOp@@AND to AND
                    UPD HdlValueId@@out to data_o
                    UPD HdlValueInt@@007a34 to 00f20b
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@INDEX to INDEX
                UPD HdlValueId@@out to data_o
            UPD HdlOp@@XOR_UNARY to XOR_UNARY
                UPD HdlOp@@AND to AND
                    UPD HdlValueId@@out to data_o
                    UPD HdlValueInt@@0029cd to 008ed8
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@INDEX to INDEX
                UPD HdlValueId@@out to data_o
            UPD HdlOp@@XOR_UNARY to XOR_UNARY
                UPD HdlOp@@AND to AND
                    UPD HdlValueId@@out to data_o
                    UPD HdlValueInt@@00c0af to 007714
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@INDEX to INDEX
                UPD HdlValueId@@out to data_o
            UPD HdlOp@@XOR_UNARY to XOR_UNARY
                UPD HdlOp@@AND to AND
                    UPD HdlValueId@@out to data_o
                    UPD HdlValueInt@@0074d2 to 00aca5
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@INDEX to INDEX
                UPD HdlValueId@@out to data_o
            UPD HdlOp@@XOR_UNARY to XOR_UNARY
                UPD HdlOp@@AND to AND
                    UPD HdlValueId@@out to data_o
                    UPD HdlValueInt@@00873a to 0011f3


CommitId: 501cc2bb62906eb7ebc9d638d6a42695b08871ab
ram_1p.sv: Fix rvalid_o generation
--- a/examples/fpga/artya7-100/rtl/ram_1p.sv
+++ b/examples/fpga/artya7-100/rtl/ram_1p.sv
@@ -42,7 +42,7 @@ module ram_1p #(
     if (!rst_ni) begin
       rvalid_o <= '0;
     end else begin
-      rvalid_o <= req_i && ~write_i;
+      rvalid_o <= req_i;
     end
   end
 
ParseResult:
UPD HdlStmAssign@@ to 
    UPD HdlOp@@AND_LOG to AND_LOG
        MOV HdlValueId@@req_i to ops
        HdlValueId: req_i
        DEL HdlOp@@NEG from ops
        HdlOp: NEG
            list: ops
                HdlValueId: write_i
        DEL list@@ops from AND_LOG
    DEL HdlOp@@AND_LOG from 


CommitId: 010985a39555bbbee969296e1da4f3bd0b502e63
Controller: save next PC to dpc CSR upon a halt request
--- a/rtl/ibex_controller.sv
+++ b/rtl/ibex_controller.sv
@@ -323,7 +323,7 @@ module ibex_controller (
         if (!stall && !special_req) begin
           if (enter_debug_mode) begin
             // enter debug mode
-            ctrl_fsm_ns = DBG_TAKEN_ID;
+            ctrl_fsm_ns = DBG_TAKEN_IF;
             halt_if     = 1'b1;
             halt_id     = 1'b1;
 

ParseResult:
UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@DBG_TAKEN_ID to DBG_TAKEN_IF


CommitId: 010985a39555bbbee969296e1da4f3bd0b502e63
Controller: save next PC to dpc CSR upon a halt request
--- a/rtl/ibex_controller.sv
+++ b/rtl/ibex_controller.sv
@@ -382,19 +382,17 @@ module ibex_controller (
         // enter debug mode and save PC in ID to dpc, used when encountering
         // 1. EBREAK during debug mode
         // 2. EBREAK with forced entry into debug mode (ebreakm or ebreaku set).
-        // 3. halt request during decode
         // regular ebreak's go through FLUSH.
         //
-        // for 1. do not update dcsr and dpc, for 2. and 3. do so [Debug Spec v0.13.2, p.39]
+        // for 1. do not update dcsr and dpc, for 2. do so [Debug Spec v0.13.2, p.39]
         // jump to debug exception handler in debug memory
-        if (ebrk_insn_i || debug_req_i) begin
+        if (ebrk_insn_i) begin
           pc_mux_o     = PC_EXC;
           pc_set_o     = 1'b1;
           exc_pc_mux_o = EXC_PC_DBD;
 
           // update dcsr and dpc
-          if ((ebrk_insn_i && debug_ebreakm_i && !debug_mode_q) || // ebreak with forced entry
-              (enter_debug_mode)) begin // halt request
+          if (debug_ebreakm_i && !debug_mode_q) begin // ebreak with forced entry
 
             // dpc (set to the address of the EBREAK, i.e. set to PC in ID stage)
             csr_save_cause_o = 1'b1;

ParseResult:
UPD HdlStmIf@@ to 
    UPD HdlOp@@OR_LOG to OR_LOG
        MOV HdlValueId@@ebrk_insn_i to ops
        HdlValueId: ebrk_insn_i
        DEL HdlValueId@@debug_req_i from ops
        DEL list@@ops from OR_LOG
    DEL HdlOp@@OR_LOG from 

UPD HdlStmIf@@ to 
    UPD HdlOp@@OR_LOG to OR_LOG
        MOV HdlOp@@AND_LOG to ops
        HdlOp: AND_LOG
            list: ops
                HdlOp: AND_LOG
                    list: ops
                        HdlValueId: ebrk_insn_i
                        HdlValueId: debug_ebreakm_i
                HdlOp: NEG_LOG
                    list: ops
                        HdlValueId: debug_mode_q
        UPD HdlOp@@AND_LOG to AND_LOG
            UPD HdlOp@@AND_LOG to AND_LOG
                MOV HdlValueId@@debug_ebreakm_i to ops
                HdlValueId: debug_ebreakm_i
                DEL HdlValueId@@ebrk_insn_i from ops
                DEL list@@ops from AND_LOG
            DEL HdlOp@@AND_LOG from ops
        DEL HdlValueId@@enter_debug_mode from ops
        DEL list@@ops from OR_LOG
    DEL HdlOp@@OR_LOG from 


CommitId: 010985a39555bbbee969296e1da4f3bd0b502e63
Controller: save next PC to dpc CSR upon a halt request
--- a/rtl/ibex_controller.sv
+++ b/rtl/ibex_controller.sv
@@ -402,11 +400,7 @@ module ibex_controller (
 
             // dcsr
             debug_csr_save_o = 1'b1;
-            if (debug_req_i) begin
-              debug_cause_o = DBG_CAUSE_HALTREQ;
-            end else begin
-              debug_cause_o = DBG_CAUSE_EBREAK;
-            end
+            debug_cause_o    = DBG_CAUSE_EBREAK;
           end
 
           // enter debug mode
ParseResult:
UPD HdlStmIf@@ to 
    UPD HdlOp@@OR_LOG to OR_LOG
        MOV HdlValueId@@ebrk_insn_i to ops
        HdlValueId: ebrk_insn_i
        DEL HdlValueId@@debug_req_i from ops
        DEL list@@ops from OR_LOG
    DEL HdlOp@@OR_LOG from 

UPD HdlStmIf@@ to 
    UPD HdlOp@@OR_LOG to OR_LOG
        MOV HdlOp@@AND_LOG to ops
        HdlOp: AND_LOG
            list: ops
                HdlOp: AND_LOG
                    list: ops
                        HdlValueId: ebrk_insn_i
                        HdlValueId: debug_ebreakm_i
                HdlOp: NEG_LOG
                    list: ops
                        HdlValueId: debug_mode_q
        UPD HdlOp@@AND_LOG to AND_LOG
            UPD HdlOp@@AND_LOG to AND_LOG
                MOV HdlValueId@@debug_ebreakm_i to ops
                HdlValueId: debug_ebreakm_i
                DEL HdlValueId@@ebrk_insn_i from ops
                DEL list@@ops from AND_LOG
            DEL HdlOp@@AND_LOG from ops
        DEL HdlValueId@@enter_debug_mode from ops
        DEL list@@ops from OR_LOG
    DEL HdlOp@@OR_LOG from 

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: debug_cause_o
                HdlValueId: DBG_CAUSE_EBREAK
        DEL list@@body from SEQ
    DEL HdlValueId@@debug_req_i from 
    DEL HdlStmBlock@@SEQ from 
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: debug_cause_o
                    HdlValueId: DBG_CAUSE_HALTREQ
    DEL list@@elifs from 
    DEL HdlStmBlock@@SEQ from 

DEL HdlStmIf@@ from body


CommitId: 6be1e8aff36df9969496d1f7de6ae396c8a41b1d
Delay simulator finish
--- a/shared/rtl/sim/simulator_ctrl.sv
+++ b/shared/rtl/sim/simulator_ctrl.sv
@@ -36,6 +36,7 @@ module simulator_ctrl #(
   localparam SIM_CTRL_ADDR = 1;
 
   logic [7:0] ctrl_addr;
+  logic [2:0] sim_finish;
 
   integer log_fd;
 

ParseResult:
INS HdlIdDef@@sim_finish to objs
HdlIdDef: sim_finish
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 2
                    HdlValueInt: 0
    HdlDirection: INTERNAL


CommitId: 6be1e8aff36df9969496d1f7de6ae396c8a41b1d
Delay simulator finish
--- a/shared/rtl/sim/simulator_ctrl.sv
+++ b/shared/rtl/sim/simulator_ctrl.sv
@@ -52,6 +53,7 @@ module simulator_ctrl #(
   always_ff @(posedge clk_i or negedge rst_ni) begin
     if (~rst_ni) begin
       rvalid_o <= 0;
+      sim_finish <= 'b0;
     end else begin
       // Immeditely respond to any request
       rvalid_o <= req_i;

ParseResult:
INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: sim_finish


CommitId: 6be1e8aff36df9969496d1f7de6ae396c8a41b1d
Delay simulator finish
--- a/shared/rtl/sim/simulator_ctrl.sv
+++ b/shared/rtl/sim/simulator_ctrl.sv
@@ -68,9 +70,9 @@ module simulator_ctrl #(
             end
           end
           SIM_CTRL_ADDR: begin
-            if (be_i[0] & wdata_i[0]) begin
+            if ((be_i[0] & wdata_i[0]) && (sim_finish == 'b0)) begin
               $display("Terminating simulation by software request.");
-              $finish;
+              sim_finish <= 3'b001;
             end
           end
         endcase

ParseResult:
UPD HdlStmIf@@ to 
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlOp: CALL
                list: ops
                    HdlValueId: $display
                    str
            HdlOp: CALL
                list: ops
                    HdlValueId: $finish
    MOV HdlOp@@AND to 
    HdlOp: AND
        list: ops
            HdlOp: INDEX
                list: ops
                    HdlValueId: be_i
                    HdlValueInt: 0
            HdlOp: INDEX
                list: ops
                    HdlValueId: wdata_i
                    HdlValueInt: 0
    UPD HdlStmBlock@@SEQ to SEQ
        MOV HdlOp@@CALL to body
        HdlOp: CALL
            list: ops
                HdlValueId: $display
                str

UPD HdlStmIf@@ to 
    INS HdlOp@@AND_LOG to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlOp@@AND_LOG to AND_LOG
        INS list@@ops to AND_LOG
        INS HdlOp@@EQ to ops
        HdlOp: EQ
            list: ops
                HdlValueId: sim_finish
                HdlValueInt: 0
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueInt: 001
    HdlValueId: sim_finish


CommitId: 6be1e8aff36df9969496d1f7de6ae396c8a41b1d
Delay simulator finish
--- a/shared/rtl/sim/simulator_ctrl.sv
+++ b/shared/rtl/sim/simulator_ctrl.sv
@@ -78,6 +80,14 @@ module simulator_ctrl #(
     end
   end
 
+  always_ff @(posedge clk_i or negedge rst_ni) begin
+    if (sim_finish != 'b0) begin
+      sim_finish <= sim_finish + 1;
+    end
+    if (sim_finish >= 3'b010) begin
+      $finish;
+    end
+  end
   assign rdata_o = '0;
 endmodule
 
ParseResult:
INS HdlStmProcess@@ to objs

INS HdlStmIf@@ to body
HdlStmIf
    HdlOp: NE
        list: ops
            HdlValueId: sim_finish
            HdlValueInt: 0
    HdlStmBlock: SEQ
        list: body
            HdlStmAssign
                HdlOp: ADD
                    list: ops
                        HdlValueId: sim_finish
                        HdlValueInt: 1
                HdlValueId: sim_finish
    list: elifs

INS HdlStmIf@@ to body

UPD HdlStmIf@@ to 
    INS HdlOp@@AND_LOG to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlOp@@AND_LOG to AND_LOG
        INS list@@ops to AND_LOG
        INS HdlOp@@EQ to ops
        HdlOp: EQ
            list: ops
                HdlValueId: sim_finish
                HdlValueInt: 0
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ


CommitId: 2c75c2b2ec90bebb756386e1360810474323c1ad
Update lowrisc_ip to lowRISC/opentitan@1ae03937f
--- a/vendor/lowrisc_ip/ip/prim/rtl/prim_ram_1p_scr.sv
+++ b/vendor/lowrisc_ip/ip/prim/rtl/prim_ram_1p_scr.sv
@@ -75,13 +74,19 @@ module prim_ram_1p_scr #(
   input        [AddrWidth-1:0]      addr_i,
   input        [Width-1:0]          wdata_i,
   input        [Width-1:0]          wmask_i,  // Needs to be byte-aligned for parity
+  // The incoming transaction contains an integrity error and the module should alter
+  // its behavior appropriately.
+  // On integrity errors, the primitive reverses the bit-order of the nonce and surpresses
+  // any real transaction to the memory.
+  input                             intg_error_i,
   output logic [Width-1:0]          rdata_o,
   output logic                      rvalid_o, // Read response (rdata_o) is valid
   output logic [1:0]                rerror_o, // Bit1: Uncorrectable, Bit0: Correctable
   output logic [31:0]               raddr_o,  // Read address for error reporting.
+  output logic                      intg_error_o,
 
   // config
-  input [CfgWidth-1:0]              cfg_i
+  input ram_1p_cfg_t                cfg_i
 );
 
   //////////////////////

ParseResult:
INS HdlStmProcess@@ to objs
HdlStmProcess
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: rdata_o
                    HdlValueInt: 0
            HdlStmIf
                HdlValueId: rvalid_q
                HdlStmBlock: SEQ
                    list: body
                        HdlOp: ASSIGN
                            list: ops
                                HdlValueId: rdata_o
                                HdlValueId: rdata
                list: elifs
            HdlStmIf
                HdlValueId: addr_collision_q
                HdlStmBlock: SEQ
                    list: body
                        HdlStmFor
                            HdlStmBlock: SEQ
                                list: body
                                    HdlIdDef: k
                                        HdlValueId: int
                                        HdlValueInt: 0
                                        HdlDirection: INTERNAL
                            HdlOp: LT
                                list: ops
                                    HdlValueId: k
                                    HdlValueId: Width
                            HdlStmBlock: SEQ
                                list: body
                                    HdlOp: INCR_POST
                                        list: ops
                                            HdlValueId: k
                            HdlStmBlock: SEQ
                                list: body
                                    HdlStmIf
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: wmask_q
                                                HdlValueId: k
                                        HdlStmBlock: SEQ
                                            list: body
                                                HdlOp: ASSIGN
                                                    list: ops
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlValueId: rdata_o
                                                                HdlValueId: k
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlValueId: wdata_q
                                                                HdlValueId: k
                                        list: elifs
                list: elifs
    HdlStmProcessTriggerConstrain: COMB


CommitId: 2c75c2b2ec90bebb756386e1360810474323c1ad
Update lowrisc_ip to lowRISC/opentitan@1ae03937f
--- a/vendor/lowrisc_ip/ip/prim/rtl/prim_ram_1p_scr.sv
+++ b/vendor/lowrisc_ip/ip/prim/rtl/prim_ram_1p_scr.sv
@@ -93,6 +98,24 @@ module prim_ram_1p_scr #(
   `ASSERT_INIT(DiffWidthAligned_A, (DataBitsPerMask % DiffWidth) == 0)
   `ASSERT_INIT(DiffWidthWithParity_A, EnableParity && (DiffWidth == 8) || !EnableParity)
 
+  //////////////////////////////
+  // Integrity error latching //
+  //////////////////////////////
+
+  logic intg_err_q;
+  always_ff @(posedge clk_i or negedge rst_ni) begin
+    if (!rst_ni) begin
+      intg_err_q <= '0;
+    end else if (intg_error_i) begin
+      intg_err_q <= 1'b1;
+    end
+  end
+
+  prim_buf u_intg_err_out (
+    .in_i(intg_error_i | intg_err_q),
+    .out_o(intg_error_o)
+  );
+
   /////////////////////////////////////////
   // Pending Write and Address Registers //
   /////////////////////////////////////////

ParseResult:
INS HdlIdDef@@intg_err_q to objs
HdlIdDef: intg_err_q
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

INS HdlStmProcess@@ to objs
HdlStmProcess
    list: sensitivity
        HdlOp: RISING
            list: ops
                HdlValueId: clk_i
        HdlOp: FALLING
            list: ops
                HdlValueId: rst_ni
    HdlStmBlock: SEQ
        list: body
            HdlStmIf
                HdlOp: NEG_LOG
                    list: ops
                        HdlValueId: rst_ni
                HdlStmBlock: SEQ
                    list: body
                        HdlStmAssign
                            HdlValueInt: 0
                            HdlValueId: intg_err_q
                list: elifs
                    tuple
                        HdlValueId: intg_error_i
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmAssign
                                    HdlValueInt: 1
                                    HdlValueId: intg_err_q
    HdlStmProcessTriggerConstrain: FF

INS HdlStmProcess@@ to objs
HdlStmProcess
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: rdata_o
                    HdlValueInt: 0
            HdlStmIf
                HdlValueId: rvalid_q
                HdlStmBlock: SEQ
                    list: body
                        HdlOp: ASSIGN
                            list: ops
                                HdlValueId: rdata_o
                                HdlValueId: rdata
                list: elifs
            HdlStmIf
                HdlValueId: addr_collision_q
                HdlStmBlock: SEQ
                    list: body
                        HdlStmFor
                            HdlStmBlock: SEQ
                                list: body
                                    HdlIdDef: k
                                        HdlValueId: int
                                        HdlValueInt: 0
                                        HdlDirection: INTERNAL
                            HdlOp: LT
                                list: ops
                                    HdlValueId: k
                                    HdlValueId: Width
                            HdlStmBlock: SEQ
                                list: body
                                    HdlOp: INCR_POST
                                        list: ops
                                            HdlValueId: k
                            HdlStmBlock: SEQ
                                list: body
                                    HdlStmIf
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: wmask_q
                                                HdlValueId: k
                                        HdlStmBlock: SEQ
                                            list: body
                                                HdlOp: ASSIGN
                                                    list: ops
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlValueId: rdata_o
                                                                HdlValueId: k
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlValueId: wdata_q
                                                                HdlValueId: k
                                        list: elifs
                list: elifs
    HdlStmProcessTriggerConstrain: COMB


CommitId: 2c75c2b2ec90bebb756386e1360810474323c1ad
Update lowrisc_ip to lowRISC/opentitan@1ae03937f
--- a/vendor/lowrisc_ip/ip/prim/rtl/prim_ram_1p_scr.sv
+++ b/vendor/lowrisc_ip/ip/prim/rtl/prim_ram_1p_scr.sv
@@ -118,8 +141,14 @@ module prim_ram_1p_scr #(
   assign addr_collision_d = read_en & (write_en_q | write_pending_q) & (addr_i == waddr_q);
 
   // Macro requests and write strobe
+  // The macro operation is silenced if an integrity error is seen
   logic macro_req;
-  assign macro_req   = read_en | write_en_q | write_pending_q;
+  logic intg_err_macro_req;
+  prim_buf u_intg_err_macro_req (
+    .in_i(intg_error_i | intg_err_q),
+    .out_o(intg_err_macro_req)
+  );
+  assign macro_req   = ~intg_err_macro_req & (read_en | write_en_q | write_pending_q);
   // We are allowed to write a pending write transaction to the memory if there is no incoming read
   logic macro_write;
   assign macro_write = (write_en_q | write_pending_q) & ~read_en;

ParseResult:
INS HdlIdDef@@intg_err_macro_req to objs
HdlIdDef: intg_err_macro_req
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

UPD HdlStmAssign@@ to 
    MOV HdlOp@@OR to 
    HdlOp: OR
        list: ops
            HdlOp: OR
                list: ops
                    HdlValueId: read_en
                    HdlValueId: write_en_q
            HdlValueId: write_pending_q


CommitId: 2c75c2b2ec90bebb756386e1360810474323c1ad
Update lowrisc_ip to lowRISC/opentitan@1ae03937f
--- a/vendor/lowrisc_ip/ip/prim/rtl/prim_ram_1p_scr.sv
+++ b/vendor/lowrisc_ip/ip/prim/rtl/prim_ram_1p_scr.sv
@@ -138,18 +167,34 @@ module prim_ram_1p_scr #(
   // This creates a bijective address mapping using a substitution / permutation network.
   logic [AddrWidth-1:0] addr_scr;
   if (NumAddrScrRounds > 0) begin : gen_addr_scr
+
+    // TODO, expand this into copies with another primitive
+    logic intg_err_addr_scr;
+    prim_buf u_intg_err_addr_scr (
+      .in_i(intg_error_i | intg_err_q),
+      .out_o(intg_err_addr_scr)
+    );
+
+    // If there is an intergirty error, the nonce used is reversed
+    logic [AddrWidth-1:0] addr_scr_nonce;
+    for (genvar j = 0; j < AddrWidth; j++) begin : gen_addr_scr_nonce
+      assign addr_scr_nonce[j] = intg_err_addr_scr ?
+                                 nonce_i[NonceWidth - 1 - j] :
+                                 nonce_i[NonceWidth - AddrWidth + j];
+    end
+
     prim_subst_perm #(
       .DataWidth ( AddrWidth        ),
       .NumRounds ( NumAddrScrRounds ),
       .Decrypt   ( 0                )
     ) u_prim_subst_perm (
-      .data_i ( addr_mux ),
+      .data_i ( addr_mux       ),
       // Since the counter mode concatenates {nonce_i[NonceWidth-1-AddrWidth:0], addr_i} to form
       // the IV, the upper AddrWidth bits of the nonce are not used and can be used for address
       // scrambling. In cases where N parallel PRINCE blocks are used due to a data
       // width > 64bit, N*AddrWidth nonce bits are left dangling.
-      .key_i  ( nonce_i[NonceWidth - 1 : NonceWidth - AddrWidth] ),
-      .data_o ( addr_scr )
+      .key_i  ( addr_scr_nonce ),
+      .data_o ( addr_scr       )
     );
   end else begin : gen_no_addr_scr
     assign addr_scr = addr_mux;

ParseResult:
UPD HdlStmAssign@@ to 
    INS HdlOp@@AND to 
    UPD HdlOp@@AND to AND
        INS list@@ops to AND
        INS HdlOp@@NEG to ops
        HdlOp: NEG
            list: ops
                HdlValueId: intg_err_macro_req

INS HdlIdDef@@intg_err_addr_scr to body
HdlIdDef: intg_err_addr_scr
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

INS HdlIdDef@@addr_scr_nonce to body
HdlIdDef: addr_scr_nonce
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlOp: SUB
                        list: ops
                            HdlValueId: AddrWidth
                            HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: INTERNAL

INS HdlStmFor@@ to body

INS HdlStmAssign@@ to body


CommitId: 2c75c2b2ec90bebb756386e1360810474323c1ad
Update lowrisc_ip to lowRISC/opentitan@1ae03937f
--- a/vendor/lowrisc_ip/ip/prim/rtl/prim_ram_1p_scr.sv
+++ b/vendor/lowrisc_ip/ip/prim/rtl/prim_ram_1p_scr.sv
@@ -166,8 +211,26 @@ module prim_ram_1p_scr #(
   // This encrypts the IV consisting of the nonce and address using the key provided in order to
   // generate the keystream for the data. Note that we instantiate a register halfway within this
   // primitive to balance the delay between request and response side.
+  localparam int DataNonceWidth = 64 - AddrWidth;
   logic [NumParScr*64-1:0] keystream;
+  logic [NumParScr-1:0][DataNonceWidth-1:0] data_scr_nonce;
+
+  // TODO, expand this into copies with another primitive
+  logic intg_err_data_scr;
+  prim_buf u_intg_err_data_scr (
+    .in_i(intg_error_i | intg_err_q),
+    .out_o(intg_err_data_scr)
+  );
+
   for (genvar k = 0; k < NumParScr; k++) begin : gen_par_scr
+
+    for (genvar j = 0; j < DataNonceWidth; j++) begin : gen_data_nonce
+      assign data_scr_nonce[k][j] = intg_err_data_scr ?
+                                    nonce_i[(k + 1) * DataNonceWidth - j] :
+                                    nonce_i[k * DataNonceWidth + j];
+    end
+
+
     prim_prince #(
       .DataWidth      (64),
       .KeyWidth       (128),

ParseResult:
INS HdlIdDef@@DataNonceWidth to objs

INS HdlIdDef@@data_scr_nonce to objs
HdlIdDef: data_scr_nonce
    HdlOp: INDEX
        list: ops
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: logic
                    HdlOp: DOWNTO
                        list: ops
                            HdlOp: SUB
                                list: ops
                                    HdlValueId: NumParScr
                                    HdlValueInt: 1
                            HdlValueInt: 0
            HdlOp: DOWNTO
                list: ops
                    HdlOp: SUB
                        list: ops
                            HdlValueId: DataNonceWidth
                            HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: INTERNAL


CommitId: 2c75c2b2ec90bebb756386e1360810474323c1ad
Update lowrisc_ip to lowRISC/opentitan@1ae03937f
--- a/vendor/lowrisc_ip/ip/prim/rtl/prim_ram_1p_scr.sv
+++ b/vendor/lowrisc_ip/ip/prim/rtl/prim_ram_1p_scr.sv
@@ -180,7 +243,8 @@ module prim_ram_1p_scr #(
       .rst_ni,
       .valid_i ( gnt_o ),
       // The IV is composed of a nonce and the row address
-      .data_i  ( {nonce_i[k * (64 - AddrWidth) +: (64 - AddrWidth)], addr_i} ),
+      //.data_i  ( {nonce_i[k * (64 - AddrWidth) +: (64 - AddrWidth)], addr_i} ),
+      .data_i  ( {data_scr_nonce[k], addr_i} ),
       // All parallel scramblers use the same key
       .key_i,
       // Since we operate in counter mode, this can always be set to encryption mode

ParseResult:
INS HdlStmFor@@ to body
HdlStmFor
    HdlStmBlock: SEQ
        list: body
            HdlIdDef: j
                HdlValueInt: 0
                HdlDirection: INTERNAL
    HdlOp: LT
        list: ops
            HdlValueId: j
            HdlValueId: DataNonceWidth
    HdlOp: INCR_POST
        list: ops
            HdlValueId: j
    HdlStmBlock: SEQ
        list: body
            HdlStmAssign
                HdlOp: TERNARY
                    list: ops
                        HdlValueId: intg_err_data_scr
                        HdlOp: INDEX
                            list: ops
                                HdlValueId: nonce_i
                                HdlOp: SUB
                                    list: ops
                                        HdlOp: MUL
                                            list: ops
                                                HdlOp: ADD
                                                    list: ops
                                                        HdlValueId: k
                                                        HdlValueInt: 1
                                                HdlValueId: DataNonceWidth
                                        HdlValueId: j
                        HdlOp: INDEX
                            list: ops
                                HdlValueId: nonce_i
                                HdlOp: ADD
                                    list: ops
                                        HdlOp: MUL
                                            list: ops
                                                HdlValueId: k
                                                HdlValueId: DataNonceWidth
                                        HdlValueId: j
                HdlOp: INDEX
                    list: ops
                        HdlOp: INDEX
                            list: ops
                                HdlValueId: data_scr_nonce
                                HdlValueId: k
                        HdlValueId: j


CommitId: c7cb958f0d6f143d835e33d7efe27336cc7737c1
Update lowrisc_ip to lowRISC/opentitan@ca950b43a
--- a/vendor/lowrisc_ip/ip/prim_xilinx/rtl/prim_xilinx_buf.sv
+++ b/vendor/lowrisc_ip/ip/prim_xilinx/rtl/prim_xilinx_buf.sv
@@ -2,11 +2,13 @@
 // Licensed under the Apache License, Version 2.0, see LICENSE for details.
 // SPDX-License-Identifier: Apache-2.0
 
-module prim_xilinx_buf (
-  input in_i,
-  (* keep = "true" *) output logic out_o
+module prim_xilinx_buf #(
+  parameter int Width = 1
+) (
+  input [Width-1:0] in_i,
+  (* keep = "true" *) output logic [Width-1:0] out_o
 );
 
   assign out_o = in_i;
 
-endmodule : prim_xilinx_buf
+endmodule
ParseResult:
INS HdlIdDef@@Width to params
HdlIdDef: Width
    HdlValueId: int
    HdlValueInt: 1
    HdlDirection: INTERNAL

UPD HdlIdDef@@in_i to in_i
    INS HdlOp@@PARAMETRIZATION to in_i
    UPD HdlOp@@PARAMETRIZATION to PARAMETRIZATION
        INS list@@ops to PARAMETRIZATION
        INS HdlOp@@DOWNTO to ops
        HdlOp: DOWNTO
            list: ops
                HdlOp: SUB
                    list: ops
                        HdlValueId: Width
                        HdlValueInt: 1
                HdlValueInt: 0

UPD HdlIdDef@@out_o to out_o
    INS HdlOp@@INDEX to out_o
    UPD HdlOp@@INDEX to INDEX
        INS list@@ops to INDEX
        INS HdlOp@@DOWNTO to ops
        HdlOp: DOWNTO
            list: ops
                HdlOp: SUB
                    list: ops
                        HdlValueId: Width
                        HdlValueInt: 1
                HdlValueInt: 0

UPD HdlIdDef@@in_i to in_i
    MOV HdlValueId@@wire to in_i
    HdlValueId: wire

UPD HdlIdDef@@out_o to out_o
    MOV HdlValueId@@logic to out_o
    HdlValueId: logic


CommitId: a2184f9ec76a029bb8798119a46efb3992ae69eb
Align ALU comparison op naming to instruction names
--- a/rtl/ibex_decoder.sv
+++ b/rtl/ibex_decoder.sv
@@ -187,8 +187,8 @@ module ibex_decoder #(
           unique case (instr_rdata_i[14:12])
             3'b000:  alu_operator_o = ALU_EQ;
             3'b001:  alu_operator_o = ALU_NE;
-            3'b100:  alu_operator_o = ALU_LTS;
-            3'b101:  alu_operator_o = ALU_GES;
+            3'b100:  alu_operator_o = ALU_LT;
+            3'b101:  alu_operator_o = ALU_GE;
             3'b110:  alu_operator_o = ALU_LTU;
             3'b111:  alu_operator_o = ALU_GEU;
             default: illegal_insn_o = 1'b1;

ParseResult:
UPD HdlStmProcess@@ to 
    INS HdlStmProcessTriggerConstrain@@COMB to 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_rdata_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '6'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_rdata_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '6'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    INS HdlStmCaseType@@CASE to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_rdata_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '6'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    INS HdlStmCaseUniqConstrain@@UNIQUE to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_rdata_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '6'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_rdata_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '14'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '12'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_rdata_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '14'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '12'}]}]} 
    UPD HdlOp@@ASSIGN to ASSIGN
        UPD HdlValueId@@ALU_LTS to ALU_LT
    UPD HdlOp@@ASSIGN to ASSIGN
        UPD HdlValueId@@ALU_GES to ALU_GE

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_rdata_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '6'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_rdata_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '6'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    DEL HdlStmCaseType@@CASE from {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_rdata_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '6'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    DEL HdlStmCaseUniqConstrain@@UNIQUE from {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_rdata_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '6'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 

UPD HdlStmProcess@@ to 
    DEL HdlStmProcessTriggerConstrain@@COMB from 


CommitId: a2184f9ec76a029bb8798119a46efb3992ae69eb
Align ALU comparison op naming to instruction names
--- a/rtl/ibex_decoder.sv
+++ b/rtl/ibex_decoder.sv
@@ -314,7 +314,7 @@ module ibex_decoder #(
 
         unique case (instr_rdata_i[14:12])
           3'b000: alu_operator_o = ALU_ADD;  // Add Immediate
-          3'b010: alu_operator_o = ALU_SLTS; // Set to one if Lower Than Immediate
+          3'b010: alu_operator_o = ALU_SLT;  // Set to one if Lower Than Immediate
           3'b011: alu_operator_o = ALU_SLTU; // Set to one if Lower Than Immediate Unsigned
           3'b100: alu_operator_o = ALU_XOR;  // Exclusive Or with Immediate
           3'b110: alu_operator_o = ALU_OR;   // Or with Immediate

ParseResult:
UPD HdlStmProcess@@ to 
    INS HdlStmProcessTriggerConstrain@@COMB to 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_rdata_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '6'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_rdata_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '6'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    INS HdlStmCaseType@@CASE to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_rdata_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '6'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    INS HdlStmCaseUniqConstrain@@UNIQUE to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_rdata_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '6'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_rdata_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '14'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '12'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_rdata_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '14'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '12'}]}]} 
    UPD HdlOp@@ASSIGN to ASSIGN
        UPD HdlValueId@@ALU_SLTS to ALU_SLT

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_rdata_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '6'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_rdata_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '6'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    DEL HdlStmCaseType@@CASE from {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_rdata_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '6'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    DEL HdlStmCaseUniqConstrain@@UNIQUE from {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_rdata_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '6'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 

UPD HdlStmProcess@@ to 
    DEL HdlStmProcessTriggerConstrain@@COMB from 


CommitId: a2184f9ec76a029bb8798119a46efb3992ae69eb
Align ALU comparison op naming to instruction names
--- a/rtl/ibex_decoder.sv
+++ b/rtl/ibex_decoder.sv
@@ -350,7 +350,7 @@ module ibex_decoder #(
             // RV32I ALU operations
             {6'b00_0000, 3'b000}: alu_operator_o = ALU_ADD;   // Add
             {6'b10_0000, 3'b000}: alu_operator_o = ALU_SUB;   // Sub
-            {6'b00_0000, 3'b010}: alu_operator_o = ALU_SLTS;  // Set Lower Than
+            {6'b00_0000, 3'b010}: alu_operator_o = ALU_SLT;   // Set Lower Than
             {6'b00_0000, 3'b011}: alu_operator_o = ALU_SLTU;  // Set Lower Than Unsigned
             {6'b00_0000, 3'b100}: alu_operator_o = ALU_XOR;   // Xor
             {6'b00_0000, 3'b110}: alu_operator_o = ALU_OR;    // Or
ParseResult:
UPD HdlStmProcess@@ to 
    INS HdlStmProcessTriggerConstrain@@COMB to 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_rdata_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '6'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_rdata_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '6'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    INS HdlStmCaseType@@CASE to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_rdata_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '6'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    INS HdlStmCaseUniqConstrain@@UNIQUE to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_rdata_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '6'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'CONCAT',  'ops': [{'__class__': 'HdlOp',           'fn': 'INDEX',           'ops': ['instr_rdata_i',                   {'__class__': 'HdlOp',                    'fn': 'DOWNTO',                    'ops': [{'__class__': 'HdlValueInt',                             'base': 10,                             'val': '30'},                            {'__class__': 'HdlValueInt',                             'base': 10,                             'val': '25'}]}]},          {'__class__': 'HdlOp',           'fn': 'INDEX',           'ops': ['instr_rdata_i',                   {'__class__': 'HdlOp',                    'fn': 'DOWNTO',                    'ops': [{'__class__': 'HdlValueInt',                             'base': 10,                             'val': '14'},                            {'__class__': 'HdlValueInt',                             'base': 10,                             'val': '12'}]}]}]}  to {'__class__': 'HdlOp',  'fn': 'CONCAT',  'ops': [{'__class__': 'HdlOp',           'fn': 'INDEX',           'ops': ['instr_rdata_i',                   {'__class__': 'HdlOp',                    'fn': 'DOWNTO',                    'ops': [{'__class__': 'HdlValueInt',                             'base': 10,                             'val': '30'},                            {'__class__': 'HdlValueInt',                             'base': 10,                             'val': '25'}]}]},          {'__class__': 'HdlOp',           'fn': 'INDEX',           'ops': ['instr_rdata_i',                   {'__class__': 'HdlOp',                    'fn': 'DOWNTO',                    'ops': [{'__class__': 'HdlValueInt',                             'base': 10,                             'val': '14'},                            {'__class__': 'HdlValueInt',                             'base': 10,                             'val': '12'}]}]}]} 
    UPD HdlOp@@ASSIGN to ASSIGN
        UPD HdlValueId@@ALU_SLTS to ALU_SLT

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_rdata_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '6'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_rdata_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '6'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    DEL HdlStmCaseType@@CASE from {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_rdata_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '6'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    DEL HdlStmCaseUniqConstrain@@UNIQUE from {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_rdata_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '6'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 

UPD HdlStmProcess@@ to 
    DEL HdlStmProcessTriggerConstrain@@COMB from 


CommitId: 89e5fc11ed39182df86f338c640ab29334a422eb
[RTL] Add configurable third pipeline stage
--- a/rtl/ibex_ex_block.sv
+++ b/rtl/ibex_ex_block.sv
@@ -35,10 +35,11 @@ module ibex_ex_block #(
     input  logic  [1:0]           multdiv_signed_mode_i,
     input  logic [31:0]           multdiv_operand_a_i,
     input  logic [31:0]           multdiv_operand_b_i,
+    input  logic                  multdiv_ready_id_i,
 
     // Outputs
     output logic [31:0]           alu_adder_result_ex_o, // to LSU
-    output logic [31:0]           regfile_wdata_ex_o,
+    output logic [31:0]           result_ex_o,
     output logic [31:0]           jump_target_o,         // to IF
     output logic                  branch_decision_o,     // to ID
 

ParseResult:
INS HdlIdDef@@multdiv_ready_id_i to ports
HdlIdDef: multdiv_ready_id_i
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: IN

UPD HdlIdDef@@regfile_wdata_ex_o to result_ex_o


CommitId: 89e5fc11ed39182df86f338c640ab29334a422eb
[RTL] Add configurable third pipeline stage
--- a/rtl/ibex_ex_block.sv
+++ b/rtl/ibex_ex_block.sv
@@ -66,7 +67,7 @@ module ibex_ex_block #(
     assign multdiv_en     = 1'b0;
   end
 
-  assign regfile_wdata_ex_o = multdiv_en ? multdiv_result : alu_result;
+  assign result_ex_o = multdiv_en ? multdiv_result : alu_result;
 
   // branch handling
   assign branch_decision_o  = alu_cmp_result;

ParseResult:
UPD HdlStmAssign@@ to 
    UPD HdlValueId@@regfile_wdata_ex_o to result_ex_o


CommitId: aa28fac157e20a661216a699ef3a77d8c2ae55d6
Fix a nasty L0 buffer bug that happens with hardware loops
--- a/prefetch_L0_buffer.sv
+++ b/prefetch_L0_buffer.sv
@@ -407,15 +407,18 @@ module riscv_prefetch_L0_buffer
         use_hwlp = 1'b1;
 
         if (ready_i) begin
+          addr_n = hwloop_target_i;
+
           if (fetch_valid) begin
             is_hwlp_n = 1'b1;
-            addr_n = hwloop_target_i;
 
             if (hwlp_is_crossword) begin
               NS = NOT_VALID_CROSS;
             end else begin
               NS = VALID;
             end
+          end else begin
+            NS = HWLP_GRANTED_WAIT;
           end
         end else begin
           if (fetch_valid)

ParseResult:
UPD HdlStmCase@@CS to CS
    INS tuple@@ to cases
    tuple
        HdlValueId: HWLP_GRANTED_WAIT
        HdlStmBlock: SEQ
            list: body
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: use_hwlp
                        HdlValueInt: 1
                HdlStmIf
                    HdlValueId: fetch_valid
                    HdlStmBlock: SEQ
                        list: body
                            HdlOp: ASSIGN
                                list: ops
                                    HdlValueId: is_hwlp_n
                                    HdlValueInt: 1
                            HdlStmIf
                                HdlValueId: hwlp_is_crossword
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: NS
                                                HdlValueId: NOT_VALID_CROSS
                                list: elifs
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: NS
                                                HdlValueId: VALID
                    list: elifs

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: addr_n
                HdlValueId: hwloop_target_i

UPD HdlStmIf@@ to 
    INS HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: NS
                    HdlValueId: HWLP_GRANTED_WAIT


CommitId: aa28fac157e20a661216a699ef3a77d8c2ae55d6
Fix a nasty L0 buffer bug that happens with hardware loops
--- a/prefetch_L0_buffer.sv
+++ b/prefetch_L0_buffer.sv
@@ -423,6 +426,20 @@ module riscv_prefetch_L0_buffer
         end
       end
 
+      HWLP_GRANTED_WAIT: begin
+        use_hwlp = 1'b1;
+
+        if (fetch_valid) begin
+          is_hwlp_n = 1'b1;
+
+          if (hwlp_is_crossword) begin
+            NS = NOT_VALID_CROSS;
+          end else begin
+            NS = VALID;
+          end
+        end
+      end
+
       HWLP_FETCH_DONE: begin
         valid    = 1'b1;
         use_hwlp = 1'b1;
ParseResult:
UPD HdlStmCase@@CS to CS
    INS tuple@@ to cases
    tuple
        HdlValueId: HWLP_GRANTED_WAIT
        HdlStmBlock: SEQ
            list: body
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: use_hwlp
                        HdlValueInt: 1
                HdlStmIf
                    HdlValueId: fetch_valid
                    HdlStmBlock: SEQ
                        list: body
                            HdlOp: ASSIGN
                                list: ops
                                    HdlValueId: is_hwlp_n
                                    HdlValueInt: 1
                            HdlStmIf
                                HdlValueId: hwlp_is_crossword
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: NS
                                                HdlValueId: NOT_VALID_CROSS
                                list: elifs
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: NS
                                                HdlValueId: VALID
                    list: elifs


CommitId: 89e5fc11ed39182df86f338c640ab29334a422eb
[RTL] Add configurable third pipeline stage
--- a/dv/riscv_compliance/rtl/ibex_riscv_compliance.sv
+++ b/dv/riscv_compliance/rtl/ibex_riscv_compliance.sv
@@ -18,6 +18,7 @@ module ibex_riscv_compliance (
   parameter bit RV32E           = 1'b0;
   parameter bit RV32M           = 1'b1;
   parameter bit BranchTargetALU = 1'b0;
+  parameter bit WritebackStage  = 1'b0;
 
   logic clk_sys, rst_sys_n;
 

ParseResult:
INS HdlIdDef@@WritebackStage to params
HdlIdDef: WritebackStage
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: bit
    HdlValueInt: 0
    HdlDirection: INTERNAL


CommitId: d00db652277ba9d33a8ac68794b5260c6ed168d9
Avoid WIDTH lint warnings in Verilator
--- a/rtl/ibex_cs_registers.sv
+++ b/rtl/ibex_cs_registers.sv
@@ -94,18 +94,18 @@ module ibex_cs_registers #(
   // misa
   localparam logic [1:0] MXL = 2'd1; // M-XLEN: XLEN in M-Mode for RV32
   localparam logic [31:0] MISA_VALUE =
-      (0     <<  0)  // A - Atomic Instructions extension
-    | (1     <<  2)  // C - Compressed extension
-    | (0     <<  3)  // D - Double precision floating-point extension
-    | (RV32E <<  4)  // E - RV32E base ISA
-    | (0     <<  5)  // F - Single precision floating-point extension
-    | (1     <<  8)  // I - RV32I/64I/128I base ISA
-    | (RV32M << 12)  // M - Integer Multiply/Divide extension
-    | (0     << 13)  // N - User level interrupts supported
-    | (0     << 18)  // S - Supervisor mode implemented
-    | (0     << 20)  // U - User mode implemented
-    | (0     << 23)  // X - Non-standard extensions present
-    | (MXL   << 30); // M-XLEN
+      (0          <<  0)  // A - Atomic Instructions extension
+    | (1          <<  2)  // C - Compressed extension
+    | (0          <<  3)  // D - Double precision floating-point extension
+    | (32'(RV32E) <<  4)  // E - RV32E base ISA
+    | (0          <<  5)  // F - Single precision floating-point extension
+    | (1          <<  8)  // I - RV32I/64I/128I base ISA
+    | (32'(RV32M) << 12)  // M - Integer Multiply/Divide extension
+    | (0          << 13)  // N - User level interrupts supported
+    | (0          << 18)  // S - Supervisor mode implemented
+    | (0          << 20)  // U - User mode implemented
+    | (0          << 23)  // X - Non-standard extensions present
+    | (32'(MXL)   << 30); // M-XLEN
 
   `define MSTATUS_UIE_BITS        0
   `define MSTATUS_SIE_BITS        1
ParseResult:
UPD HdlIdDef@@MISA_VALUE to MISA_VALUE
    UPD HdlOp@@OR to OR
        UPD HdlOp@@SLL to SLL
            INS HdlOp@@CALL to ops
            UPD HdlOp@@CALL to CALL
                INS list@@ops to CALL
                INS HdlValueInt@@32 to ops
        UPD HdlOp@@OR to OR
            UPD HdlOp@@OR to OR
                UPD HdlOp@@OR to OR
                    UPD HdlOp@@OR to OR
                        UPD HdlOp@@OR to OR
                            UPD HdlOp@@SLL to SLL
                                INS HdlOp@@CALL to ops
                                UPD HdlOp@@CALL to CALL
                                    INS list@@ops to CALL
                                    INS HdlValueInt@@32 to ops
                            UPD HdlOp@@OR to OR
                                UPD HdlOp@@OR to OR
                                    UPD HdlOp@@OR to OR
                                        UPD HdlOp@@SLL to SLL
                                            INS HdlOp@@CALL to ops
                                            UPD HdlOp@@CALL to CALL
                                                INS list@@ops to CALL
                                                INS HdlValueInt@@32 to ops

UPD HdlIdDef@@MISA_VALUE to MISA_VALUE
    UPD HdlOp@@OR to OR
        UPD HdlOp@@SLL to SLL
            MOV HdlValueId@@MXL to ops
            HdlValueId: MXL
        UPD HdlOp@@OR to OR
            UPD HdlOp@@OR to OR
                UPD HdlOp@@OR to OR
                    UPD HdlOp@@OR to OR
                        UPD HdlOp@@OR to OR
                            UPD HdlOp@@SLL to SLL
                                MOV HdlValueId@@RV32M to ops
                                HdlValueId: RV32M
                            UPD HdlOp@@OR to OR
                                UPD HdlOp@@OR to OR
                                    UPD HdlOp@@OR to OR
                                        UPD HdlOp@@SLL to SLL
                                            MOV HdlValueId@@RV32E to ops
                                            HdlValueId: RV32E


CommitId: 7d61def943cd8c5aa84c3943ba4985cd59e6c768
Update lowrisc_ip to lowRISC/opentitan@f29a0f7a7
--- a/vendor/lowrisc_ip/ip/prim_generic/rtl/prim_generic_flash.sv
+++ b/vendor/lowrisc_ip/ip/prim_generic/rtl/prim_generic_flash.sv
@@ -32,8 +32,8 @@ module prim_generic_flash #(
   input scan_rst_ni,
   input flash_power_ready_h_i,
   input flash_power_down_h_i,
-  input [TestModeWidth-1:0] flash_test_mode_a_i,
-  input flash_test_voltage_h_i,
+  inout [TestModeWidth-1:0] flash_test_mode_a_io,
+  inout flash_test_voltage_h_io,
   output logic flash_err_o,
   output logic flash_alert_po,
   output logic flash_alert_no,

ParseResult:
UPD HdlIdDef@@flash_test_mode_a_i to flash_test_mode_a_io

UPD HdlIdDef@@flash_test_voltage_h_i to flash_test_voltage_h_io

UPD HdlIdDef@@flash_test_mode_a_i to flash_test_mode_a_i
    UPD HdlDirection@@IN to INOUT

UPD HdlIdDef@@flash_test_voltage_h_i to flash_test_voltage_h_i
    UPD HdlDirection@@IN to INOUT


CommitId: 7d61def943cd8c5aa84c3943ba4985cd59e6c768
Update lowrisc_ip to lowRISC/opentitan@f29a0f7a7
--- a/vendor/lowrisc_ip/ip/prim_generic/rtl/prim_generic_flash.sv
+++ b/vendor/lowrisc_ip/ip/prim_generic/rtl/prim_generic_flash.sv
@@ -111,8 +111,8 @@ module prim_generic_flash #(
   assign unused_scanmode = scanmode_i;
   assign unused_scan_en = scan_en_i;
   assign unused_scan_rst_n = scan_rst_ni;
-  assign unused_flash_test_mode = flash_test_mode_a_i;
-  assign unused_flash_test_voltage = flash_test_voltage_h_i;
+  assign unused_flash_test_mode = flash_test_mode_a_io;
+  assign unused_flash_test_voltage = flash_test_voltage_h_io;
   assign unused_tck = tck_i;
   assign unused_tdi = tdi_i;
   assign unused_tms = tms_i;

ParseResult:
UPD HdlStmAssign@@ to 
    UPD HdlValueId@@flash_test_mode_a_i to flash_test_mode_a_io

UPD HdlStmAssign@@ to 
    UPD HdlValueId@@flash_test_voltage_h_i to flash_test_voltage_h_io


CommitId: 7d61def943cd8c5aa84c3943ba4985cd59e6c768
Update lowrisc_ip to lowRISC/opentitan@f29a0f7a7
--- a/vendor/lowrisc_ip/ip/prim/rtl/prim_ram_1p_scr.sv
+++ b/vendor/lowrisc_ip/ip/prim/rtl/prim_ram_1p_scr.sv
@@ -46,7 +45,11 @@ module prim_ram_1p_scr import prim_ram_1p_pkg::*; #(
   // If set to 0, the cipher primitive is replicated, and together with a wider nonce input,
   // a unique keystream is generated for the full data width.
   parameter  bit ReplicateKeyStream  = 1'b0,
-
+  // Width of lfsr seed used for random init
+  parameter  int LfsrWidth           = 8,
+  parameter logic [LfsrWidth-1:0][$clog2(LfsrWidth)-1:0] StatePerm = {
+    24'h988eab
+  },
   // Derived parameters
   localparam int AddrWidth           = prim_util_pkg::vbits(Depth),
   // Depending on the data width, we need to instantiate multiple parallel cipher primitives to

ParseResult:
INS HdlIdDef@@init_seed_i to ports
HdlIdDef: init_seed_i
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: wire
            HdlOp: DOWNTO
                list: ops
                    HdlOp: SUB
                        list: ops
                            HdlValueId: LfsrWidth
                            HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: IN

INS HdlIdDef@@init_req_i to ports
HdlIdDef: init_req_i
    HdlValueId: wire
    HdlDirection: IN

INS HdlIdDef@@init_ack_o to ports
HdlIdDef: init_ack_o
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: OUT


CommitId: 7d61def943cd8c5aa84c3943ba4985cd59e6c768
Update lowrisc_ip to lowRISC/opentitan@f29a0f7a7
--- a/vendor/lowrisc_ip/ip/prim/rtl/prim_ram_1p_scr.sv
+++ b/vendor/lowrisc_ip/ip/prim/rtl/prim_ram_1p_scr.sv
@@ -130,15 +207,15 @@ module prim_ram_1p_scr import prim_ram_1p_pkg::*; #(
 
   // Read / write strobes
   logic read_en, write_en_d, write_en_q;
-  assign gnt_o = req_i & key_valid_i;
+  assign gnt_o = req_i & key_valid_i & ~init_sel;
 
   assign read_en = gnt_o & ~write_i;
-  assign write_en_d = gnt_o & write_i;
+  assign write_en_d = gnt_o & write_i | init_sel;
 
   logic write_pending_q;
   logic addr_collision_d, addr_collision_q;
   logic [AddrWidth-1:0] waddr_q;
-  assign addr_collision_d = read_en & (write_en_q | write_pending_q) & (addr_i == waddr_q);
+  assign addr_collision_d = read_en & (write_en_q | write_pending_q) & (addr == waddr_q);
 
   // Macro requests and write strobe
   // The macro operation is silenced if an integrity error is seen

ParseResult:
INS HdlStmProcess@@ to objs
HdlStmProcess
    list: sensitivity
        HdlOp: RISING
            list: ops
                HdlValueId: clk_i
        HdlOp: FALLING
            list: ops
                HdlValueId: rst_ni
    HdlStmBlock: SEQ
        list: body
            HdlStmIf
                HdlOp: NEG_LOG
                    list: ops
                        HdlValueId: rst_ni
                HdlStmBlock: SEQ
                    list: body
                        HdlStmAssign
                            HdlValueInt: 0
                            HdlValueId: addr_cnt_q
                list: elifs
                    tuple
                        HdlValueId: init_ack_o
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmAssign
                                    HdlValueInt: 0
                                    HdlValueId: addr_cnt_q
                    tuple
                        HdlOp: AND_LOG
                            list: ops
                                HdlValueId: init_req_q
                                HdlOp: LT
                                    list: ops
                                        HdlValueId: addr_cnt_q
                                        HdlOp: SUB
                                            list: ops
                                                HdlValueId: Depth
                                                HdlValueInt: 1
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmAssign
                                    HdlOp: ADD
                                        list: ops
                                            HdlValueId: addr_cnt_q
                                            HdlOp: CALL
                                                list: ops
                                                    HdlValueId: AddrWidth
                                                    HdlValueInt: 1
                                    HdlValueId: addr_cnt_q
    HdlStmProcessTriggerConstrain: FF

INS HdlIdDef@@LfsrMult to objs
HdlIdDef: LfsrMult
    HdlValueId: int
    HdlOp: TERNARY
        list: ops
            HdlOp: GT
                list: ops
                    HdlOp: MOD
                        list: ops
                            HdlValueId: Width
                            HdlValueId: LfsrWidth
                    HdlValueInt: 0
            HdlOp: ADD
                list: ops
                    HdlOp: DIV
                        list: ops
                            HdlValueId: Width
                            HdlValueId: LfsrWidth
                    HdlValueInt: 1
            HdlOp: DIV
                list: ops
                    HdlValueId: Width
                    HdlValueId: LfsrWidth
    HdlDirection: INTERNAL

INS HdlIdDef@@FullRandWidth to objs
HdlIdDef: FullRandWidth
    HdlValueId: int
    HdlOp: MUL
        list: ops
            HdlValueId: LfsrMult
            HdlValueId: LfsrWidth
    HdlDirection: INTERNAL

UPD HdlStmAssign@@ to 
    MOV HdlOp@@AND to 
    HdlOp: AND
        list: ops
            HdlValueId: req_i
            HdlValueId: key_valid_i


CommitId: 7d61def943cd8c5aa84c3943ba4985cd59e6c768
Update lowrisc_ip to lowRISC/opentitan@f29a0f7a7
--- a/vendor/lowrisc_ip/ip/prim/rtl/prim_ram_1p_scr.sv
+++ b/vendor/lowrisc_ip/ip/prim/rtl/prim_ram_1p_scr.sv
@@ -162,7 +239,7 @@ module prim_ram_1p_scr import prim_ram_1p_pkg::*; #(
 
   // We only select the pending write address in case there is no incoming read transaction.
   logic [AddrWidth-1:0] addr_mux;
-  assign addr_mux = (read_en) ? addr_i : waddr_q;
+  assign addr_mux = (read_en) ? addr : waddr_q;
 
   // This creates a bijective address mapping using a substitution / permutation network.
   logic [AddrWidth-1:0] addr_scr;

ParseResult:
INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: TERNARY
        list: ops
            HdlValueId: init_sel
            HdlOp: INDEX
                list: ops
                    HdlValueId: rand_val
                    HdlOp: DOWNTO
                        list: ops
                            HdlOp: SUB
                                list: ops
                                    HdlValueId: Width
                                    HdlValueInt: 1
                            HdlValueInt: 0
            HdlValueId: wdata_i
    HdlValueId: wdata

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: TERNARY
        list: ops
            HdlValueId: init_sel
            HdlValueInt: 1
            HdlValueId: wmask_i
    HdlValueId: wmask


CommitId: 1cbbcfb90b4b69e6d565a997d29d75529c7ce11f
Fix linting errors/warnings and remove dead signals
--- a/register_file.sv
+++ b/register_file.sv
@@ -35,11 +35,11 @@ module riscv_register_file
 
   logic [DATA_WIDTH-1:0]      MemContentxDP[NUM_WORDS];
 
-  logic [NUM_WORDS-1:0]       WAddrOneHotxDa;
-  logic [NUM_WORDS-1:0]       WAddrOneHotxDb;
-  logic [NUM_WORDS-1:0]       WAddrOneHotxDb_reg;
+  logic [NUM_WORDS-1:1]       WAddrOneHotxDa;
+  logic [NUM_WORDS-1:1]       WAddrOneHotxDb;
+  logic [NUM_WORDS-1:1]       WAddrOneHotxDb_reg;
 
-  logic [NUM_WORDS-1:0]       ClocksxC;
+  logic [NUM_WORDS-1:1]       ClocksxC;
   logic [DATA_WIDTH-1:0]      WDataIntxDa;
   logic [DATA_WIDTH-1:0]      WDataIntxDb;
 

ParseResult:
UPD HdlIdDef@@WAddrOneHotxDa to WAddrOneHotxDa
    UPD HdlOp@@PARAMETRIZATION to PARAMETRIZATION
        UPD HdlOp@@DOWNTO to DOWNTO
            UPD HdlValueInt@@0 to 1

UPD HdlIdDef@@WAddrOneHotxDb to WAddrOneHotxDb
    UPD HdlOp@@PARAMETRIZATION to PARAMETRIZATION
        UPD HdlOp@@DOWNTO to DOWNTO
            UPD HdlValueInt@@0 to 1

UPD HdlIdDef@@WAddrOneHotxDb_reg to WAddrOneHotxDb_reg
    UPD HdlOp@@PARAMETRIZATION to PARAMETRIZATION
        UPD HdlOp@@DOWNTO to DOWNTO
            UPD HdlValueInt@@0 to 1

UPD HdlIdDef@@ClocksxC to ClocksxC
    UPD HdlOp@@PARAMETRIZATION to PARAMETRIZATION
        UPD HdlOp@@DOWNTO to DOWNTO
            UPD HdlValueInt@@0 to 1


CommitId: 67e74177494e5e577a4b589cd2f2a97f9d3c2c0c
Fix Verible lint issues
--- a/rtl/ibex_alu.sv
+++ b/rtl/ibex_alu.sv
@@ -622,17 +622,17 @@ module ibex_alu #(
       // Shuffle / Unshuffle //
       /////////////////////////
 
-      localparam logic [31:0] SHUFFLE_MASK_L [0:3] =
+      localparam logic [31:0] SHUFFLE_MASK_L [4] =
           '{32'h00ff_0000, 32'h0f00_0f00, 32'h3030_3030, 32'h4444_4444};
-      localparam logic [31:0] SHUFFLE_MASK_R [0:3] =
+      localparam logic [31:0] SHUFFLE_MASK_R [4] =
           '{32'h0000_ff00, 32'h00f0_00f0, 32'h0c0c_0c0c, 32'h2222_2222};
 
-      localparam logic [31:0] FLIP_MASK_L [0:3] =
+      localparam logic [31:0] FLIP_MASK_L [4] =
           '{32'h2200_1100, 32'h0044_0000, 32'h4411_0000, 32'h1100_0000};
-      localparam logic [31:0] FLIP_MASK_R [0:3] =
+      localparam logic [31:0] FLIP_MASK_R [4] =
           '{32'h0088_0044, 32'h0000_2200, 32'h0000_8822, 32'h0000_0088};
 
-      logic [31:0] SHUFFLE_MASK_NOT [0:3];
+      logic [31:0] SHUFFLE_MASK_NOT [4];
       for(genvar i = 0; i < 4; i++) begin : gen_shuffle_mask_not
         assign SHUFFLE_MASK_NOT[i] = ~(SHUFFLE_MASK_L[i] | SHUFFLE_MASK_R[i]);
       end

ParseResult:
UPD HdlStmIf@@ to 
    INS list@@elifs to 

UPD HdlStmIf@@ to 
    INS list@@elifs to 

UPD HdlIdDef@@SHUFFLE_MASK_NOT to SHUFFLE_MASK_NOT
    UPD HdlOp@@INDEX to INDEX
        UPD HdlOp@@DOWNTO to DOWNTO
            UPD HdlValueInt@@0 to 4
            MOV HdlValueInt@@0 to ops
            HdlValueInt: 0
            DEL HdlValueInt@@3 from ops
            DEL list@@ops from DOWNTO
        DEL HdlOp@@DOWNTO from ops

UPD HdlStmIf@@ to 
    DEL list@@elifs from 

UPD HdlStmIf@@ to 
    DEL list@@elifs from 


CommitId: 67e74177494e5e577a4b589cd2f2a97f9d3c2c0c
Fix Verible lint issues
--- a/rtl/ibex_alu.sv
+++ b/rtl/ibex_alu.sv
@@ -1047,7 +1047,7 @@ module ibex_alu #(
           default:     clmul_result = clmul_result_raw;
         endcase
       end
-    end else begin
+    end else begin : gen_alu_rvb_notfull
       assign shuffle_result       = '0;
       assign butterfly_result     = '0;
       assign invbutterfly_result  = '0;
ParseResult:
UPD HdlStmIf@@ to 
    INS list@@elifs to 

UPD HdlStmIf@@ to 
    INS list@@elifs to 

UPD HdlStmIf@@ to 
    DEL list@@elifs from 

UPD HdlStmIf@@ to 
    DEL list@@elifs from 


CommitId: 44b033cf8bf858e893080fe62b452791fdd3bd4d
[rtl] Add support for instruction fetch errors
--- a/rtl/ibex_id_stage.sv
+++ b/rtl/ibex_id_stage.sv
@@ -65,6 +65,7 @@ module ibex_id_stage #(
     output ibex_pkg::exc_cause_e  exc_cause_o,
 
     input  logic                  illegal_c_insn_i,
+    input  logic                  instr_fetch_err_i,
 
     input  logic [31:0]           pc_id_i,
 

ParseResult:
INS HdlIdDef@@instr_fetch_err_i to ports
HdlIdDef: instr_fetch_err_i
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: IN


CommitId: 74abc47b7179b9a651240a4c856eb578e53b8a7b
Add missing `default` in `unique case`, propagate `'X` in FSM states
--- a/rtl/ibex_compressed_decoder.sv
+++ b/rtl/ibex_compressed_decoder.sv
@@ -36,7 +36,7 @@ module ibex_compressed_decoder (
 
   always_comb begin
     illegal_instr_o = 1'b0;
-    instr_o         = '0;
+    instr_o         = 'X;
 
     unique case (instr_i[1:0])
       // C0

ParseResult:
UPD HdlStmProcess@@ to 
    INS HdlStmProcessTriggerConstrain@@COMB to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: instr_o
                HdlValueInt: X

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '1'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '1'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    INS HdlStmCaseType@@CASE to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '1'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    INS HdlStmCaseUniqConstrain@@UNIQUE to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '1'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    INS HdlValueInt@@01 to 

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: instr_o
                HdlValueInt: 0
    DEL HdlStmProcessTriggerConstrain@@COMB from 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '1'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '1'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    DEL HdlStmCaseType@@CASE from {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '1'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    DEL HdlValueInt@@01 from 
    DEL HdlStmCaseUniqConstrain@@UNIQUE from {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '1'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 


CommitId: 74abc47b7179b9a651240a4c856eb578e53b8a7b
Add missing `default` in `unique case`, propagate `'X` in FSM states
--- a/rtl/ibex_compressed_decoder.sv
+++ b/rtl/ibex_compressed_decoder.sv
@@ -160,8 +160,16 @@ module ibex_compressed_decoder (
                     // 101: c.addw
                     illegal_instr_o = 1'b1;
                   end
+
+                  default: begin
+                    illegal_instr_o = 1'bX;
+                  end
                 endcase
               end
+
+              default: begin
+                illegal_instr_o = 1'bX;
+              end
             endcase
           end
 

ParseResult:
UPD HdlStmProcess@@ to 
    INS HdlStmProcessTriggerConstrain@@COMB to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: instr_o
                HdlValueInt: X

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '1'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '1'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    INS HdlStmCaseType@@CASE to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '1'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    INS HdlStmCaseUniqConstrain@@UNIQUE to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '1'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    INS HdlValueInt@@01 to 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '15'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '13'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '15'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '13'}]}]} 
    INS HdlStmCaseType@@CASE to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '15'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '13'}]}]} 
    INS HdlStmBlock@@SEQ to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '15'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '13'}]}]} 
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: illegal_instr_o
                    HdlValueInt: x
    INS HdlStmCaseUniqConstrain@@UNIQUE to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '15'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '13'}]}]} 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '11'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '10'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '11'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '10'}]}]} 
    INS HdlStmBlock@@SEQ to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '11'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '10'}]}]} 
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: illegal_instr_o
                    HdlValueInt: x

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'CONCAT',  'ops': [{'__class__': 'HdlOp',           'fn': 'INDEX',           'ops': ['instr_i',                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '12'}]},          {'__class__': 'HdlOp',           'fn': 'INDEX',           'ops': ['instr_i',                   {'__class__': 'HdlOp',                    'fn': 'DOWNTO',                    'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '6'},                            {'__class__': 'HdlValueInt',                             'base': 10,                             'val': '5'}]}]}]}  to {'__class__': 'HdlOp',  'fn': 'CONCAT',  'ops': [{'__class__': 'HdlOp',           'fn': 'INDEX',           'ops': ['instr_i',                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '12'}]},          {'__class__': 'HdlOp',           'fn': 'INDEX',           'ops': ['instr_i',                   {'__class__': 'HdlOp',                    'fn': 'DOWNTO',                    'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '6'},                            {'__class__': 'HdlValueInt',                             'base': 10,                             'val': '5'}]}]}]} 
    INS HdlStmBlock@@SEQ to {'__class__': 'HdlOp',  'fn': 'CONCAT',  'ops': [{'__class__': 'HdlOp',           'fn': 'INDEX',           'ops': ['instr_i',                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '12'}]},          {'__class__': 'HdlOp',           'fn': 'INDEX',           'ops': ['instr_i',                   {'__class__': 'HdlOp',                    'fn': 'DOWNTO',                    'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '6'},                            {'__class__': 'HdlValueInt',                             'base': 10,                             'val': '5'}]}]}]} 
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: illegal_instr_o
                    HdlValueInt: x

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: instr_o
                HdlValueInt: 0
    DEL HdlStmProcessTriggerConstrain@@COMB from 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '1'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '1'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    DEL HdlStmCaseType@@CASE from {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '1'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    DEL HdlValueInt@@01 from 
    DEL HdlStmCaseUniqConstrain@@UNIQUE from {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '1'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '15'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '13'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '15'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '13'}]}]} 
    DEL HdlStmCaseType@@CASE from {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '15'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '13'}]}]} 
    DEL HdlStmBlock@@SEQ from {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '15'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '13'}]}]} 
    HdlStmBlock: SEQ
        list: body
    DEL HdlStmCaseUniqConstrain@@UNIQUE from {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '15'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '13'}]}]} 


CommitId: 74abc47b7179b9a651240a4c856eb578e53b8a7b
Add missing `default` in `unique case`, propagate `'X` in FSM states
--- a/rtl/ibex_compressed_decoder.sv
+++ b/rtl/ibex_compressed_decoder.sv
@@ -174,7 +182,7 @@ module ibex_compressed_decoder (
           end
 
           default: begin
-            // illegal_instr_o = 1'b1;         // not reachable, dead code, commenting out
+            illegal_instr_o = 1'bX;
           end
         endcase
       end

ParseResult:
UPD HdlStmProcess@@ to 
    INS HdlStmProcessTriggerConstrain@@COMB to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: instr_o
                HdlValueInt: X

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '1'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '1'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    INS HdlStmCaseType@@CASE to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '1'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    INS HdlStmCaseUniqConstrain@@UNIQUE to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '1'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    INS HdlValueInt@@01 to 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '15'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '13'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '15'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '13'}]}]} 
    INS HdlStmCaseType@@CASE to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '15'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '13'}]}]} 
    INS HdlStmBlock@@SEQ to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '15'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '13'}]}]} 
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: illegal_instr_o
                    HdlValueInt: x
    INS HdlStmCaseUniqConstrain@@UNIQUE to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '15'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '13'}]}]} 

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: instr_o
                HdlValueInt: 0
    DEL HdlStmProcessTriggerConstrain@@COMB from 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '1'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '1'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    DEL HdlStmCaseType@@CASE from {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '1'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    DEL HdlValueInt@@01 from 
    DEL HdlStmCaseUniqConstrain@@UNIQUE from {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '1'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '15'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '13'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '15'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '13'}]}]} 
    DEL HdlStmCaseType@@CASE from {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '15'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '13'}]}]} 
    DEL HdlStmBlock@@SEQ from {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '15'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '13'}]}]} 
    HdlStmBlock: SEQ
        list: body
    DEL HdlStmCaseUniqConstrain@@UNIQUE from {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '15'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '13'}]}]} 


CommitId: 74abc47b7179b9a651240a4c856eb578e53b8a7b
Add missing `default` in `unique case`, propagate `'X` in FSM states
--- a/rtl/ibex_compressed_decoder.sv
+++ b/rtl/ibex_compressed_decoder.sv
@@ -226,9 +234,16 @@ module ibex_compressed_decoder (
                        instr_i[11:9], 2'b00, {OPCODE_STORE}};
           end
 
-          default: begin
+          3'b001,
+          3'b011,
+          3'b101,
+          3'b111: begin
             illegal_instr_o = 1'b1;
           end
+
+          default: begin
+            illegal_instr_o = 1'bX;
+          end
         endcase
       end
 
ParseResult:
UPD HdlStmProcess@@ to 
    INS HdlStmProcessTriggerConstrain@@COMB to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: instr_o
                HdlValueInt: X

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '1'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '1'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    INS HdlStmCaseType@@CASE to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '1'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    INS HdlStmCaseUniqConstrain@@UNIQUE to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '1'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    INS HdlValueInt@@01 to 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '15'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '13'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '15'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '13'}]}]} 
    INS HdlStmBlock@@SEQ to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '15'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '13'}]}]} 
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: illegal_instr_o
                    HdlValueInt: x
    INS tuple@@ to cases
    INS tuple@@ to cases
    tuple
        HdlValueInt: 011
        HdlStmBlock: SEQ
            list: body
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: illegal_instr_o
                        HdlValueInt: 1
    INS tuple@@ to cases
    tuple
        HdlValueInt: 101
        HdlStmBlock: SEQ
            list: body
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: illegal_instr_o
                        HdlValueInt: 1
    INS tuple@@ to cases
    tuple
        HdlValueInt: 111
        HdlStmBlock: SEQ
            list: body
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: illegal_instr_o
                        HdlValueInt: 1
    INS HdlValueInt@@001 to 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '15'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '13'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '15'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '13'}]}]} 
    MOV HdlStmBlock@@SEQ to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '15'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '13'}]}]} 
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: illegal_instr_o
                    HdlValueInt: 1

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: instr_o
                HdlValueInt: 0
    DEL HdlStmProcessTriggerConstrain@@COMB from 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '1'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '1'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    DEL HdlStmCaseType@@CASE from {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '1'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    DEL HdlValueInt@@01 from 
    DEL HdlStmCaseUniqConstrain@@UNIQUE from {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '1'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 


CommitId: cc94bc8d54bec64020ba616df7d5db4f253447ec
[RTL] Fix single stepping on exceptions
--- a/rtl/ibex_controller.sv
+++ b/rtl/ibex_controller.sv
@@ -566,10 +566,13 @@ module ibex_controller (
           end
         end // exc_req_q
 
-        // single stepping
-        // set exception registers, but do not jump into handler [Debug Spec v0.13.2, p.44]
+        // Entering debug mode due to either single step or debug_req. Ensure
+        // registers are set for exception but then enter debug handler rather
+        // than exception handler [Debug Spec v0.13.2, p.44]
+        // Leave all other signals as is to ensure CSRs and PC get set as if
+        // core was entering exception handler, entry to debug mode will then
+        // see the appropriate state and setup dpc correctly.
         if (enter_debug_mode) begin
-          pc_set_o    = 1'b0;
           ctrl_fsm_ns = DBG_TAKEN_IF;
         end
       end // FLUSH
ParseResult:
UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: pc_set_o
                HdlValueInt: 0


CommitId: 8613e880fcc3edd7fb9a6819edacbbb5c7cd1592
LSU cleanup, abort misaligned ops if first part fails
--- a/rtl/ibex_id_stage.sv
+++ b/rtl/ibex_id_stage.sv
@@ -106,7 +106,7 @@ module ibex_id_stage #(
     output logic [1:0]                data_reg_offset_ex_o,
     output logic [31:0]               data_wdata_ex_o,
 
-    input  logic                      data_misaligned_i,
+    input  logic                      lsu_addr_incr_req_i,
     input  logic [31:0]               lsu_addr_last_i,
 
     // Interrupt signals

ParseResult:
UPD HdlIdDef@@data_misaligned_i to lsu_addr_incr_req_i


CommitId: 8613e880fcc3edd7fb9a6819edacbbb5c7cd1592
LSU cleanup, abort misaligned ops if first part fails
--- a/rtl/ibex_id_stage.sv
+++ b/rtl/ibex_id_stage.sv
@@ -240,12 +240,12 @@ module ibex_id_stage #(
   /////////////
 
   // Misaligned loads/stores result in two aligned loads/stores, compute second address
-  assign alu_op_a_mux_sel = data_misaligned_i ? OP_A_FWD        : alu_op_a_mux_sel_dec;
-  assign alu_op_b_mux_sel = data_misaligned_i ? OP_B_IMM        : alu_op_b_mux_sel_dec;
-  assign imm_b_mux_sel    = data_misaligned_i ? IMM_B_INCR_ADDR : imm_b_mux_sel_dec;
+  assign alu_op_a_mux_sel = lsu_addr_incr_req_i ? OP_A_FWD        : alu_op_a_mux_sel_dec;
+  assign alu_op_b_mux_sel = lsu_addr_incr_req_i ? OP_B_IMM        : alu_op_b_mux_sel_dec;
+  assign imm_b_mux_sel    = lsu_addr_incr_req_i ? IMM_B_INCR_ADDR : imm_b_mux_sel_dec;
 
   // do not write back the second address since the first calculated address was the correct one
-  assign regfile_we_id    = data_misaligned_i ? 1'b0            : regfile_we_dec & ~deassert_we;
+  assign regfile_we_id    = lsu_addr_incr_req_i ? 1'b0            : regfile_we_dec & ~deassert_we;
 
   ///////////////////
   // Operand A MUX //

ParseResult:
INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: TERNARY
        list: ops
            HdlValueId: lsu_addr_incr_req_i
            HdlValueId: IMM_B_INCR_ADDR
            HdlValueId: imm_b_mux_sel_dec
    HdlValueId: imm_b_mux_sel

UPD HdlStmAssign@@ to 
    UPD HdlOp@@TERNARY to TERNARY
        UPD HdlValueId@@data_misaligned_i to lsu_addr_incr_req_i

DEL HdlStmAssign@@ from objs
HdlStmAssign
    HdlOp: TERNARY
        list: ops
            HdlValueId: data_misaligned_i
            HdlValueId: IMM_B_INCR_ADDR
            HdlValueId: imm_b_mux_sel_dec
    HdlValueId: imm_b_mux_sel


CommitId: 59254498489d441f64c24e6b344fce73d0d8bbce
Decoder: fix signaling and detection of illegal instructions
--- a/rtl/ibex_decoder.sv
+++ b/rtl/ibex_decoder.sv
@@ -253,19 +253,20 @@ module ibex_decoder #(
 
       OPCODE_BRANCH: begin // Branch
         branch_in_dec_o       = 1'b1;
+        // Check branch condition selection
+        unique case (instr[14:12])
+          3'b000:  alu_operator_o = ALU_EQ;
+          3'b001:  alu_operator_o = ALU_NE;
+          3'b100:  alu_operator_o = ALU_LT;
+          3'b101:  alu_operator_o = ALU_GE;
+          3'b110:  alu_operator_o = ALU_LTU;
+          3'b111:  alu_operator_o = ALU_GEU;
+          default: illegal_insn   = 1'b1;
+        endcase
         if (instr_new_i) begin
           // Evaluate branch condition
           alu_op_a_mux_sel_o  = OP_A_REG_A;
           alu_op_b_mux_sel_o  = OP_B_REG_B;
-          unique case (instr[14:12])
-            3'b000:  alu_operator_o = ALU_EQ;
-            3'b001:  alu_operator_o = ALU_NE;
-            3'b100:  alu_operator_o = ALU_LT;
-            3'b101:  alu_operator_o = ALU_GE;
-            3'b110:  alu_operator_o = ALU_LTU;
-            3'b111:  alu_operator_o = ALU_GEU;
-            default: illegal_insn   = 1'b1;
-          endcase
         end else begin
           // Calculate jump target in EX
           alu_op_a_mux_sel_o  = OP_A_CURRPC;

ParseResult:
UPD HdlStmProcess@@ to 
    INS HdlStmProcessTriggerConstrain@@COMB to 

UPD HdlStmCase@@opcode to opcode
    INS HdlStmCaseType@@CASE to opcode
    INS HdlValueId@@opcode to opcode
    INS HdlStmCaseUniqConstrain@@UNIQUE to opcode
    INS HdlValueId@@OPCODE_OP to 

UPD HdlStmIf@@ to 
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: alu_op_a_mux_sel_o
                    HdlValueId: OP_A_REG_A
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: alu_op_b_mux_sel_o
                    HdlValueId: OP_B_REG_B
            HdlStmCase: {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops':}]} 
                HdlStmCaseType: CASE
                HdlOp: INDEX
                    list: ops
                        HdlValueId: instr
                        HdlOp: DOWNTO
                            list: ops
                                HdlValueInt: 14
                                HdlValueInt: 12
                list: cases
                    tuple
                        HdlValueInt: 000
                        HdlOp: ASSIGN
                            list: ops
                                HdlValueId: alu_operator_o
                                HdlValueId: ALU_EQ
                    tuple
                        HdlValueInt: 001
                        HdlOp: ASSIGN
                            list: ops
                                HdlValueId: alu_operator_o
                                HdlValueId: ALU_NE
                    tuple
                        HdlValueInt: 100
                        HdlOp: ASSIGN
                            list: ops
                                HdlValueId: alu_operator_o
                                HdlValueId: ALU_LT
                    tuple
                        HdlValueInt: 101
                        HdlOp: ASSIGN
                            list: ops
                                HdlValueId: alu_operator_o
                                HdlValueId: ALU_GE
                    tuple
                        HdlValueInt: 110
                        HdlOp: ASSIGN
                            list: ops
                                HdlValueId: alu_operator_o
                                HdlValueId: ALU_LTU
                    tuple
                        HdlValueInt: 111
                        HdlOp: ASSIGN
                            list: ops
                                HdlValueId: alu_operator_o
                                HdlValueId: ALU_GEU
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: illegal_insn
                        HdlValueInt: 1
                HdlStmCaseUniqConstrain: UNIQUE
    UPD HdlStmBlock@@SEQ to SEQ
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: alu_op_a_mux_sel_o
                HdlValueId: OP_A_REG_A
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: alu_op_b_mux_sel_o
                HdlValueId: OP_B_REG_B

UPD HdlStmCase@@opcode to opcode
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: alu_op_a_mux_sel_o
                    HdlValueId: OP_A_REG_A
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: alu_op_b_mux_sel_o
                    HdlValueId: OP_B_REG_B
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: regfile_we
                    HdlValueInt: 1
            HdlStmIf
                HdlOp: INDEX
                    list: ops
                        HdlValueId: instr
                        HdlValueInt: 31
                HdlStmBlock: SEQ
                    list: body
                        HdlOp: ASSIGN
                            list: ops
                                HdlValueId: illegal_insn
                                HdlValueInt: 1
                list: elifs
                    tuple
                        HdlOp: NEG_LOG
                            list: ops
                                HdlOp: INDEX
                                    list: ops
                                        HdlValueId: instr
                                        HdlValueInt: 28
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmCase: {'__class__': 'HdlOp',  'fn': 'CONCAT',  'ops':}]},          {'__class__': 'HdlOp',           'fn': 'INDEX',           'ops':}]}]} 
                                    HdlStmCaseType: CASE
                                    HdlOp: CONCAT
                                        list: ops
                                            HdlOp: INDEX
                                                list: ops
                                                    HdlValueId: instr
                                                    HdlOp: DOWNTO
                                                        list: ops
                                                            HdlValueInt: 30
                                                            HdlValueInt: 25
                                            HdlOp: INDEX
                                                list: ops
                                                    HdlValueId: instr
                                                    HdlOp: DOWNTO
                                                        list: ops
                                                            HdlValueInt: 14
                                                            HdlValueInt: 12
                                    list: cases
                                        tuple
                                            HdlOp: CONCAT
                                                list: ops
                                                    HdlValueInt: 000000
                                                    HdlValueInt: 000
                                            HdlOp: ASSIGN
                                                list: ops
                                                    HdlValueId: alu_operator_o
                                                    HdlValueId: ALU_ADD
                                        tuple
                                            HdlOp: CONCAT
                                                list: ops
                                                    HdlValueInt: 100000
                                                    HdlValueInt: 000
                                            HdlOp: ASSIGN
                                                list: ops
                                                    HdlValueId: alu_operator_o
                                                    HdlValueId: ALU_SUB
                                        tuple
                                            HdlOp: CONCAT
                                                list: ops
                                                    HdlValueInt: 000000
                                                    HdlValueInt: 010
                                            HdlOp: ASSIGN
                                                list: ops
                                                    HdlValueId: alu_operator_o
                                                    HdlValueId: ALU_SLT
                                        tuple
                                            HdlOp: CONCAT
                                                list: ops
                                                    HdlValueInt: 000000
                                                    HdlValueInt: 011
                                            HdlOp: ASSIGN
                                                list: ops
                                                    HdlValueId: alu_operator_o
                                                    HdlValueId: ALU_SLTU
                                        tuple
                                            HdlOp: CONCAT
                                                list: ops
                                                    HdlValueInt: 000000
                                                    HdlValueInt: 100
                                            HdlOp: ASSIGN
                                                list: ops
                                                    HdlValueId: alu_operator_o
                                                    HdlValueId: ALU_XOR
                                        tuple
                                            HdlOp: CONCAT
                                                list: ops
                                                    HdlValueInt: 000000
                                                    HdlValueInt: 110
                                            HdlOp: ASSIGN
                                                list: ops
                                                    HdlValueId: alu_operator_o
                                                    HdlValueId: ALU_OR
                                        tuple
                                            HdlOp: CONCAT
                                                list: ops
                                                    HdlValueInt: 000000
                                                    HdlValueInt: 111
                                            HdlOp: ASSIGN
                                                list: ops
                                                    HdlValueId: alu_operator_o
                                                    HdlValueId: ALU_AND
                                        tuple
                                            HdlOp: CONCAT
                                                list: ops
                                                    HdlValueInt: 000000
                                                    HdlValueInt: 001
                                            HdlOp: ASSIGN
                                                list: ops
                                                    HdlValueId: alu_operator_o
                                                    HdlValueId: ALU_SLL
                                        tuple
                                            HdlOp: CONCAT
                                                list: ops
                                                    HdlValueInt: 000000
                                                    HdlValueInt: 101
                                            HdlOp: ASSIGN
                                                list: ops
                                                    HdlValueId: alu_operator_o
                                                    HdlValueId: ALU_SRL
                                        tuple
                                            HdlOp: CONCAT
                                                list: ops
                                                    HdlValueInt: 100000
                                                    HdlValueInt: 101
                                            HdlOp: ASSIGN
                                                list: ops
                                                    HdlValueId: alu_operator_o
                                                    HdlValueId: ALU_SRA
                                        tuple
                                            HdlOp: CONCAT
                                                list: ops
                                                    HdlValueInt: 000001
                                                    HdlValueInt: 000
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: alu_operator_o
                                                            HdlValueId: ALU_ADD
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: multdiv_operator_o
                                                            HdlValueId: MD_OP_MULL
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: mult_en_o
                                                            HdlOp: TERNARY
                                                                list: ops
                                                                    HdlValueId: RV32M
                                                                    HdlValueInt: 1
                                                                    HdlValueInt: 0
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: multdiv_signed_mode_o
                                                            HdlValueInt: 00
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: illegal_insn
                                                            HdlOp: TERNARY
                                                                list: ops
                                                                    HdlValueId: RV32M
                                                                    HdlValueInt: 0
                                                                    HdlValueInt: 1
                                        tuple
                                            HdlOp: CONCAT
                                                list: ops
                                                    HdlValueInt: 000001
                                                    HdlValueInt: 001
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: alu_operator_o
                                                            HdlValueId: ALU_ADD
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: multdiv_operator_o
                                                            HdlValueId: MD_OP_MULH
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: mult_en_o
                                                            HdlOp: TERNARY
                                                                list: ops
                                                                    HdlValueId: RV32M
                                                                    HdlValueInt: 1
                                                                    HdlValueInt: 0
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: multdiv_signed_mode_o
                                                            HdlValueInt: 11
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: illegal_insn
                                                            HdlOp: TERNARY
                                                                list: ops
                                                                    HdlValueId: RV32M
                                                                    HdlValueInt: 0
                                                                    HdlValueInt: 1
                                        tuple
                                            HdlOp: CONCAT
                                                list: ops
                                                    HdlValueInt: 000001
                                                    HdlValueInt: 010
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: alu_operator_o
                                                            HdlValueId: ALU_ADD
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: multdiv_operator_o
                                                            HdlValueId: MD_OP_MULH
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: mult_en_o
                                                            HdlOp: TERNARY
                                                                list: ops
                                                                    HdlValueId: RV32M
                                                                    HdlValueInt: 1
                                                                    HdlValueInt: 0
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: multdiv_signed_mode_o
                                                            HdlValueInt: 01
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: illegal_insn
                                                            HdlOp: TERNARY
                                                                list: ops
                                                                    HdlValueId: RV32M
                                                                    HdlValueInt: 0
                                                                    HdlValueInt: 1
                                        tuple
                                            HdlOp: CONCAT
                                                list: ops
                                                    HdlValueInt: 000001
                                                    HdlValueInt: 011
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: alu_operator_o
                                                            HdlValueId: ALU_ADD
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: multdiv_operator_o
                                                            HdlValueId: MD_OP_MULH
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: mult_en_o
                                                            HdlOp: TERNARY
                                                                list: ops
                                                                    HdlValueId: RV32M
                                                                    HdlValueInt: 1
                                                                    HdlValueInt: 0
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: multdiv_signed_mode_o
                                                            HdlValueInt: 00
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: illegal_insn
                                                            HdlOp: TERNARY
                                                                list: ops
                                                                    HdlValueId: RV32M
                                                                    HdlValueInt: 0
                                                                    HdlValueInt: 1
                                        tuple
                                            HdlOp: CONCAT
                                                list: ops
                                                    HdlValueInt: 000001
                                                    HdlValueInt: 100
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: alu_operator_o
                                                            HdlValueId: ALU_ADD
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: multdiv_operator_o
                                                            HdlValueId: MD_OP_DIV
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: div_en_o
                                                            HdlOp: TERNARY
                                                                list: ops
                                                                    HdlValueId: RV32M
                                                                    HdlValueInt: 1
                                                                    HdlValueInt: 0
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: multdiv_signed_mode_o
                                                            HdlValueInt: 11
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: illegal_insn
                                                            HdlOp: TERNARY
                                                                list: ops
                                                                    HdlValueId: RV32M
                                                                    HdlValueInt: 0
                                                                    HdlValueInt: 1
                                        tuple
                                            HdlOp: CONCAT
                                                list: ops
                                                    HdlValueInt: 000001
                                                    HdlValueInt: 101
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: alu_operator_o
                                                            HdlValueId: ALU_ADD
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: multdiv_operator_o
                                                            HdlValueId: MD_OP_DIV
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: div_en_o
                                                            HdlOp: TERNARY
                                                                list: ops
                                                                    HdlValueId: RV32M
                                                                    HdlValueInt: 1
                                                                    HdlValueInt: 0
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: multdiv_signed_mode_o
                                                            HdlValueInt: 00
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: illegal_insn
                                                            HdlOp: TERNARY
                                                                list: ops
                                                                    HdlValueId: RV32M
                                                                    HdlValueInt: 0
                                                                    HdlValueInt: 1
                                        tuple
                                            HdlOp: CONCAT
                                                list: ops
                                                    HdlValueInt: 000001
                                                    HdlValueInt: 110
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: alu_operator_o
                                                            HdlValueId: ALU_ADD
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: multdiv_operator_o
                                                            HdlValueId: MD_OP_REM
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: div_en_o
                                                            HdlOp: TERNARY
                                                                list: ops
                                                                    HdlValueId: RV32M
                                                                    HdlValueInt: 1
                                                                    HdlValueInt: 0
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: multdiv_signed_mode_o
                                                            HdlValueInt: 11
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: illegal_insn
                                                            HdlOp: TERNARY
                                                                list: ops
                                                                    HdlValueId: RV32M
                                                                    HdlValueInt: 0
                                                                    HdlValueInt: 1
                                        tuple
                                            HdlOp: CONCAT
                                                list: ops
                                                    HdlValueInt: 000001
                                                    HdlValueInt: 111
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: alu_operator_o
                                                            HdlValueId: ALU_ADD
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: multdiv_operator_o
                                                            HdlValueId: MD_OP_REM
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: div_en_o
                                                            HdlOp: TERNARY
                                                                list: ops
                                                                    HdlValueId: RV32M
                                                                    HdlValueInt: 1
                                                                    HdlValueInt: 0
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: multdiv_signed_mode_o
                                                            HdlValueInt: 00
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: illegal_insn
                                                            HdlOp: TERNARY
                                                                list: ops
                                                                    HdlValueId: RV32M
                                                                    HdlValueInt: 0
                                                                    HdlValueInt: 1
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlOp: ASSIGN
                                                list: ops
                                                    HdlValueId: illegal_insn
                                                    HdlValueInt: 1
                                    HdlStmCaseUniqConstrain: UNIQUE
    UPD HdlStmBlock@@SEQ to SEQ
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: branch_in_dec_o
                HdlValueInt: 1
        DEL list@@body from SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: alu_op_a_mux_sel_o
                HdlValueId: OP_A_REG_A
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: alu_op_b_mux_sel_o
                HdlValueId: OP_B_REG_B
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: regfile_we
                HdlValueInt: 1
        DEL list@@body from SEQ
    DEL HdlStmCaseType@@CASE from opcode
    DEL HdlValueId@@opcode from opcode
    DEL HdlStmBlock@@SEQ from 
    DEL HdlValueId@@OPCODE_OP from 
    DEL tuple@@ from cases
    DEL HdlStmCaseUniqConstrain@@UNIQUE from opcode

MOV HdlStmIf@@ to body
HdlStmIf
    HdlValueId: instr_new_i
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: alu_op_a_mux_sel_o
                    HdlValueId: OP_A_REG_A
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: alu_op_b_mux_sel_o
                    HdlValueId: OP_B_REG_B
            HdlStmCase: {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops':}]} 
                HdlStmCaseType: CASE
                HdlOp: INDEX
                    list: ops
                        HdlValueId: instr
                        HdlOp: DOWNTO
                            list: ops
                                HdlValueInt: 14
                                HdlValueInt: 12
                list: cases
                    tuple
                        HdlValueInt: 000
                        HdlOp: ASSIGN
                            list: ops
                                HdlValueId: alu_operator_o
                                HdlValueId: ALU_EQ
                    tuple
                        HdlValueInt: 001
                        HdlOp: ASSIGN
                            list: ops
                                HdlValueId: alu_operator_o
                                HdlValueId: ALU_NE
                    tuple
                        HdlValueInt: 100
                        HdlOp: ASSIGN
                            list: ops
                                HdlValueId: alu_operator_o
                                HdlValueId: ALU_LT
                    tuple
                        HdlValueInt: 101
                        HdlOp: ASSIGN
                            list: ops
                                HdlValueId: alu_operator_o
                                HdlValueId: ALU_GE
                    tuple
                        HdlValueInt: 110
                        HdlOp: ASSIGN
                            list: ops
                                HdlValueId: alu_operator_o
                                HdlValueId: ALU_LTU
                    tuple
                        HdlValueInt: 111
                        HdlOp: ASSIGN
                            list: ops
                                HdlValueId: alu_operator_o
                                HdlValueId: ALU_GEU
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: illegal_insn
                        HdlValueInt: 1
                HdlStmCaseUniqConstrain: UNIQUE
    list: elifs
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: alu_op_a_mux_sel_o
                    HdlValueId: OP_A_CURRPC
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: alu_op_b_mux_sel_o
                    HdlValueId: OP_B_IMM
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: imm_b_mux_sel_o
                    HdlValueId: IMM_B_B
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: alu_operator_o
                    HdlValueId: ALU_ADD
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: regfile_we
                    HdlValueInt: 0

UPD HdlStmIf@@ to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmProcess@@ to 
    DEL HdlStmProcessTriggerConstrain@@COMB from 


CommitId: 59254498489d441f64c24e6b344fce73d0d8bbce
Decoder: fix signaling and detection of illegal instructions
--- a/rtl/ibex_decoder.sv
+++ b/rtl/ibex_decoder.sv
@@ -422,7 +423,7 @@ module ibex_decoder #(
 
         if (instr[31]) begin
           illegal_insn = 1'b1;
-        end else if (!instr[28]) begin // non bit-manipulation instructions
+        end else begin
           unique case ({instr[30:25], instr[14:12]})
             // RV32I ALU operations
             {6'b00_0000, 3'b000}: alu_operator_o = ALU_ADD;   // Add
ParseResult:
UPD HdlStmProcess@@ to 
    INS HdlStmProcessTriggerConstrain@@COMB to 

UPD HdlStmCase@@opcode to opcode
    INS HdlStmCaseType@@CASE to opcode
    INS HdlValueId@@opcode to opcode
    INS HdlStmCaseUniqConstrain@@UNIQUE to opcode
    INS HdlValueId@@OPCODE_OP to 

UPD HdlStmIf@@ to 
    MOV tuple@@ to elifs
    tuple
        HdlOp: NEG_LOG
            list: ops
                HdlOp: INDEX
                    list: ops
                        HdlValueId: instr
                        HdlValueInt: 28
        HdlStmBlock: SEQ
            list: body
                HdlStmCase: {'__class__': 'HdlOp',  'fn': 'CONCAT',  'ops':}]},          {'__class__': 'HdlOp',           'fn': 'INDEX',           'ops':}]}]} 
                    HdlStmCaseType: CASE
                    HdlOp: CONCAT
                        list: ops
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: instr
                                    HdlOp: DOWNTO
                                        list: ops
                                            HdlValueInt: 30
                                            HdlValueInt: 25
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: instr
                                    HdlOp: DOWNTO
                                        list: ops
                                            HdlValueInt: 14
                                            HdlValueInt: 12
                    list: cases
                        tuple
                            HdlOp: CONCAT
                                list: ops
                                    HdlValueInt: 000000
                                    HdlValueInt: 000
                            HdlOp: ASSIGN
                                list: ops
                                    HdlValueId: alu_operator_o
                                    HdlValueId: ALU_ADD
                        tuple
                            HdlOp: CONCAT
                                list: ops
                                    HdlValueInt: 100000
                                    HdlValueInt: 000
                            HdlOp: ASSIGN
                                list: ops
                                    HdlValueId: alu_operator_o
                                    HdlValueId: ALU_SUB
                        tuple
                            HdlOp: CONCAT
                                list: ops
                                    HdlValueInt: 000000
                                    HdlValueInt: 010
                            HdlOp: ASSIGN
                                list: ops
                                    HdlValueId: alu_operator_o
                                    HdlValueId: ALU_SLT
                        tuple
                            HdlOp: CONCAT
                                list: ops
                                    HdlValueInt: 000000
                                    HdlValueInt: 011
                            HdlOp: ASSIGN
                                list: ops
                                    HdlValueId: alu_operator_o
                                    HdlValueId: ALU_SLTU
                        tuple
                            HdlOp: CONCAT
                                list: ops
                                    HdlValueInt: 000000
                                    HdlValueInt: 100
                            HdlOp: ASSIGN
                                list: ops
                                    HdlValueId: alu_operator_o
                                    HdlValueId: ALU_XOR
                        tuple
                            HdlOp: CONCAT
                                list: ops
                                    HdlValueInt: 000000
                                    HdlValueInt: 110
                            HdlOp: ASSIGN
                                list: ops
                                    HdlValueId: alu_operator_o
                                    HdlValueId: ALU_OR
                        tuple
                            HdlOp: CONCAT
                                list: ops
                                    HdlValueInt: 000000
                                    HdlValueInt: 111
                            HdlOp: ASSIGN
                                list: ops
                                    HdlValueId: alu_operator_o
                                    HdlValueId: ALU_AND
                        tuple
                            HdlOp: CONCAT
                                list: ops
                                    HdlValueInt: 000000
                                    HdlValueInt: 001
                            HdlOp: ASSIGN
                                list: ops
                                    HdlValueId: alu_operator_o
                                    HdlValueId: ALU_SLL
                        tuple
                            HdlOp: CONCAT
                                list: ops
                                    HdlValueInt: 000000
                                    HdlValueInt: 101
                            HdlOp: ASSIGN
                                list: ops
                                    HdlValueId: alu_operator_o
                                    HdlValueId: ALU_SRL
                        tuple
                            HdlOp: CONCAT
                                list: ops
                                    HdlValueInt: 100000
                                    HdlValueInt: 101
                            HdlOp: ASSIGN
                                list: ops
                                    HdlValueId: alu_operator_o
                                    HdlValueId: ALU_SRA
                        tuple
                            HdlOp: CONCAT
                                list: ops
                                    HdlValueInt: 000001
                                    HdlValueInt: 000
                            HdlStmBlock: SEQ
                                list: body
                                    HdlOp: ASSIGN
                                        list: ops
                                            HdlValueId: alu_operator_o
                                            HdlValueId: ALU_ADD
                                    HdlOp: ASSIGN
                                        list: ops
                                            HdlValueId: multdiv_operator_o
                                            HdlValueId: MD_OP_MULL
                                    HdlOp: ASSIGN
                                        list: ops
                                            HdlValueId: mult_en_o
                                            HdlOp: TERNARY
                                                list: ops
                                                    HdlValueId: RV32M
                                                    HdlValueInt: 1
                                                    HdlValueInt: 0
                                    HdlOp: ASSIGN
                                        list: ops
                                            HdlValueId: multdiv_signed_mode_o
                                            HdlValueInt: 00
                                    HdlOp: ASSIGN
                                        list: ops
                                            HdlValueId: illegal_insn
                                            HdlOp: TERNARY
                                                list: ops
                                                    HdlValueId: RV32M
                                                    HdlValueInt: 0
                                                    HdlValueInt: 1
                        tuple
                            HdlOp: CONCAT
                                list: ops
                                    HdlValueInt: 000001
                                    HdlValueInt: 001
                            HdlStmBlock: SEQ
                                list: body
                                    HdlOp: ASSIGN
                                        list: ops
                                            HdlValueId: alu_operator_o
                                            HdlValueId: ALU_ADD
                                    HdlOp: ASSIGN
                                        list: ops
                                            HdlValueId: multdiv_operator_o
                                            HdlValueId: MD_OP_MULH
                                    HdlOp: ASSIGN
                                        list: ops
                                            HdlValueId: mult_en_o
                                            HdlOp: TERNARY
                                                list: ops
                                                    HdlValueId: RV32M
                                                    HdlValueInt: 1
                                                    HdlValueInt: 0
                                    HdlOp: ASSIGN
                                        list: ops
                                            HdlValueId: multdiv_signed_mode_o
                                            HdlValueInt: 11
                                    HdlOp: ASSIGN
                                        list: ops
                                            HdlValueId: illegal_insn
                                            HdlOp: TERNARY
                                                list: ops
                                                    HdlValueId: RV32M
                                                    HdlValueInt: 0
                                                    HdlValueInt: 1
                        tuple
                            HdlOp: CONCAT
                                list: ops
                                    HdlValueInt: 000001
                                    HdlValueInt: 010
                            HdlStmBlock: SEQ
                                list: body
                                    HdlOp: ASSIGN
                                        list: ops
                                            HdlValueId: alu_operator_o
                                            HdlValueId: ALU_ADD
                                    HdlOp: ASSIGN
                                        list: ops
                                            HdlValueId: multdiv_operator_o
                                            HdlValueId: MD_OP_MULH
                                    HdlOp: ASSIGN
                                        list: ops
                                            HdlValueId: mult_en_o
                                            HdlOp: TERNARY
                                                list: ops
                                                    HdlValueId: RV32M
                                                    HdlValueInt: 1
                                                    HdlValueInt: 0
                                    HdlOp: ASSIGN
                                        list: ops
                                            HdlValueId: multdiv_signed_mode_o
                                            HdlValueInt: 01
                                    HdlOp: ASSIGN
                                        list: ops
                                            HdlValueId: illegal_insn
                                            HdlOp: TERNARY
                                                list: ops
                                                    HdlValueId: RV32M
                                                    HdlValueInt: 0
                                                    HdlValueInt: 1
                        tuple
                            HdlOp: CONCAT
                                list: ops
                                    HdlValueInt: 000001
                                    HdlValueInt: 011
                            HdlStmBlock: SEQ
                                list: body
                                    HdlOp: ASSIGN
                                        list: ops
                                            HdlValueId: alu_operator_o
                                            HdlValueId: ALU_ADD
                                    HdlOp: ASSIGN
                                        list: ops
                                            HdlValueId: multdiv_operator_o
                                            HdlValueId: MD_OP_MULH
                                    HdlOp: ASSIGN
                                        list: ops
                                            HdlValueId: mult_en_o
                                            HdlOp: TERNARY
                                                list: ops
                                                    HdlValueId: RV32M
                                                    HdlValueInt: 1
                                                    HdlValueInt: 0
                                    HdlOp: ASSIGN
                                        list: ops
                                            HdlValueId: multdiv_signed_mode_o
                                            HdlValueInt: 00
                                    HdlOp: ASSIGN
                                        list: ops
                                            HdlValueId: illegal_insn
                                            HdlOp: TERNARY
                                                list: ops
                                                    HdlValueId: RV32M
                                                    HdlValueInt: 0
                                                    HdlValueInt: 1
                        tuple
                            HdlOp: CONCAT
                                list: ops
                                    HdlValueInt: 000001
                                    HdlValueInt: 100
                            HdlStmBlock: SEQ
                                list: body
                                    HdlOp: ASSIGN
                                        list: ops
                                            HdlValueId: alu_operator_o
                                            HdlValueId: ALU_ADD
                                    HdlOp: ASSIGN
                                        list: ops
                                            HdlValueId: multdiv_operator_o
                                            HdlValueId: MD_OP_DIV
                                    HdlOp: ASSIGN
                                        list: ops
                                            HdlValueId: div_en_o
                                            HdlOp: TERNARY
                                                list: ops
                                                    HdlValueId: RV32M
                                                    HdlValueInt: 1
                                                    HdlValueInt: 0
                                    HdlOp: ASSIGN
                                        list: ops
                                            HdlValueId: multdiv_signed_mode_o
                                            HdlValueInt: 11
                                    HdlOp: ASSIGN
                                        list: ops
                                            HdlValueId: illegal_insn
                                            HdlOp: TERNARY
                                                list: ops
                                                    HdlValueId: RV32M
                                                    HdlValueInt: 0
                                                    HdlValueInt: 1
                        tuple
                            HdlOp: CONCAT
                                list: ops
                                    HdlValueInt: 000001
                                    HdlValueInt: 101
                            HdlStmBlock: SEQ
                                list: body
                                    HdlOp: ASSIGN
                                        list: ops
                                            HdlValueId: alu_operator_o
                                            HdlValueId: ALU_ADD
                                    HdlOp: ASSIGN
                                        list: ops
                                            HdlValueId: multdiv_operator_o
                                            HdlValueId: MD_OP_DIV
                                    HdlOp: ASSIGN
                                        list: ops
                                            HdlValueId: div_en_o
                                            HdlOp: TERNARY
                                                list: ops
                                                    HdlValueId: RV32M
                                                    HdlValueInt: 1
                                                    HdlValueInt: 0
                                    HdlOp: ASSIGN
                                        list: ops
                                            HdlValueId: multdiv_signed_mode_o
                                            HdlValueInt: 00
                                    HdlOp: ASSIGN
                                        list: ops
                                            HdlValueId: illegal_insn
                                            HdlOp: TERNARY
                                                list: ops
                                                    HdlValueId: RV32M
                                                    HdlValueInt: 0
                                                    HdlValueInt: 1
                        tuple
                            HdlOp: CONCAT
                                list: ops
                                    HdlValueInt: 000001
                                    HdlValueInt: 110
                            HdlStmBlock: SEQ
                                list: body
                                    HdlOp: ASSIGN
                                        list: ops
                                            HdlValueId: alu_operator_o
                                            HdlValueId: ALU_ADD
                                    HdlOp: ASSIGN
                                        list: ops
                                            HdlValueId: multdiv_operator_o
                                            HdlValueId: MD_OP_REM
                                    HdlOp: ASSIGN
                                        list: ops
                                            HdlValueId: div_en_o
                                            HdlOp: TERNARY
                                                list: ops
                                                    HdlValueId: RV32M
                                                    HdlValueInt: 1
                                                    HdlValueInt: 0
                                    HdlOp: ASSIGN
                                        list: ops
                                            HdlValueId: multdiv_signed_mode_o
                                            HdlValueInt: 11
                                    HdlOp: ASSIGN
                                        list: ops
                                            HdlValueId: illegal_insn
                                            HdlOp: TERNARY
                                                list: ops
                                                    HdlValueId: RV32M
                                                    HdlValueInt: 0
                                                    HdlValueInt: 1
                        tuple
                            HdlOp: CONCAT
                                list: ops
                                    HdlValueInt: 000001
                                    HdlValueInt: 111
                            HdlStmBlock: SEQ
                                list: body
                                    HdlOp: ASSIGN
                                        list: ops
                                            HdlValueId: alu_operator_o
                                            HdlValueId: ALU_ADD
                                    HdlOp: ASSIGN
                                        list: ops
                                            HdlValueId: multdiv_operator_o
                                            HdlValueId: MD_OP_REM
                                    HdlOp: ASSIGN
                                        list: ops
                                            HdlValueId: div_en_o
                                            HdlOp: TERNARY
                                                list: ops
                                                    HdlValueId: RV32M
                                                    HdlValueInt: 1
                                                    HdlValueInt: 0
                                    HdlOp: ASSIGN
                                        list: ops
                                            HdlValueId: multdiv_signed_mode_o
                                            HdlValueInt: 00
                                    HdlOp: ASSIGN
                                        list: ops
                                            HdlValueId: illegal_insn
                                            HdlOp: TERNARY
                                                list: ops
                                                    HdlValueId: RV32M
                                                    HdlValueInt: 0
                                                    HdlValueInt: 1
                    HdlStmBlock: SEQ
                        list: body
                            HdlOp: ASSIGN
                                list: ops
                                    HdlValueId: illegal_insn
                                    HdlValueInt: 1
                    HdlStmCaseUniqConstrain: UNIQUE
    UPD list@@elifs to body
    MOV list@@elifs to 
    list: elifs
        tuple
            HdlOp: NEG_LOG
                list: ops
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: instr
                            HdlValueInt: 28
            HdlStmBlock: SEQ
                list: body
                    HdlStmCase: {'__class__': 'HdlOp',  'fn': 'CONCAT',  'ops':}]},          {'__class__': 'HdlOp',           'fn': 'INDEX',           'ops':}]}]} 
                        HdlStmCaseType: CASE
                        HdlOp: CONCAT
                            list: ops
                                HdlOp: INDEX
                                    list: ops
                                        HdlValueId: instr
                                        HdlOp: DOWNTO
                                            list: ops
                                                HdlValueInt: 30
                                                HdlValueInt: 25
                                HdlOp: INDEX
                                    list: ops
                                        HdlValueId: instr
                                        HdlOp: DOWNTO
                                            list: ops
                                                HdlValueInt: 14
                                                HdlValueInt: 12
                        list: cases
                            tuple
                                HdlOp: CONCAT
                                    list: ops
                                        HdlValueInt: 000000
                                        HdlValueInt: 000
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: alu_operator_o
                                        HdlValueId: ALU_ADD
                            tuple
                                HdlOp: CONCAT
                                    list: ops
                                        HdlValueInt: 100000
                                        HdlValueInt: 000
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: alu_operator_o
                                        HdlValueId: ALU_SUB
                            tuple
                                HdlOp: CONCAT
                                    list: ops
                                        HdlValueInt: 000000
                                        HdlValueInt: 010
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: alu_operator_o
                                        HdlValueId: ALU_SLT
                            tuple
                                HdlOp: CONCAT
                                    list: ops
                                        HdlValueInt: 000000
                                        HdlValueInt: 011
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: alu_operator_o
                                        HdlValueId: ALU_SLTU
                            tuple
                                HdlOp: CONCAT
                                    list: ops
                                        HdlValueInt: 000000
                                        HdlValueInt: 100
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: alu_operator_o
                                        HdlValueId: ALU_XOR
                            tuple
                                HdlOp: CONCAT
                                    list: ops
                                        HdlValueInt: 000000
                                        HdlValueInt: 110
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: alu_operator_o
                                        HdlValueId: ALU_OR
                            tuple
                                HdlOp: CONCAT
                                    list: ops
                                        HdlValueInt: 000000
                                        HdlValueInt: 111
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: alu_operator_o
                                        HdlValueId: ALU_AND
                            tuple
                                HdlOp: CONCAT
                                    list: ops
                                        HdlValueInt: 000000
                                        HdlValueInt: 001
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: alu_operator_o
                                        HdlValueId: ALU_SLL
                            tuple
                                HdlOp: CONCAT
                                    list: ops
                                        HdlValueInt: 000000
                                        HdlValueInt: 101
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: alu_operator_o
                                        HdlValueId: ALU_SRL
                            tuple
                                HdlOp: CONCAT
                                    list: ops
                                        HdlValueInt: 100000
                                        HdlValueInt: 101
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: alu_operator_o
                                        HdlValueId: ALU_SRA
                            tuple
                                HdlOp: CONCAT
                                    list: ops
                                        HdlValueInt: 000001
                                        HdlValueInt: 000
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: alu_operator_o
                                                HdlValueId: ALU_ADD
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: multdiv_operator_o
                                                HdlValueId: MD_OP_MULL
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: mult_en_o
                                                HdlOp: TERNARY
                                                    list: ops
                                                        HdlValueId: RV32M
                                                        HdlValueInt: 1
                                                        HdlValueInt: 0
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: multdiv_signed_mode_o
                                                HdlValueInt: 00
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: illegal_insn
                                                HdlOp: TERNARY
                                                    list: ops
                                                        HdlValueId: RV32M
                                                        HdlValueInt: 0
                                                        HdlValueInt: 1
                            tuple
                                HdlOp: CONCAT
                                    list: ops
                                        HdlValueInt: 000001
                                        HdlValueInt: 001
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: alu_operator_o
                                                HdlValueId: ALU_ADD
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: multdiv_operator_o
                                                HdlValueId: MD_OP_MULH
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: mult_en_o
                                                HdlOp: TERNARY
                                                    list: ops
                                                        HdlValueId: RV32M
                                                        HdlValueInt: 1
                                                        HdlValueInt: 0
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: multdiv_signed_mode_o
                                                HdlValueInt: 11
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: illegal_insn
                                                HdlOp: TERNARY
                                                    list: ops
                                                        HdlValueId: RV32M
                                                        HdlValueInt: 0
                                                        HdlValueInt: 1
                            tuple
                                HdlOp: CONCAT
                                    list: ops
                                        HdlValueInt: 000001
                                        HdlValueInt: 010
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: alu_operator_o
                                                HdlValueId: ALU_ADD
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: multdiv_operator_o
                                                HdlValueId: MD_OP_MULH
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: mult_en_o
                                                HdlOp: TERNARY
                                                    list: ops
                                                        HdlValueId: RV32M
                                                        HdlValueInt: 1
                                                        HdlValueInt: 0
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: multdiv_signed_mode_o
                                                HdlValueInt: 01
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: illegal_insn
                                                HdlOp: TERNARY
                                                    list: ops
                                                        HdlValueId: RV32M
                                                        HdlValueInt: 0
                                                        HdlValueInt: 1
                            tuple
                                HdlOp: CONCAT
                                    list: ops
                                        HdlValueInt: 000001
                                        HdlValueInt: 011
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: alu_operator_o
                                                HdlValueId: ALU_ADD
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: multdiv_operator_o
                                                HdlValueId: MD_OP_MULH
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: mult_en_o
                                                HdlOp: TERNARY
                                                    list: ops
                                                        HdlValueId: RV32M
                                                        HdlValueInt: 1
                                                        HdlValueInt: 0
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: multdiv_signed_mode_o
                                                HdlValueInt: 00
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: illegal_insn
                                                HdlOp: TERNARY
                                                    list: ops
                                                        HdlValueId: RV32M
                                                        HdlValueInt: 0
                                                        HdlValueInt: 1
                            tuple
                                HdlOp: CONCAT
                                    list: ops
                                        HdlValueInt: 000001
                                        HdlValueInt: 100
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: alu_operator_o
                                                HdlValueId: ALU_ADD
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: multdiv_operator_o
                                                HdlValueId: MD_OP_DIV
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: div_en_o
                                                HdlOp: TERNARY
                                                    list: ops
                                                        HdlValueId: RV32M
                                                        HdlValueInt: 1
                                                        HdlValueInt: 0
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: multdiv_signed_mode_o
                                                HdlValueInt: 11
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: illegal_insn
                                                HdlOp: TERNARY
                                                    list: ops
                                                        HdlValueId: RV32M
                                                        HdlValueInt: 0
                                                        HdlValueInt: 1
                            tuple
                                HdlOp: CONCAT
                                    list: ops
                                        HdlValueInt: 000001
                                        HdlValueInt: 101
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: alu_operator_o
                                                HdlValueId: ALU_ADD
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: multdiv_operator_o
                                                HdlValueId: MD_OP_DIV
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: div_en_o
                                                HdlOp: TERNARY
                                                    list: ops
                                                        HdlValueId: RV32M
                                                        HdlValueInt: 1
                                                        HdlValueInt: 0
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: multdiv_signed_mode_o
                                                HdlValueInt: 00
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: illegal_insn
                                                HdlOp: TERNARY
                                                    list: ops
                                                        HdlValueId: RV32M
                                                        HdlValueInt: 0
                                                        HdlValueInt: 1
                            tuple
                                HdlOp: CONCAT
                                    list: ops
                                        HdlValueInt: 000001
                                        HdlValueInt: 110
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: alu_operator_o
                                                HdlValueId: ALU_ADD
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: multdiv_operator_o
                                                HdlValueId: MD_OP_REM
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: div_en_o
                                                HdlOp: TERNARY
                                                    list: ops
                                                        HdlValueId: RV32M
                                                        HdlValueInt: 1
                                                        HdlValueInt: 0
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: multdiv_signed_mode_o
                                                HdlValueInt: 11
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: illegal_insn
                                                HdlOp: TERNARY
                                                    list: ops
                                                        HdlValueId: RV32M
                                                        HdlValueInt: 0
                                                        HdlValueInt: 1
                            tuple
                                HdlOp: CONCAT
                                    list: ops
                                        HdlValueInt: 000001
                                        HdlValueInt: 111
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: alu_operator_o
                                                HdlValueId: ALU_ADD
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: multdiv_operator_o
                                                HdlValueId: MD_OP_REM
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: div_en_o
                                                HdlOp: TERNARY
                                                    list: ops
                                                        HdlValueId: RV32M
                                                        HdlValueInt: 1
                                                        HdlValueInt: 0
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: multdiv_signed_mode_o
                                                HdlValueInt: 00
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: illegal_insn
                                                HdlOp: TERNARY
                                                    list: ops
                                                        HdlValueId: RV32M
                                                        HdlValueInt: 0
                                                        HdlValueInt: 1
                        HdlStmBlock: SEQ
                            list: body
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: illegal_insn
                                        HdlValueInt: 1
                        HdlStmCaseUniqConstrain: UNIQUE
    UPD HdlOp@@NEG_LOG to NEG_LOG
        UPD HdlOp@@INDEX to INDEX
            UPD list@@ops to elifs
            MOV list@@ops to INDEX
            list: ops
                HdlValueId: instr
                HdlValueInt: 28
            DEL HdlValueId@@instr from ops
            DEL HdlValueInt@@28 from ops
        DEL HdlOp@@INDEX from ops
        DEL list@@ops from NEG_LOG
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlStmCase: {'__class__': 'HdlOp',  'fn': 'CONCAT',  'ops':}]},          {'__class__': 'HdlOp',           'fn': 'INDEX',           'ops':}]}]} 
                HdlStmCaseType: CASE
                HdlOp: CONCAT
                    list: ops
                        HdlOp: INDEX
                            list: ops
                                HdlValueId: instr
                                HdlOp: DOWNTO
                                    list: ops
                                        HdlValueInt: 30
                                        HdlValueInt: 25
                        HdlOp: INDEX
                            list: ops
                                HdlValueId: instr
                                HdlOp: DOWNTO
                                    list: ops
                                        HdlValueInt: 14
                                        HdlValueInt: 12
                list: cases
                    tuple
                        HdlOp: CONCAT
                            list: ops
                                HdlValueInt: 000000
                                HdlValueInt: 000
                        HdlOp: ASSIGN
                            list: ops
                                HdlValueId: alu_operator_o
                                HdlValueId: ALU_ADD
                    tuple
                        HdlOp: CONCAT
                            list: ops
                                HdlValueInt: 100000
                                HdlValueInt: 000
                        HdlOp: ASSIGN
                            list: ops
                                HdlValueId: alu_operator_o
                                HdlValueId: ALU_SUB
                    tuple
                        HdlOp: CONCAT
                            list: ops
                                HdlValueInt: 000000
                                HdlValueInt: 010
                        HdlOp: ASSIGN
                            list: ops
                                HdlValueId: alu_operator_o
                                HdlValueId: ALU_SLT
                    tuple
                        HdlOp: CONCAT
                            list: ops
                                HdlValueInt: 000000
                                HdlValueInt: 011
                        HdlOp: ASSIGN
                            list: ops
                                HdlValueId: alu_operator_o
                                HdlValueId: ALU_SLTU
                    tuple
                        HdlOp: CONCAT
                            list: ops
                                HdlValueInt: 000000
                                HdlValueInt: 100
                        HdlOp: ASSIGN
                            list: ops
                                HdlValueId: alu_operator_o
                                HdlValueId: ALU_XOR
                    tuple
                        HdlOp: CONCAT
                            list: ops
                                HdlValueInt: 000000
                                HdlValueInt: 110
                        HdlOp: ASSIGN
                            list: ops
                                HdlValueId: alu_operator_o
                                HdlValueId: ALU_OR
                    tuple
                        HdlOp: CONCAT
                            list: ops
                                HdlValueInt: 000000
                                HdlValueInt: 111
                        HdlOp: ASSIGN
                            list: ops
                                HdlValueId: alu_operator_o
                                HdlValueId: ALU_AND
                    tuple
                        HdlOp: CONCAT
                            list: ops
                                HdlValueInt: 000000
                                HdlValueInt: 001
                        HdlOp: ASSIGN
                            list: ops
                                HdlValueId: alu_operator_o
                                HdlValueId: ALU_SLL
                    tuple
                        HdlOp: CONCAT
                            list: ops
                                HdlValueInt: 000000
                                HdlValueInt: 101
                        HdlOp: ASSIGN
                            list: ops
                                HdlValueId: alu_operator_o
                                HdlValueId: ALU_SRL
                    tuple
                        HdlOp: CONCAT
                            list: ops
                                HdlValueInt: 100000
                                HdlValueInt: 101
                        HdlOp: ASSIGN
                            list: ops
                                HdlValueId: alu_operator_o
                                HdlValueId: ALU_SRA
                    tuple
                        HdlOp: CONCAT
                            list: ops
                                HdlValueInt: 000001
                                HdlValueInt: 000
                        HdlStmBlock: SEQ
                            list: body
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: alu_operator_o
                                        HdlValueId: ALU_ADD
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: multdiv_operator_o
                                        HdlValueId: MD_OP_MULL
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: mult_en_o
                                        HdlOp: TERNARY
                                            list: ops
                                                HdlValueId: RV32M
                                                HdlValueInt: 1
                                                HdlValueInt: 0
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: multdiv_signed_mode_o
                                        HdlValueInt: 00
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: illegal_insn
                                        HdlOp: TERNARY
                                            list: ops
                                                HdlValueId: RV32M
                                                HdlValueInt: 0
                                                HdlValueInt: 1
                    tuple
                        HdlOp: CONCAT
                            list: ops
                                HdlValueInt: 000001
                                HdlValueInt: 001
                        HdlStmBlock: SEQ
                            list: body
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: alu_operator_o
                                        HdlValueId: ALU_ADD
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: multdiv_operator_o
                                        HdlValueId: MD_OP_MULH
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: mult_en_o
                                        HdlOp: TERNARY
                                            list: ops
                                                HdlValueId: RV32M
                                                HdlValueInt: 1
                                                HdlValueInt: 0
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: multdiv_signed_mode_o
                                        HdlValueInt: 11
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: illegal_insn
                                        HdlOp: TERNARY
                                            list: ops
                                                HdlValueId: RV32M
                                                HdlValueInt: 0
                                                HdlValueInt: 1
                    tuple
                        HdlOp: CONCAT
                            list: ops
                                HdlValueInt: 000001
                                HdlValueInt: 010
                        HdlStmBlock: SEQ
                            list: body
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: alu_operator_o
                                        HdlValueId: ALU_ADD
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: multdiv_operator_o
                                        HdlValueId: MD_OP_MULH
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: mult_en_o
                                        HdlOp: TERNARY
                                            list: ops
                                                HdlValueId: RV32M
                                                HdlValueInt: 1
                                                HdlValueInt: 0
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: multdiv_signed_mode_o
                                        HdlValueInt: 01
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: illegal_insn
                                        HdlOp: TERNARY
                                            list: ops
                                                HdlValueId: RV32M
                                                HdlValueInt: 0
                                                HdlValueInt: 1
                    tuple
                        HdlOp: CONCAT
                            list: ops
                                HdlValueInt: 000001
                                HdlValueInt: 011
                        HdlStmBlock: SEQ
                            list: body
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: alu_operator_o
                                        HdlValueId: ALU_ADD
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: multdiv_operator_o
                                        HdlValueId: MD_OP_MULH
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: mult_en_o
                                        HdlOp: TERNARY
                                            list: ops
                                                HdlValueId: RV32M
                                                HdlValueInt: 1
                                                HdlValueInt: 0
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: multdiv_signed_mode_o
                                        HdlValueInt: 00
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: illegal_insn
                                        HdlOp: TERNARY
                                            list: ops
                                                HdlValueId: RV32M
                                                HdlValueInt: 0
                                                HdlValueInt: 1
                    tuple
                        HdlOp: CONCAT
                            list: ops
                                HdlValueInt: 000001
                                HdlValueInt: 100
                        HdlStmBlock: SEQ
                            list: body
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: alu_operator_o
                                        HdlValueId: ALU_ADD
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: multdiv_operator_o
                                        HdlValueId: MD_OP_DIV
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: div_en_o
                                        HdlOp: TERNARY
                                            list: ops
                                                HdlValueId: RV32M
                                                HdlValueInt: 1
                                                HdlValueInt: 0
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: multdiv_signed_mode_o
                                        HdlValueInt: 11
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: illegal_insn
                                        HdlOp: TERNARY
                                            list: ops
                                                HdlValueId: RV32M
                                                HdlValueInt: 0
                                                HdlValueInt: 1
                    tuple
                        HdlOp: CONCAT
                            list: ops
                                HdlValueInt: 000001
                                HdlValueInt: 101
                        HdlStmBlock: SEQ
                            list: body
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: alu_operator_o
                                        HdlValueId: ALU_ADD
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: multdiv_operator_o
                                        HdlValueId: MD_OP_DIV
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: div_en_o
                                        HdlOp: TERNARY
                                            list: ops
                                                HdlValueId: RV32M
                                                HdlValueInt: 1
                                                HdlValueInt: 0
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: multdiv_signed_mode_o
                                        HdlValueInt: 00
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: illegal_insn
                                        HdlOp: TERNARY
                                            list: ops
                                                HdlValueId: RV32M
                                                HdlValueInt: 0
                                                HdlValueInt: 1
                    tuple
                        HdlOp: CONCAT
                            list: ops
                                HdlValueInt: 000001
                                HdlValueInt: 110
                        HdlStmBlock: SEQ
                            list: body
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: alu_operator_o
                                        HdlValueId: ALU_ADD
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: multdiv_operator_o
                                        HdlValueId: MD_OP_REM
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: div_en_o
                                        HdlOp: TERNARY
                                            list: ops
                                                HdlValueId: RV32M
                                                HdlValueInt: 1
                                                HdlValueInt: 0
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: multdiv_signed_mode_o
                                        HdlValueInt: 11
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: illegal_insn
                                        HdlOp: TERNARY
                                            list: ops
                                                HdlValueId: RV32M
                                                HdlValueInt: 0
                                                HdlValueInt: 1
                    tuple
                        HdlOp: CONCAT
                            list: ops
                                HdlValueInt: 000001
                                HdlValueInt: 111
                        HdlStmBlock: SEQ
                            list: body
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: alu_operator_o
                                        HdlValueId: ALU_ADD
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: multdiv_operator_o
                                        HdlValueId: MD_OP_REM
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: div_en_o
                                        HdlOp: TERNARY
                                            list: ops
                                                HdlValueId: RV32M
                                                HdlValueInt: 1
                                                HdlValueInt: 0
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: multdiv_signed_mode_o
                                        HdlValueInt: 00
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: illegal_insn
                                        HdlOp: TERNARY
                                            list: ops
                                                HdlValueId: RV32M
                                                HdlValueInt: 0
                                                HdlValueInt: 1
                HdlStmBlock: SEQ
                    list: body
                        HdlOp: ASSIGN
                            list: ops
                                HdlValueId: illegal_insn
                                HdlValueInt: 1
                HdlStmCaseUniqConstrain: UNIQUE
    DEL HdlOp@@NEG_LOG from 

UPD HdlStmCase@@opcode to opcode
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: alu_op_a_mux_sel_o
                    HdlValueId: OP_A_REG_A
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: alu_op_b_mux_sel_o
                    HdlValueId: OP_B_REG_B
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: regfile_we
                    HdlValueInt: 1
            HdlStmIf
                HdlOp: INDEX
                    list: ops
                        HdlValueId: instr
                        HdlValueInt: 31
                HdlStmBlock: SEQ
                    list: body
                        HdlOp: ASSIGN
                            list: ops
                                HdlValueId: illegal_insn
                                HdlValueInt: 1
                list: elifs
                    tuple
                        HdlOp: NEG_LOG
                            list: ops
                                HdlOp: INDEX
                                    list: ops
                                        HdlValueId: instr
                                        HdlValueInt: 28
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmCase: {'__class__': 'HdlOp',  'fn': 'CONCAT',  'ops':}]},          {'__class__': 'HdlOp',           'fn': 'INDEX',           'ops':}]}]} 
                                    HdlStmCaseType: CASE
                                    HdlOp: CONCAT
                                        list: ops
                                            HdlOp: INDEX
                                                list: ops
                                                    HdlValueId: instr
                                                    HdlOp: DOWNTO
                                                        list: ops
                                                            HdlValueInt: 30
                                                            HdlValueInt: 25
                                            HdlOp: INDEX
                                                list: ops
                                                    HdlValueId: instr
                                                    HdlOp: DOWNTO
                                                        list: ops
                                                            HdlValueInt: 14
                                                            HdlValueInt: 12
                                    list: cases
                                        tuple
                                            HdlOp: CONCAT
                                                list: ops
                                                    HdlValueInt: 000000
                                                    HdlValueInt: 000
                                            HdlOp: ASSIGN
                                                list: ops
                                                    HdlValueId: alu_operator_o
                                                    HdlValueId: ALU_ADD
                                        tuple
                                            HdlOp: CONCAT
                                                list: ops
                                                    HdlValueInt: 100000
                                                    HdlValueInt: 000
                                            HdlOp: ASSIGN
                                                list: ops
                                                    HdlValueId: alu_operator_o
                                                    HdlValueId: ALU_SUB
                                        tuple
                                            HdlOp: CONCAT
                                                list: ops
                                                    HdlValueInt: 000000
                                                    HdlValueInt: 010
                                            HdlOp: ASSIGN
                                                list: ops
                                                    HdlValueId: alu_operator_o
                                                    HdlValueId: ALU_SLT
                                        tuple
                                            HdlOp: CONCAT
                                                list: ops
                                                    HdlValueInt: 000000
                                                    HdlValueInt: 011
                                            HdlOp: ASSIGN
                                                list: ops
                                                    HdlValueId: alu_operator_o
                                                    HdlValueId: ALU_SLTU
                                        tuple
                                            HdlOp: CONCAT
                                                list: ops
                                                    HdlValueInt: 000000
                                                    HdlValueInt: 100
                                            HdlOp: ASSIGN
                                                list: ops
                                                    HdlValueId: alu_operator_o
                                                    HdlValueId: ALU_XOR
                                        tuple
                                            HdlOp: CONCAT
                                                list: ops
                                                    HdlValueInt: 000000
                                                    HdlValueInt: 110
                                            HdlOp: ASSIGN
                                                list: ops
                                                    HdlValueId: alu_operator_o
                                                    HdlValueId: ALU_OR
                                        tuple
                                            HdlOp: CONCAT
                                                list: ops
                                                    HdlValueInt: 000000
                                                    HdlValueInt: 111
                                            HdlOp: ASSIGN
                                                list: ops
                                                    HdlValueId: alu_operator_o
                                                    HdlValueId: ALU_AND
                                        tuple
                                            HdlOp: CONCAT
                                                list: ops
                                                    HdlValueInt: 000000
                                                    HdlValueInt: 001
                                            HdlOp: ASSIGN
                                                list: ops
                                                    HdlValueId: alu_operator_o
                                                    HdlValueId: ALU_SLL
                                        tuple
                                            HdlOp: CONCAT
                                                list: ops
                                                    HdlValueInt: 000000
                                                    HdlValueInt: 101
                                            HdlOp: ASSIGN
                                                list: ops
                                                    HdlValueId: alu_operator_o
                                                    HdlValueId: ALU_SRL
                                        tuple
                                            HdlOp: CONCAT
                                                list: ops
                                                    HdlValueInt: 100000
                                                    HdlValueInt: 101
                                            HdlOp: ASSIGN
                                                list: ops
                                                    HdlValueId: alu_operator_o
                                                    HdlValueId: ALU_SRA
                                        tuple
                                            HdlOp: CONCAT
                                                list: ops
                                                    HdlValueInt: 000001
                                                    HdlValueInt: 000
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: alu_operator_o
                                                            HdlValueId: ALU_ADD
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: multdiv_operator_o
                                                            HdlValueId: MD_OP_MULL
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: mult_en_o
                                                            HdlOp: TERNARY
                                                                list: ops
                                                                    HdlValueId: RV32M
                                                                    HdlValueInt: 1
                                                                    HdlValueInt: 0
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: multdiv_signed_mode_o
                                                            HdlValueInt: 00
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: illegal_insn
                                                            HdlOp: TERNARY
                                                                list: ops
                                                                    HdlValueId: RV32M
                                                                    HdlValueInt: 0
                                                                    HdlValueInt: 1
                                        tuple
                                            HdlOp: CONCAT
                                                list: ops
                                                    HdlValueInt: 000001
                                                    HdlValueInt: 001
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: alu_operator_o
                                                            HdlValueId: ALU_ADD
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: multdiv_operator_o
                                                            HdlValueId: MD_OP_MULH
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: mult_en_o
                                                            HdlOp: TERNARY
                                                                list: ops
                                                                    HdlValueId: RV32M
                                                                    HdlValueInt: 1
                                                                    HdlValueInt: 0
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: multdiv_signed_mode_o
                                                            HdlValueInt: 11
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: illegal_insn
                                                            HdlOp: TERNARY
                                                                list: ops
                                                                    HdlValueId: RV32M
                                                                    HdlValueInt: 0
                                                                    HdlValueInt: 1
                                        tuple
                                            HdlOp: CONCAT
                                                list: ops
                                                    HdlValueInt: 000001
                                                    HdlValueInt: 010
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: alu_operator_o
                                                            HdlValueId: ALU_ADD
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: multdiv_operator_o
                                                            HdlValueId: MD_OP_MULH
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: mult_en_o
                                                            HdlOp: TERNARY
                                                                list: ops
                                                                    HdlValueId: RV32M
                                                                    HdlValueInt: 1
                                                                    HdlValueInt: 0
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: multdiv_signed_mode_o
                                                            HdlValueInt: 01
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: illegal_insn
                                                            HdlOp: TERNARY
                                                                list: ops
                                                                    HdlValueId: RV32M
                                                                    HdlValueInt: 0
                                                                    HdlValueInt: 1
                                        tuple
                                            HdlOp: CONCAT
                                                list: ops
                                                    HdlValueInt: 000001
                                                    HdlValueInt: 011
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: alu_operator_o
                                                            HdlValueId: ALU_ADD
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: multdiv_operator_o
                                                            HdlValueId: MD_OP_MULH
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: mult_en_o
                                                            HdlOp: TERNARY
                                                                list: ops
                                                                    HdlValueId: RV32M
                                                                    HdlValueInt: 1
                                                                    HdlValueInt: 0
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: multdiv_signed_mode_o
                                                            HdlValueInt: 00
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: illegal_insn
                                                            HdlOp: TERNARY
                                                                list: ops
                                                                    HdlValueId: RV32M
                                                                    HdlValueInt: 0
                                                                    HdlValueInt: 1
                                        tuple
                                            HdlOp: CONCAT
                                                list: ops
                                                    HdlValueInt: 000001
                                                    HdlValueInt: 100
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: alu_operator_o
                                                            HdlValueId: ALU_ADD
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: multdiv_operator_o
                                                            HdlValueId: MD_OP_DIV
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: div_en_o
                                                            HdlOp: TERNARY
                                                                list: ops
                                                                    HdlValueId: RV32M
                                                                    HdlValueInt: 1
                                                                    HdlValueInt: 0
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: multdiv_signed_mode_o
                                                            HdlValueInt: 11
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: illegal_insn
                                                            HdlOp: TERNARY
                                                                list: ops
                                                                    HdlValueId: RV32M
                                                                    HdlValueInt: 0
                                                                    HdlValueInt: 1
                                        tuple
                                            HdlOp: CONCAT
                                                list: ops
                                                    HdlValueInt: 000001
                                                    HdlValueInt: 101
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: alu_operator_o
                                                            HdlValueId: ALU_ADD
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: multdiv_operator_o
                                                            HdlValueId: MD_OP_DIV
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: div_en_o
                                                            HdlOp: TERNARY
                                                                list: ops
                                                                    HdlValueId: RV32M
                                                                    HdlValueInt: 1
                                                                    HdlValueInt: 0
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: multdiv_signed_mode_o
                                                            HdlValueInt: 00
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: illegal_insn
                                                            HdlOp: TERNARY
                                                                list: ops
                                                                    HdlValueId: RV32M
                                                                    HdlValueInt: 0
                                                                    HdlValueInt: 1
                                        tuple
                                            HdlOp: CONCAT
                                                list: ops
                                                    HdlValueInt: 000001
                                                    HdlValueInt: 110
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: alu_operator_o
                                                            HdlValueId: ALU_ADD
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: multdiv_operator_o
                                                            HdlValueId: MD_OP_REM
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: div_en_o
                                                            HdlOp: TERNARY
                                                                list: ops
                                                                    HdlValueId: RV32M
                                                                    HdlValueInt: 1
                                                                    HdlValueInt: 0
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: multdiv_signed_mode_o
                                                            HdlValueInt: 11
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: illegal_insn
                                                            HdlOp: TERNARY
                                                                list: ops
                                                                    HdlValueId: RV32M
                                                                    HdlValueInt: 0
                                                                    HdlValueInt: 1
                                        tuple
                                            HdlOp: CONCAT
                                                list: ops
                                                    HdlValueInt: 000001
                                                    HdlValueInt: 111
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: alu_operator_o
                                                            HdlValueId: ALU_ADD
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: multdiv_operator_o
                                                            HdlValueId: MD_OP_REM
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: div_en_o
                                                            HdlOp: TERNARY
                                                                list: ops
                                                                    HdlValueId: RV32M
                                                                    HdlValueInt: 1
                                                                    HdlValueInt: 0
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: multdiv_signed_mode_o
                                                            HdlValueInt: 00
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: illegal_insn
                                                            HdlOp: TERNARY
                                                                list: ops
                                                                    HdlValueId: RV32M
                                                                    HdlValueInt: 0
                                                                    HdlValueInt: 1
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlOp: ASSIGN
                                                list: ops
                                                    HdlValueId: illegal_insn
                                                    HdlValueInt: 1
                                    HdlStmCaseUniqConstrain: UNIQUE
    UPD HdlStmBlock@@SEQ to SEQ
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: branch_in_dec_o
                HdlValueInt: 1
        DEL list@@body from SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: alu_op_a_mux_sel_o
                HdlValueId: OP_A_REG_A
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: alu_op_b_mux_sel_o
                HdlValueId: OP_B_REG_B
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: regfile_we
                HdlValueInt: 1
        DEL list@@body from SEQ
    DEL HdlStmCaseType@@CASE from opcode
    DEL HdlValueId@@opcode from opcode
    DEL HdlStmBlock@@SEQ from 
    DEL HdlValueId@@OPCODE_OP from 
    DEL tuple@@ from cases
    DEL HdlStmCaseUniqConstrain@@UNIQUE from opcode

MOV HdlStmIf@@ to body
HdlStmIf
    HdlOp: INDEX
        list: ops
            HdlValueId: instr
            HdlValueInt: 31
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: illegal_insn
                    HdlValueInt: 1
    list: elifs
        tuple
            HdlOp: NEG_LOG
                list: ops
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: instr
                            HdlValueInt: 28
            HdlStmBlock: SEQ
                list: body
                    HdlStmCase: {'__class__': 'HdlOp',  'fn': 'CONCAT',  'ops':}]},          {'__class__': 'HdlOp',           'fn': 'INDEX',           'ops':}]}]} 
                        HdlStmCaseType: CASE
                        HdlOp: CONCAT
                            list: ops
                                HdlOp: INDEX
                                    list: ops
                                        HdlValueId: instr
                                        HdlOp: DOWNTO
                                            list: ops
                                                HdlValueInt: 30
                                                HdlValueInt: 25
                                HdlOp: INDEX
                                    list: ops
                                        HdlValueId: instr
                                        HdlOp: DOWNTO
                                            list: ops
                                                HdlValueInt: 14
                                                HdlValueInt: 12
                        list: cases
                            tuple
                                HdlOp: CONCAT
                                    list: ops
                                        HdlValueInt: 000000
                                        HdlValueInt: 000
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: alu_operator_o
                                        HdlValueId: ALU_ADD
                            tuple
                                HdlOp: CONCAT
                                    list: ops
                                        HdlValueInt: 100000
                                        HdlValueInt: 000
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: alu_operator_o
                                        HdlValueId: ALU_SUB
                            tuple
                                HdlOp: CONCAT
                                    list: ops
                                        HdlValueInt: 000000
                                        HdlValueInt: 010
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: alu_operator_o
                                        HdlValueId: ALU_SLT
                            tuple
                                HdlOp: CONCAT
                                    list: ops
                                        HdlValueInt: 000000
                                        HdlValueInt: 011
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: alu_operator_o
                                        HdlValueId: ALU_SLTU
                            tuple
                                HdlOp: CONCAT
                                    list: ops
                                        HdlValueInt: 000000
                                        HdlValueInt: 100
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: alu_operator_o
                                        HdlValueId: ALU_XOR
                            tuple
                                HdlOp: CONCAT
                                    list: ops
                                        HdlValueInt: 000000
                                        HdlValueInt: 110
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: alu_operator_o
                                        HdlValueId: ALU_OR
                            tuple
                                HdlOp: CONCAT
                                    list: ops
                                        HdlValueInt: 000000
                                        HdlValueInt: 111
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: alu_operator_o
                                        HdlValueId: ALU_AND
                            tuple
                                HdlOp: CONCAT
                                    list: ops
                                        HdlValueInt: 000000
                                        HdlValueInt: 001
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: alu_operator_o
                                        HdlValueId: ALU_SLL
                            tuple
                                HdlOp: CONCAT
                                    list: ops
                                        HdlValueInt: 000000
                                        HdlValueInt: 101
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: alu_operator_o
                                        HdlValueId: ALU_SRL
                            tuple
                                HdlOp: CONCAT
                                    list: ops
                                        HdlValueInt: 100000
                                        HdlValueInt: 101
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: alu_operator_o
                                        HdlValueId: ALU_SRA
                            tuple
                                HdlOp: CONCAT
                                    list: ops
                                        HdlValueInt: 000001
                                        HdlValueInt: 000
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: alu_operator_o
                                                HdlValueId: ALU_ADD
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: multdiv_operator_o
                                                HdlValueId: MD_OP_MULL
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: mult_en_o
                                                HdlOp: TERNARY
                                                    list: ops
                                                        HdlValueId: RV32M
                                                        HdlValueInt: 1
                                                        HdlValueInt: 0
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: multdiv_signed_mode_o
                                                HdlValueInt: 00
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: illegal_insn
                                                HdlOp: TERNARY
                                                    list: ops
                                                        HdlValueId: RV32M
                                                        HdlValueInt: 0
                                                        HdlValueInt: 1
                            tuple
                                HdlOp: CONCAT
                                    list: ops
                                        HdlValueInt: 000001
                                        HdlValueInt: 001
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: alu_operator_o
                                                HdlValueId: ALU_ADD
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: multdiv_operator_o
                                                HdlValueId: MD_OP_MULH
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: mult_en_o
                                                HdlOp: TERNARY
                                                    list: ops
                                                        HdlValueId: RV32M
                                                        HdlValueInt: 1
                                                        HdlValueInt: 0
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: multdiv_signed_mode_o
                                                HdlValueInt: 11
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: illegal_insn
                                                HdlOp: TERNARY
                                                    list: ops
                                                        HdlValueId: RV32M
                                                        HdlValueInt: 0
                                                        HdlValueInt: 1
                            tuple
                                HdlOp: CONCAT
                                    list: ops
                                        HdlValueInt: 000001
                                        HdlValueInt: 010
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: alu_operator_o
                                                HdlValueId: ALU_ADD
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: multdiv_operator_o
                                                HdlValueId: MD_OP_MULH
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: mult_en_o
                                                HdlOp: TERNARY
                                                    list: ops
                                                        HdlValueId: RV32M
                                                        HdlValueInt: 1
                                                        HdlValueInt: 0
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: multdiv_signed_mode_o
                                                HdlValueInt: 01
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: illegal_insn
                                                HdlOp: TERNARY
                                                    list: ops
                                                        HdlValueId: RV32M
                                                        HdlValueInt: 0
                                                        HdlValueInt: 1
                            tuple
                                HdlOp: CONCAT
                                    list: ops
                                        HdlValueInt: 000001
                                        HdlValueInt: 011
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: alu_operator_o
                                                HdlValueId: ALU_ADD
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: multdiv_operator_o
                                                HdlValueId: MD_OP_MULH
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: mult_en_o
                                                HdlOp: TERNARY
                                                    list: ops
                                                        HdlValueId: RV32M
                                                        HdlValueInt: 1
                                                        HdlValueInt: 0
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: multdiv_signed_mode_o
                                                HdlValueInt: 00
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: illegal_insn
                                                HdlOp: TERNARY
                                                    list: ops
                                                        HdlValueId: RV32M
                                                        HdlValueInt: 0
                                                        HdlValueInt: 1
                            tuple
                                HdlOp: CONCAT
                                    list: ops
                                        HdlValueInt: 000001
                                        HdlValueInt: 100
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: alu_operator_o
                                                HdlValueId: ALU_ADD
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: multdiv_operator_o
                                                HdlValueId: MD_OP_DIV
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: div_en_o
                                                HdlOp: TERNARY
                                                    list: ops
                                                        HdlValueId: RV32M
                                                        HdlValueInt: 1
                                                        HdlValueInt: 0
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: multdiv_signed_mode_o
                                                HdlValueInt: 11
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: illegal_insn
                                                HdlOp: TERNARY
                                                    list: ops
                                                        HdlValueId: RV32M
                                                        HdlValueInt: 0
                                                        HdlValueInt: 1
                            tuple
                                HdlOp: CONCAT
                                    list: ops
                                        HdlValueInt: 000001
                                        HdlValueInt: 101
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: alu_operator_o
                                                HdlValueId: ALU_ADD
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: multdiv_operator_o
                                                HdlValueId: MD_OP_DIV
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: div_en_o
                                                HdlOp: TERNARY
                                                    list: ops
                                                        HdlValueId: RV32M
                                                        HdlValueInt: 1
                                                        HdlValueInt: 0
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: multdiv_signed_mode_o
                                                HdlValueInt: 00
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: illegal_insn
                                                HdlOp: TERNARY
                                                    list: ops
                                                        HdlValueId: RV32M
                                                        HdlValueInt: 0
                                                        HdlValueInt: 1
                            tuple
                                HdlOp: CONCAT
                                    list: ops
                                        HdlValueInt: 000001
                                        HdlValueInt: 110
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: alu_operator_o
                                                HdlValueId: ALU_ADD
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: multdiv_operator_o
                                                HdlValueId: MD_OP_REM
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: div_en_o
                                                HdlOp: TERNARY
                                                    list: ops
                                                        HdlValueId: RV32M
                                                        HdlValueInt: 1
                                                        HdlValueInt: 0
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: multdiv_signed_mode_o
                                                HdlValueInt: 11
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: illegal_insn
                                                HdlOp: TERNARY
                                                    list: ops
                                                        HdlValueId: RV32M
                                                        HdlValueInt: 0
                                                        HdlValueInt: 1
                            tuple
                                HdlOp: CONCAT
                                    list: ops
                                        HdlValueInt: 000001
                                        HdlValueInt: 111
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: alu_operator_o
                                                HdlValueId: ALU_ADD
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: multdiv_operator_o
                                                HdlValueId: MD_OP_REM
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: div_en_o
                                                HdlOp: TERNARY
                                                    list: ops
                                                        HdlValueId: RV32M
                                                        HdlValueInt: 1
                                                        HdlValueInt: 0
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: multdiv_signed_mode_o
                                                HdlValueInt: 00
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: illegal_insn
                                                HdlOp: TERNARY
                                                    list: ops
                                                        HdlValueId: RV32M
                                                        HdlValueInt: 0
                                                        HdlValueInt: 1
                        HdlStmBlock: SEQ
                            list: body
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: illegal_insn
                                        HdlValueInt: 1
                        HdlStmCaseUniqConstrain: UNIQUE

UPD HdlStmProcess@@ to 
    DEL HdlStmProcessTriggerConstrain@@COMB from 


CommitId: af8343d3668c3a5a964a1f22107241d8528b1b9d
Fix hardware loops, reimplement prefetch buffer for pulp
--- a/prefetch_L0_buffer.sv
+++ b/prefetch_L0_buffer.sv
@@ -32,15 +32,18 @@ module riscv_prefetch_L0_buffer
   input  logic                                rst_n,
 
   input  logic                                req_i,
+
   input  logic                                branch_i,
-  input  logic                                ready_i,
   input  logic [31:0]                         addr_i,
 
+  input  logic                                hwloop_i,
+  input  logic [31:0]                         hwloop_target_i,
+
+  input  logic                                ready_i,
   output logic                                valid_o,
   output logic [31:0]                         rdata_o,
   output logic [31:0]                         addr_o,
-
-  input  logic                                unaligned_i,
+  output logic                                is_hwlp_o, // is set when the currently served data is from a hwloop
 
   // goes to instruction memory / instruction cache
   output logic                                instr_req_o,

ParseResult:
INS HdlModuleDef@@riscv_prefetch_L0_buffer to objs

MOV HdlModuleDec@@riscv_prefetch_L0_buffer to riscv_prefetch_L0_buffer
HdlModuleDec: riscv_prefetch_L0_buffer
    list: params
        HdlIdDef: RDATA_IN_WIDTH
            HdlValueInt: 128
            HdlDirection: INTERNAL
    list: ports
        HdlIdDef: clk
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: logic
            HdlDirection: IN
        HdlIdDef: rst_n
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: logic
            HdlDirection: IN
        HdlIdDef: req_i
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: logic
            HdlDirection: IN
        HdlIdDef: branch_i
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: logic
            HdlDirection: IN
        HdlIdDef: ready_i
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: logic
            HdlDirection: IN
        HdlIdDef: addr_i
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: logic
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 31
                            HdlValueInt: 0
            HdlDirection: IN
        HdlIdDef: valid_o
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: logic
            HdlDirection: OUT
        HdlIdDef: rdata_o
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: logic
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 31
                            HdlValueInt: 0
            HdlDirection: OUT
        HdlIdDef: addr_o
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: logic
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 31
                            HdlValueInt: 0
            HdlDirection: OUT
        HdlIdDef: unaligned_i
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: logic
            HdlDirection: IN
        HdlIdDef: instr_req_o
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: logic
            HdlDirection: OUT
        HdlIdDef: instr_addr_o
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: logic
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 31
                            HdlValueInt: 0
            HdlDirection: OUT
        HdlIdDef: instr_gnt_i
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: logic
            HdlDirection: IN
        HdlIdDef: instr_rvalid_i
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: logic
            HdlDirection: IN
        HdlIdDef: instr_rdata_i
            HdlOp: INDEX
                list: ops
                    HdlOp: PARAMETRIZATION
                        list: ops
                            HdlValueId: logic
                            HdlOp: DOWNTO
                                list: ops
                                    HdlOp: SUB
                                        list: ops
                                            HdlOp: DIV
                                                list: ops
                                                    HdlValueId: RDATA_IN_WIDTH
                                                    HdlValueInt: 32
                                            HdlValueInt: 1
                                    HdlValueInt: 0
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 31
                            HdlValueInt: 0
            HdlDirection: IN
        HdlIdDef: busy_o
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: logic
            HdlDirection: OUT
    list: objs

UPD HdlModuleDef@@riscv_prefetch_L0_buffer to riscv_prefetch_L0_buffer
    INS list@@objs to riscv_prefetch_L0_buffer

MOV HdlIdDef@@ready_i to ports
HdlIdDef: ready_i
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: IN

INS HdlIdDef@@hwloop_i to ports
HdlIdDef: hwloop_i
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: IN

INS HdlIdDef@@hwloop_target_i to ports
HdlIdDef: hwloop_target_i
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 31
                    HdlValueInt: 0
    HdlDirection: IN

UPD HdlIdDef@@unaligned_i to is_hwlp_o

UPD HdlIdDef@@unaligned_i to unaligned_i
    UPD HdlDirection@@IN to OUT

UPD HdlModuleDef@@riscv_prefetch_L0_buffer to riscv_prefetch_L0_buffer
    DEL list@@objs from riscv_prefetch_L0_buffer

DEL HdlModuleDef@@riscv_prefetch_L0_buffer from objs


CommitId: 2e697121b29d4ce954207906dfeff1739c6d6e71
Specify width of literals cast to enums to avoid linting errors
--- a/rtl/ibex_controller.sv
+++ b/rtl/ibex_controller.sv
@@ -156,10 +156,10 @@ module ibex_controller (
 
     csr_save_cause_o       = 1'b0;
 
-    exc_cause_o            = exc_cause_e'('0);
+    exc_cause_o            = exc_cause_e'({$bits(exc_cause_e){1'b0}});
     exc_pc_mux_o           = EXC_PC_IRQ;
 
-    csr_cause_o            = exc_cause_e'('0);
+    csr_cause_o            = exc_cause_e'({$bits(exc_cause_e){1'b0}});
 
     pc_mux_o               = PC_BOOT;
     pc_set_o               = 1'b0;
ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@CALL to CALL
                INS list@@ops to CALL
                INS HdlValueId@@exc_cause_e to ops
                INS HdlOp@@REPL_CONCAT to ops
                UPD HdlOp@@REPL_CONCAT to REPL_CONCAT
                    INS HdlOp@@CALL to ops
                    UPD HdlOp@@CALL to CALL
                        INS list@@ops to CALL
                        INS HdlValueId@@$bits to ops
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@CALL to CALL
                INS list@@ops to CALL
                INS HdlValueId@@exc_cause_e to ops
                INS HdlOp@@REPL_CONCAT to ops
                UPD HdlOp@@REPL_CONCAT to REPL_CONCAT
                    INS HdlOp@@CALL to ops
                    UPD HdlOp@@CALL to CALL
                        INS list@@ops to CALL
                        INS HdlValueId@@$bits to ops

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@CALL to CALL
                MOV list@@ops to CALL
                list: ops
                    HdlValueId: exc_cause_e
                    HdlValueInt: 0
                MOV HdlValueId@@exc_cause_e to ops
                HdlValueId: exc_cause_e
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@CALL to CALL
                MOV list@@ops to CALL
                list: ops
                    HdlValueId: exc_cause_e
                    HdlValueInt: 0
                MOV HdlValueId@@exc_cause_e to ops
                HdlValueId: exc_cause_e


CommitId: 2e697121b29d4ce954207906dfeff1739c6d6e71
Specify width of literals cast to enums to avoid linting errors
--- a/rtl/ibex_cs_registers.sv
+++ b/rtl/ibex_cs_registers.sv
@@ -371,8 +371,8 @@ module ibex_cs_registers #(
 
       depc_q      <= '0;
       dcsr_q     <= '{
-        xdebugver: x_debug_ver_e'('0),
-        cause:     dbg_cause_e'('0),
+        xdebugver: x_debug_ver_e'({$bits(x_debug_ver_e){1'b0}}),
+        cause:     dbg_cause_e'({$bits(dbg_cause_e){1'b0}}),
         prv:       PRIV_LVL_M,
         default:   '0
       };
ParseResult:
UPD HdlStmAssign@@ to 
    UPD HdlOp@@MAP_ASSOCIATION to MAP_ASSOCIATION
        UPD HdlOp@@CALL to CALL
            INS list@@ops to CALL
            INS HdlValueId@@x_debug_ver_e to ops
            INS HdlOp@@REPL_CONCAT to ops
            UPD HdlOp@@REPL_CONCAT to REPL_CONCAT
                INS HdlOp@@CALL to ops
                UPD HdlOp@@CALL to CALL
                    INS list@@ops to CALL
                    INS HdlValueId@@$bits to ops
    UPD HdlOp@@MAP_ASSOCIATION to MAP_ASSOCIATION
        UPD HdlOp@@CALL to CALL
            INS list@@ops to CALL
            INS HdlValueId@@dbg_cause_e to ops
            INS HdlOp@@REPL_CONCAT to ops
            UPD HdlOp@@REPL_CONCAT to REPL_CONCAT
                INS HdlOp@@CALL to ops
                UPD HdlOp@@CALL to CALL
                    INS list@@ops to CALL
                    INS HdlValueId@@$bits to ops

UPD HdlStmAssign@@ to 
    UPD HdlOp@@MAP_ASSOCIATION to MAP_ASSOCIATION
        UPD HdlOp@@CALL to CALL
            MOV list@@ops to CALL
            list: ops
                HdlValueId: x_debug_ver_e
                HdlValueInt: 0
            MOV HdlValueId@@x_debug_ver_e to ops
            HdlValueId: x_debug_ver_e
    UPD HdlOp@@MAP_ASSOCIATION to MAP_ASSOCIATION
        UPD HdlOp@@CALL to CALL
            MOV list@@ops to CALL
            list: ops
                HdlValueId: dbg_cause_e
                HdlValueInt: 0
            MOV HdlValueId@@dbg_cause_e to ops
            HdlValueId: dbg_cause_e


CommitId: edd8e1d228bcab51e91021cdbb688a1080c89c3b
[bitmanip] Fix: Oversight in Tracer ZBT DV fail
--- a/rtl/ibex_tracer.sv
+++ b/rtl/ibex_tracer.sv
@@ -441,7 +441,7 @@ module ibex_tracer (
     // fsri
     logic [5:0] shamt;
     shamt = {rvfi_insn[25:20]};
-    data_accessed = RS1 | RS3;
+    data_accessed = RS1 | RS3 | RD;
     decoded_str = $sformatf("%s\tx%0d,x%0d,x%0d,0x%0x", mnemonic, rvfi_rd_addr, rvfi_rs1_addr,
         rvfi_rs3_addr, shamt);
   endfunction
ParseResult:
UPD HdlFunctionDef@@decode_i_funnelshift_insn to decode_i_funnelshift_insn
    INS HdlOp@@ASSIGN to body
    UPD HdlOp@@ASSIGN to ASSIGN
        INS list@@ops to ASSIGN
        UPD HdlOp@@OR to OR
            INS HdlValueId@@RD to ops

UPD HdlFunctionDef@@decode_i_funnelshift_insn to decode_i_funnelshift_insn
    UPD HdlOp@@ASSIGN to ASSIGN
        MOV HdlValueId@@data_accessed to ops
        HdlValueId: data_accessed
    UPD HdlOp@@ASSIGN to OR
    MOV HdlOp@@ASSIGN to body
    HdlOp: ASSIGN
        list: ops
            HdlValueId: data_accessed
            HdlOp: OR
                list: ops
                    HdlValueId: RS1
                    HdlValueId: RS3


CommitId: 76cd32e9369e7d5f38af917062b5dc52c332e95e
Add capability to detect and react on load/store errors
--- a/rtl/ibex_controller.sv
+++ b/rtl/ibex_controller.sv
@@ -58,6 +58,8 @@ module ibex_controller (
 
     // LSU
     input  logic                      data_misaligned_i,
+    input  logic                      load_err_i,
+    input  logic                      store_err_i,
 
     // jump/branch signals
     input  logic                      branch_in_id_i,        // branch in id

ParseResult:
INS HdlIdDef@@load_err_i to ports
HdlIdDef: load_err_i
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: IN

INS HdlIdDef@@store_err_i to ports
HdlIdDef: store_err_i
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: IN


CommitId: 76cd32e9369e7d5f38af917062b5dc52c332e95e
Add capability to detect and react on load/store errors
--- a/rtl/ibex_controller.sv
+++ b/rtl/ibex_controller.sv
@@ -121,6 +123,8 @@ module ibex_controller (
   logic irq_enable_int;
 
   logic debug_mode_q, debug_mode_n;
+  logic load_err_q, load_err_n;
+  logic store_err_q, store_err_n;
 
 `ifndef SYNTHESIS
   // synopsys translate_off

ParseResult:
INS HdlIdDef@@load_err_q to objs
HdlIdDef: load_err_q
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

INS HdlIdDef@@load_err_n to objs
HdlIdDef: load_err_n
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

INS HdlIdDef@@store_err_q to objs
HdlIdDef: store_err_q
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

INS HdlIdDef@@store_err_n to objs
HdlIdDef: store_err_n
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL


CommitId: 76cd32e9369e7d5f38af917062b5dc52c332e95e
Add capability to detect and react on load/store errors
--- a/rtl/ibex_controller.sv
+++ b/rtl/ibex_controller.sv
@@ -180,6 +184,9 @@ module ibex_controller (
     debug_cause_o          = DBG_CAUSE_EBREAK;
     debug_mode_n           = debug_mode_q;
 
+    load_err_n             = 1'b0;
+    store_err_n            = 1'b0;
+
     perf_tbranch_o         = 1'b0;
     perf_jump_o            = 1'b0;
 

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: load_err_n
                HdlValueInt: 0
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: store_err_n
                HdlValueInt: 0


CommitId: 76cd32e9369e7d5f38af917062b5dc52c332e95e
Add capability to detect and react on load/store errors
--- a/rtl/ibex_controller.sv
+++ b/rtl/ibex_controller.sv
@@ -290,10 +297,13 @@ module ibex_controller (
                 perf_tbranch_o = branch_set_i;
                 perf_jump_o    = jump_set_i;
               end else if (mret_insn_i || dret_insn_i || ecall_insn_i || pipe_flush_i ||
-                           ebrk_insn_i || illegal_insn_i || csr_status_i) begin
+                           ebrk_insn_i || illegal_insn_i || csr_status_i ||
+                           store_err_i || load_err_i) begin
                 ctrl_fsm_ns = FLUSH;
                 halt_if_o   = 1'b1;
                 halt_id_o   = 1'b1;
+                load_err_n  = load_err_i;
+                store_err_n = store_err_i;
               end
             end
           end

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: load_err_n
                HdlValueInt: 0
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: store_err_n
                HdlValueInt: 0

UPD HdlStmIf@@ to 
    INS HdlOp@@OR_LOG to 
    UPD HdlOp@@OR_LOG to OR_LOG
        INS list@@ops to OR_LOG
        INS HdlOp@@OR_LOG to ops
        INS HdlValueId@@load_err_i to ops
        UPD HdlOp@@OR_LOG to OR_LOG
            INS list@@ops to OR_LOG
            INS HdlValueId@@store_err_i to ops
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: load_err_n
                HdlValueId: load_err_i
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: store_err_n
                HdlValueId: store_err_i

UPD HdlStmIf@@ to 
    MOV HdlOp@@OR_LOG to 
    HdlOp: OR_LOG
        list: ops
            HdlOp: OR_LOG
                list: ops
                    HdlOp: OR_LOG
                        list: ops
                            HdlOp: OR_LOG
                                list: ops
                                    HdlOp: OR_LOG
                                        list: ops
                                            HdlOp: OR_LOG
                                                list: ops
                                                    HdlValueId: mret_insn_i
                                                    HdlValueId: dret_insn_i
                                            HdlValueId: ecall_insn_i
                                    HdlValueId: pipe_flush_i
                            HdlValueId: ebrk_insn_i
                    HdlValueId: illegal_insn_i
            HdlValueId: csr_status_i


CommitId: 76cd32e9369e7d5f38af917062b5dc52c332e95e
Add capability to detect and react on load/store errors
--- a/rtl/ibex_controller.sv
+++ b/rtl/ibex_controller.sv
@@ -475,6 +485,25 @@ module ibex_controller (
               csr_cause_o           = EXC_CAUSE_BREAKPOINT;
             end
           end
+          load_err_q: begin
+            pc_mux_o         = PC_EXCEPTION;
+            pc_set_o         = 1'b1;
+            csr_save_id_o    = 1'b1;
+            csr_save_cause_o = 1'b1;
+            exc_pc_mux_o     = EXC_PC_LOAD;
+            exc_cause_o      = EXC_CAUSE_LOAD_ACCESS_FAULT;
+            csr_cause_o      = EXC_CAUSE_LOAD_ACCESS_FAULT;
+          end
+          store_err_q: begin
+            pc_mux_o         = PC_EXCEPTION;
+            pc_set_o         = 1'b1;
+            csr_save_id_o    = 1'b1;
+            csr_save_cause_o = 1'b1;
+            exc_pc_mux_o     = EXC_PC_STORE;
+            exc_cause_o      = EXC_CAUSE_STORE_ACCESS_FAULT;
+            csr_cause_o      = EXC_CAUSE_STORE_ACCESS_FAULT;
+          end
+
           default:;
         endcase
       end

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: load_err_n
                HdlValueInt: 0
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: store_err_n
                HdlValueInt: 0

UPD HdlStmCase@@{'__class__': 'HdlValueInt', 'base': 2, 'bits': 1, 'val': '1'}  to {'__class__': 'HdlValueInt', 'base': 2, 'bits': 1, 'val': '1'} 
    INS tuple@@ to cases
    tuple
        HdlValueId: load_err_q
        HdlStmBlock: SEQ
            list: body
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: pc_mux_o
                        HdlValueId: PC_EXCEPTION
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: pc_set_o
                        HdlValueInt: 1
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: csr_save_id_o
                        HdlValueInt: 1
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: csr_save_cause_o
                        HdlValueInt: 1
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: exc_pc_mux_o
                        HdlValueId: EXC_PC_LOAD
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: exc_cause_o
                        HdlValueId: EXC_CAUSE_LOAD_ACCESS_FAULT
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: csr_cause_o
                        HdlValueId: EXC_CAUSE_LOAD_ACCESS_FAULT
    INS tuple@@ to cases
    tuple
        HdlValueId: store_err_q
        HdlStmBlock: SEQ
            list: body
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: pc_mux_o
                        HdlValueId: PC_EXCEPTION
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: pc_set_o
                        HdlValueInt: 1
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: csr_save_id_o
                        HdlValueInt: 1
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: csr_save_cause_o
                        HdlValueInt: 1
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: exc_pc_mux_o
                        HdlValueId: EXC_PC_STORE
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: exc_cause_o
                        HdlValueId: EXC_CAUSE_STORE_ACCESS_FAULT
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: csr_cause_o
                        HdlValueId: EXC_CAUSE_STORE_ACCESS_FAULT


CommitId: 76cd32e9369e7d5f38af917062b5dc52c332e95e
Add capability to detect and react on load/store errors
--- a/rtl/ibex_controller.sv
+++ b/rtl/ibex_controller.sv
@@ -502,9 +531,13 @@ module ibex_controller (
     if (!rst_ni) begin
       ctrl_fsm_cs  <= RESET;
       debug_mode_q <= 1'b0;
+      load_err_q   <= 1'b0;
+      store_err_q  <= 1'b0;
     end else begin
       ctrl_fsm_cs  <= ctrl_fsm_ns;
       debug_mode_q <= debug_mode_n;
+      load_err_q   <= load_err_n;
+      store_err_q  <= store_err_n;
     end
   end
 
ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: load_err_n
                HdlValueInt: 0
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: store_err_n
                HdlValueInt: 0

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: load_err_q

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: store_err_q

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueId: load_err_n
    HdlValueId: load_err_q

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueId: store_err_n
    HdlValueId: store_err_q

UPD HdlStmCase@@{'__class__': 'HdlValueInt', 'base': 2, 'bits': 1, 'val': '1'}  to {'__class__': 'HdlValueInt', 'base': 2, 'bits': 1, 'val': '1'} 
    INS tuple@@ to cases
    tuple
        HdlValueId: load_err_q
        HdlStmBlock: SEQ
            list: body
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: pc_mux_o
                        HdlValueId: PC_EXCEPTION
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: pc_set_o
                        HdlValueInt: 1
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: csr_save_id_o
                        HdlValueInt: 1
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: csr_save_cause_o
                        HdlValueInt: 1
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: exc_pc_mux_o
                        HdlValueId: EXC_PC_LOAD
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: exc_cause_o
                        HdlValueId: EXC_CAUSE_LOAD_ACCESS_FAULT
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: csr_cause_o
                        HdlValueId: EXC_CAUSE_LOAD_ACCESS_FAULT
    INS tuple@@ to cases
    tuple
        HdlValueId: store_err_q
        HdlStmBlock: SEQ
            list: body
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: pc_mux_o
                        HdlValueId: PC_EXCEPTION
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: pc_set_o
                        HdlValueInt: 1
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: csr_save_id_o
                        HdlValueInt: 1
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: csr_save_cause_o
                        HdlValueInt: 1
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: exc_pc_mux_o
                        HdlValueId: EXC_PC_STORE
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: exc_cause_o
                        HdlValueId: EXC_CAUSE_STORE_ACCESS_FAULT
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: csr_cause_o
                        HdlValueId: EXC_CAUSE_STORE_ACCESS_FAULT


CommitId: 495a05c7f4bb55dc4738745f3c22313f8b4b62fb
fixed jumps
--- a/exc_controller.sv
+++ b/exc_controller.sv
@@ -49,10 +49,6 @@ module zeroriscy_exc_controller
   input  logic        ebrk_insn_i,    // ebrk instruction encountered (EBREAK)
   input  logic        illegal_insn_i, // illegal instruction encountered
   input  logic        ecall_insn_i,   // ecall instruction encountered
-  input  logic        eret_insn_i,    // eret instruction encountered
-
-  input  logic        lsu_load_err_i,
-  input  logic        lsu_store_err_i,
 
   // to CSR
   output logic [5:0]  cause_o,

ParseResult:
DEL HdlIdDef@@eret_insn_i from ports
HdlIdDef: eret_insn_i
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: IN

DEL HdlIdDef@@lsu_load_err_i from ports
HdlIdDef: lsu_load_err_i
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: IN

DEL HdlIdDef@@lsu_store_err_i from ports
HdlIdDef: lsu_store_err_i
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: IN


CommitId: 495a05c7f4bb55dc4738745f3c22313f8b4b62fb
fixed jumps
--- a/exc_controller.sv
+++ b/exc_controller.sv
@@ -81,17 +77,14 @@ module zeroriscy_exc_controller
   // - Debuger requests halt
   assign trap_o =       (dbg_settings_i[DBG_SETS_SSTE])
                       | (ecall_insn_i            & dbg_settings_i[DBG_SETS_ECALL])
-                      | (lsu_load_err_i          & dbg_settings_i[DBG_SETS_ELSU])
-                      | (lsu_store_err_i         & dbg_settings_i[DBG_SETS_ELSU])
                       | (ebrk_insn_i             & dbg_settings_i[DBG_SETS_EBRK])
                       | (illegal_insn_i          & dbg_settings_i[DBG_SETS_EILL])
                       | (irq_enable_i & irq_i & dbg_settings_i[DBG_SETS_IRQ]);
 
 // request for exception/interrupt
 assign int_req_int =   ecall_insn_i
-                   | illegal_insn_i
-                   | lsu_load_err_i
-                   | lsu_store_err_i;
+                   | illegal_insn_i;
+
 assign ext_req_int = irq_enable_i & irq_i;
 
 assign req_int = int_req_int | ext_req_int;

ParseResult:
UPD HdlStmAssign@@ to 
    UPD HdlOp@@OR to OR
        UPD HdlOp@@OR to OR
            MOV HdlOp@@OR to ops
            HdlOp: OR
                list: ops
                    HdlOp: OR
                        list: ops
                            HdlOp: OR
                                list: ops
                                    HdlOp: OR
                                        list: ops
                                            HdlOp: INDEX
                                                list: ops
                                                    HdlValueId: dbg_settings_i
                                                    HdlValueId: DBG_SETS_SSTE
                                            HdlOp: AND
                                                list: ops
                                                    HdlValueId: ecall_insn_i
                                                    HdlOp: INDEX
                                                        list: ops
                                                            HdlValueId: dbg_settings_i
                                                            HdlValueId: DBG_SETS_ECALL
                                    HdlOp: AND
                                        list: ops
                                            HdlValueId: lsu_load_err_i
                                            HdlOp: INDEX
                                                list: ops
                                                    HdlValueId: dbg_settings_i
                                                    HdlValueId: DBG_SETS_ELSU
                            HdlOp: AND
                                list: ops
                                    HdlValueId: lsu_store_err_i
                                    HdlOp: INDEX
                                        list: ops
                                            HdlValueId: dbg_settings_i
                                            HdlValueId: DBG_SETS_ELSU
                    HdlOp: AND
                        list: ops
                            HdlValueId: ebrk_insn_i
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: dbg_settings_i
                                    HdlValueId: DBG_SETS_EBRK
            MOV HdlOp@@AND to ops
            HdlOp: AND
                list: ops
                    HdlValueId: illegal_insn_i
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: dbg_settings_i
                            HdlValueId: DBG_SETS_EILL
            UPD HdlOp@@OR to OR
                MOV HdlOp@@AND to ops
                HdlOp: AND
                    list: ops
                        HdlValueId: ebrk_insn_i
                        HdlOp: INDEX
                            list: ops
                                HdlValueId: dbg_settings_i
                                HdlValueId: DBG_SETS_EBRK
                UPD HdlOp@@OR to OR
                    UPD HdlOp@@OR to OR
                        DEL HdlOp@@AND from ops
                        HdlOp: AND
                            list: ops
                                HdlValueId: lsu_load_err_i
                                HdlOp: INDEX
                                    list: ops
                                        HdlValueId: dbg_settings_i
                                        HdlValueId: DBG_SETS_ELSU
                    DEL HdlOp@@AND from ops
                    HdlOp: AND
                        list: ops
                            HdlValueId: lsu_store_err_i
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: dbg_settings_i
                                    HdlValueId: DBG_SETS_ELSU
            DEL list@@ops from OR
        MOV HdlOp@@AND to ops
        HdlOp: AND
            list: ops
                HdlOp: AND
                    list: ops
                        HdlValueId: irq_enable_i
                        HdlValueId: irq_i
                HdlOp: INDEX
                    list: ops
                        HdlValueId: dbg_settings_i
                        HdlValueId: DBG_SETS_IRQ
        DEL HdlOp@@OR from ops
        DEL list@@ops from OR
    DEL HdlOp@@OR from 

UPD HdlStmAssign@@ to 
    UPD HdlOp@@OR to OR
        UPD HdlOp@@OR to OR
            MOV HdlOp@@OR to ops
            HdlOp: OR
                list: ops
                    HdlValueId: ecall_insn_i
                    HdlValueId: illegal_insn_i
            DEL HdlValueId@@lsu_load_err_i from ops
            DEL list@@ops from OR
        DEL HdlOp@@OR from ops
        DEL HdlValueId@@lsu_store_err_i from ops
        DEL list@@ops from OR
    DEL HdlOp@@OR from 


CommitId: 495a05c7f4bb55dc4738745f3c22313f8b4b62fb
fixed jumps
--- a/exc_controller.sv
+++ b/exc_controller.sv
@@ -121,7 +114,7 @@ assign req_int = int_req_int | ext_req_int;
       cause_int  = 6'b0_00010;
       pc_mux_int = EXC_PC_ILLINSN;
     end
-
+/*
     if (lsu_load_err_i) begin
       cause_int  = 6'b0_00101;
       pc_mux_int = EXC_PC_LOAD;

ParseResult:
DEL HdlStmIf@@ from body
HdlStmIf
    HdlValueId: lsu_load_err_i
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: cause_int
                    HdlValueInt: 000101
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: pc_mux_int
                    HdlValueId: EXC_PC_LOAD
    list: elifs


CommitId: 495a05c7f4bb55dc4738745f3c22313f8b4b62fb
fixed jumps
--- a/exc_controller.sv
+++ b/exc_controller.sv
@@ -131,6 +124,7 @@ assign req_int = int_req_int | ext_req_int;
       cause_int  = 6'b0_00111;
       pc_mux_int = EXC_PC_STORE;
     end
+*/
   end
 
   always_ff @(posedge clk, negedge rst_n)
ParseResult:
DEL HdlStmIf@@ from body
HdlStmIf
    HdlValueId: lsu_store_err_i
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: cause_int
                    HdlValueInt: 000111
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: pc_mux_int
                    HdlValueId: EXC_PC_STORE
    list: elifs


CommitId: f35a407906c5e4ef757cb280d036122938d52e9e
Update lowrisc_ip to lowRISC/opentitan@5cae0cf1
--- a/vendor/lowrisc_ip/prim/rtl/prim_flop_2sync.sv
+++ b/vendor/lowrisc_ip/prim/rtl/prim_flop_2sync.sv
@@ -6,7 +6,7 @@
 
 module prim_flop_2sync #(
   parameter int Width      = 16,
-  parameter bit ResetValue = 0
+  parameter logic [Width-1:0] ResetValue = '0
 ) (
   input                    clk_i,    // receive clock
   input                    rst_ni,

ParseResult:
UPD HdlIdDef@@ResetValue to ResetValue
    UPD HdlOp@@PARAMETRIZATION to PARAMETRIZATION
        INS list@@ops to PARAMETRIZATION
        INS HdlValueId@@logic to ops
        INS HdlOp@@DOWNTO to ops
        UPD HdlOp@@DOWNTO to DOWNTO
            INS list@@ops to DOWNTO
            INS HdlOp@@SUB to ops
            INS HdlValueInt@@0 to ops
            UPD HdlOp@@SUB to SUB
                INS HdlValueInt@@1 to ops

UPD HdlIdDef@@ResetValue to ResetValue
    UPD HdlOp@@PARAMETRIZATION to PARAMETRIZATION
        MOV list@@ops to PARAMETRIZATION
        list: ops
            HdlValueId: bit
        UPD HdlValueId@@bit to Width


CommitId: f35a407906c5e4ef757cb280d036122938d52e9e
Update lowrisc_ip to lowRISC/opentitan@5cae0cf1
--- a/vendor/lowrisc_ip/prim/rtl/prim_flop_2sync.sv
+++ b/vendor/lowrisc_ip/prim/rtl/prim_flop_2sync.sv
@@ -18,8 +18,8 @@ module prim_flop_2sync #(
 
   always_ff @(posedge clk_i or negedge rst_ni)
     if (!rst_ni) begin
-      intq <= {Width{ResetValue}};
-      q    <= {Width{ResetValue}};
+      intq <= ResetValue;
+      q    <= ResetValue;
     end else begin
       intq <= d;
       q    <= intq;
ParseResult:
UPD HdlStmAssign@@ to 
    UPD HdlOp@@REPL_CONCAT to REPL_CONCAT
        MOV HdlValueId@@ResetValue to ops
        HdlValueId: ResetValue
        DEL HdlValueId@@Width from ops
        DEL list@@ops from REPL_CONCAT
    DEL HdlOp@@REPL_CONCAT from 

UPD HdlStmAssign@@ to 
    UPD HdlOp@@REPL_CONCAT to REPL_CONCAT
        MOV HdlValueId@@ResetValue to ops
        HdlValueId: ResetValue
        DEL HdlValueId@@Width from ops
        DEL list@@ops from REPL_CONCAT
    DEL HdlOp@@REPL_CONCAT from 


CommitId: 7c5dff2cc53addac897f70014524dc215accf789
Small fix in exc controller
--- a/exc_controller.sv
+++ b/exc_controller.sv
@@ -88,12 +88,12 @@ module riscv_exc_controller
 
 // request for exception/interrupt
 assign req_int =   ecall_insn_i
-                   | lsu_load_err_i
-                   | lsu_store_err_i
                    | illegal_insn_i
-                   | (irq_enable_i & (|irq_i));
+                   | ext_req_int;
 
-assign ext_req_int = irq_enable_i & (|irq_i);
+assign ext_req_int =   lsu_load_err_i
+                       | lsu_store_err_i
+                       | irq_enable_i & (|irq_i);
 
 
   // Exception cause and ISR address selection
ParseResult:
INS HdlStmAssign@@ to objs

INS HdlStmAssign@@ to objs

UPD HdlStmAssign@@ to 
    UPD HdlOp@@OR to OR
        UPD HdlOp@@OR to OR
            MOV HdlOp@@OR to ops
            HdlOp: OR
                list: ops
                    HdlOp: OR
                        list: ops
                            HdlValueId: ecall_insn_i
                            HdlValueId: lsu_load_err_i
                    HdlValueId: lsu_store_err_i
            UPD HdlValueId@@illegal_insn_i to req_int
            MOV HdlValueId@@illegal_insn_i to ops
            HdlValueId: illegal_insn_i
            UPD HdlOp@@OR to OR
                UPD HdlValueId@@lsu_store_err_i to ext_req_int
                UPD HdlOp@@OR to OR
                    UPD HdlValueId@@lsu_load_err_i to illegal_insn_i
            DEL list@@ops from OR
        MOV HdlOp@@AND to ops
        HdlOp: AND
            list: ops
                HdlValueId: irq_enable_i
                HdlOp: OR_UNARY
                    list: ops
                        HdlValueId: irq_i
        DEL HdlOp@@OR from ops
        DEL list@@ops from OR
    DEL HdlOp@@OR from 
    DEL HdlValueId@@req_int from 

UPD HdlStmAssign@@ to 
    INS HdlOp@@OR to 
    UPD HdlOp@@OR to OR
        INS list@@ops to OR
        INS HdlOp@@OR to ops
        HdlOp: OR
            list: ops
                HdlValueId: lsu_load_err_i
                HdlValueId: lsu_store_err_i

UPD HdlStmAssign@@ to 
    MOV HdlValueId@@ext_req_int to 
    HdlValueId: ext_req_int
    DEL HdlOp@@AND from 
    HdlOp: AND
        list: ops
            HdlValueId: irq_enable_i
            HdlOp: OR_UNARY
                list: ops
                    HdlValueId: irq_i

DEL HdlStmAssign@@ from objs

DEL HdlStmAssign@@ from objs


CommitId: 0afd000a09681e50edb94b9417349140538b8947
[bitmanip] Add ZBE Instruction Group
--- a/rtl/ibex_tracer.sv
+++ b/rtl/ibex_tracer.sv
@@ -905,6 +905,9 @@ module ibex_tracer (
         INSN_SBSET:      decode_r_insn("sbset");
         INSN_SBINV:      decode_r_insn("sbinv");
         INSN_SBEXT:      decode_r_insn("sbext");
+        // RV32B - ZBE
+        INSN_BDEP:       decode_r_insn("bdep");
+        INSN_BEXT:       decode_r_insn("bext");
         // RV32B - ZBP
         INSN_GREV:       decode_r_insn("grev");
         INSN_GREVI: begin
ParseResult:
UPD HdlStmProcess@@ to 
    INS HdlStmProcessTriggerConstrain@@COMB to 

UPD HdlStmIf@@ to 
    INS list@@elifs to 

UPD HdlStmCase@@rvfi_insn to rvfi_insn
    INS tuple@@ to cases
    tuple
        HdlValueId: INSN_BDEP
        HdlOp: CALL
            list: ops
                HdlValueId: decode_r_insn
                str
    INS tuple@@ to cases
    tuple
        HdlValueId: INSN_BEXT
        HdlOp: CALL
            list: ops
                HdlValueId: decode_r_insn
                str

UPD HdlStmIf@@ to 
    DEL list@@elifs from 

UPD HdlStmProcess@@ to 
    DEL HdlStmProcessTriggerConstrain@@COMB from 


CommitId: 8e452c33951a1815298210a2f69f502e512cc6f2
Fixed external interrupt request during invalid instruction
--- a/cs_registers.sv
+++ b/cs_registers.sv
@@ -60,9 +60,11 @@ module riscv_cs_registers
   input  logic [31:0] pc_if_i,
   input  logic [31:0] pc_id_i,
   input  logic [31:0] pc_ex_i,
+  input  logic [31:0] branch_target_i,
   input  logic        data_load_event_ex_i,
   input  logic        exc_save_if_i,
   input  logic        exc_save_id_i,
+  input  logic        exc_save_takenbranch_i,
   input  logic        exc_restore_i,
 
   input  logic [5:0]  exc_cause_i,

ParseResult:
INS HdlIdDef@@branch_target_i to ports
HdlIdDef: branch_target_i
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 31
                    HdlValueInt: 0
    HdlDirection: IN

INS HdlIdDef@@exc_save_takenbranch_i to ports
HdlIdDef: exc_save_takenbranch_i
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: IN


CommitId: 8e452c33951a1815298210a2f69f502e512cc6f2
Fixed external interrupt request during invalid instruction
--- a/cs_registers.sv
+++ b/cs_registers.sv
@@ -207,12 +209,14 @@ module riscv_cs_registers
     endcase
 
     // exception controller gets priority over other writes
-    if (exc_save_if_i || exc_save_id_i) begin
+    if (exc_save_if_i || exc_save_id_i || exc_save_takenbranch_i) begin
       mestatus_n = mstatus_q;
       mstatus_n  = 1'b0;
 
       if (data_load_event_ex_i) begin
         mepc_n = pc_ex_i;
+      end else if (exc_save_takenbranch_i) begin
+        mepc_n = branch_target_i;
       end else begin
         if (exc_save_if_i)
           mepc_n = pc_if_i;

ParseResult:
UPD HdlStmIf@@ to 
    INS HdlOp@@OR_LOG to 
    UPD HdlOp@@OR_LOG to OR_LOG
        INS list@@ops to OR_LOG
        INS HdlValueId@@exc_save_takenbranch_i to ops

UPD HdlStmIf@@ to 
    MOV HdlOp@@OR_LOG to 
    HdlOp: OR_LOG
        list: ops
            HdlValueId: exc_save_if_i
            HdlValueId: exc_save_id_i

UPD HdlStmIf@@ to 
    INS tuple@@ to elifs
    tuple
        HdlValueId: exc_save_takenbranch_i
        HdlStmBlock: SEQ
            list: body
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: mepc_n
                        HdlValueId: branch_target_i


CommitId: 2bc785e7d9ec632f9d5bb6a6ef19667c6746fccb
[RTL] Prevent CSR write on any illegal CSR reason
--- a/rtl/ibex_cs_registers.sv
+++ b/rtl/ibex_cs_registers.sv
@@ -552,7 +552,7 @@ module ibex_cs_registers #(
   end
 
   // only write CSRs during one clock cycle
-  assign csr_we_int  = csr_wreq & ~illegal_csr_priv & instr_new_id_i;
+  assign csr_we_int  = csr_wreq & ~illegal_csr_insn_o & instr_new_id_i;
 
   assign csr_rdata_o = csr_rdata_int;
 
ParseResult:
INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: AND
        list: ops
            HdlOp: AND
                list: ops
                    HdlValueId: csr_wreq
                    HdlOp: NEG
                        list: ops
                            HdlValueId: illegal_csr_insn_o
            HdlValueId: instr_new_id_i
    HdlValueId: csr_we_int

DEL HdlStmAssign@@ from objs
HdlStmAssign
    HdlOp: AND
        list: ops
            HdlOp: AND
                list: ops
                    HdlValueId: csr_wreq
                    HdlOp: NEG
                        list: ops
                            HdlValueId: illegal_csr_priv
            HdlValueId: instr_new_id_i
    HdlValueId: csr_we_int


CommitId: ab4c8699fbc854220749c49c67fa0b860a69711d
Simplify default assignments to enum types
--- a/rtl/ibex_multdiv_fast.sv
+++ b/rtl/ibex_multdiv_fast.sv
@@ -247,7 +247,7 @@ module ibex_multdiv_fast (
       end
 
       default: begin
-        divcurr_state_n = div_fsm_e'({$bits(div_fsm_e){1'bX}});
+        divcurr_state_n = div_fsm_e'(1'bX);
       end
     endcase // divcurr_state_q
   end

ParseResult:
UPD HdlStmCase@@divcurr_state_q to divcurr_state_q
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@CALL to CALL
                UPD HdlOp@@REPL_CONCAT to REPL_CONCAT
                    MOV list@@ops to REPL_CONCAT
                    list: ops
                        HdlOp: CALL
                            list: ops
                                HdlValueId: $bits
                                HdlValueId: div_fsm_e
                        HdlValueInt: x
                    UPD HdlOp@@CALL to CALL
                        MOV HdlValueId@@div_fsm_e to ops
                        HdlValueId: div_fsm_e
                        DEL HdlValueId@@$bits from ops
                        DEL list@@ops from CALL
                    DEL HdlOp@@CALL from ops
                DEL HdlValueId@@div_fsm_e from ops
                DEL HdlOp@@REPL_CONCAT from ops
                DEL list@@ops from CALL


CommitId: ab4c8699fbc854220749c49c67fa0b860a69711d
Simplify default assignments to enum types
--- a/rtl/ibex_multdiv_fast.sv
+++ b/rtl/ibex_multdiv_fast.sv
@@ -327,7 +327,7 @@ module ibex_multdiv_fast (
         mult_is_ready = 1'b1;
       end
       default: begin
-        mult_state_n = mult_fsm_e'({$bits(mult_fsm_e){1'bX}});
+        mult_state_n = mult_fsm_e'(1'bX);
       end
     endcase // mult_state_q
   end
ParseResult:
UPD HdlStmCase@@mult_state_q to mult_state_q
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@CALL to CALL
                UPD HdlOp@@REPL_CONCAT to REPL_CONCAT
                    MOV list@@ops to REPL_CONCAT
                    list: ops
                        HdlOp: CALL
                            list: ops
                                HdlValueId: $bits
                                HdlValueId: mult_fsm_e
                        HdlValueInt: x
                    UPD HdlOp@@CALL to CALL
                        MOV HdlValueId@@mult_fsm_e to ops
                        HdlValueId: mult_fsm_e
                        DEL HdlValueId@@$bits from ops
                        DEL list@@ops from CALL
                    DEL HdlOp@@CALL from ops
                DEL HdlValueId@@mult_fsm_e from ops
                DEL HdlOp@@REPL_CONCAT from ops
                DEL list@@ops from CALL


CommitId: 2aacd2b98be61fa4c9b633d1ddba9d1d5c894faf
[Priv modes] Add support for U-Mode
--- a/rtl/ibex_cs_registers.sv
+++ b/rtl/ibex_cs_registers.sv
@@ -24,7 +24,12 @@ module ibex_cs_registers #(
 
     // Hart ID
     input  logic [31:0]          hart_id_i,
-    output ibex_pkg::priv_lvl_e  priv_mode_o,
+
+    // Privilege mode
+    output ibex_pkg::priv_lvl_e  priv_mode_id_o,
+    output ibex_pkg::priv_lvl_e  priv_mode_if_o,
+    output ibex_pkg::priv_lvl_e  priv_mode_lsu_o,
+    output logic                 csr_mstatus_tw_o,
 
     // mtvec
     output logic [31:0]          csr_mtvec_o,

ParseResult:
UPD HdlIdDef@@priv_mode_o to priv_mode_id_o

INS HdlIdDef@@priv_mode_if_o to ports
HdlIdDef: priv_mode_if_o
    HdlOp: DOUBLE_COLON
        list: ops
            HdlValueId: ibex_pkg
            HdlValueId: priv_lvl_e
    HdlDirection: OUT

INS HdlIdDef@@priv_mode_lsu_o to ports
HdlIdDef: priv_mode_lsu_o
    HdlOp: DOUBLE_COLON
        list: ops
            HdlValueId: ibex_pkg
            HdlValueId: priv_lvl_e
    HdlDirection: OUT

INS HdlIdDef@@csr_mstatus_tw_o to ports
HdlIdDef: csr_mstatus_tw_o
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: OUT


CommitId: 2aacd2b98be61fa4c9b633d1ddba9d1d5c894faf
[Priv modes] Add support for U-Mode
--- a/rtl/ibex_cs_registers.sv
+++ b/rtl/ibex_cs_registers.sv
@@ -112,8 +117,15 @@ module ibex_cs_registers #(
     logic      mie;
     logic      mpie;
     priv_lvl_e mpp;
+    logic      mprv;
+    logic      tw;
   } Status_t;
 
+  typedef struct packed {
+    logic      mpie;
+    priv_lvl_e mpp;
+  } StatusStk_t;
+
   // struct for mip/mie CSRs
   typedef struct packed {
     logic        irq_software;

ParseResult:
INS HdlIdDef@@StatusStk_t to objs
HdlIdDef: StatusStk_t
    HdlExprNotImplemented: value
    HdlDirection: INTERNAL


CommitId: 2aacd2b98be61fa4c9b633d1ddba9d1d5c894faf
[Priv modes] Add support for U-Mode
--- a/rtl/ibex_cs_registers.sv
+++ b/rtl/ibex_cs_registers.sv
@@ -145,6 +157,7 @@ module ibex_cs_registers #(
   logic [31:0] exception_pc;
 
   // CSRs
+  priv_lvl_e   priv_lvl_q, priv_lvl_d;
   Status_t     mstatus_q, mstatus_d;
   Interrupts_t mie_q, mie_d;
   logic [31:0] mscratch_q, mscratch_d;

ParseResult:
INS HdlIdDef@@priv_lvl_q to objs
HdlIdDef: priv_lvl_q
    HdlDirection: INTERNAL

INS HdlIdDef@@priv_lvl_d to objs
HdlIdDef: priv_lvl_d
    HdlDirection: INTERNAL


CommitId: 2aacd2b98be61fa4c9b633d1ddba9d1d5c894faf
[Priv modes] Add support for U-Mode
--- a/rtl/ibex_cs_registers.sv
+++ b/rtl/ibex_cs_registers.sv
@@ -205,11 +218,11 @@ module ibex_cs_registers #(
   assign mhpmcounter_idx    = csr_addr[4:0];
 
   // See RISC-V Privileged Specification, version 1.11, Section 2.1
-  assign illegal_csr_priv   = 1'b0; // we only support M-mode
+  assign illegal_csr_priv   = (csr_addr[9:8] > {priv_lvl_q});
   assign illegal_csr_write  = (csr_addr[11:10] == 2'b11) && csr_wreq;
-  assign illegal_csr_insn_o = illegal_csr | illegal_csr_write | illegal_csr_priv;
+  assign illegal_csr_insn_o = csr_access_i & (illegal_csr | illegal_csr_write | illegal_csr_priv);
 
-  // mip CSR is purely combintational - must be able to re-enable the clock upon WFI
+  // mip CSR is purely combinational - must be able to re-enable the clock upon WFI
   assign mip.irq_software = irq_software_i & mie_q.irq_software;
   assign mip.irq_timer    = irq_timer_i    & mie_q.irq_timer;
   assign mip.irq_external = irq_external_i & mie_q.irq_external;

ParseResult:
INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: GT
        list: ops
            HdlOp: INDEX
                list: ops
                    HdlValueId: csr_addr
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 9
                            HdlValueInt: 8
            HdlValueId: priv_lvl_q
    HdlValueId: illegal_csr_priv

UPD HdlStmAssign@@ to 
    INS HdlOp@@AND to 
    UPD HdlOp@@AND to AND
        INS list@@ops to AND
        INS HdlValueId@@csr_access_i to ops

UPD HdlStmAssign@@ to 
    MOV HdlOp@@OR to 
    HdlOp: OR
        list: ops
            HdlOp: OR
                list: ops
                    HdlValueId: illegal_csr
                    HdlValueId: illegal_csr_write
            HdlValueId: illegal_csr_priv

DEL HdlStmAssign@@ from objs
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: illegal_csr_priv


CommitId: 2aacd2b98be61fa4c9b633d1ddba9d1d5c894faf
[Priv modes] Add support for U-Mode
--- a/rtl/ibex_cs_registers.sv
+++ b/rtl/ibex_cs_registers.sv
@@ -230,6 +243,7 @@ module ibex_cs_registers #(
         csr_rdata_int[CSR_MSTATUS_MIE_BIT]                              = mstatus_q.mie;
         csr_rdata_int[CSR_MSTATUS_MPIE_BIT]                             = mstatus_q.mpie;
         csr_rdata_int[CSR_MSTATUS_MPP_BIT_HIGH:CSR_MSTATUS_MPP_BIT_LOW] = mstatus_q.mpp;
+        csr_rdata_int[CSR_MSTATUS_MPRV_BIT]                             = mstatus_q.mprv;
       end
 
       // misa

ParseResult:
UPD HdlStmCase@@csr_addr_i to csr_addr_i
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlOp: INDEX
                    list: ops
                        HdlValueId: csr_rdata_int
                        HdlValueId: CSR_MSTATUS_MPRV_BIT
                HdlOp: DOT
                    list: ops
                        HdlValueId: mstatus_q
                        HdlValueId: mprv


CommitId: 2aacd2b98be61fa4c9b633d1ddba9d1d5c894faf
[Priv modes] Add support for U-Mode
--- a/rtl/ibex_cs_registers.sv
+++ b/rtl/ibex_cs_registers.sv
@@ -324,7 +338,7 @@ module ibex_cs_registers #(
           if ((csr_addr[4:0] == 5'b00000) ||     // CSR_MCOUNTINHIBIT
               (csr_addr[4:0] == 5'b00001) ||
               (csr_addr[4:0] == 5'b00010)) begin
-            illegal_csr = csr_access_i;
+            illegal_csr = 1'b1;
           end
 
         end else if ((csr_addr & CSR_MASK_MCOUNTER) == CSR_OFF_MCOUNTER) begin

ParseResult:
UPD HdlStmCase@@csr_addr_i to csr_addr_i
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlOp: INDEX
                    list: ops
                        HdlValueId: csr_rdata_int
                        HdlValueId: CSR_MSTATUS_MPRV_BIT
                HdlOp: DOT
                    list: ops
                        HdlValueId: mstatus_q
                        HdlValueId: mprv

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlValueInt@@1 to ops

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            DEL HdlValueId@@csr_access_i from ops

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            DEL HdlValueId@@csr_access_i from ops


CommitId: 2aacd2b98be61fa4c9b633d1ddba9d1d5c894faf
[Priv modes] Add support for U-Mode
--- a/rtl/ibex_cs_registers.sv
+++ b/rtl/ibex_cs_registers.sv
@@ -333,7 +347,7 @@ module ibex_cs_registers #(
           if ((csr_addr[4:0] == 5'b00000) ||     // CSR_MCYCLE
               (csr_addr[4:0] == 5'b00001) ||
               (csr_addr[4:0] == 5'b00010)) begin // CSR_MINSTRET
-            illegal_csr = csr_access_i;
+            illegal_csr = 1'b1;
           end
 
         end else if ((csr_addr & CSR_MASK_MCOUNTER) == CSR_OFF_MCOUNTERH) begin

ParseResult:
UPD HdlStmCase@@csr_addr_i to csr_addr_i
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlOp: INDEX
                    list: ops
                        HdlValueId: csr_rdata_int
                        HdlValueId: CSR_MSTATUS_MPRV_BIT
                HdlOp: DOT
                    list: ops
                        HdlValueId: mstatus_q
                        HdlValueId: mprv

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlValueInt@@1 to ops

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlValueInt@@1 to ops

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            DEL HdlValueId@@csr_access_i from ops

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            DEL HdlValueId@@csr_access_i from ops


CommitId: 2aacd2b98be61fa4c9b633d1ddba9d1d5c894faf
[Priv modes] Add support for U-Mode
--- a/rtl/ibex_cs_registers.sv
+++ b/rtl/ibex_cs_registers.sv
@@ -342,10 +356,10 @@ module ibex_cs_registers #(
           if ((csr_addr[4:0] == 5'b00000) ||     // CSR_MCYCLEH
               (csr_addr[4:0] == 5'b00001) ||
               (csr_addr[4:0] == 5'b00010)) begin // CSR_MINSTRETH
-            illegal_csr = csr_access_i;
+            illegal_csr = 1'b1;
           end
         end else begin
-          illegal_csr = csr_access_i;
+          illegal_csr = 1'b1;
         end
       end
     endcase

ParseResult:
UPD HdlStmCase@@csr_addr_i to csr_addr_i
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlOp: INDEX
                    list: ops
                        HdlValueId: csr_rdata_int
                        HdlValueId: CSR_MSTATUS_MPRV_BIT
                HdlOp: DOT
                    list: ops
                        HdlValueId: mstatus_q
                        HdlValueId: mprv

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlValueInt@@1 to ops

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlValueInt@@1 to ops

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            DEL HdlValueId@@csr_access_i from ops

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            DEL HdlValueId@@csr_access_i from ops


CommitId: 2aacd2b98be61fa4c9b633d1ddba9d1d5c894faf
[Priv modes] Add support for U-Mode
--- a/rtl/ibex_cs_registers.sv
+++ b/rtl/ibex_cs_registers.sv
@@ -355,6 +369,7 @@ module ibex_cs_registers #(
   always_comb begin
     exception_pc = pc_id_i;
 
+    priv_lvl_d   = priv_lvl_q;
     mstatus_d    = mstatus_q;
     mie_d        = mie_q;
     mscratch_d   = mscratch_q;

ParseResult:
UPD HdlStmCase@@csr_addr_i to csr_addr_i
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlOp: INDEX
                    list: ops
                        HdlValueId: csr_rdata_int
                        HdlValueId: CSR_MSTATUS_MPRV_BIT
                HdlOp: DOT
                    list: ops
                        HdlValueId: mstatus_q
                        HdlValueId: mprv

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlValueInt@@1 to ops

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlValueInt@@1 to ops


CommitId: 2aacd2b98be61fa4c9b633d1ddba9d1d5c894faf
[Priv modes] Add support for U-Mode
--- a/rtl/ibex_cs_registers.sv
+++ b/rtl/ibex_cs_registers.sv
@@ -382,8 +397,14 @@ module ibex_cs_registers #(
           mstatus_d = '{
               mie:  csr_wdata_int[CSR_MSTATUS_MIE_BIT],
               mpie: csr_wdata_int[CSR_MSTATUS_MPIE_BIT],
-              mpp:  PRIV_LVL_M
+              mpp:  csr_wdata_int[CSR_MSTATUS_MPP_BIT_HIGH:CSR_MSTATUS_MPP_BIT_LOW],
+              mprv: csr_wdata_int[CSR_MSTATUS_MPRV_BIT],
+              tw:   csr_wdata_int[CSR_MSTATUS_TW_BIT]
           };
+          // Convert illegal values to M-mode
+          if ((mstatus_d.mpp != PRIV_LVL_M) && (mstatus_d.mpp != PRIV_LVL_U)) begin
+            mstatus_d.mpp = PRIV_LVL_M;
+          end
         end
 
         // interrupt enable

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: priv_lvl_d
                HdlValueId: priv_lvl_q

INS HdlStmIf@@ to body

UPD HdlStmCase@@csr_addr_i to csr_addr_i
    UPD HdlStmBlock@@SEQ to SEQ
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: dcsr_d
                HdlValueId: PRIV_LVL_M
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@MAP_ASSOCIATION to MAP_ASSOCIATION
                UPD HdlValueId@@PRIV_LVL_M to csr_wdata_int
                MOV HdlValueId@@PRIV_LVL_M to ops
                HdlValueId: PRIV_LVL_M


CommitId: 2aacd2b98be61fa4c9b633d1ddba9d1d5c894faf
[Priv modes] Add support for U-Mode
--- a/rtl/ibex_cs_registers.sv
+++ b/rtl/ibex_cs_registers.sv
@@ -413,7 +434,10 @@ module ibex_cs_registers #(
         CSR_DCSR: begin
           dcsr_d = csr_wdata_int;
           dcsr_d.xdebugver = XDEBUGVER_STD;
-          dcsr_d.prv = PRIV_LVL_M; // only M-mode is supported
+          // Change to PRIV_LVL_M if sofware writes an unsupported value
+          if ((dcsr_d.prv != PRIV_LVL_M) && (dcsr_d.prv != PRIV_LVL_U)) begin
+            dcsr_d.prv = PRIV_LVL_M;
+          end
 
           // currently not supported:
           dcsr_d.nmip = 1'b0;

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: priv_lvl_d
                HdlValueId: priv_lvl_q

INS HdlStmIf@@ to body

UPD HdlStmCase@@csr_addr_i to csr_addr_i
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlOp@@MAP_ASSOCIATION to 
            HdlOp: MAP_ASSOCIATION
                list: ops
                    HdlValueId: mprv
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: csr_wdata_int
                            HdlValueId: CSR_MSTATUS_MPRV_BIT
            INS HdlOp@@MAP_ASSOCIATION to 
            HdlOp: MAP_ASSOCIATION
                list: ops
                    HdlValueId: tw
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: csr_wdata_int
                            HdlValueId: CSR_MSTATUS_TW_BIT
            UPD HdlOp@@MAP_ASSOCIATION to MAP_ASSOCIATION
                INS HdlOp@@INDEX to ops
                UPD HdlOp@@INDEX to INDEX
                    INS list@@ops to INDEX
                    INS HdlOp@@DOWNTO to ops
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueId: CSR_MSTATUS_MPP_BIT_HIGH
                            HdlValueId: CSR_MSTATUS_MPP_BIT_LOW

UPD HdlStmCase@@csr_addr_i to csr_addr_i
    UPD HdlStmBlock@@SEQ to SEQ
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: dcsr_d
                HdlValueId: PRIV_LVL_M
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@MAP_ASSOCIATION to MAP_ASSOCIATION
                UPD HdlValueId@@PRIV_LVL_M to csr_wdata_int
                MOV HdlValueId@@PRIV_LVL_M to ops
                HdlValueId: PRIV_LVL_M


CommitId: 2aacd2b98be61fa4c9b633d1ddba9d1d5c894faf
[Priv modes] Add support for U-Mode
--- a/rtl/ibex_cs_registers.sv
+++ b/rtl/ibex_cs_registers.sv
@@ -471,15 +495,16 @@ module ibex_cs_registers #(
         if (debug_csr_save_i) begin
           // all interrupts are masked
           // do not update cause, epc, tval, epc and status
-          dcsr_d.prv   = PRIV_LVL_M;
+          dcsr_d.prv   = priv_lvl_q;
           dcsr_d.cause = debug_cause_i;
           depc_d       = exception_pc;
         end else begin
+          priv_lvl_d     = PRIV_LVL_M;
           mtval_d        = csr_mtval_i;
           mstatus_d.mie  = 1'b0; // disable interrupts
           // save current status
           mstatus_d.mpie = mstatus_q.mie;
-          mstatus_d.mpp  = PRIV_LVL_M;
+          mstatus_d.mpp  = priv_lvl_q;
           mepc_d         = exception_pc;
           mcause_d       = {csr_mcause_i};
           // save previous status for recoverable NMI

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: priv_lvl_d
                HdlValueId: priv_lvl_q

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@PRIV_LVL_M to priv_lvl_q
    UPD HdlStmBlock@@SEQ to SEQ
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: mstatus_d
                HdlValueId: PRIV_LVL_M

UPD HdlStmCase@@csr_addr_i to csr_addr_i
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlOp@@MAP_ASSOCIATION to 
            HdlOp: MAP_ASSOCIATION
                list: ops
                    HdlValueId: mprv
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: csr_wdata_int
                            HdlValueId: CSR_MSTATUS_MPRV_BIT
            INS HdlOp@@MAP_ASSOCIATION to 
            HdlOp: MAP_ASSOCIATION
                list: ops
                    HdlValueId: tw
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: csr_wdata_int
                            HdlValueId: CSR_MSTATUS_TW_BIT
            UPD HdlOp@@MAP_ASSOCIATION to MAP_ASSOCIATION
                INS HdlOp@@INDEX to ops
                UPD HdlOp@@INDEX to INDEX
                    INS list@@ops to INDEX
                    INS HdlOp@@DOWNTO to ops
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueId: CSR_MSTATUS_MPP_BIT_HIGH
                            HdlValueId: CSR_MSTATUS_MPP_BIT_LOW


CommitId: 2aacd2b98be61fa4c9b633d1ddba9d1d5c894faf
[Priv modes] Add support for U-Mode
--- a/rtl/ibex_cs_registers.sv
+++ b/rtl/ibex_cs_registers.sv
@@ -491,12 +516,15 @@ module ibex_cs_registers #(
       end // csr_save_cause_i
 
       csr_restore_mret_i: begin // MRET
+        priv_lvl_d     = mstatus_q.mpp;
         mstatus_d.mie  = mstatus_q.mpie; // re-enable interrupts
         // restore previous status for recoverable NMI
         mstatus_d.mpie = mstack_q.mpie;
         mstatus_d.mpp  = mstack_q.mpp;
         mepc_d         = mstack_epc_q;
         mcause_d       = mstack_cause_q;
+        mstack_d.mpie  = 1'b1;
+        mstack_d.mpp   = PRIV_LVL_U;
       end // csr_restore_mret_i
 
       default:;

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: priv_lvl_d
                HdlValueId: priv_lvl_q

UPD HdlStmCase@@{'__class__': 'HdlValueInt', 'base': 2, 'bits': 1, 'val': '1'}  to {'__class__': 'HdlValueInt', 'base': 2, 'bits': 1, 'val': '1'} 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: priv_lvl_d
                HdlOp: DOT
                    list: ops
                        HdlValueId: mstatus_q
                        HdlValueId: mpp
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: mstack_d
                HdlValueInt: 1
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: mstack_d
                HdlValueId: PRIV_LVL_U

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: priv_lvl_d
                HdlValueId: PRIV_LVL_M
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: mstatus_d
                HdlValueId: priv_lvl_q


CommitId: 2aacd2b98be61fa4c9b633d1ddba9d1d5c894faf
[Priv modes] Add support for U-Mode
--- a/rtl/ibex_cs_registers.sv
+++ b/rtl/ibex_cs_registers.sv
@@ -538,6 +566,7 @@ module ibex_cs_registers #(
   assign csr_mtvec_o = mtvec_q;
 
   assign csr_mstatus_mie_o   = mstatus_q.mie;
+  assign csr_mstatus_tw_o    = mstatus_q.tw;
   assign debug_single_step_o = dcsr_q.step;
   assign debug_ebreakm_o     = dcsr_q.ebreakm;
 

ParseResult:
INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: DOT
        list: ops
            HdlValueId: mstatus_q
            HdlValueId: tw
    HdlValueId: csr_mstatus_tw_o

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: priv_lvl_d
                HdlValueId: priv_lvl_q

UPD HdlStmCase@@{'__class__': 'HdlValueInt', 'base': 2, 'bits': 1, 'val': '1'}  to {'__class__': 'HdlValueInt', 'base': 2, 'bits': 1, 'val': '1'} 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: priv_lvl_d
                HdlOp: DOT
                    list: ops
                        HdlValueId: mstatus_q
                        HdlValueId: mpp
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: mstack_d
                HdlValueInt: 1
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: mstack_d
                HdlValueId: PRIV_LVL_U


CommitId: 2aacd2b98be61fa4c9b633d1ddba9d1d5c894faf
[Priv modes] Add support for U-Mode
--- a/rtl/ibex_cs_registers.sv
+++ b/rtl/ibex_cs_registers.sv
@@ -546,10 +575,13 @@ module ibex_cs_registers #(
   // actual registers
   always_ff @(posedge clk_i or negedge rst_ni) begin
     if (!rst_ni) begin
+      priv_lvl_q     <= PRIV_LVL_M;
       mstatus_q      <= '{
           mie:  1'b0,
-          mpie: 1'b0,
-          mpp:  PRIV_LVL_M
+          mpie: 1'b1,
+          mpp:  PRIV_LVL_U,
+          mprv: 1'b0,
+          tw:   1'b0
       };
       mie_q          <= '0;
       mscratch_q     <= '0;

ParseResult:
INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueId: PRIV_LVL_M
    HdlValueId: priv_lvl_q

UPD HdlStmAssign@@ to 
    UPD HdlOp@@MAP_ASSOCIATION to MAP_ASSOCIATION
        UPD HdlValueInt@@0 to 1
    UPD HdlOp@@MAP_ASSOCIATION to MAP_ASSOCIATION
        UPD HdlValueId@@PRIV_LVL_M to PRIV_LVL_U


CommitId: 2aacd2b98be61fa4c9b633d1ddba9d1d5c894faf
[Priv modes] Add support for U-Mode
--- a/rtl/ibex_cs_registers.sv
+++ b/rtl/ibex_cs_registers.sv
@@ -568,15 +600,15 @@ module ibex_cs_registers #(
       dscratch1_q    <= '0;
 
       mstack_q       <= '{
-          mie:  1'b0,
-          mpie: 1'b0,
-          mpp:  PRIV_LVL_M
+          mpie: 1'b1,
+          mpp:  PRIV_LVL_U
       };
       mstack_epc_q   <= '0;
       mstack_cause_q <= '0;
 
     end else begin
       // update CSRs
+      priv_lvl_q     <= priv_lvl_d;
       mstatus_q      <= mstatus_d;
       mie_q          <= mie_d;
       mscratch_q     <= mscratch_d;

ParseResult:
INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueId: priv_lvl_d
    HdlValueId: priv_lvl_q

UPD HdlStmAssign@@ to 
    UPD HdlOp@@MAP_ASSOCIATION to MAP_ASSOCIATION
        UPD HdlValueInt@@0 to 1
    UPD HdlOp@@MAP_ASSOCIATION to MAP_ASSOCIATION
        UPD HdlValueId@@PRIV_LVL_M to PRIV_LVL_U
    DEL HdlOp@@MAP_ASSOCIATION from src
    HdlOp: MAP_ASSOCIATION
        list: ops
            HdlValueId: mie
            HdlValueInt: 0


CommitId: 2aacd2b98be61fa4c9b633d1ddba9d1d5c894faf
[Priv modes] Add support for U-Mode
--- a/rtl/ibex_cs_registers.sv
+++ b/rtl/ibex_cs_registers.sv
@@ -596,7 +628,12 @@ module ibex_cs_registers #(
     end
   end
 
-  assign priv_mode_o = mstatus_q.mpp;
+  // Send current priv level to the decoder
+  assign priv_mode_id_o = priv_lvl_q;
+  // New instruction fetches need to account for updates to priv_lvl_q this cycle
+  assign priv_mode_if_o = priv_lvl_d;
+  // Load/store instructions must factor in MPRV for PMP checking
+  assign priv_mode_lsu_o = mstatus_q.mprv ? mstatus_q.mpp : priv_lvl_q;
 
   // -----------------
   // PMP registers
ParseResult:
INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlValueId: priv_lvl_q
    HdlValueId: priv_mode_id_o

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlValueId: priv_lvl_d
    HdlValueId: priv_mode_if_o

INS HdlStmAssign@@ to objs

UPD HdlStmAssign@@ to 
    MOV HdlOp@@DOT to 
    HdlOp: DOT
        list: ops
            HdlValueId: mstatus_q
            HdlValueId: mpp
    DEL HdlValueId@@priv_mode_o from 

UPD HdlStmAssign@@ to 
    INS HdlOp@@MAP_ASSOCIATION to src
    HdlOp: MAP_ASSOCIATION
        list: ops
            HdlValueId: mprv
            HdlValueInt: 0
    INS HdlOp@@MAP_ASSOCIATION to src
    HdlOp: MAP_ASSOCIATION
        list: ops
            HdlValueId: tw
            HdlValueInt: 0

DEL HdlStmAssign@@ from objs


CommitId: 36db1041605c4e0c62e5e0612f35331647674ed8
[RTL] - Remove timing loop in LSU
--- a/rtl/ibex_load_store_unit.sv
+++ b/rtl/ibex_load_store_unit.sv
@@ -76,11 +76,13 @@ module ibex_load_store_unit (
   logic         split_misaligned_access;
   logic         handle_misaligned_q, handle_misaligned_d; // high after receiving grant for first
                                                           // part of a misaligned access
+  logic         pmp_err_d;
   logic         pmp_err_q;
   logic         data_or_pmp_err;
 
   typedef enum logic [2:0]  {
-    IDLE, WAIT_GNT_MIS, WAIT_RVALID_MIS, WAIT_GNT, WAIT_RVALID
+    IDLE, WAIT_GNT_MIS, WAIT_RVALID_MIS, WAIT_GNT, WAIT_RVALID,
+    WAIT_GNT_ERR, WAIT_RVALID_ERR, WAIT_RVALID_DONE
   } ls_fsm_e;
 
   ls_fsm_e ls_fsm_cs, ls_fsm_ns;

ParseResult:
INS HdlIdDef@@pmp_err_d to objs
HdlIdDef: pmp_err_d
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL


CommitId: 36db1041605c4e0c62e5e0612f35331647674ed8
[RTL] - Remove timing loop in LSU
--- a/rtl/ibex_load_store_unit.sv
+++ b/rtl/ibex_load_store_unit.sv
@@ -321,12 +323,14 @@ module ibex_load_store_unit (
     addr_incr_req_o     = 1'b0;
     handle_misaligned_d = handle_misaligned_q;
     data_or_pmp_err     = 1'b0;
+    pmp_err_d           = pmp_err_q;
 
     unique case (ls_fsm_cs)
 
       IDLE: begin
         if (data_req_ex_i) begin
           data_req_o = 1'b1;
+          pmp_err_d  = data_pmp_err_i;
           if (data_gnt_i) begin
             handle_misaligned_d = split_misaligned_access;
             ls_fsm_ns           = split_misaligned_access ? WAIT_RVALID_MIS : WAIT_RVALID;

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: pmp_err_d
                HdlValueId: pmp_err_q

UPD HdlStmCase@@ls_fsm_cs to ls_fsm_cs
    INS tuple@@ to cases
    tuple
        HdlValueId: WAIT_GNT_ERR
        HdlStmBlock: SEQ
            list: body
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: data_req_o
                        HdlValueInt: 1
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: addr_incr_req_o
                        HdlValueInt: 1
                HdlStmIf
                    HdlValueId: pmp_err_q
                    HdlStmBlock: SEQ
                        list: body
                            HdlOp: ASSIGN
                                list: ops
                                    HdlValueId: ls_fsm_ns
                                    HdlValueId: IDLE
                    list: elifs
                        tuple
                            HdlValueId: data_gnt_i
                            HdlStmBlock: SEQ
                                list: body
                                    HdlOp: ASSIGN
                                        list: ops
                                            HdlValueId: ls_fsm_ns
                                            HdlValueId: WAIT_RVALID_ERR
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS HdlValueId@@WAIT_RVALID_ERR to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@WAIT_RVALID_DONE to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: pmp_err_d
                HdlValueId: data_pmp_err_i


CommitId: 36db1041605c4e0c62e5e0612f35331647674ed8
[RTL] - Remove timing loop in LSU
--- a/rtl/ibex_load_store_unit.sv
+++ b/rtl/ibex_load_store_unit.sv
@@ -338,6 +342,10 @@ module ibex_load_store_unit (
 
       WAIT_GNT_MIS: begin
         data_req_o = 1'b1;
+        // data_pmp_err_i is valid during the address phase of a request. An error will block the
+        // external request and so a data_gnt_i might never be signalled. The registered version
+        // pmp_err_q is only updated for new address phases and so can be used in WAIT_GNT* and
+        // WAIT_RVALID* states
         if (data_gnt_i || pmp_err_q) begin
           handle_misaligned_d = 1'b1;
           ls_fsm_ns           = WAIT_RVALID_MIS;

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: pmp_err_d
                HdlValueId: pmp_err_q

UPD HdlStmCase@@ls_fsm_cs to ls_fsm_cs
    INS tuple@@ to cases
    tuple
        HdlValueId: WAIT_GNT_ERR
        HdlStmBlock: SEQ
            list: body
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: data_req_o
                        HdlValueInt: 1
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: addr_incr_req_o
                        HdlValueInt: 1
                HdlStmIf
                    HdlValueId: pmp_err_q
                    HdlStmBlock: SEQ
                        list: body
                            HdlOp: ASSIGN
                                list: ops
                                    HdlValueId: ls_fsm_ns
                                    HdlValueId: IDLE
                    list: elifs
                        tuple
                            HdlValueId: data_gnt_i
                            HdlStmBlock: SEQ
                                list: body
                                    HdlOp: ASSIGN
                                        list: ops
                                            HdlValueId: ls_fsm_ns
                                            HdlValueId: WAIT_RVALID_ERR
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS HdlValueId@@WAIT_RVALID_ERR to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@WAIT_RVALID_DONE to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: pmp_err_d
                HdlValueId: data_pmp_err_i


CommitId: 36db1041605c4e0c62e5e0612f35331647674ed8
[RTL] - Remove timing loop in LSU
--- a/rtl/ibex_load_store_unit.sv
+++ b/rtl/ibex_load_store_unit.sv
@@ -345,32 +353,34 @@ module ibex_load_store_unit (
       end
 
       WAIT_RVALID_MIS: begin
+        // push out second request
+        data_req_o = 1'b1;
         // tell ID/EX stage to update the address
         addr_incr_req_o = 1'b1;
-        // first part rvalid is received, or gets a pmp error
-        // pmp_err_i will hold stable until the address is updated, and
-        // therefore pmp_err_q is valid in both WAIT_GNT_MIS and WAIT_RVALID_MIS states
+
+        // first part rvalid is received, or gets a PMP error
         if (data_rvalid_i || pmp_err_q) begin
+          // Update the PMP error for the second part
+          pmp_err_d = data_pmp_err_i;
           if (pmp_err_q || data_err_i) begin
             // first part created an error, abort transaction
             data_valid_o        = 1'b1;
             data_or_pmp_err     = 1'b1;
             handle_misaligned_d = 1'b0;
-            ls_fsm_ns           = IDLE;
+            // If already granted, wait for second rvalid
+            ls_fsm_ns = data_gnt_i ? WAIT_RVALID_ERR : WAIT_GNT_ERR;
+
           end else begin
-            // push out second request
-            data_req_o = 1'b1;
-            if (data_gnt_i) begin
-              // second grant is received
-              ls_fsm_ns = WAIT_RVALID;
-            end else begin
-              // second grant is NOT received, but first rvalid
-              ls_fsm_ns = WAIT_GNT;
-            end
+            // No error in first part, proceed with second part
+            ls_fsm_ns = data_gnt_i ? WAIT_RVALID : WAIT_GNT;
           end
+
         end else begin
           // first part rvalid is NOT received
-          ls_fsm_ns = WAIT_RVALID_MIS;
+          if (data_gnt_i) begin
+            // second grant is received
+            ls_fsm_ns = WAIT_RVALID_DONE;
+          end
         end
       end
 

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: pmp_err_d
                HdlValueId: pmp_err_q

UPD HdlStmCase@@ls_fsm_cs to ls_fsm_cs
    INS tuple@@ to cases
    tuple
        HdlValueId: WAIT_GNT_ERR
        HdlStmBlock: SEQ
            list: body
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: data_req_o
                        HdlValueInt: 1
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: addr_incr_req_o
                        HdlValueInt: 1
                HdlStmIf
                    HdlValueId: pmp_err_q
                    HdlStmBlock: SEQ
                        list: body
                            HdlOp: ASSIGN
                                list: ops
                                    HdlValueId: ls_fsm_ns
                                    HdlValueId: IDLE
                    list: elifs
                        tuple
                            HdlValueId: data_gnt_i
                            HdlStmBlock: SEQ
                                list: body
                                    HdlOp: ASSIGN
                                        list: ops
                                            HdlValueId: ls_fsm_ns
                                            HdlValueId: WAIT_RVALID_ERR
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS HdlValueId@@WAIT_RVALID_ERR to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@WAIT_RVALID_DONE to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: data_req_o
                HdlValueInt: 1
        DEL list@@body from SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: ls_fsm_ns
                HdlValueId: IDLE
    DEL HdlStmBlock@@SEQ from 

UPD HdlStmIf@@ to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: pmp_err_d
                HdlValueId: data_pmp_err_i

INS HdlStmIf@@ to body

UPD HdlStmIf@@ to 
    INS HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: ls_fsm_ns
                    HdlOp: TERNARY
                        list: ops
                            HdlValueId: data_gnt_i
                            HdlValueId: WAIT_RVALID
                            HdlValueId: WAIT_GNT
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: ls_fsm_ns
                HdlOp: TERNARY
                    list: ops
                        HdlValueId: data_gnt_i
                        HdlValueId: WAIT_RVALID_ERR
                        HdlValueId: WAIT_GNT_ERR

UPD HdlStmIf@@ to 
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: ls_fsm_ns
                    HdlValueId: WAIT_RVALID_MIS
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@WAIT_RVALID_MIS to WAIT_RVALID_DONE

UPD HdlStmIf@@ to 
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: ls_fsm_ns
                    HdlValueId: WAIT_RVALID
    DEL HdlValueId@@data_gnt_i from 
    DEL list@@elifs from 
    DEL HdlStmBlock@@SEQ from 
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: ls_fsm_ns
                    HdlValueId: WAIT_GNT

DEL HdlStmIf@@ from body


CommitId: 36db1041605c4e0c62e5e0612f35331647674ed8
[RTL] - Remove timing loop in LSU
--- a/rtl/ibex_load_store_unit.sv
+++ b/rtl/ibex_load_store_unit.sv
@@ -385,8 +395,6 @@ module ibex_load_store_unit (
 
       WAIT_RVALID: begin
         data_req_o = 1'b0;
-        // pmp_err_i will hold stable until the address is updated, and
-        // therefore pmp_err_q is valid in both WAIT_GNT and WAIT_RVALID states
         if (data_rvalid_i || pmp_err_q) begin
           data_valid_o        = 1'b1;
           data_or_pmp_err     = data_err_i | pmp_err_q;

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: pmp_err_d
                HdlValueId: pmp_err_q

UPD HdlStmCase@@ls_fsm_cs to ls_fsm_cs
    INS tuple@@ to cases
    tuple
        HdlValueId: WAIT_GNT_ERR
        HdlStmBlock: SEQ
            list: body
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: data_req_o
                        HdlValueInt: 1
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: addr_incr_req_o
                        HdlValueInt: 1
                HdlStmIf
                    HdlValueId: pmp_err_q
                    HdlStmBlock: SEQ
                        list: body
                            HdlOp: ASSIGN
                                list: ops
                                    HdlValueId: ls_fsm_ns
                                    HdlValueId: IDLE
                    list: elifs
                        tuple
                            HdlValueId: data_gnt_i
                            HdlStmBlock: SEQ
                                list: body
                                    HdlOp: ASSIGN
                                        list: ops
                                            HdlValueId: ls_fsm_ns
                                            HdlValueId: WAIT_RVALID_ERR
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS HdlValueId@@WAIT_RVALID_ERR to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@WAIT_RVALID_DONE to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmIf@@ to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: pmp_err_d
                HdlValueId: data_pmp_err_i

UPD HdlStmIf@@ to 
    INS HdlValueId@@data_gnt_i to 
    INS list@@elifs to 


CommitId: 36db1041605c4e0c62e5e0612f35331647674ed8
[RTL] - Remove timing loop in LSU
--- a/rtl/ibex_load_store_unit.sv
+++ b/rtl/ibex_load_store_unit.sv
@@ -424,7 +470,7 @@ module ibex_load_store_unit (
       ls_fsm_cs           <= ls_fsm_ns;
       addr_last_q         <= addr_last_d;
       handle_misaligned_q <= handle_misaligned_d;
-      pmp_err_q           <= data_pmp_err_i;
+      pmp_err_q           <= pmp_err_d;
     end
   end
 

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: pmp_err_d
                HdlValueId: pmp_err_q

UPD HdlStmCase@@ls_fsm_cs to ls_fsm_cs
    INS tuple@@ to cases
    tuple
        HdlValueId: WAIT_GNT_ERR
        HdlStmBlock: SEQ
            list: body
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: data_req_o
                        HdlValueInt: 1
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: addr_incr_req_o
                        HdlValueInt: 1
                HdlStmIf
                    HdlValueId: pmp_err_q
                    HdlStmBlock: SEQ
                        list: body
                            HdlOp: ASSIGN
                                list: ops
                                    HdlValueId: ls_fsm_ns
                                    HdlValueId: IDLE
                    list: elifs
                        tuple
                            HdlValueId: data_gnt_i
                            HdlStmBlock: SEQ
                                list: body
                                    HdlOp: ASSIGN
                                        list: ops
                                            HdlValueId: ls_fsm_ns
                                            HdlValueId: WAIT_RVALID_ERR
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS HdlValueId@@WAIT_RVALID_ERR to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@WAIT_RVALID_DONE to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmAssign@@ to 
    UPD HdlValueId@@data_pmp_err_i to pmp_err_d

UPD HdlStmIf@@ to 
    INS HdlOp@@OR_LOG to 
    HdlOp: OR_LOG
        list: ops
            HdlValueId: data_rvalid_i
            HdlValueId: pmp_err_q
    INS HdlStmBlock@@SEQ to 
    INS list@@elifs to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ


CommitId: 36db1041605c4e0c62e5e0612f35331647674ed8
[RTL] - Remove timing loop in LSU
--- a/rtl/ibex_load_store_unit.sv
+++ b/rtl/ibex_load_store_unit.sv
@@ -451,7 +497,7 @@ module ibex_load_store_unit (
   assign load_err_o    = data_or_pmp_err & ~data_we_q;
   assign store_err_o   = data_or_pmp_err &  data_we_q;
 
-  assign busy_o = (ls_fsm_cs == WAIT_RVALID) | (data_req_o == 1'b1);
+  assign busy_o = (ls_fsm_cs != IDLE);
 
   ////////////////
   // Assertions //
ParseResult:
INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: NE
        list: ops
            HdlValueId: ls_fsm_cs
            HdlValueId: IDLE
    HdlValueId: busy_o

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: pmp_err_d
                HdlValueId: pmp_err_q

UPD HdlStmCase@@ls_fsm_cs to ls_fsm_cs
    INS tuple@@ to cases
    tuple
        HdlValueId: WAIT_GNT_ERR
        HdlStmBlock: SEQ
            list: body
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: data_req_o
                        HdlValueInt: 1
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: addr_incr_req_o
                        HdlValueInt: 1
                HdlStmIf
                    HdlValueId: pmp_err_q
                    HdlStmBlock: SEQ
                        list: body
                            HdlOp: ASSIGN
                                list: ops
                                    HdlValueId: ls_fsm_ns
                                    HdlValueId: IDLE
                    list: elifs
                        tuple
                            HdlValueId: data_gnt_i
                            HdlStmBlock: SEQ
                                list: body
                                    HdlOp: ASSIGN
                                        list: ops
                                            HdlValueId: ls_fsm_ns
                                            HdlValueId: WAIT_RVALID_ERR
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS HdlValueId@@WAIT_RVALID_ERR to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@WAIT_RVALID_DONE to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmIf@@ to 
    INS HdlValueId@@data_rvalid_i to 
    INS HdlStmBlock@@SEQ to 
    INS list@@elifs to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: pmp_err_d
                HdlValueId: data_pmp_err_i

UPD HdlStmIf@@ to 
    INS HdlValueId@@data_err_i to 
    INS HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: data_valid_o
                    HdlValueInt: 1
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: data_or_pmp_err
                    HdlValueInt: 1
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: handle_misaligned_d
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: ls_fsm_ns
                    HdlValueId: WAIT_RVALID_ERR
    INS list@@elifs to 

DEL HdlStmAssign@@ from objs
HdlStmAssign
    HdlOp: OR
        list: ops
            HdlOp: EQ
                list: ops
                    HdlValueId: ls_fsm_cs
                    HdlValueId: WAIT_RVALID
            HdlOp: EQ
                list: ops
                    HdlValueId: data_req_o
                    HdlValueInt: 1
    HdlValueId: busy_o


CommitId: ac7436f4910b25a50ee2384d013054a530b72d1f
Align `_Q`/`_q` suffix to coding style guidelines
--- a/rtl/ibex_fetch_fifo.sv
+++ b/rtl/ibex_fetch_fifo.sv
@@ -48,9 +48,9 @@ module ibex_fetch_fifo (
   localparam int unsigned DEPTH = 3; // must be 3 or greater
 
   // index 0 is used for output
-  logic [DEPTH-1:0] [31:0]  addr_n,    addr_int,    addr_Q;
-  logic [DEPTH-1:0] [31:0]  rdata_n,   rdata_int,   rdata_Q;
-  logic [DEPTH-1:0]         valid_n,   valid_int,   valid_Q;
+  logic [DEPTH-1:0] [31:0]  addr_n,    addr_int,    addr_q;
+  logic [DEPTH-1:0] [31:0]  rdata_n,   rdata_int,   rdata_q;
+  logic [DEPTH-1:0]         valid_n,   valid_int,   valid_q;
 
   logic             [31:2]  addr_next;
   logic             [31:0]  rdata, rdata_unaligned;

ParseResult:
UPD HdlIdDef@@addr_Q to addr_q

UPD HdlIdDef@@rdata_Q to rdata_q

UPD HdlIdDef@@valid_Q to valid_q


CommitId: ac7436f4910b25a50ee2384d013054a530b72d1f
Align `_Q`/`_q` suffix to coding style guidelines
--- a/rtl/ibex_fetch_fifo.sv
+++ b/rtl/ibex_fetch_fifo.sv
@@ -64,17 +64,17 @@ module ibex_fetch_fifo (
   /////////////////
 
 
-  assign rdata = valid_Q[0] ? rdata_Q[0] : in_rdata_i;
-  assign valid = valid_Q[0] | in_valid_i;
+  assign rdata = valid_q[0] ? rdata_q[0] : in_rdata_i;
+  assign valid = valid_q[0] | in_valid_i;
 
-  assign rdata_unaligned = valid_Q[1] ? {rdata_Q[1][15:0], rdata[31:16]} :
+  assign rdata_unaligned = valid_q[1] ? {rdata_q[1][15:0], rdata[31:16]} :
                                         {in_rdata_i[15:0], rdata[31:16]};
-  // it is implied that rdata_valid_Q[0] is set
-  assign valid_unaligned = valid_Q[1] | (valid_Q[0] & in_valid_i);
+  // it is implied that rdata_valid_q[0] is set
+  assign valid_unaligned = valid_q[1] | (valid_q[0] & in_valid_i);
 
   assign unaligned_is_compressed    = rdata[17:16] != 2'b11;
   assign aligned_is_compressed      = rdata[ 1: 0] != 2'b11;
-  assign unaligned_is_compressed_st = rdata_Q[0][17:16] != 2'b11;
+  assign unaligned_is_compressed_st = rdata_q[0][17:16] != 2'b11;
 
   ////////////////////////////////////////
   // Instruction aligner (if unaligned) //

ParseResult:
UPD HdlStmAssign@@ to 
    UPD HdlOp@@TERNARY to TERNARY
        UPD HdlOp@@INDEX to INDEX
            UPD HdlValueId@@valid_Q to valid_q
        UPD HdlOp@@INDEX to INDEX
            UPD HdlValueId@@rdata_Q to rdata_q

UPD HdlStmAssign@@ to 
    UPD HdlOp@@OR to OR
        UPD HdlOp@@INDEX to INDEX
            UPD HdlValueId@@valid_Q to valid_q

UPD HdlStmAssign@@ to 
    UPD HdlOp@@TERNARY to TERNARY
        UPD HdlOp@@INDEX to INDEX
            UPD HdlValueId@@valid_Q to valid_q
        UPD HdlOp@@CONCAT to CONCAT
            UPD HdlOp@@INDEX to INDEX
                UPD HdlOp@@INDEX to INDEX
                    UPD HdlValueId@@rdata_Q to rdata_q

UPD HdlStmAssign@@ to 
    UPD HdlOp@@OR to OR
        UPD HdlOp@@INDEX to INDEX
            UPD HdlValueId@@valid_Q to valid_q
        UPD HdlOp@@AND to AND
            UPD HdlOp@@INDEX to INDEX
                UPD HdlValueId@@valid_Q to valid_q

UPD HdlStmAssign@@ to 
    UPD HdlOp@@NE to NE
        UPD HdlOp@@INDEX to INDEX
            UPD HdlOp@@INDEX to INDEX
                UPD HdlValueId@@rdata_Q to rdata_q


CommitId: ac7436f4910b25a50ee2384d013054a530b72d1f
Align `_Q`/`_q` suffix to coding style guidelines
--- a/rtl/ibex_fetch_fifo.sv
+++ b/rtl/ibex_fetch_fifo.sv
@@ -100,7 +100,7 @@ module ibex_fetch_fifo (
     end
   end
 
-  assign out_addr_o = valid_Q[0] ? addr_Q[0] : in_addr_i;
+  assign out_addr_o = valid_q[0] ? addr_q[0] : in_addr_i;
 
   // this valid signal must not depend on signals from outside!
   always_comb begin

ParseResult:
UPD HdlStmAssign@@ to 
    UPD HdlOp@@TERNARY to TERNARY
        UPD HdlOp@@INDEX to INDEX
            UPD HdlValueId@@valid_Q to valid_q
        UPD HdlOp@@INDEX to INDEX
            UPD HdlValueId@@addr_Q to addr_q


CommitId: ac7436f4910b25a50ee2384d013054a530b72d1f
Align `_Q`/`_q` suffix to coding style guidelines
--- a/rtl/ibex_fetch_fifo.sv
+++ b/rtl/ibex_fetch_fifo.sv
@@ -110,10 +110,10 @@ module ibex_fetch_fifo (
       if (unaligned_is_compressed_st) begin
         out_valid_stored_o = 1'b1;
       end else begin
-        out_valid_stored_o = valid_Q[1];
+        out_valid_stored_o = valid_q[1];
       end
     end else begin
-      out_valid_stored_o = valid_Q[0];
+      out_valid_stored_o = valid_q[0];
     end
   end
 

ParseResult:
UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@INDEX to INDEX
                UPD HdlValueId@@valid_Q to valid_q

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@INDEX to INDEX
                UPD HdlValueId@@valid_Q to valid_q


CommitId: ac7436f4910b25a50ee2384d013054a530b72d1f
Align `_Q`/`_q` suffix to coding style guidelines
--- a/rtl/ibex_fetch_fifo.sv
+++ b/rtl/ibex_fetch_fifo.sv
@@ -125,19 +125,19 @@ module ibex_fetch_fifo (
   // we accept data as long as our fifo is not full
   // we don't care about clear here as the data will be received one cycle
   // later anyway
-  assign in_ready_o = ~valid_Q[DEPTH-2];
+  assign in_ready_o = ~valid_q[DEPTH-2];
 
   /////////////////////
   // FIFO management //
   /////////////////////
 
   always_comb begin
-    addr_int    = addr_Q;
-    rdata_int   = rdata_Q;
-    valid_int   = valid_Q;
+    addr_int    = addr_q;
+    rdata_int   = rdata_q;
+    valid_int   = valid_q;
     if (in_valid_i) begin
       for (int j = 0; j < DEPTH; j++) begin
-        if (!valid_Q[j]) begin
+        if (!valid_q[j]) begin
           addr_int[j]  = in_addr_i;
           rdata_int[j] = in_rdata_i;
           valid_int[j] = 1'b1;

ParseResult:
UPD HdlStmAssign@@ to 
    UPD HdlOp@@NEG to NEG
        UPD HdlOp@@INDEX to INDEX
            UPD HdlValueId@@valid_Q to valid_q

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@addr_Q to addr_q
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@rdata_Q to rdata_q
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@valid_Q to valid_q

UPD HdlStmIf@@ to 
    UPD HdlOp@@NEG_LOG to NEG_LOG
        UPD HdlOp@@INDEX to INDEX
            UPD HdlValueId@@valid_Q to valid_q


CommitId: ac7436f4910b25a50ee2384d013054a530b72d1f
Align `_Q`/`_q` suffix to coding style guidelines
--- a/rtl/ibex_fetch_fifo.sv
+++ b/rtl/ibex_fetch_fifo.sv
@@ -184,18 +184,18 @@ module ibex_fetch_fifo (
 
   always_ff @(posedge clk_i, negedge rst_ni) begin
     if (!rst_ni) begin
-      addr_Q    <= '{default: '0};
-      rdata_Q   <= '{default: '0};
-      valid_Q   <= '0;
+      addr_q    <= '{default: '0};
+      rdata_q   <= '{default: '0};
+      valid_q   <= '0;
     end else begin
       // on a clear signal from outside we invalidate the content of the FIFO
       // completely and start from an empty state
       if (clear_i) begin
-        valid_Q   <= '0;
+        valid_q   <= '0;
       end else begin
-        addr_Q    <= addr_n;
-        rdata_Q   <= rdata_n;
-        valid_Q   <= valid_n;
+        addr_q    <= addr_n;
+        rdata_q   <= rdata_n;
+        valid_q   <= valid_n;
       end
     end
   end

ParseResult:
UPD HdlStmAssign@@ to 
    UPD HdlValueId@@addr_Q to addr_q

UPD HdlStmAssign@@ to 
    UPD HdlValueId@@rdata_Q to rdata_q

UPD HdlStmAssign@@ to 
    UPD HdlValueId@@valid_Q to valid_q

UPD HdlStmAssign@@ to 
    UPD HdlValueId@@valid_Q to valid_q

UPD HdlStmAssign@@ to 
    UPD HdlValueId@@addr_Q to addr_q

UPD HdlStmAssign@@ to 
    UPD HdlValueId@@rdata_Q to rdata_q

UPD HdlStmAssign@@ to 
    UPD HdlValueId@@valid_Q to valid_q


CommitId: a7f344b02ac9a63d36633492d67ea6d3cca5b36e
Avoid linting errors
--- a/rtl/ibex_decoder.sv
+++ b/rtl/ibex_decoder.sv
@@ -137,11 +137,11 @@ module ibex_decoder #(
   ////////////////////
   // Register check //
   ////////////////////
-  if (RV32E) begin
-    assign illegal_reg_rv32e = ((regfile_raddr_a_o[4] && (alu_op_a_mux_sel_o == OP_A_REG_A)) ||
-                                (regfile_raddr_b_o[4] && (alu_op_b_mux_sel_o == OP_B_REG_B)) ||
-                                (regfile_waddr_o[4] & regfile_we));
-  end else begin
+  if (RV32E) begin : gen_rv32e_reg_check_active
+    assign illegal_reg_rv32e = ((regfile_raddr_a_o[4] & (alu_op_a_mux_sel_o == OP_A_REG_A)) |
+                                (regfile_raddr_b_o[4] & (alu_op_b_mux_sel_o == OP_B_REG_B)) |
+                                (regfile_waddr_o[4]   & regfile_we));
+  end else begin : gen_rv32e_reg_check_inactive
     assign illegal_reg_rv32e = 1'b0;
   end
 

ParseResult:
UPD HdlStmAssign@@ to 
    UPD HdlOp@@OR_LOG to OR
    UPD HdlOp@@OR_LOG to OR_LOG
        UPD HdlOp@@OR_LOG to OR
        UPD HdlOp@@OR_LOG to OR_LOG
            UPD HdlOp@@AND_LOG to AND
            UPD HdlOp@@AND_LOG to AND


CommitId: a7f344b02ac9a63d36633492d67ea6d3cca5b36e
Avoid linting errors
--- a/rtl/ibex_decoder.sv
+++ b/rtl/ibex_decoder.sv
@@ -529,7 +529,7 @@ module ibex_decoder #(
           endcase
 
           // rs1 and rd must be 0
-          if (instr[`REG_S1] || instr[`REG_D]) begin
+          if (instr[`REG_S1] != 5'b0 || instr[`REG_D] != 5'b0) begin
             illegal_insn = 1'b1;
           end
         end else begin
ParseResult:
UPD HdlStmProcess@@ to 
    INS HdlStmProcessTriggerConstrain@@COMB to 

UPD HdlStmCase@@opcode to opcode
    INS HdlStmCaseType@@CASE to opcode
    INS HdlValueId@@opcode to opcode
    INS HdlStmCaseUniqConstrain@@UNIQUE to opcode

UPD HdlStmIf@@ to 
    UPD HdlOp@@OR_LOG to OR_LOG
        INS HdlOp@@NE to ops
        INS HdlOp@@NE to ops
        UPD HdlOp@@NE to NE
            INS list@@ops to NE
            INS HdlValueInt@@0 to ops
        UPD HdlOp@@NE to NE
            INS list@@ops to NE
            INS HdlValueInt@@0 to ops

UPD HdlStmIf@@ to 
    UPD HdlOp@@OR_LOG to OR_LOG
        MOV HdlOp@@INDEX to ops
        HdlOp: INDEX
            list: ops
                HdlValueId: instr
                HdlOp: DOWNTO
                    list: ops
                        HdlValueInt: 19
                        HdlValueInt: 15
        MOV HdlOp@@INDEX to ops
        HdlOp: INDEX
            list: ops
                HdlValueId: instr
                HdlOp: DOWNTO
                    list: ops
                        HdlValueInt: 11
                        HdlValueInt: 07

UPD HdlStmCase@@opcode to opcode
    DEL HdlStmCaseType@@CASE from opcode
    DEL HdlValueId@@opcode from opcode
    DEL HdlStmCaseUniqConstrain@@UNIQUE from opcode

UPD HdlStmProcess@@ to 
    DEL HdlStmProcessTriggerConstrain@@COMB from 


CommitId: 2c75c2b2ec90bebb756386e1360810474323c1ad
Update lowrisc_ip to lowRISC/opentitan@1ae03937f
--- a/vendor/lowrisc_ip/ip/prim/rtl/prim_secded_22_16_enc.sv
+++ b/vendor/lowrisc_ip/ip/prim/rtl/prim_secded_22_16_enc.sv
@@ -12,12 +12,12 @@ module prim_secded_22_16_enc (
 
   always_comb begin : p_encode
     out = 22'(in);
-    out[16] = ^(out & 22'h00C5C6);
-    out[17] = ^(out & 22'h003317);
-    out[18] = ^(out & 22'h009E2C);
-    out[19] = ^(out & 22'h0031E9);
-    out[20] = ^(out & 22'h00CA71);
-    out[21] = ^(out & 22'h006C9A);
+    out[16] = ^(out & 22'h009F41);
+    out[17] = ^(out & 22'h007A34);
+    out[18] = ^(out & 22'h0029CD);
+    out[19] = ^(out & 22'h00C0AF);
+    out[20] = ^(out & 22'h0074D2);
+    out[21] = ^(out & 22'h00873A);
   end
 
 endmodule : prim_secded_22_16_enc
ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@XOR_UNARY to XOR_UNARY
                UPD HdlOp@@AND to AND
                    UPD HdlValueInt@@00c5c6 to 009f41
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@XOR_UNARY to XOR_UNARY
                UPD HdlOp@@AND to AND
                    UPD HdlValueInt@@003317 to 007a34
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@XOR_UNARY to XOR_UNARY
                UPD HdlOp@@AND to AND
                    UPD HdlValueInt@@009e2c to 0029cd
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@XOR_UNARY to XOR_UNARY
                UPD HdlOp@@AND to AND
                    UPD HdlValueInt@@0031e9 to 00c0af
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@XOR_UNARY to XOR_UNARY
                UPD HdlOp@@AND to AND
                    UPD HdlValueInt@@00ca71 to 0074d2
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@XOR_UNARY to XOR_UNARY
                UPD HdlOp@@AND to AND
                    UPD HdlValueInt@@006c9a to 00873a


CommitId: 023b7b6856269296a481c0f8e7c21575878b4fe1
[RTL/Tracer] Fix compressed jump RD write (#416)
--- a/rtl/ibex_tracer.sv
+++ b/rtl/ibex_tracer.sv
@@ -463,7 +463,13 @@ module ibex_tracer (
 
   function void decode_cr_insn(input string mnemonic);
     if (rvfi_rs2_addr == 5'b0) begin
-      data_accessed = RS1;
+      if (rvfi_insn[12] == 1'b1) begin
+        // C.JALR
+        data_accessed = RS1 | RD;
+      end else begin
+        // C.JR
+        data_accessed = RS1;
+      end
       decoded_str = $sformatf("%s\tx%0d", mnemonic, rvfi_rs1_addr);
     end else begin
       data_accessed = RS1 | RS2 | RD; // RS1 == RD

ParseResult:
INS HdlStmIf@@ to body

UPD HdlStmIf@@ to 
    INS HdlOp@@EQ to 
    HdlOp: EQ
        list: ops
            HdlOp: INDEX
                list: ops
                    HdlValueId: rvfi_insn
                    HdlValueInt: 12
            HdlValueInt: 1
    INS HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: data_accessed
                    HdlOp: OR
                        list: ops
                            HdlValueId: RS1
                            HdlValueId: RD
    INS list@@elifs to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: data_accessed
                HdlValueId: RS1


CommitId: 023b7b6856269296a481c0f8e7c21575878b4fe1
[RTL/Tracer] Fix compressed jump RD write (#416)
--- a/rtl/ibex_tracer.sv
+++ b/rtl/ibex_tracer.sv
@@ -549,6 +555,10 @@ module ibex_tracer (
   endfunction
 
   function void decode_cj_insn(input string mnemonic);
+    if (rvfi_insn[15:13] == 3'b001) begin
+      // C.JAL
+      data_accessed = RD;
+    end
     decoded_str = $sformatf("%s\t%0x", mnemonic, rvfi_pc_wdata);
   endfunction
 
ParseResult:
INS HdlStmIf@@ to body
HdlStmIf
    HdlOp: EQ
        list: ops
            HdlOp: INDEX
                list: ops
                    HdlValueId: rvfi_insn
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 15
                            HdlValueInt: 13
            HdlValueInt: 001
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: data_accessed
                    HdlValueId: RD
    list: elifs


CommitId: 12b39476c0c6bb16dc0d43057730f263836dac95
[rtl] Add speculative branch signal
--- a/rtl/ibex_prefetch_buffer.sv
+++ b/rtl/ibex_prefetch_buffer.sv
@@ -16,6 +16,7 @@ module ibex_prefetch_buffer (
     input  logic        req_i,
 
     input  logic        branch_i,
+    input  logic        branch_spec_i,
     input  logic [31:0] addr_i,
 
 

ParseResult:
INS HdlIdDef@@branch_spec_i to ports
HdlIdDef: branch_spec_i
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: IN


CommitId: 12b39476c0c6bb16dc0d43057730f263836dac95
[rtl] Add speculative branch signal
--- a/rtl/ibex_prefetch_buffer.sv
+++ b/rtl/ibex_prefetch_buffer.sv
@@ -42,6 +43,7 @@ module ibex_prefetch_buffer (
 
   localparam int unsigned NUM_REQS  = 2;
 
+  logic                branch_suppress;
   logic                valid_new_req, valid_req;
   logic                valid_req_d, valid_req_q;
   logic                discard_req_d, discard_req_q;

ParseResult:
INS HdlIdDef@@branch_suppress to objs
HdlIdDef: branch_suppress
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL


CommitId: 12b39476c0c6bb16dc0d43057730f263836dac95
[rtl] Add speculative branch signal
--- a/rtl/ibex_prefetch_buffer.sv
+++ b/rtl/ibex_prefetch_buffer.sv
@@ -107,8 +109,13 @@ module ibex_prefetch_buffer (
   // Requests //
   //////////////
 
+  // Suppress a new request on a not-taken branch (as the external address will be incorrect)
+  assign branch_suppress = branch_spec_i & ~branch_i;
+
   // Make a new request any time there is space in the FIFO, and space in the request queue
-  assign valid_new_req = req_i & (fifo_ready | branch_i) & ~rdata_outstanding_q[NUM_REQS-1];
+  assign valid_new_req = ~branch_suppress & req_i & (fifo_ready | branch_i) &
+                         ~rdata_outstanding_q[NUM_REQS-1];
+
   assign valid_req = valid_req_q | valid_new_req;
 
   // If a request address triggers a PMP error, the external bus request is suppressed. We might

ParseResult:
INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: AND
        list: ops
            HdlValueId: branch_spec_i
            HdlOp: NEG
                list: ops
                    HdlValueId: branch_i
    HdlValueId: branch_suppress

UPD HdlStmAssign@@ to 
    UPD HdlOp@@AND to AND
        UPD HdlOp@@AND to AND
            INS HdlOp@@AND to ops
            UPD HdlOp@@AND to AND
                INS list@@ops to AND
                INS HdlOp@@NEG to ops
                HdlOp: NEG
                    list: ops
                        HdlValueId: branch_suppress

UPD HdlStmAssign@@ to 
    UPD HdlOp@@AND to AND
        UPD HdlOp@@AND to AND
            MOV HdlValueId@@req_i to ops
            HdlValueId: req_i


CommitId: 12b39476c0c6bb16dc0d43057730f263836dac95
[rtl] Add speculative branch signal
--- a/rtl/ibex_prefetch_buffer.sv
+++ b/rtl/ibex_prefetch_buffer.sv
@@ -171,9 +178,9 @@ module ibex_prefetch_buffer (
   end
 
   // Address mux
-  assign instr_addr = valid_req_q ? stored_addr_q :
-                      branch_i    ? addr_i :
-                                    fetch_addr_q;
+  assign instr_addr = valid_req_q   ? stored_addr_q :
+                      branch_spec_i ? addr_i :
+                                      fetch_addr_q;
 
   assign instr_addr_w_aligned = {instr_addr[31:2], 2'b00};
 
ParseResult:
UPD HdlStmAssign@@ to 
    UPD HdlOp@@TERNARY to TERNARY
        UPD HdlOp@@TERNARY to TERNARY
            UPD HdlValueId@@branch_i to branch_spec_i


CommitId: d059979af65601363ca92160f53c1ba157c2bbbd
RVFI based on core state (#151, fix #147)
--- a/rtl/ibex_if_stage.sv
+++ b/rtl/ibex_if_stage.sv
@@ -77,7 +77,6 @@ module ibex_if_stage #(
 
     // pipeline stall
     input  logic                      id_in_ready_i,            // ID stage is ready for new instr
-    output logic                      if_id_pipe_reg_we_o,      // IF-ID pipeline reg write enable
 
     // misc signals
     output logic                      if_busy_o,                // IF stage is busy fetching instr

ParseResult:
UPD HdlIdDef@@if_id_pipe_reg_we_o to if_id_pipe_reg_we

MOV HdlIdDef@@if_id_pipe_reg_we_o to ports
HdlIdDef: if_id_pipe_reg_we_o
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: OUT

UPD HdlIdDef@@if_id_pipe_reg_we_o to if_id_pipe_reg_we_o
    UPD HdlDirection@@OUT to INTERNAL


CommitId: d059979af65601363ca92160f53c1ba157c2bbbd
RVFI based on core state (#151, fix #147)
--- a/rtl/ibex_if_stage.sv
+++ b/rtl/ibex_if_stage.sv
@@ -193,7 +194,7 @@ module ibex_if_stage #(
       if (fetch_valid) begin
         have_instr = 1'b1;
 
-        if (req_i && if_id_pipe_reg_we_o) begin
+        if (req_i && if_id_pipe_reg_we) begin
           fetch_ready      = 1'b1;
           offset_in_init_d = 1'b0;
         end

ParseResult:
UPD HdlStmIf@@ to 
    UPD HdlOp@@AND_LOG to AND_LOG
        UPD HdlValueId@@if_id_pipe_reg_we_o to if_id_pipe_reg_we


CommitId: d059979af65601363ca92160f53c1ba157c2bbbd
RVFI based on core state (#151, fix #147)
--- a/rtl/ibex_if_stage.sv
+++ b/rtl/ibex_if_stage.sv
@@ -231,7 +232,7 @@ module ibex_if_stage #(
   );
 
   // IF-ID pipeline registers, frozen when the ID stage is stalled
-  assign if_id_pipe_reg_we_o = have_instr & id_in_ready_i;
+  assign if_id_pipe_reg_we = have_instr & id_in_ready_i;
 
   always_ff @(posedge clk_i or negedge rst_ni) begin : if_id_pipeline_regs
     if (!rst_ni) begin

ParseResult:
UPD HdlStmAssign@@ to 
    UPD HdlValueId@@if_id_pipe_reg_we_o to if_id_pipe_reg_we


CommitId: d059979af65601363ca92160f53c1ba157c2bbbd
RVFI based on core state (#151, fix #147)
--- a/rtl/ibex_if_stage.sv
+++ b/rtl/ibex_if_stage.sv
@@ -243,8 +244,8 @@ module ibex_if_stage #(
       illegal_c_insn_id_o        <= 1'b0;
       pc_id_o                    <= '0;
     end else begin
-      instr_new_id_o             <= if_id_pipe_reg_we_o;
-      if (if_id_pipe_reg_we_o) begin
+      instr_new_id_o             <= if_id_pipe_reg_we;
+      if (if_id_pipe_reg_we) begin
         instr_valid_id_o         <= 1'b1;
         instr_rdata_id_o         <= instr_decompressed;
         instr_rdata_c_id_o       <= fetch_rdata[15:0];
ParseResult:
UPD HdlStmAssign@@ to 
    UPD HdlValueId@@if_id_pipe_reg_we_o to if_id_pipe_reg_we

UPD HdlStmIf@@ to 
    UPD HdlValueId@@if_id_pipe_reg_we_o to if_id_pipe_reg_we


CommitId: 328aabb54854c799a45e280c0a6a5d6640ef1905
[RTL] Only restore from mstack in nmi mode
--- a/rtl/ibex_controller.sv
+++ b/rtl/ibex_controller.sv
@@ -59,6 +59,7 @@ module ibex_controller (
     input  logic [14:0]           csr_mfip_i,            // fast interrupt pending
     input  logic                  irq_pending_i,         // interrupt request pending
     input  logic                  irq_nm_i,              // non-maskeable interrupt
+    output logic                  nmi_mode_o,            // core executing NMI handler
 
     // debug signals
     input  logic                  debug_req_i,

ParseResult:
INS HdlIdDef@@nmi_mode_o to ports
HdlIdDef: nmi_mode_o
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: OUT


CommitId: 328aabb54854c799a45e280c0a6a5d6640ef1905
[RTL] Only restore from mstack in nmi mode
--- a/rtl/ibex_controller.sv
+++ b/rtl/ibex_controller.sv
@@ -592,6 +593,9 @@ module ibex_controller (
   // signal to CSR when in debug mode
   assign debug_mode_o = debug_mode_q;
 
+  // signal to CSR when in an NMI handler (for nested exception handling)
+  assign nmi_mode_o = nmi_mode_q;
+
   ///////////////////
   // Stall control //
   ///////////////////
ParseResult:
INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlValueId: nmi_mode_q
    HdlValueId: nmi_mode_o


CommitId: e5cf0c0fcfd32b860c7dc6f4626ea38948c36e53
Error synthesis in Vivado
--- a/rtl/ibex_ex_block.sv
+++ b/rtl/ibex_ex_block.sv
@@ -10,7 +10,7 @@
  */
 module ibex_ex_block #(
     parameter bit    RV32M                    = 1,
-    parameter string MultiplierImplementation = "fast"
+    parameter        MultiplierImplementation = "fast"
 ) (
     input  logic              clk_i,
     input  logic              rst_ni,
ParseResult:
UPD HdlIdDef@@MultiplierImplementation to MultiplierImplementation
    DEL HdlValueId@@string from MultiplierImplementation


CommitId: 371a211be7cda85c639c912f4cd160374f60d78d
Fix bugs introduced in the last two commits
--- a/prefetch_buffer.sv
+++ b/prefetch_buffer.sv
@@ -72,7 +72,7 @@ module riscv_fetch_fifo
 
   assign out_valid_o = (rdata_valid_Q[0] || (addr_valid_Q[0] && in_rdata_valid_i));
 
-  assign out_unaligned_rdata_o = (rdata_valid_Q[1]) ? {rdata_Q[1][15:0], rdata_Q[0][31:16]} : {in_rdata_i[15:0], rdata_Q[0][31:16]};
+  assign out_unaligned_rdata_o = (rdata_valid_Q[1]) ? {rdata_Q[1][15:0], out_rdata_o[31:16]} : {in_rdata_i[15:0], out_rdata_o[31:16]};
   // it is implied that rdata_valid_Q[0] is set
   assign out_unaligned_valid_o = (rdata_valid_Q[1] || (addr_valid_Q[1] && in_rdata_valid_i));
 
ParseResult:
UPD HdlStmAssign@@ to 
    UPD HdlOp@@TERNARY to TERNARY
        UPD HdlOp@@CONCAT to CONCAT
            UPD HdlOp@@INDEX to INDEX
                UPD HdlOp@@INDEX to INDEX
                    UPD HdlValueId@@rdata_Q to out_rdata_o
                    MOV HdlValueId@@rdata_Q to ops
                    HdlValueId: rdata_Q
                    DEL HdlValueInt@@0 from ops
                    DEL list@@ops from INDEX
                DEL HdlOp@@INDEX from ops
        UPD HdlOp@@CONCAT to CONCAT
            UPD HdlOp@@INDEX to INDEX
                UPD HdlOp@@INDEX to INDEX
                    UPD HdlValueId@@rdata_Q to out_rdata_o
                    MOV HdlValueId@@rdata_Q to ops
                    HdlValueId: rdata_Q
                    DEL HdlValueInt@@0 from ops
                    DEL list@@ops from INDEX
                DEL HdlOp@@INDEX from ops


CommitId: 44b033cf8bf858e893080fe62b452791fdd3bd4d
[rtl] Add support for instruction fetch errors
--- a/rtl/ibex_controller.sv
+++ b/rtl/ibex_controller.sv
@@ -45,6 +45,8 @@ module ibex_controller (
     input  logic [31:0]           instr_i,               // instr from IF-ID reg, for mtval
     input  logic [15:0]           instr_compressed_i,    // instr from IF-ID reg, for mtval
     input  logic                  instr_is_compressed_i, // instr from IF-ID reg is compressed
+    input  logic                  instr_fetch_err_i,     // instr from IF-ID reg has error
+    input  logic [31:0]           pc_id_i,               // instr from IF-ID reg address
 
     // to IF-ID pipeline stage
     output logic                  instr_valid_clear_o,   // kill instr in IF-ID reg

ParseResult:
INS HdlIdDef@@instr_fetch_err_i to ports
HdlIdDef: instr_fetch_err_i
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: IN

INS HdlIdDef@@pc_id_i to ports
HdlIdDef: pc_id_i
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 31
                    HdlValueInt: 0
    HdlDirection: IN


CommitId: 44b033cf8bf858e893080fe62b452791fdd3bd4d
[rtl] Add support for instruction fetch errors
--- a/rtl/ibex_controller.sv
+++ b/rtl/ibex_controller.sv
@@ -150,7 +152,7 @@ module ibex_controller (
   assign store_err_d = store_err_i;
 
   // exception requests
-  assign exc_req     = ecall_insn_i | ebrk_insn_i | illegal_insn_i;
+  assign exc_req     = ecall_insn_i | ebrk_insn_i | illegal_insn_i | instr_fetch_err_i;
 
   // LSU exception requests
   assign exc_req_lsu = store_err_i | load_err_i;

ParseResult:
UPD HdlStmAssign@@ to 
    MOV HdlOp@@OR to 
    HdlOp: OR
        list: ops
            HdlOp: OR
                list: ops
                    HdlValueId: ecall_insn_i
                    HdlValueId: ebrk_insn_i
            HdlValueId: illegal_insn_i


CommitId: 44b033cf8bf858e893080fe62b452791fdd3bd4d
[rtl] Add support for instruction fetch errors
--- a/rtl/ibex_controller.sv
+++ b/rtl/ibex_controller.sv
@@ -453,7 +455,11 @@ module ibex_controller (
           csr_save_cause_o = 1'b1;
 
           // set exception registers, priorities according to Table 3.7 of Privileged Spec v1.11
-          if (illegal_insn_i) begin
+          if (instr_fetch_err_i) begin
+            exc_cause_o = EXC_CAUSE_INSTR_ACCESS_FAULT;
+            csr_mtval_o = pc_id_i;
+
+          end else if (illegal_insn_i) begin
             exc_cause_o = EXC_CAUSE_ILLEGAL_INSN;
             csr_mtval_o = instr_is_compressed_i ? {16'b0, instr_compressed_i} : instr_i;
 
ParseResult:
UPD HdlStmIf@@ to 
    MOV HdlValueId@@illegal_insn_i to 
    HdlValueId: illegal_insn_i
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: exc_cause_o
                    HdlValueId: EXC_CAUSE_ILLEGAL_INSN
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: csr_mtval_o
                    HdlOp: TERNARY
                        list: ops
                            HdlValueId: instr_is_compressed_i
                            HdlOp: CONCAT
                                list: ops
                                    HdlValueInt: 0
                                    HdlValueId: instr_compressed_i
                            HdlValueId: instr_i


CommitId: f35a407906c5e4ef757cb280d036122938d52e9e
Update lowrisc_ip to lowRISC/opentitan@5cae0cf1
--- a/vendor/lowrisc_ip/prim_generic/rtl/prim_generic_flash.sv
+++ b/vendor/lowrisc_ip/prim_generic/rtl/prim_generic_flash.sv
@@ -6,7 +6,8 @@
 //
 
 module prim_generic_flash #(
-  parameter int PagesPerBank = 256, // pages per bank
+  parameter int InfosPerBank = 1,   // info pages per bank
+  parameter int PagesPerBank = 256, // data pages per bank
   parameter int WordsPerPage = 256, // words per page
   parameter int DataWidth   = 32,   // bits per word
   parameter bit SkipInit = 1,       // this is an option to reset flash to all F's at reset

ParseResult:
INS HdlIdDef@@InfosPerBank to params
HdlIdDef: InfosPerBank
    HdlValueId: int
    HdlValueInt: 1
    HdlDirection: INTERNAL


CommitId: f35a407906c5e4ef757cb280d036122938d52e9e
Update lowrisc_ip to lowRISC/opentitan@5cae0cf1
--- a/vendor/lowrisc_ip/prim_generic/rtl/prim_generic_flash.sv
+++ b/vendor/lowrisc_ip/prim_generic/rtl/prim_generic_flash.sv
@@ -16,17 +17,18 @@ module prim_generic_flash #(
   localparam int WordW = $clog2(WordsPerPage),
   localparam int AddrW = PageW + WordW
 ) (
-  input                        clk_i,
-  input                        rst_ni,
-  input                        rd_i,
-  input                        prog_i,
-  input                        pg_erase_i,
-  input                        bk_erase_i,
-  input [AddrW-1:0]            addr_i,
-  input [DataWidth-1:0]        prog_data_i,
-  output logic                 ack_o,
-  output logic [DataWidth-1:0] rd_data_o,
-  output logic                 init_busy_o
+  input                              clk_i,
+  input                              rst_ni,
+  input                              rd_i,
+  input                              prog_i,
+  input                              pg_erase_i,
+  input                              bk_erase_i,
+  input [AddrW-1:0]                  addr_i,
+  input flash_ctrl_pkg::flash_part_e part_i,
+  input [DataWidth-1:0]              prog_data_i,
+  output logic                       ack_o,
+  output logic [DataWidth-1:0]       rd_data_o,
+  output logic                       init_busy_o
 );
 
   // Emulated flash macro values

ParseResult:
INS HdlIdDef@@part_i to ports
HdlIdDef: part_i
    HdlOp: DOUBLE_COLON
        list: ops
            HdlValueId: flash_ctrl_pkg
            HdlValueId: flash_part_e
    HdlDirection: IN


CommitId: f35a407906c5e4ef757cb280d036122938d52e9e
Update lowrisc_ip to lowRISC/opentitan@5cae0cf1
--- a/vendor/lowrisc_ip/prim_generic/rtl/prim_generic_flash.sv
+++ b/vendor/lowrisc_ip/prim_generic/rtl/prim_generic_flash.sv
@@ -37,6 +39,8 @@ module prim_generic_flash #(
 
   // Locally derived values
   localparam int WordsPerBank  = PagesPerBank * WordsPerPage;
+  localparam int WordsPerInfoBank = InfosPerBank * WordsPerPage;
+  localparam int InfoAddrW = $clog2(WordsPerInfoBank);
 
   typedef enum logic [2:0] {
     StReset    = 'h0,

ParseResult:
INS HdlIdDef@@WordsPerInfoBank to objs
HdlIdDef: WordsPerInfoBank
    HdlValueId: int
    HdlOp: MUL
        list: ops
            HdlValueId: InfosPerBank
            HdlValueId: WordsPerPage
    HdlDirection: INTERNAL

INS HdlIdDef@@InfoAddrW to objs
HdlIdDef: InfoAddrW
    HdlValueId: int
    HdlOp: CALL
        list: ops
            HdlValueId: $clog2
            HdlValueId: WordsPerInfoBank
    HdlDirection: INTERNAL


CommitId: f35a407906c5e4ef757cb280d036122938d52e9e
Update lowrisc_ip to lowRISC/opentitan@5cae0cf1
--- a/vendor/lowrisc_ip/prim_generic/rtl/prim_generic_flash.sv
+++ b/vendor/lowrisc_ip/prim_generic/rtl/prim_generic_flash.sv
@@ -59,18 +63,21 @@ module prim_generic_flash #(
   logic                     mem_req;
   logic                     mem_wr;
   logic [AddrW-1:0]         mem_addr;
+  flash_ctrl_pkg::flash_part_e mem_part;
   logic [DataWidth-1:0]     held_rdata;
   logic [DataWidth-1:0]     held_wdata;
   logic [DataWidth-1:0]     mem_wdata;
   logic                     hold_cmd;
   logic [AddrW-1:0]         held_addr;
+  flash_ctrl_pkg::flash_part_e held_part;
 
   // insert a fifo here to break the large fanout from inputs to memories on reads
   logic rd_q;
   logic [AddrW-1:0] addr_q;
+  flash_ctrl_pkg::flash_part_e part_q;
 
   prim_fifo_sync #(
-      .Width  (AddrW),
+      .Width  (AddrW + $bits(flash_ctrl_pkg::flash_part_e)),
       .Pass   (0),
       .Depth  (2)
   ) i_slice (

ParseResult:
INS HdlIdDef@@mem_part to objs
HdlIdDef: mem_part
    HdlOp: DOUBLE_COLON
        list: ops
            HdlValueId: flash_ctrl_pkg
            HdlValueId: flash_part_e
    HdlDirection: INTERNAL

INS HdlIdDef@@held_part to objs
HdlIdDef: held_part
    HdlOp: DOUBLE_COLON
        list: ops
            HdlValueId: flash_ctrl_pkg
            HdlValueId: flash_part_e
    HdlDirection: INTERNAL

INS HdlIdDef@@part_q to objs
HdlIdDef: part_q
    HdlOp: DOUBLE_COLON
        list: ops
            HdlValueId: flash_ctrl_pkg
            HdlValueId: flash_part_e
    HdlDirection: INTERNAL


CommitId: f35a407906c5e4ef757cb280d036122938d52e9e
Update lowrisc_ip to lowRISC/opentitan@5cae0cf1
--- a/vendor/lowrisc_ip/prim_generic/rtl/prim_generic_flash.sv
+++ b/vendor/lowrisc_ip/prim_generic/rtl/prim_generic_flash.sv
@@ -95,9 +102,11 @@ module prim_generic_flash #(
   always_ff @(posedge clk_i or negedge rst_ni) begin
     if (!rst_ni) begin
       held_addr <= '0;
+      held_part <= flash_ctrl_pkg::DataPart;
       held_wdata <= '0;
     end else if (hold_cmd) begin
       held_addr <= rd_q ? addr_q : addr_i;
+      held_part <= rd_q ? part_q : part_i;
       held_wdata <= prog_data_i;
     end
   end

ParseResult:
INS HdlStmAssign@@ to body
HdlStmAssign
    HdlOp: DOUBLE_COLON
        list: ops
            HdlValueId: flash_ctrl_pkg
            HdlValueId: DataPart
    HdlValueId: held_part

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlOp: TERNARY
        list: ops
            HdlValueId: rd_q
            HdlValueId: part_q
            HdlValueId: part_i
    HdlValueId: held_part


CommitId: f35a407906c5e4ef757cb280d036122938d52e9e
Update lowrisc_ip to lowRISC/opentitan@5cae0cf1
--- a/vendor/lowrisc_ip/prim_generic/rtl/prim_generic_flash.sv
+++ b/vendor/lowrisc_ip/prim_generic/rtl/prim_generic_flash.sv
@@ -185,6 +195,7 @@ module prim_generic_flash #(
           // reads begin immediately
           hold_cmd = 1'b1;
           mem_addr = addr_q;
+          mem_part = part_q;
           mem_req = 1'b1;
           time_cnt_inc = 1'b1;
           st_d = StRead;

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: mem_part
                HdlOp: DOUBLE_COLON
                    list: ops
                        HdlValueId: flash_ctrl_pkg
                        HdlValueId: DataPart

UPD HdlStmCase@@st_q to st_q
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: mem_part
                HdlValueId: held_part
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: mem_part
                HdlValueId: held_part


CommitId: f35a407906c5e4ef757cb280d036122938d52e9e
Update lowrisc_ip to lowRISC/opentitan@5cae0cf1
--- a/vendor/lowrisc_ip/prim_generic/rtl/prim_generic_flash.sv
+++ b/vendor/lowrisc_ip/prim_generic/rtl/prim_generic_flash.sv
@@ -206,6 +217,7 @@ module prim_generic_flash #(
       end
       StRead: begin
         mem_addr = held_addr;
+        mem_part = held_part;
         if (time_cnt < ReadCycles) begin
           mem_req = 1'b1;
           time_cnt_inc = 1'b1;

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: mem_part
                HdlOp: DOUBLE_COLON
                    list: ops
                        HdlValueId: flash_ctrl_pkg
                        HdlValueId: DataPart

UPD HdlStmCase@@st_q to st_q
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: mem_part
                HdlValueId: held_part
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: mem_part
                HdlValueId: held_part

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: mem_part
                HdlValueId: part_q


CommitId: f35a407906c5e4ef757cb280d036122938d52e9e
Update lowrisc_ip to lowRISC/opentitan@5cae0cf1
--- a/vendor/lowrisc_ip/prim_generic/rtl/prim_generic_flash.sv
+++ b/vendor/lowrisc_ip/prim_generic/rtl/prim_generic_flash.sv
@@ -216,6 +228,7 @@ module prim_generic_flash #(
           if (rd_q) begin
             hold_cmd = 1'b1;
             mem_addr = addr_q;
+            mem_part = part_q;
             mem_req = 1'b1;
             time_cnt_set1 = 1'b1;
             st_d = StRead;

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: mem_part
                HdlOp: DOUBLE_COLON
                    list: ops
                        HdlValueId: flash_ctrl_pkg
                        HdlValueId: DataPart

UPD HdlStmCase@@st_q to st_q
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: mem_part
                HdlValueId: held_part
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: mem_part
                HdlValueId: held_part

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: mem_part
                HdlValueId: part_q


CommitId: f35a407906c5e4ef757cb280d036122938d52e9e
Update lowrisc_ip to lowRISC/opentitan@5cae0cf1
--- a/vendor/lowrisc_ip/prim_generic/rtl/prim_generic_flash.sv
+++ b/vendor/lowrisc_ip/prim_generic/rtl/prim_generic_flash.sv
@@ -232,6 +245,7 @@ module prim_generic_flash #(
       end
       StProg: begin
         mem_addr = held_addr;
+        mem_part = held_part;
 
         // if data is already 0, cannot program to 1 without erase
         mem_wdata = held_wdata & held_rdata;

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: mem_part
                HdlOp: DOUBLE_COLON
                    list: ops
                        HdlValueId: flash_ctrl_pkg
                        HdlValueId: DataPart

UPD HdlStmCase@@st_q to st_q
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: mem_part
                HdlValueId: held_part
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: mem_part
                HdlValueId: held_part


CommitId: f35a407906c5e4ef757cb280d036122938d52e9e
Update lowrisc_ip to lowRISC/opentitan@5cae0cf1
--- a/vendor/lowrisc_ip/prim_generic/rtl/prim_generic_flash.sv
+++ b/vendor/lowrisc_ip/prim_generic/rtl/prim_generic_flash.sv
@@ -253,6 +267,7 @@ module prim_generic_flash #(
           mem_wdata = {DataWidth{1'b1}};
 
           mem_addr = held_addr + index_cnt[AddrW-1:0];
+          mem_part = held_part;
           time_cnt_inc = (time_cnt < time_limit_q);
           index_cnt_inc = (index_cnt < index_limit_q);
         end else begin

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: mem_part
                HdlOp: DOUBLE_COLON
                    list: ops
                        HdlValueId: flash_ctrl_pkg
                        HdlValueId: DataPart

UPD HdlStmCase@@st_q to st_q
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: mem_part
                HdlValueId: held_part
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: mem_part
                HdlValueId: held_part


CommitId: b1daf9e44efdf8fc382493b63065c5816fdb7938
Update lowrisc_ip to lowRISC/opentitan@c277e3a8
--- a/vendor/lowrisc_ip/ip/prim/rtl/prim_alert_receiver.sv
+++ b/vendor/lowrisc_ip/ip/prim/rtl/prim_alert_receiver.sv
@@ -78,7 +78,8 @@ module prim_alert_receiver
   typedef enum logic [1:0] {Idle, HsAckWait, Pause0, Pause1} state_e;
   state_e state_d, state_q;
   logic ping_rise;
-  logic ping_tog_d, ping_tog_q, ack_d, ack_q;
+  logic ping_tog, ping_tog_dp, ping_tog_qp, ping_tog_dn, ping_tog_qn;
+  logic ack, ack_dp, ack_qp, ack_dn, ack_qn;
   logic ping_req_d, ping_req_q;
   logic ping_pending_d, ping_pending_q;
 

ParseResult:
INS HdlIdDef@@ping_tog to objs
HdlIdDef: ping_tog
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

INS HdlIdDef@@ping_tog_dp to objs
HdlIdDef: ping_tog_dp
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

INS HdlIdDef@@ping_tog_qp to objs
HdlIdDef: ping_tog_qp
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL


CommitId: b1daf9e44efdf8fc382493b63065c5816fdb7938
Update lowrisc_ip to lowRISC/opentitan@c277e3a8
--- a/vendor/lowrisc_ip/ip/prim/rtl/prim_alert_receiver.sv
+++ b/vendor/lowrisc_ip/ip/prim/rtl/prim_alert_receiver.sv
@@ -86,7 +87,25 @@ module prim_alert_receiver
   // signalling is performed by a level change event on the diff output
   assign ping_req_d  = ping_req_i;
   assign ping_rise  = ping_req_i && !ping_req_q;
-  assign ping_tog_d = (ping_rise) ? ~ping_tog_q : ping_tog_q;
+  assign ping_tog = (ping_rise) ? ~ping_tog_qp : ping_tog_qp;
+
+  // This prevents further tool optimizations of the differential signal.
+  prim_buf u_prim_buf_ack_p (
+    .in_i(ack),
+    .out_o(ack_dp)
+  );
+  prim_buf u_prim_buf_ack_n (
+    .in_i(~ack),
+    .out_o(ack_dn)
+  );
+  prim_buf u_prim_buf_ping_p (
+    .in_i(ping_tog),
+    .out_o(ping_tog_dp)
+  );
+  prim_buf u_prim_buf_ping_n (
+    .in_i(~ping_tog),
+    .out_o(ping_tog_dn)
+  );
 
   // the ping pending signal is used to in the FSM to distinguish whether the
   // incoming handshake shall be treated as an alert or a ping response.

ParseResult:
UPD HdlIdDef@@ping_tog_q to ping_tog_qn

UPD HdlIdDef@@ack_d to ack

UPD HdlIdDef@@ack_q to ack_qp

UPD HdlStmAssign@@ to 
    UPD HdlValueId@@ping_tog_d to ping_tog
    UPD HdlOp@@TERNARY to TERNARY
        UPD HdlValueId@@ping_tog_q to ping_tog_qp
        UPD HdlOp@@NEG to NEG
            UPD HdlValueId@@ping_tog_q to ping_tog_qp


CommitId: b1daf9e44efdf8fc382493b63065c5816fdb7938
Update lowrisc_ip to lowRISC/opentitan@c277e3a8
--- a/vendor/lowrisc_ip/ip/prim/rtl/prim_alert_receiver.sv
+++ b/vendor/lowrisc_ip/ip/prim/rtl/prim_alert_receiver.sv
@@ -96,10 +115,11 @@ module prim_alert_receiver
   assign ping_pending_d = ping_rise | ((~ping_ok_o) & ping_req_i & ping_pending_q);
 
   // diff pair outputs
-  assign alert_rx_o.ack_p  = ack_q;
-  assign alert_rx_o.ack_n  = ~ack_q;
-  assign alert_rx_o.ping_p = ping_tog_q;
-  assign alert_rx_o.ping_n = ~ping_tog_q;
+  assign alert_rx_o.ack_p = ack_qp;
+  assign alert_rx_o.ack_n = ack_qn;
+
+  assign alert_rx_o.ping_p = ping_tog_qp;
+  assign alert_rx_o.ping_n = ping_tog_qn;
 
   // this FSM receives the four phase handshakes from the alert receiver
   // note that the latency of the alert_p/n input diff pair is at least one

ParseResult:
UPD HdlStmAssign@@ to 
    UPD HdlValueId@@ack_q to ack_qp

UPD HdlStmAssign@@ to 
    UPD HdlOp@@NEG to NEG
        UPD HdlValueId@@ack_q to ack_qn
        MOV HdlValueId@@ack_q to ops
        HdlValueId: ack_q
        DEL list@@ops from NEG
    DEL HdlOp@@NEG from 

UPD HdlStmAssign@@ to 
    UPD HdlValueId@@ping_tog_q to ping_tog_qp

UPD HdlStmAssign@@ to 
    UPD HdlOp@@NEG to NEG
        UPD HdlValueId@@ping_tog_q to ping_tog_qn
        MOV HdlValueId@@ping_tog_q to ops
        HdlValueId: ping_tog_q
        DEL list@@ops from NEG
    DEL HdlOp@@NEG from 


CommitId: b1daf9e44efdf8fc382493b63065c5816fdb7938
Update lowrisc_ip to lowRISC/opentitan@c277e3a8
--- a/vendor/lowrisc_ip/ip/prim/rtl/prim_alert_receiver.sv
+++ b/vendor/lowrisc_ip/ip/prim/rtl/prim_alert_receiver.sv
@@ -118,7 +138,7 @@ module prim_alert_receiver
         // wait for handshake to be initiated
         if (alert_level) begin
           state_d = HsAckWait;
-          ack_d   = 1'b1;
+          ack     = 1'b1;
           // signal either an alert or ping received on the output
           if (ping_pending_q) begin
             ping_ok_o = 1'b1;

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@ack_d to ack


CommitId: b1daf9e44efdf8fc382493b63065c5816fdb7938
Update lowrisc_ip to lowRISC/opentitan@c277e3a8
--- a/vendor/lowrisc_ip/ip/prim/rtl/prim_alert_receiver.sv
+++ b/vendor/lowrisc_ip/ip/prim/rtl/prim_alert_receiver.sv
@@ -132,7 +152,7 @@ module prim_alert_receiver
         if (!alert_level) begin
           state_d  = Pause0;
         end else begin
-          ack_d    = 1'b1;
+          ack      = 1'b1;
         end
       end
       // pause cycles between back-to-back handshakes

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@ack_d to ack

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@ack_d to ack


CommitId: b1daf9e44efdf8fc382493b63065c5816fdb7938
Update lowrisc_ip to lowRISC/opentitan@c277e3a8
--- a/vendor/lowrisc_ip/ip/prim/rtl/prim_alert_receiver.sv
+++ b/vendor/lowrisc_ip/ip/prim/rtl/prim_alert_receiver.sv
@@ -144,7 +164,7 @@ module prim_alert_receiver
     // override in case of sigint
     if (alert_sigint) begin
       state_d      = Idle;
-      ack_d        = 1'b0;
+      ack          = 1'b0;
       ping_ok_o    = 1'b0;
       integ_fail_o = 1'b1;
       alert_o      = 1'b0;

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@ack_d to ack

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@ack_d to ack


CommitId: b1daf9e44efdf8fc382493b63065c5816fdb7938
Update lowrisc_ip to lowRISC/opentitan@c277e3a8
--- a/vendor/lowrisc_ip/ip/prim/rtl/prim_alert_receiver.sv
+++ b/vendor/lowrisc_ip/ip/prim/rtl/prim_alert_receiver.sv
@@ -154,14 +174,18 @@ module prim_alert_receiver
   always_ff @(posedge clk_i or negedge rst_ni) begin : p_reg
     if (!rst_ni) begin
       state_q        <= Idle;
-      ack_q          <= 1'b0;
-      ping_tog_q     <= 1'b0;
+      ack_qp         <= 1'b0;
+      ack_qn         <= 1'b1;
+      ping_tog_qp    <= 1'b0;
+      ping_tog_qn    <= 1'b1;
       ping_req_q     <= 1'b0;
       ping_pending_q <= 1'b0;
     end else begin
       state_q        <= state_d;
-      ack_q          <= ack_d;
-      ping_tog_q     <= ping_tog_d;
+      ack_qp         <= ack_dp;
+      ack_qn         <= ack_dn;
+      ping_tog_qp    <= ping_tog_dp;
+      ping_tog_qn    <= ping_tog_dn;
       ping_req_q     <= ping_req_d;
       ping_pending_q <= ping_pending_d;
     end
ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@ack_d to ack

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@ack_d to ack


CommitId: b94961402cab9729cac4b0692a0710a840b108f0
[RTL] Fix ebreak behaviour in U-mode
--- a/rtl/ibex_controller.sv
+++ b/rtl/ibex_controller.sv
@@ -68,6 +68,7 @@ module ibex_controller (
     output logic                  debug_mode_o,
     input  logic                  debug_single_step_i,
     input  logic                  debug_ebreakm_i,
+    input  logic                  debug_ebreaku_i,
 
     output logic                  csr_save_if_o,
     output logic                  csr_save_id_o,

ParseResult:
INS HdlIdDef@@debug_ebreaku_i to ports
HdlIdDef: debug_ebreaku_i
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: IN


CommitId: b94961402cab9729cac4b0692a0710a840b108f0
[RTL] Fix ebreak behaviour in U-mode
--- a/rtl/ibex_controller.sv
+++ b/rtl/ibex_controller.sv
@@ -114,6 +115,7 @@ module ibex_controller (
   logic exc_req_lsu;
   logic special_req;
   logic enter_debug_mode;
+  logic ebreak_into_debug;
   logic handle_irq;
 
   logic [3:0] mfip_id;

ParseResult:
INS HdlIdDef@@ebreak_into_debug to objs
HdlIdDef: ebreak_into_debug
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL


CommitId: b94961402cab9729cac4b0692a0710a840b108f0
[RTL] Fix ebreak behaviour in U-mode
--- a/rtl/ibex_controller.sv
+++ b/rtl/ibex_controller.sv
@@ -197,6 +199,12 @@ module ibex_controller (
   // memory) before it has had anything to single step.
   assign enter_debug_mode = (debug_req_i | (debug_single_step_i & instr_valid_i)) & ~debug_mode_q;
 
+  // Set when an ebreak should enter debug mode rather than jump to exception
+  // handler
+  assign ebreak_into_debug = priv_mode_i == PRIV_LVL_M ? debug_ebreakm_i :
+                             priv_mode_i == PRIV_LVL_U ? debug_ebreaku_i :
+                                                         1'b0;
+
   // interrupts including NMI are ignored while in debug mode [Debug Spec v0.13.2, p.39]
   assign handle_irq       = ~debug_mode_q &
       ((irq_nm_i & ~nmi_mode_q) | (irq_pending_i & csr_mstatus_mie_i));

ParseResult:
INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: TERNARY
        list: ops
            HdlOp: EQ
                list: ops
                    HdlValueId: priv_mode_i
                    HdlValueId: PRIV_LVL_M
            HdlValueId: debug_ebreakm_i
            HdlOp: TERNARY
                list: ops
                    HdlOp: EQ
                        list: ops
                            HdlValueId: priv_mode_i
                            HdlValueId: PRIV_LVL_U
                    HdlValueId: debug_ebreaku_i
                    HdlValueInt: 0
    HdlValueId: ebreak_into_debug


CommitId: b94961402cab9729cac4b0692a0710a840b108f0
[RTL] Fix ebreak behaviour in U-mode
--- a/rtl/ibex_controller.sv
+++ b/rtl/ibex_controller.sv
@@ -449,7 +457,7 @@ module ibex_controller (
           exc_pc_mux_o = EXC_PC_DBD;
 
           // update dcsr and dpc
-          if (debug_ebreakm_i && !debug_mode_q) begin // ebreak with forced entry
+          if (ebreak_into_debug && !debug_mode_q) begin // ebreak with forced entry
 
             // dpc (set to the address of the EBREAK, i.e. set to PC in ID stage)
             csr_save_cause_o = 1'b1;

ParseResult:
UPD HdlStmIf@@ to 
    UPD HdlOp@@AND_LOG to AND_LOG
        UPD HdlValueId@@debug_ebreakm_i to ebreak_into_debug


CommitId: b94961402cab9729cac4b0692a0710a840b108f0
[RTL] Fix ebreak behaviour in U-mode
--- a/rtl/ibex_controller.sv
+++ b/rtl/ibex_controller.sv
@@ -496,7 +504,7 @@ module ibex_controller (
                                                         EXC_CAUSE_ECALL_UMODE;
 
           end else if (ebrk_insn) begin
-            if (debug_mode_q | debug_ebreakm_i) begin
+            if (debug_mode_q | ebreak_into_debug) begin
               /*
                * EBREAK in debug mode re-enters debug mode
                *
ParseResult:
UPD HdlStmIf@@ to 
    UPD HdlOp@@OR to OR
        UPD HdlValueId@@debug_ebreakm_i to ebreak_into_debug


CommitId: 29107c528397289eff549fb7fa41164389eeb3a9
Use unsigned type for part select to avoid linting errors
--- a/rtl/ibex_alu.sv
+++ b/rtl/ibex_alu.sv
@@ -118,8 +118,10 @@ module ibex_alu (
   assign shift_op_a_32 = {shift_arithmetic & shift_op_a[31], shift_op_a};
 
   logic signed [32:0] shift_right_result_signed;
+  logic        [32:0] shift_right_result_ext;
   assign shift_right_result_signed = $signed(shift_op_a_32) >>> shift_amt[4:0];
-  assign shift_right_result        = shift_right_result_signed[31:0];
+  assign shift_right_result_ext    = $unsigned(shift_right_result_signed);
+  assign shift_right_result        = shift_right_result_ext[31:0];
 
   // bit reverse the shift_right_result for left shifts
   for (genvar j = 0; j < 32; j++) begin : gen_rev_shift_right_result
ParseResult:
INS HdlIdDef@@shift_right_result_ext to objs
HdlIdDef: shift_right_result_ext
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 32
                    HdlValueInt: 0
    HdlDirection: INTERNAL

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: CALL
        list: ops
            HdlValueId: $unsigned
            HdlValueId: shift_right_result_signed
    HdlValueId: shift_right_result_ext

UPD HdlStmAssign@@ to 
    UPD HdlOp@@INDEX to INDEX
        UPD HdlValueId@@shift_right_result_signed to shift_right_result_ext


CommitId: 328aabb54854c799a45e280c0a6a5d6640ef1905
[RTL] Only restore from mstack in nmi mode
--- a/rtl/ibex_cs_registers.sv
+++ b/rtl/ibex_cs_registers.sv
@@ -50,6 +50,7 @@ module ibex_cs_registers #(
     input  logic                 irq_external_i,
     input  logic [14:0]          irq_fast_i,
     output logic                 irq_pending_o,          // interupt request pending
+    input  logic                 nmi_mode_i,
     output logic                 csr_msip_o,             // software interrupt pending
     output logic                 csr_mtip_o,             // timer interrupt pending
     output logic                 csr_meip_o,             // external interrupt pending

ParseResult:
INS HdlIdDef@@nmi_mode_i to ports
HdlIdDef: nmi_mode_i
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: IN


CommitId: 328aabb54854c799a45e280c0a6a5d6640ef1905
[RTL] Only restore from mstack in nmi mode
--- a/rtl/ibex_cs_registers.sv
+++ b/rtl/ibex_cs_registers.sv
@@ -580,13 +581,19 @@ module ibex_cs_registers #(
       csr_restore_mret_i: begin // MRET
         priv_lvl_d     = mstatus_q.mpp;
         mstatus_d.mie  = mstatus_q.mpie; // re-enable interrupts
-        // restore previous status for recoverable NMI
-        mstatus_d.mpie = mstack_q.mpie;
-        mstatus_d.mpp  = mstack_q.mpp;
-        mepc_d         = mstack_epc_q;
-        mcause_d       = mstack_cause_q;
-        mstack_d.mpie  = 1'b1;
-        mstack_d.mpp   = PRIV_LVL_U;
+
+        if (nmi_mode_i) begin
+          // when returning from an NMI restore state from mstack CSR
+          mstatus_d.mpie = mstack_q.mpie;
+          mstatus_d.mpp  = mstack_q.mpp;
+          mepc_d         = mstack_epc_q;
+          mcause_d       = mstack_cause_q;
+        end else begin
+          // otherwise just set mstatus.MPIE/MPP
+          // See RISC-V Privileged Specification, version 1.11, Section 3.1.6.1
+          mstatus_d.mpie = 1'b1;
+          mstatus_d.mpp  = PRIV_LVL_U;
+        end
       end // csr_restore_mret_i
 
       default:;
ParseResult:
UPD HdlStmProcess@@ to 
    INS HdlStmProcessTriggerConstrain@@COMB to 

INS HdlStmIf@@ to body

UPD HdlStmIf@@ to 
    INS HdlValueId@@nmi_mode_i to 
    INS HdlStmBlock@@SEQ to 
    INS list@@elifs to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmCase@@{'__class__': 'HdlValueInt', 'base': 2, 'bits': 1, 'val': '1'}  to {'__class__': 'HdlValueInt', 'base': 2, 'bits': 1, 'val': '1'} 
    UPD HdlStmBlock@@SEQ to SEQ
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: mstatus_d
                HdlOp: DOT
                    list: ops
                        HdlValueId: mstack_q
                        HdlValueId: mpie
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: mstatus_d
                HdlOp: DOT
                    list: ops
                        HdlValueId: mstack_q
                        HdlValueId: mpp
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: mepc_d
                HdlValueId: mstack_epc_q
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: mcause_d
                HdlValueId: mstack_cause_q
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: mstack_d
                HdlValueInt: 1
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: mstack_d
                HdlValueId: PRIV_LVL_U
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@mstack_d to mstatus_d
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@mstack_d to mstatus_d

UPD HdlStmProcess@@ to 
    DEL HdlStmProcessTriggerConstrain@@COMB from 


CommitId: d811c04cce8898e69af9a071f96e07d4a1574d50
Disable performance counters by default
--- a/rtl/ibex_core.sv
+++ b/rtl/ibex_core.sv
@@ -29,7 +29,7 @@
  * Top level module of the ibex RISC-V core
  */
 module ibex_core #(
-    parameter int unsigned MHPMCounterNum   = 8,
+    parameter int unsigned MHPMCounterNum   = 0,
     parameter int unsigned MHPMCounterWidth = 40,
     parameter bit RV32E                     = 0,
     parameter bit RV32M                     = 1,
ParseResult:
UPD HdlIdDef@@MHPMCounterNum to MHPMCounterNum
    UPD HdlValueInt@@8 to 0


CommitId: 428d057c4a941681e8ede6625eaf6c76a4b3fa8c
Rename ibex_[tracer_]define to ibex_[tracer_]pkg
--- a/rtl/ibex_int_controller.sv
+++ b/rtl/ibex_int_controller.sv
@@ -38,7 +38,7 @@ module ibex_int_controller (
     input  logic        m_IE_i          // interrupt enable bit from CSR (M mode)
 );
 
-  import ibex_defines::*;
+  import ibex_pkg::*;
 
   typedef enum logic [1:0] { IDLE, IRQ_PENDING, IRQ_DONE} exc_ctrl_e;
   exc_ctrl_e exc_ctrl_ns, exc_ctrl_cs;
ParseResult:
UPD HdlModuleDef@@ibex_int_controller to ibex_int_controller
    UPD HdlImport@@ to 
        UPD HdlValueId@@ibex_defines to ibex_pkg


CommitId: b1daf9e44efdf8fc382493b63065c5816fdb7938
Update lowrisc_ip to lowRISC/opentitan@c277e3a8
--- a/vendor/lowrisc_ip/ip/prim_generic/rtl/prim_generic_flash_bank.sv
+++ b/vendor/lowrisc_ip/ip/prim_generic/rtl/prim_generic_flash_bank.sv
@@ -6,11 +6,13 @@
 //
 
 module prim_generic_flash_bank #(
-  parameter int InfosPerBank  = 1,   // info pages per bank
-  parameter int PagesPerBank  = 256, // data pages per bank
-  parameter int WordsPerPage  = 256, // words per page
-  parameter int DataWidth     = 32,  // bits per word
-  parameter int MetaDataWidth = 12,  // this is a temporary parameter to work around ECC issues
+  parameter int InfosPerBank   = 1,   // info pages per bank
+  parameter int InfoTypes      = 1,   // different info types
+  parameter int InfoTypesWidth = 1,   // different info types
+  parameter int PagesPerBank   = 256, // data pages per bank
+  parameter int WordsPerPage   = 256, // words per page
+  parameter int DataWidth      = 32,  // bits per word
+  parameter int MetaDataWidth  = 12,  // this is a temporary parameter to work around ECC issues
 
   // Derived parameters
   localparam int PageW = $clog2(PagesPerBank),

ParseResult:
INS HdlIdDef@@InfoTypes to params
HdlIdDef: InfoTypes
    HdlValueId: int
    HdlValueInt: 1
    HdlDirection: INTERNAL

INS HdlIdDef@@InfoTypesWidth to params
HdlIdDef: InfoTypesWidth
    HdlValueId: int
    HdlValueInt: 1
    HdlDirection: INTERNAL


CommitId: b1daf9e44efdf8fc382493b63065c5816fdb7938
Update lowrisc_ip to lowRISC/opentitan@c277e3a8
--- a/vendor/lowrisc_ip/ip/prim_generic/rtl/prim_generic_flash_bank.sv
+++ b/vendor/lowrisc_ip/ip/prim_generic/rtl/prim_generic_flash_bank.sv
@@ -26,12 +28,17 @@ module prim_generic_flash_bank #(
   input flash_ctrl_pkg::flash_prog_e prog_type_i,
   input                              pg_erase_i,
   input                              bk_erase_i,
+  input                              erase_suspend_req_i,
+  input                              he_i,
   input [AddrW-1:0]                  addr_i,
   input flash_ctrl_pkg::flash_part_e part_i,
+  input [InfoTypesWidth-1:0]         info_sel_i,
   input [DataWidth-1:0]              prog_data_i,
   output logic                       ack_o,
   output logic                       done_o,
+  output logic                       erase_suspend_done_o,
   output logic [DataWidth-1:0]       rd_data_o,
+  input                              init_i,
   output logic                       init_busy_o,
   input                              flash_power_ready_h_i,
   input                              flash_power_down_h_i

ParseResult:
INS HdlIdDef@@erase_suspend_req_i to ports
HdlIdDef: erase_suspend_req_i
    HdlValueId: wire
    HdlDirection: IN

INS HdlIdDef@@he_i to ports
HdlIdDef: he_i
    HdlValueId: wire
    HdlDirection: IN

INS HdlIdDef@@info_sel_i to ports
HdlIdDef: info_sel_i
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: wire
            HdlOp: DOWNTO
                list: ops
                    HdlOp: SUB
                        list: ops
                            HdlValueId: InfoTypesWidth
                            HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: IN

INS HdlIdDef@@erase_suspend_done_o to ports
HdlIdDef: erase_suspend_done_o
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: OUT

INS HdlIdDef@@init_i to ports
HdlIdDef: init_i
    HdlValueId: wire
    HdlDirection: IN


CommitId: b1daf9e44efdf8fc382493b63065c5816fdb7938
Update lowrisc_ip to lowRISC/opentitan@c277e3a8
--- a/vendor/lowrisc_ip/ip/prim_generic/rtl/prim_generic_flash_bank.sv
+++ b/vendor/lowrisc_ip/ip/prim_generic/rtl/prim_generic_flash_bank.sv
@@ -72,6 +79,7 @@ module prim_generic_flash_bank #(
   logic [DataWidth-1:0]     mem_wdata;
   logic [AddrW-1:0]         mem_addr;
   flash_ctrl_pkg::flash_part_e mem_part;
+  logic [InfoTypesWidth-1:0] mem_info_sel;
 
   // insert a fifo here to break the large fanout from inputs to memories on reads
   typedef struct packed {

ParseResult:
INS HdlIdDef@@mem_info_sel to objs
HdlIdDef: mem_info_sel
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlOp: SUB
                        list: ops
                            HdlValueId: InfoTypesWidth
                            HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: INTERNAL


CommitId: b1daf9e44efdf8fc382493b63065c5816fdb7938
Update lowrisc_ip to lowRISC/opentitan@c277e3a8
--- a/vendor/lowrisc_ip/ip/prim_generic/rtl/prim_generic_flash_bank.sv
+++ b/vendor/lowrisc_ip/ip/prim_generic/rtl/prim_generic_flash_bank.sv
@@ -145,6 +155,7 @@ module prim_generic_flash_bank #(
   assign mem_rd_d = mem_req & ~mem_wr;
   assign mem_addr = cmd_q.addr + index_cnt[AddrW-1:0];
   assign mem_part = cmd_q.part;
+  assign mem_info_sel = cmd_q.info_sel;
 
   always_ff @(posedge clk_i or negedge rst_ni) begin
     if (!rst_ni) st_q <= StReset;

ParseResult:
INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: DOT
        list: ops
            HdlValueId: cmd_q
            HdlValueId: info_sel
    HdlValueId: mem_info_sel


CommitId: b1daf9e44efdf8fc382493b63065c5816fdb7938
Update lowrisc_ip to lowRISC/opentitan@c277e3a8
--- a/vendor/lowrisc_ip/ip/prim_generic/rtl/prim_generic_flash_bank.sv
+++ b/vendor/lowrisc_ip/ip/prim_generic/rtl/prim_generic_flash_bank.sv
@@ -177,11 +188,14 @@ module prim_generic_flash_bank #(
 
   // latch partiton being read since the command fifo is popped early
   flash_ctrl_pkg::flash_part_e rd_part_q;
+  logic [InfoTypesWidth-1:0] info_sel_q;
   always_ff @(posedge clk_i or negedge rst_ni) begin
     if (!rst_ni) begin
       rd_part_q <= flash_ctrl_pkg::FlashPartData;
+      info_sel_q <= '0;
     end else if (mem_rd_d) begin
       rd_part_q <= cmd_q.part;
+      info_sel_q <= cmd_q.info_sel;
     end
   end
 

ParseResult:
INS HdlIdDef@@info_sel_q to objs
HdlIdDef: info_sel_q
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlOp: SUB
                        list: ops
                            HdlValueId: InfoTypesWidth
                            HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: INTERNAL

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: info_sel_q

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlOp: DOT
        list: ops
            HdlValueId: cmd_q
            HdlValueId: info_sel
    HdlValueId: info_sel_q


CommitId: b1daf9e44efdf8fc382493b63065c5816fdb7938
Update lowrisc_ip to lowRISC/opentitan@c277e3a8
--- a/vendor/lowrisc_ip/ip/prim_generic/rtl/prim_generic_flash_bank.sv
+++ b/vendor/lowrisc_ip/ip/prim_generic/rtl/prim_generic_flash_bank.sv
@@ -230,11 +244,12 @@ module prim_generic_flash_bank #(
     init_busy_o      = '0;
     pop_cmd          = '0;
     done_o           = '0;
+    erase_suspend_done_o = '0;
 
     unique case (st_q)
       StReset: begin
         init_busy_o = 1'b1;
-        if (flash_power_ready_h_i && !flash_power_down_h_i) begin
+        if (init_i && flash_power_ready_h_i && !flash_power_down_h_i) begin
           st_d = StInit;
         end
       end

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: erase_suspend_done_o
                HdlValueInt: 0

UPD HdlStmIf@@ to 
    UPD HdlOp@@AND_LOG to AND_LOG
        MOV HdlValueId@@flash_power_ready_h_i to ops
        HdlValueId: flash_power_ready_h_i


CommitId: b1daf9e44efdf8fc382493b63065c5816fdb7938
Update lowrisc_ip to lowRISC/opentitan@c277e3a8
--- a/vendor/lowrisc_ip/ip/prim_generic/rtl/prim_generic_flash_bank.sv
+++ b/vendor/lowrisc_ip/ip/prim_generic/rtl/prim_generic_flash_bank.sv
@@ -315,7 +330,14 @@ module prim_generic_flash_bank #(
 
       StErase: begin
         // Actual erasing of the page
-        if (index_cnt < index_limit_q || time_cnt < time_limit_q) begin
+        if (erase_suspend_req_i) begin
+          st_d = StIdle;
+          pop_cmd = 1'b1;
+          done_o = 1'b1;
+          erase_suspend_done_o = 1'b1;
+          time_cnt_clr = 1'b1;
+          index_cnt_clr = 1'b1;
+        end else if (index_cnt < index_limit_q || time_cnt < time_limit_q) begin
           mem_req = 1'b1;
           mem_wr = 1'b1;
           mem_wdata = {DataWidth{1'b1}};

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: erase_suspend_done_o
                HdlValueInt: 0

UPD HdlStmIf@@ to 
    MOV HdlOp@@OR_LOG to 
    HdlOp: OR_LOG
        list: ops
            HdlOp: LT
                list: ops
                    HdlValueId: index_cnt
                    HdlValueId: index_limit_q
            HdlOp: LT
                list: ops
                    HdlValueId: time_cnt
                    HdlValueId: time_limit_q
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: mem_req
                    HdlValueInt: 1
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: mem_wr
                    HdlValueInt: 1
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: mem_wdata
                    HdlOp: REPL_CONCAT
                        list: ops
                            HdlValueId: DataWidth
                            HdlValueInt: 1
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: time_cnt_inc
                    HdlOp: LT
                        list: ops
                            HdlValueId: time_cnt
                            HdlValueId: time_limit_q
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: index_cnt_inc
                    HdlOp: LT
                        list: ops
                            HdlValueId: index_cnt
                            HdlValueId: index_limit_q
    DEL list@@elifs from 


CommitId: b1daf9e44efdf8fc382493b63065c5816fdb7938
Update lowrisc_ip to lowRISC/opentitan@c277e3a8
--- a/vendor/lowrisc_ip/ip/prim_generic/rtl/prim_generic_flash_bank.sv
+++ b/vendor/lowrisc_ip/ip/prim_generic/rtl/prim_generic_flash_bank.sv
@@ -345,8 +367,10 @@ module prim_generic_flash_bank #(
   localparam int MemWidth = DataWidth - MetaDataWidth;
 
   logic [DataWidth-1:0] rd_data_main, rd_data_info;
-  logic [MemWidth-1:0] rd_nom_data_main, rd_nom_data_info;
-  logic [MetaDataWidth-1:0] rd_meta_data_main, rd_meta_data_info;
+  logic [MemWidth-1:0] rd_nom_data_main;
+  logic [MetaDataWidth-1:0] rd_meta_data_main;
+  logic [InfoTypes-1:0][MemWidth-1:0] rd_nom_data_info;
+  logic [InfoTypes-1:0][MetaDataWidth-1:0] rd_meta_data_info;
 
   prim_ram_1p #(
     .Width(MemWidth),

ParseResult:
MOV HdlIdDef@@rd_nom_data_info to objs
HdlIdDef: rd_nom_data_info
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlOp: SUB
                        list: ops
                            HdlValueId: MemWidth
                            HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: INTERNAL

UPD HdlIdDef@@rd_nom_data_info to rd_nom_data_info
    UPD HdlOp@@PARAMETRIZATION to INDEX
    UPD HdlOp@@PARAMETRIZATION to PARAMETRIZATION
        MOV HdlValueId@@logic to ops
        HdlValueId: logic

UPD HdlIdDef@@rd_meta_data_info to rd_meta_data_info
    UPD HdlOp@@PARAMETRIZATION to INDEX
    UPD HdlOp@@PARAMETRIZATION to PARAMETRIZATION
        MOV HdlValueId@@logic to ops
        HdlValueId: logic

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: erase_suspend_done_o
                HdlValueInt: 0

UPD HdlStmIf@@ to 
    INS HdlValueId@@erase_suspend_req_i to 
    INS HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: st_d
                    HdlValueId: StIdle
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: pop_cmd
                    HdlValueInt: 1
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: done_o
                    HdlValueInt: 1
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: erase_suspend_done_o
                    HdlValueInt: 1
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: time_cnt_clr
                    HdlValueInt: 1
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: index_cnt_clr
                    HdlValueInt: 1
    INS list@@elifs to 
    INS tuple@@ to elifs


CommitId: 409892ec8c4bf47a03b3c2107b79e701b2628bb6
Fix handling of C.MV and C.JR
--- a/rtl/ibex_compressed_decoder.sv
+++ b/rtl/ibex_compressed_decoder.sv
@@ -206,12 +206,14 @@ module ibex_compressed_decoder (
 
           3'b100: begin
             if (instr_i[12] == 1'b0) begin
-              // c.mv -> add rd/rs1, x0, rs2
-              instr_o = {7'b0, instr_i[6:2], 5'b0, 3'b0, instr_i[11:7], {OPCODE_OP}};
-
-              if (instr_i[6:2] == 5'b0) begin
+              if (instr_i[6:2] != 5'b0) begin
+                // c.mv -> add rd/rs1, x0, rs2
+                // (c.mv hints are translated into an add hint)
+                instr_o = {7'b0, instr_i[6:2], 5'b0, 3'b0, instr_i[11:7], {OPCODE_OP}};
+              end else begin
                 // c.jr -> jalr x0, rd/rs1, 0
                 instr_o = {12'b0, instr_i[11:7], 3'b0, 5'b0, {OPCODE_JALR}};
+                if (instr_i[11:7] == 5'b0)  illegal_instr_o = 1'b1;
               end
             end else begin
               if (instr_i[6:2] != 5'b0) begin
ParseResult:
UPD HdlStmProcess@@ to 
    INS HdlStmProcessTriggerConstrain@@COMB to 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '1'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '1'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    INS HdlStmCaseType@@CASE to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '1'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    INS HdlStmCaseUniqConstrain@@UNIQUE to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '1'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 

UPD HdlStmIf@@ to 
    UPD HdlOp@@EQ to NE
    DEL list@@elifs from 

UPD HdlStmIf@@ to 
    INS HdlStmBlock@@SEQ to 
    INS list@@elifs to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: instr_o
                HdlOp: CONCAT
                    list: ops
                        HdlOp: CONCAT
                            list: ops
                                HdlOp: CONCAT
                                    list: ops
                                        HdlOp: CONCAT
                                            list: ops
                                                HdlOp: CONCAT
                                                    list: ops
                                                        HdlValueInt: 0
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlValueId: instr_i
                                                                HdlOp: DOWNTO
                                                                    list: ops
                                                                        HdlValueInt: 6
                                                                        HdlValueInt: 2
                                                HdlValueInt: 0
                                        HdlValueInt: 0
                                HdlOp: INDEX
                                    list: ops
                                        HdlValueId: instr_i
                                        HdlOp: DOWNTO
                                            list: ops
                                                HdlValueInt: 11
                                                HdlValueInt: 7
                        HdlValueId: OPCODE_OP

INS HdlStmIf@@ to body
HdlStmIf
    HdlOp: EQ
        list: ops
            HdlOp: INDEX
                list: ops
                    HdlValueId: instr_i
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 11
                            HdlValueInt: 7
            HdlValueInt: 0
    HdlOp: ASSIGN
        list: ops
            HdlValueId: illegal_instr_o
            HdlValueInt: 1
    list: elifs

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '1'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '1'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    DEL HdlStmCaseType@@CASE from {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '1'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    DEL HdlStmCaseUniqConstrain@@UNIQUE from {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '1'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 

UPD HdlStmProcess@@ to 
    DEL HdlStmProcessTriggerConstrain@@COMB from 


CommitId: 3de95df0609a097183989e5d18269cb464f302e0
Fix decoding of C.ADD and C.EBREAK
--- a/rtl/ibex_compressed_decoder.sv
+++ b/rtl/ibex_compressed_decoder.sv
@@ -214,16 +214,18 @@ module ibex_compressed_decoder (
                 instr_o = {12'b0, instr_i[11:7], 3'b0, 5'b0, {OPCODE_JALR}};
               end
             end else begin
-              // c.add -> add rd, rd, rs2
-              instr_o = {7'b0, instr_i[6:2], instr_i[11:7], 3'b0, instr_i[11:7], {OPCODE_OP}};
-
-              if (instr_i[11:7] == 5'b0) begin
-                // c.ebreak -> ebreak
-                instr_o = {32'h00_10_00_73};
-                if (instr_i[6:2] != 5'b0) illegal_instr_o = 1'b1;
-              end else if (instr_i[6:2] == 5'b0) begin
-                // c.jalr -> jalr x1, rs1, 0
-                instr_o = {12'b0, instr_i[11:7], 3'b000, 5'b00001, {OPCODE_JALR}};
+              if (instr_i[6:2] != 5'b0) begin
+                // c.add -> add rd, rd, rs2
+                // (c.add hints are translated into an add hint)
+                instr_o = {7'b0, instr_i[6:2], instr_i[11:7], 3'b0, instr_i[11:7], {OPCODE_OP}};
+              end else begin
+                if (instr_i[11:7] == 5'b0) begin
+                  // c.ebreak -> ebreak
+                  instr_o = {32'h00_10_00_73};
+                end else begin
+                  // c.jalr -> jalr x1, rs1, 0
+                  instr_o = {12'b0, instr_i[11:7], 3'b000, 5'b00001, {OPCODE_JALR}};
+                end
               end
             end
           end
ParseResult:
UPD HdlStmProcess@@ to 
    INS HdlStmProcessTriggerConstrain@@COMB to 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '1'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '1'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    INS HdlStmCaseType@@CASE to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '1'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    INS HdlStmCaseUniqConstrain@@UNIQUE to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '1'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 

INS HdlStmIf@@ to body

UPD HdlStmIf@@ to 
    MOV HdlOp@@NE to 
    HdlOp: NE
        list: ops
            HdlOp: INDEX
                list: ops
                    HdlValueId: instr_i
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 6
                            HdlValueInt: 2
            HdlValueInt: 0
    DEL HdlOp@@ASSIGN from 
    HdlOp: ASSIGN
        list: ops
            HdlValueId: illegal_instr_o
            HdlValueInt: 1
    DEL list@@elifs from 

UPD HdlStmIf@@ to 
    INS HdlStmBlock@@SEQ to 
    INS list@@elifs to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmIf@@ to 
    UPD list@@elifs to body
    MOV list@@elifs to 
    list: elifs
        tuple
            HdlOp: EQ
                list: ops
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: instr_i
                            HdlOp: DOWNTO
                                list: ops
                                    HdlValueInt: 6
                                    HdlValueInt: 2
                    HdlValueInt: 0
            HdlStmBlock: SEQ
                list: body
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: instr_o
                            HdlOp: CONCAT
                                list: ops
                                    HdlOp: CONCAT
                                        list: ops
                                            HdlOp: CONCAT
                                                list: ops
                                                    HdlOp: CONCAT
                                                        list: ops
                                                            HdlValueInt: 0
                                                            HdlOp: INDEX
                                                                list: ops
                                                                    HdlValueId: instr_i
                                                                    HdlOp: DOWNTO
                                                                        list: ops
                                                                            HdlValueInt: 11
                                                                            HdlValueInt: 7
                                                    HdlValueInt: 000
                                            HdlValueInt: 00001
                                    HdlValueId: OPCODE_JALR
    UPD HdlOp@@EQ to EQ
        UPD HdlOp@@INDEX to INDEX
            UPD HdlOp@@DOWNTO to DOWNTO
                UPD list@@ops to elifs
                MOV list@@ops to DOWNTO
                list: ops
                    HdlValueInt: 6
                    HdlValueInt: 2
                DEL HdlValueInt@@6 from ops
                DEL HdlValueInt@@2 from ops
            DEL HdlValueId@@instr_i from ops
            DEL HdlOp@@DOWNTO from ops
            DEL list@@ops from INDEX
        DEL HdlOp@@INDEX from ops
        DEL HdlValueInt@@0 from ops
        DEL list@@ops from EQ
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: instr_o
                    HdlOp: CONCAT
                        list: ops
                            HdlOp: CONCAT
                                list: ops
                                    HdlOp: CONCAT
                                        list: ops
                                            HdlOp: CONCAT
                                                list: ops
                                                    HdlValueInt: 0
                                                    HdlOp: INDEX
                                                        list: ops
                                                            HdlValueId: instr_i
                                                            HdlOp: DOWNTO
                                                                list: ops
                                                                    HdlValueInt: 11
                                                                    HdlValueInt: 7
                                            HdlValueInt: 000
                                    HdlValueInt: 00001
                            HdlValueId: OPCODE_JALR
    DEL HdlOp@@EQ from 
    DEL tuple@@ from elifs

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: instr_o
                HdlOp: CONCAT
                    list: ops
                        HdlOp: CONCAT
                            list: ops
                                HdlOp: CONCAT
                                    list: ops
                                        HdlOp: CONCAT
                                            list: ops
                                                HdlOp: CONCAT
                                                    list: ops
                                                        HdlValueInt: 0
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlValueId: instr_i
                                                                HdlOp: DOWNTO
                                                                    list: ops
                                                                        HdlValueInt: 6
                                                                        HdlValueInt: 2
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: instr_i
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 11
                                                                HdlValueInt: 7
                                        HdlValueInt: 0
                                HdlOp: INDEX
                                    list: ops
                                        HdlValueId: instr_i
                                        HdlOp: DOWNTO
                                            list: ops
                                                HdlValueInt: 11
                                                HdlValueInt: 7
                        HdlValueId: OPCODE_OP

MOV HdlStmIf@@ to body
HdlStmIf
    HdlOp: EQ
        list: ops
            HdlOp: INDEX
                list: ops
                    HdlValueId: instr_i
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 11
                            HdlValueInt: 7
            HdlValueInt: 0
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: instr_o
                    HdlValueInt: 00100073
            HdlStmIf
                HdlOp: NE
                    list: ops
                        HdlOp: INDEX
                            list: ops
                                HdlValueId: instr_i
                                HdlOp: DOWNTO
                                    list: ops
                                        HdlValueInt: 6
                                        HdlValueInt: 2
                        HdlValueInt: 0
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: illegal_instr_o
                        HdlValueInt: 1
                list: elifs
    list: elifs
        tuple
            HdlOp: EQ
                list: ops
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: instr_i
                            HdlOp: DOWNTO
                                list: ops
                                    HdlValueInt: 6
                                    HdlValueInt: 2
                    HdlValueInt: 0
            HdlStmBlock: SEQ
                list: body
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: instr_o
                            HdlOp: CONCAT
                                list: ops
                                    HdlOp: CONCAT
                                        list: ops
                                            HdlOp: CONCAT
                                                list: ops
                                                    HdlOp: CONCAT
                                                        list: ops
                                                            HdlValueInt: 0
                                                            HdlOp: INDEX
                                                                list: ops
                                                                    HdlValueId: instr_i
                                                                    HdlOp: DOWNTO
                                                                        list: ops
                                                                            HdlValueInt: 11
                                                                            HdlValueInt: 7
                                                    HdlValueInt: 000
                                            HdlValueInt: 00001
                                    HdlValueId: OPCODE_JALR

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '1'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '1'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    DEL HdlStmCaseType@@CASE from {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '1'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    DEL HdlStmCaseUniqConstrain@@UNIQUE from {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '1'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 

DEL HdlStmIf@@ from body

UPD HdlStmProcess@@ to 
    DEL HdlStmProcessTriggerConstrain@@COMB from 


CommitId: 163cd8142ad97ac218d22f8b1de69f0b108dcd4c
[simple-system] always_comb should be always
--- a/examples/simple_system/rtl/ibex_simple_system.sv
+++ b/examples/simple_system/rtl/ibex_simple_system.sv
@@ -119,7 +119,7 @@ module ibex_simple_system (
       #8
       rst_sys_n = 1'b1;
     end
-    always_comb begin
+    always begin
       #1 clk_sys = 1'b0;
       #1 clk_sys = 1'b1;
     end
ParseResult:
UPD HdlStmProcess@@ to 
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlStmProcess
                HdlStmBlock: SEQ
                    list: body
                        HdlStmWait:
                            list: val
                                HdlValueInt: 1
                        HdlOp: ASSIGN
                            list: ops
                                HdlValueId: clk_sys
                                HdlValueInt: 0
            HdlStmProcess
                HdlStmBlock: SEQ
                    list: body
                        HdlStmWait:
                            list: val
                                HdlValueInt: 1
                        HdlOp: ASSIGN
                            list: ops
                                HdlValueId: clk_sys
                                HdlValueInt: 1
    DEL HdlStmProcessTriggerConstrain@@COMB from 

DEL HdlStmProcess@@ from objs


CommitId: 088cd11593c9c3e623ec445c43dd19efcd7178a8
[dbg] Add minimal hardware breakpoint support
--- a/rtl/ibex_core.sv
+++ b/rtl/ibex_core.sv
@@ -19,6 +19,7 @@ module ibex_core #(
     parameter bit          RV32E                    = 1'b0,
     parameter bit          RV32M                    = 1'b1,
     parameter              MultiplierImplementation = "fast",
+    parameter bit          DbgTriggerEn             = 1'b0,
     parameter int unsigned DmHaltAddr               = 32'h1A110800,
     parameter int unsigned DmExceptionAddr          = 32'h1A110808
 ) (

ParseResult:
INS HdlIdDef@@DbgTriggerEn to params
HdlIdDef: DbgTriggerEn
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: bit
    HdlValueInt: 0
    HdlDirection: INTERNAL


CommitId: 892ad8a6213057e20e43f44a2eb70b02d90cce35
[RTL] - Add PMP module
--- a/rtl/ibex_core.sv
+++ b/rtl/ibex_core.sv
@@ -11,6 +11,9 @@
  * Top level module of the ibex RISC-V core
  */
 module ibex_core #(
+    parameter bit          PMPEnable        = 0,
+    parameter int unsigned PMPGranularity   = 0,
+    parameter int unsigned PMPNumRegions    = 4,
     parameter int unsigned MHPMCounterNum   = 0,
     parameter int unsigned MHPMCounterWidth = 40,
     parameter bit RV32E                     = 0,

ParseResult:
INS HdlIdDef@@PMPEnable to params
HdlIdDef: PMPEnable
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: bit
    HdlValueInt: 0
    HdlDirection: INTERNAL

INS HdlIdDef@@PMPGranularity to params
HdlIdDef: PMPGranularity
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: int
            HdlOp: MAP_ASSOCIATION
                list: ops
                    HdlValueId: signed
    HdlValueInt: 0
    HdlDirection: INTERNAL

INS HdlIdDef@@PMPNumRegions to params
HdlIdDef: PMPNumRegions
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: int
            HdlOp: MAP_ASSOCIATION
                list: ops
                    HdlValueId: signed
    HdlValueInt: 4
    HdlDirection: INTERNAL


CommitId: 892ad8a6213057e20e43f44a2eb70b02d90cce35
[RTL] - Add PMP module
--- a/rtl/ibex_core.sv
+++ b/rtl/ibex_core.sv
@@ -546,6 +567,7 @@ module ibex_core #(
       // Core and Cluster ID from outside
       .core_id_i               ( core_id_i              ),
       .cluster_id_i            ( cluster_id_i           ),
+      .priv_mode_o             ( priv_mode              ),
 
       // mtvec
       .csr_mtvec_o             ( csr_mtvec              ),

ParseResult:
INS HdlStmIf@@ to objs
HdlStmIf
    HdlValueId: PMPEnable
    HdlStmBlock: SEQ
        list: body
            HdlIdDef: pmp_req_addr
                HdlOp: INDEX
                    list: ops
                        HdlOp: PARAMETRIZATION
                            list: ops
                                HdlValueId: logic
                                HdlOp: DOWNTO
                                    list: ops
                                        HdlValueInt: 33
                                        HdlValueInt: 0
                        HdlValueId: PMP_NUM_CHAN
                HdlDirection: INTERNAL
            HdlIdDef: pmp_req_type
                HdlOp: INDEX
                    list: ops
                        type
                        HdlValueId: PMP_NUM_CHAN
                HdlDirection: INTERNAL
            HdlStmAssign
                HdlOp: CONCAT
                    list: ops
                        HdlValueInt: 00
                        HdlOp: INDEX
                            list: ops
                                HdlValueId: instr_addr_o
                                HdlOp: DOWNTO
                                    list: ops
                                        HdlValueInt: 31
                                        HdlValueInt: 0
                HdlOp: INDEX
                    list: ops
                        HdlValueId: pmp_req_addr
                        HdlValueId: PMP_I
            HdlStmAssign
                HdlValueId: PMP_ACC_EXEC
                HdlOp: INDEX
                    list: ops
                        HdlValueId: pmp_req_type
                        HdlValueId: PMP_I
            HdlStmAssign
                HdlOp: CONCAT
                    list: ops
                        HdlValueInt: 00
                        HdlOp: INDEX
                            list: ops
                                HdlValueId: data_addr_o
                                HdlOp: DOWNTO
                                    list: ops
                                        HdlValueInt: 31
                                        HdlValueInt: 0
                HdlOp: INDEX
                    list: ops
                        HdlValueId: pmp_req_addr
                        HdlValueId: PMP_D
            HdlStmAssign
                HdlOp: TERNARY
                    list: ops
                        HdlValueId: data_we_o
                        HdlValueId: PMP_ACC_WRITE
                        HdlValueId: PMP_ACC_READ
                HdlOp: INDEX
                    list: ops
                        HdlValueId: pmp_req_type
                        HdlValueId: PMP_D
            HdlCompInst: ibex_pmp-pmp_i
                list: param_map
                    HdlOp: MAP_ASSOCIATION
                        list: ops
                            HdlValueId: PMPGranularity
                            HdlValueId: PMPGranularity
                    HdlOp: MAP_ASSOCIATION
                        list: ops
                            HdlValueId: PMPNumChan
                            HdlValueId: PMP_NUM_CHAN
                    HdlOp: MAP_ASSOCIATION
                        list: ops
                            HdlValueId: PMPNumRegions
                            HdlValueId: PMPNumRegions
                list: port_map
                    HdlOp: MAP_ASSOCIATION
                        list: ops
                            HdlValueId: clk_i
                            HdlValueId: clk
                    HdlOp: MAP_ASSOCIATION
                        list: ops
                            HdlValueId: rst_ni
                            HdlValueId: rst_ni
                    HdlOp: MAP_ASSOCIATION
                        list: ops
                            HdlValueId: csr_pmp_cfg_i
                            HdlValueId: csr_pmp_cfg
                    HdlOp: MAP_ASSOCIATION
                        list: ops
                            HdlValueId: csr_pmp_addr_i
                            HdlValueId: csr_pmp_addr
                    HdlOp: MAP_ASSOCIATION
                        list: ops
                            HdlValueId: priv_mode_i
                            HdlValueId: priv_mode
                    HdlOp: MAP_ASSOCIATION
                        list: ops
                            HdlValueId: pmp_req_addr_i
                            HdlValueId: pmp_req_addr
                    HdlOp: MAP_ASSOCIATION
                        list: ops
                            HdlValueId: pmp_req_type_i
                            HdlValueId: pmp_req_type
                    HdlOp: MAP_ASSOCIATION
                        list: ops
                            HdlValueId: pmp_req_err_o
                            HdlValueId: pmp_req_err
    list: elifs
    HdlStmBlock: SEQ
        list: body
            HdlStmAssign
                HdlValueInt: 0
                HdlOp: INDEX
                    list: ops
                        HdlValueId: pmp_req_err
                        HdlValueId: PMP_I
            HdlStmAssign
                HdlValueInt: 0
                HdlOp: INDEX
                    list: ops
                        HdlValueId: pmp_req_err
                        HdlValueId: PMP_D


CommitId: 892ad8a6213057e20e43f44a2eb70b02d90cce35
[RTL] - Add PMP module
--- a/rtl/ibex_core.sv
+++ b/rtl/ibex_core.sv
@@ -572,6 +594,10 @@ module ibex_core #(
       .csr_mstatus_mie_o       ( csr_mstatus_mie        ),
       .csr_mepc_o              ( csr_mepc               ),
 
+      // PMP
+      .csr_pmp_cfg_o           ( csr_pmp_cfg            ),
+      .csr_pmp_addr_o          ( csr_pmp_addr           ),
+
       // debug
       .csr_depc_o              ( csr_depc               ),
       .debug_cause_i           ( debug_cause            ),

ParseResult:
INS HdlStmIf@@ to objs
HdlStmIf
    HdlValueId: PMPEnable
    HdlStmBlock: SEQ
        list: body
            HdlIdDef: pmp_req_addr
                HdlOp: INDEX
                    list: ops
                        HdlOp: PARAMETRIZATION
                            list: ops
                                HdlValueId: logic
                                HdlOp: DOWNTO
                                    list: ops
                                        HdlValueInt: 33
                                        HdlValueInt: 0
                        HdlValueId: PMP_NUM_CHAN
                HdlDirection: INTERNAL
            HdlIdDef: pmp_req_type
                HdlOp: INDEX
                    list: ops
                        type
                        HdlValueId: PMP_NUM_CHAN
                HdlDirection: INTERNAL
            HdlStmAssign
                HdlOp: CONCAT
                    list: ops
                        HdlValueInt: 00
                        HdlOp: INDEX
                            list: ops
                                HdlValueId: instr_addr_o
                                HdlOp: DOWNTO
                                    list: ops
                                        HdlValueInt: 31
                                        HdlValueInt: 0
                HdlOp: INDEX
                    list: ops
                        HdlValueId: pmp_req_addr
                        HdlValueId: PMP_I
            HdlStmAssign
                HdlValueId: PMP_ACC_EXEC
                HdlOp: INDEX
                    list: ops
                        HdlValueId: pmp_req_type
                        HdlValueId: PMP_I
            HdlStmAssign
                HdlOp: CONCAT
                    list: ops
                        HdlValueInt: 00
                        HdlOp: INDEX
                            list: ops
                                HdlValueId: data_addr_o
                                HdlOp: DOWNTO
                                    list: ops
                                        HdlValueInt: 31
                                        HdlValueInt: 0
                HdlOp: INDEX
                    list: ops
                        HdlValueId: pmp_req_addr
                        HdlValueId: PMP_D
            HdlStmAssign
                HdlOp: TERNARY
                    list: ops
                        HdlValueId: data_we_o
                        HdlValueId: PMP_ACC_WRITE
                        HdlValueId: PMP_ACC_READ
                HdlOp: INDEX
                    list: ops
                        HdlValueId: pmp_req_type
                        HdlValueId: PMP_D
            HdlCompInst: ibex_pmp-pmp_i
                list: param_map
                    HdlOp: MAP_ASSOCIATION
                        list: ops
                            HdlValueId: PMPGranularity
                            HdlValueId: PMPGranularity
                    HdlOp: MAP_ASSOCIATION
                        list: ops
                            HdlValueId: PMPNumChan
                            HdlValueId: PMP_NUM_CHAN
                    HdlOp: MAP_ASSOCIATION
                        list: ops
                            HdlValueId: PMPNumRegions
                            HdlValueId: PMPNumRegions
                list: port_map
                    HdlOp: MAP_ASSOCIATION
                        list: ops
                            HdlValueId: clk_i
                            HdlValueId: clk
                    HdlOp: MAP_ASSOCIATION
                        list: ops
                            HdlValueId: rst_ni
                            HdlValueId: rst_ni
                    HdlOp: MAP_ASSOCIATION
                        list: ops
                            HdlValueId: csr_pmp_cfg_i
                            HdlValueId: csr_pmp_cfg
                    HdlOp: MAP_ASSOCIATION
                        list: ops
                            HdlValueId: csr_pmp_addr_i
                            HdlValueId: csr_pmp_addr
                    HdlOp: MAP_ASSOCIATION
                        list: ops
                            HdlValueId: priv_mode_i
                            HdlValueId: priv_mode
                    HdlOp: MAP_ASSOCIATION
                        list: ops
                            HdlValueId: pmp_req_addr_i
                            HdlValueId: pmp_req_addr
                    HdlOp: MAP_ASSOCIATION
                        list: ops
                            HdlValueId: pmp_req_type_i
                            HdlValueId: pmp_req_type
                    HdlOp: MAP_ASSOCIATION
                        list: ops
                            HdlValueId: pmp_req_err_o
                            HdlValueId: pmp_req_err
    list: elifs
    HdlStmBlock: SEQ
        list: body
            HdlStmAssign
                HdlValueInt: 0
                HdlOp: INDEX
                    list: ops
                        HdlValueId: pmp_req_err
                        HdlValueId: PMP_I
            HdlStmAssign
                HdlValueInt: 0
                HdlOp: INDEX
                    list: ops
                        HdlValueId: pmp_req_err
                        HdlValueId: PMP_D


CommitId: c33525ae804e5c6200bab582f7e5d80da2aebbf9
[RTL LSU] Change unaligned error behaviour
--- a/rtl/ibex_load_store_unit.sv
+++ b/rtl/ibex_load_store_unit.sv
@@ -53,14 +53,16 @@ module ibex_load_store_unit (
 
   logic [31:0]  data_addr;
   logic [31:0]  data_addr_w_aligned;
-  logic [31:0]  addr_last_q, addr_last_d;
+  logic [31:0]  addr_last_q;
 
-  logic         data_update;
-  logic [31:0]  rdata_q, rdata_d;
-  logic [1:0]   rdata_offset_q, rdata_offset_d;
-  logic [1:0]   data_type_q, data_type_d;
-  logic         data_sign_ext_q, data_sign_ext_d;
-  logic         data_we_q, data_we_d;
+  logic         addr_update;
+  logic         ctrl_update;
+  logic         rdata_update;
+  logic [31:8]  rdata_q;
+  logic [1:0]   rdata_offset_q;
+  logic [1:0]   data_type_q;
+  logic         data_sign_ext_q;
+  logic         data_we_q;
 
   logic [1:0]   wdata_offset;   // mux control for data to be written to memory
 

ParseResult:
MOV HdlIdDef@@data_we_d to objs
HdlIdDef: data_we_d
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

MOV HdlIdDef@@data_sign_ext_d to objs
HdlIdDef: data_sign_ext_d
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

UPD HdlIdDef@@data_we_d to addr_update

UPD HdlIdDef@@data_update to ctrl_update

UPD HdlIdDef@@data_sign_ext_d to rdata_update

INS HdlIdDef@@rdata_q to objs
HdlIdDef: rdata_q
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 31
                    HdlValueInt: 8
    HdlDirection: INTERNAL

DEL HdlIdDef@@addr_last_d from objs
HdlIdDef: addr_last_d
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 31
                    HdlValueInt: 0
    HdlDirection: INTERNAL

DEL HdlIdDef@@rdata_q from objs
HdlIdDef: rdata_q
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 31
                    HdlValueInt: 0
    HdlDirection: INTERNAL

DEL HdlIdDef@@rdata_d from objs
HdlIdDef: rdata_d
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 31
                    HdlValueInt: 0
    HdlDirection: INTERNAL

DEL HdlIdDef@@rdata_offset_d from objs
HdlIdDef: rdata_offset_d
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: INTERNAL

DEL HdlIdDef@@data_type_d from objs
HdlIdDef: data_type_d
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: INTERNAL


CommitId: c33525ae804e5c6200bab582f7e5d80da2aebbf9
[RTL LSU] Change unaligned error behaviour
--- a/rtl/ibex_load_store_unit.sv
+++ b/rtl/ibex_load_store_unit.sv
@@ -76,13 +78,13 @@ module ibex_load_store_unit (
   logic         split_misaligned_access;
   logic         handle_misaligned_q, handle_misaligned_d; // high after receiving grant for first
                                                           // part of a misaligned access
-  logic         pmp_err_d;
-  logic         pmp_err_q;
+  logic         pmp_err_q, pmp_err_d;
+  logic         lsu_err_q, lsu_err_d;
   logic         data_or_pmp_err;
 
   typedef enum logic [2:0]  {
     IDLE, WAIT_GNT_MIS, WAIT_RVALID_MIS, WAIT_GNT, WAIT_RVALID,
-    WAIT_GNT_ERR, WAIT_RVALID_ERR, WAIT_RVALID_DONE
+    WAIT_RVALID_DONE
   } ls_fsm_e;
 
   ls_fsm_e ls_fsm_cs, ls_fsm_ns;

ParseResult:
MOV HdlIdDef@@pmp_err_d to objs
HdlIdDef: pmp_err_d
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

INS HdlIdDef@@lsu_err_q to objs
HdlIdDef: lsu_err_q
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

INS HdlIdDef@@lsu_err_d to objs
HdlIdDef: lsu_err_d
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL


CommitId: c33525ae804e5c6200bab582f7e5d80da2aebbf9
[RTL LSU] Change unaligned error behaviour
--- a/rtl/ibex_load_store_unit.sv
+++ b/rtl/ibex_load_store_unit.sv
@@ -324,6 +323,11 @@ module ibex_load_store_unit (
     handle_misaligned_d = handle_misaligned_q;
     data_or_pmp_err     = 1'b0;
     pmp_err_d           = pmp_err_q;
+    lsu_err_d           = lsu_err_q;
+
+    addr_update         = 1'b0;
+    ctrl_update         = 1'b0;
+    rdata_update        = 1'b0;
 
     unique case (ls_fsm_cs)
 

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: lsu_err_d
                HdlValueId: lsu_err_q
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: addr_update
                HdlValueInt: 0
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: ctrl_update
                HdlValueInt: 0
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: rdata_update
                HdlValueInt: 0

UPD HdlStmCase@@ls_fsm_cs to ls_fsm_cs
    INS tuple@@ to cases
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmCase@@ls_fsm_cs to ls_fsm_cs
    UPD HdlValueId@@WAIT_GNT_ERR to WAIT_RVALID_DONE
    MOV HdlValueId@@WAIT_GNT_ERR to 
    HdlValueId: WAIT_GNT_ERR
    UPD HdlStmBlock@@SEQ to SEQ
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: addr_incr_req_o
                HdlValueInt: 1
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: data_req_o
                HdlValueInt: 1
        DEL list@@body from SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: data_req_o
                HdlValueInt: 0
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases
    DEL HdlValueId@@WAIT_RVALID_ERR from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases
    DEL HdlValueId@@WAIT_RVALID_DONE from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: lsu_err_d
                HdlValueInt: 0

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: ctrl_update
                HdlValueInt: 1
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: addr_update
                HdlValueInt: 1


CommitId: c33525ae804e5c6200bab582f7e5d80da2aebbf9
[RTL LSU] Change unaligned error behaviour
--- a/rtl/ibex_load_store_unit.sv
+++ b/rtl/ibex_load_store_unit.sv
@@ -331,7 +335,10 @@ module ibex_load_store_unit (
         if (data_req_ex_i) begin
           data_req_o = 1'b1;
           pmp_err_d  = data_pmp_err_i;
+          lsu_err_d  = 1'b0;
           if (data_gnt_i) begin
+            ctrl_update         = 1'b1;
+            addr_update         = 1'b1;
             handle_misaligned_d = split_misaligned_access;
             ls_fsm_ns           = split_misaligned_access ? WAIT_RVALID_MIS : WAIT_RVALID;
           end else begin

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: lsu_err_d
                HdlValueId: lsu_err_q
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: addr_update
                HdlValueInt: 0
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: ctrl_update
                HdlValueInt: 0
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: rdata_update
                HdlValueInt: 0

UPD HdlStmCase@@ls_fsm_cs to ls_fsm_cs
    INS tuple@@ to cases
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmCase@@ls_fsm_cs to ls_fsm_cs
    UPD HdlValueId@@WAIT_GNT_ERR to WAIT_RVALID_DONE
    MOV HdlValueId@@WAIT_GNT_ERR to 
    HdlValueId: WAIT_GNT_ERR
    UPD HdlStmBlock@@SEQ to SEQ
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: addr_incr_req_o
                HdlValueInt: 1
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: data_req_o
                HdlValueInt: 1
        DEL list@@body from SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: data_req_o
                HdlValueInt: 0
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases
    DEL HdlValueId@@WAIT_RVALID_ERR from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases
    DEL HdlValueId@@WAIT_RVALID_DONE from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: lsu_err_d
                HdlValueInt: 0

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: ctrl_update
                HdlValueInt: 1
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: addr_update
                HdlValueInt: 1


CommitId: c33525ae804e5c6200bab582f7e5d80da2aebbf9
[RTL LSU] Change unaligned error behaviour
--- a/rtl/ibex_load_store_unit.sv
+++ b/rtl/ibex_load_store_unit.sv
@@ -347,6 +354,8 @@ module ibex_load_store_unit (
         // pmp_err_q is only updated for new address phases and so can be used in WAIT_GNT* and
         // WAIT_RVALID* states
         if (data_gnt_i || pmp_err_q) begin
+          addr_update         = 1'b1;
+          ctrl_update         = 1'b1;
           handle_misaligned_d = 1'b1;
           ls_fsm_ns           = WAIT_RVALID_MIS;
         end

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: lsu_err_d
                HdlValueId: lsu_err_q
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: addr_update
                HdlValueInt: 0
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: ctrl_update
                HdlValueInt: 0
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: rdata_update
                HdlValueInt: 0

UPD HdlStmCase@@ls_fsm_cs to ls_fsm_cs
    INS tuple@@ to cases
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmCase@@ls_fsm_cs to ls_fsm_cs
    UPD HdlValueId@@WAIT_GNT_ERR to WAIT_RVALID_DONE
    MOV HdlValueId@@WAIT_GNT_ERR to 
    HdlValueId: WAIT_GNT_ERR
    UPD HdlStmBlock@@SEQ to SEQ
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: addr_incr_req_o
                HdlValueInt: 1
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: data_req_o
                HdlValueInt: 1
        DEL list@@body from SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: data_req_o
                HdlValueInt: 0
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases
    DEL HdlValueId@@WAIT_RVALID_ERR from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases
    DEL HdlValueId@@WAIT_RVALID_DONE from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: addr_update
                HdlValueInt: 1
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: ctrl_update
                HdlValueInt: 1


CommitId: c33525ae804e5c6200bab582f7e5d80da2aebbf9
[RTL LSU] Change unaligned error behaviour
--- a/rtl/ibex_load_store_unit.sv
+++ b/rtl/ibex_load_store_unit.sv
@@ -362,18 +371,14 @@ module ibex_load_store_unit (
         if (data_rvalid_i || pmp_err_q) begin
           // Update the PMP error for the second part
           pmp_err_d = data_pmp_err_i;
-          if (pmp_err_q || data_err_i) begin
-            // first part created an error, abort transaction
-            data_valid_o        = 1'b1;
-            data_or_pmp_err     = 1'b1;
-            handle_misaligned_d = 1'b0;
-            // If already granted, wait for second rvalid
-            ls_fsm_ns = data_gnt_i ? WAIT_RVALID_ERR : WAIT_GNT_ERR;
-
-          end else begin
-            // No error in first part, proceed with second part
-            ls_fsm_ns = data_gnt_i ? WAIT_RVALID : WAIT_GNT;
-          end
+          // Record the error status of the first part
+          lsu_err_d = data_err_i | pmp_err_q;
+          // Capture the first rdata for loads
+          rdata_update = ~data_we_q;
+          // If already granted, wait for second rvalid
+          ls_fsm_ns = data_gnt_i ? WAIT_RVALID : WAIT_GNT;
+          // Update the address for the second part, if no error
+          addr_update = data_gnt_i & ~(data_err_i | pmp_err_q);
 
         end else begin
           // first part rvalid is NOT received

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: lsu_err_d
                HdlValueId: lsu_err_q
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: addr_update
                HdlValueInt: 0
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: ctrl_update
                HdlValueInt: 0
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: rdata_update
                HdlValueInt: 0

UPD HdlStmCase@@ls_fsm_cs to ls_fsm_cs
    INS tuple@@ to cases
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmCase@@ls_fsm_cs to ls_fsm_cs
    UPD HdlValueId@@WAIT_GNT_ERR to WAIT_RVALID_DONE
    MOV HdlValueId@@WAIT_GNT_ERR to 
    HdlValueId: WAIT_GNT_ERR
    UPD HdlStmBlock@@SEQ to SEQ
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: addr_incr_req_o
                HdlValueInt: 1
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: data_req_o
                HdlValueInt: 1
        DEL list@@body from SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: data_req_o
                HdlValueInt: 0
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases
    DEL HdlValueId@@WAIT_RVALID_ERR from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases
    DEL HdlValueId@@WAIT_RVALID_DONE from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases

UPD HdlStmIf@@ to 
    UPD HdlOp@@OR_LOG to ASSIGN
    MOV HdlOp@@OR_LOG to 
    HdlOp: OR_LOG
        list: ops
            HdlValueId: pmp_err_q
            HdlValueId: data_err_i
    UPD HdlStmBlock@@SEQ to SEQ
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: ls_fsm_ns
                HdlOp: TERNARY
                    list: ops
                        HdlValueId: data_gnt_i
                        HdlValueId: WAIT_RVALID
                        HdlValueId: WAIT_GNT
        DEL list@@body from SEQ
    UPD HdlOp@@OR_LOG to OR_LOG
        UPD HdlValueId@@pmp_err_q to lsu_err_d
        DEL HdlValueId@@data_err_i from ops
    DEL HdlStmBlock@@SEQ from 
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: data_valid_o
                    HdlValueInt: 1
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: data_or_pmp_err
                    HdlValueInt: 1
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: handle_misaligned_d
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: ls_fsm_ns
                    HdlOp: TERNARY
                        list: ops
                            HdlValueId: data_gnt_i
                            HdlValueId: WAIT_RVALID_ERR
                            HdlValueId: WAIT_GNT_ERR
    DEL list@@elifs from 
    DEL HdlStmBlock@@SEQ from 

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: addr_update
                HdlOp: AND
                    list: ops
                        HdlValueId: data_gnt_i
                        HdlOp: NEG
                            list: ops
                                HdlOp: OR
                                    list: ops
                                        HdlValueId: data_err_i
                                        HdlValueId: pmp_err_q

DEL HdlStmIf@@ from body


CommitId: c33525ae804e5c6200bab582f7e5d80da2aebbf9
[RTL LSU] Change unaligned error behaviour
--- a/rtl/ibex_load_store_unit.sv
+++ b/rtl/ibex_load_store_unit.sv
@@ -389,15 +394,18 @@ module ibex_load_store_unit (
         addr_incr_req_o = handle_misaligned_q;
         data_req_o      = 1'b1;
         if (data_gnt_i || pmp_err_q) begin
-          ls_fsm_ns = WAIT_RVALID;
+          ctrl_update = 1'b1;
+          // Update the address, unless there was an error
+          addr_update = ~lsu_err_q;
+          ls_fsm_ns   = WAIT_RVALID;
         end
       end
 
       WAIT_RVALID: begin
-        data_req_o = 1'b0;
         if (data_rvalid_i || pmp_err_q) begin
           data_valid_o        = 1'b1;
-          data_or_pmp_err     = data_err_i | pmp_err_q;
+          // Data error from either part
+          data_or_pmp_err     = lsu_err_q | data_err_i | pmp_err_q;
           handle_misaligned_d = 1'b0;
           ls_fsm_ns           = IDLE;
         end else begin

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: lsu_err_d
                HdlValueId: lsu_err_q
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: addr_update
                HdlValueInt: 0
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: ctrl_update
                HdlValueInt: 0
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: rdata_update
                HdlValueInt: 0

UPD HdlStmCase@@ls_fsm_cs to ls_fsm_cs
    INS tuple@@ to cases
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmCase@@ls_fsm_cs to ls_fsm_cs
    UPD HdlValueId@@WAIT_GNT_ERR to WAIT_RVALID_DONE
    MOV HdlValueId@@WAIT_GNT_ERR to 
    HdlValueId: WAIT_GNT_ERR
    UPD HdlStmBlock@@SEQ to SEQ
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: addr_incr_req_o
                HdlValueInt: 1
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: data_req_o
                HdlValueInt: 1
        DEL list@@body from SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: data_req_o
                HdlValueInt: 0
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases
    DEL HdlValueId@@WAIT_RVALID_ERR from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases
    DEL HdlValueId@@WAIT_RVALID_DONE from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: ctrl_update
                HdlValueInt: 1
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: addr_update
                HdlOp: NEG
                    list: ops
                        HdlValueId: lsu_err_q

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            MOV HdlOp@@OR to ops
            HdlOp: OR
                list: ops
                    HdlValueId: data_err_i
                    HdlValueId: pmp_err_q
    DEL HdlOp@@OR_LOG from 
    HdlOp: OR_LOG
        list: ops
            HdlValueId: data_rvalid_i
            HdlValueId: pmp_err_q

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlOp@@OR to ops
            HdlOp: OR
                list: ops
                    HdlOp: OR
                        list: ops
                            HdlValueId: lsu_err_q
                            HdlValueId: data_err_i
                    HdlValueId: pmp_err_q


CommitId: c33525ae804e5c6200bab582f7e5d80da2aebbf9
[RTL LSU] Change unaligned error behaviour
--- a/rtl/ibex_load_store_unit.sv
+++ b/rtl/ibex_load_store_unit.sv
@@ -449,28 +438,18 @@ module ibex_load_store_unit (
     endcase
   end
 
-  // store last address for mtval + AGU for misaligned transactions:
-  // - misaligned address needed for correct generation of data_be and data_rdata_ext
-  // - do not update in case of errors, mtval needs the failing address
-  always_comb begin
-    addr_last_d = addr_last_q;
-    if (data_req_o & data_gnt_i & ~(load_err_o | store_err_o)) begin
-      addr_last_d = data_addr;
-    end
-  end
-
   // registers for FSM
   always_ff @(posedge clk_i or negedge rst_ni) begin
     if (!rst_ni) begin
       ls_fsm_cs           <= IDLE;
-      addr_last_q         <= '0;
       handle_misaligned_q <= '0;
       pmp_err_q           <= '0;
+      lsu_err_q           <= '0;
     end else begin
       ls_fsm_cs           <= ls_fsm_ns;
-      addr_last_q         <= addr_last_d;
       handle_misaligned_q <= handle_misaligned_d;
       pmp_err_q           <= pmp_err_d;
+      lsu_err_q           <= lsu_err_d;
     end
   end
 
ParseResult:
MOV HdlStmAssign@@ to body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: addr_last_q

UPD HdlStmCase@@ls_fsm_cs to ls_fsm_cs
    UPD HdlValueId@@WAIT_GNT_ERR to WAIT_RVALID_DONE
    MOV HdlValueId@@WAIT_GNT_ERR to 
    HdlValueId: WAIT_GNT_ERR
    UPD HdlStmBlock@@SEQ to SEQ
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: addr_incr_req_o
                HdlValueInt: 1
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: data_req_o
                HdlValueInt: 1
        DEL list@@body from SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: data_req_o
                HdlValueInt: 0
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases
    DEL HdlValueId@@WAIT_RVALID_ERR from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases
    DEL HdlValueId@@WAIT_RVALID_DONE from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: lsu_err_q

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueId: lsu_err_d
    HdlValueId: lsu_err_q

DEL HdlStmProcess@@ from objs
HdlStmProcess
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: addr_last_d
                    HdlValueId: addr_last_q
            HdlStmIf
                HdlOp: AND
                    list: ops
                        HdlOp: AND
                            list: ops
                                HdlValueId: data_req_o
                                HdlValueId: data_gnt_i
                        HdlOp: NEG
                            list: ops
                                HdlOp: OR
                                    list: ops
                                        HdlValueId: load_err_o
                                        HdlValueId: store_err_o
                HdlStmBlock: SEQ
                    list: body
                        HdlOp: ASSIGN
                            list: ops
                                HdlValueId: addr_last_d
                                HdlValueId: data_addr
                list: elifs
    HdlStmProcessTriggerConstrain: COMB

DEL HdlStmAssign@@ from body
HdlStmAssign
    HdlValueId: addr_last_d
    HdlValueId: addr_last_q


CommitId: 6b0475744dba1991664be9c780a5c727586c8a9d
Code cleanup
--- a/rtl/ibex_multdiv_fast.sv
+++ b/rtl/ibex_multdiv_fast.sv
@@ -67,12 +73,13 @@ module ibex_multdiv_fast
   logic [31:0] op_denominator_n;
   logic [31:0] op_numerator_n;
   logic [31:0] op_quotient_n;
-  logic [32:0] next_reminder, next_quotient;
+  logic [31:0] next_reminder;
+  logic [32:0] next_quotient;
   logic [32:0] res_adder_h;
   logic        mult_is_ready;
 
   always_ff @(posedge clk or negedge rst_n) begin : proc_mult_state_q
-    if(~rst_n) begin
+    if (!rst_n) begin
       mult_state_q      <= ALBL;
       mac_res_q         <= '0;
       div_counter_q     <= '0;

ParseResult:
UPD HdlModuleDef@@ibex_multdiv_fast to ibex_multdiv_fast
    INS HdlImport@@ to objs
    HdlImport
        list: path
            HdlValueId: ibex_defines
            HdlAll

INS HdlIdDef@@next_reminder to objs
HdlIdDef: next_reminder
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 31
                    HdlValueInt: 0
    HdlDirection: INTERNAL

UPD HdlStmIf@@ to 
    UPD HdlOp@@NEG to NEG_LOG

DEL HdlIdDef@@next_reminder from objs
HdlIdDef: next_reminder
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 32
                    HdlValueInt: 0
    HdlDirection: INTERNAL


CommitId: 6b0475744dba1991664be9c780a5c727586c8a9d
Code cleanup
--- a/rtl/ibex_multdiv_fast.sv
+++ b/rtl/ibex_multdiv_fast.sv
@@ -82,11 +89,11 @@ module ibex_multdiv_fast
       op_quotient_q     <= '0;
     end else begin
 
-      if(mult_en_i) begin
+      if (mult_en_i) begin
         mult_state_q <= mult_state_n;
       end
 
-      if(div_en_i) begin
+      if (div_en_i) begin
         div_counter_q     <= div_counter_n;
         op_denominator_q  <= op_denominator_n  ;
         op_numerator_q    <= op_numerator_n    ;

ParseResult:
UPD HdlModuleDef@@ibex_multdiv_fast to ibex_multdiv_fast
    INS HdlImport@@ to objs
    HdlImport
        list: path
            HdlValueId: ibex_defines
            HdlAll

UPD HdlStmIf@@ to 
    UPD HdlOp@@NEG to NEG_LOG


CommitId: 6b0475744dba1991664be9c780a5c727586c8a9d
Code cleanup
--- a/rtl/ibex_multdiv_fast.sv
+++ b/rtl/ibex_multdiv_fast.sv
@@ -102,7 +109,6 @@ module ibex_multdiv_fast
         default:
           mac_res_q <= mac_res_q;
        endcase
-
     end
   end
 

ParseResult:
UPD HdlModuleDef@@ibex_multdiv_fast to ibex_multdiv_fast
    INS HdlImport@@ to objs
    HdlImport
        list: path
            HdlValueId: ibex_defines
            HdlAll

UPD HdlStmIf@@ to 
    UPD HdlOp@@NEG to NEG_LOG


CommitId: 6b0475744dba1991664be9c780a5c727586c8a9d
Code cleanup
--- a/rtl/ibex_multdiv_fast.sv
+++ b/rtl/ibex_multdiv_fast.sv
@@ -115,8 +121,9 @@ module ibex_multdiv_fast
 
   assign res_adder_h   = alu_adder_ext_i[33:1];
 
-  assign next_reminder = is_greater_equal ? res_adder_h                   : mac_res_q[32:0];
-  assign next_quotient = is_greater_equal ? op_quotient_q | one_shift     : op_quotient_q;
+  assign next_reminder = is_greater_equal ? res_adder_h[31:0] : mac_res_q[31:0];
+  assign next_quotient = is_greater_equal ? {1'b0,op_quotient_q} | {1'b0,one_shift} :
+                                            {1'b0,op_quotient_q};
 
   assign one_shift     = {31'b0, 1'b1} << div_counter_q;
 

ParseResult:
UPD HdlModuleDef@@ibex_multdiv_fast to ibex_multdiv_fast
    INS HdlImport@@ to objs
    HdlImport
        list: path
            HdlValueId: ibex_defines
            HdlAll

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: TERNARY
        list: ops
            HdlValueId: is_greater_equal
            HdlOp: INDEX
                list: ops
                    HdlValueId: res_adder_h
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 31
                            HdlValueInt: 0
            HdlOp: INDEX
                list: ops
                    HdlValueId: mac_res_q
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 31
                            HdlValueInt: 0
    HdlValueId: next_reminder

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: TERNARY
        list: ops
            HdlValueId: is_greater_equal
            HdlOp: OR
                list: ops
                    HdlOp: CONCAT
                        list: ops
                            HdlValueInt: 0
                            HdlValueId: op_quotient_q
                    HdlOp: CONCAT
                        list: ops
                            HdlValueInt: 0
                            HdlValueId: one_shift
            HdlOp: CONCAT
                list: ops
                    HdlValueInt: 0
                    HdlValueId: op_quotient_q
    HdlValueId: next_quotient

DEL HdlStmAssign@@ from objs
HdlStmAssign
    HdlOp: TERNARY
        list: ops
            HdlValueId: is_greater_equal
            HdlValueId: res_adder_h
            HdlOp: INDEX
                list: ops
                    HdlValueId: mac_res_q
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 32
                            HdlValueInt: 0
    HdlValueId: next_reminder

DEL HdlStmAssign@@ from objs
HdlStmAssign
    HdlOp: TERNARY
        list: ops
            HdlValueId: is_greater_equal
            HdlOp: OR
                list: ops
                    HdlValueId: op_quotient_q
                    HdlValueId: one_shift
            HdlValueId: op_quotient_q
    HdlValueId: next_quotient


CommitId: 6b0475744dba1991664be9c780a5c727586c8a9d
Code cleanup
--- a/rtl/ibex_multdiv_fast.sv
+++ b/rtl/ibex_multdiv_fast.sv
@@ -126,12 +133,12 @@ module ibex_multdiv_fast
      the next Reminder is Reminder - Divisor contained in res_adder_h and the
   */
 
-  always_comb
-  begin
-    if ((mac_res_q[31] ^ op_denominator_q[31]) == 0)
-      is_greater_equal = (res_adder_h[31] == 0);
-    else
+  always_comb begin
+    if ((mac_res_q[31] ^ op_denominator_q[31]) == 1'b0) begin
+      is_greater_equal = (res_adder_h[31] == 1'b0);
+    end else begin
       is_greater_equal = mac_res_q[31];
+    end
   end
 
   assign div_sign_a   = op_a_i[31] & signed_mode_i[0];

ParseResult:
UPD HdlModuleDef@@ibex_multdiv_fast to ibex_multdiv_fast
    INS HdlImport@@ to objs
    HdlImport
        list: path
            HdlValueId: ibex_defines
            HdlAll

UPD HdlStmIf@@ to 
    INS HdlStmBlock@@SEQ to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmIf@@ to 
    MOV HdlOp@@ASSIGN to 
    HdlOp: ASSIGN
        list: ops
            HdlValueId: is_greater_equal
            HdlOp: EQ
                list: ops
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: res_adder_h
                            HdlValueInt: 31
                    HdlValueInt: 0
    MOV HdlOp@@ASSIGN to 
    HdlOp: ASSIGN
        list: ops
            HdlValueId: is_greater_equal
            HdlOp: INDEX
                list: ops
                    HdlValueId: mac_res_q
                    HdlValueInt: 31


CommitId: cee2e9396fec09f9f5b1e2015cbf848dce7043da
Remove `csr_restore_dret_i` signal
--- a/rtl/ibex_id_stage.sv
+++ b/rtl/ibex_id_stage.sv
@@ -90,7 +90,6 @@ module ibex_id_stage #(
     output logic                  csr_save_if_o,
     output logic                  csr_save_id_o,
     output logic                  csr_restore_mret_id_o,
-    output logic                  csr_restore_dret_id_o,
     output logic                  csr_save_cause_o,
     output logic [31:0]           csr_mtval_o,
     input  logic                  illegal_csr_insn_i,

ParseResult:
DEL HdlIdDef@@csr_restore_dret_id_o from ports
HdlIdDef: csr_restore_dret_id_o
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: OUT


CommitId: 892ad8a6213057e20e43f44a2eb70b02d90cce35
[RTL] - Add PMP module
--- a/rtl/ibex_prefetch_buffer.sv
+++ b/rtl/ibex_prefetch_buffer.sv
@@ -32,6 +32,7 @@ module ibex_prefetch_buffer (
     output logic [31:0] instr_addr_o,
     input  logic [31:0] instr_rdata_i,
     input  logic        instr_err_i,
+    input  logic        instr_pmp_err_i,
     input  logic        instr_rvalid_i,
 
     // Prefetch Buffer Status

ParseResult:
INS HdlIdDef@@instr_pmp_err_i to ports
HdlIdDef: instr_pmp_err_i
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: IN


CommitId: 892ad8a6213057e20e43f44a2eb70b02d90cce35
[RTL] - Add PMP module
--- a/rtl/ibex_prefetch_buffer.sv
+++ b/rtl/ibex_prefetch_buffer.sv
@@ -47,6 +48,8 @@ module ibex_prefetch_buffer (
   logic [31:0] instr_addr_q, fetch_addr;
   logic [31:0] instr_addr, instr_addr_w_aligned;
   logic        addr_valid;
+  logic        pmp_err_q;
+  logic        instr_or_pmp_err;
 
   logic        fifo_valid;
   logic        fifo_ready;

ParseResult:
INS HdlIdDef@@pmp_err_q to objs
HdlIdDef: pmp_err_q
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

INS HdlIdDef@@instr_or_pmp_err to objs
HdlIdDef: instr_or_pmp_err
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL


CommitId: 892ad8a6213057e20e43f44a2eb70b02d90cce35
[RTL] - Add PMP module
--- a/rtl/ibex_prefetch_buffer.sv
+++ b/rtl/ibex_prefetch_buffer.sv
@@ -62,6 +65,10 @@ module ibex_prefetch_buffer (
   // Fetch fifo - consumes addresses and data //
   //////////////////////////////////////////////
 
+  // Instruction fetch errors are valid on the data phase of a request
+  // PMP errors are generated in the address phase, and registered into a fake data phase
+  assign instr_or_pmp_err = instr_err_i | pmp_err_q;
+
   ibex_fetch_fifo fifo_i (
       .clk_i                 ( clk_i             ),
       .rst_ni                ( rst_ni            ),

ParseResult:
INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: OR
        list: ops
            HdlValueId: instr_err_i
            HdlValueId: pmp_err_q
    HdlValueId: instr_or_pmp_err


CommitId: 892ad8a6213057e20e43f44a2eb70b02d90cce35
[RTL] - Add PMP module
--- a/rtl/ibex_prefetch_buffer.sv
+++ b/rtl/ibex_prefetch_buffer.sv
@@ -134,7 +141,10 @@ module ibex_prefetch_buffer (
         end
 
         //~> granted request or not
-        pf_fsm_ns = instr_gnt_i ? WAIT_RVALID : WAIT_GNT;
+        // If the instruction generated a PMP error, we may or may not
+        // get granted (the external valid is suppressed by the error)
+        // but we proceed to WAIT_RVALID to push the error to the fifo
+        pf_fsm_ns = (instr_gnt_i || pmp_err_q) ? WAIT_RVALID : WAIT_GNT;
       end // case: WAIT_GNT
 
       // we wait for rvalid, after that we are ready to serve a new request

ParseResult:
UPD HdlStmCase@@pf_fsm_cs to pf_fsm_cs
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@TERNARY to TERNARY
                INS HdlOp@@OR_LOG to ops
                UPD HdlOp@@OR_LOG to OR_LOG
                    INS list@@ops to OR_LOG
                    INS HdlValueId@@pmp_err_q to ops

UPD HdlStmCase@@pf_fsm_cs to pf_fsm_cs
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@TERNARY to TERNARY
                MOV HdlValueId@@instr_gnt_i to ops
                HdlValueId: instr_gnt_i


CommitId: 892ad8a6213057e20e43f44a2eb70b02d90cce35
[RTL] - Add PMP module
--- a/rtl/ibex_prefetch_buffer.sv
+++ b/rtl/ibex_prefetch_buffer.sv
@@ -148,7 +158,8 @@ module ibex_prefetch_buffer (
         if (req_i && (fifo_ready || branch_i)) begin
           // prepare for next request
 
-          if (instr_rvalid_i) begin
+          // Fake the rvalid for PMP errors to push the error to the fifo
+          if (instr_rvalid_i || pmp_err_q) begin
             instr_req_o = 1'b1;
             fifo_valid  = 1'b1;
             addr_valid  = 1'b1;

ParseResult:
UPD HdlStmCase@@pf_fsm_cs to pf_fsm_cs
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@TERNARY to TERNARY
                INS HdlOp@@OR_LOG to ops
                UPD HdlOp@@OR_LOG to OR_LOG
                    INS list@@ops to OR_LOG
                    INS HdlValueId@@pmp_err_q to ops

UPD HdlStmCase@@pf_fsm_cs to pf_fsm_cs
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@TERNARY to TERNARY
                MOV HdlValueId@@instr_gnt_i to ops
                HdlValueId: instr_gnt_i

UPD HdlStmIf@@ to 
    MOV HdlValueId@@instr_rvalid_i to 
    HdlValueId: instr_rvalid_i


CommitId: 892ad8a6213057e20e43f44a2eb70b02d90cce35
[RTL] - Add PMP module
--- a/rtl/ibex_prefetch_buffer.sv
+++ b/rtl/ibex_prefetch_buffer.sv
@@ -166,7 +177,8 @@ module ibex_prefetch_buffer (
         end else begin
           // just wait for rvalid and go back to IDLE, no new request
 
-          if (instr_rvalid_i) begin
+          // Fake the rvalid for PMP errors to push the error to the fifo
+          if (instr_rvalid_i || pmp_err_q) begin
             fifo_valid = 1'b1;
             pf_fsm_ns  = IDLE;
           end

ParseResult:
UPD HdlStmCase@@pf_fsm_cs to pf_fsm_cs
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@TERNARY to TERNARY
                INS HdlOp@@OR_LOG to ops
                UPD HdlOp@@OR_LOG to OR_LOG
                    INS list@@ops to OR_LOG
                    INS HdlValueId@@pmp_err_q to ops

UPD HdlStmIf@@ to 
    INS HdlOp@@OR_LOG to 
    UPD HdlOp@@OR_LOG to OR_LOG
        INS list@@ops to OR_LOG
        INS HdlValueId@@pmp_err_q to ops

UPD HdlStmCase@@pf_fsm_cs to pf_fsm_cs
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@TERNARY to TERNARY
                MOV HdlValueId@@instr_gnt_i to ops
                HdlValueId: instr_gnt_i

UPD HdlStmIf@@ to 
    MOV HdlValueId@@instr_rvalid_i to 
    HdlValueId: instr_rvalid_i


CommitId: 892ad8a6213057e20e43f44a2eb70b02d90cce35
[RTL] - Add PMP module
--- a/rtl/ibex_prefetch_buffer.sv
+++ b/rtl/ibex_prefetch_buffer.sv
@@ -207,11 +219,13 @@ module ibex_prefetch_buffer (
     if (!rst_ni) begin
       pf_fsm_cs      <= IDLE;
       instr_addr_q   <= '0;
+      pmp_err_q      <= '0;
     end else begin
       pf_fsm_cs      <= pf_fsm_ns;
 
       if (addr_valid) begin
         instr_addr_q <= instr_addr;
+        pmp_err_q    <= instr_pmp_err_i;
       end
     end
   end
ParseResult:
INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: pmp_err_q

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueId: instr_pmp_err_i
    HdlValueId: pmp_err_q

UPD HdlStmCase@@pf_fsm_cs to pf_fsm_cs
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@TERNARY to TERNARY
                INS HdlOp@@OR_LOG to ops
                UPD HdlOp@@OR_LOG to OR_LOG
                    INS list@@ops to OR_LOG
                    INS HdlValueId@@pmp_err_q to ops


CommitId: 892ad8a6213057e20e43f44a2eb70b02d90cce35
[RTL] - Add PMP module
--- a/rtl/ibex_load_store_unit.sv
+++ b/rtl/ibex_load_store_unit.sv
@@ -18,6 +18,7 @@ module ibex_load_store_unit (
     input  logic         data_gnt_i,
     input  logic         data_rvalid_i,
     input  logic         data_err_i,
+    input  logic         data_pmp_err_i,
 
     output logic [31:0]  data_addr_o,
     output logic         data_we_o,

ParseResult:
INS HdlIdDef@@data_pmp_err_i to ports
HdlIdDef: data_pmp_err_i
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: IN


CommitId: 892ad8a6213057e20e43f44a2eb70b02d90cce35
[RTL] - Add PMP module
--- a/rtl/ibex_load_store_unit.sv
+++ b/rtl/ibex_load_store_unit.sv
@@ -54,6 +55,7 @@ module ibex_load_store_unit (
   logic [31:0]  data_addr_w_aligned;
   logic [31:0]  addr_last_q, addr_last_d;
 
+  logic         data_update;
   logic [31:0]  rdata_q, rdata_d;
   logic [1:0]   rdata_offset_q, rdata_offset_d;
   logic [1:0]   data_type_q, data_type_d;

ParseResult:
INS HdlIdDef@@data_update to objs
HdlIdDef: data_update
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL


CommitId: 892ad8a6213057e20e43f44a2eb70b02d90cce35
[RTL] - Add PMP module
--- a/rtl/ibex_load_store_unit.sv
+++ b/rtl/ibex_load_store_unit.sv
@@ -74,6 +76,8 @@ module ibex_load_store_unit (
   logic         split_misaligned_access;
   logic         handle_misaligned_q, handle_misaligned_d; // high after receiving grant for first
                                                           // part of a misaligned access
+  logic         pmp_err_q;
+  logic         data_or_pmp_err;
 
   typedef enum logic [2:0]  {
     IDLE, WAIT_GNT_MIS, WAIT_RVALID_MIS, WAIT_GNT, WAIT_RVALID

ParseResult:
INS HdlIdDef@@pmp_err_q to objs
HdlIdDef: pmp_err_q
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

INS HdlIdDef@@data_or_pmp_err to objs
HdlIdDef: data_or_pmp_err
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL


CommitId: 892ad8a6213057e20e43f44a2eb70b02d90cce35
[RTL] - Add PMP module
--- a/rtl/ibex_load_store_unit.sv
+++ b/rtl/ibex_load_store_unit.sv
@@ -168,10 +172,16 @@ module ibex_load_store_unit (
   end
 
   // update control signals for next read data upon receiving grant
-  assign rdata_offset_d  = data_gnt_i ? data_addr[1:0]     : rdata_offset_q;
-  assign data_type_d     = data_gnt_i ? data_type_ex_i     : data_type_q;
-  assign data_sign_ext_d = data_gnt_i ? data_sign_ext_ex_i : data_sign_ext_q;
-  assign data_we_d       = data_gnt_i ? data_we_ex_i       : data_we_q;
+  // This must also be set for a pmp error (which might not actually be granted) to force
+  // data_we_q to update in order to signal the correct exception type (load or store)
+  // Note that we can use the registered pmp_err_q here since we will always take an
+  // extra cycle to progress to the RVALID state
+  assign data_update = data_gnt_i | pmp_err_q;
+
+  assign rdata_offset_d  = data_update ? data_addr[1:0]     : rdata_offset_q;
+  assign data_type_d     = data_update ? data_type_ex_i     : data_type_q;
+  assign data_sign_ext_d = data_update ? data_sign_ext_ex_i : data_sign_ext_q;
+  assign data_we_d       = data_update ? data_we_ex_i       : data_we_q;
 
   // registers for rdata alignment and sign-extension
   always_ff @(posedge clk_i or negedge rst_ni) begin

ParseResult:
INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: OR
        list: ops
            HdlValueId: data_gnt_i
            HdlValueId: pmp_err_q
    HdlValueId: data_update

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: TERNARY
        list: ops
            HdlValueId: data_update
            HdlValueId: data_type_ex_i
            HdlValueId: data_type_q
    HdlValueId: data_type_d

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: TERNARY
        list: ops
            HdlValueId: data_update
            HdlValueId: data_sign_ext_ex_i
            HdlValueId: data_sign_ext_q
    HdlValueId: data_sign_ext_d

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: TERNARY
        list: ops
            HdlValueId: data_update
            HdlValueId: data_we_ex_i
            HdlValueId: data_we_q
    HdlValueId: data_we_d

UPD HdlStmAssign@@ to 
    UPD HdlOp@@TERNARY to TERNARY
        UPD HdlValueId@@data_gnt_i to data_update

DEL HdlStmAssign@@ from objs
HdlStmAssign
    HdlOp: TERNARY
        list: ops
            HdlValueId: data_gnt_i
            HdlValueId: data_type_ex_i
            HdlValueId: data_type_q
    HdlValueId: data_type_d

DEL HdlStmAssign@@ from objs
HdlStmAssign
    HdlOp: TERNARY
        list: ops
            HdlValueId: data_gnt_i
            HdlValueId: data_sign_ext_ex_i
            HdlValueId: data_sign_ext_q
    HdlValueId: data_sign_ext_d

DEL HdlStmAssign@@ from objs
HdlStmAssign
    HdlOp: TERNARY
        list: ops
            HdlValueId: data_gnt_i
            HdlValueId: data_we_ex_i
            HdlValueId: data_we_q
    HdlValueId: data_we_d


CommitId: 892ad8a6213057e20e43f44a2eb70b02d90cce35
[RTL] - Add PMP module
--- a/rtl/ibex_load_store_unit.sv
+++ b/rtl/ibex_load_store_unit.sv
@@ -327,7 +338,7 @@ module ibex_load_store_unit (
 
       WAIT_GNT_MIS: begin
         data_req_o = 1'b1;
-        if (data_gnt_i) begin
+        if (data_gnt_i || pmp_err_q) begin
           handle_misaligned_d = 1'b1;
           ls_fsm_ns           = WAIT_RVALID_MIS;
         end

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: data_or_pmp_err
                HdlValueInt: 0

UPD HdlStmIf@@ to 
    MOV HdlValueId@@data_gnt_i to 
    HdlValueId: data_gnt_i


CommitId: 892ad8a6213057e20e43f44a2eb70b02d90cce35
[RTL] - Add PMP module
--- a/rtl/ibex_load_store_unit.sv
+++ b/rtl/ibex_load_store_unit.sv
@@ -336,11 +347,14 @@ module ibex_load_store_unit (
       WAIT_RVALID_MIS: begin
         // tell ID/EX stage to update the address
         addr_incr_req_o = 1'b1;
-        if (data_rvalid_i) begin
-          // first part rvalid is received
-          if (data_err_i) begin
+        // first part rvalid is received, or gets a pmp error
+        // pmp_err_i will hold stable until the address is updated, and
+        // therefore pmp_err_q is valid in both WAIT_GNT_MIS and WAIT_RVALID_MIS states
+        if (data_rvalid_i || pmp_err_q) begin
+          if (pmp_err_q || data_err_i) begin
             // first part created an error, abort transaction
             data_valid_o        = 1'b1;
+            data_or_pmp_err     = 1'b1;
             handle_misaligned_d = 1'b0;
             ls_fsm_ns           = IDLE;
           end else begin

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: data_or_pmp_err
                HdlValueInt: 0

UPD HdlStmIf@@ to 
    INS HdlOp@@OR_LOG to 
    UPD HdlOp@@OR_LOG to OR_LOG
        INS list@@ops to OR_LOG
        INS HdlValueId@@pmp_err_q to ops

UPD HdlStmIf@@ to 
    MOV HdlValueId@@data_rvalid_i to 
    HdlValueId: data_rvalid_i

UPD HdlStmIf@@ to 
    MOV HdlValueId@@data_err_i to 
    HdlValueId: data_err_i


CommitId: 892ad8a6213057e20e43f44a2eb70b02d90cce35
[RTL] - Add PMP module
--- a/rtl/ibex_load_store_unit.sv
+++ b/rtl/ibex_load_store_unit.sv
@@ -364,15 +378,18 @@ module ibex_load_store_unit (
         // tell ID/EX stage to update the address
         addr_incr_req_o = handle_misaligned_q;
         data_req_o      = 1'b1;
-        if (data_gnt_i) begin
+        if (data_gnt_i || pmp_err_q) begin
           ls_fsm_ns = WAIT_RVALID;
         end
       end
 
       WAIT_RVALID: begin
         data_req_o = 1'b0;
-        if (data_rvalid_i) begin
+        // pmp_err_i will hold stable until the address is updated, and
+        // therefore pmp_err_q is valid in both WAIT_GNT and WAIT_RVALID states
+        if (data_rvalid_i || pmp_err_q) begin
           data_valid_o        = 1'b1;
+          data_or_pmp_err     = data_err_i | pmp_err_q;
           handle_misaligned_d = 1'b0;
           ls_fsm_ns           = IDLE;
         end else begin

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: data_or_pmp_err
                HdlValueInt: 0

UPD HdlStmIf@@ to 
    INS HdlOp@@OR_LOG to 
    UPD HdlOp@@OR_LOG to OR_LOG
        INS list@@ops to OR_LOG
        INS HdlValueId@@pmp_err_q to ops

UPD HdlStmIf@@ to 
    MOV HdlValueId@@data_gnt_i to 
    HdlValueId: data_gnt_i

UPD HdlStmIf@@ to 
    MOV HdlValueId@@data_rvalid_i to 
    HdlValueId: data_rvalid_i

UPD HdlStmIf@@ to 
    INS HdlOp@@OR_LOG to 
    UPD HdlOp@@OR_LOG to OR_LOG
        INS list@@ops to OR_LOG
        INS HdlValueId@@pmp_err_q to ops
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: data_or_pmp_err
                HdlValueInt: 1


CommitId: 892ad8a6213057e20e43f44a2eb70b02d90cce35
[RTL] - Add PMP module
--- a/rtl/ibex_load_store_unit.sv
+++ b/rtl/ibex_load_store_unit.sv
@@ -402,10 +419,12 @@ module ibex_load_store_unit (
       ls_fsm_cs           <= IDLE;
       addr_last_q         <= '0;
       handle_misaligned_q <= '0;
+      pmp_err_q           <= '0;
     end else begin
       ls_fsm_cs           <= ls_fsm_ns;
       addr_last_q         <= addr_last_d;
       handle_misaligned_q <= handle_misaligned_d;
+      pmp_err_q           <= data_pmp_err_i;
     end
   end
 

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: data_or_pmp_err
                HdlValueInt: 0

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: pmp_err_q

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueId: data_pmp_err_i
    HdlValueId: pmp_err_q

UPD HdlStmIf@@ to 
    INS HdlOp@@OR_LOG to 
    UPD HdlOp@@OR_LOG to OR_LOG
        INS list@@ops to OR_LOG
        INS HdlValueId@@pmp_err_q to ops
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: data_or_pmp_err
                HdlOp: OR
                    list: ops
                        HdlValueId: data_err_i
                        HdlValueId: pmp_err_q


CommitId: 892ad8a6213057e20e43f44a2eb70b02d90cce35
[RTL] - Add PMP module
--- a/rtl/ibex_load_store_unit.sv
+++ b/rtl/ibex_load_store_unit.sv
@@ -428,10 +447,9 @@ module ibex_load_store_unit (
   // output to ID stage: mtval + AGU for misaligned transactions
   assign addr_last_o   = addr_last_q;
 
-  // to know what kind of error to signal, we need to know the type of the transaction to which
-  // the outsanding rvalid belongs.
-  assign load_err_o    = data_err_i & data_rvalid_i & ~data_we_q;
-  assign store_err_o   = data_err_i & data_rvalid_i &  data_we_q;
+  // Signal a load or store error depending on the transaction type outstanding
+  assign load_err_o    = data_or_pmp_err & ~data_we_q;
+  assign store_err_o   = data_or_pmp_err &  data_we_q;
 
   assign busy_o = (ls_fsm_cs == WAIT_RVALID) | (data_req_o == 1'b1);
 
ParseResult:
INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: AND
        list: ops
            HdlValueId: data_or_pmp_err
            HdlValueId: data_we_q
    HdlValueId: store_err_o

UPD HdlStmAssign@@ to 
    UPD HdlOp@@AND to AND
        UPD HdlOp@@AND to AND
            UPD HdlValueId@@data_err_i to data_or_pmp_err
            MOV HdlValueId@@data_err_i to ops
            HdlValueId: data_err_i
            DEL HdlValueId@@data_rvalid_i from ops
            DEL list@@ops from AND
        DEL HdlOp@@AND from ops

DEL HdlStmAssign@@ from objs
HdlStmAssign
    HdlOp: AND
        list: ops
            HdlOp: AND
                list: ops
                    HdlValueId: data_err_i
                    HdlValueId: data_rvalid_i
            HdlValueId: data_we_q
    HdlValueId: store_err_o


CommitId: 2d0152afe9aa00fe359842193c5ddc6ff2e1034c
Fix missing parameter due to removing of hardware loop
--- a/if_stage.sv
+++ b/if_stage.sv
@@ -31,8 +31,10 @@ import riscv_defines::*;
     module riscv_if_stage #(
       // CONFIG_REGION: HWL_SUPPORT
       `ifdef HWL_SUPPORT
+      parameter N_HWLP      = 2,
+      `endif
       parameter RDATA_WIDTH = 32
-      `endif // HWL_SUPPORT
+
 ) (
       input  logic        clk,
       input  logic        rst_n,
ParseResult:
INS HdlIdDef@@RDATA_WIDTH to params
HdlIdDef: RDATA_WIDTH
    HdlValueInt: 32
    HdlDirection: INTERNAL


CommitId: 2c75c2b2ec90bebb756386e1360810474323c1ad
Update lowrisc_ip to lowRISC/opentitan@1ae03937f
--- a/vendor/lowrisc_ip/ip/prim/rtl/prim_ram_2p_async_adv.sv
+++ b/vendor/lowrisc_ip/ip/prim/rtl/prim_ram_2p_async_adv.sv
@@ -59,11 +58,9 @@ module prim_ram_2p_async_adv #(
   output logic [1:0]       b_rerror_o, // Bit1: Uncorrectable, Bit0: Correctable
 
   // config
-  input [CfgW-1:0] cfg_i
+  input ram_2p_cfg_t       cfg_i
 );
 
-  logic [CfgW-1:0] unused_cfg;
-  assign unused_cfg = cfg_i;
 
   `ASSERT_INIT(CannotHaveEccAndParity_A, !(EnableParity && EnableECC))
 

ParseResult:
DEL HdlIdDef@@unused_cfg from objs
HdlIdDef: unused_cfg
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlOp: SUB
                        list: ops
                            HdlValueId: CfgW
                            HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: INTERNAL

DEL HdlStmAssign@@ from objs
HdlStmAssign
    HdlValueId: cfg_i
    HdlValueId: unused_cfg


CommitId: 8613e880fcc3edd7fb9a6819edacbbb5c7cd1592
LSU cleanup, abort misaligned ops if first part fails
--- a/rtl/ibex_load_store_unit.sv
+++ b/rtl/ibex_load_store_unit.sv
@@ -95,15 +99,16 @@ module ibex_load_store_unit (
 
   ls_fsm_e ls_fsm_cs, ls_fsm_ns;
 
-  logic [31:0]  rdata_q;
+  assign data_addr = adder_result_ex_i;
 
   ///////////////////
   // BE generation //
   ///////////////////
+
   always_comb begin
     unique case (data_type_ex_i) // Data type 00 Word, 01 Half word, 11,10 byte
       2'b00: begin // Writing a word
-        if (!misaligned_st) begin // non-misaligned case
+        if (!handle_misaligned_q) begin // first part of potentially misaligned transaction
           unique case (data_addr[1:0])
             2'b00:   data_be = 4'b1111;
             2'b01:   data_be = 4'b1110;

ParseResult:
MOV HdlIdDef@@rdata_q to objs
HdlIdDef: rdata_q
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 31
                    HdlValueInt: 0
    HdlDirection: INTERNAL

UPD HdlStmIf@@ to 
    UPD HdlOp@@NEG_LOG to NEG_LOG
        UPD HdlValueId@@misaligned_st to handle_misaligned_q


CommitId: 8613e880fcc3edd7fb9a6819edacbbb5c7cd1592
LSU cleanup, abort misaligned ops if first part fails
--- a/rtl/ibex_load_store_unit.sv
+++ b/rtl/ibex_load_store_unit.sv
@@ -111,7 +116,7 @@ module ibex_load_store_unit (
             2'b11:   data_be = 4'b1000;
             default: data_be = 'X;
           endcase // case (data_addr[1:0])
-        end else begin // misaligned case
+        end else begin // second part of misaligned transaction
           unique case (data_addr[1:0])
             2'b00:   data_be = 4'b0000; // this is not used, but included for completeness
             2'b01:   data_be = 4'b0001;

ParseResult:
UPD HdlStmIf@@ to 
    UPD HdlOp@@NEG_LOG to NEG_LOG
        UPD HdlValueId@@misaligned_st to handle_misaligned_q


CommitId: 8613e880fcc3edd7fb9a6819edacbbb5c7cd1592
LSU cleanup, abort misaligned ops if first part fails
--- a/rtl/ibex_load_store_unit.sv
+++ b/rtl/ibex_load_store_unit.sv
@@ -123,7 +128,7 @@ module ibex_load_store_unit (
       end
 
       2'b01: begin // Writing a half word
-        if (!misaligned_st) begin // non-misaligned case
+        if (!handle_misaligned_q) begin // first part of potentially misaligned transaction
           unique case (data_addr[1:0])
             2'b00:   data_be = 4'b0011;
             2'b01:   data_be = 4'b0110;

ParseResult:
UPD HdlStmIf@@ to 
    UPD HdlOp@@NEG_LOG to NEG_LOG
        UPD HdlValueId@@misaligned_st to handle_misaligned_q


CommitId: 8613e880fcc3edd7fb9a6819edacbbb5c7cd1592
LSU cleanup, abort misaligned ops if first part fails
--- a/rtl/ibex_load_store_unit.sv
+++ b/rtl/ibex_load_store_unit.sv
@@ -131,7 +136,7 @@ module ibex_load_store_unit (
             2'b11:   data_be = 4'b1000;
             default: data_be = 'X;
           endcase // case (data_addr[1:0])
-        end else begin // misaligned case
+        end else begin // second part of misaligned transaction
           data_be = 4'b0001;
         end
       end

ParseResult:
UPD HdlStmIf@@ to 
    UPD HdlOp@@NEG_LOG to NEG_LOG
        UPD HdlValueId@@misaligned_st to handle_misaligned_q


CommitId: 8613e880fcc3edd7fb9a6819edacbbb5c7cd1592
LSU cleanup, abort misaligned ops if first part fails
--- a/rtl/ibex_load_store_unit.sv
+++ b/rtl/ibex_load_store_unit.sv
@@ -203,6 +220,10 @@ module ibex_load_store_unit (
     endcase
   end
 
+  ////////////////////
+  // Sign extension //
+  ////////////////////
+
   // sign extension for half words
   always_comb begin
     unique case (rdata_offset_q)

ParseResult:
UPD HdlStmProcess@@ to 
    INS HdlStmBlock@@SEQ to 
    INS HdlStmProcessTriggerConstrain@@FF to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmIf@@ to 
    INS list@@elifs to 
    INS HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlStmAssign
                HdlValueId: rdata_d
                HdlValueId: rdata_q
            HdlStmAssign
                HdlValueId: rdata_offset_d
                HdlValueId: rdata_offset_q
            HdlStmAssign
                HdlValueId: data_type_d
                HdlValueId: data_type_q
            HdlStmAssign
                HdlValueId: data_sign_ext_d
                HdlValueId: data_sign_ext_q
            HdlStmAssign
                HdlValueId: data_we_d
                HdlValueId: data_we_q


CommitId: d0923fa5d1a70aab6af6c912f377ccaf9530f3dd
ibex_counter: Use always_ff
--- a/rtl/ibex_counter.sv
+++ b/rtl/ibex_counter.sv
@@ -56,7 +56,7 @@ module ibex_counter #(
 `endif
 
   // Counter flop
-  always @(`COUNTER_FLOP_RST) begin
+  always_ff @(`COUNTER_FLOP_RST) begin
     if (!rst_ni) begin
       counter_q <= '0;
     end else begin
ParseResult:
UPD HdlStmProcess@@ to 
    INS HdlStmProcessTriggerConstrain@@FF to 


CommitId: 2aacd2b98be61fa4c9b633d1ddba9d1d5c894faf
[Priv modes] Add support for U-Mode
--- a/rtl/ibex_id_stage.sv
+++ b/rtl/ibex_id_stage.sv
@@ -75,6 +75,8 @@ module ibex_id_stage #(
     output logic                  csr_restore_mret_id_o,
     output logic                  csr_save_cause_o,
     output logic [31:0]           csr_mtval_o,
+    input  ibex_pkg::priv_lvl_e   priv_mode_i,
+    input  logic                  csr_mstatus_tw_i,
     input  logic                  illegal_csr_insn_i,
 
     // Interface to load store unit

ParseResult:
INS HdlIdDef@@priv_mode_i to ports
HdlIdDef: priv_mode_i
    HdlOp: DOUBLE_COLON
        list: ops
            HdlValueId: ibex_pkg
            HdlValueId: priv_lvl_e
    HdlDirection: IN

INS HdlIdDef@@csr_mstatus_tw_i to ports
HdlIdDef: csr_mstatus_tw_i
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: IN


CommitId: d805b5ad42095126480dbcffdb85dc0b27882086
fix shuffle.sci.h
--- a/id_stage.sv
+++ b/id_stage.sv
@@ -238,6 +238,8 @@ module riscv_id_stage
   logic [31:0] imm_s3_type;
   logic [31:0] imm_vs_type;
   logic [31:0] imm_vu_type;
+  logic [31:0] imm_shuffleb_type;
+  logic [31:0] imm_shuffleh_type;
   logic [31:0] imm_shuffle_type;
   logic [31:0] imm_clip_type;
 

ParseResult:
INS HdlIdDef@@imm_shuffleb_type to objs
HdlIdDef: imm_shuffleb_type
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 31
                    HdlValueInt: 0
    HdlDirection: INTERNAL

INS HdlIdDef@@imm_shuffleh_type to objs
HdlIdDef: imm_shuffleh_type
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 31
                    HdlValueInt: 0
    HdlDirection: INTERNAL


CommitId: d805b5ad42095126480dbcffdb85dc0b27882086
fix shuffle.sci.h
--- a/id_stage.sv
+++ b/id_stage.sv
@@ -374,7 +376,8 @@ module riscv_id_stage
   assign imm_vu_type = { 26'b0, instr[24:20], instr[25] };
 
   // same format as rS2 for shuffle needs, expands immediate
-  assign imm_shuffle_type = {6'b0, instr[28:27], 6'b0, instr[24:23], 6'b0, instr[22:21], 6'b0, instr[20], instr[25]};
+  assign imm_shuffleb_type = {6'b0, instr[28:27], 6'b0, instr[24:23], 6'b0, instr[22:21], 6'b0, instr[20], instr[25]};
+  assign imm_shuffleh_type = {15'h0, instr[20], 15'h0, instr[25]};
 
   // clipping immediate, uses a small barrel shifter to pre-process the
   // immediate and an adder to subtract 1

ParseResult:
INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: CONCAT
        list: ops
            HdlOp: CONCAT
                list: ops
                    HdlOp: CONCAT
                        list: ops
                            HdlValueInt: 0
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: instr
                                    HdlValueInt: 20
                    HdlValueInt: 0
            HdlOp: INDEX
                list: ops
                    HdlValueId: instr
                    HdlValueInt: 25
    HdlValueId: imm_shuffleh_type

UPD HdlStmAssign@@ to 
    UPD HdlValueId@@imm_shuffle_type to imm_shuffleb_type


CommitId: d805b5ad42095126480dbcffdb85dc0b27882086
fix shuffle.sci.h
--- a/id_stage.sv
+++ b/id_stage.sv
@@ -580,13 +583,22 @@ module riscv_id_stage
       OP_B_REGB_OR_FWD:  operand_b = operand_b_fw_id;
       OP_B_REGC_OR_FWD:  operand_b = operand_c_fw_id;
       OP_B_IMM:          operand_b = imm_b;
-      default:            operand_b = operand_b_fw_id;
+      default:           operand_b = operand_b_fw_id;
     endcase // case (alu_op_b_mux_sel)
   end
 
 
-  // scalar replication for operand B
-  assign operand_b_vec = (alu_vec_mode == VEC_MODE8) ? {4{operand_b[7:0]}} : {2{operand_b[15:0]}};
+  // scalar replication for operand B and shuffle type
+  always_comb
+  begin
+    if (alu_vec_mode == VEC_MODE8) begin
+      operand_b_vec    = {4{operand_b[7:0]}};
+      imm_shuffle_type = imm_shuffleb_type;
+    end else begin
+      operand_b_vec    = {2{operand_b[15:0]}};
+      imm_shuffle_type = imm_shuffleh_type;
+    end
+  end
 
   // choose normal or scalar replicated version of operand b
   assign alu_operand_b = (scalar_replication == 1'b1) ? operand_b_vec : operand_b;
ParseResult:
INS HdlStmProcess@@ to objs

UPD HdlStmProcess@@ to 
    INS HdlStmBlock@@SEQ to 
    INS HdlStmProcessTriggerConstrain@@COMB to 

UPD HdlStmAssign@@ to 
    UPD HdlOp@@TERNARY to TERNARY
        UPD list@@ops to body
        MOV list@@ops to TERNARY
        list: ops
            HdlOp: EQ
                list: ops
                    HdlValueId: alu_vec_mode
                    HdlValueId: VEC_MODE8
            HdlOp: REPL_CONCAT
                list: ops
                    HdlValueInt: 4
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: operand_b
                            HdlOp: DOWNTO
                                list: ops
                                    HdlValueInt: 7
                                    HdlValueInt: 0
            HdlOp: REPL_CONCAT
                list: ops
                    HdlValueInt: 2
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: operand_b
                            HdlOp: DOWNTO
                                list: ops
                                    HdlValueInt: 15
                                    HdlValueInt: 0
        MOV HdlOp@@EQ to ops
        HdlOp: EQ
            list: ops
                HdlValueId: alu_vec_mode
                HdlValueId: VEC_MODE8
        MOV HdlOp@@REPL_CONCAT to ops
        HdlOp: REPL_CONCAT
            list: ops
                HdlValueInt: 4
                HdlOp: INDEX
                    list: ops
                        HdlValueId: operand_b
                        HdlOp: DOWNTO
                            list: ops
                                HdlValueInt: 7
                                HdlValueInt: 0
        MOV HdlOp@@REPL_CONCAT to ops
        HdlOp: REPL_CONCAT
            list: ops
                HdlValueInt: 2
                HdlOp: INDEX
                    list: ops
                        HdlValueId: operand_b
                        HdlOp: DOWNTO
                            list: ops
                                HdlValueInt: 15
                                HdlValueInt: 0
    UPD HdlOp@@TERNARY to ASSIGN
    MOV HdlOp@@TERNARY to 
    HdlOp: TERNARY
        list: ops
            HdlOp: EQ
                list: ops
                    HdlValueId: alu_vec_mode
                    HdlValueId: VEC_MODE8
            HdlOp: REPL_CONCAT
                list: ops
                    HdlValueInt: 4
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: operand_b
                            HdlOp: DOWNTO
                                list: ops
                                    HdlValueInt: 7
                                    HdlValueInt: 0
            HdlOp: REPL_CONCAT
                list: ops
                    HdlValueInt: 2
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: operand_b
                            HdlOp: DOWNTO
                                list: ops
                                    HdlValueInt: 15
                                    HdlValueInt: 0
    DEL HdlValueId@@operand_b_vec from 

INS HdlStmIf@@ to body

UPD HdlStmIf@@ to 
    INS HdlStmBlock@@SEQ to 
    INS list@@elifs to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: imm_shuffle_type
                HdlValueId: imm_shuffleb_type
        UPD HdlOp@@ASSIGN to ASSIGN
            INS list@@ops to ASSIGN
            INS HdlValueId@@operand_b_vec to ops
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
        INS HdlOp@@ASSIGN to body
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: imm_shuffle_type
                HdlValueId: imm_shuffleh_type
        UPD HdlOp@@ASSIGN to ASSIGN
            INS list@@ops to ASSIGN
            INS HdlValueId@@operand_b_vec to ops

DEL HdlStmAssign@@ from objs


CommitId: 89e5fc11ed39182df86f338c640ab29334a422eb
[RTL] Add configurable third pipeline stage
--- a/rtl/ibex_core.sv
+++ b/rtl/ibex_core.sv
@@ -19,6 +19,7 @@ module ibex_core #(
     parameter bit          RV32E                    = 1'b0,
     parameter bit          RV32M                    = 1'b1,
     parameter bit          BranchTargetALU          = 1'b0,
+    parameter bit          WritebackStage           = 1'b0,
     parameter              MultiplierImplementation = "fast",
     parameter bit          DbgTriggerEn             = 1'b0,
     parameter int unsigned DmHaltAddr               = 32'h1A110800,

ParseResult:
INS HdlIdDef@@WritebackStage to params
HdlIdDef: WritebackStage
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: bit
    HdlValueInt: 0
    HdlDirection: INTERNAL


CommitId: 89e5fc11ed39182df86f338c640ab29334a422eb
[RTL] Add configurable third pipeline stage
--- a/rtl/ibex_core.sv
+++ b/rtl/ibex_core.sv
@@ -109,7 +110,9 @@ module ibex_core #(
   logic        illegal_c_insn_id;      // Illegal compressed instruction sent to ID stage
   logic [31:0] pc_if;                  // Program counter in IF stage
   logic [31:0] pc_id;                  // Program counter in ID stage
+  logic [31:0] pc_wb;                  // Program counter in WB stage
 
+  logic        instr_first_cycle_id;
   logic        instr_valid_clear;
   logic        pc_set;
   pc_sel_e     pc_mux_id;              // Mux selector for next PC

ParseResult:
INS HdlIdDef@@lsu_load to objs
HdlIdDef: lsu_load
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL


CommitId: 89e5fc11ed39182df86f338c640ab29334a422eb
[RTL] Add configurable third pipeline stage
--- a/rtl/ibex_core.sv
+++ b/rtl/ibex_core.sv
@@ -130,9 +133,28 @@ module ibex_core #(
   // Core busy signals
   logic        ctrl_busy;
   logic        if_busy;
+  logic        lsu_load;
   logic        lsu_busy;
   logic        core_busy_d, core_busy_q;
 
+  // Register File
+  logic [4:0]  rf_raddr_a;
+  logic [31:0] rf_rdata_a;
+  logic [4:0]  rf_raddr_b;
+  logic [31:0] rf_rdata_b;
+  logic [4:0]  rf_waddr_wb;
+  logic [31:0] rf_wdata_wb;
+  // Writeback register write data that can be used on the forwarding path (doesn't factor in memory
+  // read data as this is too late for the forwarding path)
+  logic [31:0] rf_wdata_fwd_wb;
+  logic [31:0] rf_wdata_lsu;
+  logic        rf_we_wb;
+  logic        rf_we_lsu;
+
+  logic [4:0]  rf_waddr_id;
+  logic [31:0] rf_wdata_id;
+  logic        rf_we_id;
+
   // ALU Control
   alu_op_e     alu_operator_ex;
   logic [31:0] alu_operand_a_ex;

ParseResult:
MOV HdlIdDef@@valid_csr_id to objs
HdlIdDef: valid_csr_id
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

INS HdlIdDef@@rf_waddr_id to objs
HdlIdDef: rf_waddr_id
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 4
                    HdlValueInt: 0
    HdlDirection: INTERNAL

UPD HdlIdDef@@valid_csr_id to rf_we_id


CommitId: 89e5fc11ed39182df86f338c640ab29334a422eb
[RTL] Add configurable third pipeline stage
--- a/rtl/ibex_core.sv
+++ b/rtl/ibex_core.sv
@@ -142,7 +164,7 @@ module ibex_core #(
   logic [11:0] bt_operand_imm_ex;
 
   logic [31:0] alu_adder_result_ex;    // Used to forward computed address to LSU
-  logic [31:0] regfile_wdata_ex;
+  logic [31:0] result_ex;
 
   // Multiplier Control
   logic        mult_en_ex;

ParseResult:
MOV HdlIdDef@@data_we_ex to objs
HdlIdDef: data_we_ex
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

MOV HdlIdDef@@data_sign_ext_ex to objs
HdlIdDef: data_sign_ext_ex
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

MOV HdlIdDef@@data_type_ex to objs
HdlIdDef: data_type_ex
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: INTERNAL

UPD HdlIdDef@@data_we_ex to multdiv_ready_id

UPD HdlIdDef@@data_sign_ext_ex to csr_op_en

UPD HdlIdDef@@data_type_ex to lsu_type


CommitId: 89e5fc11ed39182df86f338c640ab29334a422eb
[RTL] Add configurable third pipeline stage
--- a/rtl/ibex_core.sv
+++ b/rtl/ibex_core.sv
@@ -152,11 +174,12 @@ module ibex_core #(
   logic [1:0]  multdiv_signed_mode_ex;
   logic [31:0] multdiv_operand_a_ex;
   logic [31:0] multdiv_operand_b_ex;
+  logic        multdiv_ready_id;
 
   // CSR control
   logic        csr_access;
-  logic        valid_csr_id;
   csr_op_e     csr_op;
+  logic        csr_op_en;
   csr_num_e    csr_addr;
   logic [31:0] csr_rdata;
   logic [31:0] csr_wdata;

ParseResult:
INS HdlIdDef@@lsu_req_done to objs
HdlIdDef: lsu_req_done
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL


CommitId: 89e5fc11ed39182df86f338c640ab29334a422eb
[RTL] Add configurable third pipeline stage
--- a/rtl/ibex_core.sv
+++ b/rtl/ibex_core.sv
@@ -165,12 +188,12 @@ module ibex_core #(
                                        // or missing write permissions
 
   // Data Memory Control
-  logic        data_we_ex;
-  logic [1:0]  data_type_ex;
-  logic        data_sign_ext_ex;
-  logic        data_req_ex;
-  logic [31:0] data_wdata_ex;
-  logic [31:0] regfile_wdata_lsu;
+  logic        lsu_we;
+  logic [1:0]  lsu_type;
+  logic        lsu_sign_ext;
+  logic        lsu_req;
+  logic [31:0] lsu_wdata;
+  logic        lsu_req_done;
 
   // stall control
   logic        id_in_ready;

ParseResult:
INS HdlIdDef@@ready_wb to objs
HdlIdDef: ready_wb
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

INS HdlIdDef@@rf_write_wb to objs
HdlIdDef: rf_write_wb
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

INS HdlIdDef@@outstanding_load_wb to objs
HdlIdDef: outstanding_load_wb
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

INS HdlIdDef@@outstanding_store_wb to objs
HdlIdDef: outstanding_store_wb
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL


CommitId: 89e5fc11ed39182df86f338c640ab29334a422eb
[RTL] Add configurable third pipeline stage
--- a/rtl/ibex_core.sv
+++ b/rtl/ibex_core.sv
@@ -181,6 +204,14 @@ module ibex_core #(
   // Signals between instruction core interface and pipe (if and id stages)
   logic        instr_req_int;          // Id stage asserts a req to instruction core interface
 
+  // Writeback stage
+  logic           en_wb;
+  wb_instr_type_e instr_type_wb;
+  logic           ready_wb;
+  logic           rf_write_wb;
+  logic           outstanding_load_wb;
+  logic           outstanding_store_wb;
+
   // Interrupts
   logic        irq_pending;
   logic        nmi_mode;

ParseResult:
INS HdlIdDef@@csr_save_wb to objs
HdlIdDef: csr_save_wb
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL


CommitId: 89e5fc11ed39182df86f338c640ab29334a422eb
[RTL] Add configurable third pipeline stage
--- a/rtl/ibex_core.sv
+++ b/rtl/ibex_core.sv
@@ -197,6 +228,7 @@ module ibex_core #(
 
   logic        csr_save_if;
   logic        csr_save_id;
+  logic        csr_save_wb;
   logic        csr_restore_mret_id;
   logic        csr_restore_dret_id;
   logic        csr_save_cause;

ParseResult:
MOV HdlIdDef@@instr_ret_compressed to objs
HdlIdDef: instr_ret_compressed
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

MOV HdlIdDef@@instr_ret to objs
HdlIdDef: instr_ret
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

UPD HdlIdDef@@perf_imiss to instr_id_done

UPD HdlIdDef@@instr_ret_compressed to instr_id_done_compressed

UPD HdlIdDef@@instr_ret to instr_done_wb


CommitId: 89e5fc11ed39182df86f338c640ab29334a422eb
[RTL] Add configurable third pipeline stage
--- a/rtl/ibex_core.sv
+++ b/rtl/ibex_core.sv
@@ -514,10 +566,11 @@ module ibex_core #(
       .multdiv_signed_mode_i      ( multdiv_signed_mode_ex   ),
       .multdiv_operand_a_i        ( multdiv_operand_a_ex     ),
       .multdiv_operand_b_i        ( multdiv_operand_b_ex     ),
+      .multdiv_ready_id_i         ( multdiv_ready_id         ),
 
       // Outputs
       .alu_adder_result_ex_o      ( alu_adder_result_ex      ), // to LSU
-      .regfile_wdata_ex_o         ( regfile_wdata_ex         ), // to ID
+      .result_ex_o                ( result_ex                ), // to ID
 
       .jump_target_o              ( jump_target_ex           ), // to IF
       .branch_decision_o          ( branch_decision          ), // to ID

ParseResult:
DEL HdlStmAssign@@ from objs
HdlStmAssign
    HdlOp: AND
        list: ops
            HdlOp: AND
                list: ops
                    HdlValueId: data_req_o
                    HdlValueId: data_gnt_i
            HdlOp: NEG
                list: ops
                    HdlValueId: data_we_o
    HdlValueId: perf_load


CommitId: d717e2385ed2d61290cb52148a79bef433880209
Update lowrisc_ip to lowRISC/opentitan@7aa5c2b89
--- a/vendor/lowrisc_ip/ip/prim/rtl/prim_lc_sync.sv
+++ b/vendor/lowrisc_ip/ip/prim/rtl/prim_lc_sync.sv
@@ -26,15 +30,19 @@ module prim_lc_sync #(
   `ASSERT_INIT(NumCopiesMustBeGreaterZero_A, NumCopies > 0)
 
   logic [lc_ctrl_pkg::TxWidth-1:0] lc_en;
-  prim_flop_2sync #(
-    .Width(lc_ctrl_pkg::TxWidth),
-    .ResetValue(lc_ctrl_pkg::TxWidth'(lc_ctrl_pkg::Off))
-  ) u_prim_flop_2sync (
-    .clk_i,
-    .rst_ni,
-    .d_i(lc_en_i),
-    .q_o(lc_en)
-  );
+  if (AsyncOn) begin : gen_flops
+    prim_flop_2sync #(
+      .Width(lc_ctrl_pkg::TxWidth),
+      .ResetValue(lc_ctrl_pkg::TxWidth'(lc_ctrl_pkg::Off))
+    ) u_prim_flop_2sync (
+      .clk_i,
+      .rst_ni,
+      .d_i(lc_en_i),
+      .q_o(lc_en)
+    );
+  end else begin : gen_no_flops
+    assign lc_en = lc_en_i;
+  end
 
   for (genvar j = 0; j < NumCopies; j++) begin : gen_buffs
     logic [lc_ctrl_pkg::TxWidth-1:0] lc_en_out;
ParseResult:
INS HdlStmIf@@ to objs

UPD HdlStmIf@@ to 
    INS HdlValueId@@AsyncOn to 
    INS HdlStmBlock@@SEQ to 
    INS list@@elifs to 
    INS HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlStmAssign
                HdlValueId: lc_en_i
                HdlValueId: lc_en
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ


CommitId: 2a947c5e7fa79ea951dabcf68a566cd147d853a3
[RTL] Fix timing path around exceptions and pc_set
--- a/rtl/ibex_controller.sv
+++ b/rtl/ibex_controller.sv
@@ -101,13 +101,13 @@ module ibex_controller (
   logic debug_mode_q, debug_mode_d;
   logic load_err_q, load_err_d;
   logic store_err_q, store_err_d;
+  logic exc_req_q, exc_req_d;
+  logic illegal_insn_q, illegal_insn_d;
 
   logic stall;
   logic halt_if;
   logic flush_id;
   logic illegal_dret;
-  logic illegal_insn;
-  logic exc_req;
   logic exc_req_lsu;
   logic special_req;
   logic enter_debug_mode;

ParseResult:
MOV HdlIdDef@@exc_req to objs
HdlIdDef: exc_req
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

MOV HdlIdDef@@illegal_insn to objs
HdlIdDef: illegal_insn
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

INS HdlIdDef@@exc_req_q to objs
HdlIdDef: exc_req_q
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

INS HdlIdDef@@exc_req_d to objs
HdlIdDef: exc_req_d
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

UPD HdlIdDef@@exc_req to illegal_insn_q

UPD HdlIdDef@@illegal_insn to illegal_insn_d


CommitId: 2a947c5e7fa79ea951dabcf68a566cd147d853a3
[RTL] Fix timing path around exceptions and pc_set
--- a/rtl/ibex_controller.sv
+++ b/rtl/ibex_controller.sv
@@ -130,7 +130,7 @@ module ibex_controller (
   // glitches
   always_ff @(negedge clk_i) begin
     // print warning in case of decoding errors
-    if ((ctrl_fsm_cs == DECODE) && instr_valid_i && !instr_fetch_err_i && illegal_insn) begin
+    if ((ctrl_fsm_cs == DECODE) && instr_valid_i && !instr_fetch_err_i && illegal_insn_d) begin
       $display("%t: Illegal instruction (hart %0x) at PC 0x%h: 0x%h", $time, ibex_core.hart_id_i,
                ibex_id_stage.pc_id_i, ibex_id_stage.instr_rdata_i);
     end

ParseResult:
UPD HdlStmIf@@ to 
    UPD HdlOp@@AND_LOG to AND_LOG
        UPD HdlValueId@@illegal_insn to illegal_insn_d


CommitId: 2a947c5e7fa79ea951dabcf68a566cd147d853a3
[RTL] Fix timing path around exceptions and pc_set
--- a/rtl/ibex_controller.sv
+++ b/rtl/ibex_controller.sv
@@ -157,17 +157,25 @@ module ibex_controller (
   // "Executing DRET outside of Debug Mode causes an illegal instruction exception."
   // [Debug Spec v0.13.2, p.41]
   assign illegal_dret = dret_insn & ~debug_mode_q;
-  assign illegal_insn = illegal_insn_i | illegal_dret;
+  // This is recorded in the illegal_insn_q flop to help timing.  Specifically
+  // it is needed to break the path from ibex_cs_registers/illegal_csr_insn_o
+  // to pc_set_o.  Clear when controller is in FLUSH so it won't remain set
+  // once illegal instruction is handled.
+  assign illegal_insn_d = (illegal_insn_i | illegal_dret) & (ctrl_fsm_cs != FLUSH);
 
   // exception requests
-  assign exc_req     = ecall_insn | ebrk_insn | illegal_insn | instr_fetch_err;
+  // requests are flopped in exc_req_q.  This is cleared when controller is in
+  // the FLUSH state so the cycle following exc_req_q won't remain set for an
+  // exception request that has just been handled.
+  assign exc_req_d = (ecall_insn | ebrk_insn | illegal_insn_d | instr_fetch_err) &
+                     (ctrl_fsm_cs != FLUSH);
 
   // LSU exception requests
   assign exc_req_lsu = store_err_i | load_err_i;
 
   // special requests: special instructions, pipeline flushes, exceptions...
   assign special_req = mret_insn | dret_insn | wfi_insn | csr_pipe_flush |
-      exc_req | exc_req_lsu;
+      exc_req_d | exc_req_lsu;
 
   ////////////////
   // Interrupts //

ParseResult:
UPD HdlStmAssign@@ to 
    INS HdlOp@@AND to 
    UPD HdlOp@@AND to AND
        INS list@@ops to AND
        INS HdlOp@@NE to ops
        HdlOp: NE
            list: ops
                HdlValueId: ctrl_fsm_cs
                HdlValueId: FLUSH

UPD HdlStmAssign@@ to 
    UPD HdlValueId@@illegal_insn to illegal_insn_d
    MOV HdlOp@@OR to 
    HdlOp: OR
        list: ops
            HdlValueId: illegal_insn_i
            HdlValueId: illegal_dret

UPD HdlStmAssign@@ to 
    UPD HdlValueId@@exc_req to exc_req_d
    MOV HdlOp@@OR to 
    HdlOp: OR
        list: ops
            HdlOp: OR
                list: ops
                    HdlOp: OR
                        list: ops
                            HdlValueId: ecall_insn
                            HdlValueId: ebrk_insn
                    HdlValueId: illegal_insn
            HdlValueId: instr_fetch_err
    UPD HdlOp@@OR to OR
        UPD HdlOp@@OR to OR
            UPD HdlValueId@@illegal_insn to illegal_insn_d

UPD HdlStmAssign@@ to 
    UPD HdlOp@@OR to OR
        UPD HdlOp@@OR to OR
            UPD HdlValueId@@exc_req to exc_req_d


CommitId: 2a947c5e7fa79ea951dabcf68a566cd147d853a3
[RTL] Fix timing path around exceptions and pc_set
--- a/rtl/ibex_controller.sv
+++ b/rtl/ibex_controller.sv
@@ -461,7 +469,7 @@ module ibex_controller (
 
         // exceptions: set exception PC, save PC and exception cause
         // exc_req_lsu is high for one clock cycle only (in DECODE)
-        if (exc_req || store_err_q || load_err_q) begin
+        if (exc_req_q || store_err_q || load_err_q) begin
           pc_set_o         = 1'b1;
           pc_mux_o         = PC_EXC;
           exc_pc_mux_o     = debug_mode_q ? EXC_PC_DBG_EXC : EXC_PC_EXC;

ParseResult:
UPD HdlStmIf@@ to 
    UPD HdlOp@@OR_LOG to OR_LOG
        UPD HdlOp@@OR_LOG to OR_LOG
            UPD HdlValueId@@exc_req to exc_req_q


CommitId: 2a947c5e7fa79ea951dabcf68a566cd147d853a3
[RTL] Fix timing path around exceptions and pc_set
--- a/rtl/ibex_controller.sv
+++ b/rtl/ibex_controller.sv
@@ -473,7 +481,7 @@ module ibex_controller (
             exc_cause_o = EXC_CAUSE_INSTR_ACCESS_FAULT;
             csr_mtval_o = pc_id_i;
 
-          end else if (illegal_insn) begin
+          end else if (illegal_insn_q) begin
             exc_cause_o = EXC_CAUSE_ILLEGAL_INSN;
             csr_mtval_o = instr_is_compressed_i ? {16'b0, instr_compressed_i} : instr_i;
 

ParseResult:
UPD HdlStmIf@@ to 
    UPD HdlOp@@OR_LOG to OR_LOG
        UPD HdlOp@@OR_LOG to OR_LOG
            UPD HdlValueId@@exc_req to exc_req_q

UPD HdlStmIf@@ to 
    UPD HdlValueId@@illegal_insn to illegal_insn_q


CommitId: 2a947c5e7fa79ea951dabcf68a566cd147d853a3
[RTL] Fix timing path around exceptions and pc_set
--- a/rtl/ibex_controller.sv
+++ b/rtl/ibex_controller.sv
@@ -544,7 +552,7 @@ module ibex_controller (
             // start handling IRQs when doing CSR-related pipeline flushes
             ctrl_fsm_ns           = IRQ_TAKEN;
           end
-        end // exc_req
+        end // exc_req_q
 
         // single stepping
         // set exception registers, but do not jump into handler [Debug Spec v0.13.2, p.44]

ParseResult:
UPD HdlStmIf@@ to 
    UPD HdlOp@@OR_LOG to OR_LOG
        UPD HdlOp@@OR_LOG to OR_LOG
            UPD HdlValueId@@exc_req to exc_req_q


CommitId: 2a947c5e7fa79ea951dabcf68a566cd147d853a3
[RTL] Fix timing path around exceptions and pc_set
--- a/rtl/ibex_controller.sv
+++ b/rtl/ibex_controller.sv
@@ -586,17 +594,21 @@ module ibex_controller (
   // update registers
   always_ff @(posedge clk_i or negedge rst_ni) begin : update_regs
     if (!rst_ni) begin
-      ctrl_fsm_cs  <= RESET;
-      nmi_mode_q   <= 1'b0;
-      debug_mode_q <= 1'b0;
-      load_err_q   <= 1'b0;
-      store_err_q  <= 1'b0;
+      ctrl_fsm_cs    <= RESET;
+      nmi_mode_q     <= 1'b0;
+      debug_mode_q   <= 1'b0;
+      load_err_q     <= 1'b0;
+      store_err_q    <= 1'b0;
+      exc_req_q      <= 1'b0;
+      illegal_insn_q <= 1'b0;
     end else begin
-      ctrl_fsm_cs  <= ctrl_fsm_ns;
-      nmi_mode_q   <= nmi_mode_d;
-      debug_mode_q <= debug_mode_d;
-      load_err_q   <= load_err_d;
-      store_err_q  <= store_err_d;
+      ctrl_fsm_cs    <= ctrl_fsm_ns;
+      nmi_mode_q     <= nmi_mode_d;
+      debug_mode_q   <= debug_mode_d;
+      load_err_q     <= load_err_d;
+      store_err_q    <= store_err_d;
+      exc_req_q      <= exc_req_d;
+      illegal_insn_q <= illegal_insn_d;
     end
   end
 
ParseResult:
INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: exc_req_q

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: illegal_insn_q

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueId: exc_req_d
    HdlValueId: exc_req_q

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueId: illegal_insn_d
    HdlValueId: illegal_insn_q


CommitId: c7cb958f0d6f143d835e33d7efe27336cc7737c1
Update lowrisc_ip to lowRISC/opentitan@ca950b43a
--- a/vendor/lowrisc_ip/ip/prim/rtl/prim_secded_hamming_22_16_enc.sv
+++ b/vendor/lowrisc_ip/ip/prim/rtl/prim_secded_hamming_22_16_enc.sv
@@ -2,22 +2,21 @@
 // Licensed under the Apache License, Version 2.0, see LICENSE for details.
 // SPDX-License-Identifier: Apache-2.0
 //
-// SECDED Encoder generated by
-// util/design/secded_gen.py -m 6 -k 16 -s 1592631616 -c hamming
+// SECDED encoder generated by util/design/secded_gen.py
 
 module prim_secded_hamming_22_16_enc (
-  input        [15:0] in,
-  output logic [21:0] out
+  input        [15:0] data_i,
+  output logic [21:0] data_o
 );
 
   always_comb begin : p_encode
-    out = 22'(in);
-    out[16] = ^(out & 22'h00AD5B);
-    out[17] = ^(out & 22'h00366D);
-    out[18] = ^(out & 22'h00C78E);
-    out[19] = ^(out & 22'h0007F0);
-    out[20] = ^(out & 22'h00F800);
-    out[21] = ^(out & 22'h1FFFFF);
+    data_o = 22'(data_i);
+    data_o[16] = ^(data_o & 22'h00AD5B);
+    data_o[17] = ^(data_o & 22'h00366D);
+    data_o[18] = ^(data_o & 22'h00C78E);
+    data_o[19] = ^(data_o & 22'h0007F0);
+    data_o[20] = ^(data_o & 22'h00F800);
+    data_o[21] = ^(data_o & 22'h1FFFFF);
   end
 
 endmodule : prim_secded_hamming_22_16_enc
ParseResult:
UPD HdlIdDef@@in to data_i

UPD HdlIdDef@@out to data_o

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@out to data_o
            UPD HdlOp@@CALL to CALL
                UPD HdlValueId@@in to data_i
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@INDEX to INDEX
                UPD HdlValueId@@out to data_o
            UPD HdlOp@@XOR_UNARY to XOR_UNARY
                UPD HdlOp@@AND to AND
                    UPD HdlValueId@@out to data_o
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@INDEX to INDEX
                UPD HdlValueId@@out to data_o
            UPD HdlOp@@XOR_UNARY to XOR_UNARY
                UPD HdlOp@@AND to AND
                    UPD HdlValueId@@out to data_o
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@INDEX to INDEX
                UPD HdlValueId@@out to data_o
            UPD HdlOp@@XOR_UNARY to XOR_UNARY
                UPD HdlOp@@AND to AND
                    UPD HdlValueId@@out to data_o
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@INDEX to INDEX
                UPD HdlValueId@@out to data_o
            UPD HdlOp@@XOR_UNARY to XOR_UNARY
                UPD HdlOp@@AND to AND
                    UPD HdlValueId@@out to data_o
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@INDEX to INDEX
                UPD HdlValueId@@out to data_o
            UPD HdlOp@@XOR_UNARY to XOR_UNARY
                UPD HdlOp@@AND to AND
                    UPD HdlValueId@@out to data_o
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@INDEX to INDEX
                UPD HdlValueId@@out to data_o
            UPD HdlOp@@XOR_UNARY to XOR_UNARY
                UPD HdlOp@@AND to AND
                    UPD HdlValueId@@out to data_o


CommitId: e716b5add84e8850074795ab9a54c190e117e8d5
Add the Width parameter to prim_buf module
--- a/dv/uvm/core_ibex/common/prim/prim_buf.sv
+++ b/dv/uvm/core_ibex/common/prim/prim_buf.sv
@@ -8,13 +8,15 @@
 // Its contents are taken from the file which would be generated by FuseSoC.
 // https://github.com/lowRISC/ibex/issues/893
 
-module prim_buf (
-  input in_i,
-  output logic out_o
+module prim_buf #(
+  parameter int Width = 1
+) (
+  input        [Width-1:0] in_i,
+  output logic [Width-1:0] out_o
 );
 
   if (1) begin : gen_generic
-    prim_generic_buf u_impl_generic (
+    prim_generic_buf#(.Width(Width)) u_impl_generic (
       .*
     );
   end
ParseResult:
INS HdlIdDef@@Width to params
HdlIdDef: Width
    HdlValueId: int
    HdlValueInt: 1
    HdlDirection: INTERNAL

UPD HdlIdDef@@in_i to in_i
    INS HdlOp@@PARAMETRIZATION to in_i
    UPD HdlOp@@PARAMETRIZATION to PARAMETRIZATION
        INS list@@ops to PARAMETRIZATION
        INS HdlOp@@DOWNTO to ops
        HdlOp: DOWNTO
            list: ops
                HdlOp: SUB
                    list: ops
                        HdlValueId: Width
                        HdlValueInt: 1
                HdlValueInt: 0

UPD HdlIdDef@@out_o to out_o
    INS HdlOp@@INDEX to out_o
    UPD HdlOp@@INDEX to INDEX
        INS list@@ops to INDEX
        INS HdlOp@@DOWNTO to ops
        HdlOp: DOWNTO
            list: ops
                HdlOp: SUB
                    list: ops
                        HdlValueId: Width
                        HdlValueInt: 1
                HdlValueInt: 0

UPD HdlIdDef@@in_i to in_i
    MOV HdlValueId@@wire to in_i
    HdlValueId: wire

UPD HdlIdDef@@out_o to out_o
    MOV HdlValueId@@logic to out_o
    HdlValueId: logic


CommitId: 7728b7b6f2318fb4078945570a55af31ee77537a
Typo fix in muldiv: Reminder->Remainder
--- a/rtl/ibex_multdiv_fast.sv
+++ b/rtl/ibex_multdiv_fast.sv
@@ -59,7 +59,7 @@ module ibex_multdiv_fast (
   logic signed [34:0] mac_res_signed;
   logic        [34:0] mac_res_ext;
 
-  logic [33:0] mac_res_q, mac_res_n, mac_res, op_reminder_n;
+  logic [33:0] mac_res_q, mac_res_n, mac_res, op_remainder_n;
   logic [15:0] mult_op_a;
   logic [15:0] mult_op_b;
   logic [33:0] accum;

ParseResult:
UPD HdlIdDef@@op_reminder_n to op_remainder_n


CommitId: 7728b7b6f2318fb4078945570a55af31ee77537a
Typo fix in muldiv: Reminder->Remainder
--- a/rtl/ibex_multdiv_fast.sv
+++ b/rtl/ibex_multdiv_fast.sv
@@ -75,7 +75,7 @@ module ibex_multdiv_fast (
   logic [31:0] op_denominator_n;
   logic [31:0] op_numerator_n;
   logic [31:0] op_quotient_n;
-  logic [31:0] next_reminder;
+  logic [31:0] next_remainder;
   logic [32:0] next_quotient;
   logic [32:0] res_adder_h;
   logic        mult_is_ready;

ParseResult:
UPD HdlIdDef@@next_reminder to next_remainder


CommitId: 7728b7b6f2318fb4078945570a55af31ee77537a
Typo fix in muldiv: Reminder->Remainder
--- a/rtl/ibex_multdiv_fast.sv
+++ b/rtl/ibex_multdiv_fast.sv
@@ -107,7 +107,7 @@ module ibex_multdiv_fast (
         mult_en_i:
           mac_res_q <= mac_res_n;
         div_en_i:
-          mac_res_q <= op_reminder_n;
+          mac_res_q <= op_remainder_n;
         default:
           mac_res_q <= mac_res_q;
        endcase

ParseResult:
UPD HdlStmAssign@@ to 
    UPD HdlValueId@@op_reminder_n to op_remainder_n


CommitId: 7728b7b6f2318fb4078945570a55af31ee77537a
Typo fix in muldiv: Reminder->Remainder
--- a/rtl/ibex_multdiv_fast.sv
+++ b/rtl/ibex_multdiv_fast.sv
@@ -128,15 +128,15 @@ module ibex_multdiv_fast (
 
   assign res_adder_h   = alu_adder_ext_i[33:1];
 
-  assign next_reminder = is_greater_equal ? res_adder_h[31:0] : mac_res_q[31:0];
+  assign next_remainder = is_greater_equal ? res_adder_h[31:0] : mac_res_q[31:0];
   assign next_quotient = is_greater_equal ? {1'b0,op_quotient_q} | {1'b0,one_shift} :
                                             {1'b0,op_quotient_q};
 
   assign one_shift     = {31'b0, 1'b1} << div_counter_q;
 
   // The adder in the ALU computes alu_operand_a_o + alu_operand_b_o which means
-  // Reminder - Divisor. If Reminder - Divisor >= 0, is_greater_equal is equal to 1,
-  // the next Reminder is Reminder - Divisor contained in res_adder_h and the
+  // Remainder - Divisor. If Remainder - Divisor >= 0, is_greater_equal is equal to 1,
+  // the next Remainder is Remainder - Divisor contained in res_adder_h and the
   always_comb begin
     if ((mac_res_q[31] ^ op_denominator_q[31]) == 1'b0) begin
       is_greater_equal = (res_adder_h[31] == 1'b0);

ParseResult:
UPD HdlStmAssign@@ to 
    UPD HdlValueId@@next_reminder to next_remainder


CommitId: 7728b7b6f2318fb4078945570a55af31ee77537a
Typo fix in muldiv: Reminder->Remainder
--- a/rtl/ibex_multdiv_fast.sv
+++ b/rtl/ibex_multdiv_fast.sv
@@ -153,7 +153,7 @@ module ibex_multdiv_fast (
 
   always_comb begin : div_fsm
     div_counter_n    = div_counter_q - 5'h1;
-    op_reminder_n    = mac_res_q;
+    op_remainder_n    = mac_res_q;
     op_quotient_n    = op_quotient_q;
     divcurr_state_n  = divcurr_state_q;
     op_numerator_n   = op_numerator_q;

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@op_reminder_n to op_remainder_n


CommitId: 7728b7b6f2318fb4078945570a55af31ee77537a
Typo fix in muldiv: Reminder->Remainder
--- a/rtl/ibex_multdiv_fast.sv
+++ b/rtl/ibex_multdiv_fast.sv
@@ -166,12 +166,12 @@ module ibex_multdiv_fast (
         if (operator_i == MD_OP_DIV) begin
           // Check if the Denominator is 0
           // quotient for division by 0
-          op_reminder_n    = '1;
+          op_remainder_n    = '1;
           divcurr_state_n  = equal_to_zero ? MD_FINISH : MD_ABS_A;
         end else begin
           // Check if the Denominator is 0
-          // reminder for division by 0
-          op_reminder_n     = {2'b0, op_a_i};
+          // remainder for division by 0
+          op_remainder_n     = {2'b0, op_a_i};
           divcurr_state_n    = equal_to_zero ? MD_FINISH : MD_ABS_A;
         end
         // 0 - B = 0 iff B == 0

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@op_reminder_n to op_remainder_n

UPD HdlStmCase@@divcurr_state_q to divcurr_state_q
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@op_reminder_n to op_remainder_n
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@op_reminder_n to op_remainder_n
            UPD HdlOp@@CONCAT to CONCAT
                UPD HdlOp@@CONCAT to CONCAT
                    UPD HdlOp@@INDEX to INDEX
                        UPD HdlValueId@@next_reminder to next_remainder

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@op_reminder_n to op_remainder_n
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@op_reminder_n to op_remainder_n


CommitId: 7728b7b6f2318fb4078945570a55af31ee77537a
Typo fix in muldiv: Reminder->Remainder
--- a/rtl/ibex_multdiv_fast.sv
+++ b/rtl/ibex_multdiv_fast.sv
@@ -193,8 +193,8 @@ module ibex_multdiv_fast (
       end
 
       MD_ABS_B: begin
-        // reminder
-        op_reminder_n     = { 33'h0, op_numerator_q[31]};
+        // remainder
+        op_remainder_n     = { 33'h0, op_numerator_q[31]};
         // B abs value
         op_denominator_n  = div_sign_b ? alu_adder_i : op_b_i;
         divcurr_state_n   = MD_COMP;

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@op_reminder_n to op_remainder_n

UPD HdlStmCase@@divcurr_state_q to divcurr_state_q
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@op_reminder_n to op_remainder_n
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@op_reminder_n to op_remainder_n
            UPD HdlOp@@CONCAT to CONCAT
                UPD HdlOp@@CONCAT to CONCAT
                    UPD HdlOp@@INDEX to INDEX
                        UPD HdlValueId@@next_reminder to next_remainder


CommitId: 7728b7b6f2318fb4078945570a55af31ee77537a
Typo fix in muldiv: Reminder->Remainder
--- a/rtl/ibex_multdiv_fast.sv
+++ b/rtl/ibex_multdiv_fast.sv
@@ -205,25 +205,25 @@ module ibex_multdiv_fast (
       end
 
       MD_COMP: begin
-        op_reminder_n     = {1'b0, next_reminder[31:0], op_numerator_q[div_counter_n]};
+        op_remainder_n     = {1'b0, next_remainder[31:0], op_numerator_q[div_counter_n]};
         op_quotient_n     = next_quotient[31:0];
         divcurr_state_n   = (div_counter_q == 5'd1) ? MD_LAST : MD_COMP;
         // Division
-        alu_operand_a_o   = {mac_res_q[31:0], 1'b1};         // it contains the reminder
+        alu_operand_a_o   = {mac_res_q[31:0], 1'b1};         // it contains the remainder
         alu_operand_b_o   = {~op_denominator_q[31:0], 1'b1}; // -denominator two's compliment
       end
 
       MD_LAST: begin
         if (operator_i == MD_OP_DIV) begin
-          // this time we save the quotient in op_reminder_n (i.e. mac_res_q) since
-          // we do not need anymore the reminder
-          op_reminder_n   = {1'b0, next_quotient};
+          // this time we save the quotient in op_remainder_n (i.e. mac_res_q) since
+          // we do not need anymore the remainder
+          op_remainder_n   = {1'b0, next_quotient};
         end else begin
-          // this time we do not save the quotient anymore since we need only the reminder
-          op_reminder_n  = {2'b0, next_reminder[31:0]};
+          // this time we do not save the quotient anymore since we need only the remainder
+          op_remainder_n  = {2'b0, next_remainder[31:0]};
         end
         // Division
-        alu_operand_a_o     = {mac_res_q[31:0], 1'b1};         // it contains the reminder
+        alu_operand_a_o     = {mac_res_q[31:0], 1'b1};         // it contains the remainder
         alu_operand_b_o     = {~op_denominator_q[31:0], 1'b1}; // -denominator two's compliment
 
         divcurr_state_n = MD_CHANGE_SIGN;

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@op_reminder_n to op_remainder_n

UPD HdlStmCase@@divcurr_state_q to divcurr_state_q
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@op_reminder_n to op_remainder_n
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@op_reminder_n to op_remainder_n
            UPD HdlOp@@CONCAT to CONCAT
                UPD HdlOp@@CONCAT to CONCAT
                    UPD HdlOp@@INDEX to INDEX
                        UPD HdlValueId@@next_reminder to next_remainder

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@op_reminder_n to op_remainder_n
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@op_reminder_n to op_remainder_n
            UPD HdlOp@@CONCAT to CONCAT
                UPD HdlOp@@INDEX to INDEX
                    UPD HdlValueId@@next_reminder to next_remainder


CommitId: 7728b7b6f2318fb4078945570a55af31ee77537a
Typo fix in muldiv: Reminder->Remainder
--- a/rtl/ibex_multdiv_fast.sv
+++ b/rtl/ibex_multdiv_fast.sv
@@ -232,11 +232,11 @@ module ibex_multdiv_fast (
       MD_CHANGE_SIGN: begin
         divcurr_state_n  = MD_FINISH;
         if (operator_i == MD_OP_DIV) begin
-          op_reminder_n = (div_change_sign) ? {2'h0,alu_adder_i} : mac_res_q;
+          op_remainder_n = (div_change_sign) ? {2'h0,alu_adder_i} : mac_res_q;
         end else begin
-          op_reminder_n = (rem_change_sign) ? {2'h0,alu_adder_i} : mac_res_q;
+          op_remainder_n = (rem_change_sign) ? {2'h0,alu_adder_i} : mac_res_q;
         end
-        // ABS(Quotient) = 0 - Quotient (or Reminder)
+        // ABS(Quotient) = 0 - Quotient (or Remainder)
         alu_operand_a_o     = {32'h0  , 1'b1};
         alu_operand_b_o     = {~mac_res_q[31:0], 1'b1};
       end
ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@op_reminder_n to op_remainder_n

UPD HdlStmCase@@divcurr_state_q to divcurr_state_q
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@op_reminder_n to op_remainder_n
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@op_reminder_n to op_remainder_n
            UPD HdlOp@@CONCAT to CONCAT
                UPD HdlOp@@CONCAT to CONCAT
                    UPD HdlOp@@INDEX to INDEX
                        UPD HdlValueId@@next_reminder to next_remainder

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@op_reminder_n to op_remainder_n
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@op_reminder_n to op_remainder_n


CommitId: 3e7720e4032dbf03e4860ef0d09fae298361db34
[rtl] Lint fixes for Ascent lint issues
--- a/rtl/ibex_alu.sv
+++ b/rtl/ibex_alu.sv
@@ -228,11 +228,12 @@ module ibex_alu #(
   logic [5:0] shift_amt;
   logic [5:0] shift_amt_compl; // complementary shift amount (32 - shift_amt)
 
-  logic [31:0] shift_operand;
-  logic [32:0] shift_result_ext;
-  logic        unused_shift_result_ext;
-  logic [31:0] shift_result;
-  logic [31:0] shift_result_rev;
+  logic        [31:0] shift_operand;
+  logic signed [32:0] shift_result_ext_signed;
+  logic        [32:0] shift_result_ext;
+  logic               unused_shift_result_ext;
+  logic        [31:0] shift_result;
+  logic        [31:0] shift_result_rev;
 
   // zbf
   logic bfp_op;

ParseResult:
INS HdlIdDef@@shift_result_ext_signed to objs
HdlIdDef: shift_result_ext_signed
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 32
                    HdlValueInt: 0
            HdlValueInt: 1
    HdlDirection: INTERNAL


CommitId: 3e7720e4032dbf03e4860ef0d09fae298361db34
[rtl] Lint fixes for Ascent lint issues
--- a/rtl/ibex_alu.sv
+++ b/rtl/ibex_alu.sv
@@ -319,9 +320,9 @@ module ibex_alu #(
       endcase
     end
 
-    shift_result_ext =
-        $unsigned($signed({shift_ones | (shift_arith & shift_operand[31]), shift_operand}) >>>
-                  shift_amt[4:0]);
+    shift_result_ext_signed =
+        $signed({shift_ones | (shift_arith & shift_operand[31]), shift_operand}) >>> shift_amt[4:0];
+    shift_result_ext = $unsigned(shift_result_ext_signed);
 
     shift_result            = shift_result_ext[31:0];
     unused_shift_result_ext = shift_result_ext[32];
ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@CALL to ASSIGN
            MOV HdlOp@@CALL to ops
            HdlOp: CALL
                list: ops
                    HdlValueId: $unsigned
                    HdlOp: SRA
                        list: ops
                            HdlOp: CALL
                                list: ops
                                    HdlValueId: $signed
                                    HdlOp: CONCAT
                                        list: ops
                                            HdlOp: OR
                                                list: ops
                                                    HdlValueId: shift_ones
                                                    HdlOp: AND
                                                        list: ops
                                                            HdlValueId: shift_arith
                                                            HdlOp: INDEX
                                                                list: ops
                                                                    HdlValueId: shift_operand
                                                                    HdlValueInt: 31
                                            HdlValueId: shift_operand
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: shift_amt
                                    HdlOp: DOWNTO
                                        list: ops
                                            HdlValueInt: 4
                                            HdlValueInt: 0
            UPD HdlOp@@CALL to CALL
                UPD HdlValueId@@$unsigned to shift_result_ext_signed
            DEL HdlValueId@@shift_result_ext from ops
            DEL list@@ops from ASSIGN
        DEL HdlOp@@ASSIGN from body

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: shift_result_ext
                HdlOp: CALL
                    list: ops
                        HdlValueId: $unsigned
                        HdlValueId: shift_result_ext_signed


CommitId: f2fccaadbc6aaedf08bec73b7386ffce3aaeb618
[Prefetch buffer] - various bug fixes
--- a/rtl/ibex_controller.sv
+++ b/rtl/ibex_controller.sv
@@ -122,7 +122,7 @@ module ibex_controller (
   // glitches
   always_ff @(negedge clk_i) begin
     // print warning in case of decoding errors
-    if ((ctrl_fsm_cs == DECODE) && instr_valid_i && illegal_insn) begin
+    if ((ctrl_fsm_cs == DECODE) && instr_valid_i && !instr_fetch_err_i && illegal_insn) begin
       $display("%t: Illegal instruction (hart %0x) at PC 0x%h: 0x%h", $time, ibex_core.hart_id_i,
                ibex_id_stage.pc_id_i, ibex_id_stage.instr_rdata_i);
     end

ParseResult:
UPD HdlStmIf@@ to 
    INS HdlOp@@AND_LOG to 
    UPD HdlOp@@AND_LOG to AND_LOG
        INS list@@ops to AND_LOG
        INS HdlValueId@@illegal_insn to ops
        UPD HdlOp@@AND_LOG to AND_LOG
            INS HdlOp@@NEG_LOG to ops
            UPD HdlOp@@NEG_LOG to NEG_LOG
                INS list@@ops to NEG_LOG

UPD HdlStmIf@@ to 
    MOV HdlOp@@AND_LOG to 
    HdlOp: AND_LOG
        list: ops
            HdlOp: AND_LOG
                list: ops
                    HdlOp: EQ
                        list: ops
                            HdlValueId: ctrl_fsm_cs
                            HdlValueId: DECODE
                    HdlValueId: instr_valid_i
            HdlValueId: illegal_insn
    UPD HdlOp@@AND_LOG to AND_LOG
        UPD HdlValueId@@illegal_insn to instr_fetch_err_i
        MOV HdlValueId@@illegal_insn to ops
        HdlValueId: illegal_insn


CommitId: f2fccaadbc6aaedf08bec73b7386ffce3aaeb618
[Prefetch buffer] - various bug fixes
--- a/rtl/ibex_controller.sv
+++ b/rtl/ibex_controller.sv
@@ -296,21 +296,21 @@ module ibex_controller (
 
         if (instr_valid_i) begin
 
+          // get ready for special instructions, exceptions, pipeline flushes
+          if (special_req) begin
+            ctrl_fsm_ns    = FLUSH;
+            halt_if        = 1'b1;
+            halt_id        = 1'b1;
           // set PC in IF stage to branch or jump target
-          if (branch_set_i || jump_set_i) begin
+          end else if (branch_set_i || jump_set_i) begin
             pc_mux_o       = PC_JUMP;
             pc_set_o       = 1'b1;
 
             perf_tbranch_o = branch_set_i;
             perf_jump_o    = jump_set_i;
-
-          // get ready for special instructions, exceptions, pipeline flushes
-          end else if (special_req) begin
-            ctrl_fsm_ns = FLUSH;
-            halt_if     = 1'b1;
-            halt_id     = 1'b1;
           end
 
+
           // stall IF stage to not starve debug and interrupt requests, these just
           // need to wait until after the current (multicycle) instruction
           if ((enter_debug_mode || handle_irq) && stall) begin
ParseResult:
UPD HdlStmIf@@ to 
    INS HdlValueId@@special_req to 

UPD HdlStmIf@@ to 
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: ctrl_fsm_ns
                    HdlValueId: FLUSH
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: halt_if
                    HdlValueInt: 1
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: halt_id
                    HdlValueInt: 1
    MOV HdlOp@@OR_LOG to 
    HdlOp: OR_LOG
        list: ops
            HdlValueId: branch_set_i
            HdlValueId: jump_set_i
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: pc_mux_o
                    HdlValueId: PC_JUMP
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: pc_set_o
                    HdlValueInt: 1
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: perf_tbranch_o
                    HdlValueId: branch_set_i
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: perf_jump_o
                    HdlValueId: jump_set_i
    DEL HdlValueId@@special_req from 


CommitId: 6b0475744dba1991664be9c780a5c727586c8a9d
Code cleanup
--- a/rtl/ibex_prefetch_buffer.sv
+++ b/rtl/ibex_prefetch_buffer.sv
@@ -99,19 +97,14 @@ module ibex_prefetch_buffer
   //////////////////////////////////////////////////////////////////////////////
 
   assign fetch_addr = {instr_addr_q[31:2], 2'b00} + 32'd4;
-
-  always_comb
-  begin
-    fifo_clear = branch_i;
-  end
+  assign fifo_clear = branch_i;
 
   //////////////////////////////////////////////////////////////////////////////
   // instruction fetch FSM
   // deals with instruction memory / instruction cache
   //////////////////////////////////////////////////////////////////////////////
 
-  always_comb
-  begin
+  always_comb begin
     instr_req_o   = 1'b0;
     instr_addr_o  = fetch_addr;
     fifo_valid    = 1'b0;

ParseResult:
INS HdlStmAssign@@ to objs

UPD HdlStmAssign@@ to 
    INS HdlValueId@@branch_i to 

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            MOV HdlValueId@@fifo_clear to ops
            HdlValueId: fifo_clear
            DEL HdlValueId@@branch_i from ops
            DEL list@@ops from ASSIGN
        DEL HdlOp@@ASSIGN from body
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL HdlStmProcessTriggerConstrain@@COMB from 

DEL HdlStmProcess@@ from objs


CommitId: 6b0475744dba1991664be9c780a5c727586c8a9d
Code cleanup
--- a/rtl/ibex_prefetch_buffer.sv
+++ b/rtl/ibex_prefetch_buffer.sv
@@ -120,30 +113,26 @@ module ibex_prefetch_buffer
 
     unique case(CS)
       // default state, not waiting for requested data
-      IDLE:
-      begin
+      IDLE: begin
         instr_addr_o = fetch_addr;
         instr_req_o  = 1'b0;
 
-        if (branch_i)
+        if (branch_i) begin
           instr_addr_o = addr_i;
+        end
 
-        if (req_i & (fifo_ready | branch_i )) begin
+        if (req_i && (fifo_ready || branch_i )) begin
           instr_req_o = 1'b1;
           addr_valid  = 1'b1;
 
 
-          if(instr_gnt_i) //~>  granted request
-            NS = WAIT_RVALID;
-          else begin //~> got a request but no grant
-            NS = WAIT_GNT;
-          end
+          //~> granted request or not
+          NS = instr_gnt_i ? WAIT_RVALID : WAIT_GNT;
         end
       end // case: IDLE
 
       // we sent a request but did not yet get a grant
-      WAIT_GNT:
-      begin
+      WAIT_GNT: begin
         instr_addr_o = instr_addr_q;
         instr_req_o  = 1'b1;
 

ParseResult:
MOV HdlStmIf@@ to body
HdlStmIf
    HdlValueId: branch_i
    HdlOp: ASSIGN
        list: ops
            HdlValueId: instr_addr_o
            HdlValueId: addr_i
    list: elifs

UPD HdlStmIf@@ to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmIf@@ to 
    UPD HdlOp@@AND to AND_LOG
    UPD HdlOp@@AND to AND
        UPD HdlOp@@OR to OR_LOG

UPD HdlStmCase@@CS to CS
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlOp@@TERNARY to ops
            UPD HdlOp@@TERNARY to TERNARY
                INS list@@ops to TERNARY
                INS HdlValueId@@instr_gnt_i to ops
                INS HdlValueId@@WAIT_GNT to ops

UPD HdlStmIf@@ to 
    MOV HdlOp@@ASSIGN to 
    HdlOp: ASSIGN
        list: ops
            HdlValueId: NS
            HdlValueId: WAIT_RVALID
    UPD HdlOp@@ASSIGN to ASSIGN
        MOV HdlValueId@@WAIT_RVALID to ops
        HdlValueId: WAIT_RVALID
    DEL HdlValueId@@instr_gnt_i from 
    DEL list@@elifs from 
    DEL HdlStmBlock@@SEQ from 
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: NS
                    HdlValueId: WAIT_GNT

UPD HdlStmIf@@ to 
    MOV HdlOp@@ASSIGN to 
    HdlOp: ASSIGN
        list: ops
            HdlValueId: instr_addr_o
            HdlValueId: addr_i

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlOp@@TERNARY to ops
            UPD HdlOp@@TERNARY to TERNARY
                INS list@@ops to TERNARY
                INS HdlValueId@@instr_gnt_i to ops
                INS HdlValueId@@WAIT_GNT to ops

DEL HdlStmIf@@ from body

UPD HdlStmCase@@CS to CS
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: NS
                HdlValueId: IDLE
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: instr_req_o
                HdlValueInt: 0


CommitId: 6b0475744dba1991664be9c780a5c727586c8a9d
Code cleanup
--- a/rtl/ibex_prefetch_buffer.sv
+++ b/rtl/ibex_prefetch_buffer.sv
@@ -152,21 +141,19 @@ module ibex_prefetch_buffer
           addr_valid   = 1'b1;
         end
 
-        if(instr_gnt_i)
-          NS = WAIT_RVALID;
-        else
-          NS = WAIT_GNT;
+        //~> granted request or not
+        NS = instr_gnt_i ? WAIT_RVALID : WAIT_GNT;
       end // case: WAIT_GNT
 
       // we wait for rvalid, after that we are ready to serve a new request
       WAIT_RVALID: begin
         instr_addr_o = fetch_addr;
 
-        if (branch_i)
+        if (branch_i) begin
           instr_addr_o  = addr_i;
+        end
 
-
-        if (req_i & (fifo_ready | branch_i)) begin
+        if (req_i && (fifo_ready || branch_i)) begin
           // prepare for next request
 
           if (instr_rvalid_i) begin

ParseResult:
MOV HdlStmIf@@ to body
HdlStmIf
    HdlValueId: branch_i
    HdlOp: ASSIGN
        list: ops
            HdlValueId: instr_addr_o
            HdlValueId: addr_i
    list: elifs

UPD HdlStmIf@@ to 
    MOV HdlOp@@ASSIGN to 
    HdlOp: ASSIGN
        list: ops
            HdlValueId: NS
            HdlValueId: WAIT_RVALID
    UPD HdlOp@@ASSIGN to ASSIGN
        MOV HdlValueId@@WAIT_RVALID to ops
        HdlValueId: WAIT_RVALID
    DEL HdlValueId@@instr_gnt_i from 
    DEL list@@elifs from 
    DEL HdlOp@@ASSIGN from 
    HdlOp: ASSIGN
        list: ops
            HdlValueId: NS
            HdlValueId: WAIT_GNT

UPD HdlStmIf@@ to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmIf@@ to 
    UPD HdlOp@@AND to AND_LOG
    UPD HdlOp@@AND to AND
        UPD HdlOp@@OR to OR_LOG

UPD HdlStmCase@@CS to CS
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlOp@@TERNARY to ops
            UPD HdlOp@@TERNARY to TERNARY
                INS list@@ops to TERNARY
                INS HdlValueId@@instr_gnt_i to ops
                INS HdlValueId@@WAIT_GNT to ops

UPD HdlStmIf@@ to 
    MOV HdlOp@@ASSIGN to 
    HdlOp: ASSIGN
        list: ops
            HdlValueId: instr_addr_o
            HdlValueId: addr_i

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlOp@@TERNARY to ops
            UPD HdlOp@@TERNARY to TERNARY
                INS list@@ops to TERNARY
                INS HdlValueId@@instr_gnt_i to ops
                INS HdlValueId@@WAIT_GNT to ops

DEL HdlStmIf@@ from body

UPD HdlStmCase@@CS to CS
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: NS
                HdlValueId: IDLE
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: instr_req_o
                HdlValueInt: 0


CommitId: 6b0475744dba1991664be9c780a5c727586c8a9d
Code cleanup
--- a/rtl/ibex_prefetch_buffer.sv
+++ b/rtl/ibex_prefetch_buffer.sv
@@ -174,12 +161,8 @@ module ibex_prefetch_buffer
             fifo_valid  = 1'b1;
             addr_valid  = 1'b1;
 
-
-            if (instr_gnt_i) begin
-              NS = WAIT_RVALID;
-            end else begin
-              NS = WAIT_GNT;
-            end
+            //~> granted request or not
+            NS = instr_gnt_i ? WAIT_RVALID : WAIT_GNT;
           end else begin
             // we are requested to abort our current request
             // we didn't get an rvalid yet, so wait for it

ParseResult:
UPD HdlStmIf@@ to 
    UPD HdlOp@@AND to AND_LOG
    UPD HdlOp@@AND to AND
        UPD HdlOp@@OR to OR_LOG

UPD HdlStmCase@@CS to CS
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlOp@@TERNARY to ops
            UPD HdlOp@@TERNARY to TERNARY
                INS list@@ops to TERNARY
                INS HdlValueId@@instr_gnt_i to ops
                INS HdlValueId@@WAIT_GNT to ops

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: NS
                HdlValueId: WAIT_RVALID
        UPD HdlOp@@ASSIGN to ASSIGN
            MOV HdlValueId@@WAIT_RVALID to ops
            HdlValueId: WAIT_RVALID
        DEL list@@body from SEQ
    DEL HdlValueId@@instr_gnt_i from 
    DEL HdlStmBlock@@SEQ from 
    DEL list@@elifs from 
    DEL HdlStmBlock@@SEQ from 
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: NS
                    HdlValueId: WAIT_GNT

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlOp@@TERNARY to ops
            UPD HdlOp@@TERNARY to TERNARY
                INS list@@ops to TERNARY
                INS HdlValueId@@instr_gnt_i to ops
                INS HdlValueId@@WAIT_GNT to ops

DEL HdlStmIf@@ from body

UPD HdlStmCase@@CS to CS
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: NS
                HdlValueId: IDLE
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: instr_req_o
                HdlValueInt: 0


CommitId: 6b0475744dba1991664be9c780a5c727586c8a9d
Code cleanup
--- a/rtl/ibex_prefetch_buffer.sv
+++ b/rtl/ibex_prefetch_buffer.sv
@@ -213,18 +196,14 @@ module ibex_prefetch_buffer
           instr_req_o  = 1'b1;
           // no need to send address, already done in WAIT_RVALID
 
-          if (instr_gnt_i) begin
-            NS = WAIT_RVALID;
-          end else begin
-            NS = WAIT_GNT;
-          end
+          //~> granted request or not
+          NS = instr_gnt_i ? WAIT_RVALID : WAIT_GNT;
         end
       end
 
-      default:
-      begin
-        NS          = IDLE;
-        instr_req_o = 1'b0;
+      default: begin
+        // NS          = IDLE;      // unreachable, removing dead code
+        // instr_req_o = 1'b0;      // unreachable, removing dead code
       end
     endcase
   end

ParseResult:
UPD HdlStmCase@@CS to CS
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlOp@@TERNARY to ops
            UPD HdlOp@@TERNARY to TERNARY
                INS list@@ops to TERNARY
                INS HdlValueId@@instr_gnt_i to ops
                INS HdlValueId@@WAIT_GNT to ops

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: NS
                HdlValueId: WAIT_RVALID
        UPD HdlOp@@ASSIGN to ASSIGN
            MOV HdlValueId@@WAIT_RVALID to ops
            HdlValueId: WAIT_RVALID
        DEL list@@body from SEQ
    DEL HdlValueId@@instr_gnt_i from 
    DEL HdlStmBlock@@SEQ from 
    DEL list@@elifs from 
    DEL HdlStmBlock@@SEQ from 
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: NS
                    HdlValueId: WAIT_GNT

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlOp@@TERNARY to ops
            UPD HdlOp@@TERNARY to TERNARY
                INS list@@ops to TERNARY
                INS HdlValueId@@instr_gnt_i to ops
                INS HdlValueId@@WAIT_GNT to ops

DEL HdlStmIf@@ from body

UPD HdlStmCase@@CS to CS
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: NS
                HdlValueId: IDLE
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: instr_req_o
                HdlValueInt: 0


CommitId: 6b0475744dba1991664be9c780a5c727586c8a9d
Code cleanup
--- a/rtl/ibex_prefetch_buffer.sv
+++ b/rtl/ibex_prefetch_buffer.sv
@@ -233,15 +212,11 @@ module ibex_prefetch_buffer
   // registers
   //////////////////////////////////////////////////////////////////////////////
 
-  always_ff @(posedge clk, negedge rst_n)
-  begin
-    if(rst_n == 1'b0)
-    begin
+  always_ff @(posedge clk, negedge rst_n) begin
+    if (!rst_n) begin
       CS              <= IDLE;
       instr_addr_q    <= '0;
-    end
-    else
-    begin
+    end else begin
       CS              <= NS;
 
       if (addr_valid) begin
ParseResult:
UPD HdlStmIf@@ to 
    UPD HdlOp@@EQ to NEG_LOG
    UPD HdlOp@@EQ to EQ
        DEL HdlValueInt@@0 from ops


CommitId: 29107c528397289eff549fb7fa41164389eeb3a9
Use unsigned type for part select to avoid linting errors
--- a/rtl/ibex_multdiv_fast.sv
+++ b/rtl/ibex_multdiv_fast.sv
@@ -56,7 +56,8 @@ module ibex_multdiv_fast (
   } div_fsm_e;
   div_fsm_e divcurr_state_q, divcurr_state_n;
 
-  logic signed [34:0] mac_res_ext;
+  logic signed [34:0] mac_res_signed;
+  logic        [34:0] mac_res_ext;
 
   logic [33:0] mac_res_q, mac_res_n, mac_res, op_reminder_n;
   logic [15:0] mult_op_a;

ParseResult:
UPD HdlIdDef@@mac_res_ext to mac_res_signed

INS HdlIdDef@@mac_res_ext to objs
HdlIdDef: mac_res_ext
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 34
                    HdlValueInt: 0
    HdlDirection: INTERNAL


CommitId: 29107c528397289eff549fb7fa41164389eeb3a9
Use unsigned type for part select to avoid linting errors
--- a/rtl/ibex_multdiv_fast.sv
+++ b/rtl/ibex_multdiv_fast.sv
@@ -117,8 +118,9 @@ module ibex_multdiv_fast (
 
   assign multdiv_result_o = div_en_i ? mac_res_q[31:0] : mac_res_n[31:0];
 
-  assign mac_res_ext = $signed({sign_a, mult_op_a})*$signed({sign_b, mult_op_b}) + $signed(accum);
-  assign mac_res     = mac_res_ext[33:0];
+  assign mac_res_signed = $signed({sign_a, mult_op_a})*$signed({sign_b, mult_op_b}) + $signed(accum);
+  assign mac_res_ext    = $unsigned(mac_res_signed);
+  assign mac_res        = mac_res_ext[33:0];
 
   assign res_adder_h   = alu_adder_ext_i[33:1];
 
ParseResult:
INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: CALL
        list: ops
            HdlValueId: $unsigned
            HdlValueId: mac_res_signed
    HdlValueId: mac_res_ext

UPD HdlStmAssign@@ to 
    UPD HdlValueId@@mac_res_ext to mac_res_signed


CommitId: 1c3903e2cea1b30e9ab7cc3a0dc5a249e1922739
Tracer: Decode an all-zero instruction as c.unimp
--- a/rtl/ibex_tracer.sv
+++ b/rtl/ibex_tracer.sv
@@ -721,7 +721,14 @@ module ibex_tracer (
       end else begin
         unique casez (rvfi_insn[15:0])
           // C0 Opcodes
-          INSN_CADDI4SPN:  decode_ciw_insn("c.addi4spn");
+          INSN_CADDI4SPN: begin
+            if (rvfi_insn[12:2] == 11'h0) begin
+              // Align with pseudo-mnemonic used by GNU binutils and LLVM's MC layer
+              decode_mnemonic("c.unimp");
+            end else begin
+              decode_ciw_insn("c.addi4spn");
+            end
+          end
           INSN_CLW:        decode_compressed_load_insn("c.lw");
           INSN_CSW:        decode_compressed_store_insn("c.sw");
           // C1 Opcodes
ParseResult:
UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['rvfi_insn',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '15'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['rvfi_insn',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '15'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

INS HdlStmIf@@ to body

UPD HdlStmIf@@ to 
    INS HdlOp@@EQ to 
    HdlOp: EQ
        list: ops
            HdlOp: INDEX
                list: ops
                    HdlValueId: rvfi_insn
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 12
                            HdlValueInt: 2
            HdlValueInt: 0
    INS HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlOp: CALL
                list: ops
                    HdlValueId: decode_mnemonic
                    str
    INS list@@elifs to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['rvfi_insn',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '15'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['rvfi_insn',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '15'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    MOV HdlOp@@CALL to 
    HdlOp: CALL
        list: ops
            HdlValueId: decode_ciw_insn
            str


CommitId: d363a3d3b6bb7178f1be7f40439100f55cd50cb5
Fix linting errors
--- a/rtl/ibex_cs_registers.sv
+++ b/rtl/ibex_cs_registers.sv
@@ -186,8 +186,10 @@ module ibex_cs_registers #(
   /////////////
 
   logic [$bits(csr_num_e)-1:0] csr_addr;
+  logic [4:0]                  unused_csr_addr;
   assign csr_addr           = {csr_addr_i};
   assign mhpmcounter_idx    = csr_addr[4:0];
+  assign unused_csr_addr    = csr_addr[9:5];
 
   assign illegal_csr_priv   = 1'b0; // we only support M-mode
   assign illegal_csr_write  = (csr_addr[11:10] == 2'b11) && csr_we_int;

ParseResult:
INS HdlIdDef@@unused_csr_addr to objs
HdlIdDef: unused_csr_addr
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 4
                    HdlValueInt: 0
    HdlDirection: INTERNAL

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: INDEX
        list: ops
            HdlValueId: csr_addr
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 9
                    HdlValueInt: 5
    HdlValueId: unused_csr_addr


CommitId: d363a3d3b6bb7178f1be7f40439100f55cd50cb5
Fix linting errors
--- a/rtl/ibex_cs_registers.sv
+++ b/rtl/ibex_cs_registers.sv
@@ -541,7 +543,7 @@ module ibex_cs_registers #(
 
     // deactivate
     mhpmevent[1] = '0; // not existing, reserved
-    for (int i=3+MHPMCounterNum; i<32; i++) begin : gen_mhpmevent_inactive
+    for (int unsigned i=3+MHPMCounterNum; i<32; i++) begin : gen_mhpmevent_inactive
       mhpmevent[i] = '0;
     end
   end

ParseResult:
UPD HdlIdDef@@i to i
    MOV HdlValueId@@int to i
    HdlValueId: int


CommitId: f190e3abe46e3625708ce776376f53bc9adc5424
[rtl] Fix PMP NA4 address matching
--- a/rtl/ibex_pmp.sv
+++ b/rtl/ibex_pmp.sv
@@ -32,9 +32,10 @@ module ibex_pmp #(
   // Access Checking Signals
   logic [33:0]                                region_start_addr [PMPNumRegions];
   logic [33:PMPGranularity+2]                 region_addr_mask  [PMPNumRegions];
-  logic [PMPNumChan-1:0][PMPNumRegions-1:0]   region_match_high;
-  logic [PMPNumChan-1:0][PMPNumRegions-1:0]   region_match_low;
-  logic [PMPNumChan-1:0][PMPNumRegions-1:0]   region_match_both;
+  logic [PMPNumChan-1:0][PMPNumRegions-1:0]   region_match_gt;
+  logic [PMPNumChan-1:0][PMPNumRegions-1:0]   region_match_lt;
+  logic [PMPNumChan-1:0][PMPNumRegions-1:0]   region_match_eq;
+  logic [PMPNumChan-1:0][PMPNumRegions-1:0]   region_match_all;
   logic [PMPNumChan-1:0][PMPNumRegions-1:0]   region_perm_check;
   logic [PMPNumChan-1:0]                      access_fault;
 

ParseResult:
UPD HdlIdDef@@region_match_high to region_match_gt

UPD HdlIdDef@@region_match_low to region_match_lt

INS HdlIdDef@@region_match_eq to objs
HdlIdDef: region_match_eq
    HdlOp: INDEX
        list: ops
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: logic
                    HdlOp: DOWNTO
                        list: ops
                            HdlOp: SUB
                                list: ops
                                    HdlValueId: PMPNumChan
                                    HdlValueInt: 1
                            HdlValueInt: 0
            HdlOp: DOWNTO
                list: ops
                    HdlOp: SUB
                        list: ops
                            HdlValueId: PMPNumRegions
                            HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: INTERNAL

UPD HdlIdDef@@region_match_both to region_match_all


CommitId: f190e3abe46e3625708ce776376f53bc9adc5424
[rtl] Fix PMP NA4 address matching
--- a/rtl/ibex_pmp.sv
+++ b/rtl/ibex_pmp.sv
@@ -96,7 +111,7 @@ module ibex_pmp #(
       // PMP entries are statically prioritized, from 0 to N-1
       // The lowest-numbered PMP entry which matches an address determines accessability
       for (int r = PMPNumRegions-1; r >= 0; r--) begin
-        if (region_match_both[c][r]) begin
+        if (region_match_all[c][r]) begin
           access_fault[c] = (priv_mode_i[c] == PRIV_LVL_M) ?
               // For M-mode, any region which matches with the L-bit clear, or with sufficient
               // access permissions will be allowed
ParseResult:
UPD HdlStmProcess@@ to 
    INS HdlStmBlock@@SEQ to 
    INS HdlStmProcessTriggerConstrain@@COMB to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlOp: INDEX
                    list: ops
                        HdlOp: INDEX
                            list: ops
                                HdlValueId: region_match_all
                                HdlValueId: c
                        HdlValueId: r
                HdlValueInt: 0

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'DOT',  'ops': [{'__class__': 'HdlOp', 'fn': 'INDEX', 'ops': ['csr_pmp_cfg_i', 'r']},          'mode']}  to {'__class__': 'HdlOp',  'fn': 'DOT',  'ops': [{'__class__': 'HdlOp', 'fn': 'INDEX', 'ops': ['csr_pmp_cfg_i', 'r']},          'mode']} 
    INS HdlStmCaseType@@CASE to {'__class__': 'HdlOp',  'fn': 'DOT',  'ops': [{'__class__': 'HdlOp', 'fn': 'INDEX', 'ops': ['csr_pmp_cfg_i', 'r']},          'mode']} 
    INS HdlOp@@ASSIGN to {'__class__': 'HdlOp',  'fn': 'DOT',  'ops': [{'__class__': 'HdlOp', 'fn': 'INDEX', 'ops': ['csr_pmp_cfg_i', 'r']},          'mode']} 
    INS HdlStmCaseUniqConstrain@@UNIQUE to {'__class__': 'HdlOp',  'fn': 'DOT',  'ops': [{'__class__': 'HdlOp', 'fn': 'INDEX', 'ops': ['csr_pmp_cfg_i', 'r']},          'mode']} 
    INS tuple@@ to cases
    tuple
        HdlValueId: PMP_MODE_OFF
        HdlOp: ASSIGN
            list: ops
                HdlOp: INDEX
                    list: ops
                        HdlOp: INDEX
                            list: ops
                                HdlValueId: region_match_all
                                HdlValueId: c
                        HdlValueId: r
                HdlValueInt: 0
    INS tuple@@ to cases
    INS tuple@@ to cases
    tuple
        HdlValueId: PMP_MODE_NAPOT
        HdlOp: ASSIGN
            list: ops
                HdlOp: INDEX
                    list: ops
                        HdlOp: INDEX
                            list: ops
                                HdlValueId: region_match_all
                                HdlValueId: c
                        HdlValueId: r
                HdlOp: INDEX
                    list: ops
                        HdlOp: INDEX
                            list: ops
                                HdlValueId: region_match_eq
                                HdlValueId: c
                        HdlValueId: r
    INS tuple@@ to cases
    UPD HdlOp@@ASSIGN to ASSIGN
        INS list@@ops to ASSIGN
        INS HdlValueInt@@0 to ops
    INS HdlValueId@@PMP_MODE_NA4 to 
    INS HdlValueId@@PMP_MODE_TOR to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
        INS HdlOp@@ASSIGN to body
        UPD HdlOp@@ASSIGN to ASSIGN
            INS list@@ops to ASSIGN
            INS HdlOp@@INDEX to ops
            HdlOp: INDEX
                list: ops
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: region_match_all
                            HdlValueId: c
                    HdlValueId: r
            UPD HdlOp@@AND to AND
                INS HdlOp@@OR to ops
                HdlOp: OR
                    list: ops
                        HdlOp: INDEX
                            list: ops
                                HdlOp: INDEX
                                    list: ops
                                        HdlValueId: region_match_eq
                                        HdlValueId: c
                                HdlValueId: r
                        HdlOp: INDEX
                            list: ops
                                HdlOp: INDEX
                                    list: ops
                                        HdlValueId: region_match_gt
                                        HdlValueId: c
                                HdlValueId: r
                INS HdlOp@@INDEX to ops
                UPD HdlOp@@INDEX to INDEX
                    INS list@@ops to INDEX
                    INS HdlOp@@INDEX to ops
                    INS HdlValueId@@r to ops
                    UPD HdlOp@@INDEX to INDEX
                        INS list@@ops to INDEX
                        INS HdlValueId@@c to ops

UPD HdlStmIf@@ to 
    UPD HdlOp@@INDEX to INDEX
        UPD HdlOp@@INDEX to INDEX
            UPD HdlValueId@@region_match_both to region_match_all


CommitId: 9958d300638908a72a8d64e8e5b8f8034bedd6c0
[DV] Fix latch in simple bus
--- a/dv/riscv_compliance/rtl/bus.sv
+++ b/dv/riscv_compliance/rtl/bus.sv
@@ -104,12 +104,13 @@ module bus #(
 
   always_comb begin
     for (integer host = 0; host < NrHosts; host = host + 1) begin
+      host_gnt_o[host] = 1'b0;
+
       if ($clog2(NrHosts)'(host) == host_sel_resp) begin
         host_rvalid_o[host] = device_rvalid_i[device_sel_resp];
         host_err_o[host]    = device_err_i[device_sel_resp];
         host_rdata_o[host]  = device_rdata_i[device_sel_resp];
       end else begin
-        host_gnt_o[host]    = 1'b0;
         host_rvalid_o[host] = 1'b0;
         host_err_o[host]    = 1'b0;
         host_rdata_o[host]  = 'b0;
ParseResult:
UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlOp: INDEX
                    list: ops
                        HdlValueId: host_gnt_o
                        HdlValueId: host
                HdlValueInt: 0


CommitId: 31b2f6c86305ff9cb1fcab2b8f2445df30293803
[rtl] Fix retired instruction counters
--- a/rtl/ibex_counter.sv
+++ b/rtl/ibex_counter.sv
@@ -1,5 +1,9 @@
 module ibex_counter #(
-  parameter int CounterWidth = 32
+  parameter int CounterWidth = 32,
+  // When set `counter_val_upd_o` provides an incremented version of the counter value, otherwise
+  // the output is hard-wired to 0. This is required to allow Xilinx DSP inference to work
+  // correctly. When `ProvideValUpd` is set no DSPs are inferred.
+  parameter bit ProvideValUpd = 0
 ) (
   input  logic        clk_i,
   input  logic        rst_ni,

ParseResult:
INS HdlIdDef@@ProvideValUpd to params
HdlIdDef: ProvideValUpd
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: bit
    HdlValueInt: 0
    HdlDirection: INTERNAL


CommitId: 31b2f6c86305ff9cb1fcab2b8f2445df30293803
[rtl] Fix retired instruction counters
--- a/rtl/ibex_counter.sv
+++ b/rtl/ibex_counter.sv
@@ -8,7 +12,8 @@ module ibex_counter #(
   input  logic        counterh_we_i,
   input  logic        counter_we_i,
   input  logic [31:0] counter_val_i,
-  output logic [63:0] counter_val_o
+  output logic [63:0] counter_val_o,
+  output logic [63:0] counter_val_upd_o
 );
 
   logic [63:0]             counter;

ParseResult:
INS HdlIdDef@@counter_val_upd_o to ports
HdlIdDef: counter_val_upd_o
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 63
                    HdlValueInt: 0
    HdlDirection: OUT


CommitId: 31b2f6c86305ff9cb1fcab2b8f2445df30293803
[rtl] Fix retired instruction counters
--- a/rtl/ibex_counter.sv
+++ b/rtl/ibex_counter.sv
@@ -17,9 +22,11 @@ module ibex_counter #(
   logic                    we;
   logic [CounterWidth-1:0] counter_d;
 
+  // Increment
+  assign counter_upd = counter[CounterWidth-1:0] + {{CounterWidth - 1{1'b0}}, 1'b1};
+
   // Update
   always_comb begin
-
     // Write
     we = counter_we_i | counterh_we_i;
     counter_load[63:32] = counter[63:32];

ParseResult:
INS HdlStmAssign@@ to objs

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            MOV HdlOp@@ADD to ops
            HdlOp: ADD
                list: ops
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: counter
                            HdlOp: DOWNTO
                                list: ops
                                    HdlOp: SUB
                                        list: ops
                                            HdlValueId: CounterWidth
                                            HdlValueInt: 1
                                    HdlValueInt: 0
                    HdlOp: CONCAT
                        list: ops
                            HdlOp: REPL_CONCAT
                                list: ops
                                    HdlOp: SUB
                                        list: ops
                                            HdlValueId: CounterWidth
                                            HdlValueInt: 1
                                    HdlValueInt: 0
                            HdlValueInt: 1
            DEL HdlValueId@@counter_upd from ops
            DEL list@@ops from ASSIGN
        DEL HdlOp@@ASSIGN from body


CommitId: 31b2f6c86305ff9cb1fcab2b8f2445df30293803
[rtl] Fix retired instruction counters
--- a/rtl/ibex_counter.sv
+++ b/rtl/ibex_counter.sv
@@ -29,9 +36,6 @@ module ibex_counter #(
       counter_load[31:0]  = counter[31:0];
     end
 
-    // Increment
-    counter_upd = counter[CounterWidth-1:0] + {{CounterWidth - 1{1'b0}}, 1'b1};
-
     // Next value logic
     if (we) begin
       counter_d = counter_load[CounterWidth-1:0];

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            MOV HdlOp@@ADD to ops
            HdlOp: ADD
                list: ops
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: counter
                            HdlOp: DOWNTO
                                list: ops
                                    HdlOp: SUB
                                        list: ops
                                            HdlValueId: CounterWidth
                                            HdlValueInt: 1
                                    HdlValueInt: 0
                    HdlOp: CONCAT
                        list: ops
                            HdlOp: REPL_CONCAT
                                list: ops
                                    HdlOp: SUB
                                        list: ops
                                            HdlValueId: CounterWidth
                                            HdlValueInt: 1
                                    HdlValueInt: 0
                            HdlValueInt: 1
            DEL HdlValueId@@counter_upd from ops
            DEL list@@ops from ASSIGN
        DEL HdlOp@@ASSIGN from body

UPD HdlStmAssign@@ to 
    INS HdlValueId@@counter_upd to 


CommitId: 31b2f6c86305ff9cb1fcab2b8f2445df30293803
[rtl] Fix retired instruction counters
--- a/rtl/ibex_counter.sv
+++ b/rtl/ibex_counter.sv
@@ -67,11 +71,24 @@ module ibex_counter #(
   if (CounterWidth < 64) begin : g_counter_narrow
     logic [63:CounterWidth] unused_counter_load;
 
-    assign counter[CounterWidth-1:0] = counter_q;
-    assign counter[63:CounterWidth]  = '0;
-    assign unused_counter_load       = counter_load[63:CounterWidth];
+    assign counter[CounterWidth-1:0]           = counter_q;
+    assign counter[63:CounterWidth]            = '0;
+
+    if (ProvideValUpd) begin : g_counter_val_upd_o
+      assign counter_val_upd_o[CounterWidth-1:0] = counter_upd;
+    end else begin : g_no_counter_val_upd_o
+      assign counter_val_upd_o[CounterWidth-1:0] = '0;
+    end
+    assign counter_val_upd_o[63:CounterWidth]  = '0;
+    assign unused_counter_load                 = counter_load[63:CounterWidth];
   end else begin : g_counter_full
-    assign counter = counter_q;
+    assign counter           = counter_q;
+
+    if (ProvideValUpd) begin : g_counter_val_upd_o
+      assign counter_val_upd_o = counter_upd;
+    end else begin : g_no_counter_val_upd_o
+      assign counter_val_upd_o = '0;
+    end
   end
 
   assign counter_val_o = counter;
ParseResult:
INS HdlStmIf@@ to body
HdlStmIf
    HdlValueId: ProvideValUpd
    HdlStmBlock: SEQ
        list: body
            HdlStmAssign
                HdlValueId: counter_upd
                HdlOp: INDEX
                    list: ops
                        HdlValueId: counter_val_upd_o
                        HdlOp: DOWNTO
                            list: ops
                                HdlOp: SUB
                                    list: ops
                                        HdlValueId: CounterWidth
                                        HdlValueInt: 1
                                HdlValueInt: 0
    list: elifs
    HdlStmBlock: SEQ
        list: body
            HdlStmAssign
                HdlValueInt: 0
                HdlOp: INDEX
                    list: ops
                        HdlValueId: counter_val_upd_o
                        HdlOp: DOWNTO
                            list: ops
                                HdlOp: SUB
                                    list: ops
                                        HdlValueId: CounterWidth
                                        HdlValueInt: 1
                                HdlValueInt: 0

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueInt: 0
    HdlOp: INDEX
        list: ops
            HdlValueId: counter_val_upd_o
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 63
                    HdlValueId: CounterWidth

INS HdlStmIf@@ to body
HdlStmIf
    HdlValueId: ProvideValUpd
    HdlStmBlock: SEQ
        list: body
            HdlStmAssign
                HdlValueId: counter_upd
                HdlValueId: counter_val_upd_o
    list: elifs
    HdlStmBlock: SEQ
        list: body
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: counter_val_upd_o


CommitId: 6b0475744dba1991664be9c780a5c727586c8a9d
Code cleanup
--- a/rtl/ibex_multdiv_slow.sv
+++ b/rtl/ibex_multdiv_slow.sv
@@ -60,7 +62,7 @@ module ibex_multdiv_slow
   logic        sign_a, sign_b;
   logic [32:0] next_reminder, next_quotient;
   logic [32:0] op_remainder;
-  logic [31:0] op_numerator_q;
+  logic [31:0] op_numerator_q, op_numerator_d;
   logic        is_greater_equal;
   logic        div_change_sign, rem_change_sign;
 

ParseResult:
UPD HdlModuleDef@@ibex_multdiv_slow to ibex_multdiv_slow
    INS HdlImport@@ to objs
    HdlImport
        list: path
            HdlValueId: ibex_defines
            HdlAll

INS HdlIdDef@@op_numerator_d to objs
HdlIdDef: op_numerator_d
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 31
                    HdlValueInt: 0
    HdlDirection: INTERNAL


CommitId: 6b0475744dba1991664be9c780a5c727586c8a9d
Code cleanup
--- a/rtl/ibex_multdiv_slow.sv
+++ b/rtl/ibex_multdiv_slow.sv
@@ -70,9 +72,7 @@ module ibex_multdiv_slow
    //(accum_window_q + op_a_shift_q)>>1
   assign res_adder_h       = alu_adder_ext_i[33:1];
 
-  always_comb
-  begin
-
+  always_comb begin
     alu_operand_a_o   = accum_window_q;
     multdiv_result_o  = div_en_i ? accum_window_q[31:0] : res_adder_l;
 

ParseResult:
UPD HdlModuleDef@@ibex_multdiv_slow to ibex_multdiv_slow
    INS HdlImport@@ to objs
    HdlImport
        list: path
            HdlValueId: ibex_defines
            HdlAll


CommitId: 6b0475744dba1991664be9c780a5c727586c8a9d
Code cleanup
--- a/rtl/ibex_multdiv_slow.sv
+++ b/rtl/ibex_multdiv_slow.sv
@@ -83,11 +83,9 @@ module ibex_multdiv_slow
       end
 
       MD_OP_MULH: begin
-        if(curr_state_q == MD_LAST)
-          alu_operand_b_o   = op_a_bw_last_pp;
-        else
-          alu_operand_b_o   = op_a_bw_pp;
+        alu_operand_b_o = (curr_state_q == MD_LAST) ? op_a_bw_last_pp : op_a_bw_pp;
       end
+
       default: begin
         unique case(curr_state_q)
           MD_IDLE: begin

ParseResult:
UPD HdlModuleDef@@ibex_multdiv_slow to ibex_multdiv_slow
    INS HdlImport@@ to objs
    HdlImport
        list: path
            HdlValueId: ibex_defines
            HdlAll

UPD HdlStmCase@@operator_i to operator_i
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        UPD HdlOp@@ASSIGN to ASSIGN
            INS list@@ops to ASSIGN
            INS HdlValueId@@alu_operand_b_o to ops
            INS HdlOp@@TERNARY to ops
            UPD HdlOp@@TERNARY to TERNARY
                INS list@@ops to TERNARY

UPD HdlStmIf@@ to 
    MOV HdlOp@@EQ to 
    HdlOp: EQ
        list: ops
            HdlValueId: curr_state_q
            HdlValueId: MD_LAST
    UPD HdlOp@@ASSIGN to ASSIGN
        MOV HdlValueId@@op_a_bw_last_pp to ops
        HdlValueId: op_a_bw_last_pp
        DEL HdlValueId@@alu_operand_b_o from ops
        DEL list@@ops from ASSIGN
    UPD HdlOp@@ASSIGN to ASSIGN
        MOV HdlValueId@@op_a_bw_pp to ops
        HdlValueId: op_a_bw_pp
        DEL HdlValueId@@alu_operand_b_o from ops
        DEL list@@ops from ASSIGN
    DEL HdlOp@@ASSIGN from 
    DEL list@@elifs from 
    DEL HdlOp@@ASSIGN from 

DEL HdlStmIf@@ from body


CommitId: 6b0475744dba1991664be9c780a5c727586c8a9d
Code cleanup
--- a/rtl/ibex_multdiv_slow.sv
+++ b/rtl/ibex_multdiv_slow.sv
@@ -113,13 +111,11 @@ module ibex_multdiv_slow
           default: begin
             //Division
             alu_operand_a_o     = {accum_window_q[31:0], 1'b1}; //it contains the reminder
-            alu_operand_b_o     = {~op_b_shift_q[31:0], 1'b1}; //denominator negated + 1 to do -denominator
+            alu_operand_b_o     = {~op_b_shift_q[31:0], 1'b1};  //-denominator two's compliment
           end
         endcase
       end
-
     endcase
-
   end
 
   /*

ParseResult:
UPD HdlModuleDef@@ibex_multdiv_slow to ibex_multdiv_slow
    INS HdlImport@@ to objs
    HdlImport
        list: path
            HdlValueId: ibex_defines
            HdlAll

UPD HdlStmCase@@operator_i to operator_i
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        UPD HdlOp@@ASSIGN to ASSIGN
            INS list@@ops to ASSIGN
            INS HdlValueId@@alu_operand_b_o to ops
            INS HdlOp@@TERNARY to ops
            UPD HdlOp@@TERNARY to TERNARY
                INS list@@ops to TERNARY


CommitId: 6b0475744dba1991664be9c780a5c727586c8a9d
Code cleanup
--- a/rtl/ibex_multdiv_slow.sv
+++ b/rtl/ibex_multdiv_slow.sv
@@ -130,13 +126,10 @@ module ibex_multdiv_slow
      The
   */
 
-  always_comb
-  begin
-    if ((accum_window_q[31] ^ op_b_shift_q[31]) == 0)
-      is_greater_equal = (res_adder_h[31] == 0);
-    else
-      is_greater_equal = accum_window_q[31];
-  end
+ assign is_greater_equal =
+          ((accum_window_q[31] ^ op_b_shift_q[31]) == 1'b0) ?
+            (res_adder_h[31] == 1'b0) :
+            accum_window_q[31];
 
   assign one_shift     = {32'b0, 1'b1} << multdiv_state_q;
 

ParseResult:
UPD HdlModuleDef@@ibex_multdiv_slow to ibex_multdiv_slow
    INS HdlImport@@ to objs
    HdlImport
        list: path
            HdlValueId: ibex_defines
            HdlAll

INS HdlStmAssign@@ to objs

UPD HdlStmAssign@@ to 
    INS HdlOp@@TERNARY to 
    INS HdlValueId@@is_greater_equal to 

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD list@@body to ops
        MOV list@@body to SEQ
        list: body
            HdlStmIf
                HdlOp: EQ
                    list: ops
                        HdlOp: XOR
                            list: ops
                                HdlOp: INDEX
                                    list: ops
                                        HdlValueId: accum_window_q
                                        HdlValueInt: 31
                                HdlOp: INDEX
                                    list: ops
                                        HdlValueId: op_b_shift_q
                                        HdlValueInt: 31
                        HdlValueInt: 0
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: is_greater_equal
                        HdlOp: EQ
                            list: ops
                                HdlOp: INDEX
                                    list: ops
                                        HdlValueId: res_adder_h
                                        HdlValueInt: 31
                                HdlValueInt: 0
                list: elifs
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: is_greater_equal
                        HdlOp: INDEX
                            list: ops
                                HdlValueId: accum_window_q
                                HdlValueInt: 31
    DEL HdlStmBlock@@SEQ from 
    DEL HdlStmProcessTriggerConstrain@@COMB from 

UPD HdlStmIf@@ to 
    MOV HdlOp@@EQ to 
    HdlOp: EQ
        list: ops
            HdlOp: XOR
                list: ops
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: accum_window_q
                            HdlValueInt: 31
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: op_b_shift_q
                            HdlValueInt: 31
            HdlValueInt: 0
    UPD HdlOp@@ASSIGN to ASSIGN
        MOV HdlOp@@EQ to ops
        HdlOp: EQ
            list: ops
                HdlOp: INDEX
                    list: ops
                        HdlValueId: res_adder_h
                        HdlValueInt: 31
                HdlValueInt: 0
        DEL HdlValueId@@is_greater_equal from ops
        DEL list@@ops from ASSIGN
    UPD HdlOp@@ASSIGN to ASSIGN
        MOV HdlOp@@INDEX to ops
        HdlOp: INDEX
            list: ops
                HdlValueId: accum_window_q
                HdlValueInt: 31
        DEL HdlValueId@@is_greater_equal from ops
        DEL list@@ops from ASSIGN
    DEL HdlOp@@ASSIGN from 
    DEL list@@elifs from 
    DEL HdlOp@@ASSIGN from 

DEL HdlStmIf@@ from body

DEL HdlStmProcess@@ from objs


CommitId: 6b0475744dba1991664be9c780a5c727586c8a9d
Code cleanup
--- a/rtl/ibex_multdiv_slow.sv
+++ b/rtl/ibex_multdiv_slow.sv
@@ -146,9 +139,8 @@ module ibex_multdiv_slow
   assign b_0             = {32{op_b_shift_q[0]}};
 
   //build the partial product
-  assign op_a_bw_pp       = { ~(op_a_shift_q[32] & op_b_shift_q[0]), op_a_shift_q[31:0] & b_0 };
-
-  assign op_a_bw_last_pp  = { op_a_shift_q[32] & op_b_shift_q[0], ~(op_a_shift_q[31:0] & b_0) };
+  assign op_a_bw_pp       = { ~(op_a_shift_q[32] & op_b_shift_q[0]),  (op_a_shift_q[31:0] & b_0) };
+  assign op_a_bw_last_pp  = {  (op_a_shift_q[32] & op_b_shift_q[0]), ~(op_a_shift_q[31:0] & b_0) };
 
   assign sign_a   = op_a_i[31] & signed_mode_i[0];
   assign sign_b   = op_b_i[31] & signed_mode_i[1];

ParseResult:
UPD HdlModuleDef@@ibex_multdiv_slow to ibex_multdiv_slow
    INS HdlImport@@ to objs
    HdlImport
        list: path
            HdlValueId: ibex_defines
            HdlAll


CommitId: 42aa761c5dca28ccf3421f4f953edd8831212c9f
[rtl] Fix mtval for unaligned instr errors
--- a/rtl/ibex_prefetch_buffer.sv
+++ b/rtl/ibex_prefetch_buffer.sv
@@ -24,6 +24,7 @@ module ibex_prefetch_buffer (
     output logic [31:0] rdata_o,
     output logic [31:0] addr_o,
     output logic        err_o,
+    output logic        err_plus2_o,
 
 
     // goes to instruction memory / instruction cache

ParseResult:
INS HdlIdDef@@err_plus2_o to ports
HdlIdDef: err_plus2_o
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: OUT


CommitId: bf78a88e9ebf8a921a14dd002af50c116be10c3c
Fix linting warning
--- a/rtl/ibex_cs_registers.sv
+++ b/rtl/ibex_cs_registers.sv
@@ -589,12 +589,10 @@ module ibex_cs_registers #(
   // update enable signals
   always_comb begin : mcountinhibit_update
     if (mcountinhibit_we == 1'b1) begin
-      mcountinhibit_d = csr_wdata_int;
+      mcountinhibit_d = {csr_wdata_int[31:2], 1'b0, csr_wdata_int[0]}; // bit 1 must always be 0
     end else begin
       mcountinhibit_d = mcountinhibit_q;
     end
-    // bit 1 must always be 0
-    mcountinhibit_d[1] = 1'b0;
   end
 
   assign mcountinhibit_force = {{29-MHPMCounterNum{1'b1}}, {MHPMCounterNum{1'b0}}, 3'b000};
ParseResult:
INS HdlStmProcess@@ to objs

UPD HdlStmProcess@@ to 
    INS HdlStmBlock@@SEQ to 
    INS HdlStmProcessTriggerConstrain@@COMB to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

INS HdlStmIf@@ to body

UPD HdlStmIf@@ to 
    MOV HdlOp@@EQ to 
    HdlOp: EQ
        list: ops
            HdlValueId: mcountinhibit_we
            HdlValueInt: 1
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: mcountinhibit_d
                    HdlValueId: mcountinhibit_q
    DEL HdlStmBlock@@SEQ from 
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: mcountinhibit_d
                    HdlValueId: csr_wdata_int
    DEL list@@elifs from 

UPD HdlStmIf@@ to 
    INS HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: mcountinhibit_d
                    HdlOp: CONCAT
                        list: ops
                            HdlOp: CONCAT
                                list: ops
                                    HdlOp: INDEX
                                        list: ops
                                            HdlValueId: csr_wdata_int
                                            HdlOp: DOWNTO
                                                list: ops
                                                    HdlValueInt: 31
                                                    HdlValueInt: 2
                                    HdlValueInt: 0
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: csr_wdata_int
                                    HdlValueInt: 0
    INS list@@elifs to 

DEL HdlStmIf@@ from body

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlOp: INDEX
                    list: ops
                        HdlValueId: mcountinhibit_d
                        HdlValueInt: 1
                HdlValueInt: 0
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL HdlStmProcessTriggerConstrain@@COMB from 

DEL HdlStmProcess@@ from objs


CommitId: 16177fe8db9012197c150d7487428437e020eaa6
[RTL] Fix I-side timing loop
--- a/rtl/ibex_prefetch_buffer.sv
+++ b/rtl/ibex_prefetch_buffer.sv
@@ -39,27 +39,30 @@ module ibex_prefetch_buffer (
     output logic        busy_o
 );
 
-  typedef enum logic [1:0] {
-    IDLE, WAIT_GNT, WAIT_RVALID, WAIT_ABORTED
-  } pf_fsm_e;
+  // Changes to the address flops would be required for > 2 outstanding requests
+  localparam int unsigned NUM_REQS = 2;
 
-  pf_fsm_e pf_fsm_cs, pf_fsm_ns;
+  logic                valid_req;
+  logic                valid_req_d, valid_req_q;
+  logic                gnt_or_pmp_err, rvalid_or_pmp_err;
+  logic [NUM_REQS-1:0] rdata_outstanding_n, rdata_outstanding_s, rdata_outstanding_q;
+  logic [NUM_REQS-1:0] branch_abort_n, branch_abort_s, branch_abort_q;
 
-  logic [31:0] instr_addr_q, fetch_addr;
-  logic [31:0] instr_addr, instr_addr_w_aligned;
-  logic        addr_valid;
-  logic        pmp_err_q;
-  logic        instr_or_pmp_err;
+  logic [31:0]         instr_addr_q, fetch_addr;
+  logic [31:0]         instr_addr, instr_addr_w_aligned;
+  logic                addr_valid;
+  logic                pmp_err_q;
+  logic                instr_or_pmp_err;
 
-  logic        fifo_valid;
-  logic        fifo_ready;
-  logic        fifo_clear;
+  logic                fifo_valid;
+  logic                fifo_ready;
+  logic                fifo_clear;
 
   ////////////////////////////
   // Prefetch buffer status //
   ////////////////////////////
 
-  assign busy_o = (pf_fsm_cs != IDLE) | instr_req_o;
+  assign busy_o = (|rdata_outstanding_q) | instr_req_o;
 
   //////////////////////////////////////////////
   // Fetch fifo - consumes addresses and data //

ParseResult:
UPD HdlIdDef@@pf_fsm_e to NUM_REQS

INS HdlIdDef@@valid_req to objs
HdlIdDef: valid_req
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

INS HdlIdDef@@valid_req_d to objs
HdlIdDef: valid_req_d
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

INS HdlIdDef@@valid_req_q to objs
HdlIdDef: valid_req_q
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

INS HdlIdDef@@gnt_or_pmp_err to objs
HdlIdDef: gnt_or_pmp_err
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

INS HdlIdDef@@rvalid_or_pmp_err to objs
HdlIdDef: rvalid_or_pmp_err
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

INS HdlIdDef@@rdata_outstanding_n to objs
HdlIdDef: rdata_outstanding_n
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlOp: SUB
                        list: ops
                            HdlValueId: NUM_REQS
                            HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: INTERNAL

UPD HdlIdDef@@pf_fsm_cs to rdata_outstanding_s

INS HdlIdDef@@rdata_outstanding_q to objs
HdlIdDef: rdata_outstanding_q
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlOp: SUB
                        list: ops
                            HdlValueId: NUM_REQS
                            HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: INTERNAL

INS HdlIdDef@@branch_abort_n to objs
HdlIdDef: branch_abort_n
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlOp: SUB
                        list: ops
                            HdlValueId: NUM_REQS
                            HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: INTERNAL

UPD HdlIdDef@@pf_fsm_ns to branch_abort_s

INS HdlIdDef@@branch_abort_q to objs
HdlIdDef: branch_abort_q
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlOp: SUB
                        list: ops
                            HdlValueId: NUM_REQS
                            HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: INTERNAL

UPD HdlIdDef@@NUM_REQS to NUM_REQS
    INS HdlOp@@PARAMETRIZATION to NUM_REQS
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: int
            HdlOp: MAP_ASSOCIATION
                list: ops
                    HdlValueId: signed
    INS HdlValueInt@@2 to NUM_REQS

UPD HdlIdDef@@rdata_outstanding_s to rdata_outstanding_s
    INS HdlOp@@PARAMETRIZATION to rdata_outstanding_s
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlOp: SUB
                        list: ops
                            HdlValueId: NUM_REQS
                            HdlValueInt: 1
                    HdlValueInt: 0

UPD HdlIdDef@@branch_abort_s to branch_abort_s
    INS HdlOp@@PARAMETRIZATION to branch_abort_s
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlOp: SUB
                        list: ops
                            HdlValueId: NUM_REQS
                            HdlValueInt: 1
                    HdlValueInt: 0

UPD HdlStmAssign@@ to 
    UPD HdlOp@@OR to OR
        UPD HdlOp@@NE to OR_UNARY
        UPD HdlOp@@NE to NE
            UPD HdlValueId@@pf_fsm_cs to rdata_outstanding_q
            DEL HdlValueId@@IDLE from ops

UPD HdlIdDef@@pf_fsm_e to pf_fsm_e
    DEL HdlExprNotImplemented@@value from pf_fsm_e


CommitId: 16177fe8db9012197c150d7487428437e020eaa6
[RTL] Fix I-side timing loop
--- a/rtl/ibex_fetch_fifo.sv
+++ b/rtl/ibex_fetch_fifo.sv
@@ -72,22 +98,19 @@ module ibex_fetch_fifo (
   assign err_unaligned   = valid_q[1] ? ((err_q[1] & ~unaligned_is_compressed) | err_q[0]) :
                                         ((valid_q[0] & err_q[0]) |
                                          (in_err_i & (~valid_q[0] | ~unaligned_is_compressed)));
+
   // An uncompressed unaligned instruction is only valid if both parts are available
   assign valid_unaligned = valid_q[1] ? 1'b1 :
                                         (valid_q[0] & in_valid_i);
 
   assign unaligned_is_compressed    = rdata[17:16] != 2'b11;
   assign aligned_is_compressed      = rdata[ 1: 0] != 2'b11;
-  assign unaligned_is_compressed_st = rdata_q[0][17:16] != 2'b11;
 
   ////////////////////////////////////////
   // Instruction aligner (if unaligned) //
   ////////////////////////////////////////
 
   always_comb begin
-    // serve the aligned case even though the output address is unaligned when
-    // the next instruction will be from a hardware loop target
-    // in this case the current instruction is already prealigned in element 0
     if (out_addr_o[1]) begin
       // unaligned case
       out_rdata_o = rdata_unaligned;

ParseResult:
DEL HdlStmAssign@@ from objs
HdlStmAssign
    HdlOp: NE
        list: ops
            HdlOp: INDEX
                list: ops
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: rdata_q
                            HdlValueInt: 0
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 17
                            HdlValueInt: 16
            HdlValueInt: 11
    HdlValueId: unaligned_is_compressed_st


CommitId: 16177fe8db9012197c150d7487428437e020eaa6
[RTL] Fix I-side timing loop
--- a/rtl/ibex_fetch_fifo.sv
+++ b/rtl/ibex_fetch_fifo.sv
@@ -106,29 +129,18 @@ module ibex_fetch_fifo (
     end
   end
 
-  assign out_addr_o = valid_q[0] ? addr_q[0] : in_addr_i;
-
-  // this valid signal must not depend on signals from outside!
-  always_comb begin
-    out_valid_stored_o = 1'b1;
-
-    if (out_addr_o[1]) begin
-      if (unaligned_is_compressed_st) begin
-        out_valid_stored_o = 1'b1;
-      end else begin
-        out_valid_stored_o = valid_q[1];
-      end
-    end else begin
-      out_valid_stored_o = valid_q[0];
-    end
-  end
+  assign out_addr_o[31:2] = valid_q[0] ? addr_q[0]          : in_addr_i[31:2];
+  assign out_addr_o[1]    = valid_q[0] ? entry0_unaligned_q : in_addr_i[1];
+  assign out_addr_o[0]    = 1'b0;
 
+  // The LSB of the address is unused, since all addresses are halfword aligned
+  assign unused_addr_in = in_addr_i[0];
 
   ////////////////
   // input port //
   ////////////////
 
-  // we accept data as long as our fifo is not full
+  // we accept data as long as our FIFO is not full
   // we don't care about clear here as the data will be received one cycle
   // later anyway
   assign in_ready_o = ~valid_q[DEPTH-2];

ParseResult:
INS HdlStmAssign@@ to objs

INS HdlStmAssign@@ to objs

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: INDEX
        list: ops
            HdlValueId: in_addr_i
            HdlValueInt: 0
    HdlValueId: unused_addr_in

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to TERNARY
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: out_valid_stored_o
                HdlOp: INDEX
                    list: ops
                        HdlValueId: valid_q
                        HdlValueInt: 0
        UPD HdlOp@@ASSIGN to ASSIGN
            DEL HdlValueId@@out_valid_stored_o from ops
        DEL list@@body from SEQ
    MOV HdlOp@@INDEX to 
    HdlOp: INDEX
        list: ops
            HdlValueId: out_addr_o
            HdlValueInt: 1
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL list@@elifs from 
    DEL HdlStmBlock@@SEQ from 

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            MOV HdlOp@@INDEX to ops
            HdlOp: INDEX
                list: ops
                    HdlValueId: valid_q
                    HdlValueInt: 1
            UPD HdlOp@@INDEX to INDEX
                UPD HdlValueId@@valid_q to out_addr_o
                UPD HdlValueInt@@1 to 0
            DEL HdlValueId@@out_valid_stored_o from ops
            DEL list@@ops from ASSIGN
        DEL HdlOp@@ASSIGN from body
        DEL list@@body from SEQ
    DEL HdlValueId@@unaligned_is_compressed_st from 
    DEL HdlStmBlock@@SEQ from 
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: out_valid_stored_o
                    HdlValueInt: 1
    DEL list@@elifs from 
    DEL HdlStmBlock@@SEQ from 

UPD HdlStmAssign@@ to 
    MOV HdlValueId@@out_addr_o to 
    HdlValueId: out_addr_o
    UPD HdlOp@@TERNARY to TERNARY
        MOV HdlValueId@@in_addr_i to ops
        HdlValueId: in_addr_i

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: out_valid_stored_o
                HdlValueInt: 1
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL HdlStmProcessTriggerConstrain@@COMB from 

DEL HdlStmIf@@ from body

DEL HdlStmIf@@ from body

DEL HdlStmProcess@@ from objs


CommitId: 16177fe8db9012197c150d7487428437e020eaa6
[RTL] Fix I-side timing loop
--- a/rtl/ibex_fetch_fifo.sv
+++ b/rtl/ibex_fetch_fifo.sv
@@ -217,7 +216,13 @@ module ibex_fetch_fifo (
   // Assertions //
   ////////////////
 `ifndef VERILATOR
+  // Code changes required to support > 2 outstanding requests
+  assert property (
+    @(posedge clk_i) disable iff (!rst_ni)
+    (NUM_REQS <= 2) );
+
   assert property (
-    @(posedge clk_i) (in_valid_i) |-> ((valid_q[DEPTH-1] == 1'b0) || (clear_i == 1'b1)) );
+    @(posedge clk_i) disable iff (!rst_ni)
+    (in_valid_i) |-> ((valid_q[DEPTH-1] == 1'b0) || (clear_i == 1'b1)) );
 `endif
 endmodule
ParseResult:
UPD HdlStmFor@@ to 
    INS HdlOp@@INCR_POST to 
    HdlOp: INCR_POST
        list: ops
            HdlValueId: i
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlOp@@LT to LT
        INS HdlOp@@SUB to ops
        UPD HdlOp@@SUB to SUB
            INS list@@ops to SUB
            INS HdlValueInt@@1 to ops

UPD HdlStmAssign@@ to 
    INS HdlOp@@OR to 
    INS HdlOp@@INDEX to 
    HdlOp: INDEX
        list: ops
            HdlValueId: entry_en
            HdlValueId: i
    UPD HdlOp@@OR to OR
        INS list@@ops to OR
        INS HdlOp@@AND to ops
        INS HdlOp@@AND to ops
        UPD HdlOp@@AND to AND
            INS list@@ops to AND
            INS HdlOp@@INDEX to ops
            INS HdlValueId@@pop_fifo to ops
            UPD HdlOp@@INDEX to INDEX
                INS list@@ops to INDEX
                INS HdlValueId@@valid_pushed to ops
                INS HdlOp@@ADD to ops
                UPD HdlOp@@ADD to ADD
                    INS HdlValueId@@i to ops
                    INS HdlValueInt@@1 to ops
        UPD HdlOp@@AND to AND
            INS list@@ops to AND
            INS HdlOp@@AND to ops
            INS HdlOp@@NEG to ops
            HdlOp: NEG
                list: ops
                    HdlValueId: pop_fifo
            UPD HdlOp@@AND to AND
                INS list@@ops to AND
                INS HdlValueId@@in_valid_i to ops
                UPD HdlOp@@INDEX to INDEX
                    INS HdlValueId@@i to ops


CommitId: 640a8682937a88358173398da45bf9fc0ade2508
Update lowrisc_ip to lowRISC/opentitan@d78da129
--- a/vendor/lowrisc_ip/prim/rtl/prim_filter.sv
+++ b/vendor/lowrisc_ip/prim/rtl/prim_filter.sv
@@ -20,6 +20,7 @@ module prim_filter #(parameter int Cycles = 4) (
 
   logic [Cycles-1:0] stored_vector_q, stored_vector_d;
   logic stored_value_q, update_stored_value;
+  logic unused_stored_vector_q_msb;
 
   always_ff @(posedge clk_i or negedge rst_ni) begin
     if (!rst_ni) begin

ParseResult:
INS HdlIdDef@@unused_stored_vector_q_msb to objs
HdlIdDef: unused_stored_vector_q_msb
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL


CommitId: 640a8682937a88358173398da45bf9fc0ade2508
Update lowrisc_ip to lowRISC/opentitan@d78da129
--- a/vendor/lowrisc_ip/prim/rtl/prim_filter.sv
+++ b/vendor/lowrisc_ip/prim/rtl/prim_filter.sv
@@ -30,6 +31,7 @@ module prim_filter #(parameter int Cycles = 4) (
   end
 
   assign stored_vector_d = {stored_vector_q[Cycles-2:0],filter_i};
+  assign unused_stored_vector_q_msb = stored_vector_q[Cycles-1];
 
   always_ff @(posedge clk_i or negedge rst_ni) begin
     if (!rst_ni) begin
ParseResult:
INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: INDEX
        list: ops
            HdlValueId: stored_vector_q
            HdlOp: SUB
                list: ops
                    HdlValueId: Cycles
                    HdlValueInt: 1
    HdlValueId: unused_stored_vector_q_msb


CommitId: db75d30547ec2d7bf02bf38381caff2fac7f3f99
Replace non-unique `case` constructs by `unique case`
--- a/rtl/ibex_decoder.sv
+++ b/rtl/ibex_decoder.sv
@@ -340,7 +340,10 @@ module ibex_decoder #(
               illegal_insn_o = 1'b1;
             end
           end
-          default:;
+
+          default: begin
+            alu_operator_o = alu_op_e'({$bits(alu_op_e){1'bX}});
+          end
         endcase
       end
 
ParseResult:
UPD HdlStmProcess@@ to 
    INS HdlStmProcessTriggerConstrain@@COMB to 

UPD HdlStmCase@@opcode to opcode
    INS HdlStmCaseType@@CASE to opcode
    INS HdlValueId@@opcode to opcode
    INS HdlStmCaseUniqConstrain@@UNIQUE to opcode

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_rdata_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '14'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '12'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_rdata_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '14'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '12'}]}]} 
    INS HdlStmBlock@@SEQ to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_rdata_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '14'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '12'}]}]} 
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: alu_operator_o
                    HdlOp: CALL
                        list: ops
                            HdlValueId: alu_op_e
                            HdlOp: REPL_CONCAT
                                list: ops
                                    HdlOp: CALL
                                        list: ops
                                            HdlValueId: $bits
                                            HdlValueId: alu_op_e
                                    HdlValueInt: x

UPD HdlStmCase@@opcode to opcode
    DEL HdlStmCaseType@@CASE from opcode
    DEL HdlValueId@@opcode from opcode
    DEL HdlStmCaseUniqConstrain@@UNIQUE from opcode

DEL HdlStmNop@@default from {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['instr_rdata_i',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '14'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '12'}]}]} 

UPD HdlStmProcess@@ to 
    DEL HdlStmProcessTriggerConstrain@@COMB from 


CommitId: d059979af65601363ca92160f53c1ba157c2bbbd
RVFI based on core state (#151, fix #147)
--- a/rtl/ibex_id_stage.sv
+++ b/rtl/ibex_id_stage.sv
@@ -70,8 +70,6 @@ module ibex_id_stage #(
     // Stalls
     input  logic                      ex_valid_i,     // EX stage has valid output
     input  logic                      lsu_valid_i,    // LSU has valid output, or is done
-    output logic                      id_out_valid_o, // ID stage is done
-
     // ALU
     output ibex_defines::alu_op_e     alu_operator_ex_o,
     output logic [31:0]               alu_operand_a_ex_o,

ParseResult:
DEL HdlIdDef@@id_out_valid_o from ports
HdlIdDef: id_out_valid_o
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: OUT


CommitId: 9858198ee53e9185e904b02b2d5b3ff26434ec4f
Fix a bug in the LSU by making sure that branches can be finished
--- a/riscv_simchecker.sv
+++ b/riscv_simchecker.sv
@@ -65,6 +65,7 @@ module riscv_simchecker
   input  logic [31:0] ex_data_wdata,
 
   input  logic        lsu_misaligned,
+  input  logic        wb_bypass,
 
   input  logic        wb_valid,
   input  logic [ 4:0] wb_reg_addr,

ParseResult:
INS HdlIdDef@@wb_bypass to ports
HdlIdDef: wb_bypass
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: IN


CommitId: 9858198ee53e9185e904b02b2d5b3ff26434ec4f
Fix a bug in the LSU by making sure that branches can be finished
--- a/riscv_simchecker.sv
+++ b/riscv_simchecker.sv
@@ -162,7 +165,9 @@ module riscv_simchecker
 
           trace.mem_access.push_back(mem_acc);
         end
-      end while (!ex_valid || lsu_misaligned);
+      end while ((!ex_valid || lsu_misaligned) && (!wb_bypass));
+
+      trace.wb_bypass = wb_bypass;
 
       instr_wb.put(trace);
     end

ParseResult:
UPD HdlStmWhile@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: trace
                HdlValueId: wb_bypass

UPD HdlStmWhile@@ to 
    INS HdlOp@@AND_LOG to 
    UPD HdlOp@@AND_LOG to AND_LOG
        INS list@@ops to AND_LOG
        INS HdlOp@@NEG_LOG to ops
        HdlOp: NEG_LOG
            list: ops
                HdlValueId: wb_bypass

UPD HdlStmWhile@@ to 
    MOV HdlOp@@OR_LOG to 
    HdlOp: OR_LOG
        list: ops
            HdlOp: NEG_LOG
                list: ops
                    HdlValueId: ex_valid
            HdlValueId: lsu_misaligned


CommitId: c7cb958f0d6f143d835e33d7efe27336cc7737c1
Update lowrisc_ip to lowRISC/opentitan@ca950b43a
--- a/vendor/lowrisc_ip/ip/prim/rtl/prim_secded_hamming_39_32_enc.sv
+++ b/vendor/lowrisc_ip/ip/prim/rtl/prim_secded_hamming_39_32_enc.sv
@@ -2,23 +2,22 @@
 // Licensed under the Apache License, Version 2.0, see LICENSE for details.
 // SPDX-License-Identifier: Apache-2.0
 //
-// SECDED Encoder generated by
-// util/design/secded_gen.py -m 7 -k 32 -s 1592631616 -c hamming
+// SECDED encoder generated by util/design/secded_gen.py
 
 module prim_secded_hamming_39_32_enc (
-  input        [31:0] in,
-  output logic [38:0] out
+  input        [31:0] data_i,
+  output logic [38:0] data_o
 );
 
   always_comb begin : p_encode
-    out = 39'(in);
-    out[32] = ^(out & 39'h0056AAAD5B);
-    out[33] = ^(out & 39'h009B33366D);
-    out[34] = ^(out & 39'h00E3C3C78E);
-    out[35] = ^(out & 39'h0003FC07F0);
-    out[36] = ^(out & 39'h0003FFF800);
-    out[37] = ^(out & 39'h00FC000000);
-    out[38] = ^(out & 39'h3FFFFFFFFF);
+    data_o = 39'(data_i);
+    data_o[32] = ^(data_o & 39'h0056AAAD5B);
+    data_o[33] = ^(data_o & 39'h009B33366D);
+    data_o[34] = ^(data_o & 39'h00E3C3C78E);
+    data_o[35] = ^(data_o & 39'h0003FC07F0);
+    data_o[36] = ^(data_o & 39'h0003FFF800);
+    data_o[37] = ^(data_o & 39'h00FC000000);
+    data_o[38] = ^(data_o & 39'h3FFFFFFFFF);
   end
 
 endmodule : prim_secded_hamming_39_32_enc
ParseResult:
UPD HdlIdDef@@in to data_i

UPD HdlIdDef@@out to data_o

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@out to data_o
            UPD HdlOp@@CALL to CALL
                UPD HdlValueId@@in to data_i
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@INDEX to INDEX
                UPD HdlValueId@@out to data_o
            UPD HdlOp@@XOR_UNARY to XOR_UNARY
                UPD HdlOp@@AND to AND
                    UPD HdlValueId@@out to data_o
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@INDEX to INDEX
                UPD HdlValueId@@out to data_o
            UPD HdlOp@@XOR_UNARY to XOR_UNARY
                UPD HdlOp@@AND to AND
                    UPD HdlValueId@@out to data_o
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@INDEX to INDEX
                UPD HdlValueId@@out to data_o
            UPD HdlOp@@XOR_UNARY to XOR_UNARY
                UPD HdlOp@@AND to AND
                    UPD HdlValueId@@out to data_o
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@INDEX to INDEX
                UPD HdlValueId@@out to data_o
            UPD HdlOp@@XOR_UNARY to XOR_UNARY
                UPD HdlOp@@AND to AND
                    UPD HdlValueId@@out to data_o
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@INDEX to INDEX
                UPD HdlValueId@@out to data_o
            UPD HdlOp@@XOR_UNARY to XOR_UNARY
                UPD HdlOp@@AND to AND
                    UPD HdlValueId@@out to data_o
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@INDEX to INDEX
                UPD HdlValueId@@out to data_o
            UPD HdlOp@@XOR_UNARY to XOR_UNARY
                UPD HdlOp@@AND to AND
                    UPD HdlValueId@@out to data_o
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@INDEX to INDEX
                UPD HdlValueId@@out to data_o
            UPD HdlOp@@XOR_UNARY to XOR_UNARY
                UPD HdlOp@@AND to AND
                    UPD HdlValueId@@out to data_o


CommitId: 2c75c2b2ec90bebb756386e1360810474323c1ad
Update lowrisc_ip to lowRISC/opentitan@1ae03937f
--- a/vendor/lowrisc_ip/ip/prim/rtl/prim_clock_div.sv
+++ b/vendor/lowrisc_ip/ip/prim/rtl/prim_clock_div.sv
@@ -21,6 +21,11 @@ module prim_clock_div #(
   // For odd divide we need to introduce more parameters to control duty cycle
   `ASSERT_INIT(DivEven_A, (Divisor % 2) == 0)
 
+  // It is assumed the flops in this module are NOT on the scan-chain, as a result only
+  // the input values are guarded
+  logic step_down_req;
+  assign step_down_req = test_en_i ? '0 : step_down_req_i;
+
   logic clk_int;
 
   if (Divisor == 2) begin : gen_div2

ParseResult:
INS HdlIdDef@@step_down_req to objs
HdlIdDef: step_down_req
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: TERNARY
        list: ops
            HdlValueId: test_en_i
            HdlValueInt: 0
            HdlValueId: step_down_req_i
    HdlValueId: step_down_req


CommitId: 2c75c2b2ec90bebb756386e1360810474323c1ad
Update lowrisc_ip to lowRISC/opentitan@1ae03937f
--- a/vendor/lowrisc_ip/ip/prim/rtl/prim_clock_div.sv
+++ b/vendor/lowrisc_ip/ip/prim/rtl/prim_clock_div.sv
@@ -91,25 +96,22 @@ module prim_clock_div #(
       if (!rst_ni) begin
         step_down_ack_o <= 1'b0;
       end else begin
-        step_down_ack_o <= step_down_req_i;
+        step_down_ack_o <= step_down_req;
       end
     end
   end
 
-  // when in scanmode, bypass the dividers completely
-  // also anchor point for constraints
+  // anchor points for constraints
   logic clk_muxed;
-
   prim_clock_mux2 #(
     .NoFpgaBufG(1'b1)
   ) u_clk_mux (
     .clk0_i(clk_int),
     .clk1_i(clk_i),
-    .sel_i(test_en_i),
+    .sel_i('0),
     .clk_o(clk_muxed)
   );
 
-  // anchor point for constraints
   prim_clock_buf u_clk_div_buf (
     .clk_i(clk_muxed),
     .clk_o
ParseResult:
UPD HdlStmAssign@@ to 
    UPD HdlValueId@@step_down_req_i to step_down_req


CommitId: 7d61def943cd8c5aa84c3943ba4985cd59e6c768
Update lowrisc_ip to lowRISC/opentitan@f29a0f7a7
--- a/vendor/lowrisc_ip/ip/prim/rtl/prim_prince.sv
+++ b/vendor/lowrisc_ip/ip/prim/rtl/prim_prince.sv
@@ -53,14 +53,14 @@ module prim_prince #(
 
   logic [DataWidth-1:0] k0, k0_prime_d, k1_d, k0_new_d, k0_prime_q, k1_q, k0_new_q;
   always_comb begin : p_key_expansion
-    k0         = key_i[DataWidth-1:0];
+    k0         = key_i[2*DataWidth-1 : DataWidth];
     k0_prime_d = {k0[0], k0[DataWidth-1:2], k0[DataWidth-1] ^ k0[1]};
-    k1_d       = key_i[2*DataWidth-1 : DataWidth];
+    k1_d       = key_i[DataWidth-1:0];
 
     // modify key for decryption
     if (dec_i) begin
       k0          = k0_prime_d;
-      k0_prime_d  = key_i[DataWidth-1:0];
+      k0_prime_d  = key_i[2*DataWidth-1 : DataWidth];
       k1_d       ^= prim_cipher_pkg::PRINCE_ALPHA_CONST[DataWidth-1:0];
     end
   end

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: k0_prime_d
                HdlOp: CONCAT
                    list: ops
                        HdlOp: CONCAT
                            list: ops
                                HdlOp: INDEX
                                    list: ops
                                        HdlValueId: k0
                                        HdlValueInt: 0
                                HdlOp: INDEX
                                    list: ops
                                        HdlValueId: k0
                                        HdlOp: DOWNTO
                                            list: ops
                                                HdlOp: SUB
                                                    list: ops
                                                        HdlValueId: DataWidth
                                                        HdlValueInt: 1
                                                HdlValueInt: 2
                        HdlOp: XOR
                            list: ops
                                HdlOp: INDEX
                                    list: ops
                                        HdlValueId: k0
                                        HdlOp: SUB
                                            list: ops
                                                HdlValueId: DataWidth
                                                HdlValueInt: 1
                                HdlOp: INDEX
                                    list: ops
                                        HdlValueId: k0
                                        HdlValueInt: 1
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: k0
                HdlOp: INDEX
                    list: ops
                        HdlValueId: key_i
                        HdlOp: DOWNTO
                            list: ops
                                HdlOp: SUB
                                    list: ops
                                        HdlValueId: DataWidth
                                        HdlValueInt: 1
                                HdlValueInt: 0
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@k1_d to k0
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@k0 to k1_d

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@INDEX to INDEX
                UPD HdlOp@@DOWNTO to DOWNTO
                    INS HdlValueId@@DataWidth to ops
                    UPD HdlOp@@SUB to SUB
                        INS HdlOp@@MUL to ops
                        UPD HdlOp@@MUL to MUL
                            INS list@@ops to MUL
                            INS HdlValueInt@@2 to ops

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@INDEX to INDEX
                UPD HdlOp@@DOWNTO to DOWNTO
                    INS HdlValueId@@DataWidth to ops
                    UPD HdlOp@@SUB to SUB
                        INS HdlOp@@MUL to ops
                        UPD HdlOp@@MUL to MUL
                            INS list@@ops to MUL
                            INS HdlValueInt@@2 to ops

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@INDEX to INDEX
                UPD HdlOp@@DOWNTO to DOWNTO
                    UPD HdlOp@@SUB to SUB
                        MOV HdlValueId@@DataWidth to ops
                        HdlValueId: DataWidth
                    DEL HdlValueInt@@0 from ops

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@INDEX to INDEX
                UPD HdlOp@@DOWNTO to DOWNTO
                    UPD HdlOp@@SUB to SUB
                        MOV HdlValueId@@DataWidth to ops
                        HdlValueId: DataWidth
                    DEL HdlValueInt@@0 from ops


CommitId: d977e146babec168c2958f6523123d02f7912e96
[rtl] Various small lint fixes
--- a/rtl/ibex_register_file_ff.sv
+++ b/rtl/ibex_register_file_ff.sv
@@ -95,4 +95,8 @@ module ibex_register_file_ff #(
   assign rdata_a_o = rf_reg[raddr_a_i];
   assign rdata_b_o = rf_reg[raddr_b_i];
 
+  // Signal not used in FF register file
+  logic unused_test_en;
+  assign unused_test_en = test_en_i;
+
 endmodule
ParseResult:
INS HdlIdDef@@unused_test_en to objs
HdlIdDef: unused_test_en
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlValueId: test_en_i
    HdlValueId: unused_test_en


CommitId: c7cb958f0d6f143d835e33d7efe27336cc7737c1
Update lowrisc_ip to lowRISC/opentitan@ca950b43a
--- a/vendor/lowrisc_ip/ip/prim/rtl/prim_secded_28_22_dec.sv
+++ b/vendor/lowrisc_ip/ip/prim/rtl/prim_secded_28_22_dec.sv
@@ -2,12 +2,11 @@
 // Licensed under the Apache License, Version 2.0, see LICENSE for details.
 // SPDX-License-Identifier: Apache-2.0
 //
-// SECDED Decoder generated by
-// util/design/secded_gen.py -m 6 -k 22 -s 1592631616 -c hsiao
+// SECDED decoder generated by util/design/secded_gen.py
 
 module prim_secded_28_22_dec (
-  input        [27:0] in,
-  output logic [21:0] d_o,
+  input        [27:0] data_i,
+  output logic [21:0] data_o,
   output logic [5:0] syndrome_o,
   output logic [1:0] err_o
 );

ParseResult:
UPD HdlIdDef@@in to data_i

UPD HdlIdDef@@d_o to data_o


CommitId: d71aaeee06b958fd4dd8ac59cc0cdaba0c0219bc
Update lowrisc_ip to lowRISC/opentitan@92e92424
--- a/vendor/lowrisc_ip/prim_generic/rtl/prim_generic_flash.sv
+++ b/vendor/lowrisc_ip/prim_generic/rtl/prim_generic_flash.sv
@@ -28,7 +28,17 @@ module prim_generic_flash #(
   input [DataWidth-1:0]              prog_data_i,
   output logic                       ack_o,
   output logic [DataWidth-1:0]       rd_data_o,
-  output logic                       init_busy_o
+  output logic                       init_busy_o,
+  input                              tck_i,
+  input                              tdi_i,
+  input                              tms_i,
+  output logic                       tdo_o,
+  input                              scanmode_i,
+  input                              scan_reset_ni,
+  input                              flash_power_ready_hi,
+  input                              flash_power_down_hi,
+  inout [3:0]                        flash_test_mode_ai,
+  inout                              flash_test_voltage_hi
 );
 
   // Emulated flash macro values

ParseResult:
INS HdlIdDef@@tck_i to ports
HdlIdDef: tck_i
    HdlValueId: wire
    HdlDirection: IN

INS HdlIdDef@@tdi_i to ports
HdlIdDef: tdi_i
    HdlValueId: wire
    HdlDirection: IN

INS HdlIdDef@@tms_i to ports
HdlIdDef: tms_i
    HdlValueId: wire
    HdlDirection: IN

INS HdlIdDef@@tdo_o to ports
HdlIdDef: tdo_o
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: OUT

INS HdlIdDef@@scanmode_i to ports
HdlIdDef: scanmode_i
    HdlValueId: wire
    HdlDirection: IN

INS HdlIdDef@@scan_reset_ni to ports
HdlIdDef: scan_reset_ni
    HdlValueId: wire
    HdlDirection: IN

INS HdlIdDef@@flash_power_ready_hi to ports
HdlIdDef: flash_power_ready_hi
    HdlValueId: wire
    HdlDirection: IN

INS HdlIdDef@@flash_power_down_hi to ports
HdlIdDef: flash_power_down_hi
    HdlValueId: wire
    HdlDirection: IN

INS HdlIdDef@@flash_test_mode_ai to ports
HdlIdDef: flash_test_mode_ai
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: wire
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 3
                    HdlValueInt: 0
    HdlDirection: INOUT

INS HdlIdDef@@flash_test_voltage_hi to ports
HdlIdDef: flash_test_voltage_hi
    HdlValueId: wire
    HdlDirection: INOUT


CommitId: d71aaeee06b958fd4dd8ac59cc0cdaba0c0219bc
Update lowrisc_ip to lowRISC/opentitan@92e92424
--- a/vendor/lowrisc_ip/prim_generic/rtl/prim_generic_flash.sv
+++ b/vendor/lowrisc_ip/prim_generic/rtl/prim_generic_flash.sv
@@ -315,4 +325,7 @@ module prim_generic_flash #(
 
   assign rd_data_o = held_part == flash_ctrl_pkg::FlashPartData ? rd_data_main : rd_data_info;
 
+  // hard-wire assignment for now
+  assign tdo_o = 1'b0;
+
 endmodule // prim_generic_flash
ParseResult:
INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: tdo_o


CommitId: 2aacd2b98be61fa4c9b633d1ddba9d1d5c894faf
[Priv modes] Add support for U-Mode
--- a/rtl/ibex_controller.sv
+++ b/rtl/ibex_controller.sv
@@ -74,6 +74,8 @@ module ibex_controller (
     output logic                  csr_restore_mret_id_o,
     output logic                  csr_save_cause_o,
     output logic [31:0]           csr_mtval_o,
+    input  ibex_pkg::priv_lvl_e   priv_mode_i,
+    input  logic                  csr_mstatus_tw_i,
 
     // stall signals
     input  logic                  stall_lsu_i,

ParseResult:
INS HdlIdDef@@priv_mode_i to ports
HdlIdDef: priv_mode_i
    HdlOp: DOUBLE_COLON
        list: ops
            HdlValueId: ibex_pkg
            HdlValueId: priv_lvl_e
    HdlDirection: IN

INS HdlIdDef@@csr_mstatus_tw_i to ports
HdlIdDef: csr_mstatus_tw_i
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: IN


CommitId: 2aacd2b98be61fa4c9b633d1ddba9d1d5c894faf
[Priv modes] Add support for U-Mode
--- a/rtl/ibex_controller.sv
+++ b/rtl/ibex_controller.sv
@@ -108,6 +110,7 @@ module ibex_controller (
   logic halt_if;
   logic flush_id;
   logic illegal_dret;
+  logic illegal_umode;
   logic exc_req_lsu;
   logic special_req;
   logic enter_debug_mode;

ParseResult:
INS HdlIdDef@@illegal_umode to objs
HdlIdDef: illegal_umode
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL


CommitId: 2aacd2b98be61fa4c9b633d1ddba9d1d5c894faf
[Priv modes] Add support for U-Mode
--- a/rtl/ibex_controller.sv
+++ b/rtl/ibex_controller.sv
@@ -157,11 +160,17 @@ module ibex_controller (
   // "Executing DRET outside of Debug Mode causes an illegal instruction exception."
   // [Debug Spec v0.13.2, p.41]
   assign illegal_dret = dret_insn & ~debug_mode_q;
+
+  // Some instructions can only be executed in M-Mode
+  assign illegal_umode = (priv_mode_i != PRIV_LVL_M) &
+                         // MRET must be in M-Mode. TW means trap WFI to M-Mode.
+                         (mret_insn | (csr_mstatus_tw_i & wfi_insn));
+
   // This is recorded in the illegal_insn_q flop to help timing.  Specifically
   // it is needed to break the path from ibex_cs_registers/illegal_csr_insn_o
   // to pc_set_o.  Clear when controller is in FLUSH so it won't remain set
   // once illegal instruction is handled.
-  assign illegal_insn_d = (illegal_insn_i | illegal_dret) & (ctrl_fsm_cs != FLUSH);
+  assign illegal_insn_d = (illegal_insn_i | illegal_dret | illegal_umode) & (ctrl_fsm_cs != FLUSH);
 
   // exception requests
   // requests are flopped in exc_req_q.  This is cleared when controller is in

ParseResult:
INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: AND
        list: ops
            HdlOp: NE
                list: ops
                    HdlValueId: priv_mode_i
                    HdlValueId: PRIV_LVL_M
            HdlOp: OR
                list: ops
                    HdlValueId: mret_insn
                    HdlOp: AND
                        list: ops
                            HdlValueId: csr_mstatus_tw_i
                            HdlValueId: wfi_insn
    HdlValueId: illegal_umode

UPD HdlStmAssign@@ to 
    UPD HdlOp@@AND to AND
        MOV HdlOp@@OR to ops
        HdlOp: OR
            list: ops
                HdlValueId: illegal_insn_i
                HdlValueId: illegal_dret


CommitId: 2aacd2b98be61fa4c9b633d1ddba9d1d5c894faf
[Priv modes] Add support for U-Mode
--- a/rtl/ibex_controller.sv
+++ b/rtl/ibex_controller.sv
@@ -486,7 +495,8 @@ module ibex_controller (
             csr_mtval_o = instr_is_compressed_i ? {16'b0, instr_compressed_i} : instr_i;
 
           end else if (ecall_insn) begin
-            exc_cause_o = EXC_CAUSE_ECALL_MMODE;
+            exc_cause_o = (priv_mode_i == PRIV_LVL_M) ? EXC_CAUSE_ECALL_MMODE :
+                                                        EXC_CAUSE_ECALL_UMODE;
 
           end else if (ebrk_insn) begin
             if (debug_mode_q) begin
ParseResult:
UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlOp@@TERNARY to ops
            UPD HdlOp@@TERNARY to TERNARY
                INS list@@ops to TERNARY
                INS HdlOp@@EQ to ops
                HdlOp: EQ
                    list: ops
                        HdlValueId: priv_mode_i
                        HdlValueId: PRIV_LVL_M
                INS HdlValueId@@EXC_CAUSE_ECALL_UMODE to ops

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            MOV HdlValueId@@EXC_CAUSE_ECALL_MMODE to ops
            HdlValueId: EXC_CAUSE_ECALL_MMODE


CommitId: ea2ffe82f1f48be653ab8ff29c06ef02aa131dca
[rtl/pmp] Fix PMP error prioritization
--- a/rtl/ibex_pmp.sv
+++ b/rtl/ibex_pmp.sv
@@ -36,8 +36,6 @@ module ibex_pmp #(
   logic [PMPNumChan-1:0][PMPNumRegions-1:0]   region_match_low;
   logic [PMPNumChan-1:0][PMPNumRegions-1:0]   region_match_both;
   logic [PMPNumChan-1:0][PMPNumRegions-1:0]   region_perm_check;
-  logic [PMPNumChan-1:0][PMPNumRegions-1:0]   machine_access_fault;
-  logic [PMPNumChan-1:0][PMPNumRegions-1:0]   user_access_allowed;
   logic [PMPNumChan-1:0]                      access_fault;
 
 

ParseResult:
UPD HdlIdDef@@machine_access_fault to machine_access_fault
    UPD HdlOp@@INDEX to INDEX
        UPD HdlOp@@DOWNTO to DOWNTO
            UPD list@@ops to body
            MOV list@@ops to DOWNTO
            list: ops
                HdlOp: SUB
                    list: ops
                        HdlValueId: PMPNumRegions
                        HdlValueInt: 1
                HdlValueInt: 0
            MOV HdlOp@@SUB to ops
            HdlOp: SUB
                list: ops
                    HdlValueId: PMPNumRegions
                    HdlValueInt: 1
            DEL HdlValueInt@@0 from ops
        DEL HdlOp@@PARAMETRIZATION from ops
        HdlOp: PARAMETRIZATION
            list: ops
                HdlValueId: logic
                HdlOp: DOWNTO
                    list: ops
                        HdlOp: SUB
                            list: ops
                                HdlValueId: PMPNumChan
                                HdlValueInt: 1
                        HdlValueInt: 0
        DEL HdlOp@@DOWNTO from ops
        DEL list@@ops from INDEX
    DEL HdlOp@@INDEX from machine_access_fault
    DEL HdlDirection@@INTERNAL from machine_access_fault

DEL HdlIdDef@@machine_access_fault from objs

DEL HdlIdDef@@user_access_allowed from objs
HdlIdDef: user_access_allowed
    HdlOp: INDEX
        list: ops
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: logic
                    HdlOp: DOWNTO
                        list: ops
                            HdlOp: SUB
                                list: ops
                                    HdlValueId: PMPNumChan
                                    HdlValueInt: 1
                            HdlValueInt: 0
            HdlOp: DOWNTO
                list: ops
                    HdlOp: SUB
                        list: ops
                            HdlValueId: PMPNumRegions
                            HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: INTERNAL


CommitId: ea2ffe82f1f48be653ab8ff29c06ef02aa131dca
[rtl/pmp] Fix PMP error prioritization
--- a/rtl/ibex_pmp.sv
+++ b/rtl/ibex_pmp.sv
@@ -87,14 +85,26 @@ module ibex_pmp #(
           ((pmp_req_type_i[c] == PMP_ACC_EXEC)  & csr_pmp_cfg_i[r].exec) |
           ((pmp_req_type_i[c] == PMP_ACC_WRITE) & csr_pmp_cfg_i[r].write) |
           ((pmp_req_type_i[c] == PMP_ACC_READ)  & csr_pmp_cfg_i[r].read);
-      // In machine mode, any match to a locked region without sufficient permissions is a fault
-      assign machine_access_fault[c][r] = region_match_both[c][r] & csr_pmp_cfg_i[r].lock &
-                                          ~region_perm_check[c][r];
-      // In any other mode, any access should fault unless is matches a region
-      assign user_access_allowed[c][r]  = region_match_both[c][r] & region_perm_check[c][r];
     end
-    assign access_fault[c] = (priv_mode_i[c] == PRIV_LVL_M) ? |machine_access_fault[c] :
-                                                              ~|user_access_allowed[c];
+
+    // Access fault determination / prioritization
+    always_comb begin
+      // Default is allow for M-mode, deny for other modes
+      access_fault[c] = (priv_mode_i[c] != PRIV_LVL_M);
+
+      // PMP entries are statically prioritized, from 0 to N-1
+      // The lowest-numbered PMP entry which matches an address determines accessability
+      for (int r = PMPNumRegions-1; r >= 0; r--) begin
+        if (region_match_both[c][r]) begin
+          access_fault[c] = (priv_mode_i[c] == PRIV_LVL_M) ?
+              // For M-mode, any region which matches with the L-bit clear, or with sufficient
+              // access permissions will be allowed
+              (csr_pmp_cfg_i[r].lock & ~region_perm_check[c][r]) :
+              // For other modes, the lock bit doesn't matter
+              ~region_perm_check[c][r];
+        end
+      end
+    end
 
     assign pmp_req_err_o[c] = access_fault[c];
   end
ParseResult:
INS HdlStmProcess@@ to body

UPD HdlStmProcess@@ to 
    INS HdlStmBlock@@SEQ to 
    INS HdlStmProcessTriggerConstrain@@COMB to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlOp@@INDEX to ops
            HdlOp: INDEX
                list: ops
                    HdlValueId: access_fault
                    HdlValueId: c
            INS HdlOp@@NE to ops
            HdlOp: NE
                list: ops
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: priv_mode_i
                            HdlValueId: c
                    HdlValueId: PRIV_LVL_M

UPD HdlStmAssign@@ to 
    UPD HdlOp@@AND to AND
        UPD HdlOp@@AND to ASSIGN
        MOV HdlOp@@AND to ops
        HdlOp: AND
            list: ops
                HdlOp: INDEX
                    list: ops
                        HdlOp: INDEX
                            list: ops
                                HdlValueId: region_match_both
                                HdlValueId: c
                        HdlValueId: r
                HdlOp: DOT
                    list: ops
                        HdlOp: INDEX
                            list: ops
                                HdlValueId: csr_pmp_cfg_i
                                HdlValueId: r
                        HdlValueId: lock
        UPD HdlOp@@AND to AND
            MOV HdlOp@@INDEX to ops
            HdlOp: INDEX
                list: ops
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: region_match_both
                            HdlValueId: c
                    HdlValueId: r
            MOV HdlOp@@DOT to ops
            HdlOp: DOT
                list: ops
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: csr_pmp_cfg_i
                            HdlValueId: r
                    HdlValueId: lock
    UPD HdlOp@@INDEX to GE
    MOV HdlOp@@INDEX to 
    HdlOp: INDEX
        list: ops
            HdlOp: INDEX
                list: ops
                    HdlValueId: machine_access_fault
                    HdlValueId: c
            HdlValueId: r
    MOV HdlOp@@AND to 
    HdlOp: AND
        list: ops
            HdlOp: AND
                list: ops
                    HdlOp: INDEX
                        list: ops
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: region_match_both
                                    HdlValueId: c
                            HdlValueId: r
                    HdlOp: DOT
                        list: ops
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: csr_pmp_cfg_i
                                    HdlValueId: r
                            HdlValueId: lock
            HdlOp: NEG
                list: ops
                    HdlOp: INDEX
                        list: ops
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: region_perm_check
                                    HdlValueId: c
                            HdlValueId: r
    UPD HdlOp@@INDEX to INDEX
        DEL HdlOp@@INDEX from ops
        HdlOp: INDEX
            list: ops
                HdlValueId: machine_access_fault
                HdlValueId: c

INS HdlStmFor@@ to body

UPD HdlStmFor@@ to 
    INS HdlStmBlock@@SEQ to 
    INS HdlStmBlock@@SEQ to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlOp@@GE to GE
        INS HdlValueInt@@0 to ops

UPD HdlStmAssign@@ to 
    UPD HdlOp@@AND to AND
        UPD HdlOp@@INDEX to INDEX
            UPD list@@ops to body
            MOV list@@ops to INDEX
            list: ops
                HdlOp: INDEX
                    list: ops
                        HdlValueId: region_match_both
                        HdlValueId: c
                HdlValueId: r
            UPD HdlOp@@INDEX to DECR_POST
            UPD HdlOp@@INDEX to INDEX
                UPD HdlValueId@@region_match_both to r
                DEL HdlValueId@@c from ops
            DEL HdlValueId@@r from ops
        DEL HdlOp@@INDEX from ops
        DEL HdlOp@@INDEX from ops
        HdlOp: INDEX
            list: ops
                HdlOp: INDEX
                    list: ops
                        HdlValueId: region_perm_check
                        HdlValueId: c
                HdlValueId: r
        DEL list@@ops from AND
    DEL HdlOp@@AND from 
    DEL HdlOp@@INDEX from 
    HdlOp: INDEX
        list: ops
            HdlOp: INDEX
                list: ops
                    HdlValueId: user_access_allowed
                    HdlValueId: c
            HdlValueId: r

INS HdlIdDef@@r to body

INS HdlStmIf@@ to body

UPD HdlIdDef@@r to r
    INS HdlValueId@@int to r
    INS HdlDirection@@INTERNAL to r

UPD HdlStmIf@@ to 
    INS HdlStmBlock@@SEQ to 
    INS list@@elifs to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
        INS HdlOp@@ASSIGN to body
        UPD HdlOp@@ASSIGN to ASSIGN
            INS list@@ops to ASSIGN
            INS HdlOp@@TERNARY to ops
            UPD HdlOp@@TERNARY to TERNARY
                INS list@@ops to TERNARY
                INS HdlOp@@NEG to ops
                HdlOp: NEG
                    list: ops
                        HdlOp: INDEX
                            list: ops
                                HdlOp: INDEX
                                    list: ops
                                        HdlValueId: region_perm_check
                                        HdlValueId: c
                                HdlValueId: r

UPD HdlStmAssign@@ to 
    MOV HdlOp@@INDEX to 
    HdlOp: INDEX
        list: ops
            HdlValueId: access_fault
            HdlValueId: c
    UPD HdlOp@@TERNARY to TERNARY
        MOV HdlOp@@EQ to ops
        HdlOp: EQ
            list: ops
                HdlOp: INDEX
                    list: ops
                        HdlValueId: priv_mode_i
                        HdlValueId: c
                HdlValueId: PRIV_LVL_M
        DEL HdlOp@@OR_UNARY from ops
        HdlOp: OR_UNARY
            list: ops
                HdlOp: INDEX
                    list: ops
                        HdlValueId: machine_access_fault
                        HdlValueId: c
        DEL HdlOp@@NOR_UNARY from ops
        HdlOp: NOR_UNARY
            list: ops
                HdlOp: INDEX
                    list: ops
                        HdlValueId: user_access_allowed
                        HdlValueId: c
        DEL list@@ops from TERNARY
    DEL HdlOp@@TERNARY from 

DEL HdlStmAssign@@ from body

DEL HdlStmAssign@@ from body

DEL HdlStmAssign@@ from body


CommitId: 145269fdc88e1d545fca692fd3e3a43c99e1ac12
Replace non-unique `case` with `unique case` + `default`
--- a/rtl/ibex_tracer.sv
+++ b/rtl/ibex_tracer.sv
@@ -333,7 +341,7 @@ module ibex_tracer #(
       trace.instr      = instr_i;
 
       // use casex instead of case inside due to ModelSim bug
-      casex (instr_i)
+      unique casex (instr_i)
         // Aliases
         32'h00_00_00_13:  trace.printMnemonic("nop");
         // Regular opcodes
ParseResult:
UPD HdlStmCase@@instr_i to instr_i
    INS HdlStmCaseUniqConstrain@@UNIQUE to instr_i


CommitId: 85d0ce36cb8e7f3232e56493894db5d2e1de354e
Specify data type for all parameters in simple_system
--- a/examples/simple_system/rtl/ibex_simple_system.sv
+++ b/examples/simple_system/rtl/ibex_simple_system.sv
@@ -46,8 +46,8 @@ module ibex_simple_system (
     Timer
   } bus_device_e;
 
-  localparam NrDevices = 3;
-  localparam NrHosts = 1;
+  localparam int NrDevices = 3;
+  localparam int NrHosts = 1;
 
   // interrupts
   logic timer_irq;
ParseResult:
UPD HdlIdDef@@NrDevices to NrDevices
    INS HdlValueId@@int to NrDevices

UPD HdlIdDef@@NrHosts to NrHosts
    INS HdlValueId@@int to NrHosts


CommitId: 8613e880fcc3edd7fb9a6819edacbbb5c7cd1592
LSU cleanup, abort misaligned ops if first part fails
--- a/rtl/ibex_tracer.sv
+++ b/rtl/ibex_tracer.sv
@@ -62,7 +62,7 @@ module ibex_tracer #(
     input  logic [(RegAddrWidth-1):0] ex_reg_addr_i,
     input  logic                      ex_reg_we_i,
     input  logic [31:0]               ex_reg_wdata_i,
-    input  logic                      data_valid_lsu_i,
+    input  logic                      lsu_data_valid_i,
     input  logic                      ex_data_req_i,
     input  logic                      ex_data_gnt_i,
     input  logic                      ex_data_we_i,

ParseResult:
UPD HdlIdDef@@data_valid_lsu_i to lsu_data_valid_i


CommitId: 8613e880fcc3edd7fb9a6819edacbbb5c7cd1592
LSU cleanup, abort misaligned ops if first part fails
--- a/rtl/ibex_tracer.sv
+++ b/rtl/ibex_tracer.sv
@@ -433,7 +433,7 @@ module ibex_tracer #(
         end
         //we wait until the the data instruction ends
         do @(negedge clk_i);
-          while (!data_valid_lsu_i);
+          while (!lsu_data_valid_i);
 
         if (!mem_acc.we) begin
           //load operations
ParseResult:
UPD HdlStmWhile@@ to 
    UPD HdlOp@@NEG_LOG to NEG_LOG
        UPD HdlValueId@@data_valid_lsu_i to lsu_data_valid_i


CommitId: 708f9287e483e972efdf1aadf6f30fb95d498f5e
Declare result of signed arithmetic as signed to avoid linting error
--- a/rtl/ibex_multdiv_fast.sv
+++ b/rtl/ibex_multdiv_fast.sv
@@ -56,7 +56,8 @@ module ibex_multdiv_fast (
   } div_fsm_e;
   div_fsm_e divcurr_state_q, divcurr_state_n;
 
-  logic [34:0] mac_res_ext;
+  logic signed [34:0] mac_res_ext;
+
   logic [33:0] mac_res_q, mac_res_n, mac_res, op_reminder_n;
   logic [15:0] mult_op_a;
   logic [15:0] mult_op_b;
ParseResult:
UPD HdlIdDef@@mac_res_ext to mac_res_ext
    UPD HdlOp@@PARAMETRIZATION to PARAMETRIZATION
        INS HdlValueInt@@1 to ops


CommitId: 06cf9f1dfe0e39348fd6888416e85d552a10a41f
Prefix all modules with riscv_ to avoid future conflicts
--- a/prefetch_L0_buffer.sv
+++ b/prefetch_L0_buffer.sv
@@ -23,7 +23,7 @@
 //                                                                            //
 ////////////////////////////////////////////////////////////////////////////////
 
-module prefetch_L0_buffer
+module riscv_prefetch_L0_buffer
 #(
   parameter                                   RDATA_IN_WIDTH = 128
 )
ParseResult:
UPD HdlModuleDef@@prefetch_L0_buffer to riscv_prefetch_L0_buffer

UPD HdlModuleDec@@prefetch_L0_buffer to riscv_prefetch_L0_buffer


CommitId: 9ceeb15bc8d853bbe0f49ce735d8e2a3bbdd71bb
This fixes the instruction fetch miss performance counter
--- a/prefetch_L0_buffer.sv
+++ b/prefetch_L0_buffer.sv
@@ -65,11 +65,6 @@ module prefetch_L0_buffer
   logic               valid_previous_chunk;
   logic               clear_buffer;
 
-  logic [15:0]        L0_buffer_misaligned;
-
-
-  assign L0_buffer_misaligned[15:0] = previous_chunk;
-
 
   assign busy_o = (CS != EMPTY);
 
ParseResult:
DEL HdlIdDef@@L0_buffer_misaligned from objs
HdlIdDef: L0_buffer_misaligned
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 15
                    HdlValueInt: 0
    HdlDirection: INTERNAL

DEL HdlStmAssign@@ from objs
HdlStmAssign
    HdlValueId: previous_chunk
    HdlOp: INDEX
        list: ops
            HdlValueId: L0_buffer_misaligned
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 15
                    HdlValueInt: 0


CommitId: 088cd11593c9c3e623ec445c43dd19efcd7178a8
[dbg] Add minimal hardware breakpoint support
--- a/rtl/ibex_id_stage.sv
+++ b/rtl/ibex_id_stage.sv
@@ -109,6 +109,7 @@ module ibex_id_stage #(
     input  logic                  debug_single_step_i,
     input  logic                  debug_ebreakm_i,
     input  logic                  debug_ebreaku_i,
+    input  logic                  trigger_match_i,
 
     // Write back signal
     input  logic [31:0]           regfile_wdata_lsu_i,

ParseResult:
INS HdlIdDef@@trigger_match_i to ports
HdlIdDef: trigger_match_i
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: IN


CommitId: 44b033cf8bf858e893080fe62b452791fdd3bd4d
[rtl] Add support for instruction fetch errors
--- a/rtl/ibex_if_stage.sv
+++ b/rtl/ibex_if_stage.sv
@@ -42,6 +42,7 @@ module ibex_if_stage #(
     input  logic                  instr_gnt_i,
     input  logic                  instr_rvalid_i,
     input  logic [31:0]           instr_rdata_i,
+    input  logic                  instr_err_i,
 
     // output of ID stage
     output logic                  instr_valid_id_o,         // instr in IF-ID is valid

ParseResult:
INS HdlIdDef@@instr_err_i to ports
HdlIdDef: instr_err_i
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: IN


CommitId: 44b033cf8bf858e893080fe62b452791fdd3bd4d
[rtl] Add support for instruction fetch errors
--- a/rtl/ibex_if_stage.sv
+++ b/rtl/ibex_if_stage.sv
@@ -52,6 +53,7 @@ module ibex_if_stage #(
                                                             // instr_is_compressed_id_o = 1'b1
     output logic                  instr_is_compressed_id_o, // compressed decoder thinks this
                                                             // is a compressed instr
+    output logic                  instr_fetch_err_o,        // bus error on fetch
     output logic                  illegal_c_insn_id_o,      // compressed decoder thinks this
                                                             // is an invalid instr
     output logic [31:0]           pc_if_o,

ParseResult:
INS HdlIdDef@@instr_fetch_err_o to ports
HdlIdDef: instr_fetch_err_o
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: OUT


CommitId: 44b033cf8bf858e893080fe62b452791fdd3bd4d
[rtl] Add support for instruction fetch errors
--- a/rtl/ibex_if_stage.sv
+++ b/rtl/ibex_if_stage.sv
@@ -97,6 +99,7 @@ module ibex_if_stage #(
   logic              fetch_ready;
   logic       [31:0] fetch_rdata;
   logic       [31:0] fetch_addr;
+  logic              fetch_err;
 
   logic       [31:0] exc_pc;
 

ParseResult:
INS HdlIdDef@@fetch_err to objs
HdlIdDef: fetch_err
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL


CommitId: 44b033cf8bf858e893080fe62b452791fdd3bd4d
[rtl] Add support for instruction fetch errors
--- a/rtl/ibex_if_stage.sv
+++ b/rtl/ibex_if_stage.sv
@@ -241,6 +246,7 @@ module ibex_if_stage #(
       instr_new_id_o             <= 1'b0;
       instr_valid_id_o           <= 1'b0;
       instr_rdata_id_o           <= '0;
+      instr_fetch_err_o          <= '0;
       instr_rdata_c_id_o         <= '0;
       instr_is_compressed_id_o   <= 1'b0;
       illegal_c_insn_id_o        <= 1'b0;

ParseResult:
INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: instr_fetch_err_o


CommitId: 44b033cf8bf858e893080fe62b452791fdd3bd4d
[rtl] Add support for instruction fetch errors
--- a/rtl/ibex_if_stage.sv
+++ b/rtl/ibex_if_stage.sv
@@ -250,6 +256,7 @@ module ibex_if_stage #(
       if (if_id_pipe_reg_we) begin
         instr_valid_id_o         <= 1'b1;
         instr_rdata_id_o         <= instr_decompressed;
+        instr_fetch_err_o        <= fetch_err;
         instr_rdata_c_id_o       <= fetch_rdata[15:0];
         instr_is_compressed_id_o <= instr_is_compressed_int;
         illegal_c_insn_id_o      <= illegal_c_insn;
ParseResult:
INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueId: fetch_err
    HdlValueId: instr_fetch_err_o


CommitId: f80a14b7c2ead3a6bed8699bc20890da64a919f7
disabled lsu error and fixed misaligned
--- a/exc_controller.sv
+++ b/exc_controller.sv
@@ -88,11 +88,10 @@ module littleriscv_exc_controller
 
 // request for exception/interrupt
 assign int_req_int =   ecall_insn_i
-                   | illegal_insn_i;
-
-assign ext_req_int =   lsu_load_err_i
-                       | lsu_store_err_i
-                       | irq_enable_i & irq_i;
+                   | illegal_insn_i
+                   | lsu_load_err_i
+                   | lsu_store_err_i;
+assign ext_req_int = irq_enable_i & irq_i;
 
 assign req_int = int_req_int | ext_req_int;
 
ParseResult:
UPD HdlStmAssign@@ to 
    INS HdlOp@@OR to 
    UPD HdlOp@@OR to OR
        INS list@@ops to OR
        INS HdlOp@@OR to ops
        UPD HdlOp@@OR to OR
            INS list@@ops to OR

UPD HdlStmAssign@@ to 
    UPD HdlOp@@OR to OR
        MOV HdlOp@@AND to ops
        HdlOp: AND
            list: ops
                HdlValueId: irq_enable_i
                HdlValueId: irq_i
        UPD HdlOp@@OR to OR
            MOV HdlValueId@@lsu_store_err_i to ops
            HdlValueId: lsu_store_err_i
            MOV HdlValueId@@lsu_load_err_i to ops
            HdlValueId: lsu_load_err_i
            DEL list@@ops from OR
        DEL HdlOp@@OR from ops
        DEL list@@ops from OR
    DEL HdlOp@@OR from 

UPD HdlStmAssign@@ to 
    MOV HdlOp@@OR to 
    HdlOp: OR
        list: ops
            HdlValueId: ecall_insn_i
            HdlValueId: illegal_insn_i


CommitId: b1daf9e44efdf8fc382493b63065c5816fdb7938
Update lowrisc_ip to lowRISC/opentitan@c277e3a8
--- a/vendor/lowrisc_ip/ip/prim/rtl/prim_ram_2p_async_adv.sv
+++ b/vendor/lowrisc_ip/ip/prim/rtl/prim_ram_2p_async_adv.sv
@@ -62,11 +62,6 @@ module prim_ram_2p_async_adv #(
 
   `ASSERT_INIT(CannotHaveEccAndParity_A, !(EnableParity && EnableECC))
 
-  // While we require DataBitsPerMask to be per Byte (8) at the interface in case Byte parity is
-  // enabled, we need to switch this to a per-bit mask locally such that we can individually enable
-  // the parity bits to be written alongside the data.
-  localparam int LocalDataBitsPerMask = (EnableParity) ? 1 : DataBitsPerMask;
-
   // Calculate ECC width
   localparam int ParWidth  = (EnableParity) ? Width/8 :
                              (!EnableECC)   ? 0 :

ParseResult:
UPD HdlStmAssign@@ to 
    INS HdlOp@@AND to 
    UPD HdlOp@@AND to AND
        INS list@@ops to AND
        INS HdlOp@@REPL_CONCAT to ops
        HdlOp: REPL_CONCAT
            list: ops
                HdlValueInt: 2
                HdlValueId: a_rvalid_d

UPD HdlStmAssign@@ to 
    MOV HdlValueId@@a_rerror_d to 
    HdlValueId: a_rerror_d

DEL HdlIdDef@@LocalDataBitsPerMask from objs
HdlIdDef: LocalDataBitsPerMask
    HdlValueId: int
    HdlOp: TERNARY
        list: ops
            HdlValueId: EnableParity
            HdlValueInt: 1
            HdlValueId: DataBitsPerMask
    HdlDirection: INTERNAL


CommitId: b1daf9e44efdf8fc382493b63065c5816fdb7938
Update lowrisc_ip to lowRISC/opentitan@c277e3a8
--- a/vendor/lowrisc_ip/ip/prim/rtl/prim_ram_2p_async_adv.sv
+++ b/vendor/lowrisc_ip/ip/prim/rtl/prim_ram_2p_async_adv.sv
@@ -77,6 +72,13 @@ module prim_ram_2p_async_adv #(
                              (Width <= 120) ? 8 : 8 ;
   localparam int TotalWidth = Width + ParWidth;
 
+  // If byte parity is enabled, the write enable bits are used to write memory colums
+  // with 8 + 1 = 9 bit width (data plus corresponding parity bit).
+  // If ECC is enabled, the DataBitsPerMask is ignored.
+  localparam int LocalDataBitsPerMask = (EnableParity) ? 9          :
+                                        (EnableECC)    ? TotalWidth :
+                                                         DataBitsPerMask;
+
   ////////////////////////////
   // RAM Primitive Instance //
   ////////////////////////////

ParseResult:
INS HdlIdDef@@LocalDataBitsPerMask to objs
HdlIdDef: LocalDataBitsPerMask
    HdlValueId: int
    HdlOp: TERNARY
        list: ops
            HdlValueId: EnableParity
            HdlValueInt: 9
            HdlOp: TERNARY
                list: ops
                    HdlValueId: EnableECC
                    HdlValueId: TotalWidth
                    HdlValueId: DataBitsPerMask
    HdlDirection: INTERNAL

UPD HdlStmAssign@@ to 
    INS HdlOp@@AND to 
    UPD HdlOp@@AND to AND
        INS list@@ops to AND
        INS HdlOp@@REPL_CONCAT to ops
        HdlOp: REPL_CONCAT
            list: ops
                HdlValueInt: 2
                HdlValueId: b_rvalid_d

UPD HdlStmAssign@@ to 
    MOV HdlValueId@@b_rerror_d to 
    HdlValueId: b_rerror_d


CommitId: b1daf9e44efdf8fc382493b63065c5816fdb7938
Update lowrisc_ip to lowRISC/opentitan@c277e3a8
--- a/vendor/lowrisc_ip/ip/prim/rtl/prim_ram_2p_async_adv.sv
+++ b/vendor/lowrisc_ip/ip/prim/rtl/prim_ram_2p_async_adv.sv
@@ -86,7 +88,7 @@ module prim_ram_2p_async_adv #(
   logic [Aw-1:0]           a_addr_q,   a_addr_d ;
   logic [TotalWidth-1:0]   a_wdata_q,  a_wdata_d ;
   logic [TotalWidth-1:0]   a_wmask_q,  a_wmask_d ;
-  logic                    a_rvalid_q, a_rvalid_d, a_rvalid_sram ;
+  logic                    a_rvalid_q, a_rvalid_d, a_rvalid_sram_q ;
   logic [Width-1:0]        a_rdata_q,  a_rdata_d ;
   logic [TotalWidth-1:0]   a_rdata_sram ;
   logic [1:0]              a_rerror_q, a_rerror_d ;

ParseResult:
UPD HdlIdDef@@a_rvalid_sram to a_rvalid_sram_q

UPD HdlStmAssign@@ to 
    INS HdlOp@@AND to 
    UPD HdlOp@@AND to AND
        INS list@@ops to AND
        INS HdlOp@@REPL_CONCAT to ops
        HdlOp: REPL_CONCAT
            list: ops
                HdlValueInt: 2
                HdlValueId: a_rvalid_d

UPD HdlStmAssign@@ to 
    MOV HdlValueId@@a_rerror_d to 
    HdlValueId: a_rerror_d

UPD HdlStmAssign@@ to 
    MOV HdlValueId@@b_rerror_d to 
    HdlValueId: b_rerror_d


CommitId: b1daf9e44efdf8fc382493b63065c5816fdb7938
Update lowrisc_ip to lowRISC/opentitan@c277e3a8
--- a/vendor/lowrisc_ip/ip/prim/rtl/prim_ram_2p_async_adv.sv
+++ b/vendor/lowrisc_ip/ip/prim/rtl/prim_ram_2p_async_adv.sv
@@ -96,7 +98,7 @@ module prim_ram_2p_async_adv #(
   logic [Aw-1:0]           b_addr_q,   b_addr_d ;
   logic [TotalWidth-1:0]   b_wdata_q,  b_wdata_d ;
   logic [TotalWidth-1:0]   b_wmask_q,  b_wmask_d ;
-  logic                    b_rvalid_q, b_rvalid_d, b_rvalid_sram ;
+  logic                    b_rvalid_q, b_rvalid_d, b_rvalid_sram_q ;
   logic [Width-1:0]        b_rdata_q,  b_rdata_d ;
   logic [TotalWidth-1:0]   b_rdata_sram ;
   logic [1:0]              b_rerror_q, b_rerror_d ;

ParseResult:
UPD HdlStmAssign@@ to 
    INS HdlOp@@AND to 
    UPD HdlOp@@AND to AND
        INS list@@ops to AND
        INS HdlOp@@REPL_CONCAT to ops
        HdlOp: REPL_CONCAT
            list: ops
                HdlValueInt: 2
                HdlValueId: b_rvalid_d


CommitId: b1daf9e44efdf8fc382493b63065c5816fdb7938
Update lowrisc_ip to lowRISC/opentitan@c277e3a8
--- a/vendor/lowrisc_ip/ip/prim/rtl/prim_ram_2p_async_adv.sv
+++ b/vendor/lowrisc_ip/ip/prim/rtl/prim_ram_2p_async_adv.sv
@@ -304,17 +306,20 @@ module prim_ram_2p_async_adv #(
       end else begin
         b_rvalid_q <= b_rvalid_d;
         b_rdata_q  <= b_rdata_d;
-        b_rerror_q <= b_rerror_d;
+        // tie to zero if the read data is not valid
+        b_rerror_q <= b_rerror_d & {2{b_rvalid_d}};
       end
     end
   end else begin : gen_dirconnect_output
     assign a_rvalid_q = a_rvalid_d;
     assign a_rdata_q  = a_rdata_d;
-    assign a_rerror_q = a_rerror_d;
+    // tie to zero if the read data is not valid
+    assign a_rerror_q = a_rerror_d & {2{a_rvalid_d}};
 
     assign b_rvalid_q = b_rvalid_d;
     assign b_rdata_q  = b_rdata_d;
-    assign b_rerror_q = b_rerror_d;
+    // tie to zero if the read data is not valid
+    assign b_rerror_q = b_rerror_d & {2{b_rvalid_d}};
   end
 
 endmodule : prim_ram_2p_async_adv
ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlOp: INDEX
                    list: ops
                        HdlValueId: a_wmask_d
                        HdlOp: PART_SELECT_POST
                            list: ops
                                HdlValueInt: 0
                                HdlValueId: Width
                HdlValueId: a_wmask_i
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlOp: INDEX
                    list: ops
                        HdlValueId: b_wmask_d
                        HdlOp: PART_SELECT_POST
                            list: ops
                                HdlValueInt: 0
                                HdlValueId: Width
                HdlValueId: b_wmask_i
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlOp: INDEX
                    list: ops
                        HdlValueId: b_wdata_d
                        HdlOp: PART_SELECT_POST
                            list: ops
                                HdlValueInt: 0
                                HdlValueId: Width
                HdlValueId: b_wdata_i
        UPD HdlOp@@ASSIGN to ASSIGN
            MOV HdlValueId@@a_wmask_i to ops
            HdlValueId: a_wmask_i
            UPD HdlOp@@INDEX to INDEX
                UPD HdlOp@@PART_SELECT_POST to PART_SELECT_POST
                    MOV list@@ops to PART_SELECT_POST
                    list: ops
                        HdlValueInt: 0
                        HdlValueId: Width
                    UPD HdlValueInt@@0 to 9
                    DEL HdlValueId@@Width from ops
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@INDEX to INDEX
                UPD HdlValueId@@b_wmask_d to a_wdata_d
                UPD HdlOp@@PART_SELECT_POST to PART_SELECT_POST
                    MOV list@@ops to PART_SELECT_POST
                    list: ops
                        HdlValueInt: 0
                        HdlValueId: Width
                    UPD HdlValueInt@@0 to 9
                    DEL HdlValueId@@Width from ops
            UPD HdlValueId@@b_wmask_i to a_wdata_i
            MOV HdlValueId@@b_wmask_i to ops
            HdlValueId: b_wmask_i
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@INDEX to INDEX
                UPD HdlValueId@@b_wdata_d to b_wmask_d
                UPD HdlOp@@PART_SELECT_POST to PART_SELECT_POST
                    MOV list@@ops to PART_SELECT_POST
                    list: ops
                        HdlValueInt: 0
                        HdlValueId: Width
                    UPD HdlValueInt@@0 to 9
                    DEL HdlValueId@@Width from ops
            UPD HdlValueId@@b_wdata_i to b_wmask_i
            MOV HdlValueId@@b_wdata_i to ops
            HdlValueId: b_wdata_i
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlOp: INDEX
                    list: ops
                        HdlValueId: a_wdata_d
                        HdlOp: PART_SELECT_POST
                            list: ops
                                HdlValueInt: 0
                                HdlValueId: Width
                HdlValueId: a_wdata_i
        DEL HdlOp@@AND_ASSIGN from body
        HdlOp: AND_ASSIGN
            list: ops
                HdlValueId: a_rerror_d
                HdlOp: REPL_CONCAT
                    list: ops
                        HdlValueInt: 2
                        HdlValueId: a_rvalid_sram
        DEL HdlOp@@AND_ASSIGN from body
        HdlOp: AND_ASSIGN
            list: ops
                HdlValueId: b_rerror_d
                HdlOp: REPL_CONCAT
                    list: ops
                        HdlValueInt: 2
                        HdlValueId: b_rvalid_sram

UPD HdlStmFor@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlOp: INDEX
                    list: ops
                        HdlValueId: b_wdata_d
                        HdlOp: PART_SELECT_POST
                            list: ops
                                HdlOp: MUL
                                    list: ops
                                        HdlValueId: i
                                        HdlValueInt: 9
                                HdlValueInt: 8
                HdlOp: INDEX
                    list: ops
                        HdlValueId: b_wdata_i
                        HdlOp: PART_SELECT_POST
                            list: ops
                                HdlOp: MUL
                                    list: ops
                                        HdlValueId: i
                                        HdlValueInt: 8
                                HdlValueInt: 8
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlOp@@INDEX to ops
            UPD HdlOp@@INDEX to INDEX
                INS list@@ops to INDEX
                INS HdlOp@@PART_SELECT_POST to ops
                HdlOp: PART_SELECT_POST
                    list: ops
                        HdlOp: MUL
                            list: ops
                                HdlValueId: i
                                HdlValueInt: 8
                        HdlValueInt: 8
            UPD HdlOp@@INDEX to INDEX
                UPD HdlOp@@PART_SELECT_POST to PART_SELECT_POST
                    INS list@@ops to PART_SELECT_POST
                    INS HdlOp@@MUL to ops
                    INS HdlValueInt@@8 to ops
                    UPD HdlOp@@MUL to MUL
                        INS HdlValueId@@i to ops
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlOp@@INDEX to ops
            UPD HdlOp@@INDEX to INDEX
                INS list@@ops to INDEX
                INS HdlOp@@PART_SELECT_POST to ops
                HdlOp: PART_SELECT_POST
                    list: ops
                        HdlOp: MUL
                            list: ops
                                HdlValueId: i
                                HdlValueInt: 8
                        HdlValueInt: 8
            UPD HdlOp@@INDEX to INDEX
                UPD HdlOp@@PART_SELECT_POST to PART_SELECT_POST
                    INS list@@ops to PART_SELECT_POST
                    INS HdlOp@@MUL to ops
                    INS HdlValueInt@@8 to ops
                    UPD HdlOp@@MUL to MUL
                        INS HdlValueId@@i to ops
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlOp@@INDEX to ops
            UPD HdlOp@@INDEX to INDEX
                INS list@@ops to INDEX
                INS HdlOp@@PART_SELECT_POST to ops
                HdlOp: PART_SELECT_POST
                    list: ops
                        HdlOp: MUL
                            list: ops
                                HdlValueId: i
                                HdlValueInt: 8
                        HdlValueInt: 8
            UPD HdlOp@@INDEX to INDEX
                UPD HdlOp@@PART_SELECT_POST to PART_SELECT_POST
                    INS list@@ops to PART_SELECT_POST
                    INS HdlOp@@MUL to ops
                    INS HdlValueInt@@8 to ops
                    UPD HdlOp@@MUL to MUL
                        INS HdlValueId@@i to ops
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@INDEX to INDEX
                INS HdlOp@@PART_SELECT_POST to ops
                UPD HdlOp@@PART_SELECT_POST to PART_SELECT_POST
                    INS list@@ops to PART_SELECT_POST
                    INS HdlValueInt@@8 to ops
                    UPD HdlOp@@MUL to MUL
                        INS HdlValueInt@@9 to ops
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@INDEX to INDEX
                INS HdlOp@@PART_SELECT_POST to ops
                UPD HdlOp@@PART_SELECT_POST to PART_SELECT_POST
                    INS list@@ops to PART_SELECT_POST
                    INS HdlValueInt@@8 to ops
                    UPD HdlOp@@MUL to MUL
                        INS HdlValueInt@@9 to ops
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@INDEX to INDEX
                UPD HdlOp@@ADD to ADD
                    INS list@@ops to ADD
                    INS HdlOp@@MUL to ops
                    INS HdlValueInt@@8 to ops
                    UPD HdlOp@@MUL to MUL
                        INS HdlValueInt@@9 to ops
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@INDEX to INDEX
                UPD HdlOp@@ADD to ADD
                    INS list@@ops to ADD
                    INS HdlOp@@MUL to ops
                    INS HdlValueInt@@8 to ops
                    UPD HdlOp@@MUL to MUL
                        INS HdlValueInt@@9 to ops
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@INDEX to INDEX
                UPD HdlOp@@ADD to ADD
                    INS list@@ops to ADD
                    INS HdlOp@@MUL to ops
                    INS HdlValueInt@@8 to ops
                    UPD HdlOp@@MUL to MUL
                        INS HdlValueInt@@9 to ops
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@INDEX to INDEX
                UPD HdlOp@@ADD to ADD
                    INS list@@ops to ADD
                    INS HdlOp@@MUL to ops
                    INS HdlValueInt@@8 to ops
                    UPD HdlOp@@MUL to MUL
                        INS HdlValueInt@@9 to ops
        UPD HdlOp@@OR_ASSIGN to OR_ASSIGN
            UPD HdlOp@@NEG to NEG
                UPD HdlOp@@XOR_UNARY to XOR_UNARY
                    INS HdlOp@@CONCAT to ops
                    HdlOp: CONCAT
                        list: ops
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: a_rdata_sram
                                    HdlOp: PART_SELECT_POST
                                        list: ops
                                            HdlOp: MUL
                                                list: ops
                                                    HdlValueId: i
                                                    HdlValueInt: 9
                                            HdlValueInt: 8
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: a_rdata_sram
                                    HdlOp: ADD
                                        list: ops
                                            HdlOp: MUL
                                                list: ops
                                                    HdlValueId: i
                                                    HdlValueInt: 9
                                            HdlValueInt: 8
        UPD HdlOp@@OR_ASSIGN to OR_ASSIGN
            UPD HdlOp@@NEG to NEG
                UPD HdlOp@@XOR_UNARY to XOR_UNARY
                    INS HdlOp@@CONCAT to ops
                    HdlOp: CONCAT
                        list: ops
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: b_rdata_sram
                                    HdlOp: PART_SELECT_POST
                                        list: ops
                                            HdlOp: MUL
                                                list: ops
                                                    HdlValueId: i
                                                    HdlValueInt: 9
                                            HdlValueInt: 8
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: b_rdata_sram
                                    HdlOp: ADD
                                        list: ops
                                            HdlOp: MUL
                                                list: ops
                                                    HdlValueId: i
                                                    HdlValueInt: 9
                                            HdlValueInt: 8


CommitId: 76cd32e9369e7d5f38af917062b5dc52c332e95e
Add capability to detect and react on load/store errors
--- a/rtl/ibex_load_store_unit.sv
+++ b/rtl/ibex_load_store_unit.sv
@@ -318,8 +318,10 @@ module ibex_load_store_unit (
 
   assign misaligned_st = data_misaligned_q;
 
-  assign load_err_o    = 1'b0;
-  assign store_err_o   = 1'b0;
+  // to know what kind of error to signal, we need to know the type of the transaction to which
+  // the outsanding rvalid belongs.
+  assign load_err_o    = data_err_i & data_rvalid_i & ~data_we_q;
+  assign store_err_o   = data_err_i & data_rvalid_i &  data_we_q;
 
   // FSM
   always_comb begin
ParseResult:
INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: AND
        list: ops
            HdlOp: AND
                list: ops
                    HdlValueId: data_err_i
                    HdlValueId: data_rvalid_i
            HdlOp: NEG
                list: ops
                    HdlValueId: data_we_q
    HdlValueId: load_err_o

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: AND
        list: ops
            HdlOp: AND
                list: ops
                    HdlValueId: data_err_i
                    HdlValueId: data_rvalid_i
            HdlValueId: data_we_q
    HdlValueId: store_err_o

DEL HdlStmAssign@@ from objs
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: load_err_o

DEL HdlStmAssign@@ from objs
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: store_err_o


CommitId: c7cb958f0d6f143d835e33d7efe27336cc7737c1
Update lowrisc_ip to lowRISC/opentitan@ca950b43a
--- a/vendor/lowrisc_ip/ip/prim/rtl/prim_secded_hamming_72_64_enc.sv
+++ b/vendor/lowrisc_ip/ip/prim/rtl/prim_secded_hamming_72_64_enc.sv
@@ -2,24 +2,23 @@
 // Licensed under the Apache License, Version 2.0, see LICENSE for details.
 // SPDX-License-Identifier: Apache-2.0
 //
-// SECDED Encoder generated by
-// util/design/secded_gen.py -m 8 -k 64 -s 1592631616 -c hamming
+// SECDED encoder generated by util/design/secded_gen.py
 
 module prim_secded_hamming_72_64_enc (
-  input        [63:0] in,
-  output logic [71:0] out
+  input        [63:0] data_i,
+  output logic [71:0] data_o
 );
 
   always_comb begin : p_encode
-    out = 72'(in);
-    out[64] = ^(out & 72'h00AB55555556AAAD5B);
-    out[65] = ^(out & 72'h00CD9999999B33366D);
-    out[66] = ^(out & 72'h00F1E1E1E1E3C3C78E);
-    out[67] = ^(out & 72'h0001FE01FE03FC07F0);
-    out[68] = ^(out & 72'h0001FFFE0003FFF800);
-    out[69] = ^(out & 72'h0001FFFFFFFC000000);
-    out[70] = ^(out & 72'h00FE00000000000000);
-    out[71] = ^(out & 72'h7FFFFFFFFFFFFFFFFF);
+    data_o = 72'(data_i);
+    data_o[64] = ^(data_o & 72'h00AB55555556AAAD5B);
+    data_o[65] = ^(data_o & 72'h00CD9999999B33366D);
+    data_o[66] = ^(data_o & 72'h00F1E1E1E1E3C3C78E);
+    data_o[67] = ^(data_o & 72'h0001FE01FE03FC07F0);
+    data_o[68] = ^(data_o & 72'h0001FFFE0003FFF800);
+    data_o[69] = ^(data_o & 72'h0001FFFFFFFC000000);
+    data_o[70] = ^(data_o & 72'h00FE00000000000000);
+    data_o[71] = ^(data_o & 72'h7FFFFFFFFFFFFFFFFF);
   end
 
 endmodule : prim_secded_hamming_72_64_enc
ParseResult:
UPD HdlIdDef@@in to data_i

UPD HdlIdDef@@out to data_o

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@out to data_o
            UPD HdlOp@@CALL to CALL
                UPD HdlValueId@@in to data_i
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@INDEX to INDEX
                UPD HdlValueId@@out to data_o
            UPD HdlOp@@XOR_UNARY to XOR_UNARY
                UPD HdlOp@@AND to AND
                    UPD HdlValueId@@out to data_o
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@INDEX to INDEX
                UPD HdlValueId@@out to data_o
            UPD HdlOp@@XOR_UNARY to XOR_UNARY
                UPD HdlOp@@AND to AND
                    UPD HdlValueId@@out to data_o
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@INDEX to INDEX
                UPD HdlValueId@@out to data_o
            UPD HdlOp@@XOR_UNARY to XOR_UNARY
                UPD HdlOp@@AND to AND
                    UPD HdlValueId@@out to data_o
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@INDEX to INDEX
                UPD HdlValueId@@out to data_o
            UPD HdlOp@@XOR_UNARY to XOR_UNARY
                UPD HdlOp@@AND to AND
                    UPD HdlValueId@@out to data_o
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@INDEX to INDEX
                UPD HdlValueId@@out to data_o
            UPD HdlOp@@XOR_UNARY to XOR_UNARY
                UPD HdlOp@@AND to AND
                    UPD HdlValueId@@out to data_o
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@INDEX to INDEX
                UPD HdlValueId@@out to data_o
            UPD HdlOp@@XOR_UNARY to XOR_UNARY
                UPD HdlOp@@AND to AND
                    UPD HdlValueId@@out to data_o
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@INDEX to INDEX
                UPD HdlValueId@@out to data_o
            UPD HdlOp@@XOR_UNARY to XOR_UNARY
                UPD HdlOp@@AND to AND
                    UPD HdlValueId@@out to data_o
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@INDEX to INDEX
                UPD HdlValueId@@out to data_o
            UPD HdlOp@@XOR_UNARY to XOR_UNARY
                UPD HdlOp@@AND to AND
                    UPD HdlValueId@@out to data_o


CommitId: 0afd000a09681e50edb94b9417349140538b8947
[bitmanip] Add ZBE Instruction Group
--- a/rtl/ibex_alu.sv
+++ b/rtl/ibex_alu.sv
@@ -167,9 +224,13 @@ module ibex_alu #(
   logic [5:0] shift_amt;
   logic [5:0] shift_amt_compl; // complementary shift amount (32 - shift_amt)
 
+  logic [31:0] shift_result;
+  logic [32:0] shift_result_ext;
+  logic [31:0] shift_result_rev;
+
   // bit shift_amt[5]: word swap bit: only considered for FSL/FSR.
   // if set, reverse operations in first and second cycle.
-  assign shift_amt[5] = operand_b_i[5] && shift_funnel;
+  assign shift_amt[5] = operand_b_i[5] & shift_funnel;
   assign shift_amt_compl = 32 - operand_b_i[4:0];
 
   assign shift_amt[4:0] = instr_first_cycle_i ?

ParseResult:
INS HdlIdDef@@shift_result_rev to objs
HdlIdDef: shift_result_rev
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 31
                    HdlValueInt: 0
    HdlDirection: INTERNAL

UPD HdlStmAssign@@ to 
    UPD HdlOp@@AND_LOG to AND


CommitId: 0afd000a09681e50edb94b9417349140538b8947
[bitmanip] Add ZBE Instruction Group
--- a/rtl/ibex_alu.sv
+++ b/rtl/ibex_alu.sv
@@ -177,9 +238,8 @@ module ibex_alu #(
       (operand_b_i[5] && shift_funnel ? operand_b_i[4:0] : shift_amt_compl[4:0]);
 
   // single-bit mode: shift
-  assign shift_sbmode = RV32B ? (operator_i == ALU_SBSET) || (operator_i == ALU_SBCLR) ||
-                                    (operator_i == ALU_SBINV) :
-                                1'b0;
+  assign shift_sbmode = RV32B ?
+      (operator_i == ALU_SBSET) | (operator_i == ALU_SBCLR) | (operator_i == ALU_SBINV) : 1'b0;
 
   // left shift if this is:
   // * a standard left shift (slo, sll)

ParseResult:
UPD HdlStmAssign@@ to 
    UPD HdlOp@@TERNARY to TERNARY
        UPD HdlOp@@OR_LOG to OR
        UPD HdlOp@@OR_LOG to OR_LOG
            UPD HdlOp@@OR_LOG to OR


CommitId: 0afd000a09681e50edb94b9417349140538b8947
[bitmanip] Add ZBE Instruction Group
--- a/rtl/ibex_alu.sv
+++ b/rtl/ibex_alu.sv
@@ -193,11 +253,11 @@ module ibex_alu #(
       ALU_SLL: shift_left = 1'b1;
       ALU_SLO: shift_left = RV32B ? 1'b1 : 1'b0;
       ALU_ROL: shift_left = RV32B ? instr_first_cycle_i : 0;
-      ALU_ROR: shift_left = RV32B ? !instr_first_cycle_i : 0;
+      ALU_ROR: shift_left = RV32B ? ~instr_first_cycle_i : 0;
       ALU_FSL: shift_left =
-          RV32B ? (shift_amt[5] ? !instr_first_cycle_i : instr_first_cycle_i) : 1'b0;
+          RV32B ? (shift_amt[5] ? ~instr_first_cycle_i : instr_first_cycle_i) : 1'b0;
       ALU_FSR: shift_left =
-          RV32B ? (shift_amt[5] ? instr_first_cycle_i : !instr_first_cycle_i) : 1'b0;
+          RV32B ? (shift_amt[5] ? instr_first_cycle_i : ~instr_first_cycle_i) : 1'b0;
       default: shift_left = 1'b0;
     endcase
     if (shift_sbmode) begin

ParseResult:
UPD HdlStmCase@@operator_i to operator_i
    UPD HdlOp@@ASSIGN to ASSIGN
        UPD HdlOp@@TERNARY to TERNARY
            UPD HdlOp@@NEG_LOG to NEG
    UPD HdlOp@@ASSIGN to ASSIGN
        UPD HdlOp@@TERNARY to TERNARY
            UPD HdlOp@@TERNARY to TERNARY
                UPD HdlOp@@NEG_LOG to NEG
    UPD HdlOp@@ASSIGN to ASSIGN
        UPD HdlOp@@TERNARY to TERNARY
            UPD HdlOp@@TERNARY to TERNARY
                UPD HdlOp@@NEG_LOG to NEG


CommitId: 0afd000a09681e50edb94b9417349140538b8947
[bitmanip] Add ZBE Instruction Group
--- a/rtl/ibex_alu.sv
+++ b/rtl/ibex_alu.sv
@@ -206,19 +266,10 @@ module ibex_alu #(
   end
 
   assign shift_arith      = (operator_i == ALU_SRA);
-  assign shift_ones       = RV32B ? (operator_i == ALU_SLO) || (operator_i == ALU_SRO) : 1'b0;
-  assign shift_funnel     = RV32B ? (operator_i == ALU_FSL) || (operator_i == ALU_FSR) : 1'b0;
-
-  logic [31:0] shift_result;
-  logic [32:0] shift_result_ext;
-
-  // grev / gorc instructions
-  logic grev_op;
-  assign grev_op = RV32B ? (operator_i == ALU_GREV) : 1'b0;
-  logic gorc_op;
-  assign gorc_op = RV32B ? (operator_i == ALU_GORC) : 1'b0;
+  assign shift_ones       = RV32B ? (operator_i == ALU_SLO) | (operator_i == ALU_SRO) : 1'b0;
+  assign shift_funnel     = RV32B ? (operator_i == ALU_FSL) | (operator_i == ALU_FSR) : 1'b0;
 
-  // combined shifter/ reverser structure.
+  // shifter structure.
   always_comb begin
     shift_result = operand_a_i;
 

ParseResult:
MOV HdlIdDef@@shift_result to objs
HdlIdDef: shift_result
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 31
                    HdlValueInt: 0
    HdlDirection: INTERNAL

MOV HdlIdDef@@shift_result_ext to objs
HdlIdDef: shift_result_ext
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 32
                    HdlValueInt: 0
    HdlDirection: INTERNAL

INS HdlStmProcess@@ to objs

UPD HdlStmAssign@@ to 
    UPD HdlOp@@TERNARY to TERNARY
        UPD HdlOp@@OR_LOG to OR

UPD HdlStmAssign@@ to 
    UPD HdlOp@@TERNARY to TERNARY
        UPD HdlOp@@OR_LOG to OR

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: shift_result
                HdlValueId: operand_a_i
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: shift_result_ext
                HdlOp: SRA
                    list: ops
                        HdlOp: CALL
                            list: ops
                                HdlValueId: $signed
                                HdlOp: CONCAT
                                    list: ops
                                        HdlOp: OR_LOG
                                            list: ops
                                                HdlValueId: shift_ones
                                                HdlOp: AND_LOG
                                                    list: ops
                                                        HdlValueId: shift_arith
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlValueId: shift_result
                                                                HdlValueInt: 31
                                        HdlValueId: shift_result
                        HdlOp: INDEX
                            list: ops
                                HdlValueId: shift_amt
                                HdlOp: DOWNTO
                                    list: ops
                                        HdlValueInt: 4
                                        HdlValueInt: 0
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: shift_result
                HdlOp: INDEX
                    list: ops
                        HdlValueId: shift_result_ext
                        HdlOp: DOWNTO
                            list: ops
                                HdlValueInt: 31
                                HdlValueInt: 0
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@SRA to SRA
                UPD HdlOp@@CALL to CALL
                    UPD HdlOp@@CONCAT to CONCAT
                        UPD HdlOp@@OR_LOG to OR
                        UPD HdlOp@@OR_LOG to OR_LOG
                            UPD HdlOp@@AND_LOG to AND
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL HdlStmProcessTriggerConstrain@@COMB from 

MOV HdlIdDef@@grev_op to objs
HdlIdDef: grev_op
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

MOV HdlIdDef@@gorc_op to objs
HdlIdDef: gorc_op
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

MOV HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: TERNARY
        list: ops
            HdlValueId: RV32B
            HdlOp: EQ
                list: ops
                    HdlValueId: operator_i
                    HdlValueId: ALU_GREV
            HdlValueInt: 0
    HdlValueId: grev_op

MOV HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: TERNARY
        list: ops
            HdlValueId: RV32B
            HdlOp: EQ
                list: ops
                    HdlValueId: operator_i
                    HdlValueId: ALU_GORC
            HdlValueInt: 0
    HdlValueId: gorc_op

DEL HdlStmProcess@@ from objs


CommitId: 0afd000a09681e50edb94b9417349140538b8947
[bitmanip] Add ZBE Instruction Group
--- a/rtl/ibex_alu.sv
+++ b/rtl/ibex_alu.sv
@@ -356,6 +308,7 @@ module ibex_alu #(
   logic [31:0] bwlogic_or_result;
   logic [31:0] bwlogic_and_result;
   logic [31:0] bwlogic_xor_result;
+  logic [31:0] bwlogic_result;
 
   logic bwlogic_op_b_negate;
 

ParseResult:
UPD HdlStmIf@@ to 
    INS HdlValueId@@RV32B to 
    INS list@@elifs to 


CommitId: 0afd000a09681e50edb94b9417349140538b8947
[bitmanip] Add ZBE Instruction Group
--- a/rtl/ibex_alu.sv
+++ b/rtl/ibex_alu.sv
@@ -365,7 +318,7 @@ module ibex_alu #(
       ALU_XNOR,
       ALU_ORN,
       ALU_ANDN: bwlogic_op_b_negate = RV32B ? 1'b1 : 1'b0;
-      ALU_CMIX: bwlogic_op_b_negate = RV32B ? !instr_first_cycle_i : 1'b0;
+      ALU_CMIX: bwlogic_op_b_negate = RV32B ? ~instr_first_cycle_i : 1'b0;
       default:  bwlogic_op_b_negate = 1'b0;
     endcase
   end

ParseResult:
UPD HdlStmIf@@ to 
    INS HdlValueId@@RV32B to 
    INS list@@elifs to 

UPD HdlStmCase@@operator_i to operator_i
    UPD HdlOp@@ASSIGN to ASSIGN
        UPD HdlOp@@TERNARY to TERNARY
            UPD HdlOp@@NEG_LOG to NEG


CommitId: 0afd000a09681e50edb94b9417349140538b8947
[bitmanip] Add ZBE Instruction Group
--- a/rtl/ibex_alu.sv
+++ b/rtl/ibex_alu.sv
@@ -376,8 +329,8 @@ module ibex_alu #(
   assign bwlogic_and_result = operand_a_i & bwlogic_operand_b;
   assign bwlogic_xor_result = operand_a_i ^ bwlogic_operand_b;
 
-  assign bwlogic_or  = (operator_i == ALU_OR) || (operator_i == ALU_ORN);
-  assign bwlogic_and = (operator_i == ALU_AND) || (operator_i == ALU_ANDN);
+  assign bwlogic_or  = (operator_i == ALU_OR)  | (operator_i == ALU_ORN);
+  assign bwlogic_and = (operator_i == ALU_AND) | (operator_i == ALU_ANDN);
 
   always_comb begin
     unique case (1'b1)

ParseResult:
UPD HdlStmAssign@@ to 
    UPD HdlOp@@OR_LOG to OR

UPD HdlStmAssign@@ to 
    UPD HdlOp@@OR_LOG to OR

UPD HdlStmIf@@ to 
    INS HdlValueId@@RV32B to 
    INS list@@elifs to 


CommitId: 0afd000a09681e50edb94b9417349140538b8947
[bitmanip] Add ZBE Instruction Group
--- a/rtl/ibex_alu.sv
+++ b/rtl/ibex_alu.sv
@@ -429,8 +707,8 @@ module ibex_alu #(
 
       if (shuffle_flip) begin
         shuffle_result = (shuffle_result & 32'h8822_4411) |
-            ((shuffle_result << 6) &  FLIP_MASK_L[0])  | ((shuffle_result >> 6) & FLIP_MASK_R[0]) |
-            ((shuffle_result << 9) &  FLIP_MASK_L[1])  | ((shuffle_result >> 9) & FLIP_MASK_R[1]) |
+            ((shuffle_result << 6)  & FLIP_MASK_L[0]) | ((shuffle_result >> 6)  & FLIP_MASK_R[0]) |
+            ((shuffle_result << 9)  & FLIP_MASK_L[1]) | ((shuffle_result >> 9)  & FLIP_MASK_R[1]) |
             ((shuffle_result << 15) & FLIP_MASK_L[2]) | ((shuffle_result >> 15) & FLIP_MASK_R[2]) |
             ((shuffle_result << 21) & FLIP_MASK_L[3]) | ((shuffle_result >> 21) & FLIP_MASK_R[3]);
       end

ParseResult:
UPD HdlStmIf@@ to 
    INS HdlValueId@@RV32B to 
    INS list@@elifs to 

UPD HdlStmIf@@ to 
    DEL HdlValueId@@RV32B from 
    DEL list@@elifs from 


CommitId: 0afd000a09681e50edb94b9417349140538b8947
[bitmanip] Add ZBE Instruction Group
--- a/rtl/ibex_alu.sv
+++ b/rtl/ibex_alu.sv
@@ -458,8 +736,8 @@ module ibex_alu #(
 
       if (shuffle_flip) begin
         shuffle_result = (shuffle_result & 32'h8822_4411) |
-            ((shuffle_result << 6) &  FLIP_MASK_L[0])  | ((shuffle_result >> 6) & FLIP_MASK_R[0]) |
-            ((shuffle_result << 9) &  FLIP_MASK_L[1])  | ((shuffle_result >> 9) & FLIP_MASK_R[1]) |
+            ((shuffle_result << 6)  & FLIP_MASK_L[0]) | ((shuffle_result >> 6) & FLIP_MASK_R[0])  |
+            ((shuffle_result << 9)  & FLIP_MASK_L[1]) | ((shuffle_result >> 9) & FLIP_MASK_R[1])  |
             ((shuffle_result << 15) & FLIP_MASK_L[2]) | ((shuffle_result >> 15) & FLIP_MASK_R[2]) |
             ((shuffle_result << 21) & FLIP_MASK_L[3]) | ((shuffle_result >> 21) & FLIP_MASK_R[3]);
       end

ParseResult:
UPD HdlStmIf@@ to 
    INS HdlValueId@@RV32B to 
    INS list@@elifs to 

UPD HdlStmProcess@@ to 
    INS HdlStmBlock@@SEQ to 
    INS HdlStmProcessTriggerConstrain@@COMB to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: bitcnt_partial
                list
                    HdlOp: MAP_ASSOCIATION
                        list: ops
                            HdlValueId: default
                            HdlValueInt: 0
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlOp: INDEX
                    list: ops
                        HdlValueId: bitcnt_partial
                        HdlValueInt: 31
                HdlOp: ADD
                    list: ops
                        HdlOp: INDEX
                            list: ops
                                HdlValueId: bitcnt_partial
                                HdlValueInt: 15
                        HdlOp: INDEX
                            list: ops
                                HdlValueId: bitcnt_partial
                                HdlValueInt: 31
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlOp: INDEX
                    list: ops
                        HdlValueId: bitcnt_partial
                        HdlValueInt: 23
                HdlOp: ADD
                    list: ops
                        HdlOp: INDEX
                            list: ops
                                HdlValueId: bitcnt_partial
                                HdlValueInt: 15
                        HdlOp: INDEX
                            list: ops
                                HdlValueId: bitcnt_partial
                                HdlValueInt: 23
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlOp: INDEX
                    list: ops
                        HdlValueId: bitcnt_partial
                        HdlValueInt: 0
                HdlOp: CONCAT
                    list: ops
                        HdlValueInt: 0
                        HdlOp: INDEX
                            list: ops
                                HdlValueId: bitcnt_bits
                                HdlValueInt: 0

UPD HdlStmIf@@ to 
    DEL HdlValueId@@RV32B from 
    DEL list@@elifs from 


CommitId: 0afd000a09681e50edb94b9417349140538b8947
[bitmanip] Add ZBE Instruction Group
--- a/rtl/ibex_alu.sv
+++ b/rtl/ibex_alu.sv
@@ -568,8 +821,8 @@ module ibex_alu #(
 
     logic packu;
     logic packh;
-    assign packu = (operator_i == ALU_PACKU);
-    assign packh = (operator_i == ALU_PACKH);
+    assign packu = operator_i == ALU_PACKU;
+    assign packh = operator_i == ALU_PACKH;
 
     always_comb begin
       unique case (1'b1)

ParseResult:
UPD HdlStmIf@@ to 
    INS HdlValueId@@RV32B to 
    INS list@@elifs to 

UPD HdlStmIf@@ to 
    DEL HdlValueId@@RV32B from 
    DEL list@@elifs from 


CommitId: 0afd000a09681e50edb94b9417349140538b8947
[bitmanip] Add ZBE Instruction Group
--- a/rtl/ibex_alu.sv
+++ b/rtl/ibex_alu.sv
@@ -580,15 +833,17 @@ module ibex_alu #(
     end
   end else begin : g_no_alu_rvb
     // RV32B result signals
-    assign minmax_result     = '0;
-    assign bitcnt_result     = '0;
-    assign pack_result       = '0;
-    assign multicycle_result = '0;
-    assign singlebit_result  = '0;
-    assign shuffle_result    = '0;
+    assign minmax_result       = '0;
+    assign bitcnt_result       = '0;
+    assign pack_result         = '0;
+    assign multicycle_result   = '0;
+    assign singlebit_result    = '0;
+    assign shuffle_result      = '0;
+    assign butterfly_result    = '0;
+    assign invbutterfly_result = '0;
     // RV32B support signals
-    assign imd_val_d_o  = '0;
-    assign imd_val_we_o = '0;
+    assign imd_val_d_o         = '0;
+    assign imd_val_we_o        = '0;
   end
 
   ////////////////

ParseResult:
UPD HdlStmIf@@ to 
    INS HdlValueId@@RV32B to 
    INS list@@elifs to 

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: butterfly_result

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: invbutterfly_result

UPD HdlStmIf@@ to 
    DEL HdlValueId@@RV32B from 
    DEL list@@elifs from 


CommitId: 0afd000a09681e50edb94b9417349140538b8947
[bitmanip] Add ZBE Instruction Group
--- a/rtl/ibex_alu.sv
+++ b/rtl/ibex_alu.sv
@@ -611,8 +866,7 @@ module ibex_alu #(
       ALU_SLL,  ALU_SRL,
       ALU_SRA,
       // RV32B Ops
-      ALU_SLO,  ALU_SRO,
-      ALU_GREV, ALU_GORC: result_o = shift_result;
+      ALU_SLO,  ALU_SRO: result_o = shift_result;
 
       // Shuffle Operations (RV32B Ops)
       ALU_SHFL, ALU_UNSHFL: result_o = shuffle_result;

ParseResult:
UPD HdlStmIf@@ to 
    INS HdlValueId@@RV32B to 
    INS list@@elifs to 

UPD HdlStmCase@@operator_i to operator_i
    DEL tuple@@ from cases
    tuple
        HdlValueId: ALU_GREV
        HdlOp: ASSIGN
            list: ops
                HdlValueId: result_o
                HdlValueId: shift_result
    DEL tuple@@ from cases
    tuple
        HdlValueId: ALU_GORC
        HdlOp: ASSIGN
            list: ops
                HdlValueId: result_o
                HdlValueId: shift_result


CommitId: 0afd000a09681e50edb94b9417349140538b8947
[bitmanip] Add ZBE Instruction Group
--- a/rtl/ibex_alu.sv
+++ b/rtl/ibex_alu.sv
@@ -644,6 +898,13 @@ module ibex_alu #(
       ALU_SBSET, ALU_SBCLR,
       ALU_SBINV, ALU_SBEXT: result_o = singlebit_result;
 
+      // Bit Extract / Deposit (RV32B Ops)
+      ALU_BDEP:  result_o = butterfly_result;
+      ALU_BEXT:  result_o = invbutterfly_result;
+
+      // General Reverse / Or-combine (RV32B Ops)
+      ALU_GREV, ALU_GORC: result_o = butterfly_result;
+
       default: ;
     endcase
   end
ParseResult:
UPD HdlStmIf@@ to 
    INS HdlValueId@@RV32B to 
    INS list@@elifs to 

UPD HdlStmAssign@@ to 
    INS HdlOp@@TERNARY to 
    INS HdlOp@@INDEX to 
    HdlOp: INDEX
        list: ops
            HdlValueId: butterfly_zbp_mask_not
            HdlValueInt: 0
    UPD HdlOp@@TERNARY to TERNARY
        INS list@@ops to TERNARY
        INS HdlValueInt@@ffffffff to ops
        INS HdlValueInt@@00000000 to ops
        UPD HdlOp@@OR_LOG to OR_LOG
            INS HdlOp@@NEG_LOG to ops
            UPD HdlOp@@NEG_LOG to NEG_LOG
                INS list@@ops to NEG_LOG
                INS HdlOp@@INDEX to ops
                UPD HdlOp@@INDEX to INDEX
                    INS list@@ops to INDEX
                    INS HdlValueInt@@4 to ops
            UPD HdlOp@@AND_LOG to AND_LOG
                INS HdlValueId@@gorc_op to ops

UPD HdlStmCase@@operator_i to operator_i
    DEL tuple@@ from cases
    tuple
        HdlValueId: ALU_GREV
        HdlOp: ASSIGN
            list: ops
                HdlValueId: result_o
                HdlValueId: shift_result
    DEL tuple@@ from cases
    tuple
        HdlValueId: ALU_GORC
        HdlOp: ASSIGN
            list: ops
                HdlValueId: result_o
                HdlValueId: shift_result


CommitId: b94961402cab9729cac4b0692a0710a840b108f0
[RTL] Fix ebreak behaviour in U-mode
--- a/rtl/ibex_id_stage.sv
+++ b/rtl/ibex_id_stage.sv
@@ -108,6 +108,7 @@ module ibex_id_stage #(
     input  logic                  debug_req_i,
     input  logic                  debug_single_step_i,
     input  logic                  debug_ebreakm_i,
+    input  logic                  debug_ebreaku_i,
 
     // Write back signal
     input  logic [31:0]           regfile_wdata_lsu_i,

ParseResult:
INS HdlIdDef@@debug_ebreaku_i to ports
HdlIdDef: debug_ebreaku_i
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: IN


CommitId: cc90e854717023d3dd6bf126ba5e1cd7a9ea5db4
Fix RVC handling in prefetch_L0_buffer
--- a/prefetch_L0_buffer.sv
+++ b/prefetch_L0_buffer.sv
@@ -55,16 +55,17 @@ module prefetch_L0_buffer
 );
 
   enum logic [2:0] {EMPTY, VALID_L0, WAIT_GNT, WAIT_RVALID, WAIT_ABORTED } CS, NS;
-  logic [31:0]        current_address;
+  logic [31:0]        current_address, last_address;
   logic [1:0]         pointer_cs, pointer_ns;
   logic               update_current_address;
 
   logic [3:0][31:0]   L0_buffer;
-  logic               valid_L0_buffer;
-  logic [15:0]        previous_chunk;
-  logic               valid_previous_chunk;
+  logic [31:0]        previous_chunk;
   logic               clear_buffer;
 
+  logic               ready_L0;
+  logic               is_prefetch_q, is_prefetch_n;
+
 
   assign busy_o = (CS != EMPTY);
 

ParseResult:
MOV HdlModuleDef@@prefetch_L0_buffer to objs
HdlModuleDef: prefetch_L0_buffer
    HdlModuleDec: prefetch_L0_buffer
        list: params
            HdlIdDef: RDATA_IN_WIDTH
                HdlValueInt: 128
                HdlDirection: INTERNAL
        list: ports
            HdlIdDef: clk
                HdlOp: PARAMETRIZATION
                    list: ops
                        HdlValueId: logic
                HdlDirection: IN
            HdlIdDef: rst_n
                HdlOp: PARAMETRIZATION
                    list: ops
                        HdlValueId: logic
                HdlDirection: IN
            HdlIdDef: req_i
                HdlOp: PARAMETRIZATION
                    list: ops
                        HdlValueId: logic
                HdlDirection: IN
            HdlIdDef: branch_i
                HdlOp: PARAMETRIZATION
                    list: ops
                        HdlValueId: logic
                HdlDirection: IN
            HdlIdDef: ready_i
                HdlOp: PARAMETRIZATION
                    list: ops
                        HdlValueId: logic
                HdlDirection: IN
            HdlIdDef: addr_i
                HdlOp: PARAMETRIZATION
                    list: ops
                        HdlValueId: logic
                        HdlOp: DOWNTO
                            list: ops
                                HdlValueInt: 31
                                HdlValueInt: 0
                HdlDirection: IN
            HdlIdDef: valid_o
                HdlOp: PARAMETRIZATION
                    list: ops
                        HdlValueId: logic
                HdlDirection: OUT
            HdlIdDef: rdata_o
                HdlOp: PARAMETRIZATION
                    list: ops
                        HdlValueId: logic
                        HdlOp: DOWNTO
                            list: ops
                                HdlValueInt: 31
                                HdlValueInt: 0
                HdlDirection: OUT
            HdlIdDef: addr_o
                HdlOp: PARAMETRIZATION
                    list: ops
                        HdlValueId: logic
                        HdlOp: DOWNTO
                            list: ops
                                HdlValueInt: 31
                                HdlValueInt: 0
                HdlDirection: OUT
            HdlIdDef: unaligned_valid_o
                HdlOp: PARAMETRIZATION
                    list: ops
                        HdlValueId: logic
                HdlDirection: OUT
            HdlIdDef: unaligned_rdata_o
                HdlOp: PARAMETRIZATION
                    list: ops
                        HdlValueId: logic
                        HdlOp: DOWNTO
                            list: ops
                                HdlValueInt: 31
                                HdlValueInt: 0
                HdlDirection: OUT
            HdlIdDef: instr_req_o
                HdlOp: PARAMETRIZATION
                    list: ops
                        HdlValueId: logic
                HdlDirection: OUT
            HdlIdDef: instr_addr_o
                HdlOp: PARAMETRIZATION
                    list: ops
                        HdlValueId: logic
                        HdlOp: DOWNTO
                            list: ops
                                HdlValueInt: 31
                                HdlValueInt: 0
                HdlDirection: OUT
            HdlIdDef: instr_gnt_i
                HdlOp: PARAMETRIZATION
                    list: ops
                        HdlValueId: logic
                HdlDirection: IN
            HdlIdDef: instr_rvalid_i
                HdlOp: PARAMETRIZATION
                    list: ops
                        HdlValueId: logic
                HdlDirection: IN
            HdlIdDef: instr_rdata_i
                HdlOp: INDEX
                    list: ops
                        HdlOp: PARAMETRIZATION
                            list: ops
                                HdlValueId: logic
                                HdlOp: DOWNTO
                                    list: ops
                                        HdlOp: SUB
                                            list: ops
                                                HdlOp: DIV
                                                    list: ops
                                                        HdlValueId: RDATA_IN_WIDTH
                                                        HdlValueInt: 32
                                                HdlValueInt: 1
                                        HdlValueInt: 0
                        HdlOp: DOWNTO
                            list: ops
                                HdlValueInt: 31
                                HdlValueInt: 0
                HdlDirection: IN
            HdlIdDef: busy_o
                HdlOp: PARAMETRIZATION
                    list: ops
                        HdlValueId: logic
                HdlDirection: OUT
        list: objs
    list: objs
        HdlIdDef: CS
            HdlExprNotImplemented: type
            HdlDirection: INTERNAL
        HdlIdDef: NS
            HdlExprNotImplemented: type
            HdlDirection: INTERNAL
        HdlIdDef: current_address
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: logic
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 31
                            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlIdDef: pointer_cs
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: logic
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 1
                            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlIdDef: pointer_ns
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: logic
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 1
                            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlIdDef: update_current_address
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: logic
            HdlDirection: INTERNAL
        HdlIdDef: L0_buffer
            HdlOp: INDEX
                list: ops
                    HdlOp: PARAMETRIZATION
                        list: ops
                            HdlValueId: logic
                            HdlOp: DOWNTO
                                list: ops
                                    HdlValueInt: 3
                                    HdlValueInt: 0
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 31
                            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlIdDef: valid_L0_buffer
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: logic
            HdlDirection: INTERNAL
        HdlIdDef: previous_chunk
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: logic
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 15
                            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlIdDef: valid_previous_chunk
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: logic
            HdlDirection: INTERNAL
        HdlIdDef: clear_buffer
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: logic
            HdlDirection: INTERNAL
        HdlStmAssign
            HdlOp: NE
                list: ops
                    HdlValueId: CS
                    HdlValueId: EMPTY
            HdlValueId: busy_o
        HdlStmProcess
            list: sensitivity
                HdlOp: RISING
                    list: ops
                        HdlValueId: clk
                HdlOp: FALLING
                    list: ops
                        HdlValueId: rst_n
            HdlStmBlock: SEQ
                list: body
                    HdlStmIf
                        HdlOp: NEG
                            list: ops
                                HdlValueId: rst_n
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmAssign
                                    HdlValueId: EMPTY
                                    HdlValueId: CS
                                HdlStmAssign
                                    HdlValueInt: 0
                                    HdlValueId: current_address
                                HdlStmAssign
                                    HdlValueInt: 0
                                    HdlValueId: pointer_cs
                        list: elifs
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmAssign
                                    HdlValueId: NS
                                    HdlValueId: CS
                                HdlStmIf
                                    HdlValueId: branch_i
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmAssign
                                                HdlOp: CONCAT
                                                    list: ops
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlValueId: addr_i
                                                                HdlOp: DOWNTO
                                                                    list: ops
                                                                        HdlValueInt: 31
                                                                        HdlValueInt: 4
                                                        HdlValueInt: 0000
                                                HdlValueId: current_address
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: addr_i
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 3
                                                                HdlValueInt: 2
                                                HdlValueId: pointer_cs
                                    list: elifs
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmIf
                                                HdlValueId: update_current_address
                                                HdlStmAssign: if_true
                                                    HdlOp: ADD
                                                        list: ops
                                                            HdlValueId: current_address
                                                            HdlValueInt: 10
                                                    HdlValueId: current_address
                                                list: elifs
                                            HdlStmAssign
                                                HdlValueId: pointer_ns
                                                HdlValueId: pointer_cs
            HdlStmProcessTriggerConstrain: FF
        HdlStmProcess
            HdlStmBlock: SEQ
                list: body
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: valid_o
                            HdlValueInt: 0
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: addr_o
                            HdlOp: ADD
                                list: ops
                                    HdlValueId: current_address
                                    HdlOp: SLL
                                        list: ops
                                            HdlValueId: pointer_cs
                                            HdlValueInt: 2
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: pointer_ns
                            HdlValueId: pointer_cs
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: instr_req_o
                            HdlValueInt: 0
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: instr_addr_o
                            HdlOp: TERNARY
                                list: ops
                                    HdlValueId: branch_i
                                    HdlValueId: addr_i
                                    HdlOp: ADD
                                        list: ops
                                            HdlValueId: current_address
                                            HdlValueInt: 10
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: update_current_address
                            HdlValueInt: 0
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: rdata_o
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: instr_rdata_i
                                    HdlValueId: pointer_cs
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: clear_buffer
                            HdlValueInt: 0
                    HdlStmCase: {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops':}]} 
                        HdlStmCaseType: CASE
                        HdlOp: INDEX
                            list: ops
                                HdlValueId: addr_o
                                HdlOp: DOWNTO
                                    list: ops
                                        HdlValueInt: 3
                                        HdlValueInt: 2
                        list: cases
                            tuple
                                HdlValueInt: 00
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: unaligned_rdata_o
                                                HdlOp: CONCAT
                                                    list: ops
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlOp: INDEX
                                                                    list: ops
                                                                        HdlValueId: L0_buffer
                                                                        HdlValueInt: 0
                                                                HdlOp: DOWNTO
                                                                    list: ops
                                                                        HdlValueInt: 15
                                                                        HdlValueInt: 0
                                                        HdlValueId: previous_chunk
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: unaligned_valid_o
                                                HdlValueId: valid_previous_chunk
                            tuple
                                HdlValueInt: 01
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: unaligned_rdata_o
                                                HdlOp: CONCAT
                                                    list: ops
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlOp: INDEX
                                                                    list: ops
                                                                        HdlValueId: L0_buffer
                                                                        HdlValueInt: 1
                                                                HdlOp: DOWNTO
                                                                    list: ops
                                                                        HdlValueInt: 15
                                                                        HdlValueInt: 0
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlOp: INDEX
                                                                    list: ops
                                                                        HdlValueId: L0_buffer
                                                                        HdlValueInt: 0
                                                                HdlOp: DOWNTO
                                                                    list: ops
                                                                        HdlValueInt: 31
                                                                        HdlValueInt: 16
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: unaligned_valid_o
                                                HdlValueId: valid_o
                            tuple
                                HdlValueInt: 10
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: unaligned_rdata_o
                                                HdlOp: CONCAT
                                                    list: ops
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlOp: INDEX
                                                                    list: ops
                                                                        HdlValueId: L0_buffer
                                                                        HdlValueInt: 2
                                                                HdlOp: DOWNTO
                                                                    list: ops
                                                                        HdlValueInt: 15
                                                                        HdlValueInt: 0
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlOp: INDEX
                                                                    list: ops
                                                                        HdlValueId: L0_buffer
                                                                        HdlValueInt: 1
                                                                HdlOp: DOWNTO
                                                                    list: ops
                                                                        HdlValueInt: 31
                                                                        HdlValueInt: 16
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: unaligned_valid_o
                                                HdlValueId: valid_o
                            tuple
                                HdlValueInt: 11
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: unaligned_rdata_o
                                                HdlOp: CONCAT
                                                    list: ops
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlOp: INDEX
                                                                    list: ops
                                                                        HdlValueId: L0_buffer
                                                                        HdlValueInt: 3
                                                                HdlOp: DOWNTO
                                                                    list: ops
                                                                        HdlValueInt: 15
                                                                        HdlValueInt: 0
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlOp: INDEX
                                                                    list: ops
                                                                        HdlValueId: L0_buffer
                                                                        HdlValueInt: 2
                                                                HdlOp: DOWNTO
                                                                    list: ops
                                                                        HdlValueInt: 31
                                                                        HdlValueInt: 16
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: unaligned_valid_o
                                                HdlValueId: valid_o
                    HdlStmCase: CS
                        HdlStmCaseType: CASE
                        HdlValueId: CS
                        list: cases
                            tuple
                                HdlValueId: EMPTY
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: instr_req_o
                                                HdlValueId: branch_i
                                        HdlStmIf
                                            HdlValueId: branch_i
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlStmIf
                                                        HdlValueId: instr_gnt_i
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: NS
                                                                HdlValueId: WAIT_RVALID
                                                        list: elifs
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: NS
                                                                HdlValueId: WAIT_GNT
                                            list: elifs
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: NS
                                                            HdlValueId: EMPTY
                            tuple
                                HdlValueId: WAIT_RVALID
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlStmIf
                                            HdlValueId: branch_i
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlStmIf
                                                        HdlValueId: instr_rvalid_i
                                                        HdlStmBlock: SEQ
                                                            list: body
                                                                HdlOp: ASSIGN
                                                                    list: ops
                                                                        HdlValueId: instr_req_o
                                                                        HdlValueInt: 1
                                                                HdlOp: ASSIGN
                                                                    list: ops
                                                                        HdlValueId: instr_addr_o
                                                                        HdlOp: CONCAT
                                                                            list: ops
                                                                                HdlOp: INDEX
                                                                                    list: ops
                                                                                        HdlValueId: addr_i
                                                                                        HdlOp: DOWNTO
                                                                                            list: ops
                                                                                                HdlValueInt: 31
                                                                                                HdlValueInt: 4
                                                                                HdlValueInt: 0000
                                                                HdlStmIf
                                                                    HdlValueId: instr_gnt_i
                                                                    HdlOp: ASSIGN
                                                                        list: ops
                                                                            HdlValueId: NS
                                                                            HdlValueId: WAIT_RVALID
                                                                    list: elifs
                                                                    HdlOp: ASSIGN
                                                                        list: ops
                                                                            HdlValueId: NS
                                                                            HdlValueId: WAIT_GNT
                                                        list: elifs
                                                        HdlStmBlock: SEQ
                                                            list: body
                                                                HdlOp: ASSIGN
                                                                    list: ops
                                                                        HdlValueId: NS
                                                                        HdlValueId: WAIT_ABORTED
                                            list: elifs
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: valid_o
                                                            HdlValueId: instr_rvalid_i
                                                    HdlStmCase: pointer_cs
                                                        HdlStmCaseType: CASE
                                                        HdlValueId: pointer_cs
                                                        list: cases
                                                            tuple
                                                                HdlValueInt: 00
                                                                HdlStmBlock: SEQ
                                                                    list: body
                                                                        HdlOp: ASSIGN
                                                                            list: ops
                                                                                HdlValueId: unaligned_rdata_o
                                                                                HdlOp: CONCAT
                                                                                    list: ops
                                                                                        HdlOp: INDEX
                                                                                            list: ops
                                                                                                HdlOp: INDEX
                                                                                                    list: ops
                                                                                                        HdlValueId: instr_rdata_i
                                                                                                        HdlValueInt: 0
                                                                                                HdlOp: DOWNTO
                                                                                                    list: ops
                                                                                                        HdlValueInt: 15
                                                                                                        HdlValueInt: 0
                                                                                        HdlOp: INDEX
                                                                                            list: ops
                                                                                                HdlOp: INDEX
                                                                                                    list: ops
                                                                                                        HdlValueId: L0_buffer
                                                                                                        HdlValueInt: 3
                                                                                                HdlOp: DOWNTO
                                                                                                    list: ops
                                                                                                        HdlValueInt: 31
                                                                                                        HdlValueInt: 16
                                                                        HdlStmIf
                                                                            HdlValueId: valid_L0_buffer
                                                                            HdlOp: ASSIGN
                                                                                list: ops
                                                                                    HdlValueId: unaligned_valid_o
                                                                                    HdlValueId: instr_rvalid_i
                                                                            list: elifs
                                                                            HdlOp: ASSIGN
                                                                                list: ops
                                                                                    HdlValueId: unaligned_valid_o
                                                                                    HdlValueInt: 0
                                                            tuple
                                                                HdlValueInt: 01
                                                                HdlStmBlock: SEQ
                                                                    list: body
                                                                        HdlOp: ASSIGN
                                                                            list: ops
                                                                                HdlValueId: unaligned_rdata_o
                                                                                HdlOp: CONCAT
                                                                                    list: ops
                                                                                        HdlOp: INDEX
                                                                                            list: ops
                                                                                                HdlOp: INDEX
                                                                                                    list: ops
                                                                                                        HdlValueId: instr_rdata_i
                                                                                                        HdlValueInt: 1
                                                                                                HdlOp: DOWNTO
                                                                                                    list: ops
                                                                                                        HdlValueInt: 15
                                                                                                        HdlValueInt: 0
                                                                                        HdlOp: INDEX
                                                                                            list: ops
                                                                                                HdlOp: INDEX
                                                                                                    list: ops
                                                                                                        HdlValueId: instr_rdata_i
                                                                                                        HdlValueInt: 0
                                                                                                HdlOp: DOWNTO
                                                                                                    list: ops
                                                                                                        HdlValueInt: 31
                                                                                                        HdlValueInt: 16
                                                                        HdlOp: ASSIGN
                                                                            list: ops
                                                                                HdlValueId: unaligned_valid_o
                                                                                HdlValueId: instr_rvalid_i
                                                            tuple
                                                                HdlValueInt: 10
                                                                HdlStmBlock: SEQ
                                                                    list: body
                                                                        HdlOp: ASSIGN
                                                                            list: ops
                                                                                HdlValueId: unaligned_rdata_o
                                                                                HdlOp: CONCAT
                                                                                    list: ops
                                                                                        HdlOp: INDEX
                                                                                            list: ops
                                                                                                HdlOp: INDEX
                                                                                                    list: ops
                                                                                                        HdlValueId: instr_rdata_i
                                                                                                        HdlValueInt: 2
                                                                                                HdlOp: DOWNTO
                                                                                                    list: ops
                                                                                                        HdlValueInt: 15
                                                                                                        HdlValueInt: 0
                                                                                        HdlOp: INDEX
                                                                                            list: ops
                                                                                                HdlOp: INDEX
                                                                                                    list: ops
                                                                                                        HdlValueId: instr_rdata_i
                                                                                                        HdlValueInt: 1
                                                                                                HdlOp: DOWNTO
                                                                                                    list: ops
                                                                                                        HdlValueInt: 31
                                                                                                        HdlValueInt: 16
                                                                        HdlOp: ASSIGN
                                                                            list: ops
                                                                                HdlValueId: unaligned_valid_o
                                                                                HdlValueId: instr_rvalid_i
                                                            tuple
                                                                HdlValueInt: 11
                                                                HdlStmBlock: SEQ
                                                                    list: body
                                                                        HdlOp: ASSIGN
                                                                            list: ops
                                                                                HdlValueId: unaligned_rdata_o
                                                                                HdlOp: CONCAT
                                                                                    list: ops
                                                                                        HdlOp: INDEX
                                                                                            list: ops
                                                                                                HdlOp: INDEX
                                                                                                    list: ops
                                                                                                        HdlValueId: instr_rdata_i
                                                                                                        HdlValueInt: 3
                                                                                                HdlOp: DOWNTO
                                                                                                    list: ops
                                                                                                        HdlValueInt: 15
                                                                                                        HdlValueInt: 0
                                                                                        HdlOp: INDEX
                                                                                            list: ops
                                                                                                HdlOp: INDEX
                                                                                                    list: ops
                                                                                                        HdlValueId: instr_rdata_i
                                                                                                        HdlValueInt: 2
                                                                                                HdlOp: DOWNTO
                                                                                                    list: ops
                                                                                                        HdlValueInt: 31
                                                                                                        HdlValueInt: 16
                                                                        HdlOp: ASSIGN
                                                                            list: ops
                                                                                HdlValueId: unaligned_valid_o
                                                                                HdlValueId: instr_rvalid_i
                                                    HdlStmIf
                                                        HdlValueId: instr_rvalid_i
                                                        HdlStmBlock: SEQ
                                                            list: body
                                                                HdlStmIf
                                                                    HdlOp: AND_UNARY
                                                                        list: ops
                                                                            HdlValueId: pointer_cs
                                                                    HdlStmBlock: SEQ
                                                                        list: body
                                                                            HdlStmIf
                                                                                HdlValueId: ready_i
                                                                                HdlStmBlock: SEQ
                                                                                    list: body
                                                                                        HdlOp: ASSIGN
                                                                                            list: ops
                                                                                                HdlValueId: instr_req_o
                                                                                                HdlValueInt: 1
                                                                                        HdlOp: ASSIGN
                                                                                            list: ops
                                                                                                HdlValueId: instr_addr_o
                                                                                                HdlOp: ADD
                                                                                                    list: ops
                                                                                                        HdlValueId: current_address
                                                                                                        HdlValueInt: 10
                                                                                        HdlOp: ASSIGN
                                                                                            list: ops
                                                                                                HdlValueId: pointer_ns
                                                                                                HdlValueInt: 0
                                                                                        HdlOp: ASSIGN
                                                                                            list: ops
                                                                                                HdlValueId: update_current_address
                                                                                                HdlValueInt: 1
                                                                                        HdlStmIf
                                                                                            HdlValueId: instr_gnt_i
                                                                                            HdlOp: ASSIGN
                                                                                                list: ops
                                                                                                    HdlValueId: NS
                                                                                                    HdlValueId: WAIT_RVALID
                                                                                            list: elifs
                                                                                            HdlOp: ASSIGN
                                                                                                list: ops
                                                                                                    HdlValueId: NS
                                                                                                    HdlValueId: WAIT_GNT
                                                                                list: elifs
                                                                                HdlStmBlock: SEQ
                                                                                    list: body
                                                                                        HdlOp: ASSIGN
                                                                                            list: ops
                                                                                                HdlValueId: NS
                                                                                                HdlValueId: VALID_L0
                                                                    list: elifs
                                                                    HdlStmBlock: SEQ
                                                                        list: body
                                                                            HdlOp: ASSIGN
                                                                                list: ops
                                                                                    HdlValueId: NS
                                                                                    HdlValueId: VALID_L0
                                                                            HdlStmIf
                                                                                HdlValueId: ready_i
                                                                                HdlOp: ASSIGN
                                                                                    list: ops
                                                                                        HdlValueId: pointer_ns
                                                                                        HdlOp: ADD
                                                                                            list: ops
                                                                                                HdlValueId: pointer_cs
                                                                                                HdlValueInt: 1
                                                                                list: elifs
                                                                                HdlOp: ASSIGN
                                                                                    list: ops
                                                                                        HdlValueId: pointer_ns
                                                                                        HdlValueId: pointer_cs
                                                        list: elifs
                                                        HdlStmBlock: SEQ
                                                            list: body
                                                                HdlOp: ASSIGN
                                                                    list: ops
                                                                        HdlValueId: NS
                                                                        HdlValueId: WAIT_RVALID
                            tuple
                                HdlValueId: VALID_L0
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: valid_o
                                                HdlValueInt: 1
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: rdata_o
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: L0_buffer
                                                        HdlValueId: pointer_cs
                                        HdlStmCase: pointer_cs
                                            HdlStmCaseType: CASE
                                            HdlValueId: pointer_cs
                                            list: cases
                                                tuple
                                                    HdlValueInt: 00
                                                    HdlStmBlock: SEQ
                                                        list: body
                                                            HdlOp: ASSIGN
                                                                list: ops
                                                                    HdlValueId: unaligned_rdata_o
                                                                    HdlOp: CONCAT
                                                                        list: ops
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlOp: INDEX
                                                                                        list: ops
                                                                                            HdlValueId: L0_buffer
                                                                                            HdlValueInt: 0
                                                                                    HdlOp: DOWNTO
                                                                                        list: ops
                                                                                            HdlValueInt: 15
                                                                                            HdlValueInt: 0
                                                                            HdlValueId: previous_chunk
                                                            HdlOp: ASSIGN
                                                                list: ops
                                                                    HdlValueId: unaligned_valid_o
                                                                    HdlValueId: valid_previous_chunk
                                                tuple
                                                    HdlValueInt: 01
                                                    HdlStmBlock: SEQ
                                                        list: body
                                                            HdlOp: ASSIGN
                                                                list: ops
                                                                    HdlValueId: unaligned_rdata_o
                                                                    HdlOp: CONCAT
                                                                        list: ops
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlOp: INDEX
                                                                                        list: ops
                                                                                            HdlValueId: L0_buffer
                                                                                            HdlValueInt: 1
                                                                                    HdlOp: DOWNTO
                                                                                        list: ops
                                                                                            HdlValueInt: 15
                                                                                            HdlValueInt: 0
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlOp: INDEX
                                                                                        list: ops
                                                                                            HdlValueId: L0_buffer
                                                                                            HdlValueInt: 0
                                                                                    HdlOp: DOWNTO
                                                                                        list: ops
                                                                                            HdlValueInt: 31
                                                                                            HdlValueInt: 16
                                                            HdlOp: ASSIGN
                                                                list: ops
                                                                    HdlValueId: unaligned_valid_o
                                                                    HdlValueInt: 1
                                                tuple
                                                    HdlValueInt: 10
                                                    HdlStmBlock: SEQ
                                                        list: body
                                                            HdlOp: ASSIGN
                                                                list: ops
                                                                    HdlValueId: unaligned_rdata_o
                                                                    HdlOp: CONCAT
                                                                        list: ops
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlOp: INDEX
                                                                                        list: ops
                                                                                            HdlValueId: L0_buffer
                                                                                            HdlValueInt: 2
                                                                                    HdlOp: DOWNTO
                                                                                        list: ops
                                                                                            HdlValueInt: 15
                                                                                            HdlValueInt: 0
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlOp: INDEX
                                                                                        list: ops
                                                                                            HdlValueId: L0_buffer
                                                                                            HdlValueInt: 1
                                                                                    HdlOp: DOWNTO
                                                                                        list: ops
                                                                                            HdlValueInt: 31
                                                                                            HdlValueInt: 16
                                                            HdlOp: ASSIGN
                                                                list: ops
                                                                    HdlValueId: unaligned_valid_o
                                                                    HdlValueInt: 1
                                                tuple
                                                    HdlValueInt: 11
                                                    HdlStmBlock: SEQ
                                                        list: body
                                                            HdlOp: ASSIGN
                                                                list: ops
                                                                    HdlValueId: unaligned_rdata_o
                                                                    HdlOp: CONCAT
                                                                        list: ops
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlOp: INDEX
                                                                                        list: ops
                                                                                            HdlValueId: L0_buffer
                                                                                            HdlValueInt: 3
                                                                                    HdlOp: DOWNTO
                                                                                        list: ops
                                                                                            HdlValueInt: 15
                                                                                            HdlValueInt: 0
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlOp: INDEX
                                                                                        list: ops
                                                                                            HdlValueId: L0_buffer
                                                                                            HdlValueInt: 2
                                                                                    HdlOp: DOWNTO
                                                                                        list: ops
                                                                                            HdlValueInt: 31
                                                                                            HdlValueInt: 16
                                                            HdlOp: ASSIGN
                                                                list: ops
                                                                    HdlValueId: unaligned_valid_o
                                                                    HdlValueInt: 1
                                        HdlStmIf
                                            HdlValueId: branch_i
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: instr_req_o
                                                            HdlValueInt: 1
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: instr_addr_o
                                                            HdlOp: CONCAT
                                                                list: ops
                                                                    HdlOp: INDEX
                                                                        list: ops
                                                                            HdlValueId: addr_i
                                                                            HdlOp: DOWNTO
                                                                                list: ops
                                                                                    HdlValueInt: 31
                                                                                    HdlValueInt: 4
                                                                    HdlValueInt: 0000
                                                    HdlStmIf
                                                        HdlValueId: instr_gnt_i
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: NS
                                                                HdlValueId: WAIT_RVALID
                                                        list: elifs
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: NS
                                                                HdlValueId: WAIT_GNT
                                            list: elifs
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlStmIf
                                                        HdlValueId: ready_i
                                                        HdlStmBlock: SEQ
                                                            list: body
                                                                HdlStmIf
                                                                    HdlOp: AND_UNARY
                                                                        list: ops
                                                                            HdlValueId: pointer_cs
                                                                    HdlStmBlock: SEQ
                                                                        list: body
                                                                            HdlOp: ASSIGN
                                                                                list: ops
                                                                                    HdlValueId: instr_req_o
                                                                                    HdlValueInt: 1
                                                                            HdlOp: ASSIGN
                                                                                list: ops
                                                                                    HdlValueId: instr_addr_o
                                                                                    HdlOp: ADD
                                                                                        list: ops
                                                                                            HdlValueId: current_address
                                                                                            HdlValueInt: 10
                                                                            HdlOp: ASSIGN
                                                                                list: ops
                                                                                    HdlValueId: update_current_address
                                                                                    HdlValueInt: 1
                                                                            HdlOp: ASSIGN
                                                                                list: ops
                                                                                    HdlValueId: pointer_ns
                                                                                    HdlValueInt: 0
                                                                            HdlStmIf
                                                                                HdlValueId: instr_gnt_i
                                                                                HdlOp: ASSIGN
                                                                                    list: ops
                                                                                        HdlValueId: NS
                                                                                        HdlValueId: WAIT_RVALID
                                                                                list: elifs
                                                                                HdlOp: ASSIGN
                                                                                    list: ops
                                                                                        HdlValueId: NS
                                                                                        HdlValueId: WAIT_GNT
                                                                    list: elifs
                                                                    HdlStmBlock: SEQ
                                                                        list: body
                                                                            HdlOp: ASSIGN
                                                                                list: ops
                                                                                    HdlValueId: pointer_ns
                                                                                    HdlOp: ADD
                                                                                        list: ops
                                                                                            HdlValueId: pointer_cs
                                                                                            HdlValueInt: 1
                                                                            HdlOp: ASSIGN
                                                                                list: ops
                                                                                    HdlValueId: NS
                                                                                    HdlValueId: VALID_L0
                                                        list: elifs
                                                        HdlStmBlock: SEQ
                                                            list: body
                                                                HdlOp: ASSIGN
                                                                    list: ops
                                                                        HdlValueId: NS
                                                                        HdlValueId: VALID_L0
                            tuple
                                HdlValueId: WAIT_GNT
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlStmIf
                                            HdlValueId: branch_i
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: instr_req_o
                                                            HdlValueInt: 1
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: instr_addr_o
                                                            HdlOp: CONCAT
                                                                list: ops
                                                                    HdlOp: INDEX
                                                                        list: ops
                                                                            HdlValueId: addr_i
                                                                            HdlOp: DOWNTO
                                                                                list: ops
                                                                                    HdlValueInt: 31
                                                                                    HdlValueInt: 4
                                                                    HdlValueInt: 0000
                                                    HdlStmIf
                                                        HdlValueId: instr_gnt_i
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: NS
                                                                HdlValueId: WAIT_RVALID
                                                        list: elifs
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: NS
                                                                HdlValueId: WAIT_GNT
                                            list: elifs
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: instr_req_o
                                                            HdlValueInt: 1
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: instr_addr_o
                                                            HdlValueId: current_address
                                                    HdlStmIf
                                                        HdlValueId: instr_gnt_i
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: NS
                                                                HdlValueId: WAIT_RVALID
                                                        list: elifs
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: NS
                                                                HdlValueId: WAIT_GNT
                            tuple
                                HdlValueId: WAIT_ABORTED
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: clear_buffer
                                                HdlValueInt: 1
                                        HdlStmIf
                                            HdlValueId: instr_rvalid_i
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: instr_req_o
                                                            HdlValueInt: 1
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: instr_addr_o
                                                            HdlValueId: current_address
                                                    HdlStmIf
                                                        HdlValueId: instr_gnt_i
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: NS
                                                                HdlValueId: WAIT_RVALID
                                                        list: elifs
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: NS
                                                                HdlValueId: WAIT_GNT
                                            list: elifs
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: NS
                                                            HdlValueId: WAIT_ABORTED
                        HdlStmBlock: SEQ
                            list: body
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: NS
                                        HdlValueId: EMPTY
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: clear_buffer
                                        HdlValueInt: 1
            HdlStmProcessTriggerConstrain: COMB
        HdlStmProcess
            list: sensitivity
                HdlOp: RISING
                    list: ops
                        HdlValueId: clk
                HdlOp: FALLING
                    list: ops
                        HdlValueId: rst_n
            HdlStmBlock: SEQ
                list: body
                    HdlStmIf
                        HdlOp: EQ
                            list: ops
                                HdlValueId: rst_n
                                HdlValueInt: 0
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmAssign
                                    HdlValueInt: 0
                                    HdlValueId: valid_L0_buffer
                                HdlStmAssign
                                    HdlValueInt: 0
                                    HdlValueId: L0_buffer
                                HdlStmAssign
                                    HdlValueInt: 0
                                    HdlValueId: previous_chunk
                                HdlStmAssign
                                    HdlValueInt: 0
                                    HdlValueId: valid_previous_chunk
                        list: elifs
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmIf
                                    HdlOp: OR_LOG
                                        list: ops
                                            HdlValueId: branch_i
                                            HdlValueId: clear_buffer
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmAssign
                                                HdlValueInt: 0
                                                HdlValueId: valid_L0_buffer
                                            HdlStmAssign
                                                HdlValueInt: 0
                                                HdlValueId: valid_previous_chunk
                                    list: elifs
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmIf
                                                HdlValueId: instr_rvalid_i
                                                HdlStmBlock: SEQ
                                                    list: body
                                                        HdlStmAssign
                                                            HdlValueId: instr_rdata_i
                                                            HdlValueId: L0_buffer
                                                        HdlStmAssign
                                                            HdlValueInt: 1
                                                            HdlValueId: valid_L0_buffer
                                                        HdlStmIf
                                                            HdlValueId: valid_L0_buffer
                                                            HdlStmBlock: SEQ
                                                                list: body
                                                                    HdlStmAssign
                                                                        HdlValueInt: 1
                                                                        HdlValueId: valid_previous_chunk
                                                                    HdlStmAssign
                                                                        HdlOp: INDEX
                                                                            list: ops
                                                                                HdlOp: INDEX
                                                                                    list: ops
                                                                                        HdlValueId: L0_buffer
                                                                                        HdlValueInt: 3
                                                                                HdlOp: DOWNTO
                                                                                    list: ops
                                                                                        HdlValueInt: 31
                                                                                        HdlValueInt: 16
                                                                        HdlValueId: previous_chunk
                                                            list: elifs
                                                list: elifs
            HdlStmProcessTriggerConstrain: FF

MOV HdlIdDef@@CS to objs
HdlIdDef: CS
    HdlExprNotImplemented: type
    HdlDirection: INTERNAL

MOV HdlIdDef@@NS to objs
HdlIdDef: NS
    HdlExprNotImplemented: type
    HdlDirection: INTERNAL

MOV HdlIdDef@@current_address to objs
HdlIdDef: current_address
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 31
                    HdlValueInt: 0
    HdlDirection: INTERNAL

INS HdlIdDef@@last_address to objs

MOV HdlIdDef@@pointer_cs to objs
HdlIdDef: pointer_cs
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: INTERNAL

MOV HdlIdDef@@pointer_ns to objs
HdlIdDef: pointer_ns
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: INTERNAL

MOV HdlIdDef@@update_current_address to objs
HdlIdDef: update_current_address
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

MOV HdlIdDef@@L0_buffer to objs
HdlIdDef: L0_buffer
    HdlOp: INDEX
        list: ops
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: logic
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 3
                            HdlValueInt: 0
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 31
                    HdlValueInt: 0
    HdlDirection: INTERNAL

INS HdlIdDef@@previous_chunk to objs
HdlIdDef: previous_chunk
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 31
                    HdlValueInt: 0
    HdlDirection: INTERNAL

MOV HdlIdDef@@clear_buffer to objs
HdlIdDef: clear_buffer
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

UPD HdlIdDef@@valid_L0_buffer to ready_L0

MOV HdlIdDef@@valid_L0_buffer to objs
HdlIdDef: valid_L0_buffer
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

INS HdlIdDef@@is_prefetch_q to objs
HdlIdDef: is_prefetch_q
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

UPD HdlIdDef@@valid_previous_chunk to is_prefetch_n

MOV HdlIdDef@@valid_previous_chunk to objs
HdlIdDef: valid_previous_chunk
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

MOV HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: NE
        list: ops
            HdlValueId: CS
            HdlValueId: EMPTY
    HdlValueId: busy_o

UPD HdlIdDef@@last_address to last_address
    INS HdlOp@@PARAMETRIZATION to last_address
    INS HdlDirection@@INTERNAL to last_address
    UPD HdlOp@@PARAMETRIZATION to PARAMETRIZATION
        INS list@@ops to PARAMETRIZATION
        INS HdlValueId@@logic to ops
        INS HdlOp@@DOWNTO to ops
        UPD HdlOp@@DOWNTO to DOWNTO
            INS list@@ops to DOWNTO
            INS HdlValueInt@@31 to ops

UPD HdlModuleDef@@prefetch_L0_buffer to prefetch_L0_buffer
    UPD list@@objs to body
    MOV list@@objs to prefetch_L0_buffer
    list: objs
        HdlIdDef: CS
            HdlExprNotImplemented: type
            HdlDirection: INTERNAL
        HdlIdDef: NS
            HdlExprNotImplemented: type
            HdlDirection: INTERNAL
        HdlIdDef: current_address
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: logic
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 31
                            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlIdDef: pointer_cs
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: logic
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 1
                            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlIdDef: pointer_ns
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: logic
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 1
                            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlIdDef: update_current_address
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: logic
            HdlDirection: INTERNAL
        HdlIdDef: L0_buffer
            HdlOp: INDEX
                list: ops
                    HdlOp: PARAMETRIZATION
                        list: ops
                            HdlValueId: logic
                            HdlOp: DOWNTO
                                list: ops
                                    HdlValueInt: 3
                                    HdlValueInt: 0
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 31
                            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlIdDef: valid_L0_buffer
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: logic
            HdlDirection: INTERNAL
        HdlIdDef: previous_chunk
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: logic
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 15
                            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlIdDef: valid_previous_chunk
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: logic
            HdlDirection: INTERNAL
        HdlIdDef: clear_buffer
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: logic
            HdlDirection: INTERNAL
        HdlStmAssign
            HdlOp: NE
                list: ops
                    HdlValueId: CS
                    HdlValueId: EMPTY
            HdlValueId: busy_o
        HdlStmProcess
            list: sensitivity
                HdlOp: RISING
                    list: ops
                        HdlValueId: clk
                HdlOp: FALLING
                    list: ops
                        HdlValueId: rst_n
            HdlStmBlock: SEQ
                list: body
                    HdlStmIf
                        HdlOp: NEG
                            list: ops
                                HdlValueId: rst_n
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmAssign
                                    HdlValueId: EMPTY
                                    HdlValueId: CS
                                HdlStmAssign
                                    HdlValueInt: 0
                                    HdlValueId: current_address
                                HdlStmAssign
                                    HdlValueInt: 0
                                    HdlValueId: pointer_cs
                        list: elifs
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmAssign
                                    HdlValueId: NS
                                    HdlValueId: CS
                                HdlStmIf
                                    HdlValueId: branch_i
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmAssign
                                                HdlOp: CONCAT
                                                    list: ops
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlValueId: addr_i
                                                                HdlOp: DOWNTO
                                                                    list: ops
                                                                        HdlValueInt: 31
                                                                        HdlValueInt: 4
                                                        HdlValueInt: 0000
                                                HdlValueId: current_address
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: addr_i
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 3
                                                                HdlValueInt: 2
                                                HdlValueId: pointer_cs
                                    list: elifs
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmIf
                                                HdlValueId: update_current_address
                                                HdlStmAssign: if_true
                                                    HdlOp: ADD
                                                        list: ops
                                                            HdlValueId: current_address
                                                            HdlValueInt: 10
                                                    HdlValueId: current_address
                                                list: elifs
                                            HdlStmAssign
                                                HdlValueId: pointer_ns
                                                HdlValueId: pointer_cs
            HdlStmProcessTriggerConstrain: FF
        HdlStmProcess
            HdlStmBlock: SEQ
                list: body
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: valid_o
                            HdlValueInt: 0
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: addr_o
                            HdlOp: ADD
                                list: ops
                                    HdlValueId: current_address
                                    HdlOp: SLL
                                        list: ops
                                            HdlValueId: pointer_cs
                                            HdlValueInt: 2
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: pointer_ns
                            HdlValueId: pointer_cs
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: instr_req_o
                            HdlValueInt: 0
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: instr_addr_o
                            HdlOp: TERNARY
                                list: ops
                                    HdlValueId: branch_i
                                    HdlValueId: addr_i
                                    HdlOp: ADD
                                        list: ops
                                            HdlValueId: current_address
                                            HdlValueInt: 10
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: update_current_address
                            HdlValueInt: 0
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: rdata_o
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: instr_rdata_i
                                    HdlValueId: pointer_cs
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: clear_buffer
                            HdlValueInt: 0
                    HdlStmCase: {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops':}]} 
                        HdlStmCaseType: CASE
                        HdlOp: INDEX
                            list: ops
                                HdlValueId: addr_o
                                HdlOp: DOWNTO
                                    list: ops
                                        HdlValueInt: 3
                                        HdlValueInt: 2
                        list: cases
                            tuple
                                HdlValueInt: 00
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: unaligned_rdata_o
                                                HdlOp: CONCAT
                                                    list: ops
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlOp: INDEX
                                                                    list: ops
                                                                        HdlValueId: L0_buffer
                                                                        HdlValueInt: 0
                                                                HdlOp: DOWNTO
                                                                    list: ops
                                                                        HdlValueInt: 15
                                                                        HdlValueInt: 0
                                                        HdlValueId: previous_chunk
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: unaligned_valid_o
                                                HdlValueId: valid_previous_chunk
                            tuple
                                HdlValueInt: 01
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: unaligned_rdata_o
                                                HdlOp: CONCAT
                                                    list: ops
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlOp: INDEX
                                                                    list: ops
                                                                        HdlValueId: L0_buffer
                                                                        HdlValueInt: 1
                                                                HdlOp: DOWNTO
                                                                    list: ops
                                                                        HdlValueInt: 15
                                                                        HdlValueInt: 0
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlOp: INDEX
                                                                    list: ops
                                                                        HdlValueId: L0_buffer
                                                                        HdlValueInt: 0
                                                                HdlOp: DOWNTO
                                                                    list: ops
                                                                        HdlValueInt: 31
                                                                        HdlValueInt: 16
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: unaligned_valid_o
                                                HdlValueId: valid_o
                            tuple
                                HdlValueInt: 10
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: unaligned_rdata_o
                                                HdlOp: CONCAT
                                                    list: ops
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlOp: INDEX
                                                                    list: ops
                                                                        HdlValueId: L0_buffer
                                                                        HdlValueInt: 2
                                                                HdlOp: DOWNTO
                                                                    list: ops
                                                                        HdlValueInt: 15
                                                                        HdlValueInt: 0
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlOp: INDEX
                                                                    list: ops
                                                                        HdlValueId: L0_buffer
                                                                        HdlValueInt: 1
                                                                HdlOp: DOWNTO
                                                                    list: ops
                                                                        HdlValueInt: 31
                                                                        HdlValueInt: 16
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: unaligned_valid_o
                                                HdlValueId: valid_o
                            tuple
                                HdlValueInt: 11
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: unaligned_rdata_o
                                                HdlOp: CONCAT
                                                    list: ops
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlOp: INDEX
                                                                    list: ops
                                                                        HdlValueId: L0_buffer
                                                                        HdlValueInt: 3
                                                                HdlOp: DOWNTO
                                                                    list: ops
                                                                        HdlValueInt: 15
                                                                        HdlValueInt: 0
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlOp: INDEX
                                                                    list: ops
                                                                        HdlValueId: L0_buffer
                                                                        HdlValueInt: 2
                                                                HdlOp: DOWNTO
                                                                    list: ops
                                                                        HdlValueInt: 31
                                                                        HdlValueInt: 16
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: unaligned_valid_o
                                                HdlValueId: valid_o
                    HdlStmCase: CS
                        HdlStmCaseType: CASE
                        HdlValueId: CS
                        list: cases
                            tuple
                                HdlValueId: EMPTY
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: instr_req_o
                                                HdlValueId: branch_i
                                        HdlStmIf
                                            HdlValueId: branch_i
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlStmIf
                                                        HdlValueId: instr_gnt_i
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: NS
                                                                HdlValueId: WAIT_RVALID
                                                        list: elifs
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: NS
                                                                HdlValueId: WAIT_GNT
                                            list: elifs
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: NS
                                                            HdlValueId: EMPTY
                            tuple
                                HdlValueId: WAIT_RVALID
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlStmIf
                                            HdlValueId: branch_i
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlStmIf
                                                        HdlValueId: instr_rvalid_i
                                                        HdlStmBlock: SEQ
                                                            list: body
                                                                HdlOp: ASSIGN
                                                                    list: ops
                                                                        HdlValueId: instr_req_o
                                                                        HdlValueInt: 1
                                                                HdlOp: ASSIGN
                                                                    list: ops
                                                                        HdlValueId: instr_addr_o
                                                                        HdlOp: CONCAT
                                                                            list: ops
                                                                                HdlOp: INDEX
                                                                                    list: ops
                                                                                        HdlValueId: addr_i
                                                                                        HdlOp: DOWNTO
                                                                                            list: ops
                                                                                                HdlValueInt: 31
                                                                                                HdlValueInt: 4
                                                                                HdlValueInt: 0000
                                                                HdlStmIf
                                                                    HdlValueId: instr_gnt_i
                                                                    HdlOp: ASSIGN
                                                                        list: ops
                                                                            HdlValueId: NS
                                                                            HdlValueId: WAIT_RVALID
                                                                    list: elifs
                                                                    HdlOp: ASSIGN
                                                                        list: ops
                                                                            HdlValueId: NS
                                                                            HdlValueId: WAIT_GNT
                                                        list: elifs
                                                        HdlStmBlock: SEQ
                                                            list: body
                                                                HdlOp: ASSIGN
                                                                    list: ops
                                                                        HdlValueId: NS
                                                                        HdlValueId: WAIT_ABORTED
                                            list: elifs
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: valid_o
                                                            HdlValueId: instr_rvalid_i
                                                    HdlStmCase: pointer_cs
                                                        HdlStmCaseType: CASE
                                                        HdlValueId: pointer_cs
                                                        list: cases
                                                            tuple
                                                                HdlValueInt: 00
                                                                HdlStmBlock: SEQ
                                                                    list: body
                                                                        HdlOp: ASSIGN
                                                                            list: ops
                                                                                HdlValueId: unaligned_rdata_o
                                                                                HdlOp: CONCAT
                                                                                    list: ops
                                                                                        HdlOp: INDEX
                                                                                            list: ops
                                                                                                HdlOp: INDEX
                                                                                                    list: ops
                                                                                                        HdlValueId: instr_rdata_i
                                                                                                        HdlValueInt: 0
                                                                                                HdlOp: DOWNTO
                                                                                                    list: ops
                                                                                                        HdlValueInt: 15
                                                                                                        HdlValueInt: 0
                                                                                        HdlOp: INDEX
                                                                                            list: ops
                                                                                                HdlOp: INDEX
                                                                                                    list: ops
                                                                                                        HdlValueId: L0_buffer
                                                                                                        HdlValueInt: 3
                                                                                                HdlOp: DOWNTO
                                                                                                    list: ops
                                                                                                        HdlValueInt: 31
                                                                                                        HdlValueInt: 16
                                                                        HdlStmIf
                                                                            HdlValueId: valid_L0_buffer
                                                                            HdlOp: ASSIGN
                                                                                list: ops
                                                                                    HdlValueId: unaligned_valid_o
                                                                                    HdlValueId: instr_rvalid_i
                                                                            list: elifs
                                                                            HdlOp: ASSIGN
                                                                                list: ops
                                                                                    HdlValueId: unaligned_valid_o
                                                                                    HdlValueInt: 0
                                                            tuple
                                                                HdlValueInt: 01
                                                                HdlStmBlock: SEQ
                                                                    list: body
                                                                        HdlOp: ASSIGN
                                                                            list: ops
                                                                                HdlValueId: unaligned_rdata_o
                                                                                HdlOp: CONCAT
                                                                                    list: ops
                                                                                        HdlOp: INDEX
                                                                                            list: ops
                                                                                                HdlOp: INDEX
                                                                                                    list: ops
                                                                                                        HdlValueId: instr_rdata_i
                                                                                                        HdlValueInt: 1
                                                                                                HdlOp: DOWNTO
                                                                                                    list: ops
                                                                                                        HdlValueInt: 15
                                                                                                        HdlValueInt: 0
                                                                                        HdlOp: INDEX
                                                                                            list: ops
                                                                                                HdlOp: INDEX
                                                                                                    list: ops
                                                                                                        HdlValueId: instr_rdata_i
                                                                                                        HdlValueInt: 0
                                                                                                HdlOp: DOWNTO
                                                                                                    list: ops
                                                                                                        HdlValueInt: 31
                                                                                                        HdlValueInt: 16
                                                                        HdlOp: ASSIGN
                                                                            list: ops
                                                                                HdlValueId: unaligned_valid_o
                                                                                HdlValueId: instr_rvalid_i
                                                            tuple
                                                                HdlValueInt: 10
                                                                HdlStmBlock: SEQ
                                                                    list: body
                                                                        HdlOp: ASSIGN
                                                                            list: ops
                                                                                HdlValueId: unaligned_rdata_o
                                                                                HdlOp: CONCAT
                                                                                    list: ops
                                                                                        HdlOp: INDEX
                                                                                            list: ops
                                                                                                HdlOp: INDEX
                                                                                                    list: ops
                                                                                                        HdlValueId: instr_rdata_i
                                                                                                        HdlValueInt: 2
                                                                                                HdlOp: DOWNTO
                                                                                                    list: ops
                                                                                                        HdlValueInt: 15
                                                                                                        HdlValueInt: 0
                                                                                        HdlOp: INDEX
                                                                                            list: ops
                                                                                                HdlOp: INDEX
                                                                                                    list: ops
                                                                                                        HdlValueId: instr_rdata_i
                                                                                                        HdlValueInt: 1
                                                                                                HdlOp: DOWNTO
                                                                                                    list: ops
                                                                                                        HdlValueInt: 31
                                                                                                        HdlValueInt: 16
                                                                        HdlOp: ASSIGN
                                                                            list: ops
                                                                                HdlValueId: unaligned_valid_o
                                                                                HdlValueId: instr_rvalid_i
                                                            tuple
                                                                HdlValueInt: 11
                                                                HdlStmBlock: SEQ
                                                                    list: body
                                                                        HdlOp: ASSIGN
                                                                            list: ops
                                                                                HdlValueId: unaligned_rdata_o
                                                                                HdlOp: CONCAT
                                                                                    list: ops
                                                                                        HdlOp: INDEX
                                                                                            list: ops
                                                                                                HdlOp: INDEX
                                                                                                    list: ops
                                                                                                        HdlValueId: instr_rdata_i
                                                                                                        HdlValueInt: 3
                                                                                                HdlOp: DOWNTO
                                                                                                    list: ops
                                                                                                        HdlValueInt: 15
                                                                                                        HdlValueInt: 0
                                                                                        HdlOp: INDEX
                                                                                            list: ops
                                                                                                HdlOp: INDEX
                                                                                                    list: ops
                                                                                                        HdlValueId: instr_rdata_i
                                                                                                        HdlValueInt: 2
                                                                                                HdlOp: DOWNTO
                                                                                                    list: ops
                                                                                                        HdlValueInt: 31
                                                                                                        HdlValueInt: 16
                                                                        HdlOp: ASSIGN
                                                                            list: ops
                                                                                HdlValueId: unaligned_valid_o
                                                                                HdlValueId: instr_rvalid_i
                                                    HdlStmIf
                                                        HdlValueId: instr_rvalid_i
                                                        HdlStmBlock: SEQ
                                                            list: body
                                                                HdlStmIf
                                                                    HdlOp: AND_UNARY
                                                                        list: ops
                                                                            HdlValueId: pointer_cs
                                                                    HdlStmBlock: SEQ
                                                                        list: body
                                                                            HdlStmIf
                                                                                HdlValueId: ready_i
                                                                                HdlStmBlock: SEQ
                                                                                    list: body
                                                                                        HdlOp: ASSIGN
                                                                                            list: ops
                                                                                                HdlValueId: instr_req_o
                                                                                                HdlValueInt: 1
                                                                                        HdlOp: ASSIGN
                                                                                            list: ops
                                                                                                HdlValueId: instr_addr_o
                                                                                                HdlOp: ADD
                                                                                                    list: ops
                                                                                                        HdlValueId: current_address
                                                                                                        HdlValueInt: 10
                                                                                        HdlOp: ASSIGN
                                                                                            list: ops
                                                                                                HdlValueId: pointer_ns
                                                                                                HdlValueInt: 0
                                                                                        HdlOp: ASSIGN
                                                                                            list: ops
                                                                                                HdlValueId: update_current_address
                                                                                                HdlValueInt: 1
                                                                                        HdlStmIf
                                                                                            HdlValueId: instr_gnt_i
                                                                                            HdlOp: ASSIGN
                                                                                                list: ops
                                                                                                    HdlValueId: NS
                                                                                                    HdlValueId: WAIT_RVALID
                                                                                            list: elifs
                                                                                            HdlOp: ASSIGN
                                                                                                list: ops
                                                                                                    HdlValueId: NS
                                                                                                    HdlValueId: WAIT_GNT
                                                                                list: elifs
                                                                                HdlStmBlock: SEQ
                                                                                    list: body
                                                                                        HdlOp: ASSIGN
                                                                                            list: ops
                                                                                                HdlValueId: NS
                                                                                                HdlValueId: VALID_L0
                                                                    list: elifs
                                                                    HdlStmBlock: SEQ
                                                                        list: body
                                                                            HdlOp: ASSIGN
                                                                                list: ops
                                                                                    HdlValueId: NS
                                                                                    HdlValueId: VALID_L0
                                                                            HdlStmIf
                                                                                HdlValueId: ready_i
                                                                                HdlOp: ASSIGN
                                                                                    list: ops
                                                                                        HdlValueId: pointer_ns
                                                                                        HdlOp: ADD
                                                                                            list: ops
                                                                                                HdlValueId: pointer_cs
                                                                                                HdlValueInt: 1
                                                                                list: elifs
                                                                                HdlOp: ASSIGN
                                                                                    list: ops
                                                                                        HdlValueId: pointer_ns
                                                                                        HdlValueId: pointer_cs
                                                        list: elifs
                                                        HdlStmBlock: SEQ
                                                            list: body
                                                                HdlOp: ASSIGN
                                                                    list: ops
                                                                        HdlValueId: NS
                                                                        HdlValueId: WAIT_RVALID
                            tuple
                                HdlValueId: VALID_L0
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: valid_o
                                                HdlValueInt: 1
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: rdata_o
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: L0_buffer
                                                        HdlValueId: pointer_cs
                                        HdlStmCase: pointer_cs
                                            HdlStmCaseType: CASE
                                            HdlValueId: pointer_cs
                                            list: cases
                                                tuple
                                                    HdlValueInt: 00
                                                    HdlStmBlock: SEQ
                                                        list: body
                                                            HdlOp: ASSIGN
                                                                list: ops
                                                                    HdlValueId: unaligned_rdata_o
                                                                    HdlOp: CONCAT
                                                                        list: ops
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlOp: INDEX
                                                                                        list: ops
                                                                                            HdlValueId: L0_buffer
                                                                                            HdlValueInt: 0
                                                                                    HdlOp: DOWNTO
                                                                                        list: ops
                                                                                            HdlValueInt: 15
                                                                                            HdlValueInt: 0
                                                                            HdlValueId: previous_chunk
                                                            HdlOp: ASSIGN
                                                                list: ops
                                                                    HdlValueId: unaligned_valid_o
                                                                    HdlValueId: valid_previous_chunk
                                                tuple
                                                    HdlValueInt: 01
                                                    HdlStmBlock: SEQ
                                                        list: body
                                                            HdlOp: ASSIGN
                                                                list: ops
                                                                    HdlValueId: unaligned_rdata_o
                                                                    HdlOp: CONCAT
                                                                        list: ops
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlOp: INDEX
                                                                                        list: ops
                                                                                            HdlValueId: L0_buffer
                                                                                            HdlValueInt: 1
                                                                                    HdlOp: DOWNTO
                                                                                        list: ops
                                                                                            HdlValueInt: 15
                                                                                            HdlValueInt: 0
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlOp: INDEX
                                                                                        list: ops
                                                                                            HdlValueId: L0_buffer
                                                                                            HdlValueInt: 0
                                                                                    HdlOp: DOWNTO
                                                                                        list: ops
                                                                                            HdlValueInt: 31
                                                                                            HdlValueInt: 16
                                                            HdlOp: ASSIGN
                                                                list: ops
                                                                    HdlValueId: unaligned_valid_o
                                                                    HdlValueInt: 1
                                                tuple
                                                    HdlValueInt: 10
                                                    HdlStmBlock: SEQ
                                                        list: body
                                                            HdlOp: ASSIGN
                                                                list: ops
                                                                    HdlValueId: unaligned_rdata_o
                                                                    HdlOp: CONCAT
                                                                        list: ops
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlOp: INDEX
                                                                                        list: ops
                                                                                            HdlValueId: L0_buffer
                                                                                            HdlValueInt: 2
                                                                                    HdlOp: DOWNTO
                                                                                        list: ops
                                                                                            HdlValueInt: 15
                                                                                            HdlValueInt: 0
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlOp: INDEX
                                                                                        list: ops
                                                                                            HdlValueId: L0_buffer
                                                                                            HdlValueInt: 1
                                                                                    HdlOp: DOWNTO
                                                                                        list: ops
                                                                                            HdlValueInt: 31
                                                                                            HdlValueInt: 16
                                                            HdlOp: ASSIGN
                                                                list: ops
                                                                    HdlValueId: unaligned_valid_o
                                                                    HdlValueInt: 1
                                                tuple
                                                    HdlValueInt: 11
                                                    HdlStmBlock: SEQ
                                                        list: body
                                                            HdlOp: ASSIGN
                                                                list: ops
                                                                    HdlValueId: unaligned_rdata_o
                                                                    HdlOp: CONCAT
                                                                        list: ops
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlOp: INDEX
                                                                                        list: ops
                                                                                            HdlValueId: L0_buffer
                                                                                            HdlValueInt: 3
                                                                                    HdlOp: DOWNTO
                                                                                        list: ops
                                                                                            HdlValueInt: 15
                                                                                            HdlValueInt: 0
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlOp: INDEX
                                                                                        list: ops
                                                                                            HdlValueId: L0_buffer
                                                                                            HdlValueInt: 2
                                                                                    HdlOp: DOWNTO
                                                                                        list: ops
                                                                                            HdlValueInt: 31
                                                                                            HdlValueInt: 16
                                                            HdlOp: ASSIGN
                                                                list: ops
                                                                    HdlValueId: unaligned_valid_o
                                                                    HdlValueInt: 1
                                        HdlStmIf
                                            HdlValueId: branch_i
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: instr_req_o
                                                            HdlValueInt: 1
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: instr_addr_o
                                                            HdlOp: CONCAT
                                                                list: ops
                                                                    HdlOp: INDEX
                                                                        list: ops
                                                                            HdlValueId: addr_i
                                                                            HdlOp: DOWNTO
                                                                                list: ops
                                                                                    HdlValueInt: 31
                                                                                    HdlValueInt: 4
                                                                    HdlValueInt: 0000
                                                    HdlStmIf
                                                        HdlValueId: instr_gnt_i
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: NS
                                                                HdlValueId: WAIT_RVALID
                                                        list: elifs
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: NS
                                                                HdlValueId: WAIT_GNT
                                            list: elifs
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlStmIf
                                                        HdlValueId: ready_i
                                                        HdlStmBlock: SEQ
                                                            list: body
                                                                HdlStmIf
                                                                    HdlOp: AND_UNARY
                                                                        list: ops
                                                                            HdlValueId: pointer_cs
                                                                    HdlStmBlock: SEQ
                                                                        list: body
                                                                            HdlOp: ASSIGN
                                                                                list: ops
                                                                                    HdlValueId: instr_req_o
                                                                                    HdlValueInt: 1
                                                                            HdlOp: ASSIGN
                                                                                list: ops
                                                                                    HdlValueId: instr_addr_o
                                                                                    HdlOp: ADD
                                                                                        list: ops
                                                                                            HdlValueId: current_address
                                                                                            HdlValueInt: 10
                                                                            HdlOp: ASSIGN
                                                                                list: ops
                                                                                    HdlValueId: update_current_address
                                                                                    HdlValueInt: 1
                                                                            HdlOp: ASSIGN
                                                                                list: ops
                                                                                    HdlValueId: pointer_ns
                                                                                    HdlValueInt: 0
                                                                            HdlStmIf
                                                                                HdlValueId: instr_gnt_i
                                                                                HdlOp: ASSIGN
                                                                                    list: ops
                                                                                        HdlValueId: NS
                                                                                        HdlValueId: WAIT_RVALID
                                                                                list: elifs
                                                                                HdlOp: ASSIGN
                                                                                    list: ops
                                                                                        HdlValueId: NS
                                                                                        HdlValueId: WAIT_GNT
                                                                    list: elifs
                                                                    HdlStmBlock: SEQ
                                                                        list: body
                                                                            HdlOp: ASSIGN
                                                                                list: ops
                                                                                    HdlValueId: pointer_ns
                                                                                    HdlOp: ADD
                                                                                        list: ops
                                                                                            HdlValueId: pointer_cs
                                                                                            HdlValueInt: 1
                                                                            HdlOp: ASSIGN
                                                                                list: ops
                                                                                    HdlValueId: NS
                                                                                    HdlValueId: VALID_L0
                                                        list: elifs
                                                        HdlStmBlock: SEQ
                                                            list: body
                                                                HdlOp: ASSIGN
                                                                    list: ops
                                                                        HdlValueId: NS
                                                                        HdlValueId: VALID_L0
                            tuple
                                HdlValueId: WAIT_GNT
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlStmIf
                                            HdlValueId: branch_i
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: instr_req_o
                                                            HdlValueInt: 1
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: instr_addr_o
                                                            HdlOp: CONCAT
                                                                list: ops
                                                                    HdlOp: INDEX
                                                                        list: ops
                                                                            HdlValueId: addr_i
                                                                            HdlOp: DOWNTO
                                                                                list: ops
                                                                                    HdlValueInt: 31
                                                                                    HdlValueInt: 4
                                                                    HdlValueInt: 0000
                                                    HdlStmIf
                                                        HdlValueId: instr_gnt_i
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: NS
                                                                HdlValueId: WAIT_RVALID
                                                        list: elifs
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: NS
                                                                HdlValueId: WAIT_GNT
                                            list: elifs
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: instr_req_o
                                                            HdlValueInt: 1
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: instr_addr_o
                                                            HdlValueId: current_address
                                                    HdlStmIf
                                                        HdlValueId: instr_gnt_i
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: NS
                                                                HdlValueId: WAIT_RVALID
                                                        list: elifs
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: NS
                                                                HdlValueId: WAIT_GNT
                            tuple
                                HdlValueId: WAIT_ABORTED
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: clear_buffer
                                                HdlValueInt: 1
                                        HdlStmIf
                                            HdlValueId: instr_rvalid_i
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: instr_req_o
                                                            HdlValueInt: 1
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: instr_addr_o
                                                            HdlValueId: current_address
                                                    HdlStmIf
                                                        HdlValueId: instr_gnt_i
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: NS
                                                                HdlValueId: WAIT_RVALID
                                                        list: elifs
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: NS
                                                                HdlValueId: WAIT_GNT
                                            list: elifs
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: NS
                                                            HdlValueId: WAIT_ABORTED
                        HdlStmBlock: SEQ
                            list: body
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: NS
                                        HdlValueId: EMPTY
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: clear_buffer
                                        HdlValueInt: 1
            HdlStmProcessTriggerConstrain: COMB
        HdlStmProcess
            list: sensitivity
                HdlOp: RISING
                    list: ops
                        HdlValueId: clk
                HdlOp: FALLING
                    list: ops
                        HdlValueId: rst_n
            HdlStmBlock: SEQ
                list: body
                    HdlStmIf
                        HdlOp: EQ
                            list: ops
                                HdlValueId: rst_n
                                HdlValueInt: 0
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmAssign
                                    HdlValueInt: 0
                                    HdlValueId: valid_L0_buffer
                                HdlStmAssign
                                    HdlValueInt: 0
                                    HdlValueId: L0_buffer
                                HdlStmAssign
                                    HdlValueInt: 0
                                    HdlValueId: previous_chunk
                                HdlStmAssign
                                    HdlValueInt: 0
                                    HdlValueId: valid_previous_chunk
                        list: elifs
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmIf
                                    HdlOp: OR_LOG
                                        list: ops
                                            HdlValueId: branch_i
                                            HdlValueId: clear_buffer
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmAssign
                                                HdlValueInt: 0
                                                HdlValueId: valid_L0_buffer
                                            HdlStmAssign
                                                HdlValueInt: 0
                                                HdlValueId: valid_previous_chunk
                                    list: elifs
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmIf
                                                HdlValueId: instr_rvalid_i
                                                HdlStmBlock: SEQ
                                                    list: body
                                                        HdlStmAssign
                                                            HdlValueId: instr_rdata_i
                                                            HdlValueId: L0_buffer
                                                        HdlStmAssign
                                                            HdlValueInt: 1
                                                            HdlValueId: valid_L0_buffer
                                                        HdlStmIf
                                                            HdlValueId: valid_L0_buffer
                                                            HdlStmBlock: SEQ
                                                                list: body
                                                                    HdlStmAssign
                                                                        HdlValueInt: 1
                                                                        HdlValueId: valid_previous_chunk
                                                                    HdlStmAssign
                                                                        HdlOp: INDEX
                                                                            list: ops
                                                                                HdlOp: INDEX
                                                                                    list: ops
                                                                                        HdlValueId: L0_buffer
                                                                                        HdlValueInt: 3
                                                                                HdlOp: DOWNTO
                                                                                    list: ops
                                                                                        HdlValueInt: 31
                                                                                        HdlValueInt: 16
                                                                        HdlValueId: previous_chunk
                                                            list: elifs
                                                list: elifs
            HdlStmProcessTriggerConstrain: FF

DEL HdlIdDef@@previous_chunk from objs
HdlIdDef: previous_chunk
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 15
                    HdlValueInt: 0
    HdlDirection: INTERNAL


CommitId: cc90e854717023d3dd6bf126ba5e1cd7a9ea5db4
Fix RVC handling in prefetch_L0_buffer
--- a/prefetch_L0_buffer.sv
+++ b/prefetch_L0_buffer.sv
@@ -75,7 +76,9 @@ module prefetch_L0_buffer
     begin
       CS               <= EMPTY;
       current_address  <= '0;
+      last_address     <= '0;
       pointer_cs       <= '0;
+      is_prefetch_q    <= 1'b0;
     end
     else
     begin

ParseResult:
MOV HdlModuleDef@@prefetch_L0_buffer to objs
HdlModuleDef: prefetch_L0_buffer
    HdlModuleDec: prefetch_L0_buffer
        list: params
            HdlIdDef: RDATA_IN_WIDTH
                HdlValueInt: 128
                HdlDirection: INTERNAL
        list: ports
            HdlIdDef: clk
                HdlOp: PARAMETRIZATION
                    list: ops
                        HdlValueId: logic
                HdlDirection: IN
            HdlIdDef: rst_n
                HdlOp: PARAMETRIZATION
                    list: ops
                        HdlValueId: logic
                HdlDirection: IN
            HdlIdDef: req_i
                HdlOp: PARAMETRIZATION
                    list: ops
                        HdlValueId: logic
                HdlDirection: IN
            HdlIdDef: branch_i
                HdlOp: PARAMETRIZATION
                    list: ops
                        HdlValueId: logic
                HdlDirection: IN
            HdlIdDef: ready_i
                HdlOp: PARAMETRIZATION
                    list: ops
                        HdlValueId: logic
                HdlDirection: IN
            HdlIdDef: addr_i
                HdlOp: PARAMETRIZATION
                    list: ops
                        HdlValueId: logic
                        HdlOp: DOWNTO
                            list: ops
                                HdlValueInt: 31
                                HdlValueInt: 0
                HdlDirection: IN
            HdlIdDef: valid_o
                HdlOp: PARAMETRIZATION
                    list: ops
                        HdlValueId: logic
                HdlDirection: OUT
            HdlIdDef: rdata_o
                HdlOp: PARAMETRIZATION
                    list: ops
                        HdlValueId: logic
                        HdlOp: DOWNTO
                            list: ops
                                HdlValueInt: 31
                                HdlValueInt: 0
                HdlDirection: OUT
            HdlIdDef: addr_o
                HdlOp: PARAMETRIZATION
                    list: ops
                        HdlValueId: logic
                        HdlOp: DOWNTO
                            list: ops
                                HdlValueInt: 31
                                HdlValueInt: 0
                HdlDirection: OUT
            HdlIdDef: unaligned_valid_o
                HdlOp: PARAMETRIZATION
                    list: ops
                        HdlValueId: logic
                HdlDirection: OUT
            HdlIdDef: unaligned_rdata_o
                HdlOp: PARAMETRIZATION
                    list: ops
                        HdlValueId: logic
                        HdlOp: DOWNTO
                            list: ops
                                HdlValueInt: 31
                                HdlValueInt: 0
                HdlDirection: OUT
            HdlIdDef: instr_req_o
                HdlOp: PARAMETRIZATION
                    list: ops
                        HdlValueId: logic
                HdlDirection: OUT
            HdlIdDef: instr_addr_o
                HdlOp: PARAMETRIZATION
                    list: ops
                        HdlValueId: logic
                        HdlOp: DOWNTO
                            list: ops
                                HdlValueInt: 31
                                HdlValueInt: 0
                HdlDirection: OUT
            HdlIdDef: instr_gnt_i
                HdlOp: PARAMETRIZATION
                    list: ops
                        HdlValueId: logic
                HdlDirection: IN
            HdlIdDef: instr_rvalid_i
                HdlOp: PARAMETRIZATION
                    list: ops
                        HdlValueId: logic
                HdlDirection: IN
            HdlIdDef: instr_rdata_i
                HdlOp: INDEX
                    list: ops
                        HdlOp: PARAMETRIZATION
                            list: ops
                                HdlValueId: logic
                                HdlOp: DOWNTO
                                    list: ops
                                        HdlOp: SUB
                                            list: ops
                                                HdlOp: DIV
                                                    list: ops
                                                        HdlValueId: RDATA_IN_WIDTH
                                                        HdlValueInt: 32
                                                HdlValueInt: 1
                                        HdlValueInt: 0
                        HdlOp: DOWNTO
                            list: ops
                                HdlValueInt: 31
                                HdlValueInt: 0
                HdlDirection: IN
            HdlIdDef: busy_o
                HdlOp: PARAMETRIZATION
                    list: ops
                        HdlValueId: logic
                HdlDirection: OUT
        list: objs
    list: objs
        HdlIdDef: CS
            HdlExprNotImplemented: type
            HdlDirection: INTERNAL
        HdlIdDef: NS
            HdlExprNotImplemented: type
            HdlDirection: INTERNAL
        HdlIdDef: current_address
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: logic
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 31
                            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlIdDef: pointer_cs
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: logic
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 1
                            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlIdDef: pointer_ns
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: logic
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 1
                            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlIdDef: update_current_address
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: logic
            HdlDirection: INTERNAL
        HdlIdDef: L0_buffer
            HdlOp: INDEX
                list: ops
                    HdlOp: PARAMETRIZATION
                        list: ops
                            HdlValueId: logic
                            HdlOp: DOWNTO
                                list: ops
                                    HdlValueInt: 3
                                    HdlValueInt: 0
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 31
                            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlIdDef: valid_L0_buffer
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: logic
            HdlDirection: INTERNAL
        HdlIdDef: previous_chunk
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: logic
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 15
                            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlIdDef: valid_previous_chunk
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: logic
            HdlDirection: INTERNAL
        HdlIdDef: clear_buffer
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: logic
            HdlDirection: INTERNAL
        HdlStmAssign
            HdlOp: NE
                list: ops
                    HdlValueId: CS
                    HdlValueId: EMPTY
            HdlValueId: busy_o
        HdlStmProcess
            list: sensitivity
                HdlOp: RISING
                    list: ops
                        HdlValueId: clk
                HdlOp: FALLING
                    list: ops
                        HdlValueId: rst_n
            HdlStmBlock: SEQ
                list: body
                    HdlStmIf
                        HdlOp: NEG
                            list: ops
                                HdlValueId: rst_n
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmAssign
                                    HdlValueId: EMPTY
                                    HdlValueId: CS
                                HdlStmAssign
                                    HdlValueInt: 0
                                    HdlValueId: current_address
                                HdlStmAssign
                                    HdlValueInt: 0
                                    HdlValueId: pointer_cs
                        list: elifs
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmAssign
                                    HdlValueId: NS
                                    HdlValueId: CS
                                HdlStmIf
                                    HdlValueId: branch_i
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmAssign
                                                HdlOp: CONCAT
                                                    list: ops
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlValueId: addr_i
                                                                HdlOp: DOWNTO
                                                                    list: ops
                                                                        HdlValueInt: 31
                                                                        HdlValueInt: 4
                                                        HdlValueInt: 0000
                                                HdlValueId: current_address
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: addr_i
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 3
                                                                HdlValueInt: 2
                                                HdlValueId: pointer_cs
                                    list: elifs
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmIf
                                                HdlValueId: update_current_address
                                                HdlStmAssign: if_true
                                                    HdlOp: ADD
                                                        list: ops
                                                            HdlValueId: current_address
                                                            HdlValueInt: 10
                                                    HdlValueId: current_address
                                                list: elifs
                                            HdlStmAssign
                                                HdlValueId: pointer_ns
                                                HdlValueId: pointer_cs
            HdlStmProcessTriggerConstrain: FF
        HdlStmProcess
            HdlStmBlock: SEQ
                list: body
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: valid_o
                            HdlValueInt: 0
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: addr_o
                            HdlOp: ADD
                                list: ops
                                    HdlValueId: current_address
                                    HdlOp: SLL
                                        list: ops
                                            HdlValueId: pointer_cs
                                            HdlValueInt: 2
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: pointer_ns
                            HdlValueId: pointer_cs
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: instr_req_o
                            HdlValueInt: 0
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: instr_addr_o
                            HdlOp: TERNARY
                                list: ops
                                    HdlValueId: branch_i
                                    HdlValueId: addr_i
                                    HdlOp: ADD
                                        list: ops
                                            HdlValueId: current_address
                                            HdlValueInt: 10
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: update_current_address
                            HdlValueInt: 0
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: rdata_o
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: instr_rdata_i
                                    HdlValueId: pointer_cs
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: clear_buffer
                            HdlValueInt: 0
                    HdlStmCase: {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops':}]} 
                        HdlStmCaseType: CASE
                        HdlOp: INDEX
                            list: ops
                                HdlValueId: addr_o
                                HdlOp: DOWNTO
                                    list: ops
                                        HdlValueInt: 3
                                        HdlValueInt: 2
                        list: cases
                            tuple
                                HdlValueInt: 00
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: unaligned_rdata_o
                                                HdlOp: CONCAT
                                                    list: ops
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlOp: INDEX
                                                                    list: ops
                                                                        HdlValueId: L0_buffer
                                                                        HdlValueInt: 0
                                                                HdlOp: DOWNTO
                                                                    list: ops
                                                                        HdlValueInt: 15
                                                                        HdlValueInt: 0
                                                        HdlValueId: previous_chunk
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: unaligned_valid_o
                                                HdlValueId: valid_previous_chunk
                            tuple
                                HdlValueInt: 01
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: unaligned_rdata_o
                                                HdlOp: CONCAT
                                                    list: ops
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlOp: INDEX
                                                                    list: ops
                                                                        HdlValueId: L0_buffer
                                                                        HdlValueInt: 1
                                                                HdlOp: DOWNTO
                                                                    list: ops
                                                                        HdlValueInt: 15
                                                                        HdlValueInt: 0
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlOp: INDEX
                                                                    list: ops
                                                                        HdlValueId: L0_buffer
                                                                        HdlValueInt: 0
                                                                HdlOp: DOWNTO
                                                                    list: ops
                                                                        HdlValueInt: 31
                                                                        HdlValueInt: 16
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: unaligned_valid_o
                                                HdlValueId: valid_o
                            tuple
                                HdlValueInt: 10
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: unaligned_rdata_o
                                                HdlOp: CONCAT
                                                    list: ops
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlOp: INDEX
                                                                    list: ops
                                                                        HdlValueId: L0_buffer
                                                                        HdlValueInt: 2
                                                                HdlOp: DOWNTO
                                                                    list: ops
                                                                        HdlValueInt: 15
                                                                        HdlValueInt: 0
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlOp: INDEX
                                                                    list: ops
                                                                        HdlValueId: L0_buffer
                                                                        HdlValueInt: 1
                                                                HdlOp: DOWNTO
                                                                    list: ops
                                                                        HdlValueInt: 31
                                                                        HdlValueInt: 16
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: unaligned_valid_o
                                                HdlValueId: valid_o
                            tuple
                                HdlValueInt: 11
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: unaligned_rdata_o
                                                HdlOp: CONCAT
                                                    list: ops
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlOp: INDEX
                                                                    list: ops
                                                                        HdlValueId: L0_buffer
                                                                        HdlValueInt: 3
                                                                HdlOp: DOWNTO
                                                                    list: ops
                                                                        HdlValueInt: 15
                                                                        HdlValueInt: 0
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlOp: INDEX
                                                                    list: ops
                                                                        HdlValueId: L0_buffer
                                                                        HdlValueInt: 2
                                                                HdlOp: DOWNTO
                                                                    list: ops
                                                                        HdlValueInt: 31
                                                                        HdlValueInt: 16
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: unaligned_valid_o
                                                HdlValueId: valid_o
                    HdlStmCase: CS
                        HdlStmCaseType: CASE
                        HdlValueId: CS
                        list: cases
                            tuple
                                HdlValueId: EMPTY
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: instr_req_o
                                                HdlValueId: branch_i
                                        HdlStmIf
                                            HdlValueId: branch_i
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlStmIf
                                                        HdlValueId: instr_gnt_i
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: NS
                                                                HdlValueId: WAIT_RVALID
                                                        list: elifs
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: NS
                                                                HdlValueId: WAIT_GNT
                                            list: elifs
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: NS
                                                            HdlValueId: EMPTY
                            tuple
                                HdlValueId: WAIT_RVALID
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlStmIf
                                            HdlValueId: branch_i
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlStmIf
                                                        HdlValueId: instr_rvalid_i
                                                        HdlStmBlock: SEQ
                                                            list: body
                                                                HdlOp: ASSIGN
                                                                    list: ops
                                                                        HdlValueId: instr_req_o
                                                                        HdlValueInt: 1
                                                                HdlOp: ASSIGN
                                                                    list: ops
                                                                        HdlValueId: instr_addr_o
                                                                        HdlOp: CONCAT
                                                                            list: ops
                                                                                HdlOp: INDEX
                                                                                    list: ops
                                                                                        HdlValueId: addr_i
                                                                                        HdlOp: DOWNTO
                                                                                            list: ops
                                                                                                HdlValueInt: 31
                                                                                                HdlValueInt: 4
                                                                                HdlValueInt: 0000
                                                                HdlStmIf
                                                                    HdlValueId: instr_gnt_i
                                                                    HdlOp: ASSIGN
                                                                        list: ops
                                                                            HdlValueId: NS
                                                                            HdlValueId: WAIT_RVALID
                                                                    list: elifs
                                                                    HdlOp: ASSIGN
                                                                        list: ops
                                                                            HdlValueId: NS
                                                                            HdlValueId: WAIT_GNT
                                                        list: elifs
                                                        HdlStmBlock: SEQ
                                                            list: body
                                                                HdlOp: ASSIGN
                                                                    list: ops
                                                                        HdlValueId: NS
                                                                        HdlValueId: WAIT_ABORTED
                                            list: elifs
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: valid_o
                                                            HdlValueId: instr_rvalid_i
                                                    HdlStmCase: pointer_cs
                                                        HdlStmCaseType: CASE
                                                        HdlValueId: pointer_cs
                                                        list: cases
                                                            tuple
                                                                HdlValueInt: 00
                                                                HdlStmBlock: SEQ
                                                                    list: body
                                                                        HdlOp: ASSIGN
                                                                            list: ops
                                                                                HdlValueId: unaligned_rdata_o
                                                                                HdlOp: CONCAT
                                                                                    list: ops
                                                                                        HdlOp: INDEX
                                                                                            list: ops
                                                                                                HdlOp: INDEX
                                                                                                    list: ops
                                                                                                        HdlValueId: instr_rdata_i
                                                                                                        HdlValueInt: 0
                                                                                                HdlOp: DOWNTO
                                                                                                    list: ops
                                                                                                        HdlValueInt: 15
                                                                                                        HdlValueInt: 0
                                                                                        HdlOp: INDEX
                                                                                            list: ops
                                                                                                HdlOp: INDEX
                                                                                                    list: ops
                                                                                                        HdlValueId: L0_buffer
                                                                                                        HdlValueInt: 3
                                                                                                HdlOp: DOWNTO
                                                                                                    list: ops
                                                                                                        HdlValueInt: 31
                                                                                                        HdlValueInt: 16
                                                                        HdlStmIf
                                                                            HdlValueId: valid_L0_buffer
                                                                            HdlOp: ASSIGN
                                                                                list: ops
                                                                                    HdlValueId: unaligned_valid_o
                                                                                    HdlValueId: instr_rvalid_i
                                                                            list: elifs
                                                                            HdlOp: ASSIGN
                                                                                list: ops
                                                                                    HdlValueId: unaligned_valid_o
                                                                                    HdlValueInt: 0
                                                            tuple
                                                                HdlValueInt: 01
                                                                HdlStmBlock: SEQ
                                                                    list: body
                                                                        HdlOp: ASSIGN
                                                                            list: ops
                                                                                HdlValueId: unaligned_rdata_o
                                                                                HdlOp: CONCAT
                                                                                    list: ops
                                                                                        HdlOp: INDEX
                                                                                            list: ops
                                                                                                HdlOp: INDEX
                                                                                                    list: ops
                                                                                                        HdlValueId: instr_rdata_i
                                                                                                        HdlValueInt: 1
                                                                                                HdlOp: DOWNTO
                                                                                                    list: ops
                                                                                                        HdlValueInt: 15
                                                                                                        HdlValueInt: 0
                                                                                        HdlOp: INDEX
                                                                                            list: ops
                                                                                                HdlOp: INDEX
                                                                                                    list: ops
                                                                                                        HdlValueId: instr_rdata_i
                                                                                                        HdlValueInt: 0
                                                                                                HdlOp: DOWNTO
                                                                                                    list: ops
                                                                                                        HdlValueInt: 31
                                                                                                        HdlValueInt: 16
                                                                        HdlOp: ASSIGN
                                                                            list: ops
                                                                                HdlValueId: unaligned_valid_o
                                                                                HdlValueId: instr_rvalid_i
                                                            tuple
                                                                HdlValueInt: 10
                                                                HdlStmBlock: SEQ
                                                                    list: body
                                                                        HdlOp: ASSIGN
                                                                            list: ops
                                                                                HdlValueId: unaligned_rdata_o
                                                                                HdlOp: CONCAT
                                                                                    list: ops
                                                                                        HdlOp: INDEX
                                                                                            list: ops
                                                                                                HdlOp: INDEX
                                                                                                    list: ops
                                                                                                        HdlValueId: instr_rdata_i
                                                                                                        HdlValueInt: 2
                                                                                                HdlOp: DOWNTO
                                                                                                    list: ops
                                                                                                        HdlValueInt: 15
                                                                                                        HdlValueInt: 0
                                                                                        HdlOp: INDEX
                                                                                            list: ops
                                                                                                HdlOp: INDEX
                                                                                                    list: ops
                                                                                                        HdlValueId: instr_rdata_i
                                                                                                        HdlValueInt: 1
                                                                                                HdlOp: DOWNTO
                                                                                                    list: ops
                                                                                                        HdlValueInt: 31
                                                                                                        HdlValueInt: 16
                                                                        HdlOp: ASSIGN
                                                                            list: ops
                                                                                HdlValueId: unaligned_valid_o
                                                                                HdlValueId: instr_rvalid_i
                                                            tuple
                                                                HdlValueInt: 11
                                                                HdlStmBlock: SEQ
                                                                    list: body
                                                                        HdlOp: ASSIGN
                                                                            list: ops
                                                                                HdlValueId: unaligned_rdata_o
                                                                                HdlOp: CONCAT
                                                                                    list: ops
                                                                                        HdlOp: INDEX
                                                                                            list: ops
                                                                                                HdlOp: INDEX
                                                                                                    list: ops
                                                                                                        HdlValueId: instr_rdata_i
                                                                                                        HdlValueInt: 3
                                                                                                HdlOp: DOWNTO
                                                                                                    list: ops
                                                                                                        HdlValueInt: 15
                                                                                                        HdlValueInt: 0
                                                                                        HdlOp: INDEX
                                                                                            list: ops
                                                                                                HdlOp: INDEX
                                                                                                    list: ops
                                                                                                        HdlValueId: instr_rdata_i
                                                                                                        HdlValueInt: 2
                                                                                                HdlOp: DOWNTO
                                                                                                    list: ops
                                                                                                        HdlValueInt: 31
                                                                                                        HdlValueInt: 16
                                                                        HdlOp: ASSIGN
                                                                            list: ops
                                                                                HdlValueId: unaligned_valid_o
                                                                                HdlValueId: instr_rvalid_i
                                                    HdlStmIf
                                                        HdlValueId: instr_rvalid_i
                                                        HdlStmBlock: SEQ
                                                            list: body
                                                                HdlStmIf
                                                                    HdlOp: AND_UNARY
                                                                        list: ops
                                                                            HdlValueId: pointer_cs
                                                                    HdlStmBlock: SEQ
                                                                        list: body
                                                                            HdlStmIf
                                                                                HdlValueId: ready_i
                                                                                HdlStmBlock: SEQ
                                                                                    list: body
                                                                                        HdlOp: ASSIGN
                                                                                            list: ops
                                                                                                HdlValueId: instr_req_o
                                                                                                HdlValueInt: 1
                                                                                        HdlOp: ASSIGN
                                                                                            list: ops
                                                                                                HdlValueId: instr_addr_o
                                                                                                HdlOp: ADD
                                                                                                    list: ops
                                                                                                        HdlValueId: current_address
                                                                                                        HdlValueInt: 10
                                                                                        HdlOp: ASSIGN
                                                                                            list: ops
                                                                                                HdlValueId: pointer_ns
                                                                                                HdlValueInt: 0
                                                                                        HdlOp: ASSIGN
                                                                                            list: ops
                                                                                                HdlValueId: update_current_address
                                                                                                HdlValueInt: 1
                                                                                        HdlStmIf
                                                                                            HdlValueId: instr_gnt_i
                                                                                            HdlOp: ASSIGN
                                                                                                list: ops
                                                                                                    HdlValueId: NS
                                                                                                    HdlValueId: WAIT_RVALID
                                                                                            list: elifs
                                                                                            HdlOp: ASSIGN
                                                                                                list: ops
                                                                                                    HdlValueId: NS
                                                                                                    HdlValueId: WAIT_GNT
                                                                                list: elifs
                                                                                HdlStmBlock: SEQ
                                                                                    list: body
                                                                                        HdlOp: ASSIGN
                                                                                            list: ops
                                                                                                HdlValueId: NS
                                                                                                HdlValueId: VALID_L0
                                                                    list: elifs
                                                                    HdlStmBlock: SEQ
                                                                        list: body
                                                                            HdlOp: ASSIGN
                                                                                list: ops
                                                                                    HdlValueId: NS
                                                                                    HdlValueId: VALID_L0
                                                                            HdlStmIf
                                                                                HdlValueId: ready_i
                                                                                HdlOp: ASSIGN
                                                                                    list: ops
                                                                                        HdlValueId: pointer_ns
                                                                                        HdlOp: ADD
                                                                                            list: ops
                                                                                                HdlValueId: pointer_cs
                                                                                                HdlValueInt: 1
                                                                                list: elifs
                                                                                HdlOp: ASSIGN
                                                                                    list: ops
                                                                                        HdlValueId: pointer_ns
                                                                                        HdlValueId: pointer_cs
                                                        list: elifs
                                                        HdlStmBlock: SEQ
                                                            list: body
                                                                HdlOp: ASSIGN
                                                                    list: ops
                                                                        HdlValueId: NS
                                                                        HdlValueId: WAIT_RVALID
                            tuple
                                HdlValueId: VALID_L0
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: valid_o
                                                HdlValueInt: 1
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: rdata_o
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: L0_buffer
                                                        HdlValueId: pointer_cs
                                        HdlStmCase: pointer_cs
                                            HdlStmCaseType: CASE
                                            HdlValueId: pointer_cs
                                            list: cases
                                                tuple
                                                    HdlValueInt: 00
                                                    HdlStmBlock: SEQ
                                                        list: body
                                                            HdlOp: ASSIGN
                                                                list: ops
                                                                    HdlValueId: unaligned_rdata_o
                                                                    HdlOp: CONCAT
                                                                        list: ops
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlOp: INDEX
                                                                                        list: ops
                                                                                            HdlValueId: L0_buffer
                                                                                            HdlValueInt: 0
                                                                                    HdlOp: DOWNTO
                                                                                        list: ops
                                                                                            HdlValueInt: 15
                                                                                            HdlValueInt: 0
                                                                            HdlValueId: previous_chunk
                                                            HdlOp: ASSIGN
                                                                list: ops
                                                                    HdlValueId: unaligned_valid_o
                                                                    HdlValueId: valid_previous_chunk
                                                tuple
                                                    HdlValueInt: 01
                                                    HdlStmBlock: SEQ
                                                        list: body
                                                            HdlOp: ASSIGN
                                                                list: ops
                                                                    HdlValueId: unaligned_rdata_o
                                                                    HdlOp: CONCAT
                                                                        list: ops
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlOp: INDEX
                                                                                        list: ops
                                                                                            HdlValueId: L0_buffer
                                                                                            HdlValueInt: 1
                                                                                    HdlOp: DOWNTO
                                                                                        list: ops
                                                                                            HdlValueInt: 15
                                                                                            HdlValueInt: 0
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlOp: INDEX
                                                                                        list: ops
                                                                                            HdlValueId: L0_buffer
                                                                                            HdlValueInt: 0
                                                                                    HdlOp: DOWNTO
                                                                                        list: ops
                                                                                            HdlValueInt: 31
                                                                                            HdlValueInt: 16
                                                            HdlOp: ASSIGN
                                                                list: ops
                                                                    HdlValueId: unaligned_valid_o
                                                                    HdlValueInt: 1
                                                tuple
                                                    HdlValueInt: 10
                                                    HdlStmBlock: SEQ
                                                        list: body
                                                            HdlOp: ASSIGN
                                                                list: ops
                                                                    HdlValueId: unaligned_rdata_o
                                                                    HdlOp: CONCAT
                                                                        list: ops
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlOp: INDEX
                                                                                        list: ops
                                                                                            HdlValueId: L0_buffer
                                                                                            HdlValueInt: 2
                                                                                    HdlOp: DOWNTO
                                                                                        list: ops
                                                                                            HdlValueInt: 15
                                                                                            HdlValueInt: 0
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlOp: INDEX
                                                                                        list: ops
                                                                                            HdlValueId: L0_buffer
                                                                                            HdlValueInt: 1
                                                                                    HdlOp: DOWNTO
                                                                                        list: ops
                                                                                            HdlValueInt: 31
                                                                                            HdlValueInt: 16
                                                            HdlOp: ASSIGN
                                                                list: ops
                                                                    HdlValueId: unaligned_valid_o
                                                                    HdlValueInt: 1
                                                tuple
                                                    HdlValueInt: 11
                                                    HdlStmBlock: SEQ
                                                        list: body
                                                            HdlOp: ASSIGN
                                                                list: ops
                                                                    HdlValueId: unaligned_rdata_o
                                                                    HdlOp: CONCAT
                                                                        list: ops
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlOp: INDEX
                                                                                        list: ops
                                                                                            HdlValueId: L0_buffer
                                                                                            HdlValueInt: 3
                                                                                    HdlOp: DOWNTO
                                                                                        list: ops
                                                                                            HdlValueInt: 15
                                                                                            HdlValueInt: 0
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlOp: INDEX
                                                                                        list: ops
                                                                                            HdlValueId: L0_buffer
                                                                                            HdlValueInt: 2
                                                                                    HdlOp: DOWNTO
                                                                                        list: ops
                                                                                            HdlValueInt: 31
                                                                                            HdlValueInt: 16
                                                            HdlOp: ASSIGN
                                                                list: ops
                                                                    HdlValueId: unaligned_valid_o
                                                                    HdlValueInt: 1
                                        HdlStmIf
                                            HdlValueId: branch_i
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: instr_req_o
                                                            HdlValueInt: 1
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: instr_addr_o
                                                            HdlOp: CONCAT
                                                                list: ops
                                                                    HdlOp: INDEX
                                                                        list: ops
                                                                            HdlValueId: addr_i
                                                                            HdlOp: DOWNTO
                                                                                list: ops
                                                                                    HdlValueInt: 31
                                                                                    HdlValueInt: 4
                                                                    HdlValueInt: 0000
                                                    HdlStmIf
                                                        HdlValueId: instr_gnt_i
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: NS
                                                                HdlValueId: WAIT_RVALID
                                                        list: elifs
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: NS
                                                                HdlValueId: WAIT_GNT
                                            list: elifs
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlStmIf
                                                        HdlValueId: ready_i
                                                        HdlStmBlock: SEQ
                                                            list: body
                                                                HdlStmIf
                                                                    HdlOp: AND_UNARY
                                                                        list: ops
                                                                            HdlValueId: pointer_cs
                                                                    HdlStmBlock: SEQ
                                                                        list: body
                                                                            HdlOp: ASSIGN
                                                                                list: ops
                                                                                    HdlValueId: instr_req_o
                                                                                    HdlValueInt: 1
                                                                            HdlOp: ASSIGN
                                                                                list: ops
                                                                                    HdlValueId: instr_addr_o
                                                                                    HdlOp: ADD
                                                                                        list: ops
                                                                                            HdlValueId: current_address
                                                                                            HdlValueInt: 10
                                                                            HdlOp: ASSIGN
                                                                                list: ops
                                                                                    HdlValueId: update_current_address
                                                                                    HdlValueInt: 1
                                                                            HdlOp: ASSIGN
                                                                                list: ops
                                                                                    HdlValueId: pointer_ns
                                                                                    HdlValueInt: 0
                                                                            HdlStmIf
                                                                                HdlValueId: instr_gnt_i
                                                                                HdlOp: ASSIGN
                                                                                    list: ops
                                                                                        HdlValueId: NS
                                                                                        HdlValueId: WAIT_RVALID
                                                                                list: elifs
                                                                                HdlOp: ASSIGN
                                                                                    list: ops
                                                                                        HdlValueId: NS
                                                                                        HdlValueId: WAIT_GNT
                                                                    list: elifs
                                                                    HdlStmBlock: SEQ
                                                                        list: body
                                                                            HdlOp: ASSIGN
                                                                                list: ops
                                                                                    HdlValueId: pointer_ns
                                                                                    HdlOp: ADD
                                                                                        list: ops
                                                                                            HdlValueId: pointer_cs
                                                                                            HdlValueInt: 1
                                                                            HdlOp: ASSIGN
                                                                                list: ops
                                                                                    HdlValueId: NS
                                                                                    HdlValueId: VALID_L0
                                                        list: elifs
                                                        HdlStmBlock: SEQ
                                                            list: body
                                                                HdlOp: ASSIGN
                                                                    list: ops
                                                                        HdlValueId: NS
                                                                        HdlValueId: VALID_L0
                            tuple
                                HdlValueId: WAIT_GNT
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlStmIf
                                            HdlValueId: branch_i
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: instr_req_o
                                                            HdlValueInt: 1
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: instr_addr_o
                                                            HdlOp: CONCAT
                                                                list: ops
                                                                    HdlOp: INDEX
                                                                        list: ops
                                                                            HdlValueId: addr_i
                                                                            HdlOp: DOWNTO
                                                                                list: ops
                                                                                    HdlValueInt: 31
                                                                                    HdlValueInt: 4
                                                                    HdlValueInt: 0000
                                                    HdlStmIf
                                                        HdlValueId: instr_gnt_i
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: NS
                                                                HdlValueId: WAIT_RVALID
                                                        list: elifs
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: NS
                                                                HdlValueId: WAIT_GNT
                                            list: elifs
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: instr_req_o
                                                            HdlValueInt: 1
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: instr_addr_o
                                                            HdlValueId: current_address
                                                    HdlStmIf
                                                        HdlValueId: instr_gnt_i
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: NS
                                                                HdlValueId: WAIT_RVALID
                                                        list: elifs
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: NS
                                                                HdlValueId: WAIT_GNT
                            tuple
                                HdlValueId: WAIT_ABORTED
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: clear_buffer
                                                HdlValueInt: 1
                                        HdlStmIf
                                            HdlValueId: instr_rvalid_i
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: instr_req_o
                                                            HdlValueInt: 1
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: instr_addr_o
                                                            HdlValueId: current_address
                                                    HdlStmIf
                                                        HdlValueId: instr_gnt_i
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: NS
                                                                HdlValueId: WAIT_RVALID
                                                        list: elifs
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: NS
                                                                HdlValueId: WAIT_GNT
                                            list: elifs
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: NS
                                                            HdlValueId: WAIT_ABORTED
                        HdlStmBlock: SEQ
                            list: body
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: NS
                                        HdlValueId: EMPTY
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: clear_buffer
                                        HdlValueInt: 1
            HdlStmProcessTriggerConstrain: COMB
        HdlStmProcess
            list: sensitivity
                HdlOp: RISING
                    list: ops
                        HdlValueId: clk
                HdlOp: FALLING
                    list: ops
                        HdlValueId: rst_n
            HdlStmBlock: SEQ
                list: body
                    HdlStmIf
                        HdlOp: EQ
                            list: ops
                                HdlValueId: rst_n
                                HdlValueInt: 0
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmAssign
                                    HdlValueInt: 0
                                    HdlValueId: valid_L0_buffer
                                HdlStmAssign
                                    HdlValueInt: 0
                                    HdlValueId: L0_buffer
                                HdlStmAssign
                                    HdlValueInt: 0
                                    HdlValueId: previous_chunk
                                HdlStmAssign
                                    HdlValueInt: 0
                                    HdlValueId: valid_previous_chunk
                        list: elifs
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmIf
                                    HdlOp: OR_LOG
                                        list: ops
                                            HdlValueId: branch_i
                                            HdlValueId: clear_buffer
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmAssign
                                                HdlValueInt: 0
                                                HdlValueId: valid_L0_buffer
                                            HdlStmAssign
                                                HdlValueInt: 0
                                                HdlValueId: valid_previous_chunk
                                    list: elifs
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmIf
                                                HdlValueId: instr_rvalid_i
                                                HdlStmBlock: SEQ
                                                    list: body
                                                        HdlStmAssign
                                                            HdlValueId: instr_rdata_i
                                                            HdlValueId: L0_buffer
                                                        HdlStmAssign
                                                            HdlValueInt: 1
                                                            HdlValueId: valid_L0_buffer
                                                        HdlStmIf
                                                            HdlValueId: valid_L0_buffer
                                                            HdlStmBlock: SEQ
                                                                list: body
                                                                    HdlStmAssign
                                                                        HdlValueInt: 1
                                                                        HdlValueId: valid_previous_chunk
                                                                    HdlStmAssign
                                                                        HdlOp: INDEX
                                                                            list: ops
                                                                                HdlOp: INDEX
                                                                                    list: ops
                                                                                        HdlValueId: L0_buffer
                                                                                        HdlValueInt: 3
                                                                                HdlOp: DOWNTO
                                                                                    list: ops
                                                                                        HdlValueInt: 31
                                                                                        HdlValueInt: 16
                                                                        HdlValueId: previous_chunk
                                                            list: elifs
                                                list: elifs
            HdlStmProcessTriggerConstrain: FF

MOV HdlStmProcess@@ to objs
HdlStmProcess
    list: sensitivity
        HdlOp: RISING
            list: ops
                HdlValueId: clk
        HdlOp: FALLING
            list: ops
                HdlValueId: rst_n
    HdlStmBlock: SEQ
        list: body
            HdlStmIf
                HdlOp: NEG
                    list: ops
                        HdlValueId: rst_n
                HdlStmBlock: SEQ
                    list: body
                        HdlStmAssign
                            HdlValueId: EMPTY
                            HdlValueId: CS
                        HdlStmAssign
                            HdlValueInt: 0
                            HdlValueId: current_address
                        HdlStmAssign
                            HdlValueInt: 0
                            HdlValueId: pointer_cs
                list: elifs
                HdlStmBlock: SEQ
                    list: body
                        HdlStmAssign
                            HdlValueId: NS
                            HdlValueId: CS
                        HdlStmIf
                            HdlValueId: branch_i
                            HdlStmBlock: SEQ
                                list: body
                                    HdlStmAssign
                                        HdlOp: CONCAT
                                            list: ops
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: addr_i
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 31
                                                                HdlValueInt: 4
                                                HdlValueInt: 0000
                                        HdlValueId: current_address
                                    HdlStmAssign
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: addr_i
                                                HdlOp: DOWNTO
                                                    list: ops
                                                        HdlValueInt: 3
                                                        HdlValueInt: 2
                                        HdlValueId: pointer_cs
                            list: elifs
                            HdlStmBlock: SEQ
                                list: body
                                    HdlStmIf
                                        HdlValueId: update_current_address
                                        HdlStmAssign: if_true
                                            HdlOp: ADD
                                                list: ops
                                                    HdlValueId: current_address
                                                    HdlValueInt: 10
                                            HdlValueId: current_address
                                        list: elifs
                                    HdlStmAssign
                                        HdlValueId: pointer_ns
                                        HdlValueId: pointer_cs
    HdlStmProcessTriggerConstrain: FF

UPD HdlModuleDef@@prefetch_L0_buffer to prefetch_L0_buffer
    UPD list@@objs to body
    MOV list@@objs to prefetch_L0_buffer
    list: objs
        HdlIdDef: CS
            HdlExprNotImplemented: type
            HdlDirection: INTERNAL
        HdlIdDef: NS
            HdlExprNotImplemented: type
            HdlDirection: INTERNAL
        HdlIdDef: current_address
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: logic
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 31
                            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlIdDef: pointer_cs
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: logic
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 1
                            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlIdDef: pointer_ns
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: logic
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 1
                            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlIdDef: update_current_address
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: logic
            HdlDirection: INTERNAL
        HdlIdDef: L0_buffer
            HdlOp: INDEX
                list: ops
                    HdlOp: PARAMETRIZATION
                        list: ops
                            HdlValueId: logic
                            HdlOp: DOWNTO
                                list: ops
                                    HdlValueInt: 3
                                    HdlValueInt: 0
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 31
                            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlIdDef: valid_L0_buffer
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: logic
            HdlDirection: INTERNAL
        HdlIdDef: previous_chunk
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: logic
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 15
                            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlIdDef: valid_previous_chunk
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: logic
            HdlDirection: INTERNAL
        HdlIdDef: clear_buffer
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: logic
            HdlDirection: INTERNAL
        HdlStmAssign
            HdlOp: NE
                list: ops
                    HdlValueId: CS
                    HdlValueId: EMPTY
            HdlValueId: busy_o
        HdlStmProcess
            list: sensitivity
                HdlOp: RISING
                    list: ops
                        HdlValueId: clk
                HdlOp: FALLING
                    list: ops
                        HdlValueId: rst_n
            HdlStmBlock: SEQ
                list: body
                    HdlStmIf
                        HdlOp: NEG
                            list: ops
                                HdlValueId: rst_n
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmAssign
                                    HdlValueId: EMPTY
                                    HdlValueId: CS
                                HdlStmAssign
                                    HdlValueInt: 0
                                    HdlValueId: current_address
                                HdlStmAssign
                                    HdlValueInt: 0
                                    HdlValueId: pointer_cs
                        list: elifs
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmAssign
                                    HdlValueId: NS
                                    HdlValueId: CS
                                HdlStmIf
                                    HdlValueId: branch_i
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmAssign
                                                HdlOp: CONCAT
                                                    list: ops
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlValueId: addr_i
                                                                HdlOp: DOWNTO
                                                                    list: ops
                                                                        HdlValueInt: 31
                                                                        HdlValueInt: 4
                                                        HdlValueInt: 0000
                                                HdlValueId: current_address
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: addr_i
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 3
                                                                HdlValueInt: 2
                                                HdlValueId: pointer_cs
                                    list: elifs
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmIf
                                                HdlValueId: update_current_address
                                                HdlStmAssign: if_true
                                                    HdlOp: ADD
                                                        list: ops
                                                            HdlValueId: current_address
                                                            HdlValueInt: 10
                                                    HdlValueId: current_address
                                                list: elifs
                                            HdlStmAssign
                                                HdlValueId: pointer_ns
                                                HdlValueId: pointer_cs
            HdlStmProcessTriggerConstrain: FF
        HdlStmProcess
            HdlStmBlock: SEQ
                list: body
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: valid_o
                            HdlValueInt: 0
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: addr_o
                            HdlOp: ADD
                                list: ops
                                    HdlValueId: current_address
                                    HdlOp: SLL
                                        list: ops
                                            HdlValueId: pointer_cs
                                            HdlValueInt: 2
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: pointer_ns
                            HdlValueId: pointer_cs
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: instr_req_o
                            HdlValueInt: 0
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: instr_addr_o
                            HdlOp: TERNARY
                                list: ops
                                    HdlValueId: branch_i
                                    HdlValueId: addr_i
                                    HdlOp: ADD
                                        list: ops
                                            HdlValueId: current_address
                                            HdlValueInt: 10
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: update_current_address
                            HdlValueInt: 0
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: rdata_o
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: instr_rdata_i
                                    HdlValueId: pointer_cs
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: clear_buffer
                            HdlValueInt: 0
                    HdlStmCase: {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops':}]} 
                        HdlStmCaseType: CASE
                        HdlOp: INDEX
                            list: ops
                                HdlValueId: addr_o
                                HdlOp: DOWNTO
                                    list: ops
                                        HdlValueInt: 3
                                        HdlValueInt: 2
                        list: cases
                            tuple
                                HdlValueInt: 00
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: unaligned_rdata_o
                                                HdlOp: CONCAT
                                                    list: ops
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlOp: INDEX
                                                                    list: ops
                                                                        HdlValueId: L0_buffer
                                                                        HdlValueInt: 0
                                                                HdlOp: DOWNTO
                                                                    list: ops
                                                                        HdlValueInt: 15
                                                                        HdlValueInt: 0
                                                        HdlValueId: previous_chunk
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: unaligned_valid_o
                                                HdlValueId: valid_previous_chunk
                            tuple
                                HdlValueInt: 01
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: unaligned_rdata_o
                                                HdlOp: CONCAT
                                                    list: ops
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlOp: INDEX
                                                                    list: ops
                                                                        HdlValueId: L0_buffer
                                                                        HdlValueInt: 1
                                                                HdlOp: DOWNTO
                                                                    list: ops
                                                                        HdlValueInt: 15
                                                                        HdlValueInt: 0
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlOp: INDEX
                                                                    list: ops
                                                                        HdlValueId: L0_buffer
                                                                        HdlValueInt: 0
                                                                HdlOp: DOWNTO
                                                                    list: ops
                                                                        HdlValueInt: 31
                                                                        HdlValueInt: 16
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: unaligned_valid_o
                                                HdlValueId: valid_o
                            tuple
                                HdlValueInt: 10
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: unaligned_rdata_o
                                                HdlOp: CONCAT
                                                    list: ops
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlOp: INDEX
                                                                    list: ops
                                                                        HdlValueId: L0_buffer
                                                                        HdlValueInt: 2
                                                                HdlOp: DOWNTO
                                                                    list: ops
                                                                        HdlValueInt: 15
                                                                        HdlValueInt: 0
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlOp: INDEX
                                                                    list: ops
                                                                        HdlValueId: L0_buffer
                                                                        HdlValueInt: 1
                                                                HdlOp: DOWNTO
                                                                    list: ops
                                                                        HdlValueInt: 31
                                                                        HdlValueInt: 16
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: unaligned_valid_o
                                                HdlValueId: valid_o
                            tuple
                                HdlValueInt: 11
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: unaligned_rdata_o
                                                HdlOp: CONCAT
                                                    list: ops
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlOp: INDEX
                                                                    list: ops
                                                                        HdlValueId: L0_buffer
                                                                        HdlValueInt: 3
                                                                HdlOp: DOWNTO
                                                                    list: ops
                                                                        HdlValueInt: 15
                                                                        HdlValueInt: 0
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlOp: INDEX
                                                                    list: ops
                                                                        HdlValueId: L0_buffer
                                                                        HdlValueInt: 2
                                                                HdlOp: DOWNTO
                                                                    list: ops
                                                                        HdlValueInt: 31
                                                                        HdlValueInt: 16
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: unaligned_valid_o
                                                HdlValueId: valid_o
                    HdlStmCase: CS
                        HdlStmCaseType: CASE
                        HdlValueId: CS
                        list: cases
                            tuple
                                HdlValueId: EMPTY
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: instr_req_o
                                                HdlValueId: branch_i
                                        HdlStmIf
                                            HdlValueId: branch_i
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlStmIf
                                                        HdlValueId: instr_gnt_i
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: NS
                                                                HdlValueId: WAIT_RVALID
                                                        list: elifs
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: NS
                                                                HdlValueId: WAIT_GNT
                                            list: elifs
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: NS
                                                            HdlValueId: EMPTY
                            tuple
                                HdlValueId: WAIT_RVALID
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlStmIf
                                            HdlValueId: branch_i
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlStmIf
                                                        HdlValueId: instr_rvalid_i
                                                        HdlStmBlock: SEQ
                                                            list: body
                                                                HdlOp: ASSIGN
                                                                    list: ops
                                                                        HdlValueId: instr_req_o
                                                                        HdlValueInt: 1
                                                                HdlOp: ASSIGN
                                                                    list: ops
                                                                        HdlValueId: instr_addr_o
                                                                        HdlOp: CONCAT
                                                                            list: ops
                                                                                HdlOp: INDEX
                                                                                    list: ops
                                                                                        HdlValueId: addr_i
                                                                                        HdlOp: DOWNTO
                                                                                            list: ops
                                                                                                HdlValueInt: 31
                                                                                                HdlValueInt: 4
                                                                                HdlValueInt: 0000
                                                                HdlStmIf
                                                                    HdlValueId: instr_gnt_i
                                                                    HdlOp: ASSIGN
                                                                        list: ops
                                                                            HdlValueId: NS
                                                                            HdlValueId: WAIT_RVALID
                                                                    list: elifs
                                                                    HdlOp: ASSIGN
                                                                        list: ops
                                                                            HdlValueId: NS
                                                                            HdlValueId: WAIT_GNT
                                                        list: elifs
                                                        HdlStmBlock: SEQ
                                                            list: body
                                                                HdlOp: ASSIGN
                                                                    list: ops
                                                                        HdlValueId: NS
                                                                        HdlValueId: WAIT_ABORTED
                                            list: elifs
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: valid_o
                                                            HdlValueId: instr_rvalid_i
                                                    HdlStmCase: pointer_cs
                                                        HdlStmCaseType: CASE
                                                        HdlValueId: pointer_cs
                                                        list: cases
                                                            tuple
                                                                HdlValueInt: 00
                                                                HdlStmBlock: SEQ
                                                                    list: body
                                                                        HdlOp: ASSIGN
                                                                            list: ops
                                                                                HdlValueId: unaligned_rdata_o
                                                                                HdlOp: CONCAT
                                                                                    list: ops
                                                                                        HdlOp: INDEX
                                                                                            list: ops
                                                                                                HdlOp: INDEX
                                                                                                    list: ops
                                                                                                        HdlValueId: instr_rdata_i
                                                                                                        HdlValueInt: 0
                                                                                                HdlOp: DOWNTO
                                                                                                    list: ops
                                                                                                        HdlValueInt: 15
                                                                                                        HdlValueInt: 0
                                                                                        HdlOp: INDEX
                                                                                            list: ops
                                                                                                HdlOp: INDEX
                                                                                                    list: ops
                                                                                                        HdlValueId: L0_buffer
                                                                                                        HdlValueInt: 3
                                                                                                HdlOp: DOWNTO
                                                                                                    list: ops
                                                                                                        HdlValueInt: 31
                                                                                                        HdlValueInt: 16
                                                                        HdlStmIf
                                                                            HdlValueId: valid_L0_buffer
                                                                            HdlOp: ASSIGN
                                                                                list: ops
                                                                                    HdlValueId: unaligned_valid_o
                                                                                    HdlValueId: instr_rvalid_i
                                                                            list: elifs
                                                                            HdlOp: ASSIGN
                                                                                list: ops
                                                                                    HdlValueId: unaligned_valid_o
                                                                                    HdlValueInt: 0
                                                            tuple
                                                                HdlValueInt: 01
                                                                HdlStmBlock: SEQ
                                                                    list: body
                                                                        HdlOp: ASSIGN
                                                                            list: ops
                                                                                HdlValueId: unaligned_rdata_o
                                                                                HdlOp: CONCAT
                                                                                    list: ops
                                                                                        HdlOp: INDEX
                                                                                            list: ops
                                                                                                HdlOp: INDEX
                                                                                                    list: ops
                                                                                                        HdlValueId: instr_rdata_i
                                                                                                        HdlValueInt: 1
                                                                                                HdlOp: DOWNTO
                                                                                                    list: ops
                                                                                                        HdlValueInt: 15
                                                                                                        HdlValueInt: 0
                                                                                        HdlOp: INDEX
                                                                                            list: ops
                                                                                                HdlOp: INDEX
                                                                                                    list: ops
                                                                                                        HdlValueId: instr_rdata_i
                                                                                                        HdlValueInt: 0
                                                                                                HdlOp: DOWNTO
                                                                                                    list: ops
                                                                                                        HdlValueInt: 31
                                                                                                        HdlValueInt: 16
                                                                        HdlOp: ASSIGN
                                                                            list: ops
                                                                                HdlValueId: unaligned_valid_o
                                                                                HdlValueId: instr_rvalid_i
                                                            tuple
                                                                HdlValueInt: 10
                                                                HdlStmBlock: SEQ
                                                                    list: body
                                                                        HdlOp: ASSIGN
                                                                            list: ops
                                                                                HdlValueId: unaligned_rdata_o
                                                                                HdlOp: CONCAT
                                                                                    list: ops
                                                                                        HdlOp: INDEX
                                                                                            list: ops
                                                                                                HdlOp: INDEX
                                                                                                    list: ops
                                                                                                        HdlValueId: instr_rdata_i
                                                                                                        HdlValueInt: 2
                                                                                                HdlOp: DOWNTO
                                                                                                    list: ops
                                                                                                        HdlValueInt: 15
                                                                                                        HdlValueInt: 0
                                                                                        HdlOp: INDEX
                                                                                            list: ops
                                                                                                HdlOp: INDEX
                                                                                                    list: ops
                                                                                                        HdlValueId: instr_rdata_i
                                                                                                        HdlValueInt: 1
                                                                                                HdlOp: DOWNTO
                                                                                                    list: ops
                                                                                                        HdlValueInt: 31
                                                                                                        HdlValueInt: 16
                                                                        HdlOp: ASSIGN
                                                                            list: ops
                                                                                HdlValueId: unaligned_valid_o
                                                                                HdlValueId: instr_rvalid_i
                                                            tuple
                                                                HdlValueInt: 11
                                                                HdlStmBlock: SEQ
                                                                    list: body
                                                                        HdlOp: ASSIGN
                                                                            list: ops
                                                                                HdlValueId: unaligned_rdata_o
                                                                                HdlOp: CONCAT
                                                                                    list: ops
                                                                                        HdlOp: INDEX
                                                                                            list: ops
                                                                                                HdlOp: INDEX
                                                                                                    list: ops
                                                                                                        HdlValueId: instr_rdata_i
                                                                                                        HdlValueInt: 3
                                                                                                HdlOp: DOWNTO
                                                                                                    list: ops
                                                                                                        HdlValueInt: 15
                                                                                                        HdlValueInt: 0
                                                                                        HdlOp: INDEX
                                                                                            list: ops
                                                                                                HdlOp: INDEX
                                                                                                    list: ops
                                                                                                        HdlValueId: instr_rdata_i
                                                                                                        HdlValueInt: 2
                                                                                                HdlOp: DOWNTO
                                                                                                    list: ops
                                                                                                        HdlValueInt: 31
                                                                                                        HdlValueInt: 16
                                                                        HdlOp: ASSIGN
                                                                            list: ops
                                                                                HdlValueId: unaligned_valid_o
                                                                                HdlValueId: instr_rvalid_i
                                                    HdlStmIf
                                                        HdlValueId: instr_rvalid_i
                                                        HdlStmBlock: SEQ
                                                            list: body
                                                                HdlStmIf
                                                                    HdlOp: AND_UNARY
                                                                        list: ops
                                                                            HdlValueId: pointer_cs
                                                                    HdlStmBlock: SEQ
                                                                        list: body
                                                                            HdlStmIf
                                                                                HdlValueId: ready_i
                                                                                HdlStmBlock: SEQ
                                                                                    list: body
                                                                                        HdlOp: ASSIGN
                                                                                            list: ops
                                                                                                HdlValueId: instr_req_o
                                                                                                HdlValueInt: 1
                                                                                        HdlOp: ASSIGN
                                                                                            list: ops
                                                                                                HdlValueId: instr_addr_o
                                                                                                HdlOp: ADD
                                                                                                    list: ops
                                                                                                        HdlValueId: current_address
                                                                                                        HdlValueInt: 10
                                                                                        HdlOp: ASSIGN
                                                                                            list: ops
                                                                                                HdlValueId: pointer_ns
                                                                                                HdlValueInt: 0
                                                                                        HdlOp: ASSIGN
                                                                                            list: ops
                                                                                                HdlValueId: update_current_address
                                                                                                HdlValueInt: 1
                                                                                        HdlStmIf
                                                                                            HdlValueId: instr_gnt_i
                                                                                            HdlOp: ASSIGN
                                                                                                list: ops
                                                                                                    HdlValueId: NS
                                                                                                    HdlValueId: WAIT_RVALID
                                                                                            list: elifs
                                                                                            HdlOp: ASSIGN
                                                                                                list: ops
                                                                                                    HdlValueId: NS
                                                                                                    HdlValueId: WAIT_GNT
                                                                                list: elifs
                                                                                HdlStmBlock: SEQ
                                                                                    list: body
                                                                                        HdlOp: ASSIGN
                                                                                            list: ops
                                                                                                HdlValueId: NS
                                                                                                HdlValueId: VALID_L0
                                                                    list: elifs
                                                                    HdlStmBlock: SEQ
                                                                        list: body
                                                                            HdlOp: ASSIGN
                                                                                list: ops
                                                                                    HdlValueId: NS
                                                                                    HdlValueId: VALID_L0
                                                                            HdlStmIf
                                                                                HdlValueId: ready_i
                                                                                HdlOp: ASSIGN
                                                                                    list: ops
                                                                                        HdlValueId: pointer_ns
                                                                                        HdlOp: ADD
                                                                                            list: ops
                                                                                                HdlValueId: pointer_cs
                                                                                                HdlValueInt: 1
                                                                                list: elifs
                                                                                HdlOp: ASSIGN
                                                                                    list: ops
                                                                                        HdlValueId: pointer_ns
                                                                                        HdlValueId: pointer_cs
                                                        list: elifs
                                                        HdlStmBlock: SEQ
                                                            list: body
                                                                HdlOp: ASSIGN
                                                                    list: ops
                                                                        HdlValueId: NS
                                                                        HdlValueId: WAIT_RVALID
                            tuple
                                HdlValueId: VALID_L0
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: valid_o
                                                HdlValueInt: 1
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: rdata_o
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: L0_buffer
                                                        HdlValueId: pointer_cs
                                        HdlStmCase: pointer_cs
                                            HdlStmCaseType: CASE
                                            HdlValueId: pointer_cs
                                            list: cases
                                                tuple
                                                    HdlValueInt: 00
                                                    HdlStmBlock: SEQ
                                                        list: body
                                                            HdlOp: ASSIGN
                                                                list: ops
                                                                    HdlValueId: unaligned_rdata_o
                                                                    HdlOp: CONCAT
                                                                        list: ops
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlOp: INDEX
                                                                                        list: ops
                                                                                            HdlValueId: L0_buffer
                                                                                            HdlValueInt: 0
                                                                                    HdlOp: DOWNTO
                                                                                        list: ops
                                                                                            HdlValueInt: 15
                                                                                            HdlValueInt: 0
                                                                            HdlValueId: previous_chunk
                                                            HdlOp: ASSIGN
                                                                list: ops
                                                                    HdlValueId: unaligned_valid_o
                                                                    HdlValueId: valid_previous_chunk
                                                tuple
                                                    HdlValueInt: 01
                                                    HdlStmBlock: SEQ
                                                        list: body
                                                            HdlOp: ASSIGN
                                                                list: ops
                                                                    HdlValueId: unaligned_rdata_o
                                                                    HdlOp: CONCAT
                                                                        list: ops
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlOp: INDEX
                                                                                        list: ops
                                                                                            HdlValueId: L0_buffer
                                                                                            HdlValueInt: 1
                                                                                    HdlOp: DOWNTO
                                                                                        list: ops
                                                                                            HdlValueInt: 15
                                                                                            HdlValueInt: 0
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlOp: INDEX
                                                                                        list: ops
                                                                                            HdlValueId: L0_buffer
                                                                                            HdlValueInt: 0
                                                                                    HdlOp: DOWNTO
                                                                                        list: ops
                                                                                            HdlValueInt: 31
                                                                                            HdlValueInt: 16
                                                            HdlOp: ASSIGN
                                                                list: ops
                                                                    HdlValueId: unaligned_valid_o
                                                                    HdlValueInt: 1
                                                tuple
                                                    HdlValueInt: 10
                                                    HdlStmBlock: SEQ
                                                        list: body
                                                            HdlOp: ASSIGN
                                                                list: ops
                                                                    HdlValueId: unaligned_rdata_o
                                                                    HdlOp: CONCAT
                                                                        list: ops
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlOp: INDEX
                                                                                        list: ops
                                                                                            HdlValueId: L0_buffer
                                                                                            HdlValueInt: 2
                                                                                    HdlOp: DOWNTO
                                                                                        list: ops
                                                                                            HdlValueInt: 15
                                                                                            HdlValueInt: 0
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlOp: INDEX
                                                                                        list: ops
                                                                                            HdlValueId: L0_buffer
                                                                                            HdlValueInt: 1
                                                                                    HdlOp: DOWNTO
                                                                                        list: ops
                                                                                            HdlValueInt: 31
                                                                                            HdlValueInt: 16
                                                            HdlOp: ASSIGN
                                                                list: ops
                                                                    HdlValueId: unaligned_valid_o
                                                                    HdlValueInt: 1
                                                tuple
                                                    HdlValueInt: 11
                                                    HdlStmBlock: SEQ
                                                        list: body
                                                            HdlOp: ASSIGN
                                                                list: ops
                                                                    HdlValueId: unaligned_rdata_o
                                                                    HdlOp: CONCAT
                                                                        list: ops
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlOp: INDEX
                                                                                        list: ops
                                                                                            HdlValueId: L0_buffer
                                                                                            HdlValueInt: 3
                                                                                    HdlOp: DOWNTO
                                                                                        list: ops
                                                                                            HdlValueInt: 15
                                                                                            HdlValueInt: 0
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlOp: INDEX
                                                                                        list: ops
                                                                                            HdlValueId: L0_buffer
                                                                                            HdlValueInt: 2
                                                                                    HdlOp: DOWNTO
                                                                                        list: ops
                                                                                            HdlValueInt: 31
                                                                                            HdlValueInt: 16
                                                            HdlOp: ASSIGN
                                                                list: ops
                                                                    HdlValueId: unaligned_valid_o
                                                                    HdlValueInt: 1
                                        HdlStmIf
                                            HdlValueId: branch_i
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: instr_req_o
                                                            HdlValueInt: 1
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: instr_addr_o
                                                            HdlOp: CONCAT
                                                                list: ops
                                                                    HdlOp: INDEX
                                                                        list: ops
                                                                            HdlValueId: addr_i
                                                                            HdlOp: DOWNTO
                                                                                list: ops
                                                                                    HdlValueInt: 31
                                                                                    HdlValueInt: 4
                                                                    HdlValueInt: 0000
                                                    HdlStmIf
                                                        HdlValueId: instr_gnt_i
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: NS
                                                                HdlValueId: WAIT_RVALID
                                                        list: elifs
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: NS
                                                                HdlValueId: WAIT_GNT
                                            list: elifs
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlStmIf
                                                        HdlValueId: ready_i
                                                        HdlStmBlock: SEQ
                                                            list: body
                                                                HdlStmIf
                                                                    HdlOp: AND_UNARY
                                                                        list: ops
                                                                            HdlValueId: pointer_cs
                                                                    HdlStmBlock: SEQ
                                                                        list: body
                                                                            HdlOp: ASSIGN
                                                                                list: ops
                                                                                    HdlValueId: instr_req_o
                                                                                    HdlValueInt: 1
                                                                            HdlOp: ASSIGN
                                                                                list: ops
                                                                                    HdlValueId: instr_addr_o
                                                                                    HdlOp: ADD
                                                                                        list: ops
                                                                                            HdlValueId: current_address
                                                                                            HdlValueInt: 10
                                                                            HdlOp: ASSIGN
                                                                                list: ops
                                                                                    HdlValueId: update_current_address
                                                                                    HdlValueInt: 1
                                                                            HdlOp: ASSIGN
                                                                                list: ops
                                                                                    HdlValueId: pointer_ns
                                                                                    HdlValueInt: 0
                                                                            HdlStmIf
                                                                                HdlValueId: instr_gnt_i
                                                                                HdlOp: ASSIGN
                                                                                    list: ops
                                                                                        HdlValueId: NS
                                                                                        HdlValueId: WAIT_RVALID
                                                                                list: elifs
                                                                                HdlOp: ASSIGN
                                                                                    list: ops
                                                                                        HdlValueId: NS
                                                                                        HdlValueId: WAIT_GNT
                                                                    list: elifs
                                                                    HdlStmBlock: SEQ
                                                                        list: body
                                                                            HdlOp: ASSIGN
                                                                                list: ops
                                                                                    HdlValueId: pointer_ns
                                                                                    HdlOp: ADD
                                                                                        list: ops
                                                                                            HdlValueId: pointer_cs
                                                                                            HdlValueInt: 1
                                                                            HdlOp: ASSIGN
                                                                                list: ops
                                                                                    HdlValueId: NS
                                                                                    HdlValueId: VALID_L0
                                                        list: elifs
                                                        HdlStmBlock: SEQ
                                                            list: body
                                                                HdlOp: ASSIGN
                                                                    list: ops
                                                                        HdlValueId: NS
                                                                        HdlValueId: VALID_L0
                            tuple
                                HdlValueId: WAIT_GNT
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlStmIf
                                            HdlValueId: branch_i
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: instr_req_o
                                                            HdlValueInt: 1
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: instr_addr_o
                                                            HdlOp: CONCAT
                                                                list: ops
                                                                    HdlOp: INDEX
                                                                        list: ops
                                                                            HdlValueId: addr_i
                                                                            HdlOp: DOWNTO
                                                                                list: ops
                                                                                    HdlValueInt: 31
                                                                                    HdlValueInt: 4
                                                                    HdlValueInt: 0000
                                                    HdlStmIf
                                                        HdlValueId: instr_gnt_i
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: NS
                                                                HdlValueId: WAIT_RVALID
                                                        list: elifs
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: NS
                                                                HdlValueId: WAIT_GNT
                                            list: elifs
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: instr_req_o
                                                            HdlValueInt: 1
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: instr_addr_o
                                                            HdlValueId: current_address
                                                    HdlStmIf
                                                        HdlValueId: instr_gnt_i
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: NS
                                                                HdlValueId: WAIT_RVALID
                                                        list: elifs
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: NS
                                                                HdlValueId: WAIT_GNT
                            tuple
                                HdlValueId: WAIT_ABORTED
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: clear_buffer
                                                HdlValueInt: 1
                                        HdlStmIf
                                            HdlValueId: instr_rvalid_i
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: instr_req_o
                                                            HdlValueInt: 1
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: instr_addr_o
                                                            HdlValueId: current_address
                                                    HdlStmIf
                                                        HdlValueId: instr_gnt_i
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: NS
                                                                HdlValueId: WAIT_RVALID
                                                        list: elifs
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: NS
                                                                HdlValueId: WAIT_GNT
                                            list: elifs
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: NS
                                                            HdlValueId: WAIT_ABORTED
                        HdlStmBlock: SEQ
                            list: body
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: NS
                                        HdlValueId: EMPTY
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: clear_buffer
                                        HdlValueInt: 1
            HdlStmProcessTriggerConstrain: COMB
        HdlStmProcess
            list: sensitivity
                HdlOp: RISING
                    list: ops
                        HdlValueId: clk
                HdlOp: FALLING
                    list: ops
                        HdlValueId: rst_n
            HdlStmBlock: SEQ
                list: body
                    HdlStmIf
                        HdlOp: EQ
                            list: ops
                                HdlValueId: rst_n
                                HdlValueInt: 0
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmAssign
                                    HdlValueInt: 0
                                    HdlValueId: valid_L0_buffer
                                HdlStmAssign
                                    HdlValueInt: 0
                                    HdlValueId: L0_buffer
                                HdlStmAssign
                                    HdlValueInt: 0
                                    HdlValueId: previous_chunk
                                HdlStmAssign
                                    HdlValueInt: 0
                                    HdlValueId: valid_previous_chunk
                        list: elifs
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmIf
                                    HdlOp: OR_LOG
                                        list: ops
                                            HdlValueId: branch_i
                                            HdlValueId: clear_buffer
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmAssign
                                                HdlValueInt: 0
                                                HdlValueId: valid_L0_buffer
                                            HdlStmAssign
                                                HdlValueInt: 0
                                                HdlValueId: valid_previous_chunk
                                    list: elifs
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmIf
                                                HdlValueId: instr_rvalid_i
                                                HdlStmBlock: SEQ
                                                    list: body
                                                        HdlStmAssign
                                                            HdlValueId: instr_rdata_i
                                                            HdlValueId: L0_buffer
                                                        HdlStmAssign
                                                            HdlValueInt: 1
                                                            HdlValueId: valid_L0_buffer
                                                        HdlStmIf
                                                            HdlValueId: valid_L0_buffer
                                                            HdlStmBlock: SEQ
                                                                list: body
                                                                    HdlStmAssign
                                                                        HdlValueInt: 1
                                                                        HdlValueId: valid_previous_chunk
                                                                    HdlStmAssign
                                                                        HdlOp: INDEX
                                                                            list: ops
                                                                                HdlOp: INDEX
                                                                                    list: ops
                                                                                        HdlValueId: L0_buffer
                                                                                        HdlValueInt: 3
                                                                                HdlOp: DOWNTO
                                                                                    list: ops
                                                                                        HdlValueInt: 31
                                                                                        HdlValueInt: 16
                                                                        HdlValueId: previous_chunk
                                                            list: elifs
                                                list: elifs
            HdlStmProcessTriggerConstrain: FF

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: last_address

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: is_prefetch_q


CommitId: cc90e854717023d3dd6bf126ba5e1cd7a9ea5db4
Fix RVC handling in prefetch_L0_buffer
--- a/prefetch_L0_buffer.sv
+++ b/prefetch_L0_buffer.sv
@@ -84,12 +87,19 @@ module prefetch_L0_buffer
       if(branch_i)
       begin
         current_address <= {addr_i[31:4],4'b0000};
-        pointer_cs <= addr_i[3:2];
+        pointer_cs      <= addr_i[3:2];
       end
       else
       begin
-        if(update_current_address)
+        if(update_current_address) begin
+          last_address    <= current_address;
           current_address <= current_address + 5'h10; // jump to the next cache line
+        end
+
+        if (ready_i)
+          is_prefetch_q <= 1'b0;
+        else
+          is_prefetch_q <= is_prefetch_n;
 
         pointer_cs <= pointer_ns;
       end

ParseResult:
MOV HdlModuleDef@@prefetch_L0_buffer to objs
HdlModuleDef: prefetch_L0_buffer
    HdlModuleDec: prefetch_L0_buffer
        list: params
            HdlIdDef: RDATA_IN_WIDTH
                HdlValueInt: 128
                HdlDirection: INTERNAL
        list: ports
            HdlIdDef: clk
                HdlOp: PARAMETRIZATION
                    list: ops
                        HdlValueId: logic
                HdlDirection: IN
            HdlIdDef: rst_n
                HdlOp: PARAMETRIZATION
                    list: ops
                        HdlValueId: logic
                HdlDirection: IN
            HdlIdDef: req_i
                HdlOp: PARAMETRIZATION
                    list: ops
                        HdlValueId: logic
                HdlDirection: IN
            HdlIdDef: branch_i
                HdlOp: PARAMETRIZATION
                    list: ops
                        HdlValueId: logic
                HdlDirection: IN
            HdlIdDef: ready_i
                HdlOp: PARAMETRIZATION
                    list: ops
                        HdlValueId: logic
                HdlDirection: IN
            HdlIdDef: addr_i
                HdlOp: PARAMETRIZATION
                    list: ops
                        HdlValueId: logic
                        HdlOp: DOWNTO
                            list: ops
                                HdlValueInt: 31
                                HdlValueInt: 0
                HdlDirection: IN
            HdlIdDef: valid_o
                HdlOp: PARAMETRIZATION
                    list: ops
                        HdlValueId: logic
                HdlDirection: OUT
            HdlIdDef: rdata_o
                HdlOp: PARAMETRIZATION
                    list: ops
                        HdlValueId: logic
                        HdlOp: DOWNTO
                            list: ops
                                HdlValueInt: 31
                                HdlValueInt: 0
                HdlDirection: OUT
            HdlIdDef: addr_o
                HdlOp: PARAMETRIZATION
                    list: ops
                        HdlValueId: logic
                        HdlOp: DOWNTO
                            list: ops
                                HdlValueInt: 31
                                HdlValueInt: 0
                HdlDirection: OUT
            HdlIdDef: unaligned_valid_o
                HdlOp: PARAMETRIZATION
                    list: ops
                        HdlValueId: logic
                HdlDirection: OUT
            HdlIdDef: unaligned_rdata_o
                HdlOp: PARAMETRIZATION
                    list: ops
                        HdlValueId: logic
                        HdlOp: DOWNTO
                            list: ops
                                HdlValueInt: 31
                                HdlValueInt: 0
                HdlDirection: OUT
            HdlIdDef: instr_req_o
                HdlOp: PARAMETRIZATION
                    list: ops
                        HdlValueId: logic
                HdlDirection: OUT
            HdlIdDef: instr_addr_o
                HdlOp: PARAMETRIZATION
                    list: ops
                        HdlValueId: logic
                        HdlOp: DOWNTO
                            list: ops
                                HdlValueInt: 31
                                HdlValueInt: 0
                HdlDirection: OUT
            HdlIdDef: instr_gnt_i
                HdlOp: PARAMETRIZATION
                    list: ops
                        HdlValueId: logic
                HdlDirection: IN
            HdlIdDef: instr_rvalid_i
                HdlOp: PARAMETRIZATION
                    list: ops
                        HdlValueId: logic
                HdlDirection: IN
            HdlIdDef: instr_rdata_i
                HdlOp: INDEX
                    list: ops
                        HdlOp: PARAMETRIZATION
                            list: ops
                                HdlValueId: logic
                                HdlOp: DOWNTO
                                    list: ops
                                        HdlOp: SUB
                                            list: ops
                                                HdlOp: DIV
                                                    list: ops
                                                        HdlValueId: RDATA_IN_WIDTH
                                                        HdlValueInt: 32
                                                HdlValueInt: 1
                                        HdlValueInt: 0
                        HdlOp: DOWNTO
                            list: ops
                                HdlValueInt: 31
                                HdlValueInt: 0
                HdlDirection: IN
            HdlIdDef: busy_o
                HdlOp: PARAMETRIZATION
                    list: ops
                        HdlValueId: logic
                HdlDirection: OUT
        list: objs
    list: objs
        HdlIdDef: CS
            HdlExprNotImplemented: type
            HdlDirection: INTERNAL
        HdlIdDef: NS
            HdlExprNotImplemented: type
            HdlDirection: INTERNAL
        HdlIdDef: current_address
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: logic
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 31
                            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlIdDef: pointer_cs
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: logic
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 1
                            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlIdDef: pointer_ns
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: logic
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 1
                            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlIdDef: update_current_address
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: logic
            HdlDirection: INTERNAL
        HdlIdDef: L0_buffer
            HdlOp: INDEX
                list: ops
                    HdlOp: PARAMETRIZATION
                        list: ops
                            HdlValueId: logic
                            HdlOp: DOWNTO
                                list: ops
                                    HdlValueInt: 3
                                    HdlValueInt: 0
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 31
                            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlIdDef: valid_L0_buffer
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: logic
            HdlDirection: INTERNAL
        HdlIdDef: previous_chunk
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: logic
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 15
                            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlIdDef: valid_previous_chunk
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: logic
            HdlDirection: INTERNAL
        HdlIdDef: clear_buffer
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: logic
            HdlDirection: INTERNAL
        HdlStmAssign
            HdlOp: NE
                list: ops
                    HdlValueId: CS
                    HdlValueId: EMPTY
            HdlValueId: busy_o
        HdlStmProcess
            list: sensitivity
                HdlOp: RISING
                    list: ops
                        HdlValueId: clk
                HdlOp: FALLING
                    list: ops
                        HdlValueId: rst_n
            HdlStmBlock: SEQ
                list: body
                    HdlStmIf
                        HdlOp: NEG
                            list: ops
                                HdlValueId: rst_n
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmAssign
                                    HdlValueId: EMPTY
                                    HdlValueId: CS
                                HdlStmAssign
                                    HdlValueInt: 0
                                    HdlValueId: current_address
                                HdlStmAssign
                                    HdlValueInt: 0
                                    HdlValueId: pointer_cs
                        list: elifs
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmAssign
                                    HdlValueId: NS
                                    HdlValueId: CS
                                HdlStmIf
                                    HdlValueId: branch_i
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmAssign
                                                HdlOp: CONCAT
                                                    list: ops
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlValueId: addr_i
                                                                HdlOp: DOWNTO
                                                                    list: ops
                                                                        HdlValueInt: 31
                                                                        HdlValueInt: 4
                                                        HdlValueInt: 0000
                                                HdlValueId: current_address
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: addr_i
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 3
                                                                HdlValueInt: 2
                                                HdlValueId: pointer_cs
                                    list: elifs
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmIf
                                                HdlValueId: update_current_address
                                                HdlStmAssign: if_true
                                                    HdlOp: ADD
                                                        list: ops
                                                            HdlValueId: current_address
                                                            HdlValueInt: 10
                                                    HdlValueId: current_address
                                                list: elifs
                                            HdlStmAssign
                                                HdlValueId: pointer_ns
                                                HdlValueId: pointer_cs
            HdlStmProcessTriggerConstrain: FF
        HdlStmProcess
            HdlStmBlock: SEQ
                list: body
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: valid_o
                            HdlValueInt: 0
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: addr_o
                            HdlOp: ADD
                                list: ops
                                    HdlValueId: current_address
                                    HdlOp: SLL
                                        list: ops
                                            HdlValueId: pointer_cs
                                            HdlValueInt: 2
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: pointer_ns
                            HdlValueId: pointer_cs
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: instr_req_o
                            HdlValueInt: 0
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: instr_addr_o
                            HdlOp: TERNARY
                                list: ops
                                    HdlValueId: branch_i
                                    HdlValueId: addr_i
                                    HdlOp: ADD
                                        list: ops
                                            HdlValueId: current_address
                                            HdlValueInt: 10
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: update_current_address
                            HdlValueInt: 0
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: rdata_o
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: instr_rdata_i
                                    HdlValueId: pointer_cs
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: clear_buffer
                            HdlValueInt: 0
                    HdlStmCase: {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops':}]} 
                        HdlStmCaseType: CASE
                        HdlOp: INDEX
                            list: ops
                                HdlValueId: addr_o
                                HdlOp: DOWNTO
                                    list: ops
                                        HdlValueInt: 3
                                        HdlValueInt: 2
                        list: cases
                            tuple
                                HdlValueInt: 00
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: unaligned_rdata_o
                                                HdlOp: CONCAT
                                                    list: ops
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlOp: INDEX
                                                                    list: ops
                                                                        HdlValueId: L0_buffer
                                                                        HdlValueInt: 0
                                                                HdlOp: DOWNTO
                                                                    list: ops
                                                                        HdlValueInt: 15
                                                                        HdlValueInt: 0
                                                        HdlValueId: previous_chunk
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: unaligned_valid_o
                                                HdlValueId: valid_previous_chunk
                            tuple
                                HdlValueInt: 01
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: unaligned_rdata_o
                                                HdlOp: CONCAT
                                                    list: ops
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlOp: INDEX
                                                                    list: ops
                                                                        HdlValueId: L0_buffer
                                                                        HdlValueInt: 1
                                                                HdlOp: DOWNTO
                                                                    list: ops
                                                                        HdlValueInt: 15
                                                                        HdlValueInt: 0
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlOp: INDEX
                                                                    list: ops
                                                                        HdlValueId: L0_buffer
                                                                        HdlValueInt: 0
                                                                HdlOp: DOWNTO
                                                                    list: ops
                                                                        HdlValueInt: 31
                                                                        HdlValueInt: 16
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: unaligned_valid_o
                                                HdlValueId: valid_o
                            tuple
                                HdlValueInt: 10
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: unaligned_rdata_o
                                                HdlOp: CONCAT
                                                    list: ops
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlOp: INDEX
                                                                    list: ops
                                                                        HdlValueId: L0_buffer
                                                                        HdlValueInt: 2
                                                                HdlOp: DOWNTO
                                                                    list: ops
                                                                        HdlValueInt: 15
                                                                        HdlValueInt: 0
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlOp: INDEX
                                                                    list: ops
                                                                        HdlValueId: L0_buffer
                                                                        HdlValueInt: 1
                                                                HdlOp: DOWNTO
                                                                    list: ops
                                                                        HdlValueInt: 31
                                                                        HdlValueInt: 16
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: unaligned_valid_o
                                                HdlValueId: valid_o
                            tuple
                                HdlValueInt: 11
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: unaligned_rdata_o
                                                HdlOp: CONCAT
                                                    list: ops
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlOp: INDEX
                                                                    list: ops
                                                                        HdlValueId: L0_buffer
                                                                        HdlValueInt: 3
                                                                HdlOp: DOWNTO
                                                                    list: ops
                                                                        HdlValueInt: 15
                                                                        HdlValueInt: 0
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlOp: INDEX
                                                                    list: ops
                                                                        HdlValueId: L0_buffer
                                                                        HdlValueInt: 2
                                                                HdlOp: DOWNTO
                                                                    list: ops
                                                                        HdlValueInt: 31
                                                                        HdlValueInt: 16
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: unaligned_valid_o
                                                HdlValueId: valid_o
                    HdlStmCase: CS
                        HdlStmCaseType: CASE
                        HdlValueId: CS
                        list: cases
                            tuple
                                HdlValueId: EMPTY
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: instr_req_o
                                                HdlValueId: branch_i
                                        HdlStmIf
                                            HdlValueId: branch_i
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlStmIf
                                                        HdlValueId: instr_gnt_i
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: NS
                                                                HdlValueId: WAIT_RVALID
                                                        list: elifs
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: NS
                                                                HdlValueId: WAIT_GNT
                                            list: elifs
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: NS
                                                            HdlValueId: EMPTY
                            tuple
                                HdlValueId: WAIT_RVALID
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlStmIf
                                            HdlValueId: branch_i
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlStmIf
                                                        HdlValueId: instr_rvalid_i
                                                        HdlStmBlock: SEQ
                                                            list: body
                                                                HdlOp: ASSIGN
                                                                    list: ops
                                                                        HdlValueId: instr_req_o
                                                                        HdlValueInt: 1
                                                                HdlOp: ASSIGN
                                                                    list: ops
                                                                        HdlValueId: instr_addr_o
                                                                        HdlOp: CONCAT
                                                                            list: ops
                                                                                HdlOp: INDEX
                                                                                    list: ops
                                                                                        HdlValueId: addr_i
                                                                                        HdlOp: DOWNTO
                                                                                            list: ops
                                                                                                HdlValueInt: 31
                                                                                                HdlValueInt: 4
                                                                                HdlValueInt: 0000
                                                                HdlStmIf
                                                                    HdlValueId: instr_gnt_i
                                                                    HdlOp: ASSIGN
                                                                        list: ops
                                                                            HdlValueId: NS
                                                                            HdlValueId: WAIT_RVALID
                                                                    list: elifs
                                                                    HdlOp: ASSIGN
                                                                        list: ops
                                                                            HdlValueId: NS
                                                                            HdlValueId: WAIT_GNT
                                                        list: elifs
                                                        HdlStmBlock: SEQ
                                                            list: body
                                                                HdlOp: ASSIGN
                                                                    list: ops
                                                                        HdlValueId: NS
                                                                        HdlValueId: WAIT_ABORTED
                                            list: elifs
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: valid_o
                                                            HdlValueId: instr_rvalid_i
                                                    HdlStmCase: pointer_cs
                                                        HdlStmCaseType: CASE
                                                        HdlValueId: pointer_cs
                                                        list: cases
                                                            tuple
                                                                HdlValueInt: 00
                                                                HdlStmBlock: SEQ
                                                                    list: body
                                                                        HdlOp: ASSIGN
                                                                            list: ops
                                                                                HdlValueId: unaligned_rdata_o
                                                                                HdlOp: CONCAT
                                                                                    list: ops
                                                                                        HdlOp: INDEX
                                                                                            list: ops
                                                                                                HdlOp: INDEX
                                                                                                    list: ops
                                                                                                        HdlValueId: instr_rdata_i
                                                                                                        HdlValueInt: 0
                                                                                                HdlOp: DOWNTO
                                                                                                    list: ops
                                                                                                        HdlValueInt: 15
                                                                                                        HdlValueInt: 0
                                                                                        HdlOp: INDEX
                                                                                            list: ops
                                                                                                HdlOp: INDEX
                                                                                                    list: ops
                                                                                                        HdlValueId: L0_buffer
                                                                                                        HdlValueInt: 3
                                                                                                HdlOp: DOWNTO
                                                                                                    list: ops
                                                                                                        HdlValueInt: 31
                                                                                                        HdlValueInt: 16
                                                                        HdlStmIf
                                                                            HdlValueId: valid_L0_buffer
                                                                            HdlOp: ASSIGN
                                                                                list: ops
                                                                                    HdlValueId: unaligned_valid_o
                                                                                    HdlValueId: instr_rvalid_i
                                                                            list: elifs
                                                                            HdlOp: ASSIGN
                                                                                list: ops
                                                                                    HdlValueId: unaligned_valid_o
                                                                                    HdlValueInt: 0
                                                            tuple
                                                                HdlValueInt: 01
                                                                HdlStmBlock: SEQ
                                                                    list: body
                                                                        HdlOp: ASSIGN
                                                                            list: ops
                                                                                HdlValueId: unaligned_rdata_o
                                                                                HdlOp: CONCAT
                                                                                    list: ops
                                                                                        HdlOp: INDEX
                                                                                            list: ops
                                                                                                HdlOp: INDEX
                                                                                                    list: ops
                                                                                                        HdlValueId: instr_rdata_i
                                                                                                        HdlValueInt: 1
                                                                                                HdlOp: DOWNTO
                                                                                                    list: ops
                                                                                                        HdlValueInt: 15
                                                                                                        HdlValueInt: 0
                                                                                        HdlOp: INDEX
                                                                                            list: ops
                                                                                                HdlOp: INDEX
                                                                                                    list: ops
                                                                                                        HdlValueId: instr_rdata_i
                                                                                                        HdlValueInt: 0
                                                                                                HdlOp: DOWNTO
                                                                                                    list: ops
                                                                                                        HdlValueInt: 31
                                                                                                        HdlValueInt: 16
                                                                        HdlOp: ASSIGN
                                                                            list: ops
                                                                                HdlValueId: unaligned_valid_o
                                                                                HdlValueId: instr_rvalid_i
                                                            tuple
                                                                HdlValueInt: 10
                                                                HdlStmBlock: SEQ
                                                                    list: body
                                                                        HdlOp: ASSIGN
                                                                            list: ops
                                                                                HdlValueId: unaligned_rdata_o
                                                                                HdlOp: CONCAT
                                                                                    list: ops
                                                                                        HdlOp: INDEX
                                                                                            list: ops
                                                                                                HdlOp: INDEX
                                                                                                    list: ops
                                                                                                        HdlValueId: instr_rdata_i
                                                                                                        HdlValueInt: 2
                                                                                                HdlOp: DOWNTO
                                                                                                    list: ops
                                                                                                        HdlValueInt: 15
                                                                                                        HdlValueInt: 0
                                                                                        HdlOp: INDEX
                                                                                            list: ops
                                                                                                HdlOp: INDEX
                                                                                                    list: ops
                                                                                                        HdlValueId: instr_rdata_i
                                                                                                        HdlValueInt: 1
                                                                                                HdlOp: DOWNTO
                                                                                                    list: ops
                                                                                                        HdlValueInt: 31
                                                                                                        HdlValueInt: 16
                                                                        HdlOp: ASSIGN
                                                                            list: ops
                                                                                HdlValueId: unaligned_valid_o
                                                                                HdlValueId: instr_rvalid_i
                                                            tuple
                                                                HdlValueInt: 11
                                                                HdlStmBlock: SEQ
                                                                    list: body
                                                                        HdlOp: ASSIGN
                                                                            list: ops
                                                                                HdlValueId: unaligned_rdata_o
                                                                                HdlOp: CONCAT
                                                                                    list: ops
                                                                                        HdlOp: INDEX
                                                                                            list: ops
                                                                                                HdlOp: INDEX
                                                                                                    list: ops
                                                                                                        HdlValueId: instr_rdata_i
                                                                                                        HdlValueInt: 3
                                                                                                HdlOp: DOWNTO
                                                                                                    list: ops
                                                                                                        HdlValueInt: 15
                                                                                                        HdlValueInt: 0
                                                                                        HdlOp: INDEX
                                                                                            list: ops
                                                                                                HdlOp: INDEX
                                                                                                    list: ops
                                                                                                        HdlValueId: instr_rdata_i
                                                                                                        HdlValueInt: 2
                                                                                                HdlOp: DOWNTO
                                                                                                    list: ops
                                                                                                        HdlValueInt: 31
                                                                                                        HdlValueInt: 16
                                                                        HdlOp: ASSIGN
                                                                            list: ops
                                                                                HdlValueId: unaligned_valid_o
                                                                                HdlValueId: instr_rvalid_i
                                                    HdlStmIf
                                                        HdlValueId: instr_rvalid_i
                                                        HdlStmBlock: SEQ
                                                            list: body
                                                                HdlStmIf
                                                                    HdlOp: AND_UNARY
                                                                        list: ops
                                                                            HdlValueId: pointer_cs
                                                                    HdlStmBlock: SEQ
                                                                        list: body
                                                                            HdlStmIf
                                                                                HdlValueId: ready_i
                                                                                HdlStmBlock: SEQ
                                                                                    list: body
                                                                                        HdlOp: ASSIGN
                                                                                            list: ops
                                                                                                HdlValueId: instr_req_o
                                                                                                HdlValueInt: 1
                                                                                        HdlOp: ASSIGN
                                                                                            list: ops
                                                                                                HdlValueId: instr_addr_o
                                                                                                HdlOp: ADD
                                                                                                    list: ops
                                                                                                        HdlValueId: current_address
                                                                                                        HdlValueInt: 10
                                                                                        HdlOp: ASSIGN
                                                                                            list: ops
                                                                                                HdlValueId: pointer_ns
                                                                                                HdlValueInt: 0
                                                                                        HdlOp: ASSIGN
                                                                                            list: ops
                                                                                                HdlValueId: update_current_address
                                                                                                HdlValueInt: 1
                                                                                        HdlStmIf
                                                                                            HdlValueId: instr_gnt_i
                                                                                            HdlOp: ASSIGN
                                                                                                list: ops
                                                                                                    HdlValueId: NS
                                                                                                    HdlValueId: WAIT_RVALID
                                                                                            list: elifs
                                                                                            HdlOp: ASSIGN
                                                                                                list: ops
                                                                                                    HdlValueId: NS
                                                                                                    HdlValueId: WAIT_GNT
                                                                                list: elifs
                                                                                HdlStmBlock: SEQ
                                                                                    list: body
                                                                                        HdlOp: ASSIGN
                                                                                            list: ops
                                                                                                HdlValueId: NS
                                                                                                HdlValueId: VALID_L0
                                                                    list: elifs
                                                                    HdlStmBlock: SEQ
                                                                        list: body
                                                                            HdlOp: ASSIGN
                                                                                list: ops
                                                                                    HdlValueId: NS
                                                                                    HdlValueId: VALID_L0
                                                                            HdlStmIf
                                                                                HdlValueId: ready_i
                                                                                HdlOp: ASSIGN
                                                                                    list: ops
                                                                                        HdlValueId: pointer_ns
                                                                                        HdlOp: ADD
                                                                                            list: ops
                                                                                                HdlValueId: pointer_cs
                                                                                                HdlValueInt: 1
                                                                                list: elifs
                                                                                HdlOp: ASSIGN
                                                                                    list: ops
                                                                                        HdlValueId: pointer_ns
                                                                                        HdlValueId: pointer_cs
                                                        list: elifs
                                                        HdlStmBlock: SEQ
                                                            list: body
                                                                HdlOp: ASSIGN
                                                                    list: ops
                                                                        HdlValueId: NS
                                                                        HdlValueId: WAIT_RVALID
                            tuple
                                HdlValueId: VALID_L0
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: valid_o
                                                HdlValueInt: 1
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: rdata_o
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: L0_buffer
                                                        HdlValueId: pointer_cs
                                        HdlStmCase: pointer_cs
                                            HdlStmCaseType: CASE
                                            HdlValueId: pointer_cs
                                            list: cases
                                                tuple
                                                    HdlValueInt: 00
                                                    HdlStmBlock: SEQ
                                                        list: body
                                                            HdlOp: ASSIGN
                                                                list: ops
                                                                    HdlValueId: unaligned_rdata_o
                                                                    HdlOp: CONCAT
                                                                        list: ops
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlOp: INDEX
                                                                                        list: ops
                                                                                            HdlValueId: L0_buffer
                                                                                            HdlValueInt: 0
                                                                                    HdlOp: DOWNTO
                                                                                        list: ops
                                                                                            HdlValueInt: 15
                                                                                            HdlValueInt: 0
                                                                            HdlValueId: previous_chunk
                                                            HdlOp: ASSIGN
                                                                list: ops
                                                                    HdlValueId: unaligned_valid_o
                                                                    HdlValueId: valid_previous_chunk
                                                tuple
                                                    HdlValueInt: 01
                                                    HdlStmBlock: SEQ
                                                        list: body
                                                            HdlOp: ASSIGN
                                                                list: ops
                                                                    HdlValueId: unaligned_rdata_o
                                                                    HdlOp: CONCAT
                                                                        list: ops
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlOp: INDEX
                                                                                        list: ops
                                                                                            HdlValueId: L0_buffer
                                                                                            HdlValueInt: 1
                                                                                    HdlOp: DOWNTO
                                                                                        list: ops
                                                                                            HdlValueInt: 15
                                                                                            HdlValueInt: 0
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlOp: INDEX
                                                                                        list: ops
                                                                                            HdlValueId: L0_buffer
                                                                                            HdlValueInt: 0
                                                                                    HdlOp: DOWNTO
                                                                                        list: ops
                                                                                            HdlValueInt: 31
                                                                                            HdlValueInt: 16
                                                            HdlOp: ASSIGN
                                                                list: ops
                                                                    HdlValueId: unaligned_valid_o
                                                                    HdlValueInt: 1
                                                tuple
                                                    HdlValueInt: 10
                                                    HdlStmBlock: SEQ
                                                        list: body
                                                            HdlOp: ASSIGN
                                                                list: ops
                                                                    HdlValueId: unaligned_rdata_o
                                                                    HdlOp: CONCAT
                                                                        list: ops
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlOp: INDEX
                                                                                        list: ops
                                                                                            HdlValueId: L0_buffer
                                                                                            HdlValueInt: 2
                                                                                    HdlOp: DOWNTO
                                                                                        list: ops
                                                                                            HdlValueInt: 15
                                                                                            HdlValueInt: 0
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlOp: INDEX
                                                                                        list: ops
                                                                                            HdlValueId: L0_buffer
                                                                                            HdlValueInt: 1
                                                                                    HdlOp: DOWNTO
                                                                                        list: ops
                                                                                            HdlValueInt: 31
                                                                                            HdlValueInt: 16
                                                            HdlOp: ASSIGN
                                                                list: ops
                                                                    HdlValueId: unaligned_valid_o
                                                                    HdlValueInt: 1
                                                tuple
                                                    HdlValueInt: 11
                                                    HdlStmBlock: SEQ
                                                        list: body
                                                            HdlOp: ASSIGN
                                                                list: ops
                                                                    HdlValueId: unaligned_rdata_o
                                                                    HdlOp: CONCAT
                                                                        list: ops
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlOp: INDEX
                                                                                        list: ops
                                                                                            HdlValueId: L0_buffer
                                                                                            HdlValueInt: 3
                                                                                    HdlOp: DOWNTO
                                                                                        list: ops
                                                                                            HdlValueInt: 15
                                                                                            HdlValueInt: 0
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlOp: INDEX
                                                                                        list: ops
                                                                                            HdlValueId: L0_buffer
                                                                                            HdlValueInt: 2
                                                                                    HdlOp: DOWNTO
                                                                                        list: ops
                                                                                            HdlValueInt: 31
                                                                                            HdlValueInt: 16
                                                            HdlOp: ASSIGN
                                                                list: ops
                                                                    HdlValueId: unaligned_valid_o
                                                                    HdlValueInt: 1
                                        HdlStmIf
                                            HdlValueId: branch_i
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: instr_req_o
                                                            HdlValueInt: 1
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: instr_addr_o
                                                            HdlOp: CONCAT
                                                                list: ops
                                                                    HdlOp: INDEX
                                                                        list: ops
                                                                            HdlValueId: addr_i
                                                                            HdlOp: DOWNTO
                                                                                list: ops
                                                                                    HdlValueInt: 31
                                                                                    HdlValueInt: 4
                                                                    HdlValueInt: 0000
                                                    HdlStmIf
                                                        HdlValueId: instr_gnt_i
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: NS
                                                                HdlValueId: WAIT_RVALID
                                                        list: elifs
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: NS
                                                                HdlValueId: WAIT_GNT
                                            list: elifs
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlStmIf
                                                        HdlValueId: ready_i
                                                        HdlStmBlock: SEQ
                                                            list: body
                                                                HdlStmIf
                                                                    HdlOp: AND_UNARY
                                                                        list: ops
                                                                            HdlValueId: pointer_cs
                                                                    HdlStmBlock: SEQ
                                                                        list: body
                                                                            HdlOp: ASSIGN
                                                                                list: ops
                                                                                    HdlValueId: instr_req_o
                                                                                    HdlValueInt: 1
                                                                            HdlOp: ASSIGN
                                                                                list: ops
                                                                                    HdlValueId: instr_addr_o
                                                                                    HdlOp: ADD
                                                                                        list: ops
                                                                                            HdlValueId: current_address
                                                                                            HdlValueInt: 10
                                                                            HdlOp: ASSIGN
                                                                                list: ops
                                                                                    HdlValueId: update_current_address
                                                                                    HdlValueInt: 1
                                                                            HdlOp: ASSIGN
                                                                                list: ops
                                                                                    HdlValueId: pointer_ns
                                                                                    HdlValueInt: 0
                                                                            HdlStmIf
                                                                                HdlValueId: instr_gnt_i
                                                                                HdlOp: ASSIGN
                                                                                    list: ops
                                                                                        HdlValueId: NS
                                                                                        HdlValueId: WAIT_RVALID
                                                                                list: elifs
                                                                                HdlOp: ASSIGN
                                                                                    list: ops
                                                                                        HdlValueId: NS
                                                                                        HdlValueId: WAIT_GNT
                                                                    list: elifs
                                                                    HdlStmBlock: SEQ
                                                                        list: body
                                                                            HdlOp: ASSIGN
                                                                                list: ops
                                                                                    HdlValueId: pointer_ns
                                                                                    HdlOp: ADD
                                                                                        list: ops
                                                                                            HdlValueId: pointer_cs
                                                                                            HdlValueInt: 1
                                                                            HdlOp: ASSIGN
                                                                                list: ops
                                                                                    HdlValueId: NS
                                                                                    HdlValueId: VALID_L0
                                                        list: elifs
                                                        HdlStmBlock: SEQ
                                                            list: body
                                                                HdlOp: ASSIGN
                                                                    list: ops
                                                                        HdlValueId: NS
                                                                        HdlValueId: VALID_L0
                            tuple
                                HdlValueId: WAIT_GNT
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlStmIf
                                            HdlValueId: branch_i
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: instr_req_o
                                                            HdlValueInt: 1
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: instr_addr_o
                                                            HdlOp: CONCAT
                                                                list: ops
                                                                    HdlOp: INDEX
                                                                        list: ops
                                                                            HdlValueId: addr_i
                                                                            HdlOp: DOWNTO
                                                                                list: ops
                                                                                    HdlValueInt: 31
                                                                                    HdlValueInt: 4
                                                                    HdlValueInt: 0000
                                                    HdlStmIf
                                                        HdlValueId: instr_gnt_i
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: NS
                                                                HdlValueId: WAIT_RVALID
                                                        list: elifs
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: NS
                                                                HdlValueId: WAIT_GNT
                                            list: elifs
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: instr_req_o
                                                            HdlValueInt: 1
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: instr_addr_o
                                                            HdlValueId: current_address
                                                    HdlStmIf
                                                        HdlValueId: instr_gnt_i
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: NS
                                                                HdlValueId: WAIT_RVALID
                                                        list: elifs
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: NS
                                                                HdlValueId: WAIT_GNT
                            tuple
                                HdlValueId: WAIT_ABORTED
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: clear_buffer
                                                HdlValueInt: 1
                                        HdlStmIf
                                            HdlValueId: instr_rvalid_i
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: instr_req_o
                                                            HdlValueInt: 1
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: instr_addr_o
                                                            HdlValueId: current_address
                                                    HdlStmIf
                                                        HdlValueId: instr_gnt_i
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: NS
                                                                HdlValueId: WAIT_RVALID
                                                        list: elifs
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: NS
                                                                HdlValueId: WAIT_GNT
                                            list: elifs
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: NS
                                                            HdlValueId: WAIT_ABORTED
                        HdlStmBlock: SEQ
                            list: body
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: NS
                                        HdlValueId: EMPTY
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: clear_buffer
                                        HdlValueInt: 1
            HdlStmProcessTriggerConstrain: COMB
        HdlStmProcess
            list: sensitivity
                HdlOp: RISING
                    list: ops
                        HdlValueId: clk
                HdlOp: FALLING
                    list: ops
                        HdlValueId: rst_n
            HdlStmBlock: SEQ
                list: body
                    HdlStmIf
                        HdlOp: EQ
                            list: ops
                                HdlValueId: rst_n
                                HdlValueInt: 0
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmAssign
                                    HdlValueInt: 0
                                    HdlValueId: valid_L0_buffer
                                HdlStmAssign
                                    HdlValueInt: 0
                                    HdlValueId: L0_buffer
                                HdlStmAssign
                                    HdlValueInt: 0
                                    HdlValueId: previous_chunk
                                HdlStmAssign
                                    HdlValueInt: 0
                                    HdlValueId: valid_previous_chunk
                        list: elifs
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmIf
                                    HdlOp: OR_LOG
                                        list: ops
                                            HdlValueId: branch_i
                                            HdlValueId: clear_buffer
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmAssign
                                                HdlValueInt: 0
                                                HdlValueId: valid_L0_buffer
                                            HdlStmAssign
                                                HdlValueInt: 0
                                                HdlValueId: valid_previous_chunk
                                    list: elifs
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmIf
                                                HdlValueId: instr_rvalid_i
                                                HdlStmBlock: SEQ
                                                    list: body
                                                        HdlStmAssign
                                                            HdlValueId: instr_rdata_i
                                                            HdlValueId: L0_buffer
                                                        HdlStmAssign
                                                            HdlValueInt: 1
                                                            HdlValueId: valid_L0_buffer
                                                        HdlStmIf
                                                            HdlValueId: valid_L0_buffer
                                                            HdlStmBlock: SEQ
                                                                list: body
                                                                    HdlStmAssign
                                                                        HdlValueInt: 1
                                                                        HdlValueId: valid_previous_chunk
                                                                    HdlStmAssign
                                                                        HdlOp: INDEX
                                                                            list: ops
                                                                                HdlOp: INDEX
                                                                                    list: ops
                                                                                        HdlValueId: L0_buffer
                                                                                        HdlValueInt: 3
                                                                                HdlOp: DOWNTO
                                                                                    list: ops
                                                                                        HdlValueInt: 31
                                                                                        HdlValueInt: 16
                                                                        HdlValueId: previous_chunk
                                                            list: elifs
                                                list: elifs
            HdlStmProcessTriggerConstrain: FF

MOV HdlStmProcess@@ to objs
HdlStmProcess
    list: sensitivity
        HdlOp: RISING
            list: ops
                HdlValueId: clk
        HdlOp: FALLING
            list: ops
                HdlValueId: rst_n
    HdlStmBlock: SEQ
        list: body
            HdlStmIf
                HdlOp: NEG
                    list: ops
                        HdlValueId: rst_n
                HdlStmBlock: SEQ
                    list: body
                        HdlStmAssign
                            HdlValueId: EMPTY
                            HdlValueId: CS
                        HdlStmAssign
                            HdlValueInt: 0
                            HdlValueId: current_address
                        HdlStmAssign
                            HdlValueInt: 0
                            HdlValueId: pointer_cs
                list: elifs
                HdlStmBlock: SEQ
                    list: body
                        HdlStmAssign
                            HdlValueId: NS
                            HdlValueId: CS
                        HdlStmIf
                            HdlValueId: branch_i
                            HdlStmBlock: SEQ
                                list: body
                                    HdlStmAssign
                                        HdlOp: CONCAT
                                            list: ops
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: addr_i
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 31
                                                                HdlValueInt: 4
                                                HdlValueInt: 0000
                                        HdlValueId: current_address
                                    HdlStmAssign
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: addr_i
                                                HdlOp: DOWNTO
                                                    list: ops
                                                        HdlValueInt: 3
                                                        HdlValueInt: 2
                                        HdlValueId: pointer_cs
                            list: elifs
                            HdlStmBlock: SEQ
                                list: body
                                    HdlStmIf
                                        HdlValueId: update_current_address
                                        HdlStmAssign: if_true
                                            HdlOp: ADD
                                                list: ops
                                                    HdlValueId: current_address
                                                    HdlValueInt: 10
                                            HdlValueId: current_address
                                        list: elifs
                                    HdlStmAssign
                                        HdlValueId: pointer_ns
                                        HdlValueId: pointer_cs
    HdlStmProcessTriggerConstrain: FF

UPD HdlModuleDef@@prefetch_L0_buffer to prefetch_L0_buffer
    UPD list@@objs to body
    MOV list@@objs to prefetch_L0_buffer
    list: objs
        HdlIdDef: CS
            HdlExprNotImplemented: type
            HdlDirection: INTERNAL
        HdlIdDef: NS
            HdlExprNotImplemented: type
            HdlDirection: INTERNAL
        HdlIdDef: current_address
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: logic
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 31
                            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlIdDef: pointer_cs
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: logic
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 1
                            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlIdDef: pointer_ns
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: logic
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 1
                            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlIdDef: update_current_address
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: logic
            HdlDirection: INTERNAL
        HdlIdDef: L0_buffer
            HdlOp: INDEX
                list: ops
                    HdlOp: PARAMETRIZATION
                        list: ops
                            HdlValueId: logic
                            HdlOp: DOWNTO
                                list: ops
                                    HdlValueInt: 3
                                    HdlValueInt: 0
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 31
                            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlIdDef: valid_L0_buffer
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: logic
            HdlDirection: INTERNAL
        HdlIdDef: previous_chunk
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: logic
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 15
                            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlIdDef: valid_previous_chunk
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: logic
            HdlDirection: INTERNAL
        HdlIdDef: clear_buffer
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: logic
            HdlDirection: INTERNAL
        HdlStmAssign
            HdlOp: NE
                list: ops
                    HdlValueId: CS
                    HdlValueId: EMPTY
            HdlValueId: busy_o
        HdlStmProcess
            list: sensitivity
                HdlOp: RISING
                    list: ops
                        HdlValueId: clk
                HdlOp: FALLING
                    list: ops
                        HdlValueId: rst_n
            HdlStmBlock: SEQ
                list: body
                    HdlStmIf
                        HdlOp: NEG
                            list: ops
                                HdlValueId: rst_n
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmAssign
                                    HdlValueId: EMPTY
                                    HdlValueId: CS
                                HdlStmAssign
                                    HdlValueInt: 0
                                    HdlValueId: current_address
                                HdlStmAssign
                                    HdlValueInt: 0
                                    HdlValueId: pointer_cs
                        list: elifs
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmAssign
                                    HdlValueId: NS
                                    HdlValueId: CS
                                HdlStmIf
                                    HdlValueId: branch_i
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmAssign
                                                HdlOp: CONCAT
                                                    list: ops
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlValueId: addr_i
                                                                HdlOp: DOWNTO
                                                                    list: ops
                                                                        HdlValueInt: 31
                                                                        HdlValueInt: 4
                                                        HdlValueInt: 0000
                                                HdlValueId: current_address
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: addr_i
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 3
                                                                HdlValueInt: 2
                                                HdlValueId: pointer_cs
                                    list: elifs
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmIf
                                                HdlValueId: update_current_address
                                                HdlStmAssign: if_true
                                                    HdlOp: ADD
                                                        list: ops
                                                            HdlValueId: current_address
                                                            HdlValueInt: 10
                                                    HdlValueId: current_address
                                                list: elifs
                                            HdlStmAssign
                                                HdlValueId: pointer_ns
                                                HdlValueId: pointer_cs
            HdlStmProcessTriggerConstrain: FF
        HdlStmProcess
            HdlStmBlock: SEQ
                list: body
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: valid_o
                            HdlValueInt: 0
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: addr_o
                            HdlOp: ADD
                                list: ops
                                    HdlValueId: current_address
                                    HdlOp: SLL
                                        list: ops
                                            HdlValueId: pointer_cs
                                            HdlValueInt: 2
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: pointer_ns
                            HdlValueId: pointer_cs
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: instr_req_o
                            HdlValueInt: 0
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: instr_addr_o
                            HdlOp: TERNARY
                                list: ops
                                    HdlValueId: branch_i
                                    HdlValueId: addr_i
                                    HdlOp: ADD
                                        list: ops
                                            HdlValueId: current_address
                                            HdlValueInt: 10
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: update_current_address
                            HdlValueInt: 0
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: rdata_o
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: instr_rdata_i
                                    HdlValueId: pointer_cs
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: clear_buffer
                            HdlValueInt: 0
                    HdlStmCase: {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops':}]} 
                        HdlStmCaseType: CASE
                        HdlOp: INDEX
                            list: ops
                                HdlValueId: addr_o
                                HdlOp: DOWNTO
                                    list: ops
                                        HdlValueInt: 3
                                        HdlValueInt: 2
                        list: cases
                            tuple
                                HdlValueInt: 00
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: unaligned_rdata_o
                                                HdlOp: CONCAT
                                                    list: ops
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlOp: INDEX
                                                                    list: ops
                                                                        HdlValueId: L0_buffer
                                                                        HdlValueInt: 0
                                                                HdlOp: DOWNTO
                                                                    list: ops
                                                                        HdlValueInt: 15
                                                                        HdlValueInt: 0
                                                        HdlValueId: previous_chunk
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: unaligned_valid_o
                                                HdlValueId: valid_previous_chunk
                            tuple
                                HdlValueInt: 01
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: unaligned_rdata_o
                                                HdlOp: CONCAT
                                                    list: ops
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlOp: INDEX
                                                                    list: ops
                                                                        HdlValueId: L0_buffer
                                                                        HdlValueInt: 1
                                                                HdlOp: DOWNTO
                                                                    list: ops
                                                                        HdlValueInt: 15
                                                                        HdlValueInt: 0
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlOp: INDEX
                                                                    list: ops
                                                                        HdlValueId: L0_buffer
                                                                        HdlValueInt: 0
                                                                HdlOp: DOWNTO
                                                                    list: ops
                                                                        HdlValueInt: 31
                                                                        HdlValueInt: 16
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: unaligned_valid_o
                                                HdlValueId: valid_o
                            tuple
                                HdlValueInt: 10
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: unaligned_rdata_o
                                                HdlOp: CONCAT
                                                    list: ops
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlOp: INDEX
                                                                    list: ops
                                                                        HdlValueId: L0_buffer
                                                                        HdlValueInt: 2
                                                                HdlOp: DOWNTO
                                                                    list: ops
                                                                        HdlValueInt: 15
                                                                        HdlValueInt: 0
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlOp: INDEX
                                                                    list: ops
                                                                        HdlValueId: L0_buffer
                                                                        HdlValueInt: 1
                                                                HdlOp: DOWNTO
                                                                    list: ops
                                                                        HdlValueInt: 31
                                                                        HdlValueInt: 16
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: unaligned_valid_o
                                                HdlValueId: valid_o
                            tuple
                                HdlValueInt: 11
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: unaligned_rdata_o
                                                HdlOp: CONCAT
                                                    list: ops
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlOp: INDEX
                                                                    list: ops
                                                                        HdlValueId: L0_buffer
                                                                        HdlValueInt: 3
                                                                HdlOp: DOWNTO
                                                                    list: ops
                                                                        HdlValueInt: 15
                                                                        HdlValueInt: 0
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlOp: INDEX
                                                                    list: ops
                                                                        HdlValueId: L0_buffer
                                                                        HdlValueInt: 2
                                                                HdlOp: DOWNTO
                                                                    list: ops
                                                                        HdlValueInt: 31
                                                                        HdlValueInt: 16
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: unaligned_valid_o
                                                HdlValueId: valid_o
                    HdlStmCase: CS
                        HdlStmCaseType: CASE
                        HdlValueId: CS
                        list: cases
                            tuple
                                HdlValueId: EMPTY
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: instr_req_o
                                                HdlValueId: branch_i
                                        HdlStmIf
                                            HdlValueId: branch_i
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlStmIf
                                                        HdlValueId: instr_gnt_i
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: NS
                                                                HdlValueId: WAIT_RVALID
                                                        list: elifs
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: NS
                                                                HdlValueId: WAIT_GNT
                                            list: elifs
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: NS
                                                            HdlValueId: EMPTY
                            tuple
                                HdlValueId: WAIT_RVALID
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlStmIf
                                            HdlValueId: branch_i
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlStmIf
                                                        HdlValueId: instr_rvalid_i
                                                        HdlStmBlock: SEQ
                                                            list: body
                                                                HdlOp: ASSIGN
                                                                    list: ops
                                                                        HdlValueId: instr_req_o
                                                                        HdlValueInt: 1
                                                                HdlOp: ASSIGN
                                                                    list: ops
                                                                        HdlValueId: instr_addr_o
                                                                        HdlOp: CONCAT
                                                                            list: ops
                                                                                HdlOp: INDEX
                                                                                    list: ops
                                                                                        HdlValueId: addr_i
                                                                                        HdlOp: DOWNTO
                                                                                            list: ops
                                                                                                HdlValueInt: 31
                                                                                                HdlValueInt: 4
                                                                                HdlValueInt: 0000
                                                                HdlStmIf
                                                                    HdlValueId: instr_gnt_i
                                                                    HdlOp: ASSIGN
                                                                        list: ops
                                                                            HdlValueId: NS
                                                                            HdlValueId: WAIT_RVALID
                                                                    list: elifs
                                                                    HdlOp: ASSIGN
                                                                        list: ops
                                                                            HdlValueId: NS
                                                                            HdlValueId: WAIT_GNT
                                                        list: elifs
                                                        HdlStmBlock: SEQ
                                                            list: body
                                                                HdlOp: ASSIGN
                                                                    list: ops
                                                                        HdlValueId: NS
                                                                        HdlValueId: WAIT_ABORTED
                                            list: elifs
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: valid_o
                                                            HdlValueId: instr_rvalid_i
                                                    HdlStmCase: pointer_cs
                                                        HdlStmCaseType: CASE
                                                        HdlValueId: pointer_cs
                                                        list: cases
                                                            tuple
                                                                HdlValueInt: 00
                                                                HdlStmBlock: SEQ
                                                                    list: body
                                                                        HdlOp: ASSIGN
                                                                            list: ops
                                                                                HdlValueId: unaligned_rdata_o
                                                                                HdlOp: CONCAT
                                                                                    list: ops
                                                                                        HdlOp: INDEX
                                                                                            list: ops
                                                                                                HdlOp: INDEX
                                                                                                    list: ops
                                                                                                        HdlValueId: instr_rdata_i
                                                                                                        HdlValueInt: 0
                                                                                                HdlOp: DOWNTO
                                                                                                    list: ops
                                                                                                        HdlValueInt: 15
                                                                                                        HdlValueInt: 0
                                                                                        HdlOp: INDEX
                                                                                            list: ops
                                                                                                HdlOp: INDEX
                                                                                                    list: ops
                                                                                                        HdlValueId: L0_buffer
                                                                                                        HdlValueInt: 3
                                                                                                HdlOp: DOWNTO
                                                                                                    list: ops
                                                                                                        HdlValueInt: 31
                                                                                                        HdlValueInt: 16
                                                                        HdlStmIf
                                                                            HdlValueId: valid_L0_buffer
                                                                            HdlOp: ASSIGN
                                                                                list: ops
                                                                                    HdlValueId: unaligned_valid_o
                                                                                    HdlValueId: instr_rvalid_i
                                                                            list: elifs
                                                                            HdlOp: ASSIGN
                                                                                list: ops
                                                                                    HdlValueId: unaligned_valid_o
                                                                                    HdlValueInt: 0
                                                            tuple
                                                                HdlValueInt: 01
                                                                HdlStmBlock: SEQ
                                                                    list: body
                                                                        HdlOp: ASSIGN
                                                                            list: ops
                                                                                HdlValueId: unaligned_rdata_o
                                                                                HdlOp: CONCAT
                                                                                    list: ops
                                                                                        HdlOp: INDEX
                                                                                            list: ops
                                                                                                HdlOp: INDEX
                                                                                                    list: ops
                                                                                                        HdlValueId: instr_rdata_i
                                                                                                        HdlValueInt: 1
                                                                                                HdlOp: DOWNTO
                                                                                                    list: ops
                                                                                                        HdlValueInt: 15
                                                                                                        HdlValueInt: 0
                                                                                        HdlOp: INDEX
                                                                                            list: ops
                                                                                                HdlOp: INDEX
                                                                                                    list: ops
                                                                                                        HdlValueId: instr_rdata_i
                                                                                                        HdlValueInt: 0
                                                                                                HdlOp: DOWNTO
                                                                                                    list: ops
                                                                                                        HdlValueInt: 31
                                                                                                        HdlValueInt: 16
                                                                        HdlOp: ASSIGN
                                                                            list: ops
                                                                                HdlValueId: unaligned_valid_o
                                                                                HdlValueId: instr_rvalid_i
                                                            tuple
                                                                HdlValueInt: 10
                                                                HdlStmBlock: SEQ
                                                                    list: body
                                                                        HdlOp: ASSIGN
                                                                            list: ops
                                                                                HdlValueId: unaligned_rdata_o
                                                                                HdlOp: CONCAT
                                                                                    list: ops
                                                                                        HdlOp: INDEX
                                                                                            list: ops
                                                                                                HdlOp: INDEX
                                                                                                    list: ops
                                                                                                        HdlValueId: instr_rdata_i
                                                                                                        HdlValueInt: 2
                                                                                                HdlOp: DOWNTO
                                                                                                    list: ops
                                                                                                        HdlValueInt: 15
                                                                                                        HdlValueInt: 0
                                                                                        HdlOp: INDEX
                                                                                            list: ops
                                                                                                HdlOp: INDEX
                                                                                                    list: ops
                                                                                                        HdlValueId: instr_rdata_i
                                                                                                        HdlValueInt: 1
                                                                                                HdlOp: DOWNTO
                                                                                                    list: ops
                                                                                                        HdlValueInt: 31
                                                                                                        HdlValueInt: 16
                                                                        HdlOp: ASSIGN
                                                                            list: ops
                                                                                HdlValueId: unaligned_valid_o
                                                                                HdlValueId: instr_rvalid_i
                                                            tuple
                                                                HdlValueInt: 11
                                                                HdlStmBlock: SEQ
                                                                    list: body
                                                                        HdlOp: ASSIGN
                                                                            list: ops
                                                                                HdlValueId: unaligned_rdata_o
                                                                                HdlOp: CONCAT
                                                                                    list: ops
                                                                                        HdlOp: INDEX
                                                                                            list: ops
                                                                                                HdlOp: INDEX
                                                                                                    list: ops
                                                                                                        HdlValueId: instr_rdata_i
                                                                                                        HdlValueInt: 3
                                                                                                HdlOp: DOWNTO
                                                                                                    list: ops
                                                                                                        HdlValueInt: 15
                                                                                                        HdlValueInt: 0
                                                                                        HdlOp: INDEX
                                                                                            list: ops
                                                                                                HdlOp: INDEX
                                                                                                    list: ops
                                                                                                        HdlValueId: instr_rdata_i
                                                                                                        HdlValueInt: 2
                                                                                                HdlOp: DOWNTO
                                                                                                    list: ops
                                                                                                        HdlValueInt: 31
                                                                                                        HdlValueInt: 16
                                                                        HdlOp: ASSIGN
                                                                            list: ops
                                                                                HdlValueId: unaligned_valid_o
                                                                                HdlValueId: instr_rvalid_i
                                                    HdlStmIf
                                                        HdlValueId: instr_rvalid_i
                                                        HdlStmBlock: SEQ
                                                            list: body
                                                                HdlStmIf
                                                                    HdlOp: AND_UNARY
                                                                        list: ops
                                                                            HdlValueId: pointer_cs
                                                                    HdlStmBlock: SEQ
                                                                        list: body
                                                                            HdlStmIf
                                                                                HdlValueId: ready_i
                                                                                HdlStmBlock: SEQ
                                                                                    list: body
                                                                                        HdlOp: ASSIGN
                                                                                            list: ops
                                                                                                HdlValueId: instr_req_o
                                                                                                HdlValueInt: 1
                                                                                        HdlOp: ASSIGN
                                                                                            list: ops
                                                                                                HdlValueId: instr_addr_o
                                                                                                HdlOp: ADD
                                                                                                    list: ops
                                                                                                        HdlValueId: current_address
                                                                                                        HdlValueInt: 10
                                                                                        HdlOp: ASSIGN
                                                                                            list: ops
                                                                                                HdlValueId: pointer_ns
                                                                                                HdlValueInt: 0
                                                                                        HdlOp: ASSIGN
                                                                                            list: ops
                                                                                                HdlValueId: update_current_address
                                                                                                HdlValueInt: 1
                                                                                        HdlStmIf
                                                                                            HdlValueId: instr_gnt_i
                                                                                            HdlOp: ASSIGN
                                                                                                list: ops
                                                                                                    HdlValueId: NS
                                                                                                    HdlValueId: WAIT_RVALID
                                                                                            list: elifs
                                                                                            HdlOp: ASSIGN
                                                                                                list: ops
                                                                                                    HdlValueId: NS
                                                                                                    HdlValueId: WAIT_GNT
                                                                                list: elifs
                                                                                HdlStmBlock: SEQ
                                                                                    list: body
                                                                                        HdlOp: ASSIGN
                                                                                            list: ops
                                                                                                HdlValueId: NS
                                                                                                HdlValueId: VALID_L0
                                                                    list: elifs
                                                                    HdlStmBlock: SEQ
                                                                        list: body
                                                                            HdlOp: ASSIGN
                                                                                list: ops
                                                                                    HdlValueId: NS
                                                                                    HdlValueId: VALID_L0
                                                                            HdlStmIf
                                                                                HdlValueId: ready_i
                                                                                HdlOp: ASSIGN
                                                                                    list: ops
                                                                                        HdlValueId: pointer_ns
                                                                                        HdlOp: ADD
                                                                                            list: ops
                                                                                                HdlValueId: pointer_cs
                                                                                                HdlValueInt: 1
                                                                                list: elifs
                                                                                HdlOp: ASSIGN
                                                                                    list: ops
                                                                                        HdlValueId: pointer_ns
                                                                                        HdlValueId: pointer_cs
                                                        list: elifs
                                                        HdlStmBlock: SEQ
                                                            list: body
                                                                HdlOp: ASSIGN
                                                                    list: ops
                                                                        HdlValueId: NS
                                                                        HdlValueId: WAIT_RVALID
                            tuple
                                HdlValueId: VALID_L0
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: valid_o
                                                HdlValueInt: 1
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: rdata_o
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: L0_buffer
                                                        HdlValueId: pointer_cs
                                        HdlStmCase: pointer_cs
                                            HdlStmCaseType: CASE
                                            HdlValueId: pointer_cs
                                            list: cases
                                                tuple
                                                    HdlValueInt: 00
                                                    HdlStmBlock: SEQ
                                                        list: body
                                                            HdlOp: ASSIGN
                                                                list: ops
                                                                    HdlValueId: unaligned_rdata_o
                                                                    HdlOp: CONCAT
                                                                        list: ops
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlOp: INDEX
                                                                                        list: ops
                                                                                            HdlValueId: L0_buffer
                                                                                            HdlValueInt: 0
                                                                                    HdlOp: DOWNTO
                                                                                        list: ops
                                                                                            HdlValueInt: 15
                                                                                            HdlValueInt: 0
                                                                            HdlValueId: previous_chunk
                                                            HdlOp: ASSIGN
                                                                list: ops
                                                                    HdlValueId: unaligned_valid_o
                                                                    HdlValueId: valid_previous_chunk
                                                tuple
                                                    HdlValueInt: 01
                                                    HdlStmBlock: SEQ
                                                        list: body
                                                            HdlOp: ASSIGN
                                                                list: ops
                                                                    HdlValueId: unaligned_rdata_o
                                                                    HdlOp: CONCAT
                                                                        list: ops
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlOp: INDEX
                                                                                        list: ops
                                                                                            HdlValueId: L0_buffer
                                                                                            HdlValueInt: 1
                                                                                    HdlOp: DOWNTO
                                                                                        list: ops
                                                                                            HdlValueInt: 15
                                                                                            HdlValueInt: 0
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlOp: INDEX
                                                                                        list: ops
                                                                                            HdlValueId: L0_buffer
                                                                                            HdlValueInt: 0
                                                                                    HdlOp: DOWNTO
                                                                                        list: ops
                                                                                            HdlValueInt: 31
                                                                                            HdlValueInt: 16
                                                            HdlOp: ASSIGN
                                                                list: ops
                                                                    HdlValueId: unaligned_valid_o
                                                                    HdlValueInt: 1
                                                tuple
                                                    HdlValueInt: 10
                                                    HdlStmBlock: SEQ
                                                        list: body
                                                            HdlOp: ASSIGN
                                                                list: ops
                                                                    HdlValueId: unaligned_rdata_o
                                                                    HdlOp: CONCAT
                                                                        list: ops
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlOp: INDEX
                                                                                        list: ops
                                                                                            HdlValueId: L0_buffer
                                                                                            HdlValueInt: 2
                                                                                    HdlOp: DOWNTO
                                                                                        list: ops
                                                                                            HdlValueInt: 15
                                                                                            HdlValueInt: 0
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlOp: INDEX
                                                                                        list: ops
                                                                                            HdlValueId: L0_buffer
                                                                                            HdlValueInt: 1
                                                                                    HdlOp: DOWNTO
                                                                                        list: ops
                                                                                            HdlValueInt: 31
                                                                                            HdlValueInt: 16
                                                            HdlOp: ASSIGN
                                                                list: ops
                                                                    HdlValueId: unaligned_valid_o
                                                                    HdlValueInt: 1
                                                tuple
                                                    HdlValueInt: 11
                                                    HdlStmBlock: SEQ
                                                        list: body
                                                            HdlOp: ASSIGN
                                                                list: ops
                                                                    HdlValueId: unaligned_rdata_o
                                                                    HdlOp: CONCAT
                                                                        list: ops
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlOp: INDEX
                                                                                        list: ops
                                                                                            HdlValueId: L0_buffer
                                                                                            HdlValueInt: 3
                                                                                    HdlOp: DOWNTO
                                                                                        list: ops
                                                                                            HdlValueInt: 15
                                                                                            HdlValueInt: 0
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlOp: INDEX
                                                                                        list: ops
                                                                                            HdlValueId: L0_buffer
                                                                                            HdlValueInt: 2
                                                                                    HdlOp: DOWNTO
                                                                                        list: ops
                                                                                            HdlValueInt: 31
                                                                                            HdlValueInt: 16
                                                            HdlOp: ASSIGN
                                                                list: ops
                                                                    HdlValueId: unaligned_valid_o
                                                                    HdlValueInt: 1
                                        HdlStmIf
                                            HdlValueId: branch_i
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: instr_req_o
                                                            HdlValueInt: 1
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: instr_addr_o
                                                            HdlOp: CONCAT
                                                                list: ops
                                                                    HdlOp: INDEX
                                                                        list: ops
                                                                            HdlValueId: addr_i
                                                                            HdlOp: DOWNTO
                                                                                list: ops
                                                                                    HdlValueInt: 31
                                                                                    HdlValueInt: 4
                                                                    HdlValueInt: 0000
                                                    HdlStmIf
                                                        HdlValueId: instr_gnt_i
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: NS
                                                                HdlValueId: WAIT_RVALID
                                                        list: elifs
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: NS
                                                                HdlValueId: WAIT_GNT
                                            list: elifs
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlStmIf
                                                        HdlValueId: ready_i
                                                        HdlStmBlock: SEQ
                                                            list: body
                                                                HdlStmIf
                                                                    HdlOp: AND_UNARY
                                                                        list: ops
                                                                            HdlValueId: pointer_cs
                                                                    HdlStmBlock: SEQ
                                                                        list: body
                                                                            HdlOp: ASSIGN
                                                                                list: ops
                                                                                    HdlValueId: instr_req_o
                                                                                    HdlValueInt: 1
                                                                            HdlOp: ASSIGN
                                                                                list: ops
                                                                                    HdlValueId: instr_addr_o
                                                                                    HdlOp: ADD
                                                                                        list: ops
                                                                                            HdlValueId: current_address
                                                                                            HdlValueInt: 10
                                                                            HdlOp: ASSIGN
                                                                                list: ops
                                                                                    HdlValueId: update_current_address
                                                                                    HdlValueInt: 1
                                                                            HdlOp: ASSIGN
                                                                                list: ops
                                                                                    HdlValueId: pointer_ns
                                                                                    HdlValueInt: 0
                                                                            HdlStmIf
                                                                                HdlValueId: instr_gnt_i
                                                                                HdlOp: ASSIGN
                                                                                    list: ops
                                                                                        HdlValueId: NS
                                                                                        HdlValueId: WAIT_RVALID
                                                                                list: elifs
                                                                                HdlOp: ASSIGN
                                                                                    list: ops
                                                                                        HdlValueId: NS
                                                                                        HdlValueId: WAIT_GNT
                                                                    list: elifs
                                                                    HdlStmBlock: SEQ
                                                                        list: body
                                                                            HdlOp: ASSIGN
                                                                                list: ops
                                                                                    HdlValueId: pointer_ns
                                                                                    HdlOp: ADD
                                                                                        list: ops
                                                                                            HdlValueId: pointer_cs
                                                                                            HdlValueInt: 1
                                                                            HdlOp: ASSIGN
                                                                                list: ops
                                                                                    HdlValueId: NS
                                                                                    HdlValueId: VALID_L0
                                                        list: elifs
                                                        HdlStmBlock: SEQ
                                                            list: body
                                                                HdlOp: ASSIGN
                                                                    list: ops
                                                                        HdlValueId: NS
                                                                        HdlValueId: VALID_L0
                            tuple
                                HdlValueId: WAIT_GNT
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlStmIf
                                            HdlValueId: branch_i
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: instr_req_o
                                                            HdlValueInt: 1
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: instr_addr_o
                                                            HdlOp: CONCAT
                                                                list: ops
                                                                    HdlOp: INDEX
                                                                        list: ops
                                                                            HdlValueId: addr_i
                                                                            HdlOp: DOWNTO
                                                                                list: ops
                                                                                    HdlValueInt: 31
                                                                                    HdlValueInt: 4
                                                                    HdlValueInt: 0000
                                                    HdlStmIf
                                                        HdlValueId: instr_gnt_i
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: NS
                                                                HdlValueId: WAIT_RVALID
                                                        list: elifs
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: NS
                                                                HdlValueId: WAIT_GNT
                                            list: elifs
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: instr_req_o
                                                            HdlValueInt: 1
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: instr_addr_o
                                                            HdlValueId: current_address
                                                    HdlStmIf
                                                        HdlValueId: instr_gnt_i
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: NS
                                                                HdlValueId: WAIT_RVALID
                                                        list: elifs
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: NS
                                                                HdlValueId: WAIT_GNT
                            tuple
                                HdlValueId: WAIT_ABORTED
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: clear_buffer
                                                HdlValueInt: 1
                                        HdlStmIf
                                            HdlValueId: instr_rvalid_i
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: instr_req_o
                                                            HdlValueInt: 1
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: instr_addr_o
                                                            HdlValueId: current_address
                                                    HdlStmIf
                                                        HdlValueId: instr_gnt_i
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: NS
                                                                HdlValueId: WAIT_RVALID
                                                        list: elifs
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: NS
                                                                HdlValueId: WAIT_GNT
                                            list: elifs
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: NS
                                                            HdlValueId: WAIT_ABORTED
                        HdlStmBlock: SEQ
                            list: body
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: NS
                                        HdlValueId: EMPTY
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: clear_buffer
                                        HdlValueInt: 1
            HdlStmProcessTriggerConstrain: COMB
        HdlStmProcess
            list: sensitivity
                HdlOp: RISING
                    list: ops
                        HdlValueId: clk
                HdlOp: FALLING
                    list: ops
                        HdlValueId: rst_n
            HdlStmBlock: SEQ
                list: body
                    HdlStmIf
                        HdlOp: EQ
                            list: ops
                                HdlValueId: rst_n
                                HdlValueInt: 0
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmAssign
                                    HdlValueInt: 0
                                    HdlValueId: valid_L0_buffer
                                HdlStmAssign
                                    HdlValueInt: 0
                                    HdlValueId: L0_buffer
                                HdlStmAssign
                                    HdlValueInt: 0
                                    HdlValueId: previous_chunk
                                HdlStmAssign
                                    HdlValueInt: 0
                                    HdlValueId: valid_previous_chunk
                        list: elifs
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmIf
                                    HdlOp: OR_LOG
                                        list: ops
                                            HdlValueId: branch_i
                                            HdlValueId: clear_buffer
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmAssign
                                                HdlValueInt: 0
                                                HdlValueId: valid_L0_buffer
                                            HdlStmAssign
                                                HdlValueInt: 0
                                                HdlValueId: valid_previous_chunk
                                    list: elifs
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmIf
                                                HdlValueId: instr_rvalid_i
                                                HdlStmBlock: SEQ
                                                    list: body
                                                        HdlStmAssign
                                                            HdlValueId: instr_rdata_i
                                                            HdlValueId: L0_buffer
                                                        HdlStmAssign
                                                            HdlValueInt: 1
                                                            HdlValueId: valid_L0_buffer
                                                        HdlStmIf
                                                            HdlValueId: valid_L0_buffer
                                                            HdlStmBlock: SEQ
                                                                list: body
                                                                    HdlStmAssign
                                                                        HdlValueInt: 1
                                                                        HdlValueId: valid_previous_chunk
                                                                    HdlStmAssign
                                                                        HdlOp: INDEX
                                                                            list: ops
                                                                                HdlOp: INDEX
                                                                                    list: ops
                                                                                        HdlValueId: L0_buffer
                                                                                        HdlValueInt: 3
                                                                                HdlOp: DOWNTO
                                                                                    list: ops
                                                                                        HdlValueInt: 31
                                                                                        HdlValueInt: 16
                                                                        HdlValueId: previous_chunk
                                                            list: elifs
                                                list: elifs
            HdlStmProcessTriggerConstrain: FF

INS HdlStmIf@@ to body
HdlStmIf
    HdlValueId: ready_i
    HdlStmAssign: if_true
        HdlValueInt: 0
        HdlValueId: is_prefetch_q
    list: elifs
    HdlStmAssign: if_false
        HdlValueId: is_prefetch_n
        HdlValueId: is_prefetch_q

UPD HdlStmIf@@ to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueId: current_address
    HdlValueId: last_address

UPD HdlStmAssign@@if_true to 

MOV HdlStmAssign@@if_true to 
HdlStmAssign: if_true
    HdlOp: ADD
        list: ops
            HdlValueId: current_address
            HdlValueInt: 10
    HdlValueId: current_address


CommitId: cc90e854717023d3dd6bf126ba5e1cd7a9ea5db4
Fix RVC handling in prefetch_L0_buffer
--- a/prefetch_L0_buffer.sv
+++ b/prefetch_L0_buffer.sv
@@ -101,21 +111,12 @@ module prefetch_L0_buffer
   always_comb
   begin
     valid_o                 = 1'b0;
-    addr_o                  = current_address + (pointer_cs<<2);
     pointer_ns              = pointer_cs;
     instr_req_o             = 1'b0;
     instr_addr_o            = (branch_i) ? addr_i : current_address + 5'h10;
     update_current_address  = 1'b0;
-    rdata_o                 = instr_rdata_i[pointer_cs];
     clear_buffer            = 1'b0;
-
-    case(addr_o[3:2])
-       2'b00: begin unaligned_rdata_o = {L0_buffer[0][15:0], previous_chunk      }; unaligned_valid_o = valid_previous_chunk;  end
-       2'b01: begin unaligned_rdata_o = {L0_buffer[1][15:0], L0_buffer[0][31:16] }; unaligned_valid_o = valid_o;               end
-       2'b10: begin unaligned_rdata_o = {L0_buffer[2][15:0], L0_buffer[1][31:16] }; unaligned_valid_o = valid_o;               end
-       2'b11: begin unaligned_rdata_o = {L0_buffer[3][15:0], L0_buffer[2][31:16] }; unaligned_valid_o = valid_o;               end
-    endcase // addr_o
-
+    is_prefetch_n           = is_prefetch_q;
 
     case(CS)
 

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD list@@body to objs
        MOV list@@body to SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: valid_o
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: addr_o
                    HdlOp: ADD
                        list: ops
                            HdlValueId: current_address
                            HdlOp: SLL
                                list: ops
                                    HdlValueId: pointer_cs
                                    HdlValueInt: 2
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: pointer_ns
                    HdlValueId: pointer_cs
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: instr_req_o
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: instr_addr_o
                    HdlOp: TERNARY
                        list: ops
                            HdlValueId: branch_i
                            HdlValueId: addr_i
                            HdlOp: ADD
                                list: ops
                                    HdlValueId: current_address
                                    HdlValueInt: 10
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: update_current_address
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: rdata_o
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: instr_rdata_i
                            HdlValueId: pointer_cs
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: clear_buffer
                    HdlValueInt: 0
            HdlStmCase: {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops':}]} 
                HdlStmCaseType: CASE
                HdlOp: INDEX
                    list: ops
                        HdlValueId: addr_o
                        HdlOp: DOWNTO
                            list: ops
                                HdlValueInt: 3
                                HdlValueInt: 2
                list: cases
                    tuple
                        HdlValueInt: 00
                        HdlStmBlock: SEQ
                            list: body
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: unaligned_rdata_o
                                        HdlOp: CONCAT
                                            list: ops
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlValueId: L0_buffer
                                                                HdlValueInt: 0
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 15
                                                                HdlValueInt: 0
                                                HdlValueId: previous_chunk
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: unaligned_valid_o
                                        HdlValueId: valid_previous_chunk
                    tuple
                        HdlValueInt: 01
                        HdlStmBlock: SEQ
                            list: body
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: unaligned_rdata_o
                                        HdlOp: CONCAT
                                            list: ops
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlValueId: L0_buffer
                                                                HdlValueInt: 1
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 15
                                                                HdlValueInt: 0
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlValueId: L0_buffer
                                                                HdlValueInt: 0
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 31
                                                                HdlValueInt: 16
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: unaligned_valid_o
                                        HdlValueId: valid_o
                    tuple
                        HdlValueInt: 10
                        HdlStmBlock: SEQ
                            list: body
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: unaligned_rdata_o
                                        HdlOp: CONCAT
                                            list: ops
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlValueId: L0_buffer
                                                                HdlValueInt: 2
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 15
                                                                HdlValueInt: 0
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlValueId: L0_buffer
                                                                HdlValueInt: 1
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 31
                                                                HdlValueInt: 16
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: unaligned_valid_o
                                        HdlValueId: valid_o
                    tuple
                        HdlValueInt: 11
                        HdlStmBlock: SEQ
                            list: body
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: unaligned_rdata_o
                                        HdlOp: CONCAT
                                            list: ops
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlValueId: L0_buffer
                                                                HdlValueInt: 3
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 15
                                                                HdlValueInt: 0
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlValueId: L0_buffer
                                                                HdlValueInt: 2
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 31
                                                                HdlValueInt: 16
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: unaligned_valid_o
                                        HdlValueId: valid_o
            HdlStmCase: CS
                HdlStmCaseType: CASE
                HdlValueId: CS
                list: cases
                    tuple
                        HdlValueId: EMPTY
                        HdlStmBlock: SEQ
                            list: body
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: instr_req_o
                                        HdlValueId: branch_i
                                HdlStmIf
                                    HdlValueId: branch_i
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmIf
                                                HdlValueId: instr_gnt_i
                                                HdlOp: ASSIGN
                                                    list: ops
                                                        HdlValueId: NS
                                                        HdlValueId: WAIT_RVALID
                                                list: elifs
                                                HdlOp: ASSIGN
                                                    list: ops
                                                        HdlValueId: NS
                                                        HdlValueId: WAIT_GNT
                                    list: elifs
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlOp: ASSIGN
                                                list: ops
                                                    HdlValueId: NS
                                                    HdlValueId: EMPTY
                    tuple
                        HdlValueId: WAIT_RVALID
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmIf
                                    HdlValueId: branch_i
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmIf
                                                HdlValueId: instr_rvalid_i
                                                HdlStmBlock: SEQ
                                                    list: body
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: instr_req_o
                                                                HdlValueInt: 1
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: instr_addr_o
                                                                HdlOp: CONCAT
                                                                    list: ops
                                                                        HdlOp: INDEX
                                                                            list: ops
                                                                                HdlValueId: addr_i
                                                                                HdlOp: DOWNTO
                                                                                    list: ops
                                                                                        HdlValueInt: 31
                                                                                        HdlValueInt: 4
                                                                        HdlValueInt: 0000
                                                        HdlStmIf
                                                            HdlValueId: instr_gnt_i
                                                            HdlOp: ASSIGN
                                                                list: ops
                                                                    HdlValueId: NS
                                                                    HdlValueId: WAIT_RVALID
                                                            list: elifs
                                                            HdlOp: ASSIGN
                                                                list: ops
                                                                    HdlValueId: NS
                                                                    HdlValueId: WAIT_GNT
                                                list: elifs
                                                HdlStmBlock: SEQ
                                                    list: body
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: NS
                                                                HdlValueId: WAIT_ABORTED
                                    list: elifs
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlOp: ASSIGN
                                                list: ops
                                                    HdlValueId: valid_o
                                                    HdlValueId: instr_rvalid_i
                                            HdlStmCase: pointer_cs
                                                HdlStmCaseType: CASE
                                                HdlValueId: pointer_cs
                                                list: cases
                                                    tuple
                                                        HdlValueInt: 00
                                                        HdlStmBlock: SEQ
                                                            list: body
                                                                HdlOp: ASSIGN
                                                                    list: ops
                                                                        HdlValueId: unaligned_rdata_o
                                                                        HdlOp: CONCAT
                                                                            list: ops
                                                                                HdlOp: INDEX
                                                                                    list: ops
                                                                                        HdlOp: INDEX
                                                                                            list: ops
                                                                                                HdlValueId: instr_rdata_i
                                                                                                HdlValueInt: 0
                                                                                        HdlOp: DOWNTO
                                                                                            list: ops
                                                                                                HdlValueInt: 15
                                                                                                HdlValueInt: 0
                                                                                HdlOp: INDEX
                                                                                    list: ops
                                                                                        HdlOp: INDEX
                                                                                            list: ops
                                                                                                HdlValueId: L0_buffer
                                                                                                HdlValueInt: 3
                                                                                        HdlOp: DOWNTO
                                                                                            list: ops
                                                                                                HdlValueInt: 31
                                                                                                HdlValueInt: 16
                                                                HdlStmIf
                                                                    HdlValueId: valid_L0_buffer
                                                                    HdlOp: ASSIGN
                                                                        list: ops
                                                                            HdlValueId: unaligned_valid_o
                                                                            HdlValueId: instr_rvalid_i
                                                                    list: elifs
                                                                    HdlOp: ASSIGN
                                                                        list: ops
                                                                            HdlValueId: unaligned_valid_o
                                                                            HdlValueInt: 0
                                                    tuple
                                                        HdlValueInt: 01
                                                        HdlStmBlock: SEQ
                                                            list: body
                                                                HdlOp: ASSIGN
                                                                    list: ops
                                                                        HdlValueId: unaligned_rdata_o
                                                                        HdlOp: CONCAT
                                                                            list: ops
                                                                                HdlOp: INDEX
                                                                                    list: ops
                                                                                        HdlOp: INDEX
                                                                                            list: ops
                                                                                                HdlValueId: instr_rdata_i
                                                                                                HdlValueInt: 1
                                                                                        HdlOp: DOWNTO
                                                                                            list: ops
                                                                                                HdlValueInt: 15
                                                                                                HdlValueInt: 0
                                                                                HdlOp: INDEX
                                                                                    list: ops
                                                                                        HdlOp: INDEX
                                                                                            list: ops
                                                                                                HdlValueId: instr_rdata_i
                                                                                                HdlValueInt: 0
                                                                                        HdlOp: DOWNTO
                                                                                            list: ops
                                                                                                HdlValueInt: 31
                                                                                                HdlValueInt: 16
                                                                HdlOp: ASSIGN
                                                                    list: ops
                                                                        HdlValueId: unaligned_valid_o
                                                                        HdlValueId: instr_rvalid_i
                                                    tuple
                                                        HdlValueInt: 10
                                                        HdlStmBlock: SEQ
                                                            list: body
                                                                HdlOp: ASSIGN
                                                                    list: ops
                                                                        HdlValueId: unaligned_rdata_o
                                                                        HdlOp: CONCAT
                                                                            list: ops
                                                                                HdlOp: INDEX
                                                                                    list: ops
                                                                                        HdlOp: INDEX
                                                                                            list: ops
                                                                                                HdlValueId: instr_rdata_i
                                                                                                HdlValueInt: 2
                                                                                        HdlOp: DOWNTO
                                                                                            list: ops
                                                                                                HdlValueInt: 15
                                                                                                HdlValueInt: 0
                                                                                HdlOp: INDEX
                                                                                    list: ops
                                                                                        HdlOp: INDEX
                                                                                            list: ops
                                                                                                HdlValueId: instr_rdata_i
                                                                                                HdlValueInt: 1
                                                                                        HdlOp: DOWNTO
                                                                                            list: ops
                                                                                                HdlValueInt: 31
                                                                                                HdlValueInt: 16
                                                                HdlOp: ASSIGN
                                                                    list: ops
                                                                        HdlValueId: unaligned_valid_o
                                                                        HdlValueId: instr_rvalid_i
                                                    tuple
                                                        HdlValueInt: 11
                                                        HdlStmBlock: SEQ
                                                            list: body
                                                                HdlOp: ASSIGN
                                                                    list: ops
                                                                        HdlValueId: unaligned_rdata_o
                                                                        HdlOp: CONCAT
                                                                            list: ops
                                                                                HdlOp: INDEX
                                                                                    list: ops
                                                                                        HdlOp: INDEX
                                                                                            list: ops
                                                                                                HdlValueId: instr_rdata_i
                                                                                                HdlValueInt: 3
                                                                                        HdlOp: DOWNTO
                                                                                            list: ops
                                                                                                HdlValueInt: 15
                                                                                                HdlValueInt: 0
                                                                                HdlOp: INDEX
                                                                                    list: ops
                                                                                        HdlOp: INDEX
                                                                                            list: ops
                                                                                                HdlValueId: instr_rdata_i
                                                                                                HdlValueInt: 2
                                                                                        HdlOp: DOWNTO
                                                                                            list: ops
                                                                                                HdlValueInt: 31
                                                                                                HdlValueInt: 16
                                                                HdlOp: ASSIGN
                                                                    list: ops
                                                                        HdlValueId: unaligned_valid_o
                                                                        HdlValueId: instr_rvalid_i
                                            HdlStmIf
                                                HdlValueId: instr_rvalid_i
                                                HdlStmBlock: SEQ
                                                    list: body
                                                        HdlStmIf
                                                            HdlOp: AND_UNARY
                                                                list: ops
                                                                    HdlValueId: pointer_cs
                                                            HdlStmBlock: SEQ
                                                                list: body
                                                                    HdlStmIf
                                                                        HdlValueId: ready_i
                                                                        HdlStmBlock: SEQ
                                                                            list: body
                                                                                HdlOp: ASSIGN
                                                                                    list: ops
                                                                                        HdlValueId: instr_req_o
                                                                                        HdlValueInt: 1
                                                                                HdlOp: ASSIGN
                                                                                    list: ops
                                                                                        HdlValueId: instr_addr_o
                                                                                        HdlOp: ADD
                                                                                            list: ops
                                                                                                HdlValueId: current_address
                                                                                                HdlValueInt: 10
                                                                                HdlOp: ASSIGN
                                                                                    list: ops
                                                                                        HdlValueId: pointer_ns
                                                                                        HdlValueInt: 0
                                                                                HdlOp: ASSIGN
                                                                                    list: ops
                                                                                        HdlValueId: update_current_address
                                                                                        HdlValueInt: 1
                                                                                HdlStmIf
                                                                                    HdlValueId: instr_gnt_i
                                                                                    HdlOp: ASSIGN
                                                                                        list: ops
                                                                                            HdlValueId: NS
                                                                                            HdlValueId: WAIT_RVALID
                                                                                    list: elifs
                                                                                    HdlOp: ASSIGN
                                                                                        list: ops
                                                                                            HdlValueId: NS
                                                                                            HdlValueId: WAIT_GNT
                                                                        list: elifs
                                                                        HdlStmBlock: SEQ
                                                                            list: body
                                                                                HdlOp: ASSIGN
                                                                                    list: ops
                                                                                        HdlValueId: NS
                                                                                        HdlValueId: VALID_L0
                                                            list: elifs
                                                            HdlStmBlock: SEQ
                                                                list: body
                                                                    HdlOp: ASSIGN
                                                                        list: ops
                                                                            HdlValueId: NS
                                                                            HdlValueId: VALID_L0
                                                                    HdlStmIf
                                                                        HdlValueId: ready_i
                                                                        HdlOp: ASSIGN
                                                                            list: ops
                                                                                HdlValueId: pointer_ns
                                                                                HdlOp: ADD
                                                                                    list: ops
                                                                                        HdlValueId: pointer_cs
                                                                                        HdlValueInt: 1
                                                                        list: elifs
                                                                        HdlOp: ASSIGN
                                                                            list: ops
                                                                                HdlValueId: pointer_ns
                                                                                HdlValueId: pointer_cs
                                                list: elifs
                                                HdlStmBlock: SEQ
                                                    list: body
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: NS
                                                                HdlValueId: WAIT_RVALID
                    tuple
                        HdlValueId: VALID_L0
                        HdlStmBlock: SEQ
                            list: body
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: valid_o
                                        HdlValueInt: 1
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: rdata_o
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: L0_buffer
                                                HdlValueId: pointer_cs
                                HdlStmCase: pointer_cs
                                    HdlStmCaseType: CASE
                                    HdlValueId: pointer_cs
                                    list: cases
                                        tuple
                                            HdlValueInt: 00
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: unaligned_rdata_o
                                                            HdlOp: CONCAT
                                                                list: ops
                                                                    HdlOp: INDEX
                                                                        list: ops
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlValueId: L0_buffer
                                                                                    HdlValueInt: 0
                                                                            HdlOp: DOWNTO
                                                                                list: ops
                                                                                    HdlValueInt: 15
                                                                                    HdlValueInt: 0
                                                                    HdlValueId: previous_chunk
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: unaligned_valid_o
                                                            HdlValueId: valid_previous_chunk
                                        tuple
                                            HdlValueInt: 01
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: unaligned_rdata_o
                                                            HdlOp: CONCAT
                                                                list: ops
                                                                    HdlOp: INDEX
                                                                        list: ops
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlValueId: L0_buffer
                                                                                    HdlValueInt: 1
                                                                            HdlOp: DOWNTO
                                                                                list: ops
                                                                                    HdlValueInt: 15
                                                                                    HdlValueInt: 0
                                                                    HdlOp: INDEX
                                                                        list: ops
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlValueId: L0_buffer
                                                                                    HdlValueInt: 0
                                                                            HdlOp: DOWNTO
                                                                                list: ops
                                                                                    HdlValueInt: 31
                                                                                    HdlValueInt: 16
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: unaligned_valid_o
                                                            HdlValueInt: 1
                                        tuple
                                            HdlValueInt: 10
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: unaligned_rdata_o
                                                            HdlOp: CONCAT
                                                                list: ops
                                                                    HdlOp: INDEX
                                                                        list: ops
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlValueId: L0_buffer
                                                                                    HdlValueInt: 2
                                                                            HdlOp: DOWNTO
                                                                                list: ops
                                                                                    HdlValueInt: 15
                                                                                    HdlValueInt: 0
                                                                    HdlOp: INDEX
                                                                        list: ops
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlValueId: L0_buffer
                                                                                    HdlValueInt: 1
                                                                            HdlOp: DOWNTO
                                                                                list: ops
                                                                                    HdlValueInt: 31
                                                                                    HdlValueInt: 16
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: unaligned_valid_o
                                                            HdlValueInt: 1
                                        tuple
                                            HdlValueInt: 11
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: unaligned_rdata_o
                                                            HdlOp: CONCAT
                                                                list: ops
                                                                    HdlOp: INDEX
                                                                        list: ops
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlValueId: L0_buffer
                                                                                    HdlValueInt: 3
                                                                            HdlOp: DOWNTO
                                                                                list: ops
                                                                                    HdlValueInt: 15
                                                                                    HdlValueInt: 0
                                                                    HdlOp: INDEX
                                                                        list: ops
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlValueId: L0_buffer
                                                                                    HdlValueInt: 2
                                                                            HdlOp: DOWNTO
                                                                                list: ops
                                                                                    HdlValueInt: 31
                                                                                    HdlValueInt: 16
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: unaligned_valid_o
                                                            HdlValueInt: 1
                                HdlStmIf
                                    HdlValueId: branch_i
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlOp: ASSIGN
                                                list: ops
                                                    HdlValueId: instr_req_o
                                                    HdlValueInt: 1
                                            HdlOp: ASSIGN
                                                list: ops
                                                    HdlValueId: instr_addr_o
                                                    HdlOp: CONCAT
                                                        list: ops
                                                            HdlOp: INDEX
                                                                list: ops
                                                                    HdlValueId: addr_i
                                                                    HdlOp: DOWNTO
                                                                        list: ops
                                                                            HdlValueInt: 31
                                                                            HdlValueInt: 4
                                                            HdlValueInt: 0000
                                            HdlStmIf
                                                HdlValueId: instr_gnt_i
                                                HdlOp: ASSIGN
                                                    list: ops
                                                        HdlValueId: NS
                                                        HdlValueId: WAIT_RVALID
                                                list: elifs
                                                HdlOp: ASSIGN
                                                    list: ops
                                                        HdlValueId: NS
                                                        HdlValueId: WAIT_GNT
                                    list: elifs
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmIf
                                                HdlValueId: ready_i
                                                HdlStmBlock: SEQ
                                                    list: body
                                                        HdlStmIf
                                                            HdlOp: AND_UNARY
                                                                list: ops
                                                                    HdlValueId: pointer_cs
                                                            HdlStmBlock: SEQ
                                                                list: body
                                                                    HdlOp: ASSIGN
                                                                        list: ops
                                                                            HdlValueId: instr_req_o
                                                                            HdlValueInt: 1
                                                                    HdlOp: ASSIGN
                                                                        list: ops
                                                                            HdlValueId: instr_addr_o
                                                                            HdlOp: ADD
                                                                                list: ops
                                                                                    HdlValueId: current_address
                                                                                    HdlValueInt: 10
                                                                    HdlOp: ASSIGN
                                                                        list: ops
                                                                            HdlValueId: update_current_address
                                                                            HdlValueInt: 1
                                                                    HdlOp: ASSIGN
                                                                        list: ops
                                                                            HdlValueId: pointer_ns
                                                                            HdlValueInt: 0
                                                                    HdlStmIf
                                                                        HdlValueId: instr_gnt_i
                                                                        HdlOp: ASSIGN
                                                                            list: ops
                                                                                HdlValueId: NS
                                                                                HdlValueId: WAIT_RVALID
                                                                        list: elifs
                                                                        HdlOp: ASSIGN
                                                                            list: ops
                                                                                HdlValueId: NS
                                                                                HdlValueId: WAIT_GNT
                                                            list: elifs
                                                            HdlStmBlock: SEQ
                                                                list: body
                                                                    HdlOp: ASSIGN
                                                                        list: ops
                                                                            HdlValueId: pointer_ns
                                                                            HdlOp: ADD
                                                                                list: ops
                                                                                    HdlValueId: pointer_cs
                                                                                    HdlValueInt: 1
                                                                    HdlOp: ASSIGN
                                                                        list: ops
                                                                            HdlValueId: NS
                                                                            HdlValueId: VALID_L0
                                                list: elifs
                                                HdlStmBlock: SEQ
                                                    list: body
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: NS
                                                                HdlValueId: VALID_L0
                    tuple
                        HdlValueId: WAIT_GNT
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmIf
                                    HdlValueId: branch_i
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlOp: ASSIGN
                                                list: ops
                                                    HdlValueId: instr_req_o
                                                    HdlValueInt: 1
                                            HdlOp: ASSIGN
                                                list: ops
                                                    HdlValueId: instr_addr_o
                                                    HdlOp: CONCAT
                                                        list: ops
                                                            HdlOp: INDEX
                                                                list: ops
                                                                    HdlValueId: addr_i
                                                                    HdlOp: DOWNTO
                                                                        list: ops
                                                                            HdlValueInt: 31
                                                                            HdlValueInt: 4
                                                            HdlValueInt: 0000
                                            HdlStmIf
                                                HdlValueId: instr_gnt_i
                                                HdlOp: ASSIGN
                                                    list: ops
                                                        HdlValueId: NS
                                                        HdlValueId: WAIT_RVALID
                                                list: elifs
                                                HdlOp: ASSIGN
                                                    list: ops
                                                        HdlValueId: NS
                                                        HdlValueId: WAIT_GNT
                                    list: elifs
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlOp: ASSIGN
                                                list: ops
                                                    HdlValueId: instr_req_o
                                                    HdlValueInt: 1
                                            HdlOp: ASSIGN
                                                list: ops
                                                    HdlValueId: instr_addr_o
                                                    HdlValueId: current_address
                                            HdlStmIf
                                                HdlValueId: instr_gnt_i
                                                HdlOp: ASSIGN
                                                    list: ops
                                                        HdlValueId: NS
                                                        HdlValueId: WAIT_RVALID
                                                list: elifs
                                                HdlOp: ASSIGN
                                                    list: ops
                                                        HdlValueId: NS
                                                        HdlValueId: WAIT_GNT
                    tuple
                        HdlValueId: WAIT_ABORTED
                        HdlStmBlock: SEQ
                            list: body
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: clear_buffer
                                        HdlValueInt: 1
                                HdlStmIf
                                    HdlValueId: instr_rvalid_i
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlOp: ASSIGN
                                                list: ops
                                                    HdlValueId: instr_req_o
                                                    HdlValueInt: 1
                                            HdlOp: ASSIGN
                                                list: ops
                                                    HdlValueId: instr_addr_o
                                                    HdlValueId: current_address
                                            HdlStmIf
                                                HdlValueId: instr_gnt_i
                                                HdlOp: ASSIGN
                                                    list: ops
                                                        HdlValueId: NS
                                                        HdlValueId: WAIT_RVALID
                                                list: elifs
                                                HdlOp: ASSIGN
                                                    list: ops
                                                        HdlValueId: NS
                                                        HdlValueId: WAIT_GNT
                                    list: elifs
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlOp: ASSIGN
                                                list: ops
                                                    HdlValueId: NS
                                                    HdlValueId: WAIT_ABORTED
                HdlStmBlock: SEQ
                    list: body
                        HdlOp: ASSIGN
                            list: ops
                                HdlValueId: NS
                                HdlValueId: EMPTY
                        HdlOp: ASSIGN
                            list: ops
                                HdlValueId: clear_buffer
                                HdlValueInt: 1
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: valid_o
                HdlValueInt: 0
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: pointer_ns
                HdlValueId: pointer_cs
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: instr_req_o
                HdlValueInt: 0
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: instr_addr_o
                HdlOp: TERNARY
                    list: ops
                        HdlValueId: branch_i
                        HdlValueId: addr_i
                        HdlOp: ADD
                            list: ops
                                HdlValueId: current_address
                                HdlValueInt: 10
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: update_current_address
                HdlValueInt: 0
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: clear_buffer
                HdlValueInt: 0
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: rdata_o
                HdlOp: INDEX
                    list: ops
                        HdlValueId: instr_rdata_i
                        HdlValueId: pointer_cs
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: addr_o
                HdlOp: ADD
                    list: ops
                        HdlValueId: current_address
                        HdlOp: SLL
                            list: ops
                                HdlValueId: pointer_cs
                                HdlValueInt: 2

MOV HdlModuleDef@@prefetch_L0_buffer to objs
HdlModuleDef: prefetch_L0_buffer
    HdlModuleDec: prefetch_L0_buffer
        list: params
            HdlIdDef: RDATA_IN_WIDTH
                HdlValueInt: 128
                HdlDirection: INTERNAL
        list: ports
            HdlIdDef: clk
                HdlOp: PARAMETRIZATION
                    list: ops
                        HdlValueId: logic
                HdlDirection: IN
            HdlIdDef: rst_n
                HdlOp: PARAMETRIZATION
                    list: ops
                        HdlValueId: logic
                HdlDirection: IN
            HdlIdDef: req_i
                HdlOp: PARAMETRIZATION
                    list: ops
                        HdlValueId: logic
                HdlDirection: IN
            HdlIdDef: branch_i
                HdlOp: PARAMETRIZATION
                    list: ops
                        HdlValueId: logic
                HdlDirection: IN
            HdlIdDef: ready_i
                HdlOp: PARAMETRIZATION
                    list: ops
                        HdlValueId: logic
                HdlDirection: IN
            HdlIdDef: addr_i
                HdlOp: PARAMETRIZATION
                    list: ops
                        HdlValueId: logic
                        HdlOp: DOWNTO
                            list: ops
                                HdlValueInt: 31
                                HdlValueInt: 0
                HdlDirection: IN
            HdlIdDef: valid_o
                HdlOp: PARAMETRIZATION
                    list: ops
                        HdlValueId: logic
                HdlDirection: OUT
            HdlIdDef: rdata_o
                HdlOp: PARAMETRIZATION
                    list: ops
                        HdlValueId: logic
                        HdlOp: DOWNTO
                            list: ops
                                HdlValueInt: 31
                                HdlValueInt: 0
                HdlDirection: OUT
            HdlIdDef: addr_o
                HdlOp: PARAMETRIZATION
                    list: ops
                        HdlValueId: logic
                        HdlOp: DOWNTO
                            list: ops
                                HdlValueInt: 31
                                HdlValueInt: 0
                HdlDirection: OUT
            HdlIdDef: unaligned_valid_o
                HdlOp: PARAMETRIZATION
                    list: ops
                        HdlValueId: logic
                HdlDirection: OUT
            HdlIdDef: unaligned_rdata_o
                HdlOp: PARAMETRIZATION
                    list: ops
                        HdlValueId: logic
                        HdlOp: DOWNTO
                            list: ops
                                HdlValueInt: 31
                                HdlValueInt: 0
                HdlDirection: OUT
            HdlIdDef: instr_req_o
                HdlOp: PARAMETRIZATION
                    list: ops
                        HdlValueId: logic
                HdlDirection: OUT
            HdlIdDef: instr_addr_o
                HdlOp: PARAMETRIZATION
                    list: ops
                        HdlValueId: logic
                        HdlOp: DOWNTO
                            list: ops
                                HdlValueInt: 31
                                HdlValueInt: 0
                HdlDirection: OUT
            HdlIdDef: instr_gnt_i
                HdlOp: PARAMETRIZATION
                    list: ops
                        HdlValueId: logic
                HdlDirection: IN
            HdlIdDef: instr_rvalid_i
                HdlOp: PARAMETRIZATION
                    list: ops
                        HdlValueId: logic
                HdlDirection: IN
            HdlIdDef: instr_rdata_i
                HdlOp: INDEX
                    list: ops
                        HdlOp: PARAMETRIZATION
                            list: ops
                                HdlValueId: logic
                                HdlOp: DOWNTO
                                    list: ops
                                        HdlOp: SUB
                                            list: ops
                                                HdlOp: DIV
                                                    list: ops
                                                        HdlValueId: RDATA_IN_WIDTH
                                                        HdlValueInt: 32
                                                HdlValueInt: 1
                                        HdlValueInt: 0
                        HdlOp: DOWNTO
                            list: ops
                                HdlValueInt: 31
                                HdlValueInt: 0
                HdlDirection: IN
            HdlIdDef: busy_o
                HdlOp: PARAMETRIZATION
                    list: ops
                        HdlValueId: logic
                HdlDirection: OUT
        list: objs
    list: objs
        HdlIdDef: CS
            HdlExprNotImplemented: type
            HdlDirection: INTERNAL
        HdlIdDef: NS
            HdlExprNotImplemented: type
            HdlDirection: INTERNAL
        HdlIdDef: current_address
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: logic
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 31
                            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlIdDef: pointer_cs
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: logic
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 1
                            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlIdDef: pointer_ns
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: logic
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 1
                            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlIdDef: update_current_address
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: logic
            HdlDirection: INTERNAL
        HdlIdDef: L0_buffer
            HdlOp: INDEX
                list: ops
                    HdlOp: PARAMETRIZATION
                        list: ops
                            HdlValueId: logic
                            HdlOp: DOWNTO
                                list: ops
                                    HdlValueInt: 3
                                    HdlValueInt: 0
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 31
                            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlIdDef: valid_L0_buffer
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: logic
            HdlDirection: INTERNAL
        HdlIdDef: previous_chunk
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: logic
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 15
                            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlIdDef: valid_previous_chunk
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: logic
            HdlDirection: INTERNAL
        HdlIdDef: clear_buffer
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: logic
            HdlDirection: INTERNAL
        HdlStmAssign
            HdlOp: NE
                list: ops
                    HdlValueId: CS
                    HdlValueId: EMPTY
            HdlValueId: busy_o
        HdlStmProcess
            list: sensitivity
                HdlOp: RISING
                    list: ops
                        HdlValueId: clk
                HdlOp: FALLING
                    list: ops
                        HdlValueId: rst_n
            HdlStmBlock: SEQ
                list: body
                    HdlStmIf
                        HdlOp: NEG
                            list: ops
                                HdlValueId: rst_n
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmAssign
                                    HdlValueId: EMPTY
                                    HdlValueId: CS
                                HdlStmAssign
                                    HdlValueInt: 0
                                    HdlValueId: current_address
                                HdlStmAssign
                                    HdlValueInt: 0
                                    HdlValueId: pointer_cs
                        list: elifs
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmAssign
                                    HdlValueId: NS
                                    HdlValueId: CS
                                HdlStmIf
                                    HdlValueId: branch_i
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmAssign
                                                HdlOp: CONCAT
                                                    list: ops
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlValueId: addr_i
                                                                HdlOp: DOWNTO
                                                                    list: ops
                                                                        HdlValueInt: 31
                                                                        HdlValueInt: 4
                                                        HdlValueInt: 0000
                                                HdlValueId: current_address
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: addr_i
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 3
                                                                HdlValueInt: 2
                                                HdlValueId: pointer_cs
                                    list: elifs
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmIf
                                                HdlValueId: update_current_address
                                                HdlStmAssign: if_true
                                                    HdlOp: ADD
                                                        list: ops
                                                            HdlValueId: current_address
                                                            HdlValueInt: 10
                                                    HdlValueId: current_address
                                                list: elifs
                                            HdlStmAssign
                                                HdlValueId: pointer_ns
                                                HdlValueId: pointer_cs
            HdlStmProcessTriggerConstrain: FF
        HdlStmProcess
            HdlStmBlock: SEQ
                list: body
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: valid_o
                            HdlValueInt: 0
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: addr_o
                            HdlOp: ADD
                                list: ops
                                    HdlValueId: current_address
                                    HdlOp: SLL
                                        list: ops
                                            HdlValueId: pointer_cs
                                            HdlValueInt: 2
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: pointer_ns
                            HdlValueId: pointer_cs
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: instr_req_o
                            HdlValueInt: 0
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: instr_addr_o
                            HdlOp: TERNARY
                                list: ops
                                    HdlValueId: branch_i
                                    HdlValueId: addr_i
                                    HdlOp: ADD
                                        list: ops
                                            HdlValueId: current_address
                                            HdlValueInt: 10
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: update_current_address
                            HdlValueInt: 0
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: rdata_o
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: instr_rdata_i
                                    HdlValueId: pointer_cs
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: clear_buffer
                            HdlValueInt: 0
                    HdlStmCase: {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops':}]} 
                        HdlStmCaseType: CASE
                        HdlOp: INDEX
                            list: ops
                                HdlValueId: addr_o
                                HdlOp: DOWNTO
                                    list: ops
                                        HdlValueInt: 3
                                        HdlValueInt: 2
                        list: cases
                            tuple
                                HdlValueInt: 00
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: unaligned_rdata_o
                                                HdlOp: CONCAT
                                                    list: ops
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlOp: INDEX
                                                                    list: ops
                                                                        HdlValueId: L0_buffer
                                                                        HdlValueInt: 0
                                                                HdlOp: DOWNTO
                                                                    list: ops
                                                                        HdlValueInt: 15
                                                                        HdlValueInt: 0
                                                        HdlValueId: previous_chunk
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: unaligned_valid_o
                                                HdlValueId: valid_previous_chunk
                            tuple
                                HdlValueInt: 01
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: unaligned_rdata_o
                                                HdlOp: CONCAT
                                                    list: ops
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlOp: INDEX
                                                                    list: ops
                                                                        HdlValueId: L0_buffer
                                                                        HdlValueInt: 1
                                                                HdlOp: DOWNTO
                                                                    list: ops
                                                                        HdlValueInt: 15
                                                                        HdlValueInt: 0
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlOp: INDEX
                                                                    list: ops
                                                                        HdlValueId: L0_buffer
                                                                        HdlValueInt: 0
                                                                HdlOp: DOWNTO
                                                                    list: ops
                                                                        HdlValueInt: 31
                                                                        HdlValueInt: 16
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: unaligned_valid_o
                                                HdlValueId: valid_o
                            tuple
                                HdlValueInt: 10
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: unaligned_rdata_o
                                                HdlOp: CONCAT
                                                    list: ops
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlOp: INDEX
                                                                    list: ops
                                                                        HdlValueId: L0_buffer
                                                                        HdlValueInt: 2
                                                                HdlOp: DOWNTO
                                                                    list: ops
                                                                        HdlValueInt: 15
                                                                        HdlValueInt: 0
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlOp: INDEX
                                                                    list: ops
                                                                        HdlValueId: L0_buffer
                                                                        HdlValueInt: 1
                                                                HdlOp: DOWNTO
                                                                    list: ops
                                                                        HdlValueInt: 31
                                                                        HdlValueInt: 16
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: unaligned_valid_o
                                                HdlValueId: valid_o
                            tuple
                                HdlValueInt: 11
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: unaligned_rdata_o
                                                HdlOp: CONCAT
                                                    list: ops
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlOp: INDEX
                                                                    list: ops
                                                                        HdlValueId: L0_buffer
                                                                        HdlValueInt: 3
                                                                HdlOp: DOWNTO
                                                                    list: ops
                                                                        HdlValueInt: 15
                                                                        HdlValueInt: 0
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlOp: INDEX
                                                                    list: ops
                                                                        HdlValueId: L0_buffer
                                                                        HdlValueInt: 2
                                                                HdlOp: DOWNTO
                                                                    list: ops
                                                                        HdlValueInt: 31
                                                                        HdlValueInt: 16
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: unaligned_valid_o
                                                HdlValueId: valid_o
                    HdlStmCase: CS
                        HdlStmCaseType: CASE
                        HdlValueId: CS
                        list: cases
                            tuple
                                HdlValueId: EMPTY
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: instr_req_o
                                                HdlValueId: branch_i
                                        HdlStmIf
                                            HdlValueId: branch_i
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlStmIf
                                                        HdlValueId: instr_gnt_i
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: NS
                                                                HdlValueId: WAIT_RVALID
                                                        list: elifs
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: NS
                                                                HdlValueId: WAIT_GNT
                                            list: elifs
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: NS
                                                            HdlValueId: EMPTY
                            tuple
                                HdlValueId: WAIT_RVALID
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlStmIf
                                            HdlValueId: branch_i
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlStmIf
                                                        HdlValueId: instr_rvalid_i
                                                        HdlStmBlock: SEQ
                                                            list: body
                                                                HdlOp: ASSIGN
                                                                    list: ops
                                                                        HdlValueId: instr_req_o
                                                                        HdlValueInt: 1
                                                                HdlOp: ASSIGN
                                                                    list: ops
                                                                        HdlValueId: instr_addr_o
                                                                        HdlOp: CONCAT
                                                                            list: ops
                                                                                HdlOp: INDEX
                                                                                    list: ops
                                                                                        HdlValueId: addr_i
                                                                                        HdlOp: DOWNTO
                                                                                            list: ops
                                                                                                HdlValueInt: 31
                                                                                                HdlValueInt: 4
                                                                                HdlValueInt: 0000
                                                                HdlStmIf
                                                                    HdlValueId: instr_gnt_i
                                                                    HdlOp: ASSIGN
                                                                        list: ops
                                                                            HdlValueId: NS
                                                                            HdlValueId: WAIT_RVALID
                                                                    list: elifs
                                                                    HdlOp: ASSIGN
                                                                        list: ops
                                                                            HdlValueId: NS
                                                                            HdlValueId: WAIT_GNT
                                                        list: elifs
                                                        HdlStmBlock: SEQ
                                                            list: body
                                                                HdlOp: ASSIGN
                                                                    list: ops
                                                                        HdlValueId: NS
                                                                        HdlValueId: WAIT_ABORTED
                                            list: elifs
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: valid_o
                                                            HdlValueId: instr_rvalid_i
                                                    HdlStmCase: pointer_cs
                                                        HdlStmCaseType: CASE
                                                        HdlValueId: pointer_cs
                                                        list: cases
                                                            tuple
                                                                HdlValueInt: 00
                                                                HdlStmBlock: SEQ
                                                                    list: body
                                                                        HdlOp: ASSIGN
                                                                            list: ops
                                                                                HdlValueId: unaligned_rdata_o
                                                                                HdlOp: CONCAT
                                                                                    list: ops
                                                                                        HdlOp: INDEX
                                                                                            list: ops
                                                                                                HdlOp: INDEX
                                                                                                    list: ops
                                                                                                        HdlValueId: instr_rdata_i
                                                                                                        HdlValueInt: 0
                                                                                                HdlOp: DOWNTO
                                                                                                    list: ops
                                                                                                        HdlValueInt: 15
                                                                                                        HdlValueInt: 0
                                                                                        HdlOp: INDEX
                                                                                            list: ops
                                                                                                HdlOp: INDEX
                                                                                                    list: ops
                                                                                                        HdlValueId: L0_buffer
                                                                                                        HdlValueInt: 3
                                                                                                HdlOp: DOWNTO
                                                                                                    list: ops
                                                                                                        HdlValueInt: 31
                                                                                                        HdlValueInt: 16
                                                                        HdlStmIf
                                                                            HdlValueId: valid_L0_buffer
                                                                            HdlOp: ASSIGN
                                                                                list: ops
                                                                                    HdlValueId: unaligned_valid_o
                                                                                    HdlValueId: instr_rvalid_i
                                                                            list: elifs
                                                                            HdlOp: ASSIGN
                                                                                list: ops
                                                                                    HdlValueId: unaligned_valid_o
                                                                                    HdlValueInt: 0
                                                            tuple
                                                                HdlValueInt: 01
                                                                HdlStmBlock: SEQ
                                                                    list: body
                                                                        HdlOp: ASSIGN
                                                                            list: ops
                                                                                HdlValueId: unaligned_rdata_o
                                                                                HdlOp: CONCAT
                                                                                    list: ops
                                                                                        HdlOp: INDEX
                                                                                            list: ops
                                                                                                HdlOp: INDEX
                                                                                                    list: ops
                                                                                                        HdlValueId: instr_rdata_i
                                                                                                        HdlValueInt: 1
                                                                                                HdlOp: DOWNTO
                                                                                                    list: ops
                                                                                                        HdlValueInt: 15
                                                                                                        HdlValueInt: 0
                                                                                        HdlOp: INDEX
                                                                                            list: ops
                                                                                                HdlOp: INDEX
                                                                                                    list: ops
                                                                                                        HdlValueId: instr_rdata_i
                                                                                                        HdlValueInt: 0
                                                                                                HdlOp: DOWNTO
                                                                                                    list: ops
                                                                                                        HdlValueInt: 31
                                                                                                        HdlValueInt: 16
                                                                        HdlOp: ASSIGN
                                                                            list: ops
                                                                                HdlValueId: unaligned_valid_o
                                                                                HdlValueId: instr_rvalid_i
                                                            tuple
                                                                HdlValueInt: 10
                                                                HdlStmBlock: SEQ
                                                                    list: body
                                                                        HdlOp: ASSIGN
                                                                            list: ops
                                                                                HdlValueId: unaligned_rdata_o
                                                                                HdlOp: CONCAT
                                                                                    list: ops
                                                                                        HdlOp: INDEX
                                                                                            list: ops
                                                                                                HdlOp: INDEX
                                                                                                    list: ops
                                                                                                        HdlValueId: instr_rdata_i
                                                                                                        HdlValueInt: 2
                                                                                                HdlOp: DOWNTO
                                                                                                    list: ops
                                                                                                        HdlValueInt: 15
                                                                                                        HdlValueInt: 0
                                                                                        HdlOp: INDEX
                                                                                            list: ops
                                                                                                HdlOp: INDEX
                                                                                                    list: ops
                                                                                                        HdlValueId: instr_rdata_i
                                                                                                        HdlValueInt: 1
                                                                                                HdlOp: DOWNTO
                                                                                                    list: ops
                                                                                                        HdlValueInt: 31
                                                                                                        HdlValueInt: 16
                                                                        HdlOp: ASSIGN
                                                                            list: ops
                                                                                HdlValueId: unaligned_valid_o
                                                                                HdlValueId: instr_rvalid_i
                                                            tuple
                                                                HdlValueInt: 11
                                                                HdlStmBlock: SEQ
                                                                    list: body
                                                                        HdlOp: ASSIGN
                                                                            list: ops
                                                                                HdlValueId: unaligned_rdata_o
                                                                                HdlOp: CONCAT
                                                                                    list: ops
                                                                                        HdlOp: INDEX
                                                                                            list: ops
                                                                                                HdlOp: INDEX
                                                                                                    list: ops
                                                                                                        HdlValueId: instr_rdata_i
                                                                                                        HdlValueInt: 3
                                                                                                HdlOp: DOWNTO
                                                                                                    list: ops
                                                                                                        HdlValueInt: 15
                                                                                                        HdlValueInt: 0
                                                                                        HdlOp: INDEX
                                                                                            list: ops
                                                                                                HdlOp: INDEX
                                                                                                    list: ops
                                                                                                        HdlValueId: instr_rdata_i
                                                                                                        HdlValueInt: 2
                                                                                                HdlOp: DOWNTO
                                                                                                    list: ops
                                                                                                        HdlValueInt: 31
                                                                                                        HdlValueInt: 16
                                                                        HdlOp: ASSIGN
                                                                            list: ops
                                                                                HdlValueId: unaligned_valid_o
                                                                                HdlValueId: instr_rvalid_i
                                                    HdlStmIf
                                                        HdlValueId: instr_rvalid_i
                                                        HdlStmBlock: SEQ
                                                            list: body
                                                                HdlStmIf
                                                                    HdlOp: AND_UNARY
                                                                        list: ops
                                                                            HdlValueId: pointer_cs
                                                                    HdlStmBlock: SEQ
                                                                        list: body
                                                                            HdlStmIf
                                                                                HdlValueId: ready_i
                                                                                HdlStmBlock: SEQ
                                                                                    list: body
                                                                                        HdlOp: ASSIGN
                                                                                            list: ops
                                                                                                HdlValueId: instr_req_o
                                                                                                HdlValueInt: 1
                                                                                        HdlOp: ASSIGN
                                                                                            list: ops
                                                                                                HdlValueId: instr_addr_o
                                                                                                HdlOp: ADD
                                                                                                    list: ops
                                                                                                        HdlValueId: current_address
                                                                                                        HdlValueInt: 10
                                                                                        HdlOp: ASSIGN
                                                                                            list: ops
                                                                                                HdlValueId: pointer_ns
                                                                                                HdlValueInt: 0
                                                                                        HdlOp: ASSIGN
                                                                                            list: ops
                                                                                                HdlValueId: update_current_address
                                                                                                HdlValueInt: 1
                                                                                        HdlStmIf
                                                                                            HdlValueId: instr_gnt_i
                                                                                            HdlOp: ASSIGN
                                                                                                list: ops
                                                                                                    HdlValueId: NS
                                                                                                    HdlValueId: WAIT_RVALID
                                                                                            list: elifs
                                                                                            HdlOp: ASSIGN
                                                                                                list: ops
                                                                                                    HdlValueId: NS
                                                                                                    HdlValueId: WAIT_GNT
                                                                                list: elifs
                                                                                HdlStmBlock: SEQ
                                                                                    list: body
                                                                                        HdlOp: ASSIGN
                                                                                            list: ops
                                                                                                HdlValueId: NS
                                                                                                HdlValueId: VALID_L0
                                                                    list: elifs
                                                                    HdlStmBlock: SEQ
                                                                        list: body
                                                                            HdlOp: ASSIGN
                                                                                list: ops
                                                                                    HdlValueId: NS
                                                                                    HdlValueId: VALID_L0
                                                                            HdlStmIf
                                                                                HdlValueId: ready_i
                                                                                HdlOp: ASSIGN
                                                                                    list: ops
                                                                                        HdlValueId: pointer_ns
                                                                                        HdlOp: ADD
                                                                                            list: ops
                                                                                                HdlValueId: pointer_cs
                                                                                                HdlValueInt: 1
                                                                                list: elifs
                                                                                HdlOp: ASSIGN
                                                                                    list: ops
                                                                                        HdlValueId: pointer_ns
                                                                                        HdlValueId: pointer_cs
                                                        list: elifs
                                                        HdlStmBlock: SEQ
                                                            list: body
                                                                HdlOp: ASSIGN
                                                                    list: ops
                                                                        HdlValueId: NS
                                                                        HdlValueId: WAIT_RVALID
                            tuple
                                HdlValueId: VALID_L0
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: valid_o
                                                HdlValueInt: 1
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: rdata_o
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: L0_buffer
                                                        HdlValueId: pointer_cs
                                        HdlStmCase: pointer_cs
                                            HdlStmCaseType: CASE
                                            HdlValueId: pointer_cs
                                            list: cases
                                                tuple
                                                    HdlValueInt: 00
                                                    HdlStmBlock: SEQ
                                                        list: body
                                                            HdlOp: ASSIGN
                                                                list: ops
                                                                    HdlValueId: unaligned_rdata_o
                                                                    HdlOp: CONCAT
                                                                        list: ops
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlOp: INDEX
                                                                                        list: ops
                                                                                            HdlValueId: L0_buffer
                                                                                            HdlValueInt: 0
                                                                                    HdlOp: DOWNTO
                                                                                        list: ops
                                                                                            HdlValueInt: 15
                                                                                            HdlValueInt: 0
                                                                            HdlValueId: previous_chunk
                                                            HdlOp: ASSIGN
                                                                list: ops
                                                                    HdlValueId: unaligned_valid_o
                                                                    HdlValueId: valid_previous_chunk
                                                tuple
                                                    HdlValueInt: 01
                                                    HdlStmBlock: SEQ
                                                        list: body
                                                            HdlOp: ASSIGN
                                                                list: ops
                                                                    HdlValueId: unaligned_rdata_o
                                                                    HdlOp: CONCAT
                                                                        list: ops
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlOp: INDEX
                                                                                        list: ops
                                                                                            HdlValueId: L0_buffer
                                                                                            HdlValueInt: 1
                                                                                    HdlOp: DOWNTO
                                                                                        list: ops
                                                                                            HdlValueInt: 15
                                                                                            HdlValueInt: 0
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlOp: INDEX
                                                                                        list: ops
                                                                                            HdlValueId: L0_buffer
                                                                                            HdlValueInt: 0
                                                                                    HdlOp: DOWNTO
                                                                                        list: ops
                                                                                            HdlValueInt: 31
                                                                                            HdlValueInt: 16
                                                            HdlOp: ASSIGN
                                                                list: ops
                                                                    HdlValueId: unaligned_valid_o
                                                                    HdlValueInt: 1
                                                tuple
                                                    HdlValueInt: 10
                                                    HdlStmBlock: SEQ
                                                        list: body
                                                            HdlOp: ASSIGN
                                                                list: ops
                                                                    HdlValueId: unaligned_rdata_o
                                                                    HdlOp: CONCAT
                                                                        list: ops
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlOp: INDEX
                                                                                        list: ops
                                                                                            HdlValueId: L0_buffer
                                                                                            HdlValueInt: 2
                                                                                    HdlOp: DOWNTO
                                                                                        list: ops
                                                                                            HdlValueInt: 15
                                                                                            HdlValueInt: 0
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlOp: INDEX
                                                                                        list: ops
                                                                                            HdlValueId: L0_buffer
                                                                                            HdlValueInt: 1
                                                                                    HdlOp: DOWNTO
                                                                                        list: ops
                                                                                            HdlValueInt: 31
                                                                                            HdlValueInt: 16
                                                            HdlOp: ASSIGN
                                                                list: ops
                                                                    HdlValueId: unaligned_valid_o
                                                                    HdlValueInt: 1
                                                tuple
                                                    HdlValueInt: 11
                                                    HdlStmBlock: SEQ
                                                        list: body
                                                            HdlOp: ASSIGN
                                                                list: ops
                                                                    HdlValueId: unaligned_rdata_o
                                                                    HdlOp: CONCAT
                                                                        list: ops
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlOp: INDEX
                                                                                        list: ops
                                                                                            HdlValueId: L0_buffer
                                                                                            HdlValueInt: 3
                                                                                    HdlOp: DOWNTO
                                                                                        list: ops
                                                                                            HdlValueInt: 15
                                                                                            HdlValueInt: 0
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlOp: INDEX
                                                                                        list: ops
                                                                                            HdlValueId: L0_buffer
                                                                                            HdlValueInt: 2
                                                                                    HdlOp: DOWNTO
                                                                                        list: ops
                                                                                            HdlValueInt: 31
                                                                                            HdlValueInt: 16
                                                            HdlOp: ASSIGN
                                                                list: ops
                                                                    HdlValueId: unaligned_valid_o
                                                                    HdlValueInt: 1
                                        HdlStmIf
                                            HdlValueId: branch_i
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: instr_req_o
                                                            HdlValueInt: 1
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: instr_addr_o
                                                            HdlOp: CONCAT
                                                                list: ops
                                                                    HdlOp: INDEX
                                                                        list: ops
                                                                            HdlValueId: addr_i
                                                                            HdlOp: DOWNTO
                                                                                list: ops
                                                                                    HdlValueInt: 31
                                                                                    HdlValueInt: 4
                                                                    HdlValueInt: 0000
                                                    HdlStmIf
                                                        HdlValueId: instr_gnt_i
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: NS
                                                                HdlValueId: WAIT_RVALID
                                                        list: elifs
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: NS
                                                                HdlValueId: WAIT_GNT
                                            list: elifs
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlStmIf
                                                        HdlValueId: ready_i
                                                        HdlStmBlock: SEQ
                                                            list: body
                                                                HdlStmIf
                                                                    HdlOp: AND_UNARY
                                                                        list: ops
                                                                            HdlValueId: pointer_cs
                                                                    HdlStmBlock: SEQ
                                                                        list: body
                                                                            HdlOp: ASSIGN
                                                                                list: ops
                                                                                    HdlValueId: instr_req_o
                                                                                    HdlValueInt: 1
                                                                            HdlOp: ASSIGN
                                                                                list: ops
                                                                                    HdlValueId: instr_addr_o
                                                                                    HdlOp: ADD
                                                                                        list: ops
                                                                                            HdlValueId: current_address
                                                                                            HdlValueInt: 10
                                                                            HdlOp: ASSIGN
                                                                                list: ops
                                                                                    HdlValueId: update_current_address
                                                                                    HdlValueInt: 1
                                                                            HdlOp: ASSIGN
                                                                                list: ops
                                                                                    HdlValueId: pointer_ns
                                                                                    HdlValueInt: 0
                                                                            HdlStmIf
                                                                                HdlValueId: instr_gnt_i
                                                                                HdlOp: ASSIGN
                                                                                    list: ops
                                                                                        HdlValueId: NS
                                                                                        HdlValueId: WAIT_RVALID
                                                                                list: elifs
                                                                                HdlOp: ASSIGN
                                                                                    list: ops
                                                                                        HdlValueId: NS
                                                                                        HdlValueId: WAIT_GNT
                                                                    list: elifs
                                                                    HdlStmBlock: SEQ
                                                                        list: body
                                                                            HdlOp: ASSIGN
                                                                                list: ops
                                                                                    HdlValueId: pointer_ns
                                                                                    HdlOp: ADD
                                                                                        list: ops
                                                                                            HdlValueId: pointer_cs
                                                                                            HdlValueInt: 1
                                                                            HdlOp: ASSIGN
                                                                                list: ops
                                                                                    HdlValueId: NS
                                                                                    HdlValueId: VALID_L0
                                                        list: elifs
                                                        HdlStmBlock: SEQ
                                                            list: body
                                                                HdlOp: ASSIGN
                                                                    list: ops
                                                                        HdlValueId: NS
                                                                        HdlValueId: VALID_L0
                            tuple
                                HdlValueId: WAIT_GNT
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlStmIf
                                            HdlValueId: branch_i
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: instr_req_o
                                                            HdlValueInt: 1
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: instr_addr_o
                                                            HdlOp: CONCAT
                                                                list: ops
                                                                    HdlOp: INDEX
                                                                        list: ops
                                                                            HdlValueId: addr_i
                                                                            HdlOp: DOWNTO
                                                                                list: ops
                                                                                    HdlValueInt: 31
                                                                                    HdlValueInt: 4
                                                                    HdlValueInt: 0000
                                                    HdlStmIf
                                                        HdlValueId: instr_gnt_i
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: NS
                                                                HdlValueId: WAIT_RVALID
                                                        list: elifs
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: NS
                                                                HdlValueId: WAIT_GNT
                                            list: elifs
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: instr_req_o
                                                            HdlValueInt: 1
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: instr_addr_o
                                                            HdlValueId: current_address
                                                    HdlStmIf
                                                        HdlValueId: instr_gnt_i
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: NS
                                                                HdlValueId: WAIT_RVALID
                                                        list: elifs
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: NS
                                                                HdlValueId: WAIT_GNT
                            tuple
                                HdlValueId: WAIT_ABORTED
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: clear_buffer
                                                HdlValueInt: 1
                                        HdlStmIf
                                            HdlValueId: instr_rvalid_i
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: instr_req_o
                                                            HdlValueInt: 1
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: instr_addr_o
                                                            HdlValueId: current_address
                                                    HdlStmIf
                                                        HdlValueId: instr_gnt_i
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: NS
                                                                HdlValueId: WAIT_RVALID
                                                        list: elifs
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: NS
                                                                HdlValueId: WAIT_GNT
                                            list: elifs
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: NS
                                                            HdlValueId: WAIT_ABORTED
                        HdlStmBlock: SEQ
                            list: body
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: NS
                                        HdlValueId: EMPTY
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: clear_buffer
                                        HdlValueInt: 1
            HdlStmProcessTriggerConstrain: COMB
        HdlStmProcess
            list: sensitivity
                HdlOp: RISING
                    list: ops
                        HdlValueId: clk
                HdlOp: FALLING
                    list: ops
                        HdlValueId: rst_n
            HdlStmBlock: SEQ
                list: body
                    HdlStmIf
                        HdlOp: EQ
                            list: ops
                                HdlValueId: rst_n
                                HdlValueInt: 0
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmAssign
                                    HdlValueInt: 0
                                    HdlValueId: valid_L0_buffer
                                HdlStmAssign
                                    HdlValueInt: 0
                                    HdlValueId: L0_buffer
                                HdlStmAssign
                                    HdlValueInt: 0
                                    HdlValueId: previous_chunk
                                HdlStmAssign
                                    HdlValueInt: 0
                                    HdlValueId: valid_previous_chunk
                        list: elifs
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmIf
                                    HdlOp: OR_LOG
                                        list: ops
                                            HdlValueId: branch_i
                                            HdlValueId: clear_buffer
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmAssign
                                                HdlValueInt: 0
                                                HdlValueId: valid_L0_buffer
                                            HdlStmAssign
                                                HdlValueInt: 0
                                                HdlValueId: valid_previous_chunk
                                    list: elifs
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmIf
                                                HdlValueId: instr_rvalid_i
                                                HdlStmBlock: SEQ
                                                    list: body
                                                        HdlStmAssign
                                                            HdlValueId: instr_rdata_i
                                                            HdlValueId: L0_buffer
                                                        HdlStmAssign
                                                            HdlValueInt: 1
                                                            HdlValueId: valid_L0_buffer
                                                        HdlStmIf
                                                            HdlValueId: valid_L0_buffer
                                                            HdlStmBlock: SEQ
                                                                list: body
                                                                    HdlStmAssign
                                                                        HdlValueInt: 1
                                                                        HdlValueId: valid_previous_chunk
                                                                    HdlStmAssign
                                                                        HdlOp: INDEX
                                                                            list: ops
                                                                                HdlOp: INDEX
                                                                                    list: ops
                                                                                        HdlValueId: L0_buffer
                                                                                        HdlValueInt: 3
                                                                                HdlOp: DOWNTO
                                                                                    list: ops
                                                                                        HdlValueInt: 31
                                                                                        HdlValueInt: 16
                                                                        HdlValueId: previous_chunk
                                                            list: elifs
                                                list: elifs
            HdlStmProcessTriggerConstrain: FF

UPD HdlStmCase@@CS to CS
    UPD list@@cases to objs
    MOV list@@cases to CS
    list: cases
        tuple
            HdlValueId: EMPTY
            HdlStmBlock: SEQ
                list: body
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: instr_req_o
                            HdlValueId: branch_i
                    HdlStmIf
                        HdlValueId: branch_i
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmIf
                                    HdlValueId: instr_gnt_i
                                    HdlOp: ASSIGN
                                        list: ops
                                            HdlValueId: NS
                                            HdlValueId: WAIT_RVALID
                                    list: elifs
                                    HdlOp: ASSIGN
                                        list: ops
                                            HdlValueId: NS
                                            HdlValueId: WAIT_GNT
                        list: elifs
                        HdlStmBlock: SEQ
                            list: body
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: NS
                                        HdlValueId: EMPTY
        tuple
            HdlValueId: WAIT_RVALID
            HdlStmBlock: SEQ
                list: body
                    HdlStmIf
                        HdlValueId: branch_i
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmIf
                                    HdlValueId: instr_rvalid_i
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlOp: ASSIGN
                                                list: ops
                                                    HdlValueId: instr_req_o
                                                    HdlValueInt: 1
                                            HdlOp: ASSIGN
                                                list: ops
                                                    HdlValueId: instr_addr_o
                                                    HdlOp: CONCAT
                                                        list: ops
                                                            HdlOp: INDEX
                                                                list: ops
                                                                    HdlValueId: addr_i
                                                                    HdlOp: DOWNTO
                                                                        list: ops
                                                                            HdlValueInt: 31
                                                                            HdlValueInt: 4
                                                            HdlValueInt: 0000
                                            HdlStmIf
                                                HdlValueId: instr_gnt_i
                                                HdlOp: ASSIGN
                                                    list: ops
                                                        HdlValueId: NS
                                                        HdlValueId: WAIT_RVALID
                                                list: elifs
                                                HdlOp: ASSIGN
                                                    list: ops
                                                        HdlValueId: NS
                                                        HdlValueId: WAIT_GNT
                                    list: elifs
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlOp: ASSIGN
                                                list: ops
                                                    HdlValueId: NS
                                                    HdlValueId: WAIT_ABORTED
                        list: elifs
                        HdlStmBlock: SEQ
                            list: body
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: valid_o
                                        HdlValueId: instr_rvalid_i
                                HdlStmCase: pointer_cs
                                    HdlStmCaseType: CASE
                                    HdlValueId: pointer_cs
                                    list: cases
                                        tuple
                                            HdlValueInt: 00
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: unaligned_rdata_o
                                                            HdlOp: CONCAT
                                                                list: ops
                                                                    HdlOp: INDEX
                                                                        list: ops
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlValueId: instr_rdata_i
                                                                                    HdlValueInt: 0
                                                                            HdlOp: DOWNTO
                                                                                list: ops
                                                                                    HdlValueInt: 15
                                                                                    HdlValueInt: 0
                                                                    HdlOp: INDEX
                                                                        list: ops
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlValueId: L0_buffer
                                                                                    HdlValueInt: 3
                                                                            HdlOp: DOWNTO
                                                                                list: ops
                                                                                    HdlValueInt: 31
                                                                                    HdlValueInt: 16
                                                    HdlStmIf
                                                        HdlValueId: valid_L0_buffer
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: unaligned_valid_o
                                                                HdlValueId: instr_rvalid_i
                                                        list: elifs
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: unaligned_valid_o
                                                                HdlValueInt: 0
                                        tuple
                                            HdlValueInt: 01
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: unaligned_rdata_o
                                                            HdlOp: CONCAT
                                                                list: ops
                                                                    HdlOp: INDEX
                                                                        list: ops
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlValueId: instr_rdata_i
                                                                                    HdlValueInt: 1
                                                                            HdlOp: DOWNTO
                                                                                list: ops
                                                                                    HdlValueInt: 15
                                                                                    HdlValueInt: 0
                                                                    HdlOp: INDEX
                                                                        list: ops
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlValueId: instr_rdata_i
                                                                                    HdlValueInt: 0
                                                                            HdlOp: DOWNTO
                                                                                list: ops
                                                                                    HdlValueInt: 31
                                                                                    HdlValueInt: 16
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: unaligned_valid_o
                                                            HdlValueId: instr_rvalid_i
                                        tuple
                                            HdlValueInt: 10
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: unaligned_rdata_o
                                                            HdlOp: CONCAT
                                                                list: ops
                                                                    HdlOp: INDEX
                                                                        list: ops
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlValueId: instr_rdata_i
                                                                                    HdlValueInt: 2
                                                                            HdlOp: DOWNTO
                                                                                list: ops
                                                                                    HdlValueInt: 15
                                                                                    HdlValueInt: 0
                                                                    HdlOp: INDEX
                                                                        list: ops
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlValueId: instr_rdata_i
                                                                                    HdlValueInt: 1
                                                                            HdlOp: DOWNTO
                                                                                list: ops
                                                                                    HdlValueInt: 31
                                                                                    HdlValueInt: 16
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: unaligned_valid_o
                                                            HdlValueId: instr_rvalid_i
                                        tuple
                                            HdlValueInt: 11
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: unaligned_rdata_o
                                                            HdlOp: CONCAT
                                                                list: ops
                                                                    HdlOp: INDEX
                                                                        list: ops
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlValueId: instr_rdata_i
                                                                                    HdlValueInt: 3
                                                                            HdlOp: DOWNTO
                                                                                list: ops
                                                                                    HdlValueInt: 15
                                                                                    HdlValueInt: 0
                                                                    HdlOp: INDEX
                                                                        list: ops
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlValueId: instr_rdata_i
                                                                                    HdlValueInt: 2
                                                                            HdlOp: DOWNTO
                                                                                list: ops
                                                                                    HdlValueInt: 31
                                                                                    HdlValueInt: 16
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: unaligned_valid_o
                                                            HdlValueId: instr_rvalid_i
                                HdlStmIf
                                    HdlValueId: instr_rvalid_i
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmIf
                                                HdlOp: AND_UNARY
                                                    list: ops
                                                        HdlValueId: pointer_cs
                                                HdlStmBlock: SEQ
                                                    list: body
                                                        HdlStmIf
                                                            HdlValueId: ready_i
                                                            HdlStmBlock: SEQ
                                                                list: body
                                                                    HdlOp: ASSIGN
                                                                        list: ops
                                                                            HdlValueId: instr_req_o
                                                                            HdlValueInt: 1
                                                                    HdlOp: ASSIGN
                                                                        list: ops
                                                                            HdlValueId: instr_addr_o
                                                                            HdlOp: ADD
                                                                                list: ops
                                                                                    HdlValueId: current_address
                                                                                    HdlValueInt: 10
                                                                    HdlOp: ASSIGN
                                                                        list: ops
                                                                            HdlValueId: pointer_ns
                                                                            HdlValueInt: 0
                                                                    HdlOp: ASSIGN
                                                                        list: ops
                                                                            HdlValueId: update_current_address
                                                                            HdlValueInt: 1
                                                                    HdlStmIf
                                                                        HdlValueId: instr_gnt_i
                                                                        HdlOp: ASSIGN
                                                                            list: ops
                                                                                HdlValueId: NS
                                                                                HdlValueId: WAIT_RVALID
                                                                        list: elifs
                                                                        HdlOp: ASSIGN
                                                                            list: ops
                                                                                HdlValueId: NS
                                                                                HdlValueId: WAIT_GNT
                                                            list: elifs
                                                            HdlStmBlock: SEQ
                                                                list: body
                                                                    HdlOp: ASSIGN
                                                                        list: ops
                                                                            HdlValueId: NS
                                                                            HdlValueId: VALID_L0
                                                list: elifs
                                                HdlStmBlock: SEQ
                                                    list: body
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: NS
                                                                HdlValueId: VALID_L0
                                                        HdlStmIf
                                                            HdlValueId: ready_i
                                                            HdlOp: ASSIGN
                                                                list: ops
                                                                    HdlValueId: pointer_ns
                                                                    HdlOp: ADD
                                                                        list: ops
                                                                            HdlValueId: pointer_cs
                                                                            HdlValueInt: 1
                                                            list: elifs
                                                            HdlOp: ASSIGN
                                                                list: ops
                                                                    HdlValueId: pointer_ns
                                                                    HdlValueId: pointer_cs
                                    list: elifs
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlOp: ASSIGN
                                                list: ops
                                                    HdlValueId: NS
                                                    HdlValueId: WAIT_RVALID
        tuple
            HdlValueId: VALID_L0
            HdlStmBlock: SEQ
                list: body
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: valid_o
                            HdlValueInt: 1
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: rdata_o
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: L0_buffer
                                    HdlValueId: pointer_cs
                    HdlStmCase: pointer_cs
                        HdlStmCaseType: CASE
                        HdlValueId: pointer_cs
                        list: cases
                            tuple
                                HdlValueInt: 00
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: unaligned_rdata_o
                                                HdlOp: CONCAT
                                                    list: ops
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlOp: INDEX
                                                                    list: ops
                                                                        HdlValueId: L0_buffer
                                                                        HdlValueInt: 0
                                                                HdlOp: DOWNTO
                                                                    list: ops
                                                                        HdlValueInt: 15
                                                                        HdlValueInt: 0
                                                        HdlValueId: previous_chunk
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: unaligned_valid_o
                                                HdlValueId: valid_previous_chunk
                            tuple
                                HdlValueInt: 01
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: unaligned_rdata_o
                                                HdlOp: CONCAT
                                                    list: ops
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlOp: INDEX
                                                                    list: ops
                                                                        HdlValueId: L0_buffer
                                                                        HdlValueInt: 1
                                                                HdlOp: DOWNTO
                                                                    list: ops
                                                                        HdlValueInt: 15
                                                                        HdlValueInt: 0
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlOp: INDEX
                                                                    list: ops
                                                                        HdlValueId: L0_buffer
                                                                        HdlValueInt: 0
                                                                HdlOp: DOWNTO
                                                                    list: ops
                                                                        HdlValueInt: 31
                                                                        HdlValueInt: 16
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: unaligned_valid_o
                                                HdlValueInt: 1
                            tuple
                                HdlValueInt: 10
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: unaligned_rdata_o
                                                HdlOp: CONCAT
                                                    list: ops
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlOp: INDEX
                                                                    list: ops
                                                                        HdlValueId: L0_buffer
                                                                        HdlValueInt: 2
                                                                HdlOp: DOWNTO
                                                                    list: ops
                                                                        HdlValueInt: 15
                                                                        HdlValueInt: 0
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlOp: INDEX
                                                                    list: ops
                                                                        HdlValueId: L0_buffer
                                                                        HdlValueInt: 1
                                                                HdlOp: DOWNTO
                                                                    list: ops
                                                                        HdlValueInt: 31
                                                                        HdlValueInt: 16
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: unaligned_valid_o
                                                HdlValueInt: 1
                            tuple
                                HdlValueInt: 11
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: unaligned_rdata_o
                                                HdlOp: CONCAT
                                                    list: ops
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlOp: INDEX
                                                                    list: ops
                                                                        HdlValueId: L0_buffer
                                                                        HdlValueInt: 3
                                                                HdlOp: DOWNTO
                                                                    list: ops
                                                                        HdlValueInt: 15
                                                                        HdlValueInt: 0
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlOp: INDEX
                                                                    list: ops
                                                                        HdlValueId: L0_buffer
                                                                        HdlValueInt: 2
                                                                HdlOp: DOWNTO
                                                                    list: ops
                                                                        HdlValueInt: 31
                                                                        HdlValueInt: 16
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: unaligned_valid_o
                                                HdlValueInt: 1
                    HdlStmIf
                        HdlValueId: branch_i
                        HdlStmBlock: SEQ
                            list: body
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: instr_req_o
                                        HdlValueInt: 1
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: instr_addr_o
                                        HdlOp: CONCAT
                                            list: ops
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: addr_i
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 31
                                                                HdlValueInt: 4
                                                HdlValueInt: 0000
                                HdlStmIf
                                    HdlValueId: instr_gnt_i
                                    HdlOp: ASSIGN
                                        list: ops
                                            HdlValueId: NS
                                            HdlValueId: WAIT_RVALID
                                    list: elifs
                                    HdlOp: ASSIGN
                                        list: ops
                                            HdlValueId: NS
                                            HdlValueId: WAIT_GNT
                        list: elifs
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmIf
                                    HdlValueId: ready_i
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmIf
                                                HdlOp: AND_UNARY
                                                    list: ops
                                                        HdlValueId: pointer_cs
                                                HdlStmBlock: SEQ
                                                    list: body
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: instr_req_o
                                                                HdlValueInt: 1
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: instr_addr_o
                                                                HdlOp: ADD
                                                                    list: ops
                                                                        HdlValueId: current_address
                                                                        HdlValueInt: 10
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: update_current_address
                                                                HdlValueInt: 1
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: pointer_ns
                                                                HdlValueInt: 0
                                                        HdlStmIf
                                                            HdlValueId: instr_gnt_i
                                                            HdlOp: ASSIGN
                                                                list: ops
                                                                    HdlValueId: NS
                                                                    HdlValueId: WAIT_RVALID
                                                            list: elifs
                                                            HdlOp: ASSIGN
                                                                list: ops
                                                                    HdlValueId: NS
                                                                    HdlValueId: WAIT_GNT
                                                list: elifs
                                                HdlStmBlock: SEQ
                                                    list: body
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: pointer_ns
                                                                HdlOp: ADD
                                                                    list: ops
                                                                        HdlValueId: pointer_cs
                                                                        HdlValueInt: 1
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: NS
                                                                HdlValueId: VALID_L0
                                    list: elifs
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlOp: ASSIGN
                                                list: ops
                                                    HdlValueId: NS
                                                    HdlValueId: VALID_L0
        tuple
            HdlValueId: WAIT_GNT
            HdlStmBlock: SEQ
                list: body
                    HdlStmIf
                        HdlValueId: branch_i
                        HdlStmBlock: SEQ
                            list: body
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: instr_req_o
                                        HdlValueInt: 1
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: instr_addr_o
                                        HdlOp: CONCAT
                                            list: ops
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: addr_i
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 31
                                                                HdlValueInt: 4
                                                HdlValueInt: 0000
                                HdlStmIf
                                    HdlValueId: instr_gnt_i
                                    HdlOp: ASSIGN
                                        list: ops
                                            HdlValueId: NS
                                            HdlValueId: WAIT_RVALID
                                    list: elifs
                                    HdlOp: ASSIGN
                                        list: ops
                                            HdlValueId: NS
                                            HdlValueId: WAIT_GNT
                        list: elifs
                        HdlStmBlock: SEQ
                            list: body
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: instr_req_o
                                        HdlValueInt: 1
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: instr_addr_o
                                        HdlValueId: current_address
                                HdlStmIf
                                    HdlValueId: instr_gnt_i
                                    HdlOp: ASSIGN
                                        list: ops
                                            HdlValueId: NS
                                            HdlValueId: WAIT_RVALID
                                    list: elifs
                                    HdlOp: ASSIGN
                                        list: ops
                                            HdlValueId: NS
                                            HdlValueId: WAIT_GNT
        tuple
            HdlValueId: WAIT_ABORTED
            HdlStmBlock: SEQ
                list: body
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: clear_buffer
                            HdlValueInt: 1
                    HdlStmIf
                        HdlValueId: instr_rvalid_i
                        HdlStmBlock: SEQ
                            list: body
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: instr_req_o
                                        HdlValueInt: 1
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: instr_addr_o
                                        HdlValueId: current_address
                                HdlStmIf
                                    HdlValueId: instr_gnt_i
                                    HdlOp: ASSIGN
                                        list: ops
                                            HdlValueId: NS
                                            HdlValueId: WAIT_RVALID
                                    list: elifs
                                    HdlOp: ASSIGN
                                        list: ops
                                            HdlValueId: NS
                                            HdlValueId: WAIT_GNT
                        list: elifs
                        HdlStmBlock: SEQ
                            list: body
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: NS
                                        HdlValueId: WAIT_ABORTED
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: valid_o
                    HdlValueInt: 1
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: rdata_o
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: L0_buffer
                            HdlValueId: pointer_cs
            HdlStmCase: pointer_cs
                HdlStmCaseType: CASE
                HdlValueId: pointer_cs
                list: cases
                    tuple
                        HdlValueInt: 00
                        HdlStmBlock: SEQ
                            list: body
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: unaligned_rdata_o
                                        HdlOp: CONCAT
                                            list: ops
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlValueId: L0_buffer
                                                                HdlValueInt: 0
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 15
                                                                HdlValueInt: 0
                                                HdlValueId: previous_chunk
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: unaligned_valid_o
                                        HdlValueId: valid_previous_chunk
                    tuple
                        HdlValueInt: 01
                        HdlStmBlock: SEQ
                            list: body
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: unaligned_rdata_o
                                        HdlOp: CONCAT
                                            list: ops
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlValueId: L0_buffer
                                                                HdlValueInt: 1
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 15
                                                                HdlValueInt: 0
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlValueId: L0_buffer
                                                                HdlValueInt: 0
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 31
                                                                HdlValueInt: 16
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: unaligned_valid_o
                                        HdlValueInt: 1
                    tuple
                        HdlValueInt: 10
                        HdlStmBlock: SEQ
                            list: body
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: unaligned_rdata_o
                                        HdlOp: CONCAT
                                            list: ops
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlValueId: L0_buffer
                                                                HdlValueInt: 2
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 15
                                                                HdlValueInt: 0
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlValueId: L0_buffer
                                                                HdlValueInt: 1
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 31
                                                                HdlValueInt: 16
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: unaligned_valid_o
                                        HdlValueInt: 1
                    tuple
                        HdlValueInt: 11
                        HdlStmBlock: SEQ
                            list: body
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: unaligned_rdata_o
                                        HdlOp: CONCAT
                                            list: ops
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlValueId: L0_buffer
                                                                HdlValueInt: 3
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 15
                                                                HdlValueInt: 0
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlValueId: L0_buffer
                                                                HdlValueInt: 2
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 31
                                                                HdlValueInt: 16
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: unaligned_valid_o
                                        HdlValueInt: 1
            HdlStmIf
                HdlValueId: branch_i
                HdlStmBlock: SEQ
                    list: body
                        HdlOp: ASSIGN
                            list: ops
                                HdlValueId: instr_req_o
                                HdlValueInt: 1
                        HdlOp: ASSIGN
                            list: ops
                                HdlValueId: instr_addr_o
                                HdlOp: CONCAT
                                    list: ops
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: addr_i
                                                HdlOp: DOWNTO
                                                    list: ops
                                                        HdlValueInt: 31
                                                        HdlValueInt: 4
                                        HdlValueInt: 0000
                        HdlStmIf
                            HdlValueId: instr_gnt_i
                            HdlOp: ASSIGN
                                list: ops
                                    HdlValueId: NS
                                    HdlValueId: WAIT_RVALID
                            list: elifs
                            HdlOp: ASSIGN
                                list: ops
                                    HdlValueId: NS
                                    HdlValueId: WAIT_GNT
                list: elifs
                HdlStmBlock: SEQ
                    list: body
                        HdlStmIf
                            HdlValueId: ready_i
                            HdlStmBlock: SEQ
                                list: body
                                    HdlStmIf
                                        HdlOp: AND_UNARY
                                            list: ops
                                                HdlValueId: pointer_cs
                                        HdlStmBlock: SEQ
                                            list: body
                                                HdlOp: ASSIGN
                                                    list: ops
                                                        HdlValueId: instr_req_o
                                                        HdlValueInt: 1
                                                HdlOp: ASSIGN
                                                    list: ops
                                                        HdlValueId: instr_addr_o
                                                        HdlOp: ADD
                                                            list: ops
                                                                HdlValueId: current_address
                                                                HdlValueInt: 10
                                                HdlOp: ASSIGN
                                                    list: ops
                                                        HdlValueId: update_current_address
                                                        HdlValueInt: 1
                                                HdlOp: ASSIGN
                                                    list: ops
                                                        HdlValueId: pointer_ns
                                                        HdlValueInt: 0
                                                HdlStmIf
                                                    HdlValueId: instr_gnt_i
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: NS
                                                            HdlValueId: WAIT_RVALID
                                                    list: elifs
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: NS
                                                            HdlValueId: WAIT_GNT
                                        list: elifs
                                        HdlStmBlock: SEQ
                                            list: body
                                                HdlOp: ASSIGN
                                                    list: ops
                                                        HdlValueId: pointer_ns
                                                        HdlOp: ADD
                                                            list: ops
                                                                HdlValueId: pointer_cs
                                                                HdlValueInt: 1
                                                HdlOp: ASSIGN
                                                    list: ops
                                                        HdlValueId: NS
                                                        HdlValueId: VALID_L0
                            list: elifs
                            HdlStmBlock: SEQ
                                list: body
                                    HdlOp: ASSIGN
                                        list: ops
                                            HdlValueId: NS
                                            HdlValueId: VALID_L0
    MOV tuple@@ to cases
    tuple
        HdlValueId: EMPTY
        HdlStmBlock: SEQ
            list: body
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: instr_req_o
                        HdlValueId: branch_i
                HdlStmIf
                    HdlValueId: branch_i
                    HdlStmBlock: SEQ
                        list: body
                            HdlStmIf
                                HdlValueId: instr_gnt_i
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: NS
                                        HdlValueId: WAIT_RVALID
                                list: elifs
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: NS
                                        HdlValueId: WAIT_GNT
                    list: elifs
                    HdlStmBlock: SEQ
                        list: body
                            HdlOp: ASSIGN
                                list: ops
                                    HdlValueId: NS
                                    HdlValueId: EMPTY
    MOV tuple@@ to cases
    tuple
        HdlValueId: WAIT_RVALID
        HdlStmBlock: SEQ
            list: body
                HdlStmIf
                    HdlValueId: branch_i
                    HdlStmBlock: SEQ
                        list: body
                            HdlStmIf
                                HdlValueId: instr_rvalid_i
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: instr_req_o
                                                HdlValueInt: 1
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: instr_addr_o
                                                HdlOp: CONCAT
                                                    list: ops
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlValueId: addr_i
                                                                HdlOp: DOWNTO
                                                                    list: ops
                                                                        HdlValueInt: 31
                                                                        HdlValueInt: 4
                                                        HdlValueInt: 0000
                                        HdlStmIf
                                            HdlValueId: instr_gnt_i
                                            HdlOp: ASSIGN
                                                list: ops
                                                    HdlValueId: NS
                                                    HdlValueId: WAIT_RVALID
                                            list: elifs
                                            HdlOp: ASSIGN
                                                list: ops
                                                    HdlValueId: NS
                                                    HdlValueId: WAIT_GNT
                                list: elifs
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: NS
                                                HdlValueId: WAIT_ABORTED
                    list: elifs
                    HdlStmBlock: SEQ
                        list: body
                            HdlOp: ASSIGN
                                list: ops
                                    HdlValueId: valid_o
                                    HdlValueId: instr_rvalid_i
                            HdlStmCase: pointer_cs
                                HdlStmCaseType: CASE
                                HdlValueId: pointer_cs
                                list: cases
                                    tuple
                                        HdlValueInt: 00
                                        HdlStmBlock: SEQ
                                            list: body
                                                HdlOp: ASSIGN
                                                    list: ops
                                                        HdlValueId: unaligned_rdata_o
                                                        HdlOp: CONCAT
                                                            list: ops
                                                                HdlOp: INDEX
                                                                    list: ops
                                                                        HdlOp: INDEX
                                                                            list: ops
                                                                                HdlValueId: instr_rdata_i
                                                                                HdlValueInt: 0
                                                                        HdlOp: DOWNTO
                                                                            list: ops
                                                                                HdlValueInt: 15
                                                                                HdlValueInt: 0
                                                                HdlOp: INDEX
                                                                    list: ops
                                                                        HdlOp: INDEX
                                                                            list: ops
                                                                                HdlValueId: L0_buffer
                                                                                HdlValueInt: 3
                                                                        HdlOp: DOWNTO
                                                                            list: ops
                                                                                HdlValueInt: 31
                                                                                HdlValueInt: 16
                                                HdlStmIf
                                                    HdlValueId: valid_L0_buffer
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: unaligned_valid_o
                                                            HdlValueId: instr_rvalid_i
                                                    list: elifs
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: unaligned_valid_o
                                                            HdlValueInt: 0
                                    tuple
                                        HdlValueInt: 01
                                        HdlStmBlock: SEQ
                                            list: body
                                                HdlOp: ASSIGN
                                                    list: ops
                                                        HdlValueId: unaligned_rdata_o
                                                        HdlOp: CONCAT
                                                            list: ops
                                                                HdlOp: INDEX
                                                                    list: ops
                                                                        HdlOp: INDEX
                                                                            list: ops
                                                                                HdlValueId: instr_rdata_i
                                                                                HdlValueInt: 1
                                                                        HdlOp: DOWNTO
                                                                            list: ops
                                                                                HdlValueInt: 15
                                                                                HdlValueInt: 0
                                                                HdlOp: INDEX
                                                                    list: ops
                                                                        HdlOp: INDEX
                                                                            list: ops
                                                                                HdlValueId: instr_rdata_i
                                                                                HdlValueInt: 0
                                                                        HdlOp: DOWNTO
                                                                            list: ops
                                                                                HdlValueInt: 31
                                                                                HdlValueInt: 16
                                                HdlOp: ASSIGN
                                                    list: ops
                                                        HdlValueId: unaligned_valid_o
                                                        HdlValueId: instr_rvalid_i
                                    tuple
                                        HdlValueInt: 10
                                        HdlStmBlock: SEQ
                                            list: body
                                                HdlOp: ASSIGN
                                                    list: ops
                                                        HdlValueId: unaligned_rdata_o
                                                        HdlOp: CONCAT
                                                            list: ops
                                                                HdlOp: INDEX
                                                                    list: ops
                                                                        HdlOp: INDEX
                                                                            list: ops
                                                                                HdlValueId: instr_rdata_i
                                                                                HdlValueInt: 2
                                                                        HdlOp: DOWNTO
                                                                            list: ops
                                                                                HdlValueInt: 15
                                                                                HdlValueInt: 0
                                                                HdlOp: INDEX
                                                                    list: ops
                                                                        HdlOp: INDEX
                                                                            list: ops
                                                                                HdlValueId: instr_rdata_i
                                                                                HdlValueInt: 1
                                                                        HdlOp: DOWNTO
                                                                            list: ops
                                                                                HdlValueInt: 31
                                                                                HdlValueInt: 16
                                                HdlOp: ASSIGN
                                                    list: ops
                                                        HdlValueId: unaligned_valid_o
                                                        HdlValueId: instr_rvalid_i
                                    tuple
                                        HdlValueInt: 11
                                        HdlStmBlock: SEQ
                                            list: body
                                                HdlOp: ASSIGN
                                                    list: ops
                                                        HdlValueId: unaligned_rdata_o
                                                        HdlOp: CONCAT
                                                            list: ops
                                                                HdlOp: INDEX
                                                                    list: ops
                                                                        HdlOp: INDEX
                                                                            list: ops
                                                                                HdlValueId: instr_rdata_i
                                                                                HdlValueInt: 3
                                                                        HdlOp: DOWNTO
                                                                            list: ops
                                                                                HdlValueInt: 15
                                                                                HdlValueInt: 0
                                                                HdlOp: INDEX
                                                                    list: ops
                                                                        HdlOp: INDEX
                                                                            list: ops
                                                                                HdlValueId: instr_rdata_i
                                                                                HdlValueInt: 2
                                                                        HdlOp: DOWNTO
                                                                            list: ops
                                                                                HdlValueInt: 31
                                                                                HdlValueInt: 16
                                                HdlOp: ASSIGN
                                                    list: ops
                                                        HdlValueId: unaligned_valid_o
                                                        HdlValueId: instr_rvalid_i
                            HdlStmIf
                                HdlValueId: instr_rvalid_i
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlStmIf
                                            HdlOp: AND_UNARY
                                                list: ops
                                                    HdlValueId: pointer_cs
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlStmIf
                                                        HdlValueId: ready_i
                                                        HdlStmBlock: SEQ
                                                            list: body
                                                                HdlOp: ASSIGN
                                                                    list: ops
                                                                        HdlValueId: instr_req_o
                                                                        HdlValueInt: 1
                                                                HdlOp: ASSIGN
                                                                    list: ops
                                                                        HdlValueId: instr_addr_o
                                                                        HdlOp: ADD
                                                                            list: ops
                                                                                HdlValueId: current_address
                                                                                HdlValueInt: 10
                                                                HdlOp: ASSIGN
                                                                    list: ops
                                                                        HdlValueId: pointer_ns
                                                                        HdlValueInt: 0
                                                                HdlOp: ASSIGN
                                                                    list: ops
                                                                        HdlValueId: update_current_address
                                                                        HdlValueInt: 1
                                                                HdlStmIf
                                                                    HdlValueId: instr_gnt_i
                                                                    HdlOp: ASSIGN
                                                                        list: ops
                                                                            HdlValueId: NS
                                                                            HdlValueId: WAIT_RVALID
                                                                    list: elifs
                                                                    HdlOp: ASSIGN
                                                                        list: ops
                                                                            HdlValueId: NS
                                                                            HdlValueId: WAIT_GNT
                                                        list: elifs
                                                        HdlStmBlock: SEQ
                                                            list: body
                                                                HdlOp: ASSIGN
                                                                    list: ops
                                                                        HdlValueId: NS
                                                                        HdlValueId: VALID_L0
                                            list: elifs
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: NS
                                                            HdlValueId: VALID_L0
                                                    HdlStmIf
                                                        HdlValueId: ready_i
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: pointer_ns
                                                                HdlOp: ADD
                                                                    list: ops
                                                                        HdlValueId: pointer_cs
                                                                        HdlValueInt: 1
                                                        list: elifs
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: pointer_ns
                                                                HdlValueId: pointer_cs
                                list: elifs
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: NS
                                                HdlValueId: WAIT_RVALID
    MOV tuple@@ to cases
    tuple
        HdlValueId: VALID_L0
        HdlStmBlock: SEQ
            list: body
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: valid_o
                        HdlValueInt: 1
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: rdata_o
                        HdlOp: INDEX
                            list: ops
                                HdlValueId: L0_buffer
                                HdlValueId: pointer_cs
                HdlStmCase: pointer_cs
                    HdlStmCaseType: CASE
                    HdlValueId: pointer_cs
                    list: cases
                        tuple
                            HdlValueInt: 00
                            HdlStmBlock: SEQ
                                list: body
                                    HdlOp: ASSIGN
                                        list: ops
                                            HdlValueId: unaligned_rdata_o
                                            HdlOp: CONCAT
                                                list: ops
                                                    HdlOp: INDEX
                                                        list: ops
                                                            HdlOp: INDEX
                                                                list: ops
                                                                    HdlValueId: L0_buffer
                                                                    HdlValueInt: 0
                                                            HdlOp: DOWNTO
                                                                list: ops
                                                                    HdlValueInt: 15
                                                                    HdlValueInt: 0
                                                    HdlValueId: previous_chunk
                                    HdlOp: ASSIGN
                                        list: ops
                                            HdlValueId: unaligned_valid_o
                                            HdlValueId: valid_previous_chunk
                        tuple
                            HdlValueInt: 01
                            HdlStmBlock: SEQ
                                list: body
                                    HdlOp: ASSIGN
                                        list: ops
                                            HdlValueId: unaligned_rdata_o
                                            HdlOp: CONCAT
                                                list: ops
                                                    HdlOp: INDEX
                                                        list: ops
                                                            HdlOp: INDEX
                                                                list: ops
                                                                    HdlValueId: L0_buffer
                                                                    HdlValueInt: 1
                                                            HdlOp: DOWNTO
                                                                list: ops
                                                                    HdlValueInt: 15
                                                                    HdlValueInt: 0
                                                    HdlOp: INDEX
                                                        list: ops
                                                            HdlOp: INDEX
                                                                list: ops
                                                                    HdlValueId: L0_buffer
                                                                    HdlValueInt: 0
                                                            HdlOp: DOWNTO
                                                                list: ops
                                                                    HdlValueInt: 31
                                                                    HdlValueInt: 16
                                    HdlOp: ASSIGN
                                        list: ops
                                            HdlValueId: unaligned_valid_o
                                            HdlValueInt: 1
                        tuple
                            HdlValueInt: 10
                            HdlStmBlock: SEQ
                                list: body
                                    HdlOp: ASSIGN
                                        list: ops
                                            HdlValueId: unaligned_rdata_o
                                            HdlOp: CONCAT
                                                list: ops
                                                    HdlOp: INDEX
                                                        list: ops
                                                            HdlOp: INDEX
                                                                list: ops
                                                                    HdlValueId: L0_buffer
                                                                    HdlValueInt: 2
                                                            HdlOp: DOWNTO
                                                                list: ops
                                                                    HdlValueInt: 15
                                                                    HdlValueInt: 0
                                                    HdlOp: INDEX
                                                        list: ops
                                                            HdlOp: INDEX
                                                                list: ops
                                                                    HdlValueId: L0_buffer
                                                                    HdlValueInt: 1
                                                            HdlOp: DOWNTO
                                                                list: ops
                                                                    HdlValueInt: 31
                                                                    HdlValueInt: 16
                                    HdlOp: ASSIGN
                                        list: ops
                                            HdlValueId: unaligned_valid_o
                                            HdlValueInt: 1
                        tuple
                            HdlValueInt: 11
                            HdlStmBlock: SEQ
                                list: body
                                    HdlOp: ASSIGN
                                        list: ops
                                            HdlValueId: unaligned_rdata_o
                                            HdlOp: CONCAT
                                                list: ops
                                                    HdlOp: INDEX
                                                        list: ops
                                                            HdlOp: INDEX
                                                                list: ops
                                                                    HdlValueId: L0_buffer
                                                                    HdlValueInt: 3
                                                            HdlOp: DOWNTO
                                                                list: ops
                                                                    HdlValueInt: 15
                                                                    HdlValueInt: 0
                                                    HdlOp: INDEX
                                                        list: ops
                                                            HdlOp: INDEX
                                                                list: ops
                                                                    HdlValueId: L0_buffer
                                                                    HdlValueInt: 2
                                                            HdlOp: DOWNTO
                                                                list: ops
                                                                    HdlValueInt: 31
                                                                    HdlValueInt: 16
                                    HdlOp: ASSIGN
                                        list: ops
                                            HdlValueId: unaligned_valid_o
                                            HdlValueInt: 1
                HdlStmIf
                    HdlValueId: branch_i
                    HdlStmBlock: SEQ
                        list: body
                            HdlOp: ASSIGN
                                list: ops
                                    HdlValueId: instr_req_o
                                    HdlValueInt: 1
                            HdlOp: ASSIGN
                                list: ops
                                    HdlValueId: instr_addr_o
                                    HdlOp: CONCAT
                                        list: ops
                                            HdlOp: INDEX
                                                list: ops
                                                    HdlValueId: addr_i
                                                    HdlOp: DOWNTO
                                                        list: ops
                                                            HdlValueInt: 31
                                                            HdlValueInt: 4
                                            HdlValueInt: 0000
                            HdlStmIf
                                HdlValueId: instr_gnt_i
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: NS
                                        HdlValueId: WAIT_RVALID
                                list: elifs
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: NS
                                        HdlValueId: WAIT_GNT
                    list: elifs
                    HdlStmBlock: SEQ
                        list: body
                            HdlStmIf
                                HdlValueId: ready_i
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlStmIf
                                            HdlOp: AND_UNARY
                                                list: ops
                                                    HdlValueId: pointer_cs
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: instr_req_o
                                                            HdlValueInt: 1
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: instr_addr_o
                                                            HdlOp: ADD
                                                                list: ops
                                                                    HdlValueId: current_address
                                                                    HdlValueInt: 10
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: update_current_address
                                                            HdlValueInt: 1
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: pointer_ns
                                                            HdlValueInt: 0
                                                    HdlStmIf
                                                        HdlValueId: instr_gnt_i
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: NS
                                                                HdlValueId: WAIT_RVALID
                                                        list: elifs
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: NS
                                                                HdlValueId: WAIT_GNT
                                            list: elifs
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: pointer_ns
                                                            HdlOp: ADD
                                                                list: ops
                                                                    HdlValueId: pointer_cs
                                                                    HdlValueInt: 1
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: NS
                                                            HdlValueId: VALID_L0
                                list: elifs
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: NS
                                                HdlValueId: VALID_L0
    MOV tuple@@ to cases
    tuple
        HdlValueId: WAIT_GNT
        HdlStmBlock: SEQ
            list: body
                HdlStmIf
                    HdlValueId: branch_i
                    HdlStmBlock: SEQ
                        list: body
                            HdlOp: ASSIGN
                                list: ops
                                    HdlValueId: instr_req_o
                                    HdlValueInt: 1
                            HdlOp: ASSIGN
                                list: ops
                                    HdlValueId: instr_addr_o
                                    HdlOp: CONCAT
                                        list: ops
                                            HdlOp: INDEX
                                                list: ops
                                                    HdlValueId: addr_i
                                                    HdlOp: DOWNTO
                                                        list: ops
                                                            HdlValueInt: 31
                                                            HdlValueInt: 4
                                            HdlValueInt: 0000
                            HdlStmIf
                                HdlValueId: instr_gnt_i
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: NS
                                        HdlValueId: WAIT_RVALID
                                list: elifs
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: NS
                                        HdlValueId: WAIT_GNT
                    list: elifs
                    HdlStmBlock: SEQ
                        list: body
                            HdlOp: ASSIGN
                                list: ops
                                    HdlValueId: instr_req_o
                                    HdlValueInt: 1
                            HdlOp: ASSIGN
                                list: ops
                                    HdlValueId: instr_addr_o
                                    HdlValueId: current_address
                            HdlStmIf
                                HdlValueId: instr_gnt_i
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: NS
                                        HdlValueId: WAIT_RVALID
                                list: elifs
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: NS
                                        HdlValueId: WAIT_GNT
    MOV tuple@@ to cases
    tuple
        HdlValueId: WAIT_ABORTED
        HdlStmBlock: SEQ
            list: body
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: clear_buffer
                        HdlValueInt: 1
                HdlStmIf
                    HdlValueId: instr_rvalid_i
                    HdlStmBlock: SEQ
                        list: body
                            HdlOp: ASSIGN
                                list: ops
                                    HdlValueId: instr_req_o
                                    HdlValueInt: 1
                            HdlOp: ASSIGN
                                list: ops
                                    HdlValueId: instr_addr_o
                                    HdlValueId: current_address
                            HdlStmIf
                                HdlValueId: instr_gnt_i
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: NS
                                        HdlValueId: WAIT_RVALID
                                list: elifs
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: NS
                                        HdlValueId: WAIT_GNT
                    list: elifs
                    HdlStmBlock: SEQ
                        list: body
                            HdlOp: ASSIGN
                                list: ops
                                    HdlValueId: NS
                                    HdlValueId: WAIT_ABORTED
    UPD HdlStmBlock@@SEQ to SEQ
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: valid_o
                HdlValueInt: 1
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: rdata_o
                HdlOp: INDEX
                    list: ops
                        HdlValueId: L0_buffer
                        HdlValueId: pointer_cs

MOV HdlStmProcess@@ to objs
HdlStmProcess
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: valid_o
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: addr_o
                    HdlOp: ADD
                        list: ops
                            HdlValueId: current_address
                            HdlOp: SLL
                                list: ops
                                    HdlValueId: pointer_cs
                                    HdlValueInt: 2
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: pointer_ns
                    HdlValueId: pointer_cs
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: instr_req_o
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: instr_addr_o
                    HdlOp: TERNARY
                        list: ops
                            HdlValueId: branch_i
                            HdlValueId: addr_i
                            HdlOp: ADD
                                list: ops
                                    HdlValueId: current_address
                                    HdlValueInt: 10
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: update_current_address
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: rdata_o
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: instr_rdata_i
                            HdlValueId: pointer_cs
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: clear_buffer
                    HdlValueInt: 0
            HdlStmCase: {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops':}]} 
                HdlStmCaseType: CASE
                HdlOp: INDEX
                    list: ops
                        HdlValueId: addr_o
                        HdlOp: DOWNTO
                            list: ops
                                HdlValueInt: 3
                                HdlValueInt: 2
                list: cases
                    tuple
                        HdlValueInt: 00
                        HdlStmBlock: SEQ
                            list: body
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: unaligned_rdata_o
                                        HdlOp: CONCAT
                                            list: ops
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlValueId: L0_buffer
                                                                HdlValueInt: 0
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 15
                                                                HdlValueInt: 0
                                                HdlValueId: previous_chunk
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: unaligned_valid_o
                                        HdlValueId: valid_previous_chunk
                    tuple
                        HdlValueInt: 01
                        HdlStmBlock: SEQ
                            list: body
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: unaligned_rdata_o
                                        HdlOp: CONCAT
                                            list: ops
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlValueId: L0_buffer
                                                                HdlValueInt: 1
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 15
                                                                HdlValueInt: 0
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlValueId: L0_buffer
                                                                HdlValueInt: 0
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 31
                                                                HdlValueInt: 16
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: unaligned_valid_o
                                        HdlValueId: valid_o
                    tuple
                        HdlValueInt: 10
                        HdlStmBlock: SEQ
                            list: body
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: unaligned_rdata_o
                                        HdlOp: CONCAT
                                            list: ops
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlValueId: L0_buffer
                                                                HdlValueInt: 2
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 15
                                                                HdlValueInt: 0
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlValueId: L0_buffer
                                                                HdlValueInt: 1
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 31
                                                                HdlValueInt: 16
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: unaligned_valid_o
                                        HdlValueId: valid_o
                    tuple
                        HdlValueInt: 11
                        HdlStmBlock: SEQ
                            list: body
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: unaligned_rdata_o
                                        HdlOp: CONCAT
                                            list: ops
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlValueId: L0_buffer
                                                                HdlValueInt: 3
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 15
                                                                HdlValueInt: 0
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlValueId: L0_buffer
                                                                HdlValueInt: 2
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 31
                                                                HdlValueInt: 16
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: unaligned_valid_o
                                        HdlValueId: valid_o
            HdlStmCase: CS
                HdlStmCaseType: CASE
                HdlValueId: CS
                list: cases
                    tuple
                        HdlValueId: EMPTY
                        HdlStmBlock: SEQ
                            list: body
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: instr_req_o
                                        HdlValueId: branch_i
                                HdlStmIf
                                    HdlValueId: branch_i
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmIf
                                                HdlValueId: instr_gnt_i
                                                HdlOp: ASSIGN
                                                    list: ops
                                                        HdlValueId: NS
                                                        HdlValueId: WAIT_RVALID
                                                list: elifs
                                                HdlOp: ASSIGN
                                                    list: ops
                                                        HdlValueId: NS
                                                        HdlValueId: WAIT_GNT
                                    list: elifs
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlOp: ASSIGN
                                                list: ops
                                                    HdlValueId: NS
                                                    HdlValueId: EMPTY
                    tuple
                        HdlValueId: WAIT_RVALID
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmIf
                                    HdlValueId: branch_i
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmIf
                                                HdlValueId: instr_rvalid_i
                                                HdlStmBlock: SEQ
                                                    list: body
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: instr_req_o
                                                                HdlValueInt: 1
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: instr_addr_o
                                                                HdlOp: CONCAT
                                                                    list: ops
                                                                        HdlOp: INDEX
                                                                            list: ops
                                                                                HdlValueId: addr_i
                                                                                HdlOp: DOWNTO
                                                                                    list: ops
                                                                                        HdlValueInt: 31
                                                                                        HdlValueInt: 4
                                                                        HdlValueInt: 0000
                                                        HdlStmIf
                                                            HdlValueId: instr_gnt_i
                                                            HdlOp: ASSIGN
                                                                list: ops
                                                                    HdlValueId: NS
                                                                    HdlValueId: WAIT_RVALID
                                                            list: elifs
                                                            HdlOp: ASSIGN
                                                                list: ops
                                                                    HdlValueId: NS
                                                                    HdlValueId: WAIT_GNT
                                                list: elifs
                                                HdlStmBlock: SEQ
                                                    list: body
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: NS
                                                                HdlValueId: WAIT_ABORTED
                                    list: elifs
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlOp: ASSIGN
                                                list: ops
                                                    HdlValueId: valid_o
                                                    HdlValueId: instr_rvalid_i
                                            HdlStmCase: pointer_cs
                                                HdlStmCaseType: CASE
                                                HdlValueId: pointer_cs
                                                list: cases
                                                    tuple
                                                        HdlValueInt: 00
                                                        HdlStmBlock: SEQ
                                                            list: body
                                                                HdlOp: ASSIGN
                                                                    list: ops
                                                                        HdlValueId: unaligned_rdata_o
                                                                        HdlOp: CONCAT
                                                                            list: ops
                                                                                HdlOp: INDEX
                                                                                    list: ops
                                                                                        HdlOp: INDEX
                                                                                            list: ops
                                                                                                HdlValueId: instr_rdata_i
                                                                                                HdlValueInt: 0
                                                                                        HdlOp: DOWNTO
                                                                                            list: ops
                                                                                                HdlValueInt: 15
                                                                                                HdlValueInt: 0
                                                                                HdlOp: INDEX
                                                                                    list: ops
                                                                                        HdlOp: INDEX
                                                                                            list: ops
                                                                                                HdlValueId: L0_buffer
                                                                                                HdlValueInt: 3
                                                                                        HdlOp: DOWNTO
                                                                                            list: ops
                                                                                                HdlValueInt: 31
                                                                                                HdlValueInt: 16
                                                                HdlStmIf
                                                                    HdlValueId: valid_L0_buffer
                                                                    HdlOp: ASSIGN
                                                                        list: ops
                                                                            HdlValueId: unaligned_valid_o
                                                                            HdlValueId: instr_rvalid_i
                                                                    list: elifs
                                                                    HdlOp: ASSIGN
                                                                        list: ops
                                                                            HdlValueId: unaligned_valid_o
                                                                            HdlValueInt: 0
                                                    tuple
                                                        HdlValueInt: 01
                                                        HdlStmBlock: SEQ
                                                            list: body
                                                                HdlOp: ASSIGN
                                                                    list: ops
                                                                        HdlValueId: unaligned_rdata_o
                                                                        HdlOp: CONCAT
                                                                            list: ops
                                                                                HdlOp: INDEX
                                                                                    list: ops
                                                                                        HdlOp: INDEX
                                                                                            list: ops
                                                                                                HdlValueId: instr_rdata_i
                                                                                                HdlValueInt: 1
                                                                                        HdlOp: DOWNTO
                                                                                            list: ops
                                                                                                HdlValueInt: 15
                                                                                                HdlValueInt: 0
                                                                                HdlOp: INDEX
                                                                                    list: ops
                                                                                        HdlOp: INDEX
                                                                                            list: ops
                                                                                                HdlValueId: instr_rdata_i
                                                                                                HdlValueInt: 0
                                                                                        HdlOp: DOWNTO
                                                                                            list: ops
                                                                                                HdlValueInt: 31
                                                                                                HdlValueInt: 16
                                                                HdlOp: ASSIGN
                                                                    list: ops
                                                                        HdlValueId: unaligned_valid_o
                                                                        HdlValueId: instr_rvalid_i
                                                    tuple
                                                        HdlValueInt: 10
                                                        HdlStmBlock: SEQ
                                                            list: body
                                                                HdlOp: ASSIGN
                                                                    list: ops
                                                                        HdlValueId: unaligned_rdata_o
                                                                        HdlOp: CONCAT
                                                                            list: ops
                                                                                HdlOp: INDEX
                                                                                    list: ops
                                                                                        HdlOp: INDEX
                                                                                            list: ops
                                                                                                HdlValueId: instr_rdata_i
                                                                                                HdlValueInt: 2
                                                                                        HdlOp: DOWNTO
                                                                                            list: ops
                                                                                                HdlValueInt: 15
                                                                                                HdlValueInt: 0
                                                                                HdlOp: INDEX
                                                                                    list: ops
                                                                                        HdlOp: INDEX
                                                                                            list: ops
                                                                                                HdlValueId: instr_rdata_i
                                                                                                HdlValueInt: 1
                                                                                        HdlOp: DOWNTO
                                                                                            list: ops
                                                                                                HdlValueInt: 31
                                                                                                HdlValueInt: 16
                                                                HdlOp: ASSIGN
                                                                    list: ops
                                                                        HdlValueId: unaligned_valid_o
                                                                        HdlValueId: instr_rvalid_i
                                                    tuple
                                                        HdlValueInt: 11
                                                        HdlStmBlock: SEQ
                                                            list: body
                                                                HdlOp: ASSIGN
                                                                    list: ops
                                                                        HdlValueId: unaligned_rdata_o
                                                                        HdlOp: CONCAT
                                                                            list: ops
                                                                                HdlOp: INDEX
                                                                                    list: ops
                                                                                        HdlOp: INDEX
                                                                                            list: ops
                                                                                                HdlValueId: instr_rdata_i
                                                                                                HdlValueInt: 3
                                                                                        HdlOp: DOWNTO
                                                                                            list: ops
                                                                                                HdlValueInt: 15
                                                                                                HdlValueInt: 0
                                                                                HdlOp: INDEX
                                                                                    list: ops
                                                                                        HdlOp: INDEX
                                                                                            list: ops
                                                                                                HdlValueId: instr_rdata_i
                                                                                                HdlValueInt: 2
                                                                                        HdlOp: DOWNTO
                                                                                            list: ops
                                                                                                HdlValueInt: 31
                                                                                                HdlValueInt: 16
                                                                HdlOp: ASSIGN
                                                                    list: ops
                                                                        HdlValueId: unaligned_valid_o
                                                                        HdlValueId: instr_rvalid_i
                                            HdlStmIf
                                                HdlValueId: instr_rvalid_i
                                                HdlStmBlock: SEQ
                                                    list: body
                                                        HdlStmIf
                                                            HdlOp: AND_UNARY
                                                                list: ops
                                                                    HdlValueId: pointer_cs
                                                            HdlStmBlock: SEQ
                                                                list: body
                                                                    HdlStmIf
                                                                        HdlValueId: ready_i
                                                                        HdlStmBlock: SEQ
                                                                            list: body
                                                                                HdlOp: ASSIGN
                                                                                    list: ops
                                                                                        HdlValueId: instr_req_o
                                                                                        HdlValueInt: 1
                                                                                HdlOp: ASSIGN
                                                                                    list: ops
                                                                                        HdlValueId: instr_addr_o
                                                                                        HdlOp: ADD
                                                                                            list: ops
                                                                                                HdlValueId: current_address
                                                                                                HdlValueInt: 10
                                                                                HdlOp: ASSIGN
                                                                                    list: ops
                                                                                        HdlValueId: pointer_ns
                                                                                        HdlValueInt: 0
                                                                                HdlOp: ASSIGN
                                                                                    list: ops
                                                                                        HdlValueId: update_current_address
                                                                                        HdlValueInt: 1
                                                                                HdlStmIf
                                                                                    HdlValueId: instr_gnt_i
                                                                                    HdlOp: ASSIGN
                                                                                        list: ops
                                                                                            HdlValueId: NS
                                                                                            HdlValueId: WAIT_RVALID
                                                                                    list: elifs
                                                                                    HdlOp: ASSIGN
                                                                                        list: ops
                                                                                            HdlValueId: NS
                                                                                            HdlValueId: WAIT_GNT
                                                                        list: elifs
                                                                        HdlStmBlock: SEQ
                                                                            list: body
                                                                                HdlOp: ASSIGN
                                                                                    list: ops
                                                                                        HdlValueId: NS
                                                                                        HdlValueId: VALID_L0
                                                            list: elifs
                                                            HdlStmBlock: SEQ
                                                                list: body
                                                                    HdlOp: ASSIGN
                                                                        list: ops
                                                                            HdlValueId: NS
                                                                            HdlValueId: VALID_L0
                                                                    HdlStmIf
                                                                        HdlValueId: ready_i
                                                                        HdlOp: ASSIGN
                                                                            list: ops
                                                                                HdlValueId: pointer_ns
                                                                                HdlOp: ADD
                                                                                    list: ops
                                                                                        HdlValueId: pointer_cs
                                                                                        HdlValueInt: 1
                                                                        list: elifs
                                                                        HdlOp: ASSIGN
                                                                            list: ops
                                                                                HdlValueId: pointer_ns
                                                                                HdlValueId: pointer_cs
                                                list: elifs
                                                HdlStmBlock: SEQ
                                                    list: body
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: NS
                                                                HdlValueId: WAIT_RVALID
                    tuple
                        HdlValueId: VALID_L0
                        HdlStmBlock: SEQ
                            list: body
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: valid_o
                                        HdlValueInt: 1
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: rdata_o
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: L0_buffer
                                                HdlValueId: pointer_cs
                                HdlStmCase: pointer_cs
                                    HdlStmCaseType: CASE
                                    HdlValueId: pointer_cs
                                    list: cases
                                        tuple
                                            HdlValueInt: 00
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: unaligned_rdata_o
                                                            HdlOp: CONCAT
                                                                list: ops
                                                                    HdlOp: INDEX
                                                                        list: ops
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlValueId: L0_buffer
                                                                                    HdlValueInt: 0
                                                                            HdlOp: DOWNTO
                                                                                list: ops
                                                                                    HdlValueInt: 15
                                                                                    HdlValueInt: 0
                                                                    HdlValueId: previous_chunk
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: unaligned_valid_o
                                                            HdlValueId: valid_previous_chunk
                                        tuple
                                            HdlValueInt: 01
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: unaligned_rdata_o
                                                            HdlOp: CONCAT
                                                                list: ops
                                                                    HdlOp: INDEX
                                                                        list: ops
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlValueId: L0_buffer
                                                                                    HdlValueInt: 1
                                                                            HdlOp: DOWNTO
                                                                                list: ops
                                                                                    HdlValueInt: 15
                                                                                    HdlValueInt: 0
                                                                    HdlOp: INDEX
                                                                        list: ops
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlValueId: L0_buffer
                                                                                    HdlValueInt: 0
                                                                            HdlOp: DOWNTO
                                                                                list: ops
                                                                                    HdlValueInt: 31
                                                                                    HdlValueInt: 16
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: unaligned_valid_o
                                                            HdlValueInt: 1
                                        tuple
                                            HdlValueInt: 10
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: unaligned_rdata_o
                                                            HdlOp: CONCAT
                                                                list: ops
                                                                    HdlOp: INDEX
                                                                        list: ops
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlValueId: L0_buffer
                                                                                    HdlValueInt: 2
                                                                            HdlOp: DOWNTO
                                                                                list: ops
                                                                                    HdlValueInt: 15
                                                                                    HdlValueInt: 0
                                                                    HdlOp: INDEX
                                                                        list: ops
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlValueId: L0_buffer
                                                                                    HdlValueInt: 1
                                                                            HdlOp: DOWNTO
                                                                                list: ops
                                                                                    HdlValueInt: 31
                                                                                    HdlValueInt: 16
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: unaligned_valid_o
                                                            HdlValueInt: 1
                                        tuple
                                            HdlValueInt: 11
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: unaligned_rdata_o
                                                            HdlOp: CONCAT
                                                                list: ops
                                                                    HdlOp: INDEX
                                                                        list: ops
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlValueId: L0_buffer
                                                                                    HdlValueInt: 3
                                                                            HdlOp: DOWNTO
                                                                                list: ops
                                                                                    HdlValueInt: 15
                                                                                    HdlValueInt: 0
                                                                    HdlOp: INDEX
                                                                        list: ops
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlValueId: L0_buffer
                                                                                    HdlValueInt: 2
                                                                            HdlOp: DOWNTO
                                                                                list: ops
                                                                                    HdlValueInt: 31
                                                                                    HdlValueInt: 16
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: unaligned_valid_o
                                                            HdlValueInt: 1
                                HdlStmIf
                                    HdlValueId: branch_i
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlOp: ASSIGN
                                                list: ops
                                                    HdlValueId: instr_req_o
                                                    HdlValueInt: 1
                                            HdlOp: ASSIGN
                                                list: ops
                                                    HdlValueId: instr_addr_o
                                                    HdlOp: CONCAT
                                                        list: ops
                                                            HdlOp: INDEX
                                                                list: ops
                                                                    HdlValueId: addr_i
                                                                    HdlOp: DOWNTO
                                                                        list: ops
                                                                            HdlValueInt: 31
                                                                            HdlValueInt: 4
                                                            HdlValueInt: 0000
                                            HdlStmIf
                                                HdlValueId: instr_gnt_i
                                                HdlOp: ASSIGN
                                                    list: ops
                                                        HdlValueId: NS
                                                        HdlValueId: WAIT_RVALID
                                                list: elifs
                                                HdlOp: ASSIGN
                                                    list: ops
                                                        HdlValueId: NS
                                                        HdlValueId: WAIT_GNT
                                    list: elifs
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmIf
                                                HdlValueId: ready_i
                                                HdlStmBlock: SEQ
                                                    list: body
                                                        HdlStmIf
                                                            HdlOp: AND_UNARY
                                                                list: ops
                                                                    HdlValueId: pointer_cs
                                                            HdlStmBlock: SEQ
                                                                list: body
                                                                    HdlOp: ASSIGN
                                                                        list: ops
                                                                            HdlValueId: instr_req_o
                                                                            HdlValueInt: 1
                                                                    HdlOp: ASSIGN
                                                                        list: ops
                                                                            HdlValueId: instr_addr_o
                                                                            HdlOp: ADD
                                                                                list: ops
                                                                                    HdlValueId: current_address
                                                                                    HdlValueInt: 10
                                                                    HdlOp: ASSIGN
                                                                        list: ops
                                                                            HdlValueId: update_current_address
                                                                            HdlValueInt: 1
                                                                    HdlOp: ASSIGN
                                                                        list: ops
                                                                            HdlValueId: pointer_ns
                                                                            HdlValueInt: 0
                                                                    HdlStmIf
                                                                        HdlValueId: instr_gnt_i
                                                                        HdlOp: ASSIGN
                                                                            list: ops
                                                                                HdlValueId: NS
                                                                                HdlValueId: WAIT_RVALID
                                                                        list: elifs
                                                                        HdlOp: ASSIGN
                                                                            list: ops
                                                                                HdlValueId: NS
                                                                                HdlValueId: WAIT_GNT
                                                            list: elifs
                                                            HdlStmBlock: SEQ
                                                                list: body
                                                                    HdlOp: ASSIGN
                                                                        list: ops
                                                                            HdlValueId: pointer_ns
                                                                            HdlOp: ADD
                                                                                list: ops
                                                                                    HdlValueId: pointer_cs
                                                                                    HdlValueInt: 1
                                                                    HdlOp: ASSIGN
                                                                        list: ops
                                                                            HdlValueId: NS
                                                                            HdlValueId: VALID_L0
                                                list: elifs
                                                HdlStmBlock: SEQ
                                                    list: body
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: NS
                                                                HdlValueId: VALID_L0
                    tuple
                        HdlValueId: WAIT_GNT
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmIf
                                    HdlValueId: branch_i
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlOp: ASSIGN
                                                list: ops
                                                    HdlValueId: instr_req_o
                                                    HdlValueInt: 1
                                            HdlOp: ASSIGN
                                                list: ops
                                                    HdlValueId: instr_addr_o
                                                    HdlOp: CONCAT
                                                        list: ops
                                                            HdlOp: INDEX
                                                                list: ops
                                                                    HdlValueId: addr_i
                                                                    HdlOp: DOWNTO
                                                                        list: ops
                                                                            HdlValueInt: 31
                                                                            HdlValueInt: 4
                                                            HdlValueInt: 0000
                                            HdlStmIf
                                                HdlValueId: instr_gnt_i
                                                HdlOp: ASSIGN
                                                    list: ops
                                                        HdlValueId: NS
                                                        HdlValueId: WAIT_RVALID
                                                list: elifs
                                                HdlOp: ASSIGN
                                                    list: ops
                                                        HdlValueId: NS
                                                        HdlValueId: WAIT_GNT
                                    list: elifs
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlOp: ASSIGN
                                                list: ops
                                                    HdlValueId: instr_req_o
                                                    HdlValueInt: 1
                                            HdlOp: ASSIGN
                                                list: ops
                                                    HdlValueId: instr_addr_o
                                                    HdlValueId: current_address
                                            HdlStmIf
                                                HdlValueId: instr_gnt_i
                                                HdlOp: ASSIGN
                                                    list: ops
                                                        HdlValueId: NS
                                                        HdlValueId: WAIT_RVALID
                                                list: elifs
                                                HdlOp: ASSIGN
                                                    list: ops
                                                        HdlValueId: NS
                                                        HdlValueId: WAIT_GNT
                    tuple
                        HdlValueId: WAIT_ABORTED
                        HdlStmBlock: SEQ
                            list: body
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: clear_buffer
                                        HdlValueInt: 1
                                HdlStmIf
                                    HdlValueId: instr_rvalid_i
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlOp: ASSIGN
                                                list: ops
                                                    HdlValueId: instr_req_o
                                                    HdlValueInt: 1
                                            HdlOp: ASSIGN
                                                list: ops
                                                    HdlValueId: instr_addr_o
                                                    HdlValueId: current_address
                                            HdlStmIf
                                                HdlValueId: instr_gnt_i
                                                HdlOp: ASSIGN
                                                    list: ops
                                                        HdlValueId: NS
                                                        HdlValueId: WAIT_RVALID
                                                list: elifs
                                                HdlOp: ASSIGN
                                                    list: ops
                                                        HdlValueId: NS
                                                        HdlValueId: WAIT_GNT
                                    list: elifs
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlOp: ASSIGN
                                                list: ops
                                                    HdlValueId: NS
                                                    HdlValueId: WAIT_ABORTED
                HdlStmBlock: SEQ
                    list: body
                        HdlOp: ASSIGN
                            list: ops
                                HdlValueId: NS
                                HdlValueId: EMPTY
                        HdlOp: ASSIGN
                            list: ops
                                HdlValueId: clear_buffer
                                HdlValueInt: 1
    HdlStmProcessTriggerConstrain: COMB

UPD HdlModuleDef@@prefetch_L0_buffer to prefetch_L0_buffer
    UPD list@@objs to body
    MOV list@@objs to prefetch_L0_buffer
    list: objs
        HdlIdDef: CS
            HdlExprNotImplemented: type
            HdlDirection: INTERNAL
        HdlIdDef: NS
            HdlExprNotImplemented: type
            HdlDirection: INTERNAL
        HdlIdDef: current_address
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: logic
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 31
                            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlIdDef: pointer_cs
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: logic
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 1
                            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlIdDef: pointer_ns
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: logic
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 1
                            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlIdDef: update_current_address
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: logic
            HdlDirection: INTERNAL
        HdlIdDef: L0_buffer
            HdlOp: INDEX
                list: ops
                    HdlOp: PARAMETRIZATION
                        list: ops
                            HdlValueId: logic
                            HdlOp: DOWNTO
                                list: ops
                                    HdlValueInt: 3
                                    HdlValueInt: 0
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 31
                            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlIdDef: valid_L0_buffer
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: logic
            HdlDirection: INTERNAL
        HdlIdDef: previous_chunk
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: logic
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 15
                            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlIdDef: valid_previous_chunk
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: logic
            HdlDirection: INTERNAL
        HdlIdDef: clear_buffer
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: logic
            HdlDirection: INTERNAL
        HdlStmAssign
            HdlOp: NE
                list: ops
                    HdlValueId: CS
                    HdlValueId: EMPTY
            HdlValueId: busy_o
        HdlStmProcess
            list: sensitivity
                HdlOp: RISING
                    list: ops
                        HdlValueId: clk
                HdlOp: FALLING
                    list: ops
                        HdlValueId: rst_n
            HdlStmBlock: SEQ
                list: body
                    HdlStmIf
                        HdlOp: NEG
                            list: ops
                                HdlValueId: rst_n
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmAssign
                                    HdlValueId: EMPTY
                                    HdlValueId: CS
                                HdlStmAssign
                                    HdlValueInt: 0
                                    HdlValueId: current_address
                                HdlStmAssign
                                    HdlValueInt: 0
                                    HdlValueId: pointer_cs
                        list: elifs
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmAssign
                                    HdlValueId: NS
                                    HdlValueId: CS
                                HdlStmIf
                                    HdlValueId: branch_i
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmAssign
                                                HdlOp: CONCAT
                                                    list: ops
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlValueId: addr_i
                                                                HdlOp: DOWNTO
                                                                    list: ops
                                                                        HdlValueInt: 31
                                                                        HdlValueInt: 4
                                                        HdlValueInt: 0000
                                                HdlValueId: current_address
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: addr_i
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 3
                                                                HdlValueInt: 2
                                                HdlValueId: pointer_cs
                                    list: elifs
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmIf
                                                HdlValueId: update_current_address
                                                HdlStmAssign: if_true
                                                    HdlOp: ADD
                                                        list: ops
                                                            HdlValueId: current_address
                                                            HdlValueInt: 10
                                                    HdlValueId: current_address
                                                list: elifs
                                            HdlStmAssign
                                                HdlValueId: pointer_ns
                                                HdlValueId: pointer_cs
            HdlStmProcessTriggerConstrain: FF
        HdlStmProcess
            HdlStmBlock: SEQ
                list: body
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: valid_o
                            HdlValueInt: 0
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: addr_o
                            HdlOp: ADD
                                list: ops
                                    HdlValueId: current_address
                                    HdlOp: SLL
                                        list: ops
                                            HdlValueId: pointer_cs
                                            HdlValueInt: 2
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: pointer_ns
                            HdlValueId: pointer_cs
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: instr_req_o
                            HdlValueInt: 0
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: instr_addr_o
                            HdlOp: TERNARY
                                list: ops
                                    HdlValueId: branch_i
                                    HdlValueId: addr_i
                                    HdlOp: ADD
                                        list: ops
                                            HdlValueId: current_address
                                            HdlValueInt: 10
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: update_current_address
                            HdlValueInt: 0
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: rdata_o
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: instr_rdata_i
                                    HdlValueId: pointer_cs
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: clear_buffer
                            HdlValueInt: 0
                    HdlStmCase: {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops':}]} 
                        HdlStmCaseType: CASE
                        HdlOp: INDEX
                            list: ops
                                HdlValueId: addr_o
                                HdlOp: DOWNTO
                                    list: ops
                                        HdlValueInt: 3
                                        HdlValueInt: 2
                        list: cases
                            tuple
                                HdlValueInt: 00
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: unaligned_rdata_o
                                                HdlOp: CONCAT
                                                    list: ops
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlOp: INDEX
                                                                    list: ops
                                                                        HdlValueId: L0_buffer
                                                                        HdlValueInt: 0
                                                                HdlOp: DOWNTO
                                                                    list: ops
                                                                        HdlValueInt: 15
                                                                        HdlValueInt: 0
                                                        HdlValueId: previous_chunk
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: unaligned_valid_o
                                                HdlValueId: valid_previous_chunk
                            tuple
                                HdlValueInt: 01
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: unaligned_rdata_o
                                                HdlOp: CONCAT
                                                    list: ops
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlOp: INDEX
                                                                    list: ops
                                                                        HdlValueId: L0_buffer
                                                                        HdlValueInt: 1
                                                                HdlOp: DOWNTO
                                                                    list: ops
                                                                        HdlValueInt: 15
                                                                        HdlValueInt: 0
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlOp: INDEX
                                                                    list: ops
                                                                        HdlValueId: L0_buffer
                                                                        HdlValueInt: 0
                                                                HdlOp: DOWNTO
                                                                    list: ops
                                                                        HdlValueInt: 31
                                                                        HdlValueInt: 16
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: unaligned_valid_o
                                                HdlValueId: valid_o
                            tuple
                                HdlValueInt: 10
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: unaligned_rdata_o
                                                HdlOp: CONCAT
                                                    list: ops
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlOp: INDEX
                                                                    list: ops
                                                                        HdlValueId: L0_buffer
                                                                        HdlValueInt: 2
                                                                HdlOp: DOWNTO
                                                                    list: ops
                                                                        HdlValueInt: 15
                                                                        HdlValueInt: 0
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlOp: INDEX
                                                                    list: ops
                                                                        HdlValueId: L0_buffer
                                                                        HdlValueInt: 1
                                                                HdlOp: DOWNTO
                                                                    list: ops
                                                                        HdlValueInt: 31
                                                                        HdlValueInt: 16
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: unaligned_valid_o
                                                HdlValueId: valid_o
                            tuple
                                HdlValueInt: 11
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: unaligned_rdata_o
                                                HdlOp: CONCAT
                                                    list: ops
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlOp: INDEX
                                                                    list: ops
                                                                        HdlValueId: L0_buffer
                                                                        HdlValueInt: 3
                                                                HdlOp: DOWNTO
                                                                    list: ops
                                                                        HdlValueInt: 15
                                                                        HdlValueInt: 0
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlOp: INDEX
                                                                    list: ops
                                                                        HdlValueId: L0_buffer
                                                                        HdlValueInt: 2
                                                                HdlOp: DOWNTO
                                                                    list: ops
                                                                        HdlValueInt: 31
                                                                        HdlValueInt: 16
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: unaligned_valid_o
                                                HdlValueId: valid_o
                    HdlStmCase: CS
                        HdlStmCaseType: CASE
                        HdlValueId: CS
                        list: cases
                            tuple
                                HdlValueId: EMPTY
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: instr_req_o
                                                HdlValueId: branch_i
                                        HdlStmIf
                                            HdlValueId: branch_i
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlStmIf
                                                        HdlValueId: instr_gnt_i
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: NS
                                                                HdlValueId: WAIT_RVALID
                                                        list: elifs
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: NS
                                                                HdlValueId: WAIT_GNT
                                            list: elifs
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: NS
                                                            HdlValueId: EMPTY
                            tuple
                                HdlValueId: WAIT_RVALID
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlStmIf
                                            HdlValueId: branch_i
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlStmIf
                                                        HdlValueId: instr_rvalid_i
                                                        HdlStmBlock: SEQ
                                                            list: body
                                                                HdlOp: ASSIGN
                                                                    list: ops
                                                                        HdlValueId: instr_req_o
                                                                        HdlValueInt: 1
                                                                HdlOp: ASSIGN
                                                                    list: ops
                                                                        HdlValueId: instr_addr_o
                                                                        HdlOp: CONCAT
                                                                            list: ops
                                                                                HdlOp: INDEX
                                                                                    list: ops
                                                                                        HdlValueId: addr_i
                                                                                        HdlOp: DOWNTO
                                                                                            list: ops
                                                                                                HdlValueInt: 31
                                                                                                HdlValueInt: 4
                                                                                HdlValueInt: 0000
                                                                HdlStmIf
                                                                    HdlValueId: instr_gnt_i
                                                                    HdlOp: ASSIGN
                                                                        list: ops
                                                                            HdlValueId: NS
                                                                            HdlValueId: WAIT_RVALID
                                                                    list: elifs
                                                                    HdlOp: ASSIGN
                                                                        list: ops
                                                                            HdlValueId: NS
                                                                            HdlValueId: WAIT_GNT
                                                        list: elifs
                                                        HdlStmBlock: SEQ
                                                            list: body
                                                                HdlOp: ASSIGN
                                                                    list: ops
                                                                        HdlValueId: NS
                                                                        HdlValueId: WAIT_ABORTED
                                            list: elifs
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: valid_o
                                                            HdlValueId: instr_rvalid_i
                                                    HdlStmCase: pointer_cs
                                                        HdlStmCaseType: CASE
                                                        HdlValueId: pointer_cs
                                                        list: cases
                                                            tuple
                                                                HdlValueInt: 00
                                                                HdlStmBlock: SEQ
                                                                    list: body
                                                                        HdlOp: ASSIGN
                                                                            list: ops
                                                                                HdlValueId: unaligned_rdata_o
                                                                                HdlOp: CONCAT
                                                                                    list: ops
                                                                                        HdlOp: INDEX
                                                                                            list: ops
                                                                                                HdlOp: INDEX
                                                                                                    list: ops
                                                                                                        HdlValueId: instr_rdata_i
                                                                                                        HdlValueInt: 0
                                                                                                HdlOp: DOWNTO
                                                                                                    list: ops
                                                                                                        HdlValueInt: 15
                                                                                                        HdlValueInt: 0
                                                                                        HdlOp: INDEX
                                                                                            list: ops
                                                                                                HdlOp: INDEX
                                                                                                    list: ops
                                                                                                        HdlValueId: L0_buffer
                                                                                                        HdlValueInt: 3
                                                                                                HdlOp: DOWNTO
                                                                                                    list: ops
                                                                                                        HdlValueInt: 31
                                                                                                        HdlValueInt: 16
                                                                        HdlStmIf
                                                                            HdlValueId: valid_L0_buffer
                                                                            HdlOp: ASSIGN
                                                                                list: ops
                                                                                    HdlValueId: unaligned_valid_o
                                                                                    HdlValueId: instr_rvalid_i
                                                                            list: elifs
                                                                            HdlOp: ASSIGN
                                                                                list: ops
                                                                                    HdlValueId: unaligned_valid_o
                                                                                    HdlValueInt: 0
                                                            tuple
                                                                HdlValueInt: 01
                                                                HdlStmBlock: SEQ
                                                                    list: body
                                                                        HdlOp: ASSIGN
                                                                            list: ops
                                                                                HdlValueId: unaligned_rdata_o
                                                                                HdlOp: CONCAT
                                                                                    list: ops
                                                                                        HdlOp: INDEX
                                                                                            list: ops
                                                                                                HdlOp: INDEX
                                                                                                    list: ops
                                                                                                        HdlValueId: instr_rdata_i
                                                                                                        HdlValueInt: 1
                                                                                                HdlOp: DOWNTO
                                                                                                    list: ops
                                                                                                        HdlValueInt: 15
                                                                                                        HdlValueInt: 0
                                                                                        HdlOp: INDEX
                                                                                            list: ops
                                                                                                HdlOp: INDEX
                                                                                                    list: ops
                                                                                                        HdlValueId: instr_rdata_i
                                                                                                        HdlValueInt: 0
                                                                                                HdlOp: DOWNTO
                                                                                                    list: ops
                                                                                                        HdlValueInt: 31
                                                                                                        HdlValueInt: 16
                                                                        HdlOp: ASSIGN
                                                                            list: ops
                                                                                HdlValueId: unaligned_valid_o
                                                                                HdlValueId: instr_rvalid_i
                                                            tuple
                                                                HdlValueInt: 10
                                                                HdlStmBlock: SEQ
                                                                    list: body
                                                                        HdlOp: ASSIGN
                                                                            list: ops
                                                                                HdlValueId: unaligned_rdata_o
                                                                                HdlOp: CONCAT
                                                                                    list: ops
                                                                                        HdlOp: INDEX
                                                                                            list: ops
                                                                                                HdlOp: INDEX
                                                                                                    list: ops
                                                                                                        HdlValueId: instr_rdata_i
                                                                                                        HdlValueInt: 2
                                                                                                HdlOp: DOWNTO
                                                                                                    list: ops
                                                                                                        HdlValueInt: 15
                                                                                                        HdlValueInt: 0
                                                                                        HdlOp: INDEX
                                                                                            list: ops
                                                                                                HdlOp: INDEX
                                                                                                    list: ops
                                                                                                        HdlValueId: instr_rdata_i
                                                                                                        HdlValueInt: 1
                                                                                                HdlOp: DOWNTO
                                                                                                    list: ops
                                                                                                        HdlValueInt: 31
                                                                                                        HdlValueInt: 16
                                                                        HdlOp: ASSIGN
                                                                            list: ops
                                                                                HdlValueId: unaligned_valid_o
                                                                                HdlValueId: instr_rvalid_i
                                                            tuple
                                                                HdlValueInt: 11
                                                                HdlStmBlock: SEQ
                                                                    list: body
                                                                        HdlOp: ASSIGN
                                                                            list: ops
                                                                                HdlValueId: unaligned_rdata_o
                                                                                HdlOp: CONCAT
                                                                                    list: ops
                                                                                        HdlOp: INDEX
                                                                                            list: ops
                                                                                                HdlOp: INDEX
                                                                                                    list: ops
                                                                                                        HdlValueId: instr_rdata_i
                                                                                                        HdlValueInt: 3
                                                                                                HdlOp: DOWNTO
                                                                                                    list: ops
                                                                                                        HdlValueInt: 15
                                                                                                        HdlValueInt: 0
                                                                                        HdlOp: INDEX
                                                                                            list: ops
                                                                                                HdlOp: INDEX
                                                                                                    list: ops
                                                                                                        HdlValueId: instr_rdata_i
                                                                                                        HdlValueInt: 2
                                                                                                HdlOp: DOWNTO
                                                                                                    list: ops
                                                                                                        HdlValueInt: 31
                                                                                                        HdlValueInt: 16
                                                                        HdlOp: ASSIGN
                                                                            list: ops
                                                                                HdlValueId: unaligned_valid_o
                                                                                HdlValueId: instr_rvalid_i
                                                    HdlStmIf
                                                        HdlValueId: instr_rvalid_i
                                                        HdlStmBlock: SEQ
                                                            list: body
                                                                HdlStmIf
                                                                    HdlOp: AND_UNARY
                                                                        list: ops
                                                                            HdlValueId: pointer_cs
                                                                    HdlStmBlock: SEQ
                                                                        list: body
                                                                            HdlStmIf
                                                                                HdlValueId: ready_i
                                                                                HdlStmBlock: SEQ
                                                                                    list: body
                                                                                        HdlOp: ASSIGN
                                                                                            list: ops
                                                                                                HdlValueId: instr_req_o
                                                                                                HdlValueInt: 1
                                                                                        HdlOp: ASSIGN
                                                                                            list: ops
                                                                                                HdlValueId: instr_addr_o
                                                                                                HdlOp: ADD
                                                                                                    list: ops
                                                                                                        HdlValueId: current_address
                                                                                                        HdlValueInt: 10
                                                                                        HdlOp: ASSIGN
                                                                                            list: ops
                                                                                                HdlValueId: pointer_ns
                                                                                                HdlValueInt: 0
                                                                                        HdlOp: ASSIGN
                                                                                            list: ops
                                                                                                HdlValueId: update_current_address
                                                                                                HdlValueInt: 1
                                                                                        HdlStmIf
                                                                                            HdlValueId: instr_gnt_i
                                                                                            HdlOp: ASSIGN
                                                                                                list: ops
                                                                                                    HdlValueId: NS
                                                                                                    HdlValueId: WAIT_RVALID
                                                                                            list: elifs
                                                                                            HdlOp: ASSIGN
                                                                                                list: ops
                                                                                                    HdlValueId: NS
                                                                                                    HdlValueId: WAIT_GNT
                                                                                list: elifs
                                                                                HdlStmBlock: SEQ
                                                                                    list: body
                                                                                        HdlOp: ASSIGN
                                                                                            list: ops
                                                                                                HdlValueId: NS
                                                                                                HdlValueId: VALID_L0
                                                                    list: elifs
                                                                    HdlStmBlock: SEQ
                                                                        list: body
                                                                            HdlOp: ASSIGN
                                                                                list: ops
                                                                                    HdlValueId: NS
                                                                                    HdlValueId: VALID_L0
                                                                            HdlStmIf
                                                                                HdlValueId: ready_i
                                                                                HdlOp: ASSIGN
                                                                                    list: ops
                                                                                        HdlValueId: pointer_ns
                                                                                        HdlOp: ADD
                                                                                            list: ops
                                                                                                HdlValueId: pointer_cs
                                                                                                HdlValueInt: 1
                                                                                list: elifs
                                                                                HdlOp: ASSIGN
                                                                                    list: ops
                                                                                        HdlValueId: pointer_ns
                                                                                        HdlValueId: pointer_cs
                                                        list: elifs
                                                        HdlStmBlock: SEQ
                                                            list: body
                                                                HdlOp: ASSIGN
                                                                    list: ops
                                                                        HdlValueId: NS
                                                                        HdlValueId: WAIT_RVALID
                            tuple
                                HdlValueId: VALID_L0
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: valid_o
                                                HdlValueInt: 1
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: rdata_o
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: L0_buffer
                                                        HdlValueId: pointer_cs
                                        HdlStmCase: pointer_cs
                                            HdlStmCaseType: CASE
                                            HdlValueId: pointer_cs
                                            list: cases
                                                tuple
                                                    HdlValueInt: 00
                                                    HdlStmBlock: SEQ
                                                        list: body
                                                            HdlOp: ASSIGN
                                                                list: ops
                                                                    HdlValueId: unaligned_rdata_o
                                                                    HdlOp: CONCAT
                                                                        list: ops
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlOp: INDEX
                                                                                        list: ops
                                                                                            HdlValueId: L0_buffer
                                                                                            HdlValueInt: 0
                                                                                    HdlOp: DOWNTO
                                                                                        list: ops
                                                                                            HdlValueInt: 15
                                                                                            HdlValueInt: 0
                                                                            HdlValueId: previous_chunk
                                                            HdlOp: ASSIGN
                                                                list: ops
                                                                    HdlValueId: unaligned_valid_o
                                                                    HdlValueId: valid_previous_chunk
                                                tuple
                                                    HdlValueInt: 01
                                                    HdlStmBlock: SEQ
                                                        list: body
                                                            HdlOp: ASSIGN
                                                                list: ops
                                                                    HdlValueId: unaligned_rdata_o
                                                                    HdlOp: CONCAT
                                                                        list: ops
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlOp: INDEX
                                                                                        list: ops
                                                                                            HdlValueId: L0_buffer
                                                                                            HdlValueInt: 1
                                                                                    HdlOp: DOWNTO
                                                                                        list: ops
                                                                                            HdlValueInt: 15
                                                                                            HdlValueInt: 0
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlOp: INDEX
                                                                                        list: ops
                                                                                            HdlValueId: L0_buffer
                                                                                            HdlValueInt: 0
                                                                                    HdlOp: DOWNTO
                                                                                        list: ops
                                                                                            HdlValueInt: 31
                                                                                            HdlValueInt: 16
                                                            HdlOp: ASSIGN
                                                                list: ops
                                                                    HdlValueId: unaligned_valid_o
                                                                    HdlValueInt: 1
                                                tuple
                                                    HdlValueInt: 10
                                                    HdlStmBlock: SEQ
                                                        list: body
                                                            HdlOp: ASSIGN
                                                                list: ops
                                                                    HdlValueId: unaligned_rdata_o
                                                                    HdlOp: CONCAT
                                                                        list: ops
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlOp: INDEX
                                                                                        list: ops
                                                                                            HdlValueId: L0_buffer
                                                                                            HdlValueInt: 2
                                                                                    HdlOp: DOWNTO
                                                                                        list: ops
                                                                                            HdlValueInt: 15
                                                                                            HdlValueInt: 0
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlOp: INDEX
                                                                                        list: ops
                                                                                            HdlValueId: L0_buffer
                                                                                            HdlValueInt: 1
                                                                                    HdlOp: DOWNTO
                                                                                        list: ops
                                                                                            HdlValueInt: 31
                                                                                            HdlValueInt: 16
                                                            HdlOp: ASSIGN
                                                                list: ops
                                                                    HdlValueId: unaligned_valid_o
                                                                    HdlValueInt: 1
                                                tuple
                                                    HdlValueInt: 11
                                                    HdlStmBlock: SEQ
                                                        list: body
                                                            HdlOp: ASSIGN
                                                                list: ops
                                                                    HdlValueId: unaligned_rdata_o
                                                                    HdlOp: CONCAT
                                                                        list: ops
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlOp: INDEX
                                                                                        list: ops
                                                                                            HdlValueId: L0_buffer
                                                                                            HdlValueInt: 3
                                                                                    HdlOp: DOWNTO
                                                                                        list: ops
                                                                                            HdlValueInt: 15
                                                                                            HdlValueInt: 0
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlOp: INDEX
                                                                                        list: ops
                                                                                            HdlValueId: L0_buffer
                                                                                            HdlValueInt: 2
                                                                                    HdlOp: DOWNTO
                                                                                        list: ops
                                                                                            HdlValueInt: 31
                                                                                            HdlValueInt: 16
                                                            HdlOp: ASSIGN
                                                                list: ops
                                                                    HdlValueId: unaligned_valid_o
                                                                    HdlValueInt: 1
                                        HdlStmIf
                                            HdlValueId: branch_i
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: instr_req_o
                                                            HdlValueInt: 1
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: instr_addr_o
                                                            HdlOp: CONCAT
                                                                list: ops
                                                                    HdlOp: INDEX
                                                                        list: ops
                                                                            HdlValueId: addr_i
                                                                            HdlOp: DOWNTO
                                                                                list: ops
                                                                                    HdlValueInt: 31
                                                                                    HdlValueInt: 4
                                                                    HdlValueInt: 0000
                                                    HdlStmIf
                                                        HdlValueId: instr_gnt_i
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: NS
                                                                HdlValueId: WAIT_RVALID
                                                        list: elifs
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: NS
                                                                HdlValueId: WAIT_GNT
                                            list: elifs
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlStmIf
                                                        HdlValueId: ready_i
                                                        HdlStmBlock: SEQ
                                                            list: body
                                                                HdlStmIf
                                                                    HdlOp: AND_UNARY
                                                                        list: ops
                                                                            HdlValueId: pointer_cs
                                                                    HdlStmBlock: SEQ
                                                                        list: body
                                                                            HdlOp: ASSIGN
                                                                                list: ops
                                                                                    HdlValueId: instr_req_o
                                                                                    HdlValueInt: 1
                                                                            HdlOp: ASSIGN
                                                                                list: ops
                                                                                    HdlValueId: instr_addr_o
                                                                                    HdlOp: ADD
                                                                                        list: ops
                                                                                            HdlValueId: current_address
                                                                                            HdlValueInt: 10
                                                                            HdlOp: ASSIGN
                                                                                list: ops
                                                                                    HdlValueId: update_current_address
                                                                                    HdlValueInt: 1
                                                                            HdlOp: ASSIGN
                                                                                list: ops
                                                                                    HdlValueId: pointer_ns
                                                                                    HdlValueInt: 0
                                                                            HdlStmIf
                                                                                HdlValueId: instr_gnt_i
                                                                                HdlOp: ASSIGN
                                                                                    list: ops
                                                                                        HdlValueId: NS
                                                                                        HdlValueId: WAIT_RVALID
                                                                                list: elifs
                                                                                HdlOp: ASSIGN
                                                                                    list: ops
                                                                                        HdlValueId: NS
                                                                                        HdlValueId: WAIT_GNT
                                                                    list: elifs
                                                                    HdlStmBlock: SEQ
                                                                        list: body
                                                                            HdlOp: ASSIGN
                                                                                list: ops
                                                                                    HdlValueId: pointer_ns
                                                                                    HdlOp: ADD
                                                                                        list: ops
                                                                                            HdlValueId: pointer_cs
                                                                                            HdlValueInt: 1
                                                                            HdlOp: ASSIGN
                                                                                list: ops
                                                                                    HdlValueId: NS
                                                                                    HdlValueId: VALID_L0
                                                        list: elifs
                                                        HdlStmBlock: SEQ
                                                            list: body
                                                                HdlOp: ASSIGN
                                                                    list: ops
                                                                        HdlValueId: NS
                                                                        HdlValueId: VALID_L0
                            tuple
                                HdlValueId: WAIT_GNT
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlStmIf
                                            HdlValueId: branch_i
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: instr_req_o
                                                            HdlValueInt: 1
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: instr_addr_o
                                                            HdlOp: CONCAT
                                                                list: ops
                                                                    HdlOp: INDEX
                                                                        list: ops
                                                                            HdlValueId: addr_i
                                                                            HdlOp: DOWNTO
                                                                                list: ops
                                                                                    HdlValueInt: 31
                                                                                    HdlValueInt: 4
                                                                    HdlValueInt: 0000
                                                    HdlStmIf
                                                        HdlValueId: instr_gnt_i
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: NS
                                                                HdlValueId: WAIT_RVALID
                                                        list: elifs
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: NS
                                                                HdlValueId: WAIT_GNT
                                            list: elifs
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: instr_req_o
                                                            HdlValueInt: 1
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: instr_addr_o
                                                            HdlValueId: current_address
                                                    HdlStmIf
                                                        HdlValueId: instr_gnt_i
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: NS
                                                                HdlValueId: WAIT_RVALID
                                                        list: elifs
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: NS
                                                                HdlValueId: WAIT_GNT
                            tuple
                                HdlValueId: WAIT_ABORTED
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: clear_buffer
                                                HdlValueInt: 1
                                        HdlStmIf
                                            HdlValueId: instr_rvalid_i
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: instr_req_o
                                                            HdlValueInt: 1
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: instr_addr_o
                                                            HdlValueId: current_address
                                                    HdlStmIf
                                                        HdlValueId: instr_gnt_i
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: NS
                                                                HdlValueId: WAIT_RVALID
                                                        list: elifs
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: NS
                                                                HdlValueId: WAIT_GNT
                                            list: elifs
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: NS
                                                            HdlValueId: WAIT_ABORTED
                        HdlStmBlock: SEQ
                            list: body
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: NS
                                        HdlValueId: EMPTY
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: clear_buffer
                                        HdlValueInt: 1
            HdlStmProcessTriggerConstrain: COMB
        HdlStmProcess
            list: sensitivity
                HdlOp: RISING
                    list: ops
                        HdlValueId: clk
                HdlOp: FALLING
                    list: ops
                        HdlValueId: rst_n
            HdlStmBlock: SEQ
                list: body
                    HdlStmIf
                        HdlOp: EQ
                            list: ops
                                HdlValueId: rst_n
                                HdlValueInt: 0
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmAssign
                                    HdlValueInt: 0
                                    HdlValueId: valid_L0_buffer
                                HdlStmAssign
                                    HdlValueInt: 0
                                    HdlValueId: L0_buffer
                                HdlStmAssign
                                    HdlValueInt: 0
                                    HdlValueId: previous_chunk
                                HdlStmAssign
                                    HdlValueInt: 0
                                    HdlValueId: valid_previous_chunk
                        list: elifs
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmIf
                                    HdlOp: OR_LOG
                                        list: ops
                                            HdlValueId: branch_i
                                            HdlValueId: clear_buffer
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmAssign
                                                HdlValueInt: 0
                                                HdlValueId: valid_L0_buffer
                                            HdlStmAssign
                                                HdlValueInt: 0
                                                HdlValueId: valid_previous_chunk
                                    list: elifs
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmIf
                                                HdlValueId: instr_rvalid_i
                                                HdlStmBlock: SEQ
                                                    list: body
                                                        HdlStmAssign
                                                            HdlValueId: instr_rdata_i
                                                            HdlValueId: L0_buffer
                                                        HdlStmAssign
                                                            HdlValueInt: 1
                                                            HdlValueId: valid_L0_buffer
                                                        HdlStmIf
                                                            HdlValueId: valid_L0_buffer
                                                            HdlStmBlock: SEQ
                                                                list: body
                                                                    HdlStmAssign
                                                                        HdlValueInt: 1
                                                                        HdlValueId: valid_previous_chunk
                                                                    HdlStmAssign
                                                                        HdlOp: INDEX
                                                                            list: ops
                                                                                HdlOp: INDEX
                                                                                    list: ops
                                                                                        HdlValueId: L0_buffer
                                                                                        HdlValueInt: 3
                                                                                HdlOp: DOWNTO
                                                                                    list: ops
                                                                                        HdlValueInt: 31
                                                                                        HdlValueInt: 16
                                                                        HdlValueId: previous_chunk
                                                            list: elifs
                                                list: elifs
            HdlStmProcessTriggerConstrain: FF

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['addr_o',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '3'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '2'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['addr_o',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '3'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '2'}]}]} 
    UPD HdlStmBlock@@SEQ to SEQ
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: unaligned_valid_o
                HdlValueId: valid_o
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@unaligned_valid_o to is_prefetch_n
            UPD HdlValueId@@valid_o to is_prefetch_q
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@CONCAT to CONCAT
                MOV HdlOp@@INDEX to ops
                HdlOp: INDEX
                    list: ops
                        HdlOp: INDEX
                            list: ops
                                HdlValueId: L0_buffer
                                HdlValueInt: 3
                        HdlOp: DOWNTO
                            list: ops
                                HdlValueInt: 15
                                HdlValueInt: 0
                MOV HdlOp@@INDEX to ops
                HdlOp: INDEX
                    list: ops
                        HdlOp: INDEX
                            list: ops
                                HdlValueId: L0_buffer
                                HdlValueInt: 2
                        HdlOp: DOWNTO
                            list: ops
                                HdlValueInt: 31
                                HdlValueInt: 16
                UPD HdlOp@@INDEX to INDEX
                    UPD HdlOp@@DOWNTO to DOWNTO
                        UPD HdlValueInt@@15 to 31
                UPD HdlOp@@INDEX to INDEX
                    UPD HdlOp@@INDEX to INDEX
                        UPD HdlValueId@@L0_buffer to previous_chunk
                        MOV HdlValueId@@L0_buffer to ops
                        HdlValueId: L0_buffer
                        DEL HdlValueInt@@2 from ops
                        DEL list@@ops from INDEX
                    DEL HdlOp@@INDEX from ops
                DEL list@@ops from CONCAT
            DEL HdlValueId@@unaligned_rdata_o from ops
            DEL HdlOp@@CONCAT from ops
            DEL list@@ops from ASSIGN
        DEL HdlOp@@ASSIGN from body
        DEL list@@body from SEQ
    UPD HdlValueInt@@01 to 0
    MOV HdlValueInt@@01 to 
    HdlValueInt: 01
    MOV HdlOp@@INDEX to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['addr_o',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '3'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '2'}]}]} 
    HdlOp: INDEX
        list: ops
            HdlValueId: addr_o
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 3
                    HdlValueInt: 2
    MOV tuple@@ to cases
    tuple
        HdlValueInt: 00
        HdlStmBlock: SEQ
            list: body
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: unaligned_rdata_o
                        HdlOp: CONCAT
                            list: ops
                                HdlOp: INDEX
                                    list: ops
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: L0_buffer
                                                HdlValueInt: 0
                                        HdlOp: DOWNTO
                                            list: ops
                                                HdlValueInt: 15
                                                HdlValueInt: 0
                                HdlValueId: previous_chunk
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: unaligned_valid_o
                        HdlValueId: valid_previous_chunk
    UPD HdlValueInt@@00 to 11
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: unaligned_rdata_o
                    HdlOp: CONCAT
                        list: ops
                            HdlOp: INDEX
                                list: ops
                                    HdlOp: INDEX
                                        list: ops
                                            HdlValueId: L0_buffer
                                            HdlValueInt: 0
                                    HdlOp: DOWNTO
                                        list: ops
                                            HdlValueInt: 15
                                            HdlValueInt: 0
                            HdlValueId: previous_chunk
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: unaligned_valid_o
                    HdlValueId: valid_previous_chunk
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@CONCAT to CONCAT
                MOV HdlOp@@INDEX to ops
                HdlOp: INDEX
                    list: ops
                        HdlOp: INDEX
                            list: ops
                                HdlValueId: L0_buffer
                                HdlValueInt: 0
                        HdlOp: DOWNTO
                            list: ops
                                HdlValueInt: 31
                                HdlValueInt: 16
                UPD HdlOp@@INDEX to INDEX
                    DEL HdlOp@@INDEX from ops
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: L0_buffer
                            HdlValueInt: 0
                DEL HdlOp@@INDEX from ops
                HdlOp: INDEX
                    list: ops
                        HdlOp: INDEX
                            list: ops
                                HdlValueId: L0_buffer
                                HdlValueInt: 1
                        HdlOp: DOWNTO
                            list: ops
                                HdlValueInt: 15
                                HdlValueInt: 0
                DEL list@@ops from CONCAT
            DEL HdlValueId@@unaligned_rdata_o from ops
            DEL HdlOp@@CONCAT from ops
            DEL list@@ops from ASSIGN
        DEL HdlOp@@ASSIGN from body
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: unaligned_valid_o
                HdlValueId: valid_o
        DEL list@@body from SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@CONCAT to CONCAT
                MOV HdlValueId@@previous_chunk to ops
                HdlValueId: previous_chunk
        UPD HdlOp@@ASSIGN to ASSIGN
            DEL HdlValueId@@valid_previous_chunk from ops
    DEL HdlStmCaseType@@CASE from {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['addr_o',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '3'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '2'}]}]} 
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases
    DEL tuple@@ from cases
    tuple
        HdlValueInt: 10
        HdlStmBlock: SEQ
            list: body
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: unaligned_rdata_o
                        HdlOp: CONCAT
                            list: ops
                                HdlOp: INDEX
                                    list: ops
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: L0_buffer
                                                HdlValueInt: 2
                                        HdlOp: DOWNTO
                                            list: ops
                                                HdlValueInt: 15
                                                HdlValueInt: 0
                                HdlOp: INDEX
                                    list: ops
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: L0_buffer
                                                HdlValueInt: 1
                                        HdlOp: DOWNTO
                                            list: ops
                                                HdlValueInt: 31
                                                HdlValueInt: 16
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: unaligned_valid_o
                        HdlValueId: valid_o
    DEL HdlValueInt@@11 from 
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases
    DEL list@@cases from {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['addr_o',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '3'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '2'}]}]} 

MOV HdlStmCase@@CS to body
HdlStmCase: CS
    HdlStmCaseType: CASE
    HdlValueId: CS
    list: cases
        tuple
            HdlValueId: EMPTY
            HdlStmBlock: SEQ
                list: body
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: instr_req_o
                            HdlValueId: branch_i
                    HdlStmIf
                        HdlValueId: branch_i
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmIf
                                    HdlValueId: instr_gnt_i
                                    HdlOp: ASSIGN
                                        list: ops
                                            HdlValueId: NS
                                            HdlValueId: WAIT_RVALID
                                    list: elifs
                                    HdlOp: ASSIGN
                                        list: ops
                                            HdlValueId: NS
                                            HdlValueId: WAIT_GNT
                        list: elifs
                        HdlStmBlock: SEQ
                            list: body
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: NS
                                        HdlValueId: EMPTY
        tuple
            HdlValueId: WAIT_RVALID
            HdlStmBlock: SEQ
                list: body
                    HdlStmIf
                        HdlValueId: branch_i
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmIf
                                    HdlValueId: instr_rvalid_i
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlOp: ASSIGN
                                                list: ops
                                                    HdlValueId: instr_req_o
                                                    HdlValueInt: 1
                                            HdlOp: ASSIGN
                                                list: ops
                                                    HdlValueId: instr_addr_o
                                                    HdlOp: CONCAT
                                                        list: ops
                                                            HdlOp: INDEX
                                                                list: ops
                                                                    HdlValueId: addr_i
                                                                    HdlOp: DOWNTO
                                                                        list: ops
                                                                            HdlValueInt: 31
                                                                            HdlValueInt: 4
                                                            HdlValueInt: 0000
                                            HdlStmIf
                                                HdlValueId: instr_gnt_i
                                                HdlOp: ASSIGN
                                                    list: ops
                                                        HdlValueId: NS
                                                        HdlValueId: WAIT_RVALID
                                                list: elifs
                                                HdlOp: ASSIGN
                                                    list: ops
                                                        HdlValueId: NS
                                                        HdlValueId: WAIT_GNT
                                    list: elifs
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlOp: ASSIGN
                                                list: ops
                                                    HdlValueId: NS
                                                    HdlValueId: WAIT_ABORTED
                        list: elifs
                        HdlStmBlock: SEQ
                            list: body
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: valid_o
                                        HdlValueId: instr_rvalid_i
                                HdlStmCase: pointer_cs
                                    HdlStmCaseType: CASE
                                    HdlValueId: pointer_cs
                                    list: cases
                                        tuple
                                            HdlValueInt: 00
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: unaligned_rdata_o
                                                            HdlOp: CONCAT
                                                                list: ops
                                                                    HdlOp: INDEX
                                                                        list: ops
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlValueId: instr_rdata_i
                                                                                    HdlValueInt: 0
                                                                            HdlOp: DOWNTO
                                                                                list: ops
                                                                                    HdlValueInt: 15
                                                                                    HdlValueInt: 0
                                                                    HdlOp: INDEX
                                                                        list: ops
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlValueId: L0_buffer
                                                                                    HdlValueInt: 3
                                                                            HdlOp: DOWNTO
                                                                                list: ops
                                                                                    HdlValueInt: 31
                                                                                    HdlValueInt: 16
                                                    HdlStmIf
                                                        HdlValueId: valid_L0_buffer
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: unaligned_valid_o
                                                                HdlValueId: instr_rvalid_i
                                                        list: elifs
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: unaligned_valid_o
                                                                HdlValueInt: 0
                                        tuple
                                            HdlValueInt: 01
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: unaligned_rdata_o
                                                            HdlOp: CONCAT
                                                                list: ops
                                                                    HdlOp: INDEX
                                                                        list: ops
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlValueId: instr_rdata_i
                                                                                    HdlValueInt: 1
                                                                            HdlOp: DOWNTO
                                                                                list: ops
                                                                                    HdlValueInt: 15
                                                                                    HdlValueInt: 0
                                                                    HdlOp: INDEX
                                                                        list: ops
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlValueId: instr_rdata_i
                                                                                    HdlValueInt: 0
                                                                            HdlOp: DOWNTO
                                                                                list: ops
                                                                                    HdlValueInt: 31
                                                                                    HdlValueInt: 16
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: unaligned_valid_o
                                                            HdlValueId: instr_rvalid_i
                                        tuple
                                            HdlValueInt: 10
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: unaligned_rdata_o
                                                            HdlOp: CONCAT
                                                                list: ops
                                                                    HdlOp: INDEX
                                                                        list: ops
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlValueId: instr_rdata_i
                                                                                    HdlValueInt: 2
                                                                            HdlOp: DOWNTO
                                                                                list: ops
                                                                                    HdlValueInt: 15
                                                                                    HdlValueInt: 0
                                                                    HdlOp: INDEX
                                                                        list: ops
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlValueId: instr_rdata_i
                                                                                    HdlValueInt: 1
                                                                            HdlOp: DOWNTO
                                                                                list: ops
                                                                                    HdlValueInt: 31
                                                                                    HdlValueInt: 16
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: unaligned_valid_o
                                                            HdlValueId: instr_rvalid_i
                                        tuple
                                            HdlValueInt: 11
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: unaligned_rdata_o
                                                            HdlOp: CONCAT
                                                                list: ops
                                                                    HdlOp: INDEX
                                                                        list: ops
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlValueId: instr_rdata_i
                                                                                    HdlValueInt: 3
                                                                            HdlOp: DOWNTO
                                                                                list: ops
                                                                                    HdlValueInt: 15
                                                                                    HdlValueInt: 0
                                                                    HdlOp: INDEX
                                                                        list: ops
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlValueId: instr_rdata_i
                                                                                    HdlValueInt: 2
                                                                            HdlOp: DOWNTO
                                                                                list: ops
                                                                                    HdlValueInt: 31
                                                                                    HdlValueInt: 16
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: unaligned_valid_o
                                                            HdlValueId: instr_rvalid_i
                                HdlStmIf
                                    HdlValueId: instr_rvalid_i
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmIf
                                                HdlOp: AND_UNARY
                                                    list: ops
                                                        HdlValueId: pointer_cs
                                                HdlStmBlock: SEQ
                                                    list: body
                                                        HdlStmIf
                                                            HdlValueId: ready_i
                                                            HdlStmBlock: SEQ
                                                                list: body
                                                                    HdlOp: ASSIGN
                                                                        list: ops
                                                                            HdlValueId: instr_req_o
                                                                            HdlValueInt: 1
                                                                    HdlOp: ASSIGN
                                                                        list: ops
                                                                            HdlValueId: instr_addr_o
                                                                            HdlOp: ADD
                                                                                list: ops
                                                                                    HdlValueId: current_address
                                                                                    HdlValueInt: 10
                                                                    HdlOp: ASSIGN
                                                                        list: ops
                                                                            HdlValueId: pointer_ns
                                                                            HdlValueInt: 0
                                                                    HdlOp: ASSIGN
                                                                        list: ops
                                                                            HdlValueId: update_current_address
                                                                            HdlValueInt: 1
                                                                    HdlStmIf
                                                                        HdlValueId: instr_gnt_i
                                                                        HdlOp: ASSIGN
                                                                            list: ops
                                                                                HdlValueId: NS
                                                                                HdlValueId: WAIT_RVALID
                                                                        list: elifs
                                                                        HdlOp: ASSIGN
                                                                            list: ops
                                                                                HdlValueId: NS
                                                                                HdlValueId: WAIT_GNT
                                                            list: elifs
                                                            HdlStmBlock: SEQ
                                                                list: body
                                                                    HdlOp: ASSIGN
                                                                        list: ops
                                                                            HdlValueId: NS
                                                                            HdlValueId: VALID_L0
                                                list: elifs
                                                HdlStmBlock: SEQ
                                                    list: body
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: NS
                                                                HdlValueId: VALID_L0
                                                        HdlStmIf
                                                            HdlValueId: ready_i
                                                            HdlOp: ASSIGN
                                                                list: ops
                                                                    HdlValueId: pointer_ns
                                                                    HdlOp: ADD
                                                                        list: ops
                                                                            HdlValueId: pointer_cs
                                                                            HdlValueInt: 1
                                                            list: elifs
                                                            HdlOp: ASSIGN
                                                                list: ops
                                                                    HdlValueId: pointer_ns
                                                                    HdlValueId: pointer_cs
                                    list: elifs
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlOp: ASSIGN
                                                list: ops
                                                    HdlValueId: NS
                                                    HdlValueId: WAIT_RVALID
        tuple
            HdlValueId: VALID_L0
            HdlStmBlock: SEQ
                list: body
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: valid_o
                            HdlValueInt: 1
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: rdata_o
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: L0_buffer
                                    HdlValueId: pointer_cs
                    HdlStmCase: pointer_cs
                        HdlStmCaseType: CASE
                        HdlValueId: pointer_cs
                        list: cases
                            tuple
                                HdlValueInt: 00
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: unaligned_rdata_o
                                                HdlOp: CONCAT
                                                    list: ops
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlOp: INDEX
                                                                    list: ops
                                                                        HdlValueId: L0_buffer
                                                                        HdlValueInt: 0
                                                                HdlOp: DOWNTO
                                                                    list: ops
                                                                        HdlValueInt: 15
                                                                        HdlValueInt: 0
                                                        HdlValueId: previous_chunk
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: unaligned_valid_o
                                                HdlValueId: valid_previous_chunk
                            tuple
                                HdlValueInt: 01
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: unaligned_rdata_o
                                                HdlOp: CONCAT
                                                    list: ops
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlOp: INDEX
                                                                    list: ops
                                                                        HdlValueId: L0_buffer
                                                                        HdlValueInt: 1
                                                                HdlOp: DOWNTO
                                                                    list: ops
                                                                        HdlValueInt: 15
                                                                        HdlValueInt: 0
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlOp: INDEX
                                                                    list: ops
                                                                        HdlValueId: L0_buffer
                                                                        HdlValueInt: 0
                                                                HdlOp: DOWNTO
                                                                    list: ops
                                                                        HdlValueInt: 31
                                                                        HdlValueInt: 16
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: unaligned_valid_o
                                                HdlValueInt: 1
                            tuple
                                HdlValueInt: 10
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: unaligned_rdata_o
                                                HdlOp: CONCAT
                                                    list: ops
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlOp: INDEX
                                                                    list: ops
                                                                        HdlValueId: L0_buffer
                                                                        HdlValueInt: 2
                                                                HdlOp: DOWNTO
                                                                    list: ops
                                                                        HdlValueInt: 15
                                                                        HdlValueInt: 0
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlOp: INDEX
                                                                    list: ops
                                                                        HdlValueId: L0_buffer
                                                                        HdlValueInt: 1
                                                                HdlOp: DOWNTO
                                                                    list: ops
                                                                        HdlValueInt: 31
                                                                        HdlValueInt: 16
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: unaligned_valid_o
                                                HdlValueInt: 1
                            tuple
                                HdlValueInt: 11
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: unaligned_rdata_o
                                                HdlOp: CONCAT
                                                    list: ops
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlOp: INDEX
                                                                    list: ops
                                                                        HdlValueId: L0_buffer
                                                                        HdlValueInt: 3
                                                                HdlOp: DOWNTO
                                                                    list: ops
                                                                        HdlValueInt: 15
                                                                        HdlValueInt: 0
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlOp: INDEX
                                                                    list: ops
                                                                        HdlValueId: L0_buffer
                                                                        HdlValueInt: 2
                                                                HdlOp: DOWNTO
                                                                    list: ops
                                                                        HdlValueInt: 31
                                                                        HdlValueInt: 16
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: unaligned_valid_o
                                                HdlValueInt: 1
                    HdlStmIf
                        HdlValueId: branch_i
                        HdlStmBlock: SEQ
                            list: body
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: instr_req_o
                                        HdlValueInt: 1
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: instr_addr_o
                                        HdlOp: CONCAT
                                            list: ops
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: addr_i
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 31
                                                                HdlValueInt: 4
                                                HdlValueInt: 0000
                                HdlStmIf
                                    HdlValueId: instr_gnt_i
                                    HdlOp: ASSIGN
                                        list: ops
                                            HdlValueId: NS
                                            HdlValueId: WAIT_RVALID
                                    list: elifs
                                    HdlOp: ASSIGN
                                        list: ops
                                            HdlValueId: NS
                                            HdlValueId: WAIT_GNT
                        list: elifs
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmIf
                                    HdlValueId: ready_i
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmIf
                                                HdlOp: AND_UNARY
                                                    list: ops
                                                        HdlValueId: pointer_cs
                                                HdlStmBlock: SEQ
                                                    list: body
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: instr_req_o
                                                                HdlValueInt: 1
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: instr_addr_o
                                                                HdlOp: ADD
                                                                    list: ops
                                                                        HdlValueId: current_address
                                                                        HdlValueInt: 10
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: update_current_address
                                                                HdlValueInt: 1
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: pointer_ns
                                                                HdlValueInt: 0
                                                        HdlStmIf
                                                            HdlValueId: instr_gnt_i
                                                            HdlOp: ASSIGN
                                                                list: ops
                                                                    HdlValueId: NS
                                                                    HdlValueId: WAIT_RVALID
                                                            list: elifs
                                                            HdlOp: ASSIGN
                                                                list: ops
                                                                    HdlValueId: NS
                                                                    HdlValueId: WAIT_GNT
                                                list: elifs
                                                HdlStmBlock: SEQ
                                                    list: body
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: pointer_ns
                                                                HdlOp: ADD
                                                                    list: ops
                                                                        HdlValueId: pointer_cs
                                                                        HdlValueInt: 1
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: NS
                                                                HdlValueId: VALID_L0
                                    list: elifs
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlOp: ASSIGN
                                                list: ops
                                                    HdlValueId: NS
                                                    HdlValueId: VALID_L0
        tuple
            HdlValueId: WAIT_GNT
            HdlStmBlock: SEQ
                list: body
                    HdlStmIf
                        HdlValueId: branch_i
                        HdlStmBlock: SEQ
                            list: body
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: instr_req_o
                                        HdlValueInt: 1
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: instr_addr_o
                                        HdlOp: CONCAT
                                            list: ops
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: addr_i
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 31
                                                                HdlValueInt: 4
                                                HdlValueInt: 0000
                                HdlStmIf
                                    HdlValueId: instr_gnt_i
                                    HdlOp: ASSIGN
                                        list: ops
                                            HdlValueId: NS
                                            HdlValueId: WAIT_RVALID
                                    list: elifs
                                    HdlOp: ASSIGN
                                        list: ops
                                            HdlValueId: NS
                                            HdlValueId: WAIT_GNT
                        list: elifs
                        HdlStmBlock: SEQ
                            list: body
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: instr_req_o
                                        HdlValueInt: 1
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: instr_addr_o
                                        HdlValueId: current_address
                                HdlStmIf
                                    HdlValueId: instr_gnt_i
                                    HdlOp: ASSIGN
                                        list: ops
                                            HdlValueId: NS
                                            HdlValueId: WAIT_RVALID
                                    list: elifs
                                    HdlOp: ASSIGN
                                        list: ops
                                            HdlValueId: NS
                                            HdlValueId: WAIT_GNT
        tuple
            HdlValueId: WAIT_ABORTED
            HdlStmBlock: SEQ
                list: body
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: clear_buffer
                            HdlValueInt: 1
                    HdlStmIf
                        HdlValueId: instr_rvalid_i
                        HdlStmBlock: SEQ
                            list: body
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: instr_req_o
                                        HdlValueInt: 1
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: instr_addr_o
                                        HdlValueId: current_address
                                HdlStmIf
                                    HdlValueId: instr_gnt_i
                                    HdlOp: ASSIGN
                                        list: ops
                                            HdlValueId: NS
                                            HdlValueId: WAIT_RVALID
                                    list: elifs
                                    HdlOp: ASSIGN
                                        list: ops
                                            HdlValueId: NS
                                            HdlValueId: WAIT_GNT
                        list: elifs
                        HdlStmBlock: SEQ
                            list: body
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: NS
                                        HdlValueId: WAIT_ABORTED
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: NS
                    HdlValueId: EMPTY
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: clear_buffer
                    HdlValueInt: 1

UPD HdlStmCase@@CS to CS
    INS list@@cases to CS
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmIf@@ to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

DEL HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['addr_o',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '3'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '2'}]}]}  from body


CommitId: cc90e854717023d3dd6bf126ba5e1cd7a9ea5db4
Fix RVC handling in prefetch_L0_buffer
--- a/prefetch_L0_buffer.sv
+++ b/prefetch_L0_buffer.sv
@@ -218,14 +198,6 @@ module prefetch_L0_buffer
       VALID_L0:
       begin
         valid_o = 1'b1;
-        rdata_o = L0_buffer[pointer_cs];
-        case(pointer_cs)
-          2'b00: begin unaligned_rdata_o = {L0_buffer[0][15:0], previous_chunk      }; unaligned_valid_o = valid_previous_chunk; end
-          2'b01: begin unaligned_rdata_o = {L0_buffer[1][15:0], L0_buffer[0][31:16] }; unaligned_valid_o = 1'b1;                 end
-          2'b10: begin unaligned_rdata_o = {L0_buffer[2][15:0], L0_buffer[1][31:16] }; unaligned_valid_o = 1'b1;                 end
-          2'b11: begin unaligned_rdata_o = {L0_buffer[3][15:0], L0_buffer[2][31:16] }; unaligned_valid_o = 1'b1;                 end
-        endcase // pointer_cs
-
 
         if(branch_i)
         begin

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD list@@body to objs
        MOV list@@body to SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: valid_o
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: addr_o
                    HdlOp: ADD
                        list: ops
                            HdlValueId: current_address
                            HdlOp: SLL
                                list: ops
                                    HdlValueId: pointer_cs
                                    HdlValueInt: 2
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: pointer_ns
                    HdlValueId: pointer_cs
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: instr_req_o
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: instr_addr_o
                    HdlOp: TERNARY
                        list: ops
                            HdlValueId: branch_i
                            HdlValueId: addr_i
                            HdlOp: ADD
                                list: ops
                                    HdlValueId: current_address
                                    HdlValueInt: 10
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: update_current_address
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: rdata_o
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: instr_rdata_i
                            HdlValueId: pointer_cs
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: clear_buffer
                    HdlValueInt: 0
            HdlStmCase: {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops':}]} 
                HdlStmCaseType: CASE
                HdlOp: INDEX
                    list: ops
                        HdlValueId: addr_o
                        HdlOp: DOWNTO
                            list: ops
                                HdlValueInt: 3
                                HdlValueInt: 2
                list: cases
                    tuple
                        HdlValueInt: 00
                        HdlStmBlock: SEQ
                            list: body
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: unaligned_rdata_o
                                        HdlOp: CONCAT
                                            list: ops
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlValueId: L0_buffer
                                                                HdlValueInt: 0
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 15
                                                                HdlValueInt: 0
                                                HdlValueId: previous_chunk
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: unaligned_valid_o
                                        HdlValueId: valid_previous_chunk
                    tuple
                        HdlValueInt: 01
                        HdlStmBlock: SEQ
                            list: body
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: unaligned_rdata_o
                                        HdlOp: CONCAT
                                            list: ops
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlValueId: L0_buffer
                                                                HdlValueInt: 1
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 15
                                                                HdlValueInt: 0
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlValueId: L0_buffer
                                                                HdlValueInt: 0
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 31
                                                                HdlValueInt: 16
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: unaligned_valid_o
                                        HdlValueId: valid_o
                    tuple
                        HdlValueInt: 10
                        HdlStmBlock: SEQ
                            list: body
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: unaligned_rdata_o
                                        HdlOp: CONCAT
                                            list: ops
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlValueId: L0_buffer
                                                                HdlValueInt: 2
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 15
                                                                HdlValueInt: 0
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlValueId: L0_buffer
                                                                HdlValueInt: 1
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 31
                                                                HdlValueInt: 16
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: unaligned_valid_o
                                        HdlValueId: valid_o
                    tuple
                        HdlValueInt: 11
                        HdlStmBlock: SEQ
                            list: body
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: unaligned_rdata_o
                                        HdlOp: CONCAT
                                            list: ops
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlValueId: L0_buffer
                                                                HdlValueInt: 3
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 15
                                                                HdlValueInt: 0
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlValueId: L0_buffer
                                                                HdlValueInt: 2
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 31
                                                                HdlValueInt: 16
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: unaligned_valid_o
                                        HdlValueId: valid_o
            HdlStmCase: CS
                HdlStmCaseType: CASE
                HdlValueId: CS
                list: cases
                    tuple
                        HdlValueId: EMPTY
                        HdlStmBlock: SEQ
                            list: body
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: instr_req_o
                                        HdlValueId: branch_i
                                HdlStmIf
                                    HdlValueId: branch_i
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmIf
                                                HdlValueId: instr_gnt_i
                                                HdlOp: ASSIGN
                                                    list: ops
                                                        HdlValueId: NS
                                                        HdlValueId: WAIT_RVALID
                                                list: elifs
                                                HdlOp: ASSIGN
                                                    list: ops
                                                        HdlValueId: NS
                                                        HdlValueId: WAIT_GNT
                                    list: elifs
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlOp: ASSIGN
                                                list: ops
                                                    HdlValueId: NS
                                                    HdlValueId: EMPTY
                    tuple
                        HdlValueId: WAIT_RVALID
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmIf
                                    HdlValueId: branch_i
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmIf
                                                HdlValueId: instr_rvalid_i
                                                HdlStmBlock: SEQ
                                                    list: body
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: instr_req_o
                                                                HdlValueInt: 1
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: instr_addr_o
                                                                HdlOp: CONCAT
                                                                    list: ops
                                                                        HdlOp: INDEX
                                                                            list: ops
                                                                                HdlValueId: addr_i
                                                                                HdlOp: DOWNTO
                                                                                    list: ops
                                                                                        HdlValueInt: 31
                                                                                        HdlValueInt: 4
                                                                        HdlValueInt: 0000
                                                        HdlStmIf
                                                            HdlValueId: instr_gnt_i
                                                            HdlOp: ASSIGN
                                                                list: ops
                                                                    HdlValueId: NS
                                                                    HdlValueId: WAIT_RVALID
                                                            list: elifs
                                                            HdlOp: ASSIGN
                                                                list: ops
                                                                    HdlValueId: NS
                                                                    HdlValueId: WAIT_GNT
                                                list: elifs
                                                HdlStmBlock: SEQ
                                                    list: body
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: NS
                                                                HdlValueId: WAIT_ABORTED
                                    list: elifs
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlOp: ASSIGN
                                                list: ops
                                                    HdlValueId: valid_o
                                                    HdlValueId: instr_rvalid_i
                                            HdlStmCase: pointer_cs
                                                HdlStmCaseType: CASE
                                                HdlValueId: pointer_cs
                                                list: cases
                                                    tuple
                                                        HdlValueInt: 00
                                                        HdlStmBlock: SEQ
                                                            list: body
                                                                HdlOp: ASSIGN
                                                                    list: ops
                                                                        HdlValueId: unaligned_rdata_o
                                                                        HdlOp: CONCAT
                                                                            list: ops
                                                                                HdlOp: INDEX
                                                                                    list: ops
                                                                                        HdlOp: INDEX
                                                                                            list: ops
                                                                                                HdlValueId: instr_rdata_i
                                                                                                HdlValueInt: 0
                                                                                        HdlOp: DOWNTO
                                                                                            list: ops
                                                                                                HdlValueInt: 15
                                                                                                HdlValueInt: 0
                                                                                HdlOp: INDEX
                                                                                    list: ops
                                                                                        HdlOp: INDEX
                                                                                            list: ops
                                                                                                HdlValueId: L0_buffer
                                                                                                HdlValueInt: 3
                                                                                        HdlOp: DOWNTO
                                                                                            list: ops
                                                                                                HdlValueInt: 31
                                                                                                HdlValueInt: 16
                                                                HdlStmIf
                                                                    HdlValueId: valid_L0_buffer
                                                                    HdlOp: ASSIGN
                                                                        list: ops
                                                                            HdlValueId: unaligned_valid_o
                                                                            HdlValueId: instr_rvalid_i
                                                                    list: elifs
                                                                    HdlOp: ASSIGN
                                                                        list: ops
                                                                            HdlValueId: unaligned_valid_o
                                                                            HdlValueInt: 0
                                                    tuple
                                                        HdlValueInt: 01
                                                        HdlStmBlock: SEQ
                                                            list: body
                                                                HdlOp: ASSIGN
                                                                    list: ops
                                                                        HdlValueId: unaligned_rdata_o
                                                                        HdlOp: CONCAT
                                                                            list: ops
                                                                                HdlOp: INDEX
                                                                                    list: ops
                                                                                        HdlOp: INDEX
                                                                                            list: ops
                                                                                                HdlValueId: instr_rdata_i
                                                                                                HdlValueInt: 1
                                                                                        HdlOp: DOWNTO
                                                                                            list: ops
                                                                                                HdlValueInt: 15
                                                                                                HdlValueInt: 0
                                                                                HdlOp: INDEX
                                                                                    list: ops
                                                                                        HdlOp: INDEX
                                                                                            list: ops
                                                                                                HdlValueId: instr_rdata_i
                                                                                                HdlValueInt: 0
                                                                                        HdlOp: DOWNTO
                                                                                            list: ops
                                                                                                HdlValueInt: 31
                                                                                                HdlValueInt: 16
                                                                HdlOp: ASSIGN
                                                                    list: ops
                                                                        HdlValueId: unaligned_valid_o
                                                                        HdlValueId: instr_rvalid_i
                                                    tuple
                                                        HdlValueInt: 10
                                                        HdlStmBlock: SEQ
                                                            list: body
                                                                HdlOp: ASSIGN
                                                                    list: ops
                                                                        HdlValueId: unaligned_rdata_o
                                                                        HdlOp: CONCAT
                                                                            list: ops
                                                                                HdlOp: INDEX
                                                                                    list: ops
                                                                                        HdlOp: INDEX
                                                                                            list: ops
                                                                                                HdlValueId: instr_rdata_i
                                                                                                HdlValueInt: 2
                                                                                        HdlOp: DOWNTO
                                                                                            list: ops
                                                                                                HdlValueInt: 15
                                                                                                HdlValueInt: 0
                                                                                HdlOp: INDEX
                                                                                    list: ops
                                                                                        HdlOp: INDEX
                                                                                            list: ops
                                                                                                HdlValueId: instr_rdata_i
                                                                                                HdlValueInt: 1
                                                                                        HdlOp: DOWNTO
                                                                                            list: ops
                                                                                                HdlValueInt: 31
                                                                                                HdlValueInt: 16
                                                                HdlOp: ASSIGN
                                                                    list: ops
                                                                        HdlValueId: unaligned_valid_o
                                                                        HdlValueId: instr_rvalid_i
                                                    tuple
                                                        HdlValueInt: 11
                                                        HdlStmBlock: SEQ
                                                            list: body
                                                                HdlOp: ASSIGN
                                                                    list: ops
                                                                        HdlValueId: unaligned_rdata_o
                                                                        HdlOp: CONCAT
                                                                            list: ops
                                                                                HdlOp: INDEX
                                                                                    list: ops
                                                                                        HdlOp: INDEX
                                                                                            list: ops
                                                                                                HdlValueId: instr_rdata_i
                                                                                                HdlValueInt: 3
                                                                                        HdlOp: DOWNTO
                                                                                            list: ops
                                                                                                HdlValueInt: 15
                                                                                                HdlValueInt: 0
                                                                                HdlOp: INDEX
                                                                                    list: ops
                                                                                        HdlOp: INDEX
                                                                                            list: ops
                                                                                                HdlValueId: instr_rdata_i
                                                                                                HdlValueInt: 2
                                                                                        HdlOp: DOWNTO
                                                                                            list: ops
                                                                                                HdlValueInt: 31
                                                                                                HdlValueInt: 16
                                                                HdlOp: ASSIGN
                                                                    list: ops
                                                                        HdlValueId: unaligned_valid_o
                                                                        HdlValueId: instr_rvalid_i
                                            HdlStmIf
                                                HdlValueId: instr_rvalid_i
                                                HdlStmBlock: SEQ
                                                    list: body
                                                        HdlStmIf
                                                            HdlOp: AND_UNARY
                                                                list: ops
                                                                    HdlValueId: pointer_cs
                                                            HdlStmBlock: SEQ
                                                                list: body
                                                                    HdlStmIf
                                                                        HdlValueId: ready_i
                                                                        HdlStmBlock: SEQ
                                                                            list: body
                                                                                HdlOp: ASSIGN
                                                                                    list: ops
                                                                                        HdlValueId: instr_req_o
                                                                                        HdlValueInt: 1
                                                                                HdlOp: ASSIGN
                                                                                    list: ops
                                                                                        HdlValueId: instr_addr_o
                                                                                        HdlOp: ADD
                                                                                            list: ops
                                                                                                HdlValueId: current_address
                                                                                                HdlValueInt: 10
                                                                                HdlOp: ASSIGN
                                                                                    list: ops
                                                                                        HdlValueId: pointer_ns
                                                                                        HdlValueInt: 0
                                                                                HdlOp: ASSIGN
                                                                                    list: ops
                                                                                        HdlValueId: update_current_address
                                                                                        HdlValueInt: 1
                                                                                HdlStmIf
                                                                                    HdlValueId: instr_gnt_i
                                                                                    HdlOp: ASSIGN
                                                                                        list: ops
                                                                                            HdlValueId: NS
                                                                                            HdlValueId: WAIT_RVALID
                                                                                    list: elifs
                                                                                    HdlOp: ASSIGN
                                                                                        list: ops
                                                                                            HdlValueId: NS
                                                                                            HdlValueId: WAIT_GNT
                                                                        list: elifs
                                                                        HdlStmBlock: SEQ
                                                                            list: body
                                                                                HdlOp: ASSIGN
                                                                                    list: ops
                                                                                        HdlValueId: NS
                                                                                        HdlValueId: VALID_L0
                                                            list: elifs
                                                            HdlStmBlock: SEQ
                                                                list: body
                                                                    HdlOp: ASSIGN
                                                                        list: ops
                                                                            HdlValueId: NS
                                                                            HdlValueId: VALID_L0
                                                                    HdlStmIf
                                                                        HdlValueId: ready_i
                                                                        HdlOp: ASSIGN
                                                                            list: ops
                                                                                HdlValueId: pointer_ns
                                                                                HdlOp: ADD
                                                                                    list: ops
                                                                                        HdlValueId: pointer_cs
                                                                                        HdlValueInt: 1
                                                                        list: elifs
                                                                        HdlOp: ASSIGN
                                                                            list: ops
                                                                                HdlValueId: pointer_ns
                                                                                HdlValueId: pointer_cs
                                                list: elifs
                                                HdlStmBlock: SEQ
                                                    list: body
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: NS
                                                                HdlValueId: WAIT_RVALID
                    tuple
                        HdlValueId: VALID_L0
                        HdlStmBlock: SEQ
                            list: body
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: valid_o
                                        HdlValueInt: 1
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: rdata_o
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: L0_buffer
                                                HdlValueId: pointer_cs
                                HdlStmCase: pointer_cs
                                    HdlStmCaseType: CASE
                                    HdlValueId: pointer_cs
                                    list: cases
                                        tuple
                                            HdlValueInt: 00
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: unaligned_rdata_o
                                                            HdlOp: CONCAT
                                                                list: ops
                                                                    HdlOp: INDEX
                                                                        list: ops
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlValueId: L0_buffer
                                                                                    HdlValueInt: 0
                                                                            HdlOp: DOWNTO
                                                                                list: ops
                                                                                    HdlValueInt: 15
                                                                                    HdlValueInt: 0
                                                                    HdlValueId: previous_chunk
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: unaligned_valid_o
                                                            HdlValueId: valid_previous_chunk
                                        tuple
                                            HdlValueInt: 01
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: unaligned_rdata_o
                                                            HdlOp: CONCAT
                                                                list: ops
                                                                    HdlOp: INDEX
                                                                        list: ops
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlValueId: L0_buffer
                                                                                    HdlValueInt: 1
                                                                            HdlOp: DOWNTO
                                                                                list: ops
                                                                                    HdlValueInt: 15
                                                                                    HdlValueInt: 0
                                                                    HdlOp: INDEX
                                                                        list: ops
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlValueId: L0_buffer
                                                                                    HdlValueInt: 0
                                                                            HdlOp: DOWNTO
                                                                                list: ops
                                                                                    HdlValueInt: 31
                                                                                    HdlValueInt: 16
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: unaligned_valid_o
                                                            HdlValueInt: 1
                                        tuple
                                            HdlValueInt: 10
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: unaligned_rdata_o
                                                            HdlOp: CONCAT
                                                                list: ops
                                                                    HdlOp: INDEX
                                                                        list: ops
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlValueId: L0_buffer
                                                                                    HdlValueInt: 2
                                                                            HdlOp: DOWNTO
                                                                                list: ops
                                                                                    HdlValueInt: 15
                                                                                    HdlValueInt: 0
                                                                    HdlOp: INDEX
                                                                        list: ops
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlValueId: L0_buffer
                                                                                    HdlValueInt: 1
                                                                            HdlOp: DOWNTO
                                                                                list: ops
                                                                                    HdlValueInt: 31
                                                                                    HdlValueInt: 16
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: unaligned_valid_o
                                                            HdlValueInt: 1
                                        tuple
                                            HdlValueInt: 11
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: unaligned_rdata_o
                                                            HdlOp: CONCAT
                                                                list: ops
                                                                    HdlOp: INDEX
                                                                        list: ops
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlValueId: L0_buffer
                                                                                    HdlValueInt: 3
                                                                            HdlOp: DOWNTO
                                                                                list: ops
                                                                                    HdlValueInt: 15
                                                                                    HdlValueInt: 0
                                                                    HdlOp: INDEX
                                                                        list: ops
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlValueId: L0_buffer
                                                                                    HdlValueInt: 2
                                                                            HdlOp: DOWNTO
                                                                                list: ops
                                                                                    HdlValueInt: 31
                                                                                    HdlValueInt: 16
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: unaligned_valid_o
                                                            HdlValueInt: 1
                                HdlStmIf
                                    HdlValueId: branch_i
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlOp: ASSIGN
                                                list: ops
                                                    HdlValueId: instr_req_o
                                                    HdlValueInt: 1
                                            HdlOp: ASSIGN
                                                list: ops
                                                    HdlValueId: instr_addr_o
                                                    HdlOp: CONCAT
                                                        list: ops
                                                            HdlOp: INDEX
                                                                list: ops
                                                                    HdlValueId: addr_i
                                                                    HdlOp: DOWNTO
                                                                        list: ops
                                                                            HdlValueInt: 31
                                                                            HdlValueInt: 4
                                                            HdlValueInt: 0000
                                            HdlStmIf
                                                HdlValueId: instr_gnt_i
                                                HdlOp: ASSIGN
                                                    list: ops
                                                        HdlValueId: NS
                                                        HdlValueId: WAIT_RVALID
                                                list: elifs
                                                HdlOp: ASSIGN
                                                    list: ops
                                                        HdlValueId: NS
                                                        HdlValueId: WAIT_GNT
                                    list: elifs
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmIf
                                                HdlValueId: ready_i
                                                HdlStmBlock: SEQ
                                                    list: body
                                                        HdlStmIf
                                                            HdlOp: AND_UNARY
                                                                list: ops
                                                                    HdlValueId: pointer_cs
                                                            HdlStmBlock: SEQ
                                                                list: body
                                                                    HdlOp: ASSIGN
                                                                        list: ops
                                                                            HdlValueId: instr_req_o
                                                                            HdlValueInt: 1
                                                                    HdlOp: ASSIGN
                                                                        list: ops
                                                                            HdlValueId: instr_addr_o
                                                                            HdlOp: ADD
                                                                                list: ops
                                                                                    HdlValueId: current_address
                                                                                    HdlValueInt: 10
                                                                    HdlOp: ASSIGN
                                                                        list: ops
                                                                            HdlValueId: update_current_address
                                                                            HdlValueInt: 1
                                                                    HdlOp: ASSIGN
                                                                        list: ops
                                                                            HdlValueId: pointer_ns
                                                                            HdlValueInt: 0
                                                                    HdlStmIf
                                                                        HdlValueId: instr_gnt_i
                                                                        HdlOp: ASSIGN
                                                                            list: ops
                                                                                HdlValueId: NS
                                                                                HdlValueId: WAIT_RVALID
                                                                        list: elifs
                                                                        HdlOp: ASSIGN
                                                                            list: ops
                                                                                HdlValueId: NS
                                                                                HdlValueId: WAIT_GNT
                                                            list: elifs
                                                            HdlStmBlock: SEQ
                                                                list: body
                                                                    HdlOp: ASSIGN
                                                                        list: ops
                                                                            HdlValueId: pointer_ns
                                                                            HdlOp: ADD
                                                                                list: ops
                                                                                    HdlValueId: pointer_cs
                                                                                    HdlValueInt: 1
                                                                    HdlOp: ASSIGN
                                                                        list: ops
                                                                            HdlValueId: NS
                                                                            HdlValueId: VALID_L0
                                                list: elifs
                                                HdlStmBlock: SEQ
                                                    list: body
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: NS
                                                                HdlValueId: VALID_L0
                    tuple
                        HdlValueId: WAIT_GNT
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmIf
                                    HdlValueId: branch_i
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlOp: ASSIGN
                                                list: ops
                                                    HdlValueId: instr_req_o
                                                    HdlValueInt: 1
                                            HdlOp: ASSIGN
                                                list: ops
                                                    HdlValueId: instr_addr_o
                                                    HdlOp: CONCAT
                                                        list: ops
                                                            HdlOp: INDEX
                                                                list: ops
                                                                    HdlValueId: addr_i
                                                                    HdlOp: DOWNTO
                                                                        list: ops
                                                                            HdlValueInt: 31
                                                                            HdlValueInt: 4
                                                            HdlValueInt: 0000
                                            HdlStmIf
                                                HdlValueId: instr_gnt_i
                                                HdlOp: ASSIGN
                                                    list: ops
                                                        HdlValueId: NS
                                                        HdlValueId: WAIT_RVALID
                                                list: elifs
                                                HdlOp: ASSIGN
                                                    list: ops
                                                        HdlValueId: NS
                                                        HdlValueId: WAIT_GNT
                                    list: elifs
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlOp: ASSIGN
                                                list: ops
                                                    HdlValueId: instr_req_o
                                                    HdlValueInt: 1
                                            HdlOp: ASSIGN
                                                list: ops
                                                    HdlValueId: instr_addr_o
                                                    HdlValueId: current_address
                                            HdlStmIf
                                                HdlValueId: instr_gnt_i
                                                HdlOp: ASSIGN
                                                    list: ops
                                                        HdlValueId: NS
                                                        HdlValueId: WAIT_RVALID
                                                list: elifs
                                                HdlOp: ASSIGN
                                                    list: ops
                                                        HdlValueId: NS
                                                        HdlValueId: WAIT_GNT
                    tuple
                        HdlValueId: WAIT_ABORTED
                        HdlStmBlock: SEQ
                            list: body
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: clear_buffer
                                        HdlValueInt: 1
                                HdlStmIf
                                    HdlValueId: instr_rvalid_i
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlOp: ASSIGN
                                                list: ops
                                                    HdlValueId: instr_req_o
                                                    HdlValueInt: 1
                                            HdlOp: ASSIGN
                                                list: ops
                                                    HdlValueId: instr_addr_o
                                                    HdlValueId: current_address
                                            HdlStmIf
                                                HdlValueId: instr_gnt_i
                                                HdlOp: ASSIGN
                                                    list: ops
                                                        HdlValueId: NS
                                                        HdlValueId: WAIT_RVALID
                                                list: elifs
                                                HdlOp: ASSIGN
                                                    list: ops
                                                        HdlValueId: NS
                                                        HdlValueId: WAIT_GNT
                                    list: elifs
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlOp: ASSIGN
                                                list: ops
                                                    HdlValueId: NS
                                                    HdlValueId: WAIT_ABORTED
                HdlStmBlock: SEQ
                    list: body
                        HdlOp: ASSIGN
                            list: ops
                                HdlValueId: NS
                                HdlValueId: EMPTY
                        HdlOp: ASSIGN
                            list: ops
                                HdlValueId: clear_buffer
                                HdlValueInt: 1
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: valid_o
                HdlValueInt: 0
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: pointer_ns
                HdlValueId: pointer_cs
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: instr_req_o
                HdlValueInt: 0
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: instr_addr_o
                HdlOp: TERNARY
                    list: ops
                        HdlValueId: branch_i
                        HdlValueId: addr_i
                        HdlOp: ADD
                            list: ops
                                HdlValueId: current_address
                                HdlValueInt: 10
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: update_current_address
                HdlValueInt: 0
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: clear_buffer
                HdlValueInt: 0
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: rdata_o
                HdlOp: INDEX
                    list: ops
                        HdlValueId: instr_rdata_i
                        HdlValueId: pointer_cs
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: addr_o
                HdlOp: ADD
                    list: ops
                        HdlValueId: current_address
                        HdlOp: SLL
                            list: ops
                                HdlValueId: pointer_cs
                                HdlValueInt: 2

MOV HdlModuleDef@@prefetch_L0_buffer to objs
HdlModuleDef: prefetch_L0_buffer
    HdlModuleDec: prefetch_L0_buffer
        list: params
            HdlIdDef: RDATA_IN_WIDTH
                HdlValueInt: 128
                HdlDirection: INTERNAL
        list: ports
            HdlIdDef: clk
                HdlOp: PARAMETRIZATION
                    list: ops
                        HdlValueId: logic
                HdlDirection: IN
            HdlIdDef: rst_n
                HdlOp: PARAMETRIZATION
                    list: ops
                        HdlValueId: logic
                HdlDirection: IN
            HdlIdDef: req_i
                HdlOp: PARAMETRIZATION
                    list: ops
                        HdlValueId: logic
                HdlDirection: IN
            HdlIdDef: branch_i
                HdlOp: PARAMETRIZATION
                    list: ops
                        HdlValueId: logic
                HdlDirection: IN
            HdlIdDef: ready_i
                HdlOp: PARAMETRIZATION
                    list: ops
                        HdlValueId: logic
                HdlDirection: IN
            HdlIdDef: addr_i
                HdlOp: PARAMETRIZATION
                    list: ops
                        HdlValueId: logic
                        HdlOp: DOWNTO
                            list: ops
                                HdlValueInt: 31
                                HdlValueInt: 0
                HdlDirection: IN
            HdlIdDef: valid_o
                HdlOp: PARAMETRIZATION
                    list: ops
                        HdlValueId: logic
                HdlDirection: OUT
            HdlIdDef: rdata_o
                HdlOp: PARAMETRIZATION
                    list: ops
                        HdlValueId: logic
                        HdlOp: DOWNTO
                            list: ops
                                HdlValueInt: 31
                                HdlValueInt: 0
                HdlDirection: OUT
            HdlIdDef: addr_o
                HdlOp: PARAMETRIZATION
                    list: ops
                        HdlValueId: logic
                        HdlOp: DOWNTO
                            list: ops
                                HdlValueInt: 31
                                HdlValueInt: 0
                HdlDirection: OUT
            HdlIdDef: unaligned_valid_o
                HdlOp: PARAMETRIZATION
                    list: ops
                        HdlValueId: logic
                HdlDirection: OUT
            HdlIdDef: unaligned_rdata_o
                HdlOp: PARAMETRIZATION
                    list: ops
                        HdlValueId: logic
                        HdlOp: DOWNTO
                            list: ops
                                HdlValueInt: 31
                                HdlValueInt: 0
                HdlDirection: OUT
            HdlIdDef: instr_req_o
                HdlOp: PARAMETRIZATION
                    list: ops
                        HdlValueId: logic
                HdlDirection: OUT
            HdlIdDef: instr_addr_o
                HdlOp: PARAMETRIZATION
                    list: ops
                        HdlValueId: logic
                        HdlOp: DOWNTO
                            list: ops
                                HdlValueInt: 31
                                HdlValueInt: 0
                HdlDirection: OUT
            HdlIdDef: instr_gnt_i
                HdlOp: PARAMETRIZATION
                    list: ops
                        HdlValueId: logic
                HdlDirection: IN
            HdlIdDef: instr_rvalid_i
                HdlOp: PARAMETRIZATION
                    list: ops
                        HdlValueId: logic
                HdlDirection: IN
            HdlIdDef: instr_rdata_i
                HdlOp: INDEX
                    list: ops
                        HdlOp: PARAMETRIZATION
                            list: ops
                                HdlValueId: logic
                                HdlOp: DOWNTO
                                    list: ops
                                        HdlOp: SUB
                                            list: ops
                                                HdlOp: DIV
                                                    list: ops
                                                        HdlValueId: RDATA_IN_WIDTH
                                                        HdlValueInt: 32
                                                HdlValueInt: 1
                                        HdlValueInt: 0
                        HdlOp: DOWNTO
                            list: ops
                                HdlValueInt: 31
                                HdlValueInt: 0
                HdlDirection: IN
            HdlIdDef: busy_o
                HdlOp: PARAMETRIZATION
                    list: ops
                        HdlValueId: logic
                HdlDirection: OUT
        list: objs
    list: objs
        HdlIdDef: CS
            HdlExprNotImplemented: type
            HdlDirection: INTERNAL
        HdlIdDef: NS
            HdlExprNotImplemented: type
            HdlDirection: INTERNAL
        HdlIdDef: current_address
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: logic
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 31
                            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlIdDef: pointer_cs
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: logic
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 1
                            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlIdDef: pointer_ns
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: logic
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 1
                            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlIdDef: update_current_address
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: logic
            HdlDirection: INTERNAL
        HdlIdDef: L0_buffer
            HdlOp: INDEX
                list: ops
                    HdlOp: PARAMETRIZATION
                        list: ops
                            HdlValueId: logic
                            HdlOp: DOWNTO
                                list: ops
                                    HdlValueInt: 3
                                    HdlValueInt: 0
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 31
                            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlIdDef: valid_L0_buffer
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: logic
            HdlDirection: INTERNAL
        HdlIdDef: previous_chunk
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: logic
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 15
                            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlIdDef: valid_previous_chunk
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: logic
            HdlDirection: INTERNAL
        HdlIdDef: clear_buffer
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: logic
            HdlDirection: INTERNAL
        HdlStmAssign
            HdlOp: NE
                list: ops
                    HdlValueId: CS
                    HdlValueId: EMPTY
            HdlValueId: busy_o
        HdlStmProcess
            list: sensitivity
                HdlOp: RISING
                    list: ops
                        HdlValueId: clk
                HdlOp: FALLING
                    list: ops
                        HdlValueId: rst_n
            HdlStmBlock: SEQ
                list: body
                    HdlStmIf
                        HdlOp: NEG
                            list: ops
                                HdlValueId: rst_n
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmAssign
                                    HdlValueId: EMPTY
                                    HdlValueId: CS
                                HdlStmAssign
                                    HdlValueInt: 0
                                    HdlValueId: current_address
                                HdlStmAssign
                                    HdlValueInt: 0
                                    HdlValueId: pointer_cs
                        list: elifs
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmAssign
                                    HdlValueId: NS
                                    HdlValueId: CS
                                HdlStmIf
                                    HdlValueId: branch_i
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmAssign
                                                HdlOp: CONCAT
                                                    list: ops
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlValueId: addr_i
                                                                HdlOp: DOWNTO
                                                                    list: ops
                                                                        HdlValueInt: 31
                                                                        HdlValueInt: 4
                                                        HdlValueInt: 0000
                                                HdlValueId: current_address
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: addr_i
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 3
                                                                HdlValueInt: 2
                                                HdlValueId: pointer_cs
                                    list: elifs
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmIf
                                                HdlValueId: update_current_address
                                                HdlStmAssign: if_true
                                                    HdlOp: ADD
                                                        list: ops
                                                            HdlValueId: current_address
                                                            HdlValueInt: 10
                                                    HdlValueId: current_address
                                                list: elifs
                                            HdlStmAssign
                                                HdlValueId: pointer_ns
                                                HdlValueId: pointer_cs
            HdlStmProcessTriggerConstrain: FF
        HdlStmProcess
            HdlStmBlock: SEQ
                list: body
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: valid_o
                            HdlValueInt: 0
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: addr_o
                            HdlOp: ADD
                                list: ops
                                    HdlValueId: current_address
                                    HdlOp: SLL
                                        list: ops
                                            HdlValueId: pointer_cs
                                            HdlValueInt: 2
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: pointer_ns
                            HdlValueId: pointer_cs
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: instr_req_o
                            HdlValueInt: 0
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: instr_addr_o
                            HdlOp: TERNARY
                                list: ops
                                    HdlValueId: branch_i
                                    HdlValueId: addr_i
                                    HdlOp: ADD
                                        list: ops
                                            HdlValueId: current_address
                                            HdlValueInt: 10
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: update_current_address
                            HdlValueInt: 0
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: rdata_o
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: instr_rdata_i
                                    HdlValueId: pointer_cs
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: clear_buffer
                            HdlValueInt: 0
                    HdlStmCase: {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops':}]} 
                        HdlStmCaseType: CASE
                        HdlOp: INDEX
                            list: ops
                                HdlValueId: addr_o
                                HdlOp: DOWNTO
                                    list: ops
                                        HdlValueInt: 3
                                        HdlValueInt: 2
                        list: cases
                            tuple
                                HdlValueInt: 00
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: unaligned_rdata_o
                                                HdlOp: CONCAT
                                                    list: ops
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlOp: INDEX
                                                                    list: ops
                                                                        HdlValueId: L0_buffer
                                                                        HdlValueInt: 0
                                                                HdlOp: DOWNTO
                                                                    list: ops
                                                                        HdlValueInt: 15
                                                                        HdlValueInt: 0
                                                        HdlValueId: previous_chunk
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: unaligned_valid_o
                                                HdlValueId: valid_previous_chunk
                            tuple
                                HdlValueInt: 01
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: unaligned_rdata_o
                                                HdlOp: CONCAT
                                                    list: ops
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlOp: INDEX
                                                                    list: ops
                                                                        HdlValueId: L0_buffer
                                                                        HdlValueInt: 1
                                                                HdlOp: DOWNTO
                                                                    list: ops
                                                                        HdlValueInt: 15
                                                                        HdlValueInt: 0
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlOp: INDEX
                                                                    list: ops
                                                                        HdlValueId: L0_buffer
                                                                        HdlValueInt: 0
                                                                HdlOp: DOWNTO
                                                                    list: ops
                                                                        HdlValueInt: 31
                                                                        HdlValueInt: 16
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: unaligned_valid_o
                                                HdlValueId: valid_o
                            tuple
                                HdlValueInt: 10
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: unaligned_rdata_o
                                                HdlOp: CONCAT
                                                    list: ops
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlOp: INDEX
                                                                    list: ops
                                                                        HdlValueId: L0_buffer
                                                                        HdlValueInt: 2
                                                                HdlOp: DOWNTO
                                                                    list: ops
                                                                        HdlValueInt: 15
                                                                        HdlValueInt: 0
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlOp: INDEX
                                                                    list: ops
                                                                        HdlValueId: L0_buffer
                                                                        HdlValueInt: 1
                                                                HdlOp: DOWNTO
                                                                    list: ops
                                                                        HdlValueInt: 31
                                                                        HdlValueInt: 16
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: unaligned_valid_o
                                                HdlValueId: valid_o
                            tuple
                                HdlValueInt: 11
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: unaligned_rdata_o
                                                HdlOp: CONCAT
                                                    list: ops
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlOp: INDEX
                                                                    list: ops
                                                                        HdlValueId: L0_buffer
                                                                        HdlValueInt: 3
                                                                HdlOp: DOWNTO
                                                                    list: ops
                                                                        HdlValueInt: 15
                                                                        HdlValueInt: 0
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlOp: INDEX
                                                                    list: ops
                                                                        HdlValueId: L0_buffer
                                                                        HdlValueInt: 2
                                                                HdlOp: DOWNTO
                                                                    list: ops
                                                                        HdlValueInt: 31
                                                                        HdlValueInt: 16
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: unaligned_valid_o
                                                HdlValueId: valid_o
                    HdlStmCase: CS
                        HdlStmCaseType: CASE
                        HdlValueId: CS
                        list: cases
                            tuple
                                HdlValueId: EMPTY
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: instr_req_o
                                                HdlValueId: branch_i
                                        HdlStmIf
                                            HdlValueId: branch_i
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlStmIf
                                                        HdlValueId: instr_gnt_i
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: NS
                                                                HdlValueId: WAIT_RVALID
                                                        list: elifs
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: NS
                                                                HdlValueId: WAIT_GNT
                                            list: elifs
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: NS
                                                            HdlValueId: EMPTY
                            tuple
                                HdlValueId: WAIT_RVALID
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlStmIf
                                            HdlValueId: branch_i
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlStmIf
                                                        HdlValueId: instr_rvalid_i
                                                        HdlStmBlock: SEQ
                                                            list: body
                                                                HdlOp: ASSIGN
                                                                    list: ops
                                                                        HdlValueId: instr_req_o
                                                                        HdlValueInt: 1
                                                                HdlOp: ASSIGN
                                                                    list: ops
                                                                        HdlValueId: instr_addr_o
                                                                        HdlOp: CONCAT
                                                                            list: ops
                                                                                HdlOp: INDEX
                                                                                    list: ops
                                                                                        HdlValueId: addr_i
                                                                                        HdlOp: DOWNTO
                                                                                            list: ops
                                                                                                HdlValueInt: 31
                                                                                                HdlValueInt: 4
                                                                                HdlValueInt: 0000
                                                                HdlStmIf
                                                                    HdlValueId: instr_gnt_i
                                                                    HdlOp: ASSIGN
                                                                        list: ops
                                                                            HdlValueId: NS
                                                                            HdlValueId: WAIT_RVALID
                                                                    list: elifs
                                                                    HdlOp: ASSIGN
                                                                        list: ops
                                                                            HdlValueId: NS
                                                                            HdlValueId: WAIT_GNT
                                                        list: elifs
                                                        HdlStmBlock: SEQ
                                                            list: body
                                                                HdlOp: ASSIGN
                                                                    list: ops
                                                                        HdlValueId: NS
                                                                        HdlValueId: WAIT_ABORTED
                                            list: elifs
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: valid_o
                                                            HdlValueId: instr_rvalid_i
                                                    HdlStmCase: pointer_cs
                                                        HdlStmCaseType: CASE
                                                        HdlValueId: pointer_cs
                                                        list: cases
                                                            tuple
                                                                HdlValueInt: 00
                                                                HdlStmBlock: SEQ
                                                                    list: body
                                                                        HdlOp: ASSIGN
                                                                            list: ops
                                                                                HdlValueId: unaligned_rdata_o
                                                                                HdlOp: CONCAT
                                                                                    list: ops
                                                                                        HdlOp: INDEX
                                                                                            list: ops
                                                                                                HdlOp: INDEX
                                                                                                    list: ops
                                                                                                        HdlValueId: instr_rdata_i
                                                                                                        HdlValueInt: 0
                                                                                                HdlOp: DOWNTO
                                                                                                    list: ops
                                                                                                        HdlValueInt: 15
                                                                                                        HdlValueInt: 0
                                                                                        HdlOp: INDEX
                                                                                            list: ops
                                                                                                HdlOp: INDEX
                                                                                                    list: ops
                                                                                                        HdlValueId: L0_buffer
                                                                                                        HdlValueInt: 3
                                                                                                HdlOp: DOWNTO
                                                                                                    list: ops
                                                                                                        HdlValueInt: 31
                                                                                                        HdlValueInt: 16
                                                                        HdlStmIf
                                                                            HdlValueId: valid_L0_buffer
                                                                            HdlOp: ASSIGN
                                                                                list: ops
                                                                                    HdlValueId: unaligned_valid_o
                                                                                    HdlValueId: instr_rvalid_i
                                                                            list: elifs
                                                                            HdlOp: ASSIGN
                                                                                list: ops
                                                                                    HdlValueId: unaligned_valid_o
                                                                                    HdlValueInt: 0
                                                            tuple
                                                                HdlValueInt: 01
                                                                HdlStmBlock: SEQ
                                                                    list: body
                                                                        HdlOp: ASSIGN
                                                                            list: ops
                                                                                HdlValueId: unaligned_rdata_o
                                                                                HdlOp: CONCAT
                                                                                    list: ops
                                                                                        HdlOp: INDEX
                                                                                            list: ops
                                                                                                HdlOp: INDEX
                                                                                                    list: ops
                                                                                                        HdlValueId: instr_rdata_i
                                                                                                        HdlValueInt: 1
                                                                                                HdlOp: DOWNTO
                                                                                                    list: ops
                                                                                                        HdlValueInt: 15
                                                                                                        HdlValueInt: 0
                                                                                        HdlOp: INDEX
                                                                                            list: ops
                                                                                                HdlOp: INDEX
                                                                                                    list: ops
                                                                                                        HdlValueId: instr_rdata_i
                                                                                                        HdlValueInt: 0
                                                                                                HdlOp: DOWNTO
                                                                                                    list: ops
                                                                                                        HdlValueInt: 31
                                                                                                        HdlValueInt: 16
                                                                        HdlOp: ASSIGN
                                                                            list: ops
                                                                                HdlValueId: unaligned_valid_o
                                                                                HdlValueId: instr_rvalid_i
                                                            tuple
                                                                HdlValueInt: 10
                                                                HdlStmBlock: SEQ
                                                                    list: body
                                                                        HdlOp: ASSIGN
                                                                            list: ops
                                                                                HdlValueId: unaligned_rdata_o
                                                                                HdlOp: CONCAT
                                                                                    list: ops
                                                                                        HdlOp: INDEX
                                                                                            list: ops
                                                                                                HdlOp: INDEX
                                                                                                    list: ops
                                                                                                        HdlValueId: instr_rdata_i
                                                                                                        HdlValueInt: 2
                                                                                                HdlOp: DOWNTO
                                                                                                    list: ops
                                                                                                        HdlValueInt: 15
                                                                                                        HdlValueInt: 0
                                                                                        HdlOp: INDEX
                                                                                            list: ops
                                                                                                HdlOp: INDEX
                                                                                                    list: ops
                                                                                                        HdlValueId: instr_rdata_i
                                                                                                        HdlValueInt: 1
                                                                                                HdlOp: DOWNTO
                                                                                                    list: ops
                                                                                                        HdlValueInt: 31
                                                                                                        HdlValueInt: 16
                                                                        HdlOp: ASSIGN
                                                                            list: ops
                                                                                HdlValueId: unaligned_valid_o
                                                                                HdlValueId: instr_rvalid_i
                                                            tuple
                                                                HdlValueInt: 11
                                                                HdlStmBlock: SEQ
                                                                    list: body
                                                                        HdlOp: ASSIGN
                                                                            list: ops
                                                                                HdlValueId: unaligned_rdata_o
                                                                                HdlOp: CONCAT
                                                                                    list: ops
                                                                                        HdlOp: INDEX
                                                                                            list: ops
                                                                                                HdlOp: INDEX
                                                                                                    list: ops
                                                                                                        HdlValueId: instr_rdata_i
                                                                                                        HdlValueInt: 3
                                                                                                HdlOp: DOWNTO
                                                                                                    list: ops
                                                                                                        HdlValueInt: 15
                                                                                                        HdlValueInt: 0
                                                                                        HdlOp: INDEX
                                                                                            list: ops
                                                                                                HdlOp: INDEX
                                                                                                    list: ops
                                                                                                        HdlValueId: instr_rdata_i
                                                                                                        HdlValueInt: 2
                                                                                                HdlOp: DOWNTO
                                                                                                    list: ops
                                                                                                        HdlValueInt: 31
                                                                                                        HdlValueInt: 16
                                                                        HdlOp: ASSIGN
                                                                            list: ops
                                                                                HdlValueId: unaligned_valid_o
                                                                                HdlValueId: instr_rvalid_i
                                                    HdlStmIf
                                                        HdlValueId: instr_rvalid_i
                                                        HdlStmBlock: SEQ
                                                            list: body
                                                                HdlStmIf
                                                                    HdlOp: AND_UNARY
                                                                        list: ops
                                                                            HdlValueId: pointer_cs
                                                                    HdlStmBlock: SEQ
                                                                        list: body
                                                                            HdlStmIf
                                                                                HdlValueId: ready_i
                                                                                HdlStmBlock: SEQ
                                                                                    list: body
                                                                                        HdlOp: ASSIGN
                                                                                            list: ops
                                                                                                HdlValueId: instr_req_o
                                                                                                HdlValueInt: 1
                                                                                        HdlOp: ASSIGN
                                                                                            list: ops
                                                                                                HdlValueId: instr_addr_o
                                                                                                HdlOp: ADD
                                                                                                    list: ops
                                                                                                        HdlValueId: current_address
                                                                                                        HdlValueInt: 10
                                                                                        HdlOp: ASSIGN
                                                                                            list: ops
                                                                                                HdlValueId: pointer_ns
                                                                                                HdlValueInt: 0
                                                                                        HdlOp: ASSIGN
                                                                                            list: ops
                                                                                                HdlValueId: update_current_address
                                                                                                HdlValueInt: 1
                                                                                        HdlStmIf
                                                                                            HdlValueId: instr_gnt_i
                                                                                            HdlOp: ASSIGN
                                                                                                list: ops
                                                                                                    HdlValueId: NS
                                                                                                    HdlValueId: WAIT_RVALID
                                                                                            list: elifs
                                                                                            HdlOp: ASSIGN
                                                                                                list: ops
                                                                                                    HdlValueId: NS
                                                                                                    HdlValueId: WAIT_GNT
                                                                                list: elifs
                                                                                HdlStmBlock: SEQ
                                                                                    list: body
                                                                                        HdlOp: ASSIGN
                                                                                            list: ops
                                                                                                HdlValueId: NS
                                                                                                HdlValueId: VALID_L0
                                                                    list: elifs
                                                                    HdlStmBlock: SEQ
                                                                        list: body
                                                                            HdlOp: ASSIGN
                                                                                list: ops
                                                                                    HdlValueId: NS
                                                                                    HdlValueId: VALID_L0
                                                                            HdlStmIf
                                                                                HdlValueId: ready_i
                                                                                HdlOp: ASSIGN
                                                                                    list: ops
                                                                                        HdlValueId: pointer_ns
                                                                                        HdlOp: ADD
                                                                                            list: ops
                                                                                                HdlValueId: pointer_cs
                                                                                                HdlValueInt: 1
                                                                                list: elifs
                                                                                HdlOp: ASSIGN
                                                                                    list: ops
                                                                                        HdlValueId: pointer_ns
                                                                                        HdlValueId: pointer_cs
                                                        list: elifs
                                                        HdlStmBlock: SEQ
                                                            list: body
                                                                HdlOp: ASSIGN
                                                                    list: ops
                                                                        HdlValueId: NS
                                                                        HdlValueId: WAIT_RVALID
                            tuple
                                HdlValueId: VALID_L0
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: valid_o
                                                HdlValueInt: 1
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: rdata_o
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: L0_buffer
                                                        HdlValueId: pointer_cs
                                        HdlStmCase: pointer_cs
                                            HdlStmCaseType: CASE
                                            HdlValueId: pointer_cs
                                            list: cases
                                                tuple
                                                    HdlValueInt: 00
                                                    HdlStmBlock: SEQ
                                                        list: body
                                                            HdlOp: ASSIGN
                                                                list: ops
                                                                    HdlValueId: unaligned_rdata_o
                                                                    HdlOp: CONCAT
                                                                        list: ops
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlOp: INDEX
                                                                                        list: ops
                                                                                            HdlValueId: L0_buffer
                                                                                            HdlValueInt: 0
                                                                                    HdlOp: DOWNTO
                                                                                        list: ops
                                                                                            HdlValueInt: 15
                                                                                            HdlValueInt: 0
                                                                            HdlValueId: previous_chunk
                                                            HdlOp: ASSIGN
                                                                list: ops
                                                                    HdlValueId: unaligned_valid_o
                                                                    HdlValueId: valid_previous_chunk
                                                tuple
                                                    HdlValueInt: 01
                                                    HdlStmBlock: SEQ
                                                        list: body
                                                            HdlOp: ASSIGN
                                                                list: ops
                                                                    HdlValueId: unaligned_rdata_o
                                                                    HdlOp: CONCAT
                                                                        list: ops
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlOp: INDEX
                                                                                        list: ops
                                                                                            HdlValueId: L0_buffer
                                                                                            HdlValueInt: 1
                                                                                    HdlOp: DOWNTO
                                                                                        list: ops
                                                                                            HdlValueInt: 15
                                                                                            HdlValueInt: 0
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlOp: INDEX
                                                                                        list: ops
                                                                                            HdlValueId: L0_buffer
                                                                                            HdlValueInt: 0
                                                                                    HdlOp: DOWNTO
                                                                                        list: ops
                                                                                            HdlValueInt: 31
                                                                                            HdlValueInt: 16
                                                            HdlOp: ASSIGN
                                                                list: ops
                                                                    HdlValueId: unaligned_valid_o
                                                                    HdlValueInt: 1
                                                tuple
                                                    HdlValueInt: 10
                                                    HdlStmBlock: SEQ
                                                        list: body
                                                            HdlOp: ASSIGN
                                                                list: ops
                                                                    HdlValueId: unaligned_rdata_o
                                                                    HdlOp: CONCAT
                                                                        list: ops
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlOp: INDEX
                                                                                        list: ops
                                                                                            HdlValueId: L0_buffer
                                                                                            HdlValueInt: 2
                                                                                    HdlOp: DOWNTO
                                                                                        list: ops
                                                                                            HdlValueInt: 15
                                                                                            HdlValueInt: 0
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlOp: INDEX
                                                                                        list: ops
                                                                                            HdlValueId: L0_buffer
                                                                                            HdlValueInt: 1
                                                                                    HdlOp: DOWNTO
                                                                                        list: ops
                                                                                            HdlValueInt: 31
                                                                                            HdlValueInt: 16
                                                            HdlOp: ASSIGN
                                                                list: ops
                                                                    HdlValueId: unaligned_valid_o
                                                                    HdlValueInt: 1
                                                tuple
                                                    HdlValueInt: 11
                                                    HdlStmBlock: SEQ
                                                        list: body
                                                            HdlOp: ASSIGN
                                                                list: ops
                                                                    HdlValueId: unaligned_rdata_o
                                                                    HdlOp: CONCAT
                                                                        list: ops
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlOp: INDEX
                                                                                        list: ops
                                                                                            HdlValueId: L0_buffer
                                                                                            HdlValueInt: 3
                                                                                    HdlOp: DOWNTO
                                                                                        list: ops
                                                                                            HdlValueInt: 15
                                                                                            HdlValueInt: 0
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlOp: INDEX
                                                                                        list: ops
                                                                                            HdlValueId: L0_buffer
                                                                                            HdlValueInt: 2
                                                                                    HdlOp: DOWNTO
                                                                                        list: ops
                                                                                            HdlValueInt: 31
                                                                                            HdlValueInt: 16
                                                            HdlOp: ASSIGN
                                                                list: ops
                                                                    HdlValueId: unaligned_valid_o
                                                                    HdlValueInt: 1
                                        HdlStmIf
                                            HdlValueId: branch_i
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: instr_req_o
                                                            HdlValueInt: 1
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: instr_addr_o
                                                            HdlOp: CONCAT
                                                                list: ops
                                                                    HdlOp: INDEX
                                                                        list: ops
                                                                            HdlValueId: addr_i
                                                                            HdlOp: DOWNTO
                                                                                list: ops
                                                                                    HdlValueInt: 31
                                                                                    HdlValueInt: 4
                                                                    HdlValueInt: 0000
                                                    HdlStmIf
                                                        HdlValueId: instr_gnt_i
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: NS
                                                                HdlValueId: WAIT_RVALID
                                                        list: elifs
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: NS
                                                                HdlValueId: WAIT_GNT
                                            list: elifs
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlStmIf
                                                        HdlValueId: ready_i
                                                        HdlStmBlock: SEQ
                                                            list: body
                                                                HdlStmIf
                                                                    HdlOp: AND_UNARY
                                                                        list: ops
                                                                            HdlValueId: pointer_cs
                                                                    HdlStmBlock: SEQ
                                                                        list: body
                                                                            HdlOp: ASSIGN
                                                                                list: ops
                                                                                    HdlValueId: instr_req_o
                                                                                    HdlValueInt: 1
                                                                            HdlOp: ASSIGN
                                                                                list: ops
                                                                                    HdlValueId: instr_addr_o
                                                                                    HdlOp: ADD
                                                                                        list: ops
                                                                                            HdlValueId: current_address
                                                                                            HdlValueInt: 10
                                                                            HdlOp: ASSIGN
                                                                                list: ops
                                                                                    HdlValueId: update_current_address
                                                                                    HdlValueInt: 1
                                                                            HdlOp: ASSIGN
                                                                                list: ops
                                                                                    HdlValueId: pointer_ns
                                                                                    HdlValueInt: 0
                                                                            HdlStmIf
                                                                                HdlValueId: instr_gnt_i
                                                                                HdlOp: ASSIGN
                                                                                    list: ops
                                                                                        HdlValueId: NS
                                                                                        HdlValueId: WAIT_RVALID
                                                                                list: elifs
                                                                                HdlOp: ASSIGN
                                                                                    list: ops
                                                                                        HdlValueId: NS
                                                                                        HdlValueId: WAIT_GNT
                                                                    list: elifs
                                                                    HdlStmBlock: SEQ
                                                                        list: body
                                                                            HdlOp: ASSIGN
                                                                                list: ops
                                                                                    HdlValueId: pointer_ns
                                                                                    HdlOp: ADD
                                                                                        list: ops
                                                                                            HdlValueId: pointer_cs
                                                                                            HdlValueInt: 1
                                                                            HdlOp: ASSIGN
                                                                                list: ops
                                                                                    HdlValueId: NS
                                                                                    HdlValueId: VALID_L0
                                                        list: elifs
                                                        HdlStmBlock: SEQ
                                                            list: body
                                                                HdlOp: ASSIGN
                                                                    list: ops
                                                                        HdlValueId: NS
                                                                        HdlValueId: VALID_L0
                            tuple
                                HdlValueId: WAIT_GNT
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlStmIf
                                            HdlValueId: branch_i
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: instr_req_o
                                                            HdlValueInt: 1
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: instr_addr_o
                                                            HdlOp: CONCAT
                                                                list: ops
                                                                    HdlOp: INDEX
                                                                        list: ops
                                                                            HdlValueId: addr_i
                                                                            HdlOp: DOWNTO
                                                                                list: ops
                                                                                    HdlValueInt: 31
                                                                                    HdlValueInt: 4
                                                                    HdlValueInt: 0000
                                                    HdlStmIf
                                                        HdlValueId: instr_gnt_i
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: NS
                                                                HdlValueId: WAIT_RVALID
                                                        list: elifs
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: NS
                                                                HdlValueId: WAIT_GNT
                                            list: elifs
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: instr_req_o
                                                            HdlValueInt: 1
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: instr_addr_o
                                                            HdlValueId: current_address
                                                    HdlStmIf
                                                        HdlValueId: instr_gnt_i
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: NS
                                                                HdlValueId: WAIT_RVALID
                                                        list: elifs
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: NS
                                                                HdlValueId: WAIT_GNT
                            tuple
                                HdlValueId: WAIT_ABORTED
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: clear_buffer
                                                HdlValueInt: 1
                                        HdlStmIf
                                            HdlValueId: instr_rvalid_i
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: instr_req_o
                                                            HdlValueInt: 1
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: instr_addr_o
                                                            HdlValueId: current_address
                                                    HdlStmIf
                                                        HdlValueId: instr_gnt_i
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: NS
                                                                HdlValueId: WAIT_RVALID
                                                        list: elifs
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: NS
                                                                HdlValueId: WAIT_GNT
                                            list: elifs
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: NS
                                                            HdlValueId: WAIT_ABORTED
                        HdlStmBlock: SEQ
                            list: body
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: NS
                                        HdlValueId: EMPTY
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: clear_buffer
                                        HdlValueInt: 1
            HdlStmProcessTriggerConstrain: COMB
        HdlStmProcess
            list: sensitivity
                HdlOp: RISING
                    list: ops
                        HdlValueId: clk
                HdlOp: FALLING
                    list: ops
                        HdlValueId: rst_n
            HdlStmBlock: SEQ
                list: body
                    HdlStmIf
                        HdlOp: EQ
                            list: ops
                                HdlValueId: rst_n
                                HdlValueInt: 0
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmAssign
                                    HdlValueInt: 0
                                    HdlValueId: valid_L0_buffer
                                HdlStmAssign
                                    HdlValueInt: 0
                                    HdlValueId: L0_buffer
                                HdlStmAssign
                                    HdlValueInt: 0
                                    HdlValueId: previous_chunk
                                HdlStmAssign
                                    HdlValueInt: 0
                                    HdlValueId: valid_previous_chunk
                        list: elifs
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmIf
                                    HdlOp: OR_LOG
                                        list: ops
                                            HdlValueId: branch_i
                                            HdlValueId: clear_buffer
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmAssign
                                                HdlValueInt: 0
                                                HdlValueId: valid_L0_buffer
                                            HdlStmAssign
                                                HdlValueInt: 0
                                                HdlValueId: valid_previous_chunk
                                    list: elifs
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmIf
                                                HdlValueId: instr_rvalid_i
                                                HdlStmBlock: SEQ
                                                    list: body
                                                        HdlStmAssign
                                                            HdlValueId: instr_rdata_i
                                                            HdlValueId: L0_buffer
                                                        HdlStmAssign
                                                            HdlValueInt: 1
                                                            HdlValueId: valid_L0_buffer
                                                        HdlStmIf
                                                            HdlValueId: valid_L0_buffer
                                                            HdlStmBlock: SEQ
                                                                list: body
                                                                    HdlStmAssign
                                                                        HdlValueInt: 1
                                                                        HdlValueId: valid_previous_chunk
                                                                    HdlStmAssign
                                                                        HdlOp: INDEX
                                                                            list: ops
                                                                                HdlOp: INDEX
                                                                                    list: ops
                                                                                        HdlValueId: L0_buffer
                                                                                        HdlValueInt: 3
                                                                                HdlOp: DOWNTO
                                                                                    list: ops
                                                                                        HdlValueInt: 31
                                                                                        HdlValueInt: 16
                                                                        HdlValueId: previous_chunk
                                                            list: elifs
                                                list: elifs
            HdlStmProcessTriggerConstrain: FF

UPD HdlStmCase@@CS to CS
    UPD list@@cases to objs
    MOV list@@cases to CS
    list: cases
        tuple
            HdlValueId: EMPTY
            HdlStmBlock: SEQ
                list: body
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: instr_req_o
                            HdlValueId: branch_i
                    HdlStmIf
                        HdlValueId: branch_i
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmIf
                                    HdlValueId: instr_gnt_i
                                    HdlOp: ASSIGN
                                        list: ops
                                            HdlValueId: NS
                                            HdlValueId: WAIT_RVALID
                                    list: elifs
                                    HdlOp: ASSIGN
                                        list: ops
                                            HdlValueId: NS
                                            HdlValueId: WAIT_GNT
                        list: elifs
                        HdlStmBlock: SEQ
                            list: body
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: NS
                                        HdlValueId: EMPTY
        tuple
            HdlValueId: WAIT_RVALID
            HdlStmBlock: SEQ
                list: body
                    HdlStmIf
                        HdlValueId: branch_i
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmIf
                                    HdlValueId: instr_rvalid_i
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlOp: ASSIGN
                                                list: ops
                                                    HdlValueId: instr_req_o
                                                    HdlValueInt: 1
                                            HdlOp: ASSIGN
                                                list: ops
                                                    HdlValueId: instr_addr_o
                                                    HdlOp: CONCAT
                                                        list: ops
                                                            HdlOp: INDEX
                                                                list: ops
                                                                    HdlValueId: addr_i
                                                                    HdlOp: DOWNTO
                                                                        list: ops
                                                                            HdlValueInt: 31
                                                                            HdlValueInt: 4
                                                            HdlValueInt: 0000
                                            HdlStmIf
                                                HdlValueId: instr_gnt_i
                                                HdlOp: ASSIGN
                                                    list: ops
                                                        HdlValueId: NS
                                                        HdlValueId: WAIT_RVALID
                                                list: elifs
                                                HdlOp: ASSIGN
                                                    list: ops
                                                        HdlValueId: NS
                                                        HdlValueId: WAIT_GNT
                                    list: elifs
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlOp: ASSIGN
                                                list: ops
                                                    HdlValueId: NS
                                                    HdlValueId: WAIT_ABORTED
                        list: elifs
                        HdlStmBlock: SEQ
                            list: body
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: valid_o
                                        HdlValueId: instr_rvalid_i
                                HdlStmCase: pointer_cs
                                    HdlStmCaseType: CASE
                                    HdlValueId: pointer_cs
                                    list: cases
                                        tuple
                                            HdlValueInt: 00
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: unaligned_rdata_o
                                                            HdlOp: CONCAT
                                                                list: ops
                                                                    HdlOp: INDEX
                                                                        list: ops
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlValueId: instr_rdata_i
                                                                                    HdlValueInt: 0
                                                                            HdlOp: DOWNTO
                                                                                list: ops
                                                                                    HdlValueInt: 15
                                                                                    HdlValueInt: 0
                                                                    HdlOp: INDEX
                                                                        list: ops
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlValueId: L0_buffer
                                                                                    HdlValueInt: 3
                                                                            HdlOp: DOWNTO
                                                                                list: ops
                                                                                    HdlValueInt: 31
                                                                                    HdlValueInt: 16
                                                    HdlStmIf
                                                        HdlValueId: valid_L0_buffer
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: unaligned_valid_o
                                                                HdlValueId: instr_rvalid_i
                                                        list: elifs
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: unaligned_valid_o
                                                                HdlValueInt: 0
                                        tuple
                                            HdlValueInt: 01
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: unaligned_rdata_o
                                                            HdlOp: CONCAT
                                                                list: ops
                                                                    HdlOp: INDEX
                                                                        list: ops
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlValueId: instr_rdata_i
                                                                                    HdlValueInt: 1
                                                                            HdlOp: DOWNTO
                                                                                list: ops
                                                                                    HdlValueInt: 15
                                                                                    HdlValueInt: 0
                                                                    HdlOp: INDEX
                                                                        list: ops
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlValueId: instr_rdata_i
                                                                                    HdlValueInt: 0
                                                                            HdlOp: DOWNTO
                                                                                list: ops
                                                                                    HdlValueInt: 31
                                                                                    HdlValueInt: 16
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: unaligned_valid_o
                                                            HdlValueId: instr_rvalid_i
                                        tuple
                                            HdlValueInt: 10
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: unaligned_rdata_o
                                                            HdlOp: CONCAT
                                                                list: ops
                                                                    HdlOp: INDEX
                                                                        list: ops
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlValueId: instr_rdata_i
                                                                                    HdlValueInt: 2
                                                                            HdlOp: DOWNTO
                                                                                list: ops
                                                                                    HdlValueInt: 15
                                                                                    HdlValueInt: 0
                                                                    HdlOp: INDEX
                                                                        list: ops
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlValueId: instr_rdata_i
                                                                                    HdlValueInt: 1
                                                                            HdlOp: DOWNTO
                                                                                list: ops
                                                                                    HdlValueInt: 31
                                                                                    HdlValueInt: 16
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: unaligned_valid_o
                                                            HdlValueId: instr_rvalid_i
                                        tuple
                                            HdlValueInt: 11
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: unaligned_rdata_o
                                                            HdlOp: CONCAT
                                                                list: ops
                                                                    HdlOp: INDEX
                                                                        list: ops
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlValueId: instr_rdata_i
                                                                                    HdlValueInt: 3
                                                                            HdlOp: DOWNTO
                                                                                list: ops
                                                                                    HdlValueInt: 15
                                                                                    HdlValueInt: 0
                                                                    HdlOp: INDEX
                                                                        list: ops
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlValueId: instr_rdata_i
                                                                                    HdlValueInt: 2
                                                                            HdlOp: DOWNTO
                                                                                list: ops
                                                                                    HdlValueInt: 31
                                                                                    HdlValueInt: 16
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: unaligned_valid_o
                                                            HdlValueId: instr_rvalid_i
                                HdlStmIf
                                    HdlValueId: instr_rvalid_i
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmIf
                                                HdlOp: AND_UNARY
                                                    list: ops
                                                        HdlValueId: pointer_cs
                                                HdlStmBlock: SEQ
                                                    list: body
                                                        HdlStmIf
                                                            HdlValueId: ready_i
                                                            HdlStmBlock: SEQ
                                                                list: body
                                                                    HdlOp: ASSIGN
                                                                        list: ops
                                                                            HdlValueId: instr_req_o
                                                                            HdlValueInt: 1
                                                                    HdlOp: ASSIGN
                                                                        list: ops
                                                                            HdlValueId: instr_addr_o
                                                                            HdlOp: ADD
                                                                                list: ops
                                                                                    HdlValueId: current_address
                                                                                    HdlValueInt: 10
                                                                    HdlOp: ASSIGN
                                                                        list: ops
                                                                            HdlValueId: pointer_ns
                                                                            HdlValueInt: 0
                                                                    HdlOp: ASSIGN
                                                                        list: ops
                                                                            HdlValueId: update_current_address
                                                                            HdlValueInt: 1
                                                                    HdlStmIf
                                                                        HdlValueId: instr_gnt_i
                                                                        HdlOp: ASSIGN
                                                                            list: ops
                                                                                HdlValueId: NS
                                                                                HdlValueId: WAIT_RVALID
                                                                        list: elifs
                                                                        HdlOp: ASSIGN
                                                                            list: ops
                                                                                HdlValueId: NS
                                                                                HdlValueId: WAIT_GNT
                                                            list: elifs
                                                            HdlStmBlock: SEQ
                                                                list: body
                                                                    HdlOp: ASSIGN
                                                                        list: ops
                                                                            HdlValueId: NS
                                                                            HdlValueId: VALID_L0
                                                list: elifs
                                                HdlStmBlock: SEQ
                                                    list: body
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: NS
                                                                HdlValueId: VALID_L0
                                                        HdlStmIf
                                                            HdlValueId: ready_i
                                                            HdlOp: ASSIGN
                                                                list: ops
                                                                    HdlValueId: pointer_ns
                                                                    HdlOp: ADD
                                                                        list: ops
                                                                            HdlValueId: pointer_cs
                                                                            HdlValueInt: 1
                                                            list: elifs
                                                            HdlOp: ASSIGN
                                                                list: ops
                                                                    HdlValueId: pointer_ns
                                                                    HdlValueId: pointer_cs
                                    list: elifs
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlOp: ASSIGN
                                                list: ops
                                                    HdlValueId: NS
                                                    HdlValueId: WAIT_RVALID
        tuple
            HdlValueId: VALID_L0
            HdlStmBlock: SEQ
                list: body
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: valid_o
                            HdlValueInt: 1
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: rdata_o
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: L0_buffer
                                    HdlValueId: pointer_cs
                    HdlStmCase: pointer_cs
                        HdlStmCaseType: CASE
                        HdlValueId: pointer_cs
                        list: cases
                            tuple
                                HdlValueInt: 00
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: unaligned_rdata_o
                                                HdlOp: CONCAT
                                                    list: ops
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlOp: INDEX
                                                                    list: ops
                                                                        HdlValueId: L0_buffer
                                                                        HdlValueInt: 0
                                                                HdlOp: DOWNTO
                                                                    list: ops
                                                                        HdlValueInt: 15
                                                                        HdlValueInt: 0
                                                        HdlValueId: previous_chunk
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: unaligned_valid_o
                                                HdlValueId: valid_previous_chunk
                            tuple
                                HdlValueInt: 01
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: unaligned_rdata_o
                                                HdlOp: CONCAT
                                                    list: ops
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlOp: INDEX
                                                                    list: ops
                                                                        HdlValueId: L0_buffer
                                                                        HdlValueInt: 1
                                                                HdlOp: DOWNTO
                                                                    list: ops
                                                                        HdlValueInt: 15
                                                                        HdlValueInt: 0
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlOp: INDEX
                                                                    list: ops
                                                                        HdlValueId: L0_buffer
                                                                        HdlValueInt: 0
                                                                HdlOp: DOWNTO
                                                                    list: ops
                                                                        HdlValueInt: 31
                                                                        HdlValueInt: 16
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: unaligned_valid_o
                                                HdlValueInt: 1
                            tuple
                                HdlValueInt: 10
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: unaligned_rdata_o
                                                HdlOp: CONCAT
                                                    list: ops
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlOp: INDEX
                                                                    list: ops
                                                                        HdlValueId: L0_buffer
                                                                        HdlValueInt: 2
                                                                HdlOp: DOWNTO
                                                                    list: ops
                                                                        HdlValueInt: 15
                                                                        HdlValueInt: 0
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlOp: INDEX
                                                                    list: ops
                                                                        HdlValueId: L0_buffer
                                                                        HdlValueInt: 1
                                                                HdlOp: DOWNTO
                                                                    list: ops
                                                                        HdlValueInt: 31
                                                                        HdlValueInt: 16
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: unaligned_valid_o
                                                HdlValueInt: 1
                            tuple
                                HdlValueInt: 11
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: unaligned_rdata_o
                                                HdlOp: CONCAT
                                                    list: ops
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlOp: INDEX
                                                                    list: ops
                                                                        HdlValueId: L0_buffer
                                                                        HdlValueInt: 3
                                                                HdlOp: DOWNTO
                                                                    list: ops
                                                                        HdlValueInt: 15
                                                                        HdlValueInt: 0
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlOp: INDEX
                                                                    list: ops
                                                                        HdlValueId: L0_buffer
                                                                        HdlValueInt: 2
                                                                HdlOp: DOWNTO
                                                                    list: ops
                                                                        HdlValueInt: 31
                                                                        HdlValueInt: 16
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: unaligned_valid_o
                                                HdlValueInt: 1
                    HdlStmIf
                        HdlValueId: branch_i
                        HdlStmBlock: SEQ
                            list: body
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: instr_req_o
                                        HdlValueInt: 1
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: instr_addr_o
                                        HdlOp: CONCAT
                                            list: ops
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: addr_i
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 31
                                                                HdlValueInt: 4
                                                HdlValueInt: 0000
                                HdlStmIf
                                    HdlValueId: instr_gnt_i
                                    HdlOp: ASSIGN
                                        list: ops
                                            HdlValueId: NS
                                            HdlValueId: WAIT_RVALID
                                    list: elifs
                                    HdlOp: ASSIGN
                                        list: ops
                                            HdlValueId: NS
                                            HdlValueId: WAIT_GNT
                        list: elifs
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmIf
                                    HdlValueId: ready_i
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmIf
                                                HdlOp: AND_UNARY
                                                    list: ops
                                                        HdlValueId: pointer_cs
                                                HdlStmBlock: SEQ
                                                    list: body
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: instr_req_o
                                                                HdlValueInt: 1
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: instr_addr_o
                                                                HdlOp: ADD
                                                                    list: ops
                                                                        HdlValueId: current_address
                                                                        HdlValueInt: 10
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: update_current_address
                                                                HdlValueInt: 1
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: pointer_ns
                                                                HdlValueInt: 0
                                                        HdlStmIf
                                                            HdlValueId: instr_gnt_i
                                                            HdlOp: ASSIGN
                                                                list: ops
                                                                    HdlValueId: NS
                                                                    HdlValueId: WAIT_RVALID
                                                            list: elifs
                                                            HdlOp: ASSIGN
                                                                list: ops
                                                                    HdlValueId: NS
                                                                    HdlValueId: WAIT_GNT
                                                list: elifs
                                                HdlStmBlock: SEQ
                                                    list: body
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: pointer_ns
                                                                HdlOp: ADD
                                                                    list: ops
                                                                        HdlValueId: pointer_cs
                                                                        HdlValueInt: 1
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: NS
                                                                HdlValueId: VALID_L0
                                    list: elifs
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlOp: ASSIGN
                                                list: ops
                                                    HdlValueId: NS
                                                    HdlValueId: VALID_L0
        tuple
            HdlValueId: WAIT_GNT
            HdlStmBlock: SEQ
                list: body
                    HdlStmIf
                        HdlValueId: branch_i
                        HdlStmBlock: SEQ
                            list: body
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: instr_req_o
                                        HdlValueInt: 1
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: instr_addr_o
                                        HdlOp: CONCAT
                                            list: ops
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: addr_i
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 31
                                                                HdlValueInt: 4
                                                HdlValueInt: 0000
                                HdlStmIf
                                    HdlValueId: instr_gnt_i
                                    HdlOp: ASSIGN
                                        list: ops
                                            HdlValueId: NS
                                            HdlValueId: WAIT_RVALID
                                    list: elifs
                                    HdlOp: ASSIGN
                                        list: ops
                                            HdlValueId: NS
                                            HdlValueId: WAIT_GNT
                        list: elifs
                        HdlStmBlock: SEQ
                            list: body
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: instr_req_o
                                        HdlValueInt: 1
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: instr_addr_o
                                        HdlValueId: current_address
                                HdlStmIf
                                    HdlValueId: instr_gnt_i
                                    HdlOp: ASSIGN
                                        list: ops
                                            HdlValueId: NS
                                            HdlValueId: WAIT_RVALID
                                    list: elifs
                                    HdlOp: ASSIGN
                                        list: ops
                                            HdlValueId: NS
                                            HdlValueId: WAIT_GNT
        tuple
            HdlValueId: WAIT_ABORTED
            HdlStmBlock: SEQ
                list: body
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: clear_buffer
                            HdlValueInt: 1
                    HdlStmIf
                        HdlValueId: instr_rvalid_i
                        HdlStmBlock: SEQ
                            list: body
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: instr_req_o
                                        HdlValueInt: 1
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: instr_addr_o
                                        HdlValueId: current_address
                                HdlStmIf
                                    HdlValueId: instr_gnt_i
                                    HdlOp: ASSIGN
                                        list: ops
                                            HdlValueId: NS
                                            HdlValueId: WAIT_RVALID
                                    list: elifs
                                    HdlOp: ASSIGN
                                        list: ops
                                            HdlValueId: NS
                                            HdlValueId: WAIT_GNT
                        list: elifs
                        HdlStmBlock: SEQ
                            list: body
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: NS
                                        HdlValueId: WAIT_ABORTED
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: valid_o
                    HdlValueInt: 1
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: rdata_o
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: L0_buffer
                            HdlValueId: pointer_cs
            HdlStmCase: pointer_cs
                HdlStmCaseType: CASE
                HdlValueId: pointer_cs
                list: cases
                    tuple
                        HdlValueInt: 00
                        HdlStmBlock: SEQ
                            list: body
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: unaligned_rdata_o
                                        HdlOp: CONCAT
                                            list: ops
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlValueId: L0_buffer
                                                                HdlValueInt: 0
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 15
                                                                HdlValueInt: 0
                                                HdlValueId: previous_chunk
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: unaligned_valid_o
                                        HdlValueId: valid_previous_chunk
                    tuple
                        HdlValueInt: 01
                        HdlStmBlock: SEQ
                            list: body
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: unaligned_rdata_o
                                        HdlOp: CONCAT
                                            list: ops
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlValueId: L0_buffer
                                                                HdlValueInt: 1
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 15
                                                                HdlValueInt: 0
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlValueId: L0_buffer
                                                                HdlValueInt: 0
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 31
                                                                HdlValueInt: 16
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: unaligned_valid_o
                                        HdlValueInt: 1
                    tuple
                        HdlValueInt: 10
                        HdlStmBlock: SEQ
                            list: body
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: unaligned_rdata_o
                                        HdlOp: CONCAT
                                            list: ops
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlValueId: L0_buffer
                                                                HdlValueInt: 2
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 15
                                                                HdlValueInt: 0
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlValueId: L0_buffer
                                                                HdlValueInt: 1
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 31
                                                                HdlValueInt: 16
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: unaligned_valid_o
                                        HdlValueInt: 1
                    tuple
                        HdlValueInt: 11
                        HdlStmBlock: SEQ
                            list: body
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: unaligned_rdata_o
                                        HdlOp: CONCAT
                                            list: ops
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlValueId: L0_buffer
                                                                HdlValueInt: 3
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 15
                                                                HdlValueInt: 0
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlValueId: L0_buffer
                                                                HdlValueInt: 2
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 31
                                                                HdlValueInt: 16
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: unaligned_valid_o
                                        HdlValueInt: 1
            HdlStmIf
                HdlValueId: branch_i
                HdlStmBlock: SEQ
                    list: body
                        HdlOp: ASSIGN
                            list: ops
                                HdlValueId: instr_req_o
                                HdlValueInt: 1
                        HdlOp: ASSIGN
                            list: ops
                                HdlValueId: instr_addr_o
                                HdlOp: CONCAT
                                    list: ops
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: addr_i
                                                HdlOp: DOWNTO
                                                    list: ops
                                                        HdlValueInt: 31
                                                        HdlValueInt: 4
                                        HdlValueInt: 0000
                        HdlStmIf
                            HdlValueId: instr_gnt_i
                            HdlOp: ASSIGN
                                list: ops
                                    HdlValueId: NS
                                    HdlValueId: WAIT_RVALID
                            list: elifs
                            HdlOp: ASSIGN
                                list: ops
                                    HdlValueId: NS
                                    HdlValueId: WAIT_GNT
                list: elifs
                HdlStmBlock: SEQ
                    list: body
                        HdlStmIf
                            HdlValueId: ready_i
                            HdlStmBlock: SEQ
                                list: body
                                    HdlStmIf
                                        HdlOp: AND_UNARY
                                            list: ops
                                                HdlValueId: pointer_cs
                                        HdlStmBlock: SEQ
                                            list: body
                                                HdlOp: ASSIGN
                                                    list: ops
                                                        HdlValueId: instr_req_o
                                                        HdlValueInt: 1
                                                HdlOp: ASSIGN
                                                    list: ops
                                                        HdlValueId: instr_addr_o
                                                        HdlOp: ADD
                                                            list: ops
                                                                HdlValueId: current_address
                                                                HdlValueInt: 10
                                                HdlOp: ASSIGN
                                                    list: ops
                                                        HdlValueId: update_current_address
                                                        HdlValueInt: 1
                                                HdlOp: ASSIGN
                                                    list: ops
                                                        HdlValueId: pointer_ns
                                                        HdlValueInt: 0
                                                HdlStmIf
                                                    HdlValueId: instr_gnt_i
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: NS
                                                            HdlValueId: WAIT_RVALID
                                                    list: elifs
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: NS
                                                            HdlValueId: WAIT_GNT
                                        list: elifs
                                        HdlStmBlock: SEQ
                                            list: body
                                                HdlOp: ASSIGN
                                                    list: ops
                                                        HdlValueId: pointer_ns
                                                        HdlOp: ADD
                                                            list: ops
                                                                HdlValueId: pointer_cs
                                                                HdlValueInt: 1
                                                HdlOp: ASSIGN
                                                    list: ops
                                                        HdlValueId: NS
                                                        HdlValueId: VALID_L0
                            list: elifs
                            HdlStmBlock: SEQ
                                list: body
                                    HdlOp: ASSIGN
                                        list: ops
                                            HdlValueId: NS
                                            HdlValueId: VALID_L0
    MOV tuple@@ to cases
    tuple
        HdlValueId: EMPTY
        HdlStmBlock: SEQ
            list: body
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: instr_req_o
                        HdlValueId: branch_i
                HdlStmIf
                    HdlValueId: branch_i
                    HdlStmBlock: SEQ
                        list: body
                            HdlStmIf
                                HdlValueId: instr_gnt_i
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: NS
                                        HdlValueId: WAIT_RVALID
                                list: elifs
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: NS
                                        HdlValueId: WAIT_GNT
                    list: elifs
                    HdlStmBlock: SEQ
                        list: body
                            HdlOp: ASSIGN
                                list: ops
                                    HdlValueId: NS
                                    HdlValueId: EMPTY
    MOV tuple@@ to cases
    tuple
        HdlValueId: WAIT_RVALID
        HdlStmBlock: SEQ
            list: body
                HdlStmIf
                    HdlValueId: branch_i
                    HdlStmBlock: SEQ
                        list: body
                            HdlStmIf
                                HdlValueId: instr_rvalid_i
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: instr_req_o
                                                HdlValueInt: 1
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: instr_addr_o
                                                HdlOp: CONCAT
                                                    list: ops
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlValueId: addr_i
                                                                HdlOp: DOWNTO
                                                                    list: ops
                                                                        HdlValueInt: 31
                                                                        HdlValueInt: 4
                                                        HdlValueInt: 0000
                                        HdlStmIf
                                            HdlValueId: instr_gnt_i
                                            HdlOp: ASSIGN
                                                list: ops
                                                    HdlValueId: NS
                                                    HdlValueId: WAIT_RVALID
                                            list: elifs
                                            HdlOp: ASSIGN
                                                list: ops
                                                    HdlValueId: NS
                                                    HdlValueId: WAIT_GNT
                                list: elifs
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: NS
                                                HdlValueId: WAIT_ABORTED
                    list: elifs
                    HdlStmBlock: SEQ
                        list: body
                            HdlOp: ASSIGN
                                list: ops
                                    HdlValueId: valid_o
                                    HdlValueId: instr_rvalid_i
                            HdlStmCase: pointer_cs
                                HdlStmCaseType: CASE
                                HdlValueId: pointer_cs
                                list: cases
                                    tuple
                                        HdlValueInt: 00
                                        HdlStmBlock: SEQ
                                            list: body
                                                HdlOp: ASSIGN
                                                    list: ops
                                                        HdlValueId: unaligned_rdata_o
                                                        HdlOp: CONCAT
                                                            list: ops
                                                                HdlOp: INDEX
                                                                    list: ops
                                                                        HdlOp: INDEX
                                                                            list: ops
                                                                                HdlValueId: instr_rdata_i
                                                                                HdlValueInt: 0
                                                                        HdlOp: DOWNTO
                                                                            list: ops
                                                                                HdlValueInt: 15
                                                                                HdlValueInt: 0
                                                                HdlOp: INDEX
                                                                    list: ops
                                                                        HdlOp: INDEX
                                                                            list: ops
                                                                                HdlValueId: L0_buffer
                                                                                HdlValueInt: 3
                                                                        HdlOp: DOWNTO
                                                                            list: ops
                                                                                HdlValueInt: 31
                                                                                HdlValueInt: 16
                                                HdlStmIf
                                                    HdlValueId: valid_L0_buffer
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: unaligned_valid_o
                                                            HdlValueId: instr_rvalid_i
                                                    list: elifs
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: unaligned_valid_o
                                                            HdlValueInt: 0
                                    tuple
                                        HdlValueInt: 01
                                        HdlStmBlock: SEQ
                                            list: body
                                                HdlOp: ASSIGN
                                                    list: ops
                                                        HdlValueId: unaligned_rdata_o
                                                        HdlOp: CONCAT
                                                            list: ops
                                                                HdlOp: INDEX
                                                                    list: ops
                                                                        HdlOp: INDEX
                                                                            list: ops
                                                                                HdlValueId: instr_rdata_i
                                                                                HdlValueInt: 1
                                                                        HdlOp: DOWNTO
                                                                            list: ops
                                                                                HdlValueInt: 15
                                                                                HdlValueInt: 0
                                                                HdlOp: INDEX
                                                                    list: ops
                                                                        HdlOp: INDEX
                                                                            list: ops
                                                                                HdlValueId: instr_rdata_i
                                                                                HdlValueInt: 0
                                                                        HdlOp: DOWNTO
                                                                            list: ops
                                                                                HdlValueInt: 31
                                                                                HdlValueInt: 16
                                                HdlOp: ASSIGN
                                                    list: ops
                                                        HdlValueId: unaligned_valid_o
                                                        HdlValueId: instr_rvalid_i
                                    tuple
                                        HdlValueInt: 10
                                        HdlStmBlock: SEQ
                                            list: body
                                                HdlOp: ASSIGN
                                                    list: ops
                                                        HdlValueId: unaligned_rdata_o
                                                        HdlOp: CONCAT
                                                            list: ops
                                                                HdlOp: INDEX
                                                                    list: ops
                                                                        HdlOp: INDEX
                                                                            list: ops
                                                                                HdlValueId: instr_rdata_i
                                                                                HdlValueInt: 2
                                                                        HdlOp: DOWNTO
                                                                            list: ops
                                                                                HdlValueInt: 15
                                                                                HdlValueInt: 0
                                                                HdlOp: INDEX
                                                                    list: ops
                                                                        HdlOp: INDEX
                                                                            list: ops
                                                                                HdlValueId: instr_rdata_i
                                                                                HdlValueInt: 1
                                                                        HdlOp: DOWNTO
                                                                            list: ops
                                                                                HdlValueInt: 31
                                                                                HdlValueInt: 16
                                                HdlOp: ASSIGN
                                                    list: ops
                                                        HdlValueId: unaligned_valid_o
                                                        HdlValueId: instr_rvalid_i
                                    tuple
                                        HdlValueInt: 11
                                        HdlStmBlock: SEQ
                                            list: body
                                                HdlOp: ASSIGN
                                                    list: ops
                                                        HdlValueId: unaligned_rdata_o
                                                        HdlOp: CONCAT
                                                            list: ops
                                                                HdlOp: INDEX
                                                                    list: ops
                                                                        HdlOp: INDEX
                                                                            list: ops
                                                                                HdlValueId: instr_rdata_i
                                                                                HdlValueInt: 3
                                                                        HdlOp: DOWNTO
                                                                            list: ops
                                                                                HdlValueInt: 15
                                                                                HdlValueInt: 0
                                                                HdlOp: INDEX
                                                                    list: ops
                                                                        HdlOp: INDEX
                                                                            list: ops
                                                                                HdlValueId: instr_rdata_i
                                                                                HdlValueInt: 2
                                                                        HdlOp: DOWNTO
                                                                            list: ops
                                                                                HdlValueInt: 31
                                                                                HdlValueInt: 16
                                                HdlOp: ASSIGN
                                                    list: ops
                                                        HdlValueId: unaligned_valid_o
                                                        HdlValueId: instr_rvalid_i
                            HdlStmIf
                                HdlValueId: instr_rvalid_i
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlStmIf
                                            HdlOp: AND_UNARY
                                                list: ops
                                                    HdlValueId: pointer_cs
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlStmIf
                                                        HdlValueId: ready_i
                                                        HdlStmBlock: SEQ
                                                            list: body
                                                                HdlOp: ASSIGN
                                                                    list: ops
                                                                        HdlValueId: instr_req_o
                                                                        HdlValueInt: 1
                                                                HdlOp: ASSIGN
                                                                    list: ops
                                                                        HdlValueId: instr_addr_o
                                                                        HdlOp: ADD
                                                                            list: ops
                                                                                HdlValueId: current_address
                                                                                HdlValueInt: 10
                                                                HdlOp: ASSIGN
                                                                    list: ops
                                                                        HdlValueId: pointer_ns
                                                                        HdlValueInt: 0
                                                                HdlOp: ASSIGN
                                                                    list: ops
                                                                        HdlValueId: update_current_address
                                                                        HdlValueInt: 1
                                                                HdlStmIf
                                                                    HdlValueId: instr_gnt_i
                                                                    HdlOp: ASSIGN
                                                                        list: ops
                                                                            HdlValueId: NS
                                                                            HdlValueId: WAIT_RVALID
                                                                    list: elifs
                                                                    HdlOp: ASSIGN
                                                                        list: ops
                                                                            HdlValueId: NS
                                                                            HdlValueId: WAIT_GNT
                                                        list: elifs
                                                        HdlStmBlock: SEQ
                                                            list: body
                                                                HdlOp: ASSIGN
                                                                    list: ops
                                                                        HdlValueId: NS
                                                                        HdlValueId: VALID_L0
                                            list: elifs
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: NS
                                                            HdlValueId: VALID_L0
                                                    HdlStmIf
                                                        HdlValueId: ready_i
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: pointer_ns
                                                                HdlOp: ADD
                                                                    list: ops
                                                                        HdlValueId: pointer_cs
                                                                        HdlValueInt: 1
                                                        list: elifs
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: pointer_ns
                                                                HdlValueId: pointer_cs
                                list: elifs
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: NS
                                                HdlValueId: WAIT_RVALID
    MOV tuple@@ to cases
    tuple
        HdlValueId: VALID_L0
        HdlStmBlock: SEQ
            list: body
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: valid_o
                        HdlValueInt: 1
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: rdata_o
                        HdlOp: INDEX
                            list: ops
                                HdlValueId: L0_buffer
                                HdlValueId: pointer_cs
                HdlStmCase: pointer_cs
                    HdlStmCaseType: CASE
                    HdlValueId: pointer_cs
                    list: cases
                        tuple
                            HdlValueInt: 00
                            HdlStmBlock: SEQ
                                list: body
                                    HdlOp: ASSIGN
                                        list: ops
                                            HdlValueId: unaligned_rdata_o
                                            HdlOp: CONCAT
                                                list: ops
                                                    HdlOp: INDEX
                                                        list: ops
                                                            HdlOp: INDEX
                                                                list: ops
                                                                    HdlValueId: L0_buffer
                                                                    HdlValueInt: 0
                                                            HdlOp: DOWNTO
                                                                list: ops
                                                                    HdlValueInt: 15
                                                                    HdlValueInt: 0
                                                    HdlValueId: previous_chunk
                                    HdlOp: ASSIGN
                                        list: ops
                                            HdlValueId: unaligned_valid_o
                                            HdlValueId: valid_previous_chunk
                        tuple
                            HdlValueInt: 01
                            HdlStmBlock: SEQ
                                list: body
                                    HdlOp: ASSIGN
                                        list: ops
                                            HdlValueId: unaligned_rdata_o
                                            HdlOp: CONCAT
                                                list: ops
                                                    HdlOp: INDEX
                                                        list: ops
                                                            HdlOp: INDEX
                                                                list: ops
                                                                    HdlValueId: L0_buffer
                                                                    HdlValueInt: 1
                                                            HdlOp: DOWNTO
                                                                list: ops
                                                                    HdlValueInt: 15
                                                                    HdlValueInt: 0
                                                    HdlOp: INDEX
                                                        list: ops
                                                            HdlOp: INDEX
                                                                list: ops
                                                                    HdlValueId: L0_buffer
                                                                    HdlValueInt: 0
                                                            HdlOp: DOWNTO
                                                                list: ops
                                                                    HdlValueInt: 31
                                                                    HdlValueInt: 16
                                    HdlOp: ASSIGN
                                        list: ops
                                            HdlValueId: unaligned_valid_o
                                            HdlValueInt: 1
                        tuple
                            HdlValueInt: 10
                            HdlStmBlock: SEQ
                                list: body
                                    HdlOp: ASSIGN
                                        list: ops
                                            HdlValueId: unaligned_rdata_o
                                            HdlOp: CONCAT
                                                list: ops
                                                    HdlOp: INDEX
                                                        list: ops
                                                            HdlOp: INDEX
                                                                list: ops
                                                                    HdlValueId: L0_buffer
                                                                    HdlValueInt: 2
                                                            HdlOp: DOWNTO
                                                                list: ops
                                                                    HdlValueInt: 15
                                                                    HdlValueInt: 0
                                                    HdlOp: INDEX
                                                        list: ops
                                                            HdlOp: INDEX
                                                                list: ops
                                                                    HdlValueId: L0_buffer
                                                                    HdlValueInt: 1
                                                            HdlOp: DOWNTO
                                                                list: ops
                                                                    HdlValueInt: 31
                                                                    HdlValueInt: 16
                                    HdlOp: ASSIGN
                                        list: ops
                                            HdlValueId: unaligned_valid_o
                                            HdlValueInt: 1
                        tuple
                            HdlValueInt: 11
                            HdlStmBlock: SEQ
                                list: body
                                    HdlOp: ASSIGN
                                        list: ops
                                            HdlValueId: unaligned_rdata_o
                                            HdlOp: CONCAT
                                                list: ops
                                                    HdlOp: INDEX
                                                        list: ops
                                                            HdlOp: INDEX
                                                                list: ops
                                                                    HdlValueId: L0_buffer
                                                                    HdlValueInt: 3
                                                            HdlOp: DOWNTO
                                                                list: ops
                                                                    HdlValueInt: 15
                                                                    HdlValueInt: 0
                                                    HdlOp: INDEX
                                                        list: ops
                                                            HdlOp: INDEX
                                                                list: ops
                                                                    HdlValueId: L0_buffer
                                                                    HdlValueInt: 2
                                                            HdlOp: DOWNTO
                                                                list: ops
                                                                    HdlValueInt: 31
                                                                    HdlValueInt: 16
                                    HdlOp: ASSIGN
                                        list: ops
                                            HdlValueId: unaligned_valid_o
                                            HdlValueInt: 1
                HdlStmIf
                    HdlValueId: branch_i
                    HdlStmBlock: SEQ
                        list: body
                            HdlOp: ASSIGN
                                list: ops
                                    HdlValueId: instr_req_o
                                    HdlValueInt: 1
                            HdlOp: ASSIGN
                                list: ops
                                    HdlValueId: instr_addr_o
                                    HdlOp: CONCAT
                                        list: ops
                                            HdlOp: INDEX
                                                list: ops
                                                    HdlValueId: addr_i
                                                    HdlOp: DOWNTO
                                                        list: ops
                                                            HdlValueInt: 31
                                                            HdlValueInt: 4
                                            HdlValueInt: 0000
                            HdlStmIf
                                HdlValueId: instr_gnt_i
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: NS
                                        HdlValueId: WAIT_RVALID
                                list: elifs
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: NS
                                        HdlValueId: WAIT_GNT
                    list: elifs
                    HdlStmBlock: SEQ
                        list: body
                            HdlStmIf
                                HdlValueId: ready_i
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlStmIf
                                            HdlOp: AND_UNARY
                                                list: ops
                                                    HdlValueId: pointer_cs
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: instr_req_o
                                                            HdlValueInt: 1
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: instr_addr_o
                                                            HdlOp: ADD
                                                                list: ops
                                                                    HdlValueId: current_address
                                                                    HdlValueInt: 10
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: update_current_address
                                                            HdlValueInt: 1
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: pointer_ns
                                                            HdlValueInt: 0
                                                    HdlStmIf
                                                        HdlValueId: instr_gnt_i
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: NS
                                                                HdlValueId: WAIT_RVALID
                                                        list: elifs
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: NS
                                                                HdlValueId: WAIT_GNT
                                            list: elifs
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: pointer_ns
                                                            HdlOp: ADD
                                                                list: ops
                                                                    HdlValueId: pointer_cs
                                                                    HdlValueInt: 1
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: NS
                                                            HdlValueId: VALID_L0
                                list: elifs
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: NS
                                                HdlValueId: VALID_L0
    MOV tuple@@ to cases
    tuple
        HdlValueId: WAIT_GNT
        HdlStmBlock: SEQ
            list: body
                HdlStmIf
                    HdlValueId: branch_i
                    HdlStmBlock: SEQ
                        list: body
                            HdlOp: ASSIGN
                                list: ops
                                    HdlValueId: instr_req_o
                                    HdlValueInt: 1
                            HdlOp: ASSIGN
                                list: ops
                                    HdlValueId: instr_addr_o
                                    HdlOp: CONCAT
                                        list: ops
                                            HdlOp: INDEX
                                                list: ops
                                                    HdlValueId: addr_i
                                                    HdlOp: DOWNTO
                                                        list: ops
                                                            HdlValueInt: 31
                                                            HdlValueInt: 4
                                            HdlValueInt: 0000
                            HdlStmIf
                                HdlValueId: instr_gnt_i
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: NS
                                        HdlValueId: WAIT_RVALID
                                list: elifs
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: NS
                                        HdlValueId: WAIT_GNT
                    list: elifs
                    HdlStmBlock: SEQ
                        list: body
                            HdlOp: ASSIGN
                                list: ops
                                    HdlValueId: instr_req_o
                                    HdlValueInt: 1
                            HdlOp: ASSIGN
                                list: ops
                                    HdlValueId: instr_addr_o
                                    HdlValueId: current_address
                            HdlStmIf
                                HdlValueId: instr_gnt_i
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: NS
                                        HdlValueId: WAIT_RVALID
                                list: elifs
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: NS
                                        HdlValueId: WAIT_GNT
    MOV tuple@@ to cases
    tuple
        HdlValueId: WAIT_ABORTED
        HdlStmBlock: SEQ
            list: body
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: clear_buffer
                        HdlValueInt: 1
                HdlStmIf
                    HdlValueId: instr_rvalid_i
                    HdlStmBlock: SEQ
                        list: body
                            HdlOp: ASSIGN
                                list: ops
                                    HdlValueId: instr_req_o
                                    HdlValueInt: 1
                            HdlOp: ASSIGN
                                list: ops
                                    HdlValueId: instr_addr_o
                                    HdlValueId: current_address
                            HdlStmIf
                                HdlValueId: instr_gnt_i
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: NS
                                        HdlValueId: WAIT_RVALID
                                list: elifs
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: NS
                                        HdlValueId: WAIT_GNT
                    list: elifs
                    HdlStmBlock: SEQ
                        list: body
                            HdlOp: ASSIGN
                                list: ops
                                    HdlValueId: NS
                                    HdlValueId: WAIT_ABORTED
    UPD HdlStmBlock@@SEQ to SEQ
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: valid_o
                HdlValueInt: 1
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: rdata_o
                HdlOp: INDEX
                    list: ops
                        HdlValueId: L0_buffer
                        HdlValueId: pointer_cs

MOV HdlStmProcess@@ to objs
HdlStmProcess
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: valid_o
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: addr_o
                    HdlOp: ADD
                        list: ops
                            HdlValueId: current_address
                            HdlOp: SLL
                                list: ops
                                    HdlValueId: pointer_cs
                                    HdlValueInt: 2
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: pointer_ns
                    HdlValueId: pointer_cs
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: instr_req_o
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: instr_addr_o
                    HdlOp: TERNARY
                        list: ops
                            HdlValueId: branch_i
                            HdlValueId: addr_i
                            HdlOp: ADD
                                list: ops
                                    HdlValueId: current_address
                                    HdlValueInt: 10
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: update_current_address
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: rdata_o
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: instr_rdata_i
                            HdlValueId: pointer_cs
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: clear_buffer
                    HdlValueInt: 0
            HdlStmCase: {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops':}]} 
                HdlStmCaseType: CASE
                HdlOp: INDEX
                    list: ops
                        HdlValueId: addr_o
                        HdlOp: DOWNTO
                            list: ops
                                HdlValueInt: 3
                                HdlValueInt: 2
                list: cases
                    tuple
                        HdlValueInt: 00
                        HdlStmBlock: SEQ
                            list: body
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: unaligned_rdata_o
                                        HdlOp: CONCAT
                                            list: ops
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlValueId: L0_buffer
                                                                HdlValueInt: 0
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 15
                                                                HdlValueInt: 0
                                                HdlValueId: previous_chunk
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: unaligned_valid_o
                                        HdlValueId: valid_previous_chunk
                    tuple
                        HdlValueInt: 01
                        HdlStmBlock: SEQ
                            list: body
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: unaligned_rdata_o
                                        HdlOp: CONCAT
                                            list: ops
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlValueId: L0_buffer
                                                                HdlValueInt: 1
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 15
                                                                HdlValueInt: 0
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlValueId: L0_buffer
                                                                HdlValueInt: 0
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 31
                                                                HdlValueInt: 16
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: unaligned_valid_o
                                        HdlValueId: valid_o
                    tuple
                        HdlValueInt: 10
                        HdlStmBlock: SEQ
                            list: body
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: unaligned_rdata_o
                                        HdlOp: CONCAT
                                            list: ops
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlValueId: L0_buffer
                                                                HdlValueInt: 2
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 15
                                                                HdlValueInt: 0
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlValueId: L0_buffer
                                                                HdlValueInt: 1
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 31
                                                                HdlValueInt: 16
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: unaligned_valid_o
                                        HdlValueId: valid_o
                    tuple
                        HdlValueInt: 11
                        HdlStmBlock: SEQ
                            list: body
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: unaligned_rdata_o
                                        HdlOp: CONCAT
                                            list: ops
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlValueId: L0_buffer
                                                                HdlValueInt: 3
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 15
                                                                HdlValueInt: 0
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlValueId: L0_buffer
                                                                HdlValueInt: 2
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 31
                                                                HdlValueInt: 16
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: unaligned_valid_o
                                        HdlValueId: valid_o
            HdlStmCase: CS
                HdlStmCaseType: CASE
                HdlValueId: CS
                list: cases
                    tuple
                        HdlValueId: EMPTY
                        HdlStmBlock: SEQ
                            list: body
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: instr_req_o
                                        HdlValueId: branch_i
                                HdlStmIf
                                    HdlValueId: branch_i
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmIf
                                                HdlValueId: instr_gnt_i
                                                HdlOp: ASSIGN
                                                    list: ops
                                                        HdlValueId: NS
                                                        HdlValueId: WAIT_RVALID
                                                list: elifs
                                                HdlOp: ASSIGN
                                                    list: ops
                                                        HdlValueId: NS
                                                        HdlValueId: WAIT_GNT
                                    list: elifs
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlOp: ASSIGN
                                                list: ops
                                                    HdlValueId: NS
                                                    HdlValueId: EMPTY
                    tuple
                        HdlValueId: WAIT_RVALID
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmIf
                                    HdlValueId: branch_i
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmIf
                                                HdlValueId: instr_rvalid_i
                                                HdlStmBlock: SEQ
                                                    list: body
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: instr_req_o
                                                                HdlValueInt: 1
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: instr_addr_o
                                                                HdlOp: CONCAT
                                                                    list: ops
                                                                        HdlOp: INDEX
                                                                            list: ops
                                                                                HdlValueId: addr_i
                                                                                HdlOp: DOWNTO
                                                                                    list: ops
                                                                                        HdlValueInt: 31
                                                                                        HdlValueInt: 4
                                                                        HdlValueInt: 0000
                                                        HdlStmIf
                                                            HdlValueId: instr_gnt_i
                                                            HdlOp: ASSIGN
                                                                list: ops
                                                                    HdlValueId: NS
                                                                    HdlValueId: WAIT_RVALID
                                                            list: elifs
                                                            HdlOp: ASSIGN
                                                                list: ops
                                                                    HdlValueId: NS
                                                                    HdlValueId: WAIT_GNT
                                                list: elifs
                                                HdlStmBlock: SEQ
                                                    list: body
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: NS
                                                                HdlValueId: WAIT_ABORTED
                                    list: elifs
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlOp: ASSIGN
                                                list: ops
                                                    HdlValueId: valid_o
                                                    HdlValueId: instr_rvalid_i
                                            HdlStmCase: pointer_cs
                                                HdlStmCaseType: CASE
                                                HdlValueId: pointer_cs
                                                list: cases
                                                    tuple
                                                        HdlValueInt: 00
                                                        HdlStmBlock: SEQ
                                                            list: body
                                                                HdlOp: ASSIGN
                                                                    list: ops
                                                                        HdlValueId: unaligned_rdata_o
                                                                        HdlOp: CONCAT
                                                                            list: ops
                                                                                HdlOp: INDEX
                                                                                    list: ops
                                                                                        HdlOp: INDEX
                                                                                            list: ops
                                                                                                HdlValueId: instr_rdata_i
                                                                                                HdlValueInt: 0
                                                                                        HdlOp: DOWNTO
                                                                                            list: ops
                                                                                                HdlValueInt: 15
                                                                                                HdlValueInt: 0
                                                                                HdlOp: INDEX
                                                                                    list: ops
                                                                                        HdlOp: INDEX
                                                                                            list: ops
                                                                                                HdlValueId: L0_buffer
                                                                                                HdlValueInt: 3
                                                                                        HdlOp: DOWNTO
                                                                                            list: ops
                                                                                                HdlValueInt: 31
                                                                                                HdlValueInt: 16
                                                                HdlStmIf
                                                                    HdlValueId: valid_L0_buffer
                                                                    HdlOp: ASSIGN
                                                                        list: ops
                                                                            HdlValueId: unaligned_valid_o
                                                                            HdlValueId: instr_rvalid_i
                                                                    list: elifs
                                                                    HdlOp: ASSIGN
                                                                        list: ops
                                                                            HdlValueId: unaligned_valid_o
                                                                            HdlValueInt: 0
                                                    tuple
                                                        HdlValueInt: 01
                                                        HdlStmBlock: SEQ
                                                            list: body
                                                                HdlOp: ASSIGN
                                                                    list: ops
                                                                        HdlValueId: unaligned_rdata_o
                                                                        HdlOp: CONCAT
                                                                            list: ops
                                                                                HdlOp: INDEX
                                                                                    list: ops
                                                                                        HdlOp: INDEX
                                                                                            list: ops
                                                                                                HdlValueId: instr_rdata_i
                                                                                                HdlValueInt: 1
                                                                                        HdlOp: DOWNTO
                                                                                            list: ops
                                                                                                HdlValueInt: 15
                                                                                                HdlValueInt: 0
                                                                                HdlOp: INDEX
                                                                                    list: ops
                                                                                        HdlOp: INDEX
                                                                                            list: ops
                                                                                                HdlValueId: instr_rdata_i
                                                                                                HdlValueInt: 0
                                                                                        HdlOp: DOWNTO
                                                                                            list: ops
                                                                                                HdlValueInt: 31
                                                                                                HdlValueInt: 16
                                                                HdlOp: ASSIGN
                                                                    list: ops
                                                                        HdlValueId: unaligned_valid_o
                                                                        HdlValueId: instr_rvalid_i
                                                    tuple
                                                        HdlValueInt: 10
                                                        HdlStmBlock: SEQ
                                                            list: body
                                                                HdlOp: ASSIGN
                                                                    list: ops
                                                                        HdlValueId: unaligned_rdata_o
                                                                        HdlOp: CONCAT
                                                                            list: ops
                                                                                HdlOp: INDEX
                                                                                    list: ops
                                                                                        HdlOp: INDEX
                                                                                            list: ops
                                                                                                HdlValueId: instr_rdata_i
                                                                                                HdlValueInt: 2
                                                                                        HdlOp: DOWNTO
                                                                                            list: ops
                                                                                                HdlValueInt: 15
                                                                                                HdlValueInt: 0
                                                                                HdlOp: INDEX
                                                                                    list: ops
                                                                                        HdlOp: INDEX
                                                                                            list: ops
                                                                                                HdlValueId: instr_rdata_i
                                                                                                HdlValueInt: 1
                                                                                        HdlOp: DOWNTO
                                                                                            list: ops
                                                                                                HdlValueInt: 31
                                                                                                HdlValueInt: 16
                                                                HdlOp: ASSIGN
                                                                    list: ops
                                                                        HdlValueId: unaligned_valid_o
                                                                        HdlValueId: instr_rvalid_i
                                                    tuple
                                                        HdlValueInt: 11
                                                        HdlStmBlock: SEQ
                                                            list: body
                                                                HdlOp: ASSIGN
                                                                    list: ops
                                                                        HdlValueId: unaligned_rdata_o
                                                                        HdlOp: CONCAT
                                                                            list: ops
                                                                                HdlOp: INDEX
                                                                                    list: ops
                                                                                        HdlOp: INDEX
                                                                                            list: ops
                                                                                                HdlValueId: instr_rdata_i
                                                                                                HdlValueInt: 3
                                                                                        HdlOp: DOWNTO
                                                                                            list: ops
                                                                                                HdlValueInt: 15
                                                                                                HdlValueInt: 0
                                                                                HdlOp: INDEX
                                                                                    list: ops
                                                                                        HdlOp: INDEX
                                                                                            list: ops
                                                                                                HdlValueId: instr_rdata_i
                                                                                                HdlValueInt: 2
                                                                                        HdlOp: DOWNTO
                                                                                            list: ops
                                                                                                HdlValueInt: 31
                                                                                                HdlValueInt: 16
                                                                HdlOp: ASSIGN
                                                                    list: ops
                                                                        HdlValueId: unaligned_valid_o
                                                                        HdlValueId: instr_rvalid_i
                                            HdlStmIf
                                                HdlValueId: instr_rvalid_i
                                                HdlStmBlock: SEQ
                                                    list: body
                                                        HdlStmIf
                                                            HdlOp: AND_UNARY
                                                                list: ops
                                                                    HdlValueId: pointer_cs
                                                            HdlStmBlock: SEQ
                                                                list: body
                                                                    HdlStmIf
                                                                        HdlValueId: ready_i
                                                                        HdlStmBlock: SEQ
                                                                            list: body
                                                                                HdlOp: ASSIGN
                                                                                    list: ops
                                                                                        HdlValueId: instr_req_o
                                                                                        HdlValueInt: 1
                                                                                HdlOp: ASSIGN
                                                                                    list: ops
                                                                                        HdlValueId: instr_addr_o
                                                                                        HdlOp: ADD
                                                                                            list: ops
                                                                                                HdlValueId: current_address
                                                                                                HdlValueInt: 10
                                                                                HdlOp: ASSIGN
                                                                                    list: ops
                                                                                        HdlValueId: pointer_ns
                                                                                        HdlValueInt: 0
                                                                                HdlOp: ASSIGN
                                                                                    list: ops
                                                                                        HdlValueId: update_current_address
                                                                                        HdlValueInt: 1
                                                                                HdlStmIf
                                                                                    HdlValueId: instr_gnt_i
                                                                                    HdlOp: ASSIGN
                                                                                        list: ops
                                                                                            HdlValueId: NS
                                                                                            HdlValueId: WAIT_RVALID
                                                                                    list: elifs
                                                                                    HdlOp: ASSIGN
                                                                                        list: ops
                                                                                            HdlValueId: NS
                                                                                            HdlValueId: WAIT_GNT
                                                                        list: elifs
                                                                        HdlStmBlock: SEQ
                                                                            list: body
                                                                                HdlOp: ASSIGN
                                                                                    list: ops
                                                                                        HdlValueId: NS
                                                                                        HdlValueId: VALID_L0
                                                            list: elifs
                                                            HdlStmBlock: SEQ
                                                                list: body
                                                                    HdlOp: ASSIGN
                                                                        list: ops
                                                                            HdlValueId: NS
                                                                            HdlValueId: VALID_L0
                                                                    HdlStmIf
                                                                        HdlValueId: ready_i
                                                                        HdlOp: ASSIGN
                                                                            list: ops
                                                                                HdlValueId: pointer_ns
                                                                                HdlOp: ADD
                                                                                    list: ops
                                                                                        HdlValueId: pointer_cs
                                                                                        HdlValueInt: 1
                                                                        list: elifs
                                                                        HdlOp: ASSIGN
                                                                            list: ops
                                                                                HdlValueId: pointer_ns
                                                                                HdlValueId: pointer_cs
                                                list: elifs
                                                HdlStmBlock: SEQ
                                                    list: body
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: NS
                                                                HdlValueId: WAIT_RVALID
                    tuple
                        HdlValueId: VALID_L0
                        HdlStmBlock: SEQ
                            list: body
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: valid_o
                                        HdlValueInt: 1
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: rdata_o
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: L0_buffer
                                                HdlValueId: pointer_cs
                                HdlStmCase: pointer_cs
                                    HdlStmCaseType: CASE
                                    HdlValueId: pointer_cs
                                    list: cases
                                        tuple
                                            HdlValueInt: 00
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: unaligned_rdata_o
                                                            HdlOp: CONCAT
                                                                list: ops
                                                                    HdlOp: INDEX
                                                                        list: ops
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlValueId: L0_buffer
                                                                                    HdlValueInt: 0
                                                                            HdlOp: DOWNTO
                                                                                list: ops
                                                                                    HdlValueInt: 15
                                                                                    HdlValueInt: 0
                                                                    HdlValueId: previous_chunk
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: unaligned_valid_o
                                                            HdlValueId: valid_previous_chunk
                                        tuple
                                            HdlValueInt: 01
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: unaligned_rdata_o
                                                            HdlOp: CONCAT
                                                                list: ops
                                                                    HdlOp: INDEX
                                                                        list: ops
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlValueId: L0_buffer
                                                                                    HdlValueInt: 1
                                                                            HdlOp: DOWNTO
                                                                                list: ops
                                                                                    HdlValueInt: 15
                                                                                    HdlValueInt: 0
                                                                    HdlOp: INDEX
                                                                        list: ops
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlValueId: L0_buffer
                                                                                    HdlValueInt: 0
                                                                            HdlOp: DOWNTO
                                                                                list: ops
                                                                                    HdlValueInt: 31
                                                                                    HdlValueInt: 16
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: unaligned_valid_o
                                                            HdlValueInt: 1
                                        tuple
                                            HdlValueInt: 10
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: unaligned_rdata_o
                                                            HdlOp: CONCAT
                                                                list: ops
                                                                    HdlOp: INDEX
                                                                        list: ops
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlValueId: L0_buffer
                                                                                    HdlValueInt: 2
                                                                            HdlOp: DOWNTO
                                                                                list: ops
                                                                                    HdlValueInt: 15
                                                                                    HdlValueInt: 0
                                                                    HdlOp: INDEX
                                                                        list: ops
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlValueId: L0_buffer
                                                                                    HdlValueInt: 1
                                                                            HdlOp: DOWNTO
                                                                                list: ops
                                                                                    HdlValueInt: 31
                                                                                    HdlValueInt: 16
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: unaligned_valid_o
                                                            HdlValueInt: 1
                                        tuple
                                            HdlValueInt: 11
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: unaligned_rdata_o
                                                            HdlOp: CONCAT
                                                                list: ops
                                                                    HdlOp: INDEX
                                                                        list: ops
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlValueId: L0_buffer
                                                                                    HdlValueInt: 3
                                                                            HdlOp: DOWNTO
                                                                                list: ops
                                                                                    HdlValueInt: 15
                                                                                    HdlValueInt: 0
                                                                    HdlOp: INDEX
                                                                        list: ops
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlValueId: L0_buffer
                                                                                    HdlValueInt: 2
                                                                            HdlOp: DOWNTO
                                                                                list: ops
                                                                                    HdlValueInt: 31
                                                                                    HdlValueInt: 16
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: unaligned_valid_o
                                                            HdlValueInt: 1
                                HdlStmIf
                                    HdlValueId: branch_i
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlOp: ASSIGN
                                                list: ops
                                                    HdlValueId: instr_req_o
                                                    HdlValueInt: 1
                                            HdlOp: ASSIGN
                                                list: ops
                                                    HdlValueId: instr_addr_o
                                                    HdlOp: CONCAT
                                                        list: ops
                                                            HdlOp: INDEX
                                                                list: ops
                                                                    HdlValueId: addr_i
                                                                    HdlOp: DOWNTO
                                                                        list: ops
                                                                            HdlValueInt: 31
                                                                            HdlValueInt: 4
                                                            HdlValueInt: 0000
                                            HdlStmIf
                                                HdlValueId: instr_gnt_i
                                                HdlOp: ASSIGN
                                                    list: ops
                                                        HdlValueId: NS
                                                        HdlValueId: WAIT_RVALID
                                                list: elifs
                                                HdlOp: ASSIGN
                                                    list: ops
                                                        HdlValueId: NS
                                                        HdlValueId: WAIT_GNT
                                    list: elifs
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmIf
                                                HdlValueId: ready_i
                                                HdlStmBlock: SEQ
                                                    list: body
                                                        HdlStmIf
                                                            HdlOp: AND_UNARY
                                                                list: ops
                                                                    HdlValueId: pointer_cs
                                                            HdlStmBlock: SEQ
                                                                list: body
                                                                    HdlOp: ASSIGN
                                                                        list: ops
                                                                            HdlValueId: instr_req_o
                                                                            HdlValueInt: 1
                                                                    HdlOp: ASSIGN
                                                                        list: ops
                                                                            HdlValueId: instr_addr_o
                                                                            HdlOp: ADD
                                                                                list: ops
                                                                                    HdlValueId: current_address
                                                                                    HdlValueInt: 10
                                                                    HdlOp: ASSIGN
                                                                        list: ops
                                                                            HdlValueId: update_current_address
                                                                            HdlValueInt: 1
                                                                    HdlOp: ASSIGN
                                                                        list: ops
                                                                            HdlValueId: pointer_ns
                                                                            HdlValueInt: 0
                                                                    HdlStmIf
                                                                        HdlValueId: instr_gnt_i
                                                                        HdlOp: ASSIGN
                                                                            list: ops
                                                                                HdlValueId: NS
                                                                                HdlValueId: WAIT_RVALID
                                                                        list: elifs
                                                                        HdlOp: ASSIGN
                                                                            list: ops
                                                                                HdlValueId: NS
                                                                                HdlValueId: WAIT_GNT
                                                            list: elifs
                                                            HdlStmBlock: SEQ
                                                                list: body
                                                                    HdlOp: ASSIGN
                                                                        list: ops
                                                                            HdlValueId: pointer_ns
                                                                            HdlOp: ADD
                                                                                list: ops
                                                                                    HdlValueId: pointer_cs
                                                                                    HdlValueInt: 1
                                                                    HdlOp: ASSIGN
                                                                        list: ops
                                                                            HdlValueId: NS
                                                                            HdlValueId: VALID_L0
                                                list: elifs
                                                HdlStmBlock: SEQ
                                                    list: body
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: NS
                                                                HdlValueId: VALID_L0
                    tuple
                        HdlValueId: WAIT_GNT
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmIf
                                    HdlValueId: branch_i
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlOp: ASSIGN
                                                list: ops
                                                    HdlValueId: instr_req_o
                                                    HdlValueInt: 1
                                            HdlOp: ASSIGN
                                                list: ops
                                                    HdlValueId: instr_addr_o
                                                    HdlOp: CONCAT
                                                        list: ops
                                                            HdlOp: INDEX
                                                                list: ops
                                                                    HdlValueId: addr_i
                                                                    HdlOp: DOWNTO
                                                                        list: ops
                                                                            HdlValueInt: 31
                                                                            HdlValueInt: 4
                                                            HdlValueInt: 0000
                                            HdlStmIf
                                                HdlValueId: instr_gnt_i
                                                HdlOp: ASSIGN
                                                    list: ops
                                                        HdlValueId: NS
                                                        HdlValueId: WAIT_RVALID
                                                list: elifs
                                                HdlOp: ASSIGN
                                                    list: ops
                                                        HdlValueId: NS
                                                        HdlValueId: WAIT_GNT
                                    list: elifs
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlOp: ASSIGN
                                                list: ops
                                                    HdlValueId: instr_req_o
                                                    HdlValueInt: 1
                                            HdlOp: ASSIGN
                                                list: ops
                                                    HdlValueId: instr_addr_o
                                                    HdlValueId: current_address
                                            HdlStmIf
                                                HdlValueId: instr_gnt_i
                                                HdlOp: ASSIGN
                                                    list: ops
                                                        HdlValueId: NS
                                                        HdlValueId: WAIT_RVALID
                                                list: elifs
                                                HdlOp: ASSIGN
                                                    list: ops
                                                        HdlValueId: NS
                                                        HdlValueId: WAIT_GNT
                    tuple
                        HdlValueId: WAIT_ABORTED
                        HdlStmBlock: SEQ
                            list: body
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: clear_buffer
                                        HdlValueInt: 1
                                HdlStmIf
                                    HdlValueId: instr_rvalid_i
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlOp: ASSIGN
                                                list: ops
                                                    HdlValueId: instr_req_o
                                                    HdlValueInt: 1
                                            HdlOp: ASSIGN
                                                list: ops
                                                    HdlValueId: instr_addr_o
                                                    HdlValueId: current_address
                                            HdlStmIf
                                                HdlValueId: instr_gnt_i
                                                HdlOp: ASSIGN
                                                    list: ops
                                                        HdlValueId: NS
                                                        HdlValueId: WAIT_RVALID
                                                list: elifs
                                                HdlOp: ASSIGN
                                                    list: ops
                                                        HdlValueId: NS
                                                        HdlValueId: WAIT_GNT
                                    list: elifs
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlOp: ASSIGN
                                                list: ops
                                                    HdlValueId: NS
                                                    HdlValueId: WAIT_ABORTED
                HdlStmBlock: SEQ
                    list: body
                        HdlOp: ASSIGN
                            list: ops
                                HdlValueId: NS
                                HdlValueId: EMPTY
                        HdlOp: ASSIGN
                            list: ops
                                HdlValueId: clear_buffer
                                HdlValueInt: 1
    HdlStmProcessTriggerConstrain: COMB

UPD HdlModuleDef@@prefetch_L0_buffer to prefetch_L0_buffer
    UPD list@@objs to body
    MOV list@@objs to prefetch_L0_buffer
    list: objs
        HdlIdDef: CS
            HdlExprNotImplemented: type
            HdlDirection: INTERNAL
        HdlIdDef: NS
            HdlExprNotImplemented: type
            HdlDirection: INTERNAL
        HdlIdDef: current_address
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: logic
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 31
                            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlIdDef: pointer_cs
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: logic
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 1
                            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlIdDef: pointer_ns
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: logic
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 1
                            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlIdDef: update_current_address
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: logic
            HdlDirection: INTERNAL
        HdlIdDef: L0_buffer
            HdlOp: INDEX
                list: ops
                    HdlOp: PARAMETRIZATION
                        list: ops
                            HdlValueId: logic
                            HdlOp: DOWNTO
                                list: ops
                                    HdlValueInt: 3
                                    HdlValueInt: 0
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 31
                            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlIdDef: valid_L0_buffer
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: logic
            HdlDirection: INTERNAL
        HdlIdDef: previous_chunk
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: logic
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 15
                            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlIdDef: valid_previous_chunk
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: logic
            HdlDirection: INTERNAL
        HdlIdDef: clear_buffer
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: logic
            HdlDirection: INTERNAL
        HdlStmAssign
            HdlOp: NE
                list: ops
                    HdlValueId: CS
                    HdlValueId: EMPTY
            HdlValueId: busy_o
        HdlStmProcess
            list: sensitivity
                HdlOp: RISING
                    list: ops
                        HdlValueId: clk
                HdlOp: FALLING
                    list: ops
                        HdlValueId: rst_n
            HdlStmBlock: SEQ
                list: body
                    HdlStmIf
                        HdlOp: NEG
                            list: ops
                                HdlValueId: rst_n
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmAssign
                                    HdlValueId: EMPTY
                                    HdlValueId: CS
                                HdlStmAssign
                                    HdlValueInt: 0
                                    HdlValueId: current_address
                                HdlStmAssign
                                    HdlValueInt: 0
                                    HdlValueId: pointer_cs
                        list: elifs
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmAssign
                                    HdlValueId: NS
                                    HdlValueId: CS
                                HdlStmIf
                                    HdlValueId: branch_i
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmAssign
                                                HdlOp: CONCAT
                                                    list: ops
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlValueId: addr_i
                                                                HdlOp: DOWNTO
                                                                    list: ops
                                                                        HdlValueInt: 31
                                                                        HdlValueInt: 4
                                                        HdlValueInt: 0000
                                                HdlValueId: current_address
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: addr_i
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 3
                                                                HdlValueInt: 2
                                                HdlValueId: pointer_cs
                                    list: elifs
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmIf
                                                HdlValueId: update_current_address
                                                HdlStmAssign: if_true
                                                    HdlOp: ADD
                                                        list: ops
                                                            HdlValueId: current_address
                                                            HdlValueInt: 10
                                                    HdlValueId: current_address
                                                list: elifs
                                            HdlStmAssign
                                                HdlValueId: pointer_ns
                                                HdlValueId: pointer_cs
            HdlStmProcessTriggerConstrain: FF
        HdlStmProcess
            HdlStmBlock: SEQ
                list: body
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: valid_o
                            HdlValueInt: 0
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: addr_o
                            HdlOp: ADD
                                list: ops
                                    HdlValueId: current_address
                                    HdlOp: SLL
                                        list: ops
                                            HdlValueId: pointer_cs
                                            HdlValueInt: 2
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: pointer_ns
                            HdlValueId: pointer_cs
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: instr_req_o
                            HdlValueInt: 0
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: instr_addr_o
                            HdlOp: TERNARY
                                list: ops
                                    HdlValueId: branch_i
                                    HdlValueId: addr_i
                                    HdlOp: ADD
                                        list: ops
                                            HdlValueId: current_address
                                            HdlValueInt: 10
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: update_current_address
                            HdlValueInt: 0
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: rdata_o
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: instr_rdata_i
                                    HdlValueId: pointer_cs
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: clear_buffer
                            HdlValueInt: 0
                    HdlStmCase: {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops':}]} 
                        HdlStmCaseType: CASE
                        HdlOp: INDEX
                            list: ops
                                HdlValueId: addr_o
                                HdlOp: DOWNTO
                                    list: ops
                                        HdlValueInt: 3
                                        HdlValueInt: 2
                        list: cases
                            tuple
                                HdlValueInt: 00
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: unaligned_rdata_o
                                                HdlOp: CONCAT
                                                    list: ops
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlOp: INDEX
                                                                    list: ops
                                                                        HdlValueId: L0_buffer
                                                                        HdlValueInt: 0
                                                                HdlOp: DOWNTO
                                                                    list: ops
                                                                        HdlValueInt: 15
                                                                        HdlValueInt: 0
                                                        HdlValueId: previous_chunk
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: unaligned_valid_o
                                                HdlValueId: valid_previous_chunk
                            tuple
                                HdlValueInt: 01
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: unaligned_rdata_o
                                                HdlOp: CONCAT
                                                    list: ops
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlOp: INDEX
                                                                    list: ops
                                                                        HdlValueId: L0_buffer
                                                                        HdlValueInt: 1
                                                                HdlOp: DOWNTO
                                                                    list: ops
                                                                        HdlValueInt: 15
                                                                        HdlValueInt: 0
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlOp: INDEX
                                                                    list: ops
                                                                        HdlValueId: L0_buffer
                                                                        HdlValueInt: 0
                                                                HdlOp: DOWNTO
                                                                    list: ops
                                                                        HdlValueInt: 31
                                                                        HdlValueInt: 16
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: unaligned_valid_o
                                                HdlValueId: valid_o
                            tuple
                                HdlValueInt: 10
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: unaligned_rdata_o
                                                HdlOp: CONCAT
                                                    list: ops
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlOp: INDEX
                                                                    list: ops
                                                                        HdlValueId: L0_buffer
                                                                        HdlValueInt: 2
                                                                HdlOp: DOWNTO
                                                                    list: ops
                                                                        HdlValueInt: 15
                                                                        HdlValueInt: 0
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlOp: INDEX
                                                                    list: ops
                                                                        HdlValueId: L0_buffer
                                                                        HdlValueInt: 1
                                                                HdlOp: DOWNTO
                                                                    list: ops
                                                                        HdlValueInt: 31
                                                                        HdlValueInt: 16
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: unaligned_valid_o
                                                HdlValueId: valid_o
                            tuple
                                HdlValueInt: 11
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: unaligned_rdata_o
                                                HdlOp: CONCAT
                                                    list: ops
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlOp: INDEX
                                                                    list: ops
                                                                        HdlValueId: L0_buffer
                                                                        HdlValueInt: 3
                                                                HdlOp: DOWNTO
                                                                    list: ops
                                                                        HdlValueInt: 15
                                                                        HdlValueInt: 0
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlOp: INDEX
                                                                    list: ops
                                                                        HdlValueId: L0_buffer
                                                                        HdlValueInt: 2
                                                                HdlOp: DOWNTO
                                                                    list: ops
                                                                        HdlValueInt: 31
                                                                        HdlValueInt: 16
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: unaligned_valid_o
                                                HdlValueId: valid_o
                    HdlStmCase: CS
                        HdlStmCaseType: CASE
                        HdlValueId: CS
                        list: cases
                            tuple
                                HdlValueId: EMPTY
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: instr_req_o
                                                HdlValueId: branch_i
                                        HdlStmIf
                                            HdlValueId: branch_i
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlStmIf
                                                        HdlValueId: instr_gnt_i
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: NS
                                                                HdlValueId: WAIT_RVALID
                                                        list: elifs
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: NS
                                                                HdlValueId: WAIT_GNT
                                            list: elifs
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: NS
                                                            HdlValueId: EMPTY
                            tuple
                                HdlValueId: WAIT_RVALID
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlStmIf
                                            HdlValueId: branch_i
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlStmIf
                                                        HdlValueId: instr_rvalid_i
                                                        HdlStmBlock: SEQ
                                                            list: body
                                                                HdlOp: ASSIGN
                                                                    list: ops
                                                                        HdlValueId: instr_req_o
                                                                        HdlValueInt: 1
                                                                HdlOp: ASSIGN
                                                                    list: ops
                                                                        HdlValueId: instr_addr_o
                                                                        HdlOp: CONCAT
                                                                            list: ops
                                                                                HdlOp: INDEX
                                                                                    list: ops
                                                                                        HdlValueId: addr_i
                                                                                        HdlOp: DOWNTO
                                                                                            list: ops
                                                                                                HdlValueInt: 31
                                                                                                HdlValueInt: 4
                                                                                HdlValueInt: 0000
                                                                HdlStmIf
                                                                    HdlValueId: instr_gnt_i
                                                                    HdlOp: ASSIGN
                                                                        list: ops
                                                                            HdlValueId: NS
                                                                            HdlValueId: WAIT_RVALID
                                                                    list: elifs
                                                                    HdlOp: ASSIGN
                                                                        list: ops
                                                                            HdlValueId: NS
                                                                            HdlValueId: WAIT_GNT
                                                        list: elifs
                                                        HdlStmBlock: SEQ
                                                            list: body
                                                                HdlOp: ASSIGN
                                                                    list: ops
                                                                        HdlValueId: NS
                                                                        HdlValueId: WAIT_ABORTED
                                            list: elifs
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: valid_o
                                                            HdlValueId: instr_rvalid_i
                                                    HdlStmCase: pointer_cs
                                                        HdlStmCaseType: CASE
                                                        HdlValueId: pointer_cs
                                                        list: cases
                                                            tuple
                                                                HdlValueInt: 00
                                                                HdlStmBlock: SEQ
                                                                    list: body
                                                                        HdlOp: ASSIGN
                                                                            list: ops
                                                                                HdlValueId: unaligned_rdata_o
                                                                                HdlOp: CONCAT
                                                                                    list: ops
                                                                                        HdlOp: INDEX
                                                                                            list: ops
                                                                                                HdlOp: INDEX
                                                                                                    list: ops
                                                                                                        HdlValueId: instr_rdata_i
                                                                                                        HdlValueInt: 0
                                                                                                HdlOp: DOWNTO
                                                                                                    list: ops
                                                                                                        HdlValueInt: 15
                                                                                                        HdlValueInt: 0
                                                                                        HdlOp: INDEX
                                                                                            list: ops
                                                                                                HdlOp: INDEX
                                                                                                    list: ops
                                                                                                        HdlValueId: L0_buffer
                                                                                                        HdlValueInt: 3
                                                                                                HdlOp: DOWNTO
                                                                                                    list: ops
                                                                                                        HdlValueInt: 31
                                                                                                        HdlValueInt: 16
                                                                        HdlStmIf
                                                                            HdlValueId: valid_L0_buffer
                                                                            HdlOp: ASSIGN
                                                                                list: ops
                                                                                    HdlValueId: unaligned_valid_o
                                                                                    HdlValueId: instr_rvalid_i
                                                                            list: elifs
                                                                            HdlOp: ASSIGN
                                                                                list: ops
                                                                                    HdlValueId: unaligned_valid_o
                                                                                    HdlValueInt: 0
                                                            tuple
                                                                HdlValueInt: 01
                                                                HdlStmBlock: SEQ
                                                                    list: body
                                                                        HdlOp: ASSIGN
                                                                            list: ops
                                                                                HdlValueId: unaligned_rdata_o
                                                                                HdlOp: CONCAT
                                                                                    list: ops
                                                                                        HdlOp: INDEX
                                                                                            list: ops
                                                                                                HdlOp: INDEX
                                                                                                    list: ops
                                                                                                        HdlValueId: instr_rdata_i
                                                                                                        HdlValueInt: 1
                                                                                                HdlOp: DOWNTO
                                                                                                    list: ops
                                                                                                        HdlValueInt: 15
                                                                                                        HdlValueInt: 0
                                                                                        HdlOp: INDEX
                                                                                            list: ops
                                                                                                HdlOp: INDEX
                                                                                                    list: ops
                                                                                                        HdlValueId: instr_rdata_i
                                                                                                        HdlValueInt: 0
                                                                                                HdlOp: DOWNTO
                                                                                                    list: ops
                                                                                                        HdlValueInt: 31
                                                                                                        HdlValueInt: 16
                                                                        HdlOp: ASSIGN
                                                                            list: ops
                                                                                HdlValueId: unaligned_valid_o
                                                                                HdlValueId: instr_rvalid_i
                                                            tuple
                                                                HdlValueInt: 10
                                                                HdlStmBlock: SEQ
                                                                    list: body
                                                                        HdlOp: ASSIGN
                                                                            list: ops
                                                                                HdlValueId: unaligned_rdata_o
                                                                                HdlOp: CONCAT
                                                                                    list: ops
                                                                                        HdlOp: INDEX
                                                                                            list: ops
                                                                                                HdlOp: INDEX
                                                                                                    list: ops
                                                                                                        HdlValueId: instr_rdata_i
                                                                                                        HdlValueInt: 2
                                                                                                HdlOp: DOWNTO
                                                                                                    list: ops
                                                                                                        HdlValueInt: 15
                                                                                                        HdlValueInt: 0
                                                                                        HdlOp: INDEX
                                                                                            list: ops
                                                                                                HdlOp: INDEX
                                                                                                    list: ops
                                                                                                        HdlValueId: instr_rdata_i
                                                                                                        HdlValueInt: 1
                                                                                                HdlOp: DOWNTO
                                                                                                    list: ops
                                                                                                        HdlValueInt: 31
                                                                                                        HdlValueInt: 16
                                                                        HdlOp: ASSIGN
                                                                            list: ops
                                                                                HdlValueId: unaligned_valid_o
                                                                                HdlValueId: instr_rvalid_i
                                                            tuple
                                                                HdlValueInt: 11
                                                                HdlStmBlock: SEQ
                                                                    list: body
                                                                        HdlOp: ASSIGN
                                                                            list: ops
                                                                                HdlValueId: unaligned_rdata_o
                                                                                HdlOp: CONCAT
                                                                                    list: ops
                                                                                        HdlOp: INDEX
                                                                                            list: ops
                                                                                                HdlOp: INDEX
                                                                                                    list: ops
                                                                                                        HdlValueId: instr_rdata_i
                                                                                                        HdlValueInt: 3
                                                                                                HdlOp: DOWNTO
                                                                                                    list: ops
                                                                                                        HdlValueInt: 15
                                                                                                        HdlValueInt: 0
                                                                                        HdlOp: INDEX
                                                                                            list: ops
                                                                                                HdlOp: INDEX
                                                                                                    list: ops
                                                                                                        HdlValueId: instr_rdata_i
                                                                                                        HdlValueInt: 2
                                                                                                HdlOp: DOWNTO
                                                                                                    list: ops
                                                                                                        HdlValueInt: 31
                                                                                                        HdlValueInt: 16
                                                                        HdlOp: ASSIGN
                                                                            list: ops
                                                                                HdlValueId: unaligned_valid_o
                                                                                HdlValueId: instr_rvalid_i
                                                    HdlStmIf
                                                        HdlValueId: instr_rvalid_i
                                                        HdlStmBlock: SEQ
                                                            list: body
                                                                HdlStmIf
                                                                    HdlOp: AND_UNARY
                                                                        list: ops
                                                                            HdlValueId: pointer_cs
                                                                    HdlStmBlock: SEQ
                                                                        list: body
                                                                            HdlStmIf
                                                                                HdlValueId: ready_i
                                                                                HdlStmBlock: SEQ
                                                                                    list: body
                                                                                        HdlOp: ASSIGN
                                                                                            list: ops
                                                                                                HdlValueId: instr_req_o
                                                                                                HdlValueInt: 1
                                                                                        HdlOp: ASSIGN
                                                                                            list: ops
                                                                                                HdlValueId: instr_addr_o
                                                                                                HdlOp: ADD
                                                                                                    list: ops
                                                                                                        HdlValueId: current_address
                                                                                                        HdlValueInt: 10
                                                                                        HdlOp: ASSIGN
                                                                                            list: ops
                                                                                                HdlValueId: pointer_ns
                                                                                                HdlValueInt: 0
                                                                                        HdlOp: ASSIGN
                                                                                            list: ops
                                                                                                HdlValueId: update_current_address
                                                                                                HdlValueInt: 1
                                                                                        HdlStmIf
                                                                                            HdlValueId: instr_gnt_i
                                                                                            HdlOp: ASSIGN
                                                                                                list: ops
                                                                                                    HdlValueId: NS
                                                                                                    HdlValueId: WAIT_RVALID
                                                                                            list: elifs
                                                                                            HdlOp: ASSIGN
                                                                                                list: ops
                                                                                                    HdlValueId: NS
                                                                                                    HdlValueId: WAIT_GNT
                                                                                list: elifs
                                                                                HdlStmBlock: SEQ
                                                                                    list: body
                                                                                        HdlOp: ASSIGN
                                                                                            list: ops
                                                                                                HdlValueId: NS
                                                                                                HdlValueId: VALID_L0
                                                                    list: elifs
                                                                    HdlStmBlock: SEQ
                                                                        list: body
                                                                            HdlOp: ASSIGN
                                                                                list: ops
                                                                                    HdlValueId: NS
                                                                                    HdlValueId: VALID_L0
                                                                            HdlStmIf
                                                                                HdlValueId: ready_i
                                                                                HdlOp: ASSIGN
                                                                                    list: ops
                                                                                        HdlValueId: pointer_ns
                                                                                        HdlOp: ADD
                                                                                            list: ops
                                                                                                HdlValueId: pointer_cs
                                                                                                HdlValueInt: 1
                                                                                list: elifs
                                                                                HdlOp: ASSIGN
                                                                                    list: ops
                                                                                        HdlValueId: pointer_ns
                                                                                        HdlValueId: pointer_cs
                                                        list: elifs
                                                        HdlStmBlock: SEQ
                                                            list: body
                                                                HdlOp: ASSIGN
                                                                    list: ops
                                                                        HdlValueId: NS
                                                                        HdlValueId: WAIT_RVALID
                            tuple
                                HdlValueId: VALID_L0
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: valid_o
                                                HdlValueInt: 1
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: rdata_o
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: L0_buffer
                                                        HdlValueId: pointer_cs
                                        HdlStmCase: pointer_cs
                                            HdlStmCaseType: CASE
                                            HdlValueId: pointer_cs
                                            list: cases
                                                tuple
                                                    HdlValueInt: 00
                                                    HdlStmBlock: SEQ
                                                        list: body
                                                            HdlOp: ASSIGN
                                                                list: ops
                                                                    HdlValueId: unaligned_rdata_o
                                                                    HdlOp: CONCAT
                                                                        list: ops
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlOp: INDEX
                                                                                        list: ops
                                                                                            HdlValueId: L0_buffer
                                                                                            HdlValueInt: 0
                                                                                    HdlOp: DOWNTO
                                                                                        list: ops
                                                                                            HdlValueInt: 15
                                                                                            HdlValueInt: 0
                                                                            HdlValueId: previous_chunk
                                                            HdlOp: ASSIGN
                                                                list: ops
                                                                    HdlValueId: unaligned_valid_o
                                                                    HdlValueId: valid_previous_chunk
                                                tuple
                                                    HdlValueInt: 01
                                                    HdlStmBlock: SEQ
                                                        list: body
                                                            HdlOp: ASSIGN
                                                                list: ops
                                                                    HdlValueId: unaligned_rdata_o
                                                                    HdlOp: CONCAT
                                                                        list: ops
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlOp: INDEX
                                                                                        list: ops
                                                                                            HdlValueId: L0_buffer
                                                                                            HdlValueInt: 1
                                                                                    HdlOp: DOWNTO
                                                                                        list: ops
                                                                                            HdlValueInt: 15
                                                                                            HdlValueInt: 0
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlOp: INDEX
                                                                                        list: ops
                                                                                            HdlValueId: L0_buffer
                                                                                            HdlValueInt: 0
                                                                                    HdlOp: DOWNTO
                                                                                        list: ops
                                                                                            HdlValueInt: 31
                                                                                            HdlValueInt: 16
                                                            HdlOp: ASSIGN
                                                                list: ops
                                                                    HdlValueId: unaligned_valid_o
                                                                    HdlValueInt: 1
                                                tuple
                                                    HdlValueInt: 10
                                                    HdlStmBlock: SEQ
                                                        list: body
                                                            HdlOp: ASSIGN
                                                                list: ops
                                                                    HdlValueId: unaligned_rdata_o
                                                                    HdlOp: CONCAT
                                                                        list: ops
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlOp: INDEX
                                                                                        list: ops
                                                                                            HdlValueId: L0_buffer
                                                                                            HdlValueInt: 2
                                                                                    HdlOp: DOWNTO
                                                                                        list: ops
                                                                                            HdlValueInt: 15
                                                                                            HdlValueInt: 0
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlOp: INDEX
                                                                                        list: ops
                                                                                            HdlValueId: L0_buffer
                                                                                            HdlValueInt: 1
                                                                                    HdlOp: DOWNTO
                                                                                        list: ops
                                                                                            HdlValueInt: 31
                                                                                            HdlValueInt: 16
                                                            HdlOp: ASSIGN
                                                                list: ops
                                                                    HdlValueId: unaligned_valid_o
                                                                    HdlValueInt: 1
                                                tuple
                                                    HdlValueInt: 11
                                                    HdlStmBlock: SEQ
                                                        list: body
                                                            HdlOp: ASSIGN
                                                                list: ops
                                                                    HdlValueId: unaligned_rdata_o
                                                                    HdlOp: CONCAT
                                                                        list: ops
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlOp: INDEX
                                                                                        list: ops
                                                                                            HdlValueId: L0_buffer
                                                                                            HdlValueInt: 3
                                                                                    HdlOp: DOWNTO
                                                                                        list: ops
                                                                                            HdlValueInt: 15
                                                                                            HdlValueInt: 0
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlOp: INDEX
                                                                                        list: ops
                                                                                            HdlValueId: L0_buffer
                                                                                            HdlValueInt: 2
                                                                                    HdlOp: DOWNTO
                                                                                        list: ops
                                                                                            HdlValueInt: 31
                                                                                            HdlValueInt: 16
                                                            HdlOp: ASSIGN
                                                                list: ops
                                                                    HdlValueId: unaligned_valid_o
                                                                    HdlValueInt: 1
                                        HdlStmIf
                                            HdlValueId: branch_i
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: instr_req_o
                                                            HdlValueInt: 1
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: instr_addr_o
                                                            HdlOp: CONCAT
                                                                list: ops
                                                                    HdlOp: INDEX
                                                                        list: ops
                                                                            HdlValueId: addr_i
                                                                            HdlOp: DOWNTO
                                                                                list: ops
                                                                                    HdlValueInt: 31
                                                                                    HdlValueInt: 4
                                                                    HdlValueInt: 0000
                                                    HdlStmIf
                                                        HdlValueId: instr_gnt_i
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: NS
                                                                HdlValueId: WAIT_RVALID
                                                        list: elifs
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: NS
                                                                HdlValueId: WAIT_GNT
                                            list: elifs
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlStmIf
                                                        HdlValueId: ready_i
                                                        HdlStmBlock: SEQ
                                                            list: body
                                                                HdlStmIf
                                                                    HdlOp: AND_UNARY
                                                                        list: ops
                                                                            HdlValueId: pointer_cs
                                                                    HdlStmBlock: SEQ
                                                                        list: body
                                                                            HdlOp: ASSIGN
                                                                                list: ops
                                                                                    HdlValueId: instr_req_o
                                                                                    HdlValueInt: 1
                                                                            HdlOp: ASSIGN
                                                                                list: ops
                                                                                    HdlValueId: instr_addr_o
                                                                                    HdlOp: ADD
                                                                                        list: ops
                                                                                            HdlValueId: current_address
                                                                                            HdlValueInt: 10
                                                                            HdlOp: ASSIGN
                                                                                list: ops
                                                                                    HdlValueId: update_current_address
                                                                                    HdlValueInt: 1
                                                                            HdlOp: ASSIGN
                                                                                list: ops
                                                                                    HdlValueId: pointer_ns
                                                                                    HdlValueInt: 0
                                                                            HdlStmIf
                                                                                HdlValueId: instr_gnt_i
                                                                                HdlOp: ASSIGN
                                                                                    list: ops
                                                                                        HdlValueId: NS
                                                                                        HdlValueId: WAIT_RVALID
                                                                                list: elifs
                                                                                HdlOp: ASSIGN
                                                                                    list: ops
                                                                                        HdlValueId: NS
                                                                                        HdlValueId: WAIT_GNT
                                                                    list: elifs
                                                                    HdlStmBlock: SEQ
                                                                        list: body
                                                                            HdlOp: ASSIGN
                                                                                list: ops
                                                                                    HdlValueId: pointer_ns
                                                                                    HdlOp: ADD
                                                                                        list: ops
                                                                                            HdlValueId: pointer_cs
                                                                                            HdlValueInt: 1
                                                                            HdlOp: ASSIGN
                                                                                list: ops
                                                                                    HdlValueId: NS
                                                                                    HdlValueId: VALID_L0
                                                        list: elifs
                                                        HdlStmBlock: SEQ
                                                            list: body
                                                                HdlOp: ASSIGN
                                                                    list: ops
                                                                        HdlValueId: NS
                                                                        HdlValueId: VALID_L0
                            tuple
                                HdlValueId: WAIT_GNT
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlStmIf
                                            HdlValueId: branch_i
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: instr_req_o
                                                            HdlValueInt: 1
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: instr_addr_o
                                                            HdlOp: CONCAT
                                                                list: ops
                                                                    HdlOp: INDEX
                                                                        list: ops
                                                                            HdlValueId: addr_i
                                                                            HdlOp: DOWNTO
                                                                                list: ops
                                                                                    HdlValueInt: 31
                                                                                    HdlValueInt: 4
                                                                    HdlValueInt: 0000
                                                    HdlStmIf
                                                        HdlValueId: instr_gnt_i
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: NS
                                                                HdlValueId: WAIT_RVALID
                                                        list: elifs
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: NS
                                                                HdlValueId: WAIT_GNT
                                            list: elifs
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: instr_req_o
                                                            HdlValueInt: 1
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: instr_addr_o
                                                            HdlValueId: current_address
                                                    HdlStmIf
                                                        HdlValueId: instr_gnt_i
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: NS
                                                                HdlValueId: WAIT_RVALID
                                                        list: elifs
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: NS
                                                                HdlValueId: WAIT_GNT
                            tuple
                                HdlValueId: WAIT_ABORTED
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: clear_buffer
                                                HdlValueInt: 1
                                        HdlStmIf
                                            HdlValueId: instr_rvalid_i
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: instr_req_o
                                                            HdlValueInt: 1
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: instr_addr_o
                                                            HdlValueId: current_address
                                                    HdlStmIf
                                                        HdlValueId: instr_gnt_i
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: NS
                                                                HdlValueId: WAIT_RVALID
                                                        list: elifs
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: NS
                                                                HdlValueId: WAIT_GNT
                                            list: elifs
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: NS
                                                            HdlValueId: WAIT_ABORTED
                        HdlStmBlock: SEQ
                            list: body
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: NS
                                        HdlValueId: EMPTY
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: clear_buffer
                                        HdlValueInt: 1
            HdlStmProcessTriggerConstrain: COMB
        HdlStmProcess
            list: sensitivity
                HdlOp: RISING
                    list: ops
                        HdlValueId: clk
                HdlOp: FALLING
                    list: ops
                        HdlValueId: rst_n
            HdlStmBlock: SEQ
                list: body
                    HdlStmIf
                        HdlOp: EQ
                            list: ops
                                HdlValueId: rst_n
                                HdlValueInt: 0
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmAssign
                                    HdlValueInt: 0
                                    HdlValueId: valid_L0_buffer
                                HdlStmAssign
                                    HdlValueInt: 0
                                    HdlValueId: L0_buffer
                                HdlStmAssign
                                    HdlValueInt: 0
                                    HdlValueId: previous_chunk
                                HdlStmAssign
                                    HdlValueInt: 0
                                    HdlValueId: valid_previous_chunk
                        list: elifs
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmIf
                                    HdlOp: OR_LOG
                                        list: ops
                                            HdlValueId: branch_i
                                            HdlValueId: clear_buffer
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmAssign
                                                HdlValueInt: 0
                                                HdlValueId: valid_L0_buffer
                                            HdlStmAssign
                                                HdlValueInt: 0
                                                HdlValueId: valid_previous_chunk
                                    list: elifs
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmIf
                                                HdlValueId: instr_rvalid_i
                                                HdlStmBlock: SEQ
                                                    list: body
                                                        HdlStmAssign
                                                            HdlValueId: instr_rdata_i
                                                            HdlValueId: L0_buffer
                                                        HdlStmAssign
                                                            HdlValueInt: 1
                                                            HdlValueId: valid_L0_buffer
                                                        HdlStmIf
                                                            HdlValueId: valid_L0_buffer
                                                            HdlStmBlock: SEQ
                                                                list: body
                                                                    HdlStmAssign
                                                                        HdlValueInt: 1
                                                                        HdlValueId: valid_previous_chunk
                                                                    HdlStmAssign
                                                                        HdlOp: INDEX
                                                                            list: ops
                                                                                HdlOp: INDEX
                                                                                    list: ops
                                                                                        HdlValueId: L0_buffer
                                                                                        HdlValueInt: 3
                                                                                HdlOp: DOWNTO
                                                                                    list: ops
                                                                                        HdlValueInt: 31
                                                                                        HdlValueInt: 16
                                                                        HdlValueId: previous_chunk
                                                            list: elifs
                                                list: elifs
            HdlStmProcessTriggerConstrain: FF

MOV HdlStmCase@@CS to body
HdlStmCase: CS
    HdlStmCaseType: CASE
    HdlValueId: CS
    list: cases
        tuple
            HdlValueId: EMPTY
            HdlStmBlock: SEQ
                list: body
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: instr_req_o
                            HdlValueId: branch_i
                    HdlStmIf
                        HdlValueId: branch_i
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmIf
                                    HdlValueId: instr_gnt_i
                                    HdlOp: ASSIGN
                                        list: ops
                                            HdlValueId: NS
                                            HdlValueId: WAIT_RVALID
                                    list: elifs
                                    HdlOp: ASSIGN
                                        list: ops
                                            HdlValueId: NS
                                            HdlValueId: WAIT_GNT
                        list: elifs
                        HdlStmBlock: SEQ
                            list: body
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: NS
                                        HdlValueId: EMPTY
        tuple
            HdlValueId: WAIT_RVALID
            HdlStmBlock: SEQ
                list: body
                    HdlStmIf
                        HdlValueId: branch_i
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmIf
                                    HdlValueId: instr_rvalid_i
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlOp: ASSIGN
                                                list: ops
                                                    HdlValueId: instr_req_o
                                                    HdlValueInt: 1
                                            HdlOp: ASSIGN
                                                list: ops
                                                    HdlValueId: instr_addr_o
                                                    HdlOp: CONCAT
                                                        list: ops
                                                            HdlOp: INDEX
                                                                list: ops
                                                                    HdlValueId: addr_i
                                                                    HdlOp: DOWNTO
                                                                        list: ops
                                                                            HdlValueInt: 31
                                                                            HdlValueInt: 4
                                                            HdlValueInt: 0000
                                            HdlStmIf
                                                HdlValueId: instr_gnt_i
                                                HdlOp: ASSIGN
                                                    list: ops
                                                        HdlValueId: NS
                                                        HdlValueId: WAIT_RVALID
                                                list: elifs
                                                HdlOp: ASSIGN
                                                    list: ops
                                                        HdlValueId: NS
                                                        HdlValueId: WAIT_GNT
                                    list: elifs
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlOp: ASSIGN
                                                list: ops
                                                    HdlValueId: NS
                                                    HdlValueId: WAIT_ABORTED
                        list: elifs
                        HdlStmBlock: SEQ
                            list: body
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: valid_o
                                        HdlValueId: instr_rvalid_i
                                HdlStmCase: pointer_cs
                                    HdlStmCaseType: CASE
                                    HdlValueId: pointer_cs
                                    list: cases
                                        tuple
                                            HdlValueInt: 00
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: unaligned_rdata_o
                                                            HdlOp: CONCAT
                                                                list: ops
                                                                    HdlOp: INDEX
                                                                        list: ops
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlValueId: instr_rdata_i
                                                                                    HdlValueInt: 0
                                                                            HdlOp: DOWNTO
                                                                                list: ops
                                                                                    HdlValueInt: 15
                                                                                    HdlValueInt: 0
                                                                    HdlOp: INDEX
                                                                        list: ops
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlValueId: L0_buffer
                                                                                    HdlValueInt: 3
                                                                            HdlOp: DOWNTO
                                                                                list: ops
                                                                                    HdlValueInt: 31
                                                                                    HdlValueInt: 16
                                                    HdlStmIf
                                                        HdlValueId: valid_L0_buffer
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: unaligned_valid_o
                                                                HdlValueId: instr_rvalid_i
                                                        list: elifs
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: unaligned_valid_o
                                                                HdlValueInt: 0
                                        tuple
                                            HdlValueInt: 01
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: unaligned_rdata_o
                                                            HdlOp: CONCAT
                                                                list: ops
                                                                    HdlOp: INDEX
                                                                        list: ops
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlValueId: instr_rdata_i
                                                                                    HdlValueInt: 1
                                                                            HdlOp: DOWNTO
                                                                                list: ops
                                                                                    HdlValueInt: 15
                                                                                    HdlValueInt: 0
                                                                    HdlOp: INDEX
                                                                        list: ops
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlValueId: instr_rdata_i
                                                                                    HdlValueInt: 0
                                                                            HdlOp: DOWNTO
                                                                                list: ops
                                                                                    HdlValueInt: 31
                                                                                    HdlValueInt: 16
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: unaligned_valid_o
                                                            HdlValueId: instr_rvalid_i
                                        tuple
                                            HdlValueInt: 10
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: unaligned_rdata_o
                                                            HdlOp: CONCAT
                                                                list: ops
                                                                    HdlOp: INDEX
                                                                        list: ops
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlValueId: instr_rdata_i
                                                                                    HdlValueInt: 2
                                                                            HdlOp: DOWNTO
                                                                                list: ops
                                                                                    HdlValueInt: 15
                                                                                    HdlValueInt: 0
                                                                    HdlOp: INDEX
                                                                        list: ops
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlValueId: instr_rdata_i
                                                                                    HdlValueInt: 1
                                                                            HdlOp: DOWNTO
                                                                                list: ops
                                                                                    HdlValueInt: 31
                                                                                    HdlValueInt: 16
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: unaligned_valid_o
                                                            HdlValueId: instr_rvalid_i
                                        tuple
                                            HdlValueInt: 11
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: unaligned_rdata_o
                                                            HdlOp: CONCAT
                                                                list: ops
                                                                    HdlOp: INDEX
                                                                        list: ops
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlValueId: instr_rdata_i
                                                                                    HdlValueInt: 3
                                                                            HdlOp: DOWNTO
                                                                                list: ops
                                                                                    HdlValueInt: 15
                                                                                    HdlValueInt: 0
                                                                    HdlOp: INDEX
                                                                        list: ops
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlValueId: instr_rdata_i
                                                                                    HdlValueInt: 2
                                                                            HdlOp: DOWNTO
                                                                                list: ops
                                                                                    HdlValueInt: 31
                                                                                    HdlValueInt: 16
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: unaligned_valid_o
                                                            HdlValueId: instr_rvalid_i
                                HdlStmIf
                                    HdlValueId: instr_rvalid_i
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmIf
                                                HdlOp: AND_UNARY
                                                    list: ops
                                                        HdlValueId: pointer_cs
                                                HdlStmBlock: SEQ
                                                    list: body
                                                        HdlStmIf
                                                            HdlValueId: ready_i
                                                            HdlStmBlock: SEQ
                                                                list: body
                                                                    HdlOp: ASSIGN
                                                                        list: ops
                                                                            HdlValueId: instr_req_o
                                                                            HdlValueInt: 1
                                                                    HdlOp: ASSIGN
                                                                        list: ops
                                                                            HdlValueId: instr_addr_o
                                                                            HdlOp: ADD
                                                                                list: ops
                                                                                    HdlValueId: current_address
                                                                                    HdlValueInt: 10
                                                                    HdlOp: ASSIGN
                                                                        list: ops
                                                                            HdlValueId: pointer_ns
                                                                            HdlValueInt: 0
                                                                    HdlOp: ASSIGN
                                                                        list: ops
                                                                            HdlValueId: update_current_address
                                                                            HdlValueInt: 1
                                                                    HdlStmIf
                                                                        HdlValueId: instr_gnt_i
                                                                        HdlOp: ASSIGN
                                                                            list: ops
                                                                                HdlValueId: NS
                                                                                HdlValueId: WAIT_RVALID
                                                                        list: elifs
                                                                        HdlOp: ASSIGN
                                                                            list: ops
                                                                                HdlValueId: NS
                                                                                HdlValueId: WAIT_GNT
                                                            list: elifs
                                                            HdlStmBlock: SEQ
                                                                list: body
                                                                    HdlOp: ASSIGN
                                                                        list: ops
                                                                            HdlValueId: NS
                                                                            HdlValueId: VALID_L0
                                                list: elifs
                                                HdlStmBlock: SEQ
                                                    list: body
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: NS
                                                                HdlValueId: VALID_L0
                                                        HdlStmIf
                                                            HdlValueId: ready_i
                                                            HdlOp: ASSIGN
                                                                list: ops
                                                                    HdlValueId: pointer_ns
                                                                    HdlOp: ADD
                                                                        list: ops
                                                                            HdlValueId: pointer_cs
                                                                            HdlValueInt: 1
                                                            list: elifs
                                                            HdlOp: ASSIGN
                                                                list: ops
                                                                    HdlValueId: pointer_ns
                                                                    HdlValueId: pointer_cs
                                    list: elifs
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlOp: ASSIGN
                                                list: ops
                                                    HdlValueId: NS
                                                    HdlValueId: WAIT_RVALID
        tuple
            HdlValueId: VALID_L0
            HdlStmBlock: SEQ
                list: body
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: valid_o
                            HdlValueInt: 1
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: rdata_o
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: L0_buffer
                                    HdlValueId: pointer_cs
                    HdlStmCase: pointer_cs
                        HdlStmCaseType: CASE
                        HdlValueId: pointer_cs
                        list: cases
                            tuple
                                HdlValueInt: 00
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: unaligned_rdata_o
                                                HdlOp: CONCAT
                                                    list: ops
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlOp: INDEX
                                                                    list: ops
                                                                        HdlValueId: L0_buffer
                                                                        HdlValueInt: 0
                                                                HdlOp: DOWNTO
                                                                    list: ops
                                                                        HdlValueInt: 15
                                                                        HdlValueInt: 0
                                                        HdlValueId: previous_chunk
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: unaligned_valid_o
                                                HdlValueId: valid_previous_chunk
                            tuple
                                HdlValueInt: 01
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: unaligned_rdata_o
                                                HdlOp: CONCAT
                                                    list: ops
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlOp: INDEX
                                                                    list: ops
                                                                        HdlValueId: L0_buffer
                                                                        HdlValueInt: 1
                                                                HdlOp: DOWNTO
                                                                    list: ops
                                                                        HdlValueInt: 15
                                                                        HdlValueInt: 0
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlOp: INDEX
                                                                    list: ops
                                                                        HdlValueId: L0_buffer
                                                                        HdlValueInt: 0
                                                                HdlOp: DOWNTO
                                                                    list: ops
                                                                        HdlValueInt: 31
                                                                        HdlValueInt: 16
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: unaligned_valid_o
                                                HdlValueInt: 1
                            tuple
                                HdlValueInt: 10
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: unaligned_rdata_o
                                                HdlOp: CONCAT
                                                    list: ops
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlOp: INDEX
                                                                    list: ops
                                                                        HdlValueId: L0_buffer
                                                                        HdlValueInt: 2
                                                                HdlOp: DOWNTO
                                                                    list: ops
                                                                        HdlValueInt: 15
                                                                        HdlValueInt: 0
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlOp: INDEX
                                                                    list: ops
                                                                        HdlValueId: L0_buffer
                                                                        HdlValueInt: 1
                                                                HdlOp: DOWNTO
                                                                    list: ops
                                                                        HdlValueInt: 31
                                                                        HdlValueInt: 16
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: unaligned_valid_o
                                                HdlValueInt: 1
                            tuple
                                HdlValueInt: 11
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: unaligned_rdata_o
                                                HdlOp: CONCAT
                                                    list: ops
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlOp: INDEX
                                                                    list: ops
                                                                        HdlValueId: L0_buffer
                                                                        HdlValueInt: 3
                                                                HdlOp: DOWNTO
                                                                    list: ops
                                                                        HdlValueInt: 15
                                                                        HdlValueInt: 0
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlOp: INDEX
                                                                    list: ops
                                                                        HdlValueId: L0_buffer
                                                                        HdlValueInt: 2
                                                                HdlOp: DOWNTO
                                                                    list: ops
                                                                        HdlValueInt: 31
                                                                        HdlValueInt: 16
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: unaligned_valid_o
                                                HdlValueInt: 1
                    HdlStmIf
                        HdlValueId: branch_i
                        HdlStmBlock: SEQ
                            list: body
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: instr_req_o
                                        HdlValueInt: 1
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: instr_addr_o
                                        HdlOp: CONCAT
                                            list: ops
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: addr_i
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 31
                                                                HdlValueInt: 4
                                                HdlValueInt: 0000
                                HdlStmIf
                                    HdlValueId: instr_gnt_i
                                    HdlOp: ASSIGN
                                        list: ops
                                            HdlValueId: NS
                                            HdlValueId: WAIT_RVALID
                                    list: elifs
                                    HdlOp: ASSIGN
                                        list: ops
                                            HdlValueId: NS
                                            HdlValueId: WAIT_GNT
                        list: elifs
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmIf
                                    HdlValueId: ready_i
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmIf
                                                HdlOp: AND_UNARY
                                                    list: ops
                                                        HdlValueId: pointer_cs
                                                HdlStmBlock: SEQ
                                                    list: body
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: instr_req_o
                                                                HdlValueInt: 1
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: instr_addr_o
                                                                HdlOp: ADD
                                                                    list: ops
                                                                        HdlValueId: current_address
                                                                        HdlValueInt: 10
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: update_current_address
                                                                HdlValueInt: 1
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: pointer_ns
                                                                HdlValueInt: 0
                                                        HdlStmIf
                                                            HdlValueId: instr_gnt_i
                                                            HdlOp: ASSIGN
                                                                list: ops
                                                                    HdlValueId: NS
                                                                    HdlValueId: WAIT_RVALID
                                                            list: elifs
                                                            HdlOp: ASSIGN
                                                                list: ops
                                                                    HdlValueId: NS
                                                                    HdlValueId: WAIT_GNT
                                                list: elifs
                                                HdlStmBlock: SEQ
                                                    list: body
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: pointer_ns
                                                                HdlOp: ADD
                                                                    list: ops
                                                                        HdlValueId: pointer_cs
                                                                        HdlValueInt: 1
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: NS
                                                                HdlValueId: VALID_L0
                                    list: elifs
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlOp: ASSIGN
                                                list: ops
                                                    HdlValueId: NS
                                                    HdlValueId: VALID_L0
        tuple
            HdlValueId: WAIT_GNT
            HdlStmBlock: SEQ
                list: body
                    HdlStmIf
                        HdlValueId: branch_i
                        HdlStmBlock: SEQ
                            list: body
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: instr_req_o
                                        HdlValueInt: 1
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: instr_addr_o
                                        HdlOp: CONCAT
                                            list: ops
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: addr_i
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 31
                                                                HdlValueInt: 4
                                                HdlValueInt: 0000
                                HdlStmIf
                                    HdlValueId: instr_gnt_i
                                    HdlOp: ASSIGN
                                        list: ops
                                            HdlValueId: NS
                                            HdlValueId: WAIT_RVALID
                                    list: elifs
                                    HdlOp: ASSIGN
                                        list: ops
                                            HdlValueId: NS
                                            HdlValueId: WAIT_GNT
                        list: elifs
                        HdlStmBlock: SEQ
                            list: body
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: instr_req_o
                                        HdlValueInt: 1
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: instr_addr_o
                                        HdlValueId: current_address
                                HdlStmIf
                                    HdlValueId: instr_gnt_i
                                    HdlOp: ASSIGN
                                        list: ops
                                            HdlValueId: NS
                                            HdlValueId: WAIT_RVALID
                                    list: elifs
                                    HdlOp: ASSIGN
                                        list: ops
                                            HdlValueId: NS
                                            HdlValueId: WAIT_GNT
        tuple
            HdlValueId: WAIT_ABORTED
            HdlStmBlock: SEQ
                list: body
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: clear_buffer
                            HdlValueInt: 1
                    HdlStmIf
                        HdlValueId: instr_rvalid_i
                        HdlStmBlock: SEQ
                            list: body
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: instr_req_o
                                        HdlValueInt: 1
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: instr_addr_o
                                        HdlValueId: current_address
                                HdlStmIf
                                    HdlValueId: instr_gnt_i
                                    HdlOp: ASSIGN
                                        list: ops
                                            HdlValueId: NS
                                            HdlValueId: WAIT_RVALID
                                    list: elifs
                                    HdlOp: ASSIGN
                                        list: ops
                                            HdlValueId: NS
                                            HdlValueId: WAIT_GNT
                        list: elifs
                        HdlStmBlock: SEQ
                            list: body
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: NS
                                        HdlValueId: WAIT_ABORTED
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: NS
                    HdlValueId: EMPTY
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: clear_buffer
                    HdlValueInt: 1

UPD HdlStmCase@@CS to CS
    INS list@@cases to CS
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmCase@@pointer_cs to pointer_cs
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to EQ
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: unaligned_valid_o
                HdlValueId: valid_previous_chunk
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@unaligned_valid_o to CS
            UPD HdlValueId@@valid_previous_chunk to VALID_L0
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: unaligned_rdata_o
                HdlOp: CONCAT
                    list: ops
                        HdlOp: INDEX
                            list: ops
                                HdlOp: INDEX
                                    list: ops
                                        HdlValueId: L0_buffer
                                        HdlValueInt: 0
                                HdlOp: DOWNTO
                                    list: ops
                                        HdlValueInt: 15
                                        HdlValueInt: 0
                        HdlValueId: previous_chunk
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@unaligned_rdata_o to addr_o
            MOV HdlOp@@CONCAT to ops
            HdlOp: CONCAT
                list: ops
                    HdlOp: INDEX
                        list: ops
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: L0_buffer
                                    HdlValueInt: 0
                            HdlOp: DOWNTO
                                list: ops
                                    HdlValueInt: 15
                                    HdlValueInt: 0
                    HdlValueId: previous_chunk
            UPD HdlOp@@CONCAT to CONCAT
                UPD HdlValueId@@previous_chunk to pointer_cs
                UPD HdlOp@@INDEX to INDEX
                    UPD HdlOp@@INDEX to INDEX
                        UPD HdlValueId@@L0_buffer to current_address
                        MOV HdlValueId@@L0_buffer to ops
                        HdlValueId: L0_buffer
                        DEL HdlValueInt@@0 from ops
                        DEL list@@ops from INDEX
                    UPD HdlOp@@DOWNTO to DOWNTO
                        UPD HdlValueInt@@15 to 31
                        UPD HdlValueInt@@0 to 4
                    DEL HdlOp@@INDEX from ops
        DEL list@@body from SEQ
    UPD HdlValueInt@@01 to 00
    UPD HdlValueInt@@10 to 01
    UPD HdlValueInt@@11 to 10
    MOV HdlValueInt@@00 to 
    HdlValueInt: 00
    MOV HdlValueId@@pointer_cs to pointer_cs
    HdlValueId: pointer_cs
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases

UPD HdlStmIf@@ to 
    MOV list@@elifs to 
    list: elifs
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlStmIf
                HdlValueId: ready_i
                HdlStmBlock: SEQ
                    list: body
                        HdlStmIf
                            HdlOp: AND_UNARY
                                list: ops
                                    HdlValueId: pointer_cs
                            HdlStmBlock: SEQ
                                list: body
                                    HdlOp: ASSIGN
                                        list: ops
                                            HdlValueId: instr_req_o
                                            HdlValueInt: 1
                                    HdlOp: ASSIGN
                                        list: ops
                                            HdlValueId: instr_addr_o
                                            HdlOp: ADD
                                                list: ops
                                                    HdlValueId: current_address
                                                    HdlValueInt: 10
                                    HdlOp: ASSIGN
                                        list: ops
                                            HdlValueId: update_current_address
                                            HdlValueInt: 1
                                    HdlOp: ASSIGN
                                        list: ops
                                            HdlValueId: pointer_ns
                                            HdlValueInt: 0
                                    HdlStmIf
                                        HdlValueId: instr_gnt_i
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: NS
                                                HdlValueId: WAIT_RVALID
                                        list: elifs
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: NS
                                                HdlValueId: WAIT_GNT
                            list: elifs
                            HdlStmBlock: SEQ
                                list: body
                                    HdlOp: ASSIGN
                                        list: ops
                                            HdlValueId: pointer_ns
                                            HdlOp: ADD
                                                list: ops
                                                    HdlValueId: pointer_cs
                                                    HdlValueInt: 1
                                    HdlOp: ASSIGN
                                        list: ops
                                            HdlValueId: NS
                                            HdlValueId: VALID_L0
                list: elifs
                HdlStmBlock: SEQ
                    list: body
                        HdlOp: ASSIGN
                            list: ops
                                HdlValueId: NS
                                HdlValueId: VALID_L0

UPD HdlStmCase@@pointer_cs to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['addr_o',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '3'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '2'}]}]} 

MOV HdlStmIf@@ to body
HdlStmIf
    HdlValueId: branch_i
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: instr_req_o
                    HdlValueInt: 1
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: instr_addr_o
                    HdlOp: CONCAT
                        list: ops
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: addr_i
                                    HdlOp: DOWNTO
                                        list: ops
                                            HdlValueInt: 31
                                            HdlValueInt: 4
                            HdlValueInt: 0000
            HdlStmIf
                HdlValueId: instr_gnt_i
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: NS
                        HdlValueId: WAIT_RVALID
                list: elifs
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: NS
                        HdlValueId: WAIT_GNT
    list: elifs
    HdlStmBlock: SEQ
        list: body
            HdlStmIf
                HdlValueId: ready_i
                HdlStmBlock: SEQ
                    list: body
                        HdlStmIf
                            HdlOp: AND_UNARY
                                list: ops
                                    HdlValueId: pointer_cs
                            HdlStmBlock: SEQ
                                list: body
                                    HdlOp: ASSIGN
                                        list: ops
                                            HdlValueId: instr_req_o
                                            HdlValueInt: 1
                                    HdlOp: ASSIGN
                                        list: ops
                                            HdlValueId: instr_addr_o
                                            HdlOp: ADD
                                                list: ops
                                                    HdlValueId: current_address
                                                    HdlValueInt: 10
                                    HdlOp: ASSIGN
                                        list: ops
                                            HdlValueId: update_current_address
                                            HdlValueInt: 1
                                    HdlOp: ASSIGN
                                        list: ops
                                            HdlValueId: pointer_ns
                                            HdlValueInt: 0
                                    HdlStmIf
                                        HdlValueId: instr_gnt_i
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: NS
                                                HdlValueId: WAIT_RVALID
                                        list: elifs
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: NS
                                                HdlValueId: WAIT_GNT
                            list: elifs
                            HdlStmBlock: SEQ
                                list: body
                                    HdlOp: ASSIGN
                                        list: ops
                                            HdlValueId: pointer_ns
                                            HdlOp: ADD
                                                list: ops
                                                    HdlValueId: pointer_cs
                                                    HdlValueInt: 1
                                    HdlOp: ASSIGN
                                        list: ops
                                            HdlValueId: NS
                                            HdlValueId: VALID_L0
                list: elifs
                HdlStmBlock: SEQ
                    list: body
                        HdlOp: ASSIGN
                            list: ops
                                HdlValueId: NS
                                HdlValueId: VALID_L0


CommitId: cc90e854717023d3dd6bf126ba5e1cd7a9ea5db4
Fix RVC handling in prefetch_L0_buffer
--- a/prefetch_L0_buffer.sv
+++ b/prefetch_L0_buffer.sv
@@ -310,7 +280,6 @@ module prefetch_L0_buffer
          end
       end //~WAIT_ABORTED
 
-
       default:
       begin
          NS = EMPTY;

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD list@@body to objs
        MOV list@@body to SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: valid_o
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: addr_o
                    HdlOp: ADD
                        list: ops
                            HdlValueId: current_address
                            HdlOp: SLL
                                list: ops
                                    HdlValueId: pointer_cs
                                    HdlValueInt: 2
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: pointer_ns
                    HdlValueId: pointer_cs
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: instr_req_o
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: instr_addr_o
                    HdlOp: TERNARY
                        list: ops
                            HdlValueId: branch_i
                            HdlValueId: addr_i
                            HdlOp: ADD
                                list: ops
                                    HdlValueId: current_address
                                    HdlValueInt: 10
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: update_current_address
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: rdata_o
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: instr_rdata_i
                            HdlValueId: pointer_cs
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: clear_buffer
                    HdlValueInt: 0
            HdlStmCase: {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops':}]} 
                HdlStmCaseType: CASE
                HdlOp: INDEX
                    list: ops
                        HdlValueId: addr_o
                        HdlOp: DOWNTO
                            list: ops
                                HdlValueInt: 3
                                HdlValueInt: 2
                list: cases
                    tuple
                        HdlValueInt: 00
                        HdlStmBlock: SEQ
                            list: body
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: unaligned_rdata_o
                                        HdlOp: CONCAT
                                            list: ops
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlValueId: L0_buffer
                                                                HdlValueInt: 0
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 15
                                                                HdlValueInt: 0
                                                HdlValueId: previous_chunk
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: unaligned_valid_o
                                        HdlValueId: valid_previous_chunk
                    tuple
                        HdlValueInt: 01
                        HdlStmBlock: SEQ
                            list: body
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: unaligned_rdata_o
                                        HdlOp: CONCAT
                                            list: ops
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlValueId: L0_buffer
                                                                HdlValueInt: 1
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 15
                                                                HdlValueInt: 0
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlValueId: L0_buffer
                                                                HdlValueInt: 0
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 31
                                                                HdlValueInt: 16
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: unaligned_valid_o
                                        HdlValueId: valid_o
                    tuple
                        HdlValueInt: 10
                        HdlStmBlock: SEQ
                            list: body
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: unaligned_rdata_o
                                        HdlOp: CONCAT
                                            list: ops
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlValueId: L0_buffer
                                                                HdlValueInt: 2
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 15
                                                                HdlValueInt: 0
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlValueId: L0_buffer
                                                                HdlValueInt: 1
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 31
                                                                HdlValueInt: 16
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: unaligned_valid_o
                                        HdlValueId: valid_o
                    tuple
                        HdlValueInt: 11
                        HdlStmBlock: SEQ
                            list: body
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: unaligned_rdata_o
                                        HdlOp: CONCAT
                                            list: ops
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlValueId: L0_buffer
                                                                HdlValueInt: 3
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 15
                                                                HdlValueInt: 0
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlValueId: L0_buffer
                                                                HdlValueInt: 2
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 31
                                                                HdlValueInt: 16
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: unaligned_valid_o
                                        HdlValueId: valid_o
            HdlStmCase: CS
                HdlStmCaseType: CASE
                HdlValueId: CS
                list: cases
                    tuple
                        HdlValueId: EMPTY
                        HdlStmBlock: SEQ
                            list: body
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: instr_req_o
                                        HdlValueId: branch_i
                                HdlStmIf
                                    HdlValueId: branch_i
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmIf
                                                HdlValueId: instr_gnt_i
                                                HdlOp: ASSIGN
                                                    list: ops
                                                        HdlValueId: NS
                                                        HdlValueId: WAIT_RVALID
                                                list: elifs
                                                HdlOp: ASSIGN
                                                    list: ops
                                                        HdlValueId: NS
                                                        HdlValueId: WAIT_GNT
                                    list: elifs
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlOp: ASSIGN
                                                list: ops
                                                    HdlValueId: NS
                                                    HdlValueId: EMPTY
                    tuple
                        HdlValueId: WAIT_RVALID
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmIf
                                    HdlValueId: branch_i
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmIf
                                                HdlValueId: instr_rvalid_i
                                                HdlStmBlock: SEQ
                                                    list: body
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: instr_req_o
                                                                HdlValueInt: 1
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: instr_addr_o
                                                                HdlOp: CONCAT
                                                                    list: ops
                                                                        HdlOp: INDEX
                                                                            list: ops
                                                                                HdlValueId: addr_i
                                                                                HdlOp: DOWNTO
                                                                                    list: ops
                                                                                        HdlValueInt: 31
                                                                                        HdlValueInt: 4
                                                                        HdlValueInt: 0000
                                                        HdlStmIf
                                                            HdlValueId: instr_gnt_i
                                                            HdlOp: ASSIGN
                                                                list: ops
                                                                    HdlValueId: NS
                                                                    HdlValueId: WAIT_RVALID
                                                            list: elifs
                                                            HdlOp: ASSIGN
                                                                list: ops
                                                                    HdlValueId: NS
                                                                    HdlValueId: WAIT_GNT
                                                list: elifs
                                                HdlStmBlock: SEQ
                                                    list: body
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: NS
                                                                HdlValueId: WAIT_ABORTED
                                    list: elifs
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlOp: ASSIGN
                                                list: ops
                                                    HdlValueId: valid_o
                                                    HdlValueId: instr_rvalid_i
                                            HdlStmCase: pointer_cs
                                                HdlStmCaseType: CASE
                                                HdlValueId: pointer_cs
                                                list: cases
                                                    tuple
                                                        HdlValueInt: 00
                                                        HdlStmBlock: SEQ
                                                            list: body
                                                                HdlOp: ASSIGN
                                                                    list: ops
                                                                        HdlValueId: unaligned_rdata_o
                                                                        HdlOp: CONCAT
                                                                            list: ops
                                                                                HdlOp: INDEX
                                                                                    list: ops
                                                                                        HdlOp: INDEX
                                                                                            list: ops
                                                                                                HdlValueId: instr_rdata_i
                                                                                                HdlValueInt: 0
                                                                                        HdlOp: DOWNTO
                                                                                            list: ops
                                                                                                HdlValueInt: 15
                                                                                                HdlValueInt: 0
                                                                                HdlOp: INDEX
                                                                                    list: ops
                                                                                        HdlOp: INDEX
                                                                                            list: ops
                                                                                                HdlValueId: L0_buffer
                                                                                                HdlValueInt: 3
                                                                                        HdlOp: DOWNTO
                                                                                            list: ops
                                                                                                HdlValueInt: 31
                                                                                                HdlValueInt: 16
                                                                HdlStmIf
                                                                    HdlValueId: valid_L0_buffer
                                                                    HdlOp: ASSIGN
                                                                        list: ops
                                                                            HdlValueId: unaligned_valid_o
                                                                            HdlValueId: instr_rvalid_i
                                                                    list: elifs
                                                                    HdlOp: ASSIGN
                                                                        list: ops
                                                                            HdlValueId: unaligned_valid_o
                                                                            HdlValueInt: 0
                                                    tuple
                                                        HdlValueInt: 01
                                                        HdlStmBlock: SEQ
                                                            list: body
                                                                HdlOp: ASSIGN
                                                                    list: ops
                                                                        HdlValueId: unaligned_rdata_o
                                                                        HdlOp: CONCAT
                                                                            list: ops
                                                                                HdlOp: INDEX
                                                                                    list: ops
                                                                                        HdlOp: INDEX
                                                                                            list: ops
                                                                                                HdlValueId: instr_rdata_i
                                                                                                HdlValueInt: 1
                                                                                        HdlOp: DOWNTO
                                                                                            list: ops
                                                                                                HdlValueInt: 15
                                                                                                HdlValueInt: 0
                                                                                HdlOp: INDEX
                                                                                    list: ops
                                                                                        HdlOp: INDEX
                                                                                            list: ops
                                                                                                HdlValueId: instr_rdata_i
                                                                                                HdlValueInt: 0
                                                                                        HdlOp: DOWNTO
                                                                                            list: ops
                                                                                                HdlValueInt: 31
                                                                                                HdlValueInt: 16
                                                                HdlOp: ASSIGN
                                                                    list: ops
                                                                        HdlValueId: unaligned_valid_o
                                                                        HdlValueId: instr_rvalid_i
                                                    tuple
                                                        HdlValueInt: 10
                                                        HdlStmBlock: SEQ
                                                            list: body
                                                                HdlOp: ASSIGN
                                                                    list: ops
                                                                        HdlValueId: unaligned_rdata_o
                                                                        HdlOp: CONCAT
                                                                            list: ops
                                                                                HdlOp: INDEX
                                                                                    list: ops
                                                                                        HdlOp: INDEX
                                                                                            list: ops
                                                                                                HdlValueId: instr_rdata_i
                                                                                                HdlValueInt: 2
                                                                                        HdlOp: DOWNTO
                                                                                            list: ops
                                                                                                HdlValueInt: 15
                                                                                                HdlValueInt: 0
                                                                                HdlOp: INDEX
                                                                                    list: ops
                                                                                        HdlOp: INDEX
                                                                                            list: ops
                                                                                                HdlValueId: instr_rdata_i
                                                                                                HdlValueInt: 1
                                                                                        HdlOp: DOWNTO
                                                                                            list: ops
                                                                                                HdlValueInt: 31
                                                                                                HdlValueInt: 16
                                                                HdlOp: ASSIGN
                                                                    list: ops
                                                                        HdlValueId: unaligned_valid_o
                                                                        HdlValueId: instr_rvalid_i
                                                    tuple
                                                        HdlValueInt: 11
                                                        HdlStmBlock: SEQ
                                                            list: body
                                                                HdlOp: ASSIGN
                                                                    list: ops
                                                                        HdlValueId: unaligned_rdata_o
                                                                        HdlOp: CONCAT
                                                                            list: ops
                                                                                HdlOp: INDEX
                                                                                    list: ops
                                                                                        HdlOp: INDEX
                                                                                            list: ops
                                                                                                HdlValueId: instr_rdata_i
                                                                                                HdlValueInt: 3
                                                                                        HdlOp: DOWNTO
                                                                                            list: ops
                                                                                                HdlValueInt: 15
                                                                                                HdlValueInt: 0
                                                                                HdlOp: INDEX
                                                                                    list: ops
                                                                                        HdlOp: INDEX
                                                                                            list: ops
                                                                                                HdlValueId: instr_rdata_i
                                                                                                HdlValueInt: 2
                                                                                        HdlOp: DOWNTO
                                                                                            list: ops
                                                                                                HdlValueInt: 31
                                                                                                HdlValueInt: 16
                                                                HdlOp: ASSIGN
                                                                    list: ops
                                                                        HdlValueId: unaligned_valid_o
                                                                        HdlValueId: instr_rvalid_i
                                            HdlStmIf
                                                HdlValueId: instr_rvalid_i
                                                HdlStmBlock: SEQ
                                                    list: body
                                                        HdlStmIf
                                                            HdlOp: AND_UNARY
                                                                list: ops
                                                                    HdlValueId: pointer_cs
                                                            HdlStmBlock: SEQ
                                                                list: body
                                                                    HdlStmIf
                                                                        HdlValueId: ready_i
                                                                        HdlStmBlock: SEQ
                                                                            list: body
                                                                                HdlOp: ASSIGN
                                                                                    list: ops
                                                                                        HdlValueId: instr_req_o
                                                                                        HdlValueInt: 1
                                                                                HdlOp: ASSIGN
                                                                                    list: ops
                                                                                        HdlValueId: instr_addr_o
                                                                                        HdlOp: ADD
                                                                                            list: ops
                                                                                                HdlValueId: current_address
                                                                                                HdlValueInt: 10
                                                                                HdlOp: ASSIGN
                                                                                    list: ops
                                                                                        HdlValueId: pointer_ns
                                                                                        HdlValueInt: 0
                                                                                HdlOp: ASSIGN
                                                                                    list: ops
                                                                                        HdlValueId: update_current_address
                                                                                        HdlValueInt: 1
                                                                                HdlStmIf
                                                                                    HdlValueId: instr_gnt_i
                                                                                    HdlOp: ASSIGN
                                                                                        list: ops
                                                                                            HdlValueId: NS
                                                                                            HdlValueId: WAIT_RVALID
                                                                                    list: elifs
                                                                                    HdlOp: ASSIGN
                                                                                        list: ops
                                                                                            HdlValueId: NS
                                                                                            HdlValueId: WAIT_GNT
                                                                        list: elifs
                                                                        HdlStmBlock: SEQ
                                                                            list: body
                                                                                HdlOp: ASSIGN
                                                                                    list: ops
                                                                                        HdlValueId: NS
                                                                                        HdlValueId: VALID_L0
                                                            list: elifs
                                                            HdlStmBlock: SEQ
                                                                list: body
                                                                    HdlOp: ASSIGN
                                                                        list: ops
                                                                            HdlValueId: NS
                                                                            HdlValueId: VALID_L0
                                                                    HdlStmIf
                                                                        HdlValueId: ready_i
                                                                        HdlOp: ASSIGN
                                                                            list: ops
                                                                                HdlValueId: pointer_ns
                                                                                HdlOp: ADD
                                                                                    list: ops
                                                                                        HdlValueId: pointer_cs
                                                                                        HdlValueInt: 1
                                                                        list: elifs
                                                                        HdlOp: ASSIGN
                                                                            list: ops
                                                                                HdlValueId: pointer_ns
                                                                                HdlValueId: pointer_cs
                                                list: elifs
                                                HdlStmBlock: SEQ
                                                    list: body
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: NS
                                                                HdlValueId: WAIT_RVALID
                    tuple
                        HdlValueId: VALID_L0
                        HdlStmBlock: SEQ
                            list: body
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: valid_o
                                        HdlValueInt: 1
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: rdata_o
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: L0_buffer
                                                HdlValueId: pointer_cs
                                HdlStmCase: pointer_cs
                                    HdlStmCaseType: CASE
                                    HdlValueId: pointer_cs
                                    list: cases
                                        tuple
                                            HdlValueInt: 00
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: unaligned_rdata_o
                                                            HdlOp: CONCAT
                                                                list: ops
                                                                    HdlOp: INDEX
                                                                        list: ops
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlValueId: L0_buffer
                                                                                    HdlValueInt: 0
                                                                            HdlOp: DOWNTO
                                                                                list: ops
                                                                                    HdlValueInt: 15
                                                                                    HdlValueInt: 0
                                                                    HdlValueId: previous_chunk
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: unaligned_valid_o
                                                            HdlValueId: valid_previous_chunk
                                        tuple
                                            HdlValueInt: 01
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: unaligned_rdata_o
                                                            HdlOp: CONCAT
                                                                list: ops
                                                                    HdlOp: INDEX
                                                                        list: ops
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlValueId: L0_buffer
                                                                                    HdlValueInt: 1
                                                                            HdlOp: DOWNTO
                                                                                list: ops
                                                                                    HdlValueInt: 15
                                                                                    HdlValueInt: 0
                                                                    HdlOp: INDEX
                                                                        list: ops
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlValueId: L0_buffer
                                                                                    HdlValueInt: 0
                                                                            HdlOp: DOWNTO
                                                                                list: ops
                                                                                    HdlValueInt: 31
                                                                                    HdlValueInt: 16
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: unaligned_valid_o
                                                            HdlValueInt: 1
                                        tuple
                                            HdlValueInt: 10
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: unaligned_rdata_o
                                                            HdlOp: CONCAT
                                                                list: ops
                                                                    HdlOp: INDEX
                                                                        list: ops
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlValueId: L0_buffer
                                                                                    HdlValueInt: 2
                                                                            HdlOp: DOWNTO
                                                                                list: ops
                                                                                    HdlValueInt: 15
                                                                                    HdlValueInt: 0
                                                                    HdlOp: INDEX
                                                                        list: ops
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlValueId: L0_buffer
                                                                                    HdlValueInt: 1
                                                                            HdlOp: DOWNTO
                                                                                list: ops
                                                                                    HdlValueInt: 31
                                                                                    HdlValueInt: 16
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: unaligned_valid_o
                                                            HdlValueInt: 1
                                        tuple
                                            HdlValueInt: 11
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: unaligned_rdata_o
                                                            HdlOp: CONCAT
                                                                list: ops
                                                                    HdlOp: INDEX
                                                                        list: ops
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlValueId: L0_buffer
                                                                                    HdlValueInt: 3
                                                                            HdlOp: DOWNTO
                                                                                list: ops
                                                                                    HdlValueInt: 15
                                                                                    HdlValueInt: 0
                                                                    HdlOp: INDEX
                                                                        list: ops
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlValueId: L0_buffer
                                                                                    HdlValueInt: 2
                                                                            HdlOp: DOWNTO
                                                                                list: ops
                                                                                    HdlValueInt: 31
                                                                                    HdlValueInt: 16
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: unaligned_valid_o
                                                            HdlValueInt: 1
                                HdlStmIf
                                    HdlValueId: branch_i
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlOp: ASSIGN
                                                list: ops
                                                    HdlValueId: instr_req_o
                                                    HdlValueInt: 1
                                            HdlOp: ASSIGN
                                                list: ops
                                                    HdlValueId: instr_addr_o
                                                    HdlOp: CONCAT
                                                        list: ops
                                                            HdlOp: INDEX
                                                                list: ops
                                                                    HdlValueId: addr_i
                                                                    HdlOp: DOWNTO
                                                                        list: ops
                                                                            HdlValueInt: 31
                                                                            HdlValueInt: 4
                                                            HdlValueInt: 0000
                                            HdlStmIf
                                                HdlValueId: instr_gnt_i
                                                HdlOp: ASSIGN
                                                    list: ops
                                                        HdlValueId: NS
                                                        HdlValueId: WAIT_RVALID
                                                list: elifs
                                                HdlOp: ASSIGN
                                                    list: ops
                                                        HdlValueId: NS
                                                        HdlValueId: WAIT_GNT
                                    list: elifs
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmIf
                                                HdlValueId: ready_i
                                                HdlStmBlock: SEQ
                                                    list: body
                                                        HdlStmIf
                                                            HdlOp: AND_UNARY
                                                                list: ops
                                                                    HdlValueId: pointer_cs
                                                            HdlStmBlock: SEQ
                                                                list: body
                                                                    HdlOp: ASSIGN
                                                                        list: ops
                                                                            HdlValueId: instr_req_o
                                                                            HdlValueInt: 1
                                                                    HdlOp: ASSIGN
                                                                        list: ops
                                                                            HdlValueId: instr_addr_o
                                                                            HdlOp: ADD
                                                                                list: ops
                                                                                    HdlValueId: current_address
                                                                                    HdlValueInt: 10
                                                                    HdlOp: ASSIGN
                                                                        list: ops
                                                                            HdlValueId: update_current_address
                                                                            HdlValueInt: 1
                                                                    HdlOp: ASSIGN
                                                                        list: ops
                                                                            HdlValueId: pointer_ns
                                                                            HdlValueInt: 0
                                                                    HdlStmIf
                                                                        HdlValueId: instr_gnt_i
                                                                        HdlOp: ASSIGN
                                                                            list: ops
                                                                                HdlValueId: NS
                                                                                HdlValueId: WAIT_RVALID
                                                                        list: elifs
                                                                        HdlOp: ASSIGN
                                                                            list: ops
                                                                                HdlValueId: NS
                                                                                HdlValueId: WAIT_GNT
                                                            list: elifs
                                                            HdlStmBlock: SEQ
                                                                list: body
                                                                    HdlOp: ASSIGN
                                                                        list: ops
                                                                            HdlValueId: pointer_ns
                                                                            HdlOp: ADD
                                                                                list: ops
                                                                                    HdlValueId: pointer_cs
                                                                                    HdlValueInt: 1
                                                                    HdlOp: ASSIGN
                                                                        list: ops
                                                                            HdlValueId: NS
                                                                            HdlValueId: VALID_L0
                                                list: elifs
                                                HdlStmBlock: SEQ
                                                    list: body
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: NS
                                                                HdlValueId: VALID_L0
                    tuple
                        HdlValueId: WAIT_GNT
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmIf
                                    HdlValueId: branch_i
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlOp: ASSIGN
                                                list: ops
                                                    HdlValueId: instr_req_o
                                                    HdlValueInt: 1
                                            HdlOp: ASSIGN
                                                list: ops
                                                    HdlValueId: instr_addr_o
                                                    HdlOp: CONCAT
                                                        list: ops
                                                            HdlOp: INDEX
                                                                list: ops
                                                                    HdlValueId: addr_i
                                                                    HdlOp: DOWNTO
                                                                        list: ops
                                                                            HdlValueInt: 31
                                                                            HdlValueInt: 4
                                                            HdlValueInt: 0000
                                            HdlStmIf
                                                HdlValueId: instr_gnt_i
                                                HdlOp: ASSIGN
                                                    list: ops
                                                        HdlValueId: NS
                                                        HdlValueId: WAIT_RVALID
                                                list: elifs
                                                HdlOp: ASSIGN
                                                    list: ops
                                                        HdlValueId: NS
                                                        HdlValueId: WAIT_GNT
                                    list: elifs
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlOp: ASSIGN
                                                list: ops
                                                    HdlValueId: instr_req_o
                                                    HdlValueInt: 1
                                            HdlOp: ASSIGN
                                                list: ops
                                                    HdlValueId: instr_addr_o
                                                    HdlValueId: current_address
                                            HdlStmIf
                                                HdlValueId: instr_gnt_i
                                                HdlOp: ASSIGN
                                                    list: ops
                                                        HdlValueId: NS
                                                        HdlValueId: WAIT_RVALID
                                                list: elifs
                                                HdlOp: ASSIGN
                                                    list: ops
                                                        HdlValueId: NS
                                                        HdlValueId: WAIT_GNT
                    tuple
                        HdlValueId: WAIT_ABORTED
                        HdlStmBlock: SEQ
                            list: body
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: clear_buffer
                                        HdlValueInt: 1
                                HdlStmIf
                                    HdlValueId: instr_rvalid_i
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlOp: ASSIGN
                                                list: ops
                                                    HdlValueId: instr_req_o
                                                    HdlValueInt: 1
                                            HdlOp: ASSIGN
                                                list: ops
                                                    HdlValueId: instr_addr_o
                                                    HdlValueId: current_address
                                            HdlStmIf
                                                HdlValueId: instr_gnt_i
                                                HdlOp: ASSIGN
                                                    list: ops
                                                        HdlValueId: NS
                                                        HdlValueId: WAIT_RVALID
                                                list: elifs
                                                HdlOp: ASSIGN
                                                    list: ops
                                                        HdlValueId: NS
                                                        HdlValueId: WAIT_GNT
                                    list: elifs
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlOp: ASSIGN
                                                list: ops
                                                    HdlValueId: NS
                                                    HdlValueId: WAIT_ABORTED
                HdlStmBlock: SEQ
                    list: body
                        HdlOp: ASSIGN
                            list: ops
                                HdlValueId: NS
                                HdlValueId: EMPTY
                        HdlOp: ASSIGN
                            list: ops
                                HdlValueId: clear_buffer
                                HdlValueInt: 1
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: valid_o
                HdlValueInt: 0
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: pointer_ns
                HdlValueId: pointer_cs
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: instr_req_o
                HdlValueInt: 0
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: instr_addr_o
                HdlOp: TERNARY
                    list: ops
                        HdlValueId: branch_i
                        HdlValueId: addr_i
                        HdlOp: ADD
                            list: ops
                                HdlValueId: current_address
                                HdlValueInt: 10
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: update_current_address
                HdlValueInt: 0
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: clear_buffer
                HdlValueInt: 0
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: rdata_o
                HdlOp: INDEX
                    list: ops
                        HdlValueId: instr_rdata_i
                        HdlValueId: pointer_cs
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: addr_o
                HdlOp: ADD
                    list: ops
                        HdlValueId: current_address
                        HdlOp: SLL
                            list: ops
                                HdlValueId: pointer_cs
                                HdlValueInt: 2

MOV HdlModuleDef@@prefetch_L0_buffer to objs
HdlModuleDef: prefetch_L0_buffer
    HdlModuleDec: prefetch_L0_buffer
        list: params
            HdlIdDef: RDATA_IN_WIDTH
                HdlValueInt: 128
                HdlDirection: INTERNAL
        list: ports
            HdlIdDef: clk
                HdlOp: PARAMETRIZATION
                    list: ops
                        HdlValueId: logic
                HdlDirection: IN
            HdlIdDef: rst_n
                HdlOp: PARAMETRIZATION
                    list: ops
                        HdlValueId: logic
                HdlDirection: IN
            HdlIdDef: req_i
                HdlOp: PARAMETRIZATION
                    list: ops
                        HdlValueId: logic
                HdlDirection: IN
            HdlIdDef: branch_i
                HdlOp: PARAMETRIZATION
                    list: ops
                        HdlValueId: logic
                HdlDirection: IN
            HdlIdDef: ready_i
                HdlOp: PARAMETRIZATION
                    list: ops
                        HdlValueId: logic
                HdlDirection: IN
            HdlIdDef: addr_i
                HdlOp: PARAMETRIZATION
                    list: ops
                        HdlValueId: logic
                        HdlOp: DOWNTO
                            list: ops
                                HdlValueInt: 31
                                HdlValueInt: 0
                HdlDirection: IN
            HdlIdDef: valid_o
                HdlOp: PARAMETRIZATION
                    list: ops
                        HdlValueId: logic
                HdlDirection: OUT
            HdlIdDef: rdata_o
                HdlOp: PARAMETRIZATION
                    list: ops
                        HdlValueId: logic
                        HdlOp: DOWNTO
                            list: ops
                                HdlValueInt: 31
                                HdlValueInt: 0
                HdlDirection: OUT
            HdlIdDef: addr_o
                HdlOp: PARAMETRIZATION
                    list: ops
                        HdlValueId: logic
                        HdlOp: DOWNTO
                            list: ops
                                HdlValueInt: 31
                                HdlValueInt: 0
                HdlDirection: OUT
            HdlIdDef: unaligned_valid_o
                HdlOp: PARAMETRIZATION
                    list: ops
                        HdlValueId: logic
                HdlDirection: OUT
            HdlIdDef: unaligned_rdata_o
                HdlOp: PARAMETRIZATION
                    list: ops
                        HdlValueId: logic
                        HdlOp: DOWNTO
                            list: ops
                                HdlValueInt: 31
                                HdlValueInt: 0
                HdlDirection: OUT
            HdlIdDef: instr_req_o
                HdlOp: PARAMETRIZATION
                    list: ops
                        HdlValueId: logic
                HdlDirection: OUT
            HdlIdDef: instr_addr_o
                HdlOp: PARAMETRIZATION
                    list: ops
                        HdlValueId: logic
                        HdlOp: DOWNTO
                            list: ops
                                HdlValueInt: 31
                                HdlValueInt: 0
                HdlDirection: OUT
            HdlIdDef: instr_gnt_i
                HdlOp: PARAMETRIZATION
                    list: ops
                        HdlValueId: logic
                HdlDirection: IN
            HdlIdDef: instr_rvalid_i
                HdlOp: PARAMETRIZATION
                    list: ops
                        HdlValueId: logic
                HdlDirection: IN
            HdlIdDef: instr_rdata_i
                HdlOp: INDEX
                    list: ops
                        HdlOp: PARAMETRIZATION
                            list: ops
                                HdlValueId: logic
                                HdlOp: DOWNTO
                                    list: ops
                                        HdlOp: SUB
                                            list: ops
                                                HdlOp: DIV
                                                    list: ops
                                                        HdlValueId: RDATA_IN_WIDTH
                                                        HdlValueInt: 32
                                                HdlValueInt: 1
                                        HdlValueInt: 0
                        HdlOp: DOWNTO
                            list: ops
                                HdlValueInt: 31
                                HdlValueInt: 0
                HdlDirection: IN
            HdlIdDef: busy_o
                HdlOp: PARAMETRIZATION
                    list: ops
                        HdlValueId: logic
                HdlDirection: OUT
        list: objs
    list: objs
        HdlIdDef: CS
            HdlExprNotImplemented: type
            HdlDirection: INTERNAL
        HdlIdDef: NS
            HdlExprNotImplemented: type
            HdlDirection: INTERNAL
        HdlIdDef: current_address
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: logic
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 31
                            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlIdDef: pointer_cs
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: logic
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 1
                            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlIdDef: pointer_ns
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: logic
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 1
                            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlIdDef: update_current_address
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: logic
            HdlDirection: INTERNAL
        HdlIdDef: L0_buffer
            HdlOp: INDEX
                list: ops
                    HdlOp: PARAMETRIZATION
                        list: ops
                            HdlValueId: logic
                            HdlOp: DOWNTO
                                list: ops
                                    HdlValueInt: 3
                                    HdlValueInt: 0
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 31
                            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlIdDef: valid_L0_buffer
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: logic
            HdlDirection: INTERNAL
        HdlIdDef: previous_chunk
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: logic
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 15
                            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlIdDef: valid_previous_chunk
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: logic
            HdlDirection: INTERNAL
        HdlIdDef: clear_buffer
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: logic
            HdlDirection: INTERNAL
        HdlStmAssign
            HdlOp: NE
                list: ops
                    HdlValueId: CS
                    HdlValueId: EMPTY
            HdlValueId: busy_o
        HdlStmProcess
            list: sensitivity
                HdlOp: RISING
                    list: ops
                        HdlValueId: clk
                HdlOp: FALLING
                    list: ops
                        HdlValueId: rst_n
            HdlStmBlock: SEQ
                list: body
                    HdlStmIf
                        HdlOp: NEG
                            list: ops
                                HdlValueId: rst_n
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmAssign
                                    HdlValueId: EMPTY
                                    HdlValueId: CS
                                HdlStmAssign
                                    HdlValueInt: 0
                                    HdlValueId: current_address
                                HdlStmAssign
                                    HdlValueInt: 0
                                    HdlValueId: pointer_cs
                        list: elifs
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmAssign
                                    HdlValueId: NS
                                    HdlValueId: CS
                                HdlStmIf
                                    HdlValueId: branch_i
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmAssign
                                                HdlOp: CONCAT
                                                    list: ops
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlValueId: addr_i
                                                                HdlOp: DOWNTO
                                                                    list: ops
                                                                        HdlValueInt: 31
                                                                        HdlValueInt: 4
                                                        HdlValueInt: 0000
                                                HdlValueId: current_address
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: addr_i
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 3
                                                                HdlValueInt: 2
                                                HdlValueId: pointer_cs
                                    list: elifs
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmIf
                                                HdlValueId: update_current_address
                                                HdlStmAssign: if_true
                                                    HdlOp: ADD
                                                        list: ops
                                                            HdlValueId: current_address
                                                            HdlValueInt: 10
                                                    HdlValueId: current_address
                                                list: elifs
                                            HdlStmAssign
                                                HdlValueId: pointer_ns
                                                HdlValueId: pointer_cs
            HdlStmProcessTriggerConstrain: FF
        HdlStmProcess
            HdlStmBlock: SEQ
                list: body
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: valid_o
                            HdlValueInt: 0
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: addr_o
                            HdlOp: ADD
                                list: ops
                                    HdlValueId: current_address
                                    HdlOp: SLL
                                        list: ops
                                            HdlValueId: pointer_cs
                                            HdlValueInt: 2
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: pointer_ns
                            HdlValueId: pointer_cs
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: instr_req_o
                            HdlValueInt: 0
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: instr_addr_o
                            HdlOp: TERNARY
                                list: ops
                                    HdlValueId: branch_i
                                    HdlValueId: addr_i
                                    HdlOp: ADD
                                        list: ops
                                            HdlValueId: current_address
                                            HdlValueInt: 10
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: update_current_address
                            HdlValueInt: 0
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: rdata_o
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: instr_rdata_i
                                    HdlValueId: pointer_cs
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: clear_buffer
                            HdlValueInt: 0
                    HdlStmCase: {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops':}]} 
                        HdlStmCaseType: CASE
                        HdlOp: INDEX
                            list: ops
                                HdlValueId: addr_o
                                HdlOp: DOWNTO
                                    list: ops
                                        HdlValueInt: 3
                                        HdlValueInt: 2
                        list: cases
                            tuple
                                HdlValueInt: 00
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: unaligned_rdata_o
                                                HdlOp: CONCAT
                                                    list: ops
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlOp: INDEX
                                                                    list: ops
                                                                        HdlValueId: L0_buffer
                                                                        HdlValueInt: 0
                                                                HdlOp: DOWNTO
                                                                    list: ops
                                                                        HdlValueInt: 15
                                                                        HdlValueInt: 0
                                                        HdlValueId: previous_chunk
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: unaligned_valid_o
                                                HdlValueId: valid_previous_chunk
                            tuple
                                HdlValueInt: 01
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: unaligned_rdata_o
                                                HdlOp: CONCAT
                                                    list: ops
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlOp: INDEX
                                                                    list: ops
                                                                        HdlValueId: L0_buffer
                                                                        HdlValueInt: 1
                                                                HdlOp: DOWNTO
                                                                    list: ops
                                                                        HdlValueInt: 15
                                                                        HdlValueInt: 0
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlOp: INDEX
                                                                    list: ops
                                                                        HdlValueId: L0_buffer
                                                                        HdlValueInt: 0
                                                                HdlOp: DOWNTO
                                                                    list: ops
                                                                        HdlValueInt: 31
                                                                        HdlValueInt: 16
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: unaligned_valid_o
                                                HdlValueId: valid_o
                            tuple
                                HdlValueInt: 10
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: unaligned_rdata_o
                                                HdlOp: CONCAT
                                                    list: ops
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlOp: INDEX
                                                                    list: ops
                                                                        HdlValueId: L0_buffer
                                                                        HdlValueInt: 2
                                                                HdlOp: DOWNTO
                                                                    list: ops
                                                                        HdlValueInt: 15
                                                                        HdlValueInt: 0
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlOp: INDEX
                                                                    list: ops
                                                                        HdlValueId: L0_buffer
                                                                        HdlValueInt: 1
                                                                HdlOp: DOWNTO
                                                                    list: ops
                                                                        HdlValueInt: 31
                                                                        HdlValueInt: 16
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: unaligned_valid_o
                                                HdlValueId: valid_o
                            tuple
                                HdlValueInt: 11
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: unaligned_rdata_o
                                                HdlOp: CONCAT
                                                    list: ops
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlOp: INDEX
                                                                    list: ops
                                                                        HdlValueId: L0_buffer
                                                                        HdlValueInt: 3
                                                                HdlOp: DOWNTO
                                                                    list: ops
                                                                        HdlValueInt: 15
                                                                        HdlValueInt: 0
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlOp: INDEX
                                                                    list: ops
                                                                        HdlValueId: L0_buffer
                                                                        HdlValueInt: 2
                                                                HdlOp: DOWNTO
                                                                    list: ops
                                                                        HdlValueInt: 31
                                                                        HdlValueInt: 16
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: unaligned_valid_o
                                                HdlValueId: valid_o
                    HdlStmCase: CS
                        HdlStmCaseType: CASE
                        HdlValueId: CS
                        list: cases
                            tuple
                                HdlValueId: EMPTY
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: instr_req_o
                                                HdlValueId: branch_i
                                        HdlStmIf
                                            HdlValueId: branch_i
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlStmIf
                                                        HdlValueId: instr_gnt_i
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: NS
                                                                HdlValueId: WAIT_RVALID
                                                        list: elifs
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: NS
                                                                HdlValueId: WAIT_GNT
                                            list: elifs
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: NS
                                                            HdlValueId: EMPTY
                            tuple
                                HdlValueId: WAIT_RVALID
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlStmIf
                                            HdlValueId: branch_i
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlStmIf
                                                        HdlValueId: instr_rvalid_i
                                                        HdlStmBlock: SEQ
                                                            list: body
                                                                HdlOp: ASSIGN
                                                                    list: ops
                                                                        HdlValueId: instr_req_o
                                                                        HdlValueInt: 1
                                                                HdlOp: ASSIGN
                                                                    list: ops
                                                                        HdlValueId: instr_addr_o
                                                                        HdlOp: CONCAT
                                                                            list: ops
                                                                                HdlOp: INDEX
                                                                                    list: ops
                                                                                        HdlValueId: addr_i
                                                                                        HdlOp: DOWNTO
                                                                                            list: ops
                                                                                                HdlValueInt: 31
                                                                                                HdlValueInt: 4
                                                                                HdlValueInt: 0000
                                                                HdlStmIf
                                                                    HdlValueId: instr_gnt_i
                                                                    HdlOp: ASSIGN
                                                                        list: ops
                                                                            HdlValueId: NS
                                                                            HdlValueId: WAIT_RVALID
                                                                    list: elifs
                                                                    HdlOp: ASSIGN
                                                                        list: ops
                                                                            HdlValueId: NS
                                                                            HdlValueId: WAIT_GNT
                                                        list: elifs
                                                        HdlStmBlock: SEQ
                                                            list: body
                                                                HdlOp: ASSIGN
                                                                    list: ops
                                                                        HdlValueId: NS
                                                                        HdlValueId: WAIT_ABORTED
                                            list: elifs
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: valid_o
                                                            HdlValueId: instr_rvalid_i
                                                    HdlStmCase: pointer_cs
                                                        HdlStmCaseType: CASE
                                                        HdlValueId: pointer_cs
                                                        list: cases
                                                            tuple
                                                                HdlValueInt: 00
                                                                HdlStmBlock: SEQ
                                                                    list: body
                                                                        HdlOp: ASSIGN
                                                                            list: ops
                                                                                HdlValueId: unaligned_rdata_o
                                                                                HdlOp: CONCAT
                                                                                    list: ops
                                                                                        HdlOp: INDEX
                                                                                            list: ops
                                                                                                HdlOp: INDEX
                                                                                                    list: ops
                                                                                                        HdlValueId: instr_rdata_i
                                                                                                        HdlValueInt: 0
                                                                                                HdlOp: DOWNTO
                                                                                                    list: ops
                                                                                                        HdlValueInt: 15
                                                                                                        HdlValueInt: 0
                                                                                        HdlOp: INDEX
                                                                                            list: ops
                                                                                                HdlOp: INDEX
                                                                                                    list: ops
                                                                                                        HdlValueId: L0_buffer
                                                                                                        HdlValueInt: 3
                                                                                                HdlOp: DOWNTO
                                                                                                    list: ops
                                                                                                        HdlValueInt: 31
                                                                                                        HdlValueInt: 16
                                                                        HdlStmIf
                                                                            HdlValueId: valid_L0_buffer
                                                                            HdlOp: ASSIGN
                                                                                list: ops
                                                                                    HdlValueId: unaligned_valid_o
                                                                                    HdlValueId: instr_rvalid_i
                                                                            list: elifs
                                                                            HdlOp: ASSIGN
                                                                                list: ops
                                                                                    HdlValueId: unaligned_valid_o
                                                                                    HdlValueInt: 0
                                                            tuple
                                                                HdlValueInt: 01
                                                                HdlStmBlock: SEQ
                                                                    list: body
                                                                        HdlOp: ASSIGN
                                                                            list: ops
                                                                                HdlValueId: unaligned_rdata_o
                                                                                HdlOp: CONCAT
                                                                                    list: ops
                                                                                        HdlOp: INDEX
                                                                                            list: ops
                                                                                                HdlOp: INDEX
                                                                                                    list: ops
                                                                                                        HdlValueId: instr_rdata_i
                                                                                                        HdlValueInt: 1
                                                                                                HdlOp: DOWNTO
                                                                                                    list: ops
                                                                                                        HdlValueInt: 15
                                                                                                        HdlValueInt: 0
                                                                                        HdlOp: INDEX
                                                                                            list: ops
                                                                                                HdlOp: INDEX
                                                                                                    list: ops
                                                                                                        HdlValueId: instr_rdata_i
                                                                                                        HdlValueInt: 0
                                                                                                HdlOp: DOWNTO
                                                                                                    list: ops
                                                                                                        HdlValueInt: 31
                                                                                                        HdlValueInt: 16
                                                                        HdlOp: ASSIGN
                                                                            list: ops
                                                                                HdlValueId: unaligned_valid_o
                                                                                HdlValueId: instr_rvalid_i
                                                            tuple
                                                                HdlValueInt: 10
                                                                HdlStmBlock: SEQ
                                                                    list: body
                                                                        HdlOp: ASSIGN
                                                                            list: ops
                                                                                HdlValueId: unaligned_rdata_o
                                                                                HdlOp: CONCAT
                                                                                    list: ops
                                                                                        HdlOp: INDEX
                                                                                            list: ops
                                                                                                HdlOp: INDEX
                                                                                                    list: ops
                                                                                                        HdlValueId: instr_rdata_i
                                                                                                        HdlValueInt: 2
                                                                                                HdlOp: DOWNTO
                                                                                                    list: ops
                                                                                                        HdlValueInt: 15
                                                                                                        HdlValueInt: 0
                                                                                        HdlOp: INDEX
                                                                                            list: ops
                                                                                                HdlOp: INDEX
                                                                                                    list: ops
                                                                                                        HdlValueId: instr_rdata_i
                                                                                                        HdlValueInt: 1
                                                                                                HdlOp: DOWNTO
                                                                                                    list: ops
                                                                                                        HdlValueInt: 31
                                                                                                        HdlValueInt: 16
                                                                        HdlOp: ASSIGN
                                                                            list: ops
                                                                                HdlValueId: unaligned_valid_o
                                                                                HdlValueId: instr_rvalid_i
                                                            tuple
                                                                HdlValueInt: 11
                                                                HdlStmBlock: SEQ
                                                                    list: body
                                                                        HdlOp: ASSIGN
                                                                            list: ops
                                                                                HdlValueId: unaligned_rdata_o
                                                                                HdlOp: CONCAT
                                                                                    list: ops
                                                                                        HdlOp: INDEX
                                                                                            list: ops
                                                                                                HdlOp: INDEX
                                                                                                    list: ops
                                                                                                        HdlValueId: instr_rdata_i
                                                                                                        HdlValueInt: 3
                                                                                                HdlOp: DOWNTO
                                                                                                    list: ops
                                                                                                        HdlValueInt: 15
                                                                                                        HdlValueInt: 0
                                                                                        HdlOp: INDEX
                                                                                            list: ops
                                                                                                HdlOp: INDEX
                                                                                                    list: ops
                                                                                                        HdlValueId: instr_rdata_i
                                                                                                        HdlValueInt: 2
                                                                                                HdlOp: DOWNTO
                                                                                                    list: ops
                                                                                                        HdlValueInt: 31
                                                                                                        HdlValueInt: 16
                                                                        HdlOp: ASSIGN
                                                                            list: ops
                                                                                HdlValueId: unaligned_valid_o
                                                                                HdlValueId: instr_rvalid_i
                                                    HdlStmIf
                                                        HdlValueId: instr_rvalid_i
                                                        HdlStmBlock: SEQ
                                                            list: body
                                                                HdlStmIf
                                                                    HdlOp: AND_UNARY
                                                                        list: ops
                                                                            HdlValueId: pointer_cs
                                                                    HdlStmBlock: SEQ
                                                                        list: body
                                                                            HdlStmIf
                                                                                HdlValueId: ready_i
                                                                                HdlStmBlock: SEQ
                                                                                    list: body
                                                                                        HdlOp: ASSIGN
                                                                                            list: ops
                                                                                                HdlValueId: instr_req_o
                                                                                                HdlValueInt: 1
                                                                                        HdlOp: ASSIGN
                                                                                            list: ops
                                                                                                HdlValueId: instr_addr_o
                                                                                                HdlOp: ADD
                                                                                                    list: ops
                                                                                                        HdlValueId: current_address
                                                                                                        HdlValueInt: 10
                                                                                        HdlOp: ASSIGN
                                                                                            list: ops
                                                                                                HdlValueId: pointer_ns
                                                                                                HdlValueInt: 0
                                                                                        HdlOp: ASSIGN
                                                                                            list: ops
                                                                                                HdlValueId: update_current_address
                                                                                                HdlValueInt: 1
                                                                                        HdlStmIf
                                                                                            HdlValueId: instr_gnt_i
                                                                                            HdlOp: ASSIGN
                                                                                                list: ops
                                                                                                    HdlValueId: NS
                                                                                                    HdlValueId: WAIT_RVALID
                                                                                            list: elifs
                                                                                            HdlOp: ASSIGN
                                                                                                list: ops
                                                                                                    HdlValueId: NS
                                                                                                    HdlValueId: WAIT_GNT
                                                                                list: elifs
                                                                                HdlStmBlock: SEQ
                                                                                    list: body
                                                                                        HdlOp: ASSIGN
                                                                                            list: ops
                                                                                                HdlValueId: NS
                                                                                                HdlValueId: VALID_L0
                                                                    list: elifs
                                                                    HdlStmBlock: SEQ
                                                                        list: body
                                                                            HdlOp: ASSIGN
                                                                                list: ops
                                                                                    HdlValueId: NS
                                                                                    HdlValueId: VALID_L0
                                                                            HdlStmIf
                                                                                HdlValueId: ready_i
                                                                                HdlOp: ASSIGN
                                                                                    list: ops
                                                                                        HdlValueId: pointer_ns
                                                                                        HdlOp: ADD
                                                                                            list: ops
                                                                                                HdlValueId: pointer_cs
                                                                                                HdlValueInt: 1
                                                                                list: elifs
                                                                                HdlOp: ASSIGN
                                                                                    list: ops
                                                                                        HdlValueId: pointer_ns
                                                                                        HdlValueId: pointer_cs
                                                        list: elifs
                                                        HdlStmBlock: SEQ
                                                            list: body
                                                                HdlOp: ASSIGN
                                                                    list: ops
                                                                        HdlValueId: NS
                                                                        HdlValueId: WAIT_RVALID
                            tuple
                                HdlValueId: VALID_L0
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: valid_o
                                                HdlValueInt: 1
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: rdata_o
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: L0_buffer
                                                        HdlValueId: pointer_cs
                                        HdlStmCase: pointer_cs
                                            HdlStmCaseType: CASE
                                            HdlValueId: pointer_cs
                                            list: cases
                                                tuple
                                                    HdlValueInt: 00
                                                    HdlStmBlock: SEQ
                                                        list: body
                                                            HdlOp: ASSIGN
                                                                list: ops
                                                                    HdlValueId: unaligned_rdata_o
                                                                    HdlOp: CONCAT
                                                                        list: ops
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlOp: INDEX
                                                                                        list: ops
                                                                                            HdlValueId: L0_buffer
                                                                                            HdlValueInt: 0
                                                                                    HdlOp: DOWNTO
                                                                                        list: ops
                                                                                            HdlValueInt: 15
                                                                                            HdlValueInt: 0
                                                                            HdlValueId: previous_chunk
                                                            HdlOp: ASSIGN
                                                                list: ops
                                                                    HdlValueId: unaligned_valid_o
                                                                    HdlValueId: valid_previous_chunk
                                                tuple
                                                    HdlValueInt: 01
                                                    HdlStmBlock: SEQ
                                                        list: body
                                                            HdlOp: ASSIGN
                                                                list: ops
                                                                    HdlValueId: unaligned_rdata_o
                                                                    HdlOp: CONCAT
                                                                        list: ops
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlOp: INDEX
                                                                                        list: ops
                                                                                            HdlValueId: L0_buffer
                                                                                            HdlValueInt: 1
                                                                                    HdlOp: DOWNTO
                                                                                        list: ops
                                                                                            HdlValueInt: 15
                                                                                            HdlValueInt: 0
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlOp: INDEX
                                                                                        list: ops
                                                                                            HdlValueId: L0_buffer
                                                                                            HdlValueInt: 0
                                                                                    HdlOp: DOWNTO
                                                                                        list: ops
                                                                                            HdlValueInt: 31
                                                                                            HdlValueInt: 16
                                                            HdlOp: ASSIGN
                                                                list: ops
                                                                    HdlValueId: unaligned_valid_o
                                                                    HdlValueInt: 1
                                                tuple
                                                    HdlValueInt: 10
                                                    HdlStmBlock: SEQ
                                                        list: body
                                                            HdlOp: ASSIGN
                                                                list: ops
                                                                    HdlValueId: unaligned_rdata_o
                                                                    HdlOp: CONCAT
                                                                        list: ops
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlOp: INDEX
                                                                                        list: ops
                                                                                            HdlValueId: L0_buffer
                                                                                            HdlValueInt: 2
                                                                                    HdlOp: DOWNTO
                                                                                        list: ops
                                                                                            HdlValueInt: 15
                                                                                            HdlValueInt: 0
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlOp: INDEX
                                                                                        list: ops
                                                                                            HdlValueId: L0_buffer
                                                                                            HdlValueInt: 1
                                                                                    HdlOp: DOWNTO
                                                                                        list: ops
                                                                                            HdlValueInt: 31
                                                                                            HdlValueInt: 16
                                                            HdlOp: ASSIGN
                                                                list: ops
                                                                    HdlValueId: unaligned_valid_o
                                                                    HdlValueInt: 1
                                                tuple
                                                    HdlValueInt: 11
                                                    HdlStmBlock: SEQ
                                                        list: body
                                                            HdlOp: ASSIGN
                                                                list: ops
                                                                    HdlValueId: unaligned_rdata_o
                                                                    HdlOp: CONCAT
                                                                        list: ops
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlOp: INDEX
                                                                                        list: ops
                                                                                            HdlValueId: L0_buffer
                                                                                            HdlValueInt: 3
                                                                                    HdlOp: DOWNTO
                                                                                        list: ops
                                                                                            HdlValueInt: 15
                                                                                            HdlValueInt: 0
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlOp: INDEX
                                                                                        list: ops
                                                                                            HdlValueId: L0_buffer
                                                                                            HdlValueInt: 2
                                                                                    HdlOp: DOWNTO
                                                                                        list: ops
                                                                                            HdlValueInt: 31
                                                                                            HdlValueInt: 16
                                                            HdlOp: ASSIGN
                                                                list: ops
                                                                    HdlValueId: unaligned_valid_o
                                                                    HdlValueInt: 1
                                        HdlStmIf
                                            HdlValueId: branch_i
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: instr_req_o
                                                            HdlValueInt: 1
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: instr_addr_o
                                                            HdlOp: CONCAT
                                                                list: ops
                                                                    HdlOp: INDEX
                                                                        list: ops
                                                                            HdlValueId: addr_i
                                                                            HdlOp: DOWNTO
                                                                                list: ops
                                                                                    HdlValueInt: 31
                                                                                    HdlValueInt: 4
                                                                    HdlValueInt: 0000
                                                    HdlStmIf
                                                        HdlValueId: instr_gnt_i
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: NS
                                                                HdlValueId: WAIT_RVALID
                                                        list: elifs
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: NS
                                                                HdlValueId: WAIT_GNT
                                            list: elifs
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlStmIf
                                                        HdlValueId: ready_i
                                                        HdlStmBlock: SEQ
                                                            list: body
                                                                HdlStmIf
                                                                    HdlOp: AND_UNARY
                                                                        list: ops
                                                                            HdlValueId: pointer_cs
                                                                    HdlStmBlock: SEQ
                                                                        list: body
                                                                            HdlOp: ASSIGN
                                                                                list: ops
                                                                                    HdlValueId: instr_req_o
                                                                                    HdlValueInt: 1
                                                                            HdlOp: ASSIGN
                                                                                list: ops
                                                                                    HdlValueId: instr_addr_o
                                                                                    HdlOp: ADD
                                                                                        list: ops
                                                                                            HdlValueId: current_address
                                                                                            HdlValueInt: 10
                                                                            HdlOp: ASSIGN
                                                                                list: ops
                                                                                    HdlValueId: update_current_address
                                                                                    HdlValueInt: 1
                                                                            HdlOp: ASSIGN
                                                                                list: ops
                                                                                    HdlValueId: pointer_ns
                                                                                    HdlValueInt: 0
                                                                            HdlStmIf
                                                                                HdlValueId: instr_gnt_i
                                                                                HdlOp: ASSIGN
                                                                                    list: ops
                                                                                        HdlValueId: NS
                                                                                        HdlValueId: WAIT_RVALID
                                                                                list: elifs
                                                                                HdlOp: ASSIGN
                                                                                    list: ops
                                                                                        HdlValueId: NS
                                                                                        HdlValueId: WAIT_GNT
                                                                    list: elifs
                                                                    HdlStmBlock: SEQ
                                                                        list: body
                                                                            HdlOp: ASSIGN
                                                                                list: ops
                                                                                    HdlValueId: pointer_ns
                                                                                    HdlOp: ADD
                                                                                        list: ops
                                                                                            HdlValueId: pointer_cs
                                                                                            HdlValueInt: 1
                                                                            HdlOp: ASSIGN
                                                                                list: ops
                                                                                    HdlValueId: NS
                                                                                    HdlValueId: VALID_L0
                                                        list: elifs
                                                        HdlStmBlock: SEQ
                                                            list: body
                                                                HdlOp: ASSIGN
                                                                    list: ops
                                                                        HdlValueId: NS
                                                                        HdlValueId: VALID_L0
                            tuple
                                HdlValueId: WAIT_GNT
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlStmIf
                                            HdlValueId: branch_i
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: instr_req_o
                                                            HdlValueInt: 1
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: instr_addr_o
                                                            HdlOp: CONCAT
                                                                list: ops
                                                                    HdlOp: INDEX
                                                                        list: ops
                                                                            HdlValueId: addr_i
                                                                            HdlOp: DOWNTO
                                                                                list: ops
                                                                                    HdlValueInt: 31
                                                                                    HdlValueInt: 4
                                                                    HdlValueInt: 0000
                                                    HdlStmIf
                                                        HdlValueId: instr_gnt_i
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: NS
                                                                HdlValueId: WAIT_RVALID
                                                        list: elifs
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: NS
                                                                HdlValueId: WAIT_GNT
                                            list: elifs
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: instr_req_o
                                                            HdlValueInt: 1
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: instr_addr_o
                                                            HdlValueId: current_address
                                                    HdlStmIf
                                                        HdlValueId: instr_gnt_i
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: NS
                                                                HdlValueId: WAIT_RVALID
                                                        list: elifs
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: NS
                                                                HdlValueId: WAIT_GNT
                            tuple
                                HdlValueId: WAIT_ABORTED
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: clear_buffer
                                                HdlValueInt: 1
                                        HdlStmIf
                                            HdlValueId: instr_rvalid_i
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: instr_req_o
                                                            HdlValueInt: 1
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: instr_addr_o
                                                            HdlValueId: current_address
                                                    HdlStmIf
                                                        HdlValueId: instr_gnt_i
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: NS
                                                                HdlValueId: WAIT_RVALID
                                                        list: elifs
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: NS
                                                                HdlValueId: WAIT_GNT
                                            list: elifs
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: NS
                                                            HdlValueId: WAIT_ABORTED
                        HdlStmBlock: SEQ
                            list: body
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: NS
                                        HdlValueId: EMPTY
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: clear_buffer
                                        HdlValueInt: 1
            HdlStmProcessTriggerConstrain: COMB
        HdlStmProcess
            list: sensitivity
                HdlOp: RISING
                    list: ops
                        HdlValueId: clk
                HdlOp: FALLING
                    list: ops
                        HdlValueId: rst_n
            HdlStmBlock: SEQ
                list: body
                    HdlStmIf
                        HdlOp: EQ
                            list: ops
                                HdlValueId: rst_n
                                HdlValueInt: 0
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmAssign
                                    HdlValueInt: 0
                                    HdlValueId: valid_L0_buffer
                                HdlStmAssign
                                    HdlValueInt: 0
                                    HdlValueId: L0_buffer
                                HdlStmAssign
                                    HdlValueInt: 0
                                    HdlValueId: previous_chunk
                                HdlStmAssign
                                    HdlValueInt: 0
                                    HdlValueId: valid_previous_chunk
                        list: elifs
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmIf
                                    HdlOp: OR_LOG
                                        list: ops
                                            HdlValueId: branch_i
                                            HdlValueId: clear_buffer
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmAssign
                                                HdlValueInt: 0
                                                HdlValueId: valid_L0_buffer
                                            HdlStmAssign
                                                HdlValueInt: 0
                                                HdlValueId: valid_previous_chunk
                                    list: elifs
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmIf
                                                HdlValueId: instr_rvalid_i
                                                HdlStmBlock: SEQ
                                                    list: body
                                                        HdlStmAssign
                                                            HdlValueId: instr_rdata_i
                                                            HdlValueId: L0_buffer
                                                        HdlStmAssign
                                                            HdlValueInt: 1
                                                            HdlValueId: valid_L0_buffer
                                                        HdlStmIf
                                                            HdlValueId: valid_L0_buffer
                                                            HdlStmBlock: SEQ
                                                                list: body
                                                                    HdlStmAssign
                                                                        HdlValueInt: 1
                                                                        HdlValueId: valid_previous_chunk
                                                                    HdlStmAssign
                                                                        HdlOp: INDEX
                                                                            list: ops
                                                                                HdlOp: INDEX
                                                                                    list: ops
                                                                                        HdlValueId: L0_buffer
                                                                                        HdlValueInt: 3
                                                                                HdlOp: DOWNTO
                                                                                    list: ops
                                                                                        HdlValueInt: 31
                                                                                        HdlValueInt: 16
                                                                        HdlValueId: previous_chunk
                                                            list: elifs
                                                list: elifs
            HdlStmProcessTriggerConstrain: FF

UPD HdlStmCase@@CS to CS
    UPD list@@cases to objs
    MOV list@@cases to CS
    list: cases
        tuple
            HdlValueId: EMPTY
            HdlStmBlock: SEQ
                list: body
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: instr_req_o
                            HdlValueId: branch_i
                    HdlStmIf
                        HdlValueId: branch_i
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmIf
                                    HdlValueId: instr_gnt_i
                                    HdlOp: ASSIGN
                                        list: ops
                                            HdlValueId: NS
                                            HdlValueId: WAIT_RVALID
                                    list: elifs
                                    HdlOp: ASSIGN
                                        list: ops
                                            HdlValueId: NS
                                            HdlValueId: WAIT_GNT
                        list: elifs
                        HdlStmBlock: SEQ
                            list: body
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: NS
                                        HdlValueId: EMPTY
        tuple
            HdlValueId: WAIT_RVALID
            HdlStmBlock: SEQ
                list: body
                    HdlStmIf
                        HdlValueId: branch_i
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmIf
                                    HdlValueId: instr_rvalid_i
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlOp: ASSIGN
                                                list: ops
                                                    HdlValueId: instr_req_o
                                                    HdlValueInt: 1
                                            HdlOp: ASSIGN
                                                list: ops
                                                    HdlValueId: instr_addr_o
                                                    HdlOp: CONCAT
                                                        list: ops
                                                            HdlOp: INDEX
                                                                list: ops
                                                                    HdlValueId: addr_i
                                                                    HdlOp: DOWNTO
                                                                        list: ops
                                                                            HdlValueInt: 31
                                                                            HdlValueInt: 4
                                                            HdlValueInt: 0000
                                            HdlStmIf
                                                HdlValueId: instr_gnt_i
                                                HdlOp: ASSIGN
                                                    list: ops
                                                        HdlValueId: NS
                                                        HdlValueId: WAIT_RVALID
                                                list: elifs
                                                HdlOp: ASSIGN
                                                    list: ops
                                                        HdlValueId: NS
                                                        HdlValueId: WAIT_GNT
                                    list: elifs
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlOp: ASSIGN
                                                list: ops
                                                    HdlValueId: NS
                                                    HdlValueId: WAIT_ABORTED
                        list: elifs
                        HdlStmBlock: SEQ
                            list: body
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: valid_o
                                        HdlValueId: instr_rvalid_i
                                HdlStmCase: pointer_cs
                                    HdlStmCaseType: CASE
                                    HdlValueId: pointer_cs
                                    list: cases
                                        tuple
                                            HdlValueInt: 00
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: unaligned_rdata_o
                                                            HdlOp: CONCAT
                                                                list: ops
                                                                    HdlOp: INDEX
                                                                        list: ops
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlValueId: instr_rdata_i
                                                                                    HdlValueInt: 0
                                                                            HdlOp: DOWNTO
                                                                                list: ops
                                                                                    HdlValueInt: 15
                                                                                    HdlValueInt: 0
                                                                    HdlOp: INDEX
                                                                        list: ops
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlValueId: L0_buffer
                                                                                    HdlValueInt: 3
                                                                            HdlOp: DOWNTO
                                                                                list: ops
                                                                                    HdlValueInt: 31
                                                                                    HdlValueInt: 16
                                                    HdlStmIf
                                                        HdlValueId: valid_L0_buffer
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: unaligned_valid_o
                                                                HdlValueId: instr_rvalid_i
                                                        list: elifs
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: unaligned_valid_o
                                                                HdlValueInt: 0
                                        tuple
                                            HdlValueInt: 01
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: unaligned_rdata_o
                                                            HdlOp: CONCAT
                                                                list: ops
                                                                    HdlOp: INDEX
                                                                        list: ops
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlValueId: instr_rdata_i
                                                                                    HdlValueInt: 1
                                                                            HdlOp: DOWNTO
                                                                                list: ops
                                                                                    HdlValueInt: 15
                                                                                    HdlValueInt: 0
                                                                    HdlOp: INDEX
                                                                        list: ops
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlValueId: instr_rdata_i
                                                                                    HdlValueInt: 0
                                                                            HdlOp: DOWNTO
                                                                                list: ops
                                                                                    HdlValueInt: 31
                                                                                    HdlValueInt: 16
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: unaligned_valid_o
                                                            HdlValueId: instr_rvalid_i
                                        tuple
                                            HdlValueInt: 10
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: unaligned_rdata_o
                                                            HdlOp: CONCAT
                                                                list: ops
                                                                    HdlOp: INDEX
                                                                        list: ops
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlValueId: instr_rdata_i
                                                                                    HdlValueInt: 2
                                                                            HdlOp: DOWNTO
                                                                                list: ops
                                                                                    HdlValueInt: 15
                                                                                    HdlValueInt: 0
                                                                    HdlOp: INDEX
                                                                        list: ops
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlValueId: instr_rdata_i
                                                                                    HdlValueInt: 1
                                                                            HdlOp: DOWNTO
                                                                                list: ops
                                                                                    HdlValueInt: 31
                                                                                    HdlValueInt: 16
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: unaligned_valid_o
                                                            HdlValueId: instr_rvalid_i
                                        tuple
                                            HdlValueInt: 11
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: unaligned_rdata_o
                                                            HdlOp: CONCAT
                                                                list: ops
                                                                    HdlOp: INDEX
                                                                        list: ops
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlValueId: instr_rdata_i
                                                                                    HdlValueInt: 3
                                                                            HdlOp: DOWNTO
                                                                                list: ops
                                                                                    HdlValueInt: 15
                                                                                    HdlValueInt: 0
                                                                    HdlOp: INDEX
                                                                        list: ops
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlValueId: instr_rdata_i
                                                                                    HdlValueInt: 2
                                                                            HdlOp: DOWNTO
                                                                                list: ops
                                                                                    HdlValueInt: 31
                                                                                    HdlValueInt: 16
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: unaligned_valid_o
                                                            HdlValueId: instr_rvalid_i
                                HdlStmIf
                                    HdlValueId: instr_rvalid_i
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmIf
                                                HdlOp: AND_UNARY
                                                    list: ops
                                                        HdlValueId: pointer_cs
                                                HdlStmBlock: SEQ
                                                    list: body
                                                        HdlStmIf
                                                            HdlValueId: ready_i
                                                            HdlStmBlock: SEQ
                                                                list: body
                                                                    HdlOp: ASSIGN
                                                                        list: ops
                                                                            HdlValueId: instr_req_o
                                                                            HdlValueInt: 1
                                                                    HdlOp: ASSIGN
                                                                        list: ops
                                                                            HdlValueId: instr_addr_o
                                                                            HdlOp: ADD
                                                                                list: ops
                                                                                    HdlValueId: current_address
                                                                                    HdlValueInt: 10
                                                                    HdlOp: ASSIGN
                                                                        list: ops
                                                                            HdlValueId: pointer_ns
                                                                            HdlValueInt: 0
                                                                    HdlOp: ASSIGN
                                                                        list: ops
                                                                            HdlValueId: update_current_address
                                                                            HdlValueInt: 1
                                                                    HdlStmIf
                                                                        HdlValueId: instr_gnt_i
                                                                        HdlOp: ASSIGN
                                                                            list: ops
                                                                                HdlValueId: NS
                                                                                HdlValueId: WAIT_RVALID
                                                                        list: elifs
                                                                        HdlOp: ASSIGN
                                                                            list: ops
                                                                                HdlValueId: NS
                                                                                HdlValueId: WAIT_GNT
                                                            list: elifs
                                                            HdlStmBlock: SEQ
                                                                list: body
                                                                    HdlOp: ASSIGN
                                                                        list: ops
                                                                            HdlValueId: NS
                                                                            HdlValueId: VALID_L0
                                                list: elifs
                                                HdlStmBlock: SEQ
                                                    list: body
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: NS
                                                                HdlValueId: VALID_L0
                                                        HdlStmIf
                                                            HdlValueId: ready_i
                                                            HdlOp: ASSIGN
                                                                list: ops
                                                                    HdlValueId: pointer_ns
                                                                    HdlOp: ADD
                                                                        list: ops
                                                                            HdlValueId: pointer_cs
                                                                            HdlValueInt: 1
                                                            list: elifs
                                                            HdlOp: ASSIGN
                                                                list: ops
                                                                    HdlValueId: pointer_ns
                                                                    HdlValueId: pointer_cs
                                    list: elifs
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlOp: ASSIGN
                                                list: ops
                                                    HdlValueId: NS
                                                    HdlValueId: WAIT_RVALID
        tuple
            HdlValueId: VALID_L0
            HdlStmBlock: SEQ
                list: body
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: valid_o
                            HdlValueInt: 1
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: rdata_o
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: L0_buffer
                                    HdlValueId: pointer_cs
                    HdlStmCase: pointer_cs
                        HdlStmCaseType: CASE
                        HdlValueId: pointer_cs
                        list: cases
                            tuple
                                HdlValueInt: 00
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: unaligned_rdata_o
                                                HdlOp: CONCAT
                                                    list: ops
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlOp: INDEX
                                                                    list: ops
                                                                        HdlValueId: L0_buffer
                                                                        HdlValueInt: 0
                                                                HdlOp: DOWNTO
                                                                    list: ops
                                                                        HdlValueInt: 15
                                                                        HdlValueInt: 0
                                                        HdlValueId: previous_chunk
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: unaligned_valid_o
                                                HdlValueId: valid_previous_chunk
                            tuple
                                HdlValueInt: 01
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: unaligned_rdata_o
                                                HdlOp: CONCAT
                                                    list: ops
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlOp: INDEX
                                                                    list: ops
                                                                        HdlValueId: L0_buffer
                                                                        HdlValueInt: 1
                                                                HdlOp: DOWNTO
                                                                    list: ops
                                                                        HdlValueInt: 15
                                                                        HdlValueInt: 0
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlOp: INDEX
                                                                    list: ops
                                                                        HdlValueId: L0_buffer
                                                                        HdlValueInt: 0
                                                                HdlOp: DOWNTO
                                                                    list: ops
                                                                        HdlValueInt: 31
                                                                        HdlValueInt: 16
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: unaligned_valid_o
                                                HdlValueInt: 1
                            tuple
                                HdlValueInt: 10
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: unaligned_rdata_o
                                                HdlOp: CONCAT
                                                    list: ops
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlOp: INDEX
                                                                    list: ops
                                                                        HdlValueId: L0_buffer
                                                                        HdlValueInt: 2
                                                                HdlOp: DOWNTO
                                                                    list: ops
                                                                        HdlValueInt: 15
                                                                        HdlValueInt: 0
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlOp: INDEX
                                                                    list: ops
                                                                        HdlValueId: L0_buffer
                                                                        HdlValueInt: 1
                                                                HdlOp: DOWNTO
                                                                    list: ops
                                                                        HdlValueInt: 31
                                                                        HdlValueInt: 16
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: unaligned_valid_o
                                                HdlValueInt: 1
                            tuple
                                HdlValueInt: 11
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: unaligned_rdata_o
                                                HdlOp: CONCAT
                                                    list: ops
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlOp: INDEX
                                                                    list: ops
                                                                        HdlValueId: L0_buffer
                                                                        HdlValueInt: 3
                                                                HdlOp: DOWNTO
                                                                    list: ops
                                                                        HdlValueInt: 15
                                                                        HdlValueInt: 0
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlOp: INDEX
                                                                    list: ops
                                                                        HdlValueId: L0_buffer
                                                                        HdlValueInt: 2
                                                                HdlOp: DOWNTO
                                                                    list: ops
                                                                        HdlValueInt: 31
                                                                        HdlValueInt: 16
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: unaligned_valid_o
                                                HdlValueInt: 1
                    HdlStmIf
                        HdlValueId: branch_i
                        HdlStmBlock: SEQ
                            list: body
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: instr_req_o
                                        HdlValueInt: 1
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: instr_addr_o
                                        HdlOp: CONCAT
                                            list: ops
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: addr_i
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 31
                                                                HdlValueInt: 4
                                                HdlValueInt: 0000
                                HdlStmIf
                                    HdlValueId: instr_gnt_i
                                    HdlOp: ASSIGN
                                        list: ops
                                            HdlValueId: NS
                                            HdlValueId: WAIT_RVALID
                                    list: elifs
                                    HdlOp: ASSIGN
                                        list: ops
                                            HdlValueId: NS
                                            HdlValueId: WAIT_GNT
                        list: elifs
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmIf
                                    HdlValueId: ready_i
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmIf
                                                HdlOp: AND_UNARY
                                                    list: ops
                                                        HdlValueId: pointer_cs
                                                HdlStmBlock: SEQ
                                                    list: body
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: instr_req_o
                                                                HdlValueInt: 1
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: instr_addr_o
                                                                HdlOp: ADD
                                                                    list: ops
                                                                        HdlValueId: current_address
                                                                        HdlValueInt: 10
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: update_current_address
                                                                HdlValueInt: 1
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: pointer_ns
                                                                HdlValueInt: 0
                                                        HdlStmIf
                                                            HdlValueId: instr_gnt_i
                                                            HdlOp: ASSIGN
                                                                list: ops
                                                                    HdlValueId: NS
                                                                    HdlValueId: WAIT_RVALID
                                                            list: elifs
                                                            HdlOp: ASSIGN
                                                                list: ops
                                                                    HdlValueId: NS
                                                                    HdlValueId: WAIT_GNT
                                                list: elifs
                                                HdlStmBlock: SEQ
                                                    list: body
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: pointer_ns
                                                                HdlOp: ADD
                                                                    list: ops
                                                                        HdlValueId: pointer_cs
                                                                        HdlValueInt: 1
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: NS
                                                                HdlValueId: VALID_L0
                                    list: elifs
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlOp: ASSIGN
                                                list: ops
                                                    HdlValueId: NS
                                                    HdlValueId: VALID_L0
        tuple
            HdlValueId: WAIT_GNT
            HdlStmBlock: SEQ
                list: body
                    HdlStmIf
                        HdlValueId: branch_i
                        HdlStmBlock: SEQ
                            list: body
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: instr_req_o
                                        HdlValueInt: 1
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: instr_addr_o
                                        HdlOp: CONCAT
                                            list: ops
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: addr_i
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 31
                                                                HdlValueInt: 4
                                                HdlValueInt: 0000
                                HdlStmIf
                                    HdlValueId: instr_gnt_i
                                    HdlOp: ASSIGN
                                        list: ops
                                            HdlValueId: NS
                                            HdlValueId: WAIT_RVALID
                                    list: elifs
                                    HdlOp: ASSIGN
                                        list: ops
                                            HdlValueId: NS
                                            HdlValueId: WAIT_GNT
                        list: elifs
                        HdlStmBlock: SEQ
                            list: body
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: instr_req_o
                                        HdlValueInt: 1
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: instr_addr_o
                                        HdlValueId: current_address
                                HdlStmIf
                                    HdlValueId: instr_gnt_i
                                    HdlOp: ASSIGN
                                        list: ops
                                            HdlValueId: NS
                                            HdlValueId: WAIT_RVALID
                                    list: elifs
                                    HdlOp: ASSIGN
                                        list: ops
                                            HdlValueId: NS
                                            HdlValueId: WAIT_GNT
        tuple
            HdlValueId: WAIT_ABORTED
            HdlStmBlock: SEQ
                list: body
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: clear_buffer
                            HdlValueInt: 1
                    HdlStmIf
                        HdlValueId: instr_rvalid_i
                        HdlStmBlock: SEQ
                            list: body
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: instr_req_o
                                        HdlValueInt: 1
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: instr_addr_o
                                        HdlValueId: current_address
                                HdlStmIf
                                    HdlValueId: instr_gnt_i
                                    HdlOp: ASSIGN
                                        list: ops
                                            HdlValueId: NS
                                            HdlValueId: WAIT_RVALID
                                    list: elifs
                                    HdlOp: ASSIGN
                                        list: ops
                                            HdlValueId: NS
                                            HdlValueId: WAIT_GNT
                        list: elifs
                        HdlStmBlock: SEQ
                            list: body
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: NS
                                        HdlValueId: WAIT_ABORTED
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: valid_o
                    HdlValueInt: 1
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: rdata_o
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: L0_buffer
                            HdlValueId: pointer_cs
            HdlStmCase: pointer_cs
                HdlStmCaseType: CASE
                HdlValueId: pointer_cs
                list: cases
                    tuple
                        HdlValueInt: 00
                        HdlStmBlock: SEQ
                            list: body
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: unaligned_rdata_o
                                        HdlOp: CONCAT
                                            list: ops
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlValueId: L0_buffer
                                                                HdlValueInt: 0
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 15
                                                                HdlValueInt: 0
                                                HdlValueId: previous_chunk
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: unaligned_valid_o
                                        HdlValueId: valid_previous_chunk
                    tuple
                        HdlValueInt: 01
                        HdlStmBlock: SEQ
                            list: body
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: unaligned_rdata_o
                                        HdlOp: CONCAT
                                            list: ops
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlValueId: L0_buffer
                                                                HdlValueInt: 1
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 15
                                                                HdlValueInt: 0
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlValueId: L0_buffer
                                                                HdlValueInt: 0
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 31
                                                                HdlValueInt: 16
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: unaligned_valid_o
                                        HdlValueInt: 1
                    tuple
                        HdlValueInt: 10
                        HdlStmBlock: SEQ
                            list: body
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: unaligned_rdata_o
                                        HdlOp: CONCAT
                                            list: ops
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlValueId: L0_buffer
                                                                HdlValueInt: 2
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 15
                                                                HdlValueInt: 0
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlValueId: L0_buffer
                                                                HdlValueInt: 1
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 31
                                                                HdlValueInt: 16
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: unaligned_valid_o
                                        HdlValueInt: 1
                    tuple
                        HdlValueInt: 11
                        HdlStmBlock: SEQ
                            list: body
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: unaligned_rdata_o
                                        HdlOp: CONCAT
                                            list: ops
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlValueId: L0_buffer
                                                                HdlValueInt: 3
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 15
                                                                HdlValueInt: 0
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlValueId: L0_buffer
                                                                HdlValueInt: 2
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 31
                                                                HdlValueInt: 16
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: unaligned_valid_o
                                        HdlValueInt: 1
            HdlStmIf
                HdlValueId: branch_i
                HdlStmBlock: SEQ
                    list: body
                        HdlOp: ASSIGN
                            list: ops
                                HdlValueId: instr_req_o
                                HdlValueInt: 1
                        HdlOp: ASSIGN
                            list: ops
                                HdlValueId: instr_addr_o
                                HdlOp: CONCAT
                                    list: ops
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: addr_i
                                                HdlOp: DOWNTO
                                                    list: ops
                                                        HdlValueInt: 31
                                                        HdlValueInt: 4
                                        HdlValueInt: 0000
                        HdlStmIf
                            HdlValueId: instr_gnt_i
                            HdlOp: ASSIGN
                                list: ops
                                    HdlValueId: NS
                                    HdlValueId: WAIT_RVALID
                            list: elifs
                            HdlOp: ASSIGN
                                list: ops
                                    HdlValueId: NS
                                    HdlValueId: WAIT_GNT
                list: elifs
                HdlStmBlock: SEQ
                    list: body
                        HdlStmIf
                            HdlValueId: ready_i
                            HdlStmBlock: SEQ
                                list: body
                                    HdlStmIf
                                        HdlOp: AND_UNARY
                                            list: ops
                                                HdlValueId: pointer_cs
                                        HdlStmBlock: SEQ
                                            list: body
                                                HdlOp: ASSIGN
                                                    list: ops
                                                        HdlValueId: instr_req_o
                                                        HdlValueInt: 1
                                                HdlOp: ASSIGN
                                                    list: ops
                                                        HdlValueId: instr_addr_o
                                                        HdlOp: ADD
                                                            list: ops
                                                                HdlValueId: current_address
                                                                HdlValueInt: 10
                                                HdlOp: ASSIGN
                                                    list: ops
                                                        HdlValueId: update_current_address
                                                        HdlValueInt: 1
                                                HdlOp: ASSIGN
                                                    list: ops
                                                        HdlValueId: pointer_ns
                                                        HdlValueInt: 0
                                                HdlStmIf
                                                    HdlValueId: instr_gnt_i
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: NS
                                                            HdlValueId: WAIT_RVALID
                                                    list: elifs
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: NS
                                                            HdlValueId: WAIT_GNT
                                        list: elifs
                                        HdlStmBlock: SEQ
                                            list: body
                                                HdlOp: ASSIGN
                                                    list: ops
                                                        HdlValueId: pointer_ns
                                                        HdlOp: ADD
                                                            list: ops
                                                                HdlValueId: pointer_cs
                                                                HdlValueInt: 1
                                                HdlOp: ASSIGN
                                                    list: ops
                                                        HdlValueId: NS
                                                        HdlValueId: VALID_L0
                            list: elifs
                            HdlStmBlock: SEQ
                                list: body
                                    HdlOp: ASSIGN
                                        list: ops
                                            HdlValueId: NS
                                            HdlValueId: VALID_L0
    MOV tuple@@ to cases
    tuple
        HdlValueId: EMPTY
        HdlStmBlock: SEQ
            list: body
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: instr_req_o
                        HdlValueId: branch_i
                HdlStmIf
                    HdlValueId: branch_i
                    HdlStmBlock: SEQ
                        list: body
                            HdlStmIf
                                HdlValueId: instr_gnt_i
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: NS
                                        HdlValueId: WAIT_RVALID
                                list: elifs
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: NS
                                        HdlValueId: WAIT_GNT
                    list: elifs
                    HdlStmBlock: SEQ
                        list: body
                            HdlOp: ASSIGN
                                list: ops
                                    HdlValueId: NS
                                    HdlValueId: EMPTY
    MOV tuple@@ to cases
    tuple
        HdlValueId: WAIT_RVALID
        HdlStmBlock: SEQ
            list: body
                HdlStmIf
                    HdlValueId: branch_i
                    HdlStmBlock: SEQ
                        list: body
                            HdlStmIf
                                HdlValueId: instr_rvalid_i
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: instr_req_o
                                                HdlValueInt: 1
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: instr_addr_o
                                                HdlOp: CONCAT
                                                    list: ops
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlValueId: addr_i
                                                                HdlOp: DOWNTO
                                                                    list: ops
                                                                        HdlValueInt: 31
                                                                        HdlValueInt: 4
                                                        HdlValueInt: 0000
                                        HdlStmIf
                                            HdlValueId: instr_gnt_i
                                            HdlOp: ASSIGN
                                                list: ops
                                                    HdlValueId: NS
                                                    HdlValueId: WAIT_RVALID
                                            list: elifs
                                            HdlOp: ASSIGN
                                                list: ops
                                                    HdlValueId: NS
                                                    HdlValueId: WAIT_GNT
                                list: elifs
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: NS
                                                HdlValueId: WAIT_ABORTED
                    list: elifs
                    HdlStmBlock: SEQ
                        list: body
                            HdlOp: ASSIGN
                                list: ops
                                    HdlValueId: valid_o
                                    HdlValueId: instr_rvalid_i
                            HdlStmCase: pointer_cs
                                HdlStmCaseType: CASE
                                HdlValueId: pointer_cs
                                list: cases
                                    tuple
                                        HdlValueInt: 00
                                        HdlStmBlock: SEQ
                                            list: body
                                                HdlOp: ASSIGN
                                                    list: ops
                                                        HdlValueId: unaligned_rdata_o
                                                        HdlOp: CONCAT
                                                            list: ops
                                                                HdlOp: INDEX
                                                                    list: ops
                                                                        HdlOp: INDEX
                                                                            list: ops
                                                                                HdlValueId: instr_rdata_i
                                                                                HdlValueInt: 0
                                                                        HdlOp: DOWNTO
                                                                            list: ops
                                                                                HdlValueInt: 15
                                                                                HdlValueInt: 0
                                                                HdlOp: INDEX
                                                                    list: ops
                                                                        HdlOp: INDEX
                                                                            list: ops
                                                                                HdlValueId: L0_buffer
                                                                                HdlValueInt: 3
                                                                        HdlOp: DOWNTO
                                                                            list: ops
                                                                                HdlValueInt: 31
                                                                                HdlValueInt: 16
                                                HdlStmIf
                                                    HdlValueId: valid_L0_buffer
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: unaligned_valid_o
                                                            HdlValueId: instr_rvalid_i
                                                    list: elifs
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: unaligned_valid_o
                                                            HdlValueInt: 0
                                    tuple
                                        HdlValueInt: 01
                                        HdlStmBlock: SEQ
                                            list: body
                                                HdlOp: ASSIGN
                                                    list: ops
                                                        HdlValueId: unaligned_rdata_o
                                                        HdlOp: CONCAT
                                                            list: ops
                                                                HdlOp: INDEX
                                                                    list: ops
                                                                        HdlOp: INDEX
                                                                            list: ops
                                                                                HdlValueId: instr_rdata_i
                                                                                HdlValueInt: 1
                                                                        HdlOp: DOWNTO
                                                                            list: ops
                                                                                HdlValueInt: 15
                                                                                HdlValueInt: 0
                                                                HdlOp: INDEX
                                                                    list: ops
                                                                        HdlOp: INDEX
                                                                            list: ops
                                                                                HdlValueId: instr_rdata_i
                                                                                HdlValueInt: 0
                                                                        HdlOp: DOWNTO
                                                                            list: ops
                                                                                HdlValueInt: 31
                                                                                HdlValueInt: 16
                                                HdlOp: ASSIGN
                                                    list: ops
                                                        HdlValueId: unaligned_valid_o
                                                        HdlValueId: instr_rvalid_i
                                    tuple
                                        HdlValueInt: 10
                                        HdlStmBlock: SEQ
                                            list: body
                                                HdlOp: ASSIGN
                                                    list: ops
                                                        HdlValueId: unaligned_rdata_o
                                                        HdlOp: CONCAT
                                                            list: ops
                                                                HdlOp: INDEX
                                                                    list: ops
                                                                        HdlOp: INDEX
                                                                            list: ops
                                                                                HdlValueId: instr_rdata_i
                                                                                HdlValueInt: 2
                                                                        HdlOp: DOWNTO
                                                                            list: ops
                                                                                HdlValueInt: 15
                                                                                HdlValueInt: 0
                                                                HdlOp: INDEX
                                                                    list: ops
                                                                        HdlOp: INDEX
                                                                            list: ops
                                                                                HdlValueId: instr_rdata_i
                                                                                HdlValueInt: 1
                                                                        HdlOp: DOWNTO
                                                                            list: ops
                                                                                HdlValueInt: 31
                                                                                HdlValueInt: 16
                                                HdlOp: ASSIGN
                                                    list: ops
                                                        HdlValueId: unaligned_valid_o
                                                        HdlValueId: instr_rvalid_i
                                    tuple
                                        HdlValueInt: 11
                                        HdlStmBlock: SEQ
                                            list: body
                                                HdlOp: ASSIGN
                                                    list: ops
                                                        HdlValueId: unaligned_rdata_o
                                                        HdlOp: CONCAT
                                                            list: ops
                                                                HdlOp: INDEX
                                                                    list: ops
                                                                        HdlOp: INDEX
                                                                            list: ops
                                                                                HdlValueId: instr_rdata_i
                                                                                HdlValueInt: 3
                                                                        HdlOp: DOWNTO
                                                                            list: ops
                                                                                HdlValueInt: 15
                                                                                HdlValueInt: 0
                                                                HdlOp: INDEX
                                                                    list: ops
                                                                        HdlOp: INDEX
                                                                            list: ops
                                                                                HdlValueId: instr_rdata_i
                                                                                HdlValueInt: 2
                                                                        HdlOp: DOWNTO
                                                                            list: ops
                                                                                HdlValueInt: 31
                                                                                HdlValueInt: 16
                                                HdlOp: ASSIGN
                                                    list: ops
                                                        HdlValueId: unaligned_valid_o
                                                        HdlValueId: instr_rvalid_i
                            HdlStmIf
                                HdlValueId: instr_rvalid_i
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlStmIf
                                            HdlOp: AND_UNARY
                                                list: ops
                                                    HdlValueId: pointer_cs
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlStmIf
                                                        HdlValueId: ready_i
                                                        HdlStmBlock: SEQ
                                                            list: body
                                                                HdlOp: ASSIGN
                                                                    list: ops
                                                                        HdlValueId: instr_req_o
                                                                        HdlValueInt: 1
                                                                HdlOp: ASSIGN
                                                                    list: ops
                                                                        HdlValueId: instr_addr_o
                                                                        HdlOp: ADD
                                                                            list: ops
                                                                                HdlValueId: current_address
                                                                                HdlValueInt: 10
                                                                HdlOp: ASSIGN
                                                                    list: ops
                                                                        HdlValueId: pointer_ns
                                                                        HdlValueInt: 0
                                                                HdlOp: ASSIGN
                                                                    list: ops
                                                                        HdlValueId: update_current_address
                                                                        HdlValueInt: 1
                                                                HdlStmIf
                                                                    HdlValueId: instr_gnt_i
                                                                    HdlOp: ASSIGN
                                                                        list: ops
                                                                            HdlValueId: NS
                                                                            HdlValueId: WAIT_RVALID
                                                                    list: elifs
                                                                    HdlOp: ASSIGN
                                                                        list: ops
                                                                            HdlValueId: NS
                                                                            HdlValueId: WAIT_GNT
                                                        list: elifs
                                                        HdlStmBlock: SEQ
                                                            list: body
                                                                HdlOp: ASSIGN
                                                                    list: ops
                                                                        HdlValueId: NS
                                                                        HdlValueId: VALID_L0
                                            list: elifs
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: NS
                                                            HdlValueId: VALID_L0
                                                    HdlStmIf
                                                        HdlValueId: ready_i
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: pointer_ns
                                                                HdlOp: ADD
                                                                    list: ops
                                                                        HdlValueId: pointer_cs
                                                                        HdlValueInt: 1
                                                        list: elifs
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: pointer_ns
                                                                HdlValueId: pointer_cs
                                list: elifs
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: NS
                                                HdlValueId: WAIT_RVALID
    MOV tuple@@ to cases
    tuple
        HdlValueId: VALID_L0
        HdlStmBlock: SEQ
            list: body
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: valid_o
                        HdlValueInt: 1
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: rdata_o
                        HdlOp: INDEX
                            list: ops
                                HdlValueId: L0_buffer
                                HdlValueId: pointer_cs
                HdlStmCase: pointer_cs
                    HdlStmCaseType: CASE
                    HdlValueId: pointer_cs
                    list: cases
                        tuple
                            HdlValueInt: 00
                            HdlStmBlock: SEQ
                                list: body
                                    HdlOp: ASSIGN
                                        list: ops
                                            HdlValueId: unaligned_rdata_o
                                            HdlOp: CONCAT
                                                list: ops
                                                    HdlOp: INDEX
                                                        list: ops
                                                            HdlOp: INDEX
                                                                list: ops
                                                                    HdlValueId: L0_buffer
                                                                    HdlValueInt: 0
                                                            HdlOp: DOWNTO
                                                                list: ops
                                                                    HdlValueInt: 15
                                                                    HdlValueInt: 0
                                                    HdlValueId: previous_chunk
                                    HdlOp: ASSIGN
                                        list: ops
                                            HdlValueId: unaligned_valid_o
                                            HdlValueId: valid_previous_chunk
                        tuple
                            HdlValueInt: 01
                            HdlStmBlock: SEQ
                                list: body
                                    HdlOp: ASSIGN
                                        list: ops
                                            HdlValueId: unaligned_rdata_o
                                            HdlOp: CONCAT
                                                list: ops
                                                    HdlOp: INDEX
                                                        list: ops
                                                            HdlOp: INDEX
                                                                list: ops
                                                                    HdlValueId: L0_buffer
                                                                    HdlValueInt: 1
                                                            HdlOp: DOWNTO
                                                                list: ops
                                                                    HdlValueInt: 15
                                                                    HdlValueInt: 0
                                                    HdlOp: INDEX
                                                        list: ops
                                                            HdlOp: INDEX
                                                                list: ops
                                                                    HdlValueId: L0_buffer
                                                                    HdlValueInt: 0
                                                            HdlOp: DOWNTO
                                                                list: ops
                                                                    HdlValueInt: 31
                                                                    HdlValueInt: 16
                                    HdlOp: ASSIGN
                                        list: ops
                                            HdlValueId: unaligned_valid_o
                                            HdlValueInt: 1
                        tuple
                            HdlValueInt: 10
                            HdlStmBlock: SEQ
                                list: body
                                    HdlOp: ASSIGN
                                        list: ops
                                            HdlValueId: unaligned_rdata_o
                                            HdlOp: CONCAT
                                                list: ops
                                                    HdlOp: INDEX
                                                        list: ops
                                                            HdlOp: INDEX
                                                                list: ops
                                                                    HdlValueId: L0_buffer
                                                                    HdlValueInt: 2
                                                            HdlOp: DOWNTO
                                                                list: ops
                                                                    HdlValueInt: 15
                                                                    HdlValueInt: 0
                                                    HdlOp: INDEX
                                                        list: ops
                                                            HdlOp: INDEX
                                                                list: ops
                                                                    HdlValueId: L0_buffer
                                                                    HdlValueInt: 1
                                                            HdlOp: DOWNTO
                                                                list: ops
                                                                    HdlValueInt: 31
                                                                    HdlValueInt: 16
                                    HdlOp: ASSIGN
                                        list: ops
                                            HdlValueId: unaligned_valid_o
                                            HdlValueInt: 1
                        tuple
                            HdlValueInt: 11
                            HdlStmBlock: SEQ
                                list: body
                                    HdlOp: ASSIGN
                                        list: ops
                                            HdlValueId: unaligned_rdata_o
                                            HdlOp: CONCAT
                                                list: ops
                                                    HdlOp: INDEX
                                                        list: ops
                                                            HdlOp: INDEX
                                                                list: ops
                                                                    HdlValueId: L0_buffer
                                                                    HdlValueInt: 3
                                                            HdlOp: DOWNTO
                                                                list: ops
                                                                    HdlValueInt: 15
                                                                    HdlValueInt: 0
                                                    HdlOp: INDEX
                                                        list: ops
                                                            HdlOp: INDEX
                                                                list: ops
                                                                    HdlValueId: L0_buffer
                                                                    HdlValueInt: 2
                                                            HdlOp: DOWNTO
                                                                list: ops
                                                                    HdlValueInt: 31
                                                                    HdlValueInt: 16
                                    HdlOp: ASSIGN
                                        list: ops
                                            HdlValueId: unaligned_valid_o
                                            HdlValueInt: 1
                HdlStmIf
                    HdlValueId: branch_i
                    HdlStmBlock: SEQ
                        list: body
                            HdlOp: ASSIGN
                                list: ops
                                    HdlValueId: instr_req_o
                                    HdlValueInt: 1
                            HdlOp: ASSIGN
                                list: ops
                                    HdlValueId: instr_addr_o
                                    HdlOp: CONCAT
                                        list: ops
                                            HdlOp: INDEX
                                                list: ops
                                                    HdlValueId: addr_i
                                                    HdlOp: DOWNTO
                                                        list: ops
                                                            HdlValueInt: 31
                                                            HdlValueInt: 4
                                            HdlValueInt: 0000
                            HdlStmIf
                                HdlValueId: instr_gnt_i
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: NS
                                        HdlValueId: WAIT_RVALID
                                list: elifs
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: NS
                                        HdlValueId: WAIT_GNT
                    list: elifs
                    HdlStmBlock: SEQ
                        list: body
                            HdlStmIf
                                HdlValueId: ready_i
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlStmIf
                                            HdlOp: AND_UNARY
                                                list: ops
                                                    HdlValueId: pointer_cs
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: instr_req_o
                                                            HdlValueInt: 1
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: instr_addr_o
                                                            HdlOp: ADD
                                                                list: ops
                                                                    HdlValueId: current_address
                                                                    HdlValueInt: 10
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: update_current_address
                                                            HdlValueInt: 1
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: pointer_ns
                                                            HdlValueInt: 0
                                                    HdlStmIf
                                                        HdlValueId: instr_gnt_i
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: NS
                                                                HdlValueId: WAIT_RVALID
                                                        list: elifs
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: NS
                                                                HdlValueId: WAIT_GNT
                                            list: elifs
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: pointer_ns
                                                            HdlOp: ADD
                                                                list: ops
                                                                    HdlValueId: pointer_cs
                                                                    HdlValueInt: 1
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: NS
                                                            HdlValueId: VALID_L0
                                list: elifs
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: NS
                                                HdlValueId: VALID_L0
    MOV tuple@@ to cases
    tuple
        HdlValueId: WAIT_GNT
        HdlStmBlock: SEQ
            list: body
                HdlStmIf
                    HdlValueId: branch_i
                    HdlStmBlock: SEQ
                        list: body
                            HdlOp: ASSIGN
                                list: ops
                                    HdlValueId: instr_req_o
                                    HdlValueInt: 1
                            HdlOp: ASSIGN
                                list: ops
                                    HdlValueId: instr_addr_o
                                    HdlOp: CONCAT
                                        list: ops
                                            HdlOp: INDEX
                                                list: ops
                                                    HdlValueId: addr_i
                                                    HdlOp: DOWNTO
                                                        list: ops
                                                            HdlValueInt: 31
                                                            HdlValueInt: 4
                                            HdlValueInt: 0000
                            HdlStmIf
                                HdlValueId: instr_gnt_i
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: NS
                                        HdlValueId: WAIT_RVALID
                                list: elifs
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: NS
                                        HdlValueId: WAIT_GNT
                    list: elifs
                    HdlStmBlock: SEQ
                        list: body
                            HdlOp: ASSIGN
                                list: ops
                                    HdlValueId: instr_req_o
                                    HdlValueInt: 1
                            HdlOp: ASSIGN
                                list: ops
                                    HdlValueId: instr_addr_o
                                    HdlValueId: current_address
                            HdlStmIf
                                HdlValueId: instr_gnt_i
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: NS
                                        HdlValueId: WAIT_RVALID
                                list: elifs
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: NS
                                        HdlValueId: WAIT_GNT
    MOV tuple@@ to cases
    tuple
        HdlValueId: WAIT_ABORTED
        HdlStmBlock: SEQ
            list: body
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: clear_buffer
                        HdlValueInt: 1
                HdlStmIf
                    HdlValueId: instr_rvalid_i
                    HdlStmBlock: SEQ
                        list: body
                            HdlOp: ASSIGN
                                list: ops
                                    HdlValueId: instr_req_o
                                    HdlValueInt: 1
                            HdlOp: ASSIGN
                                list: ops
                                    HdlValueId: instr_addr_o
                                    HdlValueId: current_address
                            HdlStmIf
                                HdlValueId: instr_gnt_i
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: NS
                                        HdlValueId: WAIT_RVALID
                                list: elifs
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: NS
                                        HdlValueId: WAIT_GNT
                    list: elifs
                    HdlStmBlock: SEQ
                        list: body
                            HdlOp: ASSIGN
                                list: ops
                                    HdlValueId: NS
                                    HdlValueId: WAIT_ABORTED
    UPD HdlStmBlock@@SEQ to SEQ
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: valid_o
                HdlValueInt: 1
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: rdata_o
                HdlOp: INDEX
                    list: ops
                        HdlValueId: L0_buffer
                        HdlValueId: pointer_cs

MOV HdlStmProcess@@ to objs
HdlStmProcess
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: valid_o
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: addr_o
                    HdlOp: ADD
                        list: ops
                            HdlValueId: current_address
                            HdlOp: SLL
                                list: ops
                                    HdlValueId: pointer_cs
                                    HdlValueInt: 2
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: pointer_ns
                    HdlValueId: pointer_cs
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: instr_req_o
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: instr_addr_o
                    HdlOp: TERNARY
                        list: ops
                            HdlValueId: branch_i
                            HdlValueId: addr_i
                            HdlOp: ADD
                                list: ops
                                    HdlValueId: current_address
                                    HdlValueInt: 10
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: update_current_address
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: rdata_o
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: instr_rdata_i
                            HdlValueId: pointer_cs
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: clear_buffer
                    HdlValueInt: 0
            HdlStmCase: {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops':}]} 
                HdlStmCaseType: CASE
                HdlOp: INDEX
                    list: ops
                        HdlValueId: addr_o
                        HdlOp: DOWNTO
                            list: ops
                                HdlValueInt: 3
                                HdlValueInt: 2
                list: cases
                    tuple
                        HdlValueInt: 00
                        HdlStmBlock: SEQ
                            list: body
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: unaligned_rdata_o
                                        HdlOp: CONCAT
                                            list: ops
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlValueId: L0_buffer
                                                                HdlValueInt: 0
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 15
                                                                HdlValueInt: 0
                                                HdlValueId: previous_chunk
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: unaligned_valid_o
                                        HdlValueId: valid_previous_chunk
                    tuple
                        HdlValueInt: 01
                        HdlStmBlock: SEQ
                            list: body
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: unaligned_rdata_o
                                        HdlOp: CONCAT
                                            list: ops
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlValueId: L0_buffer
                                                                HdlValueInt: 1
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 15
                                                                HdlValueInt: 0
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlValueId: L0_buffer
                                                                HdlValueInt: 0
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 31
                                                                HdlValueInt: 16
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: unaligned_valid_o
                                        HdlValueId: valid_o
                    tuple
                        HdlValueInt: 10
                        HdlStmBlock: SEQ
                            list: body
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: unaligned_rdata_o
                                        HdlOp: CONCAT
                                            list: ops
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlValueId: L0_buffer
                                                                HdlValueInt: 2
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 15
                                                                HdlValueInt: 0
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlValueId: L0_buffer
                                                                HdlValueInt: 1
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 31
                                                                HdlValueInt: 16
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: unaligned_valid_o
                                        HdlValueId: valid_o
                    tuple
                        HdlValueInt: 11
                        HdlStmBlock: SEQ
                            list: body
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: unaligned_rdata_o
                                        HdlOp: CONCAT
                                            list: ops
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlValueId: L0_buffer
                                                                HdlValueInt: 3
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 15
                                                                HdlValueInt: 0
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlValueId: L0_buffer
                                                                HdlValueInt: 2
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 31
                                                                HdlValueInt: 16
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: unaligned_valid_o
                                        HdlValueId: valid_o
            HdlStmCase: CS
                HdlStmCaseType: CASE
                HdlValueId: CS
                list: cases
                    tuple
                        HdlValueId: EMPTY
                        HdlStmBlock: SEQ
                            list: body
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: instr_req_o
                                        HdlValueId: branch_i
                                HdlStmIf
                                    HdlValueId: branch_i
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmIf
                                                HdlValueId: instr_gnt_i
                                                HdlOp: ASSIGN
                                                    list: ops
                                                        HdlValueId: NS
                                                        HdlValueId: WAIT_RVALID
                                                list: elifs
                                                HdlOp: ASSIGN
                                                    list: ops
                                                        HdlValueId: NS
                                                        HdlValueId: WAIT_GNT
                                    list: elifs
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlOp: ASSIGN
                                                list: ops
                                                    HdlValueId: NS
                                                    HdlValueId: EMPTY
                    tuple
                        HdlValueId: WAIT_RVALID
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmIf
                                    HdlValueId: branch_i
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmIf
                                                HdlValueId: instr_rvalid_i
                                                HdlStmBlock: SEQ
                                                    list: body
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: instr_req_o
                                                                HdlValueInt: 1
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: instr_addr_o
                                                                HdlOp: CONCAT
                                                                    list: ops
                                                                        HdlOp: INDEX
                                                                            list: ops
                                                                                HdlValueId: addr_i
                                                                                HdlOp: DOWNTO
                                                                                    list: ops
                                                                                        HdlValueInt: 31
                                                                                        HdlValueInt: 4
                                                                        HdlValueInt: 0000
                                                        HdlStmIf
                                                            HdlValueId: instr_gnt_i
                                                            HdlOp: ASSIGN
                                                                list: ops
                                                                    HdlValueId: NS
                                                                    HdlValueId: WAIT_RVALID
                                                            list: elifs
                                                            HdlOp: ASSIGN
                                                                list: ops
                                                                    HdlValueId: NS
                                                                    HdlValueId: WAIT_GNT
                                                list: elifs
                                                HdlStmBlock: SEQ
                                                    list: body
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: NS
                                                                HdlValueId: WAIT_ABORTED
                                    list: elifs
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlOp: ASSIGN
                                                list: ops
                                                    HdlValueId: valid_o
                                                    HdlValueId: instr_rvalid_i
                                            HdlStmCase: pointer_cs
                                                HdlStmCaseType: CASE
                                                HdlValueId: pointer_cs
                                                list: cases
                                                    tuple
                                                        HdlValueInt: 00
                                                        HdlStmBlock: SEQ
                                                            list: body
                                                                HdlOp: ASSIGN
                                                                    list: ops
                                                                        HdlValueId: unaligned_rdata_o
                                                                        HdlOp: CONCAT
                                                                            list: ops
                                                                                HdlOp: INDEX
                                                                                    list: ops
                                                                                        HdlOp: INDEX
                                                                                            list: ops
                                                                                                HdlValueId: instr_rdata_i
                                                                                                HdlValueInt: 0
                                                                                        HdlOp: DOWNTO
                                                                                            list: ops
                                                                                                HdlValueInt: 15
                                                                                                HdlValueInt: 0
                                                                                HdlOp: INDEX
                                                                                    list: ops
                                                                                        HdlOp: INDEX
                                                                                            list: ops
                                                                                                HdlValueId: L0_buffer
                                                                                                HdlValueInt: 3
                                                                                        HdlOp: DOWNTO
                                                                                            list: ops
                                                                                                HdlValueInt: 31
                                                                                                HdlValueInt: 16
                                                                HdlStmIf
                                                                    HdlValueId: valid_L0_buffer
                                                                    HdlOp: ASSIGN
                                                                        list: ops
                                                                            HdlValueId: unaligned_valid_o
                                                                            HdlValueId: instr_rvalid_i
                                                                    list: elifs
                                                                    HdlOp: ASSIGN
                                                                        list: ops
                                                                            HdlValueId: unaligned_valid_o
                                                                            HdlValueInt: 0
                                                    tuple
                                                        HdlValueInt: 01
                                                        HdlStmBlock: SEQ
                                                            list: body
                                                                HdlOp: ASSIGN
                                                                    list: ops
                                                                        HdlValueId: unaligned_rdata_o
                                                                        HdlOp: CONCAT
                                                                            list: ops
                                                                                HdlOp: INDEX
                                                                                    list: ops
                                                                                        HdlOp: INDEX
                                                                                            list: ops
                                                                                                HdlValueId: instr_rdata_i
                                                                                                HdlValueInt: 1
                                                                                        HdlOp: DOWNTO
                                                                                            list: ops
                                                                                                HdlValueInt: 15
                                                                                                HdlValueInt: 0
                                                                                HdlOp: INDEX
                                                                                    list: ops
                                                                                        HdlOp: INDEX
                                                                                            list: ops
                                                                                                HdlValueId: instr_rdata_i
                                                                                                HdlValueInt: 0
                                                                                        HdlOp: DOWNTO
                                                                                            list: ops
                                                                                                HdlValueInt: 31
                                                                                                HdlValueInt: 16
                                                                HdlOp: ASSIGN
                                                                    list: ops
                                                                        HdlValueId: unaligned_valid_o
                                                                        HdlValueId: instr_rvalid_i
                                                    tuple
                                                        HdlValueInt: 10
                                                        HdlStmBlock: SEQ
                                                            list: body
                                                                HdlOp: ASSIGN
                                                                    list: ops
                                                                        HdlValueId: unaligned_rdata_o
                                                                        HdlOp: CONCAT
                                                                            list: ops
                                                                                HdlOp: INDEX
                                                                                    list: ops
                                                                                        HdlOp: INDEX
                                                                                            list: ops
                                                                                                HdlValueId: instr_rdata_i
                                                                                                HdlValueInt: 2
                                                                                        HdlOp: DOWNTO
                                                                                            list: ops
                                                                                                HdlValueInt: 15
                                                                                                HdlValueInt: 0
                                                                                HdlOp: INDEX
                                                                                    list: ops
                                                                                        HdlOp: INDEX
                                                                                            list: ops
                                                                                                HdlValueId: instr_rdata_i
                                                                                                HdlValueInt: 1
                                                                                        HdlOp: DOWNTO
                                                                                            list: ops
                                                                                                HdlValueInt: 31
                                                                                                HdlValueInt: 16
                                                                HdlOp: ASSIGN
                                                                    list: ops
                                                                        HdlValueId: unaligned_valid_o
                                                                        HdlValueId: instr_rvalid_i
                                                    tuple
                                                        HdlValueInt: 11
                                                        HdlStmBlock: SEQ
                                                            list: body
                                                                HdlOp: ASSIGN
                                                                    list: ops
                                                                        HdlValueId: unaligned_rdata_o
                                                                        HdlOp: CONCAT
                                                                            list: ops
                                                                                HdlOp: INDEX
                                                                                    list: ops
                                                                                        HdlOp: INDEX
                                                                                            list: ops
                                                                                                HdlValueId: instr_rdata_i
                                                                                                HdlValueInt: 3
                                                                                        HdlOp: DOWNTO
                                                                                            list: ops
                                                                                                HdlValueInt: 15
                                                                                                HdlValueInt: 0
                                                                                HdlOp: INDEX
                                                                                    list: ops
                                                                                        HdlOp: INDEX
                                                                                            list: ops
                                                                                                HdlValueId: instr_rdata_i
                                                                                                HdlValueInt: 2
                                                                                        HdlOp: DOWNTO
                                                                                            list: ops
                                                                                                HdlValueInt: 31
                                                                                                HdlValueInt: 16
                                                                HdlOp: ASSIGN
                                                                    list: ops
                                                                        HdlValueId: unaligned_valid_o
                                                                        HdlValueId: instr_rvalid_i
                                            HdlStmIf
                                                HdlValueId: instr_rvalid_i
                                                HdlStmBlock: SEQ
                                                    list: body
                                                        HdlStmIf
                                                            HdlOp: AND_UNARY
                                                                list: ops
                                                                    HdlValueId: pointer_cs
                                                            HdlStmBlock: SEQ
                                                                list: body
                                                                    HdlStmIf
                                                                        HdlValueId: ready_i
                                                                        HdlStmBlock: SEQ
                                                                            list: body
                                                                                HdlOp: ASSIGN
                                                                                    list: ops
                                                                                        HdlValueId: instr_req_o
                                                                                        HdlValueInt: 1
                                                                                HdlOp: ASSIGN
                                                                                    list: ops
                                                                                        HdlValueId: instr_addr_o
                                                                                        HdlOp: ADD
                                                                                            list: ops
                                                                                                HdlValueId: current_address
                                                                                                HdlValueInt: 10
                                                                                HdlOp: ASSIGN
                                                                                    list: ops
                                                                                        HdlValueId: pointer_ns
                                                                                        HdlValueInt: 0
                                                                                HdlOp: ASSIGN
                                                                                    list: ops
                                                                                        HdlValueId: update_current_address
                                                                                        HdlValueInt: 1
                                                                                HdlStmIf
                                                                                    HdlValueId: instr_gnt_i
                                                                                    HdlOp: ASSIGN
                                                                                        list: ops
                                                                                            HdlValueId: NS
                                                                                            HdlValueId: WAIT_RVALID
                                                                                    list: elifs
                                                                                    HdlOp: ASSIGN
                                                                                        list: ops
                                                                                            HdlValueId: NS
                                                                                            HdlValueId: WAIT_GNT
                                                                        list: elifs
                                                                        HdlStmBlock: SEQ
                                                                            list: body
                                                                                HdlOp: ASSIGN
                                                                                    list: ops
                                                                                        HdlValueId: NS
                                                                                        HdlValueId: VALID_L0
                                                            list: elifs
                                                            HdlStmBlock: SEQ
                                                                list: body
                                                                    HdlOp: ASSIGN
                                                                        list: ops
                                                                            HdlValueId: NS
                                                                            HdlValueId: VALID_L0
                                                                    HdlStmIf
                                                                        HdlValueId: ready_i
                                                                        HdlOp: ASSIGN
                                                                            list: ops
                                                                                HdlValueId: pointer_ns
                                                                                HdlOp: ADD
                                                                                    list: ops
                                                                                        HdlValueId: pointer_cs
                                                                                        HdlValueInt: 1
                                                                        list: elifs
                                                                        HdlOp: ASSIGN
                                                                            list: ops
                                                                                HdlValueId: pointer_ns
                                                                                HdlValueId: pointer_cs
                                                list: elifs
                                                HdlStmBlock: SEQ
                                                    list: body
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: NS
                                                                HdlValueId: WAIT_RVALID
                    tuple
                        HdlValueId: VALID_L0
                        HdlStmBlock: SEQ
                            list: body
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: valid_o
                                        HdlValueInt: 1
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: rdata_o
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: L0_buffer
                                                HdlValueId: pointer_cs
                                HdlStmCase: pointer_cs
                                    HdlStmCaseType: CASE
                                    HdlValueId: pointer_cs
                                    list: cases
                                        tuple
                                            HdlValueInt: 00
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: unaligned_rdata_o
                                                            HdlOp: CONCAT
                                                                list: ops
                                                                    HdlOp: INDEX
                                                                        list: ops
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlValueId: L0_buffer
                                                                                    HdlValueInt: 0
                                                                            HdlOp: DOWNTO
                                                                                list: ops
                                                                                    HdlValueInt: 15
                                                                                    HdlValueInt: 0
                                                                    HdlValueId: previous_chunk
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: unaligned_valid_o
                                                            HdlValueId: valid_previous_chunk
                                        tuple
                                            HdlValueInt: 01
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: unaligned_rdata_o
                                                            HdlOp: CONCAT
                                                                list: ops
                                                                    HdlOp: INDEX
                                                                        list: ops
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlValueId: L0_buffer
                                                                                    HdlValueInt: 1
                                                                            HdlOp: DOWNTO
                                                                                list: ops
                                                                                    HdlValueInt: 15
                                                                                    HdlValueInt: 0
                                                                    HdlOp: INDEX
                                                                        list: ops
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlValueId: L0_buffer
                                                                                    HdlValueInt: 0
                                                                            HdlOp: DOWNTO
                                                                                list: ops
                                                                                    HdlValueInt: 31
                                                                                    HdlValueInt: 16
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: unaligned_valid_o
                                                            HdlValueInt: 1
                                        tuple
                                            HdlValueInt: 10
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: unaligned_rdata_o
                                                            HdlOp: CONCAT
                                                                list: ops
                                                                    HdlOp: INDEX
                                                                        list: ops
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlValueId: L0_buffer
                                                                                    HdlValueInt: 2
                                                                            HdlOp: DOWNTO
                                                                                list: ops
                                                                                    HdlValueInt: 15
                                                                                    HdlValueInt: 0
                                                                    HdlOp: INDEX
                                                                        list: ops
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlValueId: L0_buffer
                                                                                    HdlValueInt: 1
                                                                            HdlOp: DOWNTO
                                                                                list: ops
                                                                                    HdlValueInt: 31
                                                                                    HdlValueInt: 16
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: unaligned_valid_o
                                                            HdlValueInt: 1
                                        tuple
                                            HdlValueInt: 11
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: unaligned_rdata_o
                                                            HdlOp: CONCAT
                                                                list: ops
                                                                    HdlOp: INDEX
                                                                        list: ops
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlValueId: L0_buffer
                                                                                    HdlValueInt: 3
                                                                            HdlOp: DOWNTO
                                                                                list: ops
                                                                                    HdlValueInt: 15
                                                                                    HdlValueInt: 0
                                                                    HdlOp: INDEX
                                                                        list: ops
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlValueId: L0_buffer
                                                                                    HdlValueInt: 2
                                                                            HdlOp: DOWNTO
                                                                                list: ops
                                                                                    HdlValueInt: 31
                                                                                    HdlValueInt: 16
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: unaligned_valid_o
                                                            HdlValueInt: 1
                                HdlStmIf
                                    HdlValueId: branch_i
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlOp: ASSIGN
                                                list: ops
                                                    HdlValueId: instr_req_o
                                                    HdlValueInt: 1
                                            HdlOp: ASSIGN
                                                list: ops
                                                    HdlValueId: instr_addr_o
                                                    HdlOp: CONCAT
                                                        list: ops
                                                            HdlOp: INDEX
                                                                list: ops
                                                                    HdlValueId: addr_i
                                                                    HdlOp: DOWNTO
                                                                        list: ops
                                                                            HdlValueInt: 31
                                                                            HdlValueInt: 4
                                                            HdlValueInt: 0000
                                            HdlStmIf
                                                HdlValueId: instr_gnt_i
                                                HdlOp: ASSIGN
                                                    list: ops
                                                        HdlValueId: NS
                                                        HdlValueId: WAIT_RVALID
                                                list: elifs
                                                HdlOp: ASSIGN
                                                    list: ops
                                                        HdlValueId: NS
                                                        HdlValueId: WAIT_GNT
                                    list: elifs
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmIf
                                                HdlValueId: ready_i
                                                HdlStmBlock: SEQ
                                                    list: body
                                                        HdlStmIf
                                                            HdlOp: AND_UNARY
                                                                list: ops
                                                                    HdlValueId: pointer_cs
                                                            HdlStmBlock: SEQ
                                                                list: body
                                                                    HdlOp: ASSIGN
                                                                        list: ops
                                                                            HdlValueId: instr_req_o
                                                                            HdlValueInt: 1
                                                                    HdlOp: ASSIGN
                                                                        list: ops
                                                                            HdlValueId: instr_addr_o
                                                                            HdlOp: ADD
                                                                                list: ops
                                                                                    HdlValueId: current_address
                                                                                    HdlValueInt: 10
                                                                    HdlOp: ASSIGN
                                                                        list: ops
                                                                            HdlValueId: update_current_address
                                                                            HdlValueInt: 1
                                                                    HdlOp: ASSIGN
                                                                        list: ops
                                                                            HdlValueId: pointer_ns
                                                                            HdlValueInt: 0
                                                                    HdlStmIf
                                                                        HdlValueId: instr_gnt_i
                                                                        HdlOp: ASSIGN
                                                                            list: ops
                                                                                HdlValueId: NS
                                                                                HdlValueId: WAIT_RVALID
                                                                        list: elifs
                                                                        HdlOp: ASSIGN
                                                                            list: ops
                                                                                HdlValueId: NS
                                                                                HdlValueId: WAIT_GNT
                                                            list: elifs
                                                            HdlStmBlock: SEQ
                                                                list: body
                                                                    HdlOp: ASSIGN
                                                                        list: ops
                                                                            HdlValueId: pointer_ns
                                                                            HdlOp: ADD
                                                                                list: ops
                                                                                    HdlValueId: pointer_cs
                                                                                    HdlValueInt: 1
                                                                    HdlOp: ASSIGN
                                                                        list: ops
                                                                            HdlValueId: NS
                                                                            HdlValueId: VALID_L0
                                                list: elifs
                                                HdlStmBlock: SEQ
                                                    list: body
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: NS
                                                                HdlValueId: VALID_L0
                    tuple
                        HdlValueId: WAIT_GNT
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmIf
                                    HdlValueId: branch_i
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlOp: ASSIGN
                                                list: ops
                                                    HdlValueId: instr_req_o
                                                    HdlValueInt: 1
                                            HdlOp: ASSIGN
                                                list: ops
                                                    HdlValueId: instr_addr_o
                                                    HdlOp: CONCAT
                                                        list: ops
                                                            HdlOp: INDEX
                                                                list: ops
                                                                    HdlValueId: addr_i
                                                                    HdlOp: DOWNTO
                                                                        list: ops
                                                                            HdlValueInt: 31
                                                                            HdlValueInt: 4
                                                            HdlValueInt: 0000
                                            HdlStmIf
                                                HdlValueId: instr_gnt_i
                                                HdlOp: ASSIGN
                                                    list: ops
                                                        HdlValueId: NS
                                                        HdlValueId: WAIT_RVALID
                                                list: elifs
                                                HdlOp: ASSIGN
                                                    list: ops
                                                        HdlValueId: NS
                                                        HdlValueId: WAIT_GNT
                                    list: elifs
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlOp: ASSIGN
                                                list: ops
                                                    HdlValueId: instr_req_o
                                                    HdlValueInt: 1
                                            HdlOp: ASSIGN
                                                list: ops
                                                    HdlValueId: instr_addr_o
                                                    HdlValueId: current_address
                                            HdlStmIf
                                                HdlValueId: instr_gnt_i
                                                HdlOp: ASSIGN
                                                    list: ops
                                                        HdlValueId: NS
                                                        HdlValueId: WAIT_RVALID
                                                list: elifs
                                                HdlOp: ASSIGN
                                                    list: ops
                                                        HdlValueId: NS
                                                        HdlValueId: WAIT_GNT
                    tuple
                        HdlValueId: WAIT_ABORTED
                        HdlStmBlock: SEQ
                            list: body
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: clear_buffer
                                        HdlValueInt: 1
                                HdlStmIf
                                    HdlValueId: instr_rvalid_i
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlOp: ASSIGN
                                                list: ops
                                                    HdlValueId: instr_req_o
                                                    HdlValueInt: 1
                                            HdlOp: ASSIGN
                                                list: ops
                                                    HdlValueId: instr_addr_o
                                                    HdlValueId: current_address
                                            HdlStmIf
                                                HdlValueId: instr_gnt_i
                                                HdlOp: ASSIGN
                                                    list: ops
                                                        HdlValueId: NS
                                                        HdlValueId: WAIT_RVALID
                                                list: elifs
                                                HdlOp: ASSIGN
                                                    list: ops
                                                        HdlValueId: NS
                                                        HdlValueId: WAIT_GNT
                                    list: elifs
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlOp: ASSIGN
                                                list: ops
                                                    HdlValueId: NS
                                                    HdlValueId: WAIT_ABORTED
                HdlStmBlock: SEQ
                    list: body
                        HdlOp: ASSIGN
                            list: ops
                                HdlValueId: NS
                                HdlValueId: EMPTY
                        HdlOp: ASSIGN
                            list: ops
                                HdlValueId: clear_buffer
                                HdlValueInt: 1
    HdlStmProcessTriggerConstrain: COMB

UPD HdlStmProcess@@ to 
    INS HdlStmBlock@@SEQ to 
    INS HdlStmProcessTriggerConstrain@@COMB to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlModuleDef@@prefetch_L0_buffer to prefetch_L0_buffer
    UPD list@@objs to body
    MOV list@@objs to prefetch_L0_buffer
    list: objs
        HdlIdDef: CS
            HdlExprNotImplemented: type
            HdlDirection: INTERNAL
        HdlIdDef: NS
            HdlExprNotImplemented: type
            HdlDirection: INTERNAL
        HdlIdDef: current_address
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: logic
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 31
                            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlIdDef: pointer_cs
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: logic
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 1
                            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlIdDef: pointer_ns
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: logic
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 1
                            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlIdDef: update_current_address
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: logic
            HdlDirection: INTERNAL
        HdlIdDef: L0_buffer
            HdlOp: INDEX
                list: ops
                    HdlOp: PARAMETRIZATION
                        list: ops
                            HdlValueId: logic
                            HdlOp: DOWNTO
                                list: ops
                                    HdlValueInt: 3
                                    HdlValueInt: 0
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 31
                            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlIdDef: valid_L0_buffer
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: logic
            HdlDirection: INTERNAL
        HdlIdDef: previous_chunk
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: logic
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 15
                            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlIdDef: valid_previous_chunk
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: logic
            HdlDirection: INTERNAL
        HdlIdDef: clear_buffer
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: logic
            HdlDirection: INTERNAL
        HdlStmAssign
            HdlOp: NE
                list: ops
                    HdlValueId: CS
                    HdlValueId: EMPTY
            HdlValueId: busy_o
        HdlStmProcess
            list: sensitivity
                HdlOp: RISING
                    list: ops
                        HdlValueId: clk
                HdlOp: FALLING
                    list: ops
                        HdlValueId: rst_n
            HdlStmBlock: SEQ
                list: body
                    HdlStmIf
                        HdlOp: NEG
                            list: ops
                                HdlValueId: rst_n
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmAssign
                                    HdlValueId: EMPTY
                                    HdlValueId: CS
                                HdlStmAssign
                                    HdlValueInt: 0
                                    HdlValueId: current_address
                                HdlStmAssign
                                    HdlValueInt: 0
                                    HdlValueId: pointer_cs
                        list: elifs
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmAssign
                                    HdlValueId: NS
                                    HdlValueId: CS
                                HdlStmIf
                                    HdlValueId: branch_i
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmAssign
                                                HdlOp: CONCAT
                                                    list: ops
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlValueId: addr_i
                                                                HdlOp: DOWNTO
                                                                    list: ops
                                                                        HdlValueInt: 31
                                                                        HdlValueInt: 4
                                                        HdlValueInt: 0000
                                                HdlValueId: current_address
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: addr_i
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 3
                                                                HdlValueInt: 2
                                                HdlValueId: pointer_cs
                                    list: elifs
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmIf
                                                HdlValueId: update_current_address
                                                HdlStmAssign: if_true
                                                    HdlOp: ADD
                                                        list: ops
                                                            HdlValueId: current_address
                                                            HdlValueInt: 10
                                                    HdlValueId: current_address
                                                list: elifs
                                            HdlStmAssign
                                                HdlValueId: pointer_ns
                                                HdlValueId: pointer_cs
            HdlStmProcessTriggerConstrain: FF
        HdlStmProcess
            HdlStmBlock: SEQ
                list: body
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: valid_o
                            HdlValueInt: 0
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: addr_o
                            HdlOp: ADD
                                list: ops
                                    HdlValueId: current_address
                                    HdlOp: SLL
                                        list: ops
                                            HdlValueId: pointer_cs
                                            HdlValueInt: 2
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: pointer_ns
                            HdlValueId: pointer_cs
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: instr_req_o
                            HdlValueInt: 0
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: instr_addr_o
                            HdlOp: TERNARY
                                list: ops
                                    HdlValueId: branch_i
                                    HdlValueId: addr_i
                                    HdlOp: ADD
                                        list: ops
                                            HdlValueId: current_address
                                            HdlValueInt: 10
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: update_current_address
                            HdlValueInt: 0
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: rdata_o
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: instr_rdata_i
                                    HdlValueId: pointer_cs
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: clear_buffer
                            HdlValueInt: 0
                    HdlStmCase: {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops':}]} 
                        HdlStmCaseType: CASE
                        HdlOp: INDEX
                            list: ops
                                HdlValueId: addr_o
                                HdlOp: DOWNTO
                                    list: ops
                                        HdlValueInt: 3
                                        HdlValueInt: 2
                        list: cases
                            tuple
                                HdlValueInt: 00
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: unaligned_rdata_o
                                                HdlOp: CONCAT
                                                    list: ops
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlOp: INDEX
                                                                    list: ops
                                                                        HdlValueId: L0_buffer
                                                                        HdlValueInt: 0
                                                                HdlOp: DOWNTO
                                                                    list: ops
                                                                        HdlValueInt: 15
                                                                        HdlValueInt: 0
                                                        HdlValueId: previous_chunk
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: unaligned_valid_o
                                                HdlValueId: valid_previous_chunk
                            tuple
                                HdlValueInt: 01
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: unaligned_rdata_o
                                                HdlOp: CONCAT
                                                    list: ops
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlOp: INDEX
                                                                    list: ops
                                                                        HdlValueId: L0_buffer
                                                                        HdlValueInt: 1
                                                                HdlOp: DOWNTO
                                                                    list: ops
                                                                        HdlValueInt: 15
                                                                        HdlValueInt: 0
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlOp: INDEX
                                                                    list: ops
                                                                        HdlValueId: L0_buffer
                                                                        HdlValueInt: 0
                                                                HdlOp: DOWNTO
                                                                    list: ops
                                                                        HdlValueInt: 31
                                                                        HdlValueInt: 16
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: unaligned_valid_o
                                                HdlValueId: valid_o
                            tuple
                                HdlValueInt: 10
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: unaligned_rdata_o
                                                HdlOp: CONCAT
                                                    list: ops
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlOp: INDEX
                                                                    list: ops
                                                                        HdlValueId: L0_buffer
                                                                        HdlValueInt: 2
                                                                HdlOp: DOWNTO
                                                                    list: ops
                                                                        HdlValueInt: 15
                                                                        HdlValueInt: 0
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlOp: INDEX
                                                                    list: ops
                                                                        HdlValueId: L0_buffer
                                                                        HdlValueInt: 1
                                                                HdlOp: DOWNTO
                                                                    list: ops
                                                                        HdlValueInt: 31
                                                                        HdlValueInt: 16
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: unaligned_valid_o
                                                HdlValueId: valid_o
                            tuple
                                HdlValueInt: 11
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: unaligned_rdata_o
                                                HdlOp: CONCAT
                                                    list: ops
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlOp: INDEX
                                                                    list: ops
                                                                        HdlValueId: L0_buffer
                                                                        HdlValueInt: 3
                                                                HdlOp: DOWNTO
                                                                    list: ops
                                                                        HdlValueInt: 15
                                                                        HdlValueInt: 0
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlOp: INDEX
                                                                    list: ops
                                                                        HdlValueId: L0_buffer
                                                                        HdlValueInt: 2
                                                                HdlOp: DOWNTO
                                                                    list: ops
                                                                        HdlValueInt: 31
                                                                        HdlValueInt: 16
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: unaligned_valid_o
                                                HdlValueId: valid_o
                    HdlStmCase: CS
                        HdlStmCaseType: CASE
                        HdlValueId: CS
                        list: cases
                            tuple
                                HdlValueId: EMPTY
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: instr_req_o
                                                HdlValueId: branch_i
                                        HdlStmIf
                                            HdlValueId: branch_i
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlStmIf
                                                        HdlValueId: instr_gnt_i
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: NS
                                                                HdlValueId: WAIT_RVALID
                                                        list: elifs
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: NS
                                                                HdlValueId: WAIT_GNT
                                            list: elifs
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: NS
                                                            HdlValueId: EMPTY
                            tuple
                                HdlValueId: WAIT_RVALID
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlStmIf
                                            HdlValueId: branch_i
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlStmIf
                                                        HdlValueId: instr_rvalid_i
                                                        HdlStmBlock: SEQ
                                                            list: body
                                                                HdlOp: ASSIGN
                                                                    list: ops
                                                                        HdlValueId: instr_req_o
                                                                        HdlValueInt: 1
                                                                HdlOp: ASSIGN
                                                                    list: ops
                                                                        HdlValueId: instr_addr_o
                                                                        HdlOp: CONCAT
                                                                            list: ops
                                                                                HdlOp: INDEX
                                                                                    list: ops
                                                                                        HdlValueId: addr_i
                                                                                        HdlOp: DOWNTO
                                                                                            list: ops
                                                                                                HdlValueInt: 31
                                                                                                HdlValueInt: 4
                                                                                HdlValueInt: 0000
                                                                HdlStmIf
                                                                    HdlValueId: instr_gnt_i
                                                                    HdlOp: ASSIGN
                                                                        list: ops
                                                                            HdlValueId: NS
                                                                            HdlValueId: WAIT_RVALID
                                                                    list: elifs
                                                                    HdlOp: ASSIGN
                                                                        list: ops
                                                                            HdlValueId: NS
                                                                            HdlValueId: WAIT_GNT
                                                        list: elifs
                                                        HdlStmBlock: SEQ
                                                            list: body
                                                                HdlOp: ASSIGN
                                                                    list: ops
                                                                        HdlValueId: NS
                                                                        HdlValueId: WAIT_ABORTED
                                            list: elifs
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: valid_o
                                                            HdlValueId: instr_rvalid_i
                                                    HdlStmCase: pointer_cs
                                                        HdlStmCaseType: CASE
                                                        HdlValueId: pointer_cs
                                                        list: cases
                                                            tuple
                                                                HdlValueInt: 00
                                                                HdlStmBlock: SEQ
                                                                    list: body
                                                                        HdlOp: ASSIGN
                                                                            list: ops
                                                                                HdlValueId: unaligned_rdata_o
                                                                                HdlOp: CONCAT
                                                                                    list: ops
                                                                                        HdlOp: INDEX
                                                                                            list: ops
                                                                                                HdlOp: INDEX
                                                                                                    list: ops
                                                                                                        HdlValueId: instr_rdata_i
                                                                                                        HdlValueInt: 0
                                                                                                HdlOp: DOWNTO
                                                                                                    list: ops
                                                                                                        HdlValueInt: 15
                                                                                                        HdlValueInt: 0
                                                                                        HdlOp: INDEX
                                                                                            list: ops
                                                                                                HdlOp: INDEX
                                                                                                    list: ops
                                                                                                        HdlValueId: L0_buffer
                                                                                                        HdlValueInt: 3
                                                                                                HdlOp: DOWNTO
                                                                                                    list: ops
                                                                                                        HdlValueInt: 31
                                                                                                        HdlValueInt: 16
                                                                        HdlStmIf
                                                                            HdlValueId: valid_L0_buffer
                                                                            HdlOp: ASSIGN
                                                                                list: ops
                                                                                    HdlValueId: unaligned_valid_o
                                                                                    HdlValueId: instr_rvalid_i
                                                                            list: elifs
                                                                            HdlOp: ASSIGN
                                                                                list: ops
                                                                                    HdlValueId: unaligned_valid_o
                                                                                    HdlValueInt: 0
                                                            tuple
                                                                HdlValueInt: 01
                                                                HdlStmBlock: SEQ
                                                                    list: body
                                                                        HdlOp: ASSIGN
                                                                            list: ops
                                                                                HdlValueId: unaligned_rdata_o
                                                                                HdlOp: CONCAT
                                                                                    list: ops
                                                                                        HdlOp: INDEX
                                                                                            list: ops
                                                                                                HdlOp: INDEX
                                                                                                    list: ops
                                                                                                        HdlValueId: instr_rdata_i
                                                                                                        HdlValueInt: 1
                                                                                                HdlOp: DOWNTO
                                                                                                    list: ops
                                                                                                        HdlValueInt: 15
                                                                                                        HdlValueInt: 0
                                                                                        HdlOp: INDEX
                                                                                            list: ops
                                                                                                HdlOp: INDEX
                                                                                                    list: ops
                                                                                                        HdlValueId: instr_rdata_i
                                                                                                        HdlValueInt: 0
                                                                                                HdlOp: DOWNTO
                                                                                                    list: ops
                                                                                                        HdlValueInt: 31
                                                                                                        HdlValueInt: 16
                                                                        HdlOp: ASSIGN
                                                                            list: ops
                                                                                HdlValueId: unaligned_valid_o
                                                                                HdlValueId: instr_rvalid_i
                                                            tuple
                                                                HdlValueInt: 10
                                                                HdlStmBlock: SEQ
                                                                    list: body
                                                                        HdlOp: ASSIGN
                                                                            list: ops
                                                                                HdlValueId: unaligned_rdata_o
                                                                                HdlOp: CONCAT
                                                                                    list: ops
                                                                                        HdlOp: INDEX
                                                                                            list: ops
                                                                                                HdlOp: INDEX
                                                                                                    list: ops
                                                                                                        HdlValueId: instr_rdata_i
                                                                                                        HdlValueInt: 2
                                                                                                HdlOp: DOWNTO
                                                                                                    list: ops
                                                                                                        HdlValueInt: 15
                                                                                                        HdlValueInt: 0
                                                                                        HdlOp: INDEX
                                                                                            list: ops
                                                                                                HdlOp: INDEX
                                                                                                    list: ops
                                                                                                        HdlValueId: instr_rdata_i
                                                                                                        HdlValueInt: 1
                                                                                                HdlOp: DOWNTO
                                                                                                    list: ops
                                                                                                        HdlValueInt: 31
                                                                                                        HdlValueInt: 16
                                                                        HdlOp: ASSIGN
                                                                            list: ops
                                                                                HdlValueId: unaligned_valid_o
                                                                                HdlValueId: instr_rvalid_i
                                                            tuple
                                                                HdlValueInt: 11
                                                                HdlStmBlock: SEQ
                                                                    list: body
                                                                        HdlOp: ASSIGN
                                                                            list: ops
                                                                                HdlValueId: unaligned_rdata_o
                                                                                HdlOp: CONCAT
                                                                                    list: ops
                                                                                        HdlOp: INDEX
                                                                                            list: ops
                                                                                                HdlOp: INDEX
                                                                                                    list: ops
                                                                                                        HdlValueId: instr_rdata_i
                                                                                                        HdlValueInt: 3
                                                                                                HdlOp: DOWNTO
                                                                                                    list: ops
                                                                                                        HdlValueInt: 15
                                                                                                        HdlValueInt: 0
                                                                                        HdlOp: INDEX
                                                                                            list: ops
                                                                                                HdlOp: INDEX
                                                                                                    list: ops
                                                                                                        HdlValueId: instr_rdata_i
                                                                                                        HdlValueInt: 2
                                                                                                HdlOp: DOWNTO
                                                                                                    list: ops
                                                                                                        HdlValueInt: 31
                                                                                                        HdlValueInt: 16
                                                                        HdlOp: ASSIGN
                                                                            list: ops
                                                                                HdlValueId: unaligned_valid_o
                                                                                HdlValueId: instr_rvalid_i
                                                    HdlStmIf
                                                        HdlValueId: instr_rvalid_i
                                                        HdlStmBlock: SEQ
                                                            list: body
                                                                HdlStmIf
                                                                    HdlOp: AND_UNARY
                                                                        list: ops
                                                                            HdlValueId: pointer_cs
                                                                    HdlStmBlock: SEQ
                                                                        list: body
                                                                            HdlStmIf
                                                                                HdlValueId: ready_i
                                                                                HdlStmBlock: SEQ
                                                                                    list: body
                                                                                        HdlOp: ASSIGN
                                                                                            list: ops
                                                                                                HdlValueId: instr_req_o
                                                                                                HdlValueInt: 1
                                                                                        HdlOp: ASSIGN
                                                                                            list: ops
                                                                                                HdlValueId: instr_addr_o
                                                                                                HdlOp: ADD
                                                                                                    list: ops
                                                                                                        HdlValueId: current_address
                                                                                                        HdlValueInt: 10
                                                                                        HdlOp: ASSIGN
                                                                                            list: ops
                                                                                                HdlValueId: pointer_ns
                                                                                                HdlValueInt: 0
                                                                                        HdlOp: ASSIGN
                                                                                            list: ops
                                                                                                HdlValueId: update_current_address
                                                                                                HdlValueInt: 1
                                                                                        HdlStmIf
                                                                                            HdlValueId: instr_gnt_i
                                                                                            HdlOp: ASSIGN
                                                                                                list: ops
                                                                                                    HdlValueId: NS
                                                                                                    HdlValueId: WAIT_RVALID
                                                                                            list: elifs
                                                                                            HdlOp: ASSIGN
                                                                                                list: ops
                                                                                                    HdlValueId: NS
                                                                                                    HdlValueId: WAIT_GNT
                                                                                list: elifs
                                                                                HdlStmBlock: SEQ
                                                                                    list: body
                                                                                        HdlOp: ASSIGN
                                                                                            list: ops
                                                                                                HdlValueId: NS
                                                                                                HdlValueId: VALID_L0
                                                                    list: elifs
                                                                    HdlStmBlock: SEQ
                                                                        list: body
                                                                            HdlOp: ASSIGN
                                                                                list: ops
                                                                                    HdlValueId: NS
                                                                                    HdlValueId: VALID_L0
                                                                            HdlStmIf
                                                                                HdlValueId: ready_i
                                                                                HdlOp: ASSIGN
                                                                                    list: ops
                                                                                        HdlValueId: pointer_ns
                                                                                        HdlOp: ADD
                                                                                            list: ops
                                                                                                HdlValueId: pointer_cs
                                                                                                HdlValueInt: 1
                                                                                list: elifs
                                                                                HdlOp: ASSIGN
                                                                                    list: ops
                                                                                        HdlValueId: pointer_ns
                                                                                        HdlValueId: pointer_cs
                                                        list: elifs
                                                        HdlStmBlock: SEQ
                                                            list: body
                                                                HdlOp: ASSIGN
                                                                    list: ops
                                                                        HdlValueId: NS
                                                                        HdlValueId: WAIT_RVALID
                            tuple
                                HdlValueId: VALID_L0
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: valid_o
                                                HdlValueInt: 1
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: rdata_o
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: L0_buffer
                                                        HdlValueId: pointer_cs
                                        HdlStmCase: pointer_cs
                                            HdlStmCaseType: CASE
                                            HdlValueId: pointer_cs
                                            list: cases
                                                tuple
                                                    HdlValueInt: 00
                                                    HdlStmBlock: SEQ
                                                        list: body
                                                            HdlOp: ASSIGN
                                                                list: ops
                                                                    HdlValueId: unaligned_rdata_o
                                                                    HdlOp: CONCAT
                                                                        list: ops
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlOp: INDEX
                                                                                        list: ops
                                                                                            HdlValueId: L0_buffer
                                                                                            HdlValueInt: 0
                                                                                    HdlOp: DOWNTO
                                                                                        list: ops
                                                                                            HdlValueInt: 15
                                                                                            HdlValueInt: 0
                                                                            HdlValueId: previous_chunk
                                                            HdlOp: ASSIGN
                                                                list: ops
                                                                    HdlValueId: unaligned_valid_o
                                                                    HdlValueId: valid_previous_chunk
                                                tuple
                                                    HdlValueInt: 01
                                                    HdlStmBlock: SEQ
                                                        list: body
                                                            HdlOp: ASSIGN
                                                                list: ops
                                                                    HdlValueId: unaligned_rdata_o
                                                                    HdlOp: CONCAT
                                                                        list: ops
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlOp: INDEX
                                                                                        list: ops
                                                                                            HdlValueId: L0_buffer
                                                                                            HdlValueInt: 1
                                                                                    HdlOp: DOWNTO
                                                                                        list: ops
                                                                                            HdlValueInt: 15
                                                                                            HdlValueInt: 0
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlOp: INDEX
                                                                                        list: ops
                                                                                            HdlValueId: L0_buffer
                                                                                            HdlValueInt: 0
                                                                                    HdlOp: DOWNTO
                                                                                        list: ops
                                                                                            HdlValueInt: 31
                                                                                            HdlValueInt: 16
                                                            HdlOp: ASSIGN
                                                                list: ops
                                                                    HdlValueId: unaligned_valid_o
                                                                    HdlValueInt: 1
                                                tuple
                                                    HdlValueInt: 10
                                                    HdlStmBlock: SEQ
                                                        list: body
                                                            HdlOp: ASSIGN
                                                                list: ops
                                                                    HdlValueId: unaligned_rdata_o
                                                                    HdlOp: CONCAT
                                                                        list: ops
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlOp: INDEX
                                                                                        list: ops
                                                                                            HdlValueId: L0_buffer
                                                                                            HdlValueInt: 2
                                                                                    HdlOp: DOWNTO
                                                                                        list: ops
                                                                                            HdlValueInt: 15
                                                                                            HdlValueInt: 0
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlOp: INDEX
                                                                                        list: ops
                                                                                            HdlValueId: L0_buffer
                                                                                            HdlValueInt: 1
                                                                                    HdlOp: DOWNTO
                                                                                        list: ops
                                                                                            HdlValueInt: 31
                                                                                            HdlValueInt: 16
                                                            HdlOp: ASSIGN
                                                                list: ops
                                                                    HdlValueId: unaligned_valid_o
                                                                    HdlValueInt: 1
                                                tuple
                                                    HdlValueInt: 11
                                                    HdlStmBlock: SEQ
                                                        list: body
                                                            HdlOp: ASSIGN
                                                                list: ops
                                                                    HdlValueId: unaligned_rdata_o
                                                                    HdlOp: CONCAT
                                                                        list: ops
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlOp: INDEX
                                                                                        list: ops
                                                                                            HdlValueId: L0_buffer
                                                                                            HdlValueInt: 3
                                                                                    HdlOp: DOWNTO
                                                                                        list: ops
                                                                                            HdlValueInt: 15
                                                                                            HdlValueInt: 0
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlOp: INDEX
                                                                                        list: ops
                                                                                            HdlValueId: L0_buffer
                                                                                            HdlValueInt: 2
                                                                                    HdlOp: DOWNTO
                                                                                        list: ops
                                                                                            HdlValueInt: 31
                                                                                            HdlValueInt: 16
                                                            HdlOp: ASSIGN
                                                                list: ops
                                                                    HdlValueId: unaligned_valid_o
                                                                    HdlValueInt: 1
                                        HdlStmIf
                                            HdlValueId: branch_i
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: instr_req_o
                                                            HdlValueInt: 1
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: instr_addr_o
                                                            HdlOp: CONCAT
                                                                list: ops
                                                                    HdlOp: INDEX
                                                                        list: ops
                                                                            HdlValueId: addr_i
                                                                            HdlOp: DOWNTO
                                                                                list: ops
                                                                                    HdlValueInt: 31
                                                                                    HdlValueInt: 4
                                                                    HdlValueInt: 0000
                                                    HdlStmIf
                                                        HdlValueId: instr_gnt_i
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: NS
                                                                HdlValueId: WAIT_RVALID
                                                        list: elifs
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: NS
                                                                HdlValueId: WAIT_GNT
                                            list: elifs
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlStmIf
                                                        HdlValueId: ready_i
                                                        HdlStmBlock: SEQ
                                                            list: body
                                                                HdlStmIf
                                                                    HdlOp: AND_UNARY
                                                                        list: ops
                                                                            HdlValueId: pointer_cs
                                                                    HdlStmBlock: SEQ
                                                                        list: body
                                                                            HdlOp: ASSIGN
                                                                                list: ops
                                                                                    HdlValueId: instr_req_o
                                                                                    HdlValueInt: 1
                                                                            HdlOp: ASSIGN
                                                                                list: ops
                                                                                    HdlValueId: instr_addr_o
                                                                                    HdlOp: ADD
                                                                                        list: ops
                                                                                            HdlValueId: current_address
                                                                                            HdlValueInt: 10
                                                                            HdlOp: ASSIGN
                                                                                list: ops
                                                                                    HdlValueId: update_current_address
                                                                                    HdlValueInt: 1
                                                                            HdlOp: ASSIGN
                                                                                list: ops
                                                                                    HdlValueId: pointer_ns
                                                                                    HdlValueInt: 0
                                                                            HdlStmIf
                                                                                HdlValueId: instr_gnt_i
                                                                                HdlOp: ASSIGN
                                                                                    list: ops
                                                                                        HdlValueId: NS
                                                                                        HdlValueId: WAIT_RVALID
                                                                                list: elifs
                                                                                HdlOp: ASSIGN
                                                                                    list: ops
                                                                                        HdlValueId: NS
                                                                                        HdlValueId: WAIT_GNT
                                                                    list: elifs
                                                                    HdlStmBlock: SEQ
                                                                        list: body
                                                                            HdlOp: ASSIGN
                                                                                list: ops
                                                                                    HdlValueId: pointer_ns
                                                                                    HdlOp: ADD
                                                                                        list: ops
                                                                                            HdlValueId: pointer_cs
                                                                                            HdlValueInt: 1
                                                                            HdlOp: ASSIGN
                                                                                list: ops
                                                                                    HdlValueId: NS
                                                                                    HdlValueId: VALID_L0
                                                        list: elifs
                                                        HdlStmBlock: SEQ
                                                            list: body
                                                                HdlOp: ASSIGN
                                                                    list: ops
                                                                        HdlValueId: NS
                                                                        HdlValueId: VALID_L0
                            tuple
                                HdlValueId: WAIT_GNT
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlStmIf
                                            HdlValueId: branch_i
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: instr_req_o
                                                            HdlValueInt: 1
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: instr_addr_o
                                                            HdlOp: CONCAT
                                                                list: ops
                                                                    HdlOp: INDEX
                                                                        list: ops
                                                                            HdlValueId: addr_i
                                                                            HdlOp: DOWNTO
                                                                                list: ops
                                                                                    HdlValueInt: 31
                                                                                    HdlValueInt: 4
                                                                    HdlValueInt: 0000
                                                    HdlStmIf
                                                        HdlValueId: instr_gnt_i
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: NS
                                                                HdlValueId: WAIT_RVALID
                                                        list: elifs
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: NS
                                                                HdlValueId: WAIT_GNT
                                            list: elifs
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: instr_req_o
                                                            HdlValueInt: 1
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: instr_addr_o
                                                            HdlValueId: current_address
                                                    HdlStmIf
                                                        HdlValueId: instr_gnt_i
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: NS
                                                                HdlValueId: WAIT_RVALID
                                                        list: elifs
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: NS
                                                                HdlValueId: WAIT_GNT
                            tuple
                                HdlValueId: WAIT_ABORTED
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: clear_buffer
                                                HdlValueInt: 1
                                        HdlStmIf
                                            HdlValueId: instr_rvalid_i
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: instr_req_o
                                                            HdlValueInt: 1
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: instr_addr_o
                                                            HdlValueId: current_address
                                                    HdlStmIf
                                                        HdlValueId: instr_gnt_i
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: NS
                                                                HdlValueId: WAIT_RVALID
                                                        list: elifs
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: NS
                                                                HdlValueId: WAIT_GNT
                                            list: elifs
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: NS
                                                            HdlValueId: WAIT_ABORTED
                        HdlStmBlock: SEQ
                            list: body
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: NS
                                        HdlValueId: EMPTY
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: clear_buffer
                                        HdlValueInt: 1
            HdlStmProcessTriggerConstrain: COMB
        HdlStmProcess
            list: sensitivity
                HdlOp: RISING
                    list: ops
                        HdlValueId: clk
                HdlOp: FALLING
                    list: ops
                        HdlValueId: rst_n
            HdlStmBlock: SEQ
                list: body
                    HdlStmIf
                        HdlOp: EQ
                            list: ops
                                HdlValueId: rst_n
                                HdlValueInt: 0
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmAssign
                                    HdlValueInt: 0
                                    HdlValueId: valid_L0_buffer
                                HdlStmAssign
                                    HdlValueInt: 0
                                    HdlValueId: L0_buffer
                                HdlStmAssign
                                    HdlValueInt: 0
                                    HdlValueId: previous_chunk
                                HdlStmAssign
                                    HdlValueInt: 0
                                    HdlValueId: valid_previous_chunk
                        list: elifs
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmIf
                                    HdlOp: OR_LOG
                                        list: ops
                                            HdlValueId: branch_i
                                            HdlValueId: clear_buffer
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmAssign
                                                HdlValueInt: 0
                                                HdlValueId: valid_L0_buffer
                                            HdlStmAssign
                                                HdlValueInt: 0
                                                HdlValueId: valid_previous_chunk
                                    list: elifs
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmIf
                                                HdlValueId: instr_rvalid_i
                                                HdlStmBlock: SEQ
                                                    list: body
                                                        HdlStmAssign
                                                            HdlValueId: instr_rdata_i
                                                            HdlValueId: L0_buffer
                                                        HdlStmAssign
                                                            HdlValueInt: 1
                                                            HdlValueId: valid_L0_buffer
                                                        HdlStmIf
                                                            HdlValueId: valid_L0_buffer
                                                            HdlStmBlock: SEQ
                                                                list: body
                                                                    HdlStmAssign
                                                                        HdlValueInt: 1
                                                                        HdlValueId: valid_previous_chunk
                                                                    HdlStmAssign
                                                                        HdlOp: INDEX
                                                                            list: ops
                                                                                HdlOp: INDEX
                                                                                    list: ops
                                                                                        HdlValueId: L0_buffer
                                                                                        HdlValueInt: 3
                                                                                HdlOp: DOWNTO
                                                                                    list: ops
                                                                                        HdlValueInt: 31
                                                                                        HdlValueInt: 16
                                                                        HdlValueId: previous_chunk
                                                            list: elifs
                                                list: elifs
            HdlStmProcessTriggerConstrain: FF

MOV HdlStmCase@@CS to body
HdlStmCase: CS
    HdlStmCaseType: CASE
    HdlValueId: CS
    list: cases
        tuple
            HdlValueId: EMPTY
            HdlStmBlock: SEQ
                list: body
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: instr_req_o
                            HdlValueId: branch_i
                    HdlStmIf
                        HdlValueId: branch_i
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmIf
                                    HdlValueId: instr_gnt_i
                                    HdlOp: ASSIGN
                                        list: ops
                                            HdlValueId: NS
                                            HdlValueId: WAIT_RVALID
                                    list: elifs
                                    HdlOp: ASSIGN
                                        list: ops
                                            HdlValueId: NS
                                            HdlValueId: WAIT_GNT
                        list: elifs
                        HdlStmBlock: SEQ
                            list: body
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: NS
                                        HdlValueId: EMPTY
        tuple
            HdlValueId: WAIT_RVALID
            HdlStmBlock: SEQ
                list: body
                    HdlStmIf
                        HdlValueId: branch_i
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmIf
                                    HdlValueId: instr_rvalid_i
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlOp: ASSIGN
                                                list: ops
                                                    HdlValueId: instr_req_o
                                                    HdlValueInt: 1
                                            HdlOp: ASSIGN
                                                list: ops
                                                    HdlValueId: instr_addr_o
                                                    HdlOp: CONCAT
                                                        list: ops
                                                            HdlOp: INDEX
                                                                list: ops
                                                                    HdlValueId: addr_i
                                                                    HdlOp: DOWNTO
                                                                        list: ops
                                                                            HdlValueInt: 31
                                                                            HdlValueInt: 4
                                                            HdlValueInt: 0000
                                            HdlStmIf
                                                HdlValueId: instr_gnt_i
                                                HdlOp: ASSIGN
                                                    list: ops
                                                        HdlValueId: NS
                                                        HdlValueId: WAIT_RVALID
                                                list: elifs
                                                HdlOp: ASSIGN
                                                    list: ops
                                                        HdlValueId: NS
                                                        HdlValueId: WAIT_GNT
                                    list: elifs
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlOp: ASSIGN
                                                list: ops
                                                    HdlValueId: NS
                                                    HdlValueId: WAIT_ABORTED
                        list: elifs
                        HdlStmBlock: SEQ
                            list: body
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: valid_o
                                        HdlValueId: instr_rvalid_i
                                HdlStmCase: pointer_cs
                                    HdlStmCaseType: CASE
                                    HdlValueId: pointer_cs
                                    list: cases
                                        tuple
                                            HdlValueInt: 00
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: unaligned_rdata_o
                                                            HdlOp: CONCAT
                                                                list: ops
                                                                    HdlOp: INDEX
                                                                        list: ops
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlValueId: instr_rdata_i
                                                                                    HdlValueInt: 0
                                                                            HdlOp: DOWNTO
                                                                                list: ops
                                                                                    HdlValueInt: 15
                                                                                    HdlValueInt: 0
                                                                    HdlOp: INDEX
                                                                        list: ops
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlValueId: L0_buffer
                                                                                    HdlValueInt: 3
                                                                            HdlOp: DOWNTO
                                                                                list: ops
                                                                                    HdlValueInt: 31
                                                                                    HdlValueInt: 16
                                                    HdlStmIf
                                                        HdlValueId: valid_L0_buffer
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: unaligned_valid_o
                                                                HdlValueId: instr_rvalid_i
                                                        list: elifs
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: unaligned_valid_o
                                                                HdlValueInt: 0
                                        tuple
                                            HdlValueInt: 01
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: unaligned_rdata_o
                                                            HdlOp: CONCAT
                                                                list: ops
                                                                    HdlOp: INDEX
                                                                        list: ops
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlValueId: instr_rdata_i
                                                                                    HdlValueInt: 1
                                                                            HdlOp: DOWNTO
                                                                                list: ops
                                                                                    HdlValueInt: 15
                                                                                    HdlValueInt: 0
                                                                    HdlOp: INDEX
                                                                        list: ops
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlValueId: instr_rdata_i
                                                                                    HdlValueInt: 0
                                                                            HdlOp: DOWNTO
                                                                                list: ops
                                                                                    HdlValueInt: 31
                                                                                    HdlValueInt: 16
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: unaligned_valid_o
                                                            HdlValueId: instr_rvalid_i
                                        tuple
                                            HdlValueInt: 10
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: unaligned_rdata_o
                                                            HdlOp: CONCAT
                                                                list: ops
                                                                    HdlOp: INDEX
                                                                        list: ops
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlValueId: instr_rdata_i
                                                                                    HdlValueInt: 2
                                                                            HdlOp: DOWNTO
                                                                                list: ops
                                                                                    HdlValueInt: 15
                                                                                    HdlValueInt: 0
                                                                    HdlOp: INDEX
                                                                        list: ops
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlValueId: instr_rdata_i
                                                                                    HdlValueInt: 1
                                                                            HdlOp: DOWNTO
                                                                                list: ops
                                                                                    HdlValueInt: 31
                                                                                    HdlValueInt: 16
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: unaligned_valid_o
                                                            HdlValueId: instr_rvalid_i
                                        tuple
                                            HdlValueInt: 11
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: unaligned_rdata_o
                                                            HdlOp: CONCAT
                                                                list: ops
                                                                    HdlOp: INDEX
                                                                        list: ops
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlValueId: instr_rdata_i
                                                                                    HdlValueInt: 3
                                                                            HdlOp: DOWNTO
                                                                                list: ops
                                                                                    HdlValueInt: 15
                                                                                    HdlValueInt: 0
                                                                    HdlOp: INDEX
                                                                        list: ops
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlValueId: instr_rdata_i
                                                                                    HdlValueInt: 2
                                                                            HdlOp: DOWNTO
                                                                                list: ops
                                                                                    HdlValueInt: 31
                                                                                    HdlValueInt: 16
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: unaligned_valid_o
                                                            HdlValueId: instr_rvalid_i
                                HdlStmIf
                                    HdlValueId: instr_rvalid_i
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmIf
                                                HdlOp: AND_UNARY
                                                    list: ops
                                                        HdlValueId: pointer_cs
                                                HdlStmBlock: SEQ
                                                    list: body
                                                        HdlStmIf
                                                            HdlValueId: ready_i
                                                            HdlStmBlock: SEQ
                                                                list: body
                                                                    HdlOp: ASSIGN
                                                                        list: ops
                                                                            HdlValueId: instr_req_o
                                                                            HdlValueInt: 1
                                                                    HdlOp: ASSIGN
                                                                        list: ops
                                                                            HdlValueId: instr_addr_o
                                                                            HdlOp: ADD
                                                                                list: ops
                                                                                    HdlValueId: current_address
                                                                                    HdlValueInt: 10
                                                                    HdlOp: ASSIGN
                                                                        list: ops
                                                                            HdlValueId: pointer_ns
                                                                            HdlValueInt: 0
                                                                    HdlOp: ASSIGN
                                                                        list: ops
                                                                            HdlValueId: update_current_address
                                                                            HdlValueInt: 1
                                                                    HdlStmIf
                                                                        HdlValueId: instr_gnt_i
                                                                        HdlOp: ASSIGN
                                                                            list: ops
                                                                                HdlValueId: NS
                                                                                HdlValueId: WAIT_RVALID
                                                                        list: elifs
                                                                        HdlOp: ASSIGN
                                                                            list: ops
                                                                                HdlValueId: NS
                                                                                HdlValueId: WAIT_GNT
                                                            list: elifs
                                                            HdlStmBlock: SEQ
                                                                list: body
                                                                    HdlOp: ASSIGN
                                                                        list: ops
                                                                            HdlValueId: NS
                                                                            HdlValueId: VALID_L0
                                                list: elifs
                                                HdlStmBlock: SEQ
                                                    list: body
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: NS
                                                                HdlValueId: VALID_L0
                                                        HdlStmIf
                                                            HdlValueId: ready_i
                                                            HdlOp: ASSIGN
                                                                list: ops
                                                                    HdlValueId: pointer_ns
                                                                    HdlOp: ADD
                                                                        list: ops
                                                                            HdlValueId: pointer_cs
                                                                            HdlValueInt: 1
                                                            list: elifs
                                                            HdlOp: ASSIGN
                                                                list: ops
                                                                    HdlValueId: pointer_ns
                                                                    HdlValueId: pointer_cs
                                    list: elifs
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlOp: ASSIGN
                                                list: ops
                                                    HdlValueId: NS
                                                    HdlValueId: WAIT_RVALID
        tuple
            HdlValueId: VALID_L0
            HdlStmBlock: SEQ
                list: body
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: valid_o
                            HdlValueInt: 1
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: rdata_o
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: L0_buffer
                                    HdlValueId: pointer_cs
                    HdlStmCase: pointer_cs
                        HdlStmCaseType: CASE
                        HdlValueId: pointer_cs
                        list: cases
                            tuple
                                HdlValueInt: 00
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: unaligned_rdata_o
                                                HdlOp: CONCAT
                                                    list: ops
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlOp: INDEX
                                                                    list: ops
                                                                        HdlValueId: L0_buffer
                                                                        HdlValueInt: 0
                                                                HdlOp: DOWNTO
                                                                    list: ops
                                                                        HdlValueInt: 15
                                                                        HdlValueInt: 0
                                                        HdlValueId: previous_chunk
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: unaligned_valid_o
                                                HdlValueId: valid_previous_chunk
                            tuple
                                HdlValueInt: 01
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: unaligned_rdata_o
                                                HdlOp: CONCAT
                                                    list: ops
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlOp: INDEX
                                                                    list: ops
                                                                        HdlValueId: L0_buffer
                                                                        HdlValueInt: 1
                                                                HdlOp: DOWNTO
                                                                    list: ops
                                                                        HdlValueInt: 15
                                                                        HdlValueInt: 0
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlOp: INDEX
                                                                    list: ops
                                                                        HdlValueId: L0_buffer
                                                                        HdlValueInt: 0
                                                                HdlOp: DOWNTO
                                                                    list: ops
                                                                        HdlValueInt: 31
                                                                        HdlValueInt: 16
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: unaligned_valid_o
                                                HdlValueInt: 1
                            tuple
                                HdlValueInt: 10
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: unaligned_rdata_o
                                                HdlOp: CONCAT
                                                    list: ops
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlOp: INDEX
                                                                    list: ops
                                                                        HdlValueId: L0_buffer
                                                                        HdlValueInt: 2
                                                                HdlOp: DOWNTO
                                                                    list: ops
                                                                        HdlValueInt: 15
                                                                        HdlValueInt: 0
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlOp: INDEX
                                                                    list: ops
                                                                        HdlValueId: L0_buffer
                                                                        HdlValueInt: 1
                                                                HdlOp: DOWNTO
                                                                    list: ops
                                                                        HdlValueInt: 31
                                                                        HdlValueInt: 16
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: unaligned_valid_o
                                                HdlValueInt: 1
                            tuple
                                HdlValueInt: 11
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: unaligned_rdata_o
                                                HdlOp: CONCAT
                                                    list: ops
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlOp: INDEX
                                                                    list: ops
                                                                        HdlValueId: L0_buffer
                                                                        HdlValueInt: 3
                                                                HdlOp: DOWNTO
                                                                    list: ops
                                                                        HdlValueInt: 15
                                                                        HdlValueInt: 0
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlOp: INDEX
                                                                    list: ops
                                                                        HdlValueId: L0_buffer
                                                                        HdlValueInt: 2
                                                                HdlOp: DOWNTO
                                                                    list: ops
                                                                        HdlValueInt: 31
                                                                        HdlValueInt: 16
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: unaligned_valid_o
                                                HdlValueInt: 1
                    HdlStmIf
                        HdlValueId: branch_i
                        HdlStmBlock: SEQ
                            list: body
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: instr_req_o
                                        HdlValueInt: 1
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: instr_addr_o
                                        HdlOp: CONCAT
                                            list: ops
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: addr_i
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 31
                                                                HdlValueInt: 4
                                                HdlValueInt: 0000
                                HdlStmIf
                                    HdlValueId: instr_gnt_i
                                    HdlOp: ASSIGN
                                        list: ops
                                            HdlValueId: NS
                                            HdlValueId: WAIT_RVALID
                                    list: elifs
                                    HdlOp: ASSIGN
                                        list: ops
                                            HdlValueId: NS
                                            HdlValueId: WAIT_GNT
                        list: elifs
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmIf
                                    HdlValueId: ready_i
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmIf
                                                HdlOp: AND_UNARY
                                                    list: ops
                                                        HdlValueId: pointer_cs
                                                HdlStmBlock: SEQ
                                                    list: body
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: instr_req_o
                                                                HdlValueInt: 1
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: instr_addr_o
                                                                HdlOp: ADD
                                                                    list: ops
                                                                        HdlValueId: current_address
                                                                        HdlValueInt: 10
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: update_current_address
                                                                HdlValueInt: 1
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: pointer_ns
                                                                HdlValueInt: 0
                                                        HdlStmIf
                                                            HdlValueId: instr_gnt_i
                                                            HdlOp: ASSIGN
                                                                list: ops
                                                                    HdlValueId: NS
                                                                    HdlValueId: WAIT_RVALID
                                                            list: elifs
                                                            HdlOp: ASSIGN
                                                                list: ops
                                                                    HdlValueId: NS
                                                                    HdlValueId: WAIT_GNT
                                                list: elifs
                                                HdlStmBlock: SEQ
                                                    list: body
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: pointer_ns
                                                                HdlOp: ADD
                                                                    list: ops
                                                                        HdlValueId: pointer_cs
                                                                        HdlValueInt: 1
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: NS
                                                                HdlValueId: VALID_L0
                                    list: elifs
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlOp: ASSIGN
                                                list: ops
                                                    HdlValueId: NS
                                                    HdlValueId: VALID_L0
        tuple
            HdlValueId: WAIT_GNT
            HdlStmBlock: SEQ
                list: body
                    HdlStmIf
                        HdlValueId: branch_i
                        HdlStmBlock: SEQ
                            list: body
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: instr_req_o
                                        HdlValueInt: 1
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: instr_addr_o
                                        HdlOp: CONCAT
                                            list: ops
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: addr_i
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 31
                                                                HdlValueInt: 4
                                                HdlValueInt: 0000
                                HdlStmIf
                                    HdlValueId: instr_gnt_i
                                    HdlOp: ASSIGN
                                        list: ops
                                            HdlValueId: NS
                                            HdlValueId: WAIT_RVALID
                                    list: elifs
                                    HdlOp: ASSIGN
                                        list: ops
                                            HdlValueId: NS
                                            HdlValueId: WAIT_GNT
                        list: elifs
                        HdlStmBlock: SEQ
                            list: body
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: instr_req_o
                                        HdlValueInt: 1
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: instr_addr_o
                                        HdlValueId: current_address
                                HdlStmIf
                                    HdlValueId: instr_gnt_i
                                    HdlOp: ASSIGN
                                        list: ops
                                            HdlValueId: NS
                                            HdlValueId: WAIT_RVALID
                                    list: elifs
                                    HdlOp: ASSIGN
                                        list: ops
                                            HdlValueId: NS
                                            HdlValueId: WAIT_GNT
        tuple
            HdlValueId: WAIT_ABORTED
            HdlStmBlock: SEQ
                list: body
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: clear_buffer
                            HdlValueInt: 1
                    HdlStmIf
                        HdlValueId: instr_rvalid_i
                        HdlStmBlock: SEQ
                            list: body
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: instr_req_o
                                        HdlValueInt: 1
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: instr_addr_o
                                        HdlValueId: current_address
                                HdlStmIf
                                    HdlValueId: instr_gnt_i
                                    HdlOp: ASSIGN
                                        list: ops
                                            HdlValueId: NS
                                            HdlValueId: WAIT_RVALID
                                    list: elifs
                                    HdlOp: ASSIGN
                                        list: ops
                                            HdlValueId: NS
                                            HdlValueId: WAIT_GNT
                        list: elifs
                        HdlStmBlock: SEQ
                            list: body
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: NS
                                        HdlValueId: WAIT_ABORTED
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: NS
                    HdlValueId: EMPTY
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: clear_buffer
                    HdlValueInt: 1

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['addr_o',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '3'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '2'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['addr_o',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '3'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '2'}]}]} 
    INS HdlOp@@INDEX to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['addr_o',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '3'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '2'}]}]} 
    UPD HdlOp@@INDEX to INDEX
        INS list@@ops to INDEX
        INS HdlOp@@DOWNTO to ops
        HdlOp: DOWNTO
            list: ops
                HdlValueInt: 3
                HdlValueInt: 2
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        UPD HdlOp@@ASSIGN to ASSIGN
            INS list@@ops to ASSIGN
            INS HdlValueId@@unaligned_rdata_o to ops
            INS HdlOp@@CONCAT to ops
            UPD HdlOp@@CONCAT to CONCAT
                INS list@@ops to CONCAT


CommitId: d79722ba47340974b663dc18967c0ec292bf2129
Controller: change behavior of DRET instruction
--- a/rtl/ibex_controller.sv
+++ b/rtl/ibex_controller.sv
@@ -104,6 +104,8 @@ module ibex_controller (
   logic stall;
   logic halt_if;
   logic halt_id;
+  logic illegal_dret;
+  logic illegal_insn;
   logic exc_req;
   logic exc_req_lsu;
   logic special_req;

ParseResult:
INS HdlIdDef@@illegal_dret to objs
HdlIdDef: illegal_dret
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL

INS HdlIdDef@@illegal_insn to objs
HdlIdDef: illegal_insn
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: INTERNAL


CommitId: d79722ba47340974b663dc18967c0ec292bf2129
Controller: change behavior of DRET instruction
--- a/rtl/ibex_controller.sv
+++ b/rtl/ibex_controller.sv
@@ -119,7 +121,7 @@ module ibex_controller (
   // glitches
   always_ff @(negedge clk_i) begin
     // print warning in case of decoding errors
-    if ((ctrl_fsm_cs == DECODE) && instr_valid_i && illegal_insn_i) begin
+    if ((ctrl_fsm_cs == DECODE) && instr_valid_i && illegal_insn) begin
       $display("%t: Illegal instruction (core %0d) at PC 0x%h: 0x%h", $time, ibex_core.core_id_i,
                ibex_id_stage.pc_id_i, ibex_id_stage.instr_rdata_i);
     end

ParseResult:
UPD HdlStmIf@@ to 
    UPD HdlOp@@AND_LOG to AND_LOG
        UPD HdlValueId@@illegal_insn_i to illegal_insn


CommitId: d79722ba47340974b663dc18967c0ec292bf2129
Controller: change behavior of DRET instruction
--- a/rtl/ibex_controller.sv
+++ b/rtl/ibex_controller.sv
@@ -134,8 +136,13 @@ module ibex_controller (
   assign load_err_d  = load_err_i;
   assign store_err_d = store_err_i;
 
+  // "Executing DRET outside of Debug Mode causes an illegal instruction exception."
+  // [Debug Spec v0.13.2, p.41]
+  assign illegal_dret = dret_insn_i & ~debug_mode_q;
+  assign illegal_insn = illegal_insn_i | illegal_dret;
+
   // exception requests
-  assign exc_req     = ecall_insn_i | ebrk_insn_i | illegal_insn_i | instr_fetch_err_i;
+  assign exc_req     = ecall_insn_i | ebrk_insn_i | illegal_insn | instr_fetch_err_i;
 
   // LSU exception requests
   assign exc_req_lsu = store_err_i | load_err_i;

ParseResult:
INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: AND
        list: ops
            HdlValueId: dret_insn_i
            HdlOp: NEG
                list: ops
                    HdlValueId: debug_mode_q
    HdlValueId: illegal_dret

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: OR
        list: ops
            HdlValueId: illegal_insn_i
            HdlValueId: illegal_dret
    HdlValueId: illegal_insn

UPD HdlStmAssign@@ to 
    UPD HdlOp@@OR to OR
        UPD HdlOp@@OR to OR
            UPD HdlValueId@@illegal_insn_i to illegal_insn


CommitId: d79722ba47340974b663dc18967c0ec292bf2129
Controller: change behavior of DRET instruction
--- a/rtl/ibex_controller.sv
+++ b/rtl/ibex_controller.sv
@@ -442,7 +449,7 @@ module ibex_controller (
             exc_cause_o = EXC_CAUSE_INSTR_ACCESS_FAULT;
             csr_mtval_o = pc_id_i;
 
-          end else if (illegal_insn_i) begin
+          end else if (illegal_insn) begin
             exc_cause_o = EXC_CAUSE_ILLEGAL_INSN;
             csr_mtval_o = instr_is_compressed_i ? {16'b0, instr_compressed_i} : instr_i;
 
ParseResult:
UPD HdlStmIf@@ to 
    UPD HdlValueId@@illegal_insn_i to illegal_insn


CommitId: e899af439535a9459129ae7129b15264d690ccaf
Fix syntax error for RTL compiler
--- a/alu_div.sv
+++ b/alu_div.sv
@@ -52,6 +52,7 @@ module riscv_alu_div
   ///////////////////////////////////////////////////////////////////////////////
 
   logic [C_WIDTH-1:0] ResReg_DP, ResReg_DN;
+  logic [C_WIDTH-1:0] ResReg_DP_rev;
   logic [C_WIDTH-1:0] AReg_DP, AReg_DN;
   logic [C_WIDTH-1:0] BReg_DP, BReg_DN;
 

ParseResult:
INS HdlIdDef@@ResReg_DP_rev to objs
HdlIdDef: ResReg_DP_rev
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlOp: SUB
                        list: ops
                            HdlValueId: C_WIDTH
                            HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: INTERNAL


CommitId: e899af439535a9459129ae7129b15264d690ccaf
Fix syntax error for RTL compiler
--- a/alu_div.sv
+++ b/alu_div.sv
@@ -85,7 +86,8 @@ module riscv_alu_div
   // attention: logical shift in case of negative operand B!
   assign BMux_D      = (LoadEn_S) ? OpB_DI : {CompInv_SP, (BReg_DP[$high(BReg_DP):1])};
 
-  assign OutMux_D    = (RemSel_SP) ? AReg_DP : {<<{ResReg_DP}};
+  assign ResReg_DP_rev = {<<{ResReg_DP}};
+  assign OutMux_D    = (RemSel_SP) ? AReg_DP : ResReg_DP_rev;
 
   // invert if necessary
   assign Res_DO      = (ResInv_SP) ? -$signed(OutMux_D) : OutMux_D;
ParseResult:
INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlExprNotImplemented: src
    HdlValueId: ResReg_DP_rev

UPD HdlStmAssign@@ to 
    UPD HdlOp@@TERNARY to TERNARY
        INS HdlValueId@@ResReg_DP_rev to ops

UPD HdlStmAssign@@ to 
    UPD HdlOp@@TERNARY to TERNARY
        DEL HdlExprNotImplemented@@ from ops


CommitId: 42eee90cf874a5d599cdc4f6f4fbffaccb1fa1db
Make RAM size configurable in compliance test system
--- a/dv/riscv_compliance/rtl/ibex_riscv_compliance.sv
+++ b/dv/riscv_compliance/rtl/ibex_riscv_compliance.sv
@@ -42,8 +42,10 @@ module ibex_riscv_compliance (
     TestUtilDevice
   } bus_device_e;
 
-  localparam NrDevices = 2;
-  localparam NrHosts = 3;
+  localparam int unsigned NrDevices = 2;
+  localparam int unsigned NrHosts = 3;
+  // 64 kB RAM. Must be a power of 2. Check bus configuration below when changing.
+  localparam int unsigned RamSizeWords = 64*1024/4;
 
   // host and device signals
   logic           host_req    [NrHosts];

ParseResult:
INS HdlIdDef@@RamSizeWords to objs

UPD HdlIdDef@@NrDevices to NrDevices
    INS HdlOp@@PARAMETRIZATION to NrDevices
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: int
            HdlOp: MAP_ASSOCIATION
                list: ops
                    HdlValueId: signed

UPD HdlIdDef@@NrHosts to NrHosts
    INS HdlOp@@PARAMETRIZATION to NrHosts
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: int
            HdlOp: MAP_ASSOCIATION
                list: ops
                    HdlValueId: signed


CommitId: 42eee90cf874a5d599cdc4f6f4fbffaccb1fa1db
Make RAM size configurable in compliance test system
--- a/dv/riscv_compliance/rtl/ibex_riscv_compliance.sv
+++ b/dv/riscv_compliance/rtl/ibex_riscv_compliance.sv
@@ -70,7 +72,7 @@ module ibex_riscv_compliance (
   logic [31:0] cfg_device_addr_base [NrDevices];
   logic [31:0] cfg_device_addr_mask [NrDevices];
   assign cfg_device_addr_base[Ram] = 32'h0;
-  assign cfg_device_addr_mask[Ram] = ~32'hFFFF; // 64 kB
+  assign cfg_device_addr_mask[Ram] = ~32'(RamSizeWords * 4 - 1);
   assign cfg_device_addr_base[TestUtilDevice] = 32'h20000;
   assign cfg_device_addr_mask[TestUtilDevice] = ~32'h3FF; // 1 kB
 

ParseResult:
UPD HdlStmAssign@@ to 
    UPD HdlOp@@NEG to NEG
        INS list@@ops to NEG
        INS HdlOp@@CALL to ops
        UPD HdlOp@@CALL to CALL
            INS list@@ops to CALL
            INS HdlValueInt@@32 to ops
            INS HdlOp@@SUB to ops
            UPD HdlOp@@SUB to SUB
                INS list@@ops to SUB
                INS HdlOp@@MUL to ops
                INS HdlValueInt@@1 to ops
                UPD HdlOp@@MUL to MUL
                    INS HdlValueId@@RamSizeWords to ops

UPD HdlStmAssign@@ to 
    UPD HdlOp@@NEG to NEG
        MOV list@@ops to NEG
        list: ops
            HdlValueInt: ffff
        UPD HdlValueInt@@ffff to 4


CommitId: 18f5ffcd4a9f125422e11593a1210d1ec14b68c0
Fix wait_gnt signal for prefetcher if transaction was aborted
--- a/prefetch_buffer.sv
+++ b/prefetch_buffer.sv
@@ -482,6 +482,7 @@ module riscv_prefetch_buffer
       WAIT_ABORTED: begin
         // prepare for next request
         instr_req_o  = 1'b1;
+        wait_gnt     = 1'b1;
 
         if (instr_rvalid_i) begin
           // no need to send address, already done in WAIT_RVALID

ParseResult:
UPD HdlStmCase@@CS to CS
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: wait_gnt
                HdlValueInt: 1


CommitId: 74abc47b7179b9a651240a4c856eb578e53b8a7b
Add missing `default` in `unique case`, propagate `'X` in FSM states
--- a/rtl/ibex_cs_registers.sv
+++ b/rtl/ibex_cs_registers.sv
@@ -481,6 +481,7 @@ module ibex_cs_registers #(
         CSR_OP_WRITE:  PCCR_n[0] = csr_wdata_i;
         CSR_OP_SET:    PCCR_n[0] = csr_wdata_i | PCCR_q[0];
         CSR_OP_CLEAR:  PCCR_n[0] = csr_wdata_i & ~(PCCR_q[0]);
+        default:       ;
       endcase
     end
   end

ParseResult:
INS HdlStmNop@@default to csr_op_i


CommitId: 6a1ac272da5c17945fe1b058b1a8cfb8fc922e57
Fix linting errors
--- a/rtl/ibex_if_stage.sv
+++ b/rtl/ibex_if_stage.sv
@@ -109,6 +109,10 @@ module ibex_if_stage #(
   logic        [5:0] irq_id;
   logic              unused_irq_bit;
 
+  logic        [7:0] unused_boot_addr;
+
+  assign unused_boot_addr = boot_addr_i[7:0];
+
   // extract interrupt ID from exception cause
   assign irq_id         = {exc_cause};
   assign unused_irq_bit = irq_id[5];   // MSB distinguishes interrupts from exceptions
ParseResult:
INS HdlIdDef@@unused_boot_addr to objs
HdlIdDef: unused_boot_addr
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 7
                    HdlValueInt: 0
    HdlDirection: INTERNAL

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: INDEX
        list: ops
            HdlValueId: boot_addr_i
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 7
                    HdlValueInt: 0
    HdlValueId: unused_boot_addr


CommitId: 8b4e33711847e4ea88cd0f205b8f66f8e09f8bac
Decoder: fix drive conflict, set `jump_set_o` for JALR
--- a/rtl/ibex_decoder.sv
+++ b/rtl/ibex_decoder.sv
@@ -237,6 +237,7 @@ module ibex_decoder #(
           imm_b_mux_sel_o     = IMM_B_I;
           alu_operator_o      = ALU_ADD;
           regfile_we          = 1'b0;
+          jump_set_o          = 1'b1;
         end else begin
           // Calculate and store PC+4
           alu_op_a_mux_sel_o  = OP_A_CURRPC;

ParseResult:
UPD HdlStmProcess@@ to 
    INS HdlStmProcessTriggerConstrain@@COMB to 

UPD HdlStmCase@@opcode to opcode
    INS HdlStmCaseType@@CASE to opcode
    INS HdlValueId@@opcode to opcode
    INS HdlStmCaseUniqConstrain@@UNIQUE to opcode

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: jump_set_o
                HdlValueInt: 1

UPD HdlStmCase@@opcode to opcode
    DEL HdlStmCaseType@@CASE from opcode
    DEL HdlValueId@@opcode from opcode
    DEL HdlStmCaseUniqConstrain@@UNIQUE from opcode

UPD HdlStmProcess@@ to 
    DEL HdlStmProcessTriggerConstrain@@COMB from 


CommitId: 8b4e33711847e4ea88cd0f205b8f66f8e09f8bac
Decoder: fix drive conflict, set `jump_set_o` for JALR
--- a/rtl/ibex_decoder.sv
+++ b/rtl/ibex_decoder.sv
@@ -550,7 +551,7 @@ module ibex_decoder #(
 
           // rs1 and rd must be 0
           if (instr[`REG_S1] || instr[`REG_D]) begin
-            illegal_insn_o = 1'b1;
+            illegal_insn = 1'b1;
           end
         end else begin
           // instruction to read/modify CSR
ParseResult:
UPD HdlStmProcess@@ to 
    INS HdlStmProcessTriggerConstrain@@COMB to 

UPD HdlStmCase@@opcode to opcode
    INS HdlStmCaseType@@CASE to opcode
    INS HdlValueId@@opcode to opcode
    INS HdlStmCaseUniqConstrain@@UNIQUE to opcode

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@illegal_insn_o to illegal_insn

UPD HdlStmCase@@opcode to opcode
    DEL HdlStmCaseType@@CASE from opcode
    DEL HdlValueId@@opcode from opcode
    DEL HdlStmCaseUniqConstrain@@UNIQUE from opcode

UPD HdlStmProcess@@ to 
    DEL HdlStmProcessTriggerConstrain@@COMB from 


CommitId: db75d30547ec2d7bf02bf38381caff2fac7f3f99
Replace non-unique `case` constructs by `unique case`
--- a/rtl/ibex_cs_registers.sv
+++ b/rtl/ibex_cs_registers.sv
@@ -190,8 +190,7 @@ module ibex_cs_registers #(
   // read logic
   always_comb begin
     csr_rdata_int = '0;
-    case (csr_addr_i)
-
+    unique case (csr_addr_i)
       // mstatus: always M-mode, contains IE bit
       CSR_MSTATUS: csr_rdata_int = {
                                   19'b0,

ParseResult:
UPD HdlStmCase@@csr_addr_i to csr_addr_i
    INS HdlStmCaseUniqConstrain@@UNIQUE to csr_addr_i


CommitId: db75d30547ec2d7bf02bf38381caff2fac7f3f99
Replace non-unique `case` constructs by `unique case`
--- a/rtl/ibex_cs_registers.sv
+++ b/rtl/ibex_cs_registers.sv
@@ -219,11 +218,10 @@ module ibex_cs_registers #(
       CSR_DPC: csr_rdata_int = depc_q;
       CSR_DSCRATCH0: csr_rdata_int = dscratch0_q;
       CSR_DSCRATCH1: csr_rdata_int = dscratch1_q;
-      default: ;
+      default:;
     endcase
   end
 
-
   // write logic
   always_comb begin
     mepc_n       = mepc_q;

ParseResult:
UPD HdlStmCase@@csr_addr_i to csr_addr_i
    INS HdlStmCaseUniqConstrain@@UNIQUE to csr_addr_i


CommitId: db75d30547ec2d7bf02bf38381caff2fac7f3f99
Replace non-unique `case` constructs by `unique case`
--- a/rtl/ibex_cs_registers.sv
+++ b/rtl/ibex_cs_registers.sv
@@ -235,7 +233,7 @@ module ibex_cs_registers #(
     mcause_n     = mcause_q;
     exception_pc = pc_id_i;
 
-    case (csr_addr_i)
+    unique case (csr_addr_i)
       // mstatus: IE bit
       CSR_MSTATUS: if (csr_we_int) begin
         mstatus_n = '{

ParseResult:
UPD HdlStmCase@@csr_addr_i to csr_addr_i
    INS HdlStmCaseUniqConstrain@@UNIQUE to csr_addr_i


CommitId: db75d30547ec2d7bf02bf38381caff2fac7f3f99
Replace non-unique `case` constructs by `unique case`
--- a/rtl/ibex_cs_registers.sv
+++ b/rtl/ibex_cs_registers.sv
@@ -283,7 +281,7 @@ module ibex_cs_registers #(
         begin
           dscratch1_n = csr_wdata_int;
         end
-      default: ;
+      default:;
     endcase
 
     // exception controller gets priority over other writes

ParseResult:
UPD HdlStmCase@@csr_addr_i to csr_addr_i
    INS HdlStmCaseUniqConstrain@@UNIQUE to csr_addr_i


CommitId: db75d30547ec2d7bf02bf38381caff2fac7f3f99
Replace non-unique `case` constructs by `unique case`
--- a/rtl/ibex_cs_registers.sv
+++ b/rtl/ibex_cs_registers.sv
@@ -332,7 +330,6 @@ module ibex_cs_registers #(
 
   // CSR operation logic
   always_comb begin
-    csr_wdata_int = csr_wdata_i;
     csr_we_int    = 1'b1;
 
     unique case (csr_op_i)

ParseResult:
UPD HdlStmCase@@csr_op_i to csr_op_i
    INS HdlStmBlock@@SEQ to csr_op_i
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: csr_wdata_int
                    HdlValueInt: X
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: csr_we_int
                    HdlValueInt: x

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: csr_wdata_int
                HdlValueId: csr_wdata_i


CommitId: db75d30547ec2d7bf02bf38381caff2fac7f3f99
Replace non-unique `case` constructs by `unique case`
--- a/rtl/ibex_cs_registers.sv
+++ b/rtl/ibex_cs_registers.sv
@@ -343,7 +340,10 @@ module ibex_cs_registers #(
         csr_wdata_int = csr_wdata_i;
         csr_we_int    = 1'b0;
       end
-      default:;
+      default: begin
+        csr_wdata_int = 'X;
+        csr_we_int    = 1'bX;
+      end
     endcase
   end
 

ParseResult:
UPD HdlStmCase@@csr_op_i to csr_op_i
    INS HdlStmBlock@@SEQ to csr_op_i
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: csr_wdata_int
                    HdlValueInt: X
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: csr_we_int
                    HdlValueInt: x

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: csr_wdata_int
                HdlValueId: csr_wdata_i

DEL HdlStmNop@@default from csr_op_i


CommitId: db75d30547ec2d7bf02bf38381caff2fac7f3f99
Replace non-unique `case` constructs by `unique case`
--- a/rtl/ibex_cs_registers.sv
+++ b/rtl/ibex_cs_registers.sv
@@ -481,7 +481,7 @@ module ibex_cs_registers #(
         CSR_OP_WRITE:  PCCR_n[0] = csr_wdata_i;
         CSR_OP_SET:    PCCR_n[0] = csr_wdata_i | PCCR_q[0];
         CSR_OP_CLEAR:  PCCR_n[0] = csr_wdata_i & ~(PCCR_q[0]);
-        default:       ;
+        default:       PCCR_n[0] = 'X;
       endcase
     end
   end

ParseResult:
UPD HdlStmCase@@csr_op_i to csr_op_i
    INS HdlOp@@ASSIGN to csr_op_i
    HdlOp: ASSIGN
        list: ops
            HdlOp: INDEX
                list: ops
                    HdlValueId: PCCR_n
                    HdlValueId: c
            HdlValueInt: X

DEL HdlStmNop@@default from csr_op_i


CommitId: db75d30547ec2d7bf02bf38381caff2fac7f3f99
Replace non-unique `case` constructs by `unique case`
--- a/rtl/ibex_cs_registers.sv
+++ b/rtl/ibex_cs_registers.sv
@@ -502,7 +502,7 @@ module ibex_cs_registers #(
           CSR_OP_WRITE:  PCCR_n[c] = csr_wdata_i;
           CSR_OP_SET:    PCCR_n[c] = csr_wdata_i | PCCR_q[c];
           CSR_OP_CLEAR:  PCCR_n[c] = csr_wdata_i & ~(PCCR_q[c]);
-          default:       ;
+          default:       PCCR_n[c] = 'X;
         endcase
       end
     end

ParseResult:
UPD HdlStmCase@@csr_op_i to csr_op_i
    INS HdlOp@@ASSIGN to csr_op_i
    HdlOp: ASSIGN
        list: ops
            HdlValueId: PCMR_n
            HdlValueInt: X


CommitId: ae547c8d3010d86ef7afdee900d461616c3cb414
[top_pkg] Fix style lint warnings
--- a/rtl/ibex_alu.sv
+++ b/rtl/ibex_alu.sv
@@ -591,9 +591,9 @@ module ibex_alu #(
     `define _N(stg) (16 >> stg)
 
     // bext / bdep control bit generation
-    for (genvar stg=0; stg<5; stg++) begin
+    for (genvar stg=0; stg<5; stg++) begin : gen_stage
       // number of segs: 2** stg
-      for (genvar seg=0; seg<2**stg; seg++) begin
+      for (genvar seg=0; seg<2**stg; seg++) begin : gen_segment
 
         assign lrotc_stage[stg][2*`_N(stg)*(seg+1)-1 : 2*`_N(stg)*seg] =
             {{`_N(stg){1'b0}},{`_N(stg){1'b1}}} <<

ParseResult:
UPD HdlStmIf@@ to 
    INS HdlValueId@@RV32B to 
    INS list@@elifs to 

UPD HdlStmIf@@ to 
    DEL HdlValueId@@RV32B from 
    DEL list@@elifs from 


CommitId: ae547c8d3010d86ef7afdee900d461616c3cb414
[top_pkg] Fix style lint warnings
--- a/rtl/ibex_alu.sv
+++ b/rtl/ibex_alu.sv
@@ -611,7 +611,7 @@ module ibex_alu #(
     end
     `undef _N
 
-    for (genvar stg=0; stg<5; stg++) begin
+    for (genvar stg=0; stg<5; stg++) begin : gen_zbe_mask
       assign butterfly_zbe_mask_not[stg] =
           ~(butterfly_zbe_mask_l[stg] | butterfly_zbe_mask_r[stg]);
     end

ParseResult:
UPD HdlStmIf@@ to 
    INS HdlValueId@@RV32B to 
    INS list@@elifs to 

UPD HdlStmIf@@ to 
    DEL HdlValueId@@RV32B from 
    DEL list@@elifs from 


CommitId: ae547c8d3010d86ef7afdee900d461616c3cb414
[top_pkg] Fix style lint warnings
--- a/rtl/ibex_alu.sv
+++ b/rtl/ibex_alu.sv
@@ -708,17 +708,17 @@ module ibex_alu #(
     // Shuffle / Unshuffle //
     /////////////////////////
 
-    localparam logic [31:0] SHUFFLE_MASK_L [0:3] =
-        '{32'h00ff_0000, 32'h0f00_0f00, 32'h3030_3030, 32'h4444_4444};
-    localparam logic [31:0] SHUFFLE_MASK_R [0:3] =
-        '{32'h0000_ff00, 32'h00f0_00f0, 32'h0c0c_0c0c, 32'h2222_2222};
+    localparam logic [31:0] SHUFFLE_MASK_L [4] =
+        '{32'h4444_4444, 32'h3030_3030, 32'h0f00_0f00, 32'h00ff_0000};
+    localparam logic [31:0] SHUFFLE_MASK_R [4] =
+        '{32'h2222_2222, 32'h0c0c_0c0c, 32'h00f0_00f0, 32'h0000_ff00};
 
-    localparam logic [31:0] FLIP_MASK_L [0:3] =
-        '{32'h2200_1100, 32'h0044_0000, 32'h4411_0000, 32'h1100_0000};
-    localparam logic [31:0] FLIP_MASK_R [0:3] =
-        '{32'h0088_0044, 32'h0000_2200, 32'h0000_8822, 32'h0000_0088};
+    localparam logic [31:0] FLIP_MASK_L [4] =
+        '{32'h1100_0000, 32'h4411_0000, 32'h0044_0000, 32'h2200_1100};
+    localparam logic [31:0] FLIP_MASK_R [4] =
+        '{32'h0000_0088, 32'h0000_8822, 32'h0000_2200, 32'h0088_0044};
 
-    logic [31:0] SHUFFLE_MASK_NOT [0:3];
+    logic [31:0] SHUFFLE_MASK_NOT [4];
     for(genvar i = 0; i < 4; i++) begin : gen_shuffle_mask_not
       assign SHUFFLE_MASK_NOT[i] = ~(SHUFFLE_MASK_L[i] | SHUFFLE_MASK_R[i]);
     end
ParseResult:
UPD HdlStmIf@@ to 
    INS HdlValueId@@RV32B to 
    INS list@@elifs to 

UPD HdlIdDef@@SHUFFLE_MASK_L to SHUFFLE_MASK_L
    INS HdlValueInt@@44444444 to value

UPD HdlIdDef@@SHUFFLE_MASK_L to SHUFFLE_MASK_L
    UPD HdlValueInt@@00ff0000 to 30303030
    UPD HdlValueInt@@30303030 to 00ff0000
    DEL HdlValueInt@@44444444 from value

UPD HdlIdDef@@SHUFFLE_MASK_R to SHUFFLE_MASK_R
    INS HdlValueInt@@22222222 to value

UPD HdlIdDef@@SHUFFLE_MASK_R to SHUFFLE_MASK_R
    UPD HdlValueInt@@0000ff00 to 0c0c0c0c
    UPD HdlValueInt@@0c0c0c0c to 0000ff00
    DEL HdlValueInt@@22222222 from value

UPD HdlIdDef@@FLIP_MASK_L to FLIP_MASK_L
    UPD HdlValueInt@@22001100 to 11000000
    UPD HdlValueInt@@00440000 to 44110000
    UPD HdlValueInt@@44110000 to 00440000
    UPD HdlValueInt@@11000000 to 22001100

UPD HdlIdDef@@FLIP_MASK_R to FLIP_MASK_R
    UPD HdlValueInt@@00880044 to 00000088
    UPD HdlValueInt@@00002200 to 00008822
    UPD HdlValueInt@@00008822 to 00002200
    UPD HdlValueInt@@00000088 to 00880044

UPD HdlIdDef@@SHUFFLE_MASK_NOT to SHUFFLE_MASK_NOT
    UPD HdlOp@@INDEX to INDEX
        UPD HdlOp@@DOWNTO to DOWNTO
            UPD HdlValueInt@@0 to 4
            MOV HdlValueInt@@0 to ops
            HdlValueInt: 0
            DEL HdlValueInt@@3 from ops
            DEL list@@ops from DOWNTO
        DEL HdlOp@@DOWNTO from ops

UPD HdlStmIf@@ to 
    DEL HdlValueId@@RV32B from 
    DEL list@@elifs from 


CommitId: 76cd32e9369e7d5f38af917062b5dc52c332e95e
Add capability to detect and react on load/store errors
--- a/rtl/ibex_if_stage.sv
+++ b/rtl/ibex_if_stage.sv
@@ -102,11 +102,12 @@ module ibex_if_stage #(
     unique case (exc_pc_mux_i)
       EXC_PC_ILLINSN:    exc_pc = { boot_addr_i[31:8], {EXC_OFF_ILLINSN} };
       EXC_PC_ECALL:      exc_pc = { boot_addr_i[31:8], {EXC_OFF_ECALL} };
+      EXC_PC_LOAD:       exc_pc = { boot_addr_i[31:8], {EXC_OFF_LSUERR} };
+      EXC_PC_STORE:      exc_pc = { boot_addr_i[31:8], {EXC_OFF_LSUERR} };
       EXC_PC_BREAKPOINT: exc_pc = { boot_addr_i[31:8], {EXC_OFF_BREAKPOINT} };
       EXC_PC_IRQ:        exc_pc = { boot_addr_i[31:8], {exc_vec_pc_mux_i}, 2'b0 };
       EXC_PC_DBD:        exc_pc = { DmHaltAddr };
       EXC_PC_DBGEXC:     exc_pc = { DmExceptionAddr };
-      // TODO: Add case for EXC_PC_STORE and EXC_PC_LOAD as soon as they are supported
       default:;
     endcase
   end
ParseResult:
UPD HdlStmCase@@exc_pc_mux_i to exc_pc_mux_i
    INS tuple@@ to cases
    tuple
        HdlValueId: EXC_PC_LOAD
        HdlOp: ASSIGN
            list: ops
                HdlValueId: exc_pc
                HdlOp: CONCAT
                    list: ops
                        HdlOp: INDEX
                            list: ops
                                HdlValueId: boot_addr_i
                                HdlOp: DOWNTO
                                    list: ops
                                        HdlValueInt: 31
                                        HdlValueInt: 8
                        HdlValueId: EXC_OFF_LSUERR
    INS tuple@@ to cases
    tuple
        HdlValueId: EXC_PC_STORE
        HdlOp: ASSIGN
            list: ops
                HdlValueId: exc_pc
                HdlOp: CONCAT
                    list: ops
                        HdlOp: INDEX
                            list: ops
                                HdlValueId: boot_addr_i
                                HdlOp: DOWNTO
                                    list: ops
                                        HdlValueInt: 31
                                        HdlValueInt: 8
                        HdlValueId: EXC_OFF_LSUERR


CommitId: 74abc47b7179b9a651240a4c856eb578e53b8a7b
Add missing `default` in `unique case`, propagate `'X` in FSM states
--- a/rtl/ibex_controller.sv
+++ b/rtl/ibex_controller.sv
@@ -510,7 +510,7 @@ module ibex_controller (
 
       default: begin
         instr_req_o = 1'b0;
-        ctrl_fsm_ns = RESET;
+        ctrl_fsm_ns = ctrl_fsm_e'({$bits(ctrl_fsm_e){1'bX}});
       end
     endcase
   end
ParseResult:
UPD HdlStmCase@@ctrl_fsm_cs to ctrl_fsm_cs
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlOp@@CALL to ops
            UPD HdlOp@@CALL to CALL
                INS list@@ops to CALL
                INS HdlOp@@REPL_CONCAT to ops
                HdlOp: REPL_CONCAT
                    list: ops
                        HdlOp: CALL
                            list: ops
                                HdlValueId: $bits
                                HdlValueId: ctrl_fsm_e
                        HdlValueInt: x

UPD HdlStmCase@@ctrl_fsm_cs to ctrl_fsm_cs
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@RESET to ctrl_fsm_e
            MOV HdlValueId@@RESET to ops
            HdlValueId: RESET


CommitId: cee2e9396fec09f9f5b1e2015cbf848dce7043da
Remove `csr_restore_dret_i` signal
--- a/rtl/ibex_controller.sv
+++ b/rtl/ibex_controller.sv
@@ -86,7 +86,6 @@ module ibex_controller (
     output logic                  csr_save_if_o,
     output logic                  csr_save_id_o,
     output logic                  csr_restore_mret_id_o,
-    output logic                  csr_restore_dret_id_o,
     output logic                  csr_save_cause_o,
     output logic [31:0]           csr_mtval_o,
 

ParseResult:
DEL HdlIdDef@@csr_restore_dret_id_o from ports
HdlIdDef: csr_restore_dret_id_o
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: logic
    HdlDirection: OUT


CommitId: cee2e9396fec09f9f5b1e2015cbf848dce7043da
Remove `csr_restore_dret_i` signal
--- a/rtl/ibex_controller.sv
+++ b/rtl/ibex_controller.sv
@@ -203,7 +202,6 @@ module ibex_controller (
     csr_save_if_o         = 1'b0;
     csr_save_id_o         = 1'b0;
     csr_restore_mret_id_o = 1'b0;
-    csr_restore_dret_id_o = 1'b0;
     csr_save_cause_o      = 1'b0;
     csr_mtval_o           = '0;
 

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: csr_restore_dret_id_o
                HdlValueInt: 0


CommitId: cee2e9396fec09f9f5b1e2015cbf848dce7043da
Remove `csr_restore_dret_i` signal
--- a/rtl/ibex_controller.sv
+++ b/rtl/ibex_controller.sv
@@ -519,7 +517,6 @@ module ibex_controller (
           end else if (dret_insn_i) begin
             pc_mux_o              = PC_DRET;
             pc_set_o              = 1'b1;
-            csr_restore_dret_id_o = 1'b1;
             debug_mode_d          = 1'b0;
           end else if (wfi_insn_i) begin
             ctrl_fsm_ns           = WAIT_SLEEP;
ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: csr_restore_dret_id_o
                HdlValueInt: 0

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: csr_restore_dret_id_o
                HdlValueInt: 1


