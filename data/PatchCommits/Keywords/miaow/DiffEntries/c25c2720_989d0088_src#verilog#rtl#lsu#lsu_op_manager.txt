c25c27206c47389125737acc23812517d159d5d0
First pass in fixing tracemon to properly monitor memory operations again. Not working yet due to slight mismatch in pipeline sequences tracemon is expecting relative to what the current LSU is doing. Tracemon probably needs to be rethought to how it will track memory operations.
diff --git a/src/verilog/rtl/lsu/lsu_op_manager.v b/src/verilog/rtl/lsu/lsu_op_manager.v
index 43a52f5..8af1016 100644
--- a/src/verilog/rtl/lsu/lsu_op_manager.v
+++ b/src/verilog/rtl/lsu/lsu_op_manager.v
@@ -46,6 +46,7 @@ module lsu_op_manager
     vgpr_instr_done, vgpr_instr_done_wfid,
     retire_pc,
     retire_gm_or_lds,
+    tracemon_mem_addr,
     
     mem_rd_en,
     mem_wr_en,
@@ -146,6 +147,7 @@ output [5:0] vgpr_instr_done_wfid;
 
 output [31:0] retire_pc;
 output retire_gm_or_lds;
+output [2047:0] tracemon_mem_addr;
 
 localparam IDLE_STATE = 4'b0000;
 localparam ADDR_CALC_STATE = 4'b0001;
@@ -174,6 +176,9 @@ reg [2047:0] mem_in_addr_reg_next;
 reg [6:0] mem_op_cnter;
 reg [6:0] mem_op_cnter_next;
 
+reg [2047:0] tracemon_mem_addr_reg;
+reg [2047:0] tracemon_mem_addr_reg_next;
+
 reg gm_or_lds_reg;
 reg gm_or_lds_reg_next;
 
@@ -233,6 +238,7 @@ always@(posedge clk) begin
         mem_op_cnter <= 7'd0;
         mem_data_buffer <= 2048'd0;
         mem_data_offset <= 6'd0;
+        tracemon_mem_addr_reg <= 2048'd0;
         sgpr_op <= 1'b0;
         vgpr_op <= 1'b0;
         gpr_dest_addr <= 12'd0;
@@ -252,6 +258,7 @@ always@(posedge clk) begin
         mem_op_cnt_reg <= mem_op_cnt_reg_next;
         mem_op_cnter <= mem_op_cnter_next;
         mem_data_buffer <= mem_data_buffer_next_flat;
+        tracemon_mem_addr_reg <= tracemon_mem_addr_reg_next;
         sgpr_op <= sgpr_op_next;
         vgpr_op <= vgpr_op_next;
         gpr_dest_addr <= gpr_dest_addr_next;
@@ -278,6 +285,8 @@ always@(*) begin
     mem_rd_en_reg <= 1'b0;
     mem_wr_en_reg <= 1'b0;
     
+    tracemon_mem_addr_reg_next <= tracemon_mem_addr_reg;
+    
     begin : MEM_BUFFER_MAP
         integer i;
         for(i = 0; i < 64; i = i + 1) begin
@@ -363,6 +372,7 @@ always@(*) begin
         ADDR_CALC_STATE: begin
             lsu_state_next <= RD_STATE;
             mem_in_addr_reg_next <= mem_in_addr;
+            tracemon_mem_addr_reg_next <= mem_in_addr;
             gpr_op_depth_cntr_next <= 2'd0;
             mem_op_cnter_next <= 6'd0;
             if(lsu_rd_wr) begin
@@ -379,9 +389,12 @@ always@(*) begin
                 mem_rd_en_reg <= 1'b0;
             end
             else if(mem_ack) begin
+                // Need to verify how SGPR addresses are generated, whether
+                // I'm supposed to just increment by 4's or if the offsets
+                // are part of the generated address bank.
                 mem_rd_en_reg <= 1'b0;
                 mem_op_cnter_next <= mem_op_cnter + 6'd1;
-                mem_in_addr_reg_next[2015:0] <= mem_in_addr_reg[2048:32];
+                mem_in_addr_reg_next[2015:0] <= mem_in_addr_reg[2047:32];
                 mem_data_buffer_next[mem_op_cnter] <= mem_rd_data;
                 exec_mask_reg_next[62:0] <= exec_mask_reg[63:1];
                 if(mem_op_cnter == mem_op_cnt_reg) begin
@@ -426,8 +439,8 @@ always@(*) begin
             else if(mem_ack) begin
                 mem_wr_en_reg <= 1'b0;
                 mem_op_cnter_next <= mem_op_cnter + 6'd1;
-                mem_in_addr_reg_next[2015:0] <= mem_in_addr_reg[2048:32];
-                mem_data_buffer_next_flat[2015:0] <= mem_data_buffer[2048:32];
+                mem_in_addr_reg_next[2015:0] <= mem_in_addr_reg[2047:32];
+                mem_data_buffer_next_flat[2015:0] <= mem_data_buffer[2047:32];
                 exec_mask_reg_next[62:0] <= exec_mask_reg[63:1];
                 if(mem_op_cnter == mem_op_cnt_reg) begin
                     lsu_state_next <= WR_REG_INC_STATE;
@@ -494,4 +507,6 @@ assign mem_wr_data = mem_data_buffer[31:0];
 assign mem_tag_req = {current_wfid, mem_rd_en_reg};
 assign mem_gm_or_lds = gm_or_lds_reg;
 
+assign tracemon_mem_addr = tracemon_mem_addr_reg;
+
 endmodule