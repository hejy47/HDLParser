3202bd28f7099cbf95e494d40feb46d1cdd1f2d4
Merge pull request #8 from d1duarte/patch-1
diff --git a/scripts/xilinx/axi_slave_v1_0_S00_AXI.v b/scripts/xilinx/axi_slave_v1_0_S00_AXI.v
index f48587c..fdc2728 100644
--- a/scripts/xilinx/axi_slave_v1_0_S00_AXI.v
+++ b/scripts/xilinx/axi_slave_v1_0_S00_AXI.v
@@ -34,7 +34,12 @@
         output wire [31:0] quadData2_out,
         output wire [31:0] quadData3_out,
         input wire [127:0] quadData_in,
-
+        input wire [2047:0] singleVectorData_in,
+        output wire [9:0] singleVectorBaseAddress_out,
+        output wire [2047:0] singleVectorWrData_out,
+        output wire [63:0] singleVectorWrDataMask_out,
+        output wire [3:0] singleVectorWrEn_out,
+        
         output wire execute_out,
         output wire executeStart_out,
 
@@ -46,7 +51,8 @@
         output wire mb2fpgamem_data_we,
         output wire mb2fpgamem_ack,
         output wire mb2fpgamem_done,
-        
+        output wire [0:0] peripheral_aresetn,
+
         input wire [3:0] fpgamem2mb_op,
         input wire [31:0] fpgamem2mb_data,
         input wire [31:0] fpgamem2mb_addr,
@@ -176,6 +182,23 @@ reg [31:0] quadData2;
 reg [31:0] quadData3;
 reg [3:0] lsu2sgpr_dest_wr_en_reg;
 
+reg [9:0]  singleVectorBaseAddress;
+
+reg [63:0] singleVectorWrDataMask;
+reg [3:0] singleVectorWrEn_reg;
+
+
+reg [31:0] singleVectorWrData0, singleVectorWrData1, singleVectorWrData2, singleVectorWrData3, singleVectorWrData4, singleVectorWrData5, singleVectorWrData6,
+           singleVectorWrData7, singleVectorWrData8, singleVectorWrData9, singleVectorWrData10, singleVectorWrData11, singleVectorWrData12, singleVectorWrData13,
+           singleVectorWrData14, singleVectorWrData15, singleVectorWrData16, singleVectorWrData17, singleVectorWrData18, singleVectorWrData19, singleVectorWrData20,
+           singleVectorWrData21, singleVectorWrData22, singleVectorWrData23, singleVectorWrData24, singleVectorWrData25, singleVectorWrData26, singleVectorWrData27,
+           singleVectorWrData28, singleVectorWrData29, singleVectorWrData30, singleVectorWrData31, singleVectorWrData32, singleVectorWrData33, singleVectorWrData34,
+           singleVectorWrData35, singleVectorWrData36, singleVectorWrData37, singleVectorWrData38, singleVectorWrData39, singleVectorWrData40, singleVectorWrData41,
+           singleVectorWrData42, singleVectorWrData43, singleVectorWrData44, singleVectorWrData45, singleVectorWrData46, singleVectorWrData47, singleVectorWrData48,
+           singleVectorWrData49, singleVectorWrData50, singleVectorWrData51, singleVectorWrData52, singleVectorWrData53, singleVectorWrData54, singleVectorWrData55,
+           singleVectorWrData56, singleVectorWrData57, singleVectorWrData58, singleVectorWrData59, singleVectorWrData60, singleVectorWrData61, singleVectorWrData62,
+           singleVectorWrData63;
+           
 reg [31:0] mb2fpgamem_data_in_reg;
 reg mb2fpgamem_data_we_reg;
 reg mb2fpgamem_ack_reg;
@@ -184,6 +207,9 @@ reg mb2fpgamem_done_reg;
 reg [31:0] cycle_counter;
 reg [31:0] cycle_counter_next;
 
+reg mb_reset;
+initial mb_reset = 1'b1;
+
 wire [31:0] fpgamem2mb_op_net;
 
 assign fpgamem2mb_op_net = {28'd0, fpgamem2mb_op}; 
@@ -200,7 +226,7 @@ assign baseLDS_out = baseLDS;
 assign waveCount_out = waveCount;
 assign pcStart_out = pcStart;
 assign instrAddrReg_out = instrAddrReg;
-
+assign peripheral_aresetn = mb_reset & S_AXI_ARESETN;
 assign quadBaseAddress_out = quadBaseAddress;
 assign lsu2sgpr_dest_wr_en_out = lsu2sgpr_dest_wr_en_reg;
 assign quadData0_out = quadData0;
@@ -208,6 +234,23 @@ assign quadData1_out = quadData1;
 assign quadData2_out = quadData2;
 assign quadData3_out = quadData3;
 
+assign singleVectorBaseAddress_out = singleVectorBaseAddress;
+assign singleVectorWrData_out = {
+            singleVectorWrData63, singleVectorWrData62, singleVectorWrData61, singleVectorWrData60, singleVectorWrData59, singleVectorWrData58,
+            singleVectorWrData57, singleVectorWrData56, singleVectorWrData55, singleVectorWrData54, singleVectorWrData53, singleVectorWrData52,
+            singleVectorWrData51, singleVectorWrData50, singleVectorWrData49, singleVectorWrData48, singleVectorWrData47, singleVectorWrData46,
+            singleVectorWrData45, singleVectorWrData44, singleVectorWrData43, singleVectorWrData42, singleVectorWrData41, singleVectorWrData40,
+            singleVectorWrData39, singleVectorWrData38, singleVectorWrData37, singleVectorWrData36, singleVectorWrData35, singleVectorWrData34,
+            singleVectorWrData33, singleVectorWrData32, singleVectorWrData31, singleVectorWrData30, singleVectorWrData29, singleVectorWrData28,
+            singleVectorWrData27, singleVectorWrData26, singleVectorWrData25, singleVectorWrData24, singleVectorWrData23, singleVectorWrData22,
+            singleVectorWrData21, singleVectorWrData20, singleVectorWrData19, singleVectorWrData18, singleVectorWrData17, singleVectorWrData16,
+            singleVectorWrData15, singleVectorWrData14, singleVectorWrData13, singleVectorWrData12, singleVectorWrData11, singleVectorWrData10,
+            singleVectorWrData9,  singleVectorWrData8,  singleVectorWrData7,  singleVectorWrData6,  singleVectorWrData5,  singleVectorWrData4,
+            singleVectorWrData3,  singleVectorWrData2,  singleVectorWrData1,  singleVectorWrData0
+           }; 
+assign singleVectorWrDataMask_out = singleVectorWrDataMask;
+assign singleVectorWrEn_out = singleVectorWrEn_reg;
+
 assign execute_out = execute;
 assign executeStart_out = executeStart;
 
@@ -238,7 +281,7 @@ always @(*) begin
     end
 
     always @( posedge S_AXI_ACLK ) begin
-      if ( S_AXI_ARESETN == 1'b0 ) begin
+      if ( S_AXI_ARESETN == 1'b0 | mb_reset == 1'b0) begin
         executeState <= IDLE_STATE;
         cycle_counter <= 32'd0;
       end
@@ -279,6 +322,13 @@ always @(*) begin
       endcase
     end
 
+    always @(*) begin
+      singleVectorWrEn_reg <= 4'd0;
+      if(slv_reg_wren && ~slv_reg_wren_buffer && axi_awaddr[ADDR_LSB+OPT_MEM_ADDR_BITS:ADDR_LSB] == 7'h75) begin
+        singleVectorWrEn_reg <= 4'b1111;
+      end
+    end
+    
     always @(*) begin
       lsu2sgpr_dest_wr_en_reg <= 4'd0;
       if(slv_reg_wren && ~slv_reg_wren_buffer && axi_awaddr[ADDR_LSB+OPT_MEM_ADDR_BITS:ADDR_LSB] == 7'h0A) begin
@@ -379,12 +429,31 @@ always @(*) begin
         resultsReadyTag <= 32'd0;
         
         slv_reg_wren_buffer <= 1'b0;
+        
+        singleVectorWrDataMask <= 64'd0;
       end
       else begin
-        slv_reg_wren_buffer <= slv_reg_wren;
-        if(cu2dispatch_wf_done_in) begin
-          resultsReadyTag <= resultsReadyTag_in;
-        end
+      	if( mb_reset == 1'b0)
+            begin
+              waveID    <= 32'd0;
+              baseVGPR  <= 32'd0;
+              baseSGPR  <= 32'd0;
+              baseLDS   <= 32'd0;
+              waveCount <= 32'd0;
+      
+              resultsReadyTag <= 32'd0;
+              
+              singleVectorWrDataMask <= 64'd0;
+              
+              slv_reg_wren_buffer <= 1'b0;
+            end
+        else
+          begin
+              slv_reg_wren_buffer <= slv_reg_wren;
+              if(cu2dispatch_wf_done_in) begin
+                resultsReadyTag <= resultsReadyTag_in;
+              end
+          end
         if (slv_reg_wren)
           begin
             case ( axi_awaddr[ADDR_LSB+OPT_MEM_ADDR_BITS:ADDR_LSB] )
@@ -397,8 +466,9 @@ always @(*) begin
               7'h06: pcStart      <= S_AXI_WDATA;
               7'h07: instrAddrReg <= S_AXI_WDATA;
               // 7'h08: Instruction value
-              // 7'h09: Unused
+              7'h09: mb_reset <= ~S_AXI_WDATA[0];
               // 7'h0A: GPR command register
+              
               7'h0B: quadBaseAddress <= S_AXI_WDATA[9:0];
               7'h0C: quadData0 <= S_AXI_WDATA;
               7'h0D: quadData1 <= S_AXI_WDATA;
@@ -409,6 +479,357 @@ always @(*) begin
               7'h31: mb2fpgamem_data_we_reg <= S_AXI_WDATA[0];
               7'h32: mb2fpgamem_ack_reg <= S_AXI_WDATA[0];
               7'h33: mb2fpgamem_done_reg <= S_AXI_WDATA[0];
+              
+              7'h34:
+              begin
+               singleVectorBaseAddress <= S_AXI_WDATA[9:0];
+               singleVectorWrDataMask <= 64'd0;
+              end
+              
+              7'h35:
+              begin
+               singleVectorWrData0 <= S_AXI_WDATA;
+               singleVectorWrDataMask <= singleVectorWrDataMask |   64'h0000000000000001;
+              end
+              7'h36:
+              begin
+               singleVectorWrData1 <= S_AXI_WDATA;
+                singleVectorWrDataMask <= singleVectorWrDataMask |   64'h0000000000000002;
+              end
+              7'h37:
+              begin
+               singleVectorWrData2 <= S_AXI_WDATA;
+                singleVectorWrDataMask <= singleVectorWrDataMask |   64'h0000000000000004;
+              end
+              7'h38:
+              begin
+               singleVectorWrData3 <= S_AXI_WDATA;
+                singleVectorWrDataMask <= singleVectorWrDataMask |   64'h0000000000000008;
+              end
+              7'h39:
+              begin
+               singleVectorWrData4 <= S_AXI_WDATA;
+                singleVectorWrDataMask <= singleVectorWrDataMask |   64'h0000000000000010;
+              end
+              7'h3a:
+              begin
+               singleVectorWrData5 <= S_AXI_WDATA;
+                singleVectorWrDataMask <= singleVectorWrDataMask |   64'h0000000000000020;
+              end
+              7'h3b:
+              begin
+               singleVectorWrData6 <= S_AXI_WDATA;
+                singleVectorWrDataMask <= singleVectorWrDataMask |   64'h0000000000000040;
+              end
+              7'h3c:
+              begin
+               singleVectorWrData7 <= S_AXI_WDATA;
+                singleVectorWrDataMask <= singleVectorWrDataMask |   64'h0000000000000080;
+              end
+              7'h3d:
+              begin
+               singleVectorWrData8 <= S_AXI_WDATA;
+                singleVectorWrDataMask <= singleVectorWrDataMask |   64'h0000000000000100;
+              end
+              7'h3e:
+              begin
+               singleVectorWrData9 <= S_AXI_WDATA;
+                singleVectorWrDataMask <= singleVectorWrDataMask |   64'h0000000000000200;
+              end
+              7'h3f:
+              begin
+               singleVectorWrData10 <= S_AXI_WDATA;
+                singleVectorWrDataMask <= singleVectorWrDataMask |   64'h0000000000000400;
+              end
+              
+              7'h40:
+              begin
+               singleVectorWrData11 <= S_AXI_WDATA;
+                singleVectorWrDataMask <= singleVectorWrDataMask |   64'h0000000000000800;
+              end
+              7'h41:
+              begin
+               singleVectorWrData12 <= S_AXI_WDATA;
+                singleVectorWrDataMask <= singleVectorWrDataMask |   64'h0000000000001000;
+               end
+              7'h42:
+              begin
+               singleVectorWrData13 <= S_AXI_WDATA;
+                singleVectorWrDataMask <= singleVectorWrDataMask |   64'h0000000000002000;
+              end
+              7'h43:
+              begin
+               singleVectorWrData14 <= S_AXI_WDATA;
+                singleVectorWrDataMask <= singleVectorWrDataMask |   64'h0000000000004000;
+              end
+              7'h44:
+              begin
+               singleVectorWrData15 <= S_AXI_WDATA;
+                singleVectorWrDataMask <= singleVectorWrDataMask |   64'h0000000000008000;
+              end
+              7'h45:
+              begin
+               singleVectorWrData16 <= S_AXI_WDATA;
+                singleVectorWrDataMask <= singleVectorWrDataMask |   64'h0000000000010000;
+              end
+              7'h46:
+              begin
+               singleVectorWrData17 <= S_AXI_WDATA;
+                singleVectorWrDataMask <= singleVectorWrDataMask |   64'h0000000000020000;
+              end
+              7'h47:
+              begin
+               singleVectorWrData18 <= S_AXI_WDATA;
+                singleVectorWrDataMask <= singleVectorWrDataMask |   64'h0000000000040000;
+              end
+              7'h48:
+              begin
+               singleVectorWrData19 <= S_AXI_WDATA;
+                singleVectorWrDataMask <= singleVectorWrDataMask |   64'h0000000000080000;
+              end
+              7'h49:
+              begin
+               singleVectorWrData20 <= S_AXI_WDATA;
+                singleVectorWrDataMask <= singleVectorWrDataMask |   64'h0000000000100000;
+              end
+              7'h4a:
+              begin
+               singleVectorWrData21 <= S_AXI_WDATA;
+                singleVectorWrDataMask <= singleVectorWrDataMask |   64'h0000000000200000;
+              end
+              7'h4b:
+              begin
+               singleVectorWrData22 <= S_AXI_WDATA;
+                singleVectorWrDataMask <= singleVectorWrDataMask |   64'h0000000000400000;
+              end
+              7'h4c:
+              begin
+               singleVectorWrData23 <= S_AXI_WDATA;
+                singleVectorWrDataMask <= singleVectorWrDataMask |   64'h0000000000800000;
+              end
+              7'h4d:
+              begin
+               singleVectorWrData24 <= S_AXI_WDATA;
+                singleVectorWrDataMask <= singleVectorWrDataMask |   64'h0000000001000000;
+              end
+              7'h4e:
+              begin
+               singleVectorWrData25 <= S_AXI_WDATA;
+                singleVectorWrDataMask <= singleVectorWrDataMask |   64'h0000000002000000;
+              end
+              7'h4f:
+              begin
+               singleVectorWrData26 <= S_AXI_WDATA;
+                singleVectorWrDataMask <= singleVectorWrDataMask |   64'h0000000004000000;
+              end
+              
+              7'h50:
+              begin
+               singleVectorWrData27 <= S_AXI_WDATA;
+                singleVectorWrDataMask <= singleVectorWrDataMask |   64'h0000000008000000;
+              end
+              7'h51:
+              begin
+               singleVectorWrData28 <= S_AXI_WDATA;
+                singleVectorWrDataMask <= singleVectorWrDataMask |   64'h0000000010000000;
+              end
+              7'h52:
+              begin
+               singleVectorWrData29 <= S_AXI_WDATA;
+                singleVectorWrDataMask <= singleVectorWrDataMask |   64'h0000000020000000;
+              end
+              7'h53:
+              begin
+               singleVectorWrData30 <= S_AXI_WDATA;
+                singleVectorWrDataMask <= singleVectorWrDataMask |   64'h0000000040000000;
+              end
+              7'h54:
+              begin
+               singleVectorWrData31 <= S_AXI_WDATA;
+                singleVectorWrDataMask <= singleVectorWrDataMask |   64'h0000000080000000;
+              end
+              7'h55:
+              begin
+               singleVectorWrData32 <= S_AXI_WDATA;
+                singleVectorWrDataMask <= singleVectorWrDataMask |   64'h0000000100000000;
+              end
+              7'h56:
+              begin
+               singleVectorWrData33 <= S_AXI_WDATA;
+                singleVectorWrDataMask <= singleVectorWrDataMask |   64'h0000000200000000;
+              end
+              7'h57:
+              begin
+               singleVectorWrData34 <= S_AXI_WDATA;
+                singleVectorWrDataMask <= singleVectorWrDataMask |  64'h0000000400000000;
+              end
+              7'h58:
+              begin
+               singleVectorWrData35 <= S_AXI_WDATA;
+                singleVectorWrDataMask <= singleVectorWrDataMask |  64'h0000000800000000;
+              end
+              7'h59:
+              begin
+               singleVectorWrData36 <= S_AXI_WDATA;
+                singleVectorWrDataMask <= singleVectorWrDataMask |   64'h0000001000000000;
+              end
+              7'h5a:
+              begin
+               singleVectorWrData37 <= S_AXI_WDATA;
+                singleVectorWrDataMask <= singleVectorWrDataMask |  64'h0000002000000000;
+              end
+              7'h5b:
+              begin
+               singleVectorWrData38 <= S_AXI_WDATA;
+                singleVectorWrDataMask <= singleVectorWrDataMask |  64'h0000004000000000;
+              end
+              7'h5c:
+              begin
+               singleVectorWrData39 <= S_AXI_WDATA;
+                singleVectorWrDataMask <= singleVectorWrDataMask |  64'h0000008000000000;
+              end
+              7'h5d:
+              begin
+               singleVectorWrData40 <= S_AXI_WDATA;
+                singleVectorWrDataMask <= singleVectorWrDataMask |  64'h0000010000000000;
+              end
+              7'h5e:
+              begin
+               singleVectorWrData41 <= S_AXI_WDATA;
+                singleVectorWrDataMask <= singleVectorWrDataMask |  64'h0000020000000000;
+              end
+              7'h5f:
+              begin
+               singleVectorWrData42 <= S_AXI_WDATA;
+                singleVectorWrDataMask <= singleVectorWrDataMask |  64'h0000040000000000;
+              end
+              7'h60:
+              begin
+               singleVectorWrData43 <= S_AXI_WDATA;
+                singleVectorWrDataMask <= singleVectorWrDataMask |  64'h0000080000000000;
+              end
+              7'h61:
+              begin
+               singleVectorWrData44 <= S_AXI_WDATA;
+                singleVectorWrDataMask <= singleVectorWrDataMask |  64'h0000100000000000;
+              end
+              7'h62:
+              begin
+               singleVectorWrData45 <= S_AXI_WDATA;
+                singleVectorWrDataMask <= singleVectorWrDataMask |  64'h0000200000000000;
+              end
+              7'h63:
+              begin
+               singleVectorWrData46 <= S_AXI_WDATA;
+                singleVectorWrDataMask <= singleVectorWrDataMask |  64'h0000400000000000;
+              end
+              7'h64:
+              begin
+               singleVectorWrData47 <= S_AXI_WDATA;
+                singleVectorWrDataMask <= singleVectorWrDataMask |  64'h0000800000000000;
+              end
+              7'h65:
+              begin
+               singleVectorWrData48 <= S_AXI_WDATA;
+                singleVectorWrDataMask <= singleVectorWrDataMask |  64'h0001000000000000;
+              end
+              7'h66:
+              begin
+               singleVectorWrData49 <= S_AXI_WDATA;
+                singleVectorWrDataMask <= singleVectorWrDataMask |  64'h0002000000000000;
+              end
+              7'h67:
+              begin
+               singleVectorWrData50 <= S_AXI_WDATA;
+                singleVectorWrDataMask <= singleVectorWrDataMask |  64'h0004000000000000;
+              end
+              7'h68:
+              begin
+               singleVectorWrData51 <= S_AXI_WDATA;
+                singleVectorWrDataMask <= singleVectorWrDataMask |  64'h0008000000000000;
+              end
+              7'h69:
+              begin
+               singleVectorWrData52 <= S_AXI_WDATA;
+                singleVectorWrDataMask <= singleVectorWrDataMask |  64'h0010000000000000;
+              end
+              7'h6a:
+              begin
+               singleVectorWrData53 <= S_AXI_WDATA;
+                singleVectorWrDataMask <= singleVectorWrDataMask |  64'h0020000000000000;
+              end
+              7'h6b:
+              begin
+               singleVectorWrData54 <= S_AXI_WDATA;
+                singleVectorWrDataMask <= singleVectorWrDataMask |  64'h0040000000000000;
+              end
+              7'h6c:
+              begin
+               singleVectorWrData55 <= S_AXI_WDATA;
+                singleVectorWrDataMask <= singleVectorWrDataMask |  64'h0080000000000000;
+              end
+              7'h6d:
+              begin
+               singleVectorWrData56 <= S_AXI_WDATA;
+                singleVectorWrDataMask <= singleVectorWrDataMask |  64'h0100000000000000;
+              end
+              7'h6e:
+              begin
+               singleVectorWrData57 <= S_AXI_WDATA;
+                singleVectorWrDataMask <= singleVectorWrDataMask |  64'h0200000000000000;
+              end
+              7'h6f:
+              begin
+               singleVectorWrData58 <= S_AXI_WDATA;
+                singleVectorWrDataMask <= singleVectorWrDataMask |  64'h0400000000000000;
+              end
+              7'h70:
+              begin
+               singleVectorWrData59 <= S_AXI_WDATA;
+                singleVectorWrDataMask <= singleVectorWrDataMask |  64'h0800000000000000;
+              end
+              7'h71:
+              begin
+               singleVectorWrData60 <= S_AXI_WDATA;
+                singleVectorWrDataMask <= singleVectorWrDataMask |  64'h1000000000000000;
+              end
+              7'h72:
+              begin
+               singleVectorWrData61 <= S_AXI_WDATA;
+                singleVectorWrDataMask <= singleVectorWrDataMask |  64'h2000000000000000;
+              end
+              7'h73:
+              begin
+               singleVectorWrData62 <= S_AXI_WDATA;
+                singleVectorWrDataMask <= singleVectorWrDataMask |  64'h4000000000000000;
+              end
+              7'h74:
+              begin
+               singleVectorWrData63 <= S_AXI_WDATA;
+               singleVectorWrDataMask <= singleVectorWrDataMask |  64'h8000000000000000;
+              end
+              //7'h75: Vector write command
+              7'h76://reset_vector_values
+              begin
+                {         singleVectorWrData63, singleVectorWrData62, singleVectorWrData61, singleVectorWrData60, singleVectorWrData59, singleVectorWrData58,
+                          singleVectorWrData57, singleVectorWrData56, singleVectorWrData55, singleVectorWrData54, singleVectorWrData53, singleVectorWrData52,
+                          singleVectorWrData51, singleVectorWrData50, singleVectorWrData49, singleVectorWrData48, singleVectorWrData47, singleVectorWrData46,
+                          singleVectorWrData45, singleVectorWrData44, singleVectorWrData43, singleVectorWrData42, singleVectorWrData41, singleVectorWrData40,
+                          singleVectorWrData39, singleVectorWrData38, singleVectorWrData37, singleVectorWrData36, singleVectorWrData35, singleVectorWrData34,
+                          singleVectorWrData33, singleVectorWrData32, singleVectorWrData31, singleVectorWrData30, singleVectorWrData29, singleVectorWrData28,
+                          singleVectorWrData27, singleVectorWrData26, singleVectorWrData25, singleVectorWrData24, singleVectorWrData23, singleVectorWrData22,
+                          singleVectorWrData21, singleVectorWrData20, singleVectorWrData19, singleVectorWrData18, singleVectorWrData17, singleVectorWrData16,
+                          singleVectorWrData15, singleVectorWrData14, singleVectorWrData13, singleVectorWrData12, singleVectorWrData11, singleVectorWrData10,
+                          singleVectorWrData9,  singleVectorWrData8,  singleVectorWrData7,  singleVectorWrData6,  singleVectorWrData5,  singleVectorWrData4,
+                          singleVectorWrData3,  singleVectorWrData2,  singleVectorWrData1,  singleVectorWrData0
+                         } <= 2048'd0;
+                singleVectorWrDataMask <= 64'hffffffffffffffff;
+              end
+              7'h77://DataMask_Lo
+                singleVectorWrDataMask[31:0] <= S_AXI_WDATA;
+              7'h78://DataMask_Hi
+                singleVectorWrDataMask[63:32] <= S_AXI_WDATA;
+              
               default:
               begin
                 waveID    <= waveID;
@@ -547,6 +968,74 @@ always @(*) begin
         
         7'h30   : reg_data_out <= cycle_counter;
         7'h31   : reg_data_out <= pc_value;
+        7'h35   : reg_data_out <= singleVectorData_in[31:0];
+        7'h36   : reg_data_out <= singleVectorData_in[63:32];
+        7'h37   : reg_data_out <= singleVectorData_in[95:64];
+        7'h38   : reg_data_out <= singleVectorData_in[127:96];
+        7'h39   : reg_data_out <= singleVectorData_in[159:128];
+        7'h3A   : reg_data_out <= singleVectorData_in[191:160];
+        7'h3B   : reg_data_out <= singleVectorData_in[223:192];
+        7'h3C   : reg_data_out <= singleVectorData_in[255:224];
+        7'h3D   : reg_data_out <= singleVectorData_in[287:256];
+        7'h3E   : reg_data_out <= singleVectorData_in[319:288];
+        7'h3F   : reg_data_out <= singleVectorData_in[351:320];
+        7'h40   : reg_data_out <= singleVectorData_in[383:352];
+        7'h41   : reg_data_out <= singleVectorData_in[415:384];
+        7'h42   : reg_data_out <= singleVectorData_in[447:416];
+        7'h43   : reg_data_out <= singleVectorData_in[479:448];
+        7'h44   : reg_data_out <= singleVectorData_in[511:480];
+        
+        7'h45   : reg_data_out <= singleVectorData_in[543:512];
+        7'h46   : reg_data_out <= singleVectorData_in[575:544];
+        7'h47   : reg_data_out <= singleVectorData_in[607:576];
+        7'h48   : reg_data_out <= singleVectorData_in[639:608];
+        7'h49   : reg_data_out <= singleVectorData_in[671:640];
+        7'h4A   : reg_data_out <= singleVectorData_in[703:672];
+        7'h4B   : reg_data_out <= singleVectorData_in[735:704];
+        7'h4C   : reg_data_out <= singleVectorData_in[767:736];
+        7'h4D   : reg_data_out <= singleVectorData_in[799:768];
+        7'h4E   : reg_data_out <= singleVectorData_in[831:800];
+        7'h4F   : reg_data_out <= singleVectorData_in[863:832];
+        7'h50   : reg_data_out <= singleVectorData_in[895:864];
+        7'h51   : reg_data_out <= singleVectorData_in[927:896];
+        7'h52   : reg_data_out <= singleVectorData_in[959:928];
+        7'h53   : reg_data_out <= singleVectorData_in[991:960];
+        7'h54   : reg_data_out <= singleVectorData_in[1023:992];
+        
+        7'h55   : reg_data_out <= singleVectorData_in[1055:1024];
+        7'h56   : reg_data_out <= singleVectorData_in[1087:1056];
+        7'h57   : reg_data_out <= singleVectorData_in[1119:1088];
+        7'h58   : reg_data_out <= singleVectorData_in[1151:1120];
+        7'h59   : reg_data_out <= singleVectorData_in[1183:1152];
+        7'h5A   : reg_data_out <= singleVectorData_in[1215:1184];
+        7'h5B   : reg_data_out <= singleVectorData_in[1247:1216];
+        7'h5C   : reg_data_out <= singleVectorData_in[1279:1248];
+        7'h5D   : reg_data_out <= singleVectorData_in[1311:1280];
+        7'h5E   : reg_data_out <= singleVectorData_in[1343:1312];
+        7'h5F   : reg_data_out <= singleVectorData_in[1375:1344];
+        7'h60   : reg_data_out <= singleVectorData_in[1407:1376];
+        7'h61   : reg_data_out <= singleVectorData_in[1439:1408];
+        7'h62   : reg_data_out <= singleVectorData_in[1471:1440];
+        7'h63   : reg_data_out <= singleVectorData_in[1503:1472];
+        7'h64   : reg_data_out <= singleVectorData_in[1535:1504];
+                
+        7'h65   : reg_data_out <= singleVectorData_in[1567:1536];
+        7'h66   : reg_data_out <= singleVectorData_in[1599:1568];
+        7'h67   : reg_data_out <= singleVectorData_in[1631:1600];
+        7'h68   : reg_data_out <= singleVectorData_in[1663:1632];
+        7'h69   : reg_data_out <= singleVectorData_in[1695:1664];
+        7'h6A   : reg_data_out <= singleVectorData_in[1727:1696];
+        7'h6B   : reg_data_out <= singleVectorData_in[1759:1728];
+        7'h6C   : reg_data_out <= singleVectorData_in[1791:1760];
+        7'h6D   : reg_data_out <= singleVectorData_in[1823:1792];
+        7'h6E   : reg_data_out <= singleVectorData_in[1855:1824];
+        7'h6F   : reg_data_out <= singleVectorData_in[1887:1856];
+        7'h70   : reg_data_out <= singleVectorData_in[1919:1888];
+        7'h71   : reg_data_out <= singleVectorData_in[1951:1920];
+        7'h72   : reg_data_out <= singleVectorData_in[1983:1952];
+        7'h73   : reg_data_out <= singleVectorData_in[2015:1984];
+        7'h74   : reg_data_out <= singleVectorData_in[2047:2016];
+        
         default : reg_data_out <= 0;
       endcase
     end