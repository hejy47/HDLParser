56a3b8fe9240155438922bfb6fb5d05b509c844d
Fix indexed part select error in degenerate case when M_COUNT = 1
diff --git a/rtl/axis_ram_switch.v b/rtl/axis_ram_switch.v
index e5bb03c..d2635e3 100644
--- a/rtl/axis_ram_switch.v
+++ b/rtl/axis_ram_switch.v
@@ -413,16 +413,23 @@ generate
             select_valid_next = select_valid_reg && !(port_axis_tvalid && port_axis_tready && port_axis_tlast);
 
             if (port_axis_tvalid && !select_valid_reg && !drop_reg) begin
-                select_next = 1'b0;
+                select_next = 0;
                 select_valid_next = 1'b0;
                 drop_next = 1'b1;
                 for (k = 0; k < M_COUNT; k = k + 1) begin
                     if (M_BASE == 0) begin
-                        // M_BASE is zero, route with $clog2(M_COUNT) MSBs of tdest as port index
-                        if (port_axis_tdest[DEST_WIDTH-CL_M_COUNT +: CL_M_COUNT] == k && (M_CONNECT & (1 << (m+k*S_COUNT)))) begin
-                            select_next = k;
+                        if (M_COUNT == 1) begin
+                            // M_BASE is zero with only one output port, ignore tdest
+                            select_next = 0;
                             select_valid_next = 1'b1;
                             drop_next = 1'b0;
+                        end else begin
+                            // M_BASE is zero, route with $clog2(M_COUNT) MSBs of tdest as port index
+                            if (port_axis_tdest[DEST_WIDTH-CL_M_COUNT +: CL_M_COUNT] == k && (M_CONNECT & (1 << (m+k*S_COUNT)))) begin
+                                select_next = k;
+                                select_valid_next = 1'b1;
+                                drop_next = 1'b0;
+                            end
                         end
                     end else if (M_TOP == 0) begin
                         // M_TOP is zero, assume equal to M_BASE