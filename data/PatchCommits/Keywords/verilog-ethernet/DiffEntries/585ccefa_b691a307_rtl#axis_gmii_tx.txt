585ccefa1534cba00ee915f54baf491a0b49df82
Add TX underflow error signal
diff --git a/rtl/axis_gmii_tx.v b/rtl/axis_gmii_tx.v
index 8f0316c..0acdab3 100644
--- a/rtl/axis_gmii_tx.v
+++ b/rtl/axis_gmii_tx.v
@@ -68,7 +68,8 @@ module axis_gmii_tx #
     /*
      * Status
      */
-    output wire        start_packet
+    output wire        start_packet,
+    output wire        error_underflow
 );
 
 localparam [7:0]
@@ -105,6 +106,7 @@ reg gmii_tx_er_reg = 1'b0, gmii_tx_er_next;
 reg s_axis_tready_reg = 1'b0, s_axis_tready_next;
 
 reg start_packet_reg = 1'b0, start_packet_next;
+reg error_underflow_reg = 1'b0, error_underflow_next;
 
 reg [31:0] crc_state = 32'hFFFFFFFF;
 wire [31:0] crc_next;
@@ -116,6 +118,7 @@ assign gmii_tx_en = gmii_tx_en_reg;
 assign gmii_tx_er = gmii_tx_er_reg;
 
 assign start_packet = start_packet_reg;
+assign error_underflow = error_underflow_reg;
 
 lfsr #(
     .LFSR_WIDTH(32),
@@ -153,6 +156,7 @@ always @* begin
     gmii_tx_er_next = 1'b0;
 
     start_packet_next = 1'b0;
+    error_underflow_next = 1'b0;
 
     if (!clk_enable) begin
         // clock disabled - hold state and outputs
@@ -243,6 +247,7 @@ always @* begin
                     // tvalid deassert, fail frame
                     gmii_tx_er_next = 1'b1;
                     frame_ptr_next = 16'd0;
+                    error_underflow_next = 1'b1;
                     state_next = STATE_WAIT_END;
                 end
             end
@@ -364,6 +369,7 @@ always @(posedge clk) begin
         gmii_tx_er_reg <= 1'b0;
 
         start_packet_reg <= 1'b0;
+        error_underflow_reg <= 1'b0;
 
         crc_state <= 32'hFFFFFFFF;
     end else begin
@@ -377,6 +383,7 @@ always @(posedge clk) begin
         gmii_tx_er_reg <= gmii_tx_er_next;
 
         start_packet_reg <= start_packet_next;
+        error_underflow_reg <= error_underflow_next;
 
         // datapath
         if (reset_crc) begin