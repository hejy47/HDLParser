0b2066abe3d8983a120cb8afe598c2710f2e5be6
Fix corner case with back-to-back single-cycle transfers
diff --git a/rtl/axis_frame_len.v b/rtl/axis_frame_len.v
index dd4d292..4c944b6 100644
--- a/rtl/axis_frame_len.v
+++ b/rtl/axis_frame_len.v
@@ -62,7 +62,6 @@ module axis_frame_len #
 
 reg [LEN_WIDTH-1:0] frame_len_reg = 0, frame_len_next;
 reg frame_len_valid_reg = 1'b0, frame_len_valid_next;
-reg frame_reg = 1'b0, frame_next;
 
 assign frame_len = frame_len_reg;
 assign frame_len_valid = frame_len_valid_reg;
@@ -72,7 +71,10 @@ integer offset, i, bit_cnt;
 always @* begin
     frame_len_next = frame_len_reg;
     frame_len_valid_next = 1'b0;
-    frame_next = frame_reg;
+
+    if (frame_len_valid_reg) begin
+        frame_len_next = 0;
+    end
 
     if (monitor_axis_tready && monitor_axis_tvalid) begin
         // valid transfer cycle
@@ -80,11 +82,6 @@ always @* begin
         if (monitor_axis_tlast) begin
             // end of frame
             frame_len_valid_next = 1'b1;
-            frame_next = 1'b0;
-        end else if (!frame_reg) begin
-            // first word after end of frame
-            frame_len_next = 0;
-            frame_next = 1'b1;
         end
 
         // increment frame length by number of words transferred
@@ -101,14 +98,12 @@ always @* begin
 end
 
 always @(posedge clk) begin
+    frame_len_reg <= frame_len_next;
+    frame_len_valid_reg <= frame_len_valid_next;
+
     if (rst) begin
         frame_len_reg <= 0;
         frame_len_valid_reg <= 0;
-        frame_reg <= 1'b0;
-    end else begin
-        frame_len_reg <= frame_len_next;
-        frame_len_valid_reg <= frame_len_valid_next;
-        frame_reg <= frame_next;
     end
 end
 