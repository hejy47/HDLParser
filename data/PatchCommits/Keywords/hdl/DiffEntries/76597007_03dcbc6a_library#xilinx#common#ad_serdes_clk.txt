7659700719b6e8d7f2c5643429655418c9f8407e
ad_serdes_clk: Fix generate block
diff --git a/library/xilinx/common/ad_serdes_clk.v b/library/xilinx/common/ad_serdes_clk.v
index 495f584f..b0aa9e2e 100644
--- a/library/xilinx/common/ad_serdes_clk.v
+++ b/library/xilinx/common/ad_serdes_clk.v
@@ -92,49 +92,53 @@ module ad_serdes_clk #(
 
   generate
   if (MMCM_OR_BUFR_N == 1) begin
-  ad_mmcm_drp #(
-    .MMCM_DEVICE_TYPE (DEVICE_TYPE),
-    .MMCM_CLKIN_PERIOD (MMCM_CLKIN_PERIOD),
-    .MMCM_CLKIN2_PERIOD (MMCM_CLKIN_PERIOD),
-    .MMCM_VCO_DIV (MMCM_VCO_DIV),
-    .MMCM_VCO_MUL (MMCM_VCO_MUL),
-    .MMCM_CLK0_DIV (MMCM_CLK0_DIV),
-    .MMCM_CLK0_PHASE (0.0),
-    .MMCM_CLK1_DIV (MMCM_CLK1_DIV),
-    .MMCM_CLK1_PHASE (0.0),
-    .MMCM_CLK2_DIV (MMCM_CLK0_DIV),
-    .MMCM_CLK2_PHASE (90.0))
-  i_mmcm_drp (
-    .clk (clk_in_s),
-    .clk2 (1'b0),
-    .clk_sel (1'b1),
-    .mmcm_rst (rst),
-    .mmcm_clk_0 (clk),
-    .mmcm_clk_1 (div_clk),
-    .mmcm_clk_2 (out_clk),
-    .up_clk (up_clk),
-    .up_rstn (up_rstn),
-    .up_drp_sel (up_drp_sel),
-    .up_drp_wr (up_drp_wr),
-    .up_drp_addr (up_drp_addr),
-    .up_drp_wdata (up_drp_wdata[15:0]),
-    .up_drp_rdata (up_drp_rdata[15:0]),
-    .up_drp_ready (up_drp_ready),
-    .up_drp_locked (up_drp_locked));
-  end
-
-  if (MMCM_OR_BUFR_N == 0) begin
-  BUFIO i_clk_buf (
-    .I (clk_in_s),
-    .O (clk));
-
-  BUFR #(.BUFR_DIVIDE("4")) i_div_clk_buf (
-    .CLR (1'b0),
-    .CE (1'b1),
-    .I (clk_in_s),
-    .O (div_clk));
+    ad_mmcm_drp #(
+      .MMCM_DEVICE_TYPE (DEVICE_TYPE),
+      .MMCM_CLKIN_PERIOD (MMCM_CLKIN_PERIOD),
+      .MMCM_CLKIN2_PERIOD (MMCM_CLKIN_PERIOD),
+      .MMCM_VCO_DIV (MMCM_VCO_DIV),
+      .MMCM_VCO_MUL (MMCM_VCO_MUL),
+      .MMCM_CLK0_DIV (MMCM_CLK0_DIV),
+      .MMCM_CLK0_PHASE (0.0),
+      .MMCM_CLK1_DIV (MMCM_CLK1_DIV),
+      .MMCM_CLK1_PHASE (0.0),
+      .MMCM_CLK2_DIV (MMCM_CLK0_DIV),
+      .MMCM_CLK2_PHASE (90.0))
+    i_mmcm_drp (
+      .clk (clk_in_s),
+      .clk2 (1'b0),
+      .clk_sel (1'b1),
+      .mmcm_rst (rst),
+      .mmcm_clk_0 (clk),
+      .mmcm_clk_1 (div_clk),
+      .mmcm_clk_2 (out_clk),
+      .up_clk (up_clk),
+      .up_rstn (up_rstn),
+      .up_drp_sel (up_drp_sel),
+      .up_drp_wr (up_drp_wr),
+      .up_drp_addr (up_drp_addr),
+      .up_drp_wdata (up_drp_wdata[15:0]),
+      .up_drp_rdata (up_drp_rdata[15:0]),
+      .up_drp_ready (up_drp_ready),
+      .up_drp_locked (up_drp_locked));
+
+    end else if (MMCM_OR_BUFR_N == 0) begin
+
+      BUFIO i_clk_buf (
+        .I (clk_in_s),
+        .O (clk));
+
+      BUFR #(.BUFR_DIVIDE("4")) i_div_clk_buf (
+        .CLR (1'b0),
+        .CE (1'b1),
+        .I (clk_in_s),
+        .O (div_clk));
+
+      assign out_clk = clk;
+      assign up_drp_rdata[15:0] = 'd0;
+      assign up_drp_ready = 'd0;
+      assign up_drp_locked = 'd0;
 
-  assign out_clk = clk;
   end
   endgenerate
 