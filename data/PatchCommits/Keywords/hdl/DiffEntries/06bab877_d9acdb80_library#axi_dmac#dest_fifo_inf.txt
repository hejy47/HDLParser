06bab8773383befc4c5c082708a44234e94718f3
axi_dmac: Reset fifo_rd_data when DMA is off - v2
diff --git a/library/axi_dmac/dest_fifo_inf.v b/library/axi_dmac/dest_fifo_inf.v
index 62bb0ce4..9c0d45b2 100644
--- a/library/axi_dmac/dest_fifo_inf.v
+++ b/library/axi_dmac/dest_fifo_inf.v
@@ -55,10 +55,10 @@ module dmac_dest_fifo_inf #(
 
   input en,
   output reg [DATA_WIDTH-1:0] dout,
-  output reg valid,
-  output reg underflow,
+  output valid,
+  output underflow,
 
-  output reg xfer_req,
+  output xfer_req,
 
   output fifo_ready,
   input fifo_valid,
@@ -81,9 +81,6 @@ wire _fifo_ready;
 assign fifo_ready = _fifo_ready | ~enabled;
 
 wire [DATA_WIDTH-1:0]  dout_s;
-wire                   valid_s;
-wire                   underflow_s;
-wire                   xfer_req_s;
 reg en_d1;
 wire data_ready;
 wire data_valid;
@@ -97,9 +94,9 @@ begin
   end
 end
 
-assign underflow_s = en_d1 & (~data_valid | ~enable);
+assign underflow = en_d1 & (~data_valid | ~enable);
 assign data_ready = en_d1 & (data_valid | ~enable);
-assign valid_s = en_d1 & data_valid & enable;
+assign valid = en_d1 & data_valid & enable;
 
 dmac_data_mover # (
   .ID_WIDTH(ID_WIDTH),
@@ -113,7 +110,7 @@ dmac_data_mover # (
   .enable(enable),
   .enabled(data_enabled),
   .sync_id(sync_id),
-        .xfer_req(xfer_req_s),
+        .xfer_req(xfer_req),
 
   .request_id(request_id),
   .response_id(data_id),
@@ -133,22 +130,12 @@ dmac_data_mover # (
 );
 
 always @(posedge clk) begin
-  if (resetn == 1'b0) begin
-    valid <= 1'b0;
-    underflow <= 1'b0;
-    xfer_req <= 1'b0;
-  end else begin
-    valid <= valid_s;
-    underflow <= underflow_s;
-    xfer_req <= xfer_req_s;
-  end
-end
-
-always @(posedge clk) begin
-  if ((resetn == 1'b0) || (valid_s == 1'b0)) begin
+  if ((resetn == 1'b0) || (data_enabled == 1'b0)) begin
     dout <= {DATA_WIDTH{1'b0}};
   end else begin
-    dout <= dout_s;
+    if (data_valid) begin
+      dout <= dout_s;
+    end
   end
 end
 