ab3d43be71df5233c4e63d27232a6c129b629928
up_axi.v: fixed bus width definition
diff --git a/library/common/up_axi.v b/library/common/up_axi.v
index 4ea46024..40acb17b 100644
--- a/library/common/up_axi.v
+++ b/library/common/up_axi.v
@@ -67,18 +67,14 @@ module up_axi #(
   // pcore interface
 
   output                            up_wreq,
-  output  [(ADDRESS_WIDTH-1):0]     up_waddr,
+  output  [(AXI_ADDRESS_WIDTH-3):0] up_waddr,
   output  [31:0]                    up_wdata,
   input                             up_wack,
   output                            up_rreq,
-  output  [(ADDRESS_WIDTH-1):0]     up_raddr,
+  output  [(AXI_ADDRESS_WIDTH-3):0] up_raddr,
   input   [31:0]                    up_rdata,
   input                             up_rack);
 
-  // local parameters
-
-  localparam   ADDRESS_WIDTH = AXI_ADDRESS_WIDTH - 2;
-
   // internal registers
 
   reg                               up_axi_awready_int = 'd0;
@@ -87,7 +83,7 @@ module up_axi #(
   reg                               up_wack_d = 'd0;
   reg                               up_wsel = 'd0;
   reg                               up_wreq_int = 'd0;
-  reg     [(ADDRESS_WIDTH-1):0]     up_waddr_int = 'd0;
+  reg     [(AXI_ADDRESS_WIDTH-3):0] up_waddr_int = 'd0;
   reg     [31:0]                    up_wdata_int = 'd0;
   reg     [ 4:0]                    up_wcount = 'd0;
   reg                               up_axi_arready_int = 'd0;
@@ -97,7 +93,7 @@ module up_axi #(
   reg     [31:0]                    up_rdata_d = 'd0;
   reg                               up_rsel = 'd0;
   reg                               up_rreq_int = 'd0;
-  reg     [(ADDRESS_WIDTH-1):0]     up_raddr_int = 'd0;
+  reg     [(AXI_ADDRESS_WIDTH-3):0] up_raddr_int = 'd0;
   reg     [ 4:0]                    up_rcount = 'd0;
 
   // internal signals
@@ -160,7 +156,7 @@ module up_axi #(
       end else begin
         up_wsel <= up_axi_awvalid & up_axi_wvalid;
         up_wreq_int <= up_axi_awvalid & up_axi_wvalid;
-        up_waddr_int <= up_axi_awaddr[(ADDRESS_WIDTH+1):2];
+        up_waddr_int <= up_axi_awaddr[(AXI_ADDRESS_WIDTH-1):2];
         up_wdata_int <= up_axi_wdata;
       end
       if (up_wack_s == 1'b1) begin
@@ -225,7 +221,7 @@ module up_axi #(
       end else begin
         up_rsel <= up_axi_arvalid;
         up_rreq_int <= up_axi_arvalid;
-        up_raddr_int <= up_axi_araddr[(ADDRESS_WIDTH+1):2];
+        up_raddr_int <= up_axi_araddr[(AXI_ADDRESS_WIDTH-1):2];
       end
       if (up_rack_s == 1'b1) begin
         up_rcount <= 5'h00;