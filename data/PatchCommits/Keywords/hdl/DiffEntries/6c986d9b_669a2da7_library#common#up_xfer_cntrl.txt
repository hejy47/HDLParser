6c986d9b6a4386cd90337b60de386865e2f09772
hdl/library- fix syntax errors/synthesis warnings
diff --git a/library/common/up_xfer_cntrl.v b/library/common/up_xfer_cntrl.v
index 27e607b4..19dc07d8 100644
--- a/library/common/up_xfer_cntrl.v
+++ b/library/common/up_xfer_cntrl.v
@@ -41,39 +41,40 @@ module up_xfer_cntrl #(
 
   // up interface
 
-  input                   up_rstn,
-  input                   up_clk,
-  input       [DW:0]      up_data_cntrl,
-  output  reg             up_xfer_done,
+  input                       up_rstn,
+  input                       up_clk,
+  input   [(DATA_WIDTH-1):0]  up_data_cntrl,
+  output                      up_xfer_done,
 
   // device interface
 
-  input                   d_rst,
-  input                   d_clk,
-  output  reg [DW:0]      d_data_cntrl);
-
-  localparam    DW = DATA_WIDTH - 1;
+  input                       d_rst,
+  input                       d_clk,
+  output  [(DATA_WIDTH-1):0]  d_data_cntrl);
 
   // internal registers
 
-  reg             up_xfer_state_m1 = 'd0;
-  reg             up_xfer_state_m2 = 'd0;
-  reg             up_xfer_state = 'd0;
-  reg     [ 5:0]  up_xfer_count = 'd0;
-  reg             up_xfer_toggle = 'd0;
-  reg     [DW:0]  up_xfer_data = 'd0;
-  reg             d_xfer_toggle_m1 = 'd0;
-  reg             d_xfer_toggle_m2 = 'd0;
-  reg             d_xfer_toggle_m3 = 'd0;
-  reg             d_xfer_toggle = 'd0;
+  reg                         up_xfer_state_m1 = 'd0;
+  reg                         up_xfer_state_m2 = 'd0;
+  reg                         up_xfer_state = 'd0;
+  reg     [ 5:0]              up_xfer_count = 'd0;
+  reg                         up_xfer_done_int = 'd0;
+  reg                         up_xfer_toggle = 'd0;
+  reg     [(DATA_WIDTH-1):0]  up_xfer_data = 'd0;
+  reg                         d_xfer_toggle_m1 = 'd0;
+  reg                         d_xfer_toggle_m2 = 'd0;
+  reg                         d_xfer_toggle_m3 = 'd0;
+  reg                         d_xfer_toggle = 'd0;
+  reg     [(DATA_WIDTH-1):0]  d_data_cntrl_int = 'd0;
 
   // internal signals
 
-  wire            up_xfer_enable_s;
-  wire            d_xfer_toggle_s;
+  wire                        up_xfer_enable_s;
+  wire                        d_xfer_toggle_s;
 
   // device control transfer
 
+  assign up_xfer_done = up_xfer_done_int;
   assign up_xfer_enable_s = up_xfer_state ^ up_xfer_toggle;
 
   always @(negedge up_rstn or posedge up_clk) begin
@@ -82,7 +83,7 @@ module up_xfer_cntrl #(
       up_xfer_state_m2 <= 'd0;
       up_xfer_state <= 'd0;
       up_xfer_count <= 'd0;
-      up_xfer_done <= 'd0;
+      up_xfer_done_int <= 'd0;
       up_xfer_toggle <= 'd0;
       up_xfer_data <= 'd0;
     end else begin
@@ -90,7 +91,7 @@ module up_xfer_cntrl #(
       up_xfer_state_m2 <= up_xfer_state_m1;
       up_xfer_state <= up_xfer_state_m2;
       up_xfer_count <= up_xfer_count + 1'd1;
-      up_xfer_done <= (up_xfer_count == 6'd1) ? ~up_xfer_enable_s : 1'b0;
+      up_xfer_done_int <= (up_xfer_count == 6'd1) ? ~up_xfer_enable_s : 1'b0;
       if ((up_xfer_count == 6'd1) && (up_xfer_enable_s == 1'b0)) begin
         up_xfer_toggle <= ~up_xfer_toggle;
         up_xfer_data <= up_data_cntrl;
@@ -98,6 +99,7 @@ module up_xfer_cntrl #(
     end
   end
 
+  assign d_data_cntrl = d_data_cntrl_int;
   assign d_xfer_toggle_s = d_xfer_toggle_m3 ^ d_xfer_toggle_m2;
 
   always @(posedge d_clk or posedge d_rst) begin
@@ -106,14 +108,14 @@ module up_xfer_cntrl #(
       d_xfer_toggle_m2 <= 'd0;
       d_xfer_toggle_m3 <= 'd0;
       d_xfer_toggle <= 'd0;
-      d_data_cntrl <= 'd0;
+      d_data_cntrl_int <= 'd0;
     end else begin
       d_xfer_toggle_m1 <= up_xfer_toggle;
       d_xfer_toggle_m2 <= d_xfer_toggle_m1;
       d_xfer_toggle_m3 <= d_xfer_toggle_m2;
       d_xfer_toggle <= d_xfer_toggle_m3;
       if (d_xfer_toggle_s == 1'b1) begin
-        d_data_cntrl <= up_xfer_data;
+        d_data_cntrl_int <= up_xfer_data;
       end
     end
   end