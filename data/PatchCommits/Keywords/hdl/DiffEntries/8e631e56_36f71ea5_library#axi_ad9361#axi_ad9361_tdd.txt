8e631e56d6467dec88bf294b6b47b1876b48279a
fmcomms2: Add a synchronization interface for TDD mode.
diff --git a/library/axi_ad9361/axi_ad9361_tdd.v b/library/axi_ad9361/axi_ad9361_tdd.v
index 7c8c2921..7c73504a 100644
--- a/library/axi_ad9361/axi_ad9361_tdd.v
+++ b/library/axi_ad9361/axi_ad9361_tdd.v
@@ -58,6 +58,12 @@ module axi_ad9361_tdd (
   tdd_enable,
   tdd_status,
 
+  // sync signals
+
+  tdd_sync_i,
+  tdd_sync_o,
+  tdd_sync_t,
+
   // tx/rx data flow control
 
   tx_valid_i0,
@@ -109,6 +115,10 @@ module axi_ad9361_tdd (
   output            tdd_enable;
   input   [ 7:0]    tdd_status;
 
+  input             tdd_sync_i;
+  output            tdd_sync_o;
+  output            tdd_sync_t;
+
   // tx data flow control
 
   input             tx_valid_i0;
@@ -148,40 +158,45 @@ module axi_ad9361_tdd (
 
   output  [34:0]    tdd_dbg;
 
+  reg               tdd_enable = 1'b0;
+  reg               tdd_slave_synced = 1'b0;
+  reg               tdd_sync_o = 1'b0;
+
   // internal signals
 
   wire              rst;
   wire              tdd_enable_s;
   wire              tdd_secondary_s;
-  wire   [ 7:0]     tdd_burst_count_s;
+  wire    [ 7:0]    tdd_burst_count_s;
   wire              tdd_rx_only_s;
   wire              tdd_tx_only_s;
   wire              tdd_gated_rx_dmapath_s;
   wire              tdd_gated_tx_dmapath_s;
-  wire   [23:0]     tdd_counter_init_s;
-  wire   [23:0]     tdd_frame_length_s;
-  wire   [23:0]     tdd_vco_rx_on_1_s;
-  wire   [23:0]     tdd_vco_rx_off_1_s;
-  wire   [23:0]     tdd_vco_tx_on_1_s;
-  wire   [23:0]     tdd_vco_tx_off_1_s;
-  wire   [23:0]     tdd_rx_on_1_s;
-  wire   [23:0]     tdd_rx_off_1_s;
-  wire   [23:0]     tdd_tx_on_1_s;
-  wire   [23:0]     tdd_tx_off_1_s;
-  wire   [23:0]     tdd_tx_dp_on_1_s;
-  wire   [23:0]     tdd_tx_dp_off_1_s;
-  wire   [23:0]     tdd_vco_rx_on_2_s;
-  wire   [23:0]     tdd_vco_rx_off_2_s;
-  wire   [23:0]     tdd_vco_tx_on_2_s;
-  wire   [23:0]     tdd_vco_tx_off_2_s;
-  wire   [23:0]     tdd_rx_on_2_s;
-  wire   [23:0]     tdd_rx_off_2_s;
-  wire   [23:0]     tdd_tx_on_2_s;
-  wire   [23:0]     tdd_tx_off_2_s;
-  wire   [23:0]     tdd_tx_dp_on_2_s;
-  wire   [23:0]     tdd_tx_dp_off_2_s;
-
-  wire   [23:0]     tdd_counter_status;
+  wire    [23:0]    tdd_counter_init_s;
+  wire    [23:0]    tdd_frame_length_s;
+  wire              tdd_terminal_type_s;
+  wire    [23:0]    tdd_vco_rx_on_1_s;
+  wire    [23:0]    tdd_vco_rx_off_1_s;
+  wire    [23:0]    tdd_vco_tx_on_1_s;
+  wire    [23:0]    tdd_vco_tx_off_1_s;
+  wire    [23:0]    tdd_rx_on_1_s;
+  wire    [23:0]    tdd_rx_off_1_s;
+  wire    [23:0]    tdd_tx_on_1_s;
+  wire    [23:0]    tdd_tx_off_1_s;
+  wire    [23:0]    tdd_tx_dp_on_1_s;
+  wire    [23:0]    tdd_tx_dp_off_1_s;
+  wire    [23:0]    tdd_vco_rx_on_2_s;
+  wire    [23:0]    tdd_vco_rx_off_2_s;
+  wire    [23:0]    tdd_vco_tx_on_2_s;
+  wire    [23:0]    tdd_vco_tx_off_2_s;
+  wire    [23:0]    tdd_rx_on_2_s;
+  wire    [23:0]    tdd_rx_off_2_s;
+  wire    [23:0]    tdd_tx_on_2_s;
+  wire    [23:0]    tdd_tx_off_2_s;
+  wire    [23:0]    tdd_tx_dp_on_2_s;
+  wire    [23:0]    tdd_tx_dp_off_2_s;
+
+  wire    [23:0]    tdd_counter_status;
 
   wire              tdd_tx_dp_en_s;
 
@@ -208,7 +223,45 @@ module axi_ad9361_tdd (
   assign  tdd_rx_valid_q1 = ((tdd_enable_s & tdd_gated_rx_dmapath_s) == 1'b1) ?
                                     (rx_valid_q1 & tdd_rx_rf_en) : rx_valid_q1;
 
-  assign  tdd_enable = tdd_enable_s;
+  // assign  tdd_enable = tdd_enable_s;
+
+  assign tdd_sync_t = tdd_terminal_type_s;
+
+  // catch generated sync signal
+  always @(posedge clk) begin
+    if (rst == 1'b1) begin
+      tdd_slave_synced <= 1'b0;
+    end else begin
+      if(tdd_sync_i == 1) begin
+        tdd_slave_synced <= 1'b1;
+      end else begin
+        tdd_slave_synced <= tdd_slave_synced & tdd_enable_s;
+      end
+    end
+  end
+
+  // generate sync signal
+  always @(posedge clk) begin
+    if (rst == 1'b1) begin
+      tdd_sync_o <= 1'b0;
+    end else begin
+      if(~tdd_enable & tdd_enable_s == 1'b1) begin
+        tdd_sync_o <= 1'b1;
+      end else begin
+        tdd_sync_o <= 1'b0;
+      end
+    end
+  end
+
+  // generate tdd enable in function of the terminal type
+  always @(posedge clk) begin
+    if (rst == 1'b1) begin
+      tdd_enable <= 1'b0;
+    end else begin
+      tdd_enable <= (tdd_terminal_type_s == 1'b1) ? tdd_enable_s :
+                                                    (tdd_enable_s & tdd_slave_synced);
+    end
+  end
 
   // instantiations
 
@@ -224,6 +277,7 @@ module axi_ad9361_tdd (
     .tdd_gated_tx_dmapath(tdd_gated_tx_dmapath_s),
     .tdd_counter_init(tdd_counter_init_s),
     .tdd_frame_length(tdd_frame_length_s),
+    .tdd_terminal_type(tdd_terminal_type_s),
     .tdd_vco_rx_on_1(tdd_vco_rx_on_1_s),
     .tdd_vco_rx_off_1(tdd_vco_rx_off_1_s),
     .tdd_vco_tx_on_1(tdd_vco_tx_on_1_s),