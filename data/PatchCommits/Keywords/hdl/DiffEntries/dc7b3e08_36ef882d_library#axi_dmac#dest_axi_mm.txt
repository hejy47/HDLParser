dc7b3e085c84e42b81ed87f9f89a91b7040915bb
axi_dmac: Fix issues with non 64-bit AXI masters
diff --git a/library/axi_dmac/dest_axi_mm.v b/library/axi_dmac/dest_axi_mm.v
index 9ffefe89..b07cfdf1 100644
--- a/library/axi_dmac/dest_axi_mm.v
+++ b/library/axi_dmac/dest_axi_mm.v
@@ -42,7 +42,7 @@ module dmac_dest_mm_axi (
 
 	input                               req_valid,
 	output                              req_ready,
-	input [31:C_ADDR_ALIGN_BITS]        req_address,
+	input [31:C_BYTES_PER_BEAT_WIDTH]   req_address,
 	input [C_BEATS_PER_BURST_WIDTH-1:0] req_last_burst_length,
 	input [C_BYTES_PER_BEAT_WIDTH-1:0]  req_last_beat_bytes,
 
@@ -95,9 +95,8 @@ module dmac_dest_mm_axi (
 
 parameter C_ID_WIDTH = 3;
 parameter C_DMA_DATA_WIDTH = 64;
-parameter C_ADDR_ALIGN_BITS = 3;
+parameter C_BYTES_PER_BEAT_WIDTH = $clog2(C_DMA_DATA_WIDTH/8);
 parameter C_BEATS_PER_BURST_WIDTH = 4;
-parameter C_BYTES_PER_BEAT_WIDTH = 3;
 
 reg [(C_DMA_DATA_WIDTH/8)-1:0] wstrb;
 
@@ -132,8 +131,8 @@ splitter #(
 
 dmac_address_generator #(
 	.C_ID_WIDTH(C_ID_WIDTH),
-	.C_ADDR_ALIGN_BITS(C_ADDR_ALIGN_BITS),
 	.C_BEATS_PER_BURST_WIDTH(C_BEATS_PER_BURST_WIDTH),
+	.C_BYTES_PER_BEAT_WIDTH(C_BYTES_PER_BEAT_WIDTH),
 	.C_DMA_DATA_WIDTH(C_DMA_DATA_WIDTH)
 ) i_addr_gen (
 	.clk(m_axi_aclk),
@@ -198,7 +197,7 @@ begin
 	if (data_eot & m_axi_wlast) begin
 		wstrb <= (1 << (req_last_beat_bytes + 1)) - 1;
 	end else begin
-		wstrb <= 8'b11111111;
+		wstrb <= {(C_DMA_DATA_WIDTH/8){1'b1}};
 	end
 end
 