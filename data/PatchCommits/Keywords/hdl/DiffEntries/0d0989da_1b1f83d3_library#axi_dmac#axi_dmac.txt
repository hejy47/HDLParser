0d0989da39ea8a1cbf054f9584d92446679f70d8
axi_dmac: diagnostic interface in bursts
diff --git a/library/axi_dmac/axi_dmac.v b/library/axi_dmac/axi_dmac.v
index 31866f06..00ccf6e1 100644
--- a/library/axi_dmac/axi_dmac.v
+++ b/library/axi_dmac/axi_dmac.v
@@ -56,7 +56,8 @@ module axi_dmac #(
   parameter FIFO_SIZE = 8, // In bursts
   parameter AXI_ID_WIDTH_SRC = 4,
   parameter AXI_ID_WIDTH_DEST = 4,
-  parameter DISABLE_DEBUG_REGISTERS = 0)(
+  parameter DISABLE_DEBUG_REGISTERS = 0,
+  parameter ENABLE_DIAGNOSTICS_IF = 0)(
   // Slave AXI interface
   input s_axi_aclk,
   input s_axi_aresetn,
@@ -211,7 +212,10 @@ module axi_dmac #(
   output                                   fifo_rd_valid,
   output [DMA_DATA_WIDTH_DEST-1:0]         fifo_rd_dout,
   output                                   fifo_rd_underflow,
-  output                                   fifo_rd_xfer_req
+  output                                   fifo_rd_xfer_req,
+
+  // Diagnostics interface
+  output  [7:0] dest_diag_level_bursts
 );
 
 
@@ -434,7 +438,8 @@ axi_dmac_transfer #(
   .FIFO_SIZE(FIFO_SIZE),
   .ID_WIDTH(ID_WIDTH),
   .AXI_LENGTH_WIDTH_SRC(8-(4*DMA_AXI_PROTOCOL_SRC)),
-  .AXI_LENGTH_WIDTH_DEST(8-(4*DMA_AXI_PROTOCOL_DEST))
+  .AXI_LENGTH_WIDTH_DEST(8-(4*DMA_AXI_PROTOCOL_DEST)),
+  .ENABLE_DIAGNOSTICS_IF(ENABLE_DIAGNOSTICS_IF)
 ) i_transfer (
   .ctrl_clk(s_axi_aclk),
   .ctrl_resetn(s_axi_aresetn),
@@ -532,7 +537,9 @@ axi_dmac_transfer #(
   .dbg_src_address_id(src_address_id),
   .dbg_src_data_id(src_data_id),
   .dbg_src_response_id(src_response_id),
-  .dbg_status(dbg_status)
+  .dbg_status(dbg_status),
+
+  .dest_diag_level_bursts(dest_diag_level_bursts)
 );
 
 assign m_dest_axi_arvalid = 1'b0;