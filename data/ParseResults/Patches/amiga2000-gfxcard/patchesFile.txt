CommitId: d3ad14cb8d8df15e0c612079f6679ad40e59e29b
debugged snapshot
--- a/z2-minispartan/z2.v
+++ b/z2-minispartan/z2.v
@@ -95,19 +96,21 @@ reg [1:0] vga_clk_sel = 0;
 // 11 == 100mhz
 // #(.CLK_SEL_TYPE("ASYNC"))
 
-BUFGMUX vga_clk_mux1(
+/*BUFGMUX vga_clk_mux1(
   .O(vga_clk_step1), 
   .I0(vga_clk_40),
   .I1(vga_clk_50),
   .S(vga_clk_sel[1])
-);
+);*/
 
+reg vga_clk_sel0_latch = 0;
 // #(.CLK_SEL_TYPE("ASYNC")) 
 BUFGMUX vga_clk_mux2(
   .O(vga_clk), 
   .I0(vga_clk_75),
-  .I1(vga_clk_step1),
-  .S(vga_clk_sel[0])
+  .I1(vga_clk_40),
+  //.I1(vga_clk_step1),
+  .S(vga_clk_sel0_latch)
 );
 
 // sd card interface

ParseResult:
INS HdlIdDef@@vga_clk_sel0_latch to objs
HdlIdDef: vga_clk_sel0_latch
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
    HdlValueInt: 0
    HdlDirection: INTERNAL


CommitId: d3ad14cb8d8df15e0c612079f6679ad40e59e29b
debugged snapshot
--- a/z2-minispartan/z2.v
+++ b/z2-minispartan/z2.v
@@ -328,14 +332,15 @@ reg z3_confdone = 0;
 // zorro synchronizers
 // (inspired by https://github.com/endofexclusive/greta/blob/master/hdl/bus_interface/bus_interface.vhdl)
 
-reg [4:0] znAS_sync  = 5'b11111;
+reg [3:0] znAS_sync  = 3'b111;
+reg [3:0] znUDS_sync = 3'b000;
+reg [3:0] znLDS_sync = 3'b000;
+reg [3:0] zREAD_sync = 3'b000;
+
 reg [2:0] znFCS_sync = 3'b111;
-reg [2:0] znUDS_sync = 3'b000;
-reg [2:0] znLDS_sync = 3'b000;
 reg [2:0] znDS1_sync = 3'b000;
 reg [2:0] znDS0_sync = 3'b000;
-reg [1:0] znRST_sync = 3'b111;
-reg [4:0] zREAD_sync = 5'b00000;
+reg [1:0] znRST_sync = 2'b11;
 reg [1:0] zDOE_sync = 2'b00;
 reg [1:0] zE7M_sync = 2'b00;
 reg [2:0] znCFGIN_sync = 3'b000;

ParseResult:
INS HdlIdDef@@znAS_sync to objs

INS HdlIdDef@@znUDS_sync to objs
HdlIdDef: znUDS_sync
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 3
                    HdlValueInt: 0
    HdlValueInt: 000
    HdlDirection: INTERNAL

INS HdlIdDef@@znLDS_sync to objs
HdlIdDef: znLDS_sync
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 3
                    HdlValueInt: 0
    HdlValueInt: 000
    HdlDirection: INTERNAL

INS HdlIdDef@@zREAD_sync to objs
HdlIdDef: zREAD_sync
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 3
                    HdlValueInt: 0
    HdlValueInt: 000
    HdlDirection: INTERNAL

UPD HdlIdDef@@znAS_sync to znAS_sync
    INS HdlValueInt@@111 to znAS_sync
    INS HdlDirection@@INTERNAL to znAS_sync

UPD HdlIdDef@@znRST_sync to znRST_sync
    UPD HdlValueInt@@111 to 11

DEL HdlIdDef@@znAS_sync from objs
HdlIdDef: znAS_sync
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 4
                    HdlValueInt: 0
    HdlValueInt: 11111
    HdlDirection: INTERNAL

DEL HdlIdDef@@znUDS_sync from objs
HdlIdDef: znUDS_sync
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 2
                    HdlValueInt: 0
    HdlValueInt: 000
    HdlDirection: INTERNAL

DEL HdlIdDef@@znLDS_sync from objs
HdlIdDef: znLDS_sync
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 2
                    HdlValueInt: 0
    HdlValueInt: 000
    HdlDirection: INTERNAL

DEL HdlIdDef@@zREAD_sync from objs
HdlIdDef: zREAD_sync
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 4
                    HdlValueInt: 0
    HdlValueInt: 00000
    HdlDirection: INTERNAL


CommitId: d3ad14cb8d8df15e0c612079f6679ad40e59e29b
debugged snapshot
--- a/z2-minispartan/z2.v
+++ b/z2-minispartan/z2.v
@@ -493,7 +497,7 @@ reg z3addr_in_reg = 0;
 reg z3addr_autoconfig = 0;
 
 reg [15:0] zaddr_regpart = 0;
-//reg [15:0] z3addr_rom = 0;
+`define ANALYZER 1
 
 `ifdef ANALYZER
 // logic analyzer

ParseResult:
INS HdlIdDef@@rec_enable to objs
HdlIdDef: rec_enable
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
    HdlValueInt: 0
    HdlDirection: INTERNAL

INS HdlIdDef@@rec_idx to objs
HdlIdDef: rec_idx
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 9
                    HdlValueInt: 0
    HdlDirection: INTERNAL

INS HdlIdDef@@rec_zreadraw to objs
HdlIdDef: rec_zreadraw
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 0
                    HdlValueInt: 255
    HdlDirection: INTERNAL

INS HdlIdDef@@rec_zread to objs
HdlIdDef: rec_zread
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 0
                    HdlValueInt: 255
    HdlDirection: INTERNAL

INS HdlIdDef@@rec_zwrite to objs
HdlIdDef: rec_zwrite
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 0
                    HdlValueInt: 255
    HdlDirection: INTERNAL


CommitId: d3ad14cb8d8df15e0c612079f6679ad40e59e29b
debugged snapshot
--- a/z2-minispartan/z2.v
+++ b/z2-minispartan/z2.v
@@ -513,40 +517,52 @@ reg [3:0] rec_zaddr [0:255];
 
 reg row_fetched = 0;
 
+reg z2_uds = 0;
+reg z2_lds = 0;
+
+reg z3_din_latch = 0;
+
 always @(posedge z_sample_clk) begin
   znUDS_sync  <= {znUDS_sync[1:0],znUDS};
   znLDS_sync  <= {znLDS_sync[1:0],znLDS};
+  znAS_sync   <= {znAS_sync[1:0],znAS};
+  zREAD_sync  <= {zREAD_sync[1:0],zREAD};
+  
   znDS1_sync  <= {znDS1_sync[1:0],znDS1};
   znDS0_sync  <= {znDS0_sync[1:0],znDS0};
-  znAS_sync   <= {znAS_sync[3:0],znAS};
-  zREAD_sync  <= {zREAD_sync[3:0],zREAD};
   zDOE_sync   <= {zDOE_sync[0],zDOE};
   zE7M_sync   <= {zE7M_sync[0],zE7M};
   znRST_sync  <= {znRST_sync[0],znRST};
   znCFGIN_sync  <= {znCFGIN_sync[1:0],znCFGIN};
   znFCS_sync <= {znFCS_sync[1:0],znFCS};
   
-  z2_addr_valid <= (znAS_sync == 5'b00000);
+  z2_addr_valid <= (znAS_sync==0); //(znAS_sync[0] == 0);
   
   data_in <= zD;
   data_in_z3_low16 <= zA[22:7]; // FIXME why sample this twice?
   zdata_in_sync <= data_in;
   
-  zorro_read  <= (zREAD_sync[2:0]==3'b111)?1'b1:1'b0; //(zREAD_sync[1] & zREAD_sync[0]);
-  zorro_write <= (zREAD_sync[1:0]==2'b00)?1'b1:1'b0; //(!zREAD_sync[1] & !zREAD_sync[0]);
+  zorro_read  <= (zREAD_sync == 3'b111);//(zREAD_sync[2:0]==3'b111)?1'b1:1'b0;
+  zorro_write <= (zREAD_sync[0] == 0);//(zREAD_sync[1:0]==2'b00)?1'b1:1'b0;
+  
+  z_ready_latch <= z_ready; // timing fix
+  vga_clk_sel0_latch <= vga_clk_sel[0];
+  
+  if (znUDS_sync==3'b000 || znLDS_sync==3'b000 || znDS1_sync==3'b000 || znDS0_sync==3'b000)
+    z3_din_latch <= 1;
+  else
+    z3_din_latch <= 0;
   
-  if (znUDS_sync[1]==0 || znLDS_sync[1]==0 || znDS1_sync[1]==0 || znDS0_sync[1]==0) begin
+  if (z3_din_latch) begin
     z3_din_high_s2 <= zD;
     z3_din_low_s2  <= zA[22:7];
   end
   
-  //if (znAS_sync[1]==1 && znAS_sync[0]==0) begin
   zaddr <= {zA[22:0],1'b0};
-  //end
   zaddr_sync  <= zaddr;
   zaddr_sync2 <= zaddr_sync;
   
-  z2_mapped_addr <= ((zaddr_sync-ram_low)>>1);
+  z2_mapped_addr <= ((zaddr_sync2-ram_low)>>1);
   
   z3addr2 <= {zD[15:8],zA[22:1],2'b00};
     

ParseResult:
INS HdlIdDef@@z2_lds to objs
HdlIdDef: z2_lds
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
    HdlValueInt: 0
    HdlDirection: INTERNAL

INS HdlIdDef@@z3_din_latch to objs
HdlIdDef: z3_din_latch
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
    HdlValueInt: 0
    HdlDirection: INTERNAL

MOV HdlStmAssign@@ to body
HdlStmAssign
    HdlOp: TERNARY
        list: ops
            HdlOp: EQ
                list: ops
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: zREAD_sync
                            HdlOp: DOWNTO
                                list: ops
                                    HdlValueInt: 1
                                    HdlValueInt: 0
                    HdlValueInt: 00
            HdlValueInt: 1
            HdlValueInt: 0
    HdlValueId: zorro_write

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlOp: CONCAT
        list: ops
            HdlOp: INDEX
                list: ops
                    HdlValueId: znAS_sync
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 1
                            HdlValueInt: 0
            HdlValueId: znAS
    HdlValueId: znAS_sync

INS HdlStmAssign@@ to body

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueId: z_ready
    HdlValueId: z_ready_latch

INS HdlStmAssign@@ to body

INS HdlStmIf@@ to body

INS HdlStmIf@@ to body

UPD HdlStmAssign@@ to 
    UPD HdlOp@@TERNARY to TERNARY
        UPD HdlOp@@EQ to CONCAT
        MOV HdlOp@@EQ to ops
        HdlOp: EQ
            list: ops
                HdlOp: INDEX
                    list: ops
                        HdlValueId: zREAD_sync
                        HdlOp: DOWNTO
                            list: ops
                                HdlValueInt: 1
                                HdlValueInt: 0
                HdlValueInt: 00
        UPD HdlOp@@EQ to EQ
            UPD HdlValueInt@@00 to 0
            MOV HdlValueInt@@00 to ops
            HdlValueInt: 00
        DEL HdlValueInt@@1 from ops
        DEL HdlValueInt@@0 from ops
        DEL list@@ops from TERNARY
    UPD HdlValueId@@zorro_write to zREAD_sync
    DEL HdlOp@@TERNARY from 

UPD HdlStmAssign@@ to 
    UPD HdlOp@@TERNARY to TERNARY
        MOV HdlOp@@EQ to ops
        HdlOp: EQ
            list: ops
                HdlOp: INDEX
                    list: ops
                        HdlValueId: zREAD_sync
                        HdlOp: DOWNTO
                            list: ops
                                HdlValueInt: 2
                                HdlValueInt: 0
                HdlValueInt: 111
        UPD HdlOp@@EQ to EQ
            UPD HdlOp@@INDEX to INDEX
                MOV HdlValueId@@zREAD_sync to ops
                HdlValueId: zREAD_sync
                DEL HdlOp@@DOWNTO from ops
                HdlOp: DOWNTO
                    list: ops
                        HdlValueInt: 2
                        HdlValueInt: 0
                DEL list@@ops from INDEX
            DEL HdlOp@@INDEX from ops
        DEL HdlValueInt@@1 from ops
        DEL HdlValueInt@@0 from ops
        DEL list@@ops from TERNARY
    DEL HdlOp@@TERNARY from 

UPD HdlStmAssign@@ to 
    INS HdlOp@@EQ to 
    INS HdlValueId@@zorro_write to 
    UPD HdlOp@@EQ to EQ
        INS list@@ops to EQ
        INS HdlOp@@INDEX to ops
        HdlOp: INDEX
            list: ops
                HdlValueId: zREAD_sync
                HdlValueInt: 0

UPD HdlStmAssign@@ to 
    INS HdlValueId@@vga_clk_sel0_latch to 

UPD HdlStmIf@@ to 
    MOV HdlOp@@OR_LOG to 
    HdlOp: OR_LOG
        list: ops
            HdlOp: OR_LOG
                list: ops
                    HdlOp: OR_LOG
                        list: ops
                            HdlOp: EQ
                                list: ops
                                    HdlOp: INDEX
                                        list: ops
                                            HdlValueId: znUDS_sync
                                            HdlValueInt: 1
                                    HdlValueInt: 0
                            HdlOp: EQ
                                list: ops
                                    HdlOp: INDEX
                                        list: ops
                                            HdlValueId: znLDS_sync
                                            HdlValueInt: 1
                                    HdlValueInt: 0
                    HdlOp: EQ
                        list: ops
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: znDS1_sync
                                    HdlValueInt: 1
                            HdlValueInt: 0
            HdlOp: EQ
                list: ops
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: znDS0_sync
                            HdlValueInt: 1
                    HdlValueInt: 0
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlStmAssign
                HdlValueId: zD
                HdlValueId: z3_din_high_s2
            HdlStmAssign
                HdlOp: INDEX
                    list: ops
                        HdlValueId: zA
                        HdlOp: DOWNTO
                            list: ops
                                HdlValueInt: 22
                                HdlValueInt: 7
                HdlValueId: z3_din_low_s2
    MOV list@@elifs to 
    list: elifs
    UPD HdlOp@@OR_LOG to OR_LOG
        UPD HdlOp@@EQ to EQ
            UPD HdlOp@@INDEX to INDEX
                MOV HdlValueId@@znDS0_sync to ops
                HdlValueId: znDS0_sync
                DEL HdlValueInt@@1 from ops
                DEL list@@ops from INDEX
            UPD HdlValueInt@@0 to 000
            DEL HdlOp@@INDEX from ops
        UPD HdlOp@@OR_LOG to OR_LOG
            UPD HdlOp@@EQ to EQ
                UPD HdlOp@@INDEX to INDEX
                    MOV HdlValueId@@znDS1_sync to ops
                    HdlValueId: znDS1_sync
                    DEL HdlValueInt@@1 from ops
                    DEL list@@ops from INDEX
                UPD HdlValueInt@@0 to 000
                DEL HdlOp@@INDEX from ops
            UPD HdlOp@@OR_LOG to OR_LOG
                UPD HdlOp@@EQ to EQ
                    UPD HdlOp@@INDEX to INDEX
                        MOV HdlValueId@@znUDS_sync to ops
                        HdlValueId: znUDS_sync
                        DEL HdlValueInt@@1 from ops
                        DEL list@@ops from INDEX
                    UPD HdlValueInt@@0 to 000
                    DEL HdlOp@@INDEX from ops
                UPD HdlOp@@EQ to EQ
                    UPD HdlOp@@INDEX to INDEX
                        MOV HdlValueId@@znLDS_sync to ops
                        HdlValueId: znLDS_sync
                        DEL HdlValueInt@@1 from ops
                        DEL list@@ops from INDEX
                    UPD HdlValueInt@@0 to 000
                    DEL HdlOp@@INDEX from ops

INS HdlStmAssign@@if_true to 
HdlStmAssign: if_true
    HdlValueInt: 1
    HdlValueId: z3_din_latch

UPD HdlStmIf@@ to 
    INS list@@elifs to 

INS HdlStmAssign@@if_false to 
HdlStmAssign: if_false
    HdlValueInt: 0
    HdlValueId: z3_din_latch

UPD HdlStmIf@@ to 
    INS HdlValueId@@z3_din_latch to 

UPD HdlStmAssign@@ to 
    UPD HdlOp@@TERNARY to TERNARY
        UPD HdlOp@@AND_LOG to AND_LOG
            UPD HdlOp@@AND_LOG to OR_LOG
            MOV HdlOp@@AND_LOG to ops
            HdlOp: AND_LOG
                list: ops
                    HdlOp: EQ
                        list: ops
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: znUDS_sync
                                    HdlValueInt: 2
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: znUDS_sync
                                    HdlValueInt: 1
                    HdlOp: EQ
                        list: ops
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: znLDS_sync
                                    HdlValueInt: 2
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: znLDS_sync
                                    HdlValueInt: 1
            UPD HdlOp@@OR_LOG to OR_LOG
                MOV HdlOp@@EQ to ops
                HdlOp: EQ
                    list: ops
                        HdlOp: INDEX
                            list: ops
                                HdlValueId: znUDS_sync
                                HdlValueInt: 2
                        HdlValueInt: 0
                MOV HdlOp@@EQ to ops
                HdlOp: EQ
                    list: ops
                        HdlOp: INDEX
                            list: ops
                                HdlValueId: znLDS_sync
                                HdlValueInt: 2
                        HdlValueInt: 0
                UPD HdlOp@@EQ to EQ
                    UPD HdlOp@@INDEX to INDEX
                        MOV HdlValueId@@znUDS_sync to ops
                        HdlValueId: znUDS_sync
                        DEL HdlValueInt@@2 from ops
                        DEL list@@ops from INDEX
                    DEL HdlOp@@INDEX from ops
                UPD HdlOp@@EQ to EQ
                    UPD HdlOp@@INDEX to INDEX
                        MOV HdlValueId@@znLDS_sync to ops
                        HdlValueId: znLDS_sync
                        DEL HdlValueInt@@2 from ops
                        DEL list@@ops from INDEX
                    DEL HdlOp@@INDEX from ops
                DEL list@@ops from OR_LOG
            UPD HdlOp@@AND_LOG to AND_LOG
                UPD HdlOp@@EQ to EQ
                    UPD HdlOp@@INDEX to INDEX
                        MOV list@@ops to INDEX
                        list: ops
                            HdlValueId: znUDS_sync
                            HdlValueInt: 2
                        UPD HdlValueInt@@2 to 0
                    DEL HdlOp@@INDEX from ops
                    DEL HdlOp@@INDEX from ops
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: znUDS_sync
                            HdlValueInt: 1
                    DEL list@@ops from EQ
                UPD HdlOp@@EQ to EQ
                    UPD HdlOp@@INDEX to INDEX
                        MOV list@@ops to INDEX
                        list: ops
                            HdlValueId: znLDS_sync
                            HdlValueInt: 2
                        UPD HdlValueInt@@2 to 0
                    DEL HdlOp@@INDEX from ops
                    DEL HdlOp@@INDEX from ops
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: znLDS_sync
                            HdlValueInt: 1
                    DEL list@@ops from EQ
            DEL HdlOp@@OR_LOG from ops
            DEL list@@ops from AND_LOG
        DEL HdlOp@@AND_LOG from ops
        DEL HdlValueInt@@1 from ops
        DEL HdlValueInt@@0 from ops
        DEL list@@ops from TERNARY
    UPD HdlValueId@@datastrobe_synced to z2_lds
    MOV HdlValueId@@datastrobe_synced to 
    HdlValueId: datastrobe_synced
    DEL HdlOp@@TERNARY from 

UPD HdlStmAssign@@ to 
    UPD HdlValueId@@zaddr_in_ram to zaddr_in_reg
    UPD HdlOp@@AND_LOG to AND_LOG
        UPD HdlOp@@LT to LT
            UPD HdlValueId@@zaddr_sync2 to zaddr_sync
            UPD HdlValueId@@ram_high to reg_high
        UPD HdlOp@@AND_LOG to AND_LOG
            UPD HdlOp@@GE to GE
                UPD HdlValueId@@zaddr_sync2 to zaddr_sync
                UPD HdlValueId@@ram_low to reg_low

UPD HdlStmAssign@@ to 
    UPD HdlOp@@CONCAT to CONCAT
        INS HdlValueId@@zREAD to ops

UPD HdlStmAssign@@ to 
    UPD HdlOp@@SRL to AND_LOG
    MOV HdlOp@@SRL to 
    HdlOp: SRL
        list: ops
            HdlOp: SUB
                list: ops
                    HdlValueId: zaddr_sync
                    HdlValueId: ram_low
            HdlValueInt: 1
    UPD HdlOp@@SRL to SRL
        UPD HdlOp@@SUB to GE
        DEL HdlValueInt@@1 from ops

UPD HdlStmAssign@@ to 
    UPD HdlOp@@AND_LOG to AND_LOG
        UPD HdlOp@@AND_LOG to AND_LOG
            MOV HdlOp@@EQ to ops
            HdlOp: EQ
                list: ops
                    HdlValueId: zaddr_sync
                    HdlValueId: zaddr_sync2
            DEL HdlOp@@GE from ops
            HdlOp: GE
                list: ops
                    HdlValueId: zaddr_sync2
                    HdlValueId: reg_low
            DEL list@@ops from AND_LOG
        DEL HdlOp@@AND_LOG from ops
        DEL HdlOp@@LT from ops
        HdlOp: LT
            list: ops
                HdlValueId: zaddr_sync2
                HdlValueId: reg_high
        DEL list@@ops from AND_LOG
    DEL HdlOp@@AND_LOG from 
    DEL HdlValueId@@zaddr_in_reg from 

UPD HdlStmIf@@ to 
    UPD HdlOp@@AND_LOG to AND_LOG
        UPD HdlOp@@LT to LT
            UPD HdlValueId@@zaddr_sync2 to zaddr_sync
        UPD HdlOp@@AND_LOG to AND_LOG
            UPD HdlOp@@GE to GE
                UPD HdlValueId@@zaddr_sync2 to zaddr_sync

DEL HdlStmIf@@ from body

DEL HdlStmAssign@@ from body

DEL HdlStmAssign@@ from body


CommitId: d3ad14cb8d8df15e0c612079f6679ad40e59e29b
debugged snapshot
--- a/z2-minispartan/z2.v
+++ b/z2-minispartan/z2.v
@@ -556,19 +572,17 @@ always @(posedge z_sample_clk) begin
   end
   z3_mapped_addr <= ((z3addr)&'h01ffffff)>>1;
   
-  datastrobe_synced <= ((znUDS_sync[2]==znUDS_sync[1]) && (znLDS_sync[2]==znLDS_sync[1]) 
-                        && ((znUDS_sync[2]==0) || (znLDS_sync[2]==0)))?1'b1:1'b0;
+  datastrobe_synced <= (znUDS_sync==0 || znLDS_sync==0);
+  z2_uds <= (znUDS_sync==0);
+  z2_lds <= (znLDS_sync==0);
   
-  // zaddr_sync==zaddr && 
-  // zaddr_sync==zaddr_sync2 && 
-  zaddr_in_ram <= (zaddr_sync==zaddr_sync2 && zaddr_sync2>=ram_low && zaddr_sync2<ram_high);
-  zaddr_in_reg <= (zaddr_sync==zaddr_sync2 && zaddr_sync2>=reg_low && zaddr_sync2<reg_high);
-  if (znAS_sync[1]==0 && zaddr_sync2>=autoconf_low && zaddr_sync2<autoconf_high)
+  zaddr_in_ram <= (zaddr_sync==zaddr_sync2 && zaddr_sync>=ram_low && zaddr_sync<ram_high);
+  zaddr_in_reg <= (zaddr_sync==zaddr_sync2 && zaddr_sync>=reg_low && zaddr_sync<reg_high);
+  if (znAS_sync[1]==0 && zaddr_sync>=autoconf_low && zaddr_sync<autoconf_high)
     zaddr_autoconfig <= 1'b1;
   else
     zaddr_autoconfig <= 1'b0;
-    
-  //z3addr_rom <= z3addr[15:0];
+  
   z_reset <= (znRST_sync==3'b000);
   z_cfgin <= (znCFGIN_sync==3'b000);
   z_cfgin_lo <= (znCFGIN_sync==3'b111);

ParseResult:
INS HdlStmAssign@@ to body

INS HdlStmAssign@@ to body

INS HdlStmAssign@@ to body

UPD HdlStmAssign@@ to 
    INS HdlValueId@@datastrobe_synced to 

UPD HdlStmAssign@@ to 
    INS HdlValueId@@z2_uds to 

UPD HdlStmAssign@@ to 
    INS HdlOp@@AND_LOG to 
    INS HdlValueId@@zaddr_in_ram to 
    UPD HdlOp@@AND_LOG to AND_LOG
        INS list@@ops to AND_LOG
        INS HdlOp@@LT to ops
        HdlOp: LT
            list: ops
                HdlValueId: zaddr_sync
                HdlValueId: ram_high

DEL HdlIdDef@@ram_arbiter_state from objs
HdlIdDef: ram_arbiter_state
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 4
                    HdlValueInt: 0
    HdlValueInt: 0
    HdlDirection: INTERNAL


CommitId: d3ad14cb8d8df15e0c612079f6679ad40e59e29b
debugged snapshot
--- a/z2-minispartan/z2.v
+++ b/z2-minispartan/z2.v
@@ -590,21 +604,22 @@ reg [23:0] zorro_ram_write_addr;
 reg [15:0] zorro_ram_write_data;
 reg [1:0] zorro_ram_write_bytes;
 
-reg [4:0] ram_arbiter_state = 0;
+reg [15:0] ram_arbiter_state = 0;
 
 parameter RAM_READY = 0;
 parameter RAM_READY2 = 1;
 parameter RAM_FETCHING_ROW8 = 2;
 parameter RAM_ROW_FETCHED = 4;
-parameter RAM_READING_ZORRO_PRE = 5;
-parameter RAM_WRITING_ZORRO = 6;
-parameter RAM_BURST_OFF = 7;
-parameter RAM_BURST_ON = 8;
-parameter RAM_READING_BLIT = 9;
-parameter RAM_REFRESH = 10;
-parameter RAM_READING_ZORRO = 11;
-parameter RAM_REFRESH_PRE = 12;
-parameter RAM_WRITING_ZORRO_PRE = 13;
+parameter RAM_READING_ZORRO_PRE = 8;
+parameter RAM_WRITING_ZORRO = 16;
+parameter RAM_BURST_OFF = 32;
+parameter RAM_BURST_OFF2 = 64;
+parameter RAM_BURST_ON = 128;
+parameter RAM_READING_BLIT = 256;
+parameter RAM_REFRESH = 512;
+parameter RAM_READING_ZORRO = 1024;
+parameter RAM_REFRESH_PRE = 2048;
+parameter RAM_WRITING_ZORRO_PRE = 4096;
 
 reg [11:0] need_row_fetch_y = 0;
 reg [11:0] fetch_line_y = 0;

ParseResult:
INS HdlIdDef@@RAM_BURST_OFF2 to params
HdlIdDef: RAM_BURST_OFF2
    HdlValueInt: 64
    HdlDirection: INTERNAL

UPD HdlIdDef@@ram_arbiter_state to ram_arbiter_state
    INS HdlValueInt@@0 to ram_arbiter_state
    INS HdlDirection@@INTERNAL to ram_arbiter_state


CommitId: d3ad14cb8d8df15e0c612079f6679ad40e59e29b
debugged snapshot
--- a/z2-minispartan/z2.v
+++ b/z2-minispartan/z2.v
@@ -684,7 +713,7 @@ always @(posedge z_sample_clk) begin
       reg_low   <= 'h600000 + ram_size;
       reg_high  <= 'h600000 + ram_size + reg_size;
       
-      if (clock_locked && znRST_sync[1] == 1'b1)
+      if (clock_locked /*&& znRST_sync[1] == 1'b1*/)
         zorro_state <= PAUSE;
     end
     

ParseResult:
UPD HdlStmIf@@ to 
    INS list@@elifs to 

UPD HdlStmCase@@zorro_state to zorro_state
    INS HdlStmCaseType@@CASE to zorro_state
    INS HdlValueId@@zorro_state to zorro_state
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS HdlValueId@@WAIT_READ to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@WAIT_WRITE to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@WAIT_WRITE2 to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@WAIT_WRITE3 to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmIf@@ to 
    DEL list@@elifs from 

UPD HdlStmCase@@zorro_state to zorro_state
    DEL HdlStmCaseType@@CASE from zorro_state
    DEL HdlValueId@@zorro_state from zorro_state
    DEL HdlValueId@@WAIT_READ from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases
    DEL HdlValueId@@WAIT_WRITE from 
    DEL tuple@@ from cases
    DEL HdlValueId@@WAIT_WRITE2 from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases


CommitId: d3ad14cb8d8df15e0c612079f6679ad40e59e29b
debugged snapshot
--- a/z2-minispartan/z2.v
+++ b/z2-minispartan/z2.v
@@ -693,10 +722,10 @@ always @(posedge z_sample_clk) begin
       if (zaddr_autoconfig) begin
         ZORRO3 <= 0;
         zorro_state <= Z2_CONFIGURING;
-      end else if (z3addr_autoconfig) begin
+      end /*else if (z3addr_autoconfig) begin
         ZORRO3 <= 1;
         zorro_state <= Z3_CONFIGURING;
-      end
+      end*/ // CHECK CHECK
     end
     
     Z3_CONFIGURING: begin

ParseResult:
UPD HdlStmIf@@ to 
    INS list@@elifs to 

UPD HdlStmCase@@zorro_state to zorro_state
    INS HdlStmCaseType@@CASE to zorro_state
    INS HdlValueId@@zorro_state to zorro_state
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS HdlValueId@@WAIT_READ to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@WAIT_WRITE to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@WAIT_WRITE2 to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@WAIT_WRITE3 to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmIf@@ to 
    DEL list@@elifs from 

UPD HdlStmCase@@zorro_state to zorro_state
    DEL HdlStmCaseType@@CASE from zorro_state
    DEL HdlValueId@@zorro_state from zorro_state
    DEL HdlValueId@@WAIT_READ from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases
    DEL HdlValueId@@WAIT_WRITE from 
    DEL tuple@@ from cases
    DEL HdlValueId@@WAIT_WRITE2 from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases


CommitId: d3ad14cb8d8df15e0c612079f6679ad40e59e29b
debugged snapshot
--- a/z2-minispartan/z2.v
+++ b/z2-minispartan/z2.v
@@ -745,7 +774,7 @@ always @(posedge z_sample_clk) begin
         end else begin
           // write to autoconfig register
           slaven <= 1;
-          if (((znUDS_sync[2]==0) || (znLDS_sync[2]==0))) begin
+          if (z2_uds || z2_lds) begin
             dtack_time <= 0;
             zorro_state <= Z3_DTACK;
             casex (z3addr[15:0])

ParseResult:
UPD HdlStmIf@@ to 
    INS list@@elifs to 

UPD HdlStmCase@@zorro_state to zorro_state
    INS HdlStmCaseType@@CASE to zorro_state
    INS HdlValueId@@zorro_state to zorro_state
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS HdlValueId@@WAIT_READ to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@WAIT_WRITE to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@WAIT_WRITE2 to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@WAIT_WRITE3 to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmIf@@ to 
    DEL list@@elifs from 

UPD HdlStmCase@@zorro_state to zorro_state
    DEL HdlStmCaseType@@CASE from zorro_state
    DEL HdlValueId@@zorro_state from zorro_state
    DEL HdlValueId@@WAIT_READ from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases
    DEL HdlValueId@@WAIT_WRITE from 
    DEL tuple@@ from cases
    DEL HdlValueId@@WAIT_WRITE2 from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases


CommitId: d3ad14cb8d8df15e0c612079f6679ad40e59e29b
debugged snapshot
--- a/z2-minispartan/z2.v
+++ b/z2-minispartan/z2.v
@@ -795,7 +824,7 @@ always @(posedge z_sample_clk) begin
     
     Z2_CONFIGURING: begin
       // CHECK
-      if (zaddr_autoconfig && !znCFGIN_sync[2]) begin
+      if (zaddr_autoconfig && z_cfgin) begin
         if (zorro_read) begin
           // read iospace 'he80000 (Autoconfig ROM)
           dataout_enable <= 1;

ParseResult:
UPD HdlStmIf@@ to 
    INS list@@elifs to 

UPD HdlStmCase@@zorro_state to zorro_state
    INS HdlStmCaseType@@CASE to zorro_state
    INS HdlValueId@@zorro_state to zorro_state
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS HdlValueId@@WAIT_READ to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@WAIT_WRITE to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@WAIT_WRITE2 to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@WAIT_WRITE3 to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmIf@@ to 
    UPD HdlOp@@AND_LOG to AND_LOG
        UPD HdlOp@@NEG_LOG to NEG_LOG
            UPD HdlOp@@INDEX to INDEX
                UPD HdlValueId@@znCFGIN_sync to z_cfgin
                MOV HdlValueId@@znCFGIN_sync to ops
                HdlValueId: znCFGIN_sync
                DEL HdlValueInt@@2 from ops
                DEL list@@ops from INDEX
            DEL HdlOp@@INDEX from ops
            DEL list@@ops from NEG_LOG
        DEL HdlOp@@NEG_LOG from ops

UPD HdlStmIf@@ to 
    DEL list@@elifs from 

UPD HdlStmCase@@zorro_state to zorro_state
    DEL HdlStmCaseType@@CASE from zorro_state
    DEL HdlValueId@@zorro_state from zorro_state
    DEL HdlValueId@@WAIT_READ from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases
    DEL HdlValueId@@WAIT_WRITE from 
    DEL tuple@@ from cases
    DEL HdlValueId@@WAIT_WRITE2 from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases


CommitId: d3ad14cb8d8df15e0c612079f6679ad40e59e29b
debugged snapshot
--- a/z2-minispartan/z2.v
+++ b/z2-minispartan/z2.v
@@ -906,15 +935,18 @@ always @(posedge z_sample_clk) begin
         zorro_state <= RESET_DVID;
       end else
       if (z2_addr_valid) begin
-        if (zorro_read && zaddr_in_ram) begin
-          /*if (!rec_enable) begin 
+      
+        `ifdef ANALYZER
+          if (!rec_enable && zaddr_in_ram) begin 
             rec_enable <= 1;
             rec_idx <= 0;
-          end*/
-          
+          end
+        `endif
+      
+        if (zorro_read && zaddr_in_ram) begin
           // read RAM
           // request ram access from arbiter
-          last_addr <= ((zaddr_sync2-ram_low)>>1);
+          last_addr <= z2_mapped_addr;
           data <= 'hffff;
           read_counter <= 0;
           

ParseResult:
UPD HdlStmIf@@ to 
    INS list@@elifs to 

UPD HdlStmCase@@zorro_state to zorro_state
    INS HdlStmCaseType@@CASE to zorro_state
    INS HdlValueId@@zorro_state to zorro_state
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS HdlValueId@@WAIT_READ to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@WAIT_WRITE to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@WAIT_WRITE2 to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@WAIT_WRITE3 to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

INS HdlStmIf@@ to body
HdlStmIf
    HdlOp: AND_LOG
        list: ops
            HdlOp: NEG_LOG
                list: ops
                    HdlValueId: rec_enable
            HdlValueId: zaddr_in_ram
    HdlStmBlock: SEQ
        list: body
            HdlStmAssign
                HdlValueInt: 1
                HdlValueId: rec_enable
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: rec_idx
    list: elifs

UPD HdlStmAssign@@ to 
    UPD HdlOp@@SRL to SRL
        UPD HdlOp@@SUB to SUB
            UPD HdlValueId@@zaddr_sync2 to z2_mapped_addr
            MOV HdlValueId@@zaddr_sync2 to ops
            HdlValueId: zaddr_sync2
            DEL HdlValueId@@ram_low from ops
            DEL list@@ops from SUB
        DEL HdlOp@@SUB from ops
        DEL HdlValueInt@@1 from ops
        DEL list@@ops from SRL
    DEL HdlOp@@SRL from 

UPD HdlStmIf@@ to 
    DEL list@@elifs from 

UPD HdlStmCase@@zorro_state to zorro_state
    DEL HdlStmCaseType@@CASE from zorro_state
    DEL HdlValueId@@zorro_state from zorro_state
    DEL HdlValueId@@WAIT_READ from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases
    DEL HdlValueId@@WAIT_WRITE from 
    DEL tuple@@ from cases
    DEL HdlValueId@@WAIT_WRITE2 from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases


CommitId: d3ad14cb8d8df15e0c612079f6679ad40e59e29b
debugged snapshot
--- a/z2-minispartan/z2.v
+++ b/z2-minispartan/z2.v
@@ -923,11 +955,15 @@ always @(posedge z_sample_clk) begin
           dataout <= 1;
           
           zorro_state <= WAIT_READ3;
+          z_ready <= 0;
+          
+          //stat_r1 <= stat_r1+1'b1;
           
         end else if (zorro_write && zaddr_in_ram) begin
-          // write RAM          
-          last_addr <= ((zaddr_sync2-ram_low)>>1); // z2_mapped_addr
+          // write RAM
+          last_addr <= z2_mapped_addr;
           zorro_state <= WAIT_WRITE;
+          z_ready <= 0;
           
         end else if (zorro_write && zaddr_in_reg) begin
           // write to register

ParseResult:
UPD HdlStmIf@@ to 
    INS list@@elifs to 

UPD HdlStmCase@@zorro_state to zorro_state
    INS HdlStmCaseType@@CASE to zorro_state
    INS HdlValueId@@zorro_state to zorro_state
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS HdlValueId@@WAIT_READ to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@WAIT_WRITE to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@WAIT_WRITE2 to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@WAIT_WRITE3 to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmIf@@ to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmAssign@@ to 
    INS HdlValueId@@z2_mapped_addr to 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['zaddr_sync2',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['zaddr_sync2',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    UPD HdlValueInt@@60 to 90
    UPD HdlValueInt@@62 to 92
    UPD HdlValueInt@@64 to 94
    UPD HdlValueInt@@66 to 96
    UPD HdlValueInt@@68 to 98
    DEL HdlValueInt@@6a from 
    DEL tuple@@ from cases
    DEL tuple@@ from cases
    tuple
        HdlValueInt: 6c
        HdlStmAssign
            HdlOp: CONCAT
                list: ops
                    HdlValueId: sd_data_in
                    HdlValueInt: 00
            HdlValueId: data
    DEL tuple@@ from cases
    tuple
        HdlValueInt: 6e
        HdlStmAssign
            HdlOp: CONCAT
                list: ops
                    HdlValueId: sd_data_out
                    HdlValueInt: 00
            HdlValueId: data
    DEL tuple@@ from cases
    tuple
        HdlValueInt: 70
        HdlStmAssign
            HdlValueId: sd_error
            HdlValueId: data

UPD HdlStmAssign@@ to 
    UPD HdlOp@@CONCAT to CONCAT
        UPD HdlValueId@@sd_busy to stat_w1
        MOV HdlValueId@@sd_busy to ops
        HdlValueId: sd_busy
        DEL HdlValueInt@@00 from ops
        DEL list@@ops from CONCAT
    DEL HdlOp@@CONCAT from 

UPD HdlStmIf@@ to 
    DEL list@@elifs from 

UPD HdlStmCase@@zorro_state to zorro_state
    DEL HdlStmCaseType@@CASE from zorro_state
    DEL HdlValueId@@zorro_state from zorro_state
    DEL HdlValueId@@WAIT_READ from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases
    DEL HdlValueId@@WAIT_WRITE from 
    DEL tuple@@ from cases
    DEL HdlValueId@@WAIT_WRITE2 from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases


CommitId: d3ad14cb8d8df15e0c612079f6679ad40e59e29b
debugged snapshot
--- a/z2-minispartan/z2.v
+++ b/z2-minispartan/z2.v
@@ -950,7 +986,7 @@ always @(posedge z_sample_clk) begin
             'h28: data <= blitter_rgb;
             'h2a: data <= blitter_enable;
             
-            'h60: data <= {sd_busy,8'h00};
+            /*'h60: data <= {sd_busy,8'h00};
             'h62: data <= {sd_read,8'h00};
             'h64: data <= {sd_write,8'h00};
             'h66: data <= {sd_handshake_out,8'h00};

ParseResult:
UPD HdlStmIf@@ to 
    INS list@@elifs to 

UPD HdlStmCase@@zorro_state to zorro_state
    INS HdlStmCaseType@@CASE to zorro_state
    INS HdlValueId@@zorro_state to zorro_state
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS HdlValueId@@WAIT_READ to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@WAIT_WRITE to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@WAIT_WRITE2 to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@WAIT_WRITE3 to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

MOV HdlStmAssign@@ to body
HdlStmAssign
    HdlValueInt: 1
    HdlValueId: z_ready

UPD HdlStmIf@@ to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmIf@@ to 
    DEL list@@elifs from 

UPD HdlStmCase@@zorro_state to zorro_state
    DEL HdlStmCaseType@@CASE from zorro_state
    DEL HdlValueId@@zorro_state from zorro_state
    DEL HdlValueId@@WAIT_READ from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases
    DEL HdlValueId@@WAIT_WRITE from 
    DEL tuple@@ from cases
    DEL HdlValueId@@WAIT_WRITE2 from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases


CommitId: d3ad14cb8d8df15e0c612079f6679ad40e59e29b
debugged snapshot
--- a/z2-minispartan/z2.v
+++ b/z2-minispartan/z2.v
@@ -958,18 +994,30 @@ always @(posedge z_sample_clk) begin
             'h6a: data <= sd_addr_in[15:0];
             'h6c: data <= {sd_data_in,8'h00};
             'h6e: data <= {sd_data_out,8'h00};
-            'h70: data <= sd_error;
+            'h70: data <= sd_error;*/
             //'h72: data <= sd_clkdiv;
             
+            'h90: data <= stat_w1;
+            'h92: data <= stat_w2;
+            'h94: data <= stat_w3;
+            'h96: data <= stat_w4;
+            'h98: data <= stat_r1;
+            
             default: data <= REVISION; //'h0000;
           endcase
-        end        
+        end else begin
+          dataout <= 0;
+          dataout_enable <= 0;
+          slaven <= 0;
+          write_stall <= 0;
+        end
+          
       end else begin
         dataout <= 0;
         dataout_enable <= 0;
         slaven <= 0;
         write_stall <= 0;
-        z_ready <= 1; // clear XRDY (cpu wait)
+        //z_ready <= 1; // clear XRDY (cpu wait)
       end
     end
     

ParseResult:
UPD HdlStmIf@@ to 
    INS list@@elifs to 

UPD HdlStmCase@@zorro_state to zorro_state
    INS HdlStmCaseType@@CASE to zorro_state
    INS HdlValueId@@zorro_state to zorro_state
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS HdlValueId@@WAIT_READ to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@WAIT_WRITE to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@WAIT_WRITE2 to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@WAIT_WRITE3 to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmIf@@ to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: dataout

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: dataout_enable

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: slaven

MOV HdlStmAssign@@ to body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: z_ready

UPD HdlStmIf@@ to 
    DEL list@@elifs from 

UPD HdlStmCase@@zorro_state to zorro_state
    DEL HdlStmCaseType@@CASE from zorro_state
    DEL HdlValueId@@zorro_state from zorro_state
    DEL HdlValueId@@WAIT_READ from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases
    DEL HdlValueId@@WAIT_WRITE from 
    DEL tuple@@ from cases
    DEL HdlValueId@@WAIT_WRITE2 from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases


CommitId: d3ad14cb8d8df15e0c612079f6679ad40e59e29b
debugged snapshot
--- a/z2-minispartan/z2.v
+++ b/z2-minispartan/z2.v
@@ -983,7 +1031,6 @@ always @(posedge z_sample_clk) begin
     
     // ----------------------------------------------------------------------------------
     WAIT_READ3: begin
-      z_ready <= 0;
       if (!zorro_ram_read_request) begin
         zorro_ram_read_addr <= last_addr;
         zorro_ram_read_request <= 1;

ParseResult:
UPD HdlStmIf@@ to 
    INS list@@elifs to 

UPD HdlStmCase@@zorro_state to zorro_state
    INS HdlStmCaseType@@CASE to zorro_state
    INS HdlValueId@@zorro_state to zorro_state
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS HdlValueId@@WAIT_READ to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@WAIT_WRITE to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@WAIT_WRITE2 to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@WAIT_WRITE3 to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmIf@@ to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmIf@@ to 
    DEL list@@elifs from 

UPD HdlStmCase@@zorro_state to zorro_state
    DEL HdlStmCaseType@@CASE from zorro_state
    DEL HdlValueId@@zorro_state from zorro_state
    DEL HdlValueId@@WAIT_READ from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases
    DEL HdlValueId@@WAIT_WRITE from 
    DEL tuple@@ from cases
    DEL HdlValueId@@WAIT_WRITE2 from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases


CommitId: d3ad14cb8d8df15e0c612079f6679ad40e59e29b
debugged snapshot
--- a/z2-minispartan/z2.v
+++ b/z2-minispartan/z2.v
@@ -1004,6 +1051,7 @@ always @(posedge z_sample_clk) begin
         data <= zorro_ram_read_data;
         read_counter <= read_counter + 1;
         zorro_ram_read_request <= 0;
+        z_ready <= 1;
         
         if (read_counter >= dataout_time) begin
           zorro_state <= WAIT_READ;

ParseResult:
UPD HdlStmIf@@ to 
    INS list@@elifs to 

UPD HdlStmCase@@zorro_state to zorro_state
    INS HdlStmCaseType@@CASE to zorro_state
    INS HdlValueId@@zorro_state to zorro_state
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS HdlValueId@@WAIT_READ to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@WAIT_WRITE to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@WAIT_WRITE2 to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@WAIT_WRITE3 to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

MOV HdlStmAssign@@ to body
HdlStmAssign
    HdlValueId: last_addr
    HdlValueId: zorro_ram_write_addr

UPD HdlStmIf@@ to 
    MOV HdlOp@@NEG_LOG to 
    HdlOp: NEG_LOG
        list: ops
            HdlValueId: zorro_ram_write_request
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL list@@elifs from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 

MOV HdlStmAssign@@ to body
HdlStmAssign
    HdlValueInt: 1
    HdlValueId: z_ready

MOV HdlStmAssign@@ to body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: write_stall

UPD HdlStmIf@@ to 
    DEL list@@elifs from 

UPD HdlStmCase@@zorro_state to zorro_state
    DEL HdlStmCaseType@@CASE from zorro_state
    DEL HdlValueId@@zorro_state from zorro_state
    DEL HdlValueId@@WAIT_READ from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases
    DEL HdlValueId@@WAIT_WRITE from 
    DEL tuple@@ from cases
    DEL HdlValueId@@WAIT_WRITE2 from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases

UPD HdlStmIf@@ to 
    DEL HdlValueId@@datastrobe_synced from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL list@@elifs from 

DEL HdlStmIf@@ from body

DEL HdlStmIf@@ from 


CommitId: d3ad14cb8d8df15e0c612079f6679ad40e59e29b
debugged snapshot
--- a/z2-minispartan/z2.v
+++ b/z2-minispartan/z2.v
@@ -1264,6 +1320,14 @@ always @(posedge z_sample_clk) begin
         end
         'h82: refresh_time <= regdata_in[15:0];
         
+        'h90: begin
+          stat_w1 <= 0;
+          stat_w2 <= 0;
+          stat_w3 <= 0;
+          stat_w4 <= 0;
+          stat_r1 <= 0;
+        end
+        
         'h70: h_sync_start <= regdata_in[11:0];
         'h72: h_sync_end <= regdata_in[11:0];
         'h74: h_max <= regdata_in[11:0];

ParseResult:
UPD HdlStmIf@@ to 
    INS list@@elifs to 

UPD HdlStmCase@@zorro_state to zorro_state
    INS HdlStmCaseType@@CASE to zorro_state
    INS HdlValueId@@zorro_state to zorro_state
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS HdlValueId@@WAIT_READ to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@WAIT_WRITE to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@WAIT_WRITE2 to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@WAIT_WRITE3 to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmIf@@ to 
    DEL list@@elifs from 

UPD HdlStmCase@@zorro_state to zorro_state
    DEL HdlStmCaseType@@CASE from zorro_state
    DEL HdlValueId@@zorro_state from zorro_state
    DEL HdlValueId@@WAIT_READ from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases
    DEL HdlValueId@@WAIT_WRITE from 
    DEL tuple@@ from cases
    DEL HdlValueId@@WAIT_WRITE2 from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases

UPD HdlStmCase@@zaddr_regpart to zaddr_regpart
    DEL tuple@@ from cases
    tuple
        HdlValueInt: 80
        HdlStmAssign
            HdlOp: INDEX
                list: ops
                    HdlValueId: regdata_in
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 4
                            HdlValueInt: 0
            HdlValueId: ram_arbiter_state


CommitId: d3ad14cb8d8df15e0c612079f6679ad40e59e29b
debugged snapshot
--- a/z2-minispartan/z2.v
+++ b/z2-minispartan/z2.v
@@ -1275,7 +1339,7 @@ always @(posedge z_sample_clk) begin
           dvid_reset <= 1;
         end
         
-        //'h0a: dataout_time <= regdata_in[7:0];
+        'h0a: dataout_time <= regdata_in[7:0];
         'h0c: margin_x <= regdata_in[9:0];
         'h10: preheat_x <= regdata_in[4:0];
         //'h12: safe_x1 <= regdata_in[10:0];

ParseResult:
UPD HdlStmIf@@ to 
    INS list@@elifs to 

UPD HdlStmCase@@zorro_state to zorro_state
    INS HdlStmCaseType@@CASE to zorro_state
    INS HdlValueId@@zorro_state to zorro_state
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS HdlValueId@@WAIT_READ to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@WAIT_WRITE to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@WAIT_WRITE2 to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@WAIT_WRITE3 to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmCase@@zaddr_regpart to zaddr_regpart
    INS tuple@@ to cases
    tuple
        HdlValueInt: 90
        HdlStmBlock: SEQ
            list: body
                HdlStmAssign
                    HdlValueInt: 0
                    HdlValueId: stat_w1
                HdlStmAssign
                    HdlValueInt: 0
                    HdlValueId: stat_w2
                HdlStmAssign
                    HdlValueInt: 0
                    HdlValueId: stat_w3
                HdlStmAssign
                    HdlValueInt: 0
                    HdlValueId: stat_w4
                HdlStmAssign
                    HdlValueInt: 0
                    HdlValueId: stat_r1
    INS tuple@@ to cases
    tuple
        HdlValueInt: 0a
        HdlStmAssign
            HdlOp: INDEX
                list: ops
                    HdlValueId: regdata_in
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 7
                            HdlValueInt: 0
            HdlValueId: dataout_time

UPD HdlStmIf@@ to 
    DEL list@@elifs from 

UPD HdlStmCase@@zorro_state to zorro_state
    DEL HdlStmCaseType@@CASE from zorro_state
    DEL HdlValueId@@zorro_state from zorro_state
    DEL HdlValueId@@WAIT_READ from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases
    DEL HdlValueId@@WAIT_WRITE from 
    DEL tuple@@ from cases
    DEL HdlValueId@@WAIT_WRITE2 from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases

UPD HdlStmCase@@zaddr_regpart to zaddr_regpart
    DEL tuple@@ from cases
    tuple
        HdlValueInt: 80
        HdlStmAssign
            HdlOp: INDEX
                list: ops
                    HdlValueId: regdata_in
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 4
                            HdlValueInt: 0
            HdlValueId: ram_arbiter_state


CommitId: d3ad14cb8d8df15e0c612079f6679ad40e59e29b
debugged snapshot
--- a/z2-minispartan/z2.v
+++ b/z2-minispartan/z2.v
@@ -1342,7 +1406,7 @@ always @(posedge z_sample_clk) begin
         'h6a: sd_addr_in[15:0] <= regdata_in[15:0];
         'h6c: sd_data_in <= regdata_in[15:8];
         
-        'h80: ram_arbiter_state <= regdata_in[4:0];
+        //'h80: ram_arbiter_state <= regdata_in[4:0];
       endcase
     end
     

ParseResult:
UPD HdlStmIf@@ to 
    INS list@@elifs to 

UPD HdlStmCase@@ram_arbiter_state to ram_arbiter_state
    MOV tuple@@ to cases
    tuple
        HdlValueId: RAM_REFRESH
        HdlStmBlock: SEQ
            list: body
                HdlStmIf
                    HdlValueId: data_out_ready
                    HdlStmBlock: SEQ
                        list: body
                            HdlStmAssign
                                HdlValueInt: 0
                                HdlValueId: ram_enable
                            HdlStmAssign
                                HdlValueId: RAM_ROW_FETCHED
                                HdlValueId: ram_arbiter_state
                    list: elifs
    UPD HdlValueId@@RAM_REFRESH to RAM_BURST_OFF2
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlStmAssign
                HdlValueInt: 1
                HdlValueId: zorro_ram_write_done
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: zorro_ram_write_request
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: ram_enable
            HdlStmAssign
                HdlValueId: RAM_ROW_FETCHED
                HdlValueId: ram_arbiter_state
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 

UPD HdlStmCase@@zorro_state to zorro_state
    INS HdlStmCaseType@@CASE to zorro_state
    INS HdlValueId@@zorro_state to zorro_state
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS HdlValueId@@WAIT_READ to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@WAIT_WRITE to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@WAIT_WRITE2 to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@WAIT_WRITE3 to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmCase@@zaddr_regpart to zaddr_regpart
    INS tuple@@ to cases
    tuple
        HdlValueInt: 90
        HdlStmBlock: SEQ
            list: body
                HdlStmAssign
                    HdlValueInt: 0
                    HdlValueId: stat_w1
                HdlStmAssign
                    HdlValueInt: 0
                    HdlValueId: stat_w2
                HdlStmAssign
                    HdlValueInt: 0
                    HdlValueId: stat_w3
                HdlStmAssign
                    HdlValueInt: 0
                    HdlValueId: stat_w4
                HdlStmAssign
                    HdlValueInt: 0
                    HdlValueId: stat_r1
    INS tuple@@ to cases
    tuple
        HdlValueInt: 0a
        HdlStmAssign
            HdlOp: INDEX
                list: ops
                    HdlValueId: regdata_in
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 7
                            HdlValueInt: 0
            HdlValueId: dataout_time


CommitId: d3ad14cb8d8df15e0c612079f6679ad40e59e29b
debugged snapshot
--- a/z2-minispartan/z2.v
+++ b/z2-minispartan/z2.v
@@ -1409,19 +1473,37 @@ always @(posedge z_sample_clk) begin
     end
     
     RAM_BURST_OFF: begin
+      // this solves the problem of first write/read lost
+      // after burst disable
+      if (cmd_ready) begin
+        ram_enable <= 1;
+        ram_write <= 0;
+        //ram_addr <= 0;
+              
+        ram_addr <= refresh_addr;
+        refresh_addr <= refresh_addr + 512;
+        
+        ram_arbiter_state <= RAM_BURST_OFF2;
+      end
+    end
+    
+    RAM_BURST_OFF2: begin
       ram_enable <= 0;
-      if (data_out_queue_empty && cmd_ready)
+      if (data_out_ready) begin
         ram_arbiter_state <= RAM_ROW_FETCHED;
+      end
     end
     
     RAM_ROW_FETCHED:
-      if ((need_row_fetch_y!=fetch_line_y) && (x_safe_area)) begin
+      if ((need_row_fetch_y!=fetch_line_y) && (x_safe_area) && cmd_ready) begin
         row_fetched <= 0;
         fetch_x <= 0;
         fetch_line_y <= need_row_fetch_y;
         //linescalecount <= 0;
         ram_arbiter_state <= RAM_READY;
       end else if (x_safe_area) begin
+        //if (refresh_counter>refresh_time && cmd_ready)
+        //  ram_arbiter_state <= RAM_REFRESH_PRE;
         // do nothing if not in safe area
         
       // BLITTER ----------------------------------------------------------------

ParseResult:
UPD HdlStmCase@@ram_arbiter_state to ram_arbiter_state
    MOV tuple@@ to cases
    tuple
        HdlValueId: RAM_REFRESH
        HdlStmBlock: SEQ
            list: body
                HdlStmIf
                    HdlValueId: data_out_ready
                    HdlStmBlock: SEQ
                        list: body
                            HdlStmAssign
                                HdlValueInt: 0
                                HdlValueId: ram_enable
                            HdlStmAssign
                                HdlValueId: RAM_ROW_FETCHED
                                HdlValueId: ram_arbiter_state
                    list: elifs
    UPD HdlValueId@@RAM_REFRESH to RAM_BURST_OFF2
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlStmAssign
                HdlValueInt: 1
                HdlValueId: zorro_ram_write_done
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: zorro_ram_write_request
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: ram_enable
            HdlStmAssign
                HdlValueId: RAM_ROW_FETCHED
                HdlValueId: ram_arbiter_state
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 

UPD HdlStmCase@@ram_arbiter_state to ram_arbiter_state
    INS tuple@@ to cases
    INS HdlValueId@@RAM_REFRESH to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

INS HdlStmIf@@ to body

UPD HdlStmIf@@ to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmIf@@ to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmIf@@ to 
    MOV HdlOp@@AND_LOG to 
    HdlOp: AND_LOG
        list: ops
            HdlOp: NE
                list: ops
                    HdlValueId: need_row_fetch_y
                    HdlValueId: fetch_line_y
            HdlValueId: x_safe_area
    DEL tuple@@ from elifs
    tuple
        HdlOp: AND_LOG
            list: ops
                HdlOp: AND_LOG
                    list: ops
                        HdlOp: AND_LOG
                            list: ops
                                HdlOp: GT
                                    list: ops
                                        HdlValueId: refresh_counter
                                        HdlValueId: refresh_time
                                HdlOp: NEG_LOG
                                    list: ops
                                        HdlValueId: zorro_ram_read_request
                        HdlOp: NEG_LOG
                            list: ops
                                HdlValueId: zorro_ram_write_request
                HdlValueId: cmd_ready
        HdlStmBlock: SEQ
            list: body
                HdlStmAssign
                    HdlValueId: RAM_REFRESH_PRE
                    HdlValueId: ram_arbiter_state

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueId: refresh_addr
    HdlValueId: ram_addr

INS HdlStmAssign@@ to body


CommitId: d3ad14cb8d8df15e0c612079f6679ad40e59e29b
debugged snapshot
--- a/z2-minispartan/z2.v
+++ b/z2-minispartan/z2.v
@@ -1506,38 +1588,32 @@ always @(posedge z_sample_clk) begin
       end else if (/*blitter_enable==0 &&*/ zorro_ram_read_request && cmd_ready) begin
         // process read request
         zorro_ram_read_done <= 0;
-        if (data_out_queue_empty) begin
+        ram_enable <= 0;
+        if (data_out_queue_empty)
           ram_arbiter_state <= RAM_READING_ZORRO_PRE;
-        end else 
-          ram_enable <= 0;
       end else if (/*blitter_enable==0 &&*/ zorro_ram_write_request && cmd_ready) begin
         // process write request
         ram_arbiter_state <= RAM_WRITING_ZORRO_PRE;
-      end else if (/*blitter_enable==0 &&*/ refresh_counter>refresh_time && !zorro_ram_read_request && !zorro_ram_write_request && cmd_ready) begin
-        ram_arbiter_state <= RAM_REFRESH_PRE;
+      //end else if (refresh_counter>refresh_time && cmd_ready) begin
+      //  ram_arbiter_state <= RAM_REFRESH_PRE;
       /*end else if (blitter_enable) begin
         blitter_enable <= 0;*/
       end else
         refresh_counter <= refresh_counter + 1;
     
     RAM_REFRESH_PRE: begin
-      if (data_out_queue_empty) begin
-        ram_write <= 0;
-        ram_addr <= refresh_addr;
-        ram_byte_enable <= 'b11;
-        refresh_addr <= refresh_addr + 512;
-        ram_enable <= 1;
-        ram_arbiter_state <= RAM_REFRESH;
-        refresh_counter <= 0;
-      end else 
-        ram_enable <= 0;
+      ram_enable <= 1;
+      ram_write <= 0;
+      ram_byte_enable <= 'b11;
+      ram_addr <= refresh_addr;
+      refresh_addr <= refresh_addr + 512;
+      ram_arbiter_state <= RAM_REFRESH;
+      refresh_counter <= 0;
     end
     
     RAM_REFRESH: begin
-      if (data_out_ready) begin
-        ram_enable <= 0;
-        ram_arbiter_state <= RAM_ROW_FETCHED;
-      end
+      ram_enable <= 0;
+      ram_arbiter_state <= RAM_BURST_OFF;
     end
     
     RAM_READING_BLIT: begin

ParseResult:
UPD HdlStmCase@@ram_arbiter_state to ram_arbiter_state
    MOV tuple@@ to cases
    tuple
        HdlValueId: RAM_REFRESH
        HdlStmBlock: SEQ
            list: body
                HdlStmIf
                    HdlValueId: data_out_ready
                    HdlStmBlock: SEQ
                        list: body
                            HdlStmAssign
                                HdlValueInt: 0
                                HdlValueId: ram_enable
                            HdlStmAssign
                                HdlValueId: RAM_ROW_FETCHED
                                HdlValueId: ram_arbiter_state
                    list: elifs
    UPD HdlValueId@@RAM_REFRESH to RAM_BURST_OFF2
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlStmAssign
                HdlValueInt: 1
                HdlValueId: zorro_ram_write_done
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: zorro_ram_write_request
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: ram_enable
            HdlStmAssign
                HdlValueId: RAM_ROW_FETCHED
                HdlValueId: ram_arbiter_state
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 

UPD HdlStmCase@@ram_arbiter_state to ram_arbiter_state
    INS tuple@@ to cases
    INS HdlValueId@@RAM_REFRESH to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmIf@@ to 
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: ram_write
            HdlStmAssign
                HdlValueId: refresh_addr
                HdlValueId: ram_addr
            HdlStmAssign
                HdlValueInt: 11
                HdlValueId: ram_byte_enable
            HdlStmAssign
                HdlOp: ADD
                    list: ops
                        HdlValueId: refresh_addr
                        HdlValueInt: 512
                HdlValueId: refresh_addr
            HdlStmAssign
                HdlValueInt: 1
                HdlValueId: ram_enable
            HdlStmAssign
                HdlValueId: RAM_REFRESH
                HdlValueId: ram_arbiter_state
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: refresh_counter
    DEL HdlValueId@@data_out_queue_empty from 
    DEL list@@elifs from 

UPD HdlStmIf@@ to 
    INS HdlOp@@AND_LOG to 
    UPD HdlOp@@AND_LOG to AND_LOG
        INS list@@ops to AND_LOG
        INS HdlValueId@@cmd_ready to ops

MOV HdlStmAssign@@ to body
HdlStmAssign
    HdlValueInt: 1
    HdlValueId: ram_enable

MOV HdlStmAssign@@ to body
HdlStmAssign
    HdlValueId: refresh_addr
    HdlValueId: ram_addr

MOV HdlStmAssign@@ to body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: ram_enable

DEL HdlStmAssign@@if_false from 
HdlStmAssign: if_false
    HdlValueInt: 0
    HdlValueId: ram_enable

DEL HdlStmIf@@ from body


CommitId: d3ad14cb8d8df15e0c612079f6679ad40e59e29b
debugged snapshot
--- a/z2-minispartan/z2.v
+++ b/z2-minispartan/z2.v
@@ -1616,6 +1697,7 @@ reg [4:0] preheat_x = 0;
 reg preheat = 0;
 
 reg x_safe_area = 0;
+reg display_pixels = 0;
 
 always @(posedge vga_clk) begin
   if (counter_x >= h_max-preheat_x && !preheat) begin

ParseResult:
UPD HdlStmCase@@ram_arbiter_state to ram_arbiter_state
    INS tuple@@ to cases
    INS HdlValueId@@RAM_REFRESH to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ


CommitId: d3ad14cb8d8df15e0c612079f6679ad40e59e29b
debugged snapshot
--- a/z2-minispartan/z2.v
+++ b/z2-minispartan/z2.v
@@ -1667,12 +1749,18 @@ always @(posedge vga_clk) begin
     dvi_blank <= 1;
   end
   
-  if (!preheat && (dvi_blank || (counter_x>=h_rez) || (counter_y>=screen_h))) begin
+  if (!preheat && (dvi_blank || (counter_x>=h_rez-1) || (counter_y>=screen_h-1)))
+    display_pixels <= 0;
+  else
+    display_pixels <= 1;
+  
+  if (!display_pixels) begin
     red_p   <= 0;
     green_p <= 0;
     blue_p  <= 0;
-  /*end else if (counter_y>=590) begin
-    if (counter_x<110) begin
+`ifdef ANALYZER
+  end else if (counter_y>=590) begin
+    /*if (counter_x<110) begin
       if (zorro_state[4]) green_p <= 8'hff;
       else green_p <= 8'h20;
     end else if (counter_x<120) begin

ParseResult:
INS HdlStmIf@@ to body

UPD HdlStmIf@@ to 
    MOV HdlOp@@AND_LOG to 
    HdlOp: AND_LOG
        list: ops
            HdlOp: NEG_LOG
                list: ops
                    HdlValueId: preheat
            HdlOp: OR_LOG
                list: ops
                    HdlOp: OR_LOG
                        list: ops
                            HdlValueId: dvi_blank
                            HdlOp: GE
                                list: ops
                                    HdlValueId: counter_x
                                    HdlValueId: h_rez
                    HdlOp: GE
                        list: ops
                            HdlValueId: counter_y
                            HdlValueId: screen_h
    UPD HdlOp@@AND_LOG to AND_LOG
        UPD HdlOp@@OR_LOG to OR_LOG
            MOV HdlOp@@GE to ops
            HdlOp: GE
                list: ops
                    HdlValueId: counter_y
                    HdlValueId: screen_h
            UPD HdlOp@@GE to GE
                MOV HdlValueId@@screen_h to ops
                HdlValueId: screen_h
            UPD HdlOp@@OR_LOG to OR_LOG
                UPD HdlOp@@GE to GE
                    MOV HdlValueId@@h_rez to ops
                    HdlValueId: h_rez

INS HdlStmAssign@@if_true to 
HdlStmAssign: if_true
    HdlValueInt: 0
    HdlValueId: display_pixels

INS HdlStmAssign@@if_false to 
HdlStmAssign: if_false
    HdlValueInt: 1
    HdlValueId: display_pixels

UPD HdlStmCase@@ram_arbiter_state to ram_arbiter_state
    INS tuple@@ to cases
    INS HdlValueId@@RAM_REFRESH to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmIf@@ to 
    INS HdlValueId@@cmd_ready to 
    INS list@@elifs to 


CommitId: d3ad14cb8d8df15e0c612079f6679ad40e59e29b
debugged snapshot
--- a/z2-minispartan/z2.v
+++ b/z2-minispartan/z2.v
@@ -1725,7 +1813,7 @@ always @(posedge vga_clk) begin
       blue_p <= 0;
     end*/
     
-    /*if (counter_y<600) begin
+    if (counter_y<600) begin
       if (rec_zreadraw[counter_x]) green_p <= 8'hff;
       else green_p <= 0;
     end else if (counter_y<610) begin

ParseResult:
UPD HdlStmIf@@ to 
    MOV HdlOp@@AND_LOG to 
    HdlOp: AND_LOG
        list: ops
            HdlOp: NEG_LOG
                list: ops
                    HdlValueId: preheat
            HdlOp: OR_LOG
                list: ops
                    HdlOp: OR_LOG
                        list: ops
                            HdlValueId: dvi_blank
                            HdlOp: GE
                                list: ops
                                    HdlValueId: counter_x
                                    HdlValueId: h_rez
                    HdlOp: GE
                        list: ops
                            HdlValueId: counter_y
                            HdlValueId: screen_h
    UPD HdlOp@@AND_LOG to AND_LOG
        UPD HdlOp@@OR_LOG to OR_LOG
            MOV HdlOp@@GE to ops
            HdlOp: GE
                list: ops
                    HdlValueId: counter_y
                    HdlValueId: screen_h
            UPD HdlOp@@GE to GE
                MOV HdlValueId@@screen_h to ops
                HdlValueId: screen_h
            UPD HdlOp@@OR_LOG to OR_LOG
                UPD HdlOp@@GE to GE
                    MOV HdlValueId@@h_rez to ops
                    HdlValueId: h_rez

UPD HdlStmIf@@ to 
    INS HdlOp@@NEG_LOG to 
    HdlOp: NEG_LOG
        list: ops
            HdlValueId: display_pixels
    INS tuple@@ to elifs
    INS HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlStmIf
                HdlOp: LT
                    list: ops
                        HdlValueId: counter_y
                        HdlValueInt: 600
                HdlStmBlock: SEQ
                    list: body
                        HdlStmIf
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: rec_zreadraw
                                    HdlValueId: counter_x
                            HdlStmAssign: if_true
                                HdlValueInt: ff
                                HdlValueId: green_p
                            list: elifs
                            HdlStmAssign: if_false
                                HdlValueInt: 0
                                HdlValueId: green_p
                list: elifs
                    tuple
                        HdlOp: LT
                            list: ops
                                HdlValueId: counter_y
                                HdlValueInt: 610
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmIf
                                    HdlOp: INDEX
                                        list: ops
                                            HdlValueId: rec_zread
                                            HdlValueId: counter_x
                                    HdlStmAssign: if_true
                                        HdlValueInt: ff
                                        HdlValueId: green_p
                                    list: elifs
                                    HdlStmAssign: if_false
                                        HdlValueInt: 0
                                        HdlValueId: green_p
                    tuple
                        HdlOp: LT
                            list: ops
                                HdlValueId: counter_y
                                HdlValueInt: 620
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmIf
                                    HdlOp: INDEX
                                        list: ops
                                            HdlValueId: rec_zwrite
                                            HdlValueId: counter_x
                                    HdlStmAssign: if_true
                                        HdlValueInt: ff
                                        HdlValueId: green_p
                                    list: elifs
                                    HdlStmAssign: if_false
                                        HdlValueInt: 0
                                        HdlValueId: green_p
                    tuple
                        HdlOp: LT
                            list: ops
                                HdlValueId: counter_y
                                HdlValueInt: 630
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmIf
                                    HdlOp: INDEX
                                        list: ops
                                            HdlValueId: rec_zas0
                                            HdlValueId: counter_x
                                    HdlStmAssign: if_true
                                        HdlValueInt: ff
                                        HdlValueId: green_p
                                    list: elifs
                                    HdlStmAssign: if_false
                                        HdlValueInt: 0
                                        HdlValueId: green_p
                    tuple
                        HdlOp: LT
                            list: ops
                                HdlValueId: counter_y
                                HdlValueInt: 640
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmIf
                                    HdlOp: INDEX
                                        list: ops
                                            HdlValueId: rec_zas1
                                            HdlValueId: counter_x
                                    HdlStmAssign: if_true
                                        HdlValueInt: ff
                                        HdlValueId: green_p
                                    list: elifs
                                    HdlStmAssign: if_false
                                        HdlValueInt: 0
                                        HdlValueId: green_p
                    tuple
                        HdlOp: LT
                            list: ops
                                HdlValueId: counter_y
                                HdlValueInt: 650
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmIf
                                    HdlOp: INDEX
                                        list: ops
                                            HdlValueId: rec_zaddr_in_ram
                                            HdlValueId: counter_x
                                    HdlStmAssign: if_true
                                        HdlValueInt: ff
                                        HdlValueId: green_p
                                    list: elifs
                                    HdlStmAssign: if_false
                                        HdlValueInt: 0
                                        HdlValueId: green_p
                    tuple
                        HdlOp: LT
                            list: ops
                                HdlValueId: counter_y
                                HdlValueInt: 660
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmIf
                                    HdlOp: INDEX
                                        list: ops
                                            HdlValueId: rec_state
                                            HdlValueId: counter_x
                                    HdlStmAssign: if_true
                                        HdlValueInt: ff
                                        HdlValueId: blue_p
                                    list: elifs
                                    HdlStmAssign: if_false
                                        HdlValueInt: 0
                                        HdlValueId: blue_p
                    tuple
                        HdlOp: LT
                            list: ops
                                HdlValueId: counter_y
                                HdlValueInt: 670
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmIf
                                    HdlOp: INDEX
                                        list: ops
                                            HdlValueId: rec_statew
                                            HdlValueId: counter_x
                                    HdlStmAssign: if_true
                                        HdlValueInt: ff
                                        HdlValueId: blue_p
                                    list: elifs
                                    HdlStmAssign: if_false
                                        HdlValueInt: 0
                                        HdlValueId: blue_p
                    tuple
                        HdlOp: LT
                            list: ops
                                HdlValueId: counter_y
                                HdlValueInt: 680
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmIf
                                    HdlOp: INDEX
                                        list: ops
                                            HdlValueId: rec_ready
                                            HdlValueId: counter_x
                                    HdlStmAssign: if_true
                                        HdlValueInt: ff
                                        HdlValueId: green_p
                                    list: elifs
                                    HdlStmAssign: if_false
                                        HdlValueInt: 0
                                        HdlValueId: green_p
                HdlStmBlock: SEQ
                    list: body
                        HdlStmAssign
                            HdlValueInt: 0
                            HdlValueId: green_p
                        HdlStmAssign
                            HdlValueInt: 0
                            HdlValueId: blue_p
    UPD HdlOp@@GE to GE
        INS HdlValueInt@@590 to ops


CommitId: d3ad14cb8d8df15e0c612079f6679ad40e59e29b
debugged snapshot
--- a/z2-minispartan/z2.v
+++ b/z2-minispartan/z2.v
@@ -1755,7 +1843,8 @@ always @(posedge vga_clk) begin
     end else begin
       green_p <= 0;
       blue_p <= 0;
-    end*/
+    end
+`endif
     
   end else if (colormode==0) begin
     // 0: +0a +0b +1a
ParseResult:
UPD HdlStmIf@@ to 
    MOV HdlOp@@AND_LOG to 
    HdlOp: AND_LOG
        list: ops
            HdlOp: NEG_LOG
                list: ops
                    HdlValueId: preheat
            HdlOp: OR_LOG
                list: ops
                    HdlOp: OR_LOG
                        list: ops
                            HdlValueId: dvi_blank
                            HdlOp: GE
                                list: ops
                                    HdlValueId: counter_x
                                    HdlValueId: h_rez
                    HdlOp: GE
                        list: ops
                            HdlValueId: counter_y
                            HdlValueId: screen_h
    UPD HdlOp@@AND_LOG to AND_LOG
        UPD HdlOp@@OR_LOG to OR_LOG
            MOV HdlOp@@GE to ops
            HdlOp: GE
                list: ops
                    HdlValueId: counter_y
                    HdlValueId: screen_h
            UPD HdlOp@@GE to GE
                MOV HdlValueId@@screen_h to ops
                HdlValueId: screen_h
            UPD HdlOp@@OR_LOG to OR_LOG
                UPD HdlOp@@GE to GE
                    MOV HdlValueId@@h_rez to ops
                    HdlValueId: h_rez

UPD HdlStmIf@@ to 
    INS HdlOp@@NEG_LOG to 
    HdlOp: NEG_LOG
        list: ops
            HdlValueId: display_pixels
    INS tuple@@ to elifs
    INS HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlStmIf
                HdlOp: LT
                    list: ops
                        HdlValueId: counter_y
                        HdlValueInt: 600
                HdlStmBlock: SEQ
                    list: body
                        HdlStmIf
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: rec_zreadraw
                                    HdlValueId: counter_x
                            HdlStmAssign: if_true
                                HdlValueInt: ff
                                HdlValueId: green_p
                            list: elifs
                            HdlStmAssign: if_false
                                HdlValueInt: 0
                                HdlValueId: green_p
                list: elifs
                    tuple
                        HdlOp: LT
                            list: ops
                                HdlValueId: counter_y
                                HdlValueInt: 610
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmIf
                                    HdlOp: INDEX
                                        list: ops
                                            HdlValueId: rec_zread
                                            HdlValueId: counter_x
                                    HdlStmAssign: if_true
                                        HdlValueInt: ff
                                        HdlValueId: green_p
                                    list: elifs
                                    HdlStmAssign: if_false
                                        HdlValueInt: 0
                                        HdlValueId: green_p
                    tuple
                        HdlOp: LT
                            list: ops
                                HdlValueId: counter_y
                                HdlValueInt: 620
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmIf
                                    HdlOp: INDEX
                                        list: ops
                                            HdlValueId: rec_zwrite
                                            HdlValueId: counter_x
                                    HdlStmAssign: if_true
                                        HdlValueInt: ff
                                        HdlValueId: green_p
                                    list: elifs
                                    HdlStmAssign: if_false
                                        HdlValueInt: 0
                                        HdlValueId: green_p
                    tuple
                        HdlOp: LT
                            list: ops
                                HdlValueId: counter_y
                                HdlValueInt: 630
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmIf
                                    HdlOp: INDEX
                                        list: ops
                                            HdlValueId: rec_zas0
                                            HdlValueId: counter_x
                                    HdlStmAssign: if_true
                                        HdlValueInt: ff
                                        HdlValueId: green_p
                                    list: elifs
                                    HdlStmAssign: if_false
                                        HdlValueInt: 0
                                        HdlValueId: green_p
                    tuple
                        HdlOp: LT
                            list: ops
                                HdlValueId: counter_y
                                HdlValueInt: 640
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmIf
                                    HdlOp: INDEX
                                        list: ops
                                            HdlValueId: rec_zas1
                                            HdlValueId: counter_x
                                    HdlStmAssign: if_true
                                        HdlValueInt: ff
                                        HdlValueId: green_p
                                    list: elifs
                                    HdlStmAssign: if_false
                                        HdlValueInt: 0
                                        HdlValueId: green_p
                    tuple
                        HdlOp: LT
                            list: ops
                                HdlValueId: counter_y
                                HdlValueInt: 650
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmIf
                                    HdlOp: INDEX
                                        list: ops
                                            HdlValueId: rec_zaddr_in_ram
                                            HdlValueId: counter_x
                                    HdlStmAssign: if_true
                                        HdlValueInt: ff
                                        HdlValueId: green_p
                                    list: elifs
                                    HdlStmAssign: if_false
                                        HdlValueInt: 0
                                        HdlValueId: green_p
                    tuple
                        HdlOp: LT
                            list: ops
                                HdlValueId: counter_y
                                HdlValueInt: 660
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmIf
                                    HdlOp: INDEX
                                        list: ops
                                            HdlValueId: rec_state
                                            HdlValueId: counter_x
                                    HdlStmAssign: if_true
                                        HdlValueInt: ff
                                        HdlValueId: blue_p
                                    list: elifs
                                    HdlStmAssign: if_false
                                        HdlValueInt: 0
                                        HdlValueId: blue_p
                    tuple
                        HdlOp: LT
                            list: ops
                                HdlValueId: counter_y
                                HdlValueInt: 670
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmIf
                                    HdlOp: INDEX
                                        list: ops
                                            HdlValueId: rec_statew
                                            HdlValueId: counter_x
                                    HdlStmAssign: if_true
                                        HdlValueInt: ff
                                        HdlValueId: blue_p
                                    list: elifs
                                    HdlStmAssign: if_false
                                        HdlValueInt: 0
                                        HdlValueId: blue_p
                    tuple
                        HdlOp: LT
                            list: ops
                                HdlValueId: counter_y
                                HdlValueInt: 680
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmIf
                                    HdlOp: INDEX
                                        list: ops
                                            HdlValueId: rec_ready
                                            HdlValueId: counter_x
                                    HdlStmAssign: if_true
                                        HdlValueInt: ff
                                        HdlValueId: green_p
                                    list: elifs
                                    HdlStmAssign: if_false
                                        HdlValueInt: 0
                                        HdlValueId: green_p
                HdlStmBlock: SEQ
                    list: body
                        HdlStmAssign
                            HdlValueInt: 0
                            HdlValueId: green_p
                        HdlStmAssign
                            HdlValueInt: 0
                            HdlValueId: blue_p
    UPD HdlOp@@GE to GE
        INS HdlValueInt@@590 to ops


CommitId: 822d5f88efe8e95def028907c5d04c7b6ca22391
introduce 2-word burst in ram controller; accidentally fix long-standing bug; stable hi-res capture
--- a/z2-minispartan/SDRAM_Controller_v.v
+++ b/z2-minispartan/SDRAM_Controller_v.v
@@ -33,9 +33,9 @@
 module SDRAM_Controller_v (
    clk,   reset,
    // command and write port
-   cmd_ready, cmd_enable, cmd_wr, cmd_byte_enable, cmd_address, cmd_data_in,
+   cmd_ready, cmd_enable, cmd_wr, cmd_byte_enable, cmd_address, cmd_data_in, cmd_data_in_next,
    // Read data port
-   data_out, data_out_ready, data_out_queue_empty, burst,
+   data_out, data_out_ready, data_out_queue_empty, burst, write_burst,
    burst_col,
    // SDRAM signals
    SDRAM_CLK,  SDRAM_CKE,  SDRAM_CS,   SDRAM_RAS,  SDRAM_CAS,

ParseResult:
INS HdlIdDef@@cmd_data_in_next to ports
HdlIdDef: cmd_data_in_next
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: wire
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 15
                    HdlValueInt: 0
    HdlDirection: IN

INS HdlIdDef@@write_burst to ports
HdlIdDef: write_burst
    HdlDirection: IN


CommitId: 822d5f88efe8e95def028907c5d04c7b6ca22391
introduce 2-word burst in ram controller; accidentally fix long-standing bug; stable hi-res capture
--- a/z2-minispartan/SDRAM_Controller_v.v
+++ b/z2-minispartan/SDRAM_Controller_v.v
@@ -55,12 +55,15 @@ module SDRAM_Controller_v (
    input  [sdram_address_width-1:0] cmd_address;
    input  [1:0]  cmd_byte_enable;
    input  [15:0] cmd_data_in;
+   input  [15:0] cmd_data_in_next;
    input  [8:0] burst_col;
    input  burst;
+   input  write_burst;
    
    reg [3:0]  iob_command  = CMD_NOP;
    reg [12:0] iob_address  = 13'b0000000000000;
    reg [15:0] iob_data     = 16'b0000000000000000;
+   reg [15:0] iob_data_next= 16'b0000000000000000;
    reg [1:0]  iob_dqm      = 2'b00;
    reg iob_cke             = 1'b0;
    reg [1:0]  iob_bank     = 2'b00;

ParseResult:
INS HdlIdDef@@iob_data_next to objs
HdlIdDef: iob_data_next
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 15
                    HdlValueInt: 0
    HdlValueInt: 0000000000000000
    HdlDirection: INTERNAL


CommitId: 822d5f88efe8e95def028907c5d04c7b6ca22391
introduce 2-word burst in ram controller; accidentally fix long-standing bug; stable hi-res capture
--- a/z2-minispartan/SDRAM_Controller_v.v
+++ b/z2-minispartan/SDRAM_Controller_v.v
@@ -111,7 +114,7 @@ module SDRAM_Controller_v (
    parameter CMD_LOAD_MODE_REG = 4'b0000;
 
    wire [12:0] MODE_REG;    // Reserved, wr burst, OpMode, CAS Latency (2), Burst Type, Burst Length (2)
-   assign      MODE_REG =        {3'b000,    1'b0,  2'b00,          3'b010,       1'b0,   3'b000};
+   assign      MODE_REG =        {3'b000,    1'b0,  2'b00,          3'b010,       1'b0,   2'b00, write_burst};
    
    wire [12:0] MODE_REG_BURST;    // Reserved, wr burst, OpMode, CAS Latency (2), Burst Type, Burst Length (2)
    assign      MODE_REG_BURST =  {3'b000,    1'b0,  2'b00,          3'b010,       1'b0,   3'b111};

ParseResult:
UPD HdlStmAssign@@ to 
    INS HdlOp@@CONCAT to 
    UPD HdlOp@@CONCAT to CONCAT
        INS list@@ops to CONCAT
        INS HdlValueId@@write_burst to ops

UPD HdlStmAssign@@ to 
    MOV HdlOp@@CONCAT to 
    HdlOp: CONCAT
        list: ops
            HdlOp: CONCAT
                list: ops
                    HdlOp: CONCAT
                        list: ops
                            HdlOp: CONCAT
                                list: ops
                                    HdlOp: CONCAT
                                        list: ops
                                            HdlValueInt: 000
                                            HdlValueInt: 0
                                    HdlValueInt: 00
                            HdlValueInt: 010
                    HdlValueInt: 0
            HdlValueInt: 000
    UPD HdlOp@@CONCAT to CONCAT
        UPD HdlValueInt@@000 to 00


CommitId: 822d5f88efe8e95def028907c5d04c7b6ca22391
introduce 2-word burst in ram controller; accidentally fix long-standing bug; stable hi-res capture
--- a/z2-minispartan/SDRAM_Controller_v.v
+++ b/z2-minispartan/SDRAM_Controller_v.v
@@ -155,6 +158,7 @@ module SDRAM_Controller_v (
    reg [1:0]  save_bank         = 2'b00;
    reg [sdram_row_bits-1:0] save_col          = 13'b0000000000000;
    reg [15:0] save_data_in      = 16'b0000000000000000;
+   reg [15:0] save_data_in_next = 16'b0000000000000000;
    reg [1:0]  save_byte_enable  = 2'b00;
    
    // control when new transactions are accepted 

ParseResult:
INS HdlIdDef@@save_data_in_next to objs
HdlIdDef: save_data_in_next
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 15
                    HdlValueInt: 0
    HdlValueInt: 0000000000000000
    HdlDirection: INTERNAL


CommitId: 822d5f88efe8e95def028907c5d04c7b6ca22391
introduce 2-word burst in ram controller; accidentally fix long-standing bug; stable hi-res capture
--- a/z2-minispartan/SDRAM_Controller_v.v
+++ b/z2-minispartan/SDRAM_Controller_v.v
@@ -248,6 +252,7 @@ always @(posedge clk)
         save_col         <= addr_col;
         save_wr          <= cmd_wr; 
         save_data_in     <= cmd_data_in;
+        save_data_in_next<= cmd_data_in_next;
         save_byte_enable <= cmd_byte_enable;
         got_transaction  <= 1'b1;
         ready_for_new    <= 1'b0;

ParseResult:
INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueId: cmd_data_in_next
    HdlValueId: save_data_in_next


CommitId: feb6a57b534d7a4afb9a11858adb2e3146131146
fix wip
--- a/z2-minispartan/z2.v
+++ b/z2-minispartan/z2.v
@@ -653,6 +654,8 @@ reg [7:0] zaddr_pidx = 0;
 
 reg [2:0] linescalecount = 0;
 
+reg [23:0] warmup_counter = 'hffffff;
+
 // =================================================================================
 // ZORRO MACHINE
 

ParseResult:
INS HdlIdDef@@warmup_counter to objs
HdlIdDef: warmup_counter
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 23
                    HdlValueInt: 0
    HdlValueInt: ffffff
    HdlDirection: INTERNAL

UPD HdlStmCase@@zorro_state to zorro_state
    INS HdlStmCaseType@@CASE to zorro_state
    INS HdlValueId@@zorro_state to zorro_state
    INS tuple@@ to cases
    INS HdlValueId@@PAUSE to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@Z3_IDLE to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmCase@@zorro_state to zorro_state
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlStmIf
                HdlValueId: znCFGIN
                HdlStmBlock: SEQ
                    list: body
                        HdlStmAssign
                            HdlValueInt: 0
                            HdlValueId: z_confdone
                        HdlStmAssign
                            HdlValueId: Z3_CONFIGURING
                            HdlValueId: zorro_state
                list: elifs
                    tuple
                        HdlOp: EQ
                            list: ops
                                HdlOp: INDEX
                                    list: ops
                                        HdlValueId: znFCS_sync
                                        HdlValueInt: 2
                                HdlValueInt: 0
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmIf
                                    HdlOp: EQ
                                        list: ops
                                            HdlValueId: z3addr
                                            HdlValueInt: 00000000
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmAssign
                                                HdlValueInt: 0
                                                HdlValueId: z_confdone
                                            HdlStmAssign
                                                HdlValueId: Z3_CONFIGURING
                                                HdlValueId: zorro_state
                                    list: elifs
                                        tuple
                                            HdlOp: AND_LOG
                                                list: ops
                                                    HdlOp: AND_LOG
                                                        list: ops
                                                            HdlOp: GE
                                                                list: ops
                                                                    HdlValueId: z3addr
                                                                    HdlValueId: ram_low
                                                            HdlOp: LE
                                                                list: ops
                                                                    HdlValueId: z3addr
                                                                    HdlValueId: ram_high
                                                    HdlOp: NEG_LOG
                                                        list: ops
                                                            HdlValueId: zorro_read
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlStmAssign
                                                        HdlValueInt: 1
                                                        HdlValueId: slaven
                                                    HdlStmIf
                                                        HdlOp: OR_LOG
                                                            list: ops
                                                                HdlOp: OR_LOG
                                                                    list: ops
                                                                        HdlOp: OR_LOG
                                                                            list: ops
                                                                                HdlOp: EQ
                                                                                    list: ops
                                                                                        HdlOp: INDEX
                                                                                            list: ops
                                                                                                HdlValueId: znUDS_sync
                                                                                                HdlValueInt: 2
                                                                                        HdlValueInt: 0
                                                                                HdlOp: EQ
                                                                                    list: ops
                                                                                        HdlOp: INDEX
                                                                                            list: ops
                                                                                                HdlValueId: znLDS_sync
                                                                                                HdlValueInt: 2
                                                                                        HdlValueInt: 0
                                                                        HdlOp: EQ
                                                                            list: ops
                                                                                HdlOp: INDEX
                                                                                    list: ops
                                                                                        HdlValueId: znDS1_sync
                                                                                        HdlValueInt: 2
                                                                                HdlValueInt: 0
                                                                HdlOp: EQ
                                                                    list: ops
                                                                        HdlOp: INDEX
                                                                            list: ops
                                                                                HdlValueId: znDS0_sync
                                                                                HdlValueInt: 2
                                                                        HdlValueInt: 0
                                                        HdlStmBlock: SEQ
                                                            list: body
                                                                HdlStmAssign
                                                                    HdlValueId: Z3_WRITE_UPPER
                                                                    HdlValueId: zorro_state
                                                        list: elifs
                                        tuple
                                            HdlOp: AND_LOG
                                                list: ops
                                                    HdlOp: AND_LOG
                                                        list: ops
                                                            HdlOp: GE
                                                                list: ops
                                                                    HdlValueId: z3addr
                                                                    HdlValueId: ram_low
                                                            HdlOp: LE
                                                                list: ops
                                                                    HdlValueId: z3addr
                                                                    HdlValueId: ram_high
                                                    HdlValueId: zorro_read
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlStmAssign
                                                        HdlValueInt: 1
                                                        HdlValueId: slaven
                                                    HdlStmAssign
                                                        HdlValueId: Z3_READ_UPPER
                                                        HdlValueId: zorro_state
                                        tuple
                                            HdlOp: AND_LOG
                                                list: ops
                                                    HdlOp: AND_LOG
                                                        list: ops
                                                            HdlValueId: zorro_write
                                                            HdlOp: GE
                                                                list: ops
                                                                    HdlValueId: z3addr
                                                                    HdlValueId: reg_low
                                                    HdlOp: LE
                                                        list: ops
                                                            HdlValueId: z3addr
                                                            HdlValueId: reg_high
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlStmAssign
                                                        HdlValueInt: 1
                                                        HdlValueId: slaven
                                                    HdlStmIf
                                                        HdlOp: EQ
                                                            list: ops
                                                                HdlOp: INDEX
                                                                    list: ops
                                                                        HdlValueId: znDS1_sync
                                                                        HdlValueInt: 2
                                                                HdlValueInt: 0
                                                        HdlStmBlock: SEQ
                                                            list: body
                                                                HdlStmAssign
                                                                    HdlValueId: data_in_z3_low16
                                                                    HdlValueId: regdata_in
                                                                HdlStmAssign
                                                                    HdlOp: OR
                                                                        list: ops
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlValueId: z3addr
                                                                                    HdlOp: DOWNTO
                                                                                        list: ops
                                                                                            HdlValueInt: 15
                                                                                            HdlValueInt: 0
                                                                            HdlValueInt: 2
                                                                    HdlValueId: zaddr_regpart
                                                                HdlStmAssign
                                                                    HdlValueId: REGWRITE
                                                                    HdlValueId: zorro_state
                                                        list: elifs
                                                            tuple
                                                                HdlOp: EQ
                                                                    list: ops
                                                                        HdlOp: INDEX
                                                                            list: ops
                                                                                HdlValueId: znUDS_sync
                                                                                HdlValueInt: 2
                                                                        HdlValueInt: 0
                                                                HdlStmBlock: SEQ
                                                                    list: body
                                                                        HdlStmAssign
                                                                            HdlValueId: zdata_in_sync
                                                                            HdlValueId: regdata_in
                                                                        HdlStmAssign
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlValueId: z3addr
                                                                                    HdlOp: DOWNTO
                                                                                        list: ops
                                                                                            HdlValueInt: 15
                                                                                            HdlValueInt: 0
                                                                            HdlValueId: zaddr_regpart
                                                                        HdlStmAssign
                                                                            HdlValueId: REGWRITE
                                                                            HdlValueId: zorro_state
                                        tuple
                                            HdlOp: AND_LOG
                                                list: ops
                                                    HdlOp: AND_LOG
                                                        list: ops
                                                            HdlValueId: zorro_read
                                                            HdlOp: GE
                                                                list: ops
                                                                    HdlValueId: z3addr
                                                                    HdlValueId: reg_low
                                                    HdlOp: LE
                                                        list: ops
                                                            HdlValueId: z3addr
                                                            HdlValueId: reg_high
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlStmAssign
                                                        HdlValueInt: 1
                                                        HdlValueId: slaven
                                                    HdlStmAssign
                                                        HdlValueInt: 1
                                                        HdlValueId: dataout_enable
                                                    HdlStmAssign
                                                        HdlValueInt: 1
                                                        HdlValueId: dataout_z3
                                                    HdlStmAssign
                                                        HdlValueInt: 0
                                                        HdlValueId: data
                                                    HdlStmIf
                                                        HdlOp: EQ
                                                            list: ops
                                                                HdlOp: INDEX
                                                                    list: ops
                                                                        HdlValueId: znDS1_sync
                                                                        HdlValueInt: 2
                                                                HdlValueInt: 0
                                                        HdlStmBlock: SEQ
                                                            list: body
                                                                HdlStmAssign
                                                                    HdlValueId: data_in_z3_low16
                                                                    HdlValueId: regdata_in
                                                                HdlStmAssign
                                                                    HdlOp: OR
                                                                        list: ops
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlValueId: z3addr
                                                                                    HdlOp: DOWNTO
                                                                                        list: ops
                                                                                            HdlValueInt: 15
                                                                                            HdlValueInt: 0
                                                                            HdlValueInt: 2
                                                                    HdlValueId: zaddr_regpart
                                                                HdlStmAssign
                                                                    HdlValueId: REGREAD
                                                                    HdlValueId: zorro_state
                                                        list: elifs
                                                            tuple
                                                                HdlOp: EQ
                                                                    list: ops
                                                                        HdlOp: INDEX
                                                                            list: ops
                                                                                HdlValueId: znUDS_sync
                                                                                HdlValueInt: 2
                                                                        HdlValueInt: 0
                                                                HdlStmBlock: SEQ
                                                                    list: body
                                                                        HdlStmAssign
                                                                            HdlValueId: zdata_in_sync
                                                                            HdlValueId: regdata_in
                                                                        HdlStmAssign
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlValueId: z3addr
                                                                                    HdlOp: DOWNTO
                                                                                        list: ops
                                                                                            HdlValueInt: 15
                                                                                            HdlValueInt: 0
                                                                            HdlValueId: zaddr_regpart
                                                                        HdlStmAssign
                                                                            HdlValueId: REGREAD
                                                                            HdlValueId: zorro_state
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmAssign
                                                HdlValueInt: 0
                                                HdlValueId: slaven
                                            HdlStmAssign
                                                HdlValueInt: 0
                                                HdlValueId: dtack
                                            HdlStmAssign
                                                HdlValueInt: 0
                                                HdlValueId: dataout_enable
                                            HdlStmAssign
                                                HdlValueInt: 0
                                                HdlValueId: dataout_z3
                HdlStmBlock: SEQ
                    list: body
                        HdlStmAssign
                            HdlValueInt: 0
                            HdlValueId: slaven
                        HdlStmAssign
                            HdlValueInt: 0
                            HdlValueId: dtack
                        HdlStmAssign
                            HdlValueInt: 0
                            HdlValueId: dataout_enable
                        HdlStmAssign
                            HdlValueInt: 0
                            HdlValueId: dataout_z3
    DEL HdlStmCaseType@@CASE from zorro_state
    DEL HdlValueId@@zorro_state from zorro_state
    DEL tuple@@ from cases
    tuple
        HdlValueId: PAUSE
        HdlStmBlock: SEQ
            list: body
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlValueId@@Z3_IDLE from 
    DEL tuple@@ from cases


CommitId: feb6a57b534d7a4afb9a11858adb2e3146131146
fix wip
--- a/z2-minispartan/z2.v
+++ b/z2-minispartan/z2.v
@@ -667,19 +670,15 @@ always @(posedge z_sample_clk) begin
       z_ready <= 1; // clear XRDY (cpu wait)
       zorro_ram_read_done <= 1;
       blitter_enable <= 0;
+      warmup_counter <= 'hffffff;
       
       ram_low   <= 'h600000;
       ram_high  <= 'h600000 + ram_size-4;
       reg_low   <= 'h600000 + reg_base;
       reg_high  <= 'h600000 + reg_base + reg_size;
       
-      // poor man's z3sense
-      if (zaddr_autoconfig) begin
-        zorro_state <= Z2_CONFIGURING;
-        ZORRO3 <= 0;
-      end else if (z3addr[31:16]=='hff00)
-        zorro_state <= Z3_CONFIGURING;
-      
+      zorro_state <= PAUSE;
+      sdram_reset <= 1;
     end
     
     Z3_CONFIGURING: begin

ParseResult:
UPD HdlStmCase@@zorro_state to zorro_state
    INS HdlStmCaseType@@CASE to zorro_state
    INS HdlValueId@@zorro_state to zorro_state
    INS tuple@@ to cases
    INS HdlValueId@@PAUSE to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@Z3_IDLE to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmCase@@zorro_state to zorro_state
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlStmIf
                HdlValueId: znCFGIN
                HdlStmBlock: SEQ
                    list: body
                        HdlStmAssign
                            HdlValueInt: 0
                            HdlValueId: z_confdone
                        HdlStmAssign
                            HdlValueId: Z3_CONFIGURING
                            HdlValueId: zorro_state
                list: elifs
                    tuple
                        HdlOp: EQ
                            list: ops
                                HdlOp: INDEX
                                    list: ops
                                        HdlValueId: znFCS_sync
                                        HdlValueInt: 2
                                HdlValueInt: 0
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmIf
                                    HdlOp: EQ
                                        list: ops
                                            HdlValueId: z3addr
                                            HdlValueInt: 00000000
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmAssign
                                                HdlValueInt: 0
                                                HdlValueId: z_confdone
                                            HdlStmAssign
                                                HdlValueId: Z3_CONFIGURING
                                                HdlValueId: zorro_state
                                    list: elifs
                                        tuple
                                            HdlOp: AND_LOG
                                                list: ops
                                                    HdlOp: AND_LOG
                                                        list: ops
                                                            HdlOp: GE
                                                                list: ops
                                                                    HdlValueId: z3addr
                                                                    HdlValueId: ram_low
                                                            HdlOp: LE
                                                                list: ops
                                                                    HdlValueId: z3addr
                                                                    HdlValueId: ram_high
                                                    HdlOp: NEG_LOG
                                                        list: ops
                                                            HdlValueId: zorro_read
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlStmAssign
                                                        HdlValueInt: 1
                                                        HdlValueId: slaven
                                                    HdlStmIf
                                                        HdlOp: OR_LOG
                                                            list: ops
                                                                HdlOp: OR_LOG
                                                                    list: ops
                                                                        HdlOp: OR_LOG
                                                                            list: ops
                                                                                HdlOp: EQ
                                                                                    list: ops
                                                                                        HdlOp: INDEX
                                                                                            list: ops
                                                                                                HdlValueId: znUDS_sync
                                                                                                HdlValueInt: 2
                                                                                        HdlValueInt: 0
                                                                                HdlOp: EQ
                                                                                    list: ops
                                                                                        HdlOp: INDEX
                                                                                            list: ops
                                                                                                HdlValueId: znLDS_sync
                                                                                                HdlValueInt: 2
                                                                                        HdlValueInt: 0
                                                                        HdlOp: EQ
                                                                            list: ops
                                                                                HdlOp: INDEX
                                                                                    list: ops
                                                                                        HdlValueId: znDS1_sync
                                                                                        HdlValueInt: 2
                                                                                HdlValueInt: 0
                                                                HdlOp: EQ
                                                                    list: ops
                                                                        HdlOp: INDEX
                                                                            list: ops
                                                                                HdlValueId: znDS0_sync
                                                                                HdlValueInt: 2
                                                                        HdlValueInt: 0
                                                        HdlStmBlock: SEQ
                                                            list: body
                                                                HdlStmAssign
                                                                    HdlValueId: Z3_WRITE_UPPER
                                                                    HdlValueId: zorro_state
                                                        list: elifs
                                        tuple
                                            HdlOp: AND_LOG
                                                list: ops
                                                    HdlOp: AND_LOG
                                                        list: ops
                                                            HdlOp: GE
                                                                list: ops
                                                                    HdlValueId: z3addr
                                                                    HdlValueId: ram_low
                                                            HdlOp: LE
                                                                list: ops
                                                                    HdlValueId: z3addr
                                                                    HdlValueId: ram_high
                                                    HdlValueId: zorro_read
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlStmAssign
                                                        HdlValueInt: 1
                                                        HdlValueId: slaven
                                                    HdlStmAssign
                                                        HdlValueId: Z3_READ_UPPER
                                                        HdlValueId: zorro_state
                                        tuple
                                            HdlOp: AND_LOG
                                                list: ops
                                                    HdlOp: AND_LOG
                                                        list: ops
                                                            HdlValueId: zorro_write
                                                            HdlOp: GE
                                                                list: ops
                                                                    HdlValueId: z3addr
                                                                    HdlValueId: reg_low
                                                    HdlOp: LE
                                                        list: ops
                                                            HdlValueId: z3addr
                                                            HdlValueId: reg_high
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlStmAssign
                                                        HdlValueInt: 1
                                                        HdlValueId: slaven
                                                    HdlStmIf
                                                        HdlOp: EQ
                                                            list: ops
                                                                HdlOp: INDEX
                                                                    list: ops
                                                                        HdlValueId: znDS1_sync
                                                                        HdlValueInt: 2
                                                                HdlValueInt: 0
                                                        HdlStmBlock: SEQ
                                                            list: body
                                                                HdlStmAssign
                                                                    HdlValueId: data_in_z3_low16
                                                                    HdlValueId: regdata_in
                                                                HdlStmAssign
                                                                    HdlOp: OR
                                                                        list: ops
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlValueId: z3addr
                                                                                    HdlOp: DOWNTO
                                                                                        list: ops
                                                                                            HdlValueInt: 15
                                                                                            HdlValueInt: 0
                                                                            HdlValueInt: 2
                                                                    HdlValueId: zaddr_regpart
                                                                HdlStmAssign
                                                                    HdlValueId: REGWRITE
                                                                    HdlValueId: zorro_state
                                                        list: elifs
                                                            tuple
                                                                HdlOp: EQ
                                                                    list: ops
                                                                        HdlOp: INDEX
                                                                            list: ops
                                                                                HdlValueId: znUDS_sync
                                                                                HdlValueInt: 2
                                                                        HdlValueInt: 0
                                                                HdlStmBlock: SEQ
                                                                    list: body
                                                                        HdlStmAssign
                                                                            HdlValueId: zdata_in_sync
                                                                            HdlValueId: regdata_in
                                                                        HdlStmAssign
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlValueId: z3addr
                                                                                    HdlOp: DOWNTO
                                                                                        list: ops
                                                                                            HdlValueInt: 15
                                                                                            HdlValueInt: 0
                                                                            HdlValueId: zaddr_regpart
                                                                        HdlStmAssign
                                                                            HdlValueId: REGWRITE
                                                                            HdlValueId: zorro_state
                                        tuple
                                            HdlOp: AND_LOG
                                                list: ops
                                                    HdlOp: AND_LOG
                                                        list: ops
                                                            HdlValueId: zorro_read
                                                            HdlOp: GE
                                                                list: ops
                                                                    HdlValueId: z3addr
                                                                    HdlValueId: reg_low
                                                    HdlOp: LE
                                                        list: ops
                                                            HdlValueId: z3addr
                                                            HdlValueId: reg_high
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlStmAssign
                                                        HdlValueInt: 1
                                                        HdlValueId: slaven
                                                    HdlStmAssign
                                                        HdlValueInt: 1
                                                        HdlValueId: dataout_enable
                                                    HdlStmAssign
                                                        HdlValueInt: 1
                                                        HdlValueId: dataout_z3
                                                    HdlStmAssign
                                                        HdlValueInt: 0
                                                        HdlValueId: data
                                                    HdlStmIf
                                                        HdlOp: EQ
                                                            list: ops
                                                                HdlOp: INDEX
                                                                    list: ops
                                                                        HdlValueId: znDS1_sync
                                                                        HdlValueInt: 2
                                                                HdlValueInt: 0
                                                        HdlStmBlock: SEQ
                                                            list: body
                                                                HdlStmAssign
                                                                    HdlValueId: data_in_z3_low16
                                                                    HdlValueId: regdata_in
                                                                HdlStmAssign
                                                                    HdlOp: OR
                                                                        list: ops
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlValueId: z3addr
                                                                                    HdlOp: DOWNTO
                                                                                        list: ops
                                                                                            HdlValueInt: 15
                                                                                            HdlValueInt: 0
                                                                            HdlValueInt: 2
                                                                    HdlValueId: zaddr_regpart
                                                                HdlStmAssign
                                                                    HdlValueId: REGREAD
                                                                    HdlValueId: zorro_state
                                                        list: elifs
                                                            tuple
                                                                HdlOp: EQ
                                                                    list: ops
                                                                        HdlOp: INDEX
                                                                            list: ops
                                                                                HdlValueId: znUDS_sync
                                                                                HdlValueInt: 2
                                                                        HdlValueInt: 0
                                                                HdlStmBlock: SEQ
                                                                    list: body
                                                                        HdlStmAssign
                                                                            HdlValueId: zdata_in_sync
                                                                            HdlValueId: regdata_in
                                                                        HdlStmAssign
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlValueId: z3addr
                                                                                    HdlOp: DOWNTO
                                                                                        list: ops
                                                                                            HdlValueInt: 15
                                                                                            HdlValueInt: 0
                                                                            HdlValueId: zaddr_regpart
                                                                        HdlStmAssign
                                                                            HdlValueId: REGREAD
                                                                            HdlValueId: zorro_state
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmAssign
                                                HdlValueInt: 0
                                                HdlValueId: slaven
                                            HdlStmAssign
                                                HdlValueInt: 0
                                                HdlValueId: dtack
                                            HdlStmAssign
                                                HdlValueInt: 0
                                                HdlValueId: dataout_enable
                                            HdlStmAssign
                                                HdlValueInt: 0
                                                HdlValueId: dataout_z3
                HdlStmBlock: SEQ
                    list: body
                        HdlStmAssign
                            HdlValueInt: 0
                            HdlValueId: slaven
                        HdlStmAssign
                            HdlValueInt: 0
                            HdlValueId: dtack
                        HdlStmAssign
                            HdlValueInt: 0
                            HdlValueId: dataout_enable
                        HdlStmAssign
                            HdlValueInt: 0
                            HdlValueId: dataout_z3
    DEL HdlStmCaseType@@CASE from zorro_state
    DEL HdlValueId@@zorro_state from zorro_state
    DEL tuple@@ from cases
    tuple
        HdlValueId: PAUSE
        HdlStmBlock: SEQ
            list: body
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlValueId@@Z3_IDLE from 
    DEL tuple@@ from cases

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueId: PAUSE
    HdlValueId: zorro_state

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueInt: 1
    HdlValueId: sdram_reset

MOV HdlStmIf@@ to body
HdlStmIf
    HdlValueId: zaddr_autoconfig
    HdlStmBlock: SEQ
        list: body
            HdlStmAssign
                HdlValueId: Z2_CONFIGURING
                HdlValueId: zorro_state
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: ZORRO3
    list: elifs
        tuple
            HdlOp: EQ
                list: ops
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: z3addr
                            HdlOp: DOWNTO
                                list: ops
                                    HdlValueInt: 31
                                    HdlValueInt: 16
                    HdlValueInt: ff00
            HdlStmAssign
                HdlValueId: Z3_CONFIGURING
                HdlValueId: zorro_state

DEL HdlStmAssign@@ from 
HdlStmAssign
    HdlValueId: Z3_CONFIGURING
    HdlValueId: zorro_state


CommitId: feb6a57b534d7a4afb9a11858adb2e3146131146
fix wip
--- a/z2-minispartan/z2.v
+++ b/z2-minispartan/z2.v
@@ -774,7 +773,7 @@ always @(posedge z_sample_clk) begin
         end else
           zorro_state <= Z3_CONFIGURING;
       end else begin
-        if (dtack_time < 2)
+        if (dtack_time < 3)
           dtack_time <= dtack_time + 1'b1;
         else
           dtack <= 1;

ParseResult:
UPD HdlStmCase@@zorro_state to zorro_state
    INS HdlStmCaseType@@CASE to zorro_state
    INS HdlValueId@@zorro_state to zorro_state
    INS tuple@@ to cases
    INS HdlValueId@@PAUSE to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@Z3_IDLE to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmCase@@zorro_state to zorro_state
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlStmIf
                HdlValueId: znCFGIN
                HdlStmBlock: SEQ
                    list: body
                        HdlStmAssign
                            HdlValueInt: 0
                            HdlValueId: z_confdone
                        HdlStmAssign
                            HdlValueId: Z3_CONFIGURING
                            HdlValueId: zorro_state
                list: elifs
                    tuple
                        HdlOp: EQ
                            list: ops
                                HdlOp: INDEX
                                    list: ops
                                        HdlValueId: znFCS_sync
                                        HdlValueInt: 2
                                HdlValueInt: 0
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmIf
                                    HdlOp: EQ
                                        list: ops
                                            HdlValueId: z3addr
                                            HdlValueInt: 00000000
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmAssign
                                                HdlValueInt: 0
                                                HdlValueId: z_confdone
                                            HdlStmAssign
                                                HdlValueId: Z3_CONFIGURING
                                                HdlValueId: zorro_state
                                    list: elifs
                                        tuple
                                            HdlOp: AND_LOG
                                                list: ops
                                                    HdlOp: AND_LOG
                                                        list: ops
                                                            HdlOp: GE
                                                                list: ops
                                                                    HdlValueId: z3addr
                                                                    HdlValueId: ram_low
                                                            HdlOp: LE
                                                                list: ops
                                                                    HdlValueId: z3addr
                                                                    HdlValueId: ram_high
                                                    HdlOp: NEG_LOG
                                                        list: ops
                                                            HdlValueId: zorro_read
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlStmAssign
                                                        HdlValueInt: 1
                                                        HdlValueId: slaven
                                                    HdlStmIf
                                                        HdlOp: OR_LOG
                                                            list: ops
                                                                HdlOp: OR_LOG
                                                                    list: ops
                                                                        HdlOp: OR_LOG
                                                                            list: ops
                                                                                HdlOp: EQ
                                                                                    list: ops
                                                                                        HdlOp: INDEX
                                                                                            list: ops
                                                                                                HdlValueId: znUDS_sync
                                                                                                HdlValueInt: 2
                                                                                        HdlValueInt: 0
                                                                                HdlOp: EQ
                                                                                    list: ops
                                                                                        HdlOp: INDEX
                                                                                            list: ops
                                                                                                HdlValueId: znLDS_sync
                                                                                                HdlValueInt: 2
                                                                                        HdlValueInt: 0
                                                                        HdlOp: EQ
                                                                            list: ops
                                                                                HdlOp: INDEX
                                                                                    list: ops
                                                                                        HdlValueId: znDS1_sync
                                                                                        HdlValueInt: 2
                                                                                HdlValueInt: 0
                                                                HdlOp: EQ
                                                                    list: ops
                                                                        HdlOp: INDEX
                                                                            list: ops
                                                                                HdlValueId: znDS0_sync
                                                                                HdlValueInt: 2
                                                                        HdlValueInt: 0
                                                        HdlStmBlock: SEQ
                                                            list: body
                                                                HdlStmAssign
                                                                    HdlValueId: Z3_WRITE_UPPER
                                                                    HdlValueId: zorro_state
                                                        list: elifs
                                        tuple
                                            HdlOp: AND_LOG
                                                list: ops
                                                    HdlOp: AND_LOG
                                                        list: ops
                                                            HdlOp: GE
                                                                list: ops
                                                                    HdlValueId: z3addr
                                                                    HdlValueId: ram_low
                                                            HdlOp: LE
                                                                list: ops
                                                                    HdlValueId: z3addr
                                                                    HdlValueId: ram_high
                                                    HdlValueId: zorro_read
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlStmAssign
                                                        HdlValueInt: 1
                                                        HdlValueId: slaven
                                                    HdlStmAssign
                                                        HdlValueId: Z3_READ_UPPER
                                                        HdlValueId: zorro_state
                                        tuple
                                            HdlOp: AND_LOG
                                                list: ops
                                                    HdlOp: AND_LOG
                                                        list: ops
                                                            HdlValueId: zorro_write
                                                            HdlOp: GE
                                                                list: ops
                                                                    HdlValueId: z3addr
                                                                    HdlValueId: reg_low
                                                    HdlOp: LE
                                                        list: ops
                                                            HdlValueId: z3addr
                                                            HdlValueId: reg_high
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlStmAssign
                                                        HdlValueInt: 1
                                                        HdlValueId: slaven
                                                    HdlStmIf
                                                        HdlOp: EQ
                                                            list: ops
                                                                HdlOp: INDEX
                                                                    list: ops
                                                                        HdlValueId: znDS1_sync
                                                                        HdlValueInt: 2
                                                                HdlValueInt: 0
                                                        HdlStmBlock: SEQ
                                                            list: body
                                                                HdlStmAssign
                                                                    HdlValueId: data_in_z3_low16
                                                                    HdlValueId: regdata_in
                                                                HdlStmAssign
                                                                    HdlOp: OR
                                                                        list: ops
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlValueId: z3addr
                                                                                    HdlOp: DOWNTO
                                                                                        list: ops
                                                                                            HdlValueInt: 15
                                                                                            HdlValueInt: 0
                                                                            HdlValueInt: 2
                                                                    HdlValueId: zaddr_regpart
                                                                HdlStmAssign
                                                                    HdlValueId: REGWRITE
                                                                    HdlValueId: zorro_state
                                                        list: elifs
                                                            tuple
                                                                HdlOp: EQ
                                                                    list: ops
                                                                        HdlOp: INDEX
                                                                            list: ops
                                                                                HdlValueId: znUDS_sync
                                                                                HdlValueInt: 2
                                                                        HdlValueInt: 0
                                                                HdlStmBlock: SEQ
                                                                    list: body
                                                                        HdlStmAssign
                                                                            HdlValueId: zdata_in_sync
                                                                            HdlValueId: regdata_in
                                                                        HdlStmAssign
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlValueId: z3addr
                                                                                    HdlOp: DOWNTO
                                                                                        list: ops
                                                                                            HdlValueInt: 15
                                                                                            HdlValueInt: 0
                                                                            HdlValueId: zaddr_regpart
                                                                        HdlStmAssign
                                                                            HdlValueId: REGWRITE
                                                                            HdlValueId: zorro_state
                                        tuple
                                            HdlOp: AND_LOG
                                                list: ops
                                                    HdlOp: AND_LOG
                                                        list: ops
                                                            HdlValueId: zorro_read
                                                            HdlOp: GE
                                                                list: ops
                                                                    HdlValueId: z3addr
                                                                    HdlValueId: reg_low
                                                    HdlOp: LE
                                                        list: ops
                                                            HdlValueId: z3addr
                                                            HdlValueId: reg_high
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlStmAssign
                                                        HdlValueInt: 1
                                                        HdlValueId: slaven
                                                    HdlStmAssign
                                                        HdlValueInt: 1
                                                        HdlValueId: dataout_enable
                                                    HdlStmAssign
                                                        HdlValueInt: 1
                                                        HdlValueId: dataout_z3
                                                    HdlStmAssign
                                                        HdlValueInt: 0
                                                        HdlValueId: data
                                                    HdlStmIf
                                                        HdlOp: EQ
                                                            list: ops
                                                                HdlOp: INDEX
                                                                    list: ops
                                                                        HdlValueId: znDS1_sync
                                                                        HdlValueInt: 2
                                                                HdlValueInt: 0
                                                        HdlStmBlock: SEQ
                                                            list: body
                                                                HdlStmAssign
                                                                    HdlValueId: data_in_z3_low16
                                                                    HdlValueId: regdata_in
                                                                HdlStmAssign
                                                                    HdlOp: OR
                                                                        list: ops
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlValueId: z3addr
                                                                                    HdlOp: DOWNTO
                                                                                        list: ops
                                                                                            HdlValueInt: 15
                                                                                            HdlValueInt: 0
                                                                            HdlValueInt: 2
                                                                    HdlValueId: zaddr_regpart
                                                                HdlStmAssign
                                                                    HdlValueId: REGREAD
                                                                    HdlValueId: zorro_state
                                                        list: elifs
                                                            tuple
                                                                HdlOp: EQ
                                                                    list: ops
                                                                        HdlOp: INDEX
                                                                            list: ops
                                                                                HdlValueId: znUDS_sync
                                                                                HdlValueInt: 2
                                                                        HdlValueInt: 0
                                                                HdlStmBlock: SEQ
                                                                    list: body
                                                                        HdlStmAssign
                                                                            HdlValueId: zdata_in_sync
                                                                            HdlValueId: regdata_in
                                                                        HdlStmAssign
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlValueId: z3addr
                                                                                    HdlOp: DOWNTO
                                                                                        list: ops
                                                                                            HdlValueInt: 15
                                                                                            HdlValueInt: 0
                                                                            HdlValueId: zaddr_regpart
                                                                        HdlStmAssign
                                                                            HdlValueId: REGREAD
                                                                            HdlValueId: zorro_state
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmAssign
                                                HdlValueInt: 0
                                                HdlValueId: slaven
                                            HdlStmAssign
                                                HdlValueInt: 0
                                                HdlValueId: dtack
                                            HdlStmAssign
                                                HdlValueInt: 0
                                                HdlValueId: dataout_enable
                                            HdlStmAssign
                                                HdlValueInt: 0
                                                HdlValueId: dataout_z3
                HdlStmBlock: SEQ
                    list: body
                        HdlStmAssign
                            HdlValueInt: 0
                            HdlValueId: slaven
                        HdlStmAssign
                            HdlValueInt: 0
                            HdlValueId: dtack
                        HdlStmAssign
                            HdlValueInt: 0
                            HdlValueId: dataout_enable
                        HdlStmAssign
                            HdlValueInt: 0
                            HdlValueId: dataout_z3
    DEL HdlStmCaseType@@CASE from zorro_state
    DEL HdlValueId@@zorro_state from zorro_state
    DEL tuple@@ from cases
    tuple
        HdlValueId: PAUSE
        HdlStmBlock: SEQ
            list: body
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlValueId@@Z3_IDLE from 
    DEL tuple@@ from cases

UPD HdlStmIf@@ to 
    UPD HdlOp@@LT to LT
        UPD HdlValueInt@@2 to 3


CommitId: feb6a57b534d7a4afb9a11858adb2e3146131146
fix wip
--- a/z2-minispartan/z2.v
+++ b/z2-minispartan/z2.v
@@ -872,13 +871,21 @@ always @(posedge z_sample_clk) begin
       reg_low   <= ram_low + reg_base;
       reg_high  <= ram_low + reg_base + 'h800;
       
+      sdram_reset <= 0;
       if (ZORRO3)
         zorro_state <= Z3_IDLE;
       else
         zorro_state <= Z2_IDLE;
     end
-    
+	 
     PAUSE: begin
+      // poor man's z3sense
+      if (zaddr_autoconfig) begin
+        zorro_state <= Z2_CONFIGURING;
+        ZORRO3 <= 0;
+      end else if (z3addr[31:16]=='hff00) begin
+        zorro_state <= Z3_CONFIGURING;
+      end
     end
   
     // ----------------------------------------------------------------------------------  

ParseResult:
UPD HdlStmCase@@zorro_state to zorro_state
    INS HdlStmCaseType@@CASE to zorro_state
    INS HdlValueId@@zorro_state to zorro_state
    INS tuple@@ to cases
    INS HdlValueId@@PAUSE to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@Z3_IDLE to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmCase@@zorro_state to zorro_state
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlStmIf
                HdlValueId: znCFGIN
                HdlStmBlock: SEQ
                    list: body
                        HdlStmAssign
                            HdlValueInt: 0
                            HdlValueId: z_confdone
                        HdlStmAssign
                            HdlValueId: Z3_CONFIGURING
                            HdlValueId: zorro_state
                list: elifs
                    tuple
                        HdlOp: EQ
                            list: ops
                                HdlOp: INDEX
                                    list: ops
                                        HdlValueId: znFCS_sync
                                        HdlValueInt: 2
                                HdlValueInt: 0
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmIf
                                    HdlOp: EQ
                                        list: ops
                                            HdlValueId: z3addr
                                            HdlValueInt: 00000000
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmAssign
                                                HdlValueInt: 0
                                                HdlValueId: z_confdone
                                            HdlStmAssign
                                                HdlValueId: Z3_CONFIGURING
                                                HdlValueId: zorro_state
                                    list: elifs
                                        tuple
                                            HdlOp: AND_LOG
                                                list: ops
                                                    HdlOp: AND_LOG
                                                        list: ops
                                                            HdlOp: GE
                                                                list: ops
                                                                    HdlValueId: z3addr
                                                                    HdlValueId: ram_low
                                                            HdlOp: LE
                                                                list: ops
                                                                    HdlValueId: z3addr
                                                                    HdlValueId: ram_high
                                                    HdlOp: NEG_LOG
                                                        list: ops
                                                            HdlValueId: zorro_read
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlStmAssign
                                                        HdlValueInt: 1
                                                        HdlValueId: slaven
                                                    HdlStmIf
                                                        HdlOp: OR_LOG
                                                            list: ops
                                                                HdlOp: OR_LOG
                                                                    list: ops
                                                                        HdlOp: OR_LOG
                                                                            list: ops
                                                                                HdlOp: EQ
                                                                                    list: ops
                                                                                        HdlOp: INDEX
                                                                                            list: ops
                                                                                                HdlValueId: znUDS_sync
                                                                                                HdlValueInt: 2
                                                                                        HdlValueInt: 0
                                                                                HdlOp: EQ
                                                                                    list: ops
                                                                                        HdlOp: INDEX
                                                                                            list: ops
                                                                                                HdlValueId: znLDS_sync
                                                                                                HdlValueInt: 2
                                                                                        HdlValueInt: 0
                                                                        HdlOp: EQ
                                                                            list: ops
                                                                                HdlOp: INDEX
                                                                                    list: ops
                                                                                        HdlValueId: znDS1_sync
                                                                                        HdlValueInt: 2
                                                                                HdlValueInt: 0
                                                                HdlOp: EQ
                                                                    list: ops
                                                                        HdlOp: INDEX
                                                                            list: ops
                                                                                HdlValueId: znDS0_sync
                                                                                HdlValueInt: 2
                                                                        HdlValueInt: 0
                                                        HdlStmBlock: SEQ
                                                            list: body
                                                                HdlStmAssign
                                                                    HdlValueId: Z3_WRITE_UPPER
                                                                    HdlValueId: zorro_state
                                                        list: elifs
                                        tuple
                                            HdlOp: AND_LOG
                                                list: ops
                                                    HdlOp: AND_LOG
                                                        list: ops
                                                            HdlOp: GE
                                                                list: ops
                                                                    HdlValueId: z3addr
                                                                    HdlValueId: ram_low
                                                            HdlOp: LE
                                                                list: ops
                                                                    HdlValueId: z3addr
                                                                    HdlValueId: ram_high
                                                    HdlValueId: zorro_read
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlStmAssign
                                                        HdlValueInt: 1
                                                        HdlValueId: slaven
                                                    HdlStmAssign
                                                        HdlValueId: Z3_READ_UPPER
                                                        HdlValueId: zorro_state
                                        tuple
                                            HdlOp: AND_LOG
                                                list: ops
                                                    HdlOp: AND_LOG
                                                        list: ops
                                                            HdlValueId: zorro_write
                                                            HdlOp: GE
                                                                list: ops
                                                                    HdlValueId: z3addr
                                                                    HdlValueId: reg_low
                                                    HdlOp: LE
                                                        list: ops
                                                            HdlValueId: z3addr
                                                            HdlValueId: reg_high
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlStmAssign
                                                        HdlValueInt: 1
                                                        HdlValueId: slaven
                                                    HdlStmIf
                                                        HdlOp: EQ
                                                            list: ops
                                                                HdlOp: INDEX
                                                                    list: ops
                                                                        HdlValueId: znDS1_sync
                                                                        HdlValueInt: 2
                                                                HdlValueInt: 0
                                                        HdlStmBlock: SEQ
                                                            list: body
                                                                HdlStmAssign
                                                                    HdlValueId: data_in_z3_low16
                                                                    HdlValueId: regdata_in
                                                                HdlStmAssign
                                                                    HdlOp: OR
                                                                        list: ops
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlValueId: z3addr
                                                                                    HdlOp: DOWNTO
                                                                                        list: ops
                                                                                            HdlValueInt: 15
                                                                                            HdlValueInt: 0
                                                                            HdlValueInt: 2
                                                                    HdlValueId: zaddr_regpart
                                                                HdlStmAssign
                                                                    HdlValueId: REGWRITE
                                                                    HdlValueId: zorro_state
                                                        list: elifs
                                                            tuple
                                                                HdlOp: EQ
                                                                    list: ops
                                                                        HdlOp: INDEX
                                                                            list: ops
                                                                                HdlValueId: znUDS_sync
                                                                                HdlValueInt: 2
                                                                        HdlValueInt: 0
                                                                HdlStmBlock: SEQ
                                                                    list: body
                                                                        HdlStmAssign
                                                                            HdlValueId: zdata_in_sync
                                                                            HdlValueId: regdata_in
                                                                        HdlStmAssign
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlValueId: z3addr
                                                                                    HdlOp: DOWNTO
                                                                                        list: ops
                                                                                            HdlValueInt: 15
                                                                                            HdlValueInt: 0
                                                                            HdlValueId: zaddr_regpart
                                                                        HdlStmAssign
                                                                            HdlValueId: REGWRITE
                                                                            HdlValueId: zorro_state
                                        tuple
                                            HdlOp: AND_LOG
                                                list: ops
                                                    HdlOp: AND_LOG
                                                        list: ops
                                                            HdlValueId: zorro_read
                                                            HdlOp: GE
                                                                list: ops
                                                                    HdlValueId: z3addr
                                                                    HdlValueId: reg_low
                                                    HdlOp: LE
                                                        list: ops
                                                            HdlValueId: z3addr
                                                            HdlValueId: reg_high
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlStmAssign
                                                        HdlValueInt: 1
                                                        HdlValueId: slaven
                                                    HdlStmAssign
                                                        HdlValueInt: 1
                                                        HdlValueId: dataout_enable
                                                    HdlStmAssign
                                                        HdlValueInt: 1
                                                        HdlValueId: dataout_z3
                                                    HdlStmAssign
                                                        HdlValueInt: 0
                                                        HdlValueId: data
                                                    HdlStmIf
                                                        HdlOp: EQ
                                                            list: ops
                                                                HdlOp: INDEX
                                                                    list: ops
                                                                        HdlValueId: znDS1_sync
                                                                        HdlValueInt: 2
                                                                HdlValueInt: 0
                                                        HdlStmBlock: SEQ
                                                            list: body
                                                                HdlStmAssign
                                                                    HdlValueId: data_in_z3_low16
                                                                    HdlValueId: regdata_in
                                                                HdlStmAssign
                                                                    HdlOp: OR
                                                                        list: ops
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlValueId: z3addr
                                                                                    HdlOp: DOWNTO
                                                                                        list: ops
                                                                                            HdlValueInt: 15
                                                                                            HdlValueInt: 0
                                                                            HdlValueInt: 2
                                                                    HdlValueId: zaddr_regpart
                                                                HdlStmAssign
                                                                    HdlValueId: REGREAD
                                                                    HdlValueId: zorro_state
                                                        list: elifs
                                                            tuple
                                                                HdlOp: EQ
                                                                    list: ops
                                                                        HdlOp: INDEX
                                                                            list: ops
                                                                                HdlValueId: znUDS_sync
                                                                                HdlValueInt: 2
                                                                        HdlValueInt: 0
                                                                HdlStmBlock: SEQ
                                                                    list: body
                                                                        HdlStmAssign
                                                                            HdlValueId: zdata_in_sync
                                                                            HdlValueId: regdata_in
                                                                        HdlStmAssign
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlValueId: z3addr
                                                                                    HdlOp: DOWNTO
                                                                                        list: ops
                                                                                            HdlValueInt: 15
                                                                                            HdlValueInt: 0
                                                                            HdlValueId: zaddr_regpart
                                                                        HdlStmAssign
                                                                            HdlValueId: REGREAD
                                                                            HdlValueId: zorro_state
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmAssign
                                                HdlValueInt: 0
                                                HdlValueId: slaven
                                            HdlStmAssign
                                                HdlValueInt: 0
                                                HdlValueId: dtack
                                            HdlStmAssign
                                                HdlValueInt: 0
                                                HdlValueId: dataout_enable
                                            HdlStmAssign
                                                HdlValueInt: 0
                                                HdlValueId: dataout_z3
                HdlStmBlock: SEQ
                    list: body
                        HdlStmAssign
                            HdlValueInt: 0
                            HdlValueId: slaven
                        HdlStmAssign
                            HdlValueInt: 0
                            HdlValueId: dtack
                        HdlStmAssign
                            HdlValueInt: 0
                            HdlValueId: dataout_enable
                        HdlStmAssign
                            HdlValueInt: 0
                            HdlValueId: dataout_z3
    DEL HdlStmCaseType@@CASE from zorro_state
    DEL HdlValueId@@zorro_state from zorro_state
    DEL tuple@@ from cases
    tuple
        HdlValueId: PAUSE
        HdlStmBlock: SEQ
            list: body
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlValueId@@Z3_IDLE from 
    DEL tuple@@ from cases


CommitId: feb6a57b534d7a4afb9a11858adb2e3146131146
fix wip
--- a/z2-minispartan/z2.v
+++ b/z2-minispartan/z2.v
@@ -1018,15 +1025,15 @@ always @(posedge z_sample_clk) begin
     // ----------------------------------------------------------------------------------
     // ----------------------------------------------------------------------------------
     Z3_IDLE: begin
-      if (znCFGIN) begin
+      /*if (znCFGIN) begin
         z_confdone <= 0;
         zorro_state <= Z3_CONFIGURING;
-      end else if (znFCS_sync[2]==0) begin
+      end else*/ if (znFCS_sync[2]==0) begin
         // falling edge of /FCS
         if (z3addr=='h00000000) begin
           // reset detection
           z_confdone <= 0;
-          zorro_state <= Z3_CONFIGURING;
+          zorro_state <= RESET;
         end else if ((z3addr >= ram_low) && (z3addr <= ram_high) && !zorro_read) begin
           slaven <= 1;
           if ((znUDS_sync[2]==0) || (znLDS_sync[2]==0) || (znDS1_sync[2]==0) || (znDS0_sync[2]==0)) begin

ParseResult:
UPD HdlStmCase@@zorro_state to zorro_state
    INS HdlStmCaseType@@CASE to zorro_state
    INS HdlValueId@@zorro_state to zorro_state
    INS tuple@@ to cases
    INS HdlValueId@@PAUSE to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@Z3_IDLE to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmIf@@ to 
    MOV tuple@@ to elifs
    tuple
        HdlOp: EQ
            list: ops
                HdlOp: INDEX
                    list: ops
                        HdlValueId: znFCS_sync
                        HdlValueInt: 2
                HdlValueInt: 0
        HdlStmBlock: SEQ
            list: body
                HdlStmIf
                    HdlOp: EQ
                        list: ops
                            HdlValueId: z3addr
                            HdlValueInt: 00000000
                    HdlStmBlock: SEQ
                        list: body
                            HdlStmAssign
                                HdlValueInt: 0
                                HdlValueId: z_confdone
                            HdlStmAssign
                                HdlValueId: Z3_CONFIGURING
                                HdlValueId: zorro_state
                    list: elifs
                        tuple
                            HdlOp: AND_LOG
                                list: ops
                                    HdlOp: AND_LOG
                                        list: ops
                                            HdlOp: GE
                                                list: ops
                                                    HdlValueId: z3addr
                                                    HdlValueId: ram_low
                                            HdlOp: LE
                                                list: ops
                                                    HdlValueId: z3addr
                                                    HdlValueId: ram_high
                                    HdlOp: NEG_LOG
                                        list: ops
                                            HdlValueId: zorro_read
                            HdlStmBlock: SEQ
                                list: body
                                    HdlStmAssign
                                        HdlValueInt: 1
                                        HdlValueId: slaven
                                    HdlStmIf
                                        HdlOp: OR_LOG
                                            list: ops
                                                HdlOp: OR_LOG
                                                    list: ops
                                                        HdlOp: OR_LOG
                                                            list: ops
                                                                HdlOp: EQ
                                                                    list: ops
                                                                        HdlOp: INDEX
                                                                            list: ops
                                                                                HdlValueId: znUDS_sync
                                                                                HdlValueInt: 2
                                                                        HdlValueInt: 0
                                                                HdlOp: EQ
                                                                    list: ops
                                                                        HdlOp: INDEX
                                                                            list: ops
                                                                                HdlValueId: znLDS_sync
                                                                                HdlValueInt: 2
                                                                        HdlValueInt: 0
                                                        HdlOp: EQ
                                                            list: ops
                                                                HdlOp: INDEX
                                                                    list: ops
                                                                        HdlValueId: znDS1_sync
                                                                        HdlValueInt: 2
                                                                HdlValueInt: 0
                                                HdlOp: EQ
                                                    list: ops
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlValueId: znDS0_sync
                                                                HdlValueInt: 2
                                                        HdlValueInt: 0
                                        HdlStmBlock: SEQ
                                            list: body
                                                HdlStmAssign
                                                    HdlValueId: Z3_WRITE_UPPER
                                                    HdlValueId: zorro_state
                                        list: elifs
                        tuple
                            HdlOp: AND_LOG
                                list: ops
                                    HdlOp: AND_LOG
                                        list: ops
                                            HdlOp: GE
                                                list: ops
                                                    HdlValueId: z3addr
                                                    HdlValueId: ram_low
                                            HdlOp: LE
                                                list: ops
                                                    HdlValueId: z3addr
                                                    HdlValueId: ram_high
                                    HdlValueId: zorro_read
                            HdlStmBlock: SEQ
                                list: body
                                    HdlStmAssign
                                        HdlValueInt: 1
                                        HdlValueId: slaven
                                    HdlStmAssign
                                        HdlValueId: Z3_READ_UPPER
                                        HdlValueId: zorro_state
                        tuple
                            HdlOp: AND_LOG
                                list: ops
                                    HdlOp: AND_LOG
                                        list: ops
                                            HdlValueId: zorro_write
                                            HdlOp: GE
                                                list: ops
                                                    HdlValueId: z3addr
                                                    HdlValueId: reg_low
                                    HdlOp: LE
                                        list: ops
                                            HdlValueId: z3addr
                                            HdlValueId: reg_high
                            HdlStmBlock: SEQ
                                list: body
                                    HdlStmAssign
                                        HdlValueInt: 1
                                        HdlValueId: slaven
                                    HdlStmIf
                                        HdlOp: EQ
                                            list: ops
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: znDS1_sync
                                                        HdlValueInt: 2
                                                HdlValueInt: 0
                                        HdlStmBlock: SEQ
                                            list: body
                                                HdlStmAssign
                                                    HdlValueId: data_in_z3_low16
                                                    HdlValueId: regdata_in
                                                HdlStmAssign
                                                    HdlOp: OR
                                                        list: ops
                                                            HdlOp: INDEX
                                                                list: ops
                                                                    HdlValueId: z3addr
                                                                    HdlOp: DOWNTO
                                                                        list: ops
                                                                            HdlValueInt: 15
                                                                            HdlValueInt: 0
                                                            HdlValueInt: 2
                                                    HdlValueId: zaddr_regpart
                                                HdlStmAssign
                                                    HdlValueId: REGWRITE
                                                    HdlValueId: zorro_state
                                        list: elifs
                                            tuple
                                                HdlOp: EQ
                                                    list: ops
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlValueId: znUDS_sync
                                                                HdlValueInt: 2
                                                        HdlValueInt: 0
                                                HdlStmBlock: SEQ
                                                    list: body
                                                        HdlStmAssign
                                                            HdlValueId: zdata_in_sync
                                                            HdlValueId: regdata_in
                                                        HdlStmAssign
                                                            HdlOp: INDEX
                                                                list: ops
                                                                    HdlValueId: z3addr
                                                                    HdlOp: DOWNTO
                                                                        list: ops
                                                                            HdlValueInt: 15
                                                                            HdlValueInt: 0
                                                            HdlValueId: zaddr_regpart
                                                        HdlStmAssign
                                                            HdlValueId: REGWRITE
                                                            HdlValueId: zorro_state
                        tuple
                            HdlOp: AND_LOG
                                list: ops
                                    HdlOp: AND_LOG
                                        list: ops
                                            HdlValueId: zorro_read
                                            HdlOp: GE
                                                list: ops
                                                    HdlValueId: z3addr
                                                    HdlValueId: reg_low
                                    HdlOp: LE
                                        list: ops
                                            HdlValueId: z3addr
                                            HdlValueId: reg_high
                            HdlStmBlock: SEQ
                                list: body
                                    HdlStmAssign
                                        HdlValueInt: 1
                                        HdlValueId: slaven
                                    HdlStmAssign
                                        HdlValueInt: 1
                                        HdlValueId: dataout_enable
                                    HdlStmAssign
                                        HdlValueInt: 1
                                        HdlValueId: dataout_z3
                                    HdlStmAssign
                                        HdlValueInt: 0
                                        HdlValueId: data
                                    HdlStmIf
                                        HdlOp: EQ
                                            list: ops
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: znDS1_sync
                                                        HdlValueInt: 2
                                                HdlValueInt: 0
                                        HdlStmBlock: SEQ
                                            list: body
                                                HdlStmAssign
                                                    HdlValueId: data_in_z3_low16
                                                    HdlValueId: regdata_in
                                                HdlStmAssign
                                                    HdlOp: OR
                                                        list: ops
                                                            HdlOp: INDEX
                                                                list: ops
                                                                    HdlValueId: z3addr
                                                                    HdlOp: DOWNTO
                                                                        list: ops
                                                                            HdlValueInt: 15
                                                                            HdlValueInt: 0
                                                            HdlValueInt: 2
                                                    HdlValueId: zaddr_regpart
                                                HdlStmAssign
                                                    HdlValueId: REGREAD
                                                    HdlValueId: zorro_state
                                        list: elifs
                                            tuple
                                                HdlOp: EQ
                                                    list: ops
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlValueId: znUDS_sync
                                                                HdlValueInt: 2
                                                        HdlValueInt: 0
                                                HdlStmBlock: SEQ
                                                    list: body
                                                        HdlStmAssign
                                                            HdlValueId: zdata_in_sync
                                                            HdlValueId: regdata_in
                                                        HdlStmAssign
                                                            HdlOp: INDEX
                                                                list: ops
                                                                    HdlValueId: z3addr
                                                                    HdlOp: DOWNTO
                                                                        list: ops
                                                                            HdlValueInt: 15
                                                                            HdlValueInt: 0
                                                            HdlValueId: zaddr_regpart
                                                        HdlStmAssign
                                                            HdlValueId: REGREAD
                                                            HdlValueId: zorro_state
                    HdlStmBlock: SEQ
                        list: body
                            HdlStmAssign
                                HdlValueInt: 0
                                HdlValueId: slaven
                            HdlStmAssign
                                HdlValueInt: 0
                                HdlValueId: dtack
                            HdlStmAssign
                                HdlValueInt: 0
                                HdlValueId: dataout_enable
                            HdlStmAssign
                                HdlValueInt: 0
                                HdlValueId: dataout_z3
    UPD list@@elifs to body
    MOV list@@elifs to 
    list: elifs
        tuple
            HdlOp: EQ
                list: ops
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: znFCS_sync
                            HdlValueInt: 2
                    HdlValueInt: 0
            HdlStmBlock: SEQ
                list: body
                    HdlStmIf
                        HdlOp: EQ
                            list: ops
                                HdlValueId: z3addr
                                HdlValueInt: 00000000
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmAssign
                                    HdlValueInt: 0
                                    HdlValueId: z_confdone
                                HdlStmAssign
                                    HdlValueId: Z3_CONFIGURING
                                    HdlValueId: zorro_state
                        list: elifs
                            tuple
                                HdlOp: AND_LOG
                                    list: ops
                                        HdlOp: AND_LOG
                                            list: ops
                                                HdlOp: GE
                                                    list: ops
                                                        HdlValueId: z3addr
                                                        HdlValueId: ram_low
                                                HdlOp: LE
                                                    list: ops
                                                        HdlValueId: z3addr
                                                        HdlValueId: ram_high
                                        HdlOp: NEG_LOG
                                            list: ops
                                                HdlValueId: zorro_read
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlStmAssign
                                            HdlValueInt: 1
                                            HdlValueId: slaven
                                        HdlStmIf
                                            HdlOp: OR_LOG
                                                list: ops
                                                    HdlOp: OR_LOG
                                                        list: ops
                                                            HdlOp: OR_LOG
                                                                list: ops
                                                                    HdlOp: EQ
                                                                        list: ops
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlValueId: znUDS_sync
                                                                                    HdlValueInt: 2
                                                                            HdlValueInt: 0
                                                                    HdlOp: EQ
                                                                        list: ops
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlValueId: znLDS_sync
                                                                                    HdlValueInt: 2
                                                                            HdlValueInt: 0
                                                            HdlOp: EQ
                                                                list: ops
                                                                    HdlOp: INDEX
                                                                        list: ops
                                                                            HdlValueId: znDS1_sync
                                                                            HdlValueInt: 2
                                                                    HdlValueInt: 0
                                                    HdlOp: EQ
                                                        list: ops
                                                            HdlOp: INDEX
                                                                list: ops
                                                                    HdlValueId: znDS0_sync
                                                                    HdlValueInt: 2
                                                            HdlValueInt: 0
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlStmAssign
                                                        HdlValueId: Z3_WRITE_UPPER
                                                        HdlValueId: zorro_state
                                            list: elifs
                            tuple
                                HdlOp: AND_LOG
                                    list: ops
                                        HdlOp: AND_LOG
                                            list: ops
                                                HdlOp: GE
                                                    list: ops
                                                        HdlValueId: z3addr
                                                        HdlValueId: ram_low
                                                HdlOp: LE
                                                    list: ops
                                                        HdlValueId: z3addr
                                                        HdlValueId: ram_high
                                        HdlValueId: zorro_read
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlStmAssign
                                            HdlValueInt: 1
                                            HdlValueId: slaven
                                        HdlStmAssign
                                            HdlValueId: Z3_READ_UPPER
                                            HdlValueId: zorro_state
                            tuple
                                HdlOp: AND_LOG
                                    list: ops
                                        HdlOp: AND_LOG
                                            list: ops
                                                HdlValueId: zorro_write
                                                HdlOp: GE
                                                    list: ops
                                                        HdlValueId: z3addr
                                                        HdlValueId: reg_low
                                        HdlOp: LE
                                            list: ops
                                                HdlValueId: z3addr
                                                HdlValueId: reg_high
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlStmAssign
                                            HdlValueInt: 1
                                            HdlValueId: slaven
                                        HdlStmIf
                                            HdlOp: EQ
                                                list: ops
                                                    HdlOp: INDEX
                                                        list: ops
                                                            HdlValueId: znDS1_sync
                                                            HdlValueInt: 2
                                                    HdlValueInt: 0
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlStmAssign
                                                        HdlValueId: data_in_z3_low16
                                                        HdlValueId: regdata_in
                                                    HdlStmAssign
                                                        HdlOp: OR
                                                            list: ops
                                                                HdlOp: INDEX
                                                                    list: ops
                                                                        HdlValueId: z3addr
                                                                        HdlOp: DOWNTO
                                                                            list: ops
                                                                                HdlValueInt: 15
                                                                                HdlValueInt: 0
                                                                HdlValueInt: 2
                                                        HdlValueId: zaddr_regpart
                                                    HdlStmAssign
                                                        HdlValueId: REGWRITE
                                                        HdlValueId: zorro_state
                                            list: elifs
                                                tuple
                                                    HdlOp: EQ
                                                        list: ops
                                                            HdlOp: INDEX
                                                                list: ops
                                                                    HdlValueId: znUDS_sync
                                                                    HdlValueInt: 2
                                                            HdlValueInt: 0
                                                    HdlStmBlock: SEQ
                                                        list: body
                                                            HdlStmAssign
                                                                HdlValueId: zdata_in_sync
                                                                HdlValueId: regdata_in
                                                            HdlStmAssign
                                                                HdlOp: INDEX
                                                                    list: ops
                                                                        HdlValueId: z3addr
                                                                        HdlOp: DOWNTO
                                                                            list: ops
                                                                                HdlValueInt: 15
                                                                                HdlValueInt: 0
                                                                HdlValueId: zaddr_regpart
                                                            HdlStmAssign
                                                                HdlValueId: REGWRITE
                                                                HdlValueId: zorro_state
                            tuple
                                HdlOp: AND_LOG
                                    list: ops
                                        HdlOp: AND_LOG
                                            list: ops
                                                HdlValueId: zorro_read
                                                HdlOp: GE
                                                    list: ops
                                                        HdlValueId: z3addr
                                                        HdlValueId: reg_low
                                        HdlOp: LE
                                            list: ops
                                                HdlValueId: z3addr
                                                HdlValueId: reg_high
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlStmAssign
                                            HdlValueInt: 1
                                            HdlValueId: slaven
                                        HdlStmAssign
                                            HdlValueInt: 1
                                            HdlValueId: dataout_enable
                                        HdlStmAssign
                                            HdlValueInt: 1
                                            HdlValueId: dataout_z3
                                        HdlStmAssign
                                            HdlValueInt: 0
                                            HdlValueId: data
                                        HdlStmIf
                                            HdlOp: EQ
                                                list: ops
                                                    HdlOp: INDEX
                                                        list: ops
                                                            HdlValueId: znDS1_sync
                                                            HdlValueInt: 2
                                                    HdlValueInt: 0
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlStmAssign
                                                        HdlValueId: data_in_z3_low16
                                                        HdlValueId: regdata_in
                                                    HdlStmAssign
                                                        HdlOp: OR
                                                            list: ops
                                                                HdlOp: INDEX
                                                                    list: ops
                                                                        HdlValueId: z3addr
                                                                        HdlOp: DOWNTO
                                                                            list: ops
                                                                                HdlValueInt: 15
                                                                                HdlValueInt: 0
                                                                HdlValueInt: 2
                                                        HdlValueId: zaddr_regpart
                                                    HdlStmAssign
                                                        HdlValueId: REGREAD
                                                        HdlValueId: zorro_state
                                            list: elifs
                                                tuple
                                                    HdlOp: EQ
                                                        list: ops
                                                            HdlOp: INDEX
                                                                list: ops
                                                                    HdlValueId: znUDS_sync
                                                                    HdlValueInt: 2
                                                            HdlValueInt: 0
                                                    HdlStmBlock: SEQ
                                                        list: body
                                                            HdlStmAssign
                                                                HdlValueId: zdata_in_sync
                                                                HdlValueId: regdata_in
                                                            HdlStmAssign
                                                                HdlOp: INDEX
                                                                    list: ops
                                                                        HdlValueId: z3addr
                                                                        HdlOp: DOWNTO
                                                                            list: ops
                                                                                HdlValueInt: 15
                                                                                HdlValueInt: 0
                                                                HdlValueId: zaddr_regpart
                                                            HdlStmAssign
                                                                HdlValueId: REGREAD
                                                                HdlValueId: zorro_state
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmAssign
                                    HdlValueInt: 0
                                    HdlValueId: slaven
                                HdlStmAssign
                                    HdlValueInt: 0
                                    HdlValueId: dtack
                                HdlStmAssign
                                    HdlValueInt: 0
                                    HdlValueId: dataout_enable
                                HdlStmAssign
                                    HdlValueInt: 0
                                    HdlValueId: dataout_z3
    MOV HdlOp@@EQ to 
    HdlOp: EQ
        list: ops
            HdlOp: INDEX
                list: ops
                    HdlValueId: znFCS_sync
                    HdlValueInt: 2
            HdlValueInt: 0
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlStmIf
                HdlOp: EQ
                    list: ops
                        HdlValueId: z3addr
                        HdlValueInt: 00000000
                HdlStmBlock: SEQ
                    list: body
                        HdlStmAssign
                            HdlValueInt: 0
                            HdlValueId: z_confdone
                        HdlStmAssign
                            HdlValueId: Z3_CONFIGURING
                            HdlValueId: zorro_state
                list: elifs
                    tuple
                        HdlOp: AND_LOG
                            list: ops
                                HdlOp: AND_LOG
                                    list: ops
                                        HdlOp: GE
                                            list: ops
                                                HdlValueId: z3addr
                                                HdlValueId: ram_low
                                        HdlOp: LE
                                            list: ops
                                                HdlValueId: z3addr
                                                HdlValueId: ram_high
                                HdlOp: NEG_LOG
                                    list: ops
                                        HdlValueId: zorro_read
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmAssign
                                    HdlValueInt: 1
                                    HdlValueId: slaven
                                HdlStmIf
                                    HdlOp: OR_LOG
                                        list: ops
                                            HdlOp: OR_LOG
                                                list: ops
                                                    HdlOp: OR_LOG
                                                        list: ops
                                                            HdlOp: EQ
                                                                list: ops
                                                                    HdlOp: INDEX
                                                                        list: ops
                                                                            HdlValueId: znUDS_sync
                                                                            HdlValueInt: 2
                                                                    HdlValueInt: 0
                                                            HdlOp: EQ
                                                                list: ops
                                                                    HdlOp: INDEX
                                                                        list: ops
                                                                            HdlValueId: znLDS_sync
                                                                            HdlValueInt: 2
                                                                    HdlValueInt: 0
                                                    HdlOp: EQ
                                                        list: ops
                                                            HdlOp: INDEX
                                                                list: ops
                                                                    HdlValueId: znDS1_sync
                                                                    HdlValueInt: 2
                                                            HdlValueInt: 0
                                            HdlOp: EQ
                                                list: ops
                                                    HdlOp: INDEX
                                                        list: ops
                                                            HdlValueId: znDS0_sync
                                                            HdlValueInt: 2
                                                    HdlValueInt: 0
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmAssign
                                                HdlValueId: Z3_WRITE_UPPER
                                                HdlValueId: zorro_state
                                    list: elifs
                    tuple
                        HdlOp: AND_LOG
                            list: ops
                                HdlOp: AND_LOG
                                    list: ops
                                        HdlOp: GE
                                            list: ops
                                                HdlValueId: z3addr
                                                HdlValueId: ram_low
                                        HdlOp: LE
                                            list: ops
                                                HdlValueId: z3addr
                                                HdlValueId: ram_high
                                HdlValueId: zorro_read
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmAssign
                                    HdlValueInt: 1
                                    HdlValueId: slaven
                                HdlStmAssign
                                    HdlValueId: Z3_READ_UPPER
                                    HdlValueId: zorro_state
                    tuple
                        HdlOp: AND_LOG
                            list: ops
                                HdlOp: AND_LOG
                                    list: ops
                                        HdlValueId: zorro_write
                                        HdlOp: GE
                                            list: ops
                                                HdlValueId: z3addr
                                                HdlValueId: reg_low
                                HdlOp: LE
                                    list: ops
                                        HdlValueId: z3addr
                                        HdlValueId: reg_high
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmAssign
                                    HdlValueInt: 1
                                    HdlValueId: slaven
                                HdlStmIf
                                    HdlOp: EQ
                                        list: ops
                                            HdlOp: INDEX
                                                list: ops
                                                    HdlValueId: znDS1_sync
                                                    HdlValueInt: 2
                                            HdlValueInt: 0
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmAssign
                                                HdlValueId: data_in_z3_low16
                                                HdlValueId: regdata_in
                                            HdlStmAssign
                                                HdlOp: OR
                                                    list: ops
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlValueId: z3addr
                                                                HdlOp: DOWNTO
                                                                    list: ops
                                                                        HdlValueInt: 15
                                                                        HdlValueInt: 0
                                                        HdlValueInt: 2
                                                HdlValueId: zaddr_regpart
                                            HdlStmAssign
                                                HdlValueId: REGWRITE
                                                HdlValueId: zorro_state
                                    list: elifs
                                        tuple
                                            HdlOp: EQ
                                                list: ops
                                                    HdlOp: INDEX
                                                        list: ops
                                                            HdlValueId: znUDS_sync
                                                            HdlValueInt: 2
                                                    HdlValueInt: 0
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlStmAssign
                                                        HdlValueId: zdata_in_sync
                                                        HdlValueId: regdata_in
                                                    HdlStmAssign
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlValueId: z3addr
                                                                HdlOp: DOWNTO
                                                                    list: ops
                                                                        HdlValueInt: 15
                                                                        HdlValueInt: 0
                                                        HdlValueId: zaddr_regpart
                                                    HdlStmAssign
                                                        HdlValueId: REGWRITE
                                                        HdlValueId: zorro_state
                    tuple
                        HdlOp: AND_LOG
                            list: ops
                                HdlOp: AND_LOG
                                    list: ops
                                        HdlValueId: zorro_read
                                        HdlOp: GE
                                            list: ops
                                                HdlValueId: z3addr
                                                HdlValueId: reg_low
                                HdlOp: LE
                                    list: ops
                                        HdlValueId: z3addr
                                        HdlValueId: reg_high
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmAssign
                                    HdlValueInt: 1
                                    HdlValueId: slaven
                                HdlStmAssign
                                    HdlValueInt: 1
                                    HdlValueId: dataout_enable
                                HdlStmAssign
                                    HdlValueInt: 1
                                    HdlValueId: dataout_z3
                                HdlStmAssign
                                    HdlValueInt: 0
                                    HdlValueId: data
                                HdlStmIf
                                    HdlOp: EQ
                                        list: ops
                                            HdlOp: INDEX
                                                list: ops
                                                    HdlValueId: znDS1_sync
                                                    HdlValueInt: 2
                                            HdlValueInt: 0
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmAssign
                                                HdlValueId: data_in_z3_low16
                                                HdlValueId: regdata_in
                                            HdlStmAssign
                                                HdlOp: OR
                                                    list: ops
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlValueId: z3addr
                                                                HdlOp: DOWNTO
                                                                    list: ops
                                                                        HdlValueInt: 15
                                                                        HdlValueInt: 0
                                                        HdlValueInt: 2
                                                HdlValueId: zaddr_regpart
                                            HdlStmAssign
                                                HdlValueId: REGREAD
                                                HdlValueId: zorro_state
                                    list: elifs
                                        tuple
                                            HdlOp: EQ
                                                list: ops
                                                    HdlOp: INDEX
                                                        list: ops
                                                            HdlValueId: znUDS_sync
                                                            HdlValueInt: 2
                                                    HdlValueInt: 0
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlStmAssign
                                                        HdlValueId: zdata_in_sync
                                                        HdlValueId: regdata_in
                                                    HdlStmAssign
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlValueId: z3addr
                                                                HdlOp: DOWNTO
                                                                    list: ops
                                                                        HdlValueInt: 15
                                                                        HdlValueInt: 0
                                                        HdlValueId: zaddr_regpart
                                                    HdlStmAssign
                                                        HdlValueId: REGREAD
                                                        HdlValueId: zorro_state
                HdlStmBlock: SEQ
                    list: body
                        HdlStmAssign
                            HdlValueInt: 0
                            HdlValueId: slaven
                        HdlStmAssign
                            HdlValueInt: 0
                            HdlValueId: dtack
                        HdlStmAssign
                            HdlValueInt: 0
                            HdlValueId: dataout_enable
                        HdlStmAssign
                            HdlValueInt: 0
                            HdlValueId: dataout_z3
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: z_confdone
            HdlStmAssign
                HdlValueId: Z3_CONFIGURING
                HdlValueId: zorro_state
    DEL HdlValueId@@znCFGIN from 

UPD HdlStmCase@@zorro_state to zorro_state
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlStmIf
                HdlValueId: znCFGIN
                HdlStmBlock: SEQ
                    list: body
                        HdlStmAssign
                            HdlValueInt: 0
                            HdlValueId: z_confdone
                        HdlStmAssign
                            HdlValueId: Z3_CONFIGURING
                            HdlValueId: zorro_state
                list: elifs
                    tuple
                        HdlOp: EQ
                            list: ops
                                HdlOp: INDEX
                                    list: ops
                                        HdlValueId: znFCS_sync
                                        HdlValueInt: 2
                                HdlValueInt: 0
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmIf
                                    HdlOp: EQ
                                        list: ops
                                            HdlValueId: z3addr
                                            HdlValueInt: 00000000
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmAssign
                                                HdlValueInt: 0
                                                HdlValueId: z_confdone
                                            HdlStmAssign
                                                HdlValueId: Z3_CONFIGURING
                                                HdlValueId: zorro_state
                                    list: elifs
                                        tuple
                                            HdlOp: AND_LOG
                                                list: ops
                                                    HdlOp: AND_LOG
                                                        list: ops
                                                            HdlOp: GE
                                                                list: ops
                                                                    HdlValueId: z3addr
                                                                    HdlValueId: ram_low
                                                            HdlOp: LE
                                                                list: ops
                                                                    HdlValueId: z3addr
                                                                    HdlValueId: ram_high
                                                    HdlOp: NEG_LOG
                                                        list: ops
                                                            HdlValueId: zorro_read
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlStmAssign
                                                        HdlValueInt: 1
                                                        HdlValueId: slaven
                                                    HdlStmIf
                                                        HdlOp: OR_LOG
                                                            list: ops
                                                                HdlOp: OR_LOG
                                                                    list: ops
                                                                        HdlOp: OR_LOG
                                                                            list: ops
                                                                                HdlOp: EQ
                                                                                    list: ops
                                                                                        HdlOp: INDEX
                                                                                            list: ops
                                                                                                HdlValueId: znUDS_sync
                                                                                                HdlValueInt: 2
                                                                                        HdlValueInt: 0
                                                                                HdlOp: EQ
                                                                                    list: ops
                                                                                        HdlOp: INDEX
                                                                                            list: ops
                                                                                                HdlValueId: znLDS_sync
                                                                                                HdlValueInt: 2
                                                                                        HdlValueInt: 0
                                                                        HdlOp: EQ
                                                                            list: ops
                                                                                HdlOp: INDEX
                                                                                    list: ops
                                                                                        HdlValueId: znDS1_sync
                                                                                        HdlValueInt: 2
                                                                                HdlValueInt: 0
                                                                HdlOp: EQ
                                                                    list: ops
                                                                        HdlOp: INDEX
                                                                            list: ops
                                                                                HdlValueId: znDS0_sync
                                                                                HdlValueInt: 2
                                                                        HdlValueInt: 0
                                                        HdlStmBlock: SEQ
                                                            list: body
                                                                HdlStmAssign
                                                                    HdlValueId: Z3_WRITE_UPPER
                                                                    HdlValueId: zorro_state
                                                        list: elifs
                                        tuple
                                            HdlOp: AND_LOG
                                                list: ops
                                                    HdlOp: AND_LOG
                                                        list: ops
                                                            HdlOp: GE
                                                                list: ops
                                                                    HdlValueId: z3addr
                                                                    HdlValueId: ram_low
                                                            HdlOp: LE
                                                                list: ops
                                                                    HdlValueId: z3addr
                                                                    HdlValueId: ram_high
                                                    HdlValueId: zorro_read
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlStmAssign
                                                        HdlValueInt: 1
                                                        HdlValueId: slaven
                                                    HdlStmAssign
                                                        HdlValueId: Z3_READ_UPPER
                                                        HdlValueId: zorro_state
                                        tuple
                                            HdlOp: AND_LOG
                                                list: ops
                                                    HdlOp: AND_LOG
                                                        list: ops
                                                            HdlValueId: zorro_write
                                                            HdlOp: GE
                                                                list: ops
                                                                    HdlValueId: z3addr
                                                                    HdlValueId: reg_low
                                                    HdlOp: LE
                                                        list: ops
                                                            HdlValueId: z3addr
                                                            HdlValueId: reg_high
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlStmAssign
                                                        HdlValueInt: 1
                                                        HdlValueId: slaven
                                                    HdlStmIf
                                                        HdlOp: EQ
                                                            list: ops
                                                                HdlOp: INDEX
                                                                    list: ops
                                                                        HdlValueId: znDS1_sync
                                                                        HdlValueInt: 2
                                                                HdlValueInt: 0
                                                        HdlStmBlock: SEQ
                                                            list: body
                                                                HdlStmAssign
                                                                    HdlValueId: data_in_z3_low16
                                                                    HdlValueId: regdata_in
                                                                HdlStmAssign
                                                                    HdlOp: OR
                                                                        list: ops
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlValueId: z3addr
                                                                                    HdlOp: DOWNTO
                                                                                        list: ops
                                                                                            HdlValueInt: 15
                                                                                            HdlValueInt: 0
                                                                            HdlValueInt: 2
                                                                    HdlValueId: zaddr_regpart
                                                                HdlStmAssign
                                                                    HdlValueId: REGWRITE
                                                                    HdlValueId: zorro_state
                                                        list: elifs
                                                            tuple
                                                                HdlOp: EQ
                                                                    list: ops
                                                                        HdlOp: INDEX
                                                                            list: ops
                                                                                HdlValueId: znUDS_sync
                                                                                HdlValueInt: 2
                                                                        HdlValueInt: 0
                                                                HdlStmBlock: SEQ
                                                                    list: body
                                                                        HdlStmAssign
                                                                            HdlValueId: zdata_in_sync
                                                                            HdlValueId: regdata_in
                                                                        HdlStmAssign
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlValueId: z3addr
                                                                                    HdlOp: DOWNTO
                                                                                        list: ops
                                                                                            HdlValueInt: 15
                                                                                            HdlValueInt: 0
                                                                            HdlValueId: zaddr_regpart
                                                                        HdlStmAssign
                                                                            HdlValueId: REGWRITE
                                                                            HdlValueId: zorro_state
                                        tuple
                                            HdlOp: AND_LOG
                                                list: ops
                                                    HdlOp: AND_LOG
                                                        list: ops
                                                            HdlValueId: zorro_read
                                                            HdlOp: GE
                                                                list: ops
                                                                    HdlValueId: z3addr
                                                                    HdlValueId: reg_low
                                                    HdlOp: LE
                                                        list: ops
                                                            HdlValueId: z3addr
                                                            HdlValueId: reg_high
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlStmAssign
                                                        HdlValueInt: 1
                                                        HdlValueId: slaven
                                                    HdlStmAssign
                                                        HdlValueInt: 1
                                                        HdlValueId: dataout_enable
                                                    HdlStmAssign
                                                        HdlValueInt: 1
                                                        HdlValueId: dataout_z3
                                                    HdlStmAssign
                                                        HdlValueInt: 0
                                                        HdlValueId: data
                                                    HdlStmIf
                                                        HdlOp: EQ
                                                            list: ops
                                                                HdlOp: INDEX
                                                                    list: ops
                                                                        HdlValueId: znDS1_sync
                                                                        HdlValueInt: 2
                                                                HdlValueInt: 0
                                                        HdlStmBlock: SEQ
                                                            list: body
                                                                HdlStmAssign
                                                                    HdlValueId: data_in_z3_low16
                                                                    HdlValueId: regdata_in
                                                                HdlStmAssign
                                                                    HdlOp: OR
                                                                        list: ops
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlValueId: z3addr
                                                                                    HdlOp: DOWNTO
                                                                                        list: ops
                                                                                            HdlValueInt: 15
                                                                                            HdlValueInt: 0
                                                                            HdlValueInt: 2
                                                                    HdlValueId: zaddr_regpart
                                                                HdlStmAssign
                                                                    HdlValueId: REGREAD
                                                                    HdlValueId: zorro_state
                                                        list: elifs
                                                            tuple
                                                                HdlOp: EQ
                                                                    list: ops
                                                                        HdlOp: INDEX
                                                                            list: ops
                                                                                HdlValueId: znUDS_sync
                                                                                HdlValueInt: 2
                                                                        HdlValueInt: 0
                                                                HdlStmBlock: SEQ
                                                                    list: body
                                                                        HdlStmAssign
                                                                            HdlValueId: zdata_in_sync
                                                                            HdlValueId: regdata_in
                                                                        HdlStmAssign
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlValueId: z3addr
                                                                                    HdlOp: DOWNTO
                                                                                        list: ops
                                                                                            HdlValueInt: 15
                                                                                            HdlValueInt: 0
                                                                            HdlValueId: zaddr_regpart
                                                                        HdlStmAssign
                                                                            HdlValueId: REGREAD
                                                                            HdlValueId: zorro_state
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmAssign
                                                HdlValueInt: 0
                                                HdlValueId: slaven
                                            HdlStmAssign
                                                HdlValueInt: 0
                                                HdlValueId: dtack
                                            HdlStmAssign
                                                HdlValueInt: 0
                                                HdlValueId: dataout_enable
                                            HdlStmAssign
                                                HdlValueInt: 0
                                                HdlValueId: dataout_z3
                HdlStmBlock: SEQ
                    list: body
                        HdlStmAssign
                            HdlValueInt: 0
                            HdlValueId: slaven
                        HdlStmAssign
                            HdlValueInt: 0
                            HdlValueId: dtack
                        HdlStmAssign
                            HdlValueInt: 0
                            HdlValueId: dataout_enable
                        HdlStmAssign
                            HdlValueInt: 0
                            HdlValueId: dataout_z3
    DEL HdlStmCaseType@@CASE from zorro_state
    DEL HdlValueId@@zorro_state from zorro_state
    DEL tuple@@ from cases
    tuple
        HdlValueId: PAUSE
        HdlStmBlock: SEQ
            list: body
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlValueId@@Z3_IDLE from 
    DEL tuple@@ from cases

MOV HdlStmIf@@ to body
HdlStmIf
    HdlValueId: znCFGIN
    HdlStmBlock: SEQ
        list: body
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: z_confdone
            HdlStmAssign
                HdlValueId: Z3_CONFIGURING
                HdlValueId: zorro_state
    list: elifs
        tuple
            HdlOp: EQ
                list: ops
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: znFCS_sync
                            HdlValueInt: 2
                    HdlValueInt: 0
            HdlStmBlock: SEQ
                list: body
                    HdlStmIf
                        HdlOp: EQ
                            list: ops
                                HdlValueId: z3addr
                                HdlValueInt: 00000000
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmAssign
                                    HdlValueInt: 0
                                    HdlValueId: z_confdone
                                HdlStmAssign
                                    HdlValueId: Z3_CONFIGURING
                                    HdlValueId: zorro_state
                        list: elifs
                            tuple
                                HdlOp: AND_LOG
                                    list: ops
                                        HdlOp: AND_LOG
                                            list: ops
                                                HdlOp: GE
                                                    list: ops
                                                        HdlValueId: z3addr
                                                        HdlValueId: ram_low
                                                HdlOp: LE
                                                    list: ops
                                                        HdlValueId: z3addr
                                                        HdlValueId: ram_high
                                        HdlOp: NEG_LOG
                                            list: ops
                                                HdlValueId: zorro_read
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlStmAssign
                                            HdlValueInt: 1
                                            HdlValueId: slaven
                                        HdlStmIf
                                            HdlOp: OR_LOG
                                                list: ops
                                                    HdlOp: OR_LOG
                                                        list: ops
                                                            HdlOp: OR_LOG
                                                                list: ops
                                                                    HdlOp: EQ
                                                                        list: ops
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlValueId: znUDS_sync
                                                                                    HdlValueInt: 2
                                                                            HdlValueInt: 0
                                                                    HdlOp: EQ
                                                                        list: ops
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlValueId: znLDS_sync
                                                                                    HdlValueInt: 2
                                                                            HdlValueInt: 0
                                                            HdlOp: EQ
                                                                list: ops
                                                                    HdlOp: INDEX
                                                                        list: ops
                                                                            HdlValueId: znDS1_sync
                                                                            HdlValueInt: 2
                                                                    HdlValueInt: 0
                                                    HdlOp: EQ
                                                        list: ops
                                                            HdlOp: INDEX
                                                                list: ops
                                                                    HdlValueId: znDS0_sync
                                                                    HdlValueInt: 2
                                                            HdlValueInt: 0
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlStmAssign
                                                        HdlValueId: Z3_WRITE_UPPER
                                                        HdlValueId: zorro_state
                                            list: elifs
                            tuple
                                HdlOp: AND_LOG
                                    list: ops
                                        HdlOp: AND_LOG
                                            list: ops
                                                HdlOp: GE
                                                    list: ops
                                                        HdlValueId: z3addr
                                                        HdlValueId: ram_low
                                                HdlOp: LE
                                                    list: ops
                                                        HdlValueId: z3addr
                                                        HdlValueId: ram_high
                                        HdlValueId: zorro_read
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlStmAssign
                                            HdlValueInt: 1
                                            HdlValueId: slaven
                                        HdlStmAssign
                                            HdlValueId: Z3_READ_UPPER
                                            HdlValueId: zorro_state
                            tuple
                                HdlOp: AND_LOG
                                    list: ops
                                        HdlOp: AND_LOG
                                            list: ops
                                                HdlValueId: zorro_write
                                                HdlOp: GE
                                                    list: ops
                                                        HdlValueId: z3addr
                                                        HdlValueId: reg_low
                                        HdlOp: LE
                                            list: ops
                                                HdlValueId: z3addr
                                                HdlValueId: reg_high
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlStmAssign
                                            HdlValueInt: 1
                                            HdlValueId: slaven
                                        HdlStmIf
                                            HdlOp: EQ
                                                list: ops
                                                    HdlOp: INDEX
                                                        list: ops
                                                            HdlValueId: znDS1_sync
                                                            HdlValueInt: 2
                                                    HdlValueInt: 0
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlStmAssign
                                                        HdlValueId: data_in_z3_low16
                                                        HdlValueId: regdata_in
                                                    HdlStmAssign
                                                        HdlOp: OR
                                                            list: ops
                                                                HdlOp: INDEX
                                                                    list: ops
                                                                        HdlValueId: z3addr
                                                                        HdlOp: DOWNTO
                                                                            list: ops
                                                                                HdlValueInt: 15
                                                                                HdlValueInt: 0
                                                                HdlValueInt: 2
                                                        HdlValueId: zaddr_regpart
                                                    HdlStmAssign
                                                        HdlValueId: REGWRITE
                                                        HdlValueId: zorro_state
                                            list: elifs
                                                tuple
                                                    HdlOp: EQ
                                                        list: ops
                                                            HdlOp: INDEX
                                                                list: ops
                                                                    HdlValueId: znUDS_sync
                                                                    HdlValueInt: 2
                                                            HdlValueInt: 0
                                                    HdlStmBlock: SEQ
                                                        list: body
                                                            HdlStmAssign
                                                                HdlValueId: zdata_in_sync
                                                                HdlValueId: regdata_in
                                                            HdlStmAssign
                                                                HdlOp: INDEX
                                                                    list: ops
                                                                        HdlValueId: z3addr
                                                                        HdlOp: DOWNTO
                                                                            list: ops
                                                                                HdlValueInt: 15
                                                                                HdlValueInt: 0
                                                                HdlValueId: zaddr_regpart
                                                            HdlStmAssign
                                                                HdlValueId: REGWRITE
                                                                HdlValueId: zorro_state
                            tuple
                                HdlOp: AND_LOG
                                    list: ops
                                        HdlOp: AND_LOG
                                            list: ops
                                                HdlValueId: zorro_read
                                                HdlOp: GE
                                                    list: ops
                                                        HdlValueId: z3addr
                                                        HdlValueId: reg_low
                                        HdlOp: LE
                                            list: ops
                                                HdlValueId: z3addr
                                                HdlValueId: reg_high
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlStmAssign
                                            HdlValueInt: 1
                                            HdlValueId: slaven
                                        HdlStmAssign
                                            HdlValueInt: 1
                                            HdlValueId: dataout_enable
                                        HdlStmAssign
                                            HdlValueInt: 1
                                            HdlValueId: dataout_z3
                                        HdlStmAssign
                                            HdlValueInt: 0
                                            HdlValueId: data
                                        HdlStmIf
                                            HdlOp: EQ
                                                list: ops
                                                    HdlOp: INDEX
                                                        list: ops
                                                            HdlValueId: znDS1_sync
                                                            HdlValueInt: 2
                                                    HdlValueInt: 0
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlStmAssign
                                                        HdlValueId: data_in_z3_low16
                                                        HdlValueId: regdata_in
                                                    HdlStmAssign
                                                        HdlOp: OR
                                                            list: ops
                                                                HdlOp: INDEX
                                                                    list: ops
                                                                        HdlValueId: z3addr
                                                                        HdlOp: DOWNTO
                                                                            list: ops
                                                                                HdlValueInt: 15
                                                                                HdlValueInt: 0
                                                                HdlValueInt: 2
                                                        HdlValueId: zaddr_regpart
                                                    HdlStmAssign
                                                        HdlValueId: REGREAD
                                                        HdlValueId: zorro_state
                                            list: elifs
                                                tuple
                                                    HdlOp: EQ
                                                        list: ops
                                                            HdlOp: INDEX
                                                                list: ops
                                                                    HdlValueId: znUDS_sync
                                                                    HdlValueInt: 2
                                                            HdlValueInt: 0
                                                    HdlStmBlock: SEQ
                                                        list: body
                                                            HdlStmAssign
                                                                HdlValueId: zdata_in_sync
                                                                HdlValueId: regdata_in
                                                            HdlStmAssign
                                                                HdlOp: INDEX
                                                                    list: ops
                                                                        HdlValueId: z3addr
                                                                        HdlOp: DOWNTO
                                                                            list: ops
                                                                                HdlValueInt: 15
                                                                                HdlValueInt: 0
                                                                HdlValueId: zaddr_regpart
                                                            HdlStmAssign
                                                                HdlValueId: REGREAD
                                                                HdlValueId: zorro_state
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmAssign
                                    HdlValueInt: 0
                                    HdlValueId: slaven
                                HdlStmAssign
                                    HdlValueInt: 0
                                    HdlValueId: dtack
                                HdlStmAssign
                                    HdlValueInt: 0
                                    HdlValueId: dataout_enable
                                HdlStmAssign
                                    HdlValueInt: 0
                                    HdlValueId: dataout_z3
    HdlStmBlock: SEQ
        list: body
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: slaven
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: dtack
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: dataout_enable
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: dataout_z3

UPD HdlStmIf@@ to 
    INS list@@elifs to 

UPD HdlStmAssign@@ to 
    UPD HdlValueId@@Z3_CONFIGURING to RESET

DEL HdlStmAssign@@ from body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: z_confdone


CommitId: feb6a57b534d7a4afb9a11858adb2e3146131146
fix wip
--- a/z2-minispartan/z2.v
+++ b/z2-minispartan/z2.v
@@ -1161,6 +1168,11 @@ always @(posedge z_sample_clk) begin
       zorro_state <= Z3_ENDCYCLE;
       
       case (zaddr_regpart)
+        'h20: data_z3_low16 <= blitter_x1;
+        'h22: data_z3_low16 <= blitter_y1;
+        'h24: data_z3_low16 <= blitter_x2;
+        'h26: data_z3_low16 <= blitter_y2;
+        'h28: data_z3_low16 <= blitter_rgb;
         'h2a: data_z3_low16 <= blitter_enable;
         
         'h60: data_z3_low16 <= sd_busy;
ParseResult:
UPD HdlStmCase@@zorro_state to zorro_state
    INS HdlStmCaseType@@CASE to zorro_state
    INS HdlValueId@@zorro_state to zorro_state
    INS tuple@@ to cases
    INS HdlValueId@@PAUSE to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@Z3_IDLE to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmCase@@zorro_state to zorro_state
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlStmIf
                HdlValueId: znCFGIN
                HdlStmBlock: SEQ
                    list: body
                        HdlStmAssign
                            HdlValueInt: 0
                            HdlValueId: z_confdone
                        HdlStmAssign
                            HdlValueId: Z3_CONFIGURING
                            HdlValueId: zorro_state
                list: elifs
                    tuple
                        HdlOp: EQ
                            list: ops
                                HdlOp: INDEX
                                    list: ops
                                        HdlValueId: znFCS_sync
                                        HdlValueInt: 2
                                HdlValueInt: 0
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmIf
                                    HdlOp: EQ
                                        list: ops
                                            HdlValueId: z3addr
                                            HdlValueInt: 00000000
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmAssign
                                                HdlValueInt: 0
                                                HdlValueId: z_confdone
                                            HdlStmAssign
                                                HdlValueId: Z3_CONFIGURING
                                                HdlValueId: zorro_state
                                    list: elifs
                                        tuple
                                            HdlOp: AND_LOG
                                                list: ops
                                                    HdlOp: AND_LOG
                                                        list: ops
                                                            HdlOp: GE
                                                                list: ops
                                                                    HdlValueId: z3addr
                                                                    HdlValueId: ram_low
                                                            HdlOp: LE
                                                                list: ops
                                                                    HdlValueId: z3addr
                                                                    HdlValueId: ram_high
                                                    HdlOp: NEG_LOG
                                                        list: ops
                                                            HdlValueId: zorro_read
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlStmAssign
                                                        HdlValueInt: 1
                                                        HdlValueId: slaven
                                                    HdlStmIf
                                                        HdlOp: OR_LOG
                                                            list: ops
                                                                HdlOp: OR_LOG
                                                                    list: ops
                                                                        HdlOp: OR_LOG
                                                                            list: ops
                                                                                HdlOp: EQ
                                                                                    list: ops
                                                                                        HdlOp: INDEX
                                                                                            list: ops
                                                                                                HdlValueId: znUDS_sync
                                                                                                HdlValueInt: 2
                                                                                        HdlValueInt: 0
                                                                                HdlOp: EQ
                                                                                    list: ops
                                                                                        HdlOp: INDEX
                                                                                            list: ops
                                                                                                HdlValueId: znLDS_sync
                                                                                                HdlValueInt: 2
                                                                                        HdlValueInt: 0
                                                                        HdlOp: EQ
                                                                            list: ops
                                                                                HdlOp: INDEX
                                                                                    list: ops
                                                                                        HdlValueId: znDS1_sync
                                                                                        HdlValueInt: 2
                                                                                HdlValueInt: 0
                                                                HdlOp: EQ
                                                                    list: ops
                                                                        HdlOp: INDEX
                                                                            list: ops
                                                                                HdlValueId: znDS0_sync
                                                                                HdlValueInt: 2
                                                                        HdlValueInt: 0
                                                        HdlStmBlock: SEQ
                                                            list: body
                                                                HdlStmAssign
                                                                    HdlValueId: Z3_WRITE_UPPER
                                                                    HdlValueId: zorro_state
                                                        list: elifs
                                        tuple
                                            HdlOp: AND_LOG
                                                list: ops
                                                    HdlOp: AND_LOG
                                                        list: ops
                                                            HdlOp: GE
                                                                list: ops
                                                                    HdlValueId: z3addr
                                                                    HdlValueId: ram_low
                                                            HdlOp: LE
                                                                list: ops
                                                                    HdlValueId: z3addr
                                                                    HdlValueId: ram_high
                                                    HdlValueId: zorro_read
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlStmAssign
                                                        HdlValueInt: 1
                                                        HdlValueId: slaven
                                                    HdlStmAssign
                                                        HdlValueId: Z3_READ_UPPER
                                                        HdlValueId: zorro_state
                                        tuple
                                            HdlOp: AND_LOG
                                                list: ops
                                                    HdlOp: AND_LOG
                                                        list: ops
                                                            HdlValueId: zorro_write
                                                            HdlOp: GE
                                                                list: ops
                                                                    HdlValueId: z3addr
                                                                    HdlValueId: reg_low
                                                    HdlOp: LE
                                                        list: ops
                                                            HdlValueId: z3addr
                                                            HdlValueId: reg_high
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlStmAssign
                                                        HdlValueInt: 1
                                                        HdlValueId: slaven
                                                    HdlStmIf
                                                        HdlOp: EQ
                                                            list: ops
                                                                HdlOp: INDEX
                                                                    list: ops
                                                                        HdlValueId: znDS1_sync
                                                                        HdlValueInt: 2
                                                                HdlValueInt: 0
                                                        HdlStmBlock: SEQ
                                                            list: body
                                                                HdlStmAssign
                                                                    HdlValueId: data_in_z3_low16
                                                                    HdlValueId: regdata_in
                                                                HdlStmAssign
                                                                    HdlOp: OR
                                                                        list: ops
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlValueId: z3addr
                                                                                    HdlOp: DOWNTO
                                                                                        list: ops
                                                                                            HdlValueInt: 15
                                                                                            HdlValueInt: 0
                                                                            HdlValueInt: 2
                                                                    HdlValueId: zaddr_regpart
                                                                HdlStmAssign
                                                                    HdlValueId: REGWRITE
                                                                    HdlValueId: zorro_state
                                                        list: elifs
                                                            tuple
                                                                HdlOp: EQ
                                                                    list: ops
                                                                        HdlOp: INDEX
                                                                            list: ops
                                                                                HdlValueId: znUDS_sync
                                                                                HdlValueInt: 2
                                                                        HdlValueInt: 0
                                                                HdlStmBlock: SEQ
                                                                    list: body
                                                                        HdlStmAssign
                                                                            HdlValueId: zdata_in_sync
                                                                            HdlValueId: regdata_in
                                                                        HdlStmAssign
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlValueId: z3addr
                                                                                    HdlOp: DOWNTO
                                                                                        list: ops
                                                                                            HdlValueInt: 15
                                                                                            HdlValueInt: 0
                                                                            HdlValueId: zaddr_regpart
                                                                        HdlStmAssign
                                                                            HdlValueId: REGWRITE
                                                                            HdlValueId: zorro_state
                                        tuple
                                            HdlOp: AND_LOG
                                                list: ops
                                                    HdlOp: AND_LOG
                                                        list: ops
                                                            HdlValueId: zorro_read
                                                            HdlOp: GE
                                                                list: ops
                                                                    HdlValueId: z3addr
                                                                    HdlValueId: reg_low
                                                    HdlOp: LE
                                                        list: ops
                                                            HdlValueId: z3addr
                                                            HdlValueId: reg_high
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlStmAssign
                                                        HdlValueInt: 1
                                                        HdlValueId: slaven
                                                    HdlStmAssign
                                                        HdlValueInt: 1
                                                        HdlValueId: dataout_enable
                                                    HdlStmAssign
                                                        HdlValueInt: 1
                                                        HdlValueId: dataout_z3
                                                    HdlStmAssign
                                                        HdlValueInt: 0
                                                        HdlValueId: data
                                                    HdlStmIf
                                                        HdlOp: EQ
                                                            list: ops
                                                                HdlOp: INDEX
                                                                    list: ops
                                                                        HdlValueId: znDS1_sync
                                                                        HdlValueInt: 2
                                                                HdlValueInt: 0
                                                        HdlStmBlock: SEQ
                                                            list: body
                                                                HdlStmAssign
                                                                    HdlValueId: data_in_z3_low16
                                                                    HdlValueId: regdata_in
                                                                HdlStmAssign
                                                                    HdlOp: OR
                                                                        list: ops
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlValueId: z3addr
                                                                                    HdlOp: DOWNTO
                                                                                        list: ops
                                                                                            HdlValueInt: 15
                                                                                            HdlValueInt: 0
                                                                            HdlValueInt: 2
                                                                    HdlValueId: zaddr_regpart
                                                                HdlStmAssign
                                                                    HdlValueId: REGREAD
                                                                    HdlValueId: zorro_state
                                                        list: elifs
                                                            tuple
                                                                HdlOp: EQ
                                                                    list: ops
                                                                        HdlOp: INDEX
                                                                            list: ops
                                                                                HdlValueId: znUDS_sync
                                                                                HdlValueInt: 2
                                                                        HdlValueInt: 0
                                                                HdlStmBlock: SEQ
                                                                    list: body
                                                                        HdlStmAssign
                                                                            HdlValueId: zdata_in_sync
                                                                            HdlValueId: regdata_in
                                                                        HdlStmAssign
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlValueId: z3addr
                                                                                    HdlOp: DOWNTO
                                                                                        list: ops
                                                                                            HdlValueInt: 15
                                                                                            HdlValueInt: 0
                                                                            HdlValueId: zaddr_regpart
                                                                        HdlStmAssign
                                                                            HdlValueId: REGREAD
                                                                            HdlValueId: zorro_state
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmAssign
                                                HdlValueInt: 0
                                                HdlValueId: slaven
                                            HdlStmAssign
                                                HdlValueInt: 0
                                                HdlValueId: dtack
                                            HdlStmAssign
                                                HdlValueInt: 0
                                                HdlValueId: dataout_enable
                                            HdlStmAssign
                                                HdlValueInt: 0
                                                HdlValueId: dataout_z3
                HdlStmBlock: SEQ
                    list: body
                        HdlStmAssign
                            HdlValueInt: 0
                            HdlValueId: slaven
                        HdlStmAssign
                            HdlValueInt: 0
                            HdlValueId: dtack
                        HdlStmAssign
                            HdlValueInt: 0
                            HdlValueId: dataout_enable
                        HdlStmAssign
                            HdlValueInt: 0
                            HdlValueId: dataout_z3
    DEL HdlStmCaseType@@CASE from zorro_state
    DEL HdlValueId@@zorro_state from zorro_state
    DEL tuple@@ from cases
    tuple
        HdlValueId: PAUSE
        HdlStmBlock: SEQ
            list: body
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlValueId@@Z3_IDLE from 
    DEL tuple@@ from cases

UPD HdlStmCase@@zaddr_regpart to zaddr_regpart
    INS tuple@@ to cases
    tuple
        HdlValueInt: 20
        HdlStmAssign
            HdlValueId: blitter_x1
            HdlValueId: data_z3_low16
    INS tuple@@ to cases
    tuple
        HdlValueInt: 22
        HdlStmAssign
            HdlValueId: blitter_y1
            HdlValueId: data_z3_low16
    INS tuple@@ to cases
    tuple
        HdlValueInt: 24
        HdlStmAssign
            HdlValueId: blitter_x2
            HdlValueId: data_z3_low16
    INS tuple@@ to cases
    tuple
        HdlValueInt: 26
        HdlStmAssign
            HdlValueId: blitter_y2
            HdlValueId: data_z3_low16
    INS tuple@@ to cases
    tuple
        HdlValueInt: 28
        HdlStmAssign
            HdlValueId: blitter_rgb
            HdlValueId: data_z3_low16


CommitId: d8a08b1a977d4573a8d123f4d41137962d28fc71
beta release WIP. 32bit, fix some timing problems, introduce custom refresh, fix sd card drivers, sd card CRC, custom resolutions, fix z3 register read model
--- a/z2-minispartan/z2.v
+++ b/z2-minispartan/z2.v
@@ -44,30 +44,13 @@ output zDIR3,
 output zDIR4,
 inout [15:0] zD,
 
-// video input
-input videoHS,
-input videoVS,
-input videoR0,
-input videoR1,
-input videoR2,
-input videoR3,
-input videoG0,
-input videoG1,
-input videoG2,
-input videoG3,
-input videoB0,
-input videoB1,
-input videoB2,
-input videoB3,
-
 // SD
 output SD_nCS,
 output SD_MOSI,
 input  SD_MISO,
 output SD_SCLK,
-
-// leds
-//output reg [7:0] LEDS = 0,
+input SD_DAT1,
+input SD_DAT2,
 
 // SDRAM
 output SDRAM_CLK,  

ParseResult:
INS HdlIdDef@@SD_DAT1 to ports
HdlIdDef: SD_DAT1
    HdlValueId: wire
    HdlDirection: IN

INS HdlIdDef@@SD_DAT2 to ports
HdlIdDef: SD_DAT2
    HdlValueId: wire
    HdlDirection: IN

DEL HdlIdDef@@videoHS from ports
HdlIdDef: videoHS
    HdlValueId: wire
    HdlDirection: IN

DEL HdlIdDef@@videoVS from ports
HdlIdDef: videoVS
    HdlValueId: wire
    HdlDirection: IN

DEL HdlIdDef@@videoR0 from ports
HdlIdDef: videoR0
    HdlValueId: wire
    HdlDirection: IN

DEL HdlIdDef@@videoR1 from ports
HdlIdDef: videoR1
    HdlValueId: wire
    HdlDirection: IN

DEL HdlIdDef@@videoR2 from ports
HdlIdDef: videoR2
    HdlValueId: wire
    HdlDirection: IN

DEL HdlIdDef@@videoR3 from ports
HdlIdDef: videoR3
    HdlValueId: wire
    HdlDirection: IN

DEL HdlIdDef@@videoG0 from ports
HdlIdDef: videoG0
    HdlValueId: wire
    HdlDirection: IN

DEL HdlIdDef@@videoG1 from ports
HdlIdDef: videoG1
    HdlValueId: wire
    HdlDirection: IN

DEL HdlIdDef@@videoG2 from ports
HdlIdDef: videoG2
    HdlValueId: wire
    HdlDirection: IN

DEL HdlIdDef@@videoG3 from ports
HdlIdDef: videoG3
    HdlValueId: wire
    HdlDirection: IN

DEL HdlIdDef@@videoB0 from ports
HdlIdDef: videoB0
    HdlValueId: wire
    HdlDirection: IN

DEL HdlIdDef@@videoB1 from ports
HdlIdDef: videoB1
    HdlValueId: wire
    HdlDirection: IN

DEL HdlIdDef@@videoB2 from ports
HdlIdDef: videoB2
    HdlValueId: wire
    HdlDirection: IN

DEL HdlIdDef@@videoB3 from ports
HdlIdDef: videoB3
    HdlValueId: wire
    HdlDirection: IN


CommitId: d8a08b1a977d4573a8d123f4d41137962d28fc71
beta release WIP. 32bit, fix some timing problems, introduce custom refresh, fix sd card drivers, sd card CRC, custom resolutions, fix z3 register read model
--- a/z2-minispartan/z2.v
+++ b/z2-minispartan/z2.v
@@ -265,31 +260,29 @@ reg [11:0] display_x = 0;
 reg [11:0] display_x2 = 0;
 reg [11:0] display_x3 = 0;
 
-parameter h_rez        = 1280;
-parameter h_sync_start = h_rez+72;
-parameter h_sync_end   = h_rez+80;
-parameter h_max        = 1647;
-
-parameter v_rez        = 720;
-parameter v_sync_start = v_rez+3;
-parameter v_sync_end   = v_rez+3+5;
-parameter v_max        = 749;
-
-reg ZORRO3 = 1;
-
+// modeline
+reg [11:0] h_rez        = 1280;
+reg [11:0] h_sync_start = 1280+72;
+reg [11:0] h_sync_end   = 1280+80;
+reg [11:0] h_max        = 1647;
+reg [11:0] v_rez        = 720;
+reg [11:0] v_sync_start = 720+3;
+reg [11:0] v_sync_end   = 720+8;
+reg [11:0] v_max        = 749;
 reg [11:0] screen_w = 1280;
 reg [11:0] screen_h = 720;
 
 // zorro port buffers / flags
-
-reg [23:0] zaddr;
-reg [23:0] zaddr_sync;
-reg [23:0] zaddr_sync2;
+reg ZORRO3 = 1;
+reg [23:0] zaddr; // zorro 2 address
+reg [31:0] zaddr_sync;
+reg [31:0] zaddr_sync2;
 reg [23:0] z2_mapped_addr;
 reg [15:0] data;
-reg [15:0] data_z3_low16;
 reg [15:0] data_in;
 reg [15:0] regdata_in;
+reg [15:0] data_z3_hi16;
+reg [15:0] data_z3_low16;
 reg [15:0] data_in_z3_low16;
 reg [15:0] zdata_in_sync;
 reg [15:0] z3_din_high_s2;

ParseResult:
MOV HdlIdDef@@zaddr_sync to objs
HdlIdDef: zaddr_sync
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 23
                    HdlValueInt: 0
    HdlDirection: INTERNAL

MOV HdlIdDef@@ZORRO3 to objs
HdlIdDef: ZORRO3
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
    HdlValueInt: 1
    HdlDirection: INTERNAL

MOV HdlIdDef@@data_z3_low16 to objs
HdlIdDef: data_z3_low16
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 15
                    HdlValueInt: 0
    HdlDirection: INTERNAL

UPD HdlIdDef@@zaddr_sync to refresh_addr

INS HdlIdDef@@h_rez to objs
HdlIdDef: h_rez
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 11
                    HdlValueInt: 0
    HdlValueInt: 1280
    HdlDirection: INTERNAL

INS HdlIdDef@@h_sync_start to objs
HdlIdDef: h_sync_start
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 11
                    HdlValueInt: 0
    HdlOp: ADD
        list: ops
            HdlValueInt: 1280
            HdlValueInt: 72
    HdlDirection: INTERNAL

INS HdlIdDef@@h_sync_end to objs
HdlIdDef: h_sync_end
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 11
                    HdlValueInt: 0
    HdlOp: ADD
        list: ops
            HdlValueInt: 1280
            HdlValueInt: 80
    HdlDirection: INTERNAL

INS HdlIdDef@@h_max to objs
HdlIdDef: h_max
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 11
                    HdlValueInt: 0
    HdlValueInt: 1647
    HdlDirection: INTERNAL

INS HdlIdDef@@v_rez to objs
HdlIdDef: v_rez
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 11
                    HdlValueInt: 0
    HdlValueInt: 720
    HdlDirection: INTERNAL

INS HdlIdDef@@v_sync_start to objs
HdlIdDef: v_sync_start
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 11
                    HdlValueInt: 0
    HdlOp: ADD
        list: ops
            HdlValueInt: 720
            HdlValueInt: 3
    HdlDirection: INTERNAL

INS HdlIdDef@@v_sync_end to objs
HdlIdDef: v_sync_end
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 11
                    HdlValueInt: 0
    HdlOp: ADD
        list: ops
            HdlValueInt: 720
            HdlValueInt: 8
    HdlDirection: INTERNAL

INS HdlIdDef@@v_max to objs
HdlIdDef: v_max
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 11
                    HdlValueInt: 0
    HdlValueInt: 749
    HdlDirection: INTERNAL

INS HdlIdDef@@zaddr_sync to objs
HdlIdDef: zaddr_sync
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 31
                    HdlValueInt: 0
    HdlDirection: INTERNAL

INS HdlIdDef@@zaddr_sync2 to objs
HdlIdDef: zaddr_sync2
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 31
                    HdlValueInt: 0
    HdlDirection: INTERNAL

INS HdlIdDef@@data_z3_hi16 to objs
HdlIdDef: data_z3_hi16
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 15
                    HdlValueInt: 0
    HdlDirection: INTERNAL

DEL HdlIdDef@@h_sync_start from params
HdlIdDef: h_sync_start
    HdlOp: ADD
        list: ops
            HdlValueId: h_rez
            HdlValueInt: 72
    HdlDirection: INTERNAL

DEL HdlIdDef@@h_sync_end from params
HdlIdDef: h_sync_end
    HdlOp: ADD
        list: ops
            HdlValueId: h_rez
            HdlValueInt: 80
    HdlDirection: INTERNAL

DEL HdlIdDef@@h_max from params
HdlIdDef: h_max
    HdlValueInt: 1647
    HdlDirection: INTERNAL

DEL HdlIdDef@@v_rez from params
HdlIdDef: v_rez
    HdlValueInt: 720
    HdlDirection: INTERNAL

DEL HdlIdDef@@v_sync_start from params
HdlIdDef: v_sync_start
    HdlOp: ADD
        list: ops
            HdlValueId: v_rez
            HdlValueInt: 3
    HdlDirection: INTERNAL

DEL HdlIdDef@@v_sync_end from params
HdlIdDef: v_sync_end
    HdlOp: ADD
        list: ops
            HdlOp: ADD
                list: ops
                    HdlValueId: v_rez
                    HdlValueInt: 3
            HdlValueInt: 5
    HdlDirection: INTERNAL

DEL HdlIdDef@@v_max from params
HdlIdDef: v_max
    HdlValueInt: 749
    HdlDirection: INTERNAL

DEL HdlIdDef@@zaddr_sync2 from objs
HdlIdDef: zaddr_sync2
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 23
                    HdlValueInt: 0
    HdlDirection: INTERNAL


CommitId: d8a08b1a977d4573a8d123f4d41137962d28fc71
beta release WIP. 32bit, fix some timing problems, introduce custom refresh, fix sd card drivers, sd card CRC, custom resolutions, fix z3 register read model
--- a/z2-minispartan/z2.v
+++ b/z2-minispartan/z2.v
@@ -298,15 +291,17 @@ reg [31:0] z3addr;
 reg [31:0] z3_mapped_addr;
 reg [31:0] z3_read_addr;
 reg [15:0] z3_read_data;
+reg [15:0] z3_regread_hi;
+reg [15:0] z3_regread_lo;
 
-reg burst_enabled = 1;
-
+// zorro data output stages
 reg dataout = 0;
 reg dataout_z3 = 0;
 reg dataout_enable = 0;
 reg slaven = 0;
 reg dtack = 0;
 
+// level shifter direction pins
 assign zDIR1     = (dataout_enable | dataout_z3); // d2-d9
 assign zDIR2     = (dataout_enable | dataout_z3); // d10-15, d0-d1
 assign zDIR3     = dataout_z3; // a16-a23 <- input

ParseResult:
MOV HdlIdDef@@burst_enabled to objs
HdlIdDef: burst_enabled
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
    HdlValueInt: 1
    HdlDirection: INTERNAL

INS HdlIdDef@@z3_regread_lo to objs
HdlIdDef: z3_regread_lo
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 15
                    HdlValueInt: 0
    HdlDirection: INTERNAL


CommitId: d8a08b1a977d4573a8d123f4d41137962d28fc71
beta release WIP. 32bit, fix some timing problems, introduce custom refresh, fix sd card drivers, sd card CRC, custom resolutions, fix z3 register read model
--- a/z2-minispartan/z2.v
+++ b/z2-minispartan/z2.v
@@ -319,36 +314,41 @@ assign znCINH = 1; //1'bZ; //0; // Z2 = /OVR
 assign znSLAVEN = (dataout && slaven)?1'b0:1'b1;
 assign znDTACK  = dtack?1'b0:1'bZ;
 
-assign zD  = (dataout | dataout_z3) ? data : 16'bzzzz_zzzz_zzzz_zzzz; // data = Z2: full 16 bit or Z3: upper 16 bit
+assign zD  = (dataout_z3) ? data_z3_hi16 : (dataout ? data : 16'bzzzz_zzzz_zzzz_zzzz); // data = Z2: full 16 bit or Z3: upper 16 bit
 assign zA  = (dataout_z3) ? {data_z3_low16, 7'bzzzz_zzz} : 23'bzzz_zzzz_zzzz_zzzz_zzzz_zzzz;
 
+// autoconf status
 reg z_confdone = 0;
-assign znCFGOUT = (~z_confdone)?1'bZ:1'b0; // inspired by z3sdram
+reg z3_confdone = 0;
+assign znCFGOUT = ((~z_confdone)&&(~z3_confdone))?1'bZ:1'b0; // inspired by z3sdram
 
 // zorro synchronizers
 // (inspired by https://github.com/endofexclusive/greta/blob/master/hdl/bus_interface/bus_interface.vhdl)
 
-reg [1:0] znAS_sync  = 2'b11;
+reg [4:0] znAS_sync  = 5'b11111;
 reg [2:0] znFCS_sync = 3'b111;
 reg [2:0] znUDS_sync = 3'b000;
 reg [2:0] znLDS_sync = 3'b000;
 reg [2:0] znDS1_sync = 3'b000;
 reg [2:0] znDS0_sync = 3'b000;
 reg [1:0] znRST_sync = 2'b11;
-reg [1:0] zREAD_sync = 2'b00;
+reg [4:0] zREAD_sync = 5'b00000;
 reg [1:0] zDOE_sync = 2'b00;
 reg [1:0] zE7M_sync = 2'b00;
+reg [2:0] znCFGIN_sync = 3'b000;
 
 reg [23:0] last_addr = 0;
 reg [23:0] last_read_addr = 0;
 reg [15:0] last_data = 0;
 reg [15:0] last_read_data = 0;
 
+// 8 bit palette regs
 reg [7:0] palette_r [0:255];
 reg [7:0] palette_g [0:255];
 reg [7:0] palette_b [0:255];
 
-reg [15:0] sprite_a1 [0:127];
+// sprites, currently disabled
+/*reg [15:0] sprite_a1 [0:127];
 reg [15:0] sprite_a2 [0:127];
 reg [10:0] sprite_ax = 0;
 reg [10:0] sprite_ay = 0;

ParseResult:
MOV HdlIdDef@@znAS_sync to objs
HdlIdDef: znAS_sync
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 1
                    HdlValueInt: 0
    HdlValueInt: 11
    HdlDirection: INTERNAL

MOV HdlIdDef@@sprite_a1 to objs
HdlIdDef: sprite_a1
    HdlOp: INDEX
        list: ops
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 15
                            HdlValueInt: 0
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 0
                    HdlValueInt: 127
    HdlDirection: INTERNAL

MOV HdlIdDef@@sprite_a2 to objs
HdlIdDef: sprite_a2
    HdlOp: INDEX
        list: ops
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 15
                            HdlValueInt: 0
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 0
                    HdlValueInt: 127
    HdlDirection: INTERNAL

MOV HdlIdDef@@sprite_bit to objs
HdlIdDef: sprite_bit
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 4
                    HdlValueInt: 0
    HdlValueInt: 15
    HdlDirection: INTERNAL

UPD HdlIdDef@@znAS_sync to vga_clk_sel

UPD HdlIdDef@@sprite_a1 to refresh_counter

UPD HdlIdDef@@sprite_a2 to refresh_time

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: TERNARY
        list: ops
            HdlValueId: dataout_z3
            HdlValueId: data_z3_hi16
            HdlOp: TERNARY
                list: ops
                    HdlValueId: dataout
                    HdlValueId: data
                    HdlValueInt: zzzzzzzzzzzzzzzz
    HdlValueId: zD

INS HdlStmAssign@@ to objs

INS HdlIdDef@@znAS_sync to objs
HdlIdDef: znAS_sync
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 4
                    HdlValueInt: 0
    HdlValueInt: 11111
    HdlDirection: INTERNAL

UPD HdlIdDef@@sprite_bit to zREAD_sync

UPD HdlIdDef@@znAS_sync to znAS_sync
    UPD HdlValueInt@@11 to 0

UPD HdlIdDef@@sprite_a1 to sprite_a1
    UPD HdlOp@@INDEX to INDEX
        MOV HdlOp@@PARAMETRIZATION to ops
        HdlOp: PARAMETRIZATION
            list: ops
                HdlValueId: reg
                HdlOp: DOWNTO
                    list: ops
                        HdlValueInt: 15
                        HdlValueInt: 0
        UPD HdlOp@@DOWNTO to DOWNTO
            MOV HdlValueInt@@0 to ops
            HdlValueInt: 0
            DEL HdlValueInt@@127 from ops
            DEL list@@ops from DOWNTO
        DEL HdlOp@@DOWNTO from ops
        DEL list@@ops from INDEX
    DEL HdlOp@@INDEX from sprite_a1

UPD HdlIdDef@@sprite_a2 to sprite_a2
    UPD HdlOp@@INDEX to INDEX
        MOV HdlOp@@PARAMETRIZATION to ops
        HdlOp: PARAMETRIZATION
            list: ops
                HdlValueId: reg
                HdlOp: DOWNTO
                    list: ops
                        HdlValueInt: 15
                        HdlValueInt: 0
        UPD HdlOp@@DOWNTO to DOWNTO
            UPD HdlValueInt@@127 to 128
            MOV HdlValueInt@@127 to ops
            HdlValueInt: 127
            DEL HdlValueInt@@0 from ops
            DEL list@@ops from DOWNTO
        DEL HdlOp@@DOWNTO from ops
        DEL list@@ops from INDEX
    DEL HdlOp@@INDEX from sprite_a2

UPD HdlStmAssign@@ to 
    INS HdlOp@@TERNARY to 
    INS HdlValueId@@znCFGOUT to 
    UPD HdlOp@@TERNARY to TERNARY
        INS list@@ops to TERNARY
        INS HdlValueInt@@z to ops
        INS HdlValueInt@@0 to ops
        UPD HdlOp@@AND_LOG to AND_LOG
            INS HdlOp@@NEG to ops
            HdlOp: NEG
                list: ops
                    HdlValueId: z3_confdone

UPD HdlIdDef@@sprite_bit to sprite_bit
    UPD HdlValueInt@@15 to 00000

UPD HdlStmAssign@@ to 
    UPD HdlOp@@TERNARY to AND_LOG
    MOV HdlOp@@TERNARY to 
    HdlOp: TERNARY
        list: ops
            HdlOp: NEG
                list: ops
                    HdlValueId: z_confdone
            HdlValueInt: z
            HdlValueInt: 0
    UPD HdlOp@@TERNARY to TERNARY
        DEL HdlValueInt@@z from ops
        DEL HdlValueInt@@0 from ops
    DEL HdlValueId@@znCFGOUT from 

DEL HdlStmAssign@@ from objs
HdlStmAssign
    HdlOp: TERNARY
        list: ops
            HdlOp: OR
                list: ops
                    HdlValueId: dataout
                    HdlValueId: dataout_z3
            HdlValueId: data
            HdlValueInt: zzzzzzzzzzzzzzzz
    HdlValueId: zD

DEL HdlStmAssign@@ from objs

DEL HdlIdDef@@zREAD_sync from objs
HdlIdDef: zREAD_sync
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 1
                    HdlValueInt: 0
    HdlValueInt: 00
    HdlDirection: INTERNAL

DEL HdlIdDef@@sprite_ax from objs
HdlIdDef: sprite_ax
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 10
                    HdlValueInt: 0
    HdlValueInt: 0
    HdlDirection: INTERNAL

DEL HdlIdDef@@sprite_ay from objs
HdlIdDef: sprite_ay
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 10
                    HdlValueInt: 0
    HdlValueInt: 0
    HdlDirection: INTERNAL

DEL HdlIdDef@@sprite_ax2 from objs
HdlIdDef: sprite_ax2
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 10
                    HdlValueInt: 0
    HdlValueInt: 15
    HdlDirection: INTERNAL

DEL HdlIdDef@@sprite_ay2 from objs
HdlIdDef: sprite_ay2
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 10
                    HdlValueInt: 0
    HdlValueInt: 15
    HdlDirection: INTERNAL

DEL HdlIdDef@@sprite_ptr from objs
HdlIdDef: sprite_ptr
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 7
                    HdlValueInt: 0
    HdlValueInt: 0
    HdlDirection: INTERNAL

DEL HdlIdDef@@sprite_pidx from objs
HdlIdDef: sprite_pidx
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 1
                    HdlValueInt: 0
    HdlValueInt: 0
    HdlDirection: INTERNAL


CommitId: d8a08b1a977d4573a8d123f4d41137962d28fc71
beta release WIP. 32bit, fix some timing problems, introduce custom refresh, fix sd card drivers, sd card CRC, custom resolutions, fix z3 register read model
--- a/z2-minispartan/z2.v
+++ b/z2-minispartan/z2.v
@@ -405,15 +404,15 @@ reg blitter_rgb32_t = 1;
 reg [3:0]  blitter_enable = 1; // 2a
 reg [23:0] blitter_base = 0;
 reg [23:0] blitter_ptr = 0;
-reg [10:0] blitter_curx = 0;
-reg [10:0] blitter_cury = 0;
-reg [10:0] blitter_curx2 = 0;
-reg [10:0] blitter_cury2 = 0;
+reg [11:0] blitter_curx = 0;
+reg [11:0] blitter_cury = 0;
+reg [11:0] blitter_curx2 = 0;
+reg [11:0] blitter_cury2 = 0;
 
 reg write_stall = 0;
 
-// video capture regs
-reg capture_mode = 0;
+// video capture regs (currently disabled)
+/*reg capture_mode = 0;
 reg [13:0] capture_x = 0;
 reg [13:0] capture_y = 0;
 reg [23:0] capture_ptr = 0;

ParseResult:
MOV HdlIdDef@@capture_mode to objs
HdlIdDef: capture_mode
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
    HdlValueInt: 0
    HdlDirection: INTERNAL

MOV HdlIdDef@@capture_freq to objs
HdlIdDef: capture_freq
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 5
                    HdlValueInt: 0
    HdlValueInt: 0a
    HdlDirection: INTERNAL

INS HdlIdDef@@blitter_cury to objs
HdlIdDef: blitter_cury
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 11
                    HdlValueInt: 0
    HdlValueInt: 0
    HdlDirection: INTERNAL

INS HdlIdDef@@blitter_curx2 to objs
HdlIdDef: blitter_curx2
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 11
                    HdlValueInt: 0
    HdlValueInt: 0
    HdlDirection: INTERNAL

INS HdlIdDef@@blitter_cury2 to objs
HdlIdDef: blitter_cury2
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 11
                    HdlValueInt: 0
    HdlValueInt: 0
    HdlDirection: INTERNAL

UPD HdlIdDef@@capture_mode to z3addr_zero

UPD HdlIdDef@@capture_freq to dvid_reset_counter

UPD HdlIdDef@@capture_freq to capture_freq
    UPD HdlValueInt@@0a to 0

DEL HdlIdDef@@blitter_cury from objs
HdlIdDef: blitter_cury
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 10
                    HdlValueInt: 0
    HdlValueInt: 0
    HdlDirection: INTERNAL

DEL HdlIdDef@@blitter_curx2 from objs
HdlIdDef: blitter_curx2
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 10
                    HdlValueInt: 0
    HdlValueInt: 0
    HdlDirection: INTERNAL

DEL HdlIdDef@@blitter_cury2 from objs
HdlIdDef: blitter_cury2
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 10
                    HdlValueInt: 0
    HdlValueInt: 0
    HdlDirection: INTERNAL

DEL HdlIdDef@@capture_x from objs
HdlIdDef: capture_x
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 13
                    HdlValueInt: 0
    HdlValueInt: 0
    HdlDirection: INTERNAL

DEL HdlIdDef@@capture_y from objs
HdlIdDef: capture_y
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 13
                    HdlValueInt: 0
    HdlValueInt: 0
    HdlDirection: INTERNAL

DEL HdlIdDef@@capture_ptr from objs
HdlIdDef: capture_ptr
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 23
                    HdlValueInt: 0
    HdlValueInt: 0
    HdlDirection: INTERNAL

DEL HdlIdDef@@capture_subx from objs
HdlIdDef: capture_subx
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 5
                    HdlValueInt: 0
    HdlValueInt: 0
    HdlDirection: INTERNAL

DEL HdlIdDef@@capture_prex from objs
HdlIdDef: capture_prex
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 7
                    HdlValueInt: 0
    HdlValueInt: 0
    HdlDirection: INTERNAL

DEL HdlIdDef@@capture_prey from objs
HdlIdDef: capture_prey
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 7
                    HdlValueInt: 0
    HdlValueInt: 0
    HdlDirection: INTERNAL

DEL HdlIdDef@@capture_porch from objs
HdlIdDef: capture_porch
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 7
                    HdlValueInt: 0
    HdlValueInt: 80
    HdlDirection: INTERNAL


CommitId: d8a08b1a977d4573a8d123f4d41137962d28fc71
beta release WIP. 32bit, fix some timing problems, introduce custom refresh, fix sd card drivers, sd card CRC, custom resolutions, fix z3 register read model
--- a/z2-minispartan/z2.v
+++ b/z2-minispartan/z2.v
@@ -483,18 +501,20 @@ always @(posedge z_sample_clk) begin
   znLDS_sync  <= {znLDS_sync[1:0],znLDS};
   znDS1_sync  <= {znDS1_sync[1:0],znDS1};
   znDS0_sync  <= {znDS0_sync[1:0],znDS0};
-  znAS_sync   <= {znAS_sync[0],znAS};
-  zREAD_sync  <= {zREAD_sync[0],zREAD};
+  znAS_sync   <= {znAS_sync[3:0],znAS};
+  zREAD_sync  <= {zREAD_sync[3:0],zREAD};
   zDOE_sync   <= {zDOE_sync[0],zDOE};
   zE7M_sync   <= {zE7M_sync[0],zE7M};
   znRST_sync  <= {znRST_sync[0],znRST};
+  znCFGIN_sync  <= {znCFGIN_sync[1:0],znCFGIN};
+  znFCS_sync <= {znFCS_sync[1:0],znFCS};
   
   data_in <= zD;
   data_in_z3_low16 <= zA[22:7]; // FIXME why sample this twice?
   zdata_in_sync <= data_in;
   
-  zorro_read  <= (zREAD_sync[1] & zREAD_sync[0]);
-  zorro_write <= (!zREAD_sync[1] & !zREAD_sync[0]);
+  zorro_read  <= (zREAD_sync[4:0]==5'b11111)?1'b1:1'b0; //(zREAD_sync[1] & zREAD_sync[0]);
+  zorro_write <= (zREAD_sync[1:0]==2'b00)?1'b1:1'b0; //(!zREAD_sync[1] & !zREAD_sync[0]);
   
   if (znUDS_sync[1]==0 || znLDS_sync[1]==0 || znDS1_sync[1]==0 || znDS0_sync[1]==0) begin
     z3_din_high_s2 <= zD;

ParseResult:
INS HdlStmAssign@@ to body
HdlStmAssign
    HdlOp: CONCAT
        list: ops
            HdlOp: INDEX
                list: ops
                    HdlValueId: znCFGIN_sync
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 1
                            HdlValueInt: 0
            HdlValueId: znCFGIN
    HdlValueId: znCFGIN_sync

UPD HdlStmAssign@@ to 
    UPD HdlOp@@AND to TERNARY
    UPD HdlOp@@AND to AND
        UPD HdlOp@@INDEX to INDEX
            MOV HdlValueInt@@0 to ops
            HdlValueInt: 0
            DEL HdlValueId@@zREAD_sync from ops
            DEL list@@ops from INDEX
        MOV HdlOp@@INDEX to ops
        HdlOp: INDEX
            list: ops
                HdlValueId: zREAD_sync
                HdlValueInt: 1
        UPD HdlOp@@INDEX to INDEX
            UPD HdlValueInt@@1 to 4
            MOV HdlValueInt@@1 to ops
            HdlValueInt: 1
        DEL HdlOp@@INDEX from ops

UPD HdlStmAssign@@ to 
    UPD HdlOp@@AND to TERNARY
    UPD HdlOp@@AND to AND
        UPD HdlOp@@NEG_LOG to EQ
        UPD HdlOp@@NEG_LOG to NEG_LOG
            UPD HdlOp@@INDEX to INDEX
                MOV HdlValueInt@@0 to ops
                HdlValueInt: 0
                DEL HdlValueId@@zREAD_sync from ops
                DEL list@@ops from INDEX
            DEL HdlOp@@INDEX from ops
            DEL list@@ops from NEG_LOG
        UPD HdlOp@@NEG_LOG to NEG_LOG
            UPD HdlOp@@INDEX to INDEX
                MOV HdlValueInt@@1 to ops
                HdlValueInt: 1
        DEL HdlOp@@NEG_LOG from ops


CommitId: d8a08b1a977d4573a8d123f4d41137962d28fc71
beta release WIP. 32bit, fix some timing problems, introduce custom refresh, fix sd card drivers, sd card CRC, custom resolutions, fix z3 register read model
--- a/z2-minispartan/z2.v
+++ b/z2-minispartan/z2.v
@@ -731,20 +713,16 @@ always @(posedge z_sample_clk) begin
           if (((znUDS_sync[2]==0) || (znLDS_sync[2]==0))) begin
             dtack_time <= 0;
             zorro_state <= Z3_DTACK;
-            //z_confdone <= 1;
-            //colormode <= 1;
             casex (z3addr[15:0])
               'hXX44: begin
                 ram_low[31:16] <= data_in;
-                z_confdone <= 1;
-                colormode <= 1;
+                z3_confdone <= 1;
               end
               'hXX48: begin
               end
               'hXX4c: begin
                 // shutup
-                z_confdone <= 1;
-                colormode <= 1;
+                z3_confdone <= 1;
               end
             endcase
           end

ParseResult:
UPD HdlStmCase@@zorro_state to zorro_state
    INS HdlStmCaseType@@CASE to zorro_state
    INS HdlValueId@@zorro_state to zorro_state
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS HdlValueId@@RESET to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@Z3_CONFIGURING to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@CONFIGURED to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@Z2_WARMUP to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@WAIT_READ3 to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@WAIT_READ2 to 
    INS HdlValueId@@WAIT_READ to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@RESET_DVID to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@REGREAD_POST to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@REGREAD to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmCase@@zorro_state to zorro_state
    MOV tuple@@ to cases
    tuple
        HdlValueId: PAUSE
        HdlStmBlock: SEQ
            list: body
                HdlStmIf
                    HdlValueId: zaddr_autoconfig
                    HdlStmBlock: SEQ
                        list: body
                            HdlStmAssign
                                HdlValueId: Z2_CONFIGURING
                                HdlValueId: zorro_state
                            HdlStmAssign
                                HdlValueInt: 0
                                HdlValueId: ZORRO3
                    list: elifs
                        tuple
                            HdlOp: EQ
                                list: ops
                                    HdlOp: INDEX
                                        list: ops
                                            HdlValueId: z3addr
                                            HdlOp: DOWNTO
                                                list: ops
                                                    HdlValueInt: 31
                                                    HdlValueInt: 16
                                    HdlValueInt: ff00
                            HdlStmBlock: SEQ
                                list: body
                                    HdlStmAssign
                                        HdlValueId: Z3_CONFIGURING
                                        HdlValueId: zorro_state
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlStmIf
                HdlOp: AND_LOG
                    list: ops
                        HdlOp: EQ
                            list: ops
                                HdlOp: INDEX
                                    list: ops
                                        HdlValueId: znAS_sync
                                        HdlValueInt: 1
                                HdlValueInt: 1
                        HdlOp: EQ
                            list: ops
                                HdlOp: INDEX
                                    list: ops
                                        HdlValueId: znAS_sync
                                        HdlValueInt: 0
                                HdlValueInt: 1
                HdlStmBlock: SEQ
                    list: body
                        HdlStmAssign
                            HdlValueInt: 0
                            HdlValueId: zorro_ram_read_request
                        HdlStmAssign
                            HdlValueId: Z2_IDLE
                            HdlValueId: zorro_state
                        HdlStmAssign
                            HdlValueInt: 1
                            HdlValueId: z_ready
                list: elifs
                    tuple
                        HdlValueId: zorro_ram_read_done
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmAssign
                                    HdlOp: ADD
                                        list: ops
                                            HdlValueId: read_counter
                                            HdlValueInt: 1
                                    HdlValueId: read_counter
                                HdlStmAssign
                                    HdlValueInt: 0
                                    HdlValueId: zorro_ram_read_request
                                HdlStmIf
                                    HdlOp: GE
                                        list: ops
                                            HdlValueId: read_counter
                                            HdlValueId: dataout_time
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmAssign
                                                HdlValueId: WAIT_READ
                                                HdlValueId: zorro_state
                                    list: elifs
                                HdlStmAssign
                                    HdlValueId: zorro_ram_read_data
                                    HdlValueId: data
    DEL HdlStmCaseType@@CASE from zorro_state
    DEL HdlValueId@@zorro_state from zorro_state
    DEL HdlValueId@@RESET from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases
    DEL HdlValueId@@Z3_CONFIGURING from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases
    DEL HdlValueId@@CONFIGURED from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlValueId@@WAIT_READ2 from 
    DEL tuple@@ from cases
    DEL HdlValueId@@WAIT_READ from 
    DEL tuple@@ from cases
    DEL HdlValueId@@REGREAD from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases

MOV HdlStmAssign@@ to body
HdlStmAssign
    HdlValueInt: 1
    HdlValueId: colormode

INS HdlStmIf@@ to body

UPD HdlStmIf@@ to 
    INS HdlOp@@AND_LOG to 
    INS HdlStmBlock@@SEQ to 
    INS list@@elifs to 
    UPD HdlOp@@AND_LOG to AND_LOG
        INS list@@ops to AND_LOG
        INS HdlOp@@AND_LOG to ops
        HdlOp: AND_LOG
            list: ops
                HdlOp: EQ
                    list: ops
                        HdlOp: NEG_LOG
                            list: ops
                                HdlOp: INDEX
                                    list: ops
                                        HdlValueId: znCFGIN_sync
                                        HdlValueInt: 2
                        HdlValueInt: 1
                HdlValueId: z3addr_autoconfig
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmIf@@ to 
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: dataout_z3
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: dataout_enable
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: slaven
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: dtack
    UPD HdlOp@@AND_LOG to AND_LOG
        MOV HdlOp@@EQ to ops
        HdlOp: EQ
            list: ops
                HdlOp: INDEX
                    list: ops
                        HdlValueId: znFCS_sync
                        HdlValueInt: 2
                HdlValueInt: 0
        DEL HdlOp@@AND_LOG from ops
        HdlOp: AND_LOG
            list: ops
                HdlOp: NEG_LOG
                    list: ops
                        HdlValueId: znCFGIN
                HdlOp: EQ
                    list: ops
                        HdlOp: INDEX
                            list: ops
                                HdlValueId: z3addr
                                HdlOp: DOWNTO
                                    list: ops
                                        HdlValueInt: 31
                                        HdlValueInt: 16
                        HdlValueInt: ff00
        DEL list@@ops from AND_LOG
    DEL HdlOp@@AND_LOG from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL list@@elifs from 

INS HdlStmIf@@ to body

UPD HdlStmIf@@ to 
    INS HdlValueId@@zorro_read to 
    INS HdlStmBlock@@SEQ to 
    INS list@@elifs to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmIf@@ to 
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlStmAssign
                HdlValueInt: 1
                HdlValueId: slaven
            HdlStmIf
                HdlOp: OR_LOG
                    list: ops
                        HdlOp: EQ
                            list: ops
                                HdlOp: INDEX
                                    list: ops
                                        HdlValueId: znUDS_sync
                                        HdlValueInt: 2
                                HdlValueInt: 0
                        HdlOp: EQ
                            list: ops
                                HdlOp: INDEX
                                    list: ops
                                        HdlValueId: znLDS_sync
                                        HdlValueInt: 2
                                HdlValueInt: 0
                HdlStmBlock: SEQ
                    list: body
                        HdlStmAssign
                            HdlValueInt: 0
                            HdlValueId: dtack_time
                        HdlStmAssign
                            HdlValueId: Z3_DTACK
                            HdlValueId: zorro_state
                        HdlStmCase: {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops':}]} 
                            HdlStmCaseType: CASEX
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: z3addr
                                    HdlOp: DOWNTO
                                        list: ops
                                            HdlValueInt: 15
                                            HdlValueInt: 0
                            list: cases
                                tuple
                                    HdlValueInt: xx44
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmAssign
                                                HdlValueId: data_in
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: ram_low
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 31
                                                                HdlValueInt: 16
                                            HdlStmAssign
                                                HdlValueInt: 1
                                                HdlValueId: z_confdone
                                            HdlStmAssign
                                                HdlValueInt: 1
                                                HdlValueId: colormode
                                tuple
                                    HdlValueInt: xx48
                                    HdlStmBlock: SEQ
                                        list: body
                                tuple
                                    HdlValueInt: xx4c
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmAssign
                                                HdlValueInt: 1
                                                HdlValueId: z_confdone
                                            HdlStmAssign
                                                HdlValueInt: 1
                                                HdlValueId: colormode
                list: elifs
    DEL HdlValueId@@zorro_read from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL list@@elifs from 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['z3addr',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '15'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['z3addr',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '15'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    INS HdlStmCaseType@@CASE to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['z3addr',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '15'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    INS list@@cases to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['z3addr',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '15'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    list: cases
        tuple
            HdlValueInt: 0000
            HdlStmAssign
                HdlValueInt: 1000111111111111
                HdlValueId: data_z3_hi16
        tuple
            HdlValueInt: 0100
            HdlStmAssign
                HdlValueInt: 0001111111111111
                HdlValueId: data_z3_hi16
        tuple
            HdlValueInt: 0004
            HdlStmAssign
                HdlValueInt: 1111111111111111
                HdlValueId: data_z3_hi16
        tuple
            HdlValueInt: 0104
            HdlStmAssign
                HdlValueInt: 1110111111111111
                HdlValueId: data_z3_hi16
        tuple
            HdlValueInt: 0008
            HdlStmAssign
                HdlValueInt: 0000111111111111
                HdlValueId: data_z3_hi16
        tuple
            HdlValueInt: 0108
            HdlStmAssign
                HdlValueInt: 1111111111111111
                HdlValueId: data_z3_hi16
        tuple
            HdlValueInt: 000c
            HdlStmAssign
                HdlValueInt: 1111111111111111
                HdlValueId: data_z3_hi16
        tuple
            HdlValueInt: 010c
            HdlStmAssign
                HdlValueInt: 1111111111111111
                HdlValueId: data_z3_hi16
        tuple
            HdlValueInt: 0010
            HdlStmAssign
                HdlValueInt: 1001111111111111
                HdlValueId: data_z3_hi16
        tuple
            HdlValueInt: 0110
            HdlStmAssign
                HdlValueInt: 0010111111111111
                HdlValueId: data_z3_hi16
        tuple
            HdlValueInt: 0014
            HdlStmAssign
                HdlValueInt: 1001111111111111
                HdlValueId: data_z3_hi16
        tuple
            HdlValueInt: 0114
            HdlStmAssign
                HdlValueInt: 0001111111111111
                HdlValueId: data_z3_hi16
        tuple
            HdlValueInt: 0018
            HdlStmAssign
                HdlValueInt: 1111111111111111
                HdlValueId: data_z3_hi16
        tuple
            HdlValueInt: 0118
            HdlStmAssign
                HdlValueInt: 1110111111111111
                HdlValueId: data_z3_hi16
        tuple
            HdlValueInt: 001c
            HdlStmAssign
                HdlValueInt: 1111111111111111
                HdlValueId: data_z3_hi16
        tuple
            HdlValueInt: 011c
            HdlStmAssign
                HdlValueInt: 1110111111111111
                HdlValueId: data_z3_hi16
        tuple
            HdlValueInt: 0020
            HdlStmAssign
                HdlValueInt: 1111111111111111
                HdlValueId: data_z3_hi16
        tuple
            HdlValueInt: 0120
            HdlStmAssign
                HdlValueInt: 1110111111111111
                HdlValueId: data_z3_hi16
        tuple
            HdlValueInt: 0024
            HdlStmAssign
                HdlValueInt: 1111111111111111
                HdlValueId: data_z3_hi16
        tuple
            HdlValueInt: 0124
            HdlStmAssign
                HdlValueInt: 1110111111111111
                HdlValueId: data_z3_hi16

UPD HdlStmAssign@@ to 
    UPD HdlValueId@@z_confdone to z3_confdone

UPD HdlStmAssign@@ to 
    UPD HdlValueId@@z_confdone to z3_confdone

DEL HdlStmAssign@@ from body
HdlStmAssign
    HdlValueInt: 1
    HdlValueId: colormode

DEL HdlStmIf@@ from body

DEL HdlStmIf@@ from body


CommitId: d8a08b1a977d4573a8d123f4d41137962d28fc71
beta release WIP. 32bit, fix some timing problems, introduce custom refresh, fix sd card drivers, sd card CRC, custom resolutions, fix z3 register read model
--- a/z2-minispartan/z2.v
+++ b/z2-minispartan/z2.v
@@ -765,15 +743,15 @@ always @(posedge z_sample_clk) begin
         dataout_enable <= 0;
         slaven <= 0;
         dtack_time <= 0;
-        if (z_confdone) begin
+        if (z3_confdone) begin
           zorro_state <= CONFIGURED;
-          ram_high  <= ram_low + ram_size-4;
-          reg_low   <= ram_low + reg_base;
-          reg_high  <= ram_low + reg_base + reg_size;
+          ram_high  <= ram_low + ram_size-'h10000-4;
+          reg_low   <= ram_low + ram_size-'h10000;
+          reg_high  <= ram_low + ram_size-'h10000 + reg_size;
         end else
           zorro_state <= Z3_CONFIGURING;
       end else begin
-        if (dtack_time < 3)
+        if (dtack_time < 2)
           dtack_time <= dtack_time + 1'b1;
         else
           dtack <= 1;

ParseResult:
UPD HdlStmCase@@zorro_state to zorro_state
    INS HdlStmCaseType@@CASE to zorro_state
    INS HdlValueId@@zorro_state to zorro_state
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS HdlValueId@@RESET to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@Z3_CONFIGURING to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@CONFIGURED to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@Z2_WARMUP to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@WAIT_READ3 to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@WAIT_READ2 to 
    INS HdlValueId@@WAIT_READ to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@RESET_DVID to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@REGREAD_POST to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@REGREAD to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmCase@@zorro_state to zorro_state
    MOV tuple@@ to cases
    tuple
        HdlValueId: PAUSE
        HdlStmBlock: SEQ
            list: body
                HdlStmIf
                    HdlValueId: zaddr_autoconfig
                    HdlStmBlock: SEQ
                        list: body
                            HdlStmAssign
                                HdlValueId: Z2_CONFIGURING
                                HdlValueId: zorro_state
                            HdlStmAssign
                                HdlValueInt: 0
                                HdlValueId: ZORRO3
                    list: elifs
                        tuple
                            HdlOp: EQ
                                list: ops
                                    HdlOp: INDEX
                                        list: ops
                                            HdlValueId: z3addr
                                            HdlOp: DOWNTO
                                                list: ops
                                                    HdlValueInt: 31
                                                    HdlValueInt: 16
                                    HdlValueInt: ff00
                            HdlStmBlock: SEQ
                                list: body
                                    HdlStmAssign
                                        HdlValueId: Z3_CONFIGURING
                                        HdlValueId: zorro_state
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlStmIf
                HdlOp: AND_LOG
                    list: ops
                        HdlOp: EQ
                            list: ops
                                HdlOp: INDEX
                                    list: ops
                                        HdlValueId: znAS_sync
                                        HdlValueInt: 1
                                HdlValueInt: 1
                        HdlOp: EQ
                            list: ops
                                HdlOp: INDEX
                                    list: ops
                                        HdlValueId: znAS_sync
                                        HdlValueInt: 0
                                HdlValueInt: 1
                HdlStmBlock: SEQ
                    list: body
                        HdlStmAssign
                            HdlValueInt: 0
                            HdlValueId: zorro_ram_read_request
                        HdlStmAssign
                            HdlValueId: Z2_IDLE
                            HdlValueId: zorro_state
                        HdlStmAssign
                            HdlValueInt: 1
                            HdlValueId: z_ready
                list: elifs
                    tuple
                        HdlValueId: zorro_ram_read_done
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmAssign
                                    HdlOp: ADD
                                        list: ops
                                            HdlValueId: read_counter
                                            HdlValueInt: 1
                                    HdlValueId: read_counter
                                HdlStmAssign
                                    HdlValueInt: 0
                                    HdlValueId: zorro_ram_read_request
                                HdlStmIf
                                    HdlOp: GE
                                        list: ops
                                            HdlValueId: read_counter
                                            HdlValueId: dataout_time
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmAssign
                                                HdlValueId: WAIT_READ
                                                HdlValueId: zorro_state
                                    list: elifs
                                HdlStmAssign
                                    HdlValueId: zorro_ram_read_data
                                    HdlValueId: data
    DEL HdlStmCaseType@@CASE from zorro_state
    DEL HdlValueId@@zorro_state from zorro_state
    DEL HdlValueId@@RESET from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases
    DEL HdlValueId@@Z3_CONFIGURING from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases
    DEL HdlValueId@@CONFIGURED from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlValueId@@WAIT_READ2 from 
    DEL tuple@@ from cases
    DEL HdlValueId@@WAIT_READ from 
    DEL tuple@@ from cases
    DEL HdlValueId@@REGREAD from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases

UPD HdlStmIf@@ to 
    UPD HdlValueId@@z_confdone to z3_confdone

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlOp: SUB
        list: ops
            HdlOp: SUB
                list: ops
                    HdlOp: ADD
                        list: ops
                            HdlValueId: ram_low
                            HdlValueId: ram_size
                    HdlValueInt: 10000
            HdlValueInt: 4
    HdlValueId: ram_high

UPD HdlStmIf@@ to 
    UPD HdlOp@@LT to LT
        UPD HdlValueInt@@3 to 2

UPD HdlStmAssign@@ to 
    UPD HdlValueId@@ram_high to reg_low
    UPD HdlOp@@SUB to SUB
        UPD HdlValueInt@@4 to 10000

UPD HdlStmAssign@@ to 
    UPD HdlOp@@ADD to ADD
        INS HdlOp@@SUB to ops
        UPD HdlOp@@SUB to SUB
            INS list@@ops to SUB
            INS HdlValueInt@@10000 to ops

UPD HdlStmAssign@@ to 
    UPD HdlOp@@ADD to ADD
        MOV HdlOp@@ADD to ops
        HdlOp: ADD
            list: ops
                HdlValueId: ram_low
                HdlValueId: reg_base
        UPD HdlOp@@ADD to ADD
            UPD HdlValueId@@reg_base to ram_size

DEL HdlStmAssign@@ from body
HdlStmAssign
    HdlOp: ADD
        list: ops
            HdlValueId: ram_low
            HdlValueId: reg_base
    HdlValueId: reg_low

DEL HdlStmAssign@@ from body
HdlStmAssign
    HdlValueInt: 3
    HdlValueId: colormode


CommitId: d8a08b1a977d4573a8d123f4d41137962d28fc71
beta release WIP. 32bit, fix some timing problems, introduce custom refresh, fix sd card drivers, sd card CRC, custom resolutions, fix z3 register read model
--- a/z2-minispartan/z2.v
+++ b/z2-minispartan/z2.v
@@ -781,20 +759,20 @@ always @(posedge z_sample_clk) begin
     end
     
     Z2_CONFIGURING: begin
-      colormode <= 3;
-      if (zaddr_autoconfig && !znCFGIN) begin
+      // CHECK
+      if (zaddr_autoconfig && !znCFGIN_sync[2]) begin
         if (zorro_read) begin
           // read iospace 'he80000 (Autoconfig ROM)
           dataout_enable <= 1;
           dataout <= 1;
           slaven <= 1;
           
-          case (zaddr[7:0])
+          case (zaddr_sync2[7:0])
             8'h00: data <= 'b1100_1111_1111_1111; // zorro 2
             8'h02: data <= 'b0111_1111_1111_1111; // next board unrelated (0), 4mb
             
             8'h04: data <= 'b1111_1111_1111_1111; // product number
-            8'h06: data <= 'b1110_1111_1111_1111; // (23)
+            8'h06: data <= 'b1110_1111_1111_1111; // (1)
             
             8'h08: data <= 'b0011_1111_1111_1111; // flags inverted 0011
             8'h0a: data <= 'b1111_1111_1111_1111; // inverted zero

ParseResult:
UPD HdlStmCase@@zorro_state to zorro_state
    INS HdlStmCaseType@@CASE to zorro_state
    INS HdlValueId@@zorro_state to zorro_state
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS HdlValueId@@RESET to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@Z3_CONFIGURING to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@CONFIGURED to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@Z2_WARMUP to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@WAIT_READ3 to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@WAIT_READ2 to 
    INS HdlValueId@@WAIT_READ to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@RESET_DVID to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@REGREAD_POST to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@REGREAD to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmCase@@zorro_state to zorro_state
    MOV tuple@@ to cases
    tuple
        HdlValueId: PAUSE
        HdlStmBlock: SEQ
            list: body
                HdlStmIf
                    HdlValueId: zaddr_autoconfig
                    HdlStmBlock: SEQ
                        list: body
                            HdlStmAssign
                                HdlValueId: Z2_CONFIGURING
                                HdlValueId: zorro_state
                            HdlStmAssign
                                HdlValueInt: 0
                                HdlValueId: ZORRO3
                    list: elifs
                        tuple
                            HdlOp: EQ
                                list: ops
                                    HdlOp: INDEX
                                        list: ops
                                            HdlValueId: z3addr
                                            HdlOp: DOWNTO
                                                list: ops
                                                    HdlValueInt: 31
                                                    HdlValueInt: 16
                                    HdlValueInt: ff00
                            HdlStmBlock: SEQ
                                list: body
                                    HdlStmAssign
                                        HdlValueId: Z3_CONFIGURING
                                        HdlValueId: zorro_state
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlStmIf
                HdlOp: AND_LOG
                    list: ops
                        HdlOp: EQ
                            list: ops
                                HdlOp: INDEX
                                    list: ops
                                        HdlValueId: znAS_sync
                                        HdlValueInt: 1
                                HdlValueInt: 1
                        HdlOp: EQ
                            list: ops
                                HdlOp: INDEX
                                    list: ops
                                        HdlValueId: znAS_sync
                                        HdlValueInt: 0
                                HdlValueInt: 1
                HdlStmBlock: SEQ
                    list: body
                        HdlStmAssign
                            HdlValueInt: 0
                            HdlValueId: zorro_ram_read_request
                        HdlStmAssign
                            HdlValueId: Z2_IDLE
                            HdlValueId: zorro_state
                        HdlStmAssign
                            HdlValueInt: 1
                            HdlValueId: z_ready
                list: elifs
                    tuple
                        HdlValueId: zorro_ram_read_done
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmAssign
                                    HdlOp: ADD
                                        list: ops
                                            HdlValueId: read_counter
                                            HdlValueInt: 1
                                    HdlValueId: read_counter
                                HdlStmAssign
                                    HdlValueInt: 0
                                    HdlValueId: zorro_ram_read_request
                                HdlStmIf
                                    HdlOp: GE
                                        list: ops
                                            HdlValueId: read_counter
                                            HdlValueId: dataout_time
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmAssign
                                                HdlValueId: WAIT_READ
                                                HdlValueId: zorro_state
                                    list: elifs
                                HdlStmAssign
                                    HdlValueId: zorro_ram_read_data
                                    HdlValueId: data
    DEL HdlStmCaseType@@CASE from zorro_state
    DEL HdlValueId@@zorro_state from zorro_state
    DEL HdlValueId@@RESET from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases
    DEL HdlValueId@@Z3_CONFIGURING from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases
    DEL HdlValueId@@CONFIGURED from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlValueId@@WAIT_READ2 from 
    DEL tuple@@ from cases
    DEL HdlValueId@@WAIT_READ from 
    DEL tuple@@ from cases
    DEL HdlValueId@@REGREAD from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases

UPD HdlStmIf@@ to 
    UPD HdlOp@@AND_LOG to AND_LOG
        UPD HdlOp@@NEG_LOG to NEG_LOG
            INS list@@ops to NEG_LOG
            INS HdlOp@@INDEX to ops
            UPD HdlOp@@INDEX to INDEX
                INS HdlValueInt@@2 to ops

UPD HdlStmIf@@ to 
    UPD HdlOp@@AND_LOG to AND_LOG
        UPD HdlOp@@NEG_LOG to NEG_LOG
            MOV list@@ops to NEG_LOG
            list: ops
                HdlValueId: znCFGIN
            UPD HdlValueId@@znCFGIN to znCFGIN_sync

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['zaddr',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['zaddr_sync2',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['zaddr',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['zaddr',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    UPD HdlOp@@INDEX to INDEX
        UPD HdlValueId@@zaddr to zaddr_sync2


CommitId: d8a08b1a977d4573a8d123f4d41137962d28fc71
beta release WIP. 32bit, fix some timing problems, introduce custom refresh, fix sd card drivers, sd card CRC, custom resolutions, fix z3 register read model
--- a/z2-minispartan/z2.v
+++ b/z2-minispartan/z2.v
@@ -821,10 +799,11 @@ always @(posedge z_sample_clk) begin
         end else begin
           // write to autoconfig register
           if (datastrobe_synced) begin
-            case (zaddr[7:0])
+            case (zaddr_sync2[7:0])
               8'h48: begin
                 ram_low[31:24] <= 8'h0;
                 ram_low[23:20] <= zdata_in_sync[15:12];
+                ram_low[15:0] <= 16'h0;
                 zorro_state <= CONFIGURED; // configured
                 z_confdone <= 1;
                 colormode <= 1;

ParseResult:
UPD HdlStmCase@@zorro_state to zorro_state
    INS HdlStmCaseType@@CASE to zorro_state
    INS HdlValueId@@zorro_state to zorro_state
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS HdlValueId@@RESET to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@Z3_CONFIGURING to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@CONFIGURED to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@Z2_WARMUP to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@WAIT_READ3 to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@WAIT_READ2 to 
    INS HdlValueId@@WAIT_READ to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@RESET_DVID to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@REGREAD_POST to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@REGREAD to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmCase@@zorro_state to zorro_state
    MOV tuple@@ to cases
    tuple
        HdlValueId: PAUSE
        HdlStmBlock: SEQ
            list: body
                HdlStmIf
                    HdlValueId: zaddr_autoconfig
                    HdlStmBlock: SEQ
                        list: body
                            HdlStmAssign
                                HdlValueId: Z2_CONFIGURING
                                HdlValueId: zorro_state
                            HdlStmAssign
                                HdlValueInt: 0
                                HdlValueId: ZORRO3
                    list: elifs
                        tuple
                            HdlOp: EQ
                                list: ops
                                    HdlOp: INDEX
                                        list: ops
                                            HdlValueId: z3addr
                                            HdlOp: DOWNTO
                                                list: ops
                                                    HdlValueInt: 31
                                                    HdlValueInt: 16
                                    HdlValueInt: ff00
                            HdlStmBlock: SEQ
                                list: body
                                    HdlStmAssign
                                        HdlValueId: Z3_CONFIGURING
                                        HdlValueId: zorro_state
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlStmIf
                HdlOp: AND_LOG
                    list: ops
                        HdlOp: EQ
                            list: ops
                                HdlOp: INDEX
                                    list: ops
                                        HdlValueId: znAS_sync
                                        HdlValueInt: 1
                                HdlValueInt: 1
                        HdlOp: EQ
                            list: ops
                                HdlOp: INDEX
                                    list: ops
                                        HdlValueId: znAS_sync
                                        HdlValueInt: 0
                                HdlValueInt: 1
                HdlStmBlock: SEQ
                    list: body
                        HdlStmAssign
                            HdlValueInt: 0
                            HdlValueId: zorro_ram_read_request
                        HdlStmAssign
                            HdlValueId: Z2_IDLE
                            HdlValueId: zorro_state
                        HdlStmAssign
                            HdlValueInt: 1
                            HdlValueId: z_ready
                list: elifs
                    tuple
                        HdlValueId: zorro_ram_read_done
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmAssign
                                    HdlOp: ADD
                                        list: ops
                                            HdlValueId: read_counter
                                            HdlValueInt: 1
                                    HdlValueId: read_counter
                                HdlStmAssign
                                    HdlValueInt: 0
                                    HdlValueId: zorro_ram_read_request
                                HdlStmIf
                                    HdlOp: GE
                                        list: ops
                                            HdlValueId: read_counter
                                            HdlValueId: dataout_time
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmAssign
                                                HdlValueId: WAIT_READ
                                                HdlValueId: zorro_state
                                    list: elifs
                                HdlStmAssign
                                    HdlValueId: zorro_ram_read_data
                                    HdlValueId: data
    DEL HdlStmCaseType@@CASE from zorro_state
    DEL HdlValueId@@zorro_state from zorro_state
    DEL HdlValueId@@RESET from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases
    DEL HdlValueId@@Z3_CONFIGURING from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases
    DEL HdlValueId@@CONFIGURED from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlValueId@@WAIT_READ2 from 
    DEL tuple@@ from cases
    DEL HdlValueId@@WAIT_READ from 
    DEL tuple@@ from cases
    DEL HdlValueId@@REGREAD from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases

UPD HdlStmIf@@ to 
    UPD HdlOp@@AND_LOG to AND_LOG
        UPD HdlOp@@NEG_LOG to NEG_LOG
            INS list@@ops to NEG_LOG
            INS HdlOp@@INDEX to ops
            UPD HdlOp@@INDEX to INDEX
                INS HdlValueInt@@2 to ops

UPD HdlStmIf@@ to 
    UPD HdlOp@@AND_LOG to AND_LOG
        UPD HdlOp@@NEG_LOG to NEG_LOG
            MOV list@@ops to NEG_LOG
            list: ops
                HdlValueId: znCFGIN
            UPD HdlValueId@@znCFGIN to znCFGIN_sync

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['zaddr',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['zaddr_sync2',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['zaddr',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['zaddr',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    UPD HdlOp@@INDEX to INDEX
        UPD HdlValueId@@zaddr to zaddr_sync2

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueInt: 0
    HdlOp: INDEX
        list: ops
            HdlValueId: ram_low
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 15
                    HdlValueInt: 0

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueInt: 0
    HdlOp: INDEX
        list: ops
            HdlValueId: ram_low
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 15
                    HdlValueInt: 0


CommitId: d8a08b1a977d4573a8d123f4d41137962d28fc71
beta release WIP. 32bit, fix some timing problems, introduce custom refresh, fix sd card drivers, sd card CRC, custom resolutions, fix z3 register read model
--- a/z2-minispartan/z2.v
+++ b/z2-minispartan/z2.v
@@ -832,6 +811,7 @@ always @(posedge z_sample_clk) begin
               8'h4a: begin
                 ram_low[31:24] <= 8'h0;
                 ram_low[19:16] <= zdata_in_sync[15:12];
+                ram_low[15:0] <= 16'h0;
               end
               8'h4c: begin 
                 zorro_state <= CONFIGURED; // configured, shut up

ParseResult:
UPD HdlStmCase@@zorro_state to zorro_state
    INS HdlStmCaseType@@CASE to zorro_state
    INS HdlValueId@@zorro_state to zorro_state
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS HdlValueId@@RESET to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@Z3_CONFIGURING to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@CONFIGURED to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@Z2_WARMUP to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@WAIT_READ3 to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@WAIT_READ2 to 
    INS HdlValueId@@WAIT_READ to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@RESET_DVID to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@REGREAD_POST to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@REGREAD to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmCase@@zorro_state to zorro_state
    MOV tuple@@ to cases
    tuple
        HdlValueId: PAUSE
        HdlStmBlock: SEQ
            list: body
                HdlStmIf
                    HdlValueId: zaddr_autoconfig
                    HdlStmBlock: SEQ
                        list: body
                            HdlStmAssign
                                HdlValueId: Z2_CONFIGURING
                                HdlValueId: zorro_state
                            HdlStmAssign
                                HdlValueInt: 0
                                HdlValueId: ZORRO3
                    list: elifs
                        tuple
                            HdlOp: EQ
                                list: ops
                                    HdlOp: INDEX
                                        list: ops
                                            HdlValueId: z3addr
                                            HdlOp: DOWNTO
                                                list: ops
                                                    HdlValueInt: 31
                                                    HdlValueInt: 16
                                    HdlValueInt: ff00
                            HdlStmBlock: SEQ
                                list: body
                                    HdlStmAssign
                                        HdlValueId: Z3_CONFIGURING
                                        HdlValueId: zorro_state
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlStmIf
                HdlOp: AND_LOG
                    list: ops
                        HdlOp: EQ
                            list: ops
                                HdlOp: INDEX
                                    list: ops
                                        HdlValueId: znAS_sync
                                        HdlValueInt: 1
                                HdlValueInt: 1
                        HdlOp: EQ
                            list: ops
                                HdlOp: INDEX
                                    list: ops
                                        HdlValueId: znAS_sync
                                        HdlValueInt: 0
                                HdlValueInt: 1
                HdlStmBlock: SEQ
                    list: body
                        HdlStmAssign
                            HdlValueInt: 0
                            HdlValueId: zorro_ram_read_request
                        HdlStmAssign
                            HdlValueId: Z2_IDLE
                            HdlValueId: zorro_state
                        HdlStmAssign
                            HdlValueInt: 1
                            HdlValueId: z_ready
                list: elifs
                    tuple
                        HdlValueId: zorro_ram_read_done
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmAssign
                                    HdlOp: ADD
                                        list: ops
                                            HdlValueId: read_counter
                                            HdlValueInt: 1
                                    HdlValueId: read_counter
                                HdlStmAssign
                                    HdlValueInt: 0
                                    HdlValueId: zorro_ram_read_request
                                HdlStmIf
                                    HdlOp: GE
                                        list: ops
                                            HdlValueId: read_counter
                                            HdlValueId: dataout_time
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmAssign
                                                HdlValueId: WAIT_READ
                                                HdlValueId: zorro_state
                                    list: elifs
                                HdlStmAssign
                                    HdlValueId: zorro_ram_read_data
                                    HdlValueId: data
    DEL HdlStmCaseType@@CASE from zorro_state
    DEL HdlValueId@@zorro_state from zorro_state
    DEL HdlValueId@@RESET from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases
    DEL HdlValueId@@Z3_CONFIGURING from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases
    DEL HdlValueId@@CONFIGURED from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlValueId@@WAIT_READ2 from 
    DEL tuple@@ from cases
    DEL HdlValueId@@WAIT_READ from 
    DEL tuple@@ from cases
    DEL HdlValueId@@REGREAD from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases

UPD HdlStmIf@@ to 
    UPD HdlOp@@AND_LOG to AND_LOG
        UPD HdlOp@@NEG_LOG to NEG_LOG
            INS list@@ops to NEG_LOG
            INS HdlOp@@INDEX to ops
            UPD HdlOp@@INDEX to INDEX
                INS HdlValueInt@@2 to ops

UPD HdlStmIf@@ to 
    UPD HdlOp@@AND_LOG to AND_LOG
        UPD HdlOp@@NEG_LOG to NEG_LOG
            MOV list@@ops to NEG_LOG
            list: ops
                HdlValueId: znCFGIN
            UPD HdlValueId@@znCFGIN to znCFGIN_sync

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['zaddr',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['zaddr_sync2',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['zaddr',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['zaddr',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    UPD HdlOp@@INDEX to INDEX
        UPD HdlValueId@@zaddr to zaddr_sync2


CommitId: d8a08b1a977d4573a8d123f4d41137962d28fc71
beta release WIP. 32bit, fix some timing problems, introduce custom refresh, fix sd card drivers, sd card CRC, custom resolutions, fix z3 register read model
--- a/z2-minispartan/z2.v
+++ b/z2-minispartan/z2.v
@@ -909,7 +893,7 @@ always @(posedge z_sample_clk) begin
           dataout <= 1;
           
           z_ready <= 0;
-          zorro_state <= WAIT_READ2;
+          zorro_state <= WAIT_READ3;
           
         end else if (zorro_write && zaddr_in_ram) begin
           // write RAM          

ParseResult:
UPD HdlStmCase@@zorro_state to zorro_state
    INS HdlStmCaseType@@CASE to zorro_state
    INS HdlValueId@@zorro_state to zorro_state
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS HdlValueId@@RESET to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@Z3_CONFIGURING to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@CONFIGURED to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@Z2_WARMUP to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@WAIT_READ3 to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@WAIT_READ2 to 
    INS HdlValueId@@WAIT_READ to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@RESET_DVID to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@REGREAD_POST to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@REGREAD to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmCase@@zorro_state to zorro_state
    MOV tuple@@ to cases
    tuple
        HdlValueId: PAUSE
        HdlStmBlock: SEQ
            list: body
                HdlStmIf
                    HdlValueId: zaddr_autoconfig
                    HdlStmBlock: SEQ
                        list: body
                            HdlStmAssign
                                HdlValueId: Z2_CONFIGURING
                                HdlValueId: zorro_state
                            HdlStmAssign
                                HdlValueInt: 0
                                HdlValueId: ZORRO3
                    list: elifs
                        tuple
                            HdlOp: EQ
                                list: ops
                                    HdlOp: INDEX
                                        list: ops
                                            HdlValueId: z3addr
                                            HdlOp: DOWNTO
                                                list: ops
                                                    HdlValueInt: 31
                                                    HdlValueInt: 16
                                    HdlValueInt: ff00
                            HdlStmBlock: SEQ
                                list: body
                                    HdlStmAssign
                                        HdlValueId: Z3_CONFIGURING
                                        HdlValueId: zorro_state
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlStmIf
                HdlOp: AND_LOG
                    list: ops
                        HdlOp: EQ
                            list: ops
                                HdlOp: INDEX
                                    list: ops
                                        HdlValueId: znAS_sync
                                        HdlValueInt: 1
                                HdlValueInt: 1
                        HdlOp: EQ
                            list: ops
                                HdlOp: INDEX
                                    list: ops
                                        HdlValueId: znAS_sync
                                        HdlValueInt: 0
                                HdlValueInt: 1
                HdlStmBlock: SEQ
                    list: body
                        HdlStmAssign
                            HdlValueInt: 0
                            HdlValueId: zorro_ram_read_request
                        HdlStmAssign
                            HdlValueId: Z2_IDLE
                            HdlValueId: zorro_state
                        HdlStmAssign
                            HdlValueInt: 1
                            HdlValueId: z_ready
                list: elifs
                    tuple
                        HdlValueId: zorro_ram_read_done
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmAssign
                                    HdlOp: ADD
                                        list: ops
                                            HdlValueId: read_counter
                                            HdlValueInt: 1
                                    HdlValueId: read_counter
                                HdlStmAssign
                                    HdlValueInt: 0
                                    HdlValueId: zorro_ram_read_request
                                HdlStmIf
                                    HdlOp: GE
                                        list: ops
                                            HdlValueId: read_counter
                                            HdlValueId: dataout_time
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmAssign
                                                HdlValueId: WAIT_READ
                                                HdlValueId: zorro_state
                                    list: elifs
                                HdlStmAssign
                                    HdlValueId: zorro_ram_read_data
                                    HdlValueId: data
    DEL HdlStmCaseType@@CASE from zorro_state
    DEL HdlValueId@@zorro_state from zorro_state
    DEL HdlValueId@@RESET from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases
    DEL HdlValueId@@Z3_CONFIGURING from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases
    DEL HdlValueId@@CONFIGURED from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlValueId@@WAIT_READ2 from 
    DEL tuple@@ from cases
    DEL HdlValueId@@WAIT_READ from 
    DEL tuple@@ from cases
    DEL HdlValueId@@REGREAD from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases

UPD HdlStmIf@@ to 
    UPD HdlOp@@AND_LOG to AND_LOG
        MOV HdlOp@@EQ to ops
        HdlOp: EQ
            list: ops
                HdlOp: INDEX
                    list: ops
                        HdlValueId: znAS_sync
                        HdlValueInt: 1
                HdlValueInt: 0
        DEL HdlOp@@EQ from ops
        HdlOp: EQ
            list: ops
                HdlOp: INDEX
                    list: ops
                        HdlValueId: znAS_sync
                        HdlValueInt: 0
                HdlValueInt: 0
        DEL list@@ops from AND_LOG
    DEL HdlOp@@AND_LOG from 

UPD HdlStmIf@@ to 
    INS HdlOp@@EQ to 
    HdlOp: EQ
        list: ops
            HdlValueId: znAS_sync
            HdlValueInt: 00000

UPD HdlStmIf@@ to 
    INS HdlValueId@@dvid_reset to 
    INS HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlStmAssign
                HdlValueInt: 10
                HdlValueId: dvid_reset_counter
            HdlStmAssign
                HdlValueId: RESET_DVID
                HdlValueId: zorro_state
    INS tuple@@ to elifs
    UPD HdlOp@@AND_LOG to AND_LOG
        INS HdlOp@@AND_LOG to ops
        INS HdlOp@@NEG_LOG to ops
        UPD HdlOp@@AND_LOG to AND_LOG
            INS list@@ops to AND_LOG
            INS HdlValueId@@zaddr_autoconfig to ops
            UPD HdlOp@@EQ to EQ
                INS HdlValueId@@autoconf_low to ops
        UPD HdlOp@@NEG_LOG to NEG_LOG
            INS list@@ops to NEG_LOG
            INS HdlOp@@INDEX to ops
            UPD HdlOp@@INDEX to INDEX
                INS list@@ops to INDEX
                INS HdlValueInt@@2 to ops

UPD HdlStmIf@@ to 
    MOV HdlOp@@AND_LOG to 
    HdlOp: AND_LOG
        list: ops
            HdlOp: EQ
                list: ops
                    HdlValueId: zaddr_sync
                    HdlValueInt: 000000
            HdlValueId: znCFGIN
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: z_confdone
            HdlStmAssign
                HdlValueId: Z2_CONFIGURING
                HdlValueId: zorro_state
    UPD HdlOp@@AND_LOG to AND_LOG
        MOV HdlOp@@EQ to ops
        HdlOp: EQ
            list: ops
                HdlValueId: zaddr_sync
                HdlValueInt: 000000
        UPD HdlOp@@EQ to EQ
            UPD HdlValueId@@zaddr_sync to zaddr_sync2
            DEL HdlValueInt@@000000 from ops
        UPD HdlValueId@@znCFGIN to znCFGIN_sync
        MOV HdlValueId@@znCFGIN to ops
        HdlValueId: znCFGIN

UPD HdlStmAssign@@ to 
    INS HdlOp@@SRL to 
    INS HdlValueId@@last_addr to 
    UPD HdlOp@@SRL to SRL
        INS list@@ops to SRL
        INS HdlOp@@SUB to ops
        INS HdlValueInt@@1 to ops
        UPD HdlOp@@SUB to SUB
            INS list@@ops to SUB


CommitId: d8a08b1a977d4573a8d123f4d41137962d28fc71
beta release WIP. 32bit, fix some timing problems, introduce custom refresh, fix sd card drivers, sd card CRC, custom resolutions, fix z3 register read model
--- a/z2-minispartan/z2.v
+++ b/z2-minispartan/z2.v
@@ -936,20 +920,19 @@ always @(posedge z_sample_clk) begin
             'h28: data <= blitter_rgb;
             'h2a: data <= blitter_enable;
             
-            'h60: data <= sd_busy<<8;
-            'h62: data <= sd_read<<8;
-            'h64: data <= sd_write<<8;
-            'h66: data <= sd_handshake_out<<8;
+            'h60: data <= {sd_busy,8'h00};
+            'h62: data <= {sd_read,8'h00};
+            'h64: data <= {sd_write,8'h00};
+            'h66: data <= {sd_handshake_out,8'h00};
             'h68: data <= sd_addr_in[31:16];
             'h6a: data <= sd_addr_in[15:0];
-            'h6c: data <= sd_data_in<<8;
-            'h6e: data <= sd_data_out<<8;
+            'h6c: data <= sd_data_in;
+            'h6e: data <= sd_data_out;
             'h70: data <= sd_error;
-            'h72: data <= sd_clkdiv;
+            //'h72: data <= sd_clkdiv;
             
             default: data <= 'h0000;
           endcase
-         
         end        
       end else begin
         dataout <= 0;

ParseResult:
UPD HdlStmCase@@zorro_state to zorro_state
    INS HdlStmCaseType@@CASE to zorro_state
    INS HdlValueId@@zorro_state to zorro_state
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS HdlValueId@@RESET to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@Z3_CONFIGURING to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@CONFIGURED to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@Z2_WARMUP to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@WAIT_READ3 to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@WAIT_READ2 to 
    INS HdlValueId@@WAIT_READ to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@RESET_DVID to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@REGREAD_POST to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@REGREAD to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmCase@@zorro_state to zorro_state
    MOV tuple@@ to cases
    tuple
        HdlValueId: PAUSE
        HdlStmBlock: SEQ
            list: body
                HdlStmIf
                    HdlValueId: zaddr_autoconfig
                    HdlStmBlock: SEQ
                        list: body
                            HdlStmAssign
                                HdlValueId: Z2_CONFIGURING
                                HdlValueId: zorro_state
                            HdlStmAssign
                                HdlValueInt: 0
                                HdlValueId: ZORRO3
                    list: elifs
                        tuple
                            HdlOp: EQ
                                list: ops
                                    HdlOp: INDEX
                                        list: ops
                                            HdlValueId: z3addr
                                            HdlOp: DOWNTO
                                                list: ops
                                                    HdlValueInt: 31
                                                    HdlValueInt: 16
                                    HdlValueInt: ff00
                            HdlStmBlock: SEQ
                                list: body
                                    HdlStmAssign
                                        HdlValueId: Z3_CONFIGURING
                                        HdlValueId: zorro_state
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlStmIf
                HdlOp: AND_LOG
                    list: ops
                        HdlOp: EQ
                            list: ops
                                HdlOp: INDEX
                                    list: ops
                                        HdlValueId: znAS_sync
                                        HdlValueInt: 1
                                HdlValueInt: 1
                        HdlOp: EQ
                            list: ops
                                HdlOp: INDEX
                                    list: ops
                                        HdlValueId: znAS_sync
                                        HdlValueInt: 0
                                HdlValueInt: 1
                HdlStmBlock: SEQ
                    list: body
                        HdlStmAssign
                            HdlValueInt: 0
                            HdlValueId: zorro_ram_read_request
                        HdlStmAssign
                            HdlValueId: Z2_IDLE
                            HdlValueId: zorro_state
                        HdlStmAssign
                            HdlValueInt: 1
                            HdlValueId: z_ready
                list: elifs
                    tuple
                        HdlValueId: zorro_ram_read_done
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmAssign
                                    HdlOp: ADD
                                        list: ops
                                            HdlValueId: read_counter
                                            HdlValueInt: 1
                                    HdlValueId: read_counter
                                HdlStmAssign
                                    HdlValueInt: 0
                                    HdlValueId: zorro_ram_read_request
                                HdlStmIf
                                    HdlOp: GE
                                        list: ops
                                            HdlValueId: read_counter
                                            HdlValueId: dataout_time
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmAssign
                                                HdlValueId: WAIT_READ
                                                HdlValueId: zorro_state
                                    list: elifs
                                HdlStmAssign
                                    HdlValueId: zorro_ram_read_data
                                    HdlValueId: data
    DEL HdlStmCaseType@@CASE from zorro_state
    DEL HdlValueId@@zorro_state from zorro_state
    DEL HdlValueId@@RESET from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases
    DEL HdlValueId@@Z3_CONFIGURING from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases
    DEL HdlValueId@@CONFIGURED from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlValueId@@WAIT_READ2 from 
    DEL tuple@@ from cases
    DEL HdlValueId@@WAIT_READ from 
    DEL tuple@@ from cases
    DEL HdlValueId@@REGREAD from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases

UPD HdlStmIf@@ to 
    UPD HdlOp@@AND_LOG to AND_LOG
        MOV HdlOp@@EQ to ops
        HdlOp: EQ
            list: ops
                HdlOp: INDEX
                    list: ops
                        HdlValueId: znAS_sync
                        HdlValueInt: 1
                HdlValueInt: 0
        DEL HdlOp@@EQ from ops
        HdlOp: EQ
            list: ops
                HdlOp: INDEX
                    list: ops
                        HdlValueId: znAS_sync
                        HdlValueInt: 0
                HdlValueInt: 0
        DEL list@@ops from AND_LOG
    DEL HdlOp@@AND_LOG from 

UPD HdlStmIf@@ to 
    INS HdlOp@@EQ to 
    HdlOp: EQ
        list: ops
            HdlValueId: znAS_sync
            HdlValueInt: 00000

UPD HdlStmIf@@ to 
    INS HdlValueId@@dvid_reset to 
    INS HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlStmAssign
                HdlValueInt: 10
                HdlValueId: dvid_reset_counter
            HdlStmAssign
                HdlValueId: RESET_DVID
                HdlValueId: zorro_state
    INS tuple@@ to elifs
    UPD HdlOp@@AND_LOG to AND_LOG
        INS HdlOp@@AND_LOG to ops
        INS HdlOp@@NEG_LOG to ops
        UPD HdlOp@@AND_LOG to AND_LOG
            INS list@@ops to AND_LOG
            INS HdlValueId@@zaddr_autoconfig to ops
            UPD HdlOp@@EQ to EQ
                INS HdlValueId@@autoconf_low to ops
        UPD HdlOp@@NEG_LOG to NEG_LOG
            INS list@@ops to NEG_LOG
            INS HdlOp@@INDEX to ops
            UPD HdlOp@@INDEX to INDEX
                INS list@@ops to INDEX
                INS HdlValueInt@@2 to ops

UPD HdlStmIf@@ to 
    MOV HdlOp@@AND_LOG to 
    HdlOp: AND_LOG
        list: ops
            HdlOp: EQ
                list: ops
                    HdlValueId: zaddr_sync
                    HdlValueInt: 000000
            HdlValueId: znCFGIN
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: z_confdone
            HdlStmAssign
                HdlValueId: Z2_CONFIGURING
                HdlValueId: zorro_state
    UPD HdlOp@@AND_LOG to AND_LOG
        MOV HdlOp@@EQ to ops
        HdlOp: EQ
            list: ops
                HdlValueId: zaddr_sync
                HdlValueInt: 000000
        UPD HdlOp@@EQ to EQ
            UPD HdlValueId@@zaddr_sync to zaddr_sync2
            DEL HdlValueInt@@000000 from ops
        UPD HdlValueId@@znCFGIN to znCFGIN_sync
        MOV HdlValueId@@znCFGIN to ops
        HdlValueId: znCFGIN

UPD HdlStmAssign@@ to 
    UPD HdlOp@@SLL to CONCAT
    UPD HdlOp@@SLL to SLL
        UPD HdlValueInt@@8 to 00

UPD HdlStmAssign@@ to 
    UPD HdlOp@@SLL to CONCAT
    UPD HdlOp@@SLL to SLL
        UPD HdlValueInt@@8 to 00

UPD HdlStmAssign@@ to 
    UPD HdlOp@@SLL to SLL
        MOV HdlValueId@@sd_data_in to ops
        HdlValueId: sd_data_in
        DEL HdlValueInt@@8 from ops
        DEL list@@ops from SLL
    DEL HdlOp@@SLL from 

UPD HdlStmAssign@@ to 
    UPD HdlOp@@SLL to SLL
        MOV HdlValueId@@sd_data_out to ops
        HdlValueId: sd_data_out
        DEL HdlValueInt@@8 from ops
        DEL list@@ops from SLL
    DEL HdlOp@@SLL from 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['zaddr_sync2',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['zaddr_sync2',          {'__class__': 'HdlOp',           'fn': 'DOWNTO',           'ops': [{'__class__': 'HdlValueInt', 'base': 10, 'val': '7'},                   {'__class__': 'HdlValueInt', 'base': 10, 'val': '0'}]}]} 
    DEL tuple@@ from cases
    tuple
        HdlValueInt: 72
        HdlStmAssign
            HdlValueId: sd_clkdiv
            HdlValueId: data


CommitId: d8a08b1a977d4573a8d123f4d41137962d28fc71
beta release WIP. 32bit, fix some timing problems, introduce custom refresh, fix sd card drivers, sd card CRC, custom resolutions, fix z3 register read model
--- a/z2-minispartan/z2.v
+++ b/z2-minispartan/z2.v
@@ -969,32 +952,42 @@ always @(posedge z_sample_clk) begin
     end
     
     // ----------------------------------------------------------------------------------
+    WAIT_READ3: begin
+      if (!zorro_ram_read_request) begin
+        zorro_ram_read_addr <= last_addr;
+        zorro_ram_read_request <= 1;
+        zorro_ram_read_done <= 0;
+        zorro_state <= WAIT_READ2;
+      end
+    end
+    
     WAIT_READ2: begin
-      if (znAS_sync[1]==1 && znAS_sync[0]==1) begin
+      /*if (znAS_sync[1]==1 && znAS_sync[0]==1) begin
         // ram too slow TODO: report this
         zorro_ram_read_request <= 0;
         zorro_state <= Z2_IDLE;
         z_ready <= 1;
-      end else if (zorro_ram_read_done) begin
+      end else */
+      
+      if (zorro_ram_read_done) begin
+        data <= zorro_ram_read_data;
         read_counter <= read_counter + 1;
         zorro_ram_read_request <= 0;
         
         if (read_counter >= dataout_time) begin
           zorro_state <= WAIT_READ;
         end
-        data <= zorro_ram_read_data;
       end
     end
   
     // ----------------------------------------------------------------------------------
-    WAIT_READ:
+    WAIT_READ: begin
+      data <= zorro_ram_read_data;
+      z_ready <= 1;
       if (znAS_sync[1]==1 && znAS_sync[0]==1) begin
         zorro_state <= Z2_IDLE;
-        z_ready <= 1;
-      end else begin
-        data <= zorro_ram_read_data;
-        z_ready <= 1;
       end
+    end
    
     // ----------------------------------------------------------------------------------
     WAIT_WRITE:

ParseResult:
UPD HdlStmCase@@zorro_state to zorro_state
    INS HdlStmCaseType@@CASE to zorro_state
    INS HdlValueId@@zorro_state to zorro_state
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS HdlValueId@@RESET to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@Z3_CONFIGURING to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@CONFIGURED to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@Z2_WARMUP to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@WAIT_READ3 to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@WAIT_READ2 to 
    INS HdlValueId@@WAIT_READ to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@RESET_DVID to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@REGREAD_POST to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@REGREAD to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmCase@@zorro_state to zorro_state
    MOV tuple@@ to cases
    tuple
        HdlValueId: PAUSE
        HdlStmBlock: SEQ
            list: body
                HdlStmIf
                    HdlValueId: zaddr_autoconfig
                    HdlStmBlock: SEQ
                        list: body
                            HdlStmAssign
                                HdlValueId: Z2_CONFIGURING
                                HdlValueId: zorro_state
                            HdlStmAssign
                                HdlValueInt: 0
                                HdlValueId: ZORRO3
                    list: elifs
                        tuple
                            HdlOp: EQ
                                list: ops
                                    HdlOp: INDEX
                                        list: ops
                                            HdlValueId: z3addr
                                            HdlOp: DOWNTO
                                                list: ops
                                                    HdlValueInt: 31
                                                    HdlValueInt: 16
                                    HdlValueInt: ff00
                            HdlStmBlock: SEQ
                                list: body
                                    HdlStmAssign
                                        HdlValueId: Z3_CONFIGURING
                                        HdlValueId: zorro_state
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlStmIf
                HdlOp: AND_LOG
                    list: ops
                        HdlOp: EQ
                            list: ops
                                HdlOp: INDEX
                                    list: ops
                                        HdlValueId: znAS_sync
                                        HdlValueInt: 1
                                HdlValueInt: 1
                        HdlOp: EQ
                            list: ops
                                HdlOp: INDEX
                                    list: ops
                                        HdlValueId: znAS_sync
                                        HdlValueInt: 0
                                HdlValueInt: 1
                HdlStmBlock: SEQ
                    list: body
                        HdlStmAssign
                            HdlValueInt: 0
                            HdlValueId: zorro_ram_read_request
                        HdlStmAssign
                            HdlValueId: Z2_IDLE
                            HdlValueId: zorro_state
                        HdlStmAssign
                            HdlValueInt: 1
                            HdlValueId: z_ready
                list: elifs
                    tuple
                        HdlValueId: zorro_ram_read_done
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmAssign
                                    HdlOp: ADD
                                        list: ops
                                            HdlValueId: read_counter
                                            HdlValueInt: 1
                                    HdlValueId: read_counter
                                HdlStmAssign
                                    HdlValueInt: 0
                                    HdlValueId: zorro_ram_read_request
                                HdlStmIf
                                    HdlOp: GE
                                        list: ops
                                            HdlValueId: read_counter
                                            HdlValueId: dataout_time
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmAssign
                                                HdlValueId: WAIT_READ
                                                HdlValueId: zorro_state
                                    list: elifs
                                HdlStmAssign
                                    HdlValueId: zorro_ram_read_data
                                    HdlValueId: data
    DEL HdlStmCaseType@@CASE from zorro_state
    DEL HdlValueId@@zorro_state from zorro_state
    DEL HdlValueId@@RESET from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases
    DEL HdlValueId@@Z3_CONFIGURING from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases
    DEL HdlValueId@@CONFIGURED from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlValueId@@WAIT_READ2 from 
    DEL tuple@@ from cases
    DEL HdlValueId@@WAIT_READ from 
    DEL tuple@@ from cases
    DEL HdlValueId@@REGREAD from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases

UPD HdlStmIf@@ to 
    MOV tuple@@ to elifs
    tuple
        HdlValueId: zorro_ram_read_done
        HdlStmBlock: SEQ
            list: body
                HdlStmAssign
                    HdlOp: ADD
                        list: ops
                            HdlValueId: read_counter
                            HdlValueInt: 1
                    HdlValueId: read_counter
                HdlStmAssign
                    HdlValueInt: 0
                    HdlValueId: zorro_ram_read_request
                HdlStmIf
                    HdlOp: GE
                        list: ops
                            HdlValueId: read_counter
                            HdlValueId: dataout_time
                    HdlStmBlock: SEQ
                        list: body
                            HdlStmAssign
                                HdlValueId: WAIT_READ
                                HdlValueId: zorro_state
                    list: elifs
                HdlStmAssign
                    HdlValueId: zorro_ram_read_data
                    HdlValueId: data
    UPD list@@elifs to body
    MOV list@@elifs to 
    list: elifs
        tuple
            HdlValueId: zorro_ram_read_done
            HdlStmBlock: SEQ
                list: body
                    HdlStmAssign
                        HdlOp: ADD
                            list: ops
                                HdlValueId: read_counter
                                HdlValueInt: 1
                        HdlValueId: read_counter
                    HdlStmAssign
                        HdlValueInt: 0
                        HdlValueId: zorro_ram_read_request
                    HdlStmIf
                        HdlOp: GE
                            list: ops
                                HdlValueId: read_counter
                                HdlValueId: dataout_time
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmAssign
                                    HdlValueId: WAIT_READ
                                    HdlValueId: zorro_state
                        list: elifs
                    HdlStmAssign
                        HdlValueId: zorro_ram_read_data
                        HdlValueId: data
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: zorro_ram_read_request
            HdlStmAssign
                HdlValueId: Z2_IDLE
                HdlValueId: zorro_state
            HdlStmAssign
                HdlValueInt: 1
                HdlValueId: z_ready
    MOV HdlValueId@@zorro_ram_read_done to 
    HdlValueId: zorro_ram_read_done
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlStmAssign
                HdlOp: ADD
                    list: ops
                        HdlValueId: read_counter
                        HdlValueInt: 1
                HdlValueId: read_counter
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: zorro_ram_read_request
            HdlStmIf
                HdlOp: GE
                    list: ops
                        HdlValueId: read_counter
                        HdlValueId: dataout_time
                HdlStmBlock: SEQ
                    list: body
                        HdlStmAssign
                            HdlValueId: WAIT_READ
                            HdlValueId: zorro_state
                list: elifs
            HdlStmAssign
                HdlValueId: zorro_ram_read_data
                HdlValueId: data
    MOV HdlOp@@AND_LOG to 
    HdlOp: AND_LOG
        list: ops
            HdlOp: EQ
                list: ops
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: znAS_sync
                            HdlValueInt: 1
                    HdlValueInt: 1
            HdlOp: EQ
                list: ops
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: znAS_sync
                            HdlValueInt: 0
                    HdlValueInt: 1

INS HdlStmIf@@ to body

MOV HdlStmIf@@ to body
HdlStmIf
    HdlOp: AND_LOG
        list: ops
            HdlOp: EQ
                list: ops
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: znAS_sync
                            HdlValueInt: 1
                    HdlValueInt: 1
            HdlOp: EQ
                list: ops
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: znAS_sync
                            HdlValueInt: 0
                    HdlValueInt: 1
    HdlStmBlock: SEQ
        list: body
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: zorro_ram_read_request
            HdlStmAssign
                HdlValueId: Z2_IDLE
                HdlValueId: zorro_state
            HdlStmAssign
                HdlValueInt: 1
                HdlValueId: z_ready
    list: elifs
        tuple
            HdlValueId: zorro_ram_read_done
            HdlStmBlock: SEQ
                list: body
                    HdlStmAssign
                        HdlOp: ADD
                            list: ops
                                HdlValueId: read_counter
                                HdlValueInt: 1
                        HdlValueId: read_counter
                    HdlStmAssign
                        HdlValueInt: 0
                        HdlValueId: zorro_ram_read_request
                    HdlStmIf
                        HdlOp: GE
                            list: ops
                                HdlValueId: read_counter
                                HdlValueId: dataout_time
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmAssign
                                    HdlValueId: WAIT_READ
                                    HdlValueId: zorro_state
                        list: elifs
                    HdlStmAssign
                        HdlValueId: zorro_ram_read_data
                        HdlValueId: data

MOV HdlStmAssign@@ to body
HdlStmAssign
    HdlValueId: zorro_ram_read_data
    HdlValueId: data

MOV HdlStmAssign@@ to body
HdlStmAssign
    HdlValueInt: 1
    HdlValueId: z_ready

INS HdlStmIf@@ to body

UPD HdlStmIf@@ to 
    INS HdlOp@@EQ to 
    HdlOp: EQ
        list: ops
            HdlValueId: znAS_sync
            HdlValueInt: 00000

UPD HdlStmIf@@ to 
    INS HdlOp@@NEG_LOG to 
    HdlOp: NEG_LOG
        list: ops
            HdlValueId: zorro_ram_read_request
    INS HdlStmBlock@@SEQ to 
    INS list@@elifs to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmIf@@ to 
    INS list@@elifs to 

UPD HdlStmIf@@ to 
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlStmAssign
                HdlValueId: Z2_IDLE
                HdlValueId: zorro_state
            HdlStmAssign
                HdlValueInt: 1
                HdlValueId: z_ready
    DEL HdlOp@@AND_LOG from 
    HdlOp: AND_LOG
        list: ops
            HdlOp: EQ
                list: ops
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: znAS_sync
                            HdlValueInt: 1
                    HdlValueInt: 1
            HdlOp: EQ
                list: ops
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: znAS_sync
                            HdlValueInt: 0
                    HdlValueInt: 1
    DEL list@@elifs from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 

MOV HdlStmAssign@@ to body
HdlStmAssign
    HdlValueId: zorro_ram_read_data
    HdlValueId: data

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueId: last_addr
    HdlValueId: zorro_ram_read_addr

DEL HdlStmAssign@@ from body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: zorro_ram_read_request

DEL HdlStmAssign@@ from body
HdlStmAssign
    HdlValueInt: 1
    HdlValueId: z_ready

DEL HdlStmAssign@@ from body
HdlStmAssign
    HdlValueInt: 1
    HdlValueId: z_ready

DEL HdlStmIf@@ from 


CommitId: d8a08b1a977d4573a8d123f4d41137962d28fc71
beta release WIP. 32bit, fix some timing problems, introduce custom refresh, fix sd card drivers, sd card CRC, custom resolutions, fix z3 register read model
--- a/z2-minispartan/z2.v
+++ b/z2-minispartan/z2.v
@@ -1055,20 +1062,14 @@ always @(posedge z_sample_clk) begin
             zaddr_regpart <= z3addr[15:0];
             zorro_state <= REGWRITE;
           end
-        end else if (zorro_read && (z3addr >= reg_low) && (z3addr <= reg_high)) begin
+        end else if (zorro_read && z3addr_in_reg) begin
           // read registers
           slaven <= 1;
-          dataout_enable <= 1;
-          dataout_z3 <= 1;
-          data <= 0;
+          data_z3_hi16 <= 0;
+          data_z3_low16 <= 0;
           
-          if (znDS1_sync[2]==0) begin
-            regdata_in <= data_in_z3_low16;
-            zaddr_regpart <= (z3addr[15:0])|16'h2;
-            zorro_state <= REGREAD;
-          end else if (znUDS_sync[2]==0) begin
-            regdata_in <= zdata_in_sync;
-            zaddr_regpart <= z3addr[15:0];
+          if (znDS1_sync[2]==0 || znDS0_sync[2]==0 || znUDS_sync[2]==0 || znLDS_sync[2]==0) begin
+            zaddr_regpart <= {z3addr[15:2],2'b00}; //|16'h2;
             zorro_state <= REGREAD;
           end
         end else begin

ParseResult:
UPD HdlStmIf@@ to 
    MOV HdlOp@@EQ to 
    HdlOp: EQ
        list: ops
            HdlValueId: z3addr
            HdlValueInt: 00000000
    UPD HdlOp@@AND_LOG to AND_LOG
        MOV HdlOp@@AND_LOG to ops
        HdlOp: AND_LOG
            list: ops
                HdlOp: GE
                    list: ops
                        HdlValueId: z3addr
                        HdlValueId: ram_low
                HdlOp: LE
                    list: ops
                        HdlValueId: z3addr
                        HdlValueId: ram_high
        UPD HdlOp@@AND_LOG to AND_LOG
            UPD HdlOp@@LE to LT
    UPD HdlOp@@AND_LOG to AND_LOG
        MOV HdlOp@@AND_LOG to ops
        HdlOp: AND_LOG
            list: ops
                HdlValueId: zorro_write
                HdlOp: GE
                    list: ops
                        HdlValueId: z3addr
                        HdlValueId: reg_low
        UPD HdlOp@@AND_LOG to AND_LOG
            MOV HdlValueId@@zorro_write to ops
            HdlValueId: zorro_write
        DEL HdlOp@@LE from ops
        HdlOp: LE
            list: ops
                HdlValueId: z3addr
                HdlValueId: reg_high
        DEL list@@ops from AND_LOG
    UPD HdlOp@@AND_LOG to AND_LOG
        UPD HdlOp@@LE to LT
        MOV HdlOp@@LE to ops
        HdlOp: LE
            list: ops
                HdlValueId: z3addr
                HdlValueId: reg_high
        MOV HdlOp@@AND_LOG to ops
        HdlOp: AND_LOG
            list: ops
                HdlValueId: zorro_read
                HdlOp: GE
                    list: ops
                        HdlValueId: z3addr
                        HdlValueId: reg_low
        UPD HdlOp@@AND_LOG to AND_LOG
            UPD HdlOp@@GE to GE
                UPD HdlValueId@@z3addr to z3addr_in_reg
                MOV HdlValueId@@z3addr to ops
                HdlValueId: z3addr
                DEL HdlValueId@@reg_low from ops
                DEL list@@ops from GE
            DEL HdlOp@@GE from ops
        DEL list@@ops from AND_LOG
    UPD HdlOp@@AND_LOG to AND_LOG
        UPD HdlOp@@AND_LOG to AND_LOG
            UPD HdlOp@@GE to GE
                UPD HdlValueId@@z3addr to z3addr_in_ram
                MOV HdlValueId@@z3addr to ops
                HdlValueId: z3addr
                DEL HdlValueId@@ram_low from ops
                DEL list@@ops from GE
            DEL HdlOp@@GE from ops
            DEL HdlOp@@LE from ops
            HdlOp: LE
                list: ops
                    HdlValueId: z3addr
                    HdlValueId: ram_high
            DEL list@@ops from AND_LOG
        UPD HdlOp@@NEG_LOG to NEG_LOG
            UPD HdlValueId@@zorro_read to zorro_write
            MOV HdlValueId@@zorro_read to ops
            HdlValueId: zorro_read
            DEL list@@ops from NEG_LOG
        DEL HdlOp@@AND_LOG from ops
        DEL HdlOp@@NEG_LOG from ops
    DEL HdlOp@@AND_LOG from 
    DEL HdlOp@@AND_LOG from 

UPD HdlStmCase@@zorro_state to zorro_state
    INS HdlStmCaseType@@CASE to zorro_state
    INS HdlValueId@@zorro_state to zorro_state
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS HdlValueId@@RESET to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@Z3_CONFIGURING to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@CONFIGURED to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@Z2_WARMUP to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@WAIT_READ3 to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@WAIT_READ2 to 
    INS HdlValueId@@WAIT_READ to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@RESET_DVID to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@REGREAD_POST to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@REGREAD to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmCase@@zorro_state to zorro_state
    MOV tuple@@ to cases
    tuple
        HdlValueId: PAUSE
        HdlStmBlock: SEQ
            list: body
                HdlStmIf
                    HdlValueId: zaddr_autoconfig
                    HdlStmBlock: SEQ
                        list: body
                            HdlStmAssign
                                HdlValueId: Z2_CONFIGURING
                                HdlValueId: zorro_state
                            HdlStmAssign
                                HdlValueInt: 0
                                HdlValueId: ZORRO3
                    list: elifs
                        tuple
                            HdlOp: EQ
                                list: ops
                                    HdlOp: INDEX
                                        list: ops
                                            HdlValueId: z3addr
                                            HdlOp: DOWNTO
                                                list: ops
                                                    HdlValueInt: 31
                                                    HdlValueInt: 16
                                    HdlValueInt: ff00
                            HdlStmBlock: SEQ
                                list: body
                                    HdlStmAssign
                                        HdlValueId: Z3_CONFIGURING
                                        HdlValueId: zorro_state
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlStmIf
                HdlOp: AND_LOG
                    list: ops
                        HdlOp: EQ
                            list: ops
                                HdlOp: INDEX
                                    list: ops
                                        HdlValueId: znAS_sync
                                        HdlValueInt: 1
                                HdlValueInt: 1
                        HdlOp: EQ
                            list: ops
                                HdlOp: INDEX
                                    list: ops
                                        HdlValueId: znAS_sync
                                        HdlValueInt: 0
                                HdlValueInt: 1
                HdlStmBlock: SEQ
                    list: body
                        HdlStmAssign
                            HdlValueInt: 0
                            HdlValueId: zorro_ram_read_request
                        HdlStmAssign
                            HdlValueId: Z2_IDLE
                            HdlValueId: zorro_state
                        HdlStmAssign
                            HdlValueInt: 1
                            HdlValueId: z_ready
                list: elifs
                    tuple
                        HdlValueId: zorro_ram_read_done
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmAssign
                                    HdlOp: ADD
                                        list: ops
                                            HdlValueId: read_counter
                                            HdlValueInt: 1
                                    HdlValueId: read_counter
                                HdlStmAssign
                                    HdlValueInt: 0
                                    HdlValueId: zorro_ram_read_request
                                HdlStmIf
                                    HdlOp: GE
                                        list: ops
                                            HdlValueId: read_counter
                                            HdlValueId: dataout_time
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmAssign
                                                HdlValueId: WAIT_READ
                                                HdlValueId: zorro_state
                                    list: elifs
                                HdlStmAssign
                                    HdlValueId: zorro_ram_read_data
                                    HdlValueId: data
    DEL HdlStmCaseType@@CASE from zorro_state
    DEL HdlValueId@@zorro_state from zorro_state
    DEL HdlValueId@@RESET from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases
    DEL HdlValueId@@Z3_CONFIGURING from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases
    DEL HdlValueId@@CONFIGURED from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlValueId@@WAIT_READ2 from 
    DEL tuple@@ from cases
    DEL HdlValueId@@WAIT_READ from 
    DEL tuple@@ from cases
    DEL HdlValueId@@REGREAD from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases

MOV HdlStmAssign@@ to body
HdlStmAssign
    HdlValueInt: 1
    HdlValueId: dataout_enable

MOV HdlStmAssign@@ to body
HdlStmAssign
    HdlValueInt: 1
    HdlValueId: dataout_z3

UPD HdlStmIf@@ to 
    INS HdlValueId@@dvid_reset to 
    INS HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlStmAssign
                HdlValueInt: 10
                HdlValueId: dvid_reset_counter
            HdlStmAssign
                HdlValueId: RESET_DVID
                HdlValueId: zorro_state
    INS list@@elifs to 
    INS tuple@@ to elifs

UPD HdlStmIf@@ to 
    MOV HdlOp@@EQ to 
    HdlOp: EQ
        list: ops
            HdlOp: INDEX
                list: ops
                    HdlValueId: znFCS_sync
                    HdlValueInt: 2
            HdlValueInt: 0
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlStmIf
                HdlOp: EQ
                    list: ops
                        HdlValueId: z3addr
                        HdlValueInt: 00000000
                HdlStmBlock: SEQ
                    list: body
                        HdlStmAssign
                            HdlValueInt: 0
                            HdlValueId: z_confdone
                        HdlStmAssign
                            HdlValueId: RESET
                            HdlValueId: zorro_state
                list: elifs
                    tuple
                        HdlOp: AND_LOG
                            list: ops
                                HdlOp: AND_LOG
                                    list: ops
                                        HdlOp: GE
                                            list: ops
                                                HdlValueId: z3addr
                                                HdlValueId: ram_low
                                        HdlOp: LE
                                            list: ops
                                                HdlValueId: z3addr
                                                HdlValueId: ram_high
                                HdlOp: NEG_LOG
                                    list: ops
                                        HdlValueId: zorro_read
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmAssign
                                    HdlValueInt: 1
                                    HdlValueId: slaven
                                HdlStmIf
                                    HdlOp: OR_LOG
                                        list: ops
                                            HdlOp: OR_LOG
                                                list: ops
                                                    HdlOp: OR_LOG
                                                        list: ops
                                                            HdlOp: EQ
                                                                list: ops
                                                                    HdlOp: INDEX
                                                                        list: ops
                                                                            HdlValueId: znUDS_sync
                                                                            HdlValueInt: 2
                                                                    HdlValueInt: 0
                                                            HdlOp: EQ
                                                                list: ops
                                                                    HdlOp: INDEX
                                                                        list: ops
                                                                            HdlValueId: znLDS_sync
                                                                            HdlValueInt: 2
                                                                    HdlValueInt: 0
                                                    HdlOp: EQ
                                                        list: ops
                                                            HdlOp: INDEX
                                                                list: ops
                                                                    HdlValueId: znDS1_sync
                                                                    HdlValueInt: 2
                                                            HdlValueInt: 0
                                            HdlOp: EQ
                                                list: ops
                                                    HdlOp: INDEX
                                                        list: ops
                                                            HdlValueId: znDS0_sync
                                                            HdlValueInt: 2
                                                    HdlValueInt: 0
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmAssign
                                                HdlValueId: Z3_WRITE_UPPER
                                                HdlValueId: zorro_state
                                    list: elifs
                    tuple
                        HdlOp: AND_LOG
                            list: ops
                                HdlOp: AND_LOG
                                    list: ops
                                        HdlOp: GE
                                            list: ops
                                                HdlValueId: z3addr
                                                HdlValueId: ram_low
                                        HdlOp: LE
                                            list: ops
                                                HdlValueId: z3addr
                                                HdlValueId: ram_high
                                HdlValueId: zorro_read
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmAssign
                                    HdlValueInt: 1
                                    HdlValueId: slaven
                                HdlStmAssign
                                    HdlValueId: Z3_READ_UPPER
                                    HdlValueId: zorro_state
                    tuple
                        HdlOp: AND_LOG
                            list: ops
                                HdlOp: AND_LOG
                                    list: ops
                                        HdlValueId: zorro_write
                                        HdlOp: GE
                                            list: ops
                                                HdlValueId: z3addr
                                                HdlValueId: reg_low
                                HdlOp: LE
                                    list: ops
                                        HdlValueId: z3addr
                                        HdlValueId: reg_high
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmAssign
                                    HdlValueInt: 1
                                    HdlValueId: slaven
                                HdlStmIf
                                    HdlOp: EQ
                                        list: ops
                                            HdlOp: INDEX
                                                list: ops
                                                    HdlValueId: znDS1_sync
                                                    HdlValueInt: 2
                                            HdlValueInt: 0
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmAssign
                                                HdlValueId: data_in_z3_low16
                                                HdlValueId: regdata_in
                                            HdlStmAssign
                                                HdlOp: OR
                                                    list: ops
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlValueId: z3addr
                                                                HdlOp: DOWNTO
                                                                    list: ops
                                                                        HdlValueInt: 15
                                                                        HdlValueInt: 0
                                                        HdlValueInt: 2
                                                HdlValueId: zaddr_regpart
                                            HdlStmAssign
                                                HdlValueId: REGWRITE
                                                HdlValueId: zorro_state
                                    list: elifs
                                        tuple
                                            HdlOp: EQ
                                                list: ops
                                                    HdlOp: INDEX
                                                        list: ops
                                                            HdlValueId: znUDS_sync
                                                            HdlValueInt: 2
                                                    HdlValueInt: 0
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlStmAssign
                                                        HdlValueId: zdata_in_sync
                                                        HdlValueId: regdata_in
                                                    HdlStmAssign
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlValueId: z3addr
                                                                HdlOp: DOWNTO
                                                                    list: ops
                                                                        HdlValueInt: 15
                                                                        HdlValueInt: 0
                                                        HdlValueId: zaddr_regpart
                                                    HdlStmAssign
                                                        HdlValueId: REGWRITE
                                                        HdlValueId: zorro_state
                    tuple
                        HdlOp: AND_LOG
                            list: ops
                                HdlOp: AND_LOG
                                    list: ops
                                        HdlValueId: zorro_read
                                        HdlOp: GE
                                            list: ops
                                                HdlValueId: z3addr
                                                HdlValueId: reg_low
                                HdlOp: LE
                                    list: ops
                                        HdlValueId: z3addr
                                        HdlValueId: reg_high
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmAssign
                                    HdlValueInt: 1
                                    HdlValueId: slaven
                                HdlStmAssign
                                    HdlValueInt: 1
                                    HdlValueId: dataout_enable
                                HdlStmAssign
                                    HdlValueInt: 1
                                    HdlValueId: dataout_z3
                                HdlStmAssign
                                    HdlValueInt: 0
                                    HdlValueId: data
                                HdlStmIf
                                    HdlOp: EQ
                                        list: ops
                                            HdlOp: INDEX
                                                list: ops
                                                    HdlValueId: znDS1_sync
                                                    HdlValueInt: 2
                                            HdlValueInt: 0
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmAssign
                                                HdlValueId: data_in_z3_low16
                                                HdlValueId: regdata_in
                                            HdlStmAssign
                                                HdlOp: OR
                                                    list: ops
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlValueId: z3addr
                                                                HdlOp: DOWNTO
                                                                    list: ops
                                                                        HdlValueInt: 15
                                                                        HdlValueInt: 0
                                                        HdlValueInt: 2
                                                HdlValueId: zaddr_regpart
                                            HdlStmAssign
                                                HdlValueId: REGREAD
                                                HdlValueId: zorro_state
                                    list: elifs
                                        tuple
                                            HdlOp: EQ
                                                list: ops
                                                    HdlOp: INDEX
                                                        list: ops
                                                            HdlValueId: znUDS_sync
                                                            HdlValueInt: 2
                                                    HdlValueInt: 0
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlStmAssign
                                                        HdlValueId: zdata_in_sync
                                                        HdlValueId: regdata_in
                                                    HdlStmAssign
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlValueId: z3addr
                                                                HdlOp: DOWNTO
                                                                    list: ops
                                                                        HdlValueInt: 15
                                                                        HdlValueInt: 0
                                                        HdlValueId: zaddr_regpart
                                                    HdlStmAssign
                                                        HdlValueId: REGREAD
                                                        HdlValueId: zorro_state
                HdlStmBlock: SEQ
                    list: body
                        HdlStmAssign
                            HdlValueInt: 0
                            HdlValueId: slaven
                        HdlStmAssign
                            HdlValueInt: 0
                            HdlValueId: dtack
                        HdlStmAssign
                            HdlValueInt: 0
                            HdlValueId: dataout_enable
                        HdlStmAssign
                            HdlValueInt: 0
                            HdlValueId: dataout_z3
    DEL list@@elifs from 

UPD HdlStmIf@@ to 
    INS HdlValueId@@z3addr_zero to 
    INS HdlOp@@AND_LOG to 
    UPD HdlOp@@AND_LOG to AND_LOG
        INS list@@ops to AND_LOG
        INS HdlValueId@@z3addr_in_reg to ops
    UPD HdlOp@@AND_LOG to AND_LOG
        INS HdlValueId@@z3addr_in_ram to ops

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: data_z3_hi16

UPD HdlStmAssign@@ to 
    UPD HdlValueId@@data to data_z3_low16

UPD HdlStmIf@@ to 
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlStmAssign
                HdlValueId: zdata_in_sync
                HdlValueId: regdata_in
            HdlStmAssign
                HdlOp: INDEX
                    list: ops
                        HdlValueId: z3addr
                        HdlOp: DOWNTO
                            list: ops
                                HdlValueInt: 15
                                HdlValueInt: 0
                HdlValueId: zaddr_regpart
            HdlStmAssign
                HdlValueId: REGREAD
                HdlValueId: zorro_state
    MOV HdlOp@@EQ to 
    HdlOp: EQ
        list: ops
            HdlOp: INDEX
                list: ops
                    HdlValueId: znUDS_sync
                    HdlValueInt: 2
            HdlValueInt: 0
    MOV HdlOp@@EQ to 
    HdlOp: EQ
        list: ops
            HdlOp: INDEX
                list: ops
                    HdlValueId: znDS1_sync
                    HdlValueInt: 2
            HdlValueInt: 0
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from elifs
    DEL list@@elifs from 

MOV HdlStmAssign@@ to body
HdlStmAssign
    HdlValueId: REGREAD
    HdlValueId: zorro_state

UPD HdlStmAssign@@ to 
    MOV HdlOp@@INDEX to 
    HdlOp: INDEX
        list: ops
            HdlValueId: z3addr
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 15
                    HdlValueInt: 0
    UPD HdlOp@@INDEX to INDEX
        UPD HdlOp@@DOWNTO to DOWNTO
            UPD HdlValueInt@@0 to 2

UPD HdlStmAssign@@ to 
    UPD HdlOp@@OR to EQ
    MOV HdlOp@@OR to 
    HdlOp: OR
        list: ops
            HdlOp: INDEX
                list: ops
                    HdlValueId: z3addr
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 15
                            HdlValueInt: 0
            HdlValueInt: 2
    UPD HdlOp@@OR to OR
        UPD HdlValueInt@@2 to 0
        UPD HdlOp@@INDEX to INDEX
            UPD HdlValueId@@z3addr to znDS0_sync
            UPD HdlOp@@DOWNTO to DOWNTO
                UPD HdlValueInt@@15 to 2
                MOV HdlValueInt@@15 to ops
                HdlValueInt: 15
                DEL HdlValueInt@@0 from ops
                DEL list@@ops from DOWNTO
            DEL HdlOp@@DOWNTO from ops
    DEL HdlValueId@@zaddr_regpart from 

DEL HdlStmAssign@@ from body
HdlStmAssign
    HdlValueId: zdata_in_sync
    HdlValueId: regdata_in

DEL HdlStmAssign@@ from body
HdlStmAssign
    HdlValueId: REGREAD
    HdlValueId: zorro_state

DEL HdlStmAssign@@ from body
HdlStmAssign
    HdlValueId: data_in_z3_low16
    HdlValueId: regdata_in

DEL HdlStmAssign@@ from body


CommitId: d8a08b1a977d4573a8d123f4d41137962d28fc71
beta release WIP. 32bit, fix some timing problems, introduce custom refresh, fix sd card drivers, sd card CRC, custom resolutions, fix z3 register read model
--- a/z2-minispartan/z2.v
+++ b/z2-minispartan/z2.v
@@ -1112,7 +1113,7 @@ always @(posedge z_sample_clk) begin
     
     Z3_READ_DELAY: begin
       if (zorro_ram_read_done) begin
-        data <= z3_read_data;
+        data_z3_hi16 <= z3_read_data;
         data_z3_low16 <= zorro_ram_read_data;
         dataout_enable <= 1;
         dataout_z3 <= 1;

ParseResult:
UPD HdlStmCase@@zorro_state to zorro_state
    INS HdlStmCaseType@@CASE to zorro_state
    INS HdlValueId@@zorro_state to zorro_state
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS HdlValueId@@RESET to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@Z3_CONFIGURING to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@CONFIGURED to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@Z2_WARMUP to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@WAIT_READ3 to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@WAIT_READ2 to 
    INS HdlValueId@@WAIT_READ to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@RESET_DVID to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@REGREAD_POST to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@REGREAD to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmCase@@zorro_state to zorro_state
    MOV tuple@@ to cases
    tuple
        HdlValueId: PAUSE
        HdlStmBlock: SEQ
            list: body
                HdlStmIf
                    HdlValueId: zaddr_autoconfig
                    HdlStmBlock: SEQ
                        list: body
                            HdlStmAssign
                                HdlValueId: Z2_CONFIGURING
                                HdlValueId: zorro_state
                            HdlStmAssign
                                HdlValueInt: 0
                                HdlValueId: ZORRO3
                    list: elifs
                        tuple
                            HdlOp: EQ
                                list: ops
                                    HdlOp: INDEX
                                        list: ops
                                            HdlValueId: z3addr
                                            HdlOp: DOWNTO
                                                list: ops
                                                    HdlValueInt: 31
                                                    HdlValueInt: 16
                                    HdlValueInt: ff00
                            HdlStmBlock: SEQ
                                list: body
                                    HdlStmAssign
                                        HdlValueId: Z3_CONFIGURING
                                        HdlValueId: zorro_state
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlStmIf
                HdlOp: AND_LOG
                    list: ops
                        HdlOp: EQ
                            list: ops
                                HdlOp: INDEX
                                    list: ops
                                        HdlValueId: znAS_sync
                                        HdlValueInt: 1
                                HdlValueInt: 1
                        HdlOp: EQ
                            list: ops
                                HdlOp: INDEX
                                    list: ops
                                        HdlValueId: znAS_sync
                                        HdlValueInt: 0
                                HdlValueInt: 1
                HdlStmBlock: SEQ
                    list: body
                        HdlStmAssign
                            HdlValueInt: 0
                            HdlValueId: zorro_ram_read_request
                        HdlStmAssign
                            HdlValueId: Z2_IDLE
                            HdlValueId: zorro_state
                        HdlStmAssign
                            HdlValueInt: 1
                            HdlValueId: z_ready
                list: elifs
                    tuple
                        HdlValueId: zorro_ram_read_done
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmAssign
                                    HdlOp: ADD
                                        list: ops
                                            HdlValueId: read_counter
                                            HdlValueInt: 1
                                    HdlValueId: read_counter
                                HdlStmAssign
                                    HdlValueInt: 0
                                    HdlValueId: zorro_ram_read_request
                                HdlStmIf
                                    HdlOp: GE
                                        list: ops
                                            HdlValueId: read_counter
                                            HdlValueId: dataout_time
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmAssign
                                                HdlValueId: WAIT_READ
                                                HdlValueId: zorro_state
                                    list: elifs
                                HdlStmAssign
                                    HdlValueId: zorro_ram_read_data
                                    HdlValueId: data
    DEL HdlStmCaseType@@CASE from zorro_state
    DEL HdlValueId@@zorro_state from zorro_state
    DEL HdlValueId@@RESET from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases
    DEL HdlValueId@@Z3_CONFIGURING from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases
    DEL HdlValueId@@CONFIGURED from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlValueId@@WAIT_READ2 from 
    DEL tuple@@ from cases
    DEL HdlValueId@@WAIT_READ from 
    DEL tuple@@ from cases
    DEL HdlValueId@@REGREAD from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases

UPD HdlStmAssign@@ to 
    UPD HdlValueId@@data to data_z3_hi16


CommitId: d8a08b1a977d4573a8d123f4d41137962d28fc71
beta release WIP. 32bit, fix some timing problems, introduce custom refresh, fix sd card drivers, sd card CRC, custom resolutions, fix z3 register read model
--- a/z2-minispartan/z2.v
+++ b/z2-minispartan/z2.v
@@ -1232,10 +1254,10 @@ always @(posedge z_sample_clk) begin
         // blitter regs
         'h1c: blitter_base[23:16] <= regdata_in[7:0];
         'h1e: blitter_base[15:0]  <= regdata_in;
-        'h20: blitter_x1 <= regdata_in[10:0];
-        'h22: blitter_y1 <= regdata_in[10:0];
-        'h24: blitter_x2 <= regdata_in[10:0];
-        'h26: blitter_y2 <= regdata_in[10:0];
+        'h20: blitter_x1 <= regdata_in[11:0];
+        'h22: blitter_y1 <= regdata_in[11:0];
+        'h24: blitter_x2 <= regdata_in[11:0];
+        'h26: blitter_y2 <= regdata_in[11:0];
         'h28: blitter_rgb <= regdata_in[15:0];
         'h2a: begin
           blitter_enable <= regdata_in[3:0];

ParseResult:
UPD HdlStmCase@@zorro_state to zorro_state
    INS HdlStmCaseType@@CASE to zorro_state
    INS HdlValueId@@zorro_state to zorro_state
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS HdlValueId@@RESET to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@Z3_CONFIGURING to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@CONFIGURED to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@Z2_WARMUP to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@WAIT_READ3 to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@WAIT_READ2 to 
    INS HdlValueId@@WAIT_READ to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@RESET_DVID to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@REGREAD_POST to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@REGREAD to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmCase@@zorro_state to zorro_state
    MOV tuple@@ to cases
    tuple
        HdlValueId: PAUSE
        HdlStmBlock: SEQ
            list: body
                HdlStmIf
                    HdlValueId: zaddr_autoconfig
                    HdlStmBlock: SEQ
                        list: body
                            HdlStmAssign
                                HdlValueId: Z2_CONFIGURING
                                HdlValueId: zorro_state
                            HdlStmAssign
                                HdlValueInt: 0
                                HdlValueId: ZORRO3
                    list: elifs
                        tuple
                            HdlOp: EQ
                                list: ops
                                    HdlOp: INDEX
                                        list: ops
                                            HdlValueId: z3addr
                                            HdlOp: DOWNTO
                                                list: ops
                                                    HdlValueInt: 31
                                                    HdlValueInt: 16
                                    HdlValueInt: ff00
                            HdlStmBlock: SEQ
                                list: body
                                    HdlStmAssign
                                        HdlValueId: Z3_CONFIGURING
                                        HdlValueId: zorro_state
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlStmIf
                HdlOp: AND_LOG
                    list: ops
                        HdlOp: EQ
                            list: ops
                                HdlOp: INDEX
                                    list: ops
                                        HdlValueId: znAS_sync
                                        HdlValueInt: 1
                                HdlValueInt: 1
                        HdlOp: EQ
                            list: ops
                                HdlOp: INDEX
                                    list: ops
                                        HdlValueId: znAS_sync
                                        HdlValueInt: 0
                                HdlValueInt: 1
                HdlStmBlock: SEQ
                    list: body
                        HdlStmAssign
                            HdlValueInt: 0
                            HdlValueId: zorro_ram_read_request
                        HdlStmAssign
                            HdlValueId: Z2_IDLE
                            HdlValueId: zorro_state
                        HdlStmAssign
                            HdlValueInt: 1
                            HdlValueId: z_ready
                list: elifs
                    tuple
                        HdlValueId: zorro_ram_read_done
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmAssign
                                    HdlOp: ADD
                                        list: ops
                                            HdlValueId: read_counter
                                            HdlValueInt: 1
                                    HdlValueId: read_counter
                                HdlStmAssign
                                    HdlValueInt: 0
                                    HdlValueId: zorro_ram_read_request
                                HdlStmIf
                                    HdlOp: GE
                                        list: ops
                                            HdlValueId: read_counter
                                            HdlValueId: dataout_time
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmAssign
                                                HdlValueId: WAIT_READ
                                                HdlValueId: zorro_state
                                    list: elifs
                                HdlStmAssign
                                    HdlValueId: zorro_ram_read_data
                                    HdlValueId: data
    DEL HdlStmCaseType@@CASE from zorro_state
    DEL HdlValueId@@zorro_state from zorro_state
    DEL HdlValueId@@RESET from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases
    DEL HdlValueId@@Z3_CONFIGURING from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases
    DEL HdlValueId@@CONFIGURED from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlValueId@@WAIT_READ2 from 
    DEL tuple@@ from cases
    DEL HdlValueId@@WAIT_READ from 
    DEL tuple@@ from cases
    DEL HdlValueId@@REGREAD from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases

UPD HdlStmCase@@zaddr_regpart to zaddr_regpart
    MOV tuple@@ to cases
    tuple
        HdlValueInt: 04
        HdlStmAssign
            HdlOp: INDEX
                list: ops
                    HdlValueId: regdata_in
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 1
                            HdlValueInt: 0
            HdlValueId: scalemode
    MOV tuple@@ to cases
    tuple
        HdlValueInt: 20
        HdlStmAssign
            HdlOp: INDEX
                list: ops
                    HdlValueId: regdata_in
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 10
                            HdlValueInt: 0
            HdlValueId: blitter_x1
    MOV tuple@@ to cases
    tuple
        HdlValueInt: 22
        HdlStmAssign
            HdlOp: INDEX
                list: ops
                    HdlValueId: regdata_in
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 10
                            HdlValueInt: 0
            HdlValueId: blitter_y1
    MOV tuple@@ to cases
    tuple
        HdlValueInt: 24
        HdlStmAssign
            HdlOp: INDEX
                list: ops
                    HdlValueId: regdata_in
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 10
                            HdlValueInt: 0
            HdlValueId: blitter_x2
    MOV tuple@@ to cases
    tuple
        HdlValueInt: 26
        HdlStmAssign
            HdlOp: INDEX
                list: ops
                    HdlValueId: regdata_in
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 10
                            HdlValueInt: 0
            HdlValueId: blitter_y2
    MOV tuple@@ to cases
    tuple
        HdlValueInt: 28
        HdlStmAssign
            HdlOp: INDEX
                list: ops
                    HdlValueId: regdata_in
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 15
                            HdlValueInt: 0
            HdlValueId: blitter_rgb
    MOV tuple@@ to cases
    tuple
        HdlValueInt: 2a
        HdlStmBlock: SEQ
            list: body
                HdlStmAssign
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: regdata_in
                            HdlOp: DOWNTO
                                list: ops
                                    HdlValueInt: 3
                                    HdlValueInt: 0
                    HdlValueId: blitter_enable
                HdlStmAssign
                    HdlValueId: blitter_x1
                    HdlValueId: blitter_curx
                HdlStmAssign
                    HdlValueId: blitter_y1
                    HdlValueId: blitter_cury
                HdlStmAssign
                    HdlValueId: blitter_x3
                    HdlValueId: blitter_curx2
                HdlStmAssign
                    HdlValueId: blitter_y3
                    HdlValueId: blitter_cury2
                HdlStmAssign
                    HdlOp: TERNARY
                        list: ops
                            HdlOp: GT
                                list: ops
                                    HdlValueId: blitter_x3
                                    HdlValueId: blitter_x4
                            HdlValueInt: 1
                            HdlValueInt: 0
                    HdlValueId: blitter_dirx
                HdlStmAssign
                    HdlOp: TERNARY
                        list: ops
                            HdlOp: GT
                                list: ops
                                    HdlValueId: blitter_y3
                                    HdlValueId: blitter_y4
                            HdlValueInt: 1
                            HdlValueInt: 0
                    HdlValueId: blitter_diry
                HdlStmAssign
                    HdlOp: ADD
                        list: ops
                            HdlValueId: blitter_base
                            HdlOp: SLL
                                list: ops
                                    HdlValueId: blitter_y1
                                    HdlValueInt: 11
                    HdlValueId: blitter_ptr
                HdlStmAssign
                    HdlValueInt: 1
                    HdlValueId: blitter_rgb32_t
    MOV tuple@@ to cases
    tuple
        HdlValueInt: 40
        HdlStmAssign
            HdlOp: INDEX
                list: ops
                    HdlValueId: regdata_in
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 10
                            HdlValueInt: 0
            HdlValueId: sprite_ax
    MOV tuple@@ to cases
    tuple
        HdlValueInt: 42
        HdlStmAssign
            HdlOp: INDEX
                list: ops
                    HdlValueId: regdata_in
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 10
                            HdlValueInt: 0
            HdlValueId: sprite_ay
    MOV tuple@@ to cases
    tuple
        HdlValueInt: 44
        HdlStmAssign
            HdlOp: INDEX
                list: ops
                    HdlValueId: regdata_in
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 10
                            HdlValueInt: 0
            HdlValueId: sprite_ax2
    UPD HdlValueInt@@06 to 02
    UPD HdlValueInt@@0a to 06
    MOV HdlValueInt@@0a to 
    HdlValueInt: 0a
    UPD HdlValueInt@@20 to 76
    UPD HdlValueInt@@22 to 78
    UPD HdlValueInt@@24 to 7a
    UPD HdlValueInt@@26 to 7c
    UPD HdlValueInt@@2e to 20
    UPD HdlValueInt@@30 to 22
    UPD HdlValueInt@@32 to 24
    UPD HdlValueInt@@40 to 2e
    UPD HdlValueInt@@42 to 30
    UPD HdlValueInt@@44 to 32
    DEL tuple@@ from cases
    DEL HdlValueInt@@12 from 
    DEL tuple@@ from cases
    DEL tuple@@ from cases
    tuple
        HdlValueInt: 2c
        HdlStmAssign
            HdlOp: INDEX
                list: ops
                    HdlValueId: regdata_in
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 10
                            HdlValueInt: 0
            HdlValueId: blitter_x3
    DEL tuple@@ from cases
    tuple
        HdlValueInt: 46
        HdlStmAssign
            HdlOp: INDEX
                list: ops
                    HdlValueId: regdata_in
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 10
                            HdlValueInt: 0
            HdlValueId: sprite_ay2
    DEL tuple@@ from cases
    tuple
        HdlValueInt: 52
        HdlStmAssign
            HdlOp: INDEX
                list: ops
                    HdlValueId: regdata_in
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 5
                            HdlValueInt: 0
            HdlValueId: capture_freq
    DEL tuple@@ from cases
    tuple
        HdlValueInt: 54
        HdlStmAssign
            HdlOp: INDEX
                list: ops
                    HdlValueId: regdata_in
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 7
                            HdlValueInt: 0
            HdlValueId: capture_porch
    DEL tuple@@ from cases
    tuple
        HdlValueInt: 56
        HdlStmAssign
            HdlOp: INDEX
                list: ops
                    HdlValueId: regdata_in
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 9
                            HdlValueInt: 0
            HdlValueId: capture_shift

UPD HdlStmCase@@zaddr_regpart to zaddr_regpart
    INS tuple@@ to cases
    tuple
        HdlValueInt: 00
        HdlStmAssign
            HdlOp: INDEX
                list: ops
                    HdlValueId: regdata_in
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 15
                            HdlValueInt: 0
            HdlValueId: refresh_time
    INS tuple@@ to cases
    INS tuple@@ to cases
    tuple
        HdlValueInt: 80
        HdlStmAssign
            HdlOp: INDEX
                list: ops
                    HdlValueId: regdata_in
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 4
                            HdlValueInt: 0
            HdlValueId: ram_refresh_lines
    INS tuple@@ to cases
    tuple
        HdlValueInt: 70
        HdlStmAssign
            HdlOp: INDEX
                list: ops
                    HdlValueId: regdata_in
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 11
                            HdlValueInt: 0
            HdlValueId: h_sync_start
    INS tuple@@ to cases
    tuple
        HdlValueInt: 72
        HdlStmAssign
            HdlOp: INDEX
                list: ops
                    HdlValueId: regdata_in
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 11
                            HdlValueInt: 0
            HdlValueId: h_sync_end
    INS tuple@@ to cases
    tuple
        HdlValueInt: 74
        HdlStmAssign
            HdlOp: INDEX
                list: ops
                    HdlValueId: regdata_in
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 11
                            HdlValueInt: 0
            HdlValueId: h_max
    INS tuple@@ to cases
    tuple
        HdlValueInt: 26
        HdlStmAssign
            HdlOp: INDEX
                list: ops
                    HdlValueId: regdata_in
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 11
                            HdlValueInt: 0
            HdlValueId: blitter_y2
    INS tuple@@ to cases
    tuple
        HdlValueInt: 2c
        HdlStmAssign
            HdlOp: INDEX
                list: ops
                    HdlValueId: regdata_in
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 11
                            HdlValueInt: 0
            HdlValueId: blitter_x3
    INS tuple@@ to cases
    tuple
        HdlValueInt: 5c
        HdlStmAssign
            HdlOp: INDEX
                list: ops
                    HdlValueId: regdata_in
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 4
                            HdlValueInt: 0
            HdlValueId: row_pitch_shift
    INS HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlStmAssign
                HdlOp: INDEX
                    list: ops
                        HdlValueId: regdata_in
                        HdlOp: DOWNTO
                            list: ops
                                HdlValueInt: 11
                                HdlValueInt: 0
                HdlValueId: screen_w
            HdlStmAssign
                HdlOp: INDEX
                    list: ops
                        HdlValueId: regdata_in
                        HdlOp: DOWNTO
                            list: ops
                                HdlValueInt: 11
                                HdlValueInt: 0
                HdlValueId: h_rez
    INS HdlStmBlock@@SEQ to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmAssign@@ to 
    UPD HdlValueId@@blitter_y1 to v_sync_end
    UPD HdlOp@@INDEX to INDEX
        UPD HdlOp@@DOWNTO to DOWNTO
            UPD HdlValueInt@@10 to 11

UPD HdlStmAssign@@ to 
    UPD HdlValueId@@blitter_x2 to v_max
    UPD HdlOp@@INDEX to INDEX
        UPD HdlOp@@DOWNTO to DOWNTO
            UPD HdlValueInt@@10 to 11

MOV HdlStmAssign@@ to 
HdlStmAssign
    HdlOp: INDEX
        list: ops
            HdlValueId: regdata_in
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 10
                    HdlValueInt: 0
    HdlValueId: blitter_y2

UPD HdlStmAssign@@ to 
    UPD HdlValueId@@blitter_y2 to vga_clk_sel
    UPD HdlOp@@INDEX to INDEX
        UPD HdlOp@@DOWNTO to DOWNTO
            UPD HdlValueInt@@10 to 1


CommitId: d8a08b1a977d4573a8d123f4d41137962d28fc71
beta release WIP. 32bit, fix some timing problems, introduce custom refresh, fix sd card drivers, sd card CRC, custom resolutions, fix z3 register read model
--- a/z2-minispartan/z2.v
+++ b/z2-minispartan/z2.v
@@ -1245,44 +1267,45 @@ always @(posedge z_sample_clk) begin
           blitter_curx2 <= blitter_x3;
           blitter_cury2 <= blitter_y3;
           
-          blitter_dirx <= (blitter_x3>blitter_x4)?1'b1:1'b0;
-          blitter_diry <= (blitter_y3>blitter_y4)?1'b1:1'b0;
+          //blitter_dirx <= (blitter_x3>blitter_x4)?1'b1:1'b0;
+          //blitter_diry <= (blitter_y3>blitter_y4)?1'b1:1'b0;
           
-          blitter_ptr <= blitter_base + (blitter_y1 << 11); // * row_pitch?
+          blitter_ptr <= blitter_base + (blitter_y1 << row_pitch_shift);
           blitter_rgb32_t <= 1;
         end
-        'h2c: blitter_x3 <= regdata_in[10:0];
-        'h2e: blitter_y3 <= regdata_in[10:0];
-        'h30: blitter_x4 <= regdata_in[10:0];
-        'h32: blitter_y4 <= regdata_in[10:0];
+        'h2c: blitter_x3 <= regdata_in[11:0];
+        'h2e: blitter_y3 <= regdata_in[11:0];
+        'h30: blitter_x4 <= regdata_in[11:0];
+        'h32: blitter_y4 <= regdata_in[11:0];
         'h34: blitter_rgb32[0] <= regdata_in[15:0];
         'h36: blitter_rgb32[1] <= regdata_in[15:0];
         
         'h38: pan_ptr[23:16] <= regdata_in[7:0];
         'h3a: pan_ptr[15:0]  <= regdata_in;
         
-        'h40: sprite_ax <= regdata_in[10:0];
+        /*'h40: sprite_ax <= regdata_in[10:0];
         'h42: sprite_ay <= regdata_in[10:0];
         'h44: sprite_ax2 <= regdata_in[10:0];
-        'h46: sprite_ay2 <= regdata_in[10:0];
+        'h46: sprite_ay2 <= regdata_in[10:0];*/
         
         'h48: colormode <= regdata_in[2:0];
         
         //'h50: capture_mode <= regdata_in[0];
-        'h52: capture_freq <= regdata_in[5:0];
-        'h54: capture_porch <= regdata_in[7:0];
-        'h56: capture_shift <= regdata_in[9:0];
+        //'h52: capture_freq <= regdata_in[5:0];
+        //'h54: capture_porch <= regdata_in[7:0];
+        //'h56: capture_shift <= regdata_in[9:0];
         
         'h58: row_pitch <= regdata_in;
         'h5a: burst_enabled <= regdata_in[0];
+        'h5c: row_pitch_shift <= regdata_in[4:0];
         
         // sd card regs
         'h60: sd_reset <= regdata_in[8];
         'h62: sd_read <= regdata_in[8];
         'h64: sd_write <= regdata_in[8];
         'h66: sd_handshake_in <= regdata_in[8];
-        'h68: sd_addr_in[31:16] <= regdata_in;
-        'h6a: sd_addr_in[15:0] <= regdata_in;
+        'h68: sd_addr_in[31:16] <= regdata_in[15:0];
+        'h6a: sd_addr_in[15:0] <= regdata_in[15:0];
         'h6c: sd_data_in <= regdata_in[15:8];
       endcase
     end

ParseResult:
UPD HdlStmCase@@zorro_state to zorro_state
    INS HdlStmCaseType@@CASE to zorro_state
    INS HdlValueId@@zorro_state to zorro_state
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS HdlValueId@@RESET to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@Z3_CONFIGURING to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@CONFIGURED to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@Z2_WARMUP to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@WAIT_READ3 to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@WAIT_READ2 to 
    INS HdlValueId@@WAIT_READ to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@RESET_DVID to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@REGREAD_POST to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@REGREAD to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmCase@@zorro_state to zorro_state
    MOV tuple@@ to cases
    tuple
        HdlValueId: PAUSE
        HdlStmBlock: SEQ
            list: body
                HdlStmIf
                    HdlValueId: zaddr_autoconfig
                    HdlStmBlock: SEQ
                        list: body
                            HdlStmAssign
                                HdlValueId: Z2_CONFIGURING
                                HdlValueId: zorro_state
                            HdlStmAssign
                                HdlValueInt: 0
                                HdlValueId: ZORRO3
                    list: elifs
                        tuple
                            HdlOp: EQ
                                list: ops
                                    HdlOp: INDEX
                                        list: ops
                                            HdlValueId: z3addr
                                            HdlOp: DOWNTO
                                                list: ops
                                                    HdlValueInt: 31
                                                    HdlValueInt: 16
                                    HdlValueInt: ff00
                            HdlStmBlock: SEQ
                                list: body
                                    HdlStmAssign
                                        HdlValueId: Z3_CONFIGURING
                                        HdlValueId: zorro_state
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlStmIf
                HdlOp: AND_LOG
                    list: ops
                        HdlOp: EQ
                            list: ops
                                HdlOp: INDEX
                                    list: ops
                                        HdlValueId: znAS_sync
                                        HdlValueInt: 1
                                HdlValueInt: 1
                        HdlOp: EQ
                            list: ops
                                HdlOp: INDEX
                                    list: ops
                                        HdlValueId: znAS_sync
                                        HdlValueInt: 0
                                HdlValueInt: 1
                HdlStmBlock: SEQ
                    list: body
                        HdlStmAssign
                            HdlValueInt: 0
                            HdlValueId: zorro_ram_read_request
                        HdlStmAssign
                            HdlValueId: Z2_IDLE
                            HdlValueId: zorro_state
                        HdlStmAssign
                            HdlValueInt: 1
                            HdlValueId: z_ready
                list: elifs
                    tuple
                        HdlValueId: zorro_ram_read_done
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmAssign
                                    HdlOp: ADD
                                        list: ops
                                            HdlValueId: read_counter
                                            HdlValueInt: 1
                                    HdlValueId: read_counter
                                HdlStmAssign
                                    HdlValueInt: 0
                                    HdlValueId: zorro_ram_read_request
                                HdlStmIf
                                    HdlOp: GE
                                        list: ops
                                            HdlValueId: read_counter
                                            HdlValueId: dataout_time
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmAssign
                                                HdlValueId: WAIT_READ
                                                HdlValueId: zorro_state
                                    list: elifs
                                HdlStmAssign
                                    HdlValueId: zorro_ram_read_data
                                    HdlValueId: data
    DEL HdlStmCaseType@@CASE from zorro_state
    DEL HdlValueId@@zorro_state from zorro_state
    DEL HdlValueId@@RESET from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases
    DEL HdlValueId@@Z3_CONFIGURING from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases
    DEL HdlValueId@@CONFIGURED from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlValueId@@WAIT_READ2 from 
    DEL tuple@@ from cases
    DEL HdlValueId@@WAIT_READ from 
    DEL tuple@@ from cases
    DEL HdlValueId@@REGREAD from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases

UPD HdlStmCase@@zaddr_regpart to zaddr_regpart
    MOV tuple@@ to cases
    tuple
        HdlValueInt: 04
        HdlStmAssign
            HdlOp: INDEX
                list: ops
                    HdlValueId: regdata_in
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 1
                            HdlValueInt: 0
            HdlValueId: scalemode
    MOV tuple@@ to cases
    tuple
        HdlValueInt: 20
        HdlStmAssign
            HdlOp: INDEX
                list: ops
                    HdlValueId: regdata_in
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 10
                            HdlValueInt: 0
            HdlValueId: blitter_x1
    MOV tuple@@ to cases
    tuple
        HdlValueInt: 22
        HdlStmAssign
            HdlOp: INDEX
                list: ops
                    HdlValueId: regdata_in
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 10
                            HdlValueInt: 0
            HdlValueId: blitter_y1
    MOV tuple@@ to cases
    tuple
        HdlValueInt: 24
        HdlStmAssign
            HdlOp: INDEX
                list: ops
                    HdlValueId: regdata_in
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 10
                            HdlValueInt: 0
            HdlValueId: blitter_x2
    MOV tuple@@ to cases
    tuple
        HdlValueInt: 26
        HdlStmAssign
            HdlOp: INDEX
                list: ops
                    HdlValueId: regdata_in
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 10
                            HdlValueInt: 0
            HdlValueId: blitter_y2
    MOV tuple@@ to cases
    tuple
        HdlValueInt: 28
        HdlStmAssign
            HdlOp: INDEX
                list: ops
                    HdlValueId: regdata_in
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 15
                            HdlValueInt: 0
            HdlValueId: blitter_rgb
    MOV tuple@@ to cases
    tuple
        HdlValueInt: 2a
        HdlStmBlock: SEQ
            list: body
                HdlStmAssign
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: regdata_in
                            HdlOp: DOWNTO
                                list: ops
                                    HdlValueInt: 3
                                    HdlValueInt: 0
                    HdlValueId: blitter_enable
                HdlStmAssign
                    HdlValueId: blitter_x1
                    HdlValueId: blitter_curx
                HdlStmAssign
                    HdlValueId: blitter_y1
                    HdlValueId: blitter_cury
                HdlStmAssign
                    HdlValueId: blitter_x3
                    HdlValueId: blitter_curx2
                HdlStmAssign
                    HdlValueId: blitter_y3
                    HdlValueId: blitter_cury2
                HdlStmAssign
                    HdlOp: TERNARY
                        list: ops
                            HdlOp: GT
                                list: ops
                                    HdlValueId: blitter_x3
                                    HdlValueId: blitter_x4
                            HdlValueInt: 1
                            HdlValueInt: 0
                    HdlValueId: blitter_dirx
                HdlStmAssign
                    HdlOp: TERNARY
                        list: ops
                            HdlOp: GT
                                list: ops
                                    HdlValueId: blitter_y3
                                    HdlValueId: blitter_y4
                            HdlValueInt: 1
                            HdlValueInt: 0
                    HdlValueId: blitter_diry
                HdlStmAssign
                    HdlOp: ADD
                        list: ops
                            HdlValueId: blitter_base
                            HdlOp: SLL
                                list: ops
                                    HdlValueId: blitter_y1
                                    HdlValueInt: 11
                    HdlValueId: blitter_ptr
                HdlStmAssign
                    HdlValueInt: 1
                    HdlValueId: blitter_rgb32_t
    MOV tuple@@ to cases
    tuple
        HdlValueInt: 40
        HdlStmAssign
            HdlOp: INDEX
                list: ops
                    HdlValueId: regdata_in
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 10
                            HdlValueInt: 0
            HdlValueId: sprite_ax
    MOV tuple@@ to cases
    tuple
        HdlValueInt: 42
        HdlStmAssign
            HdlOp: INDEX
                list: ops
                    HdlValueId: regdata_in
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 10
                            HdlValueInt: 0
            HdlValueId: sprite_ay
    MOV tuple@@ to cases
    tuple
        HdlValueInt: 44
        HdlStmAssign
            HdlOp: INDEX
                list: ops
                    HdlValueId: regdata_in
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 10
                            HdlValueInt: 0
            HdlValueId: sprite_ax2
    UPD HdlValueInt@@06 to 02
    UPD HdlValueInt@@0a to 06
    MOV HdlValueInt@@0a to 
    HdlValueInt: 0a
    UPD HdlValueInt@@20 to 76
    UPD HdlValueInt@@22 to 78
    UPD HdlValueInt@@24 to 7a
    UPD HdlValueInt@@26 to 7c
    UPD HdlValueInt@@2e to 20
    UPD HdlValueInt@@30 to 22
    UPD HdlValueInt@@32 to 24
    UPD HdlValueInt@@40 to 2e
    UPD HdlValueInt@@42 to 30
    UPD HdlValueInt@@44 to 32
    DEL tuple@@ from cases
    DEL HdlValueInt@@12 from 
    DEL tuple@@ from cases
    DEL tuple@@ from cases
    tuple
        HdlValueInt: 2c
        HdlStmAssign
            HdlOp: INDEX
                list: ops
                    HdlValueId: regdata_in
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 10
                            HdlValueInt: 0
            HdlValueId: blitter_x3
    DEL tuple@@ from cases
    tuple
        HdlValueInt: 46
        HdlStmAssign
            HdlOp: INDEX
                list: ops
                    HdlValueId: regdata_in
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 10
                            HdlValueInt: 0
            HdlValueId: sprite_ay2
    DEL tuple@@ from cases
    tuple
        HdlValueInt: 52
        HdlStmAssign
            HdlOp: INDEX
                list: ops
                    HdlValueId: regdata_in
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 5
                            HdlValueInt: 0
            HdlValueId: capture_freq
    DEL tuple@@ from cases
    tuple
        HdlValueInt: 54
        HdlStmAssign
            HdlOp: INDEX
                list: ops
                    HdlValueId: regdata_in
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 7
                            HdlValueInt: 0
            HdlValueId: capture_porch
    DEL tuple@@ from cases
    tuple
        HdlValueInt: 56
        HdlStmAssign
            HdlOp: INDEX
                list: ops
                    HdlValueId: regdata_in
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 9
                            HdlValueInt: 0
            HdlValueId: capture_shift

UPD HdlStmCase@@zaddr_regpart to zaddr_regpart
    INS tuple@@ to cases
    tuple
        HdlValueInt: 00
        HdlStmAssign
            HdlOp: INDEX
                list: ops
                    HdlValueId: regdata_in
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 15
                            HdlValueInt: 0
            HdlValueId: refresh_time
    INS tuple@@ to cases
    INS tuple@@ to cases
    tuple
        HdlValueInt: 80
        HdlStmAssign
            HdlOp: INDEX
                list: ops
                    HdlValueId: regdata_in
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 4
                            HdlValueInt: 0
            HdlValueId: ram_refresh_lines
    INS tuple@@ to cases
    tuple
        HdlValueInt: 70
        HdlStmAssign
            HdlOp: INDEX
                list: ops
                    HdlValueId: regdata_in
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 11
                            HdlValueInt: 0
            HdlValueId: h_sync_start
    INS tuple@@ to cases
    tuple
        HdlValueInt: 72
        HdlStmAssign
            HdlOp: INDEX
                list: ops
                    HdlValueId: regdata_in
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 11
                            HdlValueInt: 0
            HdlValueId: h_sync_end
    INS tuple@@ to cases
    tuple
        HdlValueInt: 74
        HdlStmAssign
            HdlOp: INDEX
                list: ops
                    HdlValueId: regdata_in
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 11
                            HdlValueInt: 0
            HdlValueId: h_max
    INS tuple@@ to cases
    tuple
        HdlValueInt: 26
        HdlStmAssign
            HdlOp: INDEX
                list: ops
                    HdlValueId: regdata_in
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 11
                            HdlValueInt: 0
            HdlValueId: blitter_y2
    INS tuple@@ to cases
    tuple
        HdlValueInt: 2c
        HdlStmAssign
            HdlOp: INDEX
                list: ops
                    HdlValueId: regdata_in
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 11
                            HdlValueInt: 0
            HdlValueId: blitter_x3
    INS tuple@@ to cases
    tuple
        HdlValueInt: 5c
        HdlStmAssign
            HdlOp: INDEX
                list: ops
                    HdlValueId: regdata_in
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 4
                            HdlValueInt: 0
            HdlValueId: row_pitch_shift
    INS HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlStmAssign
                HdlOp: INDEX
                    list: ops
                        HdlValueId: regdata_in
                        HdlOp: DOWNTO
                            list: ops
                                HdlValueInt: 11
                                HdlValueInt: 0
                HdlValueId: screen_w
            HdlStmAssign
                HdlOp: INDEX
                    list: ops
                        HdlValueId: regdata_in
                        HdlOp: DOWNTO
                            list: ops
                                HdlValueInt: 11
                                HdlValueInt: 0
                HdlValueId: h_rez
    INS HdlStmBlock@@SEQ to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmAssign@@ to 
    UPD HdlValueId@@blitter_y3 to blitter_x1
    UPD HdlOp@@INDEX to INDEX
        UPD HdlOp@@DOWNTO to DOWNTO
            UPD HdlValueInt@@10 to 11

UPD HdlStmAssign@@ to 
    UPD HdlValueId@@blitter_x4 to blitter_y1
    UPD HdlOp@@INDEX to INDEX
        UPD HdlOp@@DOWNTO to DOWNTO
            UPD HdlValueInt@@10 to 11

UPD HdlStmAssign@@ to 
    UPD HdlValueId@@blitter_y4 to blitter_x2
    UPD HdlOp@@INDEX to INDEX
        UPD HdlOp@@DOWNTO to DOWNTO
            UPD HdlValueInt@@10 to 11

UPD HdlStmAssign@@ to 
    UPD HdlValueId@@sprite_ax to blitter_y3
    UPD HdlOp@@INDEX to INDEX
        UPD HdlOp@@DOWNTO to DOWNTO
            UPD HdlValueInt@@10 to 11

UPD HdlStmAssign@@ to 
    UPD HdlValueId@@sprite_ay to blitter_x4
    UPD HdlOp@@INDEX to INDEX
        UPD HdlOp@@DOWNTO to DOWNTO
            UPD HdlValueInt@@10 to 11

UPD HdlStmAssign@@ to 
    UPD HdlValueId@@sprite_ax2 to blitter_y4
    UPD HdlOp@@INDEX to INDEX
        UPD HdlOp@@DOWNTO to DOWNTO
            UPD HdlValueInt@@10 to 11

UPD HdlStmAssign@@ to 
    MOV HdlValueId@@regdata_in to 
    HdlValueId: regdata_in

UPD HdlStmAssign@@ to 
    MOV HdlValueId@@regdata_in to 
    HdlValueId: regdata_in

UPD HdlStmAssign@@ to 
    UPD HdlOp@@ADD to ADD
        UPD HdlOp@@SLL to SLL
            INS HdlValueId@@row_pitch_shift to ops

DEL HdlStmAssign@@ from body
HdlStmAssign
    HdlOp: TERNARY
        list: ops
            HdlOp: GT
                list: ops
                    HdlValueId: blitter_y3
                    HdlValueId: blitter_y4
            HdlValueInt: 1
            HdlValueInt: 0
    HdlValueId: blitter_diry

UPD HdlStmAssign@@ to 
    UPD HdlOp@@ADD to ADD
        UPD HdlOp@@SLL to SLL
            DEL HdlValueInt@@11 from ops


CommitId: d8a08b1a977d4573a8d123f4d41137962d28fc71
beta release WIP. 32bit, fix some timing problems, introduce custom refresh, fix sd card drivers, sd card CRC, custom resolutions, fix z3 register read model
--- a/z2-minispartan/z2.v
+++ b/z2-minispartan/z2.v
@@ -1300,7 +1323,7 @@ always @(posedge z_sample_clk) begin
     
     RAM_READY2: begin
       // start fetching a row
-      ram_addr  <= fetch_y+glitchx2_reg; //((fetch_y << 11)|glitchx2_reg);
+      ram_addr  <= fetch_y+glitchx2_reg;
       ram_write <= 0;
       ram_byte_enable <= 'b11;
       fetch_x <= 0;

ParseResult:
UPD HdlStmCase@@zorro_state to zorro_state
    INS HdlStmCaseType@@CASE to zorro_state
    INS HdlValueId@@zorro_state to zorro_state
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS HdlValueId@@RESET to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@Z3_CONFIGURING to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@CONFIGURED to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@Z2_WARMUP to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@WAIT_READ3 to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@WAIT_READ2 to 
    INS HdlValueId@@WAIT_READ to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@RESET_DVID to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@REGREAD_POST to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@REGREAD to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmCase@@zaddr_regpart to zaddr_regpart
    INS tuple@@ to cases
    tuple
        HdlValueInt: 00
        HdlStmAssign
            HdlOp: INDEX
                list: ops
                    HdlValueId: regdata_in
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 15
                            HdlValueInt: 0
            HdlValueId: refresh_time
    INS tuple@@ to cases
    INS tuple@@ to cases
    tuple
        HdlValueInt: 80
        HdlStmAssign
            HdlOp: INDEX
                list: ops
                    HdlValueId: regdata_in
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 4
                            HdlValueInt: 0
            HdlValueId: ram_refresh_lines
    INS tuple@@ to cases
    tuple
        HdlValueInt: 70
        HdlStmAssign
            HdlOp: INDEX
                list: ops
                    HdlValueId: regdata_in
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 11
                            HdlValueInt: 0
            HdlValueId: h_sync_start
    INS tuple@@ to cases
    tuple
        HdlValueInt: 72
        HdlStmAssign
            HdlOp: INDEX
                list: ops
                    HdlValueId: regdata_in
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 11
                            HdlValueInt: 0
            HdlValueId: h_sync_end
    INS tuple@@ to cases
    tuple
        HdlValueInt: 74
        HdlStmAssign
            HdlOp: INDEX
                list: ops
                    HdlValueId: regdata_in
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 11
                            HdlValueInt: 0
            HdlValueId: h_max
    INS tuple@@ to cases
    tuple
        HdlValueInt: 26
        HdlStmAssign
            HdlOp: INDEX
                list: ops
                    HdlValueId: regdata_in
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 11
                            HdlValueInt: 0
            HdlValueId: blitter_y2
    INS tuple@@ to cases
    tuple
        HdlValueInt: 2c
        HdlStmAssign
            HdlOp: INDEX
                list: ops
                    HdlValueId: regdata_in
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 11
                            HdlValueInt: 0
            HdlValueId: blitter_x3
    INS tuple@@ to cases
    tuple
        HdlValueInt: 5c
        HdlStmAssign
            HdlOp: INDEX
                list: ops
                    HdlValueId: regdata_in
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 4
                            HdlValueInt: 0
            HdlValueId: row_pitch_shift
    INS HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlStmAssign
                HdlOp: INDEX
                    list: ops
                        HdlValueId: regdata_in
                        HdlOp: DOWNTO
                            list: ops
                                HdlValueInt: 11
                                HdlValueInt: 0
                HdlValueId: screen_w
            HdlStmAssign
                HdlOp: INDEX
                    list: ops
                        HdlValueId: regdata_in
                        HdlOp: DOWNTO
                            list: ops
                                HdlValueInt: 11
                                HdlValueInt: 0
                HdlValueId: h_rez
    INS HdlStmBlock@@SEQ to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ


CommitId: d8a08b1a977d4573a8d123f4d41137962d28fc71
beta release WIP. 32bit, fix some timing problems, introduce custom refresh, fix sd card drivers, sd card CRC, custom resolutions, fix z3 register read model
--- a/z2-minispartan/z2.v
+++ b/z2-minispartan/z2.v
@@ -1310,8 +1333,7 @@ always @(posedge z_sample_clk) begin
         ram_burst <= 0;
         ram_arbiter_state <= RAM_BURST_OFF;
       end else begin
-        //ram_burst <= 0;
-        ram_burst <= burst_enabled; // FIXME
+        ram_burst <= 1; //burst_enabled; // FIXME
         ram_arbiter_state <= RAM_BURST_ON;
       end
     end

ParseResult:
UPD HdlStmCase@@zorro_state to zorro_state
    INS HdlStmCaseType@@CASE to zorro_state
    INS HdlValueId@@zorro_state to zorro_state
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS HdlValueId@@RESET to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@Z3_CONFIGURING to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@CONFIGURED to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@Z2_WARMUP to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@WAIT_READ3 to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@WAIT_READ2 to 
    INS HdlValueId@@WAIT_READ to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@RESET_DVID to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@REGREAD_POST to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@REGREAD to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmCase@@zaddr_regpart to zaddr_regpart
    INS tuple@@ to cases
    tuple
        HdlValueInt: 00
        HdlStmAssign
            HdlOp: INDEX
                list: ops
                    HdlValueId: regdata_in
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 15
                            HdlValueInt: 0
            HdlValueId: refresh_time
    INS tuple@@ to cases
    INS tuple@@ to cases
    tuple
        HdlValueInt: 80
        HdlStmAssign
            HdlOp: INDEX
                list: ops
                    HdlValueId: regdata_in
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 4
                            HdlValueInt: 0
            HdlValueId: ram_refresh_lines
    INS tuple@@ to cases
    tuple
        HdlValueInt: 70
        HdlStmAssign
            HdlOp: INDEX
                list: ops
                    HdlValueId: regdata_in
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 11
                            HdlValueInt: 0
            HdlValueId: h_sync_start
    INS tuple@@ to cases
    tuple
        HdlValueInt: 72
        HdlStmAssign
            HdlOp: INDEX
                list: ops
                    HdlValueId: regdata_in
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 11
                            HdlValueInt: 0
            HdlValueId: h_sync_end
    INS tuple@@ to cases
    tuple
        HdlValueInt: 74
        HdlStmAssign
            HdlOp: INDEX
                list: ops
                    HdlValueId: regdata_in
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 11
                            HdlValueInt: 0
            HdlValueId: h_max
    INS tuple@@ to cases
    tuple
        HdlValueInt: 26
        HdlStmAssign
            HdlOp: INDEX
                list: ops
                    HdlValueId: regdata_in
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 11
                            HdlValueInt: 0
            HdlValueId: blitter_y2
    INS tuple@@ to cases
    tuple
        HdlValueInt: 2c
        HdlStmAssign
            HdlOp: INDEX
                list: ops
                    HdlValueId: regdata_in
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 11
                            HdlValueInt: 0
            HdlValueId: blitter_x3
    INS tuple@@ to cases
    tuple
        HdlValueInt: 5c
        HdlStmAssign
            HdlOp: INDEX
                list: ops
                    HdlValueId: regdata_in
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 4
                            HdlValueInt: 0
            HdlValueId: row_pitch_shift
    INS HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlStmAssign
                HdlOp: INDEX
                    list: ops
                        HdlValueId: regdata_in
                        HdlOp: DOWNTO
                            list: ops
                                HdlValueInt: 11
                                HdlValueInt: 0
                HdlValueId: screen_w
            HdlStmAssign
                HdlOp: INDEX
                    list: ops
                        HdlValueId: regdata_in
                        HdlOp: DOWNTO
                            list: ops
                                HdlValueInt: 11
                                HdlValueInt: 0
                HdlValueId: h_rez
    INS HdlStmBlock@@SEQ to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmAssign@@ to 
    DEL HdlValueId@@burst_enabled from 


CommitId: d8a08b1a977d4573a8d123f4d41137962d28fc71
beta release WIP. 32bit, fix some timing problems, introduce custom refresh, fix sd card drivers, sd card CRC, custom resolutions, fix z3 register read model
--- a/z2-minispartan/z2.v
+++ b/z2-minispartan/z2.v
@@ -1326,11 +1348,28 @@ always @(posedge z_sample_clk) begin
         ram_arbiter_state <= RAM_ROW_FETCHED;
     end
     
+    RAM_REFRESH: begin
+      if (cmd_ready) begin
+        ram_enable <= 1;
+        ram_write <= 0;
+        ram_addr <= refresh_addr;
+        refresh_addr <= refresh_addr + 512;
+        if (refresh_counter > refresh_time) begin
+          refresh_counter <= 0;
+          ram_enable <= 0;
+          ram_arbiter_state <= RAM_ROW_FETCHED;
+        end else begin
+          refresh_counter <= refresh_counter + 1'b1;
+        end
+      end
+    end
+    
     RAM_FETCHING_ROW8: begin
       if (fetch_x == (screen_w + margin_x)) begin
         row_fetched <= 1; // row completely fetched
         ram_burst <= 0;
         ram_arbiter_state <= RAM_READY;
+        
       end else if (data_out_ready) begin
         ram_enable <= 1;
         ram_write <= 0;

ParseResult:
UPD HdlStmCase@@zorro_state to zorro_state
    INS HdlStmCaseType@@CASE to zorro_state
    INS HdlValueId@@zorro_state to zorro_state
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS HdlValueId@@RESET to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@Z3_CONFIGURING to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@CONFIGURED to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@Z2_WARMUP to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@WAIT_READ3 to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@WAIT_READ2 to 
    INS HdlValueId@@WAIT_READ to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@RESET_DVID to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@REGREAD_POST to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@REGREAD to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

INS HdlStmIf@@ to body

UPD HdlStmCase@@zaddr_regpart to zaddr_regpart
    INS tuple@@ to cases
    tuple
        HdlValueInt: 00
        HdlStmAssign
            HdlOp: INDEX
                list: ops
                    HdlValueId: regdata_in
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 15
                            HdlValueInt: 0
            HdlValueId: refresh_time
    INS tuple@@ to cases
    INS tuple@@ to cases
    tuple
        HdlValueInt: 80
        HdlStmAssign
            HdlOp: INDEX
                list: ops
                    HdlValueId: regdata_in
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 4
                            HdlValueInt: 0
            HdlValueId: ram_refresh_lines
    INS tuple@@ to cases
    tuple
        HdlValueInt: 70
        HdlStmAssign
            HdlOp: INDEX
                list: ops
                    HdlValueId: regdata_in
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 11
                            HdlValueInt: 0
            HdlValueId: h_sync_start
    INS tuple@@ to cases
    tuple
        HdlValueInt: 72
        HdlStmAssign
            HdlOp: INDEX
                list: ops
                    HdlValueId: regdata_in
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 11
                            HdlValueInt: 0
            HdlValueId: h_sync_end
    INS tuple@@ to cases
    tuple
        HdlValueInt: 74
        HdlStmAssign
            HdlOp: INDEX
                list: ops
                    HdlValueId: regdata_in
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 11
                            HdlValueInt: 0
            HdlValueId: h_max
    INS tuple@@ to cases
    tuple
        HdlValueInt: 26
        HdlStmAssign
            HdlOp: INDEX
                list: ops
                    HdlValueId: regdata_in
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 11
                            HdlValueInt: 0
            HdlValueId: blitter_y2
    INS tuple@@ to cases
    tuple
        HdlValueInt: 2c
        HdlStmAssign
            HdlOp: INDEX
                list: ops
                    HdlValueId: regdata_in
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 11
                            HdlValueInt: 0
            HdlValueId: blitter_x3
    INS tuple@@ to cases
    tuple
        HdlValueInt: 5c
        HdlStmAssign
            HdlOp: INDEX
                list: ops
                    HdlValueId: regdata_in
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 4
                            HdlValueInt: 0
            HdlValueId: row_pitch_shift
    INS HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlStmAssign
                HdlOp: INDEX
                    list: ops
                        HdlValueId: regdata_in
                        HdlOp: DOWNTO
                            list: ops
                                HdlValueInt: 11
                                HdlValueInt: 0
                HdlValueId: screen_w
            HdlStmAssign
                HdlOp: INDEX
                    list: ops
                        HdlValueId: regdata_in
                        HdlOp: DOWNTO
                            list: ops
                                HdlValueInt: 11
                                HdlValueInt: 0
                HdlValueId: h_rez
    INS HdlStmBlock@@SEQ to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueId: refresh_addr
    HdlValueId: ram_addr

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlOp: ADD
        list: ops
            HdlValueId: refresh_addr
            HdlValueInt: 512
    HdlValueId: refresh_addr

INS HdlStmIf@@ to body

UPD HdlStmAssign@@ to 
    INS HdlOp@@INDEX to 
    UPD HdlOp@@INDEX to INDEX
        INS list@@ops to INDEX
        INS HdlOp@@DOWNTO to ops
        HdlOp: DOWNTO
            list: ops
                HdlValueInt: 15
                HdlValueInt: 0

UPD HdlStmAssign@@ to 
    INS HdlOp@@INDEX to 
    UPD HdlOp@@INDEX to INDEX
        INS list@@ops to INDEX
        INS HdlOp@@DOWNTO to ops
        HdlOp: DOWNTO
            list: ops
                HdlValueInt: 15
                HdlValueInt: 0

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: refresh_counter

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueId: RAM_ROW_FETCHED
    HdlValueId: ram_arbiter_state


CommitId: d8a08b1a977d4573a8d123f4d41137962d28fc71
beta release WIP. 32bit, fix some timing problems, introduce custom refresh, fix sd card drivers, sd card CRC, custom resolutions, fix z3 register read model
--- a/z2-minispartan/z2.v
+++ b/z2-minispartan/z2.v
@@ -1341,7 +1380,6 @@ always @(posedge z_sample_clk) begin
         fetch_x2 <= fetch_x2 + 1'b1;
         
         fetch_buffer[fetch_x] <= ram_data_out;
-        //fetch_buffer2[fetch_x] <= ram_data_out;
       end
     end
       

ParseResult:
UPD HdlStmCase@@ram_arbiter_state to ram_arbiter_state
    INS tuple@@ to cases
    INS HdlValueId@@RAM_REFRESH to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmIf@@ to 
    UPD HdlOp@@OR_LOG to OR_LOG
        MOV HdlOp@@GT to ops
        HdlOp: GT
            list: ops
                HdlValueId: counter_x
                HdlValueId: safe_x2
        DEL HdlOp@@LT from ops
        HdlOp: LT
            list: ops
                HdlValueId: counter_x
                HdlValueId: safe_x1
        DEL list@@ops from OR_LOG
    UPD HdlOp@@AND_LOG to AND_LOG
        UPD HdlOp@@EQ to GE
        MOV HdlOp@@EQ to ops
        HdlOp: EQ
            list: ops
                HdlValueId: blitter_enable
                HdlValueInt: 2
        DEL HdlValueId@@cmd_ready from ops
        DEL list@@ops from AND_LOG
    UPD HdlOp@@EQ to EQ
        UPD HdlValueId@@capture_mode to display_in_refresh_lines
        MOV HdlValueId@@capture_mode to ops
        HdlValueId: capture_mode
        DEL HdlValueInt@@1 from ops
        DEL list@@ops from EQ
    DEL HdlOp@@OR_LOG from 
    DEL HdlOp@@AND_LOG from 
    DEL tuple@@ from elifs
    tuple
        HdlOp: AND_LOG
            list: ops
                HdlOp: EQ
                    list: ops
                        HdlValueId: blitter_enable
                        HdlValueInt: 4
                HdlValueId: cmd_ready
        HdlStmBlock: SEQ
            list: body
                HdlStmAssign
                    HdlOp: ADD
                        list: ops
                            HdlOp: ADD
                                list: ops
                                    HdlValueId: blitter_base
                                    HdlOp: SLL
                                        list: ops
                                            HdlValueId: blitter_cury
                                            HdlValueInt: 11
                            HdlValueId: blitter_curx
                    HdlValueId: ram_addr
                HdlStmAssign
                    HdlValueId: blitter_copy_rgb
                    HdlValueId: ram_data_in
                HdlStmAssign
                    HdlValueInt: 1
                    HdlValueId: ram_write
                HdlStmAssign
                    HdlValueInt: 1
                    HdlValueId: ram_enable
                HdlStmAssign
                    HdlValueInt: 11
                    HdlValueId: ram_byte_enable
                HdlStmIf
                    HdlOp: NE
                        list: ops
                            HdlValueId: blitter_curx2
                            HdlValueId: blitter_x4
                    HdlStmBlock: SEQ
                        list: body
                            HdlStmIf
                                HdlOp: EQ
                                    list: ops
                                        HdlValueId: blitter_dirx
                                        HdlValueInt: 1
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlStmAssign
                                            HdlOp: SUB
                                                list: ops
                                                    HdlValueId: blitter_curx2
                                                    HdlValueInt: 1
                                            HdlValueId: blitter_curx2
                                        HdlStmAssign
                                            HdlOp: SUB
                                                list: ops
                                                    HdlValueId: blitter_curx
                                                    HdlValueInt: 1
                                            HdlValueId: blitter_curx
                                list: elifs
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlStmAssign
                                            HdlOp: ADD
                                                list: ops
                                                    HdlValueId: blitter_curx2
                                                    HdlValueInt: 1
                                            HdlValueId: blitter_curx2
                                        HdlStmAssign
                                            HdlOp: ADD
                                                list: ops
                                                    HdlValueId: blitter_curx
                                                    HdlValueInt: 1
                                            HdlValueId: blitter_curx
                    list: elifs
                        tuple
                            HdlOp: EQ
                                list: ops
                                    HdlValueId: blitter_cury2
                                    HdlValueId: blitter_y4
                            HdlStmBlock: SEQ
                                list: body
                        tuple
                            HdlOp: EQ
                                list: ops
                                    HdlValueId: blitter_diry
                                    HdlValueInt: 0
                            HdlStmBlock: SEQ
                                list: body
                                    HdlStmAssign
                                        HdlValueId: blitter_x1
                                        HdlValueId: blitter_curx
                                    HdlStmAssign
                                        HdlValueId: blitter_x3
                                        HdlValueId: blitter_curx2
                                    HdlStmAssign
                                        HdlOp: ADD
                                            list: ops
                                                HdlValueId: blitter_cury
                                                HdlValueInt: 1
                                        HdlValueId: blitter_cury
                                    HdlStmAssign
                                        HdlOp: ADD
                                            list: ops
                                                HdlValueId: blitter_cury2
                                                HdlValueInt: 1
                                        HdlValueId: blitter_cury2
                    HdlStmBlock: SEQ
                        list: body
                            HdlStmAssign
                                HdlValueId: blitter_x1
                                HdlValueId: blitter_curx
                            HdlStmAssign
                                HdlValueId: blitter_x3
                                HdlValueId: blitter_curx2
                            HdlStmAssign
                                HdlOp: SUB
                                    list: ops
                                        HdlValueId: blitter_cury
                                        HdlValueInt: 1
                                HdlValueId: blitter_cury
                            HdlStmAssign
                                HdlOp: SUB
                                    list: ops
                                        HdlValueId: blitter_cury2
                                        HdlValueInt: 1
                                HdlValueId: blitter_cury2
                HdlStmAssign
                    HdlValueInt: 5
                    HdlValueId: blitter_enable
    DEL HdlOp@@EQ from 
    HdlOp: EQ
        list: ops
            HdlValueId: blitter_enable
            HdlValueInt: 5
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from elifs
    DEL HdlOp@@EQ from 


CommitId: d8a08b1a977d4573a8d123f4d41137962d28fc71
beta release WIP. 32bit, fix some timing problems, introduce custom refresh, fix sd card drivers, sd card CRC, custom resolutions, fix z3 register read model
--- a/z2-minispartan/z2.v
+++ b/z2-minispartan/z2.v
@@ -1350,7 +1388,7 @@ always @(posedge z_sample_clk) begin
         row_fetched <= 0;
         fetch_x <= 0;
         if (counter_y == screen_h-1) begin
-          fetch_y <= pan_ptr; // TODO pan point
+          fetch_y <= pan_ptr;
           linescalecount <= 0;
         end else if (linescalecount < scalemode) begin
           linescalecount <= linescalecount + 1'b1;

ParseResult:
UPD HdlStmCase@@ram_arbiter_state to ram_arbiter_state
    INS tuple@@ to cases
    INS HdlValueId@@RAM_REFRESH to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmIf@@ to 
    UPD HdlOp@@OR_LOG to OR_LOG
        MOV HdlOp@@GT to ops
        HdlOp: GT
            list: ops
                HdlValueId: counter_x
                HdlValueId: safe_x2
        DEL HdlOp@@LT from ops
        HdlOp: LT
            list: ops
                HdlValueId: counter_x
                HdlValueId: safe_x1
        DEL list@@ops from OR_LOG
    UPD HdlOp@@AND_LOG to AND_LOG
        UPD HdlOp@@EQ to GE
        MOV HdlOp@@EQ to ops
        HdlOp: EQ
            list: ops
                HdlValueId: blitter_enable
                HdlValueInt: 2
        DEL HdlValueId@@cmd_ready from ops
        DEL list@@ops from AND_LOG
    UPD HdlOp@@EQ to EQ
        UPD HdlValueId@@capture_mode to display_in_refresh_lines
        MOV HdlValueId@@capture_mode to ops
        HdlValueId: capture_mode
        DEL HdlValueInt@@1 from ops
        DEL list@@ops from EQ
    DEL HdlOp@@OR_LOG from 
    DEL HdlOp@@AND_LOG from 
    DEL tuple@@ from elifs
    tuple
        HdlOp: AND_LOG
            list: ops
                HdlOp: EQ
                    list: ops
                        HdlValueId: blitter_enable
                        HdlValueInt: 4
                HdlValueId: cmd_ready
        HdlStmBlock: SEQ
            list: body
                HdlStmAssign
                    HdlOp: ADD
                        list: ops
                            HdlOp: ADD
                                list: ops
                                    HdlValueId: blitter_base
                                    HdlOp: SLL
                                        list: ops
                                            HdlValueId: blitter_cury
                                            HdlValueInt: 11
                            HdlValueId: blitter_curx
                    HdlValueId: ram_addr
                HdlStmAssign
                    HdlValueId: blitter_copy_rgb
                    HdlValueId: ram_data_in
                HdlStmAssign
                    HdlValueInt: 1
                    HdlValueId: ram_write
                HdlStmAssign
                    HdlValueInt: 1
                    HdlValueId: ram_enable
                HdlStmAssign
                    HdlValueInt: 11
                    HdlValueId: ram_byte_enable
                HdlStmIf
                    HdlOp: NE
                        list: ops
                            HdlValueId: blitter_curx2
                            HdlValueId: blitter_x4
                    HdlStmBlock: SEQ
                        list: body
                            HdlStmIf
                                HdlOp: EQ
                                    list: ops
                                        HdlValueId: blitter_dirx
                                        HdlValueInt: 1
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlStmAssign
                                            HdlOp: SUB
                                                list: ops
                                                    HdlValueId: blitter_curx2
                                                    HdlValueInt: 1
                                            HdlValueId: blitter_curx2
                                        HdlStmAssign
                                            HdlOp: SUB
                                                list: ops
                                                    HdlValueId: blitter_curx
                                                    HdlValueInt: 1
                                            HdlValueId: blitter_curx
                                list: elifs
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlStmAssign
                                            HdlOp: ADD
                                                list: ops
                                                    HdlValueId: blitter_curx2
                                                    HdlValueInt: 1
                                            HdlValueId: blitter_curx2
                                        HdlStmAssign
                                            HdlOp: ADD
                                                list: ops
                                                    HdlValueId: blitter_curx
                                                    HdlValueInt: 1
                                            HdlValueId: blitter_curx
                    list: elifs
                        tuple
                            HdlOp: EQ
                                list: ops
                                    HdlValueId: blitter_cury2
                                    HdlValueId: blitter_y4
                            HdlStmBlock: SEQ
                                list: body
                        tuple
                            HdlOp: EQ
                                list: ops
                                    HdlValueId: blitter_diry
                                    HdlValueInt: 0
                            HdlStmBlock: SEQ
                                list: body
                                    HdlStmAssign
                                        HdlValueId: blitter_x1
                                        HdlValueId: blitter_curx
                                    HdlStmAssign
                                        HdlValueId: blitter_x3
                                        HdlValueId: blitter_curx2
                                    HdlStmAssign
                                        HdlOp: ADD
                                            list: ops
                                                HdlValueId: blitter_cury
                                                HdlValueInt: 1
                                        HdlValueId: blitter_cury
                                    HdlStmAssign
                                        HdlOp: ADD
                                            list: ops
                                                HdlValueId: blitter_cury2
                                                HdlValueInt: 1
                                        HdlValueId: blitter_cury2
                    HdlStmBlock: SEQ
                        list: body
                            HdlStmAssign
                                HdlValueId: blitter_x1
                                HdlValueId: blitter_curx
                            HdlStmAssign
                                HdlValueId: blitter_x3
                                HdlValueId: blitter_curx2
                            HdlStmAssign
                                HdlOp: SUB
                                    list: ops
                                        HdlValueId: blitter_cury
                                        HdlValueInt: 1
                                HdlValueId: blitter_cury
                            HdlStmAssign
                                HdlOp: SUB
                                    list: ops
                                        HdlValueId: blitter_cury2
                                        HdlValueInt: 1
                                HdlValueId: blitter_cury2
                HdlStmAssign
                    HdlValueInt: 5
                    HdlValueId: blitter_enable
    DEL HdlOp@@EQ from 
    HdlOp: EQ
        list: ops
            HdlValueId: blitter_enable
            HdlValueInt: 5
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from elifs
    DEL HdlOp@@EQ from 

UPD HdlStmAssign@@ to 
    INS HdlValueInt@@1 to 


CommitId: d8a08b1a977d4573a8d123f4d41137962d28fc71
beta release WIP. 32bit, fix some timing problems, introduce custom refresh, fix sd card drivers, sd card CRC, custom resolutions, fix z3 register read model
--- a/z2-minispartan/z2.v
+++ b/z2-minispartan/z2.v
@@ -1360,16 +1398,15 @@ always @(posedge z_sample_clk) begin
         end
         
         ram_arbiter_state <= RAM_READY;
-        
-      end else if (counter_x < safe_x1 || counter_x > safe_x2) begin
+      end else if (/*counter_x < safe_x1 || */counter_x > safe_x2) begin
         // do nothing if not in safe area
         
       // BLITTER ----------------------------------------------------------------
       end else if (blitter_enable==1 && cmd_ready) begin
-        if (colormode==2) begin
+        /*if (colormode==2) begin
           blitter_rgb <= blitter_rgb32[blitter_rgb32_t];
-          blitter_rgb32_t <= ~blitter_rgb32_t;
         end
+        blitter_rgb32_t <= ~blitter_rgb32_t;*/
         
         // rect fill blitter
         if (blitter_curx <= blitter_x2) begin

ParseResult:
UPD HdlStmCase@@ram_arbiter_state to ram_arbiter_state
    INS tuple@@ to cases
    INS HdlValueId@@RAM_REFRESH to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmIf@@ to 
    INS HdlValueId@@cmd_ready to 
    INS HdlStmBlock@@SEQ to 
    INS list@@elifs to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmIf@@ to 
    UPD HdlOp@@OR_LOG to OR_LOG
        MOV HdlOp@@GT to ops
        HdlOp: GT
            list: ops
                HdlValueId: counter_x
                HdlValueId: safe_x2
        DEL HdlOp@@LT from ops
        HdlOp: LT
            list: ops
                HdlValueId: counter_x
                HdlValueId: safe_x1
        DEL list@@ops from OR_LOG
    UPD HdlOp@@AND_LOG to AND_LOG
        UPD HdlOp@@EQ to GE
        MOV HdlOp@@EQ to ops
        HdlOp: EQ
            list: ops
                HdlValueId: blitter_enable
                HdlValueInt: 2
        DEL HdlValueId@@cmd_ready from ops
        DEL list@@ops from AND_LOG
    UPD HdlOp@@EQ to EQ
        UPD HdlValueId@@capture_mode to display_in_refresh_lines
        MOV HdlValueId@@capture_mode to ops
        HdlValueId: capture_mode
        DEL HdlValueInt@@1 from ops
        DEL list@@ops from EQ
    DEL HdlOp@@OR_LOG from 
    DEL HdlOp@@AND_LOG from 
    DEL tuple@@ from elifs
    tuple
        HdlOp: AND_LOG
            list: ops
                HdlOp: EQ
                    list: ops
                        HdlValueId: blitter_enable
                        HdlValueInt: 4
                HdlValueId: cmd_ready
        HdlStmBlock: SEQ
            list: body
                HdlStmAssign
                    HdlOp: ADD
                        list: ops
                            HdlOp: ADD
                                list: ops
                                    HdlValueId: blitter_base
                                    HdlOp: SLL
                                        list: ops
                                            HdlValueId: blitter_cury
                                            HdlValueInt: 11
                            HdlValueId: blitter_curx
                    HdlValueId: ram_addr
                HdlStmAssign
                    HdlValueId: blitter_copy_rgb
                    HdlValueId: ram_data_in
                HdlStmAssign
                    HdlValueInt: 1
                    HdlValueId: ram_write
                HdlStmAssign
                    HdlValueInt: 1
                    HdlValueId: ram_enable
                HdlStmAssign
                    HdlValueInt: 11
                    HdlValueId: ram_byte_enable
                HdlStmIf
                    HdlOp: NE
                        list: ops
                            HdlValueId: blitter_curx2
                            HdlValueId: blitter_x4
                    HdlStmBlock: SEQ
                        list: body
                            HdlStmIf
                                HdlOp: EQ
                                    list: ops
                                        HdlValueId: blitter_dirx
                                        HdlValueInt: 1
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlStmAssign
                                            HdlOp: SUB
                                                list: ops
                                                    HdlValueId: blitter_curx2
                                                    HdlValueInt: 1
                                            HdlValueId: blitter_curx2
                                        HdlStmAssign
                                            HdlOp: SUB
                                                list: ops
                                                    HdlValueId: blitter_curx
                                                    HdlValueInt: 1
                                            HdlValueId: blitter_curx
                                list: elifs
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlStmAssign
                                            HdlOp: ADD
                                                list: ops
                                                    HdlValueId: blitter_curx2
                                                    HdlValueInt: 1
                                            HdlValueId: blitter_curx2
                                        HdlStmAssign
                                            HdlOp: ADD
                                                list: ops
                                                    HdlValueId: blitter_curx
                                                    HdlValueInt: 1
                                            HdlValueId: blitter_curx
                    list: elifs
                        tuple
                            HdlOp: EQ
                                list: ops
                                    HdlValueId: blitter_cury2
                                    HdlValueId: blitter_y4
                            HdlStmBlock: SEQ
                                list: body
                        tuple
                            HdlOp: EQ
                                list: ops
                                    HdlValueId: blitter_diry
                                    HdlValueInt: 0
                            HdlStmBlock: SEQ
                                list: body
                                    HdlStmAssign
                                        HdlValueId: blitter_x1
                                        HdlValueId: blitter_curx
                                    HdlStmAssign
                                        HdlValueId: blitter_x3
                                        HdlValueId: blitter_curx2
                                    HdlStmAssign
                                        HdlOp: ADD
                                            list: ops
                                                HdlValueId: blitter_cury
                                                HdlValueInt: 1
                                        HdlValueId: blitter_cury
                                    HdlStmAssign
                                        HdlOp: ADD
                                            list: ops
                                                HdlValueId: blitter_cury2
                                                HdlValueInt: 1
                                        HdlValueId: blitter_cury2
                    HdlStmBlock: SEQ
                        list: body
                            HdlStmAssign
                                HdlValueId: blitter_x1
                                HdlValueId: blitter_curx
                            HdlStmAssign
                                HdlValueId: blitter_x3
                                HdlValueId: blitter_curx2
                            HdlStmAssign
                                HdlOp: SUB
                                    list: ops
                                        HdlValueId: blitter_cury
                                        HdlValueInt: 1
                                HdlValueId: blitter_cury
                            HdlStmAssign
                                HdlOp: SUB
                                    list: ops
                                        HdlValueId: blitter_cury2
                                        HdlValueInt: 1
                                HdlValueId: blitter_cury2
                HdlStmAssign
                    HdlValueInt: 5
                    HdlValueId: blitter_enable
    DEL HdlOp@@EQ from 
    HdlOp: EQ
        list: ops
            HdlValueId: blitter_enable
            HdlValueInt: 5
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from elifs
    DEL HdlOp@@EQ from 

UPD HdlStmIf@@ to 
    INS HdlOp@@GT to 
    HdlOp: GT
        list: ops
            HdlValueId: refresh_counter
            HdlValueId: refresh_time
    INS HdlStmBlock@@SEQ to 
    INS list@@elifs to 
    INS HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlStmAssign
                HdlOp: ADD
                    list: ops
                        HdlValueId: refresh_counter
                        HdlValueInt: 1
                HdlValueId: refresh_counter
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

DEL HdlStmIf@@ from body
HdlStmIf
    HdlOp: EQ
        list: ops
            HdlValueId: colormode
            HdlValueInt: 2
    HdlStmBlock: SEQ
        list: body
            HdlStmAssign
                HdlOp: INDEX
                    list: ops
                        HdlValueId: blitter_rgb32
                        HdlValueId: blitter_rgb32_t
                HdlValueId: blitter_rgb
            HdlStmAssign
                HdlOp: NEG
                    list: ops
                        HdlValueId: blitter_rgb32_t
                HdlValueId: blitter_rgb32_t
    list: elifs


CommitId: d8a08b1a977d4573a8d123f4d41137962d28fc71
beta release WIP. 32bit, fix some timing problems, introduce custom refresh, fix sd card drivers, sd card CRC, custom resolutions, fix z3 register read model
--- a/z2-minispartan/z2.v
+++ b/z2-minispartan/z2.v
@@ -1389,7 +1426,9 @@ always @(posedge z_sample_clk) begin
           blitter_enable <= 0;
           //ram_enable <= 0;
         end
-      end else if (blitter_enable==2 && cmd_ready) begin
+      end else if (blitter_enable>=2) begin
+        blitter_enable <= 0;
+      /*end else if (blitter_enable==2 && cmd_ready) begin
         // block copy read
         if (data_out_queue_empty) begin
           ram_byte_enable <= 'b11;

ParseResult:
UPD HdlStmCase@@ram_arbiter_state to ram_arbiter_state
    INS tuple@@ to cases
    INS HdlValueId@@RAM_REFRESH to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmIf@@ to 
    UPD HdlOp@@OR_LOG to OR_LOG
        MOV HdlOp@@GT to ops
        HdlOp: GT
            list: ops
                HdlValueId: counter_x
                HdlValueId: safe_x2
        DEL HdlOp@@LT from ops
        HdlOp: LT
            list: ops
                HdlValueId: counter_x
                HdlValueId: safe_x1
        DEL list@@ops from OR_LOG
    UPD HdlOp@@AND_LOG to AND_LOG
        UPD HdlOp@@EQ to GE
        MOV HdlOp@@EQ to ops
        HdlOp: EQ
            list: ops
                HdlValueId: blitter_enable
                HdlValueInt: 2
        DEL HdlValueId@@cmd_ready from ops
        DEL list@@ops from AND_LOG
    UPD HdlOp@@EQ to EQ
        UPD HdlValueId@@capture_mode to display_in_refresh_lines
        MOV HdlValueId@@capture_mode to ops
        HdlValueId: capture_mode
        DEL HdlValueInt@@1 from ops
        DEL list@@ops from EQ
    DEL HdlOp@@OR_LOG from 
    DEL HdlOp@@AND_LOG from 
    DEL tuple@@ from elifs
    tuple
        HdlOp: AND_LOG
            list: ops
                HdlOp: EQ
                    list: ops
                        HdlValueId: blitter_enable
                        HdlValueInt: 4
                HdlValueId: cmd_ready
        HdlStmBlock: SEQ
            list: body
                HdlStmAssign
                    HdlOp: ADD
                        list: ops
                            HdlOp: ADD
                                list: ops
                                    HdlValueId: blitter_base
                                    HdlOp: SLL
                                        list: ops
                                            HdlValueId: blitter_cury
                                            HdlValueInt: 11
                            HdlValueId: blitter_curx
                    HdlValueId: ram_addr
                HdlStmAssign
                    HdlValueId: blitter_copy_rgb
                    HdlValueId: ram_data_in
                HdlStmAssign
                    HdlValueInt: 1
                    HdlValueId: ram_write
                HdlStmAssign
                    HdlValueInt: 1
                    HdlValueId: ram_enable
                HdlStmAssign
                    HdlValueInt: 11
                    HdlValueId: ram_byte_enable
                HdlStmIf
                    HdlOp: NE
                        list: ops
                            HdlValueId: blitter_curx2
                            HdlValueId: blitter_x4
                    HdlStmBlock: SEQ
                        list: body
                            HdlStmIf
                                HdlOp: EQ
                                    list: ops
                                        HdlValueId: blitter_dirx
                                        HdlValueInt: 1
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlStmAssign
                                            HdlOp: SUB
                                                list: ops
                                                    HdlValueId: blitter_curx2
                                                    HdlValueInt: 1
                                            HdlValueId: blitter_curx2
                                        HdlStmAssign
                                            HdlOp: SUB
                                                list: ops
                                                    HdlValueId: blitter_curx
                                                    HdlValueInt: 1
                                            HdlValueId: blitter_curx
                                list: elifs
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlStmAssign
                                            HdlOp: ADD
                                                list: ops
                                                    HdlValueId: blitter_curx2
                                                    HdlValueInt: 1
                                            HdlValueId: blitter_curx2
                                        HdlStmAssign
                                            HdlOp: ADD
                                                list: ops
                                                    HdlValueId: blitter_curx
                                                    HdlValueInt: 1
                                            HdlValueId: blitter_curx
                    list: elifs
                        tuple
                            HdlOp: EQ
                                list: ops
                                    HdlValueId: blitter_cury2
                                    HdlValueId: blitter_y4
                            HdlStmBlock: SEQ
                                list: body
                        tuple
                            HdlOp: EQ
                                list: ops
                                    HdlValueId: blitter_diry
                                    HdlValueInt: 0
                            HdlStmBlock: SEQ
                                list: body
                                    HdlStmAssign
                                        HdlValueId: blitter_x1
                                        HdlValueId: blitter_curx
                                    HdlStmAssign
                                        HdlValueId: blitter_x3
                                        HdlValueId: blitter_curx2
                                    HdlStmAssign
                                        HdlOp: ADD
                                            list: ops
                                                HdlValueId: blitter_cury
                                                HdlValueInt: 1
                                        HdlValueId: blitter_cury
                                    HdlStmAssign
                                        HdlOp: ADD
                                            list: ops
                                                HdlValueId: blitter_cury2
                                                HdlValueInt: 1
                                        HdlValueId: blitter_cury2
                    HdlStmBlock: SEQ
                        list: body
                            HdlStmAssign
                                HdlValueId: blitter_x1
                                HdlValueId: blitter_curx
                            HdlStmAssign
                                HdlValueId: blitter_x3
                                HdlValueId: blitter_curx2
                            HdlStmAssign
                                HdlOp: SUB
                                    list: ops
                                        HdlValueId: blitter_cury
                                        HdlValueInt: 1
                                HdlValueId: blitter_cury
                            HdlStmAssign
                                HdlOp: SUB
                                    list: ops
                                        HdlValueId: blitter_cury2
                                        HdlValueInt: 1
                                HdlValueId: blitter_cury2
                HdlStmAssign
                    HdlValueInt: 5
                    HdlValueId: blitter_enable
    DEL HdlOp@@EQ from 
    HdlOp: EQ
        list: ops
            HdlValueId: blitter_enable
            HdlValueInt: 5
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from elifs
    DEL HdlOp@@EQ from 

MOV HdlStmAssign@@ to body
HdlStmAssign
    HdlValueInt: 1
    HdlValueId: ram_enable

MOV HdlStmAssign@@ to body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: ram_write

UPD HdlStmIf@@ to 
    DEL HdlValueId@@data_out_queue_empty from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL list@@elifs from 

DEL HdlStmAssign@@ from body
HdlStmAssign
    HdlValueInt: 11
    HdlValueId: ram_byte_enable

DEL HdlStmAssign@@ from body
HdlStmAssign
    HdlOp: ADD
        list: ops
            HdlOp: ADD
                list: ops
                    HdlValueId: blitter_base
                    HdlOp: SLL
                        list: ops
                            HdlValueId: blitter_cury2
                            HdlValueInt: 11
            HdlValueId: blitter_curx2
    HdlValueId: ram_addr

DEL HdlStmAssign@@ from body
HdlStmAssign
    HdlValueId: RAM_READING_BLIT
    HdlValueId: ram_arbiter_state

DEL HdlStmIf@@ from body


CommitId: d8a08b1a977d4573a8d123f4d41137962d28fc71
beta release WIP. 32bit, fix some timing problems, introduce custom refresh, fix sd card drivers, sd card CRC, custom resolutions, fix z3 register read model
--- a/z2-minispartan/z2.v
+++ b/z2-minispartan/z2.v
@@ -1436,7 +1475,7 @@ always @(posedge z_sample_clk) begin
           blitter_enable <= 0;
         else
           blitter_enable <= 2;
-        ram_enable <= 0;
+        ram_enable <= 0;*/
         
       // ZORRO READ/WRITE ----------------------------------------------
       end else if (blitter_enable==0 && zorro_ram_read_request) begin

ParseResult:
UPD HdlStmCase@@ram_arbiter_state to ram_arbiter_state
    INS tuple@@ to cases
    INS HdlValueId@@RAM_REFRESH to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmIf@@ to 
    UPD HdlOp@@OR_LOG to OR_LOG
        MOV HdlOp@@GT to ops
        HdlOp: GT
            list: ops
                HdlValueId: counter_x
                HdlValueId: safe_x2
        DEL HdlOp@@LT from ops
        HdlOp: LT
            list: ops
                HdlValueId: counter_x
                HdlValueId: safe_x1
        DEL list@@ops from OR_LOG
    UPD HdlOp@@AND_LOG to AND_LOG
        UPD HdlOp@@EQ to GE
        MOV HdlOp@@EQ to ops
        HdlOp: EQ
            list: ops
                HdlValueId: blitter_enable
                HdlValueInt: 2
        DEL HdlValueId@@cmd_ready from ops
        DEL list@@ops from AND_LOG
    UPD HdlOp@@EQ to EQ
        UPD HdlValueId@@capture_mode to display_in_refresh_lines
        MOV HdlValueId@@capture_mode to ops
        HdlValueId: capture_mode
        DEL HdlValueInt@@1 from ops
        DEL list@@ops from EQ
    DEL HdlOp@@OR_LOG from 
    DEL HdlOp@@AND_LOG from 
    DEL tuple@@ from elifs
    tuple
        HdlOp: AND_LOG
            list: ops
                HdlOp: EQ
                    list: ops
                        HdlValueId: blitter_enable
                        HdlValueInt: 4
                HdlValueId: cmd_ready
        HdlStmBlock: SEQ
            list: body
                HdlStmAssign
                    HdlOp: ADD
                        list: ops
                            HdlOp: ADD
                                list: ops
                                    HdlValueId: blitter_base
                                    HdlOp: SLL
                                        list: ops
                                            HdlValueId: blitter_cury
                                            HdlValueInt: 11
                            HdlValueId: blitter_curx
                    HdlValueId: ram_addr
                HdlStmAssign
                    HdlValueId: blitter_copy_rgb
                    HdlValueId: ram_data_in
                HdlStmAssign
                    HdlValueInt: 1
                    HdlValueId: ram_write
                HdlStmAssign
                    HdlValueInt: 1
                    HdlValueId: ram_enable
                HdlStmAssign
                    HdlValueInt: 11
                    HdlValueId: ram_byte_enable
                HdlStmIf
                    HdlOp: NE
                        list: ops
                            HdlValueId: blitter_curx2
                            HdlValueId: blitter_x4
                    HdlStmBlock: SEQ
                        list: body
                            HdlStmIf
                                HdlOp: EQ
                                    list: ops
                                        HdlValueId: blitter_dirx
                                        HdlValueInt: 1
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlStmAssign
                                            HdlOp: SUB
                                                list: ops
                                                    HdlValueId: blitter_curx2
                                                    HdlValueInt: 1
                                            HdlValueId: blitter_curx2
                                        HdlStmAssign
                                            HdlOp: SUB
                                                list: ops
                                                    HdlValueId: blitter_curx
                                                    HdlValueInt: 1
                                            HdlValueId: blitter_curx
                                list: elifs
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlStmAssign
                                            HdlOp: ADD
                                                list: ops
                                                    HdlValueId: blitter_curx2
                                                    HdlValueInt: 1
                                            HdlValueId: blitter_curx2
                                        HdlStmAssign
                                            HdlOp: ADD
                                                list: ops
                                                    HdlValueId: blitter_curx
                                                    HdlValueInt: 1
                                            HdlValueId: blitter_curx
                    list: elifs
                        tuple
                            HdlOp: EQ
                                list: ops
                                    HdlValueId: blitter_cury2
                                    HdlValueId: blitter_y4
                            HdlStmBlock: SEQ
                                list: body
                        tuple
                            HdlOp: EQ
                                list: ops
                                    HdlValueId: blitter_diry
                                    HdlValueInt: 0
                            HdlStmBlock: SEQ
                                list: body
                                    HdlStmAssign
                                        HdlValueId: blitter_x1
                                        HdlValueId: blitter_curx
                                    HdlStmAssign
                                        HdlValueId: blitter_x3
                                        HdlValueId: blitter_curx2
                                    HdlStmAssign
                                        HdlOp: ADD
                                            list: ops
                                                HdlValueId: blitter_cury
                                                HdlValueInt: 1
                                        HdlValueId: blitter_cury
                                    HdlStmAssign
                                        HdlOp: ADD
                                            list: ops
                                                HdlValueId: blitter_cury2
                                                HdlValueInt: 1
                                        HdlValueId: blitter_cury2
                    HdlStmBlock: SEQ
                        list: body
                            HdlStmAssign
                                HdlValueId: blitter_x1
                                HdlValueId: blitter_curx
                            HdlStmAssign
                                HdlValueId: blitter_x3
                                HdlValueId: blitter_curx2
                            HdlStmAssign
                                HdlOp: SUB
                                    list: ops
                                        HdlValueId: blitter_cury
                                        HdlValueInt: 1
                                HdlValueId: blitter_cury
                            HdlStmAssign
                                HdlOp: SUB
                                    list: ops
                                        HdlValueId: blitter_cury2
                                        HdlValueInt: 1
                                HdlValueId: blitter_cury2
                HdlStmAssign
                    HdlValueInt: 5
                    HdlValueId: blitter_enable
    DEL HdlOp@@EQ from 
    HdlOp: EQ
        list: ops
            HdlValueId: blitter_enable
            HdlValueInt: 5
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from elifs
    DEL HdlOp@@EQ from 


CommitId: d8a08b1a977d4573a8d123f4d41137962d28fc71
beta release WIP. 32bit, fix some timing problems, introduce custom refresh, fix sd card drivers, sd card CRC, custom resolutions, fix z3 register read model
--- a/z2-minispartan/z2.v
+++ b/z2-minispartan/z2.v
@@ -1468,12 +1507,9 @@ always @(posedge z_sample_clk) begin
         ram_enable  <= 1;
         
         ram_arbiter_state <= RAM_WRITING_ZORRO;
-      end else if (capture_mode==1) begin
-        ram_addr    <= capture_ptr+capture_x;
-        ram_byte_enable <= 'b11;
-        ram_data_in <= capture_rgb;
-        ram_write   <= 1;
-        ram_enable  <= 1;
+      end else if (display_in_refresh_lines) begin
+        ram_arbiter_state <= RAM_REFRESH;
+        refresh_counter <= 0;
       end
       
     RAM_READING_BLIT: begin

ParseResult:
UPD HdlStmCase@@ram_arbiter_state to ram_arbiter_state
    INS tuple@@ to cases
    INS HdlValueId@@RAM_REFRESH to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmIf@@ to 
    UPD HdlOp@@OR_LOG to OR_LOG
        MOV HdlOp@@GT to ops
        HdlOp: GT
            list: ops
                HdlValueId: counter_x
                HdlValueId: safe_x2
        DEL HdlOp@@LT from ops
        HdlOp: LT
            list: ops
                HdlValueId: counter_x
                HdlValueId: safe_x1
        DEL list@@ops from OR_LOG
    UPD HdlOp@@AND_LOG to AND_LOG
        UPD HdlOp@@EQ to GE
        MOV HdlOp@@EQ to ops
        HdlOp: EQ
            list: ops
                HdlValueId: blitter_enable
                HdlValueInt: 2
        DEL HdlValueId@@cmd_ready from ops
        DEL list@@ops from AND_LOG
    UPD HdlOp@@EQ to EQ
        UPD HdlValueId@@capture_mode to display_in_refresh_lines
        MOV HdlValueId@@capture_mode to ops
        HdlValueId: capture_mode
        DEL HdlValueInt@@1 from ops
        DEL list@@ops from EQ
    DEL HdlOp@@OR_LOG from 
    DEL HdlOp@@AND_LOG from 
    DEL tuple@@ from elifs
    tuple
        HdlOp: AND_LOG
            list: ops
                HdlOp: EQ
                    list: ops
                        HdlValueId: blitter_enable
                        HdlValueInt: 4
                HdlValueId: cmd_ready
        HdlStmBlock: SEQ
            list: body
                HdlStmAssign
                    HdlOp: ADD
                        list: ops
                            HdlOp: ADD
                                list: ops
                                    HdlValueId: blitter_base
                                    HdlOp: SLL
                                        list: ops
                                            HdlValueId: blitter_cury
                                            HdlValueInt: 11
                            HdlValueId: blitter_curx
                    HdlValueId: ram_addr
                HdlStmAssign
                    HdlValueId: blitter_copy_rgb
                    HdlValueId: ram_data_in
                HdlStmAssign
                    HdlValueInt: 1
                    HdlValueId: ram_write
                HdlStmAssign
                    HdlValueInt: 1
                    HdlValueId: ram_enable
                HdlStmAssign
                    HdlValueInt: 11
                    HdlValueId: ram_byte_enable
                HdlStmIf
                    HdlOp: NE
                        list: ops
                            HdlValueId: blitter_curx2
                            HdlValueId: blitter_x4
                    HdlStmBlock: SEQ
                        list: body
                            HdlStmIf
                                HdlOp: EQ
                                    list: ops
                                        HdlValueId: blitter_dirx
                                        HdlValueInt: 1
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlStmAssign
                                            HdlOp: SUB
                                                list: ops
                                                    HdlValueId: blitter_curx2
                                                    HdlValueInt: 1
                                            HdlValueId: blitter_curx2
                                        HdlStmAssign
                                            HdlOp: SUB
                                                list: ops
                                                    HdlValueId: blitter_curx
                                                    HdlValueInt: 1
                                            HdlValueId: blitter_curx
                                list: elifs
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlStmAssign
                                            HdlOp: ADD
                                                list: ops
                                                    HdlValueId: blitter_curx2
                                                    HdlValueInt: 1
                                            HdlValueId: blitter_curx2
                                        HdlStmAssign
                                            HdlOp: ADD
                                                list: ops
                                                    HdlValueId: blitter_curx
                                                    HdlValueInt: 1
                                            HdlValueId: blitter_curx
                    list: elifs
                        tuple
                            HdlOp: EQ
                                list: ops
                                    HdlValueId: blitter_cury2
                                    HdlValueId: blitter_y4
                            HdlStmBlock: SEQ
                                list: body
                        tuple
                            HdlOp: EQ
                                list: ops
                                    HdlValueId: blitter_diry
                                    HdlValueInt: 0
                            HdlStmBlock: SEQ
                                list: body
                                    HdlStmAssign
                                        HdlValueId: blitter_x1
                                        HdlValueId: blitter_curx
                                    HdlStmAssign
                                        HdlValueId: blitter_x3
                                        HdlValueId: blitter_curx2
                                    HdlStmAssign
                                        HdlOp: ADD
                                            list: ops
                                                HdlValueId: blitter_cury
                                                HdlValueInt: 1
                                        HdlValueId: blitter_cury
                                    HdlStmAssign
                                        HdlOp: ADD
                                            list: ops
                                                HdlValueId: blitter_cury2
                                                HdlValueInt: 1
                                        HdlValueId: blitter_cury2
                    HdlStmBlock: SEQ
                        list: body
                            HdlStmAssign
                                HdlValueId: blitter_x1
                                HdlValueId: blitter_curx
                            HdlStmAssign
                                HdlValueId: blitter_x3
                                HdlValueId: blitter_curx2
                            HdlStmAssign
                                HdlOp: SUB
                                    list: ops
                                        HdlValueId: blitter_cury
                                        HdlValueInt: 1
                                HdlValueId: blitter_cury
                            HdlStmAssign
                                HdlOp: SUB
                                    list: ops
                                        HdlValueId: blitter_cury2
                                        HdlValueInt: 1
                                HdlValueId: blitter_cury2
                HdlStmAssign
                    HdlValueInt: 5
                    HdlValueId: blitter_enable
    DEL HdlOp@@EQ from 
    HdlOp: EQ
        list: ops
            HdlValueId: blitter_enable
            HdlValueInt: 5
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from elifs
    DEL HdlOp@@EQ from 

UPD HdlStmAssign@@ to 
    UPD HdlOp@@ADD to ADD
        UPD HdlValueId@@capture_ptr to RAM_REFRESH
        MOV HdlValueId@@capture_ptr to ops
        HdlValueId: capture_ptr
        DEL HdlValueId@@capture_x from ops
        DEL list@@ops from ADD
    UPD HdlValueId@@ram_addr to ram_arbiter_state
    DEL HdlOp@@ADD from 

UPD HdlStmAssign@@ to 
    UPD HdlValueInt@@1 to 0
    UPD HdlValueId@@ram_write to refresh_counter

DEL HdlStmAssign@@ from body
HdlStmAssign
    HdlValueInt: 11
    HdlValueId: ram_byte_enable

DEL HdlStmAssign@@ from body
HdlStmAssign
    HdlValueId: capture_rgb
    HdlValueId: ram_data_in

DEL HdlStmAssign@@ from body
HdlStmAssign
    HdlValueInt: 1
    HdlValueId: ram_enable


CommitId: d8a08b1a977d4573a8d123f4d41137962d28fc71
beta release WIP. 32bit, fix some timing problems, introduce custom refresh, fix sd card drivers, sd card CRC, custom resolutions, fix z3 register read model
--- a/z2-minispartan/z2.v
+++ b/z2-minispartan/z2.v
@@ -1529,15 +1565,17 @@ always @(posedge vga_clk) begin
     preheat <= 1;
   end
   
+  if (counter_y>=v_rez && counter_y<(v_rez+ram_refresh_lines))
+    display_in_refresh_lines <= 1;
+  else
+    display_in_refresh_lines <= 0;
+  
   if (counter_x >= h_max) begin
     counter_x <= 0;
     preheat <= 0;
     
     if (counter_y >= v_max) begin
       counter_y <= 0;
-      
-      //sprite_ptr <= 0;
-      //sprite_bit <= 15;
     end else
       counter_y <= counter_y + 1'b1;
   end else begin

ParseResult:
INS HdlStmIf@@ to body
HdlStmIf
    HdlOp: AND_LOG
        list: ops
            HdlOp: GE
                list: ops
                    HdlValueId: counter_y
                    HdlValueId: v_rez
            HdlOp: LT
                list: ops
                    HdlValueId: counter_y
                    HdlOp: ADD
                        list: ops
                            HdlValueId: v_rez
                            HdlValueId: ram_refresh_lines
    HdlStmAssign: if_true
        HdlValueInt: 1
        HdlValueId: display_in_refresh_lines
    list: elifs
    HdlStmAssign: if_false
        HdlValueInt: 0
        HdlValueId: display_in_refresh_lines

UPD HdlStmCase@@ram_arbiter_state to ram_arbiter_state
    INS tuple@@ to cases
    INS HdlValueId@@RAM_REFRESH to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ


CommitId: d8a08b1a977d4573a8d123f4d41137962d28fc71
beta release WIP. 32bit, fix some timing problems, introduce custom refresh, fix sd card drivers, sd card CRC, custom resolutions, fix z3 register read model
--- a/z2-minispartan/z2.v
+++ b/z2-minispartan/z2.v
@@ -1614,17 +1665,6 @@ always @(posedge vga_clk) begin
       counter_x_hi <= 1;
       counter_scale <= 0;
     end
-    
-    //if (!display_sprite || sprite_pidx==0) begin
-    /*red_p   <= pidx_r;
-    green_p <= pidx_g;
-    blue_p  <= pidx_b;*/
-    
-    /*end else begin
-      red_p   <= sprite_palette_r[sprite_pidx];
-      green_p <= sprite_palette_g[sprite_pidx];
-      blue_p  <= sprite_palette_b[sprite_pidx];
-    //end*/
   end else if (colormode==1) begin
     // decode 16 to 24 bit color
     if (counter_scale != scalemode) begin

ParseResult:
UPD HdlStmIf@@ to 
    UPD HdlOp@@AND_LOG to AND_LOG
        UPD HdlOp@@OR_LOG to OR_LOG
            UPD HdlOp@@OR_LOG to OR_LOG
                UPD HdlOp@@GE to GE
                    UPD HdlValueId@@screen_w to h_rez


CommitId: bda44e27174c3827216cc49680c3250579ad6f78
Merge pull request #1 from stephanIOA/patch-1
--- a/z2-minispartan/SDRAM_Controller_v.v
+++ b/z2-minispartan/SDRAM_Controller_v.v
@@ -35,19 +35,17 @@ module SDRAM_Controller_v (
    // command and write port
    cmd_ready, cmd_enable, cmd_wr, cmd_byte_enable, cmd_address, cmd_data_in,
    // Read data port
-   data_out, data_out_ready,
+   data_out, data_out_ready, data_out_queue_empty, burst,
+   burst_col,
    // SDRAM signals
    SDRAM_CLK,  SDRAM_CKE,  SDRAM_CS,   SDRAM_RAS,  SDRAM_CAS,
    SDRAM_WE,   SDRAM_DQM,  SDRAM_ADDR, SDRAM_BA,   SDRAM_DATA
 );
-   //////////////////////////////////
-   /// These need to be checked out
-   //////////////////////////////////
    parameter sdram_column_bits    = 9;     // 
-   parameter sdram_row_bits = 13;
+   parameter sdram_row_bits       = 13;
    parameter sdram_address_width  = 24;    // zzz
    parameter sdram_startup_cycles = 10100; // -- 100us, plus a little more, @ 100MHz
-   parameter cycles_per_refresh   = 780; //1524;  // (64000*100)/4196-1 Calced as  (64ms @ 100MHz)/ 4196 rows
+   parameter cycles_per_refresh   = 3000;  // (64000*100)/4196-1 Calced as  (64ms @ 100MHz)/ 4196 rows
    
    input  clk;
    input  reset;

ParseResult:
INS HdlIdDef@@data_out_queue_empty to ports
HdlIdDef: data_out_queue_empty
    HdlDirection: OUT

INS HdlIdDef@@burst to ports
HdlIdDef: burst
    HdlDirection: IN

INS HdlIdDef@@burst_col to ports
HdlIdDef: burst_col
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: wire
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 8
                    HdlValueInt: 0
    HdlDirection: IN

UPD HdlIdDef@@cycles_per_refresh to cycles_per_refresh
    UPD HdlValueInt@@780 to 3000


CommitId: bda44e27174c3827216cc49680c3250579ad6f78
Merge pull request #1 from stephanIOA/patch-1
--- a/z2-minispartan/SDRAM_Controller_v.v
+++ b/z2-minispartan/SDRAM_Controller_v.v
@@ -71,18 +65,14 @@ module SDRAM_Controller_v (
    reg iob_cke             = 1'b0;
    reg [1:0]  iob_bank     = 2'b00;
    reg [15:0] data_out_reg;
-   //synthesis attribute IOB of iob_command is "TRUE" 
-   //synthesis attribute IOB of iob_address is "TRUE" 
-   //synthesis attribute IOB of iob_data    is "TRUE" 
-   //synthesis attribute IOB of iob_dqm     is "TRUE" 
-   //synthesis attribute IOB of iob_cke     is "TRUE" 
-   //synthesis attribute IOB of iob_bank    is "TRUE" 
-
-   //reg [15:0] iob_data_next = 16'b0;
+   
    output [15:0] data_out;    assign data_out       = data_out_reg;
 
    reg data_out_ready_reg;
    output data_out_ready;     assign data_out_ready = data_out_ready_reg;
+   reg data_out_queue_empty_reg = 1;
+   output data_out_queue_empty; 
+   assign data_out_queue_empty = data_out_queue_empty_reg;
 
    output SDRAM_CLK;          // Assigned by a primative
    output SDRAM_CKE;          assign SDRAM_CKE = iob_cke;

ParseResult:
INS HdlIdDef@@data_out_queue_empty_reg to objs
HdlIdDef: data_out_queue_empty_reg
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
    HdlValueInt: 1
    HdlDirection: INTERNAL

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlValueId: data_out_queue_empty_reg
    HdlValueId: data_out_queue_empty


CommitId: bda44e27174c3827216cc49680c3250579ad6f78
Merge pull request #1 from stephanIOA/patch-1
--- a/z2-minispartan/SDRAM_Controller_v.v
+++ b/z2-minispartan/SDRAM_Controller_v.v
@@ -120,11 +110,13 @@ module SDRAM_Controller_v (
    parameter CMD_REFRESH       = 4'b0001;
    parameter CMD_LOAD_MODE_REG = 4'b0000;
 
-   wire [12:0] MODE_REG; // Reserved, wr bust, OpMode, CAS Latency (2), Burst Type, Burst Length (2)
-   assign      MODE_REG =    {3'b000,    1'b0,  2'b00,          3'b010,       1'b0,   3'b000};
+   wire [12:0] MODE_REG;    // Reserved, wr burst, OpMode, CAS Latency (2), Burst Type, Burst Length (2)
+   assign      MODE_REG =        {3'b000,    1'b0,  2'b00,          3'b010,       1'b0,   3'b000};
+   
+   wire [12:0] MODE_REG_BURST;    // Reserved, wr burst, OpMode, CAS Latency (2), Burst Type, Burst Length (2)
+   assign      MODE_REG_BURST =  {3'b000,    1'b0,  2'b00,          3'b010,       1'b0,   3'b111};
 
-   reg  [15:0] captured_data; 
-   //reg  [15:0] captured_data_last;
+   reg  [15:0] captured_data;
    wire [15:0] sdram_din;
 
    ///////////////////////////////

ParseResult:
INS HdlIdDef@@MODE_REG_BURST to objs
HdlIdDef: MODE_REG_BURST
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: wire
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 12
                    HdlValueInt: 0
    HdlDirection: INTERNAL

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: CONCAT
        list: ops
            HdlOp: CONCAT
                list: ops
                    HdlOp: CONCAT
                        list: ops
                            HdlOp: CONCAT
                                list: ops
                                    HdlOp: CONCAT
                                        list: ops
                                            HdlValueInt: 000
                                            HdlValueInt: 0
                                    HdlValueInt: 00
                            HdlValueInt: 010
                    HdlValueInt: 0
            HdlValueInt: 111
    HdlValueId: MODE_REG_BURST


CommitId: bda44e27174c3827216cc49680c3250579ad6f78
Merge pull request #1 from stephanIOA/patch-1
--- a/z2-minispartan/SDRAM_Controller_v.v
+++ b/z2-minispartan/SDRAM_Controller_v.v
@@ -135,19 +127,19 @@ module SDRAM_Controller_v (
    parameter s_open_in_2 = 5'b01000, s_open_in_1 = 5'b01001, s_write_1   = 5'b01010, s_write_2   = 5'b01011;
    parameter s_write_3   = 5'b01100, s_read_1    = 5'b01101, s_read_2    = 5'b01110, s_read_3    = 5'b01111;
    parameter s_read_4    = 5'b10000, s_precharge = 5'b10001;
-   parameter s_write_1b = 5'b10010;
+   parameter s_burst_read= 5'b10010;
+   parameter s_open_in_3 = 5'b10011;
+   parameter s_open_in_4 = 5'b10100;
+   parameter s_open_in_5 = 5'b10101;
+   parameter s_open_in_6 = 5'b10110;
+   parameter s_open_in_7 = 5'b10111;
+   parameter s_open_in_8 = 5'b11000;
    reg [4:0] state = s_startup;
    
    // dual purpose counter, it counts up during the startup phase, then is used to trigger refreshes.
    parameter startup_refresh_max   = 14'b11111111111111;
    reg  [13:0] startup_refresh_count = startup_refresh_max-sdram_startup_cycles;
 
-   // Indicate the need to refresh when the counter is 2048,
-   // Force a refresh when the counter is 4096 - (if a refresh is forced, 
-   // multiple refresshes will be forced until the counter is below 2048
-   wire pending_refresh = startup_refresh_count[11];  
-   wire forcing_refresh = startup_refresh_count[12];  
-
    // The incoming address is split into these three values
    wire [12:0] addr_row;
    wire [12:0] addr_col;

ParseResult:
UPD HdlIdDef@@s_write_1b to s_burst_read

INS HdlIdDef@@s_open_in_3 to params
HdlIdDef: s_open_in_3
    HdlValueInt: 10011
    HdlDirection: INTERNAL

INS HdlIdDef@@s_open_in_4 to params
HdlIdDef: s_open_in_4
    HdlValueInt: 10100
    HdlDirection: INTERNAL

INS HdlIdDef@@s_open_in_5 to params
HdlIdDef: s_open_in_5
    HdlValueInt: 10101
    HdlDirection: INTERNAL

INS HdlIdDef@@s_open_in_6 to params
HdlIdDef: s_open_in_6
    HdlValueInt: 10110
    HdlDirection: INTERNAL

INS HdlIdDef@@s_open_in_7 to params
HdlIdDef: s_open_in_7
    HdlValueInt: 10111
    HdlDirection: INTERNAL

INS HdlIdDef@@s_open_in_8 to params
HdlIdDef: s_open_in_8
    HdlValueInt: 11000
    HdlDirection: INTERNAL

DEL HdlIdDef@@pending_refresh from objs
HdlIdDef: pending_refresh
    HdlOp: INDEX
        list: ops
            HdlValueId: startup_refresh_count
            HdlValueInt: 11
    HdlDirection: INTERNAL

DEL HdlIdDef@@forcing_refresh from objs
HdlIdDef: forcing_refresh
    HdlOp: INDEX
        list: ops
            HdlValueId: startup_refresh_count
            HdlValueInt: 12
    HdlDirection: INTERNAL


CommitId: bda44e27174c3827216cc49680c3250579ad6f78
Merge pull request #1 from stephanIOA/patch-1
--- a/z2-minispartan/SDRAM_Controller_v.v
+++ b/z2-minispartan/SDRAM_Controller_v.v
@@ -161,15 +153,14 @@ module SDRAM_Controller_v (
    reg save_wr                  = 1'b0; 
    reg [sdram_row_bits-1:0] save_row          = 13'b0000000000000;
    reg [1:0]  save_bank         = 2'b00;
-   reg [sdram_column_bits-1:0] save_col          = 13'b0000000000000;
+   reg [sdram_row_bits-1:0] save_col          = 13'b0000000000000;
    reg [15:0] save_data_in      = 16'b0000000000000000;
    reg [1:0]  save_byte_enable  = 2'b00;
    
    // control when new transactions are accepted 
    reg ready_for_new    = 1'b0;
    reg got_transaction  = 1'b0;
-   reg can_back_to_back = 1'b0; 
-
+   
    // signal to control the Hi-Z state of the DQ bus
    reg iob_dq_hiz = 1'b0;
    

ParseResult:
MOV HdlIdDef@@can_back_to_back to objs
HdlIdDef: can_back_to_back
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
    HdlValueInt: 0
    HdlDirection: INTERNAL

INS HdlIdDef@@save_col to objs
HdlIdDef: save_col
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
            HdlOp: DOWNTO
                list: ops
                    HdlOp: SUB
                        list: ops
                            HdlValueId: sdram_row_bits
                            HdlValueInt: 1
                    HdlValueInt: 0
    HdlValueInt: 0000000000000
    HdlDirection: INTERNAL

DEL HdlIdDef@@save_col from objs
HdlIdDef: save_col
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
            HdlOp: DOWNTO
                list: ops
                    HdlOp: SUB
                        list: ops
                            HdlValueId: sdram_column_bits
                            HdlValueInt: 1
                    HdlValueInt: 0
    HdlValueInt: 0000000000000
    HdlDirection: INTERNAL


CommitId: bda44e27174c3827216cc49680c3250579ad6f78
Merge pull request #1 from stephanIOA/patch-1
--- a/z2-minispartan/SDRAM_Controller_v.v
+++ b/z2-minispartan/SDRAM_Controller_v.v
@@ -317,7 +297,7 @@ always  @ (posedge clk )
                iob_cke <= 1'b1;
                
                // All the commands during the startup are NOPS, except these
-               if(startup_refresh_count == startup_refresh_max-31) begin
+               /*if(startup_refresh_count == startup_refresh_max-31) begin
                   // ensure all rows are closed
                   iob_command     <= CMD_PRECHARGE;
                   iob_address[prefresh_cmd] <= 1'b1;  // all banks

ParseResult:
UPD HdlStmCase@@state to state
    MOV tuple@@ to cases
    tuple
        HdlValueId: s_read_2
        HdlStmBlock: SEQ
            list: body
                HdlStmAssign
                    HdlValueId: s_read_3
                    HdlValueId: state
                HdlStmIf
                    HdlOp: AND_LOG
                        list: ops
                            HdlOp: AND_LOG
                                list: ops
                                    HdlOp: EQ
                                        list: ops
                                            HdlValueId: forcing_refresh
                                            HdlValueInt: 0
                                    HdlOp: EQ
                                        list: ops
                                            HdlValueId: got_transaction
                                            HdlValueInt: 1
                            HdlOp: EQ
                                list: ops
                                    HdlValueId: can_back_to_back
                                    HdlValueInt: 1
                    HdlStmBlock: SEQ
                        list: body
                            HdlStmIf
                                HdlOp: EQ
                                    list: ops
                                        HdlValueId: save_wr
                                        HdlValueInt: 0
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlStmAssign
                                            HdlValueId: s_read_1
                                            HdlValueId: state
                                        HdlStmAssign
                                            HdlValueInt: 1
                                            HdlValueId: ready_for_new
                                        HdlStmAssign
                                            HdlValueInt: 0
                                            HdlValueId: got_transaction
                                list: elifs
                    list: elifs
    UPD HdlValueId@@s_read_3 to s_read_2
    UPD HdlValueId@@s_read_2 to s_read_3

UPD HdlStmCase@@state to state
    INS tuple@@ to cases
    tuple
        HdlValueId: s_open_in_8
        HdlStmAssign
            HdlValueId: s_open_in_7
            HdlValueId: state
    INS tuple@@ to cases
    tuple
        HdlValueId: s_open_in_7
        HdlStmAssign
            HdlValueId: s_open_in_6
            HdlValueId: state
    INS tuple@@ to cases
    tuple
        HdlValueId: s_open_in_6
        HdlStmAssign
            HdlValueId: s_open_in_5
            HdlValueId: state
    INS tuple@@ to cases
    tuple
        HdlValueId: s_open_in_5
        HdlStmAssign
            HdlValueId: s_open_in_4
            HdlValueId: state
    INS tuple@@ to cases
    tuple
        HdlValueId: s_open_in_4
        HdlStmAssign
            HdlValueId: s_open_in_3
            HdlValueId: state
    INS tuple@@ to cases
    tuple
        HdlValueId: s_open_in_3
        HdlStmAssign
            HdlValueId: s_open_in_2
            HdlValueId: state
    INS tuple@@ to cases
    tuple
        HdlValueId: s_burst_read
        HdlStmBlock: SEQ
            list: body
                HdlStmIf
                    HdlOp: NEG_LOG
                        list: ops
                            HdlValueId: burst
                    HdlStmBlock: SEQ
                        list: body
                            HdlStmAssign
                                HdlValueId: s_precharge
                                HdlValueId: state
                            HdlStmAssign
                                HdlValueInt: 1
                                HdlValueId: ready_for_new
                            HdlStmAssign
                                HdlValueInt: 0
                                HdlOp: INDEX
                                    list: ops
                                        HdlValueId: data_ready_delay
                                        HdlValueId: data_ready_delay_high
                    list: elifs
                    HdlStmBlock: SEQ
                        list: body
                            HdlStmAssign
                                HdlValueId: CMD_NOP
                                HdlValueId: iob_command
                            HdlStmAssign
                                HdlValueInt: 00
                                HdlValueId: iob_dqm
                            HdlStmAssign
                                HdlValueInt: 1
                                HdlValueId: iob_dq_hiz
                            HdlStmIf
                                HdlOp: EQ
                                    list: ops
                                        HdlValueId: save_col
                                        HdlValueId: burst_col
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlStmAssign
                                            HdlValueId: s_precharge
                                            HdlValueId: state
                                        HdlStmAssign
                                            HdlValueInt: 0
                                            HdlOp: INDEX
                                                list: ops
                                                    HdlValueId: data_ready_delay
                                                    HdlValueId: data_ready_delay_high
                                        HdlStmAssign
                                            HdlValueInt: 0
                                            HdlValueId: ready_for_new
                                list: elifs
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlStmAssign
                                            HdlValueInt: 1
                                            HdlOp: INDEX
                                                list: ops
                                                    HdlValueId: data_ready_delay
                                                    HdlValueId: data_ready_delay_high
                                        HdlStmAssign
                                            HdlValueInt: 1
                                            HdlValueId: ready_for_new

UPD HdlStmIf@@ to 
    INS HdlStmBlock@@SEQ to 
    INS tuple@@ to elifs
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    INS HdlOp@@AND_LOG to 
    HdlOp: AND_LOG
        list: ops
            HdlOp: EQ
                list: ops
                    HdlValueId: burst
                    HdlValueInt: 0
            HdlOp: EQ
                list: ops
                    HdlValueId: burst_old
                    HdlValueInt: 1

UPD HdlStmIf@@ to 
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlStmAssign
                HdlValueId: CMD_LOAD_MODE_REG
                HdlValueId: iob_command
            HdlStmAssign
                HdlValueId: MODE_REG
                HdlValueId: iob_address
    DEL HdlOp@@EQ from 
    HdlOp: EQ
        list: ops
            HdlValueId: startup_refresh_count
            HdlOp: SUB
                list: ops
                    HdlValueId: startup_refresh_max
                    HdlValueInt: 31
    DEL HdlStmBlock@@SEQ from 
    HdlStmBlock: SEQ
        list: body
            HdlStmAssign
                HdlValueId: CMD_PRECHARGE
                HdlValueId: iob_command
            HdlStmAssign
                HdlValueInt: 1
                HdlOp: INDEX
                    list: ops
                        HdlValueId: iob_address
                        HdlValueId: prefresh_cmd
            HdlStmAssign
                HdlValueInt: 00
                HdlValueId: iob_bank
    DEL tuple@@ from elifs
    tuple
        HdlOp: EQ
            list: ops
                HdlValueId: startup_refresh_count
                HdlOp: SUB
                    list: ops
                        HdlValueId: startup_refresh_max
                        HdlValueInt: 23
        HdlStmBlock: SEQ
            list: body
                HdlStmAssign
                    HdlValueId: CMD_REFRESH
                    HdlValueId: iob_command
    DEL tuple@@ from elifs
    tuple
        HdlOp: EQ
            list: ops
                HdlValueId: startup_refresh_count
                HdlOp: SUB
                    list: ops
                        HdlValueId: startup_refresh_max
                        HdlValueInt: 15
        HdlStmAssign
            HdlValueId: CMD_REFRESH
            HdlValueId: iob_command
    DEL HdlOp@@EQ from 
    HdlOp: EQ
        list: ops
            HdlValueId: startup_refresh_count
            HdlOp: SUB
                list: ops
                    HdlValueId: startup_refresh_max
                    HdlValueInt: 7
    DEL tuple@@ from elifs
    DEL list@@elifs from 

DEL HdlStmIf@@ from body


CommitId: bda44e27174c3827216cc49680c3250579ad6f78
Merge pull request #1 from stephanIOA/patch-1
--- a/z2-minispartan/SDRAM_Controller_v.v
+++ b/z2-minispartan/SDRAM_Controller_v.v
@@ -328,17 +308,12 @@ always  @ (posedge clk )
                   iob_command     <= CMD_REFRESH;
                end else if (startup_refresh_count == startup_refresh_max-15) 
                   iob_command     <= CMD_REFRESH;
-               else if (startup_refresh_count == startup_refresh_max-7) begin
+               else*/ //if (startup_refresh_count == startup_refresh_max-7) begin
                   // Now load the mode register
                   iob_command     <= CMD_LOAD_MODE_REG;
                   iob_address     <= MODE_REG;
-               end
+               //end
 
-               //------------------------------------------------------
-               //-- if startup is complete then go into idle mode,
-               //-- get prepared to accept a new command, and schedule
-               //-- the first refresh cycle
-               //------------------------------------------------------
                if (startup_refresh_count == 1'b0) begin
                   state           <= s_idle;
                   ready_for_new   <= 1'b1;

ParseResult:
UPD HdlStmCase@@state to state
    MOV tuple@@ to cases
    tuple
        HdlValueId: s_read_2
        HdlStmBlock: SEQ
            list: body
                HdlStmAssign
                    HdlValueId: s_read_3
                    HdlValueId: state
                HdlStmIf
                    HdlOp: AND_LOG
                        list: ops
                            HdlOp: AND_LOG
                                list: ops
                                    HdlOp: EQ
                                        list: ops
                                            HdlValueId: forcing_refresh
                                            HdlValueInt: 0
                                    HdlOp: EQ
                                        list: ops
                                            HdlValueId: got_transaction
                                            HdlValueInt: 1
                            HdlOp: EQ
                                list: ops
                                    HdlValueId: can_back_to_back
                                    HdlValueInt: 1
                    HdlStmBlock: SEQ
                        list: body
                            HdlStmIf
                                HdlOp: EQ
                                    list: ops
                                        HdlValueId: save_wr
                                        HdlValueInt: 0
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlStmAssign
                                            HdlValueId: s_read_1
                                            HdlValueId: state
                                        HdlStmAssign
                                            HdlValueInt: 1
                                            HdlValueId: ready_for_new
                                        HdlStmAssign
                                            HdlValueInt: 0
                                            HdlValueId: got_transaction
                                list: elifs
                    list: elifs
    UPD HdlValueId@@s_read_3 to s_read_2
    UPD HdlValueId@@s_read_2 to s_read_3

UPD HdlStmCase@@state to state
    INS tuple@@ to cases
    tuple
        HdlValueId: s_open_in_8
        HdlStmAssign
            HdlValueId: s_open_in_7
            HdlValueId: state
    INS tuple@@ to cases
    tuple
        HdlValueId: s_open_in_7
        HdlStmAssign
            HdlValueId: s_open_in_6
            HdlValueId: state
    INS tuple@@ to cases
    tuple
        HdlValueId: s_open_in_6
        HdlStmAssign
            HdlValueId: s_open_in_5
            HdlValueId: state
    INS tuple@@ to cases
    tuple
        HdlValueId: s_open_in_5
        HdlStmAssign
            HdlValueId: s_open_in_4
            HdlValueId: state
    INS tuple@@ to cases
    tuple
        HdlValueId: s_open_in_4
        HdlStmAssign
            HdlValueId: s_open_in_3
            HdlValueId: state
    INS tuple@@ to cases
    tuple
        HdlValueId: s_open_in_3
        HdlStmAssign
            HdlValueId: s_open_in_2
            HdlValueId: state
    INS tuple@@ to cases
    tuple
        HdlValueId: s_burst_read
        HdlStmBlock: SEQ
            list: body
                HdlStmIf
                    HdlOp: NEG_LOG
                        list: ops
                            HdlValueId: burst
                    HdlStmBlock: SEQ
                        list: body
                            HdlStmAssign
                                HdlValueId: s_precharge
                                HdlValueId: state
                            HdlStmAssign
                                HdlValueInt: 1
                                HdlValueId: ready_for_new
                            HdlStmAssign
                                HdlValueInt: 0
                                HdlOp: INDEX
                                    list: ops
                                        HdlValueId: data_ready_delay
                                        HdlValueId: data_ready_delay_high
                    list: elifs
                    HdlStmBlock: SEQ
                        list: body
                            HdlStmAssign
                                HdlValueId: CMD_NOP
                                HdlValueId: iob_command
                            HdlStmAssign
                                HdlValueInt: 00
                                HdlValueId: iob_dqm
                            HdlStmAssign
                                HdlValueInt: 1
                                HdlValueId: iob_dq_hiz
                            HdlStmIf
                                HdlOp: EQ
                                    list: ops
                                        HdlValueId: save_col
                                        HdlValueId: burst_col
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlStmAssign
                                            HdlValueId: s_precharge
                                            HdlValueId: state
                                        HdlStmAssign
                                            HdlValueInt: 0
                                            HdlOp: INDEX
                                                list: ops
                                                    HdlValueId: data_ready_delay
                                                    HdlValueId: data_ready_delay_high
                                        HdlStmAssign
                                            HdlValueInt: 0
                                            HdlValueId: ready_for_new
                                list: elifs
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlStmAssign
                                            HdlValueInt: 1
                                            HdlOp: INDEX
                                                list: ops
                                                    HdlValueId: data_ready_delay
                                                    HdlValueId: data_ready_delay_high
                                        HdlStmAssign
                                            HdlValueInt: 1
                                            HdlValueId: ready_for_new

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueId: CMD_LOAD_MODE_REG
    HdlValueId: iob_command

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueId: MODE_REG
    HdlValueId: iob_address

UPD HdlStmIf@@ to 
    INS HdlStmBlock@@SEQ to 
    INS tuple@@ to elifs
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    INS HdlOp@@AND_LOG to 
    HdlOp: AND_LOG
        list: ops
            HdlOp: EQ
                list: ops
                    HdlValueId: burst
                    HdlValueInt: 0
            HdlOp: EQ
                list: ops
                    HdlValueId: burst_old
                    HdlValueInt: 1

UPD HdlStmIf@@ to 
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlStmAssign
                HdlValueId: CMD_LOAD_MODE_REG
                HdlValueId: iob_command
            HdlStmAssign
                HdlValueId: MODE_REG
                HdlValueId: iob_address
    DEL HdlOp@@EQ from 
    HdlOp: EQ
        list: ops
            HdlValueId: startup_refresh_count
            HdlOp: SUB
                list: ops
                    HdlValueId: startup_refresh_max
                    HdlValueInt: 31
    DEL HdlStmBlock@@SEQ from 
    HdlStmBlock: SEQ
        list: body
            HdlStmAssign
                HdlValueId: CMD_PRECHARGE
                HdlValueId: iob_command
            HdlStmAssign
                HdlValueInt: 1
                HdlOp: INDEX
                    list: ops
                        HdlValueId: iob_address
                        HdlValueId: prefresh_cmd
            HdlStmAssign
                HdlValueInt: 00
                HdlValueId: iob_bank
    DEL tuple@@ from elifs
    tuple
        HdlOp: EQ
            list: ops
                HdlValueId: startup_refresh_count
                HdlOp: SUB
                    list: ops
                        HdlValueId: startup_refresh_max
                        HdlValueInt: 23
        HdlStmBlock: SEQ
            list: body
                HdlStmAssign
                    HdlValueId: CMD_REFRESH
                    HdlValueId: iob_command
    DEL tuple@@ from elifs
    tuple
        HdlOp: EQ
            list: ops
                HdlValueId: startup_refresh_count
                HdlOp: SUB
                    list: ops
                        HdlValueId: startup_refresh_max
                        HdlValueInt: 15
        HdlStmAssign
            HdlValueId: CMD_REFRESH
            HdlValueId: iob_command
    DEL HdlOp@@EQ from 
    HdlOp: EQ
        list: ops
            HdlValueId: startup_refresh_count
            HdlOp: SUB
                list: ops
                    HdlValueId: startup_refresh_max
                    HdlValueInt: 7
    DEL tuple@@ from elifs
    DEL list@@elifs from 

DEL HdlStmIf@@ from body


CommitId: bda44e27174c3827216cc49680c3250579ad6f78
Merge pull request #1 from stephanIOA/patch-1
--- a/z2-minispartan/SDRAM_Controller_v.v
+++ b/z2-minispartan/SDRAM_Controller_v.v
@@ -435,14 +443,14 @@ always  @ (posedge clk )
          s_read_4: begin
                state <= s_precharge;
                //-- can we do back-to-back read?
-               if (forcing_refresh == 1'b0 && got_transaction == 1'b1 && can_back_to_back == 1'b1) begin
+               if (got_transaction == 1'b1 && can_back_to_back == 1'b1) begin
                   if (save_wr == 1'b0) begin 
                      state           <= s_read_1;
-                     ready_for_new   <= 1'b1; // we will be ready for a new transaction next cycle!
+                     ready_for_new   <= 1'b1;
                      got_transaction <= 1'b0;
                   end
                   else
-                     state <= s_open_in_2; // we have to wait for the read data to come back before we switch the bus into HiZ
+                     state <= s_open_in_2;
                end
             end
          //------------------------------------------------------------------

ParseResult:
UPD HdlStmCase@@state to state
    MOV tuple@@ to cases
    tuple
        HdlValueId: s_read_2
        HdlStmBlock: SEQ
            list: body
                HdlStmAssign
                    HdlValueId: s_read_3
                    HdlValueId: state
                HdlStmIf
                    HdlOp: AND_LOG
                        list: ops
                            HdlOp: AND_LOG
                                list: ops
                                    HdlOp: EQ
                                        list: ops
                                            HdlValueId: forcing_refresh
                                            HdlValueInt: 0
                                    HdlOp: EQ
                                        list: ops
                                            HdlValueId: got_transaction
                                            HdlValueInt: 1
                            HdlOp: EQ
                                list: ops
                                    HdlValueId: can_back_to_back
                                    HdlValueInt: 1
                    HdlStmBlock: SEQ
                        list: body
                            HdlStmIf
                                HdlOp: EQ
                                    list: ops
                                        HdlValueId: save_wr
                                        HdlValueInt: 0
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlStmAssign
                                            HdlValueId: s_read_1
                                            HdlValueId: state
                                        HdlStmAssign
                                            HdlValueInt: 1
                                            HdlValueId: ready_for_new
                                        HdlStmAssign
                                            HdlValueInt: 0
                                            HdlValueId: got_transaction
                                list: elifs
                    list: elifs
    UPD HdlValueId@@s_read_3 to s_read_2
    UPD HdlValueId@@s_read_2 to s_read_3

UPD HdlStmCase@@state to state
    INS tuple@@ to cases
    tuple
        HdlValueId: s_open_in_8
        HdlStmAssign
            HdlValueId: s_open_in_7
            HdlValueId: state
    INS tuple@@ to cases
    tuple
        HdlValueId: s_open_in_7
        HdlStmAssign
            HdlValueId: s_open_in_6
            HdlValueId: state
    INS tuple@@ to cases
    tuple
        HdlValueId: s_open_in_6
        HdlStmAssign
            HdlValueId: s_open_in_5
            HdlValueId: state
    INS tuple@@ to cases
    tuple
        HdlValueId: s_open_in_5
        HdlStmAssign
            HdlValueId: s_open_in_4
            HdlValueId: state
    INS tuple@@ to cases
    tuple
        HdlValueId: s_open_in_4
        HdlStmAssign
            HdlValueId: s_open_in_3
            HdlValueId: state
    INS tuple@@ to cases
    tuple
        HdlValueId: s_open_in_3
        HdlStmAssign
            HdlValueId: s_open_in_2
            HdlValueId: state
    INS tuple@@ to cases
    tuple
        HdlValueId: s_burst_read
        HdlStmBlock: SEQ
            list: body
                HdlStmIf
                    HdlOp: NEG_LOG
                        list: ops
                            HdlValueId: burst
                    HdlStmBlock: SEQ
                        list: body
                            HdlStmAssign
                                HdlValueId: s_precharge
                                HdlValueId: state
                            HdlStmAssign
                                HdlValueInt: 1
                                HdlValueId: ready_for_new
                            HdlStmAssign
                                HdlValueInt: 0
                                HdlOp: INDEX
                                    list: ops
                                        HdlValueId: data_ready_delay
                                        HdlValueId: data_ready_delay_high
                    list: elifs
                    HdlStmBlock: SEQ
                        list: body
                            HdlStmAssign
                                HdlValueId: CMD_NOP
                                HdlValueId: iob_command
                            HdlStmAssign
                                HdlValueInt: 00
                                HdlValueId: iob_dqm
                            HdlStmAssign
                                HdlValueInt: 1
                                HdlValueId: iob_dq_hiz
                            HdlStmIf
                                HdlOp: EQ
                                    list: ops
                                        HdlValueId: save_col
                                        HdlValueId: burst_col
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlStmAssign
                                            HdlValueId: s_precharge
                                            HdlValueId: state
                                        HdlStmAssign
                                            HdlValueInt: 0
                                            HdlOp: INDEX
                                                list: ops
                                                    HdlValueId: data_ready_delay
                                                    HdlValueId: data_ready_delay_high
                                        HdlStmAssign
                                            HdlValueInt: 0
                                            HdlValueId: ready_for_new
                                list: elifs
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlStmAssign
                                            HdlValueInt: 1
                                            HdlOp: INDEX
                                                list: ops
                                                    HdlValueId: data_ready_delay
                                                    HdlValueId: data_ready_delay_high
                                        HdlStmAssign
                                            HdlValueInt: 1
                                            HdlValueId: ready_for_new

UPD HdlStmIf@@ to 
    UPD HdlOp@@AND_LOG to AND_LOG
        UPD HdlOp@@AND_LOG to AND_LOG
            MOV HdlOp@@EQ to ops
            HdlOp: EQ
                list: ops
                    HdlValueId: got_transaction
                    HdlValueInt: 1
            DEL HdlOp@@EQ from ops
            HdlOp: EQ
                list: ops
                    HdlValueId: forcing_refresh
                    HdlValueInt: 0
            DEL list@@ops from AND_LOG
        MOV HdlOp@@EQ to ops
        HdlOp: EQ
            list: ops
                HdlValueId: can_back_to_back
                HdlValueInt: 1
        DEL HdlOp@@AND_LOG from ops


CommitId: bda44e27174c3827216cc49680c3250579ad6f78
Merge pull request #1 from stephanIOA/patch-1
--- a/z2-minispartan/SDRAM_Controller_v.v
+++ b/z2-minispartan/SDRAM_Controller_v.v
@@ -452,19 +460,16 @@ always  @ (posedge clk )
                state                     <= s_write_2;
                iob_command               <= CMD_WRITE;
                iob_address               <= save_col; 
-               iob_address[prefresh_cmd] <= 1'b0; // A10 actually matters - it selects auto precharge
+               iob_address[prefresh_cmd] <= 1'b0;
                iob_bank                  <= save_bank;
-               iob_dqm                   <= ~ save_byte_enable[1:0];    
-               //dqm_sr[1:0]               <= ~ save_byte_enable[3:2];    
+               iob_dqm                   <= ~ save_byte_enable[1:0];      
                iob_data                  <= save_data_in[15:0];
-               //iob_data_next             <= save_data_in[31:16];
             end
          s_write_2: begin
             $display("w2 %h\t%h\t%h", save_bank, save_row, iob_address);
                state           <= s_write_3;
-               //iob_data        <= iob_data_next;
                // can we do a back-to-back write?
-               if (forcing_refresh == 1'b0 && got_transaction == 1'b1 && can_back_to_back == 1'b1) begin
+               if (got_transaction == 1'b1 && can_back_to_back == 1'b1) begin
                   if (save_wr == 1'b1) begin
                      $display("back-to-back write");
                      

ParseResult:
UPD HdlStmCase@@state to state
    MOV tuple@@ to cases
    tuple
        HdlValueId: s_read_2
        HdlStmBlock: SEQ
            list: body
                HdlStmAssign
                    HdlValueId: s_read_3
                    HdlValueId: state
                HdlStmIf
                    HdlOp: AND_LOG
                        list: ops
                            HdlOp: AND_LOG
                                list: ops
                                    HdlOp: EQ
                                        list: ops
                                            HdlValueId: forcing_refresh
                                            HdlValueInt: 0
                                    HdlOp: EQ
                                        list: ops
                                            HdlValueId: got_transaction
                                            HdlValueInt: 1
                            HdlOp: EQ
                                list: ops
                                    HdlValueId: can_back_to_back
                                    HdlValueInt: 1
                    HdlStmBlock: SEQ
                        list: body
                            HdlStmIf
                                HdlOp: EQ
                                    list: ops
                                        HdlValueId: save_wr
                                        HdlValueInt: 0
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlStmAssign
                                            HdlValueId: s_read_1
                                            HdlValueId: state
                                        HdlStmAssign
                                            HdlValueInt: 1
                                            HdlValueId: ready_for_new
                                        HdlStmAssign
                                            HdlValueInt: 0
                                            HdlValueId: got_transaction
                                list: elifs
                    list: elifs
    UPD HdlValueId@@s_read_3 to s_read_2
    UPD HdlValueId@@s_read_2 to s_read_3

UPD HdlStmCase@@state to state
    INS tuple@@ to cases
    tuple
        HdlValueId: s_open_in_8
        HdlStmAssign
            HdlValueId: s_open_in_7
            HdlValueId: state
    INS tuple@@ to cases
    tuple
        HdlValueId: s_open_in_7
        HdlStmAssign
            HdlValueId: s_open_in_6
            HdlValueId: state
    INS tuple@@ to cases
    tuple
        HdlValueId: s_open_in_6
        HdlStmAssign
            HdlValueId: s_open_in_5
            HdlValueId: state
    INS tuple@@ to cases
    tuple
        HdlValueId: s_open_in_5
        HdlStmAssign
            HdlValueId: s_open_in_4
            HdlValueId: state
    INS tuple@@ to cases
    tuple
        HdlValueId: s_open_in_4
        HdlStmAssign
            HdlValueId: s_open_in_3
            HdlValueId: state
    INS tuple@@ to cases
    tuple
        HdlValueId: s_open_in_3
        HdlStmAssign
            HdlValueId: s_open_in_2
            HdlValueId: state
    INS tuple@@ to cases
    tuple
        HdlValueId: s_burst_read
        HdlStmBlock: SEQ
            list: body
                HdlStmIf
                    HdlOp: NEG_LOG
                        list: ops
                            HdlValueId: burst
                    HdlStmBlock: SEQ
                        list: body
                            HdlStmAssign
                                HdlValueId: s_precharge
                                HdlValueId: state
                            HdlStmAssign
                                HdlValueInt: 1
                                HdlValueId: ready_for_new
                            HdlStmAssign
                                HdlValueInt: 0
                                HdlOp: INDEX
                                    list: ops
                                        HdlValueId: data_ready_delay
                                        HdlValueId: data_ready_delay_high
                    list: elifs
                    HdlStmBlock: SEQ
                        list: body
                            HdlStmAssign
                                HdlValueId: CMD_NOP
                                HdlValueId: iob_command
                            HdlStmAssign
                                HdlValueInt: 00
                                HdlValueId: iob_dqm
                            HdlStmAssign
                                HdlValueInt: 1
                                HdlValueId: iob_dq_hiz
                            HdlStmIf
                                HdlOp: EQ
                                    list: ops
                                        HdlValueId: save_col
                                        HdlValueId: burst_col
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlStmAssign
                                            HdlValueId: s_precharge
                                            HdlValueId: state
                                        HdlStmAssign
                                            HdlValueInt: 0
                                            HdlOp: INDEX
                                                list: ops
                                                    HdlValueId: data_ready_delay
                                                    HdlValueId: data_ready_delay_high
                                        HdlStmAssign
                                            HdlValueInt: 0
                                            HdlValueId: ready_for_new
                                list: elifs
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlStmAssign
                                            HdlValueInt: 1
                                            HdlOp: INDEX
                                                list: ops
                                                    HdlValueId: data_ready_delay
                                                    HdlValueId: data_ready_delay_high
                                        HdlStmAssign
                                            HdlValueInt: 1
                                            HdlValueId: ready_for_new

UPD HdlStmIf@@ to 
    UPD HdlOp@@AND_LOG to AND_LOG
        UPD HdlOp@@AND_LOG to AND_LOG
            MOV HdlOp@@EQ to ops
            HdlOp: EQ
                list: ops
                    HdlValueId: got_transaction
                    HdlValueInt: 1
            DEL HdlOp@@EQ from ops
            HdlOp: EQ
                list: ops
                    HdlValueId: forcing_refresh
                    HdlValueInt: 0
            DEL list@@ops from AND_LOG
        DEL HdlOp@@AND_LOG from ops


CommitId: bda44e27174c3827216cc49680c3250579ad6f78
Merge pull request #1 from stephanIOA/patch-1
--- a/z2-minispartan/SDRAM_Controller_v.v
+++ b/z2-minispartan/SDRAM_Controller_v.v
@@ -480,7 +485,7 @@ always  @ (posedge clk )
          s_write_3: begin
                // must wait tRDL, hence the extra idle state
                //-- back to back transaction?
-               if (forcing_refresh == 1'b0 && got_transaction == 1'b1 && can_back_to_back == 1'b1) begin
+               if (got_transaction == 1'b1 && can_back_to_back == 1'b1) begin
                   if (save_wr == 1'b1) begin
                      // back-to-back write?
                      state           <= s_write_1;

ParseResult:
UPD HdlStmCase@@state to state
    MOV tuple@@ to cases
    tuple
        HdlValueId: s_read_2
        HdlStmBlock: SEQ
            list: body
                HdlStmAssign
                    HdlValueId: s_read_3
                    HdlValueId: state
                HdlStmIf
                    HdlOp: AND_LOG
                        list: ops
                            HdlOp: AND_LOG
                                list: ops
                                    HdlOp: EQ
                                        list: ops
                                            HdlValueId: forcing_refresh
                                            HdlValueInt: 0
                                    HdlOp: EQ
                                        list: ops
                                            HdlValueId: got_transaction
                                            HdlValueInt: 1
                            HdlOp: EQ
                                list: ops
                                    HdlValueId: can_back_to_back
                                    HdlValueInt: 1
                    HdlStmBlock: SEQ
                        list: body
                            HdlStmIf
                                HdlOp: EQ
                                    list: ops
                                        HdlValueId: save_wr
                                        HdlValueInt: 0
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlStmAssign
                                            HdlValueId: s_read_1
                                            HdlValueId: state
                                        HdlStmAssign
                                            HdlValueInt: 1
                                            HdlValueId: ready_for_new
                                        HdlStmAssign
                                            HdlValueInt: 0
                                            HdlValueId: got_transaction
                                list: elifs
                    list: elifs
    UPD HdlValueId@@s_read_3 to s_read_2
    UPD HdlValueId@@s_read_2 to s_read_3

UPD HdlStmIf@@ to 
    UPD HdlOp@@AND_LOG to AND_LOG
        UPD HdlOp@@AND_LOG to AND_LOG
            MOV HdlOp@@EQ to ops
            HdlOp: EQ
                list: ops
                    HdlValueId: got_transaction
                    HdlValueInt: 1
            DEL HdlOp@@EQ from ops
            HdlOp: EQ
                list: ops
                    HdlValueId: forcing_refresh
                    HdlValueInt: 0
            DEL list@@ops from AND_LOG
        MOV HdlOp@@EQ to ops
        HdlOp: EQ
            list: ops
                HdlValueId: can_back_to_back
                HdlValueInt: 1
        DEL HdlOp@@AND_LOG from ops
        DEL list@@ops from AND_LOG
    DEL HdlOp@@AND_LOG from 


CommitId: bda44e27174c3827216cc49680c3250579ad6f78
Merge pull request #1 from stephanIOA/patch-1
--- a/z2-minispartan/SDRAM_Controller_v.v
+++ b/z2-minispartan/SDRAM_Controller_v.v
@@ -491,7 +496,7 @@ always  @ (posedge clk )
                      // write-to-read switch?
                      state           <= s_read_1;
                      iob_dq_hiz      <= 1'b1;
-                     ready_for_new   <= 1'b1; // we will be ready for a new transaction next cycle!
+                     ready_for_new   <= 1'b1;
                      got_transaction <= 1'b0;                  
                   end 
                end else begin

ParseResult:
UPD HdlStmCase@@state to state
    MOV tuple@@ to cases
    tuple
        HdlValueId: s_read_2
        HdlStmBlock: SEQ
            list: body
                HdlStmAssign
                    HdlValueId: s_read_3
                    HdlValueId: state
                HdlStmIf
                    HdlOp: AND_LOG
                        list: ops
                            HdlOp: AND_LOG
                                list: ops
                                    HdlOp: EQ
                                        list: ops
                                            HdlValueId: forcing_refresh
                                            HdlValueInt: 0
                                    HdlOp: EQ
                                        list: ops
                                            HdlValueId: got_transaction
                                            HdlValueInt: 1
                            HdlOp: EQ
                                list: ops
                                    HdlValueId: can_back_to_back
                                    HdlValueInt: 1
                    HdlStmBlock: SEQ
                        list: body
                            HdlStmIf
                                HdlOp: EQ
                                    list: ops
                                        HdlValueId: save_wr
                                        HdlValueInt: 0
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlStmAssign
                                            HdlValueId: s_read_1
                                            HdlValueId: state
                                        HdlStmAssign
                                            HdlValueInt: 1
                                            HdlValueId: ready_for_new
                                        HdlStmAssign
                                            HdlValueInt: 0
                                            HdlValueId: got_transaction
                                list: elifs
                    list: elifs
    UPD HdlValueId@@s_read_3 to s_read_2
    UPD HdlValueId@@s_read_2 to s_read_3

UPD HdlStmIf@@ to 
    UPD HdlOp@@AND_LOG to AND_LOG
        UPD HdlOp@@AND_LOG to AND_LOG
            MOV HdlOp@@EQ to ops
            HdlOp: EQ
                list: ops
                    HdlValueId: got_transaction
                    HdlValueInt: 1
            DEL HdlOp@@EQ from ops
            HdlOp: EQ
                list: ops
                    HdlValueId: forcing_refresh
                    HdlValueInt: 0
            DEL list@@ops from AND_LOG
        MOV HdlOp@@EQ to ops
        HdlOp: EQ
            list: ops
                HdlValueId: can_back_to_back
                HdlValueInt: 1
        DEL HdlOp@@AND_LOG from ops
        DEL list@@ops from AND_LOG
    DEL HdlOp@@AND_LOG from 


CommitId: bda44e27174c3827216cc49680c3250579ad6f78
Merge pull request #1 from stephanIOA/patch-1
--- a/z2-minispartan/SDRAM_Controller_v.v
+++ b/z2-minispartan/SDRAM_Controller_v.v
@@ -499,21 +504,17 @@ always  @ (posedge clk )
                   state              <= s_precharge;
               end
             end
-         //-------------------------------------------------------------------
          //-- Closing the row off (this closes all banks)
-         //-------------------------------------------------------------------
          s_precharge: begin
-               state                     <= s_idle_in_3;
+               state                     <= s_idle_in_4;
                iob_command               <= CMD_PRECHARGE;
-               iob_address[prefresh_cmd] <= 1'b1; // A10 actually matters - it selects all banks or just one
+               iob_address[prefresh_cmd] <= 1'b0;
             end
-         //-------------------------------------------------------------------
          //-- We should never get here, but if we do then reset the memory
-         //-------------------------------------------------------------------
          default: begin 
                state                 <= s_startup;
                ready_for_new         <= 1'b0;
-               startup_refresh_count <= startup_refresh_max-sdram_startup_cycles;
+               //startup_refresh_count <= startup_refresh_max-sdram_startup_cycles;
             end
          endcase
 
ParseResult:
UPD HdlStmCase@@state to state
    MOV tuple@@ to cases
    tuple
        HdlValueId: s_read_2
        HdlStmBlock: SEQ
            list: body
                HdlStmAssign
                    HdlValueId: s_read_3
                    HdlValueId: state
                HdlStmIf
                    HdlOp: AND_LOG
                        list: ops
                            HdlOp: AND_LOG
                                list: ops
                                    HdlOp: EQ
                                        list: ops
                                            HdlValueId: forcing_refresh
                                            HdlValueInt: 0
                                    HdlOp: EQ
                                        list: ops
                                            HdlValueId: got_transaction
                                            HdlValueInt: 1
                            HdlOp: EQ
                                list: ops
                                    HdlValueId: can_back_to_back
                                    HdlValueInt: 1
                    HdlStmBlock: SEQ
                        list: body
                            HdlStmIf
                                HdlOp: EQ
                                    list: ops
                                        HdlValueId: save_wr
                                        HdlValueInt: 0
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlStmAssign
                                            HdlValueId: s_read_1
                                            HdlValueId: state
                                        HdlStmAssign
                                            HdlValueInt: 1
                                            HdlValueId: ready_for_new
                                        HdlStmAssign
                                            HdlValueInt: 0
                                            HdlValueId: got_transaction
                                list: elifs
                    list: elifs
    UPD HdlValueId@@s_read_3 to s_read_2
    UPD HdlValueId@@s_read_2 to s_read_3

UPD HdlStmAssign@@ to 
    UPD HdlValueId@@s_idle_in_3 to s_idle_in_4

UPD HdlStmAssign@@ to 
    UPD HdlValueInt@@1 to 0

UPD HdlStmIf@@ to 
    UPD HdlOp@@AND_LOG to AND_LOG
        UPD HdlOp@@AND_LOG to AND_LOG
            MOV HdlOp@@EQ to ops
            HdlOp: EQ
                list: ops
                    HdlValueId: got_transaction
                    HdlValueInt: 1
            DEL HdlOp@@EQ from ops
            HdlOp: EQ
                list: ops
                    HdlValueId: forcing_refresh
                    HdlValueInt: 0
            DEL list@@ops from AND_LOG
        MOV HdlOp@@EQ to ops
        HdlOp: EQ
            list: ops
                HdlValueId: can_back_to_back
                HdlValueInt: 1
        DEL HdlOp@@AND_LOG from ops
        DEL list@@ops from AND_LOG
    DEL HdlOp@@AND_LOG from 

DEL HdlStmAssign@@ from body
HdlStmAssign
    HdlOp: SUB
        list: ops
            HdlValueId: startup_refresh_max
            HdlValueId: sdram_startup_cycles
    HdlValueId: startup_refresh_count


CommitId: e8000b0af30dd497d0a6f87b4d5de7cdc3b28f06
stable point after lots of 3000/030 z3 debugging. adds DOE gate, fixes some write/read race conditions
--- a/z2-minispartan/z2.v
+++ b/z2-minispartan/z2.v
@@ -313,10 +314,10 @@ reg slaven = 0;
 reg dtack = 0;
 
 // level shifter direction pins
-assign zDIR1     = (dataout_enable | dataout_z3_latched); // d2-d9
-assign zDIR2     = (dataout_enable | dataout_z3_latched); // d10-15, d0-d1
-assign zDIR3     = dataout_z3; // a16-a23 <- input
-assign zDIR4     = dataout_z3; // a8-a15 <- input
+assign zDIR1     = zDOE & ((dataout_enable | dataout_z3_latched)); // d2-d9
+assign zDIR2     = zDOE & ((dataout_enable | dataout_z3_latched)); // d10-15, d0-d1
+assign zDIR3     = zDOE & (dataout_z3_latched); // a16-a23 <- input
+assign zDIR4     = zDOE & (dataout_z3_latched); // a8-a15 <- input
 
 reg z_ready = 'b1;
 reg z_ready_latch = 'b1;

ParseResult:
INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: AND
        list: ops
            HdlValueId: zDOE
            HdlValueId: dataout_z3_latched
    HdlValueId: zDIR3

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: AND
        list: ops
            HdlValueId: zDOE
            HdlValueId: dataout_z3_latched
    HdlValueId: zDIR4

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: TERNARY
        list: ops
            HdlValueId: slaven
            HdlValueInt: 0
            HdlValueInt: 1
    HdlValueId: znSLAVEN

UPD HdlStmAssign@@ to 
    INS HdlOp@@AND to 
    UPD HdlOp@@AND to AND
        INS list@@ops to AND
        INS HdlValueId@@zDOE to ops

UPD HdlStmAssign@@ to 
    INS HdlOp@@AND to 
    UPD HdlOp@@AND to AND
        INS list@@ops to AND
        INS HdlValueId@@zDOE to ops

UPD HdlStmAssign@@ to 
    MOV HdlOp@@OR to 
    HdlOp: OR
        list: ops
            HdlValueId: dataout_enable
            HdlValueId: dataout_z3_latched

UPD HdlStmAssign@@ to 
    MOV HdlOp@@OR to 
    HdlOp: OR
        list: ops
            HdlValueId: dataout_enable
            HdlValueId: dataout_z3_latched

DEL HdlStmAssign@@ from objs
HdlStmAssign
    HdlValueId: dataout_z3
    HdlValueId: zDIR3

DEL HdlStmAssign@@ from objs
HdlStmAssign
    HdlValueId: dataout_z3
    HdlValueId: zDIR4

DEL HdlStmAssign@@ from objs
HdlStmAssign
    HdlOp: TERNARY
        list: ops
            HdlOp: AND_LOG
                list: ops
                    HdlValueId: dataout
                    HdlValueId: slaven
            HdlValueInt: 0
            HdlValueInt: 1
    HdlValueId: znSLAVEN


CommitId: e8000b0af30dd497d0a6f87b4d5de7cdc3b28f06
stable point after lots of 3000/030 z3 debugging. adds DOE gate, fixes some write/read race conditions
--- a/z2-minispartan/z2.v
+++ b/z2-minispartan/z2.v
@@ -324,10 +325,10 @@ reg z_ovr = 0;
 assign zXRDY  = 1'bZ; //z_ready_latch?1'bZ:1'b0; //works only if bZ?  1'bZ
 assign znCINH = !z_ovr; //1; // Z2 = /OVR
 
-assign znSLAVEN = (dataout && slaven)?1'b0:1'b1;
+assign znSLAVEN = (/*dataout &&*/ slaven)?1'b0:1'b1;
 assign znDTACK  = dtack?1'b0:1'bZ;
 
-assign zD  = (dataout_z3_latched) ? data_z3_hi16_latched : ((/*zDOE & */dataout) ? data : 16'bzzzz_zzzz_zzzz_zzzz); // data = Z2: full 16 bit or Z3: upper 16 bit
+assign zD  = (dataout_z3_latched) ? data_z3_hi16_latched : ((dataout) ? data : 16'bzzzz_zzzz_zzzz_zzzz); // data = Z2: full 16 bit or Z3: upper 16 bit
 assign zA  = (dataout_z3_latched) ? {data_z3_low16_latched, 7'bzzzz_zzz} : 23'bzzz_zzzz_zzzz_zzzz_zzzz_zzzz;
 
 // autoconf status

ParseResult:
INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: TERNARY
        list: ops
            HdlValueId: slaven
            HdlValueInt: 0
            HdlValueInt: 1
    HdlValueId: znSLAVEN

DEL HdlStmAssign@@ from objs
HdlStmAssign
    HdlOp: TERNARY
        list: ops
            HdlOp: AND_LOG
                list: ops
                    HdlValueId: dataout
                    HdlValueId: slaven
            HdlValueInt: 0
            HdlValueInt: 1
    HdlValueId: znSLAVEN


CommitId: e8000b0af30dd497d0a6f87b4d5de7cdc3b28f06
stable point after lots of 3000/030 z3 debugging. adds DOE gate, fixes some write/read race conditions
--- a/z2-minispartan/z2.v
+++ b/z2-minispartan/z2.v
@@ -474,6 +475,10 @@ parameter Z3_WRITE_LOWER = 13;
 parameter Z3_READ_UPPER = 14;
 parameter Z3_READ_LOWER = 15;
 parameter Z3_READ_DELAY = 16;
+parameter Z3_READ_DELAY1 = 30;
+parameter Z3_READ_DELAY2 = 31;
+parameter Z3_WRITE_PRE = 32;
+parameter Z3_WRITE_FINALIZE = 33;
 parameter Z3_ENDCYCLE = 17;
 parameter Z3_DTACK = 18;
 parameter Z3_CONFIGURING = 19;

ParseResult:
INS HdlIdDef@@Z3_WRITE_PRE to params
HdlIdDef: Z3_WRITE_PRE
    HdlValueInt: 32
    HdlDirection: INTERNAL

INS HdlIdDef@@Z3_WRITE_FINALIZE to params
HdlIdDef: Z3_WRITE_FINALIZE
    HdlValueInt: 33
    HdlDirection: INTERNAL


CommitId: e8000b0af30dd497d0a6f87b4d5de7cdc3b28f06
stable point after lots of 3000/030 z3 debugging. adds DOE gate, fixes some write/read race conditions
--- a/z2-minispartan/z2.v
+++ b/z2-minispartan/z2.v
@@ -505,21 +510,23 @@ reg z3addr_autoconfig = 0;
 
 reg [15:0] zaddr_regpart = 0;
 //`define ANALYZER 1
+//`define TRACE 1
+parameter ANSIZE = 639;
 
 `ifdef ANALYZER
 // logic analyzer
 reg rec_enable = 0;
-reg [9:0] rec_idx;
-reg rec_zreadraw [0:255];
-reg rec_zread [0:255];
-reg rec_zwrite [0:255];
-reg rec_zas0 [0:255];
-reg rec_zas1 [0:255];
-reg rec_zaddr_in_ram [0:255];
-reg rec_state [0:255];
-reg rec_statew [0:255];
-reg rec_ready [0:255];
-reg [3:0] rec_zaddr [0:255];
+reg [11:0] rec_idx;
+reg rec_zreadraw [0:ANSIZE];
+reg rec_zread [0:ANSIZE];
+reg rec_zwrite [0:ANSIZE];
+reg rec_zas0 [0:ANSIZE];
+reg rec_zas1 [0:ANSIZE];
+reg rec_zaddr_in_ram [0:ANSIZE];
+reg rec_state [0:ANSIZE];
+reg rec_statew [0:ANSIZE];
+reg rec_ready [0:ANSIZE];
+reg rec_endcycle [0:ANSIZE];
 `endif
 
 reg row_fetched = 0;

ParseResult:
INS HdlIdDef@@z3_fcs_state to objs
HdlIdDef: z3_fcs_state
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
    HdlValueInt: 0
    HdlDirection: INTERNAL


CommitId: e8000b0af30dd497d0a6f87b4d5de7cdc3b28f06
stable point after lots of 3000/030 z3 debugging. adds DOE gate, fixes some write/read race conditions
--- a/z2-minispartan/z2.v
+++ b/z2-minispartan/z2.v
@@ -529,6 +536,8 @@ reg z2_lds = 0;
 
 reg z3_din_latch = 0;
 
+reg z3_fcs_state = 0;
+
 always @(posedge z_sample_clk) begin
   znUDS_sync  <= {znUDS_sync[1:0],znUDS};
   znLDS_sync  <= {znLDS_sync[1:0],znLDS};

ParseResult:
DEL HdlStmAssign@@ from body
HdlStmAssign
    HdlOp: EQ
        list: ops
            HdlValueId: zREAD_sync
            HdlValueInt: 111
    HdlValueId: zorro_read

DEL HdlStmAssign@@ from body
HdlStmAssign
    HdlOp: EQ
        list: ops
            HdlOp: INDEX
                list: ops
                    HdlValueId: zREAD_sync
                    HdlValueInt: 0
            HdlValueInt: 0
    HdlValueId: zorro_write


CommitId: e8000b0af30dd497d0a6f87b4d5de7cdc3b28f06
stable point after lots of 3000/030 z3 debugging. adds DOE gate, fixes some write/read race conditions
--- a/z2-minispartan/z2.v
+++ b/z2-minispartan/z2.v
@@ -560,6 +569,8 @@ always @(posedge z_sample_clk) begin
     z3_din_latch <= 1;
   else
     z3_din_latch <= 0;
+
+  z3_end_cycle <= (z3_fcs_state==1); //(znFCS_sync[0]==1); //(znFCS_sync==3'b111);
   
   // pipelined for better timing
   if (z3_din_latch) begin

ParseResult:
INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueId: z3addr2
    HdlValueId: z3addr3


CommitId: e8000b0af30dd497d0a6f87b4d5de7cdc3b28f06
stable point after lots of 3000/030 z3 debugging. adds DOE gate, fixes some write/read race conditions
--- a/z2-minispartan/z2.v
+++ b/z2-minispartan/z2.v
@@ -581,11 +592,28 @@ always @(posedge z_sample_clk) begin
   z2_mapped_addr <= ((zaddr_sync2-ram_low)>>1);
   
   z3addr2 <= {zD[15:8],zA[22:1],2'b00};
+  z3addr3 <= z3addr2;
   
   // sample z3addr on falling edge of /FCS
-  if (znFCS_sync[1]==1 && znFCS_sync[0]==0) begin
-    z3addr <= z3addr2;
+  if (z3_fcs_state==0) begin
+    if (znFCS_sync==3'b111)
+      z3_fcs_state<=1;
+  end else
+  if (z3_fcs_state==1) begin
+    if (znFCS_sync==3'b000 && z3addr3==z3addr2) begin
+      z3_fcs_state<=0;
+      z3addr <= z3addr2;
+      zorro_read  <= zREAD_sync[1];
+      zorro_write  <= ~zREAD_sync[1];
+    end
   end
+  
+  if (z3_fcs_state==0) begin
+    z3addr_in_ram <= (z3addr >= z3_ram_low) && (z3addr < z3_ram_high);
+  end else begin
+    z3addr_in_ram <= 0;
+  end
+  
   z3_mapped_addr <= ((z3addr)&'h01ffffff)>>1;
   
   datastrobe_synced <= (znUDS_sync==0 || znLDS_sync==0);

ParseResult:
INS HdlStmIf@@ to body

UPD HdlStmIf@@ to 
    INS HdlOp@@EQ to 
    HdlOp: EQ
        list: ops
            HdlValueId: z3_fcs_state
            HdlValueInt: 0
    INS HdlStmBlock@@SEQ to 
    INS list@@elifs to 
    INS tuple@@ to elifs
    INS HdlOp@@EQ to 
    HdlOp: EQ
        list: ops
            HdlValueId: z3_fcs_state
            HdlValueInt: 1
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

MOV HdlStmAssign@@ to body
HdlStmAssign
    HdlOp: AND_LOG
        list: ops
            HdlOp: GE
                list: ops
                    HdlValueId: z3addr
                    HdlValueId: z3_ram_low
            HdlOp: LT
                list: ops
                    HdlValueId: z3addr
                    HdlValueId: z3_ram_high
    HdlValueId: z3addr_in_ram

UPD HdlStmIf@@ to 
    INS list@@elifs to 

UPD HdlStmAssign@@if_true to if_true
    INS HdlValueId@@z3_fcs_state to if_true

UPD HdlStmIf@@ to 
    UPD HdlOp@@AND_LOG to AND_LOG
        INS HdlOp@@EQ to ops
        HdlOp: EQ
            list: ops
                HdlValueId: z3addr3
                HdlValueId: z3addr2


CommitId: e8000b0af30dd497d0a6f87b4d5de7cdc3b28f06
stable point after lots of 3000/030 z3 debugging. adds DOE gate, fixes some write/read race conditions
--- a/z2-minispartan/z2.v
+++ b/z2-minispartan/z2.v
@@ -650,44 +677,51 @@ reg [4:0] dtack_time = 0;
 reg [15:0] warmup_counter = 0; // 2 seconds @ 150mhz
 reg [5:0] dvid_reset_counter = 0;
 reg z2_addr_valid = 0;
+reg z3_end_cycle = 0;
 
 // =================================================================================
 // ZORRO MACHINE
 
-reg [15:0] trace_1 = 0;
-reg [15:0] trace_2 = 0;
-reg [15:0] trace_3 = 0;
+reg [31:0] trace_1 = 0;
+reg [31:0] trace_2 = 0;
+reg [31:0] trace_3 = 0;
 reg [15:0] trace_4 = 0;
-reg [15:0] trace_5 = 0;
-reg [15:0] trace_6 = 0;
+reg [31:0] trace_5 = 0;
+reg [31:0] trace_6 = 0;
 reg [15:0] trace_7 = 0;
 reg [15:0] trace_8 = 0;
 reg [15:0] trace_9 = 0;
 reg [7:0] write_counter = 0;
 
+reg z3_ds3=0;
+reg z3_ds2=0;
+reg z3_ds1=0;
+reg z3_ds0=0;
+
 reg [1:0] zorro_write_capture_bytes = 0;
 reg [15:0] zorro_write_capture_data = 0;
 
-reg [15:0] default_data = 'hffff; // causes read/write glitches (data bus interference) when 0
+reg [15:0] default_data = 'hffff; // causes read/write glitches on A2000 (data bus interference) when 0
 
 always @(posedge z_sample_clk) begin
 
 `ifdef ANALYZER
   if (rec_enable) begin
-    if (rec_idx==1023) begin
+    if (rec_idx==(ANSIZE*4)) begin
       rec_enable <= 0;
       rec_idx <= 0;
     end else begin
       rec_idx <= rec_idx+1;
-      rec_zreadraw[rec_idx>>2] <= !znAS_sync[0]; // zREAD;
+      rec_zreadraw[rec_idx>>2] <= !znFCS_sync[0]; // zREAD;
       rec_zread[rec_idx>>2] <= zorro_read;
       rec_zwrite[rec_idx>>2] <= zorro_write;
       rec_zas0[rec_idx>>2] <= !znLDS_sync[0]; //znAS_sync[0];
       rec_zas1[rec_idx>>2] <= !znUDS_sync[0]; //znAS_sync[1];
-      rec_zaddr_in_ram[rec_idx>>2] <= zaddr_in_ram;
+      rec_zaddr_in_ram[rec_idx>>2] <= zorro_ram_read_request; //z3addr_in_ram;
       rec_state[rec_idx>>2] <= zorro_ram_write_request;
-      rec_statew[rec_idx>>2] <= ((zorro_state==WAIT_WRITE2)||(zorro_state==WAIT_WRITE))?1'b1:1'b0;
-      rec_ready[rec_idx>>2] <= ((zorro_state==WAIT_READ3)||(zorro_state==WAIT_READ2))?1'b1:1'b0;
+      rec_statew[rec_idx>>2] <= ((zorro_state==Z3_WRITE_UPPER)||(zorro_state==Z3_WRITE_LOWER))?1'b1:1'b0;
+      rec_ready[rec_idx>>2] <= ((zorro_state==Z3_READ_UPPER)||(zorro_state==Z3_READ_LOWER)||(zorro_state==Z3_READ_DELAY))?1'b1:1'b0;
+      rec_endcycle[rec_idx>>2] <= ((zorro_state==Z3_ENDCYCLE))?1'b1:1'b0;
       ///rec_zaddr[rec_idx] <= zaddr;
     end
   end

ParseResult:
INS HdlIdDef@@z3_ds2 to objs
HdlIdDef: z3_ds2
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
    HdlValueInt: 0
    HdlDirection: INTERNAL

INS HdlIdDef@@z3_ds1 to objs
HdlIdDef: z3_ds1
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
    HdlValueInt: 0
    HdlDirection: INTERNAL

INS HdlIdDef@@z3_ds0 to objs
HdlIdDef: z3_ds0
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
    HdlValueInt: 0
    HdlDirection: INTERNAL

UPD HdlStmIf@@ to 
    INS list@@elifs to 

UPD HdlStmCase@@zorro_state to zorro_state
    INS HdlStmCaseType@@CASE to zorro_state
    INS HdlValueId@@zorro_state to zorro_state
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS tuple@@ to cases
    tuple
        HdlValueId: Z3_READ_DELAY2
        HdlStmBlock: SEQ
            list: body
                HdlStmIf
                    HdlOp: GE
                        list: ops
                            HdlValueId: read_counter
                            HdlValueId: dataout_time
                    HdlStmAssign: if_true
                        HdlValueId: Z3_ENDCYCLE
                        HdlValueId: zorro_state
                    list: elifs
                    HdlStmAssign: if_false
                        HdlOp: ADD
                            list: ops
                                HdlValueId: read_counter
                                HdlValueInt: 1
                        HdlValueId: read_counter
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS HdlValueId@@PAUSE to 
    INS HdlValueId@@Z3_READ_LOWER to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@Z3_READ_DELAY1 to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@Z3_WRITE_PRE to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@Z3_WRITE_FINALIZE to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmCase@@zorro_state to zorro_state
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlStmIf
                HdlValueId: zaddr_autoconfig
                HdlStmBlock: SEQ
                    list: body
                        HdlStmAssign
                            HdlValueInt: 0
                            HdlValueId: ZORRO3
                        HdlStmAssign
                            HdlValueId: Z2_CONFIGURING
                            HdlValueId: zorro_state
                list: elifs
                    tuple
                        HdlValueId: z3addr_autoconfig
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmAssign
                                    HdlValueInt: 1
                                    HdlValueId: ZORRO3
                                HdlStmAssign
                                    HdlValueId: Z3_CONFIGURING
                                    HdlValueId: zorro_state
    DEL HdlStmCaseType@@CASE from zorro_state
    DEL HdlValueId@@zorro_state from zorro_state
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlValueId@@PAUSE from 
    DEL tuple@@ from cases
    DEL HdlValueId@@Z3_READ_LOWER from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases
    DEL HdlValueId@@Z3_READ_DELAY from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases

UPD HdlStmIf@@ to 
    DEL list@@elifs from 


CommitId: e8000b0af30dd497d0a6f87b4d5de7cdc3b28f06
stable point after lots of 3000/030 z3 debugging. adds DOE gate, fixes some write/read race conditions
--- a/z2-minispartan/z2.v
+++ b/z2-minispartan/z2.v
@@ -736,23 +770,23 @@ always @(posedge z_sample_clk) begin
       reg_low   <= 'h600000 + ram_size;
       reg_high  <= 'h600000 + ram_size + reg_size;
       
-      if (clock_locked /*&& znRST_sync[1] == 1'b1*/)
+      //if (clock_locked /*&& znRST_sync[1] == 1'b1*/)
         zorro_state <= PAUSE;
     end
     
     PAUSE: begin
       // poor man's z3sense
-      if (zaddr_autoconfig) begin
+      /*if (zaddr_autoconfig) begin
         ZORRO3 <= 0;
         zorro_state <= Z2_CONFIGURING;
-      end else if (z3addr_autoconfig) begin
+      end else*/ if (z3addr_autoconfig) begin
         ZORRO3 <= 1;
         zorro_state <= Z3_CONFIGURING;
       end
     end
     
     Z3_CONFIGURING: begin
-      if (z_cfgin && z3addr_autoconfig && znFCS_sync[1]==0) begin
+      if (z_cfgin && z3addr_autoconfig && znFCS_sync[2]==0) begin
         if (zorro_read) begin
           // autoconfig ROM
           dataout_enable <= 1;

ParseResult:
UPD HdlStmIf@@ to 
    INS list@@elifs to 

UPD HdlStmCase@@zorro_state to zorro_state
    INS HdlStmCaseType@@CASE to zorro_state
    INS HdlValueId@@zorro_state to zorro_state
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS tuple@@ to cases
    tuple
        HdlValueId: Z3_READ_DELAY2
        HdlStmBlock: SEQ
            list: body
                HdlStmIf
                    HdlOp: GE
                        list: ops
                            HdlValueId: read_counter
                            HdlValueId: dataout_time
                    HdlStmAssign: if_true
                        HdlValueId: Z3_ENDCYCLE
                        HdlValueId: zorro_state
                    list: elifs
                    HdlStmAssign: if_false
                        HdlOp: ADD
                            list: ops
                                HdlValueId: read_counter
                                HdlValueInt: 1
                        HdlValueId: read_counter
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS HdlValueId@@PAUSE to 
    INS HdlValueId@@Z3_READ_LOWER to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@Z3_READ_DELAY1 to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@Z3_WRITE_PRE to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@Z3_WRITE_FINALIZE to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmCase@@zorro_state to zorro_state
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlStmIf
                HdlValueId: zaddr_autoconfig
                HdlStmBlock: SEQ
                    list: body
                        HdlStmAssign
                            HdlValueInt: 0
                            HdlValueId: ZORRO3
                        HdlStmAssign
                            HdlValueId: Z2_CONFIGURING
                            HdlValueId: zorro_state
                list: elifs
                    tuple
                        HdlValueId: z3addr_autoconfig
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmAssign
                                    HdlValueInt: 1
                                    HdlValueId: ZORRO3
                                HdlStmAssign
                                    HdlValueId: Z3_CONFIGURING
                                    HdlValueId: zorro_state
    DEL HdlStmCaseType@@CASE from zorro_state
    DEL HdlValueId@@zorro_state from zorro_state
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlValueId@@PAUSE from 
    DEL tuple@@ from cases
    DEL HdlValueId@@Z3_READ_LOWER from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases
    DEL HdlValueId@@Z3_READ_DELAY from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases

UPD HdlStmIf@@ to 
    INS list@@elifs to 

UPD HdlStmIf@@ to 
    DEL list@@elifs from 

UPD HdlStmIf@@ to 
    UPD HdlOp@@AND_LOG to AND_LOG
        DEL HdlOp@@EQ from ops
        HdlOp: EQ
            list: ops
                HdlOp: INDEX
                    list: ops
                        HdlValueId: znFCS_sync
                        HdlValueInt: 1
                HdlValueInt: 0


CommitId: e8000b0af30dd497d0a6f87b4d5de7cdc3b28f06
stable point after lots of 3000/030 z3 debugging. adds DOE gate, fixes some write/read race conditions
--- a/z2-minispartan/z2.v
+++ b/z2-minispartan/z2.v
@@ -824,7 +858,9 @@ always @(posedge z_sample_clk) begin
     end
     
     Z3_DTACK: begin
-      if (znFCS_sync[2]==1) begin
+      /*if (dtack_time < 2)
+        dtack_time <= dtack_time + 1'b1;
+      else*/ if (z3_end_cycle) begin
         dtack <= 0;
         dataout_z3 <= 0;
         dataout_enable <= 0;

ParseResult:
UPD HdlStmIf@@ to 
    INS list@@elifs to 

UPD HdlStmCase@@zorro_state to zorro_state
    INS HdlStmCaseType@@CASE to zorro_state
    INS HdlValueId@@zorro_state to zorro_state
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS tuple@@ to cases
    tuple
        HdlValueId: Z3_READ_DELAY2
        HdlStmBlock: SEQ
            list: body
                HdlStmIf
                    HdlOp: GE
                        list: ops
                            HdlValueId: read_counter
                            HdlValueId: dataout_time
                    HdlStmAssign: if_true
                        HdlValueId: Z3_ENDCYCLE
                        HdlValueId: zorro_state
                    list: elifs
                    HdlStmAssign: if_false
                        HdlOp: ADD
                            list: ops
                                HdlValueId: read_counter
                                HdlValueInt: 1
                        HdlValueId: read_counter
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS HdlValueId@@PAUSE to 
    INS HdlValueId@@Z3_READ_LOWER to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@Z3_READ_DELAY1 to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@Z3_WRITE_PRE to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@Z3_WRITE_FINALIZE to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmCase@@zorro_state to zorro_state
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlStmIf
                HdlValueId: zaddr_autoconfig
                HdlStmBlock: SEQ
                    list: body
                        HdlStmAssign
                            HdlValueInt: 0
                            HdlValueId: ZORRO3
                        HdlStmAssign
                            HdlValueId: Z2_CONFIGURING
                            HdlValueId: zorro_state
                list: elifs
                    tuple
                        HdlValueId: z3addr_autoconfig
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmAssign
                                    HdlValueInt: 1
                                    HdlValueId: ZORRO3
                                HdlStmAssign
                                    HdlValueId: Z3_CONFIGURING
                                    HdlValueId: zorro_state
    DEL HdlStmCaseType@@CASE from zorro_state
    DEL HdlValueId@@zorro_state from zorro_state
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlValueId@@PAUSE from 
    DEL tuple@@ from cases
    DEL HdlValueId@@Z3_READ_LOWER from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases
    DEL HdlValueId@@Z3_READ_DELAY from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases

UPD HdlStmIf@@ to 
    DEL list@@elifs from 


CommitId: e8000b0af30dd497d0a6f87b4d5de7cdc3b28f06
stable point after lots of 3000/030 z3 debugging. adds DOE gate, fixes some write/read race conditions
--- a/z2-minispartan/z2.v
+++ b/z2-minispartan/z2.v
@@ -837,12 +873,8 @@ always @(posedge z_sample_clk) begin
           reg_high  <= z3_ram_low + z3_ram_size-'h10000 + reg_size;
         end else
           zorro_state <= Z3_CONFIGURING;
-      end else begin
-        if (dtack_time < 2)
-          dtack_time <= dtack_time + 1'b1;
-        else
-          dtack <= 1;
-      end
+      end else
+        dtack <= 1;
     end
     
     Z2_CONFIGURING: begin

ParseResult:
UPD HdlStmIf@@ to 
    INS list@@elifs to 

UPD HdlStmCase@@zorro_state to zorro_state
    INS HdlStmCaseType@@CASE to zorro_state
    INS HdlValueId@@zorro_state to zorro_state
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS tuple@@ to cases
    tuple
        HdlValueId: Z3_READ_DELAY2
        HdlStmBlock: SEQ
            list: body
                HdlStmIf
                    HdlOp: GE
                        list: ops
                            HdlValueId: read_counter
                            HdlValueId: dataout_time
                    HdlStmAssign: if_true
                        HdlValueId: Z3_ENDCYCLE
                        HdlValueId: zorro_state
                    list: elifs
                    HdlStmAssign: if_false
                        HdlOp: ADD
                            list: ops
                                HdlValueId: read_counter
                                HdlValueInt: 1
                        HdlValueId: read_counter
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS HdlValueId@@PAUSE to 
    INS HdlValueId@@Z3_READ_LOWER to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@Z3_READ_DELAY1 to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@Z3_WRITE_PRE to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@Z3_WRITE_FINALIZE to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmCase@@zorro_state to zorro_state
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlStmIf
                HdlValueId: zaddr_autoconfig
                HdlStmBlock: SEQ
                    list: body
                        HdlStmAssign
                            HdlValueInt: 0
                            HdlValueId: ZORRO3
                        HdlStmAssign
                            HdlValueId: Z2_CONFIGURING
                            HdlValueId: zorro_state
                list: elifs
                    tuple
                        HdlValueId: z3addr_autoconfig
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmAssign
                                    HdlValueInt: 1
                                    HdlValueId: ZORRO3
                                HdlStmAssign
                                    HdlValueId: Z3_CONFIGURING
                                    HdlValueId: zorro_state
    DEL HdlStmCaseType@@CASE from zorro_state
    DEL HdlValueId@@zorro_state from zorro_state
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlValueId@@PAUSE from 
    DEL tuple@@ from cases
    DEL HdlValueId@@Z3_READ_LOWER from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases
    DEL HdlValueId@@Z3_READ_DELAY from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases

UPD HdlStmIf@@ to 
    DEL list@@elifs from 


CommitId: e8000b0af30dd497d0a6f87b4d5de7cdc3b28f06
stable point after lots of 3000/030 z3 debugging. adds DOE gate, fixes some write/read race conditions
--- a/z2-minispartan/z2.v
+++ b/z2-minispartan/z2.v
@@ -1125,16 +1157,29 @@ always @(posedge z_sample_clk) begin
         dvid_reset_counter <= 2;
         zorro_state <= RESET_DVID;
       end else
-      if (znFCS_sync[2]==0) begin
+      if (z3_fcs_state==0) begin
         // falling edge of /FCS
+        
+        `ifdef ANALYZER
+          if (!rec_enable && z3addr_in_ram) begin 
+            rec_enable <= 1;
+            rec_idx <= 0;
+          end
+        `endif
+         
         if (z3addr_in_ram && zorro_write) begin
           slaven <= 1;
-          if ((znUDS_sync[2]==0) || (znLDS_sync[2]==0) || (znDS1_sync[2]==0) || (znDS0_sync[2]==0)) begin
-            zorro_state <= Z3_WRITE_UPPER;
-          end
+          dataout_enable <= 0;
+          dataout_z3 <= 0;
+          read_counter <= 0;
+          zorro_state <= Z3_WRITE_PRE;
         end else if (z3addr_in_ram && zorro_read) begin
           // read from memory
           slaven <= 1;
+          data_z3_hi16 <= default_data;
+          data_z3_low16 <= default_data;
+          dataout_z3 <= 1;
+      
           zorro_state <= Z3_READ_UPPER;
         end else if (zorro_write && z3addr_in_reg) begin
           // write to register

ParseResult:
UPD HdlStmIf@@ to 
    INS list@@elifs to 

UPD HdlStmCase@@zorro_state to zorro_state
    INS HdlStmCaseType@@CASE to zorro_state
    INS HdlValueId@@zorro_state to zorro_state
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS tuple@@ to cases
    tuple
        HdlValueId: Z3_READ_DELAY2
        HdlStmBlock: SEQ
            list: body
                HdlStmIf
                    HdlOp: GE
                        list: ops
                            HdlValueId: read_counter
                            HdlValueId: dataout_time
                    HdlStmAssign: if_true
                        HdlValueId: Z3_ENDCYCLE
                        HdlValueId: zorro_state
                    list: elifs
                    HdlStmAssign: if_false
                        HdlOp: ADD
                            list: ops
                                HdlValueId: read_counter
                                HdlValueInt: 1
                        HdlValueId: read_counter
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS HdlValueId@@PAUSE to 
    INS HdlValueId@@Z3_READ_LOWER to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@Z3_READ_DELAY1 to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@Z3_WRITE_PRE to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@Z3_WRITE_FINALIZE to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmCase@@zorro_state to zorro_state
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlStmIf
                HdlValueId: zaddr_autoconfig
                HdlStmBlock: SEQ
                    list: body
                        HdlStmAssign
                            HdlValueInt: 0
                            HdlValueId: ZORRO3
                        HdlStmAssign
                            HdlValueId: Z2_CONFIGURING
                            HdlValueId: zorro_state
                list: elifs
                    tuple
                        HdlValueId: z3addr_autoconfig
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmAssign
                                    HdlValueInt: 1
                                    HdlValueId: ZORRO3
                                HdlStmAssign
                                    HdlValueId: Z3_CONFIGURING
                                    HdlValueId: zorro_state
    DEL HdlStmCaseType@@CASE from zorro_state
    DEL HdlValueId@@zorro_state from zorro_state
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlValueId@@PAUSE from 
    DEL tuple@@ from cases
    DEL HdlValueId@@Z3_READ_LOWER from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases
    DEL HdlValueId@@Z3_READ_DELAY from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases

INS HdlStmIf@@ to body

UPD HdlStmIf@@ to 
    MOV HdlOp@@EQ to 
    HdlOp: EQ
        list: ops
            HdlOp: INDEX
                list: ops
                    HdlValueId: znFCS_sync
                    HdlValueInt: 2
            HdlValueInt: 0

UPD HdlStmIf@@ to 
    INS HdlOp@@EQ to 
    HdlOp: EQ
        list: ops
            HdlValueId: z3_fcs_state
            HdlValueInt: 0

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlOp: CONCAT
        list: ops
            HdlOp: INDEX
                list: ops
                    HdlValueId: z3_read_addr
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 23
                            HdlValueInt: 1
            HdlValueInt: 1
    HdlValueId: zorro_ram_read_addr

UPD HdlStmIf@@ to 
    DEL list@@elifs from 


CommitId: e8000b0af30dd497d0a6f87b4d5de7cdc3b28f06
stable point after lots of 3000/030 z3 debugging. adds DOE gate, fixes some write/read race conditions
--- a/z2-minispartan/z2.v
+++ b/z2-minispartan/z2.v
@@ -1176,6 +1221,8 @@ always @(posedge z_sample_clk) begin
     end
     
     Z3_READ_UPPER: begin
+      dataout_enable <= 1;
+      
       if (!zorro_ram_read_request) begin
         z3_read_addr <= z3_mapped_addr;
         zorro_state <= Z3_READ_LOWER;

ParseResult:
UPD HdlStmIf@@ to 
    INS list@@elifs to 

UPD HdlStmCase@@zorro_state to zorro_state
    INS HdlStmCaseType@@CASE to zorro_state
    INS HdlValueId@@zorro_state to zorro_state
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS tuple@@ to cases
    tuple
        HdlValueId: Z3_READ_DELAY2
        HdlStmBlock: SEQ
            list: body
                HdlStmIf
                    HdlOp: GE
                        list: ops
                            HdlValueId: read_counter
                            HdlValueId: dataout_time
                    HdlStmAssign: if_true
                        HdlValueId: Z3_ENDCYCLE
                        HdlValueId: zorro_state
                    list: elifs
                    HdlStmAssign: if_false
                        HdlOp: ADD
                            list: ops
                                HdlValueId: read_counter
                                HdlValueInt: 1
                        HdlValueId: read_counter
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS HdlValueId@@PAUSE to 
    INS HdlValueId@@Z3_READ_LOWER to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@Z3_READ_DELAY1 to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@Z3_WRITE_PRE to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@Z3_WRITE_FINALIZE to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmCase@@zorro_state to zorro_state
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlStmIf
                HdlValueId: zaddr_autoconfig
                HdlStmBlock: SEQ
                    list: body
                        HdlStmAssign
                            HdlValueInt: 0
                            HdlValueId: ZORRO3
                        HdlStmAssign
                            HdlValueId: Z2_CONFIGURING
                            HdlValueId: zorro_state
                list: elifs
                    tuple
                        HdlValueId: z3addr_autoconfig
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmAssign
                                    HdlValueInt: 1
                                    HdlValueId: ZORRO3
                                HdlStmAssign
                                    HdlValueId: Z3_CONFIGURING
                                    HdlValueId: zorro_state
    DEL HdlStmCaseType@@CASE from zorro_state
    DEL HdlValueId@@zorro_state from zorro_state
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlValueId@@PAUSE from 
    DEL tuple@@ from cases
    DEL HdlValueId@@Z3_READ_LOWER from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases
    DEL HdlValueId@@Z3_READ_DELAY from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases

UPD HdlStmIf@@ to 
    INS HdlStmBlock@@SEQ to 
    INS list@@elifs to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmIf@@ to 
    UPD HdlOp@@OR_LOG to OR_LOG
        UPD HdlOp@@EQ to EQ
            UPD HdlOp@@INDEX to INDEX
                UPD HdlValueId@@znUDS_sync to z3_ds3
                MOV HdlValueId@@znUDS_sync to ops
                HdlValueId: znUDS_sync
                DEL HdlValueInt@@2 from ops
                DEL list@@ops from INDEX
            DEL HdlOp@@INDEX from ops
            DEL HdlValueInt@@0 from ops
            DEL list@@ops from EQ
        UPD HdlOp@@EQ to EQ
            UPD HdlOp@@INDEX to INDEX
                UPD HdlValueId@@znLDS_sync to z3_ds2
                MOV HdlValueId@@znLDS_sync to ops
                HdlValueId: znLDS_sync
                DEL HdlValueInt@@2 from ops
                DEL list@@ops from INDEX
            DEL HdlOp@@INDEX from ops
            DEL HdlValueInt@@0 from ops
            DEL list@@ops from EQ
        DEL HdlOp@@EQ from ops
        DEL HdlOp@@EQ from ops

UPD HdlStmIf@@ to 
    DEL list@@elifs from 


CommitId: e8000b0af30dd497d0a6f87b4d5de7cdc3b28f06
stable point after lots of 3000/030 z3 debugging. adds DOE gate, fixes some write/read race conditions
--- a/z2-minispartan/z2.v
+++ b/z2-minispartan/z2.v
@@ -1285,7 +1373,16 @@ always @(posedge z_sample_clk) begin
         
         'h70: begin z3_regread_hi <= sd_error; z3_regread_lo <= 0; end
         /*'h72: data_z3_low16 <= sd_clkdiv;*/
-        
+     
+`ifdef TRACE
+        'h80: begin z3_regread_hi <= trace_1[31:16]; z3_regread_lo <= trace_1[15:0]; end
+        'h84: begin z3_regread_hi <= trace_2[31:16]; z3_regread_lo <= trace_2[15:0]; end
+        'h88: begin z3_regread_hi <= trace_3[31:16]; z3_regread_lo <= trace_3[15:0]; end
+        'h8c: begin z3_regread_hi <= trace_4[15:0]; z3_regread_lo <= 0; end
+        'h90: begin z3_regread_hi <= trace_5[31:16]; z3_regread_lo <= trace_5[15:0]; end
+        'h94: begin z3_regread_hi <= trace_6[31:16]; z3_regread_lo <= trace_6[15:0]; end
+`endif
+
         default: begin
           z3_regread_hi <= REVISION; //'h0000; 
           z3_regread_lo <= 'h0000;

ParseResult:
UPD HdlStmIf@@ to 
    INS list@@elifs to 

UPD HdlStmCase@@zorro_state to zorro_state
    INS HdlStmCaseType@@CASE to zorro_state
    INS HdlValueId@@zorro_state to zorro_state
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS tuple@@ to cases
    tuple
        HdlValueId: Z3_READ_DELAY2
        HdlStmBlock: SEQ
            list: body
                HdlStmIf
                    HdlOp: GE
                        list: ops
                            HdlValueId: read_counter
                            HdlValueId: dataout_time
                    HdlStmAssign: if_true
                        HdlValueId: Z3_ENDCYCLE
                        HdlValueId: zorro_state
                    list: elifs
                    HdlStmAssign: if_false
                        HdlOp: ADD
                            list: ops
                                HdlValueId: read_counter
                                HdlValueInt: 1
                        HdlValueId: read_counter
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS HdlValueId@@PAUSE to 
    INS HdlValueId@@Z3_READ_LOWER to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@Z3_READ_DELAY1 to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@Z3_WRITE_PRE to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@Z3_WRITE_FINALIZE to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmCase@@zorro_state to zorro_state
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlStmIf
                HdlValueId: zaddr_autoconfig
                HdlStmBlock: SEQ
                    list: body
                        HdlStmAssign
                            HdlValueInt: 0
                            HdlValueId: ZORRO3
                        HdlStmAssign
                            HdlValueId: Z2_CONFIGURING
                            HdlValueId: zorro_state
                list: elifs
                    tuple
                        HdlValueId: z3addr_autoconfig
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmAssign
                                    HdlValueInt: 1
                                    HdlValueId: ZORRO3
                                HdlStmAssign
                                    HdlValueId: Z3_CONFIGURING
                                    HdlValueId: zorro_state
    DEL HdlStmCaseType@@CASE from zorro_state
    DEL HdlValueId@@zorro_state from zorro_state
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlValueId@@PAUSE from 
    DEL tuple@@ from cases
    DEL HdlValueId@@Z3_READ_LOWER from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases
    DEL HdlValueId@@Z3_READ_DELAY from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases

UPD HdlStmIf@@ to 
    DEL list@@elifs from 


CommitId: e8000b0af30dd497d0a6f87b4d5de7cdc3b28f06
stable point after lots of 3000/030 z3 debugging. adds DOE gate, fixes some write/read race conditions
--- a/z2-minispartan/z2.v
+++ b/z2-minispartan/z2.v
@@ -1331,6 +1428,7 @@ always @(posedge z_sample_clk) begin
         
         'h0a: dataout_time <= regdata_in[7:0];
         'h0c: margin_x <= regdata_in[9:0];
+        'h0e: default_data <= regdata_in[15:0];
         'h10: preheat_x <= regdata_in[4:0];
         'h14: safe_x2 <= regdata_in[10:0];
         'h1a: fetch_preroll <= regdata_in[10:0];

ParseResult:
UPD HdlStmIf@@ to 
    INS list@@elifs to 

UPD HdlStmCase@@zorro_state to zorro_state
    INS HdlStmCaseType@@CASE to zorro_state
    INS HdlValueId@@zorro_state to zorro_state
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS tuple@@ to cases
    tuple
        HdlValueId: Z3_READ_DELAY2
        HdlStmBlock: SEQ
            list: body
                HdlStmIf
                    HdlOp: GE
                        list: ops
                            HdlValueId: read_counter
                            HdlValueId: dataout_time
                    HdlStmAssign: if_true
                        HdlValueId: Z3_ENDCYCLE
                        HdlValueId: zorro_state
                    list: elifs
                    HdlStmAssign: if_false
                        HdlOp: ADD
                            list: ops
                                HdlValueId: read_counter
                                HdlValueInt: 1
                        HdlValueId: read_counter
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS HdlValueId@@PAUSE to 
    INS HdlValueId@@Z3_READ_LOWER to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@Z3_READ_DELAY1 to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@Z3_WRITE_PRE to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@Z3_WRITE_FINALIZE to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmCase@@zorro_state to zorro_state
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlStmIf
                HdlValueId: zaddr_autoconfig
                HdlStmBlock: SEQ
                    list: body
                        HdlStmAssign
                            HdlValueInt: 0
                            HdlValueId: ZORRO3
                        HdlStmAssign
                            HdlValueId: Z2_CONFIGURING
                            HdlValueId: zorro_state
                list: elifs
                    tuple
                        HdlValueId: z3addr_autoconfig
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmAssign
                                    HdlValueInt: 1
                                    HdlValueId: ZORRO3
                                HdlStmAssign
                                    HdlValueId: Z3_CONFIGURING
                                    HdlValueId: zorro_state
    DEL HdlStmCaseType@@CASE from zorro_state
    DEL HdlValueId@@zorro_state from zorro_state
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlValueId@@PAUSE from 
    DEL tuple@@ from cases
    DEL HdlValueId@@Z3_READ_LOWER from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases
    DEL HdlValueId@@Z3_READ_DELAY from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases

UPD HdlStmCase@@zaddr_regpart to zaddr_regpart
    INS tuple@@ to cases
    INS HdlValueInt@@0e to 

UPD HdlStmAssign@@ to 
    INS HdlValueId@@default_data to 

UPD HdlStmIf@@ to 
    DEL list@@elifs from 


CommitId: e8000b0af30dd497d0a6f87b4d5de7cdc3b28f06
stable point after lots of 3000/030 z3 debugging. adds DOE gate, fixes some write/read race conditions
--- a/z2-minispartan/z2.v
+++ b/z2-minispartan/z2.v
@@ -1391,6 +1489,12 @@ always @(posedge z_sample_clk) begin
         'h68: sd_addr_in[31:16] <= regdata_in[15:0];
         'h6a: sd_addr_in[15:0] <= regdata_in[15:0];
         'h6c: sd_data_in <= regdata_in[15:8];
+      
+`ifdef TRACE      
+        'h80: begin
+          trace_1 <= 0;
+        end
+`endif
         
       endcase
     end

ParseResult:
UPD HdlStmIf@@ to 
    INS list@@elifs to 

UPD HdlStmCase@@zorro_state to zorro_state
    INS HdlStmCaseType@@CASE to zorro_state
    INS HdlValueId@@zorro_state to zorro_state
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS tuple@@ to cases
    tuple
        HdlValueId: Z3_READ_DELAY2
        HdlStmBlock: SEQ
            list: body
                HdlStmIf
                    HdlOp: GE
                        list: ops
                            HdlValueId: read_counter
                            HdlValueId: dataout_time
                    HdlStmAssign: if_true
                        HdlValueId: Z3_ENDCYCLE
                        HdlValueId: zorro_state
                    list: elifs
                    HdlStmAssign: if_false
                        HdlOp: ADD
                            list: ops
                                HdlValueId: read_counter
                                HdlValueInt: 1
                        HdlValueId: read_counter
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS HdlValueId@@PAUSE to 
    INS HdlValueId@@Z3_READ_LOWER to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@Z3_READ_DELAY1 to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@Z3_WRITE_PRE to 
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@Z3_WRITE_FINALIZE to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmCase@@zaddr_regpart to zaddr_regpart
    INS tuple@@ to cases
    INS HdlValueInt@@0e to 

UPD HdlStmCase@@ram_arbiter_state to ram_arbiter_state
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 


CommitId: e8000b0af30dd497d0a6f87b4d5de7cdc3b28f06
stable point after lots of 3000/030 z3 debugging. adds DOE gate, fixes some write/read race conditions
--- a/z2-minispartan/z2.v
+++ b/z2-minispartan/z2.v
@@ -1479,7 +1583,7 @@ always @(posedge z_sample_clk) begin
     end
     
     RAM_ROW_FETCHED:
-      if ((need_row_fetch_y_latched!=fetch_line_y) /*&& (x_safe_area)*/ && cmd_ready) begin
+      if ((need_row_fetch_y_latched!=fetch_line_y) && x_safe_area && cmd_ready) begin
         row_fetched <= 0;
         fetch_x <= 0;
         fetch_line_y <= need_row_fetch_y_latched;

ParseResult:
UPD HdlStmIf@@ to 
    MOV tuple@@ to elifs
    tuple
        HdlOp: AND_LOG
            list: ops
                HdlValueId: zorro_ram_read_request
                HdlValueId: cmd_ready
        HdlStmBlock: SEQ
            list: body
                HdlStmAssign
                    HdlValueInt: 0
                    HdlValueId: zorro_ram_read_done
                HdlStmAssign
                    HdlValueInt: 0
                    HdlValueId: ram_enable
                HdlStmAssign
                    HdlValueId: RAM_READING_ZORRO_PRE
                    HdlValueId: ram_arbiter_state
    MOV HdlOp@@AND_LOG to 
    HdlOp: AND_LOG
        list: ops
            HdlOp: NE
                list: ops
                    HdlValueId: need_row_fetch_y_latched
                    HdlValueId: fetch_line_y
            HdlValueId: cmd_ready
    UPD HdlOp@@AND_LOG to AND_LOG
        UPD HdlValueId@@cmd_ready to x_safe_area

UPD HdlStmCase@@ram_arbiter_state to ram_arbiter_state
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 


CommitId: e8000b0af30dd497d0a6f87b4d5de7cdc3b28f06
stable point after lots of 3000/030 z3 debugging. adds DOE gate, fixes some write/read race conditions
--- a/z2-minispartan/z2.v
+++ b/z2-minispartan/z2.v
@@ -1567,16 +1671,16 @@ always @(posedge z_sample_clk) begin
         ram_enable <= 0;
         */
       // ZORRO READ/WRITE ----------------------------------------------
-      end else if (/*blitter_enable==0 &&*/ zorro_ram_read_request && cmd_ready) begin
-        // process read request
-        zorro_ram_read_done <= 0;
-        ram_enable <= 0;
-        ram_arbiter_state <= RAM_READING_ZORRO_PRE;
       end else if (/*blitter_enable==0 &&*/ zorro_ram_write_request && cmd_ready) begin
         // process write request
         ram_arbiter_state <= RAM_WRITING_ZORRO_PRE;
       /*end else if (blitter_enable) begin
         blitter_enable <= 0;*/
+      end else if (/*blitter_enable==0 &&*/ zorro_ram_read_request && cmd_ready) begin
+        // process read request
+        zorro_ram_read_done <= 0;
+        ram_enable <= 0;
+        ram_arbiter_state <= RAM_READING_ZORRO_PRE;
       end
     
     RAM_REFRESH_PRE: begin

ParseResult:
UPD HdlStmIf@@ to 
    INS HdlOp@@AND_LOG to 
    UPD HdlOp@@AND_LOG to AND_LOG
        INS list@@ops to AND_LOG
        INS HdlValueId@@cmd_ready to ops

UPD HdlStmIf@@ to 
    MOV HdlValueId@@data_out_queue_empty to 
    HdlValueId: data_out_queue_empty

UPD HdlStmCase@@ram_arbiter_state to ram_arbiter_state
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 


CommitId: e8000b0af30dd497d0a6f87b4d5de7cdc3b28f06
stable point after lots of 3000/030 z3 debugging. adds DOE gate, fixes some write/read race conditions
--- a/z2-minispartan/z2.v
+++ b/z2-minispartan/z2.v
@@ -1605,7 +1709,7 @@ always @(posedge z_sample_clk) begin
     end
     
     RAM_READING_ZORRO_PRE: begin
-      if (data_out_queue_empty) begin
+      if (data_out_queue_empty && cmd_ready) begin
         ram_write <= 0;
         ram_addr <= zorro_ram_read_addr;
         ram_byte_enable <= 'b11;

ParseResult:
UPD HdlStmCase@@ram_arbiter_state to ram_arbiter_state
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 


CommitId: d8a08b1a977d4573a8d123f4d41137962d28fc71
beta release WIP. 32bit, fix some timing problems, introduce custom refresh, fix sd card drivers, sd card CRC, custom resolutions, fix z3 register read model
--- a/z2-minispartan/SDCard.vhd
+++ b/z2-minispartan/SDCard.vhd
@@ -457,8 +457,10 @@ begin
               rtnData_v := true;        -- Return this data to the host.
               byteCnt_v := byteCnt_v - 1;
             elsif byteCnt_v = 2 then  -- Receive the 1st CRC byte at the end of the data block.
+              rtnData_v := true;        -- Return this data to the host.
               byteCnt_v := byteCnt_v - 1;
             elsif byteCnt_v = 1 then    -- Receive the 2nd
+              rtnData_v := true;        -- Return this data to the host.
               byteCnt_v := byteCnt_v - 1;
             else    -- Reading is done, so deselect the SD card.
               sclk_r     <= LO;

ParseResult:
UPD HdlStmIf@@ to 
    INS list@@elifs to 

UPD HdlStmCase@@state_v to state_v
    INS HdlStmCaseType@@CASE to state_v
    INS HdlValueId@@state_v to state_v

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueId: true
    HdlValueId: rtnData_v

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueId: true
    HdlValueId: rtnData_v

UPD HdlStmCase@@state_v to state_v
    DEL HdlStmCaseType@@CASE from state_v
    DEL HdlValueId@@state_v from state_v

UPD HdlStmIf@@ to 
    DEL list@@elifs from 


CommitId: d8a08b1a977d4573a8d123f4d41137962d28fc71
beta release WIP. 32bit, fix some timing problems, introduce custom refresh, fix sd card drivers, sd card CRC, custom resolutions, fix z3 register read model
--- a/z2-minispartan/SDCard.vhd
+++ b/z2-minispartan/SDCard.vhd
@@ -477,11 +479,11 @@ begin
               txData_v := NO_TOKEN_C;  -- Hold MOSI high for one byte before data block goes out.
             elsif byteCnt_v = WR_BLK_SZ_C - 1 then     -- Send start token.
               txData_v := START_TOKEN_C;   -- Starting token for data block.
-            elsif byteCnt_v >= 4 then   -- Now send bytes in the data block.
+            elsif byteCnt_v >= 2 then   -- Now send bytes in the data block. (this was >= 4)
               hndShk_r <= HI;           -- Signal host to provide data.
             -- The transmit shift register is loaded with data from host in the handshaking section above.
-            elsif byteCnt_v = 3 or byteCnt_v = 2 then  -- Send two phony CRC bytes at end of packet.
-              txData_v := FAKE_CRC_C;
+            --elsif byteCnt_v = 3 or byteCnt_v = 2 then  -- Send two phony CRC bytes at end of packet.
+            --  txData_v := FAKE_CRC_C;
             elsif byteCnt_v = 1 then
               bitCnt_v   := rx_v'length - 1;
               state_v    := RX_BITS;  -- Get response of SD card to the write operation.
ParseResult:
UPD HdlStmIf@@ to 
    INS list@@elifs to 

UPD HdlStmCase@@state_v to state_v
    INS HdlStmCaseType@@CASE to state_v
    INS HdlValueId@@state_v to state_v

UPD HdlStmIf@@ to 
    UPD HdlOp@@GE to GE
        UPD HdlValueInt@@4 to 2
    DEL tuple@@ from elifs
    tuple
        HdlOp: OR
            list: ops
                HdlOp: EQ
                    list: ops
                        HdlValueId: byteCnt_v
                        HdlValueInt: 3
                HdlOp: EQ
                    list: ops
                        HdlValueId: byteCnt_v
                        HdlValueInt: 2
        HdlStmBlock: SEQ
            list: body
                HdlStmAssign
                    HdlValueId: FAKE_CRC_C
                    HdlValueId: txData_v

UPD HdlStmCase@@state_v to state_v
    DEL HdlStmCaseType@@CASE from state_v
    DEL HdlValueId@@state_v from state_v

UPD HdlStmIf@@ to 
    DEL list@@elifs from 


CommitId: 327b82476418d01e840f918063de0e65a3d4f9ee
WIP cfgin/cfgout sequencing; fix possible deadlock when switching resolutions; some blitter optimization; revision number
--- a/z2-minispartan/z2.v
+++ b/z2-minispartan/z2.v
@@ -293,6 +293,10 @@ reg [15:0] z3_read_data;
 reg [15:0] z3_regread_hi;
 reg [15:0] z3_regread_lo;
 
+reg z2_snoop_reset_mode = 1;
+reg z_confout = 0;
+assign znCFGOUT = znCFGIN?1'b1:(~z_confout); //?1'bZ:1'b0;
+
 // zorro data output stages
 reg dataout = 0;
 reg dataout_z3 = 0;

ParseResult:
INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: TERNARY
        list: ops
            HdlValueId: znCFGIN
            HdlValueInt: 1
            HdlOp: NEG
                list: ops
                    HdlValueId: z_confout
    HdlValueId: znCFGOUT


CommitId: 327b82476418d01e840f918063de0e65a3d4f9ee
WIP cfgin/cfgout sequencing; fix possible deadlock when switching resolutions; some blitter optimization; revision number
--- a/z2-minispartan/z2.v
+++ b/z2-minispartan/z2.v
@@ -317,9 +321,7 @@ assign zD  = (dataout_z3) ? data_z3_hi16 : (dataout ? data : 16'bzzzz_zzzz_zzzz_
 assign zA  = (dataout_z3) ? {data_z3_low16, 7'bzzzz_zzz} : 23'bzzz_zzzz_zzzz_zzzz_zzzz_zzzz;
 
 // autoconf status
-reg z_confdone = 0;
 reg z3_confdone = 0;
-assign znCFGOUT = ((~z_confdone)&&(~z3_confdone))?1'bZ:1'b0; // inspired by z3sdram
 
 // zorro synchronizers
 // (inspired by https://github.com/endofexclusive/greta/blob/master/hdl/bus_interface/bus_interface.vhdl)

ParseResult:
DEL HdlStmAssign@@ from objs
HdlStmAssign
    HdlOp: TERNARY
        list: ops
            HdlOp: AND_LOG
                list: ops
                    HdlOp: NEG
                        list: ops
                            HdlValueId: z_confdone
                    HdlOp: NEG
                        list: ops
                            HdlValueId: z3_confdone
            HdlValueInt: z
            HdlValueInt: 0
    HdlValueId: znCFGOUT


CommitId: 327b82476418d01e840f918063de0e65a3d4f9ee
WIP cfgin/cfgout sequencing; fix possible deadlock when switching resolutions; some blitter optimization; revision number
--- a/z2-minispartan/z2.v
+++ b/z2-minispartan/z2.v
@@ -466,6 +471,8 @@ parameter REGREAD_POST = 24;
 
 parameter RESET_DVID = 22;
 parameter Z2_WARMUP = 23;
+parameter Z2_PRE_CONFIGURED = 26;
+parameter Z2_PRE_CONFIGURED2 = 27;
 
 reg [6:0] zorro_state = RESET;
 reg zorro_read = 0;

ParseResult:
INS HdlIdDef@@Z2_PRE_CONFIGURED2 to params
HdlIdDef: Z2_PRE_CONFIGURED2
    HdlValueInt: 27
    HdlDirection: INTERNAL


CommitId: 327b82476418d01e840f918063de0e65a3d4f9ee
WIP cfgin/cfgout sequencing; fix possible deadlock when switching resolutions; some blitter optimization; revision number
--- a/z2-minispartan/z2.v
+++ b/z2-minispartan/z2.v
@@ -556,7 +565,8 @@ always @(posedge z_sample_clk) begin
     zaddr_autoconfig <= 1'b0;
     
   //z3addr_rom <= z3addr[15:0];
-  z3addr_zero <= (z3addr=='h00000000);
+  z3addr_zero <= (!znRST_sync[1]); //(z3addr=='hff000000 && znCFGIN_sync[2]==0 && znFCS_sync[2]==0);
+  
   z3addr_in_ram <= (z3addr >= z3_ram_low) && (z3addr < z3_ram_high);
   z3addr_in_reg <= (z3addr >= z3_reg_low) && (z3addr < z3_reg_high);
   z3addr_autoconfig <= (z3addr[31:16]=='hff00);

ParseResult:
UPD HdlStmAssign@@ to 
    UPD HdlOp@@EQ to INDEX
    MOV HdlOp@@EQ to 
    HdlOp: EQ
        list: ops
            HdlValueId: z3addr
            HdlValueInt: 00000000
    UPD HdlOp@@EQ to EQ
        UPD HdlValueId@@z3addr to znRST_sync
        UPD HdlValueInt@@00000000 to 1


CommitId: 327b82476418d01e840f918063de0e65a3d4f9ee
WIP cfgin/cfgout sequencing; fix possible deadlock when switching resolutions; some blitter optimization; revision number
--- a/z2-minispartan/z2.v
+++ b/z2-minispartan/z2.v
@@ -600,7 +610,7 @@ reg [7:0] zaddr_pidx = 0;
 
 reg [2:0] linescalecount = 0;
 
-reg [23:0] warmup_counter = 'hfffff;
+reg [15:0] warmup_counter = 0; // 2 seconds @ 150mhz
 reg [5:0] dvid_reset_counter = 0;
 reg z2_addr_valid = 0;
 

ParseResult:
MOV HdlIdDef@@warmup_counter to objs
HdlIdDef: warmup_counter
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 23
                    HdlValueInt: 0
    HdlValueInt: fffff
    HdlDirection: INTERNAL

UPD HdlIdDef@@warmup_counter to blitter_ptr2

UPD HdlIdDef@@warmup_counter to warmup_counter
    UPD HdlValueInt@@fffff to 0


CommitId: 327b82476418d01e840f918063de0e65a3d4f9ee
WIP cfgin/cfgout sequencing; fix possible deadlock when switching resolutions; some blitter optimization; revision number
--- a/z2-minispartan/z2.v
+++ b/z2-minispartan/z2.v
@@ -641,7 +651,10 @@ always @(posedge z_sample_clk) begin
       v_sync_start <= 720+3;
       v_sync_end   <= 720+8;
       v_max        <= 749;
-
+      
+      z_confout <= 0;
+      z3_confdone <= 0;
+      
       scalemode <= 0;
       colormode <= 1;
       dataout_enable <= 0;

ParseResult:
UPD HdlStmCase@@zorro_state to zorro_state
    INS HdlStmCaseType@@CASE to zorro_state
    INS HdlValueId@@zorro_state to zorro_state
    INS tuple@@ to cases
    INS HdlValueId@@Z2_PRE_CONFIGURED to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: blitter_ptr

UPD HdlStmCase@@zorro_state to zorro_state
    UPD HdlStmBlock@@SEQ to SEQ
        UPD list@@body to elifs
        MOV list@@body to SEQ
        list: body
            HdlStmIf
                HdlValueId: dvid_reset
                HdlStmBlock: SEQ
                    list: body
                        HdlStmAssign
                            HdlValueInt: 10
                            HdlValueId: dvid_reset_counter
                        HdlStmAssign
                            HdlValueId: RESET_DVID
                            HdlValueId: zorro_state
                list: elifs
                    tuple
                        HdlOp: EQ
                            list: ops
                                HdlOp: INDEX
                                    list: ops
                                        HdlValueId: znFCS_sync
                                        HdlValueInt: 2
                                HdlValueInt: 0
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmIf
                                    HdlValueId: z3addr_zero
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmAssign
                                                HdlValueInt: 0
                                                HdlValueId: z3_confdone
                                            HdlStmAssign
                                                HdlValueId: RESET
                                                HdlValueId: zorro_state
                                    list: elifs
                                        tuple
                                            HdlOp: AND_LOG
                                                list: ops
                                                    HdlValueId: z3addr_in_ram
                                                    HdlValueId: zorro_write
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlStmAssign
                                                        HdlValueInt: 1
                                                        HdlValueId: slaven
                                                    HdlStmIf
                                                        HdlOp: OR_LOG
                                                            list: ops
                                                                HdlOp: OR_LOG
                                                                    list: ops
                                                                        HdlOp: OR_LOG
                                                                            list: ops
                                                                                HdlOp: EQ
                                                                                    list: ops
                                                                                        HdlOp: INDEX
                                                                                            list: ops
                                                                                                HdlValueId: znUDS_sync
                                                                                                HdlValueInt: 2
                                                                                        HdlValueInt: 0
                                                                                HdlOp: EQ
                                                                                    list: ops
                                                                                        HdlOp: INDEX
                                                                                            list: ops
                                                                                                HdlValueId: znLDS_sync
                                                                                                HdlValueInt: 2
                                                                                        HdlValueInt: 0
                                                                        HdlOp: EQ
                                                                            list: ops
                                                                                HdlOp: INDEX
                                                                                    list: ops
                                                                                        HdlValueId: znDS1_sync
                                                                                        HdlValueInt: 2
                                                                                HdlValueInt: 0
                                                                HdlOp: EQ
                                                                    list: ops
                                                                        HdlOp: INDEX
                                                                            list: ops
                                                                                HdlValueId: znDS0_sync
                                                                                HdlValueInt: 2
                                                                        HdlValueInt: 0
                                                        HdlStmBlock: SEQ
                                                            list: body
                                                                HdlStmAssign
                                                                    HdlValueId: Z3_WRITE_UPPER
                                                                    HdlValueId: zorro_state
                                                        list: elifs
                                        tuple
                                            HdlOp: AND_LOG
                                                list: ops
                                                    HdlValueId: z3addr_in_ram
                                                    HdlValueId: zorro_read
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlStmAssign
                                                        HdlValueInt: 1
                                                        HdlValueId: slaven
                                                    HdlStmAssign
                                                        HdlValueId: Z3_READ_UPPER
                                                        HdlValueId: zorro_state
                                        tuple
                                            HdlOp: AND_LOG
                                                list: ops
                                                    HdlValueId: zorro_write
                                                    HdlValueId: z3addr_in_reg
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlStmAssign
                                                        HdlValueInt: 1
                                                        HdlValueId: slaven
                                                    HdlStmIf
                                                        HdlOp: EQ
                                                            list: ops
                                                                HdlOp: INDEX
                                                                    list: ops
                                                                        HdlValueId: znDS1_sync
                                                                        HdlValueInt: 2
                                                                HdlValueInt: 0
                                                        HdlStmBlock: SEQ
                                                            list: body
                                                                HdlStmAssign
                                                                    HdlValueId: data_in_z3_low16
                                                                    HdlValueId: regdata_in
                                                                HdlStmAssign
                                                                    HdlOp: OR
                                                                        list: ops
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlValueId: z3addr
                                                                                    HdlOp: DOWNTO
                                                                                        list: ops
                                                                                            HdlValueInt: 15
                                                                                            HdlValueInt: 0
                                                                            HdlValueInt: 2
                                                                    HdlValueId: zaddr_regpart
                                                                HdlStmAssign
                                                                    HdlValueId: REGWRITE
                                                                    HdlValueId: zorro_state
                                                        list: elifs
                                                            tuple
                                                                HdlOp: EQ
                                                                    list: ops
                                                                        HdlOp: INDEX
                                                                            list: ops
                                                                                HdlValueId: znUDS_sync
                                                                                HdlValueInt: 2
                                                                        HdlValueInt: 0
                                                                HdlStmBlock: SEQ
                                                                    list: body
                                                                        HdlStmAssign
                                                                            HdlValueId: zdata_in_sync
                                                                            HdlValueId: regdata_in
                                                                        HdlStmAssign
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlValueId: z3addr
                                                                                    HdlOp: DOWNTO
                                                                                        list: ops
                                                                                            HdlValueInt: 15
                                                                                            HdlValueInt: 0
                                                                            HdlValueId: zaddr_regpart
                                                                        HdlStmAssign
                                                                            HdlValueId: REGWRITE
                                                                            HdlValueId: zorro_state
                                        tuple
                                            HdlOp: AND_LOG
                                                list: ops
                                                    HdlValueId: zorro_read
                                                    HdlValueId: z3addr_in_reg
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlStmAssign
                                                        HdlValueInt: 1
                                                        HdlValueId: slaven
                                                    HdlStmAssign
                                                        HdlValueInt: 0
                                                        HdlValueId: data_z3_hi16
                                                    HdlStmAssign
                                                        HdlValueInt: 0
                                                        HdlValueId: data_z3_low16
                                                    HdlStmIf
                                                        HdlOp: OR_LOG
                                                            list: ops
                                                                HdlOp: OR_LOG
                                                                    list: ops
                                                                        HdlOp: OR_LOG
                                                                            list: ops
                                                                                HdlOp: EQ
                                                                                    list: ops
                                                                                        HdlOp: INDEX
                                                                                            list: ops
                                                                                                HdlValueId: znDS1_sync
                                                                                                HdlValueInt: 2
                                                                                        HdlValueInt: 0
                                                                                HdlOp: EQ
                                                                                    list: ops
                                                                                        HdlOp: INDEX
                                                                                            list: ops
                                                                                                HdlValueId: znDS0_sync
                                                                                                HdlValueInt: 2
                                                                                        HdlValueInt: 0
                                                                        HdlOp: EQ
                                                                            list: ops
                                                                                HdlOp: INDEX
                                                                                    list: ops
                                                                                        HdlValueId: znUDS_sync
                                                                                        HdlValueInt: 2
                                                                                HdlValueInt: 0
                                                                HdlOp: EQ
                                                                    list: ops
                                                                        HdlOp: INDEX
                                                                            list: ops
                                                                                HdlValueId: znLDS_sync
                                                                                HdlValueInt: 2
                                                                        HdlValueInt: 0
                                                        HdlStmBlock: SEQ
                                                            list: body
                                                                HdlStmAssign
                                                                    HdlOp: CONCAT
                                                                        list: ops
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlValueId: z3addr
                                                                                    HdlOp: DOWNTO
                                                                                        list: ops
                                                                                            HdlValueInt: 15
                                                                                            HdlValueInt: 2
                                                                            HdlValueInt: 00
                                                                    HdlValueId: zaddr_regpart
                                                                HdlStmAssign
                                                                    HdlValueId: REGREAD
                                                                    HdlValueId: zorro_state
                                                        list: elifs
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmAssign
                                                HdlValueInt: 0
                                                HdlValueId: slaven
                HdlStmBlock: SEQ
                    list: body
                        HdlStmAssign
                            HdlValueInt: 0
                            HdlValueId: slaven
    DEL HdlStmCaseType@@CASE from zorro_state
    DEL HdlValueId@@zorro_state from zorro_state
    DEL HdlValueId@@Z2_WARMUP from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases


CommitId: 327b82476418d01e840f918063de0e65a3d4f9ee
WIP cfgin/cfgout sequencing; fix possible deadlock when switching resolutions; some blitter optimization; revision number
--- a/z2-minispartan/z2.v
+++ b/z2-minispartan/z2.v
@@ -650,13 +663,14 @@ always @(posedge z_sample_clk) begin
       z_ready <= 1; // clear XRDY (cpu wait)
       zorro_ram_read_done <= 1;
       blitter_enable <= 0;
-      warmup_counter <= 'hfffff;
+      warmup_counter <= 0;
       sdram_reset <= 1;
       
       blitter_x1 <= 0;
       blitter_y1 <= 0; 
       blitter_x2 <= 1279;
       blitter_y2 <= 719;
+      blitter_ptr <= 0;
       
       ram_low   <= 'h600000;
       ram_high  <= 'h600000 + ram_size-4;

ParseResult:
UPD HdlStmCase@@zorro_state to zorro_state
    INS HdlStmCaseType@@CASE to zorro_state
    INS HdlValueId@@zorro_state to zorro_state
    INS tuple@@ to cases
    INS HdlValueId@@Z2_PRE_CONFIGURED to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmCase@@zorro_state to zorro_state
    UPD HdlStmBlock@@SEQ to SEQ
        UPD list@@body to elifs
        MOV list@@body to SEQ
        list: body
            HdlStmIf
                HdlValueId: dvid_reset
                HdlStmBlock: SEQ
                    list: body
                        HdlStmAssign
                            HdlValueInt: 10
                            HdlValueId: dvid_reset_counter
                        HdlStmAssign
                            HdlValueId: RESET_DVID
                            HdlValueId: zorro_state
                list: elifs
                    tuple
                        HdlOp: EQ
                            list: ops
                                HdlOp: INDEX
                                    list: ops
                                        HdlValueId: znFCS_sync
                                        HdlValueInt: 2
                                HdlValueInt: 0
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmIf
                                    HdlValueId: z3addr_zero
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmAssign
                                                HdlValueInt: 0
                                                HdlValueId: z3_confdone
                                            HdlStmAssign
                                                HdlValueId: RESET
                                                HdlValueId: zorro_state
                                    list: elifs
                                        tuple
                                            HdlOp: AND_LOG
                                                list: ops
                                                    HdlValueId: z3addr_in_ram
                                                    HdlValueId: zorro_write
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlStmAssign
                                                        HdlValueInt: 1
                                                        HdlValueId: slaven
                                                    HdlStmIf
                                                        HdlOp: OR_LOG
                                                            list: ops
                                                                HdlOp: OR_LOG
                                                                    list: ops
                                                                        HdlOp: OR_LOG
                                                                            list: ops
                                                                                HdlOp: EQ
                                                                                    list: ops
                                                                                        HdlOp: INDEX
                                                                                            list: ops
                                                                                                HdlValueId: znUDS_sync
                                                                                                HdlValueInt: 2
                                                                                        HdlValueInt: 0
                                                                                HdlOp: EQ
                                                                                    list: ops
                                                                                        HdlOp: INDEX
                                                                                            list: ops
                                                                                                HdlValueId: znLDS_sync
                                                                                                HdlValueInt: 2
                                                                                        HdlValueInt: 0
                                                                        HdlOp: EQ
                                                                            list: ops
                                                                                HdlOp: INDEX
                                                                                    list: ops
                                                                                        HdlValueId: znDS1_sync
                                                                                        HdlValueInt: 2
                                                                                HdlValueInt: 0
                                                                HdlOp: EQ
                                                                    list: ops
                                                                        HdlOp: INDEX
                                                                            list: ops
                                                                                HdlValueId: znDS0_sync
                                                                                HdlValueInt: 2
                                                                        HdlValueInt: 0
                                                        HdlStmBlock: SEQ
                                                            list: body
                                                                HdlStmAssign
                                                                    HdlValueId: Z3_WRITE_UPPER
                                                                    HdlValueId: zorro_state
                                                        list: elifs
                                        tuple
                                            HdlOp: AND_LOG
                                                list: ops
                                                    HdlValueId: z3addr_in_ram
                                                    HdlValueId: zorro_read
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlStmAssign
                                                        HdlValueInt: 1
                                                        HdlValueId: slaven
                                                    HdlStmAssign
                                                        HdlValueId: Z3_READ_UPPER
                                                        HdlValueId: zorro_state
                                        tuple
                                            HdlOp: AND_LOG
                                                list: ops
                                                    HdlValueId: zorro_write
                                                    HdlValueId: z3addr_in_reg
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlStmAssign
                                                        HdlValueInt: 1
                                                        HdlValueId: slaven
                                                    HdlStmIf
                                                        HdlOp: EQ
                                                            list: ops
                                                                HdlOp: INDEX
                                                                    list: ops
                                                                        HdlValueId: znDS1_sync
                                                                        HdlValueInt: 2
                                                                HdlValueInt: 0
                                                        HdlStmBlock: SEQ
                                                            list: body
                                                                HdlStmAssign
                                                                    HdlValueId: data_in_z3_low16
                                                                    HdlValueId: regdata_in
                                                                HdlStmAssign
                                                                    HdlOp: OR
                                                                        list: ops
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlValueId: z3addr
                                                                                    HdlOp: DOWNTO
                                                                                        list: ops
                                                                                            HdlValueInt: 15
                                                                                            HdlValueInt: 0
                                                                            HdlValueInt: 2
                                                                    HdlValueId: zaddr_regpart
                                                                HdlStmAssign
                                                                    HdlValueId: REGWRITE
                                                                    HdlValueId: zorro_state
                                                        list: elifs
                                                            tuple
                                                                HdlOp: EQ
                                                                    list: ops
                                                                        HdlOp: INDEX
                                                                            list: ops
                                                                                HdlValueId: znUDS_sync
                                                                                HdlValueInt: 2
                                                                        HdlValueInt: 0
                                                                HdlStmBlock: SEQ
                                                                    list: body
                                                                        HdlStmAssign
                                                                            HdlValueId: zdata_in_sync
                                                                            HdlValueId: regdata_in
                                                                        HdlStmAssign
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlValueId: z3addr
                                                                                    HdlOp: DOWNTO
                                                                                        list: ops
                                                                                            HdlValueInt: 15
                                                                                            HdlValueInt: 0
                                                                            HdlValueId: zaddr_regpart
                                                                        HdlStmAssign
                                                                            HdlValueId: REGWRITE
                                                                            HdlValueId: zorro_state
                                        tuple
                                            HdlOp: AND_LOG
                                                list: ops
                                                    HdlValueId: zorro_read
                                                    HdlValueId: z3addr_in_reg
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlStmAssign
                                                        HdlValueInt: 1
                                                        HdlValueId: slaven
                                                    HdlStmAssign
                                                        HdlValueInt: 0
                                                        HdlValueId: data_z3_hi16
                                                    HdlStmAssign
                                                        HdlValueInt: 0
                                                        HdlValueId: data_z3_low16
                                                    HdlStmIf
                                                        HdlOp: OR_LOG
                                                            list: ops
                                                                HdlOp: OR_LOG
                                                                    list: ops
                                                                        HdlOp: OR_LOG
                                                                            list: ops
                                                                                HdlOp: EQ
                                                                                    list: ops
                                                                                        HdlOp: INDEX
                                                                                            list: ops
                                                                                                HdlValueId: znDS1_sync
                                                                                                HdlValueInt: 2
                                                                                        HdlValueInt: 0
                                                                                HdlOp: EQ
                                                                                    list: ops
                                                                                        HdlOp: INDEX
                                                                                            list: ops
                                                                                                HdlValueId: znDS0_sync
                                                                                                HdlValueInt: 2
                                                                                        HdlValueInt: 0
                                                                        HdlOp: EQ
                                                                            list: ops
                                                                                HdlOp: INDEX
                                                                                    list: ops
                                                                                        HdlValueId: znUDS_sync
                                                                                        HdlValueInt: 2
                                                                                HdlValueInt: 0
                                                                HdlOp: EQ
                                                                    list: ops
                                                                        HdlOp: INDEX
                                                                            list: ops
                                                                                HdlValueId: znLDS_sync
                                                                                HdlValueInt: 2
                                                                        HdlValueInt: 0
                                                        HdlStmBlock: SEQ
                                                            list: body
                                                                HdlStmAssign
                                                                    HdlOp: CONCAT
                                                                        list: ops
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlValueId: z3addr
                                                                                    HdlOp: DOWNTO
                                                                                        list: ops
                                                                                            HdlValueInt: 15
                                                                                            HdlValueInt: 2
                                                                            HdlValueInt: 00
                                                                    HdlValueId: zaddr_regpart
                                                                HdlStmAssign
                                                                    HdlValueId: REGREAD
                                                                    HdlValueId: zorro_state
                                                        list: elifs
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmAssign
                                                HdlValueInt: 0
                                                HdlValueId: slaven
                HdlStmBlock: SEQ
                    list: body
                        HdlStmAssign
                            HdlValueInt: 0
                            HdlValueId: slaven
    DEL HdlStmCaseType@@CASE from zorro_state
    DEL HdlValueId@@zorro_state from zorro_state
    DEL HdlValueId@@Z2_WARMUP from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases


CommitId: 327b82476418d01e840f918063de0e65a3d4f9ee
WIP cfgin/cfgout sequencing; fix possible deadlock when switching resolutions; some blitter optimization; revision number
--- a/z2-minispartan/z2.v
+++ b/z2-minispartan/z2.v
@@ -679,7 +693,7 @@ always @(posedge z_sample_clk) begin
     end
     
     Z3_CONFIGURING: begin
-      if (znCFGIN_sync[2]==0 && z3addr_autoconfig && znFCS_sync[2]==0) begin
+      if (znCFGIN_sync[2]==0 && z3addr_autoconfig && znFCS_sync[1]==0) begin
         if (zorro_read) begin
           // autoconfig ROM
           dataout_enable <= 1;

ParseResult:
UPD HdlStmCase@@zorro_state to zorro_state
    INS HdlStmCaseType@@CASE to zorro_state
    INS HdlValueId@@zorro_state to zorro_state
    INS tuple@@ to cases
    INS HdlValueId@@Z2_PRE_CONFIGURED to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmCase@@zorro_state to zorro_state
    UPD HdlStmBlock@@SEQ to SEQ
        UPD list@@body to elifs
        MOV list@@body to SEQ
        list: body
            HdlStmIf
                HdlValueId: dvid_reset
                HdlStmBlock: SEQ
                    list: body
                        HdlStmAssign
                            HdlValueInt: 10
                            HdlValueId: dvid_reset_counter
                        HdlStmAssign
                            HdlValueId: RESET_DVID
                            HdlValueId: zorro_state
                list: elifs
                    tuple
                        HdlOp: EQ
                            list: ops
                                HdlOp: INDEX
                                    list: ops
                                        HdlValueId: znFCS_sync
                                        HdlValueInt: 2
                                HdlValueInt: 0
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmIf
                                    HdlValueId: z3addr_zero
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmAssign
                                                HdlValueInt: 0
                                                HdlValueId: z3_confdone
                                            HdlStmAssign
                                                HdlValueId: RESET
                                                HdlValueId: zorro_state
                                    list: elifs
                                        tuple
                                            HdlOp: AND_LOG
                                                list: ops
                                                    HdlValueId: z3addr_in_ram
                                                    HdlValueId: zorro_write
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlStmAssign
                                                        HdlValueInt: 1
                                                        HdlValueId: slaven
                                                    HdlStmIf
                                                        HdlOp: OR_LOG
                                                            list: ops
                                                                HdlOp: OR_LOG
                                                                    list: ops
                                                                        HdlOp: OR_LOG
                                                                            list: ops
                                                                                HdlOp: EQ
                                                                                    list: ops
                                                                                        HdlOp: INDEX
                                                                                            list: ops
                                                                                                HdlValueId: znUDS_sync
                                                                                                HdlValueInt: 2
                                                                                        HdlValueInt: 0
                                                                                HdlOp: EQ
                                                                                    list: ops
                                                                                        HdlOp: INDEX
                                                                                            list: ops
                                                                                                HdlValueId: znLDS_sync
                                                                                                HdlValueInt: 2
                                                                                        HdlValueInt: 0
                                                                        HdlOp: EQ
                                                                            list: ops
                                                                                HdlOp: INDEX
                                                                                    list: ops
                                                                                        HdlValueId: znDS1_sync
                                                                                        HdlValueInt: 2
                                                                                HdlValueInt: 0
                                                                HdlOp: EQ
                                                                    list: ops
                                                                        HdlOp: INDEX
                                                                            list: ops
                                                                                HdlValueId: znDS0_sync
                                                                                HdlValueInt: 2
                                                                        HdlValueInt: 0
                                                        HdlStmBlock: SEQ
                                                            list: body
                                                                HdlStmAssign
                                                                    HdlValueId: Z3_WRITE_UPPER
                                                                    HdlValueId: zorro_state
                                                        list: elifs
                                        tuple
                                            HdlOp: AND_LOG
                                                list: ops
                                                    HdlValueId: z3addr_in_ram
                                                    HdlValueId: zorro_read
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlStmAssign
                                                        HdlValueInt: 1
                                                        HdlValueId: slaven
                                                    HdlStmAssign
                                                        HdlValueId: Z3_READ_UPPER
                                                        HdlValueId: zorro_state
                                        tuple
                                            HdlOp: AND_LOG
                                                list: ops
                                                    HdlValueId: zorro_write
                                                    HdlValueId: z3addr_in_reg
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlStmAssign
                                                        HdlValueInt: 1
                                                        HdlValueId: slaven
                                                    HdlStmIf
                                                        HdlOp: EQ
                                                            list: ops
                                                                HdlOp: INDEX
                                                                    list: ops
                                                                        HdlValueId: znDS1_sync
                                                                        HdlValueInt: 2
                                                                HdlValueInt: 0
                                                        HdlStmBlock: SEQ
                                                            list: body
                                                                HdlStmAssign
                                                                    HdlValueId: data_in_z3_low16
                                                                    HdlValueId: regdata_in
                                                                HdlStmAssign
                                                                    HdlOp: OR
                                                                        list: ops
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlValueId: z3addr
                                                                                    HdlOp: DOWNTO
                                                                                        list: ops
                                                                                            HdlValueInt: 15
                                                                                            HdlValueInt: 0
                                                                            HdlValueInt: 2
                                                                    HdlValueId: zaddr_regpart
                                                                HdlStmAssign
                                                                    HdlValueId: REGWRITE
                                                                    HdlValueId: zorro_state
                                                        list: elifs
                                                            tuple
                                                                HdlOp: EQ
                                                                    list: ops
                                                                        HdlOp: INDEX
                                                                            list: ops
                                                                                HdlValueId: znUDS_sync
                                                                                HdlValueInt: 2
                                                                        HdlValueInt: 0
                                                                HdlStmBlock: SEQ
                                                                    list: body
                                                                        HdlStmAssign
                                                                            HdlValueId: zdata_in_sync
                                                                            HdlValueId: regdata_in
                                                                        HdlStmAssign
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlValueId: z3addr
                                                                                    HdlOp: DOWNTO
                                                                                        list: ops
                                                                                            HdlValueInt: 15
                                                                                            HdlValueInt: 0
                                                                            HdlValueId: zaddr_regpart
                                                                        HdlStmAssign
                                                                            HdlValueId: REGWRITE
                                                                            HdlValueId: zorro_state
                                        tuple
                                            HdlOp: AND_LOG
                                                list: ops
                                                    HdlValueId: zorro_read
                                                    HdlValueId: z3addr_in_reg
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlStmAssign
                                                        HdlValueInt: 1
                                                        HdlValueId: slaven
                                                    HdlStmAssign
                                                        HdlValueInt: 0
                                                        HdlValueId: data_z3_hi16
                                                    HdlStmAssign
                                                        HdlValueInt: 0
                                                        HdlValueId: data_z3_low16
                                                    HdlStmIf
                                                        HdlOp: OR_LOG
                                                            list: ops
                                                                HdlOp: OR_LOG
                                                                    list: ops
                                                                        HdlOp: OR_LOG
                                                                            list: ops
                                                                                HdlOp: EQ
                                                                                    list: ops
                                                                                        HdlOp: INDEX
                                                                                            list: ops
                                                                                                HdlValueId: znDS1_sync
                                                                                                HdlValueInt: 2
                                                                                        HdlValueInt: 0
                                                                                HdlOp: EQ
                                                                                    list: ops
                                                                                        HdlOp: INDEX
                                                                                            list: ops
                                                                                                HdlValueId: znDS0_sync
                                                                                                HdlValueInt: 2
                                                                                        HdlValueInt: 0
                                                                        HdlOp: EQ
                                                                            list: ops
                                                                                HdlOp: INDEX
                                                                                    list: ops
                                                                                        HdlValueId: znUDS_sync
                                                                                        HdlValueInt: 2
                                                                                HdlValueInt: 0
                                                                HdlOp: EQ
                                                                    list: ops
                                                                        HdlOp: INDEX
                                                                            list: ops
                                                                                HdlValueId: znLDS_sync
                                                                                HdlValueInt: 2
                                                                        HdlValueInt: 0
                                                        HdlStmBlock: SEQ
                                                            list: body
                                                                HdlStmAssign
                                                                    HdlOp: CONCAT
                                                                        list: ops
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlValueId: z3addr
                                                                                    HdlOp: DOWNTO
                                                                                        list: ops
                                                                                            HdlValueInt: 15
                                                                                            HdlValueInt: 2
                                                                            HdlValueInt: 00
                                                                    HdlValueId: zaddr_regpart
                                                                HdlStmAssign
                                                                    HdlValueId: REGREAD
                                                                    HdlValueId: zorro_state
                                                        list: elifs
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmAssign
                                                HdlValueInt: 0
                                                HdlValueId: slaven
                HdlStmBlock: SEQ
                    list: body
                        HdlStmAssign
                            HdlValueInt: 0
                            HdlValueId: slaven
    DEL HdlStmCaseType@@CASE from zorro_state
    DEL HdlValueId@@zorro_state from zorro_state
    DEL HdlValueId@@Z2_WARMUP from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases

UPD HdlStmIf@@ to 
    UPD HdlOp@@AND_LOG to AND_LOG
        UPD HdlOp@@EQ to EQ
            UPD HdlOp@@INDEX to INDEX
                UPD HdlValueInt@@2 to 1


CommitId: 327b82476418d01e840f918063de0e65a3d4f9ee
WIP cfgin/cfgout sequencing; fix possible deadlock when switching resolutions; some blitter optimization; revision number
--- a/z2-minispartan/z2.v
+++ b/z2-minispartan/z2.v
@@ -818,19 +832,16 @@ always @(posedge z_sample_clk) begin
                 ram_low[31:24] <= 8'h0;
                 ram_low[23:20] <= zdata_in_sync[15:12];
                 ram_low[15:0] <= 16'h0;
-                zorro_state <= CONFIGURED; // configured
-                z_confdone <= 1;
-                colormode <= 1;
+                zorro_state <= Z2_PRE_CONFIGURED; // configured
               end
               8'h4a: begin
                 ram_low[31:24] <= 8'h0;
                 ram_low[19:16] <= zdata_in_sync[15:12];
                 ram_low[15:0] <= 16'h0;
               end
+              
               8'h4c: begin 
-                zorro_state <= CONFIGURED; // configured, shut up
-                z_confdone <= 1;
-                colormode <= 1;
+                zorro_state <= Z2_PRE_CONFIGURED; // configured, shut up
               end
             endcase
           end

ParseResult:
UPD HdlStmCase@@zorro_state to zorro_state
    INS HdlStmCaseType@@CASE to zorro_state
    INS HdlValueId@@zorro_state to zorro_state
    INS tuple@@ to cases
    INS HdlValueId@@Z2_PRE_CONFIGURED to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

INS HdlStmIf@@ to body

UPD HdlStmIf@@ to 
    INS HdlOp@@EQ to 
    HdlOp: EQ
        list: ops
            HdlOp: INDEX
                list: ops
                    HdlValueId: znAS_sync
                    HdlValueInt: 2
            HdlValueInt: 1
    INS HdlStmBlock@@SEQ to 
    INS list@@elifs to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueInt: 1
    HdlValueId: z_confout

UPD HdlStmCase@@zorro_state to zorro_state
    UPD HdlStmBlock@@SEQ to SEQ
        UPD list@@body to elifs
        MOV list@@body to SEQ
        list: body
            HdlStmIf
                HdlValueId: dvid_reset
                HdlStmBlock: SEQ
                    list: body
                        HdlStmAssign
                            HdlValueInt: 10
                            HdlValueId: dvid_reset_counter
                        HdlStmAssign
                            HdlValueId: RESET_DVID
                            HdlValueId: zorro_state
                list: elifs
                    tuple
                        HdlOp: EQ
                            list: ops
                                HdlOp: INDEX
                                    list: ops
                                        HdlValueId: znFCS_sync
                                        HdlValueInt: 2
                                HdlValueInt: 0
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmIf
                                    HdlValueId: z3addr_zero
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmAssign
                                                HdlValueInt: 0
                                                HdlValueId: z3_confdone
                                            HdlStmAssign
                                                HdlValueId: RESET
                                                HdlValueId: zorro_state
                                    list: elifs
                                        tuple
                                            HdlOp: AND_LOG
                                                list: ops
                                                    HdlValueId: z3addr_in_ram
                                                    HdlValueId: zorro_write
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlStmAssign
                                                        HdlValueInt: 1
                                                        HdlValueId: slaven
                                                    HdlStmIf
                                                        HdlOp: OR_LOG
                                                            list: ops
                                                                HdlOp: OR_LOG
                                                                    list: ops
                                                                        HdlOp: OR_LOG
                                                                            list: ops
                                                                                HdlOp: EQ
                                                                                    list: ops
                                                                                        HdlOp: INDEX
                                                                                            list: ops
                                                                                                HdlValueId: znUDS_sync
                                                                                                HdlValueInt: 2
                                                                                        HdlValueInt: 0
                                                                                HdlOp: EQ
                                                                                    list: ops
                                                                                        HdlOp: INDEX
                                                                                            list: ops
                                                                                                HdlValueId: znLDS_sync
                                                                                                HdlValueInt: 2
                                                                                        HdlValueInt: 0
                                                                        HdlOp: EQ
                                                                            list: ops
                                                                                HdlOp: INDEX
                                                                                    list: ops
                                                                                        HdlValueId: znDS1_sync
                                                                                        HdlValueInt: 2
                                                                                HdlValueInt: 0
                                                                HdlOp: EQ
                                                                    list: ops
                                                                        HdlOp: INDEX
                                                                            list: ops
                                                                                HdlValueId: znDS0_sync
                                                                                HdlValueInt: 2
                                                                        HdlValueInt: 0
                                                        HdlStmBlock: SEQ
                                                            list: body
                                                                HdlStmAssign
                                                                    HdlValueId: Z3_WRITE_UPPER
                                                                    HdlValueId: zorro_state
                                                        list: elifs
                                        tuple
                                            HdlOp: AND_LOG
                                                list: ops
                                                    HdlValueId: z3addr_in_ram
                                                    HdlValueId: zorro_read
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlStmAssign
                                                        HdlValueInt: 1
                                                        HdlValueId: slaven
                                                    HdlStmAssign
                                                        HdlValueId: Z3_READ_UPPER
                                                        HdlValueId: zorro_state
                                        tuple
                                            HdlOp: AND_LOG
                                                list: ops
                                                    HdlValueId: zorro_write
                                                    HdlValueId: z3addr_in_reg
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlStmAssign
                                                        HdlValueInt: 1
                                                        HdlValueId: slaven
                                                    HdlStmIf
                                                        HdlOp: EQ
                                                            list: ops
                                                                HdlOp: INDEX
                                                                    list: ops
                                                                        HdlValueId: znDS1_sync
                                                                        HdlValueInt: 2
                                                                HdlValueInt: 0
                                                        HdlStmBlock: SEQ
                                                            list: body
                                                                HdlStmAssign
                                                                    HdlValueId: data_in_z3_low16
                                                                    HdlValueId: regdata_in
                                                                HdlStmAssign
                                                                    HdlOp: OR
                                                                        list: ops
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlValueId: z3addr
                                                                                    HdlOp: DOWNTO
                                                                                        list: ops
                                                                                            HdlValueInt: 15
                                                                                            HdlValueInt: 0
                                                                            HdlValueInt: 2
                                                                    HdlValueId: zaddr_regpart
                                                                HdlStmAssign
                                                                    HdlValueId: REGWRITE
                                                                    HdlValueId: zorro_state
                                                        list: elifs
                                                            tuple
                                                                HdlOp: EQ
                                                                    list: ops
                                                                        HdlOp: INDEX
                                                                            list: ops
                                                                                HdlValueId: znUDS_sync
                                                                                HdlValueInt: 2
                                                                        HdlValueInt: 0
                                                                HdlStmBlock: SEQ
                                                                    list: body
                                                                        HdlStmAssign
                                                                            HdlValueId: zdata_in_sync
                                                                            HdlValueId: regdata_in
                                                                        HdlStmAssign
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlValueId: z3addr
                                                                                    HdlOp: DOWNTO
                                                                                        list: ops
                                                                                            HdlValueInt: 15
                                                                                            HdlValueInt: 0
                                                                            HdlValueId: zaddr_regpart
                                                                        HdlStmAssign
                                                                            HdlValueId: REGWRITE
                                                                            HdlValueId: zorro_state
                                        tuple
                                            HdlOp: AND_LOG
                                                list: ops
                                                    HdlValueId: zorro_read
                                                    HdlValueId: z3addr_in_reg
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlStmAssign
                                                        HdlValueInt: 1
                                                        HdlValueId: slaven
                                                    HdlStmAssign
                                                        HdlValueInt: 0
                                                        HdlValueId: data_z3_hi16
                                                    HdlStmAssign
                                                        HdlValueInt: 0
                                                        HdlValueId: data_z3_low16
                                                    HdlStmIf
                                                        HdlOp: OR_LOG
                                                            list: ops
                                                                HdlOp: OR_LOG
                                                                    list: ops
                                                                        HdlOp: OR_LOG
                                                                            list: ops
                                                                                HdlOp: EQ
                                                                                    list: ops
                                                                                        HdlOp: INDEX
                                                                                            list: ops
                                                                                                HdlValueId: znDS1_sync
                                                                                                HdlValueInt: 2
                                                                                        HdlValueInt: 0
                                                                                HdlOp: EQ
                                                                                    list: ops
                                                                                        HdlOp: INDEX
                                                                                            list: ops
                                                                                                HdlValueId: znDS0_sync
                                                                                                HdlValueInt: 2
                                                                                        HdlValueInt: 0
                                                                        HdlOp: EQ
                                                                            list: ops
                                                                                HdlOp: INDEX
                                                                                    list: ops
                                                                                        HdlValueId: znUDS_sync
                                                                                        HdlValueInt: 2
                                                                                HdlValueInt: 0
                                                                HdlOp: EQ
                                                                    list: ops
                                                                        HdlOp: INDEX
                                                                            list: ops
                                                                                HdlValueId: znLDS_sync
                                                                                HdlValueInt: 2
                                                                        HdlValueInt: 0
                                                        HdlStmBlock: SEQ
                                                            list: body
                                                                HdlStmAssign
                                                                    HdlOp: CONCAT
                                                                        list: ops
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlValueId: z3addr
                                                                                    HdlOp: DOWNTO
                                                                                        list: ops
                                                                                            HdlValueInt: 15
                                                                                            HdlValueInt: 2
                                                                            HdlValueInt: 00
                                                                    HdlValueId: zaddr_regpart
                                                                HdlStmAssign
                                                                    HdlValueId: REGREAD
                                                                    HdlValueId: zorro_state
                                                        list: elifs
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmAssign
                                                HdlValueInt: 0
                                                HdlValueId: slaven
                HdlStmBlock: SEQ
                    list: body
                        HdlStmAssign
                            HdlValueInt: 0
                            HdlValueId: slaven
    DEL HdlStmCaseType@@CASE from zorro_state
    DEL HdlValueId@@zorro_state from zorro_state
    DEL HdlValueId@@Z2_WARMUP from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases

UPD HdlStmAssign@@ to 
    UPD HdlValueId@@CONFIGURED to Z2_PRE_CONFIGURED

DEL HdlStmAssign@@ from body
HdlStmAssign
    HdlValueInt: 1
    HdlValueId: z_confdone

DEL HdlStmAssign@@ from body
HdlStmAssign
    HdlValueInt: 1
    HdlValueId: colormode

DEL HdlStmAssign@@ from body
HdlStmAssign
    HdlValueInt: 1
    HdlValueId: z_confdone

DEL HdlStmAssign@@ from body
HdlStmAssign
    HdlValueInt: 1
    HdlValueId: colormode


CommitId: 327b82476418d01e840f918063de0e65a3d4f9ee
WIP cfgin/cfgout sequencing; fix possible deadlock when switching resolutions; some blitter optimization; revision number
--- a/z2-minispartan/z2.v
+++ b/z2-minispartan/z2.v
@@ -843,6 +854,19 @@ always @(posedge z_sample_clk) begin
       end
     end
     
+    Z2_PRE_CONFIGURED: begin
+      if (znAS_sync[2]==1) begin
+        z_confout<=1;
+        zorro_state <= CONFIGURED;
+      end
+    end
+    
+    /*Z2_PRE_CONFIGURED2: begin
+      if (znCFGIN_sync[2:0]=='b111) begin
+        zorro_state <= Z2_IDLE;
+      end
+    end*/
+    
     CONFIGURED: begin
       scalemode <= 0;
       colormode <= 1;

ParseResult:
UPD HdlStmCase@@zorro_state to zorro_state
    INS HdlStmCaseType@@CASE to zorro_state
    INS HdlValueId@@zorro_state to zorro_state
    INS tuple@@ to cases
    INS HdlValueId@@Z2_PRE_CONFIGURED to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueInt: 1
    HdlValueId: z_confout

UPD HdlStmCase@@zorro_state to zorro_state
    UPD HdlStmBlock@@SEQ to SEQ
        UPD list@@body to elifs
        MOV list@@body to SEQ
        list: body
            HdlStmIf
                HdlValueId: dvid_reset
                HdlStmBlock: SEQ
                    list: body
                        HdlStmAssign
                            HdlValueInt: 10
                            HdlValueId: dvid_reset_counter
                        HdlStmAssign
                            HdlValueId: RESET_DVID
                            HdlValueId: zorro_state
                list: elifs
                    tuple
                        HdlOp: EQ
                            list: ops
                                HdlOp: INDEX
                                    list: ops
                                        HdlValueId: znFCS_sync
                                        HdlValueInt: 2
                                HdlValueInt: 0
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmIf
                                    HdlValueId: z3addr_zero
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmAssign
                                                HdlValueInt: 0
                                                HdlValueId: z3_confdone
                                            HdlStmAssign
                                                HdlValueId: RESET
                                                HdlValueId: zorro_state
                                    list: elifs
                                        tuple
                                            HdlOp: AND_LOG
                                                list: ops
                                                    HdlValueId: z3addr_in_ram
                                                    HdlValueId: zorro_write
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlStmAssign
                                                        HdlValueInt: 1
                                                        HdlValueId: slaven
                                                    HdlStmIf
                                                        HdlOp: OR_LOG
                                                            list: ops
                                                                HdlOp: OR_LOG
                                                                    list: ops
                                                                        HdlOp: OR_LOG
                                                                            list: ops
                                                                                HdlOp: EQ
                                                                                    list: ops
                                                                                        HdlOp: INDEX
                                                                                            list: ops
                                                                                                HdlValueId: znUDS_sync
                                                                                                HdlValueInt: 2
                                                                                        HdlValueInt: 0
                                                                                HdlOp: EQ
                                                                                    list: ops
                                                                                        HdlOp: INDEX
                                                                                            list: ops
                                                                                                HdlValueId: znLDS_sync
                                                                                                HdlValueInt: 2
                                                                                        HdlValueInt: 0
                                                                        HdlOp: EQ
                                                                            list: ops
                                                                                HdlOp: INDEX
                                                                                    list: ops
                                                                                        HdlValueId: znDS1_sync
                                                                                        HdlValueInt: 2
                                                                                HdlValueInt: 0
                                                                HdlOp: EQ
                                                                    list: ops
                                                                        HdlOp: INDEX
                                                                            list: ops
                                                                                HdlValueId: znDS0_sync
                                                                                HdlValueInt: 2
                                                                        HdlValueInt: 0
                                                        HdlStmBlock: SEQ
                                                            list: body
                                                                HdlStmAssign
                                                                    HdlValueId: Z3_WRITE_UPPER
                                                                    HdlValueId: zorro_state
                                                        list: elifs
                                        tuple
                                            HdlOp: AND_LOG
                                                list: ops
                                                    HdlValueId: z3addr_in_ram
                                                    HdlValueId: zorro_read
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlStmAssign
                                                        HdlValueInt: 1
                                                        HdlValueId: slaven
                                                    HdlStmAssign
                                                        HdlValueId: Z3_READ_UPPER
                                                        HdlValueId: zorro_state
                                        tuple
                                            HdlOp: AND_LOG
                                                list: ops
                                                    HdlValueId: zorro_write
                                                    HdlValueId: z3addr_in_reg
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlStmAssign
                                                        HdlValueInt: 1
                                                        HdlValueId: slaven
                                                    HdlStmIf
                                                        HdlOp: EQ
                                                            list: ops
                                                                HdlOp: INDEX
                                                                    list: ops
                                                                        HdlValueId: znDS1_sync
                                                                        HdlValueInt: 2
                                                                HdlValueInt: 0
                                                        HdlStmBlock: SEQ
                                                            list: body
                                                                HdlStmAssign
                                                                    HdlValueId: data_in_z3_low16
                                                                    HdlValueId: regdata_in
                                                                HdlStmAssign
                                                                    HdlOp: OR
                                                                        list: ops
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlValueId: z3addr
                                                                                    HdlOp: DOWNTO
                                                                                        list: ops
                                                                                            HdlValueInt: 15
                                                                                            HdlValueInt: 0
                                                                            HdlValueInt: 2
                                                                    HdlValueId: zaddr_regpart
                                                                HdlStmAssign
                                                                    HdlValueId: REGWRITE
                                                                    HdlValueId: zorro_state
                                                        list: elifs
                                                            tuple
                                                                HdlOp: EQ
                                                                    list: ops
                                                                        HdlOp: INDEX
                                                                            list: ops
                                                                                HdlValueId: znUDS_sync
                                                                                HdlValueInt: 2
                                                                        HdlValueInt: 0
                                                                HdlStmBlock: SEQ
                                                                    list: body
                                                                        HdlStmAssign
                                                                            HdlValueId: zdata_in_sync
                                                                            HdlValueId: regdata_in
                                                                        HdlStmAssign
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlValueId: z3addr
                                                                                    HdlOp: DOWNTO
                                                                                        list: ops
                                                                                            HdlValueInt: 15
                                                                                            HdlValueInt: 0
                                                                            HdlValueId: zaddr_regpart
                                                                        HdlStmAssign
                                                                            HdlValueId: REGWRITE
                                                                            HdlValueId: zorro_state
                                        tuple
                                            HdlOp: AND_LOG
                                                list: ops
                                                    HdlValueId: zorro_read
                                                    HdlValueId: z3addr_in_reg
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlStmAssign
                                                        HdlValueInt: 1
                                                        HdlValueId: slaven
                                                    HdlStmAssign
                                                        HdlValueInt: 0
                                                        HdlValueId: data_z3_hi16
                                                    HdlStmAssign
                                                        HdlValueInt: 0
                                                        HdlValueId: data_z3_low16
                                                    HdlStmIf
                                                        HdlOp: OR_LOG
                                                            list: ops
                                                                HdlOp: OR_LOG
                                                                    list: ops
                                                                        HdlOp: OR_LOG
                                                                            list: ops
                                                                                HdlOp: EQ
                                                                                    list: ops
                                                                                        HdlOp: INDEX
                                                                                            list: ops
                                                                                                HdlValueId: znDS1_sync
                                                                                                HdlValueInt: 2
                                                                                        HdlValueInt: 0
                                                                                HdlOp: EQ
                                                                                    list: ops
                                                                                        HdlOp: INDEX
                                                                                            list: ops
                                                                                                HdlValueId: znDS0_sync
                                                                                                HdlValueInt: 2
                                                                                        HdlValueInt: 0
                                                                        HdlOp: EQ
                                                                            list: ops
                                                                                HdlOp: INDEX
                                                                                    list: ops
                                                                                        HdlValueId: znUDS_sync
                                                                                        HdlValueInt: 2
                                                                                HdlValueInt: 0
                                                                HdlOp: EQ
                                                                    list: ops
                                                                        HdlOp: INDEX
                                                                            list: ops
                                                                                HdlValueId: znLDS_sync
                                                                                HdlValueInt: 2
                                                                        HdlValueInt: 0
                                                        HdlStmBlock: SEQ
                                                            list: body
                                                                HdlStmAssign
                                                                    HdlOp: CONCAT
                                                                        list: ops
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlValueId: z3addr
                                                                                    HdlOp: DOWNTO
                                                                                        list: ops
                                                                                            HdlValueInt: 15
                                                                                            HdlValueInt: 2
                                                                            HdlValueInt: 00
                                                                    HdlValueId: zaddr_regpart
                                                                HdlStmAssign
                                                                    HdlValueId: REGREAD
                                                                    HdlValueId: zorro_state
                                                        list: elifs
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmAssign
                                                HdlValueInt: 0
                                                HdlValueId: slaven
                HdlStmBlock: SEQ
                    list: body
                        HdlStmAssign
                            HdlValueInt: 0
                            HdlValueId: slaven
    DEL HdlStmCaseType@@CASE from zorro_state
    DEL HdlValueId@@zorro_state from zorro_state
    DEL HdlValueId@@Z2_WARMUP from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases


CommitId: 327b82476418d01e840f918063de0e65a3d4f9ee
WIP cfgin/cfgout sequencing; fix possible deadlock when switching resolutions; some blitter optimization; revision number
--- a/z2-minispartan/z2.v
+++ b/z2-minispartan/z2.v
@@ -864,34 +888,32 @@ always @(posedge z_sample_clk) begin
       z3_reg_low   <= z3_ram_low + z3_ram_size-'h10000;
       z3_reg_high  <= z3_ram_low + z3_ram_size-'h10000 + reg_size;
       
+      z_confout <= 1;
+      
       sdram_reset <= 0;
       if (ZORRO3) begin
-        zorro_state <= Z3_IDLE;
+        if (!z3addr_zero)
+          zorro_state <= Z3_IDLE;
       end else begin
-        warmup_counter <= 'hfffff;
-        zorro_state <= Z2_WARMUP;
-      end
-    end
-    
-    Z2_WARMUP: begin
-      if (warmup_counter!=0)
-        warmup_counter <= warmup_counter - 1'b1;
-      else begin
         zorro_state <= Z2_IDLE;
       end
     end
   
     // ----------------------------------------------------------------------------------
     Z2_IDLE: begin
+      if (dvid_reset) begin
+        dvid_reset_counter <= 10;
+        zorro_state <= RESET_DVID;
+      end else
+      if (znCFGIN_sync[1]==1) begin
+        // poor man's IO reset (with proper CFGIN behavior)
+        zorro_state <= RESET;
+        z2_snoop_reset_mode <= 0;
+      end else
       if (z2_addr_valid) begin
-        if (dvid_reset) begin
-          dvid_reset_counter <= 10;
-          zorro_state <= RESET_DVID;
-        end else
-        if (zaddr_autoconfig && zaddr_sync2==autoconf_low && !znCFGIN_sync[2]) begin
-          // poor man's IO reset
-          z_confdone <= 0;
-          zorro_state <= Z2_CONFIGURING;
+        // even poorer man's IO reset (single board snoop mode, does not work with early startup)
+        if (z2_snoop_reset_mode && zaddr_sync2 == 'h000004 && zorro_read && zFC2==1 && zFC0==0) begin
+          zorro_state <= RESET;
         end else if (zorro_read && zaddr_in_ram) begin
           /*if (!rec_enable) begin 
             rec_enable <= 1;

ParseResult:
UPD HdlStmCase@@zorro_state to zorro_state
    INS HdlStmCaseType@@CASE to zorro_state
    INS HdlValueId@@zorro_state to zorro_state
    INS tuple@@ to cases
    INS HdlValueId@@Z2_PRE_CONFIGURED to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmIf@@ to 
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlStmAssign
                HdlValueId: Z2_IDLE
                HdlValueId: zorro_state
    DEL HdlOp@@NE from 
    HdlOp: NE
        list: ops
            HdlValueId: warmup_counter
            HdlValueInt: 0
    DEL list@@elifs from 

UPD HdlStmIf@@ to 
    MOV HdlValueId@@dvid_reset to 
    HdlValueId: dvid_reset
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlStmAssign
                HdlValueInt: 10
                HdlValueId: dvid_reset_counter
            HdlStmAssign
                HdlValueId: RESET_DVID
                HdlValueId: zorro_state
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: z_confdone
            HdlStmAssign
                HdlValueId: Z2_CONFIGURING
                HdlValueId: zorro_state
    MOV HdlOp@@AND_LOG to 
    HdlOp: AND_LOG
        list: ops
            HdlOp: AND_LOG
                list: ops
                    HdlValueId: zaddr_autoconfig
                    HdlOp: EQ
                        list: ops
                            HdlValueId: zaddr_sync2
                            HdlValueId: autoconf_low
            HdlOp: NEG_LOG
                list: ops
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: znCFGIN_sync
                            HdlValueInt: 2
    UPD HdlOp@@AND_LOG to AND_LOG
        UPD HdlOp@@NEG_LOG to NEG_LOG
            UPD HdlOp@@INDEX to EQ
            MOV HdlOp@@INDEX to ops
            HdlOp: INDEX
                list: ops
                    HdlValueId: znCFGIN_sync
                    HdlValueInt: 2
            UPD HdlOp@@INDEX to INDEX
                UPD HdlValueId@@znCFGIN_sync to zFC2
                UPD HdlValueInt@@2 to 1
            DEL list@@ops from NEG_LOG
        MOV HdlOp@@AND_LOG to ops
        HdlOp: AND_LOG
            list: ops
                HdlValueId: zaddr_autoconfig
                HdlOp: EQ
                    list: ops
                        HdlValueId: zaddr_sync2
                        HdlValueId: autoconf_low
        UPD HdlOp@@AND_LOG to AND_LOG
            UPD HdlValueId@@zaddr_autoconfig to z2_snoop_reset_mode
            UPD HdlOp@@EQ to EQ
                DEL HdlValueId@@autoconf_low from ops
        DEL HdlOp@@NEG_LOG from ops
    DEL tuple@@ from elifs

UPD HdlStmIf@@ to 
    INS list@@elifs to 
    INS tuple@@ to elifs
    tuple
        HdlOp: EQ
            list: ops
                HdlOp: INDEX
                    list: ops
                        HdlValueId: znCFGIN_sync
                        HdlValueInt: 1
                HdlValueInt: 1
        HdlStmBlock: SEQ
            list: body
                HdlStmAssign
                    HdlValueId: RESET
                    HdlValueId: zorro_state
                HdlStmAssign
                    HdlValueInt: 0
                    HdlValueId: z2_snoop_reset_mode
    INS tuple@@ to elifs
    INS HdlValueId@@z2_addr_valid to 

UPD HdlStmIf@@ to 
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlStmIf
                HdlValueId: dvid_reset
                HdlStmBlock: SEQ
                    list: body
                        HdlStmAssign
                            HdlValueInt: 10
                            HdlValueId: dvid_reset_counter
                        HdlStmAssign
                            HdlValueId: RESET_DVID
                            HdlValueId: zorro_state
                list: elifs
                    tuple
                        HdlOp: AND_LOG
                            list: ops
                                HdlOp: AND_LOG
                                    list: ops
                                        HdlValueId: zaddr_autoconfig
                                        HdlOp: EQ
                                            list: ops
                                                HdlValueId: zaddr_sync2
                                                HdlValueId: autoconf_low
                                HdlOp: NEG_LOG
                                    list: ops
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: znCFGIN_sync
                                                HdlValueInt: 2
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmAssign
                                    HdlValueInt: 0
                                    HdlValueId: z_confdone
                                HdlStmAssign
                                    HdlValueId: Z2_CONFIGURING
                                    HdlValueId: zorro_state
                    tuple
                        HdlOp: AND_LOG
                            list: ops
                                HdlValueId: zorro_read
                                HdlValueId: zaddr_in_ram
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmAssign
                                    HdlOp: SRL
                                        list: ops
                                            HdlOp: SUB
                                                list: ops
                                                    HdlValueId: zaddr_sync2
                                                    HdlValueId: ram_low
                                            HdlValueInt: 1
                                    HdlValueId: last_addr
                                HdlStmAssign
                                    HdlValueInt: ffff
                                    HdlValueId: data
                                HdlStmAssign
                                    HdlValueInt: 0
                                    HdlValueId: read_counter
                                HdlStmAssign
                                    HdlValueInt: 1
                                    HdlValueId: slaven
                                HdlStmAssign
                                    HdlValueInt: 1
                                    HdlValueId: dataout_enable
                                HdlStmAssign
                                    HdlValueInt: 1
                                    HdlValueId: dataout
                                HdlStmAssign
                                    HdlValueId: WAIT_READ3
                                    HdlValueId: zorro_state
                    tuple
                        HdlOp: AND_LOG
                            list: ops
                                HdlValueId: zorro_write
                                HdlValueId: zaddr_in_ram
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmAssign
                                    HdlOp: SRL
                                        list: ops
                                            HdlOp: SUB
                                                list: ops
                                                    HdlValueId: zaddr_sync2
                                                    HdlValueId: ram_low
                                            HdlValueInt: 1
                                    HdlValueId: last_addr
                                HdlStmAssign
                                    HdlValueId: WAIT_WRITE
                                    HdlValueId: zorro_state
                    tuple
                        HdlOp: AND_LOG
                            list: ops
                                HdlValueId: zorro_write
                                HdlValueId: zaddr_in_reg
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmAssign
                                    HdlOp: INDEX
                                        list: ops
                                            HdlValueId: z2_mapped_addr
                                            HdlOp: DOWNTO
                                                list: ops
                                                    HdlValueInt: 15
                                                    HdlValueInt: 0
                                    HdlValueId: zaddr_regpart
                                HdlStmAssign
                                    HdlValueId: WAIT_REGWRITE
                                    HdlValueId: zorro_state
                    tuple
                        HdlOp: AND_LOG
                            list: ops
                                HdlValueId: zorro_read
                                HdlValueId: zaddr_in_reg
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmAssign
                                    HdlValueInt: 1
                                    HdlValueId: dataout_enable
                                HdlStmAssign
                                    HdlValueInt: 1
                                    HdlValueId: dataout
                                HdlStmAssign
                                    HdlValueInt: 1
                                    HdlValueId: slaven
                                HdlStmCase: {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops':}]} 
                                    HdlStmCaseType: CASE
                                    HdlOp: INDEX
                                        list: ops
                                            HdlValueId: zaddr_sync2
                                            HdlOp: DOWNTO
                                                list: ops
                                                    HdlValueInt: 7
                                                    HdlValueInt: 0
                                    list: cases
                                        tuple
                                            HdlValueInt: 20
                                            HdlStmAssign
                                                HdlValueId: blitter_x1
                                                HdlValueId: data
                                        tuple
                                            HdlValueInt: 22
                                            HdlStmAssign
                                                HdlValueId: blitter_y1
                                                HdlValueId: data
                                        tuple
                                            HdlValueInt: 24
                                            HdlStmAssign
                                                HdlValueId: blitter_x2
                                                HdlValueId: data
                                        tuple
                                            HdlValueInt: 26
                                            HdlStmAssign
                                                HdlValueId: blitter_y2
                                                HdlValueId: data
                                        tuple
                                            HdlValueInt: 28
                                            HdlStmAssign
                                                HdlValueId: blitter_rgb
                                                HdlValueId: data
                                        tuple
                                            HdlValueInt: 2a
                                            HdlStmAssign
                                                HdlValueId: blitter_enable
                                                HdlValueId: data
                                        tuple
                                            HdlValueInt: 60
                                            HdlStmAssign
                                                HdlOp: CONCAT
                                                    list: ops
                                                        HdlValueId: sd_busy
                                                        HdlValueInt: 00
                                                HdlValueId: data
                                        tuple
                                            HdlValueInt: 62
                                            HdlStmAssign
                                                HdlOp: CONCAT
                                                    list: ops
                                                        HdlValueId: sd_read
                                                        HdlValueInt: 00
                                                HdlValueId: data
                                        tuple
                                            HdlValueInt: 64
                                            HdlStmAssign
                                                HdlOp: CONCAT
                                                    list: ops
                                                        HdlValueId: sd_write
                                                        HdlValueInt: 00
                                                HdlValueId: data
                                        tuple
                                            HdlValueInt: 66
                                            HdlStmAssign
                                                HdlOp: CONCAT
                                                    list: ops
                                                        HdlValueId: sd_handshake_out
                                                        HdlValueInt: 00
                                                HdlValueId: data
                                        tuple
                                            HdlValueInt: 68
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: sd_addr_in
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 31
                                                                HdlValueInt: 16
                                                HdlValueId: data
                                        tuple
                                            HdlValueInt: 6a
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: sd_addr_in
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 15
                                                                HdlValueInt: 0
                                                HdlValueId: data
                                        tuple
                                            HdlValueInt: 6c
                                            HdlStmAssign
                                                HdlOp: CONCAT
                                                    list: ops
                                                        HdlValueId: sd_data_in
                                                        HdlValueInt: 00
                                                HdlValueId: data
                                        tuple
                                            HdlValueInt: 6e
                                            HdlStmAssign
                                                HdlOp: CONCAT
                                                    list: ops
                                                        HdlValueId: sd_data_out
                                                        HdlValueInt: 00
                                                HdlValueId: data
                                        tuple
                                            HdlValueInt: 70
                                            HdlStmAssign
                                                HdlValueId: sd_error
                                                HdlValueId: data
                                    HdlStmAssign: default
                                        HdlValueInt: 0000
                                        HdlValueId: data
    DEL HdlValueId@@z2_addr_valid from 
    DEL list@@elifs from 

UPD HdlStmIf@@ to 
    INS HdlOp@@NEG_LOG to 
    HdlOp: NEG_LOG
        list: ops
            HdlValueId: z3addr_zero
    INS list@@elifs to 

UPD HdlStmAssign@@ to if_true

MOV HdlStmAssign@@ to body
HdlStmAssign
    HdlValueId: Z3_IDLE
    HdlValueId: zorro_state

UPD HdlStmIf@@ to 
    INS HdlOp@@AND_LOG to 
    UPD HdlOp@@AND_LOG to AND_LOG
        INS list@@ops to AND_LOG
        INS HdlOp@@EQ to ops
        HdlOp: EQ
            list: ops
                HdlValueId: zFC0
                HdlValueInt: 0
        UPD HdlOp@@AND_LOG to AND_LOG
            INS HdlOp@@AND_LOG to ops
            UPD HdlOp@@AND_LOG to AND_LOG
                INS list@@ops to AND_LOG
                INS HdlValueId@@zorro_read to ops
                UPD HdlOp@@AND_LOG to AND_LOG
                    UPD HdlOp@@EQ to EQ
                        INS HdlValueInt@@000004 to ops

UPD HdlStmCase@@zorro_state to zorro_state
    UPD HdlStmBlock@@SEQ to SEQ
        UPD list@@body to elifs
        MOV list@@body to SEQ
        list: body
            HdlStmIf
                HdlValueId: dvid_reset
                HdlStmBlock: SEQ
                    list: body
                        HdlStmAssign
                            HdlValueInt: 10
                            HdlValueId: dvid_reset_counter
                        HdlStmAssign
                            HdlValueId: RESET_DVID
                            HdlValueId: zorro_state
                list: elifs
                    tuple
                        HdlOp: EQ
                            list: ops
                                HdlOp: INDEX
                                    list: ops
                                        HdlValueId: znFCS_sync
                                        HdlValueInt: 2
                                HdlValueInt: 0
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmIf
                                    HdlValueId: z3addr_zero
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmAssign
                                                HdlValueInt: 0
                                                HdlValueId: z3_confdone
                                            HdlStmAssign
                                                HdlValueId: RESET
                                                HdlValueId: zorro_state
                                    list: elifs
                                        tuple
                                            HdlOp: AND_LOG
                                                list: ops
                                                    HdlValueId: z3addr_in_ram
                                                    HdlValueId: zorro_write
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlStmAssign
                                                        HdlValueInt: 1
                                                        HdlValueId: slaven
                                                    HdlStmIf
                                                        HdlOp: OR_LOG
                                                            list: ops
                                                                HdlOp: OR_LOG
                                                                    list: ops
                                                                        HdlOp: OR_LOG
                                                                            list: ops
                                                                                HdlOp: EQ
                                                                                    list: ops
                                                                                        HdlOp: INDEX
                                                                                            list: ops
                                                                                                HdlValueId: znUDS_sync
                                                                                                HdlValueInt: 2
                                                                                        HdlValueInt: 0
                                                                                HdlOp: EQ
                                                                                    list: ops
                                                                                        HdlOp: INDEX
                                                                                            list: ops
                                                                                                HdlValueId: znLDS_sync
                                                                                                HdlValueInt: 2
                                                                                        HdlValueInt: 0
                                                                        HdlOp: EQ
                                                                            list: ops
                                                                                HdlOp: INDEX
                                                                                    list: ops
                                                                                        HdlValueId: znDS1_sync
                                                                                        HdlValueInt: 2
                                                                                HdlValueInt: 0
                                                                HdlOp: EQ
                                                                    list: ops
                                                                        HdlOp: INDEX
                                                                            list: ops
                                                                                HdlValueId: znDS0_sync
                                                                                HdlValueInt: 2
                                                                        HdlValueInt: 0
                                                        HdlStmBlock: SEQ
                                                            list: body
                                                                HdlStmAssign
                                                                    HdlValueId: Z3_WRITE_UPPER
                                                                    HdlValueId: zorro_state
                                                        list: elifs
                                        tuple
                                            HdlOp: AND_LOG
                                                list: ops
                                                    HdlValueId: z3addr_in_ram
                                                    HdlValueId: zorro_read
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlStmAssign
                                                        HdlValueInt: 1
                                                        HdlValueId: slaven
                                                    HdlStmAssign
                                                        HdlValueId: Z3_READ_UPPER
                                                        HdlValueId: zorro_state
                                        tuple
                                            HdlOp: AND_LOG
                                                list: ops
                                                    HdlValueId: zorro_write
                                                    HdlValueId: z3addr_in_reg
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlStmAssign
                                                        HdlValueInt: 1
                                                        HdlValueId: slaven
                                                    HdlStmIf
                                                        HdlOp: EQ
                                                            list: ops
                                                                HdlOp: INDEX
                                                                    list: ops
                                                                        HdlValueId: znDS1_sync
                                                                        HdlValueInt: 2
                                                                HdlValueInt: 0
                                                        HdlStmBlock: SEQ
                                                            list: body
                                                                HdlStmAssign
                                                                    HdlValueId: data_in_z3_low16
                                                                    HdlValueId: regdata_in
                                                                HdlStmAssign
                                                                    HdlOp: OR
                                                                        list: ops
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlValueId: z3addr
                                                                                    HdlOp: DOWNTO
                                                                                        list: ops
                                                                                            HdlValueInt: 15
                                                                                            HdlValueInt: 0
                                                                            HdlValueInt: 2
                                                                    HdlValueId: zaddr_regpart
                                                                HdlStmAssign
                                                                    HdlValueId: REGWRITE
                                                                    HdlValueId: zorro_state
                                                        list: elifs
                                                            tuple
                                                                HdlOp: EQ
                                                                    list: ops
                                                                        HdlOp: INDEX
                                                                            list: ops
                                                                                HdlValueId: znUDS_sync
                                                                                HdlValueInt: 2
                                                                        HdlValueInt: 0
                                                                HdlStmBlock: SEQ
                                                                    list: body
                                                                        HdlStmAssign
                                                                            HdlValueId: zdata_in_sync
                                                                            HdlValueId: regdata_in
                                                                        HdlStmAssign
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlValueId: z3addr
                                                                                    HdlOp: DOWNTO
                                                                                        list: ops
                                                                                            HdlValueInt: 15
                                                                                            HdlValueInt: 0
                                                                            HdlValueId: zaddr_regpart
                                                                        HdlStmAssign
                                                                            HdlValueId: REGWRITE
                                                                            HdlValueId: zorro_state
                                        tuple
                                            HdlOp: AND_LOG
                                                list: ops
                                                    HdlValueId: zorro_read
                                                    HdlValueId: z3addr_in_reg
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlStmAssign
                                                        HdlValueInt: 1
                                                        HdlValueId: slaven
                                                    HdlStmAssign
                                                        HdlValueInt: 0
                                                        HdlValueId: data_z3_hi16
                                                    HdlStmAssign
                                                        HdlValueInt: 0
                                                        HdlValueId: data_z3_low16
                                                    HdlStmIf
                                                        HdlOp: OR_LOG
                                                            list: ops
                                                                HdlOp: OR_LOG
                                                                    list: ops
                                                                        HdlOp: OR_LOG
                                                                            list: ops
                                                                                HdlOp: EQ
                                                                                    list: ops
                                                                                        HdlOp: INDEX
                                                                                            list: ops
                                                                                                HdlValueId: znDS1_sync
                                                                                                HdlValueInt: 2
                                                                                        HdlValueInt: 0
                                                                                HdlOp: EQ
                                                                                    list: ops
                                                                                        HdlOp: INDEX
                                                                                            list: ops
                                                                                                HdlValueId: znDS0_sync
                                                                                                HdlValueInt: 2
                                                                                        HdlValueInt: 0
                                                                        HdlOp: EQ
                                                                            list: ops
                                                                                HdlOp: INDEX
                                                                                    list: ops
                                                                                        HdlValueId: znUDS_sync
                                                                                        HdlValueInt: 2
                                                                                HdlValueInt: 0
                                                                HdlOp: EQ
                                                                    list: ops
                                                                        HdlOp: INDEX
                                                                            list: ops
                                                                                HdlValueId: znLDS_sync
                                                                                HdlValueInt: 2
                                                                        HdlValueInt: 0
                                                        HdlStmBlock: SEQ
                                                            list: body
                                                                HdlStmAssign
                                                                    HdlOp: CONCAT
                                                                        list: ops
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlValueId: z3addr
                                                                                    HdlOp: DOWNTO
                                                                                        list: ops
                                                                                            HdlValueInt: 15
                                                                                            HdlValueInt: 2
                                                                            HdlValueInt: 00
                                                                    HdlValueId: zaddr_regpart
                                                                HdlStmAssign
                                                                    HdlValueId: REGREAD
                                                                    HdlValueId: zorro_state
                                                        list: elifs
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmAssign
                                                HdlValueInt: 0
                                                HdlValueId: slaven
                HdlStmBlock: SEQ
                    list: body
                        HdlStmAssign
                            HdlValueInt: 0
                            HdlValueId: slaven
    DEL HdlStmCaseType@@CASE from zorro_state
    DEL HdlValueId@@zorro_state from zorro_state
    DEL HdlValueId@@Z2_WARMUP from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases

UPD HdlStmIf@@ to 
    DEL HdlStmBlock@@SEQ from 
    HdlStmBlock: SEQ
        list: body
            HdlStmAssign
                HdlValueInt: fffff
                HdlValueId: warmup_counter
            HdlStmAssign
                HdlValueId: Z2_WARMUP
                HdlValueId: zorro_state

DEL HdlStmAssign@@if_true from 
HdlStmAssign: if_true
    HdlOp: SUB
        list: ops
            HdlValueId: warmup_counter
            HdlValueInt: 1
    HdlValueId: warmup_counter

DEL HdlStmIf@@ from body

DEL HdlStmAssign@@ from body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: z_confdone

DEL HdlStmAssign@@ from body
HdlStmAssign
    HdlValueId: Z2_CONFIGURING
    HdlValueId: zorro_state


CommitId: 327b82476418d01e840f918063de0e65a3d4f9ee
WIP cfgin/cfgout sequencing; fix possible deadlock when switching resolutions; some blitter optimization; revision number
--- a/z2-minispartan/z2.v
+++ b/z2-minispartan/z2.v
@@ -928,6 +950,7 @@ always @(posedge z_sample_clk) begin
           slaven <= 1;
           
           case (zaddr_sync2[7:0])
+            //'h00: data <= REVISION;
             'h20: data <= blitter_x1;
             'h22: data <= blitter_y1;
             'h24: data <= blitter_x2;

ParseResult:
UPD HdlStmCase@@zorro_state to zorro_state
    INS HdlStmCaseType@@CASE to zorro_state
    INS HdlValueId@@zorro_state to zorro_state
    INS tuple@@ to cases
    INS HdlValueId@@Z2_PRE_CONFIGURED to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmIf@@ to 
    MOV HdlValueId@@dvid_reset to 
    HdlValueId: dvid_reset
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlStmAssign
                HdlValueInt: 10
                HdlValueId: dvid_reset_counter
            HdlStmAssign
                HdlValueId: RESET_DVID
                HdlValueId: zorro_state
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: z_confdone
            HdlStmAssign
                HdlValueId: Z2_CONFIGURING
                HdlValueId: zorro_state
    MOV HdlOp@@AND_LOG to 
    HdlOp: AND_LOG
        list: ops
            HdlOp: AND_LOG
                list: ops
                    HdlValueId: zaddr_autoconfig
                    HdlOp: EQ
                        list: ops
                            HdlValueId: zaddr_sync2
                            HdlValueId: autoconf_low
            HdlOp: NEG_LOG
                list: ops
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: znCFGIN_sync
                            HdlValueInt: 2
    UPD HdlOp@@AND_LOG to AND_LOG
        UPD HdlOp@@NEG_LOG to NEG_LOG
            UPD HdlOp@@INDEX to EQ
            MOV HdlOp@@INDEX to ops
            HdlOp: INDEX
                list: ops
                    HdlValueId: znCFGIN_sync
                    HdlValueInt: 2
            UPD HdlOp@@INDEX to INDEX
                UPD HdlValueId@@znCFGIN_sync to zFC2
                UPD HdlValueInt@@2 to 1
            DEL list@@ops from NEG_LOG
        MOV HdlOp@@AND_LOG to ops
        HdlOp: AND_LOG
            list: ops
                HdlValueId: zaddr_autoconfig
                HdlOp: EQ
                    list: ops
                        HdlValueId: zaddr_sync2
                        HdlValueId: autoconf_low
        UPD HdlOp@@AND_LOG to AND_LOG
            UPD HdlValueId@@zaddr_autoconfig to z2_snoop_reset_mode
            UPD HdlOp@@EQ to EQ
                DEL HdlValueId@@autoconf_low from ops
        DEL HdlOp@@NEG_LOG from ops
    DEL tuple@@ from elifs

UPD HdlStmIf@@ to 
    INS list@@elifs to 
    INS tuple@@ to elifs
    tuple
        HdlOp: EQ
            list: ops
                HdlOp: INDEX
                    list: ops
                        HdlValueId: znCFGIN_sync
                        HdlValueInt: 1
                HdlValueInt: 1
        HdlStmBlock: SEQ
            list: body
                HdlStmAssign
                    HdlValueId: RESET
                    HdlValueId: zorro_state
                HdlStmAssign
                    HdlValueInt: 0
                    HdlValueId: z2_snoop_reset_mode
    INS tuple@@ to elifs
    INS HdlValueId@@z2_addr_valid to 

UPD HdlStmIf@@ to 
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlStmIf
                HdlValueId: dvid_reset
                HdlStmBlock: SEQ
                    list: body
                        HdlStmAssign
                            HdlValueInt: 10
                            HdlValueId: dvid_reset_counter
                        HdlStmAssign
                            HdlValueId: RESET_DVID
                            HdlValueId: zorro_state
                list: elifs
                    tuple
                        HdlOp: AND_LOG
                            list: ops
                                HdlOp: AND_LOG
                                    list: ops
                                        HdlValueId: zaddr_autoconfig
                                        HdlOp: EQ
                                            list: ops
                                                HdlValueId: zaddr_sync2
                                                HdlValueId: autoconf_low
                                HdlOp: NEG_LOG
                                    list: ops
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: znCFGIN_sync
                                                HdlValueInt: 2
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmAssign
                                    HdlValueInt: 0
                                    HdlValueId: z_confdone
                                HdlStmAssign
                                    HdlValueId: Z2_CONFIGURING
                                    HdlValueId: zorro_state
                    tuple
                        HdlOp: AND_LOG
                            list: ops
                                HdlValueId: zorro_read
                                HdlValueId: zaddr_in_ram
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmAssign
                                    HdlOp: SRL
                                        list: ops
                                            HdlOp: SUB
                                                list: ops
                                                    HdlValueId: zaddr_sync2
                                                    HdlValueId: ram_low
                                            HdlValueInt: 1
                                    HdlValueId: last_addr
                                HdlStmAssign
                                    HdlValueInt: ffff
                                    HdlValueId: data
                                HdlStmAssign
                                    HdlValueInt: 0
                                    HdlValueId: read_counter
                                HdlStmAssign
                                    HdlValueInt: 1
                                    HdlValueId: slaven
                                HdlStmAssign
                                    HdlValueInt: 1
                                    HdlValueId: dataout_enable
                                HdlStmAssign
                                    HdlValueInt: 1
                                    HdlValueId: dataout
                                HdlStmAssign
                                    HdlValueId: WAIT_READ3
                                    HdlValueId: zorro_state
                    tuple
                        HdlOp: AND_LOG
                            list: ops
                                HdlValueId: zorro_write
                                HdlValueId: zaddr_in_ram
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmAssign
                                    HdlOp: SRL
                                        list: ops
                                            HdlOp: SUB
                                                list: ops
                                                    HdlValueId: zaddr_sync2
                                                    HdlValueId: ram_low
                                            HdlValueInt: 1
                                    HdlValueId: last_addr
                                HdlStmAssign
                                    HdlValueId: WAIT_WRITE
                                    HdlValueId: zorro_state
                    tuple
                        HdlOp: AND_LOG
                            list: ops
                                HdlValueId: zorro_write
                                HdlValueId: zaddr_in_reg
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmAssign
                                    HdlOp: INDEX
                                        list: ops
                                            HdlValueId: z2_mapped_addr
                                            HdlOp: DOWNTO
                                                list: ops
                                                    HdlValueInt: 15
                                                    HdlValueInt: 0
                                    HdlValueId: zaddr_regpart
                                HdlStmAssign
                                    HdlValueId: WAIT_REGWRITE
                                    HdlValueId: zorro_state
                    tuple
                        HdlOp: AND_LOG
                            list: ops
                                HdlValueId: zorro_read
                                HdlValueId: zaddr_in_reg
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmAssign
                                    HdlValueInt: 1
                                    HdlValueId: dataout_enable
                                HdlStmAssign
                                    HdlValueInt: 1
                                    HdlValueId: dataout
                                HdlStmAssign
                                    HdlValueInt: 1
                                    HdlValueId: slaven
                                HdlStmCase: {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops':}]} 
                                    HdlStmCaseType: CASE
                                    HdlOp: INDEX
                                        list: ops
                                            HdlValueId: zaddr_sync2
                                            HdlOp: DOWNTO
                                                list: ops
                                                    HdlValueInt: 7
                                                    HdlValueInt: 0
                                    list: cases
                                        tuple
                                            HdlValueInt: 20
                                            HdlStmAssign
                                                HdlValueId: blitter_x1
                                                HdlValueId: data
                                        tuple
                                            HdlValueInt: 22
                                            HdlStmAssign
                                                HdlValueId: blitter_y1
                                                HdlValueId: data
                                        tuple
                                            HdlValueInt: 24
                                            HdlStmAssign
                                                HdlValueId: blitter_x2
                                                HdlValueId: data
                                        tuple
                                            HdlValueInt: 26
                                            HdlStmAssign
                                                HdlValueId: blitter_y2
                                                HdlValueId: data
                                        tuple
                                            HdlValueInt: 28
                                            HdlStmAssign
                                                HdlValueId: blitter_rgb
                                                HdlValueId: data
                                        tuple
                                            HdlValueInt: 2a
                                            HdlStmAssign
                                                HdlValueId: blitter_enable
                                                HdlValueId: data
                                        tuple
                                            HdlValueInt: 60
                                            HdlStmAssign
                                                HdlOp: CONCAT
                                                    list: ops
                                                        HdlValueId: sd_busy
                                                        HdlValueInt: 00
                                                HdlValueId: data
                                        tuple
                                            HdlValueInt: 62
                                            HdlStmAssign
                                                HdlOp: CONCAT
                                                    list: ops
                                                        HdlValueId: sd_read
                                                        HdlValueInt: 00
                                                HdlValueId: data
                                        tuple
                                            HdlValueInt: 64
                                            HdlStmAssign
                                                HdlOp: CONCAT
                                                    list: ops
                                                        HdlValueId: sd_write
                                                        HdlValueInt: 00
                                                HdlValueId: data
                                        tuple
                                            HdlValueInt: 66
                                            HdlStmAssign
                                                HdlOp: CONCAT
                                                    list: ops
                                                        HdlValueId: sd_handshake_out
                                                        HdlValueInt: 00
                                                HdlValueId: data
                                        tuple
                                            HdlValueInt: 68
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: sd_addr_in
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 31
                                                                HdlValueInt: 16
                                                HdlValueId: data
                                        tuple
                                            HdlValueInt: 6a
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: sd_addr_in
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 15
                                                                HdlValueInt: 0
                                                HdlValueId: data
                                        tuple
                                            HdlValueInt: 6c
                                            HdlStmAssign
                                                HdlOp: CONCAT
                                                    list: ops
                                                        HdlValueId: sd_data_in
                                                        HdlValueInt: 00
                                                HdlValueId: data
                                        tuple
                                            HdlValueInt: 6e
                                            HdlStmAssign
                                                HdlOp: CONCAT
                                                    list: ops
                                                        HdlValueId: sd_data_out
                                                        HdlValueInt: 00
                                                HdlValueId: data
                                        tuple
                                            HdlValueInt: 70
                                            HdlStmAssign
                                                HdlValueId: sd_error
                                                HdlValueId: data
                                    HdlStmAssign: default
                                        HdlValueInt: 0000
                                        HdlValueId: data
    DEL HdlValueId@@z2_addr_valid from 
    DEL list@@elifs from 

UPD HdlStmIf@@ to 
    INS HdlOp@@AND_LOG to 
    UPD HdlOp@@AND_LOG to AND_LOG
        INS list@@ops to AND_LOG
        INS HdlOp@@EQ to ops
        HdlOp: EQ
            list: ops
                HdlValueId: zFC0
                HdlValueInt: 0
        UPD HdlOp@@AND_LOG to AND_LOG
            INS HdlOp@@AND_LOG to ops
            UPD HdlOp@@AND_LOG to AND_LOG
                INS list@@ops to AND_LOG
                INS HdlValueId@@zorro_read to ops
                UPD HdlOp@@AND_LOG to AND_LOG
                    UPD HdlOp@@EQ to EQ
                        INS HdlValueInt@@000004 to ops

UPD HdlStmCase@@zorro_state to zorro_state
    UPD HdlStmBlock@@SEQ to SEQ
        UPD list@@body to elifs
        MOV list@@body to SEQ
        list: body
            HdlStmIf
                HdlValueId: dvid_reset
                HdlStmBlock: SEQ
                    list: body
                        HdlStmAssign
                            HdlValueInt: 10
                            HdlValueId: dvid_reset_counter
                        HdlStmAssign
                            HdlValueId: RESET_DVID
                            HdlValueId: zorro_state
                list: elifs
                    tuple
                        HdlOp: EQ
                            list: ops
                                HdlOp: INDEX
                                    list: ops
                                        HdlValueId: znFCS_sync
                                        HdlValueInt: 2
                                HdlValueInt: 0
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmIf
                                    HdlValueId: z3addr_zero
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmAssign
                                                HdlValueInt: 0
                                                HdlValueId: z3_confdone
                                            HdlStmAssign
                                                HdlValueId: RESET
                                                HdlValueId: zorro_state
                                    list: elifs
                                        tuple
                                            HdlOp: AND_LOG
                                                list: ops
                                                    HdlValueId: z3addr_in_ram
                                                    HdlValueId: zorro_write
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlStmAssign
                                                        HdlValueInt: 1
                                                        HdlValueId: slaven
                                                    HdlStmIf
                                                        HdlOp: OR_LOG
                                                            list: ops
                                                                HdlOp: OR_LOG
                                                                    list: ops
                                                                        HdlOp: OR_LOG
                                                                            list: ops
                                                                                HdlOp: EQ
                                                                                    list: ops
                                                                                        HdlOp: INDEX
                                                                                            list: ops
                                                                                                HdlValueId: znUDS_sync
                                                                                                HdlValueInt: 2
                                                                                        HdlValueInt: 0
                                                                                HdlOp: EQ
                                                                                    list: ops
                                                                                        HdlOp: INDEX
                                                                                            list: ops
                                                                                                HdlValueId: znLDS_sync
                                                                                                HdlValueInt: 2
                                                                                        HdlValueInt: 0
                                                                        HdlOp: EQ
                                                                            list: ops
                                                                                HdlOp: INDEX
                                                                                    list: ops
                                                                                        HdlValueId: znDS1_sync
                                                                                        HdlValueInt: 2
                                                                                HdlValueInt: 0
                                                                HdlOp: EQ
                                                                    list: ops
                                                                        HdlOp: INDEX
                                                                            list: ops
                                                                                HdlValueId: znDS0_sync
                                                                                HdlValueInt: 2
                                                                        HdlValueInt: 0
                                                        HdlStmBlock: SEQ
                                                            list: body
                                                                HdlStmAssign
                                                                    HdlValueId: Z3_WRITE_UPPER
                                                                    HdlValueId: zorro_state
                                                        list: elifs
                                        tuple
                                            HdlOp: AND_LOG
                                                list: ops
                                                    HdlValueId: z3addr_in_ram
                                                    HdlValueId: zorro_read
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlStmAssign
                                                        HdlValueInt: 1
                                                        HdlValueId: slaven
                                                    HdlStmAssign
                                                        HdlValueId: Z3_READ_UPPER
                                                        HdlValueId: zorro_state
                                        tuple
                                            HdlOp: AND_LOG
                                                list: ops
                                                    HdlValueId: zorro_write
                                                    HdlValueId: z3addr_in_reg
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlStmAssign
                                                        HdlValueInt: 1
                                                        HdlValueId: slaven
                                                    HdlStmIf
                                                        HdlOp: EQ
                                                            list: ops
                                                                HdlOp: INDEX
                                                                    list: ops
                                                                        HdlValueId: znDS1_sync
                                                                        HdlValueInt: 2
                                                                HdlValueInt: 0
                                                        HdlStmBlock: SEQ
                                                            list: body
                                                                HdlStmAssign
                                                                    HdlValueId: data_in_z3_low16
                                                                    HdlValueId: regdata_in
                                                                HdlStmAssign
                                                                    HdlOp: OR
                                                                        list: ops
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlValueId: z3addr
                                                                                    HdlOp: DOWNTO
                                                                                        list: ops
                                                                                            HdlValueInt: 15
                                                                                            HdlValueInt: 0
                                                                            HdlValueInt: 2
                                                                    HdlValueId: zaddr_regpart
                                                                HdlStmAssign
                                                                    HdlValueId: REGWRITE
                                                                    HdlValueId: zorro_state
                                                        list: elifs
                                                            tuple
                                                                HdlOp: EQ
                                                                    list: ops
                                                                        HdlOp: INDEX
                                                                            list: ops
                                                                                HdlValueId: znUDS_sync
                                                                                HdlValueInt: 2
                                                                        HdlValueInt: 0
                                                                HdlStmBlock: SEQ
                                                                    list: body
                                                                        HdlStmAssign
                                                                            HdlValueId: zdata_in_sync
                                                                            HdlValueId: regdata_in
                                                                        HdlStmAssign
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlValueId: z3addr
                                                                                    HdlOp: DOWNTO
                                                                                        list: ops
                                                                                            HdlValueInt: 15
                                                                                            HdlValueInt: 0
                                                                            HdlValueId: zaddr_regpart
                                                                        HdlStmAssign
                                                                            HdlValueId: REGWRITE
                                                                            HdlValueId: zorro_state
                                        tuple
                                            HdlOp: AND_LOG
                                                list: ops
                                                    HdlValueId: zorro_read
                                                    HdlValueId: z3addr_in_reg
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlStmAssign
                                                        HdlValueInt: 1
                                                        HdlValueId: slaven
                                                    HdlStmAssign
                                                        HdlValueInt: 0
                                                        HdlValueId: data_z3_hi16
                                                    HdlStmAssign
                                                        HdlValueInt: 0
                                                        HdlValueId: data_z3_low16
                                                    HdlStmIf
                                                        HdlOp: OR_LOG
                                                            list: ops
                                                                HdlOp: OR_LOG
                                                                    list: ops
                                                                        HdlOp: OR_LOG
                                                                            list: ops
                                                                                HdlOp: EQ
                                                                                    list: ops
                                                                                        HdlOp: INDEX
                                                                                            list: ops
                                                                                                HdlValueId: znDS1_sync
                                                                                                HdlValueInt: 2
                                                                                        HdlValueInt: 0
                                                                                HdlOp: EQ
                                                                                    list: ops
                                                                                        HdlOp: INDEX
                                                                                            list: ops
                                                                                                HdlValueId: znDS0_sync
                                                                                                HdlValueInt: 2
                                                                                        HdlValueInt: 0
                                                                        HdlOp: EQ
                                                                            list: ops
                                                                                HdlOp: INDEX
                                                                                    list: ops
                                                                                        HdlValueId: znUDS_sync
                                                                                        HdlValueInt: 2
                                                                                HdlValueInt: 0
                                                                HdlOp: EQ
                                                                    list: ops
                                                                        HdlOp: INDEX
                                                                            list: ops
                                                                                HdlValueId: znLDS_sync
                                                                                HdlValueInt: 2
                                                                        HdlValueInt: 0
                                                        HdlStmBlock: SEQ
                                                            list: body
                                                                HdlStmAssign
                                                                    HdlOp: CONCAT
                                                                        list: ops
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlValueId: z3addr
                                                                                    HdlOp: DOWNTO
                                                                                        list: ops
                                                                                            HdlValueInt: 15
                                                                                            HdlValueInt: 2
                                                                            HdlValueInt: 00
                                                                    HdlValueId: zaddr_regpart
                                                                HdlStmAssign
                                                                    HdlValueId: REGREAD
                                                                    HdlValueId: zorro_state
                                                        list: elifs
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmAssign
                                                HdlValueInt: 0
                                                HdlValueId: slaven
                HdlStmBlock: SEQ
                    list: body
                        HdlStmAssign
                            HdlValueInt: 0
                            HdlValueId: slaven
    DEL HdlStmCaseType@@CASE from zorro_state
    DEL HdlValueId@@zorro_state from zorro_state
    DEL HdlValueId@@Z2_WARMUP from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases


CommitId: 327b82476418d01e840f918063de0e65a3d4f9ee
WIP cfgin/cfgout sequencing; fix possible deadlock when switching resolutions; some blitter optimization; revision number
--- a/z2-minispartan/z2.v
+++ b/z2-minispartan/z2.v
@@ -946,7 +969,7 @@ always @(posedge z_sample_clk) begin
             'h70: data <= sd_error;
             //'h72: data <= sd_clkdiv;
             
-            default: data <= 'h0000;
+            default: data <= REVISION; //'h0000;
           endcase
         end        
       end else begin

ParseResult:
UPD HdlStmCase@@zorro_state to zorro_state
    INS HdlStmCaseType@@CASE to zorro_state
    INS HdlValueId@@zorro_state to zorro_state
    INS tuple@@ to cases
    INS HdlValueId@@Z2_PRE_CONFIGURED to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmIf@@ to 
    MOV HdlValueId@@dvid_reset to 
    HdlValueId: dvid_reset
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlStmAssign
                HdlValueInt: 10
                HdlValueId: dvid_reset_counter
            HdlStmAssign
                HdlValueId: RESET_DVID
                HdlValueId: zorro_state
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: z_confdone
            HdlStmAssign
                HdlValueId: Z2_CONFIGURING
                HdlValueId: zorro_state
    MOV HdlOp@@AND_LOG to 
    HdlOp: AND_LOG
        list: ops
            HdlOp: AND_LOG
                list: ops
                    HdlValueId: zaddr_autoconfig
                    HdlOp: EQ
                        list: ops
                            HdlValueId: zaddr_sync2
                            HdlValueId: autoconf_low
            HdlOp: NEG_LOG
                list: ops
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: znCFGIN_sync
                            HdlValueInt: 2
    UPD HdlOp@@AND_LOG to AND_LOG
        UPD HdlOp@@NEG_LOG to NEG_LOG
            UPD HdlOp@@INDEX to EQ
            MOV HdlOp@@INDEX to ops
            HdlOp: INDEX
                list: ops
                    HdlValueId: znCFGIN_sync
                    HdlValueInt: 2
            UPD HdlOp@@INDEX to INDEX
                UPD HdlValueId@@znCFGIN_sync to zFC2
                UPD HdlValueInt@@2 to 1
            DEL list@@ops from NEG_LOG
        MOV HdlOp@@AND_LOG to ops
        HdlOp: AND_LOG
            list: ops
                HdlValueId: zaddr_autoconfig
                HdlOp: EQ
                    list: ops
                        HdlValueId: zaddr_sync2
                        HdlValueId: autoconf_low
        UPD HdlOp@@AND_LOG to AND_LOG
            UPD HdlValueId@@zaddr_autoconfig to z2_snoop_reset_mode
            UPD HdlOp@@EQ to EQ
                DEL HdlValueId@@autoconf_low from ops
        DEL HdlOp@@NEG_LOG from ops
    DEL tuple@@ from elifs

UPD HdlStmIf@@ to 
    INS list@@elifs to 
    INS tuple@@ to elifs
    tuple
        HdlOp: EQ
            list: ops
                HdlOp: INDEX
                    list: ops
                        HdlValueId: znCFGIN_sync
                        HdlValueInt: 1
                HdlValueInt: 1
        HdlStmBlock: SEQ
            list: body
                HdlStmAssign
                    HdlValueId: RESET
                    HdlValueId: zorro_state
                HdlStmAssign
                    HdlValueInt: 0
                    HdlValueId: z2_snoop_reset_mode
    INS tuple@@ to elifs
    INS HdlValueId@@z2_addr_valid to 

UPD HdlStmIf@@ to 
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlStmIf
                HdlValueId: dvid_reset
                HdlStmBlock: SEQ
                    list: body
                        HdlStmAssign
                            HdlValueInt: 10
                            HdlValueId: dvid_reset_counter
                        HdlStmAssign
                            HdlValueId: RESET_DVID
                            HdlValueId: zorro_state
                list: elifs
                    tuple
                        HdlOp: AND_LOG
                            list: ops
                                HdlOp: AND_LOG
                                    list: ops
                                        HdlValueId: zaddr_autoconfig
                                        HdlOp: EQ
                                            list: ops
                                                HdlValueId: zaddr_sync2
                                                HdlValueId: autoconf_low
                                HdlOp: NEG_LOG
                                    list: ops
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: znCFGIN_sync
                                                HdlValueInt: 2
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmAssign
                                    HdlValueInt: 0
                                    HdlValueId: z_confdone
                                HdlStmAssign
                                    HdlValueId: Z2_CONFIGURING
                                    HdlValueId: zorro_state
                    tuple
                        HdlOp: AND_LOG
                            list: ops
                                HdlValueId: zorro_read
                                HdlValueId: zaddr_in_ram
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmAssign
                                    HdlOp: SRL
                                        list: ops
                                            HdlOp: SUB
                                                list: ops
                                                    HdlValueId: zaddr_sync2
                                                    HdlValueId: ram_low
                                            HdlValueInt: 1
                                    HdlValueId: last_addr
                                HdlStmAssign
                                    HdlValueInt: ffff
                                    HdlValueId: data
                                HdlStmAssign
                                    HdlValueInt: 0
                                    HdlValueId: read_counter
                                HdlStmAssign
                                    HdlValueInt: 1
                                    HdlValueId: slaven
                                HdlStmAssign
                                    HdlValueInt: 1
                                    HdlValueId: dataout_enable
                                HdlStmAssign
                                    HdlValueInt: 1
                                    HdlValueId: dataout
                                HdlStmAssign
                                    HdlValueId: WAIT_READ3
                                    HdlValueId: zorro_state
                    tuple
                        HdlOp: AND_LOG
                            list: ops
                                HdlValueId: zorro_write
                                HdlValueId: zaddr_in_ram
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmAssign
                                    HdlOp: SRL
                                        list: ops
                                            HdlOp: SUB
                                                list: ops
                                                    HdlValueId: zaddr_sync2
                                                    HdlValueId: ram_low
                                            HdlValueInt: 1
                                    HdlValueId: last_addr
                                HdlStmAssign
                                    HdlValueId: WAIT_WRITE
                                    HdlValueId: zorro_state
                    tuple
                        HdlOp: AND_LOG
                            list: ops
                                HdlValueId: zorro_write
                                HdlValueId: zaddr_in_reg
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmAssign
                                    HdlOp: INDEX
                                        list: ops
                                            HdlValueId: z2_mapped_addr
                                            HdlOp: DOWNTO
                                                list: ops
                                                    HdlValueInt: 15
                                                    HdlValueInt: 0
                                    HdlValueId: zaddr_regpart
                                HdlStmAssign
                                    HdlValueId: WAIT_REGWRITE
                                    HdlValueId: zorro_state
                    tuple
                        HdlOp: AND_LOG
                            list: ops
                                HdlValueId: zorro_read
                                HdlValueId: zaddr_in_reg
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmAssign
                                    HdlValueInt: 1
                                    HdlValueId: dataout_enable
                                HdlStmAssign
                                    HdlValueInt: 1
                                    HdlValueId: dataout
                                HdlStmAssign
                                    HdlValueInt: 1
                                    HdlValueId: slaven
                                HdlStmCase: {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops':}]} 
                                    HdlStmCaseType: CASE
                                    HdlOp: INDEX
                                        list: ops
                                            HdlValueId: zaddr_sync2
                                            HdlOp: DOWNTO
                                                list: ops
                                                    HdlValueInt: 7
                                                    HdlValueInt: 0
                                    list: cases
                                        tuple
                                            HdlValueInt: 20
                                            HdlStmAssign
                                                HdlValueId: blitter_x1
                                                HdlValueId: data
                                        tuple
                                            HdlValueInt: 22
                                            HdlStmAssign
                                                HdlValueId: blitter_y1
                                                HdlValueId: data
                                        tuple
                                            HdlValueInt: 24
                                            HdlStmAssign
                                                HdlValueId: blitter_x2
                                                HdlValueId: data
                                        tuple
                                            HdlValueInt: 26
                                            HdlStmAssign
                                                HdlValueId: blitter_y2
                                                HdlValueId: data
                                        tuple
                                            HdlValueInt: 28
                                            HdlStmAssign
                                                HdlValueId: blitter_rgb
                                                HdlValueId: data
                                        tuple
                                            HdlValueInt: 2a
                                            HdlStmAssign
                                                HdlValueId: blitter_enable
                                                HdlValueId: data
                                        tuple
                                            HdlValueInt: 60
                                            HdlStmAssign
                                                HdlOp: CONCAT
                                                    list: ops
                                                        HdlValueId: sd_busy
                                                        HdlValueInt: 00
                                                HdlValueId: data
                                        tuple
                                            HdlValueInt: 62
                                            HdlStmAssign
                                                HdlOp: CONCAT
                                                    list: ops
                                                        HdlValueId: sd_read
                                                        HdlValueInt: 00
                                                HdlValueId: data
                                        tuple
                                            HdlValueInt: 64
                                            HdlStmAssign
                                                HdlOp: CONCAT
                                                    list: ops
                                                        HdlValueId: sd_write
                                                        HdlValueInt: 00
                                                HdlValueId: data
                                        tuple
                                            HdlValueInt: 66
                                            HdlStmAssign
                                                HdlOp: CONCAT
                                                    list: ops
                                                        HdlValueId: sd_handshake_out
                                                        HdlValueInt: 00
                                                HdlValueId: data
                                        tuple
                                            HdlValueInt: 68
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: sd_addr_in
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 31
                                                                HdlValueInt: 16
                                                HdlValueId: data
                                        tuple
                                            HdlValueInt: 6a
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: sd_addr_in
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 15
                                                                HdlValueInt: 0
                                                HdlValueId: data
                                        tuple
                                            HdlValueInt: 6c
                                            HdlStmAssign
                                                HdlOp: CONCAT
                                                    list: ops
                                                        HdlValueId: sd_data_in
                                                        HdlValueInt: 00
                                                HdlValueId: data
                                        tuple
                                            HdlValueInt: 6e
                                            HdlStmAssign
                                                HdlOp: CONCAT
                                                    list: ops
                                                        HdlValueId: sd_data_out
                                                        HdlValueInt: 00
                                                HdlValueId: data
                                        tuple
                                            HdlValueInt: 70
                                            HdlStmAssign
                                                HdlValueId: sd_error
                                                HdlValueId: data
                                    HdlStmAssign: default
                                        HdlValueInt: 0000
                                        HdlValueId: data
    DEL HdlValueId@@z2_addr_valid from 
    DEL list@@elifs from 

UPD HdlStmCase@@zorro_state to zorro_state
    UPD HdlStmBlock@@SEQ to SEQ
        UPD list@@body to elifs
        MOV list@@body to SEQ
        list: body
            HdlStmIf
                HdlValueId: dvid_reset
                HdlStmBlock: SEQ
                    list: body
                        HdlStmAssign
                            HdlValueInt: 10
                            HdlValueId: dvid_reset_counter
                        HdlStmAssign
                            HdlValueId: RESET_DVID
                            HdlValueId: zorro_state
                list: elifs
                    tuple
                        HdlOp: EQ
                            list: ops
                                HdlOp: INDEX
                                    list: ops
                                        HdlValueId: znFCS_sync
                                        HdlValueInt: 2
                                HdlValueInt: 0
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmIf
                                    HdlValueId: z3addr_zero
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmAssign
                                                HdlValueInt: 0
                                                HdlValueId: z3_confdone
                                            HdlStmAssign
                                                HdlValueId: RESET
                                                HdlValueId: zorro_state
                                    list: elifs
                                        tuple
                                            HdlOp: AND_LOG
                                                list: ops
                                                    HdlValueId: z3addr_in_ram
                                                    HdlValueId: zorro_write
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlStmAssign
                                                        HdlValueInt: 1
                                                        HdlValueId: slaven
                                                    HdlStmIf
                                                        HdlOp: OR_LOG
                                                            list: ops
                                                                HdlOp: OR_LOG
                                                                    list: ops
                                                                        HdlOp: OR_LOG
                                                                            list: ops
                                                                                HdlOp: EQ
                                                                                    list: ops
                                                                                        HdlOp: INDEX
                                                                                            list: ops
                                                                                                HdlValueId: znUDS_sync
                                                                                                HdlValueInt: 2
                                                                                        HdlValueInt: 0
                                                                                HdlOp: EQ
                                                                                    list: ops
                                                                                        HdlOp: INDEX
                                                                                            list: ops
                                                                                                HdlValueId: znLDS_sync
                                                                                                HdlValueInt: 2
                                                                                        HdlValueInt: 0
                                                                        HdlOp: EQ
                                                                            list: ops
                                                                                HdlOp: INDEX
                                                                                    list: ops
                                                                                        HdlValueId: znDS1_sync
                                                                                        HdlValueInt: 2
                                                                                HdlValueInt: 0
                                                                HdlOp: EQ
                                                                    list: ops
                                                                        HdlOp: INDEX
                                                                            list: ops
                                                                                HdlValueId: znDS0_sync
                                                                                HdlValueInt: 2
                                                                        HdlValueInt: 0
                                                        HdlStmBlock: SEQ
                                                            list: body
                                                                HdlStmAssign
                                                                    HdlValueId: Z3_WRITE_UPPER
                                                                    HdlValueId: zorro_state
                                                        list: elifs
                                        tuple
                                            HdlOp: AND_LOG
                                                list: ops
                                                    HdlValueId: z3addr_in_ram
                                                    HdlValueId: zorro_read
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlStmAssign
                                                        HdlValueInt: 1
                                                        HdlValueId: slaven
                                                    HdlStmAssign
                                                        HdlValueId: Z3_READ_UPPER
                                                        HdlValueId: zorro_state
                                        tuple
                                            HdlOp: AND_LOG
                                                list: ops
                                                    HdlValueId: zorro_write
                                                    HdlValueId: z3addr_in_reg
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlStmAssign
                                                        HdlValueInt: 1
                                                        HdlValueId: slaven
                                                    HdlStmIf
                                                        HdlOp: EQ
                                                            list: ops
                                                                HdlOp: INDEX
                                                                    list: ops
                                                                        HdlValueId: znDS1_sync
                                                                        HdlValueInt: 2
                                                                HdlValueInt: 0
                                                        HdlStmBlock: SEQ
                                                            list: body
                                                                HdlStmAssign
                                                                    HdlValueId: data_in_z3_low16
                                                                    HdlValueId: regdata_in
                                                                HdlStmAssign
                                                                    HdlOp: OR
                                                                        list: ops
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlValueId: z3addr
                                                                                    HdlOp: DOWNTO
                                                                                        list: ops
                                                                                            HdlValueInt: 15
                                                                                            HdlValueInt: 0
                                                                            HdlValueInt: 2
                                                                    HdlValueId: zaddr_regpart
                                                                HdlStmAssign
                                                                    HdlValueId: REGWRITE
                                                                    HdlValueId: zorro_state
                                                        list: elifs
                                                            tuple
                                                                HdlOp: EQ
                                                                    list: ops
                                                                        HdlOp: INDEX
                                                                            list: ops
                                                                                HdlValueId: znUDS_sync
                                                                                HdlValueInt: 2
                                                                        HdlValueInt: 0
                                                                HdlStmBlock: SEQ
                                                                    list: body
                                                                        HdlStmAssign
                                                                            HdlValueId: zdata_in_sync
                                                                            HdlValueId: regdata_in
                                                                        HdlStmAssign
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlValueId: z3addr
                                                                                    HdlOp: DOWNTO
                                                                                        list: ops
                                                                                            HdlValueInt: 15
                                                                                            HdlValueInt: 0
                                                                            HdlValueId: zaddr_regpart
                                                                        HdlStmAssign
                                                                            HdlValueId: REGWRITE
                                                                            HdlValueId: zorro_state
                                        tuple
                                            HdlOp: AND_LOG
                                                list: ops
                                                    HdlValueId: zorro_read
                                                    HdlValueId: z3addr_in_reg
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlStmAssign
                                                        HdlValueInt: 1
                                                        HdlValueId: slaven
                                                    HdlStmAssign
                                                        HdlValueInt: 0
                                                        HdlValueId: data_z3_hi16
                                                    HdlStmAssign
                                                        HdlValueInt: 0
                                                        HdlValueId: data_z3_low16
                                                    HdlStmIf
                                                        HdlOp: OR_LOG
                                                            list: ops
                                                                HdlOp: OR_LOG
                                                                    list: ops
                                                                        HdlOp: OR_LOG
                                                                            list: ops
                                                                                HdlOp: EQ
                                                                                    list: ops
                                                                                        HdlOp: INDEX
                                                                                            list: ops
                                                                                                HdlValueId: znDS1_sync
                                                                                                HdlValueInt: 2
                                                                                        HdlValueInt: 0
                                                                                HdlOp: EQ
                                                                                    list: ops
                                                                                        HdlOp: INDEX
                                                                                            list: ops
                                                                                                HdlValueId: znDS0_sync
                                                                                                HdlValueInt: 2
                                                                                        HdlValueInt: 0
                                                                        HdlOp: EQ
                                                                            list: ops
                                                                                HdlOp: INDEX
                                                                                    list: ops
                                                                                        HdlValueId: znUDS_sync
                                                                                        HdlValueInt: 2
                                                                                HdlValueInt: 0
                                                                HdlOp: EQ
                                                                    list: ops
                                                                        HdlOp: INDEX
                                                                            list: ops
                                                                                HdlValueId: znLDS_sync
                                                                                HdlValueInt: 2
                                                                        HdlValueInt: 0
                                                        HdlStmBlock: SEQ
                                                            list: body
                                                                HdlStmAssign
                                                                    HdlOp: CONCAT
                                                                        list: ops
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlValueId: z3addr
                                                                                    HdlOp: DOWNTO
                                                                                        list: ops
                                                                                            HdlValueInt: 15
                                                                                            HdlValueInt: 2
                                                                            HdlValueInt: 00
                                                                    HdlValueId: zaddr_regpart
                                                                HdlStmAssign
                                                                    HdlValueId: REGREAD
                                                                    HdlValueId: zorro_state
                                                        list: elifs
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmAssign
                                                HdlValueInt: 0
                                                HdlValueId: slaven
                HdlStmBlock: SEQ
                    list: body
                        HdlStmAssign
                            HdlValueInt: 0
                            HdlValueId: slaven
    DEL HdlStmCaseType@@CASE from zorro_state
    DEL HdlValueId@@zorro_state from zorro_state
    DEL HdlValueId@@Z2_WARMUP from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases


CommitId: 327b82476418d01e840f918063de0e65a3d4f9ee
WIP cfgin/cfgout sequencing; fix possible deadlock when switching resolutions; some blitter optimization; revision number
--- a/z2-minispartan/z2.v
+++ b/z2-minispartan/z2.v
@@ -1045,19 +1068,20 @@ always @(posedge z_sample_clk) begin
     // ----------------------------------------------------------------------------------
     // ----------------------------------------------------------------------------------
     Z3_IDLE: begin
-    
       if (dvid_reset) begin
         dvid_reset_counter <= 10;
         zorro_state <= RESET_DVID;
       end else
-    
+      if (znCFGIN_sync[1]==1 || z3addr_zero) begin
+        zorro_state <= RESET;
+      end else
       if (znFCS_sync[2]==0) begin
         // falling edge of /FCS
-        if (z3addr_zero) begin
+        //if (z3addr_autoconfig && z3addr=='hff000000 && !znCFGIN_sync[2]) begin
           // reset detection
-          z3_confdone <= 0;
-          zorro_state <= RESET;
-        end else if (z3addr_in_ram && zorro_write) begin
+          //z3_confdone <= 0;
+          //zorro_state <= RESET;
+        if (z3addr_in_ram && zorro_write) begin
           slaven <= 1;
           if ((znUDS_sync[2]==0) || (znLDS_sync[2]==0) || (znDS1_sync[2]==0) || (znDS0_sync[2]==0)) begin
             zorro_state <= Z3_WRITE_UPPER;

ParseResult:
UPD HdlStmCase@@zorro_state to zorro_state
    INS HdlStmCaseType@@CASE to zorro_state
    INS HdlValueId@@zorro_state to zorro_state
    INS tuple@@ to cases
    INS HdlValueId@@Z2_PRE_CONFIGURED to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmIf@@ to 
    UPD list@@elifs to body
    MOV list@@elifs to 
    list: elifs
        tuple
            HdlOp: EQ
                list: ops
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: znFCS_sync
                            HdlValueInt: 2
                    HdlValueInt: 0
            HdlStmBlock: SEQ
                list: body
                    HdlStmIf
                        HdlValueId: z3addr_zero
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmAssign
                                    HdlValueInt: 0
                                    HdlValueId: z3_confdone
                                HdlStmAssign
                                    HdlValueId: RESET
                                    HdlValueId: zorro_state
                        list: elifs
                            tuple
                                HdlOp: AND_LOG
                                    list: ops
                                        HdlValueId: z3addr_in_ram
                                        HdlValueId: zorro_write
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlStmAssign
                                            HdlValueInt: 1
                                            HdlValueId: slaven
                                        HdlStmIf
                                            HdlOp: OR_LOG
                                                list: ops
                                                    HdlOp: OR_LOG
                                                        list: ops
                                                            HdlOp: OR_LOG
                                                                list: ops
                                                                    HdlOp: EQ
                                                                        list: ops
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlValueId: znUDS_sync
                                                                                    HdlValueInt: 2
                                                                            HdlValueInt: 0
                                                                    HdlOp: EQ
                                                                        list: ops
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlValueId: znLDS_sync
                                                                                    HdlValueInt: 2
                                                                            HdlValueInt: 0
                                                            HdlOp: EQ
                                                                list: ops
                                                                    HdlOp: INDEX
                                                                        list: ops
                                                                            HdlValueId: znDS1_sync
                                                                            HdlValueInt: 2
                                                                    HdlValueInt: 0
                                                    HdlOp: EQ
                                                        list: ops
                                                            HdlOp: INDEX
                                                                list: ops
                                                                    HdlValueId: znDS0_sync
                                                                    HdlValueInt: 2
                                                            HdlValueInt: 0
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlStmAssign
                                                        HdlValueId: Z3_WRITE_UPPER
                                                        HdlValueId: zorro_state
                                            list: elifs
                            tuple
                                HdlOp: AND_LOG
                                    list: ops
                                        HdlValueId: z3addr_in_ram
                                        HdlValueId: zorro_read
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlStmAssign
                                            HdlValueInt: 1
                                            HdlValueId: slaven
                                        HdlStmAssign
                                            HdlValueId: Z3_READ_UPPER
                                            HdlValueId: zorro_state
                            tuple
                                HdlOp: AND_LOG
                                    list: ops
                                        HdlValueId: zorro_write
                                        HdlValueId: z3addr_in_reg
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlStmAssign
                                            HdlValueInt: 1
                                            HdlValueId: slaven
                                        HdlStmIf
                                            HdlOp: EQ
                                                list: ops
                                                    HdlOp: INDEX
                                                        list: ops
                                                            HdlValueId: znDS1_sync
                                                            HdlValueInt: 2
                                                    HdlValueInt: 0
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlStmAssign
                                                        HdlValueId: data_in_z3_low16
                                                        HdlValueId: regdata_in
                                                    HdlStmAssign
                                                        HdlOp: OR
                                                            list: ops
                                                                HdlOp: INDEX
                                                                    list: ops
                                                                        HdlValueId: z3addr
                                                                        HdlOp: DOWNTO
                                                                            list: ops
                                                                                HdlValueInt: 15
                                                                                HdlValueInt: 0
                                                                HdlValueInt: 2
                                                        HdlValueId: zaddr_regpart
                                                    HdlStmAssign
                                                        HdlValueId: REGWRITE
                                                        HdlValueId: zorro_state
                                            list: elifs
                                                tuple
                                                    HdlOp: EQ
                                                        list: ops
                                                            HdlOp: INDEX
                                                                list: ops
                                                                    HdlValueId: znUDS_sync
                                                                    HdlValueInt: 2
                                                            HdlValueInt: 0
                                                    HdlStmBlock: SEQ
                                                        list: body
                                                            HdlStmAssign
                                                                HdlValueId: zdata_in_sync
                                                                HdlValueId: regdata_in
                                                            HdlStmAssign
                                                                HdlOp: INDEX
                                                                    list: ops
                                                                        HdlValueId: z3addr
                                                                        HdlOp: DOWNTO
                                                                            list: ops
                                                                                HdlValueInt: 15
                                                                                HdlValueInt: 0
                                                                HdlValueId: zaddr_regpart
                                                            HdlStmAssign
                                                                HdlValueId: REGWRITE
                                                                HdlValueId: zorro_state
                            tuple
                                HdlOp: AND_LOG
                                    list: ops
                                        HdlValueId: zorro_read
                                        HdlValueId: z3addr_in_reg
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlStmAssign
                                            HdlValueInt: 1
                                            HdlValueId: slaven
                                        HdlStmAssign
                                            HdlValueInt: 0
                                            HdlValueId: data_z3_hi16
                                        HdlStmAssign
                                            HdlValueInt: 0
                                            HdlValueId: data_z3_low16
                                        HdlStmIf
                                            HdlOp: OR_LOG
                                                list: ops
                                                    HdlOp: OR_LOG
                                                        list: ops
                                                            HdlOp: OR_LOG
                                                                list: ops
                                                                    HdlOp: EQ
                                                                        list: ops
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlValueId: znDS1_sync
                                                                                    HdlValueInt: 2
                                                                            HdlValueInt: 0
                                                                    HdlOp: EQ
                                                                        list: ops
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlValueId: znDS0_sync
                                                                                    HdlValueInt: 2
                                                                            HdlValueInt: 0
                                                            HdlOp: EQ
                                                                list: ops
                                                                    HdlOp: INDEX
                                                                        list: ops
                                                                            HdlValueId: znUDS_sync
                                                                            HdlValueInt: 2
                                                                    HdlValueInt: 0
                                                    HdlOp: EQ
                                                        list: ops
                                                            HdlOp: INDEX
                                                                list: ops
                                                                    HdlValueId: znLDS_sync
                                                                    HdlValueInt: 2
                                                            HdlValueInt: 0
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlStmAssign
                                                        HdlOp: CONCAT
                                                            list: ops
                                                                HdlOp: INDEX
                                                                    list: ops
                                                                        HdlValueId: z3addr
                                                                        HdlOp: DOWNTO
                                                                            list: ops
                                                                                HdlValueInt: 15
                                                                                HdlValueInt: 2
                                                                HdlValueInt: 00
                                                        HdlValueId: zaddr_regpart
                                                    HdlStmAssign
                                                        HdlValueId: REGREAD
                                                        HdlValueId: zorro_state
                                            list: elifs
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmAssign
                                    HdlValueInt: 0
                                    HdlValueId: slaven
    UPD HdlStmBlock@@SEQ to SEQ
        UPD list@@body to elifs
        MOV list@@body to SEQ
        list: body
            HdlStmIf
                HdlValueId: z3addr_zero
                HdlStmBlock: SEQ
                    list: body
                        HdlStmAssign
                            HdlValueInt: 0
                            HdlValueId: z3_confdone
                        HdlStmAssign
                            HdlValueId: RESET
                            HdlValueId: zorro_state
                list: elifs
                    tuple
                        HdlOp: AND_LOG
                            list: ops
                                HdlValueId: z3addr_in_ram
                                HdlValueId: zorro_write
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmAssign
                                    HdlValueInt: 1
                                    HdlValueId: slaven
                                HdlStmIf
                                    HdlOp: OR_LOG
                                        list: ops
                                            HdlOp: OR_LOG
                                                list: ops
                                                    HdlOp: OR_LOG
                                                        list: ops
                                                            HdlOp: EQ
                                                                list: ops
                                                                    HdlOp: INDEX
                                                                        list: ops
                                                                            HdlValueId: znUDS_sync
                                                                            HdlValueInt: 2
                                                                    HdlValueInt: 0
                                                            HdlOp: EQ
                                                                list: ops
                                                                    HdlOp: INDEX
                                                                        list: ops
                                                                            HdlValueId: znLDS_sync
                                                                            HdlValueInt: 2
                                                                    HdlValueInt: 0
                                                    HdlOp: EQ
                                                        list: ops
                                                            HdlOp: INDEX
                                                                list: ops
                                                                    HdlValueId: znDS1_sync
                                                                    HdlValueInt: 2
                                                            HdlValueInt: 0
                                            HdlOp: EQ
                                                list: ops
                                                    HdlOp: INDEX
                                                        list: ops
                                                            HdlValueId: znDS0_sync
                                                            HdlValueInt: 2
                                                    HdlValueInt: 0
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmAssign
                                                HdlValueId: Z3_WRITE_UPPER
                                                HdlValueId: zorro_state
                                    list: elifs
                    tuple
                        HdlOp: AND_LOG
                            list: ops
                                HdlValueId: z3addr_in_ram
                                HdlValueId: zorro_read
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmAssign
                                    HdlValueInt: 1
                                    HdlValueId: slaven
                                HdlStmAssign
                                    HdlValueId: Z3_READ_UPPER
                                    HdlValueId: zorro_state
                    tuple
                        HdlOp: AND_LOG
                            list: ops
                                HdlValueId: zorro_write
                                HdlValueId: z3addr_in_reg
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmAssign
                                    HdlValueInt: 1
                                    HdlValueId: slaven
                                HdlStmIf
                                    HdlOp: EQ
                                        list: ops
                                            HdlOp: INDEX
                                                list: ops
                                                    HdlValueId: znDS1_sync
                                                    HdlValueInt: 2
                                            HdlValueInt: 0
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmAssign
                                                HdlValueId: data_in_z3_low16
                                                HdlValueId: regdata_in
                                            HdlStmAssign
                                                HdlOp: OR
                                                    list: ops
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlValueId: z3addr
                                                                HdlOp: DOWNTO
                                                                    list: ops
                                                                        HdlValueInt: 15
                                                                        HdlValueInt: 0
                                                        HdlValueInt: 2
                                                HdlValueId: zaddr_regpart
                                            HdlStmAssign
                                                HdlValueId: REGWRITE
                                                HdlValueId: zorro_state
                                    list: elifs
                                        tuple
                                            HdlOp: EQ
                                                list: ops
                                                    HdlOp: INDEX
                                                        list: ops
                                                            HdlValueId: znUDS_sync
                                                            HdlValueInt: 2
                                                    HdlValueInt: 0
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlStmAssign
                                                        HdlValueId: zdata_in_sync
                                                        HdlValueId: regdata_in
                                                    HdlStmAssign
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlValueId: z3addr
                                                                HdlOp: DOWNTO
                                                                    list: ops
                                                                        HdlValueInt: 15
                                                                        HdlValueInt: 0
                                                        HdlValueId: zaddr_regpart
                                                    HdlStmAssign
                                                        HdlValueId: REGWRITE
                                                        HdlValueId: zorro_state
                    tuple
                        HdlOp: AND_LOG
                            list: ops
                                HdlValueId: zorro_read
                                HdlValueId: z3addr_in_reg
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmAssign
                                    HdlValueInt: 1
                                    HdlValueId: slaven
                                HdlStmAssign
                                    HdlValueInt: 0
                                    HdlValueId: data_z3_hi16
                                HdlStmAssign
                                    HdlValueInt: 0
                                    HdlValueId: data_z3_low16
                                HdlStmIf
                                    HdlOp: OR_LOG
                                        list: ops
                                            HdlOp: OR_LOG
                                                list: ops
                                                    HdlOp: OR_LOG
                                                        list: ops
                                                            HdlOp: EQ
                                                                list: ops
                                                                    HdlOp: INDEX
                                                                        list: ops
                                                                            HdlValueId: znDS1_sync
                                                                            HdlValueInt: 2
                                                                    HdlValueInt: 0
                                                            HdlOp: EQ
                                                                list: ops
                                                                    HdlOp: INDEX
                                                                        list: ops
                                                                            HdlValueId: znDS0_sync
                                                                            HdlValueInt: 2
                                                                    HdlValueInt: 0
                                                    HdlOp: EQ
                                                        list: ops
                                                            HdlOp: INDEX
                                                                list: ops
                                                                    HdlValueId: znUDS_sync
                                                                    HdlValueInt: 2
                                                            HdlValueInt: 0
                                            HdlOp: EQ
                                                list: ops
                                                    HdlOp: INDEX
                                                        list: ops
                                                            HdlValueId: znLDS_sync
                                                            HdlValueInt: 2
                                                    HdlValueInt: 0
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmAssign
                                                HdlOp: CONCAT
                                                    list: ops
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlValueId: z3addr
                                                                HdlOp: DOWNTO
                                                                    list: ops
                                                                        HdlValueInt: 15
                                                                        HdlValueInt: 2
                                                        HdlValueInt: 00
                                                HdlValueId: zaddr_regpart
                                            HdlStmAssign
                                                HdlValueId: REGREAD
                                                HdlValueId: zorro_state
                                    list: elifs
                HdlStmBlock: SEQ
                    list: body
                        HdlStmAssign
                            HdlValueInt: 0
                            HdlValueId: slaven
    MOV tuple@@ to elifs
    tuple
        HdlOp: EQ
            list: ops
                HdlOp: INDEX
                    list: ops
                        HdlValueId: znFCS_sync
                        HdlValueInt: 2
                HdlValueInt: 0
        HdlStmBlock: SEQ
            list: body
                HdlStmIf
                    HdlValueId: z3addr_zero
                    HdlStmBlock: SEQ
                        list: body
                            HdlStmAssign
                                HdlValueInt: 0
                                HdlValueId: z3_confdone
                            HdlStmAssign
                                HdlValueId: RESET
                                HdlValueId: zorro_state
                    list: elifs
                        tuple
                            HdlOp: AND_LOG
                                list: ops
                                    HdlValueId: z3addr_in_ram
                                    HdlValueId: zorro_write
                            HdlStmBlock: SEQ
                                list: body
                                    HdlStmAssign
                                        HdlValueInt: 1
                                        HdlValueId: slaven
                                    HdlStmIf
                                        HdlOp: OR_LOG
                                            list: ops
                                                HdlOp: OR_LOG
                                                    list: ops
                                                        HdlOp: OR_LOG
                                                            list: ops
                                                                HdlOp: EQ
                                                                    list: ops
                                                                        HdlOp: INDEX
                                                                            list: ops
                                                                                HdlValueId: znUDS_sync
                                                                                HdlValueInt: 2
                                                                        HdlValueInt: 0
                                                                HdlOp: EQ
                                                                    list: ops
                                                                        HdlOp: INDEX
                                                                            list: ops
                                                                                HdlValueId: znLDS_sync
                                                                                HdlValueInt: 2
                                                                        HdlValueInt: 0
                                                        HdlOp: EQ
                                                            list: ops
                                                                HdlOp: INDEX
                                                                    list: ops
                                                                        HdlValueId: znDS1_sync
                                                                        HdlValueInt: 2
                                                                HdlValueInt: 0
                                                HdlOp: EQ
                                                    list: ops
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlValueId: znDS0_sync
                                                                HdlValueInt: 2
                                                        HdlValueInt: 0
                                        HdlStmBlock: SEQ
                                            list: body
                                                HdlStmAssign
                                                    HdlValueId: Z3_WRITE_UPPER
                                                    HdlValueId: zorro_state
                                        list: elifs
                        tuple
                            HdlOp: AND_LOG
                                list: ops
                                    HdlValueId: z3addr_in_ram
                                    HdlValueId: zorro_read
                            HdlStmBlock: SEQ
                                list: body
                                    HdlStmAssign
                                        HdlValueInt: 1
                                        HdlValueId: slaven
                                    HdlStmAssign
                                        HdlValueId: Z3_READ_UPPER
                                        HdlValueId: zorro_state
                        tuple
                            HdlOp: AND_LOG
                                list: ops
                                    HdlValueId: zorro_write
                                    HdlValueId: z3addr_in_reg
                            HdlStmBlock: SEQ
                                list: body
                                    HdlStmAssign
                                        HdlValueInt: 1
                                        HdlValueId: slaven
                                    HdlStmIf
                                        HdlOp: EQ
                                            list: ops
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: znDS1_sync
                                                        HdlValueInt: 2
                                                HdlValueInt: 0
                                        HdlStmBlock: SEQ
                                            list: body
                                                HdlStmAssign
                                                    HdlValueId: data_in_z3_low16
                                                    HdlValueId: regdata_in
                                                HdlStmAssign
                                                    HdlOp: OR
                                                        list: ops
                                                            HdlOp: INDEX
                                                                list: ops
                                                                    HdlValueId: z3addr
                                                                    HdlOp: DOWNTO
                                                                        list: ops
                                                                            HdlValueInt: 15
                                                                            HdlValueInt: 0
                                                            HdlValueInt: 2
                                                    HdlValueId: zaddr_regpart
                                                HdlStmAssign
                                                    HdlValueId: REGWRITE
                                                    HdlValueId: zorro_state
                                        list: elifs
                                            tuple
                                                HdlOp: EQ
                                                    list: ops
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlValueId: znUDS_sync
                                                                HdlValueInt: 2
                                                        HdlValueInt: 0
                                                HdlStmBlock: SEQ
                                                    list: body
                                                        HdlStmAssign
                                                            HdlValueId: zdata_in_sync
                                                            HdlValueId: regdata_in
                                                        HdlStmAssign
                                                            HdlOp: INDEX
                                                                list: ops
                                                                    HdlValueId: z3addr
                                                                    HdlOp: DOWNTO
                                                                        list: ops
                                                                            HdlValueInt: 15
                                                                            HdlValueInt: 0
                                                            HdlValueId: zaddr_regpart
                                                        HdlStmAssign
                                                            HdlValueId: REGWRITE
                                                            HdlValueId: zorro_state
                        tuple
                            HdlOp: AND_LOG
                                list: ops
                                    HdlValueId: zorro_read
                                    HdlValueId: z3addr_in_reg
                            HdlStmBlock: SEQ
                                list: body
                                    HdlStmAssign
                                        HdlValueInt: 1
                                        HdlValueId: slaven
                                    HdlStmAssign
                                        HdlValueInt: 0
                                        HdlValueId: data_z3_hi16
                                    HdlStmAssign
                                        HdlValueInt: 0
                                        HdlValueId: data_z3_low16
                                    HdlStmIf
                                        HdlOp: OR_LOG
                                            list: ops
                                                HdlOp: OR_LOG
                                                    list: ops
                                                        HdlOp: OR_LOG
                                                            list: ops
                                                                HdlOp: EQ
                                                                    list: ops
                                                                        HdlOp: INDEX
                                                                            list: ops
                                                                                HdlValueId: znDS1_sync
                                                                                HdlValueInt: 2
                                                                        HdlValueInt: 0
                                                                HdlOp: EQ
                                                                    list: ops
                                                                        HdlOp: INDEX
                                                                            list: ops
                                                                                HdlValueId: znDS0_sync
                                                                                HdlValueInt: 2
                                                                        HdlValueInt: 0
                                                        HdlOp: EQ
                                                            list: ops
                                                                HdlOp: INDEX
                                                                    list: ops
                                                                        HdlValueId: znUDS_sync
                                                                        HdlValueInt: 2
                                                                HdlValueInt: 0
                                                HdlOp: EQ
                                                    list: ops
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlValueId: znLDS_sync
                                                                HdlValueInt: 2
                                                        HdlValueInt: 0
                                        HdlStmBlock: SEQ
                                            list: body
                                                HdlStmAssign
                                                    HdlOp: CONCAT
                                                        list: ops
                                                            HdlOp: INDEX
                                                                list: ops
                                                                    HdlValueId: z3addr
                                                                    HdlOp: DOWNTO
                                                                        list: ops
                                                                            HdlValueInt: 15
                                                                            HdlValueInt: 2
                                                            HdlValueInt: 00
                                                    HdlValueId: zaddr_regpart
                                                HdlStmAssign
                                                    HdlValueId: REGREAD
                                                    HdlValueId: zorro_state
                                        list: elifs
                    HdlStmBlock: SEQ
                        list: body
                            HdlStmAssign
                                HdlValueInt: 0
                                HdlValueId: slaven

MOV HdlStmAssign@@ to body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: z3_confdone

MOV HdlStmIf@@ to body
HdlStmIf
    HdlValueId: dvid_reset
    HdlStmBlock: SEQ
        list: body
            HdlStmAssign
                HdlValueInt: 10
                HdlValueId: dvid_reset_counter
            HdlStmAssign
                HdlValueId: RESET_DVID
                HdlValueId: zorro_state
    list: elifs
        tuple
            HdlOp: EQ
                list: ops
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: znFCS_sync
                            HdlValueInt: 2
                    HdlValueInt: 0
            HdlStmBlock: SEQ
                list: body
                    HdlStmIf
                        HdlValueId: z3addr_zero
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmAssign
                                    HdlValueInt: 0
                                    HdlValueId: z3_confdone
                                HdlStmAssign
                                    HdlValueId: RESET
                                    HdlValueId: zorro_state
                        list: elifs
                            tuple
                                HdlOp: AND_LOG
                                    list: ops
                                        HdlValueId: z3addr_in_ram
                                        HdlValueId: zorro_write
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlStmAssign
                                            HdlValueInt: 1
                                            HdlValueId: slaven
                                        HdlStmIf
                                            HdlOp: OR_LOG
                                                list: ops
                                                    HdlOp: OR_LOG
                                                        list: ops
                                                            HdlOp: OR_LOG
                                                                list: ops
                                                                    HdlOp: EQ
                                                                        list: ops
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlValueId: znUDS_sync
                                                                                    HdlValueInt: 2
                                                                            HdlValueInt: 0
                                                                    HdlOp: EQ
                                                                        list: ops
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlValueId: znLDS_sync
                                                                                    HdlValueInt: 2
                                                                            HdlValueInt: 0
                                                            HdlOp: EQ
                                                                list: ops
                                                                    HdlOp: INDEX
                                                                        list: ops
                                                                            HdlValueId: znDS1_sync
                                                                            HdlValueInt: 2
                                                                    HdlValueInt: 0
                                                    HdlOp: EQ
                                                        list: ops
                                                            HdlOp: INDEX
                                                                list: ops
                                                                    HdlValueId: znDS0_sync
                                                                    HdlValueInt: 2
                                                            HdlValueInt: 0
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlStmAssign
                                                        HdlValueId: Z3_WRITE_UPPER
                                                        HdlValueId: zorro_state
                                            list: elifs
                            tuple
                                HdlOp: AND_LOG
                                    list: ops
                                        HdlValueId: z3addr_in_ram
                                        HdlValueId: zorro_read
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlStmAssign
                                            HdlValueInt: 1
                                            HdlValueId: slaven
                                        HdlStmAssign
                                            HdlValueId: Z3_READ_UPPER
                                            HdlValueId: zorro_state
                            tuple
                                HdlOp: AND_LOG
                                    list: ops
                                        HdlValueId: zorro_write
                                        HdlValueId: z3addr_in_reg
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlStmAssign
                                            HdlValueInt: 1
                                            HdlValueId: slaven
                                        HdlStmIf
                                            HdlOp: EQ
                                                list: ops
                                                    HdlOp: INDEX
                                                        list: ops
                                                            HdlValueId: znDS1_sync
                                                            HdlValueInt: 2
                                                    HdlValueInt: 0
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlStmAssign
                                                        HdlValueId: data_in_z3_low16
                                                        HdlValueId: regdata_in
                                                    HdlStmAssign
                                                        HdlOp: OR
                                                            list: ops
                                                                HdlOp: INDEX
                                                                    list: ops
                                                                        HdlValueId: z3addr
                                                                        HdlOp: DOWNTO
                                                                            list: ops
                                                                                HdlValueInt: 15
                                                                                HdlValueInt: 0
                                                                HdlValueInt: 2
                                                        HdlValueId: zaddr_regpart
                                                    HdlStmAssign
                                                        HdlValueId: REGWRITE
                                                        HdlValueId: zorro_state
                                            list: elifs
                                                tuple
                                                    HdlOp: EQ
                                                        list: ops
                                                            HdlOp: INDEX
                                                                list: ops
                                                                    HdlValueId: znUDS_sync
                                                                    HdlValueInt: 2
                                                            HdlValueInt: 0
                                                    HdlStmBlock: SEQ
                                                        list: body
                                                            HdlStmAssign
                                                                HdlValueId: zdata_in_sync
                                                                HdlValueId: regdata_in
                                                            HdlStmAssign
                                                                HdlOp: INDEX
                                                                    list: ops
                                                                        HdlValueId: z3addr
                                                                        HdlOp: DOWNTO
                                                                            list: ops
                                                                                HdlValueInt: 15
                                                                                HdlValueInt: 0
                                                                HdlValueId: zaddr_regpart
                                                            HdlStmAssign
                                                                HdlValueId: REGWRITE
                                                                HdlValueId: zorro_state
                            tuple
                                HdlOp: AND_LOG
                                    list: ops
                                        HdlValueId: zorro_read
                                        HdlValueId: z3addr_in_reg
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlStmAssign
                                            HdlValueInt: 1
                                            HdlValueId: slaven
                                        HdlStmAssign
                                            HdlValueInt: 0
                                            HdlValueId: data_z3_hi16
                                        HdlStmAssign
                                            HdlValueInt: 0
                                            HdlValueId: data_z3_low16
                                        HdlStmIf
                                            HdlOp: OR_LOG
                                                list: ops
                                                    HdlOp: OR_LOG
                                                        list: ops
                                                            HdlOp: OR_LOG
                                                                list: ops
                                                                    HdlOp: EQ
                                                                        list: ops
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlValueId: znDS1_sync
                                                                                    HdlValueInt: 2
                                                                            HdlValueInt: 0
                                                                    HdlOp: EQ
                                                                        list: ops
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlValueId: znDS0_sync
                                                                                    HdlValueInt: 2
                                                                            HdlValueInt: 0
                                                            HdlOp: EQ
                                                                list: ops
                                                                    HdlOp: INDEX
                                                                        list: ops
                                                                            HdlValueId: znUDS_sync
                                                                            HdlValueInt: 2
                                                                    HdlValueInt: 0
                                                    HdlOp: EQ
                                                        list: ops
                                                            HdlOp: INDEX
                                                                list: ops
                                                                    HdlValueId: znLDS_sync
                                                                    HdlValueInt: 2
                                                            HdlValueInt: 0
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlStmAssign
                                                        HdlOp: CONCAT
                                                            list: ops
                                                                HdlOp: INDEX
                                                                    list: ops
                                                                        HdlValueId: z3addr
                                                                        HdlOp: DOWNTO
                                                                            list: ops
                                                                                HdlValueInt: 15
                                                                                HdlValueInt: 2
                                                                HdlValueInt: 00
                                                        HdlValueId: zaddr_regpart
                                                    HdlStmAssign
                                                        HdlValueId: REGREAD
                                                        HdlValueId: zorro_state
                                            list: elifs
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmAssign
                                    HdlValueInt: 0
                                    HdlValueId: slaven
    HdlStmBlock: SEQ
        list: body
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: slaven

UPD HdlStmIf@@ to 
    INS tuple@@ to elifs
    INS HdlOp@@OR_LOG to 
    UPD HdlOp@@OR_LOG to OR_LOG
        INS list@@ops to OR_LOG
        INS HdlOp@@EQ to ops
        HdlOp: EQ
            list: ops
                HdlOp: INDEX
                    list: ops
                        HdlValueId: znCFGIN_sync
                        HdlValueInt: 1
                HdlValueInt: 1

UPD HdlStmIf@@ to 
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: z3_confdone
            HdlStmAssign
                HdlValueId: RESET
                HdlValueId: zorro_state
    UPD list@@elifs to body
    MOV list@@elifs to 
    list: elifs
        tuple
            HdlOp: AND_LOG
                list: ops
                    HdlValueId: z3addr_in_ram
                    HdlValueId: zorro_write
            HdlStmBlock: SEQ
                list: body
                    HdlStmAssign
                        HdlValueInt: 1
                        HdlValueId: slaven
                    HdlStmIf
                        HdlOp: OR_LOG
                            list: ops
                                HdlOp: OR_LOG
                                    list: ops
                                        HdlOp: OR_LOG
                                            list: ops
                                                HdlOp: EQ
                                                    list: ops
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlValueId: znUDS_sync
                                                                HdlValueInt: 2
                                                        HdlValueInt: 0
                                                HdlOp: EQ
                                                    list: ops
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlValueId: znLDS_sync
                                                                HdlValueInt: 2
                                                        HdlValueInt: 0
                                        HdlOp: EQ
                                            list: ops
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: znDS1_sync
                                                        HdlValueInt: 2
                                                HdlValueInt: 0
                                HdlOp: EQ
                                    list: ops
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: znDS0_sync
                                                HdlValueInt: 2
                                        HdlValueInt: 0
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmAssign
                                    HdlValueId: Z3_WRITE_UPPER
                                    HdlValueId: zorro_state
                        list: elifs
        tuple
            HdlOp: AND_LOG
                list: ops
                    HdlValueId: z3addr_in_ram
                    HdlValueId: zorro_read
            HdlStmBlock: SEQ
                list: body
                    HdlStmAssign
                        HdlValueInt: 1
                        HdlValueId: slaven
                    HdlStmAssign
                        HdlValueId: Z3_READ_UPPER
                        HdlValueId: zorro_state
        tuple
            HdlOp: AND_LOG
                list: ops
                    HdlValueId: zorro_write
                    HdlValueId: z3addr_in_reg
            HdlStmBlock: SEQ
                list: body
                    HdlStmAssign
                        HdlValueInt: 1
                        HdlValueId: slaven
                    HdlStmIf
                        HdlOp: EQ
                            list: ops
                                HdlOp: INDEX
                                    list: ops
                                        HdlValueId: znDS1_sync
                                        HdlValueInt: 2
                                HdlValueInt: 0
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmAssign
                                    HdlValueId: data_in_z3_low16
                                    HdlValueId: regdata_in
                                HdlStmAssign
                                    HdlOp: OR
                                        list: ops
                                            HdlOp: INDEX
                                                list: ops
                                                    HdlValueId: z3addr
                                                    HdlOp: DOWNTO
                                                        list: ops
                                                            HdlValueInt: 15
                                                            HdlValueInt: 0
                                            HdlValueInt: 2
                                    HdlValueId: zaddr_regpart
                                HdlStmAssign
                                    HdlValueId: REGWRITE
                                    HdlValueId: zorro_state
                        list: elifs
                            tuple
                                HdlOp: EQ
                                    list: ops
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: znUDS_sync
                                                HdlValueInt: 2
                                        HdlValueInt: 0
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlStmAssign
                                            HdlValueId: zdata_in_sync
                                            HdlValueId: regdata_in
                                        HdlStmAssign
                                            HdlOp: INDEX
                                                list: ops
                                                    HdlValueId: z3addr
                                                    HdlOp: DOWNTO
                                                        list: ops
                                                            HdlValueInt: 15
                                                            HdlValueInt: 0
                                            HdlValueId: zaddr_regpart
                                        HdlStmAssign
                                            HdlValueId: REGWRITE
                                            HdlValueId: zorro_state
        tuple
            HdlOp: AND_LOG
                list: ops
                    HdlValueId: zorro_read
                    HdlValueId: z3addr_in_reg
            HdlStmBlock: SEQ
                list: body
                    HdlStmAssign
                        HdlValueInt: 1
                        HdlValueId: slaven
                    HdlStmAssign
                        HdlValueInt: 0
                        HdlValueId: data_z3_hi16
                    HdlStmAssign
                        HdlValueInt: 0
                        HdlValueId: data_z3_low16
                    HdlStmIf
                        HdlOp: OR_LOG
                            list: ops
                                HdlOp: OR_LOG
                                    list: ops
                                        HdlOp: OR_LOG
                                            list: ops
                                                HdlOp: EQ
                                                    list: ops
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlValueId: znDS1_sync
                                                                HdlValueInt: 2
                                                        HdlValueInt: 0
                                                HdlOp: EQ
                                                    list: ops
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlValueId: znDS0_sync
                                                                HdlValueInt: 2
                                                        HdlValueInt: 0
                                        HdlOp: EQ
                                            list: ops
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: znUDS_sync
                                                        HdlValueInt: 2
                                                HdlValueInt: 0
                                HdlOp: EQ
                                    list: ops
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: znLDS_sync
                                                HdlValueInt: 2
                                        HdlValueInt: 0
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmAssign
                                    HdlOp: CONCAT
                                        list: ops
                                            HdlOp: INDEX
                                                list: ops
                                                    HdlValueId: z3addr
                                                    HdlOp: DOWNTO
                                                        list: ops
                                                            HdlValueInt: 15
                                                            HdlValueInt: 2
                                            HdlValueInt: 00
                                    HdlValueId: zaddr_regpart
                                HdlStmAssign
                                    HdlValueId: REGREAD
                                    HdlValueId: zorro_state
                        list: elifs
    MOV HdlValueId@@z3addr_zero to 
    HdlValueId: z3addr_zero
    MOV HdlOp@@AND_LOG to 
    HdlOp: AND_LOG
        list: ops
            HdlValueId: z3addr_in_ram
            HdlValueId: zorro_write
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlStmAssign
                HdlValueInt: 1
                HdlValueId: slaven
            HdlStmIf
                HdlOp: OR_LOG
                    list: ops
                        HdlOp: OR_LOG
                            list: ops
                                HdlOp: OR_LOG
                                    list: ops
                                        HdlOp: EQ
                                            list: ops
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: znUDS_sync
                                                        HdlValueInt: 2
                                                HdlValueInt: 0
                                        HdlOp: EQ
                                            list: ops
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: znLDS_sync
                                                        HdlValueInt: 2
                                                HdlValueInt: 0
                                HdlOp: EQ
                                    list: ops
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: znDS1_sync
                                                HdlValueInt: 2
                                        HdlValueInt: 0
                        HdlOp: EQ
                            list: ops
                                HdlOp: INDEX
                                    list: ops
                                        HdlValueId: znDS0_sync
                                        HdlValueInt: 2
                                HdlValueInt: 0
                HdlStmBlock: SEQ
                    list: body
                        HdlStmAssign
                            HdlValueId: Z3_WRITE_UPPER
                            HdlValueId: zorro_state
                list: elifs
    MOV tuple@@ to elifs
    tuple
        HdlOp: AND_LOG
            list: ops
                HdlValueId: z3addr_in_ram
                HdlValueId: zorro_read
        HdlStmBlock: SEQ
            list: body
                HdlStmAssign
                    HdlValueInt: 1
                    HdlValueId: slaven
                HdlStmAssign
                    HdlValueId: Z3_READ_UPPER
                    HdlValueId: zorro_state
    MOV tuple@@ to elifs
    tuple
        HdlOp: AND_LOG
            list: ops
                HdlValueId: zorro_write
                HdlValueId: z3addr_in_reg
        HdlStmBlock: SEQ
            list: body
                HdlStmAssign
                    HdlValueInt: 1
                    HdlValueId: slaven
                HdlStmIf
                    HdlOp: EQ
                        list: ops
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: znDS1_sync
                                    HdlValueInt: 2
                            HdlValueInt: 0
                    HdlStmBlock: SEQ
                        list: body
                            HdlStmAssign
                                HdlValueId: data_in_z3_low16
                                HdlValueId: regdata_in
                            HdlStmAssign
                                HdlOp: OR
                                    list: ops
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: z3addr
                                                HdlOp: DOWNTO
                                                    list: ops
                                                        HdlValueInt: 15
                                                        HdlValueInt: 0
                                        HdlValueInt: 2
                                HdlValueId: zaddr_regpart
                            HdlStmAssign
                                HdlValueId: REGWRITE
                                HdlValueId: zorro_state
                    list: elifs
                        tuple
                            HdlOp: EQ
                                list: ops
                                    HdlOp: INDEX
                                        list: ops
                                            HdlValueId: znUDS_sync
                                            HdlValueInt: 2
                                    HdlValueInt: 0
                            HdlStmBlock: SEQ
                                list: body
                                    HdlStmAssign
                                        HdlValueId: zdata_in_sync
                                        HdlValueId: regdata_in
                                    HdlStmAssign
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: z3addr
                                                HdlOp: DOWNTO
                                                    list: ops
                                                        HdlValueInt: 15
                                                        HdlValueInt: 0
                                        HdlValueId: zaddr_regpart
                                    HdlStmAssign
                                        HdlValueId: REGWRITE
                                        HdlValueId: zorro_state
    MOV tuple@@ to elifs
    tuple
        HdlOp: AND_LOG
            list: ops
                HdlValueId: zorro_read
                HdlValueId: z3addr_in_reg
        HdlStmBlock: SEQ
            list: body
                HdlStmAssign
                    HdlValueInt: 1
                    HdlValueId: slaven
                HdlStmAssign
                    HdlValueInt: 0
                    HdlValueId: data_z3_hi16
                HdlStmAssign
                    HdlValueInt: 0
                    HdlValueId: data_z3_low16
                HdlStmIf
                    HdlOp: OR_LOG
                        list: ops
                            HdlOp: OR_LOG
                                list: ops
                                    HdlOp: OR_LOG
                                        list: ops
                                            HdlOp: EQ
                                                list: ops
                                                    HdlOp: INDEX
                                                        list: ops
                                                            HdlValueId: znDS1_sync
                                                            HdlValueInt: 2
                                                    HdlValueInt: 0
                                            HdlOp: EQ
                                                list: ops
                                                    HdlOp: INDEX
                                                        list: ops
                                                            HdlValueId: znDS0_sync
                                                            HdlValueInt: 2
                                                    HdlValueInt: 0
                                    HdlOp: EQ
                                        list: ops
                                            HdlOp: INDEX
                                                list: ops
                                                    HdlValueId: znUDS_sync
                                                    HdlValueInt: 2
                                            HdlValueInt: 0
                            HdlOp: EQ
                                list: ops
                                    HdlOp: INDEX
                                        list: ops
                                            HdlValueId: znLDS_sync
                                            HdlValueInt: 2
                                    HdlValueInt: 0
                    HdlStmBlock: SEQ
                        list: body
                            HdlStmAssign
                                HdlOp: CONCAT
                                    list: ops
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: z3addr
                                                HdlOp: DOWNTO
                                                    list: ops
                                                        HdlValueInt: 15
                                                        HdlValueInt: 2
                                        HdlValueInt: 00
                                HdlValueId: zaddr_regpart
                            HdlStmAssign
                                HdlValueId: REGREAD
                                HdlValueId: zorro_state
                    list: elifs
    DEL tuple@@ from elifs

MOV HdlStmIf@@ to body
HdlStmIf
    HdlValueId: z3addr_zero
    HdlStmBlock: SEQ
        list: body
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: z3_confdone
            HdlStmAssign
                HdlValueId: RESET
                HdlValueId: zorro_state
    list: elifs
        tuple
            HdlOp: AND_LOG
                list: ops
                    HdlValueId: z3addr_in_ram
                    HdlValueId: zorro_write
            HdlStmBlock: SEQ
                list: body
                    HdlStmAssign
                        HdlValueInt: 1
                        HdlValueId: slaven
                    HdlStmIf
                        HdlOp: OR_LOG
                            list: ops
                                HdlOp: OR_LOG
                                    list: ops
                                        HdlOp: OR_LOG
                                            list: ops
                                                HdlOp: EQ
                                                    list: ops
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlValueId: znUDS_sync
                                                                HdlValueInt: 2
                                                        HdlValueInt: 0
                                                HdlOp: EQ
                                                    list: ops
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlValueId: znLDS_sync
                                                                HdlValueInt: 2
                                                        HdlValueInt: 0
                                        HdlOp: EQ
                                            list: ops
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: znDS1_sync
                                                        HdlValueInt: 2
                                                HdlValueInt: 0
                                HdlOp: EQ
                                    list: ops
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: znDS0_sync
                                                HdlValueInt: 2
                                        HdlValueInt: 0
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmAssign
                                    HdlValueId: Z3_WRITE_UPPER
                                    HdlValueId: zorro_state
                        list: elifs
        tuple
            HdlOp: AND_LOG
                list: ops
                    HdlValueId: z3addr_in_ram
                    HdlValueId: zorro_read
            HdlStmBlock: SEQ
                list: body
                    HdlStmAssign
                        HdlValueInt: 1
                        HdlValueId: slaven
                    HdlStmAssign
                        HdlValueId: Z3_READ_UPPER
                        HdlValueId: zorro_state
        tuple
            HdlOp: AND_LOG
                list: ops
                    HdlValueId: zorro_write
                    HdlValueId: z3addr_in_reg
            HdlStmBlock: SEQ
                list: body
                    HdlStmAssign
                        HdlValueInt: 1
                        HdlValueId: slaven
                    HdlStmIf
                        HdlOp: EQ
                            list: ops
                                HdlOp: INDEX
                                    list: ops
                                        HdlValueId: znDS1_sync
                                        HdlValueInt: 2
                                HdlValueInt: 0
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmAssign
                                    HdlValueId: data_in_z3_low16
                                    HdlValueId: regdata_in
                                HdlStmAssign
                                    HdlOp: OR
                                        list: ops
                                            HdlOp: INDEX
                                                list: ops
                                                    HdlValueId: z3addr
                                                    HdlOp: DOWNTO
                                                        list: ops
                                                            HdlValueInt: 15
                                                            HdlValueInt: 0
                                            HdlValueInt: 2
                                    HdlValueId: zaddr_regpart
                                HdlStmAssign
                                    HdlValueId: REGWRITE
                                    HdlValueId: zorro_state
                        list: elifs
                            tuple
                                HdlOp: EQ
                                    list: ops
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: znUDS_sync
                                                HdlValueInt: 2
                                        HdlValueInt: 0
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlStmAssign
                                            HdlValueId: zdata_in_sync
                                            HdlValueId: regdata_in
                                        HdlStmAssign
                                            HdlOp: INDEX
                                                list: ops
                                                    HdlValueId: z3addr
                                                    HdlOp: DOWNTO
                                                        list: ops
                                                            HdlValueInt: 15
                                                            HdlValueInt: 0
                                            HdlValueId: zaddr_regpart
                                        HdlStmAssign
                                            HdlValueId: REGWRITE
                                            HdlValueId: zorro_state
        tuple
            HdlOp: AND_LOG
                list: ops
                    HdlValueId: zorro_read
                    HdlValueId: z3addr_in_reg
            HdlStmBlock: SEQ
                list: body
                    HdlStmAssign
                        HdlValueInt: 1
                        HdlValueId: slaven
                    HdlStmAssign
                        HdlValueInt: 0
                        HdlValueId: data_z3_hi16
                    HdlStmAssign
                        HdlValueInt: 0
                        HdlValueId: data_z3_low16
                    HdlStmIf
                        HdlOp: OR_LOG
                            list: ops
                                HdlOp: OR_LOG
                                    list: ops
                                        HdlOp: OR_LOG
                                            list: ops
                                                HdlOp: EQ
                                                    list: ops
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlValueId: znDS1_sync
                                                                HdlValueInt: 2
                                                        HdlValueInt: 0
                                                HdlOp: EQ
                                                    list: ops
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlValueId: znDS0_sync
                                                                HdlValueInt: 2
                                                        HdlValueInt: 0
                                        HdlOp: EQ
                                            list: ops
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: znUDS_sync
                                                        HdlValueInt: 2
                                                HdlValueInt: 0
                                HdlOp: EQ
                                    list: ops
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: znLDS_sync
                                                HdlValueInt: 2
                                        HdlValueInt: 0
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmAssign
                                    HdlOp: CONCAT
                                        list: ops
                                            HdlOp: INDEX
                                                list: ops
                                                    HdlValueId: z3addr
                                                    HdlOp: DOWNTO
                                                        list: ops
                                                            HdlValueInt: 15
                                                            HdlValueInt: 2
                                            HdlValueInt: 00
                                    HdlValueId: zaddr_regpart
                                HdlStmAssign
                                    HdlValueId: REGREAD
                                    HdlValueId: zorro_state
                        list: elifs
    HdlStmBlock: SEQ
        list: body
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: slaven

UPD HdlStmCase@@zorro_state to zorro_state
    UPD HdlStmBlock@@SEQ to SEQ
        UPD list@@body to elifs
        MOV list@@body to SEQ
        list: body
            HdlStmIf
                HdlValueId: dvid_reset
                HdlStmBlock: SEQ
                    list: body
                        HdlStmAssign
                            HdlValueInt: 10
                            HdlValueId: dvid_reset_counter
                        HdlStmAssign
                            HdlValueId: RESET_DVID
                            HdlValueId: zorro_state
                list: elifs
                    tuple
                        HdlOp: EQ
                            list: ops
                                HdlOp: INDEX
                                    list: ops
                                        HdlValueId: znFCS_sync
                                        HdlValueInt: 2
                                HdlValueInt: 0
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmIf
                                    HdlValueId: z3addr_zero
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmAssign
                                                HdlValueInt: 0
                                                HdlValueId: z3_confdone
                                            HdlStmAssign
                                                HdlValueId: RESET
                                                HdlValueId: zorro_state
                                    list: elifs
                                        tuple
                                            HdlOp: AND_LOG
                                                list: ops
                                                    HdlValueId: z3addr_in_ram
                                                    HdlValueId: zorro_write
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlStmAssign
                                                        HdlValueInt: 1
                                                        HdlValueId: slaven
                                                    HdlStmIf
                                                        HdlOp: OR_LOG
                                                            list: ops
                                                                HdlOp: OR_LOG
                                                                    list: ops
                                                                        HdlOp: OR_LOG
                                                                            list: ops
                                                                                HdlOp: EQ
                                                                                    list: ops
                                                                                        HdlOp: INDEX
                                                                                            list: ops
                                                                                                HdlValueId: znUDS_sync
                                                                                                HdlValueInt: 2
                                                                                        HdlValueInt: 0
                                                                                HdlOp: EQ
                                                                                    list: ops
                                                                                        HdlOp: INDEX
                                                                                            list: ops
                                                                                                HdlValueId: znLDS_sync
                                                                                                HdlValueInt: 2
                                                                                        HdlValueInt: 0
                                                                        HdlOp: EQ
                                                                            list: ops
                                                                                HdlOp: INDEX
                                                                                    list: ops
                                                                                        HdlValueId: znDS1_sync
                                                                                        HdlValueInt: 2
                                                                                HdlValueInt: 0
                                                                HdlOp: EQ
                                                                    list: ops
                                                                        HdlOp: INDEX
                                                                            list: ops
                                                                                HdlValueId: znDS0_sync
                                                                                HdlValueInt: 2
                                                                        HdlValueInt: 0
                                                        HdlStmBlock: SEQ
                                                            list: body
                                                                HdlStmAssign
                                                                    HdlValueId: Z3_WRITE_UPPER
                                                                    HdlValueId: zorro_state
                                                        list: elifs
                                        tuple
                                            HdlOp: AND_LOG
                                                list: ops
                                                    HdlValueId: z3addr_in_ram
                                                    HdlValueId: zorro_read
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlStmAssign
                                                        HdlValueInt: 1
                                                        HdlValueId: slaven
                                                    HdlStmAssign
                                                        HdlValueId: Z3_READ_UPPER
                                                        HdlValueId: zorro_state
                                        tuple
                                            HdlOp: AND_LOG
                                                list: ops
                                                    HdlValueId: zorro_write
                                                    HdlValueId: z3addr_in_reg
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlStmAssign
                                                        HdlValueInt: 1
                                                        HdlValueId: slaven
                                                    HdlStmIf
                                                        HdlOp: EQ
                                                            list: ops
                                                                HdlOp: INDEX
                                                                    list: ops
                                                                        HdlValueId: znDS1_sync
                                                                        HdlValueInt: 2
                                                                HdlValueInt: 0
                                                        HdlStmBlock: SEQ
                                                            list: body
                                                                HdlStmAssign
                                                                    HdlValueId: data_in_z3_low16
                                                                    HdlValueId: regdata_in
                                                                HdlStmAssign
                                                                    HdlOp: OR
                                                                        list: ops
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlValueId: z3addr
                                                                                    HdlOp: DOWNTO
                                                                                        list: ops
                                                                                            HdlValueInt: 15
                                                                                            HdlValueInt: 0
                                                                            HdlValueInt: 2
                                                                    HdlValueId: zaddr_regpart
                                                                HdlStmAssign
                                                                    HdlValueId: REGWRITE
                                                                    HdlValueId: zorro_state
                                                        list: elifs
                                                            tuple
                                                                HdlOp: EQ
                                                                    list: ops
                                                                        HdlOp: INDEX
                                                                            list: ops
                                                                                HdlValueId: znUDS_sync
                                                                                HdlValueInt: 2
                                                                        HdlValueInt: 0
                                                                HdlStmBlock: SEQ
                                                                    list: body
                                                                        HdlStmAssign
                                                                            HdlValueId: zdata_in_sync
                                                                            HdlValueId: regdata_in
                                                                        HdlStmAssign
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlValueId: z3addr
                                                                                    HdlOp: DOWNTO
                                                                                        list: ops
                                                                                            HdlValueInt: 15
                                                                                            HdlValueInt: 0
                                                                            HdlValueId: zaddr_regpart
                                                                        HdlStmAssign
                                                                            HdlValueId: REGWRITE
                                                                            HdlValueId: zorro_state
                                        tuple
                                            HdlOp: AND_LOG
                                                list: ops
                                                    HdlValueId: zorro_read
                                                    HdlValueId: z3addr_in_reg
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlStmAssign
                                                        HdlValueInt: 1
                                                        HdlValueId: slaven
                                                    HdlStmAssign
                                                        HdlValueInt: 0
                                                        HdlValueId: data_z3_hi16
                                                    HdlStmAssign
                                                        HdlValueInt: 0
                                                        HdlValueId: data_z3_low16
                                                    HdlStmIf
                                                        HdlOp: OR_LOG
                                                            list: ops
                                                                HdlOp: OR_LOG
                                                                    list: ops
                                                                        HdlOp: OR_LOG
                                                                            list: ops
                                                                                HdlOp: EQ
                                                                                    list: ops
                                                                                        HdlOp: INDEX
                                                                                            list: ops
                                                                                                HdlValueId: znDS1_sync
                                                                                                HdlValueInt: 2
                                                                                        HdlValueInt: 0
                                                                                HdlOp: EQ
                                                                                    list: ops
                                                                                        HdlOp: INDEX
                                                                                            list: ops
                                                                                                HdlValueId: znDS0_sync
                                                                                                HdlValueInt: 2
                                                                                        HdlValueInt: 0
                                                                        HdlOp: EQ
                                                                            list: ops
                                                                                HdlOp: INDEX
                                                                                    list: ops
                                                                                        HdlValueId: znUDS_sync
                                                                                        HdlValueInt: 2
                                                                                HdlValueInt: 0
                                                                HdlOp: EQ
                                                                    list: ops
                                                                        HdlOp: INDEX
                                                                            list: ops
                                                                                HdlValueId: znLDS_sync
                                                                                HdlValueInt: 2
                                                                        HdlValueInt: 0
                                                        HdlStmBlock: SEQ
                                                            list: body
                                                                HdlStmAssign
                                                                    HdlOp: CONCAT
                                                                        list: ops
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlValueId: z3addr
                                                                                    HdlOp: DOWNTO
                                                                                        list: ops
                                                                                            HdlValueInt: 15
                                                                                            HdlValueInt: 2
                                                                            HdlValueInt: 00
                                                                    HdlValueId: zaddr_regpart
                                                                HdlStmAssign
                                                                    HdlValueId: REGREAD
                                                                    HdlValueId: zorro_state
                                                        list: elifs
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmAssign
                                                HdlValueInt: 0
                                                HdlValueId: slaven
                HdlStmBlock: SEQ
                    list: body
                        HdlStmAssign
                            HdlValueInt: 0
                            HdlValueId: slaven
    DEL HdlStmCaseType@@CASE from zorro_state
    DEL HdlValueId@@zorro_state from zorro_state
    DEL HdlValueId@@Z2_WARMUP from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases

MOV HdlStmAssign@@ to body
HdlStmAssign
    HdlValueId: RESET
    HdlValueId: zorro_state


CommitId: 327b82476418d01e840f918063de0e65a3d4f9ee
WIP cfgin/cfgout sequencing; fix possible deadlock when switching resolutions; some blitter optimization; revision number
--- a/z2-minispartan/z2.v
+++ b/z2-minispartan/z2.v
@@ -1192,6 +1216,8 @@ always @(posedge z_sample_clk) begin
       zorro_state <= REGREAD_POST;
       
       case (zaddr_regpart)
+        /*'h00: begin z3_regread_hi <= REVISION;
+              z3_regread_lo <= 0; end*/
         'h20: begin z3_regread_hi <= blitter_x1;
               z3_regread_lo <= blitter_y1; end // 'h22
               

ParseResult:
UPD HdlStmCase@@zorro_state to zorro_state
    INS HdlStmCaseType@@CASE to zorro_state
    INS HdlValueId@@zorro_state to zorro_state
    INS tuple@@ to cases
    INS HdlValueId@@Z2_PRE_CONFIGURED to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmCase@@zorro_state to zorro_state
    UPD HdlStmBlock@@SEQ to SEQ
        UPD list@@body to elifs
        MOV list@@body to SEQ
        list: body
            HdlStmIf
                HdlValueId: dvid_reset
                HdlStmBlock: SEQ
                    list: body
                        HdlStmAssign
                            HdlValueInt: 10
                            HdlValueId: dvid_reset_counter
                        HdlStmAssign
                            HdlValueId: RESET_DVID
                            HdlValueId: zorro_state
                list: elifs
                    tuple
                        HdlOp: EQ
                            list: ops
                                HdlOp: INDEX
                                    list: ops
                                        HdlValueId: znFCS_sync
                                        HdlValueInt: 2
                                HdlValueInt: 0
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmIf
                                    HdlValueId: z3addr_zero
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmAssign
                                                HdlValueInt: 0
                                                HdlValueId: z3_confdone
                                            HdlStmAssign
                                                HdlValueId: RESET
                                                HdlValueId: zorro_state
                                    list: elifs
                                        tuple
                                            HdlOp: AND_LOG
                                                list: ops
                                                    HdlValueId: z3addr_in_ram
                                                    HdlValueId: zorro_write
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlStmAssign
                                                        HdlValueInt: 1
                                                        HdlValueId: slaven
                                                    HdlStmIf
                                                        HdlOp: OR_LOG
                                                            list: ops
                                                                HdlOp: OR_LOG
                                                                    list: ops
                                                                        HdlOp: OR_LOG
                                                                            list: ops
                                                                                HdlOp: EQ
                                                                                    list: ops
                                                                                        HdlOp: INDEX
                                                                                            list: ops
                                                                                                HdlValueId: znUDS_sync
                                                                                                HdlValueInt: 2
                                                                                        HdlValueInt: 0
                                                                                HdlOp: EQ
                                                                                    list: ops
                                                                                        HdlOp: INDEX
                                                                                            list: ops
                                                                                                HdlValueId: znLDS_sync
                                                                                                HdlValueInt: 2
                                                                                        HdlValueInt: 0
                                                                        HdlOp: EQ
                                                                            list: ops
                                                                                HdlOp: INDEX
                                                                                    list: ops
                                                                                        HdlValueId: znDS1_sync
                                                                                        HdlValueInt: 2
                                                                                HdlValueInt: 0
                                                                HdlOp: EQ
                                                                    list: ops
                                                                        HdlOp: INDEX
                                                                            list: ops
                                                                                HdlValueId: znDS0_sync
                                                                                HdlValueInt: 2
                                                                        HdlValueInt: 0
                                                        HdlStmBlock: SEQ
                                                            list: body
                                                                HdlStmAssign
                                                                    HdlValueId: Z3_WRITE_UPPER
                                                                    HdlValueId: zorro_state
                                                        list: elifs
                                        tuple
                                            HdlOp: AND_LOG
                                                list: ops
                                                    HdlValueId: z3addr_in_ram
                                                    HdlValueId: zorro_read
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlStmAssign
                                                        HdlValueInt: 1
                                                        HdlValueId: slaven
                                                    HdlStmAssign
                                                        HdlValueId: Z3_READ_UPPER
                                                        HdlValueId: zorro_state
                                        tuple
                                            HdlOp: AND_LOG
                                                list: ops
                                                    HdlValueId: zorro_write
                                                    HdlValueId: z3addr_in_reg
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlStmAssign
                                                        HdlValueInt: 1
                                                        HdlValueId: slaven
                                                    HdlStmIf
                                                        HdlOp: EQ
                                                            list: ops
                                                                HdlOp: INDEX
                                                                    list: ops
                                                                        HdlValueId: znDS1_sync
                                                                        HdlValueInt: 2
                                                                HdlValueInt: 0
                                                        HdlStmBlock: SEQ
                                                            list: body
                                                                HdlStmAssign
                                                                    HdlValueId: data_in_z3_low16
                                                                    HdlValueId: regdata_in
                                                                HdlStmAssign
                                                                    HdlOp: OR
                                                                        list: ops
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlValueId: z3addr
                                                                                    HdlOp: DOWNTO
                                                                                        list: ops
                                                                                            HdlValueInt: 15
                                                                                            HdlValueInt: 0
                                                                            HdlValueInt: 2
                                                                    HdlValueId: zaddr_regpart
                                                                HdlStmAssign
                                                                    HdlValueId: REGWRITE
                                                                    HdlValueId: zorro_state
                                                        list: elifs
                                                            tuple
                                                                HdlOp: EQ
                                                                    list: ops
                                                                        HdlOp: INDEX
                                                                            list: ops
                                                                                HdlValueId: znUDS_sync
                                                                                HdlValueInt: 2
                                                                        HdlValueInt: 0
                                                                HdlStmBlock: SEQ
                                                                    list: body
                                                                        HdlStmAssign
                                                                            HdlValueId: zdata_in_sync
                                                                            HdlValueId: regdata_in
                                                                        HdlStmAssign
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlValueId: z3addr
                                                                                    HdlOp: DOWNTO
                                                                                        list: ops
                                                                                            HdlValueInt: 15
                                                                                            HdlValueInt: 0
                                                                            HdlValueId: zaddr_regpart
                                                                        HdlStmAssign
                                                                            HdlValueId: REGWRITE
                                                                            HdlValueId: zorro_state
                                        tuple
                                            HdlOp: AND_LOG
                                                list: ops
                                                    HdlValueId: zorro_read
                                                    HdlValueId: z3addr_in_reg
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlStmAssign
                                                        HdlValueInt: 1
                                                        HdlValueId: slaven
                                                    HdlStmAssign
                                                        HdlValueInt: 0
                                                        HdlValueId: data_z3_hi16
                                                    HdlStmAssign
                                                        HdlValueInt: 0
                                                        HdlValueId: data_z3_low16
                                                    HdlStmIf
                                                        HdlOp: OR_LOG
                                                            list: ops
                                                                HdlOp: OR_LOG
                                                                    list: ops
                                                                        HdlOp: OR_LOG
                                                                            list: ops
                                                                                HdlOp: EQ
                                                                                    list: ops
                                                                                        HdlOp: INDEX
                                                                                            list: ops
                                                                                                HdlValueId: znDS1_sync
                                                                                                HdlValueInt: 2
                                                                                        HdlValueInt: 0
                                                                                HdlOp: EQ
                                                                                    list: ops
                                                                                        HdlOp: INDEX
                                                                                            list: ops
                                                                                                HdlValueId: znDS0_sync
                                                                                                HdlValueInt: 2
                                                                                        HdlValueInt: 0
                                                                        HdlOp: EQ
                                                                            list: ops
                                                                                HdlOp: INDEX
                                                                                    list: ops
                                                                                        HdlValueId: znUDS_sync
                                                                                        HdlValueInt: 2
                                                                                HdlValueInt: 0
                                                                HdlOp: EQ
                                                                    list: ops
                                                                        HdlOp: INDEX
                                                                            list: ops
                                                                                HdlValueId: znLDS_sync
                                                                                HdlValueInt: 2
                                                                        HdlValueInt: 0
                                                        HdlStmBlock: SEQ
                                                            list: body
                                                                HdlStmAssign
                                                                    HdlOp: CONCAT
                                                                        list: ops
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlValueId: z3addr
                                                                                    HdlOp: DOWNTO
                                                                                        list: ops
                                                                                            HdlValueInt: 15
                                                                                            HdlValueInt: 2
                                                                            HdlValueInt: 00
                                                                    HdlValueId: zaddr_regpart
                                                                HdlStmAssign
                                                                    HdlValueId: REGREAD
                                                                    HdlValueId: zorro_state
                                                        list: elifs
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmAssign
                                                HdlValueInt: 0
                                                HdlValueId: slaven
                HdlStmBlock: SEQ
                    list: body
                        HdlStmAssign
                            HdlValueInt: 0
                            HdlValueId: slaven
    DEL HdlStmCaseType@@CASE from zorro_state
    DEL HdlValueId@@zorro_state from zorro_state
    DEL HdlValueId@@Z2_WARMUP from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases


CommitId: 327b82476418d01e840f918063de0e65a3d4f9ee
WIP cfgin/cfgout sequencing; fix possible deadlock when switching resolutions; some blitter optimization; revision number
--- a/z2-minispartan/z2.v
+++ b/z2-minispartan/z2.v
@@ -1214,7 +1240,7 @@ always @(posedge z_sample_clk) begin
         /*'h72: data_z3_low16 <= sd_clkdiv;*/
         
         default: begin
-          z3_regread_hi <= 'h0000; 
+          z3_regread_hi <= REVISION; //'h0000; 
           z3_regread_lo <= 'h0000;
         end
       endcase

ParseResult:
UPD HdlStmCase@@zorro_state to zorro_state
    INS HdlStmCaseType@@CASE to zorro_state
    INS HdlValueId@@zorro_state to zorro_state
    INS tuple@@ to cases
    INS HdlValueId@@Z2_PRE_CONFIGURED to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmAssign@@ to 
    INS HdlValueId@@REVISION to 

UPD HdlStmCase@@zorro_state to zorro_state
    UPD HdlStmBlock@@SEQ to SEQ
        UPD list@@body to elifs
        MOV list@@body to SEQ
        list: body
            HdlStmIf
                HdlValueId: dvid_reset
                HdlStmBlock: SEQ
                    list: body
                        HdlStmAssign
                            HdlValueInt: 10
                            HdlValueId: dvid_reset_counter
                        HdlStmAssign
                            HdlValueId: RESET_DVID
                            HdlValueId: zorro_state
                list: elifs
                    tuple
                        HdlOp: EQ
                            list: ops
                                HdlOp: INDEX
                                    list: ops
                                        HdlValueId: znFCS_sync
                                        HdlValueInt: 2
                                HdlValueInt: 0
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmIf
                                    HdlValueId: z3addr_zero
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmAssign
                                                HdlValueInt: 0
                                                HdlValueId: z3_confdone
                                            HdlStmAssign
                                                HdlValueId: RESET
                                                HdlValueId: zorro_state
                                    list: elifs
                                        tuple
                                            HdlOp: AND_LOG
                                                list: ops
                                                    HdlValueId: z3addr_in_ram
                                                    HdlValueId: zorro_write
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlStmAssign
                                                        HdlValueInt: 1
                                                        HdlValueId: slaven
                                                    HdlStmIf
                                                        HdlOp: OR_LOG
                                                            list: ops
                                                                HdlOp: OR_LOG
                                                                    list: ops
                                                                        HdlOp: OR_LOG
                                                                            list: ops
                                                                                HdlOp: EQ
                                                                                    list: ops
                                                                                        HdlOp: INDEX
                                                                                            list: ops
                                                                                                HdlValueId: znUDS_sync
                                                                                                HdlValueInt: 2
                                                                                        HdlValueInt: 0
                                                                                HdlOp: EQ
                                                                                    list: ops
                                                                                        HdlOp: INDEX
                                                                                            list: ops
                                                                                                HdlValueId: znLDS_sync
                                                                                                HdlValueInt: 2
                                                                                        HdlValueInt: 0
                                                                        HdlOp: EQ
                                                                            list: ops
                                                                                HdlOp: INDEX
                                                                                    list: ops
                                                                                        HdlValueId: znDS1_sync
                                                                                        HdlValueInt: 2
                                                                                HdlValueInt: 0
                                                                HdlOp: EQ
                                                                    list: ops
                                                                        HdlOp: INDEX
                                                                            list: ops
                                                                                HdlValueId: znDS0_sync
                                                                                HdlValueInt: 2
                                                                        HdlValueInt: 0
                                                        HdlStmBlock: SEQ
                                                            list: body
                                                                HdlStmAssign
                                                                    HdlValueId: Z3_WRITE_UPPER
                                                                    HdlValueId: zorro_state
                                                        list: elifs
                                        tuple
                                            HdlOp: AND_LOG
                                                list: ops
                                                    HdlValueId: z3addr_in_ram
                                                    HdlValueId: zorro_read
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlStmAssign
                                                        HdlValueInt: 1
                                                        HdlValueId: slaven
                                                    HdlStmAssign
                                                        HdlValueId: Z3_READ_UPPER
                                                        HdlValueId: zorro_state
                                        tuple
                                            HdlOp: AND_LOG
                                                list: ops
                                                    HdlValueId: zorro_write
                                                    HdlValueId: z3addr_in_reg
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlStmAssign
                                                        HdlValueInt: 1
                                                        HdlValueId: slaven
                                                    HdlStmIf
                                                        HdlOp: EQ
                                                            list: ops
                                                                HdlOp: INDEX
                                                                    list: ops
                                                                        HdlValueId: znDS1_sync
                                                                        HdlValueInt: 2
                                                                HdlValueInt: 0
                                                        HdlStmBlock: SEQ
                                                            list: body
                                                                HdlStmAssign
                                                                    HdlValueId: data_in_z3_low16
                                                                    HdlValueId: regdata_in
                                                                HdlStmAssign
                                                                    HdlOp: OR
                                                                        list: ops
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlValueId: z3addr
                                                                                    HdlOp: DOWNTO
                                                                                        list: ops
                                                                                            HdlValueInt: 15
                                                                                            HdlValueInt: 0
                                                                            HdlValueInt: 2
                                                                    HdlValueId: zaddr_regpart
                                                                HdlStmAssign
                                                                    HdlValueId: REGWRITE
                                                                    HdlValueId: zorro_state
                                                        list: elifs
                                                            tuple
                                                                HdlOp: EQ
                                                                    list: ops
                                                                        HdlOp: INDEX
                                                                            list: ops
                                                                                HdlValueId: znUDS_sync
                                                                                HdlValueInt: 2
                                                                        HdlValueInt: 0
                                                                HdlStmBlock: SEQ
                                                                    list: body
                                                                        HdlStmAssign
                                                                            HdlValueId: zdata_in_sync
                                                                            HdlValueId: regdata_in
                                                                        HdlStmAssign
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlValueId: z3addr
                                                                                    HdlOp: DOWNTO
                                                                                        list: ops
                                                                                            HdlValueInt: 15
                                                                                            HdlValueInt: 0
                                                                            HdlValueId: zaddr_regpart
                                                                        HdlStmAssign
                                                                            HdlValueId: REGWRITE
                                                                            HdlValueId: zorro_state
                                        tuple
                                            HdlOp: AND_LOG
                                                list: ops
                                                    HdlValueId: zorro_read
                                                    HdlValueId: z3addr_in_reg
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlStmAssign
                                                        HdlValueInt: 1
                                                        HdlValueId: slaven
                                                    HdlStmAssign
                                                        HdlValueInt: 0
                                                        HdlValueId: data_z3_hi16
                                                    HdlStmAssign
                                                        HdlValueInt: 0
                                                        HdlValueId: data_z3_low16
                                                    HdlStmIf
                                                        HdlOp: OR_LOG
                                                            list: ops
                                                                HdlOp: OR_LOG
                                                                    list: ops
                                                                        HdlOp: OR_LOG
                                                                            list: ops
                                                                                HdlOp: EQ
                                                                                    list: ops
                                                                                        HdlOp: INDEX
                                                                                            list: ops
                                                                                                HdlValueId: znDS1_sync
                                                                                                HdlValueInt: 2
                                                                                        HdlValueInt: 0
                                                                                HdlOp: EQ
                                                                                    list: ops
                                                                                        HdlOp: INDEX
                                                                                            list: ops
                                                                                                HdlValueId: znDS0_sync
                                                                                                HdlValueInt: 2
                                                                                        HdlValueInt: 0
                                                                        HdlOp: EQ
                                                                            list: ops
                                                                                HdlOp: INDEX
                                                                                    list: ops
                                                                                        HdlValueId: znUDS_sync
                                                                                        HdlValueInt: 2
                                                                                HdlValueInt: 0
                                                                HdlOp: EQ
                                                                    list: ops
                                                                        HdlOp: INDEX
                                                                            list: ops
                                                                                HdlValueId: znLDS_sync
                                                                                HdlValueInt: 2
                                                                        HdlValueInt: 0
                                                        HdlStmBlock: SEQ
                                                            list: body
                                                                HdlStmAssign
                                                                    HdlOp: CONCAT
                                                                        list: ops
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlValueId: z3addr
                                                                                    HdlOp: DOWNTO
                                                                                        list: ops
                                                                                            HdlValueInt: 15
                                                                                            HdlValueInt: 2
                                                                            HdlValueInt: 00
                                                                    HdlValueId: zaddr_regpart
                                                                HdlStmAssign
                                                                    HdlValueId: REGREAD
                                                                    HdlValueId: zorro_state
                                                        list: elifs
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmAssign
                                                HdlValueInt: 0
                                                HdlValueId: slaven
                HdlStmBlock: SEQ
                    list: body
                        HdlStmAssign
                            HdlValueInt: 0
                            HdlValueId: slaven
    DEL HdlStmCaseType@@CASE from zorro_state
    DEL HdlValueId@@zorro_state from zorro_state
    DEL HdlValueId@@Z2_WARMUP from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases


CommitId: 327b82476418d01e840f918063de0e65a3d4f9ee
WIP cfgin/cfgout sequencing; fix possible deadlock when switching resolutions; some blitter optimization; revision number
--- a/z2-minispartan/z2.v
+++ b/z2-minispartan/z2.v
@@ -1266,6 +1292,11 @@ always @(posedge z_sample_clk) begin
         'h18: ram_burst_col <= regdata_in[8:0];
         'h1a: fetch_preroll <= regdata_in[10:0];*/
         
+        /*'h1a: begin
+          blitter_dirx <= regdata_in[0];
+          blitter_diry <= regdata_in[1];
+        end*/
+        
         // blitter regs
         'h1c: blitter_base[23:16] <= regdata_in[7:0];
         'h1e: blitter_base[15:0]  <= regdata_in;

ParseResult:
UPD HdlStmCase@@zorro_state to zorro_state
    INS HdlStmCaseType@@CASE to zorro_state
    INS HdlValueId@@zorro_state to zorro_state
    INS tuple@@ to cases
    INS HdlValueId@@Z2_PRE_CONFIGURED to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmCase@@zorro_state to zorro_state
    UPD HdlStmBlock@@SEQ to SEQ
        UPD list@@body to elifs
        MOV list@@body to SEQ
        list: body
            HdlStmIf
                HdlValueId: dvid_reset
                HdlStmBlock: SEQ
                    list: body
                        HdlStmAssign
                            HdlValueInt: 10
                            HdlValueId: dvid_reset_counter
                        HdlStmAssign
                            HdlValueId: RESET_DVID
                            HdlValueId: zorro_state
                list: elifs
                    tuple
                        HdlOp: EQ
                            list: ops
                                HdlOp: INDEX
                                    list: ops
                                        HdlValueId: znFCS_sync
                                        HdlValueInt: 2
                                HdlValueInt: 0
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmIf
                                    HdlValueId: z3addr_zero
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmAssign
                                                HdlValueInt: 0
                                                HdlValueId: z3_confdone
                                            HdlStmAssign
                                                HdlValueId: RESET
                                                HdlValueId: zorro_state
                                    list: elifs
                                        tuple
                                            HdlOp: AND_LOG
                                                list: ops
                                                    HdlValueId: z3addr_in_ram
                                                    HdlValueId: zorro_write
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlStmAssign
                                                        HdlValueInt: 1
                                                        HdlValueId: slaven
                                                    HdlStmIf
                                                        HdlOp: OR_LOG
                                                            list: ops
                                                                HdlOp: OR_LOG
                                                                    list: ops
                                                                        HdlOp: OR_LOG
                                                                            list: ops
                                                                                HdlOp: EQ
                                                                                    list: ops
                                                                                        HdlOp: INDEX
                                                                                            list: ops
                                                                                                HdlValueId: znUDS_sync
                                                                                                HdlValueInt: 2
                                                                                        HdlValueInt: 0
                                                                                HdlOp: EQ
                                                                                    list: ops
                                                                                        HdlOp: INDEX
                                                                                            list: ops
                                                                                                HdlValueId: znLDS_sync
                                                                                                HdlValueInt: 2
                                                                                        HdlValueInt: 0
                                                                        HdlOp: EQ
                                                                            list: ops
                                                                                HdlOp: INDEX
                                                                                    list: ops
                                                                                        HdlValueId: znDS1_sync
                                                                                        HdlValueInt: 2
                                                                                HdlValueInt: 0
                                                                HdlOp: EQ
                                                                    list: ops
                                                                        HdlOp: INDEX
                                                                            list: ops
                                                                                HdlValueId: znDS0_sync
                                                                                HdlValueInt: 2
                                                                        HdlValueInt: 0
                                                        HdlStmBlock: SEQ
                                                            list: body
                                                                HdlStmAssign
                                                                    HdlValueId: Z3_WRITE_UPPER
                                                                    HdlValueId: zorro_state
                                                        list: elifs
                                        tuple
                                            HdlOp: AND_LOG
                                                list: ops
                                                    HdlValueId: z3addr_in_ram
                                                    HdlValueId: zorro_read
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlStmAssign
                                                        HdlValueInt: 1
                                                        HdlValueId: slaven
                                                    HdlStmAssign
                                                        HdlValueId: Z3_READ_UPPER
                                                        HdlValueId: zorro_state
                                        tuple
                                            HdlOp: AND_LOG
                                                list: ops
                                                    HdlValueId: zorro_write
                                                    HdlValueId: z3addr_in_reg
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlStmAssign
                                                        HdlValueInt: 1
                                                        HdlValueId: slaven
                                                    HdlStmIf
                                                        HdlOp: EQ
                                                            list: ops
                                                                HdlOp: INDEX
                                                                    list: ops
                                                                        HdlValueId: znDS1_sync
                                                                        HdlValueInt: 2
                                                                HdlValueInt: 0
                                                        HdlStmBlock: SEQ
                                                            list: body
                                                                HdlStmAssign
                                                                    HdlValueId: data_in_z3_low16
                                                                    HdlValueId: regdata_in
                                                                HdlStmAssign
                                                                    HdlOp: OR
                                                                        list: ops
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlValueId: z3addr
                                                                                    HdlOp: DOWNTO
                                                                                        list: ops
                                                                                            HdlValueInt: 15
                                                                                            HdlValueInt: 0
                                                                            HdlValueInt: 2
                                                                    HdlValueId: zaddr_regpart
                                                                HdlStmAssign
                                                                    HdlValueId: REGWRITE
                                                                    HdlValueId: zorro_state
                                                        list: elifs
                                                            tuple
                                                                HdlOp: EQ
                                                                    list: ops
                                                                        HdlOp: INDEX
                                                                            list: ops
                                                                                HdlValueId: znUDS_sync
                                                                                HdlValueInt: 2
                                                                        HdlValueInt: 0
                                                                HdlStmBlock: SEQ
                                                                    list: body
                                                                        HdlStmAssign
                                                                            HdlValueId: zdata_in_sync
                                                                            HdlValueId: regdata_in
                                                                        HdlStmAssign
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlValueId: z3addr
                                                                                    HdlOp: DOWNTO
                                                                                        list: ops
                                                                                            HdlValueInt: 15
                                                                                            HdlValueInt: 0
                                                                            HdlValueId: zaddr_regpart
                                                                        HdlStmAssign
                                                                            HdlValueId: REGWRITE
                                                                            HdlValueId: zorro_state
                                        tuple
                                            HdlOp: AND_LOG
                                                list: ops
                                                    HdlValueId: zorro_read
                                                    HdlValueId: z3addr_in_reg
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlStmAssign
                                                        HdlValueInt: 1
                                                        HdlValueId: slaven
                                                    HdlStmAssign
                                                        HdlValueInt: 0
                                                        HdlValueId: data_z3_hi16
                                                    HdlStmAssign
                                                        HdlValueInt: 0
                                                        HdlValueId: data_z3_low16
                                                    HdlStmIf
                                                        HdlOp: OR_LOG
                                                            list: ops
                                                                HdlOp: OR_LOG
                                                                    list: ops
                                                                        HdlOp: OR_LOG
                                                                            list: ops
                                                                                HdlOp: EQ
                                                                                    list: ops
                                                                                        HdlOp: INDEX
                                                                                            list: ops
                                                                                                HdlValueId: znDS1_sync
                                                                                                HdlValueInt: 2
                                                                                        HdlValueInt: 0
                                                                                HdlOp: EQ
                                                                                    list: ops
                                                                                        HdlOp: INDEX
                                                                                            list: ops
                                                                                                HdlValueId: znDS0_sync
                                                                                                HdlValueInt: 2
                                                                                        HdlValueInt: 0
                                                                        HdlOp: EQ
                                                                            list: ops
                                                                                HdlOp: INDEX
                                                                                    list: ops
                                                                                        HdlValueId: znUDS_sync
                                                                                        HdlValueInt: 2
                                                                                HdlValueInt: 0
                                                                HdlOp: EQ
                                                                    list: ops
                                                                        HdlOp: INDEX
                                                                            list: ops
                                                                                HdlValueId: znLDS_sync
                                                                                HdlValueInt: 2
                                                                        HdlValueInt: 0
                                                        HdlStmBlock: SEQ
                                                            list: body
                                                                HdlStmAssign
                                                                    HdlOp: CONCAT
                                                                        list: ops
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlValueId: z3addr
                                                                                    HdlOp: DOWNTO
                                                                                        list: ops
                                                                                            HdlValueInt: 15
                                                                                            HdlValueInt: 2
                                                                            HdlValueInt: 00
                                                                    HdlValueId: zaddr_regpart
                                                                HdlStmAssign
                                                                    HdlValueId: REGREAD
                                                                    HdlValueId: zorro_state
                                                        list: elifs
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmAssign
                                                HdlValueInt: 0
                                                HdlValueId: slaven
                HdlStmBlock: SEQ
                    list: body
                        HdlStmAssign
                            HdlValueInt: 0
                            HdlValueId: slaven
    DEL HdlStmCaseType@@CASE from zorro_state
    DEL HdlValueId@@zorro_state from zorro_state
    DEL HdlValueId@@Z2_WARMUP from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlOp: TERNARY
        list: ops
            HdlOp: GT
                list: ops
                    HdlValueId: blitter_x3
                    HdlValueId: blitter_x4
            HdlValueInt: 1
            HdlValueInt: 0
    HdlValueId: blitter_dirx

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlOp: TERNARY
        list: ops
            HdlOp: GT
                list: ops
                    HdlValueId: blitter_y3
                    HdlValueId: blitter_y4
            HdlValueInt: 1
            HdlValueInt: 0
    HdlValueId: blitter_diry

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlOp: ADD
        list: ops
            HdlValueId: blitter_base
            HdlOp: SLL
                list: ops
                    HdlValueId: blitter_y3
                    HdlValueId: row_pitch_shift
    HdlValueId: blitter_ptr2


CommitId: 327b82476418d01e840f918063de0e65a3d4f9ee
WIP cfgin/cfgout sequencing; fix possible deadlock when switching resolutions; some blitter optimization; revision number
--- a/z2-minispartan/z2.v
+++ b/z2-minispartan/z2.v
@@ -1282,10 +1313,11 @@ always @(posedge z_sample_clk) begin
           blitter_curx2 <= blitter_x3;
           blitter_cury2 <= blitter_y3;
           
-          //blitter_dirx <= (blitter_x3>blitter_x4)?1'b1:1'b0;
-          //blitter_diry <= (blitter_y3>blitter_y4)?1'b1:1'b0;
+          blitter_dirx <= (blitter_x3>blitter_x4)?1'b1:1'b0;
+          blitter_diry <= (blitter_y3>blitter_y4)?1'b1:1'b0;
           
           blitter_ptr <= blitter_base + (blitter_y1 << row_pitch_shift);
+          blitter_ptr2 <= blitter_base + (blitter_y3 << row_pitch_shift);
           blitter_rgb32_t <= 1;
         end
         'h2c: blitter_x3 <= regdata_in[11:0];

ParseResult:
UPD HdlStmCase@@zorro_state to zorro_state
    INS HdlStmCaseType@@CASE to zorro_state
    INS HdlValueId@@zorro_state to zorro_state
    INS tuple@@ to cases
    INS HdlValueId@@Z2_PRE_CONFIGURED to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmCase@@zorro_state to zorro_state
    UPD HdlStmBlock@@SEQ to SEQ
        UPD list@@body to elifs
        MOV list@@body to SEQ
        list: body
            HdlStmIf
                HdlValueId: dvid_reset
                HdlStmBlock: SEQ
                    list: body
                        HdlStmAssign
                            HdlValueInt: 10
                            HdlValueId: dvid_reset_counter
                        HdlStmAssign
                            HdlValueId: RESET_DVID
                            HdlValueId: zorro_state
                list: elifs
                    tuple
                        HdlOp: EQ
                            list: ops
                                HdlOp: INDEX
                                    list: ops
                                        HdlValueId: znFCS_sync
                                        HdlValueInt: 2
                                HdlValueInt: 0
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmIf
                                    HdlValueId: z3addr_zero
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmAssign
                                                HdlValueInt: 0
                                                HdlValueId: z3_confdone
                                            HdlStmAssign
                                                HdlValueId: RESET
                                                HdlValueId: zorro_state
                                    list: elifs
                                        tuple
                                            HdlOp: AND_LOG
                                                list: ops
                                                    HdlValueId: z3addr_in_ram
                                                    HdlValueId: zorro_write
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlStmAssign
                                                        HdlValueInt: 1
                                                        HdlValueId: slaven
                                                    HdlStmIf
                                                        HdlOp: OR_LOG
                                                            list: ops
                                                                HdlOp: OR_LOG
                                                                    list: ops
                                                                        HdlOp: OR_LOG
                                                                            list: ops
                                                                                HdlOp: EQ
                                                                                    list: ops
                                                                                        HdlOp: INDEX
                                                                                            list: ops
                                                                                                HdlValueId: znUDS_sync
                                                                                                HdlValueInt: 2
                                                                                        HdlValueInt: 0
                                                                                HdlOp: EQ
                                                                                    list: ops
                                                                                        HdlOp: INDEX
                                                                                            list: ops
                                                                                                HdlValueId: znLDS_sync
                                                                                                HdlValueInt: 2
                                                                                        HdlValueInt: 0
                                                                        HdlOp: EQ
                                                                            list: ops
                                                                                HdlOp: INDEX
                                                                                    list: ops
                                                                                        HdlValueId: znDS1_sync
                                                                                        HdlValueInt: 2
                                                                                HdlValueInt: 0
                                                                HdlOp: EQ
                                                                    list: ops
                                                                        HdlOp: INDEX
                                                                            list: ops
                                                                                HdlValueId: znDS0_sync
                                                                                HdlValueInt: 2
                                                                        HdlValueInt: 0
                                                        HdlStmBlock: SEQ
                                                            list: body
                                                                HdlStmAssign
                                                                    HdlValueId: Z3_WRITE_UPPER
                                                                    HdlValueId: zorro_state
                                                        list: elifs
                                        tuple
                                            HdlOp: AND_LOG
                                                list: ops
                                                    HdlValueId: z3addr_in_ram
                                                    HdlValueId: zorro_read
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlStmAssign
                                                        HdlValueInt: 1
                                                        HdlValueId: slaven
                                                    HdlStmAssign
                                                        HdlValueId: Z3_READ_UPPER
                                                        HdlValueId: zorro_state
                                        tuple
                                            HdlOp: AND_LOG
                                                list: ops
                                                    HdlValueId: zorro_write
                                                    HdlValueId: z3addr_in_reg
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlStmAssign
                                                        HdlValueInt: 1
                                                        HdlValueId: slaven
                                                    HdlStmIf
                                                        HdlOp: EQ
                                                            list: ops
                                                                HdlOp: INDEX
                                                                    list: ops
                                                                        HdlValueId: znDS1_sync
                                                                        HdlValueInt: 2
                                                                HdlValueInt: 0
                                                        HdlStmBlock: SEQ
                                                            list: body
                                                                HdlStmAssign
                                                                    HdlValueId: data_in_z3_low16
                                                                    HdlValueId: regdata_in
                                                                HdlStmAssign
                                                                    HdlOp: OR
                                                                        list: ops
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlValueId: z3addr
                                                                                    HdlOp: DOWNTO
                                                                                        list: ops
                                                                                            HdlValueInt: 15
                                                                                            HdlValueInt: 0
                                                                            HdlValueInt: 2
                                                                    HdlValueId: zaddr_regpart
                                                                HdlStmAssign
                                                                    HdlValueId: REGWRITE
                                                                    HdlValueId: zorro_state
                                                        list: elifs
                                                            tuple
                                                                HdlOp: EQ
                                                                    list: ops
                                                                        HdlOp: INDEX
                                                                            list: ops
                                                                                HdlValueId: znUDS_sync
                                                                                HdlValueInt: 2
                                                                        HdlValueInt: 0
                                                                HdlStmBlock: SEQ
                                                                    list: body
                                                                        HdlStmAssign
                                                                            HdlValueId: zdata_in_sync
                                                                            HdlValueId: regdata_in
                                                                        HdlStmAssign
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlValueId: z3addr
                                                                                    HdlOp: DOWNTO
                                                                                        list: ops
                                                                                            HdlValueInt: 15
                                                                                            HdlValueInt: 0
                                                                            HdlValueId: zaddr_regpart
                                                                        HdlStmAssign
                                                                            HdlValueId: REGWRITE
                                                                            HdlValueId: zorro_state
                                        tuple
                                            HdlOp: AND_LOG
                                                list: ops
                                                    HdlValueId: zorro_read
                                                    HdlValueId: z3addr_in_reg
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlStmAssign
                                                        HdlValueInt: 1
                                                        HdlValueId: slaven
                                                    HdlStmAssign
                                                        HdlValueInt: 0
                                                        HdlValueId: data_z3_hi16
                                                    HdlStmAssign
                                                        HdlValueInt: 0
                                                        HdlValueId: data_z3_low16
                                                    HdlStmIf
                                                        HdlOp: OR_LOG
                                                            list: ops
                                                                HdlOp: OR_LOG
                                                                    list: ops
                                                                        HdlOp: OR_LOG
                                                                            list: ops
                                                                                HdlOp: EQ
                                                                                    list: ops
                                                                                        HdlOp: INDEX
                                                                                            list: ops
                                                                                                HdlValueId: znDS1_sync
                                                                                                HdlValueInt: 2
                                                                                        HdlValueInt: 0
                                                                                HdlOp: EQ
                                                                                    list: ops
                                                                                        HdlOp: INDEX
                                                                                            list: ops
                                                                                                HdlValueId: znDS0_sync
                                                                                                HdlValueInt: 2
                                                                                        HdlValueInt: 0
                                                                        HdlOp: EQ
                                                                            list: ops
                                                                                HdlOp: INDEX
                                                                                    list: ops
                                                                                        HdlValueId: znUDS_sync
                                                                                        HdlValueInt: 2
                                                                                HdlValueInt: 0
                                                                HdlOp: EQ
                                                                    list: ops
                                                                        HdlOp: INDEX
                                                                            list: ops
                                                                                HdlValueId: znLDS_sync
                                                                                HdlValueInt: 2
                                                                        HdlValueInt: 0
                                                        HdlStmBlock: SEQ
                                                            list: body
                                                                HdlStmAssign
                                                                    HdlOp: CONCAT
                                                                        list: ops
                                                                            HdlOp: INDEX
                                                                                list: ops
                                                                                    HdlValueId: z3addr
                                                                                    HdlOp: DOWNTO
                                                                                        list: ops
                                                                                            HdlValueInt: 15
                                                                                            HdlValueInt: 2
                                                                            HdlValueInt: 00
                                                                    HdlValueId: zaddr_regpart
                                                                HdlStmAssign
                                                                    HdlValueId: REGREAD
                                                                    HdlValueId: zorro_state
                                                        list: elifs
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmAssign
                                                HdlValueInt: 0
                                                HdlValueId: slaven
                HdlStmBlock: SEQ
                    list: body
                        HdlStmAssign
                            HdlValueInt: 0
                            HdlValueId: slaven
    DEL HdlStmCaseType@@CASE from zorro_state
    DEL HdlValueId@@zorro_state from zorro_state
    DEL HdlValueId@@Z2_WARMUP from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases


CommitId: 327b82476418d01e840f918063de0e65a3d4f9ee
WIP cfgin/cfgout sequencing; fix possible deadlock when switching resolutions; some blitter optimization; revision number
--- a/z2-minispartan/z2.v
+++ b/z2-minispartan/z2.v
@@ -1324,6 +1356,10 @@ always @(posedge z_sample_clk) begin
         'h6c: sd_data_in <= regdata_in[15:8];
       endcase
     end
+    
+    default:
+      // shouldn't happen
+      zorro_state <= CONFIGURED;
 
   endcase
 

ParseResult:
UPD HdlStmCase@@zorro_state to zorro_state
    INS HdlStmCaseType@@CASE to zorro_state
    INS HdlValueId@@zorro_state to zorro_state
    INS tuple@@ to cases
    INS HdlValueId@@Z2_PRE_CONFIGURED to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ


CommitId: 327b82476418d01e840f918063de0e65a3d4f9ee
WIP cfgin/cfgout sequencing; fix possible deadlock when switching resolutions; some blitter optimization; revision number
--- a/z2-minispartan/z2.v
+++ b/z2-minispartan/z2.v
@@ -1348,7 +1384,7 @@ always @(posedge z_sample_clk) begin
         ram_burst <= 0;
         ram_arbiter_state <= RAM_BURST_OFF;
       end else begin
-        ram_burst <= 1; //burst_enabled; // FIXME
+        ram_burst <= 1;
         ram_arbiter_state <= RAM_BURST_ON;
       end
     end

ParseResult:
UPD HdlStmCase@@zorro_state to zorro_state
    INS HdlStmCaseType@@CASE to zorro_state
    INS HdlValueId@@zorro_state to zorro_state
    INS tuple@@ to cases
    INS HdlValueId@@Z2_PRE_CONFIGURED to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ


CommitId: 327b82476418d01e840f918063de0e65a3d4f9ee
WIP cfgin/cfgout sequencing; fix possible deadlock when switching resolutions; some blitter optimization; revision number
--- a/z2-minispartan/z2.v
+++ b/z2-minispartan/z2.v
@@ -1364,7 +1400,7 @@ always @(posedge z_sample_clk) begin
     end
     
     RAM_FETCHING_ROW8: begin
-      if (fetch_x == (screen_w + margin_x)) begin
+      if (fetch_x >= (screen_w + margin_x)) begin
         row_fetched <= 1; // row completely fetched
         ram_burst <= 0;
         ram_arbiter_state <= RAM_READY;

ParseResult:
UPD HdlStmIf@@ to 
    UPD HdlOp@@EQ to GE


CommitId: 327b82476418d01e840f918063de0e65a3d4f9ee
WIP cfgin/cfgout sequencing; fix possible deadlock when switching resolutions; some blitter optimization; revision number
--- a/z2-minispartan/z2.v
+++ b/z2-minispartan/z2.v
@@ -1373,7 +1409,7 @@ always @(posedge z_sample_clk) begin
         ram_enable <= 1;
         ram_write <= 0;
         ram_byte_enable <= 'b11;
-        ram_addr  <= ram_addr + 1'b1; // fetch_y + fetch_x; //2; //((fetch_y << 11) | fetch_x2); // burst incremented
+        ram_addr  <= ram_addr + 1'b1; // burst incremented
       
         fetch_x <= fetch_x + 1'b1;
         fetch_x2 <= fetch_x2 + 1'b1;

ParseResult:
UPD HdlStmIf@@ to 
    UPD HdlOp@@EQ to GE


CommitId: 327b82476418d01e840f918063de0e65a3d4f9ee
WIP cfgin/cfgout sequencing; fix possible deadlock when switching resolutions; some blitter optimization; revision number
--- a/z2-minispartan/z2.v
+++ b/z2-minispartan/z2.v
@@ -1397,7 +1433,7 @@ always @(posedge z_sample_clk) begin
         end
         
         ram_arbiter_state <= RAM_READY;
-      end else if (/*counter_x < safe_x1 || */counter_x > safe_x2) begin
+      end else if (counter_x > safe_x2) begin
         // do nothing if not in safe area
         
       // BLITTER ----------------------------------------------------------------

ParseResult:
UPD HdlStmIf@@ to 
    INS tuple@@ to elifs
    tuple
        HdlOp: AND_LOG
            list: ops
                HdlOp: EQ
                    list: ops
                        HdlValueId: blitter_enable
                        HdlValueInt: 2
                HdlValueId: cmd_ready
        HdlStmBlock: SEQ
            list: body
                HdlStmIf
                    HdlValueId: data_out_queue_empty
                    HdlStmBlock: SEQ
                        list: body
                            HdlStmAssign
                                HdlValueInt: 11
                                HdlValueId: ram_byte_enable
                            HdlStmAssign
                                HdlOp: ADD
                                    list: ops
                                        HdlValueId: blitter_ptr2
                                        HdlValueId: blitter_curx2
                                HdlValueId: ram_addr
                            HdlStmAssign
                                HdlValueInt: 0
                                HdlValueId: ram_write
                            HdlStmAssign
                                HdlValueInt: 1
                                HdlValueId: ram_enable
                            HdlStmAssign
                                HdlValueId: RAM_READING_BLIT
                                HdlValueId: ram_arbiter_state
                    list: elifs
                    HdlStmAssign: if_false
                        HdlValueInt: 0
                        HdlValueId: ram_enable
    INS tuple@@ to elifs
    tuple
        HdlOp: AND_LOG
            list: ops
                HdlOp: EQ
                    list: ops
                        HdlValueId: blitter_enable
                        HdlValueInt: 4
                HdlValueId: cmd_ready
        HdlStmBlock: SEQ
            list: body
                HdlStmAssign
                    HdlOp: ADD
                        list: ops
                            HdlValueId: blitter_ptr
                            HdlValueId: blitter_curx
                    HdlValueId: ram_addr
                HdlStmAssign
                    HdlValueId: blitter_copy_rgb
                    HdlValueId: ram_data_in
                HdlStmAssign
                    HdlValueInt: 1
                    HdlValueId: ram_write
                HdlStmAssign
                    HdlValueInt: 1
                    HdlValueId: ram_enable
                HdlStmAssign
                    HdlValueInt: 11
                    HdlValueId: ram_byte_enable
                HdlStmIf
                    HdlOp: NE
                        list: ops
                            HdlValueId: blitter_curx2
                            HdlValueId: blitter_x4
                    HdlStmBlock: SEQ
                        list: body
                            HdlStmIf
                                HdlOp: EQ
                                    list: ops
                                        HdlValueId: blitter_dirx
                                        HdlValueInt: 1
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlStmAssign
                                            HdlOp: SUB
                                                list: ops
                                                    HdlValueId: blitter_curx2
                                                    HdlValueInt: 1
                                            HdlValueId: blitter_curx2
                                        HdlStmAssign
                                            HdlOp: SUB
                                                list: ops
                                                    HdlValueId: blitter_curx
                                                    HdlValueInt: 1
                                            HdlValueId: blitter_curx
                                list: elifs
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlStmAssign
                                            HdlOp: ADD
                                                list: ops
                                                    HdlValueId: blitter_curx2
                                                    HdlValueInt: 1
                                            HdlValueId: blitter_curx2
                                        HdlStmAssign
                                            HdlOp: ADD
                                                list: ops
                                                    HdlValueId: blitter_curx
                                                    HdlValueInt: 1
                                            HdlValueId: blitter_curx
                    list: elifs
                        tuple
                            HdlOp: EQ
                                list: ops
                                    HdlValueId: blitter_cury2
                                    HdlValueId: blitter_y4
                            HdlStmBlock: SEQ
                                list: body
                        tuple
                            HdlOp: EQ
                                list: ops
                                    HdlValueId: blitter_diry
                                    HdlValueInt: 0
                            HdlStmBlock: SEQ
                                list: body
                                    HdlStmAssign
                                        HdlValueId: blitter_x1
                                        HdlValueId: blitter_curx
                                    HdlStmAssign
                                        HdlValueId: blitter_x3
                                        HdlValueId: blitter_curx2
                                    HdlStmAssign
                                        HdlOp: ADD
                                            list: ops
                                                HdlValueId: blitter_ptr
                                                HdlValueId: row_pitch
                                        HdlValueId: blitter_ptr
                                    HdlStmAssign
                                        HdlOp: ADD
                                            list: ops
                                                HdlValueId: blitter_ptr2
                                                HdlValueId: row_pitch
                                        HdlValueId: blitter_ptr2
                                    HdlStmAssign
                                        HdlOp: ADD
                                            list: ops
                                                HdlValueId: blitter_cury
                                                HdlValueInt: 1
                                        HdlValueId: blitter_cury
                                    HdlStmAssign
                                        HdlOp: ADD
                                            list: ops
                                                HdlValueId: blitter_cury2
                                                HdlValueInt: 1
                                        HdlValueId: blitter_cury2
                    HdlStmBlock: SEQ
                        list: body
                            HdlStmAssign
                                HdlValueId: blitter_x1
                                HdlValueId: blitter_curx
                            HdlStmAssign
                                HdlValueId: blitter_x3
                                HdlValueId: blitter_curx2
                            HdlStmAssign
                                HdlOp: SUB
                                    list: ops
                                        HdlValueId: blitter_ptr
                                        HdlValueId: row_pitch
                                HdlValueId: blitter_ptr
                            HdlStmAssign
                                HdlOp: SUB
                                    list: ops
                                        HdlValueId: blitter_ptr2
                                        HdlValueId: row_pitch
                                HdlValueId: blitter_ptr2
                            HdlStmAssign
                                HdlOp: SUB
                                    list: ops
                                        HdlValueId: blitter_cury
                                        HdlValueInt: 1
                                HdlValueId: blitter_cury
                            HdlStmAssign
                                HdlOp: SUB
                                    list: ops
                                        HdlValueId: blitter_cury2
                                        HdlValueInt: 1
                                HdlValueId: blitter_cury2
                HdlStmAssign
                    HdlValueInt: 5
                    HdlValueId: blitter_enable
    INS tuple@@ to elifs
    tuple
        HdlOp: EQ
            list: ops
                HdlValueId: blitter_enable
                HdlValueInt: 5
        HdlStmBlock: SEQ
            list: body
                HdlStmIf
                    HdlOp: AND_LOG
                        list: ops
                            HdlOp: EQ
                                list: ops
                                    HdlValueId: blitter_curx2
                                    HdlValueId: blitter_x4
                            HdlOp: EQ
                                list: ops
                                    HdlValueId: blitter_cury2
                                    HdlValueId: blitter_y4
                    HdlStmAssign: if_true
                        HdlValueInt: 0
                        HdlValueId: blitter_enable
                    list: elifs
                    HdlStmAssign: if_false
                        HdlValueInt: 2
                        HdlValueId: blitter_enable
                HdlStmAssign
                    HdlValueInt: 0
                    HdlValueId: ram_enable


CommitId: 327b82476418d01e840f918063de0e65a3d4f9ee
WIP cfgin/cfgout sequencing; fix possible deadlock when switching resolutions; some blitter optimization; revision number
--- a/z2-minispartan/z2.v
+++ b/z2-minispartan/z2.v
@@ -1427,11 +1463,11 @@ always @(posedge z_sample_clk) begin
         end
       end else if (blitter_enable>=2) begin
         blitter_enable <= 0;
-      /*end else if (blitter_enable==2 && cmd_ready) begin
+      end else if (blitter_enable==2 && cmd_ready) begin
         // block copy read
         if (data_out_queue_empty) begin
           ram_byte_enable <= 'b11;
-          ram_addr    <= blitter_base+(blitter_cury2<<11)+blitter_curx2; // FIXME
+          ram_addr    <= blitter_ptr2+blitter_curx2;
           ram_write   <= 0;
           ram_enable  <= 1;
           ram_arbiter_state <= RAM_READING_BLIT;

ParseResult:
UPD HdlStmIf@@ to 
    INS tuple@@ to elifs
    tuple
        HdlOp: AND_LOG
            list: ops
                HdlOp: EQ
                    list: ops
                        HdlValueId: blitter_enable
                        HdlValueInt: 2
                HdlValueId: cmd_ready
        HdlStmBlock: SEQ
            list: body
                HdlStmIf
                    HdlValueId: data_out_queue_empty
                    HdlStmBlock: SEQ
                        list: body
                            HdlStmAssign
                                HdlValueInt: 11
                                HdlValueId: ram_byte_enable
                            HdlStmAssign
                                HdlOp: ADD
                                    list: ops
                                        HdlValueId: blitter_ptr2
                                        HdlValueId: blitter_curx2
                                HdlValueId: ram_addr
                            HdlStmAssign
                                HdlValueInt: 0
                                HdlValueId: ram_write
                            HdlStmAssign
                                HdlValueInt: 1
                                HdlValueId: ram_enable
                            HdlStmAssign
                                HdlValueId: RAM_READING_BLIT
                                HdlValueId: ram_arbiter_state
                    list: elifs
                    HdlStmAssign: if_false
                        HdlValueInt: 0
                        HdlValueId: ram_enable
    INS tuple@@ to elifs
    tuple
        HdlOp: AND_LOG
            list: ops
                HdlOp: EQ
                    list: ops
                        HdlValueId: blitter_enable
                        HdlValueInt: 4
                HdlValueId: cmd_ready
        HdlStmBlock: SEQ
            list: body
                HdlStmAssign
                    HdlOp: ADD
                        list: ops
                            HdlValueId: blitter_ptr
                            HdlValueId: blitter_curx
                    HdlValueId: ram_addr
                HdlStmAssign
                    HdlValueId: blitter_copy_rgb
                    HdlValueId: ram_data_in
                HdlStmAssign
                    HdlValueInt: 1
                    HdlValueId: ram_write
                HdlStmAssign
                    HdlValueInt: 1
                    HdlValueId: ram_enable
                HdlStmAssign
                    HdlValueInt: 11
                    HdlValueId: ram_byte_enable
                HdlStmIf
                    HdlOp: NE
                        list: ops
                            HdlValueId: blitter_curx2
                            HdlValueId: blitter_x4
                    HdlStmBlock: SEQ
                        list: body
                            HdlStmIf
                                HdlOp: EQ
                                    list: ops
                                        HdlValueId: blitter_dirx
                                        HdlValueInt: 1
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlStmAssign
                                            HdlOp: SUB
                                                list: ops
                                                    HdlValueId: blitter_curx2
                                                    HdlValueInt: 1
                                            HdlValueId: blitter_curx2
                                        HdlStmAssign
                                            HdlOp: SUB
                                                list: ops
                                                    HdlValueId: blitter_curx
                                                    HdlValueInt: 1
                                            HdlValueId: blitter_curx
                                list: elifs
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlStmAssign
                                            HdlOp: ADD
                                                list: ops
                                                    HdlValueId: blitter_curx2
                                                    HdlValueInt: 1
                                            HdlValueId: blitter_curx2
                                        HdlStmAssign
                                            HdlOp: ADD
                                                list: ops
                                                    HdlValueId: blitter_curx
                                                    HdlValueInt: 1
                                            HdlValueId: blitter_curx
                    list: elifs
                        tuple
                            HdlOp: EQ
                                list: ops
                                    HdlValueId: blitter_cury2
                                    HdlValueId: blitter_y4
                            HdlStmBlock: SEQ
                                list: body
                        tuple
                            HdlOp: EQ
                                list: ops
                                    HdlValueId: blitter_diry
                                    HdlValueInt: 0
                            HdlStmBlock: SEQ
                                list: body
                                    HdlStmAssign
                                        HdlValueId: blitter_x1
                                        HdlValueId: blitter_curx
                                    HdlStmAssign
                                        HdlValueId: blitter_x3
                                        HdlValueId: blitter_curx2
                                    HdlStmAssign
                                        HdlOp: ADD
                                            list: ops
                                                HdlValueId: blitter_ptr
                                                HdlValueId: row_pitch
                                        HdlValueId: blitter_ptr
                                    HdlStmAssign
                                        HdlOp: ADD
                                            list: ops
                                                HdlValueId: blitter_ptr2
                                                HdlValueId: row_pitch
                                        HdlValueId: blitter_ptr2
                                    HdlStmAssign
                                        HdlOp: ADD
                                            list: ops
                                                HdlValueId: blitter_cury
                                                HdlValueInt: 1
                                        HdlValueId: blitter_cury
                                    HdlStmAssign
                                        HdlOp: ADD
                                            list: ops
                                                HdlValueId: blitter_cury2
                                                HdlValueInt: 1
                                        HdlValueId: blitter_cury2
                    HdlStmBlock: SEQ
                        list: body
                            HdlStmAssign
                                HdlValueId: blitter_x1
                                HdlValueId: blitter_curx
                            HdlStmAssign
                                HdlValueId: blitter_x3
                                HdlValueId: blitter_curx2
                            HdlStmAssign
                                HdlOp: SUB
                                    list: ops
                                        HdlValueId: blitter_ptr
                                        HdlValueId: row_pitch
                                HdlValueId: blitter_ptr
                            HdlStmAssign
                                HdlOp: SUB
                                    list: ops
                                        HdlValueId: blitter_ptr2
                                        HdlValueId: row_pitch
                                HdlValueId: blitter_ptr2
                            HdlStmAssign
                                HdlOp: SUB
                                    list: ops
                                        HdlValueId: blitter_cury
                                        HdlValueInt: 1
                                HdlValueId: blitter_cury
                            HdlStmAssign
                                HdlOp: SUB
                                    list: ops
                                        HdlValueId: blitter_cury2
                                        HdlValueInt: 1
                                HdlValueId: blitter_cury2
                HdlStmAssign
                    HdlValueInt: 5
                    HdlValueId: blitter_enable
    INS tuple@@ to elifs
    tuple
        HdlOp: EQ
            list: ops
                HdlValueId: blitter_enable
                HdlValueInt: 5
        HdlStmBlock: SEQ
            list: body
                HdlStmIf
                    HdlOp: AND_LOG
                        list: ops
                            HdlOp: EQ
                                list: ops
                                    HdlValueId: blitter_curx2
                                    HdlValueId: blitter_x4
                            HdlOp: EQ
                                list: ops
                                    HdlValueId: blitter_cury2
                                    HdlValueId: blitter_y4
                    HdlStmAssign: if_true
                        HdlValueInt: 0
                        HdlValueId: blitter_enable
                    list: elifs
                    HdlStmAssign: if_false
                        HdlValueInt: 2
                        HdlValueId: blitter_enable
                HdlStmAssign
                    HdlValueInt: 0
                    HdlValueId: ram_enable


CommitId: 327b82476418d01e840f918063de0e65a3d4f9ee
WIP cfgin/cfgout sequencing; fix possible deadlock when switching resolutions; some blitter optimization; revision number
--- a/z2-minispartan/z2.v
+++ b/z2-minispartan/z2.v
@@ -1440,7 +1476,7 @@ always @(posedge z_sample_clk) begin
         
       end else if (blitter_enable==4 && cmd_ready) begin
         // block copy write
-        ram_addr    <= blitter_base+(blitter_cury<<11)+blitter_curx; // FIXME
+        ram_addr    <= blitter_ptr+blitter_curx;
         ram_data_in <= blitter_copy_rgb;
         ram_write   <= 1;
         ram_enable  <= 1;

ParseResult:
UPD HdlStmIf@@ to 
    INS tuple@@ to elifs
    tuple
        HdlOp: AND_LOG
            list: ops
                HdlOp: EQ
                    list: ops
                        HdlValueId: blitter_enable
                        HdlValueInt: 2
                HdlValueId: cmd_ready
        HdlStmBlock: SEQ
            list: body
                HdlStmIf
                    HdlValueId: data_out_queue_empty
                    HdlStmBlock: SEQ
                        list: body
                            HdlStmAssign
                                HdlValueInt: 11
                                HdlValueId: ram_byte_enable
                            HdlStmAssign
                                HdlOp: ADD
                                    list: ops
                                        HdlValueId: blitter_ptr2
                                        HdlValueId: blitter_curx2
                                HdlValueId: ram_addr
                            HdlStmAssign
                                HdlValueInt: 0
                                HdlValueId: ram_write
                            HdlStmAssign
                                HdlValueInt: 1
                                HdlValueId: ram_enable
                            HdlStmAssign
                                HdlValueId: RAM_READING_BLIT
                                HdlValueId: ram_arbiter_state
                    list: elifs
                    HdlStmAssign: if_false
                        HdlValueInt: 0
                        HdlValueId: ram_enable
    INS tuple@@ to elifs
    tuple
        HdlOp: AND_LOG
            list: ops
                HdlOp: EQ
                    list: ops
                        HdlValueId: blitter_enable
                        HdlValueInt: 4
                HdlValueId: cmd_ready
        HdlStmBlock: SEQ
            list: body
                HdlStmAssign
                    HdlOp: ADD
                        list: ops
                            HdlValueId: blitter_ptr
                            HdlValueId: blitter_curx
                    HdlValueId: ram_addr
                HdlStmAssign
                    HdlValueId: blitter_copy_rgb
                    HdlValueId: ram_data_in
                HdlStmAssign
                    HdlValueInt: 1
                    HdlValueId: ram_write
                HdlStmAssign
                    HdlValueInt: 1
                    HdlValueId: ram_enable
                HdlStmAssign
                    HdlValueInt: 11
                    HdlValueId: ram_byte_enable
                HdlStmIf
                    HdlOp: NE
                        list: ops
                            HdlValueId: blitter_curx2
                            HdlValueId: blitter_x4
                    HdlStmBlock: SEQ
                        list: body
                            HdlStmIf
                                HdlOp: EQ
                                    list: ops
                                        HdlValueId: blitter_dirx
                                        HdlValueInt: 1
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlStmAssign
                                            HdlOp: SUB
                                                list: ops
                                                    HdlValueId: blitter_curx2
                                                    HdlValueInt: 1
                                            HdlValueId: blitter_curx2
                                        HdlStmAssign
                                            HdlOp: SUB
                                                list: ops
                                                    HdlValueId: blitter_curx
                                                    HdlValueInt: 1
                                            HdlValueId: blitter_curx
                                list: elifs
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlStmAssign
                                            HdlOp: ADD
                                                list: ops
                                                    HdlValueId: blitter_curx2
                                                    HdlValueInt: 1
                                            HdlValueId: blitter_curx2
                                        HdlStmAssign
                                            HdlOp: ADD
                                                list: ops
                                                    HdlValueId: blitter_curx
                                                    HdlValueInt: 1
                                            HdlValueId: blitter_curx
                    list: elifs
                        tuple
                            HdlOp: EQ
                                list: ops
                                    HdlValueId: blitter_cury2
                                    HdlValueId: blitter_y4
                            HdlStmBlock: SEQ
                                list: body
                        tuple
                            HdlOp: EQ
                                list: ops
                                    HdlValueId: blitter_diry
                                    HdlValueInt: 0
                            HdlStmBlock: SEQ
                                list: body
                                    HdlStmAssign
                                        HdlValueId: blitter_x1
                                        HdlValueId: blitter_curx
                                    HdlStmAssign
                                        HdlValueId: blitter_x3
                                        HdlValueId: blitter_curx2
                                    HdlStmAssign
                                        HdlOp: ADD
                                            list: ops
                                                HdlValueId: blitter_ptr
                                                HdlValueId: row_pitch
                                        HdlValueId: blitter_ptr
                                    HdlStmAssign
                                        HdlOp: ADD
                                            list: ops
                                                HdlValueId: blitter_ptr2
                                                HdlValueId: row_pitch
                                        HdlValueId: blitter_ptr2
                                    HdlStmAssign
                                        HdlOp: ADD
                                            list: ops
                                                HdlValueId: blitter_cury
                                                HdlValueInt: 1
                                        HdlValueId: blitter_cury
                                    HdlStmAssign
                                        HdlOp: ADD
                                            list: ops
                                                HdlValueId: blitter_cury2
                                                HdlValueInt: 1
                                        HdlValueId: blitter_cury2
                    HdlStmBlock: SEQ
                        list: body
                            HdlStmAssign
                                HdlValueId: blitter_x1
                                HdlValueId: blitter_curx
                            HdlStmAssign
                                HdlValueId: blitter_x3
                                HdlValueId: blitter_curx2
                            HdlStmAssign
                                HdlOp: SUB
                                    list: ops
                                        HdlValueId: blitter_ptr
                                        HdlValueId: row_pitch
                                HdlValueId: blitter_ptr
                            HdlStmAssign
                                HdlOp: SUB
                                    list: ops
                                        HdlValueId: blitter_ptr2
                                        HdlValueId: row_pitch
                                HdlValueId: blitter_ptr2
                            HdlStmAssign
                                HdlOp: SUB
                                    list: ops
                                        HdlValueId: blitter_cury
                                        HdlValueInt: 1
                                HdlValueId: blitter_cury
                            HdlStmAssign
                                HdlOp: SUB
                                    list: ops
                                        HdlValueId: blitter_cury2
                                        HdlValueInt: 1
                                HdlValueId: blitter_cury2
                HdlStmAssign
                    HdlValueInt: 5
                    HdlValueId: blitter_enable
    INS tuple@@ to elifs
    tuple
        HdlOp: EQ
            list: ops
                HdlValueId: blitter_enable
                HdlValueInt: 5
        HdlStmBlock: SEQ
            list: body
                HdlStmIf
                    HdlOp: AND_LOG
                        list: ops
                            HdlOp: EQ
                                list: ops
                                    HdlValueId: blitter_curx2
                                    HdlValueId: blitter_x4
                            HdlOp: EQ
                                list: ops
                                    HdlValueId: blitter_cury2
                                    HdlValueId: blitter_y4
                    HdlStmAssign: if_true
                        HdlValueInt: 0
                        HdlValueId: blitter_enable
                    list: elifs
                    HdlStmAssign: if_false
                        HdlValueInt: 2
                        HdlValueId: blitter_enable
                HdlStmAssign
                    HdlValueInt: 0
                    HdlValueId: ram_enable


CommitId: 327b82476418d01e840f918063de0e65a3d4f9ee
WIP cfgin/cfgout sequencing; fix possible deadlock when switching resolutions; some blitter optimization; revision number
--- a/z2-minispartan/z2.v
+++ b/z2-minispartan/z2.v
@@ -1459,11 +1495,15 @@ always @(posedge z_sample_clk) begin
         end else if (blitter_diry == 0) begin
           blitter_curx <= blitter_x1;
           blitter_curx2 <= blitter_x3;
+          blitter_ptr <= blitter_ptr + row_pitch;
+          blitter_ptr2 <= blitter_ptr2 + row_pitch;
           blitter_cury <= blitter_cury + 1'b1;
           blitter_cury2 <= blitter_cury2 + 1'b1;
         end else begin
           blitter_curx <= blitter_x1;
           blitter_curx2 <= blitter_x3;
+          blitter_ptr <= blitter_ptr - row_pitch;
+          blitter_ptr2 <= blitter_ptr2 - row_pitch;
           blitter_cury <= blitter_cury - 1'b1;
           blitter_cury2 <= blitter_cury2 - 1'b1;
         end

ParseResult:
UPD HdlStmIf@@ to 
    INS tuple@@ to elifs
    tuple
        HdlOp: AND_LOG
            list: ops
                HdlOp: EQ
                    list: ops
                        HdlValueId: blitter_enable
                        HdlValueInt: 2
                HdlValueId: cmd_ready
        HdlStmBlock: SEQ
            list: body
                HdlStmIf
                    HdlValueId: data_out_queue_empty
                    HdlStmBlock: SEQ
                        list: body
                            HdlStmAssign
                                HdlValueInt: 11
                                HdlValueId: ram_byte_enable
                            HdlStmAssign
                                HdlOp: ADD
                                    list: ops
                                        HdlValueId: blitter_ptr2
                                        HdlValueId: blitter_curx2
                                HdlValueId: ram_addr
                            HdlStmAssign
                                HdlValueInt: 0
                                HdlValueId: ram_write
                            HdlStmAssign
                                HdlValueInt: 1
                                HdlValueId: ram_enable
                            HdlStmAssign
                                HdlValueId: RAM_READING_BLIT
                                HdlValueId: ram_arbiter_state
                    list: elifs
                    HdlStmAssign: if_false
                        HdlValueInt: 0
                        HdlValueId: ram_enable
    INS tuple@@ to elifs
    tuple
        HdlOp: AND_LOG
            list: ops
                HdlOp: EQ
                    list: ops
                        HdlValueId: blitter_enable
                        HdlValueInt: 4
                HdlValueId: cmd_ready
        HdlStmBlock: SEQ
            list: body
                HdlStmAssign
                    HdlOp: ADD
                        list: ops
                            HdlValueId: blitter_ptr
                            HdlValueId: blitter_curx
                    HdlValueId: ram_addr
                HdlStmAssign
                    HdlValueId: blitter_copy_rgb
                    HdlValueId: ram_data_in
                HdlStmAssign
                    HdlValueInt: 1
                    HdlValueId: ram_write
                HdlStmAssign
                    HdlValueInt: 1
                    HdlValueId: ram_enable
                HdlStmAssign
                    HdlValueInt: 11
                    HdlValueId: ram_byte_enable
                HdlStmIf
                    HdlOp: NE
                        list: ops
                            HdlValueId: blitter_curx2
                            HdlValueId: blitter_x4
                    HdlStmBlock: SEQ
                        list: body
                            HdlStmIf
                                HdlOp: EQ
                                    list: ops
                                        HdlValueId: blitter_dirx
                                        HdlValueInt: 1
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlStmAssign
                                            HdlOp: SUB
                                                list: ops
                                                    HdlValueId: blitter_curx2
                                                    HdlValueInt: 1
                                            HdlValueId: blitter_curx2
                                        HdlStmAssign
                                            HdlOp: SUB
                                                list: ops
                                                    HdlValueId: blitter_curx
                                                    HdlValueInt: 1
                                            HdlValueId: blitter_curx
                                list: elifs
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlStmAssign
                                            HdlOp: ADD
                                                list: ops
                                                    HdlValueId: blitter_curx2
                                                    HdlValueInt: 1
                                            HdlValueId: blitter_curx2
                                        HdlStmAssign
                                            HdlOp: ADD
                                                list: ops
                                                    HdlValueId: blitter_curx
                                                    HdlValueInt: 1
                                            HdlValueId: blitter_curx
                    list: elifs
                        tuple
                            HdlOp: EQ
                                list: ops
                                    HdlValueId: blitter_cury2
                                    HdlValueId: blitter_y4
                            HdlStmBlock: SEQ
                                list: body
                        tuple
                            HdlOp: EQ
                                list: ops
                                    HdlValueId: blitter_diry
                                    HdlValueInt: 0
                            HdlStmBlock: SEQ
                                list: body
                                    HdlStmAssign
                                        HdlValueId: blitter_x1
                                        HdlValueId: blitter_curx
                                    HdlStmAssign
                                        HdlValueId: blitter_x3
                                        HdlValueId: blitter_curx2
                                    HdlStmAssign
                                        HdlOp: ADD
                                            list: ops
                                                HdlValueId: blitter_ptr
                                                HdlValueId: row_pitch
                                        HdlValueId: blitter_ptr
                                    HdlStmAssign
                                        HdlOp: ADD
                                            list: ops
                                                HdlValueId: blitter_ptr2
                                                HdlValueId: row_pitch
                                        HdlValueId: blitter_ptr2
                                    HdlStmAssign
                                        HdlOp: ADD
                                            list: ops
                                                HdlValueId: blitter_cury
                                                HdlValueInt: 1
                                        HdlValueId: blitter_cury
                                    HdlStmAssign
                                        HdlOp: ADD
                                            list: ops
                                                HdlValueId: blitter_cury2
                                                HdlValueInt: 1
                                        HdlValueId: blitter_cury2
                    HdlStmBlock: SEQ
                        list: body
                            HdlStmAssign
                                HdlValueId: blitter_x1
                                HdlValueId: blitter_curx
                            HdlStmAssign
                                HdlValueId: blitter_x3
                                HdlValueId: blitter_curx2
                            HdlStmAssign
                                HdlOp: SUB
                                    list: ops
                                        HdlValueId: blitter_ptr
                                        HdlValueId: row_pitch
                                HdlValueId: blitter_ptr
                            HdlStmAssign
                                HdlOp: SUB
                                    list: ops
                                        HdlValueId: blitter_ptr2
                                        HdlValueId: row_pitch
                                HdlValueId: blitter_ptr2
                            HdlStmAssign
                                HdlOp: SUB
                                    list: ops
                                        HdlValueId: blitter_cury
                                        HdlValueInt: 1
                                HdlValueId: blitter_cury
                            HdlStmAssign
                                HdlOp: SUB
                                    list: ops
                                        HdlValueId: blitter_cury2
                                        HdlValueInt: 1
                                HdlValueId: blitter_cury2
                HdlStmAssign
                    HdlValueInt: 5
                    HdlValueId: blitter_enable
    INS tuple@@ to elifs
    tuple
        HdlOp: EQ
            list: ops
                HdlValueId: blitter_enable
                HdlValueInt: 5
        HdlStmBlock: SEQ
            list: body
                HdlStmIf
                    HdlOp: AND_LOG
                        list: ops
                            HdlOp: EQ
                                list: ops
                                    HdlValueId: blitter_curx2
                                    HdlValueId: blitter_x4
                            HdlOp: EQ
                                list: ops
                                    HdlValueId: blitter_cury2
                                    HdlValueId: blitter_y4
                    HdlStmAssign: if_true
                        HdlValueInt: 0
                        HdlValueId: blitter_enable
                    list: elifs
                    HdlStmAssign: if_false
                        HdlValueInt: 2
                        HdlValueId: blitter_enable
                HdlStmAssign
                    HdlValueInt: 0
                    HdlValueId: ram_enable


CommitId: 327b82476418d01e840f918063de0e65a3d4f9ee
WIP cfgin/cfgout sequencing; fix possible deadlock when switching resolutions; some blitter optimization; revision number
--- a/z2-minispartan/z2.v
+++ b/z2-minispartan/z2.v
@@ -1474,7 +1514,7 @@ always @(posedge z_sample_clk) begin
           blitter_enable <= 0;
         else
           blitter_enable <= 2;
-        ram_enable <= 0;*/
+        ram_enable <= 0;
         
       // ZORRO READ/WRITE ----------------------------------------------
       end else if (blitter_enable==0 && zorro_ram_read_request && cmd_ready) begin

ParseResult:
UPD HdlStmIf@@ to 
    INS tuple@@ to elifs
    tuple
        HdlOp: AND_LOG
            list: ops
                HdlOp: EQ
                    list: ops
                        HdlValueId: blitter_enable
                        HdlValueInt: 2
                HdlValueId: cmd_ready
        HdlStmBlock: SEQ
            list: body
                HdlStmIf
                    HdlValueId: data_out_queue_empty
                    HdlStmBlock: SEQ
                        list: body
                            HdlStmAssign
                                HdlValueInt: 11
                                HdlValueId: ram_byte_enable
                            HdlStmAssign
                                HdlOp: ADD
                                    list: ops
                                        HdlValueId: blitter_ptr2
                                        HdlValueId: blitter_curx2
                                HdlValueId: ram_addr
                            HdlStmAssign
                                HdlValueInt: 0
                                HdlValueId: ram_write
                            HdlStmAssign
                                HdlValueInt: 1
                                HdlValueId: ram_enable
                            HdlStmAssign
                                HdlValueId: RAM_READING_BLIT
                                HdlValueId: ram_arbiter_state
                    list: elifs
                    HdlStmAssign: if_false
                        HdlValueInt: 0
                        HdlValueId: ram_enable
    INS tuple@@ to elifs
    tuple
        HdlOp: AND_LOG
            list: ops
                HdlOp: EQ
                    list: ops
                        HdlValueId: blitter_enable
                        HdlValueInt: 4
                HdlValueId: cmd_ready
        HdlStmBlock: SEQ
            list: body
                HdlStmAssign
                    HdlOp: ADD
                        list: ops
                            HdlValueId: blitter_ptr
                            HdlValueId: blitter_curx
                    HdlValueId: ram_addr
                HdlStmAssign
                    HdlValueId: blitter_copy_rgb
                    HdlValueId: ram_data_in
                HdlStmAssign
                    HdlValueInt: 1
                    HdlValueId: ram_write
                HdlStmAssign
                    HdlValueInt: 1
                    HdlValueId: ram_enable
                HdlStmAssign
                    HdlValueInt: 11
                    HdlValueId: ram_byte_enable
                HdlStmIf
                    HdlOp: NE
                        list: ops
                            HdlValueId: blitter_curx2
                            HdlValueId: blitter_x4
                    HdlStmBlock: SEQ
                        list: body
                            HdlStmIf
                                HdlOp: EQ
                                    list: ops
                                        HdlValueId: blitter_dirx
                                        HdlValueInt: 1
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlStmAssign
                                            HdlOp: SUB
                                                list: ops
                                                    HdlValueId: blitter_curx2
                                                    HdlValueInt: 1
                                            HdlValueId: blitter_curx2
                                        HdlStmAssign
                                            HdlOp: SUB
                                                list: ops
                                                    HdlValueId: blitter_curx
                                                    HdlValueInt: 1
                                            HdlValueId: blitter_curx
                                list: elifs
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlStmAssign
                                            HdlOp: ADD
                                                list: ops
                                                    HdlValueId: blitter_curx2
                                                    HdlValueInt: 1
                                            HdlValueId: blitter_curx2
                                        HdlStmAssign
                                            HdlOp: ADD
                                                list: ops
                                                    HdlValueId: blitter_curx
                                                    HdlValueInt: 1
                                            HdlValueId: blitter_curx
                    list: elifs
                        tuple
                            HdlOp: EQ
                                list: ops
                                    HdlValueId: blitter_cury2
                                    HdlValueId: blitter_y4
                            HdlStmBlock: SEQ
                                list: body
                        tuple
                            HdlOp: EQ
                                list: ops
                                    HdlValueId: blitter_diry
                                    HdlValueInt: 0
                            HdlStmBlock: SEQ
                                list: body
                                    HdlStmAssign
                                        HdlValueId: blitter_x1
                                        HdlValueId: blitter_curx
                                    HdlStmAssign
                                        HdlValueId: blitter_x3
                                        HdlValueId: blitter_curx2
                                    HdlStmAssign
                                        HdlOp: ADD
                                            list: ops
                                                HdlValueId: blitter_ptr
                                                HdlValueId: row_pitch
                                        HdlValueId: blitter_ptr
                                    HdlStmAssign
                                        HdlOp: ADD
                                            list: ops
                                                HdlValueId: blitter_ptr2
                                                HdlValueId: row_pitch
                                        HdlValueId: blitter_ptr2
                                    HdlStmAssign
                                        HdlOp: ADD
                                            list: ops
                                                HdlValueId: blitter_cury
                                                HdlValueInt: 1
                                        HdlValueId: blitter_cury
                                    HdlStmAssign
                                        HdlOp: ADD
                                            list: ops
                                                HdlValueId: blitter_cury2
                                                HdlValueInt: 1
                                        HdlValueId: blitter_cury2
                    HdlStmBlock: SEQ
                        list: body
                            HdlStmAssign
                                HdlValueId: blitter_x1
                                HdlValueId: blitter_curx
                            HdlStmAssign
                                HdlValueId: blitter_x3
                                HdlValueId: blitter_curx2
                            HdlStmAssign
                                HdlOp: SUB
                                    list: ops
                                        HdlValueId: blitter_ptr
                                        HdlValueId: row_pitch
                                HdlValueId: blitter_ptr
                            HdlStmAssign
                                HdlOp: SUB
                                    list: ops
                                        HdlValueId: blitter_ptr2
                                        HdlValueId: row_pitch
                                HdlValueId: blitter_ptr2
                            HdlStmAssign
                                HdlOp: SUB
                                    list: ops
                                        HdlValueId: blitter_cury
                                        HdlValueInt: 1
                                HdlValueId: blitter_cury
                            HdlStmAssign
                                HdlOp: SUB
                                    list: ops
                                        HdlValueId: blitter_cury2
                                        HdlValueInt: 1
                                HdlValueId: blitter_cury2
                HdlStmAssign
                    HdlValueInt: 5
                    HdlValueId: blitter_enable
    INS tuple@@ to elifs
    tuple
        HdlOp: EQ
            list: ops
                HdlValueId: blitter_enable
                HdlValueInt: 5
        HdlStmBlock: SEQ
            list: body
                HdlStmIf
                    HdlOp: AND_LOG
                        list: ops
                            HdlOp: EQ
                                list: ops
                                    HdlValueId: blitter_curx2
                                    HdlValueId: blitter_x4
                            HdlOp: EQ
                                list: ops
                                    HdlValueId: blitter_cury2
                                    HdlValueId: blitter_y4
                    HdlStmAssign: if_true
                        HdlValueInt: 0
                        HdlValueId: blitter_enable
                    list: elifs
                    HdlStmAssign: if_false
                        HdlValueInt: 2
                        HdlValueId: blitter_enable
                HdlStmAssign
                    HdlValueInt: 0
                    HdlValueId: ram_enable


CommitId: 200a2f57f174b4a053c8150b10a52dcbe4c3afad
1.8.2 beta 1 stable; slight pixel errors due to refresh
--- a/z2-minispartan/z2.v
+++ b/z2-minispartan/z2.v
@@ -237,8 +237,9 @@ reg [3:0] blitter_row_pitch_shift = 11; // 2048 = 1<<11
 
 // custom refresh mechanism
 reg [23:0] refresh_addr = 0;
-reg [23:0] refresh_counter = 0;
+reg [23:0] refresh_counter = 'h0;
 reg [23:0] refresh_max = 'h100;
+reg [23:0] refresh_saved_addr = 0;
 
 // SDRAM
 SDRAM_Controller_v sdram(

ParseResult:
INS HdlIdDef@@refresh_saved_addr to objs
HdlIdDef: refresh_saved_addr
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 23
                    HdlValueInt: 0
    HdlValueInt: 0
    HdlDirection: INTERNAL


CommitId: 200a2f57f174b4a053c8150b10a52dcbe4c3afad
1.8.2 beta 1 stable; slight pixel errors due to refresh
--- a/z2-minispartan/z2.v
+++ b/z2-minispartan/z2.v
@@ -902,9 +915,14 @@ reg [15:0] default_data = 'hffff; // causes read/write glitches on A2000 (data b
 
 reg [31:0] coldstart_counter = 0;
 
+reg zorro_idle = 0;
+reg [11:0] counter_y_sync;
+
 always @(posedge z_sample_clk) begin
 
-  screen_w_with_margin <= (screen_w+margin_x);
+  zorro_idle <= ((zorro_state==Z2_IDLE)||(zorro_state==Z3_IDLE));
+  counter_y_sync <= counter_y;
+
   if (dcm7_psen==1'b1) dcm7_psen <= 1'b0;
   if (dcm7_rst==1'b1) dcm7_rst <= 1'b0;
 

ParseResult:
UPD HdlStmCase@@zorro_state to zorro_state
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlStmIf
                HdlValueId: z3addr_autoconfig
                HdlStmBlock: SEQ
                    list: body
                        HdlStmAssign
                            HdlValueInt: 0
                            HdlValueId: sd_reset
                        HdlStmAssign
                            HdlValueInt: 1
                            HdlValueId: ZORRO3
                        HdlStmAssign
                            HdlValueId: Z3_CONFIGURING
                            HdlValueId: zorro_state
                list: elifs
    MOV tuple@@ to cases
    tuple
        HdlValueId: DECIDE_Z2_Z3
        HdlStmBlock: SEQ
            list: body
                HdlStmIf
                    HdlValueId: z3addr_autoconfig
                    HdlStmBlock: SEQ
                        list: body
                            HdlStmAssign
                                HdlValueInt: 0
                                HdlValueId: sd_reset
                            HdlStmAssign
                                HdlValueInt: 1
                                HdlValueId: ZORRO3
                            HdlStmAssign
                                HdlValueId: Z3_CONFIGURING
                                HdlValueId: zorro_state
                    list: elifs
    DEL HdlStmCaseType@@CASE from zorro_state
    DEL HdlValueId@@zorro_state from zorro_state
    DEL HdlValueId@@DECIDE_Z2_Z3 from 

UPD HdlStmIf@@ to 
    DEL list@@elifs from 

DEL HdlStmAssign@@ from body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: refresh_counter

DEL HdlStmAssign@@ from body
HdlStmAssign
    HdlValueInt: 1000
    HdlValueId: refresh_max


CommitId: 200a2f57f174b4a053c8150b10a52dcbe4c3afad
1.8.2 beta 1 stable; slight pixel errors due to refresh
--- a/z2-minispartan/z2.v
+++ b/z2-minispartan/z2.v
@@ -940,8 +958,6 @@ always @(posedge z_sample_clk) begin
 
     RESET: begin
       vga_clk_sel  <= 1;
-      refresh_counter <= 0;
-      refresh_max <= 'h1000;
       
       // new default mode is 640x480 wrapped in 800x600@60hz
       screen_w     <= videocap_default_w;

ParseResult:
UPD HdlStmIf@@ to 
    INS list@@elifs to 

UPD HdlStmCase@@zorro_state to zorro_state
    INS HdlStmCaseType@@CASE to zorro_state
    INS HdlValueId@@zorro_state to zorro_state
    INS tuple@@ to cases
    INS HdlValueId@@DECIDE_Z2_Z3 to 

UPD HdlStmCase@@zorro_state to zorro_state
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlStmIf
                HdlValueId: z3addr_autoconfig
                HdlStmBlock: SEQ
                    list: body
                        HdlStmAssign
                            HdlValueInt: 0
                            HdlValueId: sd_reset
                        HdlStmAssign
                            HdlValueInt: 1
                            HdlValueId: ZORRO3
                        HdlStmAssign
                            HdlValueId: Z3_CONFIGURING
                            HdlValueId: zorro_state
                list: elifs
    MOV tuple@@ to cases
    tuple
        HdlValueId: DECIDE_Z2_Z3
        HdlStmBlock: SEQ
            list: body
                HdlStmIf
                    HdlValueId: z3addr_autoconfig
                    HdlStmBlock: SEQ
                        list: body
                            HdlStmAssign
                                HdlValueInt: 0
                                HdlValueId: sd_reset
                            HdlStmAssign
                                HdlValueInt: 1
                                HdlValueId: ZORRO3
                            HdlStmAssign
                                HdlValueId: Z3_CONFIGURING
                                HdlValueId: zorro_state
                    list: elifs
    DEL HdlStmCaseType@@CASE from zorro_state
    DEL HdlValueId@@zorro_state from zorro_state
    DEL HdlValueId@@DECIDE_Z2_Z3 from 

UPD HdlStmIf@@ to 
    DEL list@@elifs from 


CommitId: 200a2f57f174b4a053c8150b10a52dcbe4c3afad
1.8.2 beta 1 stable; slight pixel errors due to refresh
--- a/z2-minispartan/z2.v
+++ b/z2-minispartan/z2.v
@@ -1008,11 +1024,11 @@ always @(posedge z_sample_clk) begin
     
     DECIDE_Z2_Z3: begin
       // poor man's z3sense
-      /*if (zaddr_autoconfig) begin
+      if (zaddr_autoconfig) begin
         sd_reset <= 0;
         ZORRO3 <= 0;
         zorro_state <= Z2_CONFIGURING;
-      end else*/ if (z3addr_autoconfig) begin
+      end else if (z3addr_autoconfig) begin
         sd_reset <= 0;
         ZORRO3 <= 1;
         zorro_state <= Z3_CONFIGURING;

ParseResult:
UPD HdlStmIf@@ to 
    INS list@@elifs to 

UPD HdlStmCase@@zorro_state to zorro_state
    INS HdlStmCaseType@@CASE to zorro_state
    INS HdlValueId@@zorro_state to zorro_state
    INS tuple@@ to cases
    INS HdlValueId@@DECIDE_Z2_Z3 to 

UPD HdlStmCase@@zorro_state to zorro_state
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlStmIf
                HdlValueId: z3addr_autoconfig
                HdlStmBlock: SEQ
                    list: body
                        HdlStmAssign
                            HdlValueInt: 0
                            HdlValueId: sd_reset
                        HdlStmAssign
                            HdlValueInt: 1
                            HdlValueId: ZORRO3
                        HdlStmAssign
                            HdlValueId: Z3_CONFIGURING
                            HdlValueId: zorro_state
                list: elifs
    MOV tuple@@ to cases
    tuple
        HdlValueId: DECIDE_Z2_Z3
        HdlStmBlock: SEQ
            list: body
                HdlStmIf
                    HdlValueId: z3addr_autoconfig
                    HdlStmBlock: SEQ
                        list: body
                            HdlStmAssign
                                HdlValueInt: 0
                                HdlValueId: sd_reset
                            HdlStmAssign
                                HdlValueInt: 1
                                HdlValueId: ZORRO3
                            HdlStmAssign
                                HdlValueId: Z3_CONFIGURING
                                HdlValueId: zorro_state
                    list: elifs
    DEL HdlStmCaseType@@CASE from zorro_state
    DEL HdlValueId@@zorro_state from zorro_state
    DEL HdlValueId@@DECIDE_Z2_Z3 from 

UPD HdlStmIf@@ to 
    DEL list@@elifs from 


CommitId: 200a2f57f174b4a053c8150b10a52dcbe4c3afad
1.8.2 beta 1 stable; slight pixel errors due to refresh
--- a/z2-minispartan/z2.v
+++ b/z2-minispartan/z2.v
@@ -1204,7 +1220,6 @@ always @(posedge z_sample_clk) begin
       z3_reg_high  <= z3_ram_low + reg_size;
       
       z_confout <= 1;
-      refresh_max <= 'h100;
       
       sdram_reset <= 0;
       blitter_enable <= 1;

ParseResult:
UPD HdlStmIf@@ to 
    INS list@@elifs to 

UPD HdlStmCase@@zorro_state to zorro_state
    INS HdlStmCaseType@@CASE to zorro_state
    INS HdlValueId@@zorro_state to zorro_state
    INS tuple@@ to cases
    INS HdlValueId@@DECIDE_Z2_Z3 to 

UPD HdlStmCase@@zorro_state to zorro_state
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlStmIf
                HdlValueId: z3addr_autoconfig
                HdlStmBlock: SEQ
                    list: body
                        HdlStmAssign
                            HdlValueInt: 0
                            HdlValueId: sd_reset
                        HdlStmAssign
                            HdlValueInt: 1
                            HdlValueId: ZORRO3
                        HdlStmAssign
                            HdlValueId: Z3_CONFIGURING
                            HdlValueId: zorro_state
                list: elifs
    MOV tuple@@ to cases
    tuple
        HdlValueId: DECIDE_Z2_Z3
        HdlStmBlock: SEQ
            list: body
                HdlStmIf
                    HdlValueId: z3addr_autoconfig
                    HdlStmBlock: SEQ
                        list: body
                            HdlStmAssign
                                HdlValueInt: 0
                                HdlValueId: sd_reset
                            HdlStmAssign
                                HdlValueInt: 1
                                HdlValueId: ZORRO3
                            HdlStmAssign
                                HdlValueId: Z3_CONFIGURING
                                HdlValueId: zorro_state
                    list: elifs
    DEL HdlStmCaseType@@CASE from zorro_state
    DEL HdlValueId@@zorro_state from zorro_state
    DEL HdlValueId@@DECIDE_Z2_Z3 from 

UPD HdlStmIf@@ to 
    DEL list@@elifs from 


CommitId: 200a2f57f174b4a053c8150b10a52dcbe4c3afad
1.8.2 beta 1 stable; slight pixel errors due to refresh
--- a/z2-minispartan/z2.v
+++ b/z2-minispartan/z2.v
@@ -1599,6 +1614,9 @@ always @(posedge z_sample_clk) begin
         'h58: begin
               rr_data[31:16] <= videocap_ymax;
               rr_data[15:0] <= 16'h0000; end
+        'h5c: begin
+              rr_data[31:16] <= 16'h0000;
+              rr_data[15:0]  <= dvi_vsync_reg; end
         'h60: begin 
               rr_data[31:16] <= {sd_busy_sync,8'h00};
               rr_data[15:0]  <= sd_read; end // 'h62

ParseResult:
UPD HdlStmIf@@ to 
    INS list@@elifs to 

UPD HdlStmCase@@zorro_state to zorro_state
    INS HdlStmCaseType@@CASE to zorro_state
    INS HdlValueId@@zorro_state to zorro_state
    INS tuple@@ to cases
    INS HdlValueId@@DECIDE_Z2_Z3 to 

UPD HdlStmCase@@zorro_state to zorro_state
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlStmIf
                HdlValueId: z3addr_autoconfig
                HdlStmBlock: SEQ
                    list: body
                        HdlStmAssign
                            HdlValueInt: 0
                            HdlValueId: sd_reset
                        HdlStmAssign
                            HdlValueInt: 1
                            HdlValueId: ZORRO3
                        HdlStmAssign
                            HdlValueId: Z3_CONFIGURING
                            HdlValueId: zorro_state
                list: elifs
    MOV tuple@@ to cases
    tuple
        HdlValueId: DECIDE_Z2_Z3
        HdlStmBlock: SEQ
            list: body
                HdlStmIf
                    HdlValueId: z3addr_autoconfig
                    HdlStmBlock: SEQ
                        list: body
                            HdlStmAssign
                                HdlValueInt: 0
                                HdlValueId: sd_reset
                            HdlStmAssign
                                HdlValueInt: 1
                                HdlValueId: ZORRO3
                            HdlStmAssign
                                HdlValueId: Z3_CONFIGURING
                                HdlValueId: zorro_state
                    list: elifs
    DEL HdlStmCaseType@@CASE from zorro_state
    DEL HdlValueId@@zorro_state from zorro_state
    DEL HdlValueId@@DECIDE_Z2_Z3 from 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'AND',  'ops': ['regread_addr',          {'__class__': 'HdlValueInt', 'base': 16, 'val': 'ffc'}]}  to {'__class__': 'HdlOp',  'fn': 'AND',  'ops': ['regread_addr',          {'__class__': 'HdlValueInt', 'base': 16, 'val': 'ffc'}]} 
    INS tuple@@ to cases
    tuple
        HdlValueInt: 5c
        HdlStmBlock: SEQ
            list: body
                HdlStmAssign
                    HdlValueInt: 0000
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: rr_data
                            HdlOp: DOWNTO
                                list: ops
                                    HdlValueInt: 31
                                    HdlValueInt: 16
                HdlStmAssign
                    HdlValueId: dvi_vsync_reg
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: rr_data
                            HdlOp: DOWNTO
                                list: ops
                                    HdlValueInt: 15
                                    HdlValueInt: 0

UPD HdlStmIf@@ to 
    DEL list@@elifs from 


CommitId: 200a2f57f174b4a053c8150b10a52dcbe4c3afad
1.8.2 beta 1 stable; slight pixel errors due to refresh
--- a/z2-minispartan/z2.v
+++ b/z2-minispartan/z2.v
@@ -1615,6 +1633,8 @@ always @(posedge z_sample_clk) begin
               rr_data[31:16] <= sd_error_sync; 
               rr_data[15:0]  <= sd_state; end
               
+        
+              
         // Autoboot ROM
         // See http://amigadev.elowar.com/read/ADCD_2.1/Libraries_Manual_guide/node041C.html
         'h80: rr_data <= 'h9000_00d8; // WORDWIDE+CONFIGTIME  DAsize

ParseResult:
UPD HdlStmIf@@ to 
    INS list@@elifs to 

UPD HdlStmCase@@zorro_state to zorro_state
    INS HdlStmCaseType@@CASE to zorro_state
    INS HdlValueId@@zorro_state to zorro_state
    INS tuple@@ to cases
    INS HdlValueId@@DECIDE_Z2_Z3 to 

UPD HdlStmCase@@zorro_state to zorro_state
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlStmIf
                HdlValueId: z3addr_autoconfig
                HdlStmBlock: SEQ
                    list: body
                        HdlStmAssign
                            HdlValueInt: 0
                            HdlValueId: sd_reset
                        HdlStmAssign
                            HdlValueInt: 1
                            HdlValueId: ZORRO3
                        HdlStmAssign
                            HdlValueId: Z3_CONFIGURING
                            HdlValueId: zorro_state
                list: elifs
    MOV tuple@@ to cases
    tuple
        HdlValueId: DECIDE_Z2_Z3
        HdlStmBlock: SEQ
            list: body
                HdlStmIf
                    HdlValueId: z3addr_autoconfig
                    HdlStmBlock: SEQ
                        list: body
                            HdlStmAssign
                                HdlValueInt: 0
                                HdlValueId: sd_reset
                            HdlStmAssign
                                HdlValueInt: 1
                                HdlValueId: ZORRO3
                            HdlStmAssign
                                HdlValueId: Z3_CONFIGURING
                                HdlValueId: zorro_state
                    list: elifs
    DEL HdlStmCaseType@@CASE from zorro_state
    DEL HdlValueId@@zorro_state from zorro_state
    DEL HdlValueId@@DECIDE_Z2_Z3 from 

UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'AND',  'ops': ['regread_addr',          {'__class__': 'HdlValueInt', 'base': 16, 'val': 'ffc'}]}  to {'__class__': 'HdlOp',  'fn': 'AND',  'ops': ['regread_addr',          {'__class__': 'HdlValueInt', 'base': 16, 'val': 'ffc'}]} 
    INS tuple@@ to cases
    tuple
        HdlValueInt: 5c
        HdlStmBlock: SEQ
            list: body
                HdlStmAssign
                    HdlValueInt: 0000
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: rr_data
                            HdlOp: DOWNTO
                                list: ops
                                    HdlValueInt: 31
                                    HdlValueInt: 16
                HdlStmAssign
                    HdlValueId: dvi_vsync_reg
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: rr_data
                            HdlOp: DOWNTO
                                list: ops
                                    HdlValueInt: 15
                                    HdlValueInt: 0

UPD HdlStmIf@@ to 
    DEL list@@elifs from 


CommitId: 200a2f57f174b4a053c8150b10a52dcbe4c3afad
1.8.2 beta 1 stable; slight pixel errors due to refresh
--- a/z2-minispartan/z2.v
+++ b/z2-minispartan/z2.v
@@ -1716,8 +1736,7 @@ always @(posedge z_sample_clk) begin
         end
         
         'h0a: begin
-          refresh_max[23:8] <= regdata_in[15:0];
-          refresh_counter <= 0;
+          refresh_max[15:0] <= regdata_in[15:0];
         end
         
         'h0c: margin_x <= regdata_in[9:0];

ParseResult:
UPD HdlStmIf@@ to 
    INS list@@elifs to 

UPD HdlStmCase@@zorro_state to zorro_state
    INS HdlStmCaseType@@CASE to zorro_state
    INS HdlValueId@@zorro_state to zorro_state
    INS tuple@@ to cases
    INS HdlValueId@@DECIDE_Z2_Z3 to 

UPD HdlStmCase@@zorro_state to zorro_state
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlStmIf
                HdlValueId: z3addr_autoconfig
                HdlStmBlock: SEQ
                    list: body
                        HdlStmAssign
                            HdlValueInt: 0
                            HdlValueId: sd_reset
                        HdlStmAssign
                            HdlValueInt: 1
                            HdlValueId: ZORRO3
                        HdlStmAssign
                            HdlValueId: Z3_CONFIGURING
                            HdlValueId: zorro_state
                list: elifs
    MOV tuple@@ to cases
    tuple
        HdlValueId: DECIDE_Z2_Z3
        HdlStmBlock: SEQ
            list: body
                HdlStmIf
                    HdlValueId: z3addr_autoconfig
                    HdlStmBlock: SEQ
                        list: body
                            HdlStmAssign
                                HdlValueInt: 0
                                HdlValueId: sd_reset
                            HdlStmAssign
                                HdlValueInt: 1
                                HdlValueId: ZORRO3
                            HdlStmAssign
                                HdlValueId: Z3_CONFIGURING
                                HdlValueId: zorro_state
                    list: elifs
    DEL HdlStmCaseType@@CASE from zorro_state
    DEL HdlValueId@@zorro_state from zorro_state
    DEL HdlValueId@@DECIDE_Z2_Z3 from 

UPD HdlStmCase@@regwrite_addr to regwrite_addr
    INS tuple@@ to cases
    tuple
        HdlValueInt: 12
        HdlStmAssign
            HdlOp: INDEX
                list: ops
                    HdlValueId: regdata_in
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 15
                            HdlValueInt: 0
            HdlValueId: wraprow
    INS tuple@@ to cases
    tuple
        HdlValueInt: 16
        HdlStmAssign
            HdlOp: INDEX
                list: ops
                    HdlValueId: regdata_in
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 15
                            HdlValueInt: 0
            HdlValueId: wraprow2

UPD HdlStmIf@@ to 
    DEL list@@elifs from 


CommitId: 200a2f57f174b4a053c8150b10a52dcbe4c3afad
1.8.2 beta 1 stable; slight pixel errors due to refresh
--- a/z2-minispartan/z2.v
+++ b/z2-minispartan/z2.v
@@ -1725,6 +1744,9 @@ always @(posedge z_sample_clk) begin
         
         'h10: safe_x1 <= regdata_in[10:0];
         //'h12: fetch_w <= regdata_in[15:0];
+        'h12: wraprow <= regdata_in[15:0];
+        'h16: wraprow2 <= regdata_in[15:0];
+        
         'h14: safe_x2 <= regdata_in[10:0];
         'h1a: fetch_preroll <= regdata_in[15:0];
         

ParseResult:
UPD HdlStmIf@@ to 
    INS list@@elifs to 

UPD HdlStmCase@@zorro_state to zorro_state
    INS HdlStmCaseType@@CASE to zorro_state
    INS HdlValueId@@zorro_state to zorro_state
    INS tuple@@ to cases
    INS HdlValueId@@DECIDE_Z2_Z3 to 

UPD HdlStmCase@@zorro_state to zorro_state
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlStmIf
                HdlValueId: z3addr_autoconfig
                HdlStmBlock: SEQ
                    list: body
                        HdlStmAssign
                            HdlValueInt: 0
                            HdlValueId: sd_reset
                        HdlStmAssign
                            HdlValueInt: 1
                            HdlValueId: ZORRO3
                        HdlStmAssign
                            HdlValueId: Z3_CONFIGURING
                            HdlValueId: zorro_state
                list: elifs
    MOV tuple@@ to cases
    tuple
        HdlValueId: DECIDE_Z2_Z3
        HdlStmBlock: SEQ
            list: body
                HdlStmIf
                    HdlValueId: z3addr_autoconfig
                    HdlStmBlock: SEQ
                        list: body
                            HdlStmAssign
                                HdlValueInt: 0
                                HdlValueId: sd_reset
                            HdlStmAssign
                                HdlValueInt: 1
                                HdlValueId: ZORRO3
                            HdlStmAssign
                                HdlValueId: Z3_CONFIGURING
                                HdlValueId: zorro_state
                    list: elifs
    DEL HdlStmCaseType@@CASE from zorro_state
    DEL HdlValueId@@zorro_state from zorro_state
    DEL HdlValueId@@DECIDE_Z2_Z3 from 

UPD HdlStmCase@@regwrite_addr to regwrite_addr
    INS tuple@@ to cases
    tuple
        HdlValueInt: 12
        HdlStmAssign
            HdlOp: INDEX
                list: ops
                    HdlValueId: regdata_in
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 15
                            HdlValueInt: 0
            HdlValueId: wraprow
    INS tuple@@ to cases
    tuple
        HdlValueInt: 16
        HdlStmAssign
            HdlOp: INDEX
                list: ops
                    HdlValueId: regdata_in
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 15
                            HdlValueInt: 0
            HdlValueId: wraprow2

UPD HdlStmIf@@ to 
    DEL list@@elifs from 


CommitId: 200a2f57f174b4a053c8150b10a52dcbe4c3afad
1.8.2 beta 1 stable; slight pixel errors due to refresh
--- a/z2-minispartan/z2.v
+++ b/z2-minispartan/z2.v
@@ -1848,8 +1870,7 @@ always @(posedge z_sample_clk) begin
     RAM_READY: begin
       ram_enable <= 0;
       ram_arbiter_state <= RAM_READY2;
-      fetch_y <= pan_ptr + (fetch_line_y*fetch_w); // 512
-      //fetch_y <= pan_ptr + (fetch_line_y * row_pitch);
+      fetch_y <= pan_ptr + (fetch_line_y*fetch_w); // 1024
     end
     
     RAM_READY2: begin

ParseResult:
UPD HdlStmCase@@ram_arbiter_state to ram_arbiter_state
    INS tuple@@ to cases
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@RAM_REFRESH to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmCase@@ram_arbiter_state to ram_arbiter_state
    UPD HdlValueId@@RAM_REFRESH to RAM_REFRESH_END
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: refresh_counter
            HdlStmAssign
                HdlValueInt: 1
                HdlValueId: ram_enable
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: ram_write
            HdlStmAssign
                HdlValueInt: 11
                HdlValueId: ram_byte_enable
            HdlStmAssign
                HdlValueId: refresh_addr
                HdlValueId: ram_addr
            HdlStmAssign
                HdlOp: ADD
                    list: ops
                        HdlValueId: refresh_addr
                        HdlValueInt: 512
                HdlValueId: refresh_addr
            HdlStmAssign
                HdlValueId: RAM_REFRESH
                HdlValueId: ram_arbiter_state

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueInt: 11
    HdlValueId: ram_byte_enable


CommitId: 200a2f57f174b4a053c8150b10a52dcbe4c3afad
1.8.2 beta 1 stable; slight pixel errors due to refresh
--- a/z2-minispartan/z2.v
+++ b/z2-minispartan/z2.v
@@ -1903,6 +1924,7 @@ always @(posedge z_sample_clk) begin
       if (cmd_ready) begin
         ram_enable <= 1;
         ram_write <= 0;
+        ram_byte_enable <= 1'b11;
         // homebrew ram refresh
         ram_addr <= refresh_addr;
         refresh_addr <= refresh_addr + 512;

ParseResult:
UPD HdlStmCase@@ram_arbiter_state to ram_arbiter_state
    INS tuple@@ to cases
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@RAM_REFRESH to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmCase@@ram_arbiter_state to ram_arbiter_state
    UPD HdlValueId@@RAM_REFRESH to RAM_REFRESH_END
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: refresh_counter
            HdlStmAssign
                HdlValueInt: 1
                HdlValueId: ram_enable
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: ram_write
            HdlStmAssign
                HdlValueInt: 11
                HdlValueId: ram_byte_enable
            HdlStmAssign
                HdlValueId: refresh_addr
                HdlValueId: ram_addr
            HdlStmAssign
                HdlOp: ADD
                    list: ops
                        HdlValueId: refresh_addr
                        HdlValueInt: 512
                HdlValueId: refresh_addr
            HdlStmAssign
                HdlValueId: RAM_REFRESH
                HdlValueId: ram_arbiter_state

UPD HdlStmIf@@ to 
    INS tuple@@ to elifs
    INS HdlOp@@AND_LOG to 
    HdlOp: AND_LOG
        list: ops
            HdlOp: AND_LOG
                list: ops
                    HdlOp: AND_LOG
                        list: ops
                            HdlOp: AND_LOG
                                list: ops
                                    HdlOp: NEG_LOG
                                        list: ops
                                            HdlValueId: videocap_mode
                                    HdlValueId: zorro_idle
                            HdlOp: LT
                                list: ops
                                    HdlValueId: counter_y_sync
                                    HdlValueId: wraprow2
                    HdlOp: GT
                        list: ops
                            HdlValueId: counter_y_sync
                            HdlValueId: wraprow
            HdlValueId: cmd_ready
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmIf@@ to 
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlStmAssign
                HdlValueId: RAM_REFRESH_PRE
                HdlValueId: ram_arbiter_state
    DEL HdlOp@@AND_LOG from 
    HdlOp: AND_LOG
        list: ops
            HdlOp: EQ
                list: ops
                    HdlValueId: refresh_counter
                    HdlValueId: refresh_max
            HdlValueId: cmd_ready
    DEL tuple@@ from elifs


CommitId: 200a2f57f174b4a053c8150b10a52dcbe4c3afad
1.8.2 beta 1 stable; slight pixel errors due to refresh
--- a/z2-minispartan/z2.v
+++ b/z2-minispartan/z2.v
@@ -1919,9 +1941,6 @@ always @(posedge z_sample_clk) begin
     end
     
     RAM_ROW_FETCHED: begin
-      if (refresh_counter<refresh_max)
-        refresh_counter<=refresh_counter+1'b1;
-    
       if ((need_row_fetch_y_latched!=fetch_line_y) && x_safe_area_sync[1] && cmd_ready) begin
         row_fetched <= 0;
         fetch_x <= 0;

ParseResult:
UPD HdlStmCase@@ram_arbiter_state to ram_arbiter_state
    INS tuple@@ to cases
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@RAM_REFRESH to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmCase@@ram_arbiter_state to ram_arbiter_state
    UPD HdlValueId@@RAM_REFRESH to RAM_REFRESH_END
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: refresh_counter
            HdlStmAssign
                HdlValueInt: 1
                HdlValueId: ram_enable
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: ram_write
            HdlStmAssign
                HdlValueInt: 11
                HdlValueId: ram_byte_enable
            HdlStmAssign
                HdlValueId: refresh_addr
                HdlValueId: ram_addr
            HdlStmAssign
                HdlOp: ADD
                    list: ops
                        HdlValueId: refresh_addr
                        HdlValueInt: 512
                HdlValueId: refresh_addr
            HdlStmAssign
                HdlValueId: RAM_REFRESH
                HdlValueId: ram_arbiter_state

UPD HdlStmIf@@ to 
    INS tuple@@ to elifs
    INS HdlOp@@AND_LOG to 
    HdlOp: AND_LOG
        list: ops
            HdlOp: AND_LOG
                list: ops
                    HdlOp: AND_LOG
                        list: ops
                            HdlOp: AND_LOG
                                list: ops
                                    HdlOp: NEG_LOG
                                        list: ops
                                            HdlValueId: videocap_mode
                                    HdlValueId: zorro_idle
                            HdlOp: LT
                                list: ops
                                    HdlValueId: counter_y_sync
                                    HdlValueId: wraprow2
                    HdlOp: GT
                        list: ops
                            HdlValueId: counter_y_sync
                            HdlValueId: wraprow
            HdlValueId: cmd_ready
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmIf@@ to 
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlStmAssign
                HdlValueId: RAM_REFRESH_PRE
                HdlValueId: ram_arbiter_state
    DEL HdlOp@@AND_LOG from 
    HdlOp: AND_LOG
        list: ops
            HdlOp: EQ
                list: ops
                    HdlValueId: refresh_counter
                    HdlValueId: refresh_max
            HdlValueId: cmd_ready
    DEL tuple@@ from elifs


CommitId: 200a2f57f174b4a053c8150b10a52dcbe4c3afad
1.8.2 beta 1 stable; slight pixel errors due to refresh
--- a/z2-minispartan/z2.v
+++ b/z2-minispartan/z2.v
@@ -1931,10 +1950,6 @@ always @(posedge z_sample_clk) begin
       end else if (x_safe_area_sync[1]) begin
         // do nothing if in safe area
         
-      end else if (refresh_counter==refresh_max && cmd_ready) begin
-        // refresh ram
-        ram_arbiter_state <= RAM_REFRESH_PRE;
-        
       // BLITTER ----------------------------------------------------------------
       end else if (blitter_enable==1 && cmd_ready) begin
         if (blitter_colormode==2) begin

ParseResult:
UPD HdlStmCase@@ram_arbiter_state to ram_arbiter_state
    INS tuple@@ to cases
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@RAM_REFRESH to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmCase@@ram_arbiter_state to ram_arbiter_state
    UPD HdlValueId@@RAM_REFRESH to RAM_REFRESH_END
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: refresh_counter
            HdlStmAssign
                HdlValueInt: 1
                HdlValueId: ram_enable
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: ram_write
            HdlStmAssign
                HdlValueInt: 11
                HdlValueId: ram_byte_enable
            HdlStmAssign
                HdlValueId: refresh_addr
                HdlValueId: ram_addr
            HdlStmAssign
                HdlOp: ADD
                    list: ops
                        HdlValueId: refresh_addr
                        HdlValueInt: 512
                HdlValueId: refresh_addr
            HdlStmAssign
                HdlValueId: RAM_REFRESH
                HdlValueId: ram_arbiter_state

UPD HdlStmIf@@ to 
    INS tuple@@ to elifs
    INS HdlOp@@AND_LOG to 
    HdlOp: AND_LOG
        list: ops
            HdlOp: AND_LOG
                list: ops
                    HdlOp: AND_LOG
                        list: ops
                            HdlOp: AND_LOG
                                list: ops
                                    HdlOp: NEG_LOG
                                        list: ops
                                            HdlValueId: videocap_mode
                                    HdlValueId: zorro_idle
                            HdlOp: LT
                                list: ops
                                    HdlValueId: counter_y_sync
                                    HdlValueId: wraprow2
                    HdlOp: GT
                        list: ops
                            HdlValueId: counter_y_sync
                            HdlValueId: wraprow
            HdlValueId: cmd_ready
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmIf@@ to 
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlStmAssign
                HdlValueId: RAM_REFRESH_PRE
                HdlValueId: ram_arbiter_state
    DEL HdlOp@@AND_LOG from 
    HdlOp: AND_LOG
        list: ops
            HdlOp: EQ
                list: ops
                    HdlValueId: refresh_counter
                    HdlValueId: refresh_max
            HdlValueId: cmd_ready
    DEL tuple@@ from elifs


CommitId: 200a2f57f174b4a053c8150b10a52dcbe4c3afad
1.8.2 beta 1 stable; slight pixel errors due to refresh
--- a/z2-minispartan/z2.v
+++ b/z2-minispartan/z2.v
@@ -2199,6 +2233,7 @@ always @(posedge vga_clk) begin
   vga_h_sync_end <= h_sync_end;
   vga_v_sync_start <= v_sync_start;
   vga_v_sync_end <= v_sync_end;
+  vga_reset <= dvid_reset;
 end
 
 reg [9:0] counter_scanout = 0;

ParseResult:
UPD HdlStmIf@@ to 
    INS HdlValueId@@vga_reset to 
    INS HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: counter_x
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: counter_y
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: need_row_fetch_y
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: display_pixels
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: counter_scanout
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: counter_vscale
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: counter_px
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: counter_repeat
    INS list@@elifs to 
    INS tuple@@ to elifs


CommitId: 200a2f57f174b4a053c8150b10a52dcbe4c3afad
1.8.2 beta 1 stable; slight pixel errors due to refresh
--- a/z2-minispartan/z2.v
+++ b/z2-minispartan/z2.v
@@ -2212,8 +2247,17 @@ reg aligned_row_mode = 1;
 
 always @(posedge vga_clk) begin
   x_safe_area <= ((counter_scanout > safe_x2) || (counter_scanout < safe_x1));
-  
-  if (counter_x > vga_h_max) begin
+
+  if (vga_reset) begin
+    counter_x <= 0;
+    counter_y <= 0;
+    need_row_fetch_y <= 0;
+    display_pixels <= 0;
+    counter_scanout <= 0;
+    counter_vscale <= 0;
+    counter_px <= 0;
+    counter_repeat <= 0;
+  end else if (counter_x > vga_h_max) begin
     counter_x <= 0;
     if (counter_y > vga_v_max) begin
       counter_y <= 0;

ParseResult:
UPD HdlStmIf@@ to 
    INS HdlValueId@@vga_reset to 
    INS HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: counter_x
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: counter_y
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: need_row_fetch_y
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: display_pixels
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: counter_scanout
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: counter_vscale
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: counter_px
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: counter_repeat
    INS list@@elifs to 
    INS tuple@@ to elifs


CommitId: 200a2f57f174b4a053c8150b10a52dcbe4c3afad
1.8.2 beta 1 stable; slight pixel errors due to refresh
--- a/z2-minispartan/z2.v
+++ b/z2-minispartan/z2.v
@@ -2285,7 +2330,6 @@ always @(posedge vga_clk) begin
   end else begin
     need_row_fetch_y <= 0;
     display_pixels <= 0;
-    
     counter_scanout <= 0;
     counter_vscale <= 0;
     counter_px <= 0;

ParseResult:
UPD HdlStmAssign@@ to 
    UPD HdlOp@@INDEX to INDEX
        UPD HdlOp@@INDEX to INDEX
            INS HdlOp@@ADD to ops
            UPD HdlOp@@ADD to ADD
                INS list@@ops to ADD
                INS HdlValueInt@@1 to ops

UPD HdlStmAssign@@ to 
    UPD HdlOp@@CONCAT to CONCAT
        UPD HdlOp@@INDEX to INDEX
            UPD HdlOp@@INDEX to INDEX
                INS HdlOp@@ADD to ops
                UPD HdlOp@@ADD to ADD
                    INS list@@ops to ADD
                    INS HdlValueInt@@1 to ops


CommitId: bda44e27174c3827216cc49680c3250579ad6f78
Merge pull request #1 from stephanIOA/patch-1
--- a/z2-minispartan/output_serialiser.vhd
+++ b/z2-minispartan/output_serialiser.vhd
@@ -13,7 +13,8 @@ entity output_serialiser is
     Port ( clk_load   : in  STD_LOGIC;
            clk_output : in  STD_LOGIC;
            strobe     : in  STD_LOGIC;
-           ser_data   : in  STD_LOGIC_VECTOR (4 downto 0);
+           ser_data   : in  STD_LOGIC_VECTOR (4 downto 0);
+           reset : in STD_LOGIC;
            ser_output : out STD_LOGIC);
 end output_serialiser;
 

ParseResult:
INS HdlIdDef@@reset to ports
HdlIdDef: reset
    HdlValueId: STD_LOGIC
    HdlDirection: IN


CommitId: 403fa88484546e7d2d1103014ad1d87574ca7fc3
WIP cleaner high-level structure; sdram controller debugging
--- a/z2-minispartan/z2.v
+++ b/z2-minispartan/z2.v
@@ -649,7 +651,8 @@ always @(posedge z_sample_clk) begin
       fetch_x <= 0;
       if (row_fetched) begin
         ram_enable <= 0;
-        ram_arbiter_state <= RAM_ROW_FETCHED;
+        if (data_out_queue_empty)
+          ram_arbiter_state <= RAM_ROW_FETCHED;
       end else begin
         if (cmd_ready) begin
           ram_addr  <= ((fetch_y << 11) | fetch_x);

ParseResult:
UPD HdlStmCase@@ram_arbiter_state to ram_arbiter_state
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

INS HdlStmIf@@ to body

UPD HdlStmIf@@ to 
    INS HdlValueId@@data_out_queue_empty to 
    INS list@@elifs to 


CommitId: 403fa88484546e7d2d1103014ad1d87574ca7fc3
WIP cleaner high-level structure; sdram controller debugging
--- a/z2-minispartan/z2.v
+++ b/z2-minispartan/z2.v
@@ -667,8 +670,8 @@ always @(posedge z_sample_clk) begin
         if (fetch_x >= screen_w) begin
           fetch_x  <= 0;
           row_fetched <= 1; // row completely fetched
-          ram_arbiter_state <= RAM_ROW_FETCHED;
           ram_enable <= 0;
+          ram_arbiter_state <= RAM_ROW_FETCHED;
         end else begin
           fetch_buffer[fetch_x] <= ram_data_out[15:0];
           

ParseResult:
UPD HdlStmCase@@ram_arbiter_state to ram_arbiter_state
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ


CommitId: 403fa88484546e7d2d1103014ad1d87574ca7fc3
WIP cleaner high-level structure; sdram controller debugging
--- a/z2-minispartan/z2.v
+++ b/z2-minispartan/z2.v
@@ -683,9 +686,8 @@ always @(posedge z_sample_clk) begin
       end
     RAM_ROW_FETCHED:
       if (!row_fetched) begin
-        ram_enable <= 0;
         ram_arbiter_state <= RAM_READY;
-      end else if (writeq_fill>0 && !zorro_ram_write_request) begin
+      end else if (writeq_fill>0) begin
         // process write queue
         if (cmd_ready) begin
           if (writeq_addr[writeq_fill-1][uds_bit] && !writeq_addr[writeq_fill-1][lds_bit])

ParseResult:
UPD HdlStmCase@@ram_arbiter_state to ram_arbiter_state
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmIf@@ to 
    UPD HdlOp@@AND_LOG to AND_LOG
        MOV HdlOp@@GT to ops
        HdlOp: GT
            list: ops
                HdlValueId: writeq_fill
                HdlValueInt: 0
        DEL HdlOp@@NEG_LOG from ops
        HdlOp: NEG_LOG
            list: ops
                HdlValueId: zorro_ram_write_request
        DEL list@@ops from AND_LOG
    DEL HdlOp@@AND_LOG from 


CommitId: 403fa88484546e7d2d1103014ad1d87574ca7fc3
WIP cleaner high-level structure; sdram controller debugging
--- a/z2-minispartan/z2.v
+++ b/z2-minispartan/z2.v
@@ -721,7 +723,8 @@ always @(posedge z_sample_clk) begin
       end else if (zorro_ram_read_request) begin
         // process read request
         zorro_ram_read_done <= 0;
-        if (cmd_ready) begin
+        ram_enable <= 0;
+        if (cmd_ready && data_out_queue_empty) begin
           ram_write <= 0;
           ram_addr <= zorro_ram_read_addr;
           ram_byte_enable <= 'b11;

ParseResult:
UPD HdlStmCase@@ram_arbiter_state to ram_arbiter_state
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmIf@@ to 
    UPD HdlOp@@AND_LOG to AND_LOG
        MOV HdlOp@@GT to ops
        HdlOp: GT
            list: ops
                HdlValueId: writeq_fill
                HdlValueInt: 0
        DEL HdlOp@@NEG_LOG from ops
        HdlOp: NEG_LOG
            list: ops
                HdlValueId: zorro_ram_write_request
        DEL list@@ops from AND_LOG
    DEL HdlOp@@AND_LOG from 

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: ram_enable

UPD HdlStmIf@@ to 
    INS HdlOp@@AND_LOG to 
    UPD HdlOp@@AND_LOG to AND_LOG
        INS list@@ops to AND_LOG
        INS HdlValueId@@data_out_queue_empty to ops

UPD HdlStmIf@@ to 
    MOV HdlValueId@@cmd_ready to 
    HdlValueId: cmd_ready


CommitId: 403fa88484546e7d2d1103014ad1d87574ca7fc3
WIP cleaner high-level structure; sdram controller debugging
--- a/z2-minispartan/z2.v
+++ b/z2-minispartan/z2.v
@@ -743,15 +746,20 @@ always @(posedge z_sample_clk) begin
           blitter_curx <= 0;
           blitter_cury <= 0;
           blitter_enable <= 0;
+          ram_enable <= 0;
         end
       end
       
-    RAM_READING_ZORRO: if (data_out_ready) begin
-        zorro_ram_read_data <= ram_data_out;
-        zorro_ram_read_done <= 1;
-        zorro_ram_read_request <= 0;
-        ram_arbiter_state <= RAM_ROW_FETCHED;
-      end     
+    RAM_READING_ZORRO: begin    
+        ram_enable <= 0;
+        if (data_out_ready) begin
+          zorro_ram_read_data <= ram_data_out;
+          zorro_ram_read_done <= 1;
+          zorro_ram_read_request <= 0;
+          ram_arbiter_state <= RAM_ROW_FETCHED;
+        end
+      end
+    
   endcase
   
   // decide when to fetch next row
ParseResult:
UPD HdlStmCase@@ram_arbiter_state to ram_arbiter_state
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

MOV HdlStmIf@@ to 
HdlStmIf
    HdlValueId: data_out_ready
    HdlStmBlock: SEQ
        list: body
            HdlStmAssign
                HdlValueId: ram_data_out
                HdlValueId: zorro_ram_read_data
            HdlStmAssign
                HdlValueInt: 1
                HdlValueId: zorro_ram_read_done
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: zorro_ram_read_request
            HdlStmAssign
                HdlValueId: RAM_ROW_FETCHED
                HdlValueId: ram_arbiter_state
    list: elifs


CommitId: d8a08b1a977d4573a8d123f4d41137962d28fc71
beta release WIP. 32bit, fix some timing problems, introduce custom refresh, fix sd card drivers, sd card CRC, custom resolutions, fix z3 register read model
--- a/z2-minispartan/output_serialiser.vhd
+++ b/z2-minispartan/output_serialiser.vhd
@@ -13,7 +13,8 @@ entity output_serialiser is
     Port ( clk_load   : in  STD_LOGIC;
            clk_output : in  STD_LOGIC;
            strobe     : in  STD_LOGIC;
-           ser_data   : in  STD_LOGIC_VECTOR (4 downto 0);
+           ser_data   : in  STD_LOGIC_VECTOR (4 downto 0);
+           reset : in STD_LOGIC;
            ser_output : out STD_LOGIC);
 end output_serialiser;
 

ParseResult:
INS HdlIdDef@@reset to ports
HdlIdDef: reset
    HdlValueId: STD_LOGIC
    HdlDirection: IN


CommitId: 0a7ad9a4c0739dd9f820d25baa02f81315cf1f3a
register, blitter, refresh restructuring, 32bit scaler fixed
--- a/z2-minispartan/z2.v
+++ b/z2-minispartan/z2.v
@@ -235,8 +236,9 @@ reg [15:0] blitter_row_pitch = 2048;
 reg [3:0] blitter_row_pitch_shift = 11; // 2048 = 1<<11
 
 // custom refresh mechanism
-reg [15:0] refresh_counter = 0;
 reg [23:0] refresh_addr = 0;
+reg [23:0] refresh_counter = 0;
+reg [23:0] refresh_max = 'h100;
 
 // SDRAM
 SDRAM_Controller_v sdram(

ParseResult:
INS HdlIdDef@@refresh_max to objs
HdlIdDef: refresh_max
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 23
                    HdlValueInt: 0
    HdlValueInt: 100
    HdlDirection: INTERNAL


CommitId: 0a7ad9a4c0739dd9f820d25baa02f81315cf1f3a
register, blitter, refresh restructuring, 32bit scaler fixed
--- a/z2-minispartan/z2.v
+++ b/z2-minispartan/z2.v
@@ -937,6 +940,8 @@ always @(posedge z_sample_clk) begin
 
     RESET: begin
       vga_clk_sel  <= 1;
+      refresh_counter <= 0;
+      refresh_max <= 'h1000;
       
       // new default mode is 640x480 wrapped in 800x600@60hz
       screen_w     <= videocap_default_w;

ParseResult:
UPD HdlStmIf@@ to 
    INS list@@elifs to 

UPD HdlStmCase@@zorro_state to zorro_state
    INS HdlStmCaseType@@CASE to zorro_state
    INS HdlValueId@@zorro_state to zorro_state

UPD HdlStmIf@@ to 
    DEL list@@elifs from 

UPD HdlStmCase@@zorro_state to zorro_state
    DEL HdlStmCaseType@@CASE from zorro_state
    DEL HdlValueId@@zorro_state from zorro_state


CommitId: 0a7ad9a4c0739dd9f820d25baa02f81315cf1f3a
register, blitter, refresh restructuring, 32bit scaler fixed
--- a/z2-minispartan/z2.v
+++ b/z2-minispartan/z2.v
@@ -1199,6 +1204,7 @@ always @(posedge z_sample_clk) begin
       z3_reg_high  <= z3_ram_low + reg_size;
       
       z_confout <= 1;
+      refresh_max <= 'h100;
       
       sdram_reset <= 0;
       blitter_enable <= 1;

ParseResult:
UPD HdlStmIf@@ to 
    INS list@@elifs to 

UPD HdlStmCase@@zorro_state to zorro_state
    INS HdlStmCaseType@@CASE to zorro_state
    INS HdlValueId@@zorro_state to zorro_state

UPD HdlStmIf@@ to 
    DEL list@@elifs from 

UPD HdlStmCase@@zorro_state to zorro_state
    DEL HdlStmCaseType@@CASE from zorro_state
    DEL HdlValueId@@zorro_state from zorro_state


CommitId: 0a7ad9a4c0739dd9f820d25baa02f81315cf1f3a
register, blitter, refresh restructuring, 32bit scaler fixed
--- a/z2-minispartan/z2.v
+++ b/z2-minispartan/z2.v
@@ -1709,19 +1715,23 @@ always @(posedge z_sample_clk) begin
           v_rez    <= regdata_in[11:0];
         end
         
-        //'h0a: dataout_time <= regdata_in[7:0];
+        'h0a: begin
+          refresh_max[23:8] <= regdata_in[15:0];
+          refresh_counter <= 0;
+        end
+        
         'h0c: margin_x <= regdata_in[9:0];
-        //'h0e: default_data <= regdata_in[15:0];
-        //'h10: preheat_x <= regdata_in[4:0];
-        //'h12: vsmax <= regdata_in[7:0];
-        //'h12: fetch_w <= regdata_in[15:0];
+        'h0e: colormode <= regdata_in[2:0];
+        
         'h10: safe_x1 <= regdata_in[10:0];
+        //'h12: fetch_w <= regdata_in[15:0];
         'h14: safe_x2 <= regdata_in[10:0];
         'h1a: fetch_preroll <= regdata_in[15:0];
         
         // blitter regs
-        'h1c: blitter_base[23:16] <= regdata_in[7:0];
-        'h1e: blitter_base[15:0]  <= regdata_in;
+        'h1c: blitter_row_pitch <= regdata_in;
+        'h1e: blitter_colormode <= regdata_in[2:0];
+        
         'h20: blitter_x1 <= regdata_in[15:0];
         'h22: blitter_y1 <= regdata_in[15:0];
         'h24: blitter_x2 <= regdata_in[15:0];

ParseResult:
UPD HdlStmIf@@ to 
    INS list@@elifs to 

UPD HdlStmCase@@zorro_state to zorro_state
    INS HdlStmCaseType@@CASE to zorro_state
    INS HdlValueId@@zorro_state to zorro_state

UPD HdlStmCase@@regwrite_addr to regwrite_addr
    MOV tuple@@ to cases
    tuple
        HdlValueInt: 48
        HdlStmAssign
            HdlOp: INDEX
                list: ops
                    HdlValueId: regdata_in
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 2
                            HdlValueInt: 0
            HdlValueId: colormode
    MOV tuple@@ to cases
    tuple
        HdlValueInt: 42
        HdlStmAssign
            HdlValueId: regdata_in
            HdlValueId: blitter_row_pitch
    MOV tuple@@ to cases
    tuple
        HdlValueInt: 46
        HdlStmAssign
            HdlOp: INDEX
                list: ops
                    HdlValueId: regdata_in
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 2
                            HdlValueInt: 0
            HdlValueId: blitter_colormode
    MOV tuple@@ to cases
    tuple
        HdlValueInt: 1c
        HdlStmAssign
            HdlOp: INDEX
                list: ops
                    HdlValueId: regdata_in
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 7
                            HdlValueInt: 0
            HdlOp: INDEX
                list: ops
                    HdlValueId: blitter_base
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 23
                            HdlValueInt: 16
    MOV tuple@@ to cases
    tuple
        HdlValueInt: 1e
        HdlStmAssign
            HdlValueId: regdata_in
            HdlOp: INDEX
                list: ops
                    HdlValueId: blitter_base
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 15
                            HdlValueInt: 0
    UPD HdlValueInt@@48 to 0e
    UPD HdlValueInt@@42 to 1c
    UPD HdlValueInt@@46 to 1e
    UPD HdlValueInt@@1c to 40
    UPD HdlValueInt@@1e to 42
    DEL tuple@@ from cases
    tuple
        HdlValueInt: 44
        HdlStmAssign
            HdlOp: INDEX
                list: ops
                    HdlValueId: regdata_in
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 4
                            HdlValueInt: 0
            HdlValueId: blitter_row_pitch_shift

UPD HdlStmCase@@regwrite_addr to regwrite_addr
    INS tuple@@ to cases
    tuple
        HdlValueInt: 0a
        HdlStmBlock: SEQ
            list: body
                HdlStmAssign
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: regdata_in
                            HdlOp: DOWNTO
                                list: ops
                                    HdlValueInt: 15
                                    HdlValueInt: 0
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: refresh_max
                            HdlOp: DOWNTO
                                list: ops
                                    HdlValueInt: 23
                                    HdlValueInt: 8
                HdlStmAssign
                    HdlValueInt: 0
                    HdlValueId: refresh_counter
    INS tuple@@ to cases
    tuple
        HdlValueInt: 44
        HdlStmAssign
            HdlOp: INDEX
                list: ops
                    HdlValueId: regdata_in
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 7
                            HdlValueInt: 0
            HdlOp: INDEX
                list: ops
                    HdlValueId: blitter_base2
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 23
                            HdlValueInt: 16
    INS tuple@@ to cases
    tuple
        HdlValueInt: 46
        HdlStmAssign
            HdlValueId: regdata_in
            HdlOp: INDEX
                list: ops
                    HdlValueId: blitter_base2
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 15
                            HdlValueInt: 0

UPD HdlStmIf@@ to 
    DEL list@@elifs from 

UPD HdlStmCase@@zorro_state to zorro_state
    DEL HdlStmCaseType@@CASE from zorro_state
    DEL HdlValueId@@zorro_state from zorro_state


CommitId: 0a7ad9a4c0739dd9f820d25baa02f81315cf1f3a
register, blitter, refresh restructuring, 32bit scaler fixed
--- a/z2-minispartan/z2.v
+++ b/z2-minispartan/z2.v
@@ -1738,8 +1748,8 @@ always @(posedge z_sample_clk) begin
           blitter_dirx <= (blitter_x3>blitter_x4)?1'b1:1'b0;
           blitter_diry <= (blitter_y3>blitter_y4)?1'b1:1'b0;
           
-          blitter_ptr  <= blitter_base + (blitter_y1 << blitter_row_pitch_shift);
-          blitter_ptr2 <= blitter_base + (blitter_y3 << blitter_row_pitch_shift);
+          blitter_ptr  <= blitter_base;
+          blitter_ptr2 <= blitter_base2;
           //blitter_ptr  <= blitter_base + (blitter_y1 * blitter_row_pitch);
           //blitter_ptr2 <= blitter_base + (blitter_y3 * blitter_row_pitch);
           blitter_rgb32_t <= 0;

ParseResult:
UPD HdlStmIf@@ to 
    INS list@@elifs to 

UPD HdlStmCase@@zorro_state to zorro_state
    INS HdlStmCaseType@@CASE to zorro_state
    INS HdlValueId@@zorro_state to zorro_state

UPD HdlStmCase@@regwrite_addr to regwrite_addr
    MOV tuple@@ to cases
    tuple
        HdlValueInt: 48
        HdlStmAssign
            HdlOp: INDEX
                list: ops
                    HdlValueId: regdata_in
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 2
                            HdlValueInt: 0
            HdlValueId: colormode
    MOV tuple@@ to cases
    tuple
        HdlValueInt: 42
        HdlStmAssign
            HdlValueId: regdata_in
            HdlValueId: blitter_row_pitch
    MOV tuple@@ to cases
    tuple
        HdlValueInt: 46
        HdlStmAssign
            HdlOp: INDEX
                list: ops
                    HdlValueId: regdata_in
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 2
                            HdlValueInt: 0
            HdlValueId: blitter_colormode
    MOV tuple@@ to cases
    tuple
        HdlValueInt: 1c
        HdlStmAssign
            HdlOp: INDEX
                list: ops
                    HdlValueId: regdata_in
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 7
                            HdlValueInt: 0
            HdlOp: INDEX
                list: ops
                    HdlValueId: blitter_base
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 23
                            HdlValueInt: 16
    MOV tuple@@ to cases
    tuple
        HdlValueInt: 1e
        HdlStmAssign
            HdlValueId: regdata_in
            HdlOp: INDEX
                list: ops
                    HdlValueId: blitter_base
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 15
                            HdlValueInt: 0
    UPD HdlValueInt@@48 to 0e
    UPD HdlValueInt@@42 to 1c
    UPD HdlValueInt@@46 to 1e
    UPD HdlValueInt@@1c to 40
    UPD HdlValueInt@@1e to 42
    DEL tuple@@ from cases
    tuple
        HdlValueInt: 44
        HdlStmAssign
            HdlOp: INDEX
                list: ops
                    HdlValueId: regdata_in
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 4
                            HdlValueInt: 0
            HdlValueId: blitter_row_pitch_shift

UPD HdlStmCase@@regwrite_addr to regwrite_addr
    INS tuple@@ to cases
    tuple
        HdlValueInt: 0a
        HdlStmBlock: SEQ
            list: body
                HdlStmAssign
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: regdata_in
                            HdlOp: DOWNTO
                                list: ops
                                    HdlValueInt: 15
                                    HdlValueInt: 0
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: refresh_max
                            HdlOp: DOWNTO
                                list: ops
                                    HdlValueInt: 23
                                    HdlValueInt: 8
                HdlStmAssign
                    HdlValueInt: 0
                    HdlValueId: refresh_counter
    INS tuple@@ to cases
    tuple
        HdlValueInt: 44
        HdlStmAssign
            HdlOp: INDEX
                list: ops
                    HdlValueId: regdata_in
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 7
                            HdlValueInt: 0
            HdlOp: INDEX
                list: ops
                    HdlValueId: blitter_base2
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 23
                            HdlValueInt: 16
    INS tuple@@ to cases
    tuple
        HdlValueInt: 46
        HdlStmAssign
            HdlValueId: regdata_in
            HdlOp: INDEX
                list: ops
                    HdlValueId: blitter_base2
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 15
                            HdlValueInt: 0

UPD HdlStmIf@@ to 
    DEL list@@elifs from 

UPD HdlStmCase@@zorro_state to zorro_state
    DEL HdlStmCaseType@@CASE from zorro_state
    DEL HdlValueId@@zorro_state from zorro_state


CommitId: 0a7ad9a4c0739dd9f820d25baa02f81315cf1f3a
register, blitter, refresh restructuring, 32bit scaler fixed
--- a/z2-minispartan/z2.v
+++ b/z2-minispartan/z2.v
@@ -1757,10 +1767,10 @@ always @(posedge z_sample_clk) begin
         'h3c: videocap_prex <= regdata_in[9:0];
         'h3e: videocap_voffset <= regdata_in[9:0];
         
-        'h42: blitter_row_pitch <= regdata_in;
-        'h44: blitter_row_pitch_shift <= regdata_in[4:0];
-        'h46: blitter_colormode <= regdata_in[2:0];
-        'h48: colormode <= regdata_in[2:0];
+        'h40: blitter_base[23:16] <= regdata_in[7:0];
+        'h42: blitter_base[15:0]  <= regdata_in;
+        'h44: blitter_base2[23:16] <= regdata_in[7:0];
+        'h46: blitter_base2[15:0] <= regdata_in;
         
         'h4a: begin
           dcm7_psincdec <= regdata_in[0];

ParseResult:
UPD HdlStmIf@@ to 
    DEL list@@elifs from 

UPD HdlStmCase@@zorro_state to zorro_state
    DEL HdlStmCaseType@@CASE from zorro_state
    DEL HdlValueId@@zorro_state from zorro_state


CommitId: 0a7ad9a4c0739dd9f820d25baa02f81315cf1f3a
register, blitter, refresh restructuring, 32bit scaler fixed
--- a/z2-minispartan/z2.v
+++ b/z2-minispartan/z2.v
@@ -1777,13 +1787,10 @@ always @(posedge z_sample_clk) begin
         //'h54: videocap_default_w <= regdata_in[9:0];
         //'h56: videocap_default_h <= regdata_in[9:0];
         
-        //'h5a: videocap_xpoint <= regdata_in[10:0];
         
         'h58: row_pitch <= regdata_in;
         'h5c: row_pitch_shift <= regdata_in[4:0];
         
-        //'h5e: videocap_prex2 <= regdata_in[9:0];
-        //'h5e: screen_h <= regdata_in[11:0];
         
         // sd card regs
         'h60: sd_reset <= regdata_in[8];

ParseResult:
UPD HdlStmCase@@ram_arbiter_state to ram_arbiter_state
    MOV tuple@@ to cases
    tuple
        HdlValueId: RAM_REFRESH
        HdlStmBlock: SEQ
            list: body
                HdlStmAssign
                    HdlValueInt: 0
                    HdlValueId: ram_enable
                HdlStmIf
                    HdlValueId: data_out_ready
                    HdlStmBlock: SEQ
                        list: body
                            HdlStmAssign
                                HdlValueId: RAM_ROW_FETCHED
                                HdlValueId: ram_arbiter_state
                    list: elifs
    UPD HdlValueId@@RAM_REFRESH to RAM_BURST_OFF2
    DEL HdlValueId@@RAM_BURST_OFF2 from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 

UPD HdlStmCase@@ram_arbiter_state to ram_arbiter_state
    INS tuple@@ to cases
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@RAM_REFRESH to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ


CommitId: 0a7ad9a4c0739dd9f820d25baa02f81315cf1f3a
register, blitter, refresh restructuring, 32bit scaler fixed
--- a/z2-minispartan/z2.v
+++ b/z2-minispartan/z2.v
@@ -1805,11 +1812,6 @@ always @(posedge z_sample_clk) begin
           dvid_reset <= 1;
         end
       
-`ifdef TRACE
-        'h80: begin
-          trace_1 <= 0;
-        end
-`endif
       endcase
     end
     

ParseResult:
UPD HdlStmCase@@ram_arbiter_state to ram_arbiter_state
    MOV tuple@@ to cases
    tuple
        HdlValueId: RAM_REFRESH
        HdlStmBlock: SEQ
            list: body
                HdlStmAssign
                    HdlValueInt: 0
                    HdlValueId: ram_enable
                HdlStmIf
                    HdlValueId: data_out_ready
                    HdlStmBlock: SEQ
                        list: body
                            HdlStmAssign
                                HdlValueId: RAM_ROW_FETCHED
                                HdlValueId: ram_arbiter_state
                    list: elifs
    UPD HdlValueId@@RAM_REFRESH to RAM_BURST_OFF2
    DEL HdlValueId@@RAM_BURST_OFF2 from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 

UPD HdlStmCase@@ram_arbiter_state to ram_arbiter_state
    INS tuple@@ to cases
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@RAM_REFRESH to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ


CommitId: 0a7ad9a4c0739dd9f820d25baa02f81315cf1f3a
register, blitter, refresh restructuring, 32bit scaler fixed
--- a/z2-minispartan/z2.v
+++ b/z2-minispartan/z2.v
@@ -1841,7 +1843,7 @@ always @(posedge z_sample_clk) begin
       videocap_save_x2 <= 0;
     end
   end
-
+  
   case (ram_arbiter_state)
     RAM_READY: begin
       ram_enable <= 0;

ParseResult:
UPD HdlStmCase@@ram_arbiter_state to ram_arbiter_state
    MOV tuple@@ to cases
    tuple
        HdlValueId: RAM_REFRESH
        HdlStmBlock: SEQ
            list: body
                HdlStmAssign
                    HdlValueInt: 0
                    HdlValueId: ram_enable
                HdlStmIf
                    HdlValueId: data_out_ready
                    HdlStmBlock: SEQ
                        list: body
                            HdlStmAssign
                                HdlValueId: RAM_ROW_FETCHED
                                HdlValueId: ram_arbiter_state
                    list: elifs
    UPD HdlValueId@@RAM_REFRESH to RAM_BURST_OFF2
    DEL HdlValueId@@RAM_BURST_OFF2 from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 

UPD HdlStmCase@@ram_arbiter_state to ram_arbiter_state
    INS tuple@@ to cases
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@RAM_REFRESH to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ


CommitId: 0a7ad9a4c0739dd9f820d25baa02f81315cf1f3a
register, blitter, refresh restructuring, 32bit scaler fixed
--- a/z2-minispartan/z2.v
+++ b/z2-minispartan/z2.v
@@ -1912,11 +1914,14 @@ always @(posedge z_sample_clk) begin
     RAM_BURST_OFF2: begin
       ram_enable <= 0;
       if (data_out_ready) begin
-        ram_arbiter_state <= RAM_REFRESH_PRE;
+        ram_arbiter_state <= RAM_ROW_FETCHED;
       end
     end
     
-    RAM_ROW_FETCHED:
+    RAM_ROW_FETCHED: begin
+      if (refresh_counter<refresh_max)
+        refresh_counter<=refresh_counter+1'b1;
+    
       if ((need_row_fetch_y_latched!=fetch_line_y) && x_safe_area_sync[1] && cmd_ready) begin
         row_fetched <= 0;
         fetch_x <= 0;

ParseResult:
UPD HdlStmCase@@ram_arbiter_state to ram_arbiter_state
    MOV tuple@@ to cases
    tuple
        HdlValueId: RAM_REFRESH
        HdlStmBlock: SEQ
            list: body
                HdlStmAssign
                    HdlValueInt: 0
                    HdlValueId: ram_enable
                HdlStmIf
                    HdlValueId: data_out_ready
                    HdlStmBlock: SEQ
                        list: body
                            HdlStmAssign
                                HdlValueId: RAM_ROW_FETCHED
                                HdlValueId: ram_arbiter_state
                    list: elifs
    UPD HdlValueId@@RAM_REFRESH to RAM_BURST_OFF2
    DEL HdlValueId@@RAM_BURST_OFF2 from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 

UPD HdlStmCase@@ram_arbiter_state to ram_arbiter_state
    INS tuple@@ to cases
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@RAM_REFRESH to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

MOV HdlStmIf@@ to 
HdlStmIf
    HdlOp: AND_LOG
        list: ops
            HdlOp: AND_LOG
                list: ops
                    HdlOp: NE
                        list: ops
                            HdlValueId: need_row_fetch_y_latched
                            HdlValueId: fetch_line_y
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: x_safe_area_sync
                            HdlValueInt: 1
            HdlValueId: cmd_ready
    HdlStmBlock: SEQ
        list: body
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: row_fetched
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: fetch_x
            HdlStmAssign
                HdlValueId: need_row_fetch_y_latched
                HdlValueId: fetch_line_y
            HdlStmAssign
                HdlValueId: RAM_READY
                HdlValueId: ram_arbiter_state
    list: elifs
        tuple
            HdlOp: INDEX
                list: ops
                    HdlValueId: x_safe_area_sync
                    HdlValueInt: 1
            HdlStmBlock: SEQ
                list: body
        tuple
            HdlOp: AND_LOG
                list: ops
                    HdlOp: EQ
                        list: ops
                            HdlValueId: blitter_enable
                            HdlValueInt: 1
                    HdlValueId: cmd_ready
            HdlStmBlock: SEQ
                list: body
                    HdlStmIf
                        HdlOp: EQ
                            list: ops
                                HdlValueId: blitter_colormode
                                HdlValueInt: 2
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmAssign
                                    HdlOp: INDEX
                                        list: ops
                                            HdlValueId: blitter_rgb32
                                            HdlValueId: blitter_rgb32_t
                                    HdlValueId: blitter_rgb
                        list: elifs
                    HdlStmIf
                        HdlOp: LE
                            list: ops
                                HdlValueId: blitter_curx
                                HdlValueId: blitter_x2
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmAssign
                                    HdlValueId: RAM_BLIT_WRITE
                                    HdlValueId: ram_arbiter_state
                        list: elifs
                            tuple
                                HdlOp: LT
                                    list: ops
                                        HdlValueId: blitter_cury
                                        HdlValueId: blitter_y2
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlStmAssign
                                            HdlOp: ADD
                                                list: ops
                                                    HdlValueId: blitter_cury
                                                    HdlValueInt: 1
                                            HdlValueId: blitter_cury
                                        HdlStmAssign
                                            HdlValueId: blitter_x1
                                            HdlValueId: blitter_curx
                                        HdlStmAssign
                                            HdlOp: ADD
                                                list: ops
                                                    HdlValueId: blitter_ptr
                                                    HdlValueId: blitter_row_pitch
                                            HdlValueId: blitter_ptr
                                        HdlStmAssign
                                            HdlValueInt: 0
                                            HdlValueId: blitter_rgb32_t
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmAssign
                                    HdlValueInt: 0
                                    HdlValueId: blitter_curx
                                HdlStmAssign
                                    HdlValueInt: 0
                                    HdlValueId: blitter_cury
                                HdlStmAssign
                                    HdlValueInt: 0
                                    HdlValueId: blitter_enable
        tuple
            HdlOp: AND_LOG
                list: ops
                    HdlOp: EQ
                        list: ops
                            HdlValueId: blitter_enable
                            HdlValueInt: 2
                    HdlValueId: cmd_ready
            HdlStmBlock: SEQ
                list: body
                    HdlStmIf
                        HdlValueId: data_out_queue_empty
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmAssign
                                    HdlValueInt: 11
                                    HdlValueId: ram_byte_enable
                                HdlStmAssign
                                    HdlOp: ADD
                                        list: ops
                                            HdlValueId: blitter_ptr2
                                            HdlValueId: blitter_curx2
                                    HdlValueId: ram_addr
                                HdlStmAssign
                                    HdlValueInt: 0
                                    HdlValueId: ram_write
                                HdlStmAssign
                                    HdlValueInt: 1
                                    HdlValueId: ram_enable
                                HdlStmAssign
                                    HdlValueId: RAM_BLIT_COPY_READ
                                    HdlValueId: ram_arbiter_state
                        list: elifs
                        HdlStmAssign: if_false
                            HdlValueInt: 0
                            HdlValueId: ram_enable
        tuple
            HdlOp: AND_LOG
                list: ops
                    HdlOp: EQ
                        list: ops
                            HdlValueId: blitter_enable
                            HdlValueInt: 4
                    HdlValueId: cmd_ready
            HdlStmBlock: SEQ
                list: body
                    HdlStmAssign
                        HdlOp: ADD
                            list: ops
                                HdlValueId: blitter_ptr
                                HdlValueId: blitter_curx
                        HdlValueId: ram_addr
                    HdlStmAssign
                        HdlValueId: blitter_copy_rgb
                        HdlValueId: ram_data_in
                    HdlStmAssign
                        HdlValueInt: 1
                        HdlValueId: ram_write
                    HdlStmAssign
                        HdlValueInt: 1
                        HdlValueId: ram_enable
                    HdlStmAssign
                        HdlValueInt: 11
                        HdlValueId: ram_byte_enable
                    HdlStmAssign
                        HdlValueId: RAM_BLIT_COPY_WRITE
                        HdlValueId: ram_arbiter_state
                    HdlStmAssign
                        HdlValueInt: 2
                        HdlValueId: blitter_enable
        tuple
            HdlOp: AND_LOG
                list: ops
                    HdlValueId: videocap_mode
                    HdlValueId: zorro_ram_write_request
            HdlStmBlock: SEQ
                list: body
                    HdlStmAssign
                        HdlValueInt: 0
                        HdlValueId: zorro_ram_write_request
        tuple
            HdlOp: AND_LOG
                list: ops
                    HdlOp: AND_LOG
                        list: ops
                            HdlOp: EQ
                                list: ops
                                    HdlValueId: blitter_enable
                                    HdlValueInt: 0
                            HdlValueId: zorro_ram_write_request
                    HdlValueId: cmd_ready
            HdlStmBlock: SEQ
                list: body
                    HdlStmAssign
                        HdlValueId: RAM_WRITING_ZORRO_PRE
                        HdlValueId: ram_arbiter_state
        tuple
            HdlOp: AND_LOG
                list: ops
                    HdlOp: AND_LOG
                        list: ops
                            HdlOp: EQ
                                list: ops
                                    HdlValueId: blitter_enable
                                    HdlValueInt: 0
                            HdlValueId: zorro_ram_read_request
                    HdlValueId: cmd_ready
            HdlStmBlock: SEQ
                list: body
                    HdlStmAssign
                        HdlValueInt: 0
                        HdlValueId: zorro_ram_read_done
                    HdlStmAssign
                        HdlValueInt: 0
                        HdlValueId: ram_enable
                    HdlStmAssign
                        HdlValueId: RAM_READING_ZORRO_PRE
                        HdlValueId: ram_arbiter_state
        tuple
            HdlOp: AND_LOG
                list: ops
                    HdlOp: AND_LOG
                        list: ops
                            HdlOp: NEG_LOG
                                list: ops
                                    HdlValueId: videocap_line_saved
                            HdlValueId: videocap_mode
                    HdlValueId: cmd_ready
            HdlStmBlock: SEQ
                list: body
                    HdlStmAssign
                        HdlValueInt: 1
                        HdlValueId: ram_enable
                    HdlStmAssign
                        HdlValueInt: 1
                        HdlValueId: ram_write
                    HdlStmAssign
                        HdlValueInt: 11
                        HdlValueId: ram_byte_enable
                    HdlStmAssign
                        HdlOp: ADD
                            list: ops
                                HdlValueId: videocap_save_base
                                HdlValueId: videocap_save_x2
                        HdlValueId: ram_addr
                    HdlStmAssign
                        HdlOp: INDEX
                            list: ops
                                HdlValueId: videocap_buf2
                                HdlOp: ADD
                                    list: ops
                                        HdlValueId: videocap_save_x
                                        HdlValueId: videocap_prex2
                        HdlValueId: ram_data_in
                    HdlStmAssign
                        HdlOp: INDEX
                            list: ops
                                HdlValueId: videocap_buf
                                HdlOp: ADD
                                    list: ops
                                        HdlValueId: videocap_save_x
                                        HdlValueId: videocap_prex2
                        HdlValueId: ram_data_in_next
                    HdlStmIf
                        HdlOp: LT
                            list: ops
                                HdlValueId: videocap_save_x
                                HdlValueId: videocap_width
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmAssign
                                    HdlOp: ADD
                                        list: ops
                                            HdlValueId: videocap_save_x
                                            HdlValueInt: 1
                                    HdlValueId: videocap_save_x
                                HdlStmAssign
                                    HdlOp: ADD
                                        list: ops
                                            HdlValueId: videocap_save_x2
                                            HdlValueInt: 10
                                    HdlValueId: videocap_save_x2
                        list: elifs
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmAssign
                                    HdlValueInt: 1
                                    HdlValueId: videocap_line_saved

UPD HdlStmIf@@ to 
    INS tuple@@ to elifs
    INS HdlOp@@AND_LOG to 
    HdlOp: AND_LOG
        list: ops
            HdlOp: EQ
                list: ops
                    HdlValueId: refresh_counter
                    HdlValueId: refresh_max
            HdlValueId: cmd_ready


CommitId: 0a7ad9a4c0739dd9f820d25baa02f81315cf1f3a
register, blitter, refresh restructuring, 32bit scaler fixed
--- a/z2-minispartan/z2.v
+++ b/z2-minispartan/z2.v
@@ -1926,6 +1931,10 @@ always @(posedge z_sample_clk) begin
       end else if (x_safe_area_sync[1]) begin
         // do nothing if in safe area
         
+      end else if (refresh_counter==refresh_max && cmd_ready) begin
+        // refresh ram
+        ram_arbiter_state <= RAM_REFRESH_PRE;
+        
       // BLITTER ----------------------------------------------------------------
       end else if (blitter_enable==1 && cmd_ready) begin
         if (blitter_colormode==2) begin

ParseResult:
UPD HdlStmCase@@ram_arbiter_state to ram_arbiter_state
    MOV tuple@@ to cases
    tuple
        HdlValueId: RAM_REFRESH
        HdlStmBlock: SEQ
            list: body
                HdlStmAssign
                    HdlValueInt: 0
                    HdlValueId: ram_enable
                HdlStmIf
                    HdlValueId: data_out_ready
                    HdlStmBlock: SEQ
                        list: body
                            HdlStmAssign
                                HdlValueId: RAM_ROW_FETCHED
                                HdlValueId: ram_arbiter_state
                    list: elifs
    UPD HdlValueId@@RAM_REFRESH to RAM_BURST_OFF2
    DEL HdlValueId@@RAM_BURST_OFF2 from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 

UPD HdlStmCase@@ram_arbiter_state to ram_arbiter_state
    INS tuple@@ to cases
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@RAM_REFRESH to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

MOV HdlStmIf@@ to 
HdlStmIf
    HdlOp: AND_LOG
        list: ops
            HdlOp: AND_LOG
                list: ops
                    HdlOp: NE
                        list: ops
                            HdlValueId: need_row_fetch_y_latched
                            HdlValueId: fetch_line_y
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: x_safe_area_sync
                            HdlValueInt: 1
            HdlValueId: cmd_ready
    HdlStmBlock: SEQ
        list: body
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: row_fetched
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: fetch_x
            HdlStmAssign
                HdlValueId: need_row_fetch_y_latched
                HdlValueId: fetch_line_y
            HdlStmAssign
                HdlValueId: RAM_READY
                HdlValueId: ram_arbiter_state
    list: elifs
        tuple
            HdlOp: INDEX
                list: ops
                    HdlValueId: x_safe_area_sync
                    HdlValueInt: 1
            HdlStmBlock: SEQ
                list: body
        tuple
            HdlOp: AND_LOG
                list: ops
                    HdlOp: EQ
                        list: ops
                            HdlValueId: blitter_enable
                            HdlValueInt: 1
                    HdlValueId: cmd_ready
            HdlStmBlock: SEQ
                list: body
                    HdlStmIf
                        HdlOp: EQ
                            list: ops
                                HdlValueId: blitter_colormode
                                HdlValueInt: 2
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmAssign
                                    HdlOp: INDEX
                                        list: ops
                                            HdlValueId: blitter_rgb32
                                            HdlValueId: blitter_rgb32_t
                                    HdlValueId: blitter_rgb
                        list: elifs
                    HdlStmIf
                        HdlOp: LE
                            list: ops
                                HdlValueId: blitter_curx
                                HdlValueId: blitter_x2
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmAssign
                                    HdlValueId: RAM_BLIT_WRITE
                                    HdlValueId: ram_arbiter_state
                        list: elifs
                            tuple
                                HdlOp: LT
                                    list: ops
                                        HdlValueId: blitter_cury
                                        HdlValueId: blitter_y2
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlStmAssign
                                            HdlOp: ADD
                                                list: ops
                                                    HdlValueId: blitter_cury
                                                    HdlValueInt: 1
                                            HdlValueId: blitter_cury
                                        HdlStmAssign
                                            HdlValueId: blitter_x1
                                            HdlValueId: blitter_curx
                                        HdlStmAssign
                                            HdlOp: ADD
                                                list: ops
                                                    HdlValueId: blitter_ptr
                                                    HdlValueId: blitter_row_pitch
                                            HdlValueId: blitter_ptr
                                        HdlStmAssign
                                            HdlValueInt: 0
                                            HdlValueId: blitter_rgb32_t
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmAssign
                                    HdlValueInt: 0
                                    HdlValueId: blitter_curx
                                HdlStmAssign
                                    HdlValueInt: 0
                                    HdlValueId: blitter_cury
                                HdlStmAssign
                                    HdlValueInt: 0
                                    HdlValueId: blitter_enable
        tuple
            HdlOp: AND_LOG
                list: ops
                    HdlOp: EQ
                        list: ops
                            HdlValueId: blitter_enable
                            HdlValueInt: 2
                    HdlValueId: cmd_ready
            HdlStmBlock: SEQ
                list: body
                    HdlStmIf
                        HdlValueId: data_out_queue_empty
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmAssign
                                    HdlValueInt: 11
                                    HdlValueId: ram_byte_enable
                                HdlStmAssign
                                    HdlOp: ADD
                                        list: ops
                                            HdlValueId: blitter_ptr2
                                            HdlValueId: blitter_curx2
                                    HdlValueId: ram_addr
                                HdlStmAssign
                                    HdlValueInt: 0
                                    HdlValueId: ram_write
                                HdlStmAssign
                                    HdlValueInt: 1
                                    HdlValueId: ram_enable
                                HdlStmAssign
                                    HdlValueId: RAM_BLIT_COPY_READ
                                    HdlValueId: ram_arbiter_state
                        list: elifs
                        HdlStmAssign: if_false
                            HdlValueInt: 0
                            HdlValueId: ram_enable
        tuple
            HdlOp: AND_LOG
                list: ops
                    HdlOp: EQ
                        list: ops
                            HdlValueId: blitter_enable
                            HdlValueInt: 4
                    HdlValueId: cmd_ready
            HdlStmBlock: SEQ
                list: body
                    HdlStmAssign
                        HdlOp: ADD
                            list: ops
                                HdlValueId: blitter_ptr
                                HdlValueId: blitter_curx
                        HdlValueId: ram_addr
                    HdlStmAssign
                        HdlValueId: blitter_copy_rgb
                        HdlValueId: ram_data_in
                    HdlStmAssign
                        HdlValueInt: 1
                        HdlValueId: ram_write
                    HdlStmAssign
                        HdlValueInt: 1
                        HdlValueId: ram_enable
                    HdlStmAssign
                        HdlValueInt: 11
                        HdlValueId: ram_byte_enable
                    HdlStmAssign
                        HdlValueId: RAM_BLIT_COPY_WRITE
                        HdlValueId: ram_arbiter_state
                    HdlStmAssign
                        HdlValueInt: 2
                        HdlValueId: blitter_enable
        tuple
            HdlOp: AND_LOG
                list: ops
                    HdlValueId: videocap_mode
                    HdlValueId: zorro_ram_write_request
            HdlStmBlock: SEQ
                list: body
                    HdlStmAssign
                        HdlValueInt: 0
                        HdlValueId: zorro_ram_write_request
        tuple
            HdlOp: AND_LOG
                list: ops
                    HdlOp: AND_LOG
                        list: ops
                            HdlOp: EQ
                                list: ops
                                    HdlValueId: blitter_enable
                                    HdlValueInt: 0
                            HdlValueId: zorro_ram_write_request
                    HdlValueId: cmd_ready
            HdlStmBlock: SEQ
                list: body
                    HdlStmAssign
                        HdlValueId: RAM_WRITING_ZORRO_PRE
                        HdlValueId: ram_arbiter_state
        tuple
            HdlOp: AND_LOG
                list: ops
                    HdlOp: AND_LOG
                        list: ops
                            HdlOp: EQ
                                list: ops
                                    HdlValueId: blitter_enable
                                    HdlValueInt: 0
                            HdlValueId: zorro_ram_read_request
                    HdlValueId: cmd_ready
            HdlStmBlock: SEQ
                list: body
                    HdlStmAssign
                        HdlValueInt: 0
                        HdlValueId: zorro_ram_read_done
                    HdlStmAssign
                        HdlValueInt: 0
                        HdlValueId: ram_enable
                    HdlStmAssign
                        HdlValueId: RAM_READING_ZORRO_PRE
                        HdlValueId: ram_arbiter_state
        tuple
            HdlOp: AND_LOG
                list: ops
                    HdlOp: AND_LOG
                        list: ops
                            HdlOp: NEG_LOG
                                list: ops
                                    HdlValueId: videocap_line_saved
                            HdlValueId: videocap_mode
                    HdlValueId: cmd_ready
            HdlStmBlock: SEQ
                list: body
                    HdlStmAssign
                        HdlValueInt: 1
                        HdlValueId: ram_enable
                    HdlStmAssign
                        HdlValueInt: 1
                        HdlValueId: ram_write
                    HdlStmAssign
                        HdlValueInt: 11
                        HdlValueId: ram_byte_enable
                    HdlStmAssign
                        HdlOp: ADD
                            list: ops
                                HdlValueId: videocap_save_base
                                HdlValueId: videocap_save_x2
                        HdlValueId: ram_addr
                    HdlStmAssign
                        HdlOp: INDEX
                            list: ops
                                HdlValueId: videocap_buf2
                                HdlOp: ADD
                                    list: ops
                                        HdlValueId: videocap_save_x
                                        HdlValueId: videocap_prex2
                        HdlValueId: ram_data_in
                    HdlStmAssign
                        HdlOp: INDEX
                            list: ops
                                HdlValueId: videocap_buf
                                HdlOp: ADD
                                    list: ops
                                        HdlValueId: videocap_save_x
                                        HdlValueId: videocap_prex2
                        HdlValueId: ram_data_in_next
                    HdlStmIf
                        HdlOp: LT
                            list: ops
                                HdlValueId: videocap_save_x
                                HdlValueId: videocap_width
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmAssign
                                    HdlOp: ADD
                                        list: ops
                                            HdlValueId: videocap_save_x
                                            HdlValueInt: 1
                                    HdlValueId: videocap_save_x
                                HdlStmAssign
                                    HdlOp: ADD
                                        list: ops
                                            HdlValueId: videocap_save_x2
                                            HdlValueInt: 10
                                    HdlValueId: videocap_save_x2
                        list: elifs
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmAssign
                                    HdlValueInt: 1
                                    HdlValueId: videocap_line_saved

UPD HdlStmIf@@ to 
    INS tuple@@ to elifs
    INS HdlOp@@AND_LOG to 
    HdlOp: AND_LOG
        list: ops
            HdlOp: EQ
                list: ops
                    HdlValueId: refresh_counter
                    HdlValueId: refresh_max
            HdlValueId: cmd_ready


CommitId: 0a7ad9a4c0739dd9f820d25baa02f81315cf1f3a
register, blitter, refresh restructuring, 32bit scaler fixed
--- a/z2-minispartan/z2.v
+++ b/z2-minispartan/z2.v
@@ -1997,22 +2006,21 @@ always @(posedge z_sample_clk) begin
           videocap_line_saved <= 1;
         end
       end
+    end
     
     RAM_REFRESH_PRE: begin
-      if (cmd_ready) begin
-        ram_enable <= 1;
-        ram_write <= 0;
-        ram_byte_enable <= 'b11;
-        ram_addr <= refresh_addr;
-        refresh_addr <= refresh_addr + 512;
-        ram_arbiter_state <= RAM_REFRESH;
-        refresh_counter <= 0;
-      end
+      refresh_counter <= 0;
+      ram_enable <= 1;
+      ram_write <= 0;
+      ram_byte_enable <= 'b11;
+      ram_addr <= refresh_addr;
+      refresh_addr <= refresh_addr + 512;
+      ram_arbiter_state <= RAM_REFRESH;
     end
     
     RAM_REFRESH: begin
-      ram_enable <= 0;
       if (data_out_ready) begin
+        ram_enable <= 0;
         ram_arbiter_state <= RAM_ROW_FETCHED;
       end
     end

ParseResult:
UPD HdlStmCase@@ram_arbiter_state to ram_arbiter_state
    MOV tuple@@ to cases
    tuple
        HdlValueId: RAM_REFRESH
        HdlStmBlock: SEQ
            list: body
                HdlStmAssign
                    HdlValueInt: 0
                    HdlValueId: ram_enable
                HdlStmIf
                    HdlValueId: data_out_ready
                    HdlStmBlock: SEQ
                        list: body
                            HdlStmAssign
                                HdlValueId: RAM_ROW_FETCHED
                                HdlValueId: ram_arbiter_state
                    list: elifs
    UPD HdlValueId@@RAM_REFRESH to RAM_BURST_OFF2
    DEL HdlValueId@@RAM_BURST_OFF2 from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 

UPD HdlStmCase@@ram_arbiter_state to ram_arbiter_state
    INS tuple@@ to cases
    INS HdlStmBlock@@SEQ to 
    INS HdlValueId@@RAM_REFRESH to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ


CommitId: 403fa88484546e7d2d1103014ad1d87574ca7fc3
WIP cleaner high-level structure; sdram controller debugging
--- a/z2-minispartan/SDRAM_Controller_v.v
+++ b/z2-minispartan/SDRAM_Controller_v.v
@@ -35,7 +35,7 @@ module SDRAM_Controller_v (
    // command and write port
    cmd_ready, cmd_enable, cmd_wr, cmd_byte_enable, cmd_address, cmd_data_in,
    // Read data port
-   data_out, data_out_ready,
+   data_out, data_out_ready, data_out_queue_empty,
    // SDRAM signals
    SDRAM_CLK,  SDRAM_CKE,  SDRAM_CS,   SDRAM_RAS,  SDRAM_CAS,
    SDRAM_WE,   SDRAM_DQM,  SDRAM_ADDR, SDRAM_BA,   SDRAM_DATA

ParseResult:
INS HdlIdDef@@data_out_queue_empty to ports
HdlIdDef: data_out_queue_empty
    HdlDirection: OUT


CommitId: 403fa88484546e7d2d1103014ad1d87574ca7fc3
WIP cleaner high-level structure; sdram controller debugging
--- a/z2-minispartan/SDRAM_Controller_v.v
+++ b/z2-minispartan/SDRAM_Controller_v.v
@@ -83,6 +83,9 @@ module SDRAM_Controller_v (
 
    reg data_out_ready_reg;
    output data_out_ready;     assign data_out_ready = data_out_ready_reg;
+   reg data_out_queue_empty_reg = 1;
+   output data_out_queue_empty; 
+   assign data_out_queue_empty = data_out_queue_empty_reg;
 
    output SDRAM_CLK;          // Assigned by a primative
    output SDRAM_CKE;          assign SDRAM_CKE = iob_cke;

ParseResult:
INS HdlIdDef@@data_out_queue_empty_reg to objs
HdlIdDef: data_out_queue_empty_reg
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
    HdlValueInt: 1
    HdlDirection: INTERNAL

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlValueId: data_out_queue_empty_reg
    HdlValueId: data_out_queue_empty


CommitId: 403fa88484546e7d2d1103014ad1d87574ca7fc3
WIP cleaner high-level structure; sdram controller debugging
--- a/z2-minispartan/SDRAM_Controller_v.v
+++ b/z2-minispartan/SDRAM_Controller_v.v
@@ -168,8 +171,7 @@ module SDRAM_Controller_v (
    // control when new transactions are accepted 
    reg ready_for_new    = 1'b0;
    reg got_transaction  = 1'b0;
-   reg can_back_to_back = 1'b0; 
-
+   
    // signal to control the Hi-Z state of the DQ bus
    reg iob_dq_hiz = 1'b0;
    

ParseResult:
MOV HdlIdDef@@can_back_to_back to objs
HdlIdDef: can_back_to_back
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
    HdlValueInt: 0
    HdlDirection: INTERNAL


CommitId: 403fa88484546e7d2d1103014ad1d87574ca7fc3
WIP cleaner high-level structure; sdram controller debugging
--- a/z2-minispartan/SDRAM_Controller_v.v
+++ b/z2-minispartan/SDRAM_Controller_v.v
@@ -255,26 +256,30 @@ always  @ (posedge clk )
       startup_refresh_count <= startup_refresh_count+1;
                   
       //-------------------------------------------------------------------
-      //-- It we are ready for a new tranasction and one is being presented
+      //-- It we are ready for a new transaction and one is being presented
       //-- then accept it. Also remember what we are reading or writing,
       //-- and if it can be back-to-backed with the last transaction
       //-------------------------------------------------------------------
       if (ready_for_new == 1'b1 && cmd_enable == 1'b1) begin
-         //$display("%h r: %h c: %h",cmd_address,addr_row,addr_col);
-         
-         if(save_bank == addr_bank && save_row == addr_row) 
-            can_back_to_back <= 1'b1;
-         else
-            can_back_to_back <= 1'b0;
+        if(save_bank == addr_bank && save_row == addr_row) 
+          can_back_to_back <= 1'b1;
+        else
+          can_back_to_back <= 1'b0;
 
-         save_row         <= addr_row;
-         save_bank        <= addr_bank;
-         save_col         <= addr_col;
-         save_wr          <= cmd_wr; 
-         save_data_in     <= cmd_data_in;
-         save_byte_enable <= cmd_byte_enable;
-         got_transaction  <= 1'b1;
-         ready_for_new    <= 1'b0;
+        //$display("%h r: %h c: %h",cmd_address,addr_row,addr_col);
+        save_row         <= addr_row;
+        save_bank        <= addr_bank;
+        save_col         <= addr_col;
+        save_wr          <= cmd_wr; 
+        save_data_in     <= cmd_data_in;
+        save_byte_enable <= cmd_byte_enable;
+        got_transaction  <= 1'b1;
+        ready_for_new    <= 1'b0;
+      end
+      
+      // empty read queue if switched off
+      if (cmd_enable == 0) begin
+        data_ready_delay <= 0;
       end
 
       //------------------------------------------------

ParseResult:
INS HdlStmIf@@ to body
HdlStmIf
    HdlOp: EQ
        list: ops
            HdlValueId: cmd_enable
            HdlValueInt: 0
    HdlStmBlock: SEQ
        list: body
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: data_ready_delay
    list: elifs


CommitId: 403fa88484546e7d2d1103014ad1d87574ca7fc3
WIP cleaner high-level structure; sdram controller debugging
--- a/z2-minispartan/SDRAM_Controller_v.v
+++ b/z2-minispartan/SDRAM_Controller_v.v
@@ -283,16 +288,20 @@ always  @ (posedge clk )
       //------------------------------------------------
       data_out_ready_reg <= 1'b0;
       if (data_ready_delay[0] == 1'b1) begin
-         data_out_reg       <= {captured_data, captured_data};
+         data_out_reg       <= captured_data;
          data_out_ready_reg <= 1'b1;
       end
+      
+      // no more bits in the queue?
+      if (data_ready_delay == 0)
+        data_out_queue_empty_reg <= 1;
+      else
+        data_out_queue_empty_reg <= 0;
          
       //----------------------------------------------------------------------------
       //-- update shift registers used to choose when to present data to/from memory
       //----------------------------------------------------------------------------
       data_ready_delay <= {1'b0, data_ready_delay[data_ready_delay_high:1]};
-      //iob_dqm       <= dqm_sr[1:0];
-      //dqm_sr        <= {2'b11, dqm_sr[dqm_sr_high:2]};
          
       case(state) 
          s_startup: begin

ParseResult:
INS HdlStmIf@@ to body
HdlStmIf
    HdlOp: EQ
        list: ops
            HdlValueId: data_ready_delay
            HdlValueInt: 0
    HdlStmAssign: if_true
        HdlValueInt: 1
        HdlValueId: data_out_queue_empty_reg
    list: elifs
    HdlStmAssign: if_false
        HdlValueInt: 0
        HdlValueId: data_out_queue_empty_reg

UPD HdlStmCase@@state to state
    MOV HdlValueId@@s_idle to 
    HdlValueId: s_idle
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlStmIf
                HdlOp: OR_LOG
                    list: ops
                        HdlOp: EQ
                            list: ops
                                HdlValueId: pending_refresh
                                HdlValueInt: 1
                        HdlOp: EQ
                            list: ops
                                HdlValueId: forcing_refresh
                                HdlValueInt: 1
                HdlStmBlock: SEQ
                    list: body
                        HdlStmAssign
                            HdlValueId: s_idle_in_6
                            HdlValueId: state
                        HdlStmAssign
                            HdlValueId: CMD_REFRESH
                            HdlValueId: iob_command
                        HdlStmAssign
                            HdlOp: ADD
                                list: ops
                                    HdlOp: SUB
                                        list: ops
                                            HdlValueId: startup_refresh_count
                                            HdlValueId: cycles_per_refresh
                                    HdlValueInt: 1
                            HdlValueId: startup_refresh_count
                list: elifs
                    tuple
                        HdlOp: EQ
                            list: ops
                                HdlValueId: got_transaction
                                HdlValueInt: 1
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmAssign
                                    HdlValueId: s_open_in_2
                                    HdlValueId: state
                                HdlStmAssign
                                    HdlValueId: CMD_ACTIVE
                                    HdlValueId: iob_command
                                HdlStmAssign
                                    HdlValueId: save_row
                                    HdlValueId: iob_address
                                HdlStmAssign
                                    HdlValueId: save_bank
                                    HdlValueId: iob_bank
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL tuple@@ from cases

UPD HdlStmAssign@@ to 
    UPD HdlOp@@CONCAT to CONCAT
        MOV HdlValueId@@captured_data to ops
        HdlValueId: captured_data
        DEL HdlValueId@@captured_data from ops
        DEL list@@ops from CONCAT
    DEL HdlOp@@CONCAT from 


CommitId: 403fa88484546e7d2d1103014ad1d87574ca7fc3
WIP cleaner high-level structure; sdram controller debugging
--- a/z2-minispartan/SDRAM_Controller_v.v
+++ b/z2-minispartan/SDRAM_Controller_v.v
@@ -383,10 +378,12 @@ always  @ (posedge clk )
          s_open_in_1: begin 
                // still waiting for row to open
                if(save_wr == 1'b1) begin
+                  // write
                   state       <= s_write_1;
                   iob_dq_hiz  <= 1'b0;
-                  iob_data    <= save_data_in[15:0]; // get the DQ bus out of HiZ early
+                  iob_data    <= save_data_in[15:0];
                end else begin
+                  // read
                   iob_dq_hiz  <= 1'b1;
                   state       <= s_read_1;
                end

ParseResult:
UPD HdlStmCase@@state to state
    MOV HdlValueId@@s_idle to 
    HdlValueId: s_idle
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlStmIf
                HdlOp: OR_LOG
                    list: ops
                        HdlOp: EQ
                            list: ops
                                HdlValueId: pending_refresh
                                HdlValueInt: 1
                        HdlOp: EQ
                            list: ops
                                HdlValueId: forcing_refresh
                                HdlValueInt: 1
                HdlStmBlock: SEQ
                    list: body
                        HdlStmAssign
                            HdlValueId: s_idle_in_6
                            HdlValueId: state
                        HdlStmAssign
                            HdlValueId: CMD_REFRESH
                            HdlValueId: iob_command
                        HdlStmAssign
                            HdlOp: ADD
                                list: ops
                                    HdlOp: SUB
                                        list: ops
                                            HdlValueId: startup_refresh_count
                                            HdlValueId: cycles_per_refresh
                                    HdlValueInt: 1
                            HdlValueId: startup_refresh_count
                list: elifs
                    tuple
                        HdlOp: EQ
                            list: ops
                                HdlValueId: got_transaction
                                HdlValueInt: 1
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmAssign
                                    HdlValueId: s_open_in_2
                                    HdlValueId: state
                                HdlStmAssign
                                    HdlValueId: CMD_ACTIVE
                                    HdlValueId: iob_command
                                HdlStmAssign
                                    HdlValueId: save_row
                                    HdlValueId: iob_address
                                HdlStmAssign
                                    HdlValueId: save_bank
                                    HdlValueId: iob_bank
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL tuple@@ from cases


CommitId: 403fa88484546e7d2d1103014ad1d87574ca7fc3
WIP cleaner high-level structure; sdram controller debugging
--- a/z2-minispartan/SDRAM_Controller_v.v
+++ b/z2-minispartan/SDRAM_Controller_v.v
@@ -402,19 +399,19 @@ always  @ (posedge clk )
                iob_command     <= CMD_READ;
                iob_address     <= save_col; 
                iob_bank        <= save_bank;
-               iob_address[prefresh_cmd] <= 1'b0; // A10 actually matters - it selects auto precharge
+               iob_address[prefresh_cmd] <= 1'b0; // A10: auto precharge
                
                // Schedule reading the data values off the bus
                data_ready_delay[data_ready_delay_high]   <= 1'b1;
                
-               // Set the data masks to read all bytes
+               // read all bytes
                iob_dqm     <= 2'b00;
-               //dqm_sr[1:0] <= 2'b00;
             end   
          s_read_2: begin
                state <= s_read_3;
-               if (forcing_refresh == 1'b0 && got_transaction == 1'b1 && can_back_to_back == 1'b1) begin
+               if (got_transaction == 1'b1 && can_back_to_back == 1'b1) begin
                   if (save_wr == 1'b0) begin 
+                     // read
                      state           <= s_read_1;
                      ready_for_new   <= 1'b1; // we will be ready for a new transaction next cycle!
                      got_transaction <= 1'b0;

ParseResult:
UPD HdlStmCase@@state to state
    MOV HdlValueId@@s_idle to 
    HdlValueId: s_idle
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlStmIf
                HdlOp: OR_LOG
                    list: ops
                        HdlOp: EQ
                            list: ops
                                HdlValueId: pending_refresh
                                HdlValueInt: 1
                        HdlOp: EQ
                            list: ops
                                HdlValueId: forcing_refresh
                                HdlValueInt: 1
                HdlStmBlock: SEQ
                    list: body
                        HdlStmAssign
                            HdlValueId: s_idle_in_6
                            HdlValueId: state
                        HdlStmAssign
                            HdlValueId: CMD_REFRESH
                            HdlValueId: iob_command
                        HdlStmAssign
                            HdlOp: ADD
                                list: ops
                                    HdlOp: SUB
                                        list: ops
                                            HdlValueId: startup_refresh_count
                                            HdlValueId: cycles_per_refresh
                                    HdlValueInt: 1
                            HdlValueId: startup_refresh_count
                list: elifs
                    tuple
                        HdlOp: EQ
                            list: ops
                                HdlValueId: got_transaction
                                HdlValueInt: 1
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmAssign
                                    HdlValueId: s_open_in_2
                                    HdlValueId: state
                                HdlStmAssign
                                    HdlValueId: CMD_ACTIVE
                                    HdlValueId: iob_command
                                HdlStmAssign
                                    HdlValueId: save_row
                                    HdlValueId: iob_address
                                HdlStmAssign
                                    HdlValueId: save_bank
                                    HdlValueId: iob_bank
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL tuple@@ from cases

UPD HdlStmIf@@ to 
    UPD HdlOp@@AND_LOG to AND_LOG
        MOV HdlOp@@AND_LOG to ops
        HdlOp: AND_LOG
            list: ops
                HdlOp: EQ
                    list: ops
                        HdlValueId: forcing_refresh
                        HdlValueInt: 0
                HdlOp: EQ
                    list: ops
                        HdlValueId: got_transaction
                        HdlValueInt: 1
        UPD HdlOp@@AND_LOG to AND_LOG
            DEL HdlOp@@EQ from ops
            HdlOp: EQ
                list: ops
                    HdlValueId: forcing_refresh
                    HdlValueInt: 0


CommitId: 403fa88484546e7d2d1103014ad1d87574ca7fc3
WIP cleaner high-level structure; sdram controller debugging
--- a/z2-minispartan/SDRAM_Controller_v.v
+++ b/z2-minispartan/SDRAM_Controller_v.v
@@ -423,8 +420,9 @@ always  @ (posedge clk )
             end   
          s_read_3: begin
                state <= s_read_4;
-               if (forcing_refresh == 1'b0 && got_transaction == 1'b1 && can_back_to_back == 1'b1) begin
+               if (got_transaction == 1'b1 && can_back_to_back == 1'b1) begin
                   if (save_wr == 1'b0) begin
+                     // read 
                      state           <= s_read_1;
                      ready_for_new   <= 1'b1; // we will be ready for a new transaction next cycle!
                      got_transaction <= 1'b0;

ParseResult:
UPD HdlStmCase@@state to state
    MOV HdlValueId@@s_idle to 
    HdlValueId: s_idle
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlStmIf
                HdlOp: OR_LOG
                    list: ops
                        HdlOp: EQ
                            list: ops
                                HdlValueId: pending_refresh
                                HdlValueInt: 1
                        HdlOp: EQ
                            list: ops
                                HdlValueId: forcing_refresh
                                HdlValueInt: 1
                HdlStmBlock: SEQ
                    list: body
                        HdlStmAssign
                            HdlValueId: s_idle_in_6
                            HdlValueId: state
                        HdlStmAssign
                            HdlValueId: CMD_REFRESH
                            HdlValueId: iob_command
                        HdlStmAssign
                            HdlOp: ADD
                                list: ops
                                    HdlOp: SUB
                                        list: ops
                                            HdlValueId: startup_refresh_count
                                            HdlValueId: cycles_per_refresh
                                    HdlValueInt: 1
                            HdlValueId: startup_refresh_count
                list: elifs
                    tuple
                        HdlOp: EQ
                            list: ops
                                HdlValueId: got_transaction
                                HdlValueInt: 1
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmAssign
                                    HdlValueId: s_open_in_2
                                    HdlValueId: state
                                HdlStmAssign
                                    HdlValueId: CMD_ACTIVE
                                    HdlValueId: iob_command
                                HdlStmAssign
                                    HdlValueId: save_row
                                    HdlValueId: iob_address
                                HdlStmAssign
                                    HdlValueId: save_bank
                                    HdlValueId: iob_bank
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL tuple@@ from cases

UPD HdlStmIf@@ to 
    UPD HdlOp@@AND_LOG to AND_LOG
        MOV HdlOp@@AND_LOG to ops
        HdlOp: AND_LOG
            list: ops
                HdlOp: EQ
                    list: ops
                        HdlValueId: forcing_refresh
                        HdlValueInt: 0
                HdlOp: EQ
                    list: ops
                        HdlValueId: got_transaction
                        HdlValueInt: 1
        MOV HdlOp@@EQ to ops
        HdlOp: EQ
            list: ops
                HdlValueId: can_back_to_back
                HdlValueInt: 1
        UPD HdlOp@@AND_LOG to AND_LOG
            DEL HdlOp@@EQ from ops
            HdlOp: EQ
                list: ops
                    HdlValueId: forcing_refresh
                    HdlValueInt: 0
        DEL list@@ops from AND_LOG
    DEL HdlOp@@AND_LOG from 


CommitId: 403fa88484546e7d2d1103014ad1d87574ca7fc3
WIP cleaner high-level structure; sdram controller debugging
--- a/z2-minispartan/SDRAM_Controller_v.v
+++ b/z2-minispartan/SDRAM_Controller_v.v
@@ -435,14 +433,14 @@ always  @ (posedge clk )
          s_read_4: begin
                state <= s_precharge;
                //-- can we do back-to-back read?
-               if (forcing_refresh == 1'b0 && got_transaction == 1'b1 && can_back_to_back == 1'b1) begin
+               if (got_transaction == 1'b1 && can_back_to_back == 1'b1) begin
                   if (save_wr == 1'b0) begin 
                      state           <= s_read_1;
                      ready_for_new   <= 1'b1; // we will be ready for a new transaction next cycle!
                      got_transaction <= 1'b0;
                   end
                   else
-                     state <= s_open_in_2; // we have to wait for the read data to come back before we switch the bus into HiZ
+                     state <= s_open_in_2;
                end
             end
          //------------------------------------------------------------------

ParseResult:
UPD HdlStmCase@@state to state
    MOV HdlValueId@@s_idle to 
    HdlValueId: s_idle
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlStmIf
                HdlOp: OR_LOG
                    list: ops
                        HdlOp: EQ
                            list: ops
                                HdlValueId: pending_refresh
                                HdlValueInt: 1
                        HdlOp: EQ
                            list: ops
                                HdlValueId: forcing_refresh
                                HdlValueInt: 1
                HdlStmBlock: SEQ
                    list: body
                        HdlStmAssign
                            HdlValueId: s_idle_in_6
                            HdlValueId: state
                        HdlStmAssign
                            HdlValueId: CMD_REFRESH
                            HdlValueId: iob_command
                        HdlStmAssign
                            HdlOp: ADD
                                list: ops
                                    HdlOp: SUB
                                        list: ops
                                            HdlValueId: startup_refresh_count
                                            HdlValueId: cycles_per_refresh
                                    HdlValueInt: 1
                            HdlValueId: startup_refresh_count
                list: elifs
                    tuple
                        HdlOp: EQ
                            list: ops
                                HdlValueId: got_transaction
                                HdlValueInt: 1
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmAssign
                                    HdlValueId: s_open_in_2
                                    HdlValueId: state
                                HdlStmAssign
                                    HdlValueId: CMD_ACTIVE
                                    HdlValueId: iob_command
                                HdlStmAssign
                                    HdlValueId: save_row
                                    HdlValueId: iob_address
                                HdlStmAssign
                                    HdlValueId: save_bank
                                    HdlValueId: iob_bank
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL tuple@@ from cases

UPD HdlStmIf@@ to 
    UPD HdlOp@@AND_LOG to AND_LOG
        UPD HdlOp@@AND_LOG to AND_LOG
            MOV HdlOp@@EQ to ops
            HdlOp: EQ
                list: ops
                    HdlValueId: got_transaction
                    HdlValueInt: 1
            DEL HdlOp@@EQ from ops
            HdlOp: EQ
                list: ops
                    HdlValueId: forcing_refresh
                    HdlValueInt: 0
            DEL list@@ops from AND_LOG
        DEL HdlOp@@AND_LOG from ops


CommitId: 403fa88484546e7d2d1103014ad1d87574ca7fc3
WIP cleaner high-level structure; sdram controller debugging
--- a/z2-minispartan/SDRAM_Controller_v.v
+++ b/z2-minispartan/SDRAM_Controller_v.v
@@ -452,19 +450,16 @@ always  @ (posedge clk )
                state                     <= s_write_2;
                iob_command               <= CMD_WRITE;
                iob_address               <= save_col; 
-               iob_address[prefresh_cmd] <= 1'b0; // A10 actually matters - it selects auto precharge
+               iob_address[prefresh_cmd] <= 1'b0;
                iob_bank                  <= save_bank;
-               iob_dqm                   <= ~ save_byte_enable[1:0];    
-               //dqm_sr[1:0]               <= ~ save_byte_enable[3:2];    
+               iob_dqm                   <= ~ save_byte_enable[1:0];      
                iob_data                  <= save_data_in[15:0];
-               //iob_data_next             <= save_data_in[31:16];
             end
          s_write_2: begin
             $display("w2 %h\t%h\t%h", save_bank, save_row, iob_address);
                state           <= s_write_3;
-               //iob_data        <= iob_data_next;
                // can we do a back-to-back write?
-               if (forcing_refresh == 1'b0 && got_transaction == 1'b1 && can_back_to_back == 1'b1) begin
+               if (got_transaction == 1'b1 && can_back_to_back == 1'b1) begin
                   if (save_wr == 1'b1) begin
                      $display("back-to-back write");
                      

ParseResult:
UPD HdlStmCase@@state to state
    MOV HdlValueId@@s_idle to 
    HdlValueId: s_idle
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlStmIf
                HdlOp: OR_LOG
                    list: ops
                        HdlOp: EQ
                            list: ops
                                HdlValueId: pending_refresh
                                HdlValueInt: 1
                        HdlOp: EQ
                            list: ops
                                HdlValueId: forcing_refresh
                                HdlValueInt: 1
                HdlStmBlock: SEQ
                    list: body
                        HdlStmAssign
                            HdlValueId: s_idle_in_6
                            HdlValueId: state
                        HdlStmAssign
                            HdlValueId: CMD_REFRESH
                            HdlValueId: iob_command
                        HdlStmAssign
                            HdlOp: ADD
                                list: ops
                                    HdlOp: SUB
                                        list: ops
                                            HdlValueId: startup_refresh_count
                                            HdlValueId: cycles_per_refresh
                                    HdlValueInt: 1
                            HdlValueId: startup_refresh_count
                list: elifs
                    tuple
                        HdlOp: EQ
                            list: ops
                                HdlValueId: got_transaction
                                HdlValueInt: 1
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmAssign
                                    HdlValueId: s_open_in_2
                                    HdlValueId: state
                                HdlStmAssign
                                    HdlValueId: CMD_ACTIVE
                                    HdlValueId: iob_command
                                HdlStmAssign
                                    HdlValueId: save_row
                                    HdlValueId: iob_address
                                HdlStmAssign
                                    HdlValueId: save_bank
                                    HdlValueId: iob_bank
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL tuple@@ from cases

UPD HdlStmIf@@ to 
    UPD HdlOp@@AND_LOG to AND_LOG
        UPD HdlOp@@AND_LOG to AND_LOG
            MOV HdlOp@@EQ to ops
            HdlOp: EQ
                list: ops
                    HdlValueId: got_transaction
                    HdlValueInt: 1
            DEL HdlOp@@EQ from ops
            HdlOp: EQ
                list: ops
                    HdlValueId: forcing_refresh
                    HdlValueInt: 0
            DEL list@@ops from AND_LOG
        DEL HdlOp@@AND_LOG from ops


CommitId: 403fa88484546e7d2d1103014ad1d87574ca7fc3
WIP cleaner high-level structure; sdram controller debugging
--- a/z2-minispartan/SDRAM_Controller_v.v
+++ b/z2-minispartan/SDRAM_Controller_v.v
@@ -480,7 +475,7 @@ always  @ (posedge clk )
          s_write_3: begin
                // must wait tRDL, hence the extra idle state
                //-- back to back transaction?
-               if (forcing_refresh == 1'b0 && got_transaction == 1'b1 && can_back_to_back == 1'b1) begin
+               if (got_transaction == 1'b1 && can_back_to_back == 1'b1) begin
                   if (save_wr == 1'b1) begin
                      // back-to-back write?
                      state           <= s_write_1;
ParseResult:
UPD HdlStmCase@@state to state
    MOV HdlValueId@@s_idle to 
    HdlValueId: s_idle
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlStmIf
                HdlOp: OR_LOG
                    list: ops
                        HdlOp: EQ
                            list: ops
                                HdlValueId: pending_refresh
                                HdlValueInt: 1
                        HdlOp: EQ
                            list: ops
                                HdlValueId: forcing_refresh
                                HdlValueInt: 1
                HdlStmBlock: SEQ
                    list: body
                        HdlStmAssign
                            HdlValueId: s_idle_in_6
                            HdlValueId: state
                        HdlStmAssign
                            HdlValueId: CMD_REFRESH
                            HdlValueId: iob_command
                        HdlStmAssign
                            HdlOp: ADD
                                list: ops
                                    HdlOp: SUB
                                        list: ops
                                            HdlValueId: startup_refresh_count
                                            HdlValueId: cycles_per_refresh
                                    HdlValueInt: 1
                            HdlValueId: startup_refresh_count
                list: elifs
                    tuple
                        HdlOp: EQ
                            list: ops
                                HdlValueId: got_transaction
                                HdlValueInt: 1
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmAssign
                                    HdlValueId: s_open_in_2
                                    HdlValueId: state
                                HdlStmAssign
                                    HdlValueId: CMD_ACTIVE
                                    HdlValueId: iob_command
                                HdlStmAssign
                                    HdlValueId: save_row
                                    HdlValueId: iob_address
                                HdlStmAssign
                                    HdlValueId: save_bank
                                    HdlValueId: iob_bank
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL tuple@@ from cases

UPD HdlStmIf@@ to 
    UPD HdlOp@@AND_LOG to AND_LOG
        UPD HdlOp@@AND_LOG to AND_LOG
            MOV HdlOp@@EQ to ops
            HdlOp: EQ
                list: ops
                    HdlValueId: got_transaction
                    HdlValueInt: 1
            DEL HdlOp@@EQ from ops
            HdlOp: EQ
                list: ops
                    HdlValueId: forcing_refresh
                    HdlValueInt: 0
            DEL list@@ops from AND_LOG
        MOV HdlOp@@EQ to ops
        HdlOp: EQ
            list: ops
                HdlValueId: can_back_to_back
                HdlValueInt: 1
        DEL HdlOp@@AND_LOG from ops
        DEL list@@ops from AND_LOG
    DEL HdlOp@@AND_LOG from 


CommitId: d3ad14cb8d8df15e0c612079f6679ad40e59e29b
debugged snapshot
--- a/z2-minispartan/SDRAM_Controller_v.v
+++ b/z2-minispartan/SDRAM_Controller_v.v
@@ -254,9 +254,9 @@ always @(posedge clk)
       end
       
       // empty read queue if switched off
-      if (cmd_enable == 0) begin
-        data_ready_delay <= 0;
-      end
+      //if (cmd_enable == 0) begin
+      //  data_ready_delay <= 0;
+      //end
 
       if (data_ready_delay[0] == 1'b1) begin
         data_out_reg       <= captured_data;

ParseResult:
DEL HdlStmIf@@ from body
HdlStmIf
    HdlOp: EQ
        list: ops
            HdlValueId: cmd_enable
            HdlValueInt: 0
    HdlStmBlock: SEQ
        list: body
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: data_ready_delay
    list: elifs


CommitId: d3ad14cb8d8df15e0c612079f6679ad40e59e29b
debugged snapshot
--- a/z2-minispartan/SDRAM_Controller_v.v
+++ b/z2-minispartan/SDRAM_Controller_v.v
@@ -297,7 +297,7 @@ always @(posedge clk)
                iob_cke <= 1'b1;
                
                // All the commands during the startup are NOPS, except these
-               if(startup_refresh_count == startup_refresh_max-31) begin
+               /*if(startup_refresh_count == startup_refresh_max-31) begin
                   // ensure all rows are closed
                   iob_command     <= CMD_PRECHARGE;
                   iob_address[prefresh_cmd] <= 1'b1;  // all banks

ParseResult:
UPD HdlStmIf@@ to 
    DEL HdlOp@@EQ from 
    HdlOp: EQ
        list: ops
            HdlValueId: startup_refresh_count
            HdlOp: SUB
                list: ops
                    HdlValueId: startup_refresh_max
                    HdlValueInt: 31
    DEL HdlStmBlock@@SEQ from 
    HdlStmBlock: SEQ
        list: body
            HdlStmAssign
                HdlValueId: CMD_PRECHARGE
                HdlValueId: iob_command
            HdlStmAssign
                HdlValueInt: 1
                HdlOp: INDEX
                    list: ops
                        HdlValueId: iob_address
                        HdlValueId: prefresh_cmd
            HdlStmAssign
                HdlValueInt: 00
                HdlValueId: iob_bank
    DEL tuple@@ from elifs
    tuple
        HdlOp: EQ
            list: ops
                HdlValueId: startup_refresh_count
                HdlOp: SUB
                    list: ops
                        HdlValueId: startup_refresh_max
                        HdlValueInt: 23
        HdlStmBlock: SEQ
            list: body
                HdlStmAssign
                    HdlValueId: CMD_REFRESH
                    HdlValueId: iob_command
    DEL tuple@@ from elifs
    tuple
        HdlOp: EQ
            list: ops
                HdlValueId: startup_refresh_count
                HdlOp: SUB
                    list: ops
                        HdlValueId: startup_refresh_max
                        HdlValueInt: 15
        HdlStmAssign
            HdlValueId: CMD_REFRESH
            HdlValueId: iob_command
    DEL HdlOp@@EQ from 
    HdlOp: EQ
        list: ops
            HdlValueId: startup_refresh_count
            HdlOp: SUB
                list: ops
                    HdlValueId: startup_refresh_max
                    HdlValueInt: 7
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from elifs
    DEL list@@elifs from 

DEL HdlStmIf@@ from body


CommitId: d3ad14cb8d8df15e0c612079f6679ad40e59e29b
debugged snapshot
--- a/z2-minispartan/SDRAM_Controller_v.v
+++ b/z2-minispartan/SDRAM_Controller_v.v
@@ -308,11 +308,11 @@ always @(posedge clk)
                   iob_command     <= CMD_REFRESH;
                end else if (startup_refresh_count == startup_refresh_max-15) 
                   iob_command     <= CMD_REFRESH;
-               else if (startup_refresh_count == startup_refresh_max-7) begin
+               else*/ //if (startup_refresh_count == startup_refresh_max-7) begin
                   // Now load the mode register
                   iob_command     <= CMD_LOAD_MODE_REG;
                   iob_address     <= MODE_REG;
-               end
+               //end
 
                if (startup_refresh_count == 1'b0) begin
                   state           <= s_idle;

ParseResult:
MOV HdlStmAssign@@ to body
HdlStmAssign
    HdlValueId: CMD_LOAD_MODE_REG
    HdlValueId: iob_command

MOV HdlStmAssign@@ to body
HdlStmAssign
    HdlValueId: MODE_REG
    HdlValueId: iob_address

UPD HdlStmIf@@ to 
    DEL HdlOp@@EQ from 
    HdlOp: EQ
        list: ops
            HdlValueId: startup_refresh_count
            HdlOp: SUB
                list: ops
                    HdlValueId: startup_refresh_max
                    HdlValueInt: 31
    DEL HdlStmBlock@@SEQ from 
    HdlStmBlock: SEQ
        list: body
            HdlStmAssign
                HdlValueId: CMD_PRECHARGE
                HdlValueId: iob_command
            HdlStmAssign
                HdlValueInt: 1
                HdlOp: INDEX
                    list: ops
                        HdlValueId: iob_address
                        HdlValueId: prefresh_cmd
            HdlStmAssign
                HdlValueInt: 00
                HdlValueId: iob_bank
    DEL tuple@@ from elifs
    tuple
        HdlOp: EQ
            list: ops
                HdlValueId: startup_refresh_count
                HdlOp: SUB
                    list: ops
                        HdlValueId: startup_refresh_max
                        HdlValueInt: 23
        HdlStmBlock: SEQ
            list: body
                HdlStmAssign
                    HdlValueId: CMD_REFRESH
                    HdlValueId: iob_command
    DEL tuple@@ from elifs
    tuple
        HdlOp: EQ
            list: ops
                HdlValueId: startup_refresh_count
                HdlOp: SUB
                    list: ops
                        HdlValueId: startup_refresh_max
                        HdlValueInt: 15
        HdlStmAssign
            HdlValueId: CMD_REFRESH
            HdlValueId: iob_command
    DEL HdlOp@@EQ from 
    HdlOp: EQ
        list: ops
            HdlValueId: startup_refresh_count
            HdlOp: SUB
                list: ops
                    HdlValueId: startup_refresh_max
                    HdlValueInt: 7
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from elifs
    DEL list@@elifs from 

DEL HdlStmIf@@ from body


CommitId: d3ad14cb8d8df15e0c612079f6679ad40e59e29b
debugged snapshot
--- a/z2-minispartan/SDRAM_Controller_v.v
+++ b/z2-minispartan/SDRAM_Controller_v.v
@@ -353,6 +353,7 @@ always @(posedge clk)
               iob_command     <= CMD_NOP;
               iob_address     <= 13'b0000000000000;
               iob_bank        <= 2'b00;
+              ready_for_new   <= 1'b1;
            end
          end
          

ParseResult:
INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueInt: 1
    HdlValueId: ready_for_new


CommitId: d3ad14cb8d8df15e0c612079f6679ad40e59e29b
debugged snapshot
--- a/z2-minispartan/SDRAM_Controller_v.v
+++ b/z2-minispartan/SDRAM_Controller_v.v
@@ -513,7 +514,7 @@ always @(posedge clk)
          default: begin 
                state                 <= s_startup;
                ready_for_new         <= 1'b0;
-               startup_refresh_count <= startup_refresh_max-sdram_startup_cycles;
+               //startup_refresh_count <= startup_refresh_max-sdram_startup_cycles;
             end
          endcase
 
ParseResult:
DEL HdlStmAssign@@ from body
HdlStmAssign
    HdlOp: SUB
        list: ops
            HdlValueId: startup_refresh_max
            HdlValueId: sdram_startup_cycles
    HdlValueId: startup_refresh_count


CommitId: 1678c637709ad342b3860a7099f0b32c4e2f1aaa
scale fix
--- a/z2-minispartan/z2.v
+++ b/z2-minispartan/z2.v
@@ -1592,11 +1594,13 @@ always @(posedge vga_clk) begin
       blue_p  <= palette_b[fetch_buffer[counter_8x][7:0]];
       counter_8x <= counter_8x + 1'b1;
       counter_x_hi <= 0;
+      counter_scale <= 0;
     end else begin
       red_p   <= palette_r[fetch_buffer[counter_8x][15:8]];
       green_p <= palette_g[fetch_buffer[counter_8x][15:8]];
       blue_p  <= palette_b[fetch_buffer[counter_8x][15:8]];
       counter_x_hi <= 1;
+      counter_scale <= 0;
     end
     
     //if (!display_sprite || sprite_pidx==0) begin

ParseResult:
UPD HdlStmIf@@ to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmIf@@ to 
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: counter_scale


CommitId: 1678c637709ad342b3860a7099f0b32c4e2f1aaa
scale fix
--- a/z2-minispartan/z2.v
+++ b/z2-minispartan/z2.v
@@ -1653,7 +1657,7 @@ always @(posedge vga_clk) begin
     end*/
   end else if (colormode==2) begin
     // true color!
-    /*if (counter_scale != scalemode) begin
+    if (counter_scale != scalemode) begin
       counter_scale <= counter_scale + 1'b1;
     end else begin
       counter_scale <= 0;

ParseResult:
UPD HdlStmIf@@ to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

INS HdlStmIf@@ to body

UPD HdlStmIf@@ to 
    INS HdlOp@@NE to 
    HdlOp: NE
        list: ops
            HdlValueId: counter_scale
            HdlValueId: scalemode
    INS list@@elifs to 
    INS HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: counter_scale
            HdlStmAssign
                HdlOp: ADD
                    list: ops
                        HdlValueId: counter_8x
                        HdlValueInt: 1
                HdlValueId: counter_8x
            HdlStmAssign
                HdlOp: ADD
                    list: ops
                        HdlValueId: display_x2
                        HdlValueInt: 10
                HdlValueId: display_x2
            HdlStmAssign
                HdlOp: ADD
                    list: ops
                        HdlValueId: display_x3
                        HdlValueInt: 10
                HdlValueId: display_x3

UPD HdlStmIf@@ to 
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body


CommitId: 1678c637709ad342b3860a7099f0b32c4e2f1aaa
scale fix
--- a/z2-minispartan/z2.v
+++ b/z2-minispartan/z2.v
@@ -1662,10 +1666,10 @@ always @(posedge vga_clk) begin
       display_x2 <= display_x2 + 2'b10;
       display_x3 <= display_x3 + 2'b10;
     end
-    
-      blue_p <= rgb32[31:24];
-      green_p <= rgb32[7:0];
-      red_p <= rgb32[15:8];*/
+  
+    /*red_p   <= fetch_buffer[display_x2][15:8];
+    green_p <= fetch_buffer[display_x2][7:0];
+    blue_p  <= fetch_buffer2[display_x3][15:8];*/
   /*end else if (colormode==3) begin // zorro debug
     if (counter_y<90) begin
       if (counter_x<100)
ParseResult:
UPD HdlStmIf@@ to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmIf@@ to 
    INS HdlOp@@NE to 
    HdlOp: NE
        list: ops
            HdlValueId: counter_scale
            HdlValueId: scalemode
    INS list@@elifs to 
    INS HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: counter_scale
            HdlStmAssign
                HdlOp: ADD
                    list: ops
                        HdlValueId: counter_8x
                        HdlValueInt: 1
                HdlValueId: counter_8x
            HdlStmAssign
                HdlOp: ADD
                    list: ops
                        HdlValueId: display_x2
                        HdlValueInt: 10
                HdlValueId: display_x2
            HdlStmAssign
                HdlOp: ADD
                    list: ops
                        HdlValueId: display_x3
                        HdlValueInt: 10
                HdlValueId: display_x3

UPD HdlStmIf@@ to 
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body


CommitId: 40f71e03b9db9f0f5be86ac61bb42d786232db7a
WIP read/write mix debugging
--- a/z2-minispartan/z2.v
+++ b/z2-minispartan/z2.v
@@ -266,11 +267,11 @@ reg [15:0] last_read_data = 0;
 
 // write queue
 
-parameter max_fill = 256;
+parameter max_fill = 255;
 parameter q_msb = 21; // -> 20 bit wide RAM addresses (16-bit words) = 2MB
 parameter lds_bit = q_msb+1;
 parameter uds_bit = q_msb+2;
-reg [(q_msb+2):0] writeq_addr [0:max_fill-1]; // 21=uds 20=lds
+reg [(q_msb+2):0] writeq_addr [0:max_fill]; // 21=uds 20=lds
 reg [15:0] writeq_data [0:max_fill-1];
 reg [12:0] writeq_fill = 0;
 reg [12:0] writeq_drain = 0;

ParseResult:
UPD HdlIdDef@@writeq_addr to writeq_addr
    UPD HdlOp@@INDEX to INDEX
        UPD HdlOp@@DOWNTO to DOWNTO
            UPD HdlOp@@SUB to SUB
                MOV HdlValueId@@max_fill to ops
                HdlValueId: max_fill
                DEL HdlValueInt@@1 from ops
                DEL list@@ops from SUB
            DEL HdlOp@@SUB from ops


CommitId: 40f71e03b9db9f0f5be86ac61bb42d786232db7a
WIP read/write mix debugging
--- a/z2-minispartan/z2.v
+++ b/z2-minispartan/z2.v
@@ -394,9 +394,20 @@ parameter RAM_ROW_FETCHED = 2;
 parameter RAM_READING_ZORRO = 3;
 parameter RAM_WRITING = 4;
 
+/*
+problem:
+read/write mix (block copy)
+
+- some zorro writes are not seen
+- or some zorro writes are not committed
+*/
+
 // =================================================================================
 // ZORRO MACHINE
 always @(posedge z_sample_clk) begin
+
+  LEDS <= zorro_state|(ram_arbiter_state<<5);
+
   case (zorro_state)
     RESET: begin
       dataout_enable <= 0;

ParseResult:
INS HdlStmAssign@@ to body
HdlStmAssign
    HdlOp: OR
        list: ops
            HdlValueId: zorro_state
            HdlOp: SLL
                list: ops
                    HdlValueId: ram_arbiter_state
                    HdlValueInt: 5
    HdlValueId: LEDS


CommitId: 40f71e03b9db9f0f5be86ac61bb42d786232db7a
WIP read/write mix debugging
--- a/z2-minispartan/z2.v
+++ b/z2-minispartan/z2.v
@@ -456,7 +465,6 @@ always @(posedge z_sample_clk) begin
             case (zaddr & 'h0000ff)
               'h000048: begin
                 ram_low[23:20] <= data_in[15:12];
-                LEDS <= 'hff;
               end
               'h00004a: begin
                 ram_low[19:16] <= data_in[15:12];

ParseResult:
DEL HdlStmAssign@@ from body
HdlStmAssign
    HdlValueInt: fe
    HdlValueId: LEDS


CommitId: 40f71e03b9db9f0f5be86ac61bb42d786232db7a
WIP read/write mix debugging
--- a/z2-minispartan/z2.v
+++ b/z2-minispartan/z2.v
@@ -464,11 +472,9 @@ always @(posedge z_sample_clk) begin
                 reg_low   <= ram_low + reg_base;
                 reg_high  <= ram_low + reg_base + 'h100;
                 zorro_state <= CONFIGURED; // configured
-                LEDS <= 'hfe;
               end
               'h00004c: begin 
-                zorro_state <= CONFIGURED; // configured
-                LEDS <= 'hf0; // shut up register
+                zorro_state <= CONFIGURED; // configured, shut up
               end
             endcase
           end

ParseResult:
DEL HdlStmAssign@@ from body
HdlStmAssign
    HdlValueInt: f0
    HdlValueId: LEDS


CommitId: 40f71e03b9db9f0f5be86ac61bb42d786232db7a
WIP read/write mix debugging
--- a/z2-minispartan/z2.v
+++ b/z2-minispartan/z2.v
@@ -496,19 +501,20 @@ always @(posedge z_sample_clk) begin
       write_stall <= 0;
       z_ready <= 1'bZ; // clear XRDY (cpu wait)
       
-      if (!znRST) begin
+      if (znRST_sync[1]==0) begin
         // system reset
-        zorro_state <= RESET;
+        //zorro_state <= RESET;
       end else if (znAS_sync[1]==0) begin
         if (zorro_read && zaddr_in_ram) begin
           // read RAM
           // request ram access from arbiter
-          zorro_ram_read_addr <= ((zaddr-ram_low)>>1);
+          zorro_ram_read_addr <= ((zaddr_sync-ram_low)>>1);
           zorro_ram_read_request <= 1;
           zorro_ram_read_done <= 0;
           data <= 'h5555;
-          dataout <= 1;
+          dataout <= 0;
           dataout_enable <= 1;
+          slaven <= 0;
           read_counter <= 0;
           
           z_ready <= 0;

ParseResult:
UPD HdlStmIf@@ to 
    INS HdlOp@@EQ to 
    UPD HdlOp@@EQ to EQ
        INS list@@ops to EQ
        INS HdlValueInt@@0 to ops
        UPD HdlOp@@INDEX to INDEX
            INS HdlValueInt@@1 to ops

UPD HdlStmIf@@ to 
    UPD HdlOp@@NEG_LOG to INDEX
    MOV HdlOp@@NEG_LOG to 
    HdlOp: NEG_LOG
        list: ops
            HdlValueId: znRST
    UPD HdlOp@@NEG_LOG to NEG_LOG
        UPD HdlValueId@@znRST to znRST_sync

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: slaven

UPD HdlStmAssign@@ to 
    UPD HdlValueInt@@1 to 0

UPD HdlStmAssign@@ to 
    UPD HdlOp@@SRL to SRL
        UPD HdlOp@@SUB to SUB
            UPD HdlValueId@@zaddr to zaddr_sync

DEL HdlStmAssign@@ from body
HdlStmAssign
    HdlValueId: RESET
    HdlValueId: zorro_state


CommitId: 40f71e03b9db9f0f5be86ac61bb42d786232db7a
WIP read/write mix debugging
--- a/z2-minispartan/z2.v
+++ b/z2-minispartan/z2.v
@@ -517,11 +523,10 @@ always @(posedge z_sample_clk) begin
         end else if (zorro_write && zaddr_in_ram) begin
           // write RAM
           
-          last_addr <= ((zaddr-ram_low)>>1);
+          last_addr <= ((zaddr_sync-ram_low)>>1);
           zorro_state <= WAIT_WRITE;
           
         end else if (zorro_write && zaddr_in_reg && datastrobe_synced) begin
-          LEDS <= data_in[15:8];
           // write to register
           case (zaddr & 'h0000ff)
             'h00: display_enable <= data_in[0];

ParseResult:
UPD HdlStmIf@@ to 
    INS HdlOp@@EQ to 
    UPD HdlOp@@EQ to EQ
        INS list@@ops to EQ
        INS HdlValueInt@@0 to ops
        UPD HdlOp@@INDEX to INDEX
            INS HdlValueInt@@1 to ops

UPD HdlStmIf@@ to 
    UPD HdlOp@@NEG_LOG to INDEX
    MOV HdlOp@@NEG_LOG to 
    HdlOp: NEG_LOG
        list: ops
            HdlValueId: znRST
    UPD HdlOp@@NEG_LOG to NEG_LOG
        UPD HdlValueId@@znRST to znRST_sync

DEL HdlStmAssign@@ from body
HdlStmAssign
    HdlOp: INDEX
        list: ops
            HdlValueId: data_in
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 15
                    HdlValueInt: 8
    HdlValueId: LEDS


CommitId: 40f71e03b9db9f0f5be86ac61bb42d786232db7a
WIP read/write mix debugging
--- a/z2-minispartan/z2.v
+++ b/z2-minispartan/z2.v
@@ -596,12 +601,13 @@ always @(posedge z_sample_clk) begin
         // ram too slow TODO: report this
         zorro_ram_read_request <= 0;
         zorro_state <= IDLE;
-        data <= 'h0000;
       end else if (zorro_ram_read_done) begin
         zorro_ram_read_request <= 0;
         zorro_state <= WAIT_READ;
-        data <= zorro_ram_read_data;
+        data <= zorro_ram_read_data|'h5555;
+        dataout_enable <= 1;
         read_counter <= 0;
+        z_ready <= 1'bZ;
       end
   
     // ----------------------------------------------------------------------------------

ParseResult:
MOV HdlStmAssign@@ to body
HdlStmAssign
    HdlValueId: zorro_ram_read_data
    HdlValueId: data

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlOp: OR
        list: ops
            HdlValueId: zorro_ram_read_data
            HdlValueInt: 5555
    HdlValueId: data

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueInt: 1
    HdlValueId: dataout_enable


CommitId: 40f71e03b9db9f0f5be86ac61bb42d786232db7a
WIP read/write mix debugging
--- a/z2-minispartan/z2.v
+++ b/z2-minispartan/z2.v
@@ -612,22 +618,21 @@ always @(posedge z_sample_clk) begin
         dataout_enable <= 1;
         dataout <= 1;
         slaven <= 1;
-        z_ready <= 1'bZ;
+        data <= zorro_ram_read_data;
       end
    
     // ----------------------------------------------------------------------------------
     WAIT_WRITE:
-      // FIXME race conditions occur if writeq is mutated while read
       if (!zorro_ram_write_request) begin
         // there is still room in the queue
         z_ready <= 1'bZ;
         write_stall <= 0;
-        if (datastrobe_synced) begin
+        if (datastrobe_synced && zdata_in_sync==data_in) begin
           zorro_ram_write_addr <= last_addr;
           zorro_ram_write_bytes <= {~znUDS_sync[2],~znLDS_sync[2]};
           zorro_ram_write_data <= zdata_in_sync;
           zorro_ram_write_request <= 1;
-            
+          
           zorro_state <= WAIT_WRITE2;
         end
       end else begin

ParseResult:
UPD HdlStmIf@@ to 
    INS HdlOp@@AND_LOG to 
    UPD HdlOp@@AND_LOG to AND_LOG
        INS list@@ops to AND_LOG
        INS HdlOp@@EQ to ops
        HdlOp: EQ
            list: ops
                HdlValueId: zdata_in_sync
                HdlValueId: data_in

UPD HdlStmIf@@ to 
    MOV HdlValueId@@datastrobe_synced to 
    HdlValueId: datastrobe_synced


CommitId: 40f71e03b9db9f0f5be86ac61bb42d786232db7a
WIP read/write mix debugging
--- a/z2-minispartan/z2.v
+++ b/z2-minispartan/z2.v
@@ -706,7 +711,7 @@ always @(posedge z_sample_clk) begin
           // TODO additional wait state?
         end
       end else if (zorro_ram_write_request) begin
-        if (writeq_fill<max_fill-1) begin
+        if (writeq_fill<max_fill) begin
           // process write request
           zorro_ram_write_done <= 1;
           zorro_ram_write_request <= 0;

ParseResult:
UPD HdlStmIf@@ to 
    UPD HdlOp@@LT to LT
        UPD HdlOp@@SUB to SUB
            MOV HdlValueId@@max_fill to ops
            HdlValueId: max_fill
            DEL HdlValueInt@@1 from ops
            DEL list@@ops from SUB
        DEL HdlOp@@SUB from ops


CommitId: 40f71e03b9db9f0f5be86ac61bb42d786232db7a
WIP read/write mix debugging
--- a/z2-minispartan/z2.v
+++ b/z2-minispartan/z2.v
@@ -751,9 +756,9 @@ always @(posedge z_sample_clk) begin
       end
       
     RAM_READING_ZORRO: begin    
-        ram_enable <= 0;
         if (data_out_ready) begin
-          zorro_ram_read_data <= ram_data_out;
+          //ram_enable <= 0;
+          zorro_ram_read_data <= zorro_ram_read_addr; //ram_data_out;
           zorro_ram_read_done <= 1;
           zorro_ram_read_request <= 0;
           ram_arbiter_state <= RAM_ROW_FETCHED;
ParseResult:
UPD HdlStmAssign@@ to 
    UPD HdlValueId@@ram_data_out to zorro_ram_read_addr


CommitId: c17cb52d080625bc747a9496cb5ef3cb740d0e25
2 faulty rows to go
--- a/z2-minispartan/SDRAM_Controller_v.v
+++ b/z2-minispartan/SDRAM_Controller_v.v
@@ -36,6 +36,7 @@ module SDRAM_Controller_v (
    cmd_ready, cmd_enable, cmd_wr, cmd_byte_enable, cmd_address, cmd_data_in,
    // Read data port
    data_out, data_out_ready, data_out_queue_empty, sdram_state, sdram_btb, burst,
+   burst_col,
    // SDRAM signals
    SDRAM_CLK,  SDRAM_CKE,  SDRAM_CS,   SDRAM_RAS,  SDRAM_CAS,
    SDRAM_WE,   SDRAM_DQM,  SDRAM_ADDR, SDRAM_BA,   SDRAM_DATA

ParseResult:
INS HdlIdDef@@burst_col to ports
HdlIdDef: burst_col
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: wire
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 8
                    HdlValueInt: 0
    HdlDirection: IN


CommitId: c17cb52d080625bc747a9496cb5ef3cb740d0e25
2 faulty rows to go
--- a/z2-minispartan/SDRAM_Controller_v.v
+++ b/z2-minispartan/SDRAM_Controller_v.v
@@ -393,7 +397,7 @@ always @(posedge clk)
              iob_dqm     <= 2'b00;
              iob_dq_hiz  <= 1'b1;
              
-             if (save_col=='b111111000) begin             
+             if (save_col==burst_col) begin        // 'b111111000      
                state       <= s_precharge;
                data_ready_delay[data_ready_delay_high]   <= 1'b0;
                ready_for_new   <= 1'b0;
ParseResult:
UPD HdlStmIf@@ to 
    UPD HdlOp@@EQ to EQ
        INS HdlValueId@@burst_col to ops

UPD HdlStmIf@@ to 
    UPD HdlOp@@EQ to EQ
        DEL HdlValueInt@@111111000 from ops


CommitId: 6f4acf88e69b8af740bf474df9047dc7beb683ff
firmware 1.3rc1; fixes lockups and write errors switching between pixel clocks
--- a/z2-minispartan/z2.v
+++ b/z2-minispartan/z2.v
@@ -1433,13 +1425,11 @@ always @(posedge z_sample_clk) begin
         fetch_line_y <= need_row_fetch_y;
         //linescalecount <= 0;
         ram_arbiter_state <= RAM_READY;
-        
-      // FIXME need better solution, this causes total lockup and slowness
       end else if (counter_x > h_max-safe_x2) begin
         // do nothing if not in safe area
         
       // BLITTER ----------------------------------------------------------------
-      /*end else if (blitter_enable==1 && cmd_ready) begin
+      end else if (blitter_enable==1 && cmd_ready) begin
         if (colormode==2) begin
           blitter_rgb <= blitter_rgb32[blitter_rgb32_t];
         end

ParseResult:
UPD HdlStmIf@@ to 
    INS tuple@@ to elifs
    INS HdlOp@@AND_LOG to 
    HdlOp: AND_LOG
        list: ops
            HdlOp: EQ
                list: ops
                    HdlValueId: blitter_enable
                    HdlValueInt: 1
            HdlValueId: cmd_ready
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

INS HdlStmIf@@ to body

UPD HdlStmIf@@ to 
    INS HdlOp@@LE to 
    HdlOp: LE
        list: ops
            HdlValueId: blitter_curx
            HdlValueId: blitter_x2
    INS HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlStmAssign
                HdlOp: ADD
                    list: ops
                        HdlValueId: blitter_curx
                        HdlValueInt: 1
                HdlValueId: blitter_curx
            HdlStmAssign
                HdlValueInt: 11
                HdlValueId: ram_byte_enable
            HdlStmAssign
                HdlOp: ADD
                    list: ops
                        HdlValueId: blitter_ptr
                        HdlValueId: blitter_curx
                HdlValueId: ram_addr
            HdlStmAssign
                HdlValueId: blitter_rgb
                HdlValueId: ram_data_in
            HdlStmAssign
                HdlValueInt: 1
                HdlValueId: ram_write
            HdlStmAssign
                HdlValueInt: 1
                HdlValueId: ram_enable
    INS list@@elifs to 
    list: elifs
        tuple
            HdlOp: LT
                list: ops
                    HdlValueId: blitter_cury
                    HdlValueId: blitter_y2
            HdlStmBlock: SEQ
                list: body
                    HdlStmAssign
                        HdlOp: ADD
                            list: ops
                                HdlValueId: blitter_cury
                                HdlValueInt: 1
                        HdlValueId: blitter_cury
                    HdlStmAssign
                        HdlValueId: blitter_x1
                        HdlValueId: blitter_curx
                    HdlStmAssign
                        HdlOp: ADD
                            list: ops
                                HdlValueId: blitter_ptr
                                HdlValueId: row_pitch
                        HdlValueId: blitter_ptr

UPD HdlStmIf@@ to 
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: blitter_enable
    DEL HdlValueId@@blitter_enable from 
    DEL tuple@@ from elifs

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: blitter_curx

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: blitter_cury


CommitId: 6f4acf88e69b8af740bf474df9047dc7beb683ff
firmware 1.3rc1; fixes lockups and write errors switching between pixel clocks
--- a/z2-minispartan/z2.v
+++ b/z2-minispartan/z2.v
@@ -1462,7 +1452,7 @@ always @(posedge z_sample_clk) begin
           blitter_cury <= 0;
           blitter_enable <= 0;
           //ram_enable <= 0;
-        end*/
+        end
       /*end else if (blitter_enable==2 && cmd_ready) begin
         // block copy read
         if (data_out_queue_empty) begin

ParseResult:
UPD HdlStmIf@@ to 
    INS tuple@@ to elifs
    INS HdlOp@@AND_LOG to 
    HdlOp: AND_LOG
        list: ops
            HdlOp: EQ
                list: ops
                    HdlValueId: blitter_enable
                    HdlValueInt: 1
            HdlValueId: cmd_ready
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmIf@@ to 
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: blitter_enable
    DEL HdlValueId@@blitter_enable from 
    DEL tuple@@ from elifs


CommitId: 6f4acf88e69b8af740bf474df9047dc7beb683ff
firmware 1.3rc1; fixes lockups and write errors switching between pixel clocks
--- a/z2-minispartan/z2.v
+++ b/z2-minispartan/z2.v
@@ -1681,7 +1671,7 @@ always @(posedge vga_clk) begin
     red_p   <= 0;
     green_p <= 0;
     blue_p  <= 0;
-  end else if (counter_y>=590) begin
+  /*end else if (counter_y>=590) begin
     if (counter_x<110) begin
       if (zorro_state[4]) green_p <= 8'hff;
       else green_p <= 8'h20;

ParseResult:
UPD HdlStmIf@@ to 
    DEL tuple@@ from elifs
    tuple
        HdlOp: GE
            list: ops
                HdlValueId: counter_y
                HdlValueInt: 590
        HdlStmBlock: SEQ
            list: body
                HdlStmIf
                    HdlOp: LT
                        list: ops
                            HdlValueId: counter_x
                            HdlValueInt: 110
                    HdlStmBlock: SEQ
                        list: body
                            HdlStmIf
                                HdlOp: INDEX
                                    list: ops
                                        HdlValueId: zorro_state
                                        HdlValueInt: 4
                                HdlStmAssign: if_true
                                    HdlValueInt: ff
                                    HdlValueId: green_p
                                list: elifs
                                HdlStmAssign: if_false
                                    HdlValueInt: 20
                                    HdlValueId: green_p
                    list: elifs
                        tuple
                            HdlOp: LT
                                list: ops
                                    HdlValueId: counter_x
                                    HdlValueInt: 120
                            HdlStmBlock: SEQ
                                list: body
                                    HdlStmIf
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: zorro_state
                                                HdlValueInt: 3
                                        HdlStmAssign: if_true
                                            HdlValueInt: ff
                                            HdlValueId: green_p
                                        list: elifs
                                        HdlStmAssign: if_false
                                            HdlValueInt: 40
                                            HdlValueId: green_p
                        tuple
                            HdlOp: LT
                                list: ops
                                    HdlValueId: counter_x
                                    HdlValueInt: 130
                            HdlStmBlock: SEQ
                                list: body
                                    HdlStmIf
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: zorro_state
                                                HdlValueInt: 2
                                        HdlStmAssign: if_true
                                            HdlValueInt: ff
                                            HdlValueId: green_p
                                        list: elifs
                                        HdlStmAssign: if_false
                                            HdlValueInt: 20
                                            HdlValueId: green_p
                        tuple
                            HdlOp: LT
                                list: ops
                                    HdlValueId: counter_x
                                    HdlValueInt: 140
                            HdlStmBlock: SEQ
                                list: body
                                    HdlStmIf
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: zorro_state
                                                HdlValueInt: 1
                                        HdlStmAssign: if_true
                                            HdlValueInt: ff
                                            HdlValueId: green_p
                                        list: elifs
                                        HdlStmAssign: if_false
                                            HdlValueInt: 40
                                            HdlValueId: green_p
                        tuple
                            HdlOp: LT
                                list: ops
                                    HdlValueId: counter_x
                                    HdlValueInt: 150
                            HdlStmBlock: SEQ
                                list: body
                                    HdlStmIf
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: zorro_state
                                                HdlValueInt: 0
                                        HdlStmAssign: if_true
                                            HdlValueInt: ff
                                            HdlValueId: green_p
                                        list: elifs
                                        HdlStmAssign: if_false
                                            HdlValueInt: 20
                                            HdlValueId: green_p
                        tuple
                            HdlOp: LT
                                list: ops
                                    HdlValueId: counter_x
                                    HdlValueInt: 160
                            HdlStmBlock: SEQ
                                list: body
                                    HdlStmAssign
                                        HdlValueInt: 0
                                        HdlValueId: green_p
                        tuple
                            HdlOp: LT
                                list: ops
                                    HdlValueId: counter_x
                                    HdlValueInt: 170
                            HdlStmBlock: SEQ
                                list: body
                                    HdlStmIf
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: ram_arbiter_state
                                                HdlValueInt: 4
                                        HdlStmAssign: if_true
                                            HdlValueInt: ff
                                            HdlValueId: green_p
                                        list: elifs
                                        HdlStmAssign: if_false
                                            HdlValueInt: 20
                                            HdlValueId: green_p
                        tuple
                            HdlOp: LT
                                list: ops
                                    HdlValueId: counter_x
                                    HdlValueInt: 180
                            HdlStmBlock: SEQ
                                list: body
                                    HdlStmIf
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: ram_arbiter_state
                                                HdlValueInt: 3
                                        HdlStmAssign: if_true
                                            HdlValueInt: ff
                                            HdlValueId: green_p
                                        list: elifs
                                        HdlStmAssign: if_false
                                            HdlValueInt: 40
                                            HdlValueId: green_p
                        tuple
                            HdlOp: LT
                                list: ops
                                    HdlValueId: counter_x
                                    HdlValueInt: 190
                            HdlStmBlock: SEQ
                                list: body
                                    HdlStmIf
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: ram_arbiter_state
                                                HdlValueInt: 2
                                        HdlStmAssign: if_true
                                            HdlValueInt: ff
                                            HdlValueId: green_p
                                        list: elifs
                                        HdlStmAssign: if_false
                                            HdlValueInt: 20
                                            HdlValueId: green_p
                        tuple
                            HdlOp: LT
                                list: ops
                                    HdlValueId: counter_x
                                    HdlValueInt: 200
                            HdlStmBlock: SEQ
                                list: body
                                    HdlStmIf
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: ram_arbiter_state
                                                HdlValueInt: 1
                                        HdlStmAssign: if_true
                                            HdlValueInt: ff
                                            HdlValueId: green_p
                                        list: elifs
                                        HdlStmAssign: if_false
                                            HdlValueInt: 40
                                            HdlValueId: green_p
                        tuple
                            HdlOp: LT
                                list: ops
                                    HdlValueId: counter_x
                                    HdlValueInt: 210
                            HdlStmBlock: SEQ
                                list: body
                                    HdlStmIf
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: ram_arbiter_state
                                                HdlValueInt: 0
                                        HdlStmAssign: if_true
                                            HdlValueInt: ff
                                            HdlValueId: green_p
                                        list: elifs
                                        HdlStmAssign: if_false
                                            HdlValueInt: 20
                                            HdlValueId: green_p
                    HdlStmBlock: SEQ
                        list: body
                            HdlStmAssign
                                HdlValueInt: 0
                                HdlValueId: green_p
                            HdlStmAssign
                                HdlValueInt: 0
                                HdlValueId: blue_p


CommitId: 6f4acf88e69b8af740bf474df9047dc7beb683ff
firmware 1.3rc1; fixes lockups and write errors switching between pixel clocks
--- a/z2-minispartan/z2.v
+++ b/z2-minispartan/z2.v
@@ -1716,7 +1706,7 @@ always @(posedge vga_clk) begin
       if (ram_arbiter_state[0]) green_p <= 8'hff;
       else green_p <= 8'h20;
       
-    /*end else if (counter_x<220) begin
+    end else if (counter_x<220) begin
       green_p <= 0;
     end else if (counter_x<230) begin
       if (cmd_ready) green_p <= 8'hff;

ParseResult:
UPD HdlStmIf@@ to 
    DEL tuple@@ from elifs
    tuple
        HdlOp: GE
            list: ops
                HdlValueId: counter_y
                HdlValueInt: 590
        HdlStmBlock: SEQ
            list: body
                HdlStmIf
                    HdlOp: LT
                        list: ops
                            HdlValueId: counter_x
                            HdlValueInt: 110
                    HdlStmBlock: SEQ
                        list: body
                            HdlStmIf
                                HdlOp: INDEX
                                    list: ops
                                        HdlValueId: zorro_state
                                        HdlValueInt: 4
                                HdlStmAssign: if_true
                                    HdlValueInt: ff
                                    HdlValueId: green_p
                                list: elifs
                                HdlStmAssign: if_false
                                    HdlValueInt: 20
                                    HdlValueId: green_p
                    list: elifs
                        tuple
                            HdlOp: LT
                                list: ops
                                    HdlValueId: counter_x
                                    HdlValueInt: 120
                            HdlStmBlock: SEQ
                                list: body
                                    HdlStmIf
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: zorro_state
                                                HdlValueInt: 3
                                        HdlStmAssign: if_true
                                            HdlValueInt: ff
                                            HdlValueId: green_p
                                        list: elifs
                                        HdlStmAssign: if_false
                                            HdlValueInt: 40
                                            HdlValueId: green_p
                        tuple
                            HdlOp: LT
                                list: ops
                                    HdlValueId: counter_x
                                    HdlValueInt: 130
                            HdlStmBlock: SEQ
                                list: body
                                    HdlStmIf
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: zorro_state
                                                HdlValueInt: 2
                                        HdlStmAssign: if_true
                                            HdlValueInt: ff
                                            HdlValueId: green_p
                                        list: elifs
                                        HdlStmAssign: if_false
                                            HdlValueInt: 20
                                            HdlValueId: green_p
                        tuple
                            HdlOp: LT
                                list: ops
                                    HdlValueId: counter_x
                                    HdlValueInt: 140
                            HdlStmBlock: SEQ
                                list: body
                                    HdlStmIf
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: zorro_state
                                                HdlValueInt: 1
                                        HdlStmAssign: if_true
                                            HdlValueInt: ff
                                            HdlValueId: green_p
                                        list: elifs
                                        HdlStmAssign: if_false
                                            HdlValueInt: 40
                                            HdlValueId: green_p
                        tuple
                            HdlOp: LT
                                list: ops
                                    HdlValueId: counter_x
                                    HdlValueInt: 150
                            HdlStmBlock: SEQ
                                list: body
                                    HdlStmIf
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: zorro_state
                                                HdlValueInt: 0
                                        HdlStmAssign: if_true
                                            HdlValueInt: ff
                                            HdlValueId: green_p
                                        list: elifs
                                        HdlStmAssign: if_false
                                            HdlValueInt: 20
                                            HdlValueId: green_p
                        tuple
                            HdlOp: LT
                                list: ops
                                    HdlValueId: counter_x
                                    HdlValueInt: 160
                            HdlStmBlock: SEQ
                                list: body
                                    HdlStmAssign
                                        HdlValueInt: 0
                                        HdlValueId: green_p
                        tuple
                            HdlOp: LT
                                list: ops
                                    HdlValueId: counter_x
                                    HdlValueInt: 170
                            HdlStmBlock: SEQ
                                list: body
                                    HdlStmIf
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: ram_arbiter_state
                                                HdlValueInt: 4
                                        HdlStmAssign: if_true
                                            HdlValueInt: ff
                                            HdlValueId: green_p
                                        list: elifs
                                        HdlStmAssign: if_false
                                            HdlValueInt: 20
                                            HdlValueId: green_p
                        tuple
                            HdlOp: LT
                                list: ops
                                    HdlValueId: counter_x
                                    HdlValueInt: 180
                            HdlStmBlock: SEQ
                                list: body
                                    HdlStmIf
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: ram_arbiter_state
                                                HdlValueInt: 3
                                        HdlStmAssign: if_true
                                            HdlValueInt: ff
                                            HdlValueId: green_p
                                        list: elifs
                                        HdlStmAssign: if_false
                                            HdlValueInt: 40
                                            HdlValueId: green_p
                        tuple
                            HdlOp: LT
                                list: ops
                                    HdlValueId: counter_x
                                    HdlValueInt: 190
                            HdlStmBlock: SEQ
                                list: body
                                    HdlStmIf
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: ram_arbiter_state
                                                HdlValueInt: 2
                                        HdlStmAssign: if_true
                                            HdlValueInt: ff
                                            HdlValueId: green_p
                                        list: elifs
                                        HdlStmAssign: if_false
                                            HdlValueInt: 20
                                            HdlValueId: green_p
                        tuple
                            HdlOp: LT
                                list: ops
                                    HdlValueId: counter_x
                                    HdlValueInt: 200
                            HdlStmBlock: SEQ
                                list: body
                                    HdlStmIf
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: ram_arbiter_state
                                                HdlValueInt: 1
                                        HdlStmAssign: if_true
                                            HdlValueInt: ff
                                            HdlValueId: green_p
                                        list: elifs
                                        HdlStmAssign: if_false
                                            HdlValueInt: 40
                                            HdlValueId: green_p
                        tuple
                            HdlOp: LT
                                list: ops
                                    HdlValueId: counter_x
                                    HdlValueInt: 210
                            HdlStmBlock: SEQ
                                list: body
                                    HdlStmIf
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: ram_arbiter_state
                                                HdlValueInt: 0
                                        HdlStmAssign: if_true
                                            HdlValueInt: ff
                                            HdlValueId: green_p
                                        list: elifs
                                        HdlStmAssign: if_false
                                            HdlValueInt: 20
                                            HdlValueId: green_p
                    HdlStmBlock: SEQ
                        list: body
                            HdlStmAssign
                                HdlValueInt: 0
                                HdlValueId: green_p
                            HdlStmAssign
                                HdlValueInt: 0
                                HdlValueId: blue_p


CommitId: 6f4acf88e69b8af740bf474df9047dc7beb683ff
firmware 1.3rc1; fixes lockups and write errors switching between pixel clocks
--- a/z2-minispartan/z2.v
+++ b/z2-minispartan/z2.v
@@ -1729,11 +1719,11 @@ always @(posedge vga_clk) begin
       else green_p <= 8'h40;
     end else if (counter_x<260) begin
       if (zorro_ram_read_done) green_p <= 8'hff;
-      else green_p <= 8'h40;*/
+      else green_p <= 8'h40;
     end else begin
       green_p <= 0;
       blue_p <= 0;
-    end
+    end*/
     
     /*if (counter_y<600) begin
       if (rec_zreadraw[counter_x]) green_p <= 8'hff;
ParseResult:
UPD HdlStmIf@@ to 
    DEL tuple@@ from elifs
    tuple
        HdlOp: GE
            list: ops
                HdlValueId: counter_y
                HdlValueInt: 590
        HdlStmBlock: SEQ
            list: body
                HdlStmIf
                    HdlOp: LT
                        list: ops
                            HdlValueId: counter_x
                            HdlValueInt: 110
                    HdlStmBlock: SEQ
                        list: body
                            HdlStmIf
                                HdlOp: INDEX
                                    list: ops
                                        HdlValueId: zorro_state
                                        HdlValueInt: 4
                                HdlStmAssign: if_true
                                    HdlValueInt: ff
                                    HdlValueId: green_p
                                list: elifs
                                HdlStmAssign: if_false
                                    HdlValueInt: 20
                                    HdlValueId: green_p
                    list: elifs
                        tuple
                            HdlOp: LT
                                list: ops
                                    HdlValueId: counter_x
                                    HdlValueInt: 120
                            HdlStmBlock: SEQ
                                list: body
                                    HdlStmIf
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: zorro_state
                                                HdlValueInt: 3
                                        HdlStmAssign: if_true
                                            HdlValueInt: ff
                                            HdlValueId: green_p
                                        list: elifs
                                        HdlStmAssign: if_false
                                            HdlValueInt: 40
                                            HdlValueId: green_p
                        tuple
                            HdlOp: LT
                                list: ops
                                    HdlValueId: counter_x
                                    HdlValueInt: 130
                            HdlStmBlock: SEQ
                                list: body
                                    HdlStmIf
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: zorro_state
                                                HdlValueInt: 2
                                        HdlStmAssign: if_true
                                            HdlValueInt: ff
                                            HdlValueId: green_p
                                        list: elifs
                                        HdlStmAssign: if_false
                                            HdlValueInt: 20
                                            HdlValueId: green_p
                        tuple
                            HdlOp: LT
                                list: ops
                                    HdlValueId: counter_x
                                    HdlValueInt: 140
                            HdlStmBlock: SEQ
                                list: body
                                    HdlStmIf
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: zorro_state
                                                HdlValueInt: 1
                                        HdlStmAssign: if_true
                                            HdlValueInt: ff
                                            HdlValueId: green_p
                                        list: elifs
                                        HdlStmAssign: if_false
                                            HdlValueInt: 40
                                            HdlValueId: green_p
                        tuple
                            HdlOp: LT
                                list: ops
                                    HdlValueId: counter_x
                                    HdlValueInt: 150
                            HdlStmBlock: SEQ
                                list: body
                                    HdlStmIf
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: zorro_state
                                                HdlValueInt: 0
                                        HdlStmAssign: if_true
                                            HdlValueInt: ff
                                            HdlValueId: green_p
                                        list: elifs
                                        HdlStmAssign: if_false
                                            HdlValueInt: 20
                                            HdlValueId: green_p
                        tuple
                            HdlOp: LT
                                list: ops
                                    HdlValueId: counter_x
                                    HdlValueInt: 160
                            HdlStmBlock: SEQ
                                list: body
                                    HdlStmAssign
                                        HdlValueInt: 0
                                        HdlValueId: green_p
                        tuple
                            HdlOp: LT
                                list: ops
                                    HdlValueId: counter_x
                                    HdlValueInt: 170
                            HdlStmBlock: SEQ
                                list: body
                                    HdlStmIf
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: ram_arbiter_state
                                                HdlValueInt: 4
                                        HdlStmAssign: if_true
                                            HdlValueInt: ff
                                            HdlValueId: green_p
                                        list: elifs
                                        HdlStmAssign: if_false
                                            HdlValueInt: 20
                                            HdlValueId: green_p
                        tuple
                            HdlOp: LT
                                list: ops
                                    HdlValueId: counter_x
                                    HdlValueInt: 180
                            HdlStmBlock: SEQ
                                list: body
                                    HdlStmIf
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: ram_arbiter_state
                                                HdlValueInt: 3
                                        HdlStmAssign: if_true
                                            HdlValueInt: ff
                                            HdlValueId: green_p
                                        list: elifs
                                        HdlStmAssign: if_false
                                            HdlValueInt: 40
                                            HdlValueId: green_p
                        tuple
                            HdlOp: LT
                                list: ops
                                    HdlValueId: counter_x
                                    HdlValueInt: 190
                            HdlStmBlock: SEQ
                                list: body
                                    HdlStmIf
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: ram_arbiter_state
                                                HdlValueInt: 2
                                        HdlStmAssign: if_true
                                            HdlValueInt: ff
                                            HdlValueId: green_p
                                        list: elifs
                                        HdlStmAssign: if_false
                                            HdlValueInt: 20
                                            HdlValueId: green_p
                        tuple
                            HdlOp: LT
                                list: ops
                                    HdlValueId: counter_x
                                    HdlValueInt: 200
                            HdlStmBlock: SEQ
                                list: body
                                    HdlStmIf
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: ram_arbiter_state
                                                HdlValueInt: 1
                                        HdlStmAssign: if_true
                                            HdlValueInt: ff
                                            HdlValueId: green_p
                                        list: elifs
                                        HdlStmAssign: if_false
                                            HdlValueInt: 40
                                            HdlValueId: green_p
                        tuple
                            HdlOp: LT
                                list: ops
                                    HdlValueId: counter_x
                                    HdlValueInt: 210
                            HdlStmBlock: SEQ
                                list: body
                                    HdlStmIf
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: ram_arbiter_state
                                                HdlValueInt: 0
                                        HdlStmAssign: if_true
                                            HdlValueInt: ff
                                            HdlValueId: green_p
                                        list: elifs
                                        HdlStmAssign: if_false
                                            HdlValueInt: 20
                                            HdlValueId: green_p
                    HdlStmBlock: SEQ
                        list: body
                            HdlStmAssign
                                HdlValueInt: 0
                                HdlValueId: green_p
                            HdlStmAssign
                                HdlValueInt: 0
                                HdlValueId: blue_p


CommitId: 47a1453a80806c291146a391a62497ee76e6b1f7
debug uart; fix read/write addr noise
--- a/z2-minispartan/z2.v
+++ b/z2-minispartan/z2.v
@@ -44,8 +44,8 @@ input videoVS,
 input videoHS,
 input videoR3,
 input videoR2,
-input videoR1,
-input videoR0,
+//input videoR1,
+//input videoR0,
 input videoG3,
 input videoG2,
 input videoG1,

ParseResult:
DEL HdlIdDef@@videoR1 from ports
HdlIdDef: videoR1
    HdlValueId: wire
    HdlDirection: IN

DEL HdlIdDef@@videoR0 from ports
HdlIdDef: videoR0
    HdlValueId: wire
    HdlDirection: IN


CommitId: 47a1453a80806c291146a391a62497ee76e6b1f7
debug uart; fix read/write addr noise
--- a/z2-minispartan/z2.v
+++ b/z2-minispartan/z2.v
@@ -55,6 +55,10 @@ input videoG0,
 input videoB1,
 input videoB0,
 
+// debug uart
+output uartTX,
+input uartRX,
+
 // SD
 output SD_nCS,
 output SD_MOSI,

ParseResult:
INS HdlIdDef@@uartTX to ports
HdlIdDef: uartTX
    HdlValueId: wire
    HdlDirection: OUT

INS HdlIdDef@@uartRX to ports
HdlIdDef: uartRX
    HdlValueId: wire
    HdlDirection: IN


CommitId: 47a1453a80806c291146a391a62497ee76e6b1f7
debug uart; fix read/write addr noise
--- a/z2-minispartan/z2.v
+++ b/z2-minispartan/z2.v
@@ -94,6 +98,21 @@ clk_wiz_v3_6 DCM(
   .CLK_OUT75(vga_clk)
 );
 
+reg uart_reset = 0;
+reg [7:0] uart_data;
+reg uart_write = 0;
+reg uart_clk = 0;
+
+uart uart(
+  .uart_tx(uartTX),
+  
+  .uart_busy(uart_busy),   // High means UART is transmitting
+  .uart_wr_i(uart_write),   // Raise to transmit byte
+  .uart_dat_i(uart_data),  // 8-bit data
+  .sys_clk_i(uart_clk),   // 115200Hz
+  .sys_rst_i(uart_reset)    // System reset
+);
+
 // sd card interface
 
 reg sd_reset = 0;

ParseResult:
INS HdlIdDef@@uart_write to objs
HdlIdDef: uart_write
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
    HdlValueInt: 0
    HdlDirection: INTERNAL

INS HdlIdDef@@uart_clk to objs
HdlIdDef: uart_clk
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
    HdlValueInt: 0
    HdlDirection: INTERNAL


CommitId: 47a1453a80806c291146a391a62497ee76e6b1f7
debug uart; fix read/write addr noise
--- a/z2-minispartan/z2.v
+++ b/z2-minispartan/z2.v
@@ -351,11 +370,11 @@ parameter CONFIGURED = 8;
 reg [6:0] zorro_state = CONFIGURED;
 
 assign datastrobe_synced = ((znUDS_sync[2]==znUDS_sync[1]) && (znLDS_sync[2]==znLDS_sync[1]) && ((znUDS_sync[2]==0) || (znLDS_sync[2]==0)));
-assign zaddr_in_ram = (znAS_sync[1]==0 && zaddr_sync==zaddr && zaddr>=ram_low && zaddr<ram_high);
-assign zaddr_in_reg = (znAS_sync[1]==0 && zaddr_sync==zaddr && zaddr>=reg_low && zaddr<reg_high);
-assign zaddr_autoconfig = (znAS_sync[1]==0 && zaddr_sync==zaddr && zaddr>=rom_low && zaddr<rom_high);
-assign zorro_read = zREAD_sync[1];
-assign zorro_write = !zREAD_sync[1];
+assign zaddr_in_ram = (znAS_sync[1]==0 && znAS_sync[0]==0 && zaddr_sync==zaddr && zaddr>=ram_low && zaddr<ram_high);
+assign zaddr_in_reg = (znAS_sync[1]==0 && znAS_sync[0]==0 && zaddr_sync==zaddr && zaddr>=reg_low && zaddr<reg_high);
+assign zaddr_autoconfig = (znAS_sync[1]==0 && znAS_sync[0]==0 && zaddr_sync==zaddr && zaddr>=rom_low && zaddr<rom_high);
+assign zorro_read = (zREAD_sync[1] & zREAD_sync[0]);
+assign zorro_write = (!zREAD_sync[1] & !zREAD_sync[0]);
 
 reg row_fetched = 0;
 

ParseResult:
UPD HdlStmAssign@@ to 
    INS HdlOp@@AND to 
    UPD HdlOp@@AND to AND
        INS list@@ops to AND
        INS HdlOp@@INDEX to ops
        HdlOp: INDEX
            list: ops
                HdlValueId: zREAD_sync
                HdlValueInt: 0

UPD HdlStmAssign@@ to 
    INS HdlOp@@AND to 
    UPD HdlOp@@AND to AND
        INS list@@ops to AND
        INS HdlOp@@NEG_LOG to ops
        HdlOp: NEG_LOG
            list: ops
                HdlOp: INDEX
                    list: ops
                        HdlValueId: zREAD_sync
                        HdlValueInt: 0

UPD HdlStmAssign@@ to 
    MOV HdlOp@@INDEX to 
    HdlOp: INDEX
        list: ops
            HdlValueId: zREAD_sync
            HdlValueInt: 1

UPD HdlStmAssign@@ to 
    MOV HdlOp@@NEG_LOG to 
    HdlOp: NEG_LOG
        list: ops
            HdlOp: INDEX
                list: ops
                    HdlValueId: zREAD_sync
                    HdlValueInt: 1

UPD HdlStmAssign@@ to 
    UPD HdlOp@@AND_LOG to AND_LOG
        UPD HdlOp@@AND_LOG to AND_LOG
            INS HdlOp@@AND_LOG to ops
            UPD HdlOp@@AND_LOG to AND_LOG
                INS list@@ops to AND_LOG
                UPD HdlOp@@AND_LOG to AND_LOG
                    INS HdlOp@@EQ to ops
                    HdlOp: EQ
                        list: ops
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: znAS_sync
                                    HdlValueInt: 0
                            HdlValueInt: 0

UPD HdlStmAssign@@ to 
    UPD HdlOp@@AND_LOG to AND_LOG
        UPD HdlOp@@AND_LOG to AND_LOG
            INS HdlOp@@AND_LOG to ops
            UPD HdlOp@@AND_LOG to AND_LOG
                INS list@@ops to AND_LOG
                UPD HdlOp@@AND_LOG to AND_LOG
                    INS HdlOp@@EQ to ops
                    HdlOp: EQ
                        list: ops
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: znAS_sync
                                    HdlValueInt: 0
                            HdlValueInt: 0

UPD HdlStmAssign@@ to 
    UPD HdlOp@@AND_LOG to AND_LOG
        UPD HdlOp@@AND_LOG to AND_LOG
            MOV HdlOp@@AND_LOG to ops
            HdlOp: AND_LOG
                list: ops
                    HdlOp: EQ
                        list: ops
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: znAS_sync
                                    HdlValueInt: 1
                            HdlValueInt: 0
                    HdlOp: EQ
                        list: ops
                            HdlValueId: zaddr_sync
                            HdlValueId: zaddr
            UPD HdlOp@@AND_LOG to AND_LOG
                MOV HdlOp@@EQ to ops
                HdlOp: EQ
                    list: ops
                        HdlValueId: zaddr_sync
                        HdlValueId: zaddr

UPD HdlStmAssign@@ to 
    UPD HdlOp@@AND_LOG to AND_LOG
        UPD HdlOp@@AND_LOG to AND_LOG
            UPD HdlOp@@AND_LOG to AND_LOG
                MOV HdlOp@@EQ to ops
                HdlOp: EQ
                    list: ops
                        HdlValueId: zaddr_sync
                        HdlValueId: zaddr
            MOV HdlOp@@AND_LOG to ops
            HdlOp: AND_LOG
                list: ops
                    HdlOp: EQ
                        list: ops
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: znAS_sync
                                    HdlValueInt: 1
                            HdlValueInt: 0
                    HdlOp: EQ
                        list: ops
                            HdlValueId: zaddr_sync
                            HdlValueId: zaddr

UPD HdlStmAssign@@ to 
    UPD HdlOp@@AND_LOG to AND_LOG
        UPD HdlOp@@AND_LOG to AND_LOG
            UPD HdlOp@@AND_LOG to AND_LOG
                INS HdlOp@@AND_LOG to ops
                UPD HdlOp@@AND_LOG to AND_LOG
                    INS list@@ops to AND_LOG
                    INS HdlOp@@EQ to ops
                    HdlOp: EQ
                        list: ops
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: znAS_sync
                                    HdlValueInt: 0
                            HdlValueInt: 0

UPD HdlStmAssign@@ to 
    UPD HdlOp@@AND_LOG to AND_LOG
        UPD HdlOp@@AND_LOG to AND_LOG
            UPD HdlOp@@AND_LOG to AND_LOG
                MOV HdlOp@@EQ to ops
                HdlOp: EQ
                    list: ops
                        HdlOp: INDEX
                            list: ops
                                HdlValueId: znAS_sync
                                HdlValueInt: 1
                        HdlValueInt: 0


CommitId: 47a1453a80806c291146a391a62497ee76e6b1f7
debug uart; fix read/write addr noise
--- a/z2-minispartan/z2.v
+++ b/z2-minispartan/z2.v
@@ -394,6 +413,27 @@ parameter RAM_ROW_FETCHED = 2;
 parameter RAM_READING_ZORRO = 3;
 parameter RAM_WRITING = 4;
 
+reg [5:0] uart_nybble = 0;
+
+reg [15:0] time_ns = 0;
+reg [2:0] time_corr = 0;
+
+always @(posedge vga_clk) begin
+  // 75mhz to nanosecond clock
+  if (time_corr==2) begin
+    time_corr <= 0;
+    time_ns <= time_ns + 13;
+  end else begin
+    time_corr <= time_corr + 1;
+    time_ns <= time_ns + 14;
+  end
+  
+  if (time_ns>=4340) begin
+    time_ns <= 0;
+    uart_clk = ~uart_clk;
+  end
+end
+
 /*
 problem:
 read/write mix (block copy)

ParseResult:
INS HdlIdDef@@time_ns to objs
HdlIdDef: time_ns
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 15
                    HdlValueInt: 0
    HdlValueInt: 0
    HdlDirection: INTERNAL

INS HdlIdDef@@time_corr to objs
HdlIdDef: time_corr
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 2
                    HdlValueInt: 0
    HdlValueInt: 0
    HdlDirection: INTERNAL

INS HdlStmProcess@@ to objs
HdlStmProcess
    list: sensitivity
        HdlOp: RISING
            list: ops
                HdlValueId: vga_clk
    HdlStmBlock: SEQ
        list: body
            HdlStmIf
                HdlOp: EQ
                    list: ops
                        HdlValueId: time_corr
                        HdlValueInt: 2
                HdlStmBlock: SEQ
                    list: body
                        HdlStmAssign
                            HdlValueInt: 0
                            HdlValueId: time_corr
                        HdlStmAssign
                            HdlOp: ADD
                                list: ops
                                    HdlValueId: time_ns
                                    HdlValueInt: 13
                            HdlValueId: time_ns
                list: elifs
                HdlStmBlock: SEQ
                    list: body
                        HdlStmAssign
                            HdlOp: ADD
                                list: ops
                                    HdlValueId: time_corr
                                    HdlValueInt: 1
                            HdlValueId: time_corr
                        HdlStmAssign
                            HdlOp: ADD
                                list: ops
                                    HdlValueId: time_ns
                                    HdlValueInt: 14
                            HdlValueId: time_ns
            HdlStmIf
                HdlOp: GE
                    list: ops
                        HdlValueId: time_ns
                        HdlValueInt: 4340
                HdlStmBlock: SEQ
                    list: body
                        HdlStmAssign
                            HdlValueInt: 0
                            HdlValueId: time_ns
                        HdlOp: ASSIGN
                            list: ops
                                HdlValueId: uart_clk
                                HdlOp: NEG
                                    list: ops
                                        HdlValueId: uart_clk
                list: elifs


CommitId: 47a1453a80806c291146a391a62497ee76e6b1f7
debug uart; fix read/write addr noise
--- a/z2-minispartan/z2.v
+++ b/z2-minispartan/z2.v
@@ -491,6 +531,10 @@ always @(posedge z_sample_clk) begin
       blitter_rgb <= 'hffff;
       blitter_enable <= 1;
       zorro_state <= IDLE;
+    
+      uart_write <= 1;
+      uart_data <= 33;
+      uart_nybble <= 9;
     end
   
     // ----------------------------------------------------------------------------------  

ParseResult:
UPD HdlStmCase@@zorro_state to zorro_state
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueInt: 33
    HdlValueId: uart_data

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueInt: 9
    HdlValueId: uart_nybble

UPD HdlStmCase@@zorro_state to zorro_state
    UPD HdlStmBlock@@SEQ to SEQ
        UPD list@@body to ops
        MOV list@@body to SEQ
        list: body
            HdlStmIf
                HdlOp: EQ
                    list: ops
                        HdlOp: INDEX
                            list: ops
                                HdlValueId: znAS_sync
                                HdlValueInt: 1
                        HdlValueInt: 1
                HdlStmAssign: if_true
                    HdlValueId: IDLE
                    HdlValueId: zorro_state
                list: elifs


CommitId: 47a1453a80806c291146a391a62497ee76e6b1f7
debug uart; fix read/write addr noise
--- a/z2-minispartan/z2.v
+++ b/z2-minispartan/z2.v
@@ -501,10 +545,15 @@ always @(posedge z_sample_clk) begin
       write_stall <= 0;
       z_ready <= 1'bZ; // clear XRDY (cpu wait)
       
+      if (uart_nybble==9 && uart_busy) begin
+        uart_write <= 0;
+        uart_nybble <= 0;
+      end
+      
       if (znRST_sync[1]==0) begin
         // system reset
         //zorro_state <= RESET;
-      end else if (znAS_sync[1]==0) begin
+      end else if (znAS_sync[1]==0 && znAS_sync[0]==0) begin
         if (zorro_read && zaddr_in_ram) begin
           // read RAM
           // request ram access from arbiter

ParseResult:
UPD HdlStmCase@@zorro_state to zorro_state
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

INS HdlStmIf@@ to body
HdlStmIf
    HdlOp: AND_LOG
        list: ops
            HdlOp: EQ
                list: ops
                    HdlValueId: uart_nybble
                    HdlValueInt: 9
            HdlValueId: uart_busy
    HdlStmBlock: SEQ
        list: body
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: uart_write
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: uart_nybble
    list: elifs

UPD HdlStmCase@@zorro_state to zorro_state
    UPD HdlStmBlock@@SEQ to SEQ
        UPD list@@body to ops
        MOV list@@body to SEQ
        list: body
            HdlStmIf
                HdlOp: EQ
                    list: ops
                        HdlOp: INDEX
                            list: ops
                                HdlValueId: znAS_sync
                                HdlValueInt: 1
                        HdlValueInt: 1
                HdlStmAssign: if_true
                    HdlValueId: IDLE
                    HdlValueId: zorro_state
                list: elifs

UPD HdlStmIf@@ to 
    MOV HdlOp@@EQ to 
    HdlOp: EQ
        list: ops
            HdlOp: INDEX
                list: ops
                    HdlValueId: znAS_sync
                    HdlValueInt: 1
            HdlValueInt: 0


CommitId: 47a1453a80806c291146a391a62497ee76e6b1f7
debug uart; fix read/write addr noise
--- a/z2-minispartan/z2.v
+++ b/z2-minispartan/z2.v
@@ -597,7 +646,7 @@ always @(posedge z_sample_clk) begin
   
     // ----------------------------------------------------------------------------------
     WAIT_READ2:
-      if (znAS_sync[1]==1) begin
+      if (znAS_sync[1]==1 && znAS_sync[0]==1) begin
         // ram too slow TODO: report this
         zorro_ram_read_request <= 0;
         zorro_state <= IDLE;

ParseResult:
UPD HdlStmCase@@zorro_state to zorro_state
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmIf@@ to 
    MOV HdlOp@@EQ to 
    HdlOp: EQ
        list: ops
            HdlOp: INDEX
                list: ops
                    HdlValueId: znAS_sync
                    HdlValueInt: 1
            HdlValueInt: 1

UPD HdlStmCase@@zorro_state to zorro_state
    UPD HdlStmBlock@@SEQ to SEQ
        UPD list@@body to ops
        MOV list@@body to SEQ
        list: body
            HdlStmIf
                HdlOp: EQ
                    list: ops
                        HdlOp: INDEX
                            list: ops
                                HdlValueId: znAS_sync
                                HdlValueInt: 1
                        HdlValueInt: 1
                HdlStmAssign: if_true
                    HdlValueId: IDLE
                    HdlValueId: zorro_state
                list: elifs

UPD HdlStmIf@@ to 
    INS HdlOp@@AND_LOG to 
    UPD HdlOp@@AND_LOG to AND_LOG
        INS list@@ops to AND_LOG
        INS HdlOp@@EQ to ops
        HdlOp: EQ
            list: ops
                HdlOp: INDEX
                    list: ops
                        HdlValueId: znAS_sync
                        HdlValueInt: 0
                HdlValueInt: 0


CommitId: 47a1453a80806c291146a391a62497ee76e6b1f7
debug uart; fix read/write addr noise
--- a/z2-minispartan/z2.v
+++ b/z2-minispartan/z2.v
@@ -612,7 +661,7 @@ always @(posedge z_sample_clk) begin
   
     // ----------------------------------------------------------------------------------
     WAIT_READ:
-      if (znAS_sync[1]==1) begin
+      if (znAS_sync[1]==1 && znAS_sync[0]==1) begin
         zorro_state <= IDLE;
       end else begin
         dataout_enable <= 1;

ParseResult:
UPD HdlStmCase@@zorro_state to zorro_state
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmIf@@ to 
    MOV HdlOp@@EQ to 
    HdlOp: EQ
        list: ops
            HdlOp: INDEX
                list: ops
                    HdlValueId: znAS_sync
                    HdlValueInt: 1
            HdlValueInt: 1

UPD HdlStmCase@@zorro_state to zorro_state
    UPD HdlStmBlock@@SEQ to SEQ
        UPD list@@body to ops
        MOV list@@body to SEQ
        list: body
            HdlStmIf
                HdlOp: EQ
                    list: ops
                        HdlOp: INDEX
                            list: ops
                                HdlValueId: znAS_sync
                                HdlValueInt: 1
                        HdlValueInt: 1
                HdlStmAssign: if_true
                    HdlValueId: IDLE
                    HdlValueId: zorro_state
                list: elifs

UPD HdlStmIf@@ to 
    INS HdlOp@@AND_LOG to 
    UPD HdlOp@@AND_LOG to AND_LOG
        INS list@@ops to AND_LOG
        INS HdlOp@@EQ to ops
        HdlOp: EQ
            list: ops
                HdlOp: INDEX
                    list: ops
                        HdlValueId: znAS_sync
                        HdlValueInt: 0
                HdlValueInt: 0


CommitId: 47a1453a80806c291146a391a62497ee76e6b1f7
debug uart; fix read/write addr noise
--- a/z2-minispartan/z2.v
+++ b/z2-minispartan/z2.v
@@ -642,7 +733,10 @@ always @(posedge z_sample_clk) begin
     
     // ----------------------------------------------------------------------------------
     WAIT_WRITE2: begin
-      if (znAS_sync[1]==1) zorro_state <= IDLE;
+      z_ready <= 1'bZ;
+      if (znAS_sync[1]==1 && znAS_sync[0]==1) begin
+        zorro_state <= IDLE;
+      end
     end
     
   endcase

ParseResult:
UPD HdlStmIf@@ to 
    INS HdlOp@@AND_LOG to 
    UPD HdlOp@@AND_LOG to AND_LOG
        INS list@@ops to AND_LOG
        INS HdlOp@@EQ to ops
        HdlOp: EQ
            list: ops
                HdlOp: INDEX
                    list: ops
                        HdlValueId: znAS_sync
                        HdlValueInt: 0
                HdlValueInt: 1

UPD HdlStmCase@@zorro_state to zorro_state
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

MOV HdlStmIf@@ to body
HdlStmIf
    HdlOp: EQ
        list: ops
            HdlOp: INDEX
                list: ops
                    HdlValueId: znAS_sync
                    HdlValueInt: 1
            HdlValueInt: 1
    HdlStmAssign: if_true
        HdlValueId: IDLE
        HdlValueId: zorro_state
    list: elifs

UPD HdlStmCase@@zorro_state to zorro_state
    UPD HdlStmBlock@@SEQ to SEQ
        UPD list@@body to ops
        MOV list@@body to SEQ
        list: body
            HdlStmIf
                HdlOp: EQ
                    list: ops
                        HdlOp: INDEX
                            list: ops
                                HdlValueId: znAS_sync
                                HdlValueInt: 1
                        HdlValueInt: 1
                HdlStmAssign: if_true
                    HdlValueId: IDLE
                    HdlValueId: zorro_state
                list: elifs

UPD HdlStmIf@@ to 
    MOV HdlOp@@EQ to 
    HdlOp: EQ
        list: ops
            HdlOp: INDEX
                list: ops
                    HdlValueId: znAS_sync
                    HdlValueInt: 1
            HdlValueInt: 1
    UPD list@@elifs to ops
    MOV list@@elifs to 
    list: elifs

UPD HdlStmAssign@@if_true to 

MOV HdlStmAssign@@if_true to 
HdlStmAssign: if_true
    HdlValueId: IDLE
    HdlValueId: zorro_state


CommitId: 47a1453a80806c291146a391a62497ee76e6b1f7
debug uart; fix read/write addr noise
--- a/z2-minispartan/z2.v
+++ b/z2-minispartan/z2.v
@@ -758,7 +852,7 @@ always @(posedge z_sample_clk) begin
     RAM_READING_ZORRO: begin    
         if (data_out_ready) begin
           //ram_enable <= 0;
-          zorro_ram_read_data <= zorro_ram_read_addr; //ram_data_out;
+          zorro_ram_read_data <= ram_data_out; // zorro_ram_read_addr; <- debug
           zorro_ram_read_done <= 1;
           zorro_ram_read_request <= 0;
           ram_arbiter_state <= RAM_ROW_FETCHED;
ParseResult:
UPD HdlStmAssign@@ to 
    UPD HdlValueId@@zorro_ram_read_addr to ram_data_out


CommitId: a8fb31b588c7fad000d8059b2285034fbd2913e2
quite stable writes; fix weird 16bit 'pc' color interpretation
--- a/z2-minispartan/z2.v
+++ b/z2-minispartan/z2.v
@@ -178,7 +178,7 @@ reg [15:0] data_in;
 reg dataout = 0;
 
 assign zDIR     = !(dataout);
-assign znSLAVEN = !(dataout && zDOE && zREAD);
+assign znSLAVEN = !(dataout && zDOE);
 assign zD  = (dataout) ? data : 16'bzzzz_zzzz_zzzz_zzzz;
 
 reg [23:0] last_addr = 0;

ParseResult:
UPD HdlStmAssign@@ to 
    UPD HdlOp@@NEG_LOG to NEG_LOG
        UPD HdlOp@@AND_LOG to NEG_LOG
        MOV HdlOp@@AND_LOG to ops
        HdlOp: AND_LOG
            list: ops
                HdlOp: AND_LOG
                    list: ops
                        HdlValueId: dataout
                        HdlValueId: zDOE
                HdlValueId: zREAD
        UPD HdlOp@@AND_LOG to AND_LOG
            DEL HdlValueId@@zREAD from ops
        DEL list@@ops from NEG_LOG
    DEL HdlOp@@NEG_LOG from 


CommitId: a8fb31b588c7fad000d8059b2285034fbd2913e2
quite stable writes; fix weird 16bit 'pc' color interpretation
--- a/z2-minispartan/z2.v
+++ b/z2-minispartan/z2.v
@@ -222,6 +222,9 @@ parameter ram_high = 24'h740000;
 parameter rom_low  = 24'he80000;
 parameter rom_high = 24'he80100;
 
+reg wdelay = 0; // write switchoff delay
+
+/*
 parameter rec_depth = 16;
 
 reg [23:0] rec_addr [0:rec_depth-1];

ParseResult:
DEL HdlIdDef@@rec_addr from objs
HdlIdDef: rec_addr
    HdlOp: INDEX
        list: ops
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 23
                            HdlValueInt: 0
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 0
                    HdlOp: SUB
                        list: ops
                            HdlValueId: rec_depth
                            HdlValueInt: 1
    HdlDirection: INTERNAL

DEL HdlIdDef@@rec_data from objs
HdlIdDef: rec_data
    HdlOp: INDEX
        list: ops
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 15
                            HdlValueInt: 0
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 0
                    HdlOp: SUB
                        list: ops
                            HdlValueId: rec_depth
                            HdlValueInt: 1
    HdlDirection: INTERNAL

DEL HdlIdDef@@rec_as from objs
HdlIdDef: rec_as
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 0
                    HdlOp: SUB
                        list: ops
                            HdlValueId: rec_depth
                            HdlValueInt: 1
    HdlDirection: INTERNAL

DEL HdlIdDef@@rec_lds from objs
HdlIdDef: rec_lds
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 0
                    HdlOp: SUB
                        list: ops
                            HdlValueId: rec_depth
                            HdlValueInt: 1
    HdlDirection: INTERNAL

DEL HdlIdDef@@rec_uds from objs
HdlIdDef: rec_uds
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 0
                    HdlOp: SUB
                        list: ops
                            HdlValueId: rec_depth
                            HdlValueInt: 1
    HdlDirection: INTERNAL

DEL HdlIdDef@@rec_read from objs
HdlIdDef: rec_read
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 0
                    HdlOp: SUB
                        list: ops
                            HdlValueId: rec_depth
                            HdlValueInt: 1
    HdlDirection: INTERNAL


CommitId: a8fb31b588c7fad000d8059b2285034fbd2913e2
quite stable writes; fix weird 16bit 'pc' color interpretation
--- a/z2-minispartan/z2.v
+++ b/z2-minispartan/z2.v
@@ -250,7 +253,7 @@ always @(posedge z_sample_clk) begin
   data_in <= zD;
   zaddr <= zA;
   
-  rec_addr[rec_idx] <= zaddr;
+  /*rec_addr[rec_idx] <= zaddr;
   rec_data[rec_idx] <= data_in;
   rec_as[rec_idx]   <= znAS_sync[1];
   rec_lds[rec_idx]  <= znLDS_sync[1];

ParseResult:
DEL HdlStmAssign@@ from body
HdlStmAssign
    HdlValueId: data_in
    HdlOp: INDEX
        list: ops
            HdlValueId: rec_data
            HdlValueId: rec_idx

DEL HdlStmAssign@@ from body
HdlStmAssign
    HdlOp: INDEX
        list: ops
            HdlValueId: znAS_sync
            HdlValueInt: 1
    HdlOp: INDEX
        list: ops
            HdlValueId: rec_as
            HdlValueId: rec_idx

DEL HdlStmAssign@@ from body
HdlStmAssign
    HdlOp: INDEX
        list: ops
            HdlValueId: znLDS_sync
            HdlValueInt: 1
    HdlOp: INDEX
        list: ops
            HdlValueId: rec_lds
            HdlValueId: rec_idx

DEL HdlStmAssign@@ from body
HdlStmAssign
    HdlOp: INDEX
        list: ops
            HdlValueId: znUDS_sync
            HdlValueInt: 1
    HdlOp: INDEX
        list: ops
            HdlValueId: rec_uds
            HdlValueId: rec_idx

DEL HdlStmAssign@@ from body
HdlStmAssign
    HdlOp: INDEX
        list: ops
            HdlValueId: zREAD_sync
            HdlValueInt: 1
    HdlOp: INDEX
        list: ops
            HdlValueId: rec_read
            HdlValueId: rec_idx

DEL HdlStmAssign@@ from body
HdlStmAssign
    HdlOp: INDEX
        list: ops
            HdlValueId: zDOE_sync
            HdlValueInt: 1
    HdlOp: INDEX
        list: ops
            HdlValueId: rec_doe
            HdlValueId: rec_idx

DEL HdlStmIf@@ from body
HdlStmIf
    HdlOp: GE
        list: ops
            HdlValueId: rec_idx
            HdlOp: SUB
                list: ops
                    HdlValueId: rec_depth
                    HdlValueInt: 1
    HdlStmBlock: SEQ
        list: body
            HdlStmIf
                HdlValueId: recording
                HdlStmAssign: if_true
                    HdlValueInt: 0
                    HdlValueId: rec_idx
                list: elifs
    list: elifs
    HdlStmAssign: if_false
        HdlOp: ADD
            list: ops
                HdlValueId: rec_idx
                HdlValueInt: 1
        HdlValueId: rec_idx


CommitId: a8fb31b588c7fad000d8059b2285034fbd2913e2
quite stable writes; fix weird 16bit 'pc' color interpretation
--- a/z2-minispartan/z2.v
+++ b/z2-minispartan/z2.v
@@ -262,9 +265,9 @@ always @(posedge z_sample_clk) begin
     if (recording)
       rec_idx <= 0;
   end else
-    rec_idx <= rec_idx+1;
+    rec_idx <= rec_idx+1;*/
 
-  ram_write <= 0;
+  //ram_write <= 0;
   //ram_enable <= 0;
    
   if (state == IDLE) begin

ParseResult:
MOV HdlStmAssign@@ to body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: ram_write


CommitId: a8fb31b588c7fad000d8059b2285034fbd2913e2
quite stable writes; fix weird 16bit 'pc' color interpretation
--- a/z2-minispartan/z2.v
+++ b/z2-minispartan/z2.v
@@ -272,19 +275,15 @@ always @(posedge z_sample_clk) begin
       // zorro gives us an address
       
       if (zREAD_sync[1]==1 && zaddr>=ram_low && zaddr<ram_high) begin
-        //recording <= 0;
-        //trigger_idx <= rec_idx;
         // read RAM
-        read_fetched <= 0;
         if (!fetching || (fetching && cmd_ready && !data_out_ready)) begin
           state <= WAIT_READ;
         end
         ram_enable <= 0;
+        dataout <= 1;
         
       end else if (zREAD_sync[1]==1 && zaddr>=rom_low && zaddr<rom_high && !znCFGIN) begin
         // read iospace 'he80000 (ROM)
-        //recording <= 0;
-        //trigger_idx <= rec_idx;
         dataout <= 1;
         last_addr <= zaddr;
         

ParseResult:
INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueInt: 1
    HdlValueId: dataout

DEL HdlStmAssign@@ from body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: read_fetched


CommitId: a8fb31b588c7fad000d8059b2285034fbd2913e2
quite stable writes; fix weird 16bit 'pc' color interpretation
--- a/z2-minispartan/z2.v
+++ b/z2-minispartan/z2.v
@@ -335,8 +334,9 @@ always @(posedge z_sample_clk) begin
   end else if (state == WAIT_READ) begin
     if (cmd_ready) begin
       ram_write <= 0;
-      ram_addr <= ((zaddr&'h1fffff)<<1);
+      ram_addr <= ((zaddr&'h1ffffe)>>1);
       ram_enable <= 1;
+      ram_byte_enable <= 'b11;
       state <= WAIT_READ2;
     end
   end else if (state == WAIT_READ2) begin

ParseResult:
INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueInt: 11
    HdlValueId: ram_byte_enable

UPD HdlStmAssign@@ to 
    UPD HdlOp@@SLL to SRL
    UPD HdlOp@@SLL to SLL
        UPD HdlOp@@AND to AND
            UPD HdlValueInt@@1fffff to 1ffffe


CommitId: a8fb31b588c7fad000d8059b2285034fbd2913e2
quite stable writes; fix weird 16bit 'pc' color interpretation
--- a/z2-minispartan/z2.v
+++ b/z2-minispartan/z2.v
@@ -372,13 +373,13 @@ always @(posedge z_sample_clk) begin
       last_data <= data_in;
       last_ds <= {znLDS_sync[2],znUDS_sync[2]};
     
-      if (recording==0) begin
+      /*if (recording==0) begin
         recording <= 1;
         trigger_idx <= 0;
       end else begin
         recording <= 0;
         trigger_idx <= rec_idx;
-      end
+      end*/
       
       writeq_addr[writeq_fill][23:0] <= last_addr;
       writeq_addr[writeq_fill][24]   <= ~znLDS_sync[2];

ParseResult:
DEL HdlStmIf@@ from body
HdlStmIf
    HdlOp: EQ
        list: ops
            HdlValueId: recording
            HdlValueInt: 0
    HdlStmBlock: SEQ
        list: body
            HdlStmAssign
                HdlValueInt: 1
                HdlValueId: recording
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: trigger_idx
    list: elifs
    HdlStmBlock: SEQ
        list: body
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: recording
            HdlStmAssign
                HdlValueId: rec_idx
                HdlValueId: trigger_idx


CommitId: a8fb31b588c7fad000d8059b2285034fbd2913e2
quite stable writes; fix weird 16bit 'pc' color interpretation
--- a/z2-minispartan/z2.v
+++ b/z2-minispartan/z2.v
@@ -434,6 +435,17 @@ always @(posedge z_sample_clk) begin
       else
         writeq_drain <= 0;
     end
+    
+    if (!fetching && (writeq_fill==writeq_drain)) begin
+      if (wdelay>=2) begin
+        ram_enable <= 0;
+        ram_write <= 0;
+        ram_byte_enable <= 'b11;
+        wdelay <= 0;
+      end else begin
+        wdelay <= wdelay+1;
+      end
+    end
   end
   
   if (counter_x==0) begin

ParseResult:
INS HdlStmIf@@ to body

UPD HdlStmIf@@ to 
    INS HdlOp@@AND_LOG to 
    HdlOp: AND_LOG
        list: ops
            HdlOp: NEG_LOG
                list: ops
                    HdlValueId: fetching
            HdlOp: EQ
                list: ops
                    HdlValueId: writeq_fill
                    HdlValueId: writeq_drain
    INS HdlStmBlock@@SEQ to 
    INS list@@elifs to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

INS HdlStmIf@@ to body

UPD HdlStmIf@@ to 
    INS HdlOp@@GE to 
    HdlOp: GE
        list: ops
            HdlValueId: wdelay
            HdlValueInt: 2
    INS HdlStmBlock@@SEQ to 
    INS list@@elifs to 
    INS HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlStmAssign
                HdlOp: ADD
                    list: ops
                        HdlValueId: wdelay
                        HdlValueInt: 1
                HdlValueId: wdelay
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: ram_enable

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueInt: 11
    HdlValueId: ram_byte_enable

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: wdelay


CommitId: a8fb31b588c7fad000d8059b2285034fbd2913e2
quite stable writes; fix weird 16bit 'pc' color interpretation
--- a/z2-minispartan/z2.v
+++ b/z2-minispartan/z2.v
@@ -644,10 +670,10 @@ always @(posedge vga_clk) begin
           rgb <= 0;
         end
       else begin
-        if (counter_x>1023)
+        if (counter_x>799)
           rgb <= 0;
         
-        else if (counter_x<rec_depth) begin
+        /*else if (counter_x<rec_depth) begin
           if (counter_y>=100 && counter_y<=145)
             rgb <= (rec_addr[counter_x][(counter_y-100)>>1])?(trigger_idx==counter_x?'hff00:'hffff):'h0000;
           else if (counter_y>=200 && counter_y<=231)

ParseResult:
UPD HdlStmIf@@ to 
    MOV list@@elifs to 
    list: elifs
        tuple
            HdlOp: AND_LOG
                list: ops
                    HdlOp: GE
                        list: ops
                            HdlValueId: counter_y
                            HdlValueInt: 200
                    HdlOp: LE
                        list: ops
                            HdlValueId: counter_y
                            HdlValueInt: 231
            HdlStmAssign
                HdlOp: TERNARY
                    list: ops
                        HdlOp: INDEX
                            list: ops
                                HdlOp: INDEX
                                    list: ops
                                        HdlValueId: rec_data
                                        HdlValueId: counter_x
                                HdlOp: SRL
                                    list: ops
                                        HdlOp: SUB
                                            list: ops
                                                HdlValueId: counter_y
                                                HdlValueInt: 200
                                        HdlValueInt: 1
                        HdlOp: TERNARY
                            list: ops
                                HdlOp: EQ
                                    list: ops
                                        HdlValueId: trigger_idx
                                        HdlValueId: counter_x
                                HdlValueInt: ff00
                                HdlValueInt: ffff
                        HdlValueInt: 0000
                HdlValueId: rgb
        tuple
            HdlOp: AND_LOG
                list: ops
                    HdlOp: GE
                        list: ops
                            HdlValueId: counter_y
                            HdlValueInt: 300
                    HdlOp: LE
                        list: ops
                            HdlValueId: counter_y
                            HdlValueInt: 305
            HdlStmAssign
                HdlOp: TERNARY
                    list: ops
                        HdlOp: INDEX
                            list: ops
                                HdlValueId: rec_as
                                HdlValueId: counter_x
                        HdlOp: TERNARY
                            list: ops
                                HdlOp: EQ
                                    list: ops
                                        HdlValueId: trigger_idx
                                        HdlValueId: counter_x
                                HdlValueInt: ff00
                                HdlValueInt: ffff
                        HdlValueInt: 0000
                HdlValueId: rgb
        tuple
            HdlOp: AND_LOG
                list: ops
                    HdlOp: GE
                        list: ops
                            HdlValueId: counter_y
                            HdlValueInt: 306
                    HdlOp: LE
                        list: ops
                            HdlValueId: counter_y
                            HdlValueInt: 310
            HdlStmAssign
                HdlOp: TERNARY
                    list: ops
                        HdlOp: INDEX
                            list: ops
                                HdlValueId: rec_uds
                                HdlValueId: counter_x
                        HdlOp: TERNARY
                            list: ops
                                HdlOp: EQ
                                    list: ops
                                        HdlValueId: trigger_idx
                                        HdlValueId: counter_x
                                HdlValueInt: ff00
                                HdlValueInt: ffff
                        HdlValueInt: 0000
                HdlValueId: rgb
        tuple
            HdlOp: AND_LOG
                list: ops
                    HdlOp: GE
                        list: ops
                            HdlValueId: counter_y
                            HdlValueInt: 311
                    HdlOp: LE
                        list: ops
                            HdlValueId: counter_y
                            HdlValueInt: 315
            HdlStmAssign
                HdlOp: TERNARY
                    list: ops
                        HdlOp: INDEX
                            list: ops
                                HdlValueId: rec_lds
                                HdlValueId: counter_x
                        HdlOp: TERNARY
                            list: ops
                                HdlOp: EQ
                                    list: ops
                                        HdlValueId: trigger_idx
                                        HdlValueId: counter_x
                                HdlValueInt: ff00
                                HdlValueInt: ffff
                        HdlValueInt: 0000
                HdlValueId: rgb
        tuple
            HdlOp: AND_LOG
                list: ops
                    HdlOp: GE
                        list: ops
                            HdlValueId: counter_y
                            HdlValueInt: 316
                    HdlOp: LE
                        list: ops
                            HdlValueId: counter_y
                            HdlValueInt: 320
            HdlStmAssign
                HdlOp: TERNARY
                    list: ops
                        HdlOp: INDEX
                            list: ops
                                HdlValueId: rec_doe
                                HdlValueId: counter_x
                        HdlOp: TERNARY
                            list: ops
                                HdlOp: EQ
                                    list: ops
                                        HdlValueId: trigger_idx
                                        HdlValueId: counter_x
                                HdlValueInt: ff00
                                HdlValueInt: ffff
                        HdlValueInt: 0000
                HdlValueId: rgb
        tuple
            HdlOp: AND_LOG
                list: ops
                    HdlOp: GE
                        list: ops
                            HdlValueId: counter_y
                            HdlValueInt: 321
                    HdlOp: LE
                        list: ops
                            HdlValueId: counter_y
                            HdlValueInt: 325
            HdlStmAssign
                HdlOp: TERNARY
                    list: ops
                        HdlOp: INDEX
                            list: ops
                                HdlValueId: rec_read
                                HdlValueId: counter_x
                        HdlOp: TERNARY
                            list: ops
                                HdlOp: EQ
                                    list: ops
                                        HdlValueId: trigger_idx
                                        HdlValueId: counter_x
                                HdlValueInt: ff00
                                HdlValueInt: ffff
                        HdlValueInt: 0000
                HdlValueId: rgb
    DEL tuple@@ from elifs
    tuple
        HdlOp: AND_LOG
            list: ops
                HdlOp: GE
                    list: ops
                        HdlValueId: counter_y
                        HdlValueInt: 200
                HdlOp: LE
                    list: ops
                        HdlValueId: counter_y
                        HdlValueInt: 231
        HdlStmAssign
            HdlOp: TERNARY
                list: ops
                    HdlOp: INDEX
                        list: ops
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: rec_data
                                    HdlValueId: counter_x
                            HdlOp: SRL
                                list: ops
                                    HdlOp: SUB
                                        list: ops
                                            HdlValueId: counter_y
                                            HdlValueInt: 200
                                    HdlValueInt: 1
                    HdlOp: TERNARY
                        list: ops
                            HdlOp: EQ
                                list: ops
                                    HdlValueId: trigger_idx
                                    HdlValueId: counter_x
                            HdlValueInt: ff00
                            HdlValueInt: ffff
                    HdlValueInt: 0000
            HdlValueId: rgb
    DEL tuple@@ from elifs
    tuple
        HdlOp: AND_LOG
            list: ops
                HdlOp: GE
                    list: ops
                        HdlValueId: counter_y
                        HdlValueInt: 300
                HdlOp: LE
                    list: ops
                        HdlValueId: counter_y
                        HdlValueInt: 305
        HdlStmAssign
            HdlOp: TERNARY
                list: ops
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: rec_as
                            HdlValueId: counter_x
                    HdlOp: TERNARY
                        list: ops
                            HdlOp: EQ
                                list: ops
                                    HdlValueId: trigger_idx
                                    HdlValueId: counter_x
                            HdlValueInt: ff00
                            HdlValueInt: ffff
                    HdlValueInt: 0000
            HdlValueId: rgb
    DEL tuple@@ from elifs
    tuple
        HdlOp: AND_LOG
            list: ops
                HdlOp: GE
                    list: ops
                        HdlValueId: counter_y
                        HdlValueInt: 306
                HdlOp: LE
                    list: ops
                        HdlValueId: counter_y
                        HdlValueInt: 310
        HdlStmAssign
            HdlOp: TERNARY
                list: ops
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: rec_uds
                            HdlValueId: counter_x
                    HdlOp: TERNARY
                        list: ops
                            HdlOp: EQ
                                list: ops
                                    HdlValueId: trigger_idx
                                    HdlValueId: counter_x
                            HdlValueInt: ff00
                            HdlValueInt: ffff
                    HdlValueInt: 0000
            HdlValueId: rgb
    DEL tuple@@ from elifs
    tuple
        HdlOp: AND_LOG
            list: ops
                HdlOp: GE
                    list: ops
                        HdlValueId: counter_y
                        HdlValueInt: 311
                HdlOp: LE
                    list: ops
                        HdlValueId: counter_y
                        HdlValueInt: 315
        HdlStmAssign
            HdlOp: TERNARY
                list: ops
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: rec_lds
                            HdlValueId: counter_x
                    HdlOp: TERNARY
                        list: ops
                            HdlOp: EQ
                                list: ops
                                    HdlValueId: trigger_idx
                                    HdlValueId: counter_x
                            HdlValueInt: ff00
                            HdlValueInt: ffff
                    HdlValueInt: 0000
            HdlValueId: rgb
    DEL tuple@@ from elifs
    tuple
        HdlOp: AND_LOG
            list: ops
                HdlOp: GE
                    list: ops
                        HdlValueId: counter_y
                        HdlValueInt: 316
                HdlOp: LE
                    list: ops
                        HdlValueId: counter_y
                        HdlValueInt: 320
        HdlStmAssign
            HdlOp: TERNARY
                list: ops
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: rec_doe
                            HdlValueId: counter_x
                    HdlOp: TERNARY
                        list: ops
                            HdlOp: EQ
                                list: ops
                                    HdlValueId: trigger_idx
                                    HdlValueId: counter_x
                            HdlValueInt: ff00
                            HdlValueInt: ffff
                    HdlValueInt: 0000
            HdlValueId: rgb
    DEL tuple@@ from elifs
    tuple
        HdlOp: AND_LOG
            list: ops
                HdlOp: GE
                    list: ops
                        HdlValueId: counter_y
                        HdlValueInt: 321
                HdlOp: LE
                    list: ops
                        HdlValueId: counter_y
                        HdlValueInt: 325
        HdlStmAssign
            HdlOp: TERNARY
                list: ops
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: rec_read
                            HdlValueId: counter_x
                    HdlOp: TERNARY
                        list: ops
                            HdlOp: EQ
                                list: ops
                                    HdlValueId: trigger_idx
                                    HdlValueId: counter_x
                            HdlValueInt: ff00
                            HdlValueInt: ffff
                    HdlValueInt: 0000
            HdlValueId: rgb
    DEL HdlOp@@AND_LOG from 
    HdlOp: AND_LOG
        list: ops
            HdlOp: GE
                list: ops
                    HdlValueId: counter_y
                    HdlValueInt: 100
            HdlOp: LE
                list: ops
                    HdlValueId: counter_y
                    HdlValueInt: 145

UPD HdlStmIf@@ to 
    UPD HdlOp@@GT to GT
        UPD HdlValueInt@@1023 to 799
    DEL HdlOp@@LT from 
    HdlOp: LT
        list: ops
            HdlValueId: counter_x
            HdlValueId: rec_depth
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from elifs
    DEL list@@elifs from 

DEL HdlStmAssign@@if_true from 
HdlStmAssign: if_true
    HdlOp: TERNARY
        list: ops
            HdlOp: INDEX
                list: ops
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: rec_addr
                            HdlValueId: counter_x
                    HdlOp: SRL
                        list: ops
                            HdlOp: SUB
                                list: ops
                                    HdlValueId: counter_y
                                    HdlValueInt: 100
                            HdlValueInt: 1
            HdlOp: TERNARY
                list: ops
                    HdlOp: EQ
                        list: ops
                            HdlValueId: trigger_idx
                            HdlValueId: counter_x
                    HdlValueInt: ff00
                    HdlValueInt: ffff
            HdlValueInt: 0000
    HdlValueId: rgb

DEL HdlStmIf@@ from body


CommitId: d0ca65a1df20b80fb733cc3eacb1182a9e839d0a
switch from xrdy to ovr/dtack mechanism; fix last glitches with default_data = ffff
--- a/z2-minispartan/z2.v
+++ b/z2-minispartan/z2.v
@@ -317,13 +317,14 @@ assign zDIR4     = dataout_z3; // a8-a15 <- input
 
 reg z_ready = 'b1;
 reg z_ready_latch = 'b1;
-assign zXRDY  = z_ready_latch?1'bZ:1'b0; //works only if bZ?  1'bZ
-assign znCINH = 1; // Z2 = /OVR
+reg z_ovr = 0;
+assign zXRDY  = 1'bZ; //z_ready_latch?1'bZ:1'b0; //works only if bZ?  1'bZ
+assign znCINH = !z_ovr; //1; // Z2 = /OVR
 
 assign znSLAVEN = (dataout && slaven)?1'b0:1'b1;
 assign znDTACK  = dtack?1'b0:1'bZ;
 
-assign zD  = (dataout_z3) ? data_z3_hi16 : (dataout ? data : 16'bzzzz_zzzz_zzzz_zzzz); // data = Z2: full 16 bit or Z3: upper 16 bit
+assign zD  = (dataout_z3) ? data_z3_hi16 : ((zDOE & dataout) ? data : 16'bzzzz_zzzz_zzzz_zzzz); // data = Z2: full 16 bit or Z3: upper 16 bit
 assign zA  = (dataout_z3) ? {data_z3_low16, 7'bzzzz_zzz} : 23'bzzz_zzzz_zzzz_zzzz_zzzz_zzzz;
 
 // autoconf status

ParseResult:
INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: NEG_LOG
        list: ops
            HdlValueId: z_ovr
    HdlValueId: znCINH

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: TERNARY
        list: ops
            HdlValueId: dataout_z3
            HdlValueId: data_z3_hi16
            HdlOp: TERNARY
                list: ops
                    HdlOp: AND
                        list: ops
                            HdlValueId: zDOE
                            HdlValueId: dataout
                    HdlValueId: data
                    HdlValueInt: zzzzzzzzzzzzzzzz
    HdlValueId: zD

DEL HdlStmAssign@@ from objs
HdlStmAssign
    HdlOp: TERNARY
        list: ops
            HdlValueId: dataout_z3
            HdlValueId: data_z3_hi16
            HdlOp: TERNARY
                list: ops
                    HdlValueId: dataout
                    HdlValueId: data
                    HdlValueInt: zzzzzzzzzzzzzzzz
    HdlValueId: zD


CommitId: d0ca65a1df20b80fb733cc3eacb1182a9e839d0a
switch from xrdy to ovr/dtack mechanism; fix last glitches with default_data = ffff
--- a/z2-minispartan/z2.v
+++ b/z2-minispartan/z2.v
@@ -648,7 +650,7 @@ reg [7:0] write_counter = 0;
 reg [1:0] zorro_write_capture_bytes = 0;
 reg [15:0] zorro_write_capture_data = 0;
 
-reg [15:0] default_data = 'h0000;
+reg [15:0] default_data = 'hffff; // causes read/write glitches (data bus interference) when 0
 
 always @(posedge z_sample_clk) begin
 

ParseResult:
UPD HdlIdDef@@default_data to default_data
    UPD HdlValueInt@@0000 to ffff


CommitId: d0ca65a1df20b80fb733cc3eacb1182a9e839d0a
switch from xrdy to ovr/dtack mechanism; fix last glitches with default_data = ffff
--- a/z2-minispartan/z2.v
+++ b/z2-minispartan/z2.v
@@ -667,7 +669,7 @@ always @(posedge z_sample_clk) begin
       rec_zaddr_in_ram[rec_idx>>2] <= zaddr_in_ram;
       rec_state[rec_idx>>2] <= zorro_ram_write_request;
       rec_statew[rec_idx>>2] <= ((zorro_state==WAIT_WRITE2)||(zorro_state==WAIT_WRITE))?1'b1:1'b0;
-      rec_ready[rec_idx>>2] <= ((zorro_state==WAIT_READ3)||(zorro_state==WAIT_READ2)||(zorro_state==WAIT_READ))?1'b1:1'b0;
+      rec_ready[rec_idx>>2] <= ((zorro_state==WAIT_READ3)||(zorro_state==WAIT_READ2))?1'b1:1'b0;
       ///rec_zaddr[rec_idx] <= zaddr;
     end
   end

ParseResult:
UPD HdlStmIf@@ to 
    DEL list@@elifs from 


CommitId: d0ca65a1df20b80fb733cc3eacb1182a9e839d0a
switch from xrdy to ovr/dtack mechanism; fix last glitches with default_data = ffff
--- a/z2-minispartan/z2.v
+++ b/z2-minispartan/z2.v
@@ -826,6 +828,7 @@ always @(posedge z_sample_clk) begin
     
     Z2_CONFIGURING: begin
       // CHECK
+      z_ovr <= 0;
       if (zaddr_autoconfig && z_cfgin) begin
         if (zorro_read) begin
           // read iospace 'he80000 (Autoconfig ROM)

ParseResult:
UPD HdlStmIf@@ to 
    INS list@@elifs to 

UPD HdlStmCase@@zorro_state to zorro_state
    INS HdlStmCaseType@@CASE to zorro_state
    INS HdlValueId@@zorro_state to zorro_state
    INS tuple@@ to cases
    INS HdlValueId@@Z2_ENDCYCLE to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmIf@@ to 
    DEL list@@elifs from 

UPD HdlStmCase@@zorro_state to zorro_state
    DEL HdlStmCaseType@@CASE from zorro_state
    DEL HdlValueId@@zorro_state from zorro_state
    DEL HdlValueId@@WAIT_READ from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases
    DEL HdlValueId@@WAIT_WRITE3 from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases


CommitId: d0ca65a1df20b80fb733cc3eacb1182a9e839d0a
switch from xrdy to ovr/dtack mechanism; fix last glitches with default_data = ffff
--- a/z2-minispartan/z2.v
+++ b/z2-minispartan/z2.v
@@ -955,18 +958,20 @@ always @(posedge z_sample_clk) begin
           slaven <= 1;
           dataout_enable <= 1;
           dataout <= 1;
+          z_ovr <= 1;
           
           zorro_state <= WAIT_READ3;
-          z_ready <= 0; // CHECK
+          //z_ready <= 0; // CHECK
           
         end else if (zorro_write && zaddr_in_ram) begin
           // write RAM
           last_addr <= z2_mapped_addr;
           zorro_state <= WAIT_WRITE;
-          z_ready <= 0;
+          //z_ready <= 0;
           dataout_enable <= 0;
           dataout <= 0;
           datain_counter <= 0;
+          z_ovr <= 1;
           
         end else if (zorro_write && zaddr_in_reg) begin
           // write to register

ParseResult:
UPD HdlStmIf@@ to 
    INS list@@elifs to 

UPD HdlStmCase@@zorro_state to zorro_state
    INS HdlStmCaseType@@CASE to zorro_state
    INS HdlValueId@@zorro_state to zorro_state
    INS tuple@@ to cases
    INS HdlValueId@@Z2_ENDCYCLE to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueInt: 1
    HdlValueId: z_ovr

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueInt: 1
    HdlValueId: z_ovr

UPD HdlStmIf@@ to 
    DEL list@@elifs from 

UPD HdlStmCase@@zorro_state to zorro_state
    DEL HdlStmCaseType@@CASE from zorro_state
    DEL HdlValueId@@zorro_state from zorro_state
    DEL HdlValueId@@WAIT_READ from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases
    DEL HdlValueId@@WAIT_WRITE3 from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases

DEL HdlStmAssign@@ from body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: z_ready

DEL HdlStmAssign@@ from body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: z_ready


CommitId: d0ca65a1df20b80fb733cc3eacb1182a9e839d0a
switch from xrdy to ovr/dtack mechanism; fix last glitches with default_data = ffff
--- a/z2-minispartan/z2.v
+++ b/z2-minispartan/z2.v
@@ -974,6 +979,7 @@ always @(posedge z_sample_clk) begin
           zorro_state <= WAIT_REGWRITE;
           dataout_enable <= 0;
           dataout <= 0;
+          z_ovr <= 1;
           
         end else if (zorro_read && zaddr_in_reg) begin
           // read from registers

ParseResult:
UPD HdlStmIf@@ to 
    INS list@@elifs to 

UPD HdlStmCase@@zorro_state to zorro_state
    INS HdlStmCaseType@@CASE to zorro_state
    INS HdlValueId@@zorro_state to zorro_state
    INS tuple@@ to cases
    INS HdlValueId@@Z2_ENDCYCLE to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueInt: 1
    HdlValueId: z_ovr

UPD HdlStmIf@@ to 
    DEL list@@elifs from 

UPD HdlStmCase@@zorro_state to zorro_state
    DEL HdlStmCaseType@@CASE from zorro_state
    DEL HdlValueId@@zorro_state from zorro_state
    DEL HdlValueId@@WAIT_READ from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases
    DEL HdlValueId@@WAIT_WRITE3 from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases


CommitId: d0ca65a1df20b80fb733cc3eacb1182a9e839d0a
switch from xrdy to ovr/dtack mechanism; fix last glitches with default_data = ffff
--- a/z2-minispartan/z2.v
+++ b/z2-minispartan/z2.v
@@ -981,6 +987,7 @@ always @(posedge z_sample_clk) begin
           dataout_enable <= 1;
           dataout <= 1;
           slaven <= 1;
+          z_ovr <= 1;
           
           case (zaddr_sync2[7:0])
             //'h00: data <= REVISION;

ParseResult:
UPD HdlStmIf@@ to 
    INS list@@elifs to 

UPD HdlStmCase@@zorro_state to zorro_state
    INS HdlStmCaseType@@CASE to zorro_state
    INS HdlValueId@@zorro_state to zorro_state
    INS tuple@@ to cases
    INS HdlValueId@@Z2_ENDCYCLE to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmIf@@ to 
    DEL list@@elifs from 

UPD HdlStmCase@@zorro_state to zorro_state
    DEL HdlStmCaseType@@CASE from zorro_state
    DEL HdlValueId@@zorro_state from zorro_state
    DEL HdlValueId@@WAIT_READ from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases
    DEL HdlValueId@@WAIT_WRITE3 from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases


CommitId: d0ca65a1df20b80fb733cc3eacb1182a9e839d0a
switch from xrdy to ovr/dtack mechanism; fix last glitches with default_data = ffff
--- a/z2-minispartan/z2.v
+++ b/z2-minispartan/z2.v
@@ -1010,6 +1017,8 @@ always @(posedge z_sample_clk) begin
             
             default: data <= REVISION; //'h0000;
           endcase
+          
+          zorro_state <= Z2_ENDCYCLE;
         end else begin
           dataout <= 0;
           dataout_enable <= 0;

ParseResult:
UPD HdlStmIf@@ to 
    INS list@@elifs to 

UPD HdlStmCase@@zorro_state to zorro_state
    INS HdlStmCaseType@@CASE to zorro_state
    INS HdlValueId@@zorro_state to zorro_state
    INS tuple@@ to cases
    INS HdlValueId@@Z2_ENDCYCLE to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueId: Z2_ENDCYCLE
    HdlValueId: zorro_state

UPD HdlStmIf@@ to 
    DEL list@@elifs from 

UPD HdlStmCase@@zorro_state to zorro_state
    DEL HdlStmCaseType@@CASE from zorro_state
    DEL HdlValueId@@zorro_state from zorro_state
    DEL HdlValueId@@WAIT_READ from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases
    DEL HdlValueId@@WAIT_WRITE3 from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases


CommitId: d0ca65a1df20b80fb733cc3eacb1182a9e839d0a
switch from xrdy to ovr/dtack mechanism; fix last glitches with default_data = ffff
--- a/z2-minispartan/z2.v
+++ b/z2-minispartan/z2.v
@@ -1036,7 +1045,7 @@ always @(posedge z_sample_clk) begin
     
     // ----------------------------------------------------------------------------------
     WAIT_READ3: begin
-      z_ready <= 0;
+      //z_ready <= 0;
       if (!zorro_ram_write_request) begin
         zorro_ram_read_addr <= last_addr;
         zorro_ram_read_request <= 1;

ParseResult:
UPD HdlStmIf@@ to 
    INS list@@elifs to 

UPD HdlStmCase@@zorro_state to zorro_state
    INS HdlStmCaseType@@CASE to zorro_state
    INS HdlValueId@@zorro_state to zorro_state
    INS tuple@@ to cases
    INS HdlValueId@@Z2_ENDCYCLE to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmIf@@ to 
    DEL list@@elifs from 

UPD HdlStmCase@@zorro_state to zorro_state
    DEL HdlStmCaseType@@CASE from zorro_state
    DEL HdlValueId@@zorro_state from zorro_state
    DEL HdlValueId@@WAIT_READ from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases
    DEL HdlValueId@@WAIT_WRITE3 from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases

DEL HdlStmAssign@@ from body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: z_ready


CommitId: d0ca65a1df20b80fb733cc3eacb1182a9e839d0a
switch from xrdy to ovr/dtack mechanism; fix last glitches with default_data = ffff
--- a/z2-minispartan/z2.v
+++ b/z2-minispartan/z2.v
@@ -1057,27 +1066,26 @@ always @(posedge z_sample_clk) begin
         //data[7:0] <= zorro_ram_read_data[7:0];
         read_counter <= read_counter + 1;
         zorro_ram_read_request <= 0;
+        data <= zorro_ram_read_data;
+        //z_ready <= 1;
         
         if (read_counter >= dataout_time) begin
-          data <= zorro_ram_read_data;
-          zorro_state <= WAIT_READ;
+          zorro_state <= Z2_ENDCYCLE; //WAIT_READ;
         end
       end
     end
   
     // ----------------------------------------------------------------------------------
-    WAIT_READ: begin
+    /*WAIT_READ: begin
       z_ready <= 1;
       //data <= zorro_ram_read_data;
-      /*if (!z2_addr_valid) begin
-        zorro_state <= Z2_IDLE;
-      end*/
+      
       if (znAS_sync[1]==1 && znAS_sync[0]==1) begin
         zorro_state <= Z2_IDLE;
         dataout_enable <= 0;
         dataout <= 0;
       end
-    end
+    end*/
    
     // ----------------------------------------------------------------------------------
     /*WAIT_WRITE:

ParseResult:
UPD HdlStmIf@@ to 
    INS list@@elifs to 

UPD HdlStmCase@@zorro_state to zorro_state
    INS HdlStmCaseType@@CASE to zorro_state
    INS HdlValueId@@zorro_state to zorro_state
    INS tuple@@ to cases
    INS HdlValueId@@Z2_ENDCYCLE to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmIf@@ to 
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlStmAssign
                HdlValueId: Z2_IDLE
                HdlValueId: zorro_state
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: dataout_enable
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: dataout
    DEL HdlOp@@AND_LOG from 
    HdlOp: AND_LOG
        list: ops
            HdlOp: EQ
                list: ops
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: znAS_sync
                            HdlValueInt: 1
                    HdlValueInt: 1
            HdlOp: EQ
                list: ops
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: znAS_sync
                            HdlValueInt: 0
                    HdlValueInt: 1
    DEL list@@elifs from 

MOV HdlStmAssign@@ to body
HdlStmAssign
    HdlValueId: Z2_IDLE
    HdlValueId: zorro_state

MOV HdlStmAssign@@ to body
HdlStmAssign
    HdlValueId: zorro_ram_read_data
    HdlValueId: data

UPD HdlStmAssign@@ to 
    UPD HdlValueId@@WAIT_READ to Z2_ENDCYCLE

UPD HdlStmIf@@ to 
    DEL list@@elifs from 

UPD HdlStmCase@@zorro_state to zorro_state
    DEL HdlStmCaseType@@CASE from zorro_state
    DEL HdlValueId@@zorro_state from zorro_state
    DEL HdlValueId@@WAIT_READ from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases
    DEL HdlValueId@@WAIT_WRITE3 from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases

DEL HdlStmAssign@@ from body
HdlStmAssign
    HdlValueInt: 1
    HdlValueId: z_ready

DEL HdlStmIf@@ from body


CommitId: d0ca65a1df20b80fb733cc3eacb1182a9e839d0a
switch from xrdy to ovr/dtack mechanism; fix last glitches with default_data = ffff
--- a/z2-minispartan/z2.v
+++ b/z2-minispartan/z2.v
@@ -1108,8 +1116,7 @@ always @(posedge z_sample_clk) begin
           zorro_write_capture_bytes <= {~znUDS_sync[1],~znLDS_sync[1]};
           zorro_write_capture_data <= data_in; //_sync;
           zorro_state <= WAIT_WRITE2;
-        end      
-        z_ready <= 1;
+        end
       end
     end
     

ParseResult:
UPD HdlStmIf@@ to 
    INS list@@elifs to 

UPD HdlStmCase@@zorro_state to zorro_state
    INS HdlStmCaseType@@CASE to zorro_state
    INS HdlValueId@@zorro_state to zorro_state
    INS tuple@@ to cases
    INS HdlValueId@@Z2_ENDCYCLE to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmIf@@ to 
    DEL list@@elifs from 

UPD HdlStmCase@@zorro_state to zorro_state
    DEL HdlStmCaseType@@CASE from zorro_state
    DEL HdlValueId@@zorro_state from zorro_state
    DEL HdlValueId@@WAIT_READ from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases
    DEL HdlValueId@@WAIT_WRITE3 from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases


CommitId: d0ca65a1df20b80fb733cc3eacb1182a9e839d0a
switch from xrdy to ovr/dtack mechanism; fix last glitches with default_data = ffff
--- a/z2-minispartan/z2.v
+++ b/z2-minispartan/z2.v
@@ -1118,7 +1125,7 @@ always @(posedge z_sample_clk) begin
       zorro_ram_write_bytes <= zorro_write_capture_bytes;
       zorro_ram_write_data <= zorro_write_capture_data;
       zorro_ram_write_request <= 1;
-      zorro_state <= WAIT_WRITE3;
+      zorro_state <= Z2_ENDCYCLE;
 
       /*stat_w1 <= stat_w1 + zorro_write_capture_bytes[1];
       stat_w2 <= stat_w2 + zorro_write_capture_bytes[0];

ParseResult:
UPD HdlStmIf@@ to 
    INS list@@elifs to 

UPD HdlStmCase@@zorro_state to zorro_state
    INS HdlStmCaseType@@CASE to zorro_state
    INS HdlValueId@@zorro_state to zorro_state
    INS tuple@@ to cases
    INS HdlValueId@@Z2_ENDCYCLE to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmIf@@ to 
    DEL list@@elifs from 

UPD HdlStmCase@@zorro_state to zorro_state
    DEL HdlStmCaseType@@CASE from zorro_state
    DEL HdlValueId@@zorro_state from zorro_state
    DEL HdlValueId@@WAIT_READ from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases
    DEL HdlValueId@@WAIT_WRITE3 from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases


CommitId: d0ca65a1df20b80fb733cc3eacb1182a9e839d0a
switch from xrdy to ovr/dtack mechanism; fix last glitches with default_data = ffff
--- a/z2-minispartan/z2.v
+++ b/z2-minispartan/z2.v
@@ -1126,10 +1133,23 @@ always @(posedge z_sample_clk) begin
       stat_w4 <= stat_w4 + last_addr[0];*/
     end
       
-    WAIT_WRITE3: begin
+    /*WAIT_WRITE3: begin
       if (!z2_addr_valid)
         zorro_state <= Z2_IDLE;
     end
+    */
+    
+    Z2_ENDCYCLE: begin
+      if (!z2_addr_valid) begin
+        dtack <= 0;
+        slaven <= 0;
+        dataout_enable <= 0;
+        dataout <= 0;
+        z_ovr <= 0;
+        zorro_state <= Z2_IDLE;
+      end else
+        dtack <= 1;
+    end
     
     // ----------------------------------------------------------------------------------
     

ParseResult:
UPD HdlStmIf@@ to 
    INS list@@elifs to 

UPD HdlStmCase@@zorro_state to zorro_state
    INS HdlStmCaseType@@CASE to zorro_state
    INS HdlValueId@@zorro_state to zorro_state
    INS tuple@@ to cases
    INS HdlValueId@@Z2_ENDCYCLE to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

INS HdlStmIf@@ to body

UPD HdlStmIf@@ to 
    MOV HdlOp@@NEG_LOG to 
    HdlOp: NEG_LOG
        list: ops
            HdlValueId: z2_addr_valid
    DEL list@@elifs from 

INS HdlStmAssign@@if_false to 
HdlStmAssign: if_false
    HdlValueInt: 1
    HdlValueId: dtack

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: dtack

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: slaven

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: z_ovr

UPD HdlStmIf@@ to 
    DEL list@@elifs from 

UPD HdlStmCase@@zorro_state to zorro_state
    DEL HdlStmCaseType@@CASE from zorro_state
    DEL HdlValueId@@zorro_state from zorro_state
    DEL HdlValueId@@WAIT_READ from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases
    DEL HdlValueId@@WAIT_WRITE3 from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases

DEL HdlStmAssign@@if_true from 
HdlStmAssign: if_true
    HdlValueId: Z2_IDLE
    HdlValueId: zorro_state

DEL HdlStmIf@@ from body


CommitId: d0ca65a1df20b80fb733cc3eacb1182a9e839d0a
switch from xrdy to ovr/dtack mechanism; fix last glitches with default_data = ffff
--- a/z2-minispartan/z2.v
+++ b/z2-minispartan/z2.v
@@ -1329,7 +1349,7 @@ always @(posedge z_sample_clk) begin
       if (ZORRO3) begin
         zorro_state <= Z3_ENDCYCLE;
       end else
-        zorro_state <= Z2_IDLE;
+        zorro_state <= Z2_ENDCYCLE;
       
       if (zaddr_regpart>='h600) begin
         palette_r[zaddr_regpart[8:1]] <= regdata_in[7:0];
ParseResult:
UPD HdlStmIf@@ to 
    INS list@@elifs to 

UPD HdlStmCase@@zorro_state to zorro_state
    INS HdlStmCaseType@@CASE to zorro_state
    INS HdlValueId@@zorro_state to zorro_state
    INS tuple@@ to cases
    INS HdlValueId@@Z2_ENDCYCLE to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmAssign@@if_false to if_false
    UPD HdlValueId@@Z2_IDLE to Z2_ENDCYCLE

UPD HdlStmIf@@ to 
    DEL list@@elifs from 

UPD HdlStmCase@@zorro_state to zorro_state
    DEL HdlStmCaseType@@CASE from zorro_state
    DEL HdlValueId@@zorro_state from zorro_state
    DEL HdlValueId@@WAIT_READ from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases
    DEL HdlValueId@@WAIT_WRITE3 from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases


CommitId: c17cb52d080625bc747a9496cb5ef3cb740d0e25
2 faulty rows to go
--- a/z2-minispartan/z2.v
+++ b/z2-minispartan/z2.v
@@ -321,7 +324,7 @@ parameter io_high = 24'hde0010;
 reg [7:0] fetch_delay = 0;
 reg [7:0] read_counter = 0;
 reg [7:0] fetch_delay_value = 'h04; // 8f0004
-reg [7:0] margin_x = 0; // 8f0006
+reg [7:0] margin_x = 4; // 8f0006
 
 reg [7:0] dataout_time = 'h02; // 8f000a
 reg [7:0] slaven_time = 'h03; // 8f000c

ParseResult:
UPD HdlIdDef@@margin_x to margin_x
    UPD HdlValueInt@@0 to 4


CommitId: c17cb52d080625bc747a9496cb5ef3cb740d0e25
2 faulty rows to go
--- a/z2-minispartan/z2.v
+++ b/z2-minispartan/z2.v
@@ -593,16 +596,18 @@ always @(posedge z_sample_clk) begin
             /*'h00: display_enable <= data_in[0];
             'h02: read_to_fetch_time <= data_in[7:0];
             'h04: fetch_delay_value <= data_in[7:0];
-            'h06: margin_x <= data_in[7:0];
             'h08: fetch_preroll <= data_in[7:0];
             'h0a: dataout_time <= data_in[7:0];
             'h0c: slaven_time <= data_in[7:0];
             'h0e: zready_time <= data_in[7:0];
             'h10: glitch_reg <= data_in[7:0];
-            'h12: glitchx_reg <= data_in[11:0];
             'h14: glitch_offset <= data_in[7:0];
             'h16: negx_margin <= data_in[7:0];*/
             
+            'h06: margin_x <= data_in[7:0];
+            'h12: glitchx_reg <= data_in[15:0];
+            'h14: ram_burst_col <= data_in[8:0];
+            
             // blitter regs
             'h20: blitter_x1 <= data_in[10:0];
             'h22: blitter_y1 <= data_in[10:0];

ParseResult:
UPD HdlStmCase@@{'__class__': 'HdlOp',  'fn': 'AND',  'ops': ['zaddr', {'__class__': 'HdlValueInt', 'base': 16, 'val': '0000ff'}]}  to {'__class__': 'HdlOp',  'fn': 'AND',  'ops': ['zaddr', {'__class__': 'HdlValueInt', 'base': 16, 'val': '0000ff'}]} 
    INS tuple@@ to cases
    tuple
        HdlValueInt: 06
        HdlStmAssign
            HdlOp: INDEX
                list: ops
                    HdlValueId: data_in
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 7
                            HdlValueInt: 0
            HdlValueId: margin_x
    INS tuple@@ to cases
    tuple
        HdlValueInt: 12
        HdlStmAssign
            HdlOp: INDEX
                list: ops
                    HdlValueId: data_in
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 15
                            HdlValueInt: 0
            HdlValueId: glitchx_reg
    INS tuple@@ to cases
    tuple
        HdlValueInt: 14
        HdlStmAssign
            HdlOp: INDEX
                list: ops
                    HdlValueId: data_in
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 8
                            HdlValueInt: 0
            HdlValueId: ram_burst_col


CommitId: c17cb52d080625bc747a9496cb5ef3cb740d0e25
2 faulty rows to go
--- a/z2-minispartan/z2.v
+++ b/z2-minispartan/z2.v
@@ -775,12 +781,12 @@ always @(posedge z_sample_clk) begin
       end else begin
         if (cmd_ready) begin
           ram_burst <= 1;
-          ram_addr  <= ((fetch_y << 11) | 504);
+          ram_addr  <= ((fetch_y << 11) | glitchx_reg);
           ram_byte_enable <= 'b11;
           ram_write <= 0;
           ram_arbiter_state <= RAM_BURST_ON;
           fetch_x <= 0;
-          fetch_x2 <= 504;
+          fetch_x2 <= glitchx_reg;
         end
       end
     end

ParseResult:
UPD HdlStmAssign@@ to 
    INS HdlValueId@@glitchx_reg to 

UPD HdlStmAssign@@ to 
    UPD HdlOp@@OR to OR
        INS HdlValueId@@glitchx_reg to ops

UPD HdlStmAssign@@ to 
    UPD HdlOp@@OR to OR
        DEL HdlValueInt@@504 from ops

UPD HdlStmAssign@@ to 
    DEL HdlValueInt@@504 from 


CommitId: c17cb52d080625bc747a9496cb5ef3cb740d0e25
2 faulty rows to go
--- a/z2-minispartan/z2.v
+++ b/z2-minispartan/z2.v
@@ -834,6 +840,27 @@ always @(posedge z_sample_clk) begin
         fetch_x <= 0;
         fetch_y <= counter_y;
         ram_arbiter_state <= RAM_READY;
+      end else if (zorro_ram_read_request) begin
+        // process read request
+        zorro_ram_read_done <= 0;
+        if (cmd_ready && data_out_queue_empty) begin
+          ram_write <= 0;
+          ram_addr <= zorro_ram_read_addr;
+          ram_byte_enable <= 'b11;
+          ram_enable <= 1;
+          ram_arbiter_state <= RAM_READING_ZORRO;
+        end else 
+          ram_enable <= 0;
+      end else if (zorro_ram_write_request && writeq_fill<max_fill) begin
+        // process write request
+        zorro_ram_write_done <= 1;
+        zorro_ram_write_request <= 0;
+        writeq_addr[writeq_fill][q_msb:0] <= zorro_ram_write_addr;
+        writeq_addr[writeq_fill][uds_bit] <= zorro_ram_write_bytes[1];
+        writeq_addr[writeq_fill][lds_bit] <= zorro_ram_write_bytes[0];
+        writeq_data[writeq_fill] <= zorro_ram_write_data;
+        
+        writeq_fill <= writeq_fill + 1;
       end else if (writeq_fill>0) begin
         // process write queue
         if (cmd_ready) begin

ParseResult:
UPD HdlStmIf@@ to 
    MOV tuple@@ to elifs
    tuple
        HdlValueId: zorro_ram_write_request
        HdlStmBlock: SEQ
            list: body
                HdlStmIf
                    HdlOp: LT
                        list: ops
                            HdlValueId: writeq_fill
                            HdlValueId: max_fill
                    HdlStmBlock: SEQ
                        list: body
                            HdlStmAssign
                                HdlValueInt: 1
                                HdlValueId: zorro_ram_write_done
                            HdlStmAssign
                                HdlValueInt: 0
                                HdlValueId: zorro_ram_write_request
                            HdlStmAssign
                                HdlValueId: zorro_ram_write_addr
                                HdlOp: INDEX
                                    list: ops
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: writeq_addr
                                                HdlValueId: writeq_fill
                                        HdlOp: DOWNTO
                                            list: ops
                                                HdlValueId: q_msb
                                                HdlValueInt: 0
                            HdlStmAssign
                                HdlOp: INDEX
                                    list: ops
                                        HdlValueId: zorro_ram_write_bytes
                                        HdlValueInt: 1
                                HdlOp: INDEX
                                    list: ops
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: writeq_addr
                                                HdlValueId: writeq_fill
                                        HdlValueId: uds_bit
                            HdlStmAssign
                                HdlOp: INDEX
                                    list: ops
                                        HdlValueId: zorro_ram_write_bytes
                                        HdlValueInt: 0
                                HdlOp: INDEX
                                    list: ops
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: writeq_addr
                                                HdlValueId: writeq_fill
                                        HdlValueId: lds_bit
                            HdlStmAssign
                                HdlValueId: zorro_ram_write_data
                                HdlOp: INDEX
                                    list: ops
                                        HdlValueId: writeq_data
                                        HdlValueId: writeq_fill
                            HdlStmAssign
                                HdlOp: ADD
                                    list: ops
                                        HdlValueId: writeq_fill
                                        HdlValueInt: 1
                                HdlValueId: writeq_fill
                    list: elifs
                    HdlStmBlock: SEQ
                        list: body
                            HdlStmAssign
                                HdlValueInt: 0
                                HdlValueId: zorro_ram_write_done
    MOV tuple@@ to elifs
    tuple
        HdlOp: GT
            list: ops
                HdlValueId: writeq_fill
                HdlValueInt: 0
        HdlStmBlock: SEQ
            list: body
                HdlStmIf
                    HdlValueId: cmd_ready
                    HdlStmBlock: SEQ
                        list: body
                            HdlStmIf
                                HdlOp: AND_LOG
                                    list: ops
                                        HdlOp: INDEX
                                            list: ops
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: writeq_addr
                                                        HdlOp: SUB
                                                            list: ops
                                                                HdlValueId: writeq_fill
                                                                HdlValueInt: 1
                                                HdlValueId: uds_bit
                                        HdlOp: NEG_LOG
                                            list: ops
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlValueId: writeq_addr
                                                                HdlOp: SUB
                                                                    list: ops
                                                                        HdlValueId: writeq_fill
                                                                        HdlValueInt: 1
                                                        HdlValueId: lds_bit
                                HdlStmAssign: if_true
                                    HdlValueInt: 10
                                    HdlValueId: ram_byte_enable
                                list: elifs
                                    tuple
                                        HdlOp: AND_LOG
                                            list: ops
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlValueId: writeq_addr
                                                                HdlOp: SUB
                                                                    list: ops
                                                                        HdlValueId: writeq_fill
                                                                        HdlValueInt: 1
                                                        HdlValueId: lds_bit
                                                HdlOp: NEG_LOG
                                                    list: ops
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlOp: INDEX
                                                                    list: ops
                                                                        HdlValueId: writeq_addr
                                                                        HdlOp: SUB
                                                                            list: ops
                                                                                HdlValueId: writeq_fill
                                                                                HdlValueInt: 1
                                                                HdlValueId: uds_bit
                                        HdlStmAssign
                                            HdlValueInt: 01
                                            HdlValueId: ram_byte_enable
                                HdlStmAssign: if_false
                                    HdlValueInt: 11
                                    HdlValueId: ram_byte_enable
                            HdlStmAssign
                                HdlOp: INDEX
                                    list: ops
                                        HdlValueId: writeq_data
                                        HdlOp: SUB
                                            list: ops
                                                HdlValueId: writeq_fill
                                                HdlValueInt: 1
                                HdlValueId: ram_data_in
                            HdlStmAssign
                                HdlOp: INDEX
                                    list: ops
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: writeq_addr
                                                HdlOp: SUB
                                                    list: ops
                                                        HdlValueId: writeq_fill
                                                        HdlValueInt: 1
                                        HdlOp: DOWNTO
                                            list: ops
                                                HdlValueId: q_msb
                                                HdlValueInt: 0
                                HdlValueId: ram_addr
                            HdlStmAssign
                                HdlValueInt: 1
                                HdlValueId: ram_write
                            HdlStmAssign
                                HdlValueInt: 1
                                HdlValueId: ram_enable
                            HdlStmAssign
                                HdlOp: SUB
                                    list: ops
                                        HdlValueId: writeq_fill
                                        HdlValueInt: 1
                                HdlValueId: writeq_fill
                    list: elifs
    MOV HdlValueId@@zorro_ram_write_request to 
    HdlValueId: zorro_ram_write_request
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 

UPD HdlStmIf@@ to 
    INS HdlOp@@AND_LOG to 
    UPD HdlOp@@AND_LOG to AND_LOG
        INS list@@ops to AND_LOG


CommitId: c17cb52d080625bc747a9496cb5ef3cb740d0e25
2 faulty rows to go
--- a/z2-minispartan/z2.v
+++ b/z2-minispartan/z2.v
@@ -901,7 +903,7 @@ always @(posedge z_sample_clk) begin
           blitter_curx <= 0;
           blitter_cury <= 0;
           blitter_enable <= 0;
-          ram_enable <= 0;
+          //ram_enable <= 0;
         end
       end
       /*end else if (blitter_enable==4 && data_out_ready) begin

ParseResult:
UPD HdlStmIf@@ to 
    MOV tuple@@ to elifs
    tuple
        HdlValueId: zorro_ram_write_request
        HdlStmBlock: SEQ
            list: body
                HdlStmIf
                    HdlOp: LT
                        list: ops
                            HdlValueId: writeq_fill
                            HdlValueId: max_fill
                    HdlStmBlock: SEQ
                        list: body
                            HdlStmAssign
                                HdlValueInt: 1
                                HdlValueId: zorro_ram_write_done
                            HdlStmAssign
                                HdlValueInt: 0
                                HdlValueId: zorro_ram_write_request
                            HdlStmAssign
                                HdlValueId: zorro_ram_write_addr
                                HdlOp: INDEX
                                    list: ops
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: writeq_addr
                                                HdlValueId: writeq_fill
                                        HdlOp: DOWNTO
                                            list: ops
                                                HdlValueId: q_msb
                                                HdlValueInt: 0
                            HdlStmAssign
                                HdlOp: INDEX
                                    list: ops
                                        HdlValueId: zorro_ram_write_bytes
                                        HdlValueInt: 1
                                HdlOp: INDEX
                                    list: ops
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: writeq_addr
                                                HdlValueId: writeq_fill
                                        HdlValueId: uds_bit
                            HdlStmAssign
                                HdlOp: INDEX
                                    list: ops
                                        HdlValueId: zorro_ram_write_bytes
                                        HdlValueInt: 0
                                HdlOp: INDEX
                                    list: ops
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: writeq_addr
                                                HdlValueId: writeq_fill
                                        HdlValueId: lds_bit
                            HdlStmAssign
                                HdlValueId: zorro_ram_write_data
                                HdlOp: INDEX
                                    list: ops
                                        HdlValueId: writeq_data
                                        HdlValueId: writeq_fill
                            HdlStmAssign
                                HdlOp: ADD
                                    list: ops
                                        HdlValueId: writeq_fill
                                        HdlValueInt: 1
                                HdlValueId: writeq_fill
                    list: elifs
                    HdlStmBlock: SEQ
                        list: body
                            HdlStmAssign
                                HdlValueInt: 0
                                HdlValueId: zorro_ram_write_done
    MOV tuple@@ to elifs
    tuple
        HdlOp: GT
            list: ops
                HdlValueId: writeq_fill
                HdlValueInt: 0
        HdlStmBlock: SEQ
            list: body
                HdlStmIf
                    HdlValueId: cmd_ready
                    HdlStmBlock: SEQ
                        list: body
                            HdlStmIf
                                HdlOp: AND_LOG
                                    list: ops
                                        HdlOp: INDEX
                                            list: ops
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: writeq_addr
                                                        HdlOp: SUB
                                                            list: ops
                                                                HdlValueId: writeq_fill
                                                                HdlValueInt: 1
                                                HdlValueId: uds_bit
                                        HdlOp: NEG_LOG
                                            list: ops
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlValueId: writeq_addr
                                                                HdlOp: SUB
                                                                    list: ops
                                                                        HdlValueId: writeq_fill
                                                                        HdlValueInt: 1
                                                        HdlValueId: lds_bit
                                HdlStmAssign: if_true
                                    HdlValueInt: 10
                                    HdlValueId: ram_byte_enable
                                list: elifs
                                    tuple
                                        HdlOp: AND_LOG
                                            list: ops
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlValueId: writeq_addr
                                                                HdlOp: SUB
                                                                    list: ops
                                                                        HdlValueId: writeq_fill
                                                                        HdlValueInt: 1
                                                        HdlValueId: lds_bit
                                                HdlOp: NEG_LOG
                                                    list: ops
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlOp: INDEX
                                                                    list: ops
                                                                        HdlValueId: writeq_addr
                                                                        HdlOp: SUB
                                                                            list: ops
                                                                                HdlValueId: writeq_fill
                                                                                HdlValueInt: 1
                                                                HdlValueId: uds_bit
                                        HdlStmAssign
                                            HdlValueInt: 01
                                            HdlValueId: ram_byte_enable
                                HdlStmAssign: if_false
                                    HdlValueInt: 11
                                    HdlValueId: ram_byte_enable
                            HdlStmAssign
                                HdlOp: INDEX
                                    list: ops
                                        HdlValueId: writeq_data
                                        HdlOp: SUB
                                            list: ops
                                                HdlValueId: writeq_fill
                                                HdlValueInt: 1
                                HdlValueId: ram_data_in
                            HdlStmAssign
                                HdlOp: INDEX
                                    list: ops
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: writeq_addr
                                                HdlOp: SUB
                                                    list: ops
                                                        HdlValueId: writeq_fill
                                                        HdlValueInt: 1
                                        HdlOp: DOWNTO
                                            list: ops
                                                HdlValueId: q_msb
                                                HdlValueInt: 0
                                HdlValueId: ram_addr
                            HdlStmAssign
                                HdlValueInt: 1
                                HdlValueId: ram_write
                            HdlStmAssign
                                HdlValueInt: 1
                                HdlValueId: ram_enable
                            HdlStmAssign
                                HdlOp: SUB
                                    list: ops
                                        HdlValueId: writeq_fill
                                        HdlValueInt: 1
                                HdlValueId: writeq_fill
                    list: elifs
    MOV HdlValueId@@zorro_ram_write_request to 
    HdlValueId: zorro_ram_write_request
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 

UPD HdlStmIf@@ to 
    INS HdlOp@@AND_LOG to 
    UPD HdlOp@@AND_LOG to AND_LOG
        INS list@@ops to AND_LOG


CommitId: c17cb52d080625bc747a9496cb5ef3cb740d0e25
2 faulty rows to go
--- a/z2-minispartan/z2.v
+++ b/z2-minispartan/z2.v
@@ -1008,7 +1010,7 @@ always @(posedge vga_clk) begin
   else if ((counter_x>=(screen_w+margin_x) || counter_x<margin_x) || counter_y>=screen_h)
     rgb <= 0;
   else begin
-    rgb <= fetch_buffer[counter_x];
+    rgb <= fetch_buffer[counter_x+margin_x];
   end
 
 end
ParseResult:
UPD HdlStmAssign@@ to 
    UPD HdlOp@@INDEX to INDEX
        INS HdlOp@@ADD to ops
        UPD HdlOp@@ADD to ADD
            INS list@@ops to ADD
            INS HdlValueId@@margin_x to ops

UPD HdlStmAssign@@ to 
    UPD HdlOp@@INDEX to INDEX
        MOV HdlValueId@@counter_x to ops
        HdlValueId: counter_x


CommitId: d8a08b1a977d4573a8d123f4d41137962d28fc71
beta release WIP. 32bit, fix some timing problems, introduce custom refresh, fix sd card drivers, sd card CRC, custom resolutions, fix z3 register read model
--- a/z2-minispartan/SDRAM_Controller_v.v
+++ b/z2-minispartan/SDRAM_Controller_v.v
@@ -134,7 +134,6 @@ module SDRAM_Controller_v (
    parameter s_open_in_6 = 5'b10110;
    parameter s_open_in_7 = 5'b10111;
    parameter s_open_in_8 = 5'b11000;
-   parameter s_refresh   = 5'b11001;
    reg [4:0] state = s_startup;
    
    // dual purpose counter, it counts up during the startup phase, then is used to trigger refreshes.

ParseResult:
DEL HdlIdDef@@s_refresh from params
HdlIdDef: s_refresh
    HdlValueInt: 11001
    HdlDirection: INTERNAL


CommitId: d8a08b1a977d4573a8d123f4d41137962d28fc71
beta release WIP. 32bit, fix some timing problems, introduce custom refresh, fix sd card drivers, sd card CRC, custom resolutions, fix z3 register read model
--- a/z2-minispartan/SDRAM_Controller_v.v
+++ b/z2-minispartan/SDRAM_Controller_v.v
@@ -350,10 +349,6 @@ always @(posedge clk)
               iob_address <= save_row;
               iob_bank    <= save_bank;
               //ready_for_new   <= 1'b1;
-           /*end else if (startup_refresh_count >= cycles_per_refresh) begin
-              // refresh when idle
-              startup_refresh_count <= 0;
-              state <= s_refresh;*/
            end else begin
               iob_command     <= CMD_NOP;
               iob_address     <= 13'b0000000000000;

ParseResult:
UPD HdlStmCase@@state to state
    DEL tuple@@ from cases
    tuple
        HdlValueId: s_refresh
        HdlStmBlock: SEQ
            list: body
                HdlStmAssign
                    HdlValueId: s_idle_in_6
                    HdlValueId: state
                HdlStmAssign
                    HdlValueId: CMD_REFRESH
                    HdlValueId: iob_command


CommitId: d8a08b1a977d4573a8d123f4d41137962d28fc71
beta release WIP. 32bit, fix some timing problems, introduce custom refresh, fix sd card drivers, sd card CRC, custom resolutions, fix z3 register read model
--- a/z2-minispartan/SDRAM_Controller_v.v
+++ b/z2-minispartan/SDRAM_Controller_v.v
@@ -514,10 +509,6 @@ always @(posedge clk)
                iob_command               <= CMD_PRECHARGE;
                iob_address[prefresh_cmd] <= 1'b0;
             end
-         s_refresh: begin
-               state                     <= s_idle_in_6;
-               iob_command               <= CMD_REFRESH;
-            end
          //-- We should never get here, but if we do then reset the memory
          default: begin 
                state                 <= s_startup;
ParseResult:
UPD HdlStmCase@@state to state
    DEL tuple@@ from cases
    tuple
        HdlValueId: s_refresh
        HdlStmBlock: SEQ
            list: body
                HdlStmAssign
                    HdlValueId: s_idle_in_6
                    HdlValueId: state
                HdlStmAssign
                    HdlValueId: CMD_REFRESH
                    HdlValueId: iob_command


CommitId: 09865f9ccf2d55185c57fba4bbd7b402ecec4074
fix SD card driver; much better timing
--- a/z2-minispartan/z2.v
+++ b/z2-minispartan/z2.v
@@ -186,7 +186,7 @@ reg [4:0] row_pitch_shift = 11; // 2048 = 1<<11
 reg [15:0] refresh_counter = 0;
 reg [23:0] refresh_addr = 0;
 reg [15:0] refresh_time = 128;
-reg [4:0] ram_refresh_lines = 1;
+reg [4:0] ram_refresh_lines = 0;
 reg display_in_refresh_lines = 0;
 
 // SDRAM

ParseResult:
UPD HdlIdDef@@ram_refresh_lines to ram_refresh_lines
    UPD HdlValueInt@@1 to 0


CommitId: 09865f9ccf2d55185c57fba4bbd7b402ecec4074
fix SD card driver; much better timing
--- a/z2-minispartan/z2.v
+++ b/z2-minispartan/z2.v
@@ -539,9 +539,9 @@ always @(posedge z_sample_clk) begin
   
   // sample z3addr on falling edge of /FCS
   if (znFCS_sync[2]==1 && znFCS_sync[1]==0) begin
-    z3addr <= {zD[15:8],zA[22:1],2'b00};
+    z3addr2 <= {zD[15:8],zA[22:1],2'b00};
   end
-  //z3addr <= z3addr2;
+  z3addr <= z3addr2;
   z3_mapped_addr <= ((z3addr)&'h01ffffff)>>1;
   
   datastrobe_synced <= ((znUDS_sync[2]==znUDS_sync[1]) && (znLDS_sync[2]==znLDS_sync[1]) 

ParseResult:
INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueId: z3addr2
    HdlValueId: z3addr


CommitId: 09865f9ccf2d55185c57fba4bbd7b402ecec4074
fix SD card driver; much better timing
--- a/z2-minispartan/z2.v
+++ b/z2-minispartan/z2.v
@@ -1359,6 +1360,14 @@ always @(posedge z_sample_clk) begin
         ram_arbiter_state <= RAM_ROW_FETCHED;
     end
     
+    RAM_REFRESH_PRE: begin
+      ram_enable <= 0;
+      refresh_counter <= 0;
+      if (data_out_queue_empty) begin
+        ram_arbiter_state <= RAM_REFRESH;
+      end
+    end
+    
     RAM_REFRESH: begin
       if (refresh_counter > refresh_time) begin
         ram_enable <= 0;

ParseResult:
UPD HdlStmCase@@ram_arbiter_state to ram_arbiter_state
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

INS HdlStmIf@@ to body

UPD HdlStmIf@@ to 
    INS HdlValueId@@data_out_queue_empty to 
    INS list@@elifs to 


CommitId: 09865f9ccf2d55185c57fba4bbd7b402ecec4074
fix SD card driver; much better timing
--- a/z2-minispartan/z2.v
+++ b/z2-minispartan/z2.v
@@ -1411,6 +1420,8 @@ always @(posedge z_sample_clk) begin
         ram_arbiter_state <= RAM_READY;
       end else if (/*counter_x < safe_x1 || */counter_x > safe_x2) begin
         // do nothing if not in safe area
+      end else if (display_in_refresh_lines && cmd_ready) begin
+        ram_arbiter_state <= RAM_REFRESH_PRE;
         
       // BLITTER ----------------------------------------------------------------
       end else if (blitter_enable==1 && cmd_ready) begin

ParseResult:
UPD HdlStmIf@@ to 
    MOV tuple@@ to elifs
    tuple
        HdlOp: AND_LOG
            list: ops
                HdlOp: AND_LOG
                    list: ops
                        HdlValueId: display_in_refresh_lines
                        HdlValueId: data_out_queue_empty
                HdlValueId: cmd_ready
        HdlStmBlock: SEQ
            list: body
                HdlStmAssign
                    HdlValueId: RAM_REFRESH
                    HdlValueId: ram_arbiter_state
                HdlStmAssign
                    HdlValueInt: 0
                    HdlValueId: refresh_counter
    UPD HdlOp@@AND_LOG to AND_LOG
        UPD HdlOp@@AND_LOG to AND_LOG
            UPD HdlValueId@@display_in_refresh_lines to RAM_REFRESH_PRE
            MOV HdlValueId@@display_in_refresh_lines to ops
            HdlValueId: display_in_refresh_lines
            DEL HdlValueId@@data_out_queue_empty from ops
            DEL list@@ops from AND_LOG
        DEL HdlOp@@AND_LOG from ops
        DEL HdlValueId@@cmd_ready from ops
        DEL list@@ops from AND_LOG
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlStmAssign
                HdlValueId: RAM_REFRESH
                HdlValueId: ram_arbiter_state
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: refresh_counter
    DEL HdlOp@@AND_LOG from 

UPD HdlStmCase@@ram_arbiter_state to ram_arbiter_state
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmIf@@ to 
    INS tuple@@ to elifs
    tuple
        HdlOp: AND_LOG
            list: ops
                HdlValueId: display_in_refresh_lines
                HdlValueId: cmd_ready
        HdlStmBlock: SEQ
            list: body
                HdlStmAssign
                    HdlValueId: RAM_REFRESH_PRE
                    HdlValueId: ram_arbiter_state


CommitId: 09865f9ccf2d55185c57fba4bbd7b402ecec4074
fix SD card driver; much better timing
--- a/z2-minispartan/z2.v
+++ b/z2-minispartan/z2.v
@@ -1518,9 +1529,6 @@ always @(posedge z_sample_clk) begin
         ram_enable  <= 1;
         
         ram_arbiter_state <= RAM_WRITING_ZORRO;
-      end else if (display_in_refresh_lines && data_out_queue_empty && cmd_ready) begin
-        ram_arbiter_state <= RAM_REFRESH;
-        refresh_counter <= 0;
       end
       
     RAM_READING_BLIT: begin
ParseResult:
UPD HdlStmIf@@ to 
    MOV tuple@@ to elifs
    tuple
        HdlOp: AND_LOG
            list: ops
                HdlOp: AND_LOG
                    list: ops
                        HdlValueId: display_in_refresh_lines
                        HdlValueId: data_out_queue_empty
                HdlValueId: cmd_ready
        HdlStmBlock: SEQ
            list: body
                HdlStmAssign
                    HdlValueId: RAM_REFRESH
                    HdlValueId: ram_arbiter_state
                HdlStmAssign
                    HdlValueInt: 0
                    HdlValueId: refresh_counter
    UPD HdlOp@@AND_LOG to AND_LOG
        UPD HdlOp@@AND_LOG to AND_LOG
            UPD HdlValueId@@display_in_refresh_lines to RAM_REFRESH_PRE
            MOV HdlValueId@@display_in_refresh_lines to ops
            HdlValueId: display_in_refresh_lines
            DEL HdlValueId@@data_out_queue_empty from ops
            DEL list@@ops from AND_LOG
        DEL HdlOp@@AND_LOG from ops
        DEL HdlValueId@@cmd_ready from ops
        DEL list@@ops from AND_LOG
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlStmAssign
                HdlValueId: RAM_REFRESH
                HdlValueId: ram_arbiter_state
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: refresh_counter
    DEL HdlOp@@AND_LOG from 

UPD HdlStmCase@@ram_arbiter_state to ram_arbiter_state
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

MOV HdlStmAssign@@ to body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: refresh_counter

UPD HdlStmIf@@ to 
    INS tuple@@ to elifs
    tuple
        HdlOp: AND_LOG
            list: ops
                HdlValueId: display_in_refresh_lines
                HdlValueId: cmd_ready
        HdlStmBlock: SEQ
            list: body
                HdlStmAssign
                    HdlValueId: RAM_REFRESH_PRE
                    HdlValueId: ram_arbiter_state


CommitId: 822d5f88efe8e95def028907c5d04c7b6ca22391
introduce 2-word burst in ram controller; accidentally fix long-standing bug; stable hi-res capture
--- a/z2-minispartan/z2.v
+++ b/z2-minispartan/z2.v
@@ -180,8 +180,10 @@ wire data_out_queue_empty;
 wire [4:0] sdram_state;
 wire sdram_btb;
 reg  [15:0] ram_data_in;
+reg  [15:0] ram_data_in_next;
 reg  ram_write = 0;
 reg  ram_burst = 0;
+reg  ram_write_burst = 0;
 reg  [1:0]  ram_byte_enable;
 
 reg  [15:0] fetch_buffer [0:1999];

ParseResult:
INS HdlIdDef@@ram_write_burst to objs
HdlIdDef: ram_write_burst
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
    HdlValueInt: 0
    HdlDirection: INTERNAL


CommitId: 822d5f88efe8e95def028907c5d04c7b6ca22391
introduce 2-word burst in ram controller; accidentally fix long-standing bug; stable hi-res capture
--- a/z2-minispartan/z2.v
+++ b/z2-minispartan/z2.v
@@ -394,7 +398,8 @@ reg [7:0] sprite_palette_b [0:3];*/
 // 1 == 16 bit
 // 2 == 32 bit
 reg [2:0] colormode = 3;
-reg [1:0] scalemode = 0;
+reg [1:0] scalemode_h = 0;
+reg [1:0] scalemode_v = 0;
 reg [1:0] counter_scale = 0;
 
 reg [15:0] REVISION = 'h0004;

ParseResult:
INS HdlIdDef@@scalemode_h to objs
HdlIdDef: scalemode_h
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 1
                    HdlValueInt: 0
    HdlValueInt: 0
    HdlDirection: INTERNAL

UPD HdlIdDef@@scalemode to scalemode_v


CommitId: 822d5f88efe8e95def028907c5d04c7b6ca22391
introduce 2-word burst in ram controller; accidentally fix long-standing bug; stable hi-res capture
--- a/z2-minispartan/z2.v
+++ b/z2-minispartan/z2.v
@@ -538,6 +543,7 @@ reg z3_fcs_state = 0;
 // video capture regs
 reg videocap_mode = 0;
 reg [9:0] videocap_x = 0;
+reg [9:0] videocap_x2 = 0;
 reg [9:0] videocap_y = 0;
 reg [9:0] videocap_y2 = 0;
 reg [9:0] videocap_y3 = 0;

ParseResult:
INS HdlIdDef@@videocap_save_next_addr to objs
HdlIdDef: videocap_save_next_addr
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 23
                    HdlValueInt: 0
    HdlValueInt: 0
    HdlDirection: INTERNAL

UPD HdlIdDef@@videocap_height to videocap_height
    UPD HdlValueInt@@105 to 117


CommitId: 822d5f88efe8e95def028907c5d04c7b6ca22391
introduce 2-word burst in ram controller; accidentally fix long-standing bug; stable hi-res capture
--- a/z2-minispartan/z2.v
+++ b/z2-minispartan/z2.v
@@ -546,17 +552,19 @@ reg [23:0] videocap_addr = 0;
 reg [15:0] videocap_data = 0;
 reg [7:0] videocap_porch = 'h28;
 reg [9:0] videocap_hs = 0;
+reg [9:0] videocap_hs2 = 0;
 reg [9:0] videocap_vs = 0;
 reg [2:0] videocap_state = 0;
 reg [9:0] videocap_save_x = 0;
+reg [9:0] videocap_save_x2 = 0;
 reg [9:0] videocap_line_saved_y = 0;
-reg [9:0] videocap_xsync = 100;
+reg  [23:0] videocap_save_next_addr = 0;
 reg videocap_line_saved = 0;
 
 reg [7:0] vscount = 0;
 reg [7:0] vsmax = 0;
 reg [9:0] videocap_prex = 'h41;
-reg [8:0] videocap_height = 'h105;
+reg [8:0] videocap_height = 'h117;
 reg vsynced = 0;
 
 reg vcbuf=0;

ParseResult:
INS HdlIdDef@@videocap_buf2 to objs
HdlIdDef: videocap_buf2
    HdlOp: INDEX
        list: ops
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 15
                            HdlValueInt: 0
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 0
                    HdlValueId: VCAPW
    HdlDirection: INTERNAL

INS HdlIdDef@@videocap_rgbin2 to objs
HdlIdDef: videocap_rgbin2
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 15
                    HdlValueInt: 0
    HdlValueInt: 0
    HdlDirection: INTERNAL

INS HdlIdDef@@videocap_hires to objs
HdlIdDef: videocap_hires
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
    HdlValueInt: 1
    HdlDirection: INTERNAL

INS HdlIdDef@@videocap_resstat to objs
HdlIdDef: videocap_resstat
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 9
                    HdlValueInt: 0
    HdlValueInt: 0
    HdlDirection: INTERNAL

INS HdlIdDef@@videocap_hires_lines to objs
HdlIdDef: videocap_hires_lines
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 9
                    HdlValueInt: 0
    HdlValueInt: 0
    HdlDirection: INTERNAL

INS HdlIdDef@@videocap_thry to objs
HdlIdDef: videocap_thry
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 7
                    HdlValueInt: 0
    HdlValueInt: 10
    HdlDirection: INTERNAL

INS HdlIdDef@@videocap_thrx to objs
HdlIdDef: videocap_thrx
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 7
                    HdlValueInt: 0
    HdlValueInt: 10
    HdlDirection: INTERNAL

UPD HdlStmAssign@@ to 
    MOV HdlOp@@CONCAT to 
    HdlOp: CONCAT
        list: ops
            HdlOp: CONCAT
                list: ops
                    HdlOp: CONCAT
                        list: ops
                            HdlOp: CONCAT
                                list: ops
                                    HdlOp: CONCAT
                                        list: ops
                                            HdlOp: CONCAT
                                                list: ops
                                                    HdlOp: CONCAT
                                                        list: ops
                                                            HdlOp: CONCAT
                                                                list: ops
                                                                    HdlOp: CONCAT
                                                                        list: ops
                                                                            HdlOp: CONCAT
                                                                                list: ops
                                                                                    HdlOp: CONCAT
                                                                                        list: ops
                                                                                            HdlOp: CONCAT
                                                                                                list: ops
                                                                                                    HdlOp: CONCAT
                                                                                                        list: ops
                                                                                                            HdlOp: CONCAT
                                                                                                                list: ops
                                                                                                                    HdlValueId: videoR3
                                                                                                                    HdlValueId: videoR2
                                                                                                            HdlValueId: videoR1
                                                                                                    HdlValueId: videoR0
                                                                                            HdlValueInt: 00
                                                                                    HdlValueId: videoG3
                                                                            HdlValueId: videoG2
                                                                    HdlValueId: videoG1
                                                            HdlValueId: videoG0
                                                    HdlValueInt: 00
                                            HdlValueId: videoB3
                                    HdlValueId: videoB2
                            HdlValueId: videoB1
                    HdlValueId: videoB0
            HdlValueInt: 00
    UPD HdlOp@@CONCAT to CONCAT
        UPD HdlOp@@CONCAT to CONCAT
            UPD HdlValueId@@videoB0 to videoB1
            UPD HdlOp@@CONCAT to CONCAT
                UPD HdlValueId@@videoB1 to videoB2
                UPD HdlOp@@CONCAT to CONCAT
                    UPD HdlValueId@@videoB2 to videoB3
                    UPD HdlOp@@CONCAT to CONCAT
                        UPD HdlValueId@@videoB3 to videoG2
                        UPD HdlOp@@CONCAT to CONCAT
                            UPD HdlOp@@CONCAT to CONCAT
                                UPD HdlOp@@CONCAT to CONCAT
                                    UPD HdlOp@@CONCAT to CONCAT
                                        UPD HdlOp@@CONCAT to CONCAT
                                            UPD HdlOp@@CONCAT to CONCAT
                                                DEL HdlValueInt@@00 from ops
                            DEL HdlValueInt@@00 from ops
        DEL HdlValueInt@@00 from ops


CommitId: 822d5f88efe8e95def028907c5d04c7b6ca22391
introduce 2-word burst in ram controller; accidentally fix long-standing bug; stable hi-res capture
--- a/z2-minispartan/z2.v
+++ b/z2-minispartan/z2.v
@@ -564,18 +572,26 @@ reg vcbuf=0;
 parameter VCAPW = 399;
 
 reg [15:0] videocap_buf [0:VCAPW];
-//reg [15:0] videocap_buf2 [0:VCAPW];
+reg [15:0] videocap_buf2 [0:VCAPW];
 
 reg [15:0] videocap_rgbin = 0;
+reg [15:0] videocap_rgbin2 = 0;
+
+reg videocap_hires = 1;
+reg [9:0] videocap_resstat = 0;
+reg [9:0] videocap_hires_lines = 0;
+
+reg [7:0] videocap_thry = 10;
+reg [7:0] videocap_thrx = 10;
 
 // CAPTURE
 always @(posedge zE7M) begin
   videocap_hs <= {videocap_hs[8:0], videoHS};
   videocap_vs <= {videocap_vs[8:0], videoVS};
   
-  videocap_rgbin <= {videoR3,videoR2,videoR1,videoR0,1'b00, 
-                    videoG3,videoG2,videoG1,videoG0,2'b00,
-                    videoB3,videoB2,videoB1,videoB0,1'b00};
+  videocap_rgbin <= {videoR3,videoR2,videoR1,videoR0,videoR3, 
+                    videoG3,videoG2,videoG1,videoG0,videoG3,videoG2,
+                    videoB3,videoB2,videoB1,videoB0,videoB3};
   
   if (!videocap_mode) begin
     // do nothing

ParseResult:
INS HdlStmProcess@@ to objs
HdlStmProcess
    list: sensitivity
        HdlOp: FALLING
            list: ops
                HdlValueId: zE7M
    HdlStmBlock: SEQ
        list: body
            HdlStmAssign
                HdlOp: CONCAT
                    list: ops
                        HdlOp: CONCAT
                            list: ops
                                HdlOp: CONCAT
                                    list: ops
                                        HdlOp: CONCAT
                                            list: ops
                                                HdlOp: CONCAT
                                                    list: ops
                                                        HdlOp: CONCAT
                                                            list: ops
                                                                HdlOp: CONCAT
                                                                    list: ops
                                                                        HdlOp: CONCAT
                                                                            list: ops
                                                                                HdlOp: CONCAT
                                                                                    list: ops
                                                                                        HdlOp: CONCAT
                                                                                            list: ops
                                                                                                HdlOp: CONCAT
                                                                                                    list: ops
                                                                                                        HdlOp: CONCAT
                                                                                                            list: ops
                                                                                                                HdlOp: CONCAT
                                                                                                                    list: ops
                                                                                                                        HdlOp: CONCAT
                                                                                                                            list: ops
                                                                                                                                HdlOp: CONCAT
                                                                                                                                    list: ops
                                                                                                                                        HdlValueId: videoR3
                                                                                                                                        HdlValueId: videoR2
                                                                                                                                HdlValueId: videoR1
                                                                                                                        HdlValueId: videoR0
                                                                                                                HdlValueId: videoR3
                                                                                                        HdlValueId: videoG3
                                                                                                HdlValueId: videoG2
                                                                                        HdlValueId: videoG1
                                                                                HdlValueId: videoG0
                                                                        HdlValueId: videoG3
                                                                HdlValueId: videoG2
                                                        HdlValueId: videoB3
                                                HdlValueId: videoB2
                                        HdlValueId: videoB1
                                HdlValueId: videoB0
                        HdlValueId: videoB3
                HdlValueId: videocap_rgbin2
            HdlStmIf
                HdlOp: NEG_LOG
                    list: ops
                        HdlValueId: videocap_mode
                HdlStmBlock: SEQ
                    list: body
                list: elifs
                    tuple
                        HdlOp: EQ
                            list: ops
                                HdlOp: INDEX
                                    list: ops
                                        HdlValueId: videocap_hs
                                        HdlOp: DOWNTO
                                            list: ops
                                                HdlValueInt: 6
                                                HdlValueInt: 1
                                HdlValueInt: 000111
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmAssign
                                    HdlValueInt: 0
                                    HdlValueId: videocap_x2
                    tuple
                        HdlOp: LT
                            list: ops
                                HdlValueId: videocap_x2
                                HdlValueId: VCAPW
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmAssign
                                    HdlOp: ADD
                                        list: ops
                                            HdlValueId: videocap_x2
                                            HdlValueInt: 1
                                    HdlValueId: videocap_x2
                                HdlStmAssign
                                    HdlValueId: videocap_rgbin2
                                    HdlOp: INDEX
                                        list: ops
                                            HdlValueId: videocap_buf2
                                            HdlOp: SUB
                                                list: ops
                                                    HdlValueId: videocap_x2
                                                    HdlValueId: videocap_prex

UPD HdlStmAssign@@ to 
    INS HdlOp@@CONCAT to 
    UPD HdlOp@@CONCAT to CONCAT
        INS list@@ops to CONCAT
        INS HdlValueId@@videoB3 to ops
        UPD HdlOp@@CONCAT to CONCAT
            INS HdlValueId@@videoB0 to ops
            UPD HdlOp@@CONCAT to CONCAT
                UPD HdlOp@@CONCAT to CONCAT
                    UPD HdlOp@@CONCAT to CONCAT
                        UPD HdlOp@@CONCAT to CONCAT
                            UPD HdlOp@@CONCAT to CONCAT
                                INS HdlValueId@@videoG3 to ops
                                UPD HdlOp@@CONCAT to CONCAT
                                    UPD HdlOp@@CONCAT to CONCAT
                                        UPD HdlOp@@CONCAT to CONCAT
                                            UPD HdlOp@@CONCAT to CONCAT
                                                UPD HdlOp@@CONCAT to CONCAT
                                                    INS HdlValueId@@videoR3 to ops


CommitId: 822d5f88efe8e95def028907c5d04c7b6ca22391
introduce 2-word burst in ram controller; accidentally fix long-standing bug; stable hi-res capture
--- a/z2-minispartan/z2.v
+++ b/z2-minispartan/z2.v
@@ -789,7 +822,7 @@ always @(posedge z_sample_clk) begin
     RESET: begin
       vga_clk_sel  <= 1;
       
-      screen_w     <= 'h150; 
+      screen_w     <= 'h280;
       h_rez        <= 640;
       h_sync_start <= 832;
       h_sync_end   <= 896;

ParseResult:
UPD HdlStmIf@@ to 
    INS list@@elifs to 

UPD HdlStmCase@@zorro_state to zorro_state
    INS HdlStmCaseType@@CASE to zorro_state
    INS HdlValueId@@zorro_state to zorro_state

UPD HdlStmIf@@ to 
    DEL list@@elifs from 

UPD HdlStmCase@@zorro_state to zorro_state
    DEL HdlStmCaseType@@CASE from zorro_state
    DEL HdlValueId@@zorro_state from zorro_state


CommitId: 822d5f88efe8e95def028907c5d04c7b6ca22391
introduce 2-word burst in ram controller; accidentally fix long-standing bug; stable hi-res capture
--- a/z2-minispartan/z2.v
+++ b/z2-minispartan/z2.v
@@ -821,7 +854,8 @@ always @(posedge z_sample_clk) begin
       z_confout <= 0;
       z3_confdone <= 0;
       
-      scalemode <= 1;
+      scalemode_h <= 0;
+      scalemode_v <= 1;
       colormode <= 1;
       dataout_enable <= 0;
       dataout <= 0;

ParseResult:
UPD HdlStmIf@@ to 
    INS list@@elifs to 

UPD HdlStmCase@@zorro_state to zorro_state
    INS HdlStmCaseType@@CASE to zorro_state
    INS HdlValueId@@zorro_state to zorro_state

UPD HdlStmIf@@ to 
    DEL list@@elifs from 

UPD HdlStmCase@@zorro_state to zorro_state
    DEL HdlStmCaseType@@CASE from zorro_state
    DEL HdlValueId@@zorro_state from zorro_state


CommitId: 822d5f88efe8e95def028907c5d04c7b6ca22391
introduce 2-word burst in ram controller; accidentally fix long-standing bug; stable hi-res capture
--- a/z2-minispartan/z2.v
+++ b/z2-minispartan/z2.v
@@ -834,7 +868,7 @@ always @(posedge z_sample_clk) begin
       z_ovr <= 0;
       
       blitter_base <= 0;
-      pan_ptr <= 'h5000; // capture vertical offset
+      pan_ptr <= 'ha000; // capture vertical offset
       burst_enabled <= 1;
       margin_x <= 8;
       

ParseResult:
UPD HdlStmIf@@ to 
    INS list@@elifs to 

UPD HdlStmCase@@zorro_state to zorro_state
    INS HdlStmCaseType@@CASE to zorro_state
    INS HdlValueId@@zorro_state to zorro_state

UPD HdlStmIf@@ to 
    DEL list@@elifs from 

UPD HdlStmCase@@zorro_state to zorro_state
    DEL HdlStmCaseType@@CASE from zorro_state
    DEL HdlValueId@@zorro_state from zorro_state


CommitId: 822d5f88efe8e95def028907c5d04c7b6ca22391
introduce 2-word burst in ram controller; accidentally fix long-standing bug; stable hi-res capture
--- a/z2-minispartan/z2.v
+++ b/z2-minispartan/z2.v
@@ -1446,6 +1480,7 @@ always @(posedge z_sample_clk) begin
               z3_regread_lo <= {sd_data_out,8'h00}; end // 'h6e
         
         'h70: begin z3_regread_hi <= sd_error; z3_regread_lo <= 0; end
+        
         /*'h72: data_z3_low16 <= sd_clkdiv;*/
      
 `ifdef TRACE

ParseResult:
UPD HdlStmIf@@ to 
    INS list@@elifs to 

UPD HdlStmCase@@zorro_state to zorro_state
    INS HdlStmCaseType@@CASE to zorro_state
    INS HdlValueId@@zorro_state to zorro_state

UPD HdlStmCase@@zaddr_regpart to zaddr_regpart
    INS tuple@@ to cases
    tuple
        HdlValueInt: 4a
        HdlStmAssign
            HdlOp: INDEX
                list: ops
                    HdlValueId: regdata_in
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 7
                            HdlValueInt: 0
            HdlValueId: videocap_thry
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmIf@@ to 
    DEL list@@elifs from 

UPD HdlStmCase@@zorro_state to zorro_state
    DEL HdlStmCaseType@@CASE from zorro_state
    DEL HdlValueId@@zorro_state from zorro_state


CommitId: 822d5f88efe8e95def028907c5d04c7b6ca22391
introduce 2-word burst in ram controller; accidentally fix long-standing bug; stable hi-res capture
--- a/z2-minispartan/z2.v
+++ b/z2-minispartan/z2.v
@@ -1479,7 +1514,10 @@ always @(posedge z_sample_clk) begin
       end else
       case (zaddr_regpart)
         'h02: screen_w <= regdata_in[11:0];
-        'h04: scalemode <= regdata_in[1:0];
+        'h04: begin
+          scalemode_h <= regdata_in[1:0];
+          scalemode_v <= regdata_in[3:2];
+        end
         'h06: begin
           screen_w <= regdata_in[11:0];
           h_rez    <= regdata_in[11:0];

ParseResult:
UPD HdlStmIf@@ to 
    INS list@@elifs to 

UPD HdlStmCase@@zorro_state to zorro_state
    INS HdlStmCaseType@@CASE to zorro_state
    INS HdlValueId@@zorro_state to zorro_state

UPD HdlStmCase@@zaddr_regpart to zaddr_regpart
    INS tuple@@ to cases
    tuple
        HdlValueInt: 4a
        HdlStmAssign
            HdlOp: INDEX
                list: ops
                    HdlValueId: regdata_in
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 7
                            HdlValueInt: 0
            HdlValueId: videocap_thry
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmAssign@@ to 
    UPD HdlValueId@@videocap_xsync to videocap_thrx
    UPD HdlOp@@INDEX to INDEX
        UPD HdlOp@@DOWNTO to DOWNTO
            UPD HdlValueInt@@9 to 7

UPD HdlStmIf@@ to 
    DEL list@@elifs from 

UPD HdlStmCase@@zorro_state to zorro_state
    DEL HdlStmCaseType@@CASE from zorro_state
    DEL HdlValueId@@zorro_state from zorro_state


CommitId: 822d5f88efe8e95def028907c5d04c7b6ca22391
introduce 2-word burst in ram controller; accidentally fix long-standing bug; stable hi-res capture
--- a/z2-minispartan/z2.v
+++ b/z2-minispartan/z2.v
@@ -1548,9 +1586,10 @@ always @(posedge z_sample_clk) begin
         
         'h48: colormode <= regdata_in[2:0];
         
+        'h4a: videocap_thry <= regdata_in[7:0];
         'h4e: videocap_mode <= regdata_in[0];
         
-        'h50: videocap_xsync <= regdata_in[9:0];
+        'h50: videocap_thrx <= regdata_in[7:0];
         'h52: videocap_height <= regdata_in[8:0];
         'h54: videocap_porch <= regdata_in[7:0];
         'h56: videocap_prex <= regdata_in[9:0];

ParseResult:
UPD HdlStmCase@@ram_arbiter_state to ram_arbiter_state
    DEL tuple@@ from cases
    tuple
        HdlValueId: RAM_CAP_WRITE
        HdlStmBlock: SEQ
            list: body
                HdlStmAssign
                    HdlValueInt: 0
                    HdlValueId: ram_enable
                HdlStmAssign
                    HdlValueInt: 0
                    HdlValueId: ram_write
                HdlStmAssign
                    HdlValueId: RAM_ROW_FETCHED
                    HdlValueId: ram_arbiter_state


CommitId: 822d5f88efe8e95def028907c5d04c7b6ca22391
introduce 2-word burst in ram controller; accidentally fix long-standing bug; stable hi-res capture
--- a/z2-minispartan/z2.v
+++ b/z2-minispartan/z2.v
@@ -1593,7 +1632,16 @@ always @(posedge z_sample_clk) begin
       videocap_line_saved <= 0;
       videocap_line_saved_y <= videocap_y2;
       videocap_save_x <= 0;
+      videocap_save_x2 <= 0; //vcbuf;
       videocap_addr <= (videocap_y2<<row_pitch_shift);
+      
+      /*if (videocap_hires) begin
+        scalemode_h <= 0;
+        screen_w    <= 'h280;
+      end else begin
+        scalemode_h <= 1;
+        screen_w    <= 'h140;
+      end*/
     end
   end
 

ParseResult:
UPD HdlStmIf@@ to 
    MOV HdlOp@@AND_LOG to 
    HdlOp: AND_LOG
        list: ops
            HdlOp: NEG_LOG
                list: ops
                    HdlValueId: videocap_line_saved
            HdlValueId: cmd_ready
    UPD HdlOp@@AND_LOG to AND_LOG
        UPD HdlValueId@@cmd_ready to videocap_mode

UPD HdlStmCase@@ram_arbiter_state to ram_arbiter_state
    DEL tuple@@ from cases
    tuple
        HdlValueId: RAM_CAP_WRITE
        HdlStmBlock: SEQ
            list: body
                HdlStmAssign
                    HdlValueInt: 0
                    HdlValueId: ram_enable
                HdlStmAssign
                    HdlValueInt: 0
                    HdlValueId: ram_write
                HdlStmAssign
                    HdlValueId: RAM_ROW_FETCHED
                    HdlValueId: ram_arbiter_state


CommitId: 822d5f88efe8e95def028907c5d04c7b6ca22391
introduce 2-word burst in ram controller; accidentally fix long-standing bug; stable hi-res capture
--- a/z2-minispartan/z2.v
+++ b/z2-minispartan/z2.v
@@ -1608,6 +1656,8 @@ always @(posedge z_sample_clk) begin
       if (row_fetched) begin
         ram_enable <= 0;
         ram_burst <= 0;
+        // 2-word burst for faster videocap
+        ram_write_burst <= videocap_mode;
         if (data_out_queue_empty)
           ram_arbiter_state <= RAM_BURST_OFF;
       end else begin

ParseResult:
UPD HdlStmIf@@ to 
    MOV HdlOp@@AND_LOG to 
    HdlOp: AND_LOG
        list: ops
            HdlOp: NEG_LOG
                list: ops
                    HdlValueId: videocap_line_saved
            HdlValueId: cmd_ready
    UPD HdlOp@@AND_LOG to AND_LOG
        UPD HdlValueId@@cmd_ready to videocap_mode

UPD HdlStmCase@@ram_arbiter_state to ram_arbiter_state
    DEL tuple@@ from cases
    tuple
        HdlValueId: RAM_CAP_WRITE
        HdlStmBlock: SEQ
            list: body
                HdlStmAssign
                    HdlValueInt: 0
                    HdlValueId: ram_enable
                HdlStmAssign
                    HdlValueInt: 0
                    HdlValueId: ram_write
                HdlStmAssign
                    HdlValueId: RAM_ROW_FETCHED
                    HdlValueId: ram_arbiter_state


CommitId: 822d5f88efe8e95def028907c5d04c7b6ca22391
introduce 2-word burst in ram controller; accidentally fix long-standing bug; stable hi-res capture
--- a/z2-minispartan/z2.v
+++ b/z2-minispartan/z2.v
@@ -1770,33 +1820,33 @@ always @(posedge z_sample_clk) begin
         zorro_ram_read_done <= 0;
         ram_enable <= 0;
         ram_arbiter_state <= RAM_READING_ZORRO_PRE;
-      end else if (!videocap_line_saved && cmd_ready) begin
+      end else if (!videocap_line_saved && videocap_mode && cmd_ready) begin
         // CAPTURE
         ram_enable <= 1;
         ram_write <= 1;
         ram_byte_enable <= 'b11;
-        ram_addr <= (videocap_line_saved_y<<row_pitch_shift) + videocap_save_x;
-        /*if (vcbuf==0)
-          ram_data_in <= videocap_buf2[videocap_save_x];
-        else*/
-          ram_data_in <= videocap_buf[videocap_save_x];
-        
-        if (videocap_save_x<330) begin
-          videocap_save_x <= videocap_save_x + 1'b1;
-          //videocap_addr <= (videocap_line_saved_y<<row_pitch_shift) + videocap_save_x; //videocap_addr+1'b1;
+        ram_addr <= (videocap_line_saved_y<<row_pitch_shift) + videocap_save_x2;
+        ram_data_in <= videocap_buf2[videocap_save_x];
+        ram_data_in_next <= videocap_buf[videocap_save_x];
+          
+        if (videocap_save_x<319) begin
+          videocap_save_x  <= videocap_save_x  + 1'b1;
+          videocap_save_x2 <= videocap_save_x2  + 2'b10;
         end else begin
           videocap_line_saved <= 1;
-          videocap_save_x <= 0;
-          vcbuf <= ~vcbuf;
         end
-        //ram_arbiter_state <= RAM_CAP_WRITE;
       end
     
-    RAM_CAP_WRITE: begin
-      ram_enable <= 0;
-      ram_write <= 0;
+    /*RAM_CAP_WRITE: begin
+      //ram_addr <= (videocap_line_saved_y<<row_pitch_shift) + videocap_save_x2;
+      ram_addr <= videocap_save_next_addr + 1'b1;
+      ram_enable <= 1;
+      ram_write <= 1;
+      
+      //videocap_save_x2  <= videocap_save_x2  + 1'b1;
+      videocap_save_x  <= videocap_save_x  + 1'b1;
       ram_arbiter_state <= RAM_ROW_FETCHED;
-    end
+    end*/
     
     RAM_REFRESH_PRE: begin
       ram_enable <= 1;

ParseResult:
UPD HdlStmCase@@ram_arbiter_state to ram_arbiter_state
    DEL tuple@@ from cases
    tuple
        HdlValueId: RAM_CAP_WRITE
        HdlStmBlock: SEQ
            list: body
                HdlStmAssign
                    HdlValueInt: 0
                    HdlValueId: ram_enable
                HdlStmAssign
                    HdlValueInt: 0
                    HdlValueId: ram_write
                HdlStmAssign
                    HdlValueId: RAM_ROW_FETCHED
                    HdlValueId: ram_arbiter_state


CommitId: 822d5f88efe8e95def028907c5d04c7b6ca22391
introduce 2-word burst in ram controller; accidentally fix long-standing bug; stable hi-res capture
--- a/z2-minispartan/z2.v
+++ b/z2-minispartan/z2.v
@@ -1906,7 +1956,7 @@ always @(posedge vga_clk) begin
     counter_x <= counter_x + 1'b1;
     if (counter_x > h_max-fetch_preroll)
       if (counter_y<screen_h)
-        need_row_fetch_y <= (counter_y+1'b1)>>scalemode;
+        need_row_fetch_y <= (counter_y+1'b1)>>scalemode_v;
       else
         need_row_fetch_y <= 0;
   end

ParseResult:
UPD HdlStmIf@@ to 
    UPD HdlOp@@NE to NE
        UPD HdlValueId@@scalemode to scalemode_h


CommitId: f036fef375898f49aa914c2ebf16c621bbe83b56
a2000 tweaks (fixed read turd bug), working refresh
--- a/z2-minispartan/z2.v
+++ b/z2-minispartan/z2.v
@@ -185,9 +185,7 @@ reg [4:0] row_pitch_shift = 11; // 2048 = 1<<11
 // custom refresh mechanism
 reg [15:0] refresh_counter = 0;
 reg [23:0] refresh_addr = 0;
-reg [15:0] refresh_time = 128;
-reg [4:0] ram_refresh_lines = 0;
-reg display_in_refresh_lines = 0;
+reg [15:0] refresh_time = 'h1000;
 
 // SDRAM
 SDRAM_Controller_v sdram(

ParseResult:
DEL HdlIdDef@@ram_refresh_lines from objs
HdlIdDef: ram_refresh_lines
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 4
                    HdlValueInt: 0
    HdlValueInt: 0
    HdlDirection: INTERNAL

DEL HdlIdDef@@display_in_refresh_lines from objs
HdlIdDef: display_in_refresh_lines
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
    HdlValueInt: 0
    HdlDirection: INTERNAL


CommitId: f036fef375898f49aa914c2ebf16c621bbe83b56
a2000 tweaks (fixed read turd bug), working refresh
--- a/z2-minispartan/z2.v
+++ b/z2-minispartan/z2.v
@@ -373,11 +371,11 @@ reg [1:0] counter_scale = 0;
 parameter reg_size = 32'h001000;
 parameter autoconf_low  = 24'he80000;
 parameter autoconf_high = 24'he80080;
-reg [31:0] z3_ram_low = 32'h42000000; 
+reg [31:0] z3_ram_low = 32'h48000000; 
 parameter z3_ram_size = 32'h02000000;
-reg [31:0] z3_ram_high = 32'h42000000 + z3_ram_size-'h10000-4;
-reg [31:0] z3_reg_low  = 32'h42000000 + z3_ram_size-'h10000;
-reg [31:0] z3_reg_high = 32'h42000000 + z3_ram_size-'h10000 + reg_size;
+reg [31:0] z3_ram_high = 32'h48000000 + z3_ram_size-'h10000-4;
+reg [31:0] z3_reg_low  = 32'h48000000 + z3_ram_size-'h10000;
+reg [31:0] z3_reg_high = 32'h48000000 + z3_ram_size-'h10000 + reg_size;
 
 reg [31:0] ram_low = 32'h600000;
 parameter ram_size = 32'h400000;

ParseResult:
INS HdlIdDef@@z3_ram_high to objs

INS HdlIdDef@@z3_reg_low to objs

INS HdlIdDef@@z3_reg_high to objs

UPD HdlIdDef@@z3_ram_low to z3_ram_low
    UPD HdlValueInt@@42000000 to 48000000

UPD HdlIdDef@@z3_ram_high to z3_ram_high
    MOV HdlOp@@PARAMETRIZATION to z3_ram_high
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 31
                    HdlValueInt: 0
    DEL HdlOp@@SUB from z3_ram_high
    HdlOp: SUB
        list: ops
            HdlOp: SUB
                list: ops
                    HdlOp: ADD
                        list: ops
                            HdlValueInt: 42000000
                            HdlValueId: z3_ram_size
                    HdlValueInt: 10000
            HdlValueInt: 4
    DEL HdlDirection@@INTERNAL from z3_ram_high

UPD HdlIdDef@@z3_reg_low to z3_reg_low
    MOV HdlOp@@PARAMETRIZATION to z3_reg_low
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 31
                    HdlValueInt: 0
    DEL HdlOp@@SUB from z3_reg_low
    HdlOp: SUB
        list: ops
            HdlOp: ADD
                list: ops
                    HdlValueInt: 42000000
                    HdlValueId: z3_ram_size
            HdlValueInt: 10000
    DEL HdlDirection@@INTERNAL from z3_reg_low

UPD HdlIdDef@@z3_reg_low to z3_reg_low
    INS HdlOp@@SUB to z3_reg_low
    HdlOp: SUB
        list: ops
            HdlOp: ADD
                list: ops
                    HdlValueInt: 48000000
                    HdlValueId: z3_ram_size
            HdlValueInt: 10000
    INS HdlDirection@@INTERNAL to z3_reg_low

UPD HdlIdDef@@z3_reg_high to z3_reg_high
    MOV HdlOp@@PARAMETRIZATION to z3_reg_high
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 31
                    HdlValueInt: 0
    DEL HdlOp@@ADD from z3_reg_high
    HdlOp: ADD
        list: ops
            HdlOp: SUB
                list: ops
                    HdlOp: ADD
                        list: ops
                            HdlValueInt: 42000000
                            HdlValueId: z3_ram_size
                    HdlValueInt: 10000
            HdlValueId: reg_size
    DEL HdlDirection@@INTERNAL from z3_reg_high

UPD HdlIdDef@@z3_reg_high to z3_reg_high
    INS HdlOp@@ADD to z3_reg_high
    HdlOp: ADD
        list: ops
            HdlOp: SUB
                list: ops
                    HdlOp: ADD
                        list: ops
                            HdlValueInt: 48000000
                            HdlValueId: z3_ram_size
                    HdlValueInt: 10000
            HdlValueId: reg_size
    INS HdlDirection@@INTERNAL to z3_reg_high

DEL HdlIdDef@@z3_ram_high from objs

DEL HdlIdDef@@z3_reg_low from objs

DEL HdlIdDef@@z3_reg_high from objs


CommitId: f036fef375898f49aa914c2ebf16c621bbe83b56
a2000 tweaks (fixed read turd bug), working refresh
--- a/z2-minispartan/z2.v
+++ b/z2-minispartan/z2.v
@@ -521,7 +519,7 @@ always @(posedge z_sample_clk) begin
   data_in_z3_low16 <= zA[22:7]; // FIXME why sample this twice?
   zdata_in_sync <= data_in;
   
-  zorro_read  <= (zREAD_sync[4:0]==5'b11111)?1'b1:1'b0; //(zREAD_sync[1] & zREAD_sync[0]);
+  zorro_read  <= (zREAD_sync[2:0]==3'b111)?1'b1:1'b0; //(zREAD_sync[1] & zREAD_sync[0]);
   zorro_write <= (zREAD_sync[1:0]==2'b00)?1'b1:1'b0; //(!zREAD_sync[1] & !zREAD_sync[0]);
   
   if (znUDS_sync[1]==0 || znLDS_sync[1]==0 || znDS1_sync[1]==0 || znDS0_sync[1]==0) begin

ParseResult:
UPD HdlStmAssign@@ to 
    UPD HdlOp@@TERNARY to TERNARY
        UPD HdlOp@@EQ to EQ
            UPD HdlValueInt@@11111 to 111
            UPD HdlOp@@INDEX to INDEX
                UPD HdlOp@@DOWNTO to DOWNTO
                    UPD HdlValueInt@@4 to 2


CommitId: f036fef375898f49aa914c2ebf16c621bbe83b56
a2000 tweaks (fixed read turd bug), working refresh
--- a/z2-minispartan/z2.v
+++ b/z2-minispartan/z2.v
@@ -537,11 +535,12 @@ always @(posedge z_sample_clk) begin
   
   z2_mapped_addr <= ((zaddr_sync-ram_low)>>1);
   
+  z3addr2 <= {zD[15:8],zA[22:1],2'b00};
+    
   // sample z3addr on falling edge of /FCS
-  if (znFCS_sync[2]==1 && znFCS_sync[1]==0) begin
-    z3addr2 <= {zD[15:8],zA[22:1],2'b00};
+  if (znFCS_sync[1]==1 && znFCS_sync[0]==0) begin
+    z3addr <= z3addr2;
   end
-  z3addr <= z3addr2;
   z3_mapped_addr <= ((z3addr)&'h01ffffff)>>1;
   
   datastrobe_synced <= ((znUDS_sync[2]==znUDS_sync[1]) && (znLDS_sync[2]==znLDS_sync[1]) 

ParseResult:
MOV HdlStmAssign@@ to body
HdlStmAssign
    HdlOp: CONCAT
        list: ops
            HdlOp: CONCAT
                list: ops
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: zD
                            HdlOp: DOWNTO
                                list: ops
                                    HdlValueInt: 15
                                    HdlValueInt: 8
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: zA
                            HdlOp: DOWNTO
                                list: ops
                                    HdlValueInt: 22
                                    HdlValueInt: 1
            HdlValueInt: 00
    HdlValueId: z3addr2

INS HdlStmIf@@ to body

UPD HdlStmIf@@ to 
    MOV HdlOp@@AND_LOG to 
    HdlOp: AND_LOG
        list: ops
            HdlOp: EQ
                list: ops
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: znFCS_sync
                            HdlValueInt: 2
                    HdlValueInt: 1
            HdlOp: EQ
                list: ops
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: znFCS_sync
                            HdlValueInt: 1
                    HdlValueInt: 0
    UPD HdlOp@@AND_LOG to AND_LOG
        UPD HdlOp@@EQ to EQ
            UPD HdlValueInt@@0 to 1
        DEL HdlOp@@EQ from ops
        HdlOp: EQ
            list: ops
                HdlOp: INDEX
                    list: ops
                        HdlValueId: znFCS_sync
                        HdlValueInt: 2
                HdlValueInt: 1
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL list@@elifs from 

MOV HdlStmAssign@@ to body
HdlStmAssign
    HdlValueId: z3addr2
    HdlValueId: z3addr

DEL HdlStmIf@@ from body


CommitId: f036fef375898f49aa914c2ebf16c621bbe83b56
a2000 tweaks (fixed read turd bug), working refresh
--- a/z2-minispartan/z2.v
+++ b/z2-minispartan/z2.v
@@ -654,6 +653,11 @@ always @(posedge z_sample_clk) begin
       warmup_counter <= 'hfffff;
       sdram_reset <= 1;
       
+      blitter_x1 <= 0;
+      blitter_y1 <= 0; 
+      blitter_x2 <= 1279;
+      blitter_y2 <= 719;
+      
       ram_low   <= 'h600000;
       ram_high  <= 'h600000 + ram_size-4;
       reg_low   <= 'h600000 + ram_size;

ParseResult:
UPD HdlStmCase@@zorro_state to zorro_state
    INS HdlStmCaseType@@CASE to zorro_state
    INS HdlValueId@@zorro_state to zorro_state

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueInt: 1279
    HdlValueId: blitter_x2

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueInt: 719
    HdlValueId: blitter_y2

UPD HdlStmCase@@zorro_state to zorro_state
    DEL HdlStmCaseType@@CASE from zorro_state
    DEL HdlValueId@@zorro_state from zorro_state


CommitId: f036fef375898f49aa914c2ebf16c621bbe83b56
a2000 tweaks (fixed read turd bug), working refresh
--- a/z2-minispartan/z2.v
+++ b/z2-minispartan/z2.v
@@ -675,7 +679,7 @@ always @(posedge z_sample_clk) begin
     end
     
     Z3_CONFIGURING: begin
-      if (!znCFGIN_sync[2]==1 && z3addr_autoconfig && znFCS_sync[2]==0) begin
+      if (znCFGIN_sync[2]==0 && z3addr_autoconfig && znFCS_sync[2]==0) begin
         if (zorro_read) begin
           // autoconfig ROM
           dataout_enable <= 1;

ParseResult:
UPD HdlStmCase@@zorro_state to zorro_state
    INS HdlStmCaseType@@CASE to zorro_state
    INS HdlValueId@@zorro_state to zorro_state

UPD HdlStmIf@@ to 
    UPD HdlOp@@AND_LOG to AND_LOG
        MOV HdlOp@@AND_LOG to ops
        HdlOp: AND_LOG
            list: ops
                HdlOp: EQ
                    list: ops
                        HdlOp: NEG_LOG
                            list: ops
                                HdlOp: INDEX
                                    list: ops
                                        HdlValueId: znCFGIN_sync
                                        HdlValueInt: 2
                        HdlValueInt: 1
                HdlValueId: z3addr_autoconfig
        UPD HdlOp@@AND_LOG to AND_LOG
            UPD HdlOp@@EQ to AND_LOG
            UPD HdlOp@@EQ to EQ
                UPD HdlOp@@NEG_LOG to EQ
                UPD HdlValueInt@@1 to 0
                MOV HdlValueInt@@1 to ops
                HdlValueInt: 1
            MOV HdlValueId@@z3addr_autoconfig to ops
            HdlValueId: z3addr_autoconfig
        MOV HdlOp@@EQ to ops
        HdlOp: EQ
            list: ops
                HdlOp: INDEX
                    list: ops
                        HdlValueId: znFCS_sync
                        HdlValueInt: 2
                HdlValueInt: 0
        DEL list@@ops from AND_LOG
    DEL HdlOp@@AND_LOG from 

UPD HdlStmCase@@zorro_state to zorro_state
    DEL HdlStmCaseType@@CASE from zorro_state
    DEL HdlValueId@@zorro_state from zorro_state


CommitId: f036fef375898f49aa914c2ebf16c621bbe83b56
a2000 tweaks (fixed read turd bug), working refresh
--- a/z2-minispartan/z2.v
+++ b/z2-minispartan/z2.v
@@ -937,8 +941,8 @@ always @(posedge z_sample_clk) begin
             'h66: data <= {sd_handshake_out,8'h00};
             'h68: data <= sd_addr_in[31:16];
             'h6a: data <= sd_addr_in[15:0];
-            'h6c: data <= sd_data_in;
-            'h6e: data <= sd_data_out;
+            'h6c: data <= {sd_data_in,8'h00};
+            'h6e: data <= {sd_data_out,8'h00};
             'h70: data <= sd_error;
             //'h72: data <= sd_clkdiv;
             

ParseResult:
UPD HdlStmCase@@zorro_state to zorro_state
    INS HdlStmCaseType@@CASE to zorro_state
    INS HdlValueId@@zorro_state to zorro_state

UPD HdlStmAssign@@ to 
    INS HdlOp@@CONCAT to 
    UPD HdlOp@@CONCAT to CONCAT
        INS list@@ops to CONCAT
        INS HdlValueInt@@00 to ops

UPD HdlStmAssign@@ to 
    INS HdlOp@@CONCAT to 
    UPD HdlOp@@CONCAT to CONCAT
        INS list@@ops to CONCAT
        INS HdlValueInt@@00 to ops

UPD HdlStmCase@@zorro_state to zorro_state
    DEL HdlStmCaseType@@CASE from zorro_state
    DEL HdlValueId@@zorro_state from zorro_state


CommitId: f036fef375898f49aa914c2ebf16c621bbe83b56
a2000 tweaks (fixed read turd bug), working refresh
--- a/z2-minispartan/z2.v
+++ b/z2-minispartan/z2.v
@@ -994,7 +998,7 @@ always @(posedge z_sample_clk) begin
   
     // ----------------------------------------------------------------------------------
     WAIT_READ: begin
-      data <= zorro_ram_read_data;
+      //data <= zorro_ram_read_data;
       z_ready <= 1;
       if (znAS_sync[1]==1 && znAS_sync[0]==1) begin
         zorro_state <= Z2_IDLE;

ParseResult:
UPD HdlStmCase@@zorro_state to zorro_state
    INS HdlStmCaseType@@CASE to zorro_state
    INS HdlValueId@@zorro_state to zorro_state

UPD HdlStmCase@@zorro_state to zorro_state
    DEL HdlStmCaseType@@CASE from zorro_state
    DEL HdlValueId@@zorro_state from zorro_state

DEL HdlStmAssign@@ from body
HdlStmAssign
    HdlValueId: zorro_ram_read_data
    HdlValueId: data


CommitId: f036fef375898f49aa914c2ebf16c621bbe83b56
a2000 tweaks (fixed read turd bug), working refresh
--- a/z2-minispartan/z2.v
+++ b/z2-minispartan/z2.v
@@ -1230,7 +1234,6 @@ always @(posedge z_sample_clk) begin
         palette_b[zaddr_regpart[8:1]] <= regdata_in[7:0];
       end else
       case (zaddr_regpart)
-        //'h00: refresh_time <= regdata_in[15:0];
         'h02: screen_w <= regdata_in[11:0];
         'h04: scalemode <= regdata_in[1:0];
         'h06: begin

ParseResult:
UPD HdlStmCase@@zorro_state to zorro_state
    INS HdlStmCaseType@@CASE to zorro_state
    INS HdlValueId@@zorro_state to zorro_state

UPD HdlStmCase@@zaddr_regpart to zaddr_regpart
    UPD HdlValueInt@@80 to 82

UPD HdlStmCase@@zorro_state to zorro_state
    DEL HdlStmCaseType@@CASE from zorro_state
    DEL HdlValueId@@zorro_state from zorro_state


CommitId: f036fef375898f49aa914c2ebf16c621bbe83b56
a2000 tweaks (fixed read turd bug), working refresh
--- a/z2-minispartan/z2.v
+++ b/z2-minispartan/z2.v
@@ -1241,7 +1244,7 @@ always @(posedge z_sample_clk) begin
           screen_h <= regdata_in[11:0];
           v_rez    <= regdata_in[11:0];
         end
-        'h80: ram_refresh_lines <= regdata_in[4:0];
+        'h82: refresh_time <= regdata_in[9:0];
         
         'h70: h_sync_start <= regdata_in[11:0];
         'h72: h_sync_end <= regdata_in[11:0];

ParseResult:
UPD HdlStmCase@@zorro_state to zorro_state
    INS HdlStmCaseType@@CASE to zorro_state
    INS HdlValueId@@zorro_state to zorro_state

UPD HdlStmCase@@zaddr_regpart to zaddr_regpart
    UPD HdlValueInt@@80 to 82

UPD HdlStmAssign@@ to 
    UPD HdlValueId@@ram_refresh_lines to refresh_time
    UPD HdlOp@@INDEX to INDEX
        UPD HdlOp@@DOWNTO to DOWNTO
            UPD HdlValueInt@@4 to 9

UPD HdlStmCase@@zorro_state to zorro_state
    DEL HdlStmCaseType@@CASE from zorro_state
    DEL HdlValueId@@zorro_state from zorro_state


CommitId: f036fef375898f49aa914c2ebf16c621bbe83b56
a2000 tweaks (fixed read turd bug), working refresh
--- a/z2-minispartan/z2.v
+++ b/z2-minispartan/z2.v
@@ -1420,8 +1399,6 @@ always @(posedge z_sample_clk) begin
         ram_arbiter_state <= RAM_READY;
       end else if (/*counter_x < safe_x1 || */counter_x > safe_x2) begin
         // do nothing if not in safe area
-      end else if (display_in_refresh_lines && cmd_ready) begin
-        ram_arbiter_state <= RAM_REFRESH_PRE;
         
       // BLITTER ----------------------------------------------------------------
       end else if (blitter_enable==1 && cmd_ready) begin

ParseResult:
UPD HdlStmCase@@ram_arbiter_state to ram_arbiter_state
    INS tuple@@ to cases
    INS HdlValueId@@RAM_REFRESH to 

UPD HdlStmIf@@ to 
    INS tuple@@ to elifs
    INS HdlOp@@AND_LOG to 
    INS HdlOp@@AND_LOG to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlOp@@AND_LOG to AND_LOG
        INS list@@ops to AND_LOG
        INS HdlValueId@@cmd_ready to ops
    UPD HdlOp@@AND_LOG to AND_LOG
        INS list@@ops to AND_LOG
        INS HdlOp@@AND_LOG to ops
        INS HdlValueId@@cmd_ready to ops
        UPD HdlOp@@AND_LOG to AND_LOG
            INS list@@ops to AND_LOG
            INS HdlOp@@AND_LOG to ops
            INS HdlOp@@NEG_LOG to ops
            HdlOp: NEG_LOG
                list: ops
                    HdlValueId: zorro_ram_write_request
            UPD HdlOp@@AND_LOG to AND_LOG
                INS list@@ops to AND_LOG
                INS HdlOp@@AND_LOG to ops
                INS HdlOp@@NEG_LOG to ops
                HdlOp: NEG_LOG
                    list: ops
                        HdlValueId: zorro_ram_read_request
                UPD HdlOp@@AND_LOG to AND_LOG
                    INS list@@ops to AND_LOG
                    INS HdlOp@@EQ to ops
                    HdlOp: EQ
                        list: ops
                            HdlValueId: blitter_enable
                            HdlValueInt: 0

UPD HdlStmIf@@ to 
    MOV HdlOp@@AND_LOG to 
    HdlOp: AND_LOG
        list: ops
            HdlOp: EQ
                list: ops
                    HdlValueId: blitter_enable
                    HdlValueInt: 0
            HdlValueId: zorro_ram_read_request
    DEL tuple@@ from elifs
    tuple
        HdlOp: AND_LOG
            list: ops
                HdlValueId: display_in_refresh_lines
                HdlValueId: cmd_ready
        HdlStmBlock: SEQ
            list: body
                HdlStmAssign
                    HdlValueId: RAM_REFRESH_PRE
                    HdlValueId: ram_arbiter_state

UPD HdlStmCase@@ram_arbiter_state to ram_arbiter_state
    DEL HdlValueId@@RAM_REFRESH_PRE from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases
    DEL HdlValueId@@RAM_REFRESH from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases


CommitId: f036fef375898f49aa914c2ebf16c621bbe83b56
a2000 tweaks (fixed read turd bug), working refresh
--- a/z2-minispartan/z2.v
+++ b/z2-minispartan/z2.v
@@ -1500,10 +1477,10 @@ always @(posedge z_sample_clk) begin
         ram_enable <= 0;*/
         
       // ZORRO READ/WRITE ----------------------------------------------
-      end else if (blitter_enable==0 && zorro_ram_read_request) begin
+      end else if (blitter_enable==0 && zorro_ram_read_request && cmd_ready) begin
         // process read request
         zorro_ram_read_done <= 0;
-        if (cmd_ready && data_out_queue_empty) begin
+        if (data_out_queue_empty) begin
           ram_write <= 0;
           ram_addr <= zorro_ram_read_addr;
           ram_byte_enable <= 'b11;

ParseResult:
UPD HdlStmCase@@ram_arbiter_state to ram_arbiter_state
    INS tuple@@ to cases
    INS HdlValueId@@RAM_REFRESH to 

UPD HdlStmIf@@ to 
    INS tuple@@ to elifs
    INS HdlOp@@AND_LOG to 
    INS HdlOp@@AND_LOG to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlOp@@AND_LOG to AND_LOG
        INS list@@ops to AND_LOG
        INS HdlValueId@@cmd_ready to ops
    UPD HdlOp@@AND_LOG to AND_LOG
        INS list@@ops to AND_LOG
        INS HdlOp@@AND_LOG to ops
        INS HdlValueId@@cmd_ready to ops
        UPD HdlOp@@AND_LOG to AND_LOG
            INS list@@ops to AND_LOG
            INS HdlOp@@AND_LOG to ops
            INS HdlOp@@NEG_LOG to ops
            HdlOp: NEG_LOG
                list: ops
                    HdlValueId: zorro_ram_write_request
            UPD HdlOp@@AND_LOG to AND_LOG
                INS list@@ops to AND_LOG
                INS HdlOp@@AND_LOG to ops
                INS HdlOp@@NEG_LOG to ops
                HdlOp: NEG_LOG
                    list: ops
                        HdlValueId: zorro_ram_read_request
                UPD HdlOp@@AND_LOG to AND_LOG
                    INS list@@ops to AND_LOG
                    INS HdlOp@@EQ to ops
                    HdlOp: EQ
                        list: ops
                            HdlValueId: blitter_enable
                            HdlValueInt: 0

UPD HdlStmIf@@ to 
    MOV HdlOp@@AND_LOG to 
    HdlOp: AND_LOG
        list: ops
            HdlOp: EQ
                list: ops
                    HdlValueId: blitter_enable
                    HdlValueInt: 0
            HdlValueId: zorro_ram_read_request
    DEL tuple@@ from elifs
    tuple
        HdlOp: AND_LOG
            list: ops
                HdlValueId: display_in_refresh_lines
                HdlValueId: cmd_ready
        HdlStmBlock: SEQ
            list: body
                HdlStmAssign
                    HdlValueId: RAM_REFRESH_PRE
                    HdlValueId: ram_arbiter_state

UPD HdlStmIf@@ to 
    UPD HdlOp@@AND_LOG to AND_LOG
        MOV HdlValueId@@data_out_queue_empty to ops
        HdlValueId: data_out_queue_empty
        DEL HdlValueId@@cmd_ready from ops
        DEL list@@ops from AND_LOG
    DEL HdlOp@@AND_LOG from 

UPD HdlStmIf@@ to 
    INS list@@elifs to 

UPD HdlStmCase@@ram_arbiter_state to ram_arbiter_state
    DEL HdlValueId@@RAM_REFRESH_PRE from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases
    DEL HdlValueId@@RAM_REFRESH from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases


CommitId: f036fef375898f49aa914c2ebf16c621bbe83b56
a2000 tweaks (fixed read turd bug), working refresh
--- a/z2-minispartan/z2.v
+++ b/z2-minispartan/z2.v
@@ -1529,8 +1506,27 @@ always @(posedge z_sample_clk) begin
         ram_enable  <= 1;
         
         ram_arbiter_state <= RAM_WRITING_ZORRO;
+      end else if (blitter_enable==0 && refresh_counter>refresh_time && !zorro_ram_read_request && !zorro_ram_write_request && cmd_ready) begin
+        if (data_out_queue_empty) begin
+          ram_write <= 0;
+          ram_addr <= refresh_addr;
+          ram_byte_enable <= 'b11;
+          refresh_addr <= refresh_addr + 512;
+          ram_enable <= 1;
+          ram_arbiter_state <= RAM_REFRESH;
+          refresh_counter <= 0;
+        end else 
+          ram_enable <= 0;
+      end else
+        refresh_counter <= refresh_counter + 1;
+    
+    RAM_REFRESH: begin
+      if (data_out_ready) begin
+        ram_enable <= 0;
+        ram_arbiter_state <= RAM_ROW_FETCHED;
       end
-      
+    end
+    
     RAM_READING_BLIT: begin
       // block copy (data ready)
       if (data_out_ready) begin

ParseResult:
UPD HdlStmCase@@ram_arbiter_state to ram_arbiter_state
    INS tuple@@ to cases
    INS HdlValueId@@RAM_REFRESH to 

INS HdlStmIf@@ to body

INS HdlStmAssign@@if_false to 
HdlStmAssign: if_false
    HdlValueInt: 0
    HdlValueId: ram_enable

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueInt: 11
    HdlValueId: ram_byte_enable

UPD HdlStmCase@@ram_arbiter_state to ram_arbiter_state
    DEL HdlValueId@@RAM_REFRESH_PRE from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases
    DEL HdlValueId@@RAM_REFRESH from 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL tuple@@ from cases


CommitId: f036fef375898f49aa914c2ebf16c621bbe83b56
a2000 tweaks (fixed read turd bug), working refresh
--- a/z2-minispartan/z2.v
+++ b/z2-minispartan/z2.v
@@ -1584,11 +1580,6 @@ always @(posedge vga_clk) begin
     preheat <= 1;
   end
   
-  if (counter_y>=v_rez && counter_y<(v_rez+ram_refresh_lines))
-    display_in_refresh_lines <= 1;
-  else
-    display_in_refresh_lines <= 0;
-  
   if (counter_x >= h_max) begin
     counter_x <= 0;
     preheat <= 0;

ParseResult:
DEL HdlStmIf@@ from body
HdlStmIf
    HdlOp: AND_LOG
        list: ops
            HdlOp: GE
                list: ops
                    HdlValueId: counter_y
                    HdlValueId: v_rez
            HdlOp: LT
                list: ops
                    HdlValueId: counter_y
                    HdlOp: ADD
                        list: ops
                            HdlValueId: v_rez
                            HdlValueId: ram_refresh_lines
    HdlStmAssign: if_true
        HdlValueInt: 1
        HdlValueId: display_in_refresh_lines
    list: elifs
    HdlStmAssign: if_false
        HdlValueInt: 0
        HdlValueId: display_in_refresh_lines


